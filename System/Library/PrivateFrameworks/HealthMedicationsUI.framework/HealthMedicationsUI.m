unint64_t sub_1C1F0D8A0()
{
  char *v0;

  return sub_1C1F0D8A8(*v0);
}

unint64_t sub_1C1F0D8A8(char a1)
{
  unint64_t result = 0x7461447472617473;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x65746144646E65;
      break;
    case 2:
      unint64_t result = 0x756F436E656B6174;
      break;
    case 3:
      unint64_t result = 0x4364657070696B73;
      break;
    case 4:
    case 6:
      unint64_t result = 0xD000000000000012;
      break;
    case 5:
      unint64_t result = 0xD000000000000010;
      break;
    default:
      return result;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for MedicationChartCodableData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        break;
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for MedicationChartCodableData.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFA) {
    goto LABEL_17;
  }
  if (a2 + 6 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 6) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 6;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 7;
  int v8 = v6 - 7;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_5(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_6(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_7(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_9(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_10(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_11(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_12(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_13(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_14(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_15(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_16(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_17(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_18(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_19(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_20(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_21(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_22(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_23(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_24(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_25(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_26(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_27(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_28(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_29(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_30(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1C1F0DCF0(uint64_t a1, uint64_t a2)
{
  return sub_1C1F0DE6C(a1, a2, MEMORY[0x1E4F27EB8]);
}

ValueMetadata *type metadata accessor for LocalizationSource()
{
  return &type metadata for LocalizationSource;
}

uint64_t localized(_:locale:source:value:comment:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t result = sub_1C2147730();
  if (*(void *)(a9 + 16))
  {
    uint64_t v10 = sub_1C214A5C0();
    swift_bridgeObjectRelease();
    return v10;
  }
  return result;
}

uint64_t destroy for SeparatorHeaderItem(id *a1)
{
  return swift_bridgeObjectRelease();
}

uint64_t static LocalizationSource.healthMedicationsUI.getter@<X0>(void *a1@<X8>)
{
  if (qword_1EBF0CA00 != -1) {
    swift_once();
  }
  uint64_t v2 = (void *)qword_1EBF0CA18;
  uint64_t v3 = qword_1EBF0CA20;
  uint64_t v4 = qword_1EBF0CA28;
  *a1 = qword_1EBF0CA18;
  a1[1] = v3;
  a1[2] = v4;
  id v5 = v2;

  return swift_bridgeObjectRetain();
}

uint64_t sub_1C1F0DE6C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4 = sub_1C214A5F0();
  uint64_t v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t type metadata accessor for MedicationChartDataFormatter()
{
  return self;
}

uint64_t sub_1C1F0DF8C()
{
  return swift_deallocClassInstance();
}

uint64_t HKMedicationUserDomainConcept.isLactationDescriptionCritical.getter()
{
  sub_1C1F0E3D8(0, &qword_1EBF0B7A0, MEMORY[0x1E4F66CD8]);
  MEMORY[0x1F4188790]();
  v1 = (char *)&v6 - v0;
  sub_1C214AFE0();
  uint64_t v2 = sub_1C21494D0();
  uint64_t v3 = *(void *)(v2 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    sub_1C1F0E2B4((uint64_t)v1, &qword_1EBF0B7A0, MEMORY[0x1E4F66CD8]);
    return 2;
  }
  else
  {
    char v5 = sub_1C21494C0();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v1, v2);
    return v5 & 1;
  }
}

uint64_t HKMedicationUserDomainConcept.isPregnancyDescriptionCritical.getter()
{
  sub_1C1F0E3D8(0, &qword_1EBF0B7A0, MEMORY[0x1E4F66CD8]);
  MEMORY[0x1F4188790]();
  v1 = (char *)&v6 - v0;
  sub_1C214AFE0();
  uint64_t v2 = sub_1C21494D0();
  uint64_t v3 = *(void *)(v2 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    sub_1C1F0E2B4((uint64_t)v1, &qword_1EBF0B7A0, MEMORY[0x1E4F66CD8]);
    char v4 = 0;
  }
  else
  {
    char v4 = sub_1C21494B0();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v1, v2);
  }
  return v4 & 1;
}

uint64_t sub_1C1F0E244(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1C1F18BB4(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1C1F0E2B4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1C1F0E3D8(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

void sub_1C1F0E310(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1C1F0E374(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1C1F0E3D8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C214B4F0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1C1F0E42C(uint64_t a1)
{
  v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);

  return swift_release();
}

uint64_t sub_1C1F0E470()
{
  return sub_1C1F1326C(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void **)(v0 + 40), *(void (**)(long long *, id))(v0 + 48), *(void *)(v0 + 56));
}

uint64_t objectdestroy_14Tm()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t objectdestroy_6Tm()
{
  swift_release();
  swift_release();
  swift_release();

  swift_release();

  return MEMORY[0x1F4186498](v0, 64, 7);
}

uint64_t objectdestroy_59Tm()
{
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t objectdestroy_62Tm()
{
  uint64_t v1 = sub_1C21476D0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();

  return MEMORY[0x1F4186498](v0, v6 + 16, v5);
}

id MedicationChartDataSource.init(with:displayType:)(void *a1, void *a2)
{
  uint64_t v5 = OBJC_IVAR____TtC19HealthMedicationsUI25MedicationChartDataSource_encoder;
  sub_1C2147500();
  swift_allocObject();
  unint64_t v6 = v2;
  *(void *)&v2[v5] = sub_1C21474F0();
  uint64_t v7 = OBJC_IVAR____TtC19HealthMedicationsUI25MedicationChartDataSource_decoder;
  sub_1C21474D0();
  swift_allocObject();
  *(void *)&v6[v7] = sub_1C21474C0();
  uint64_t v8 = OBJC_IVAR____TtC19HealthMedicationsUI25MedicationChartDataSource_sortDescriptors;
  sub_1C1F13D64(0, (unint64_t *)&qword_1EBF0CA10, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1C214E170;
  sub_1C1F12718(0, (unint64_t *)&unk_1EBF0B4B8);
  swift_getKeyPath();
  *(void *)(v9 + 32) = sub_1C214ACB0();
  uint64_t v15 = v9;
  sub_1C214A7A0();
  *(void *)&v6[v8] = v9;
  *(void *)&v6[OBJC_IVAR____TtC19HealthMedicationsUI25MedicationChartDataSource_medication] = a1;
  id v10 = a1;

  id v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F2B0B8]), sel_init);
  v14.receiver = v6;
  v14.super_class = (Class)type metadata accessor for MedicationChartDataSource();
  id v12 = objc_msgSendSuper2(&v14, sel_initWithDisplayType_healthStore_, a2, v11);

  return v12;
}

uint64_t type metadata accessor for MedicationChartDataSource()
{
  return self;
}

id _sSo18HKStackedBarSeriesC19HealthMedicationsUIE019makeMedicationEventC0AByFZ_0()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F67C58]), sel_init);
  id v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F67C68]), (SEL)&selRef_widthAnchor);
  uint64_t v2 = self;
  id v3 = objc_msgSend(v2, sel_clearColor);
  objc_msgSend(v1, sel_setStrokeColor_, v3);

  objc_msgSend(v1, sel_setLineWidth_, 1.0);
  objc_msgSend(v1, sel_setBlendMode_, 22);
  objc_msgSend(v0, sel_setUnselectedStrokeStyle_, v1);
  objc_msgSend(v0, sel_setCornerRadii_, 1.5, 1.5);
  id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F67C30]), (SEL)&selRef_widthAnchor);
  id v5 = objc_msgSend(v2, sel_hk_medicationDoseEventTakenColor);
  objc_msgSend(v4, sel_setColor_, v5);

  id v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F67C30]), (SEL)&selRef_widthAnchor);
  id v7 = objc_msgSend(v2, sel_hk_medicationDoseEventSkippedColor);
  objc_msgSend(v6, (SEL)&selRef_preferredFontForTextStyle_, v7);

  id v8 = objc_msgSend(v2, sel_hk_chartBackgroundColor);
  id v22 = objc_msgSend(self, sel_strokeStyleWithColor_lineWidth_, v8, 1.0);

  objc_msgSend(v0, sel_setTiledStrokeStyle_, v22);
  sub_1C1F0ED28();
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1C214FCB0;
  *(void *)(v9 + 32) = v4;
  *(void *)(v9 + 40) = v6;
  sub_1C214A7A0();
  sub_1C1F12718(0, (unint64_t *)&unk_1EBF0B050);
  id v21 = v4;
  id v20 = v6;
  id v10 = (void *)sub_1C214A770();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_setUnselectedFillStyles_, v10);

  id v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F67C30]), sel_init);
  id v12 = objc_msgSend(v2, sel_hk_chartGrayGraphColor);
  objc_msgSend(v11, sel_setColor_, v12);

  id v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F67C30]), sel_init);
  id v14 = objc_msgSend(v2, sel_hk_chartInactiveSeriesColor);
  objc_msgSend(v13, sel_setColor_, v14);

  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1C214FCB0;
  *(void *)(v15 + 32) = v11;
  *(void *)(v15 + 40) = v13;
  sub_1C214A7A0();
  id v16 = v11;
  id v17 = v13;
  v18 = (void *)sub_1C214A770();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_setInactiveFillStyles_, v18);

  return v0;
}

void sub_1C1F0ED28()
{
  if (!qword_1EBF0CA10)
  {
    unint64_t v0 = sub_1C214BA50();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBF0CA10);
    }
  }
}

void sub_1C1F0ED84(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7 = *(void (**)(id, void *, void *))(a1 + 32);
  swift_retain();
  id v10 = a2;
  id v8 = a3;
  id v9 = a4;
  v7(v10, a3, a4);
  swift_release();
}

uint64_t sub_1C1F0EE24(uint64_t a1, void *a2, void *a3)
{
  uint64_t v7 = *(void *)(sub_1C21476D0() - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  unint64_t v9 = (*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  id v10 = *(void **)(v3 + 16);
  uint64_t v11 = *(void *)(v3 + v9);
  uint64_t v12 = v3 + v8;
  uint64_t v13 = v3 + ((v9 + 15) & 0xFFFFFFFFFFFFFFF8);
  id v14 = *(uint64_t (**)(void, void *))v13;
  uint64_t v15 = *(void *)(v13 + 8);

  return sub_1C1F0EEF0(a1, a2, a3, v10, v12, v11, v14, v15);
}

uint64_t sub_1C1F0EEF0(uint64_t a1, void *a2, void *a3, void *a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(void, void *), uint64_t a8)
{
  uint64_t v62 = a8;
  uint64_t v14 = sub_1C21476D0();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  id v17 = (char *)v54 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1C21497F0();
  uint64_t v19 = MEMORY[0x1F4188790](v18);
  v63 = (char *)v54 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a3)
  {
LABEL_4:
    if (a2) {
      goto LABEL_5;
    }
    return a7(0, a3);
  }
  uint64_t v59 = v20;
  uint64_t v60 = v19;
  uint64_t v61 = a6;
  id v22 = a3;
  sub_1C21497A0();
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, a5, v14);
  id v23 = a3;
  id v24 = a4;
  id v25 = a3;
  id v26 = v24;
  v27 = sub_1C21497E0();
  os_log_type_t v28 = sub_1C214ABD0();
  int v29 = v28;
  if (os_log_type_enabled(v27, v28))
  {
    uint64_t v30 = swift_slowAlloc();
    os_log_t v56 = v27;
    uint64_t v31 = v30;
    uint64_t v57 = swift_slowAlloc();
    v65[0] = v57;
    *(_DWORD *)uint64_t v31 = 136446978;
    v54[1] = v31 + 4;
    id v32 = v26;
    id v33 = objc_msgSend(v32, sel_description);
    uint64_t v34 = sub_1C214A5F0();
    v58 = a7;
    uint64_t v35 = v34;
    int v55 = v29;
    v36 = a2;
    unint64_t v38 = v37;

    uint64_t v64 = sub_1C1F6FD54(v35, v38, v65);
    sub_1C214B530();

    a2 = v36;
    swift_bridgeObjectRelease();
    *(_WORD *)(v31 + 12) = 2082;
    sub_1C1F0FAC8(&qword_1EA2C74F8, MEMORY[0x1E4F26F90]);
    uint64_t v39 = sub_1C214BA40();
    uint64_t v64 = sub_1C1F6FD54(v39, v40, v65);
    sub_1C214B530();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    *(_WORD *)(v31 + 22) = 2082;
    uint64_t v41 = v61;
    uint64_t v64 = v61;
    type metadata accessor for HKMedicationDoseEventStatus(0);
    uint64_t v42 = sub_1C214A610();
    uint64_t v64 = sub_1C1F6FD54(v42, v43, v65);
    sub_1C214B530();
    swift_bridgeObjectRelease();
    *(_WORD *)(v31 + 32) = 2082;
    uint64_t v64 = (uint64_t)a3;
    id v44 = a3;
    sub_1C1F35A5C();
    uint64_t v45 = sub_1C214A610();
    uint64_t v64 = sub_1C1F6FD54(v45, v46, v65);
    a7 = v58;
    sub_1C214B530();
    a6 = v41;
    swift_bridgeObjectRelease();

    os_log_t v47 = v56;
    _os_log_impl(&dword_1C1F0B000, v56, (os_log_type_t)v55, "[%{public}s] Error querying for statistic collection query with date interval %{public}s with dose event status %{public}s: %{public}s", (uint8_t *)v31, 0x2Au);
    uint64_t v48 = v57;
    swift_arrayDestroy();
    MEMORY[0x1C8754730](v48, -1, -1);
    MEMORY[0x1C8754730](v31, -1, -1);

    (*(void (**)(char *, uint64_t))(v59 + 8))(v63, v60);
    goto LABEL_4;
  }

  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  (*(void (**)(char *, uint64_t))(v59 + 8))(v63, v60);
  a6 = v61;
  if (!a2) {
    return a7(0, a3);
  }
LABEL_5:
  if (a6 == 4)
  {
    char v49 = 0;
  }
  else
  {
    if (a6 != 5)
    {
      v65[0] = 0;
      v65[1] = 0xE000000000000000;
      id v53 = a2;
      sub_1C214B7C0();
      sub_1C214A6C0();
      uint64_t v64 = a6;
      type metadata accessor for HKMedicationDoseEventStatus(0);
      sub_1C214B8B0();
      uint64_t result = sub_1C214B910();
      __break(1u);
      return result;
    }
    char v49 = 1;
  }
  type metadata accessor for MedicationStatsContext();
  uint64_t v51 = swift_allocObject();
  *(void *)(v51 + 16) = a2;
  *(unsigned char *)(v51 + 24) = v49;
  id v52 = a2;
  a7(v51, 0);
  return swift_release();
}

void sub_1C1F0F4D8(uint64_t a1, void *a2)
{
  sub_1C1F0F4F8(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), *(NSObject **)(v2 + 32));
}

void sub_1C1F0F4F8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, NSObject *a5)
{
  if (a1)
  {
    swift_beginAccess();
    *(void *)(a3 + 16) = a1;
    swift_retain();
    swift_release();
  }
  else
  {
    swift_beginAccess();
    id v10 = *(void **)(a4 + 16);
    *(void *)(a4 + 16) = a2;
    id v11 = a2;
  }
  dispatch_group_leave(a5);
}

uint64_t type metadata accessor for MedicationStatsContext()
{
  return self;
}

uint64_t initializeWithCopy for MedicationChartCodableData(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1C2147AC0();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  uint64_t v8 = a3[7];
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  uint64_t v9 = a3[8];
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = sub_1C21476D0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
  uint64_t v13 = a3[10];
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  *(void *)(a1 + v13) = *(void *)(a2 + v13);
  return a1;
}

uint64_t destroy for MedicationChartCodableData(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C2147AC0();
  id v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(a1, v4);
  v5(a1 + *(int *)(a2 + 20), v4);
  uint64_t v6 = a1 + *(int *)(a2 + 32);
  uint64_t v7 = sub_1C21476D0();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);

  return v8(v6, v7);
}

uint64_t sub_1C1F0F7AC(void *a1)
{
  return MedicationChartCodableData.encode(to:)(a1);
}

uint64_t MedicationChartCodableData.encode(to:)(void *a1)
{
  sub_1C1F0FB54(0, &qword_1EBF0B4E0, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v9 - v6;
  __swift_project_boxed_opaque_existential_0(a1, a1[3]);
  sub_1C1F0FBB8();
  sub_1C214BBB0();
  char v16 = 0;
  sub_1C2147AC0();
  sub_1C1F0FAC8((unint64_t *)&unk_1EBF0B1E0, MEMORY[0x1E4F27928]);
  sub_1C214BA10();
  if (!v1)
  {
    type metadata accessor for MedicationChartCodableData();
    char v15 = 1;
    sub_1C214BA10();
    char v14 = 2;
    sub_1C214B9F0();
    char v13 = 3;
    sub_1C214B9F0();
    char v12 = 4;
    sub_1C21476D0();
    sub_1C1F0FAC8(&qword_1EBF0B1D8, MEMORY[0x1E4F26F90]);
    sub_1C214BA10();
    char v11 = 5;
    sub_1C214BA00();
    char v10 = 6;
    sub_1C214BA00();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1C1F0FAC8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *__swift_project_boxed_opaque_existential_0(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

void sub_1C1F0FB54(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C1F0FBB8();
    unint64_t v7 = a3(a1, &type metadata for MedicationChartCodableData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_1C1F0FBB8()
{
  unint64_t result = qword_1EBF0B2D8;
  if (!qword_1EBF0B2D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBF0B2D8);
  }
  return result;
}

uint64_t sub_1C1F0FC0C(uint64_t a1, void (*a2)(uint64_t, void, void, double, double), uint64_t a3)
{
  v58 = a2;
  uint64_t v59 = a3;
  sub_1C1F10118();
  uint64_t v62 = v5;
  uint64_t v6 = MEMORY[0x1F4188790](v5);
  uint64_t v57 = (uint64_t)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  os_log_t v56 = (char *)&v47 - v9;
  MEMORY[0x1F4188790](v8);
  int v55 = (char *)&v47 - v10;
  uint64_t v11 = type metadata accessor for MedicationChartCodableData();
  uint64_t v54 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11 - 8);
  char v13 = (char *)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v14 = *(void *)(a1 + 16);
  uint64_t v15 = MEMORY[0x1E4FBC860];
  if (!v14) {
    return v15;
  }
  uint64_t v47 = v3;
  uint64_t v63 = MEMORY[0x1E4FBC860];
  sub_1C1F10310(0, v14, 0);
  uint64_t result = sub_1C1F10628(a1);
  uint64_t v18 = result;
  uint64_t v19 = 0;
  uint64_t v20 = a1 + 64;
  uint64_t v48 = a1 + 80;
  int64_t v49 = v14;
  id v52 = v13;
  uint64_t v53 = a1;
  uint64_t v50 = v17;
  uint64_t v51 = a1 + 64;
  uint64_t v21 = (uint64_t)v55;
  while ((v18 & 0x8000000000000000) == 0 && v18 < 1 << *(unsigned char *)(a1 + 32))
  {
    unint64_t v24 = (unint64_t)v18 >> 6;
    if ((*(void *)(v20 + 8 * ((unint64_t)v18 >> 6)) & (1 << v18)) == 0) {
      goto LABEL_25;
    }
    if (*(_DWORD *)(a1 + 36) != v17) {
      goto LABEL_26;
    }
    uint64_t v60 = v19;
    uint64_t v61 = 1 << v18;
    id v25 = (uint64_t *)(v21 + *(int *)(v62 + 48));
    uint64_t v26 = *(void *)(a1 + 48);
    uint64_t v27 = sub_1C21475B0();
    uint64_t v28 = *(void *)(v27 - 8);
    int v29 = *(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 16);
    v29(v21, v26 + *(void *)(v28 + 72) * v18, v27);
    uint64_t v30 = (uint64_t *)(*(void *)(a1 + 56) + 32 * v18);
    uint64_t v31 = *v30;
    uint64_t v32 = v30[1];
    uint64_t v33 = v30[2];
    uint64_t v34 = v30[3];
    *id v25 = *v30;
    v25[1] = v32;
    v25[2] = v33;
    v25[3] = v34;
    uint64_t v35 = (uint64_t)v56;
    v29((uint64_t)v56, v21, v27);
    uint64_t v36 = (uint64_t)v52;
    uint64_t v37 = v62;
    unint64_t v38 = (void *)(v35 + *(int *)(v62 + 48));
    *unint64_t v38 = v31;
    v38[1] = v32;
    v38[2] = v33;
    v38[3] = v34;
    uint64_t v39 = v57;
    sub_1C1F10184(v35, v57, (uint64_t (*)(void))sub_1C1F10118);
    sub_1C1F100B8(v21, (uint64_t (*)(void))sub_1C1F10118);
    v58(v39, *(void *)(v39 + *(int *)(v37 + 48) + 8), *(void *)(v39 + *(int *)(v37 + 48) + 24), *(double *)(v39 + *(int *)(v37 + 48)), *(double *)(v39 + *(int *)(v37 + 48) + 16));
    sub_1C1F100B8(v39, (uint64_t (*)(void))sub_1C1F10118);
    uint64_t v15 = v63;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1C1F10310(0, *(void *)(v15 + 16) + 1, 1);
      uint64_t v15 = v63;
    }
    unint64_t v41 = *(void *)(v15 + 16);
    unint64_t v40 = *(void *)(v15 + 24);
    a1 = v53;
    if (v41 >= v40 >> 1)
    {
      sub_1C1F10310(v40 > 1, v41 + 1, 1);
      uint64_t v15 = v63;
    }
    *(void *)(v15 + 16) = v41 + 1;
    uint64_t result = sub_1C1F10184(v36, v15+ ((*(unsigned __int8 *)(v54 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80))+ *(void *)(v54 + 72) * v41, (uint64_t (*)(void))type metadata accessor for MedicationChartCodableData);
    int64_t v22 = 1 << *(unsigned char *)(a1 + 32);
    if (v18 >= v22) {
      goto LABEL_27;
    }
    uint64_t v20 = v51;
    uint64_t v42 = *(void *)(v51 + 8 * v24);
    if ((v42 & v61) == 0) {
      goto LABEL_28;
    }
    LODWORD(v17) = v50;
    if (*(_DWORD *)(a1 + 36) != v50) {
      goto LABEL_29;
    }
    unint64_t v43 = v42 & (-2 << (v18 & 0x3F));
    if (v43)
    {
      int64_t v22 = __clz(__rbit64(v43)) | v18 & 0xFFFFFFFFFFFFFFC0;
      int64_t v23 = v49;
    }
    else
    {
      unint64_t v44 = v24 + 1;
      unint64_t v45 = (unint64_t)(v22 + 63) >> 6;
      int64_t v23 = v49;
      if (v24 + 1 < v45)
      {
        unint64_t v46 = *(void *)(v51 + 8 * v44);
        if (v46)
        {
LABEL_22:
          int64_t v22 = __clz(__rbit64(v46)) + (v44 << 6);
        }
        else
        {
          while (v45 - 2 != v24)
          {
            unint64_t v46 = *(void *)(v48 + 8 * v24++);
            if (v46)
            {
              unint64_t v44 = v24 + 1;
              goto LABEL_22;
            }
          }
        }
      }
    }
    uint64_t v19 = v60 + 1;
    uint64_t v18 = v22;
    if (v60 + 1 == v23) {
      return v15;
    }
  }
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_1C1F100B8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_1C1F10118()
{
  if (!qword_1EBF0B190)
  {
    sub_1C21475B0();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EBF0B190);
    }
  }
}

uint64_t sub_1C1F10184(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t type metadata accessor for MedicationChartCodableData()
{
  uint64_t result = qword_1EBF0B308;
  if (!qword_1EBF0B308) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C1F10238@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D1>)
{
  return sub_1C1F10240(a1, a2, *(void *)(v5 + 16), a3, a4, a5);
}

uint64_t sub_1C1F10240@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>, double a5@<D0>, double a6@<D1>)
{
  sub_1C2147590();
  uint64_t v12 = (int *)type metadata accessor for MedicationChartCodableData();
  sub_1C2147570();
  uint64_t v13 = a4 + v12[8];
  uint64_t v14 = sub_1C21476D0();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v13, a3, v14);
  *(double *)(a4 + v12[6]) = a5;
  *(double *)(a4 + v12[7]) = a6;
  *(void *)(a4 + v12[9]) = a1;
  *(void *)(a4 + v12[10]) = a2;
  return result;
}

uint64_t sub_1C1F10310(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C1F10360(a1, a2, a3, (void *)*v3, &qword_1EBF0B510, (uint64_t (*)(uint64_t))type metadata accessor for MedicationChartCodableData, (uint64_t (*)(void))type metadata accessor for MedicationChartCodableData);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C1F10360(char a1, int64_t a2, char a3, void *a4, unint64_t *a5, uint64_t (*a6)(uint64_t), uint64_t (*a7)(void))
{
  if (a3)
  {
    unint64_t v10 = a4[3];
    int64_t v11 = v10 >> 1;
    if ((uint64_t)(v10 >> 1) < a2)
    {
      if (v11 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v11 = v10 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v10 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v11 = a2;
      }
    }
  }
  else
  {
    int64_t v11 = a2;
  }
  uint64_t v12 = a4[2];
  if (v11 <= v12) {
    uint64_t v13 = a4[2];
  }
  else {
    uint64_t v13 = v11;
  }
  if (!v13)
  {
    uint64_t v17 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_19;
  }
  sub_1C1F105C4(0, a5, a6, MEMORY[0x1E4FBBE00]);
  uint64_t v14 = *(void *)(a7(0) - 8);
  uint64_t v15 = *(void *)(v14 + 72);
  unint64_t v16 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  uint64_t v17 = (void *)swift_allocObject();
  size_t v18 = _swift_stdlib_malloc_size(v17);
  if (!v15)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v18 - v16 == 0x8000000000000000 && v15 == -1) {
    goto LABEL_34;
  }
  v17[2] = v12;
  v17[3] = 2 * ((uint64_t)(v18 - v16) / v15);
LABEL_19:
  uint64_t v20 = *(void *)(a7(0) - 8);
  unint64_t v21 = (*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  int64_t v22 = (char *)v17 + v21;
  int64_t v23 = (char *)a4 + v21;
  if (a1)
  {
    if (v17 < a4 || v22 >= &v23[*(void *)(v20 + 72) * v12])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v17 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v24 = *(void *)(v20 + 72) * v12;
  id v25 = &v22[v24];
  unint64_t v26 = (unint64_t)&v23[v24];
  if (v23 >= v25 || (unint64_t)v22 >= v26)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v17;
  }
LABEL_36:
  uint64_t result = sub_1C214B990();
  __break(1u);
  return result;
}

void sub_1C1F105C4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C1F10628(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2) {
    unint64_t v7 = 2;
  }
  unint64_t v8 = v7 - 2;
  uint64_t v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 64;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

void sub_1C1F106B0(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3();
  swift_release();
}

id sub_1C1F10724(void *a1, uint64_t a2)
{
  return sub_1C1F1072C(a1, a2, v2);
}

id sub_1C1F1072C(void *a1, uint64_t a2, uint64_t a3)
{
  sub_1C1F10AAC(0, (unint64_t *)&unk_1EBF0B1C8, MEMORY[0x1E4F26E60]);
  uint64_t v30 = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  unint64_t v8 = (char *)&v28 - v7;
  uint64_t v9 = sub_1C2147AC0();
  uint64_t v10 = MEMORY[0x1F4188790](v9 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v11 = sub_1C21475B0();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  id result = objc_msgSend(a1, sel_sumQuantity);
  if (result)
  {
    unint64_t v16 = result;
    uint64_t v29 = v6;
    uint64_t v17 = (unint64_t *)(a3 + 16);
    id v18 = objc_msgSend(self, sel_countUnit);
    objc_msgSend(v16, sel_doubleValueForUnit_, v18);
    uint64_t v20 = v19;

    id v21 = objc_msgSend(a1, sel_startDate);
    sub_1C2147A60();

    id v22 = objc_msgSend(a1, sel_endDate);
    sub_1C2147A60();

    sub_1C2147580();
    uint64_t v23 = *(int *)(v30 + 48);
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v8, v14, v11);
    *(void *)&v8[v23] = v20;
    swift_beginAccess();
    unint64_t v24 = *v17;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *uint64_t v17 = v24;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      unint64_t v24 = sub_1C1F10E00(0, *(void *)(v24 + 16) + 1, 1, v24);
      *uint64_t v17 = v24;
    }
    unint64_t v27 = *(void *)(v24 + 16);
    unint64_t v26 = *(void *)(v24 + 24);
    if (v27 >= v26 >> 1)
    {
      unint64_t v24 = sub_1C1F10E00(v26 > 1, v27 + 1, 1, v24);
      *uint64_t v17 = v24;
    }
    *(void *)(v24 + 16) = v27 + 1;
    sub_1C1F115E8((uint64_t)v8, v24+ ((*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80))+ *(void *)(v29 + 72) * v27, (unint64_t *)&unk_1EBF0B1C8, MEMORY[0x1E4F26E60]);
    return (id)swift_endAccess();
  }
  return result;
}

void sub_1C1F10AAC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v5) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

uint64_t sub_1C1F10B10(char a1, int64_t a2, char a3, unint64_t a4, unint64_t *a5, unint64_t *a6, void (*a7)(uint64_t))
{
  if (a3)
  {
    unint64_t v11 = *(void *)(a4 + 24);
    uint64_t v12 = v11 >> 1;
    if ((uint64_t)(v11 >> 1) < a2)
    {
      if (v12 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v12 = v11 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v11 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v12 = a2;
      }
    }
  }
  else
  {
    uint64_t v12 = a2;
  }
  uint64_t v13 = *(void *)(a4 + 16);
  if (v12 <= v13) {
    uint64_t v14 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v14 = v12;
  }
  if (!v14)
  {
    id v18 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_19;
  }
  sub_1C1F10DA8(0, a5, a6, a7);
  sub_1C1F10AAC(0, a6, a7);
  uint64_t v16 = *(void *)(*(void *)(v15 - 8) + 72);
  unint64_t v17 = (*(unsigned __int8 *)(*(void *)(v15 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v15 - 8) + 80);
  id v18 = (void *)swift_allocObject();
  size_t v19 = _swift_stdlib_malloc_size(v18);
  if (!v16 || (v19 - v17 == 0x8000000000000000 ? (BOOL v20 = v16 == -1) : (BOOL v20 = 0), v20))
  {
LABEL_29:
    uint64_t result = sub_1C214B900();
    __break(1u);
    return result;
  }
  v18[2] = v13;
  v18[3] = 2 * ((uint64_t)(v19 - v17) / v16);
LABEL_19:
  sub_1C1F10AAC(0, a6, a7);
  uint64_t v22 = *(void *)(v21 - 8);
  unint64_t v23 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  unint64_t v24 = (unint64_t)v18 + v23;
  if (a1)
  {
    if ((unint64_t)v18 < a4 || v24 >= a4 + v23 + *(void *)(v22 + 72) * v13)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v18 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_1C1F10E28(0, v13, v24, a4, a6, a7);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v18;
}

void sub_1C1F10DA8(uint64_t a1, unint64_t *a2, unint64_t *a3, void (*a4)(uint64_t))
{
  if (!*a2)
  {
    sub_1C1F10AAC(255, a3, a4);
    unint64_t v5 = sub_1C214BA50();
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_1C1F10E00(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1C1F10B10(a1, a2, a3, a4, &qword_1EBF0B4F8, (unint64_t *)&unk_1EBF0B1C8, MEMORY[0x1E4F26E60]);
}

uint64_t sub_1C1F10E28(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t *a5, void (*a6)(uint64_t))
{
  uint64_t v6 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v6 & 0x8000000000000000) == 0)
  {
    sub_1C1F10AAC(0, a5, a6);
    uint64_t v11 = *(void *)(*(void *)(v10 - 8) + 72);
    unint64_t v12 = a4
        + ((*(unsigned __int8 *)(*(void *)(v10 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v10 - 8) + 80))
        + v11 * a1;
    unint64_t v13 = a3 + v11 * v6;
    if (v12 >= v13 || v12 + v11 * v6 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  uint64_t result = sub_1C214B990();
  __break(1u);
  return result;
}

uint64_t sub_1C1F10F88(uint64_t a1, uint64_t a2, uint64_t a3, char *a4)
{
  uint64_t v62 = a4;
  uint64_t v61 = sub_1C2147AC0();
  uint64_t v53 = *(void *)(v61 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v61);
  uint64_t v60 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v57 = (char *)&v46 - v9;
  sub_1C1F10AAC(0, &qword_1EBF0B1F8, MEMORY[0x1E4F27928]);
  uint64_t v58 = *(void *)(v10 - 8);
  uint64_t v59 = v10;
  uint64_t v11 = MEMORY[0x1F4188790](v10);
  int64_t v49 = (char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  os_log_t v56 = (char *)&v46 - v14;
  MEMORY[0x1F4188790](v13);
  uint64_t v55 = (uint64_t)&v46 - v15;
  uint64_t v51 = sub_1C2147CF0();
  uint64_t v16 = *(void *)(v51 - 8);
  MEMORY[0x1F4188790](v51);
  id v18 = (char *)&v46 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2147CB0();
  unint64_t v50 = sub_1C1F164B8(a1, a2, a3, (uint64_t)v18);
  uint64_t v19 = swift_allocObject();
  uint64_t v20 = MEMORY[0x1E4FBC860];
  *(void *)(v19 + 16) = MEMORY[0x1E4FBC860];
  uint64_t v21 = (void *)sub_1C2147A00();
  uint64_t v22 = (void *)sub_1C2147A00();
  aBlock[4] = sub_1C1F10724;
  aBlock[5] = v19;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C1F106B0;
  aBlock[3] = &block_descriptor_5_0;
  unint64_t v23 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v62, sel_enumerateStatisticsFromDate_toDate_withBlock_, v21, v22, v23);
  _Block_release(v23);

  swift_beginAccess();
  uint64_t v24 = *(void *)(v19 + 16);
  swift_bridgeObjectRetain();
  swift_release();
  id v25 = *(char **)(v24 + 16);
  if (v25)
  {
    uint64_t v47 = v18;
    uint64_t v48 = v16;
    sub_1C1F10AAC(0, (unint64_t *)&unk_1EBF0B1C8, MEMORY[0x1E4F26E60]);
    uint64_t v54 = v26;
    uint64_t v27 = *(void *)(v26 - 8);
    uint64_t v28 = v24 + ((*(unsigned __int8 *)(v27 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80));
    id v52 = (void (**)(char *, uint64_t))(v53 + 8);
    uint64_t v53 = *(void *)(v27 + 72);
    uint64_t v46 = v24;
    swift_bridgeObjectRetain();
    uint64_t v29 = (uint64_t)v49;
    uint64_t v30 = (uint64_t)v56;
    uint64_t v31 = v57;
    do
    {
      uint64_t v62 = v25;
      uint64_t v32 = *(void *)(v28 + *(int *)(v54 + 48));
      uint64_t v33 = *(int *)(v59 + 48);
      sub_1C2147590();
      uint64_t v34 = v60;
      sub_1C2147570();
      sub_1C21478B0();
      sub_1C21478B0();
      sub_1C21478A0();
      uint64_t v35 = *v52;
      uint64_t v36 = v34;
      uint64_t v37 = v61;
      (*v52)(v36, v61);
      v35(v31, v37);
      *(void *)(v30 + v33) = v32;
      unint64_t v38 = (void (*)(uint64_t))MEMORY[0x1E4F27928];
      uint64_t v39 = v55;
      sub_1C1F115E8(v30, v55, &qword_1EBF0B1F8, MEMORY[0x1E4F27928]);
      sub_1C1F115E8(v39, v29, &qword_1EBF0B1F8, v38);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v20 = sub_1C1F11654(0, *(void *)(v20 + 16) + 1, 1, v20);
      }
      unint64_t v41 = *(void *)(v20 + 16);
      unint64_t v40 = *(void *)(v20 + 24);
      uint64_t v42 = v62;
      if (v41 >= v40 >> 1) {
        uint64_t v20 = sub_1C1F11654(v40 > 1, v41 + 1, 1, v20);
      }
      *(void *)(v20 + 16) = v41 + 1;
      sub_1C1F115E8(v29, v20+ ((*(unsigned __int8 *)(v58 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80))+ *(void *)(v58 + 72) * v41, &qword_1EBF0B1F8, MEMORY[0x1E4F27928]);
      v28 += v53;
      id v25 = v42 - 1;
    }
    while (v25);
    swift_bridgeObjectRelease();
    uint64_t v43 = v51;
    uint64_t v16 = v48;
    id v18 = v47;
  }
  else
  {
    uint64_t v43 = v51;
  }
  swift_bridgeObjectRelease();
  uint64_t v44 = sub_1C1F15960(v50, v20);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v43);
  return v44;
}

uint64_t sub_1C1F115E8(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_1C1F10AAC(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_1C1F11654(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1C1F10B10(a1, a2, a3, a4, &qword_1EBF0B500, &qword_1EBF0B1F8, MEMORY[0x1E4F27928]);
}

uint64_t (*sub_1C1F1167C(void *a1, void *a2, uint64_t a3, uint64_t a4))()
{
  unint64_t v5 = v4;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = MEMORY[0x1E4FBC868];
  uint64_t v12 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v13 = (void *)swift_allocObject();
  v13[2] = v12;
  v13[3] = a3;
  v13[4] = a4;
  v13[5] = a1;
  v13[6] = v11;
  v13[7] = ObjectType;
  v25[4] = sub_1C1F14088;
  v25[5] = v13;
  v25[0] = MEMORY[0x1E4F143A8];
  v25[1] = 1107296256;
  v25[2] = sub_1C1F13FB8;
  v25[3] = &block_descriptor_19_1;
  uint64_t v14 = _Block_copy(v25);
  swift_retain();
  id v15 = a1;
  swift_retain();
  swift_release();
  id v16 = objc_msgSend(v5, sel_queriesForRequest_completionHandler_, v15, v14);
  _Block_release(v14);
  sub_1C1F12718(0, &qword_1EBF0B4C8);
  unint64_t v17 = sub_1C214A780();

  if (!(v17 >> 62))
  {
    uint64_t v18 = *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = (uint64_t (*)())swift_bridgeObjectRetain();
    if (v18) {
      goto LABEL_3;
    }
LABEL_10:
    swift_bridgeObjectRelease();
    uint64_t v23 = swift_allocObject();
    *(void *)(v23 + 16) = v17;
    *(void *)(v23 + 24) = a2;
    id v24 = a2;
    swift_release();
    return sub_1C211120C;
  }
  swift_bridgeObjectRetain();
  uint64_t result = (uint64_t (*)())sub_1C214B930();
  uint64_t v18 = (uint64_t)result;
  if (!result) {
    goto LABEL_10;
  }
LABEL_3:
  if (v18 >= 1)
  {
    for (uint64_t i = 0; i != v18; ++i)
    {
      if ((v17 & 0xC000000000000001) != 0) {
        id v21 = (id)MEMORY[0x1C8753960](i, v17);
      }
      else {
        id v21 = *(id *)(v17 + 8 * i + 32);
      }
      uint64_t v22 = v21;
      objc_msgSend(a2, sel_executeQuery_, v21);
    }
    goto LABEL_10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C1F119C4(void *a1, char *a2, void (**a3)(const void *, uint64_t, void *))
{
  v94 = a2;
  uint64_t v84 = sub_1C214A3F0();
  uint64_t v83 = *(void *)(v84 - 8);
  MEMORY[0x1F4188790](v84);
  v81 = (char *)&v75 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = sub_1C214A420();
  uint64_t v80 = *(void *)(v82 - 8);
  MEMORY[0x1F4188790](v82);
  v79 = (char *)&v75 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = sub_1C214A400();
  uint64_t v77 = *(void *)(v78 - 8);
  MEMORY[0x1F4188790](v78);
  v76 = (char *)&v75 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v92 = (void *)sub_1C21476D0();
  uint64_t v8 = *(v92 - 1);
  MEMORY[0x1F4188790](v92);
  uint64_t v10 = (char *)&v75 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1C2147AC0();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  id v15 = (char *)&v75 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  unint64_t v17 = ((char *)&v75 - v16);
  uint64_t v90 = swift_allocObject();
  *(void *)(v90 + 16) = a3;
  v85 = a3;
  _Block_copy(a3);
  dispatch_group_t v91 = dispatch_group_create();
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = 0;
  uint64_t v93 = swift_allocObject();
  *(void *)(v93 + 16) = 0;
  uint64_t v19 = swift_allocObject();
  v19[2].isa = 0;
  id v20 = objc_msgSend(a1, sel_startDate);
  sub_1C2147A60();

  id v21 = objc_msgSend(a1, sel_endDate);
  sub_1C2147A60();

  id v88 = a1;
  id v22 = objc_msgSend(a1, sel_statisticsInterval);
  sub_1C2147620();

  swift_retain();
  swift_retain();
  uint64_t v23 = v91;
  id v24 = sub_1C1F12D1C(v17, (uint64_t)v15, (uint64_t)v10, 4, v94, v18, (uint64_t)v19, v23);

  dispatch_group_t v91 = v19;
  swift_release();
  uint64_t v89 = v18;
  swift_release();
  id v25 = *(void (**)(char *, void *))(v8 + 8);
  uint64_t v86 = v8 + 8;
  v25(v10, v92);
  uint64_t v26 = *(void (**)(char *, uint64_t))(v12 + 8);
  v26(v15, v11);
  uint64_t v87 = v11;
  v26((char *)v17, v11);
  if (!v24)
  {
    long long aBlock = 0u;
    long long v96 = 0u;
    type metadata accessor for HKError(0);
    v99[0] = 0;
    sub_1C211063C(MEMORY[0x1E4FBC860]);
    sub_1C1F0FAC8(&qword_1EA2C2998, type metadata accessor for HKError);
    sub_1C21477D0();
    os_log_t v56 = v101;
    sub_1C1F17FA4((uint64_t)&aBlock, (uint64_t)v99);
    uint64_t v57 = v100;
    if (v100)
    {
      uint64_t v58 = __swift_project_boxed_opaque_existential_0(v99, v100);
      uint64_t v59 = *(void *)(v57 - 8);
      MEMORY[0x1F4188790](v58);
      uint64_t v61 = (char *)&v75 - ((v60 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v59 + 16))(v61);
      uint64_t v62 = sub_1C214BA70();
      (*(void (**)(char *, uint64_t))(v59 + 8))(v61, v57);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v99);
    }
    else
    {
      uint64_t v62 = 0;
    }
    v71 = v85;
    v72 = (void *)sub_1C21477F0();
    v71[2](v71, v62, v72);

    swift_unknownObjectRelease();
    sub_1C1F13C24((uint64_t)&aBlock, (uint64_t)&qword_1EBF0CB20, MEMORY[0x1E4FBC840] + 8, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C1F13D64);
    swift_release();
    swift_release();
    swift_release();
    swift_release();

    return MEMORY[0x1E4FBC860];
  }
  id v75 = v24;
  id v27 = v88;
  id v28 = objc_msgSend(v88, sel_startDate);
  sub_1C2147A60();

  id v29 = objc_msgSend(v27, sel_endDate);
  sub_1C2147A60();

  id v30 = objc_msgSend(v27, sel_statisticsInterval);
  sub_1C2147620();

  dispatch_group_t v31 = v91;
  swift_retain();
  uint64_t v32 = v23;
  uint64_t v33 = v25;
  uint64_t v34 = v32;
  uint64_t v35 = v93;
  swift_retain();
  id v36 = sub_1C1F127DC(v17, (uint64_t)v15, (uint64_t)v10, 5, v94, v35, (uint64_t)v31, v34);
  swift_release();
  swift_release();

  v33(v10, v92);
  uint64_t v37 = v87;
  v26(v15, v87);
  v26((char *)v17, v37);
  if (!v36)
  {
    uint64_t v63 = v75;
    long long aBlock = 0u;
    long long v96 = 0u;
    type metadata accessor for HKError(0);
    v99[0] = 0;
    sub_1C211063C(MEMORY[0x1E4FBC860]);
    sub_1C1F0FAC8(&qword_1EA2C2998, type metadata accessor for HKError);
    sub_1C21477D0();
    uint64_t v64 = v101;
    sub_1C1F17FA4((uint64_t)&aBlock, (uint64_t)v99);
    uint64_t v65 = v100;
    if (v100)
    {
      v66 = __swift_project_boxed_opaque_existential_0(v99, v100);
      uint64_t v67 = *(void *)(v65 - 8);
      MEMORY[0x1F4188790](v66);
      v69 = (char *)&v75 - ((v68 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v67 + 16))(v69);
      uint64_t v70 = sub_1C214BA70();
      (*(void (**)(char *, uint64_t))(v67 + 8))(v69, v65);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v99);
    }
    else
    {
      uint64_t v70 = 0;
    }
    v73 = (void *)sub_1C21477F0();
    v85[2](v85, v70, v73);

    swift_unknownObjectRelease();
    sub_1C1F13C24((uint64_t)&aBlock, (uint64_t)&qword_1EBF0CB20, MEMORY[0x1E4FBC840] + 8, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C1F13D64);
    swift_release();
    swift_release();
    swift_release();
    swift_release();

    return MEMORY[0x1E4FBC860];
  }
  v92 = v36;
  dispatch_group_enter(v34);
  dispatch_group_enter(v34);
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0CB10);
  uint64_t v38 = v77;
  uint64_t v39 = v76;
  uint64_t v40 = v78;
  (*(void (**)(char *, void, uint64_t))(v77 + 104))(v76, *MEMORY[0x1E4FBCB28], v78);
  id v88 = (id)sub_1C214ADB0();
  (*(void (**)(char *, uint64_t))(v38 + 8))(v39, v40);
  unint64_t v41 = (void *)swift_allocObject();
  uint64_t v42 = v90;
  uint64_t v43 = v93;
  uint64_t v44 = v94;
  v41[2] = v89;
  v41[3] = v43;
  v41[4] = v91;
  v41[5] = v44;
  v41[6] = sub_1C1F13DFC;
  v41[7] = v42;
  v97 = sub_1C1F0E480;
  v98 = v41;
  *(void *)&long long aBlock = MEMORY[0x1E4F143A8];
  *((void *)&aBlock + 1) = 1107296256;
  *(void *)&long long v96 = sub_1C1F0E42C;
  *((void *)&v96 + 1) = &block_descriptor_57_0;
  unint64_t v45 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v46 = v44;
  swift_retain();
  uint64_t v47 = v34;
  uint64_t v48 = v79;
  sub_1C214A410();
  v99[0] = MEMORY[0x1E4FBC860];
  sub_1C1F0FAC8((unint64_t *)&qword_1EBF0CAE0, MEMORY[0x1E4FBCB00]);
  sub_1C1F18C18(0, (unint64_t *)&qword_1EBF0CAF0, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
  sub_1C1F12754();
  int64_t v49 = v81;
  uint64_t v50 = v84;
  sub_1C214B640();
  id v51 = v88;
  sub_1C214AD00();
  _Block_release(v45);

  (*(void (**)(char *, uint64_t))(v83 + 8))(v49, v50);
  (*(void (**)(char *, uint64_t))(v80 + 8))(v48, v82);
  swift_release();
  sub_1C1F13D64(0, (unint64_t *)&qword_1EBF0CA10, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
  uint64_t v52 = swift_allocObject();
  *(_OWORD *)(v52 + 16) = xmmword_1C214FCB0;
  uint64_t v53 = v75;
  uint64_t v54 = v92;
  *(void *)(v52 + 32) = v75;
  *(void *)(v52 + 40) = v54;
  *(void *)&long long aBlock = v52;
  sub_1C214A7A0();
  uint64_t v55 = aBlock;
  swift_release();

  swift_release();
  swift_release();
  swift_release();

  return v55;
}

uint64_t sub_1C1F12718(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

unint64_t sub_1C1F12754()
{
  unint64_t result = qword_1EBF0CB00;
  if (!qword_1EBF0CB00)
  {
    sub_1C1FC7E44(255, (unint64_t *)&qword_1EBF0CAF0, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBF0CB00);
  }
  return result;
}

id sub_1C1F127DC(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, char *a5, uint64_t a6, uint64_t a7, void *a8)
{
  uint64_t v55 = sub_1C21476D0();
  uint64_t v15 = *(void *)(v55 - 8);
  MEMORY[0x1F4188790](v55);
  uint64_t v53 = (char *)&v50 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = v16;
  unint64_t v17 = (void (*)(uint64_t, void *))swift_allocObject();
  *((void *)v17 + 2) = a6;
  *((void *)v17 + 3) = a7;
  os_log_t v56 = v17;
  *((void *)v17 + 4) = a8;
  uint64_t v18 = *(void **)&a5[OBJC_IVAR____TtC19HealthMedicationsUI25MedicationChartDataSource_medication];
  swift_retain();
  uint64_t v51 = a7;
  swift_retain();
  dispatch_group_t v50 = a8;
  id v19 = objc_msgSend(v18, sel_semanticIdentifier);
  id v20 = objc_msgSend(v19, sel_stringValue);

  if (!v20)
  {
    sub_1C214A5F0();
    id v20 = (id)sub_1C214A5B0();
    swift_bridgeObjectRelease();
  }
  id v21 = self;
  id v22 = objc_msgSend(v21, sel_predicateForMedicationDoseEventWithMedicationIdentifier_, v20);

  uint64_t v23 = (void *)sub_1C2147A00();
  id v24 = (void *)sub_1C2147A00();
  id v25 = objc_msgSend(v21, sel_predicateForSamplesWithStartDate_endDate_options_, v23, v24, 0);

  id v26 = objc_msgSend(v21, sel_predicateForMedicationDoseEventWithStatus_, a4);
  sub_1C1F13D64(0, (unint64_t *)&qword_1EBF0CA10, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
  uint64_t v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_1C2151E40;
  *(void *)(v27 + 32) = v25;
  *(void *)(v27 + 40) = v22;
  *(void *)(v27 + 48) = v26;
  aBlock[0] = v27;
  sub_1C214A7A0();
  sub_1C1F12718(0, &qword_1EBF0B4B0);
  uint64_t v52 = a4;
  id v28 = v25;
  id v29 = v22;
  id v30 = v26;
  dispatch_group_t v31 = (void *)sub_1C214A770();
  swift_bridgeObjectRelease();
  id v32 = objc_msgSend(self, sel_andPredicateWithSubpredicates_, v31);

  id v33 = sub_1C1F18030(a1, a3, v32);
  if (v33)
  {
    uint64_t v34 = a5;
    uint64_t v35 = v53;
    uint64_t v36 = a3;
    uint64_t v37 = v55;
    (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v53, v36, v55);
    unint64_t v38 = (*(unsigned __int8 *)(v15 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
    unint64_t v39 = (v54 + v38 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v40 = swift_allocObject();
    *(void *)(v40 + 16) = v34;
    (*(void (**)(unint64_t, char *, uint64_t))(v15 + 32))(v40 + v38, v35, v37);
    *(void *)(v40 + v39) = v52;
    unint64_t v41 = (void (**)(uint64_t, void *))(v40 + ((v39 + 15) & 0xFFFFFFFFFFFFFFF8));
    uint64_t v42 = v56;
    *unint64_t v41 = sub_1C1F0F4D8;
    v41[1] = v42;
    aBlock[4] = sub_1C1F0EEEC;
    aBlock[5] = v40;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1C1F0ED84;
    aBlock[3] = &block_descriptor_66;
    uint64_t v43 = _Block_copy(aBlock);
    id v44 = v34;
    swift_retain();
    sub_1C1F1325C((uint64_t)sub_1C1F0EEEC);
    swift_release();
    objc_msgSend(v33, sel_setInitialResultsHandler_, v43);

    _Block_release(v43);
    swift_release();
    swift_release();
  }
  else
  {
    type metadata accessor for HKError(0);
    aBlock[0] = 0;
    sub_1C211063C(MEMORY[0x1E4FBC860]);
    sub_1C1F0FAC8(&qword_1EA2C2998, type metadata accessor for HKError);
    sub_1C21477D0();
    unint64_t v45 = (void *)aBlock[6];
    uint64_t v46 = v51;
    swift_beginAccess();
    uint64_t v47 = *(void **)(v46 + 16);
    *(void *)(v46 + 16) = v45;
    id v48 = v45;

    dispatch_group_leave(v50);
    swift_release();
  }
  return v33;
}

id sub_1C1F12D1C(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, char *a5, uint64_t a6, uint64_t a7, void *a8)
{
  uint64_t v55 = sub_1C21476D0();
  uint64_t v15 = *(void *)(v55 - 8);
  MEMORY[0x1F4188790](v55);
  uint64_t v53 = (char *)&v50 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = v16;
  unint64_t v17 = (void (*)(uint64_t, void *))swift_allocObject();
  *((void *)v17 + 2) = a6;
  *((void *)v17 + 3) = a7;
  os_log_t v56 = v17;
  *((void *)v17 + 4) = a8;
  uint64_t v18 = *(void **)&a5[OBJC_IVAR____TtC19HealthMedicationsUI25MedicationChartDataSource_medication];
  swift_retain();
  uint64_t v51 = a7;
  swift_retain();
  dispatch_group_t v50 = a8;
  id v19 = objc_msgSend(v18, sel_semanticIdentifier);
  id v20 = objc_msgSend(v19, sel_stringValue);

  if (!v20)
  {
    sub_1C214A5F0();
    id v20 = (id)sub_1C214A5B0();
    swift_bridgeObjectRelease();
  }
  id v21 = self;
  id v22 = objc_msgSend(v21, sel_predicateForMedicationDoseEventWithMedicationIdentifier_, v20);

  uint64_t v23 = (void *)sub_1C2147A00();
  id v24 = (void *)sub_1C2147A00();
  id v25 = objc_msgSend(v21, sel_predicateForSamplesWithStartDate_endDate_options_, v23, v24, 0);

  id v26 = objc_msgSend(v21, sel_predicateForMedicationDoseEventWithStatus_, a4);
  sub_1C1F13D64(0, (unint64_t *)&qword_1EBF0CA10, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
  uint64_t v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_1C2151E40;
  *(void *)(v27 + 32) = v25;
  *(void *)(v27 + 40) = v22;
  *(void *)(v27 + 48) = v26;
  aBlock[0] = v27;
  sub_1C214A7A0();
  sub_1C1F12718(0, &qword_1EBF0B4B0);
  uint64_t v52 = a4;
  id v28 = v25;
  id v29 = v22;
  id v30 = v26;
  dispatch_group_t v31 = (void *)sub_1C214A770();
  swift_bridgeObjectRelease();
  id v32 = objc_msgSend(self, sel_andPredicateWithSubpredicates_, v31);

  id v33 = sub_1C1F18030(a1, a3, v32);
  if (v33)
  {
    uint64_t v34 = a5;
    uint64_t v35 = v53;
    uint64_t v36 = a3;
    uint64_t v37 = v55;
    (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v53, v36, v55);
    unint64_t v38 = (*(unsigned __int8 *)(v15 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
    unint64_t v39 = (v54 + v38 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v40 = swift_allocObject();
    *(void *)(v40 + 16) = v34;
    (*(void (**)(unint64_t, char *, uint64_t))(v15 + 32))(v40 + v38, v35, v37);
    *(void *)(v40 + v39) = v52;
    unint64_t v41 = (void (**)(uint64_t, void *))(v40 + ((v39 + 15) & 0xFFFFFFFFFFFFFFF8));
    uint64_t v42 = v56;
    *unint64_t v41 = sub_1C1F0F5CC;
    v41[1] = v42;
    aBlock[4] = sub_1C1F0EEEC;
    aBlock[5] = v40;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1C1F0ED84;
    aBlock[3] = &block_descriptor_76;
    uint64_t v43 = _Block_copy(aBlock);
    id v44 = v34;
    swift_retain();
    sub_1C1F1325C((uint64_t)sub_1C1F0EEEC);
    swift_release();
    objc_msgSend(v33, sel_setInitialResultsHandler_, v43);

    _Block_release(v43);
    swift_release();
    swift_release();
  }
  else
  {
    type metadata accessor for HKError(0);
    aBlock[0] = 0;
    sub_1C211063C(MEMORY[0x1E4FBC860]);
    sub_1C1F0FAC8(&qword_1EA2C2998, type metadata accessor for HKError);
    sub_1C21477D0();
    unint64_t v45 = (void *)aBlock[6];
    uint64_t v46 = v51;
    swift_beginAccess();
    uint64_t v47 = *(void **)(v46 + 16);
    *(void *)(v46 + 16) = v45;
    id v48 = v45;

    dispatch_group_leave(v50);
    swift_release();
  }
  return v33;
}

uint64_t sub_1C1F1325C(uint64_t result)
{
  if (result) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_1C1F1326C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void (*a5)(long long *, id), uint64_t a6)
{
  uint64_t v68 = a6;
  v69 = a5;
  uint64_t v67 = sub_1C21497F0();
  uint64_t v66 = *(void *)(v67 - 8);
  uint64_t v10 = ((uint64_t (*)(void))MEMORY[0x1F4188790])();
  uint64_t v12 = (char *)v61 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)v61 - v13;
  uint64_t v15 = (uint64_t *)(a2 + 16);
  swift_beginAccess();
  uint64_t v16 = *(void *)(a1 + 16);
  if (v16 && (swift_beginAccess(), (uint64_t v17 = *v15) != 0))
  {
    sub_1C1F13D64(0, (unint64_t *)&qword_1EBF0CA10, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
    uint64_t v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_1C214FCB0;
    *(void *)(v18 + 32) = v16;
    *(void *)(v18 + 40) = v17;
    *(void *)&long long v71 = v18;
    sub_1C214A7A0();
    uint64_t v19 = v71;
    sub_1C1F18C18(0, &qword_1EBF0B490, (uint64_t (*)(uint64_t))type metadata accessor for MedicationStatsContext, MEMORY[0x1E4FBB320]);
    *((void *)&v72 + 1) = v20;
    *(void *)&long long v71 = v19;
    swift_retain_n();
    swift_retain_n();
    v69(&v71, 0);
    swift_release();
    swift_release();
  }
  else
  {
    id v21 = (id *)(a3 + 16);
    swift_beginAccess();
    id v22 = *v21;
    if (*v21)
    {
      id v23 = v22;
      sub_1C21497A0();
      id v24 = a4;
      id v25 = v22;
      id v26 = v24;
      id v27 = v22;
      id v28 = sub_1C21497E0();
      os_log_type_t v29 = sub_1C214ABD0();
      if (os_log_type_enabled(v28, v29))
      {
        uint64_t v30 = swift_slowAlloc();
        uint64_t v64 = swift_slowAlloc();
        *(void *)&long long v71 = v64;
        *(_DWORD *)uint64_t v30 = 136446466;
        uint64_t v65 = v21;
        id v31 = v26;
        id v32 = objc_msgSend(v31, sel_description);
        uint64_t v33 = sub_1C214A5F0();
        unint64_t v35 = v34;

        uint64_t v70 = sub_1C1F6FD54(v33, v35, (uint64_t *)&v71);
        sub_1C214B530();

        swift_bridgeObjectRelease();
        *(_WORD *)(v30 + 12) = 2082;
        uint64_t v70 = (uint64_t)v22;
        id v36 = v22;
        sub_1C1F35A5C();
        uint64_t v37 = sub_1C214A610();
        uint64_t v70 = sub_1C1F6FD54(v37, v38, (uint64_t *)&v71);
        sub_1C214B530();
        id v21 = v65;
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_1C1F0B000, v28, v29, "[%{public}s] Error executing statistics queries for dose event chart: %{public}s", (uint8_t *)v30, 0x16u);
        uint64_t v39 = v64;
        swift_arrayDestroy();
        MEMORY[0x1C8754730](v39, -1, -1);
        MEMORY[0x1C8754730](v30, -1, -1);
      }
      else
      {
      }
      (*(void (**)(char *, uint64_t))(v66 + 8))(v12, v67);
    }
    else
    {
      sub_1C21497A0();
      id v40 = a4;
      swift_retain_n();
      swift_retain_n();
      os_log_t v41 = (os_log_t)v40;
      uint64_t v42 = sub_1C21497E0();
      os_log_type_t v43 = sub_1C214ABD0();
      int v44 = v43;
      if (os_log_type_enabled(v42, v43))
      {
        uint64_t v45 = swift_slowAlloc();
        uint64_t v64 = swift_slowAlloc();
        *(void *)&long long v71 = v64;
        *(_DWORD *)uint64_t v45 = 136446722;
        v61[1] = v45 + 4;
        uint64_t v46 = v41;
        id v47 = [v46 description];
        os_log_t v63 = v42;
        id v48 = v47;
        uint64_t v49 = sub_1C214A5F0();
        int v62 = v44;
        uint64_t v50 = v49;
        uint64_t v65 = v21;
        unint64_t v52 = v51;

        uint64_t v70 = sub_1C1F6FD54(v50, v52, (uint64_t *)&v71);
        sub_1C214B530();

        swift_bridgeObjectRelease();
        *(_WORD *)(v45 + 12) = 2082;
        swift_beginAccess();
        uint64_t v70 = *(void *)(a1 + 16);
        sub_1C1F18C18(0, &qword_1EA2C7518, (uint64_t (*)(uint64_t))type metadata accessor for MedicationStatsContext, MEMORY[0x1E4FBB718]);
        swift_retain();
        uint64_t v53 = sub_1C214A610();
        uint64_t v70 = sub_1C1F6FD54(v53, v54, (uint64_t *)&v71);
        sub_1C214B530();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v45 + 22) = 2082;
        swift_beginAccess();
        uint64_t v70 = *(void *)(a2 + 16);
        swift_retain();
        uint64_t v55 = sub_1C214A610();
        uint64_t v70 = sub_1C1F6FD54(v55, v56, (uint64_t *)&v71);
        id v21 = v65;
        sub_1C214B530();
        swift_release_n();
        swift_bridgeObjectRelease();
        os_log_t v41 = v63;
        _os_log_impl(&dword_1C1F0B000, v63, (os_log_type_t)v62, "[%{public}s] Found a nil statistic without an error takenDoseEventStatsContext is nil: %{public}s, skippedDoseEventStatsContext is nil: %{public}s", (uint8_t *)v45, 0x20u);
        uint64_t v57 = v64;
        swift_arrayDestroy();
        MEMORY[0x1C8754730](v57, -1, -1);
        MEMORY[0x1C8754730](v45, -1, -1);
      }
      else
      {

        swift_release_n();
        swift_release_n();
      }
      (*(void (**)(char *, uint64_t))(v66 + 8))(v14, v67);
    }
    long long v71 = 0u;
    long long v72 = 0u;
    swift_beginAccess();
    id v58 = *v21;
    id v59 = *v21;
    v69(&v71, v58);
  }
  return sub_1C1F13C24((uint64_t)&v71, (uint64_t)&qword_1EBF0CB20, MEMORY[0x1E4FBC840] + 8, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C1F13D64);
}

uint64_t sub_1C1F13A74(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1C1F105C4(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1C1F13AE4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1C1FF8310(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1C1F13B54(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1C20A356C(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1C1F13BC4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C1F13C24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v6 = a5(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
  return a1;
}

void sub_1C1F13C84(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t v3 = sub_1C214BA50();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

void sub_1C1F13CCC(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1C1F13D18(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1C1F13D64(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1C1F13DB0(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1C1F13DFC(uint64_t a1, void *a2)
{
  sub_1C1F13E04(a1, a2, *(void *)(v2 + 16));
}

void sub_1C1F13E04(uint64_t a1, void *a2, uint64_t a3)
{
  sub_1C1F17FA4(a1, (uint64_t)v11);
  uint64_t v5 = v12;
  if (!v12)
  {
    uint64_t v10 = 0;
    if (!a2) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  uint64_t v6 = __swift_project_boxed_opaque_existential_0(v11, v12);
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v7 + 16))(v9);
  uint64_t v10 = sub_1C214BA70();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v5);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v11);
  if (a2) {
LABEL_3:
  }
    a2 = (void *)sub_1C21477F0();
LABEL_4:
  (*(void (**)(uint64_t, uint64_t, void *))(a3 + 16))(a3, v10, a2);
  swift_unknownObjectRelease();
}

uint64_t __swift_destroy_boxed_opaque_existential_0(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_1C1F13FB8(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = *(void (**)(long long *, void *))(a1 + 32);
  if (a2)
  {
    *((void *)&v9 + 1) = swift_getObjectType();
    *(void *)&long long v8 = a2;
  }
  else
  {
    long long v8 = 0u;
    long long v9 = 0u;
  }
  swift_retain();
  swift_unknownObjectRetain();
  id v6 = a3;
  v5(&v8, a3);
  swift_release();

  return sub_1C1F13C24((uint64_t)&v8, (uint64_t)&qword_1EBF0CB20, MEMORY[0x1E4FBC840] + 8, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C1F13D64);
}

void sub_1C1F14088(uint64_t a1, uint64_t a2)
{
  sub_1C1F14098(a1, a2, *(void *)(v2 + 16), *(void (**)(void *, uint64_t))(v2 + 24), *(void *)(v2 + 32), *(void **)(v2 + 40), *(void *)(v2 + 48));
}

void sub_1C1F14098(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void *, uint64_t), uint64_t a5, void *a6, uint64_t a7)
{
  id v162 = a6;
  uint64_t v148 = a5;
  v149 = a4;
  uint64_t v147 = a2;
  uint64_t v10 = sub_1C21475B0();
  uint64_t v168 = *(void *)(v10 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v10);
  uint64_t v167 = (uint64_t)&v141 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)&v141 - v14;
  uint64_t v16 = MEMORY[0x1F4188790](v13);
  uint64_t v166 = (uint64_t)&v141 - v17;
  uint64_t v18 = MEMORY[0x1F4188790](v16);
  uint64_t v178 = (uint64_t)&v141 - v19;
  MEMORY[0x1F4188790](v18);
  uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)&v141 - v20;
  sub_1C1F163DC();
  uint64_t v156 = v22;
  uint64_t v179 = *(void *)(v22 - 8);
  MEMORY[0x1F4188790](v22);
  uint64_t v172 = (uint64_t)&v141 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v161 = sub_1C21476D0();
  uint64_t v146 = *(void *)(v161 - 8);
  MEMORY[0x1F4188790](v161);
  v159 = (char *)&v141 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v160 = sub_1C2147AC0();
  uint64_t v145 = *(void *)(v160 - 8);
  uint64_t v25 = MEMORY[0x1F4188790](v160);
  v158 = (char *)&v141 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v25);
  v157 = (char *)&v141 - v27;
  swift_beginAccess();
  uint64_t v28 = MEMORY[0x1C8754850](a3 + 16);
  if (v28)
  {
    os_log_type_t v29 = (void *)v28;
    sub_1C1F17FA4(a1, (uint64_t)v183);
    if (v184)
    {
      sub_1C1F18C18(0, &qword_1EBF0B490, (uint64_t (*)(uint64_t))type metadata accessor for MedicationStatsContext, MEMORY[0x1E4FBB320]);
      if (swift_dynamicCast())
      {
        v142 = v29;
        uint64_t v30 = (uint64_t *)(a7 + 16);
        unint64_t v31 = v182;
        if (v182 >> 62) {
          goto LABEL_99;
        }
        if (*(void *)((v182 & 0xFFFFFFFFFFFFFF8) + 0x10) == 2)
        {
          uint64_t v151 = 2;
          while (1)
          {
            uint64_t v154 = type metadata accessor for MedicationChartStatisticsFormatter();
            unint64_t v32 = 0;
            unint64_t v155 = v31 & 0xC000000000000001;
            uint64_t v144 = v31 & 0xFFFFFFFFFFFFFF8;
            v143 = (char *)(v31 + 32);
            v153 = (void (**)(uint64_t, uint64_t))(v146 + 8);
            v152 = (void (**)(char *, uint64_t))(v145 + 8);
            v171 = (void (**)(uint64_t, uint64_t, uint64_t))(v168 + 32);
            uint64_t v33 = (void (**)(uint64_t, uint64_t, uint64_t))(v168 + 16);
            v169 = (void (**)(uint64_t, uint64_t))(v168 + 8);
            uint64_t v170 = isUniquelyReferenced_nonNull_native;
            v181 = (void (**)(uint64_t, uint64_t, uint64_t))(v168 + 16);
            v165 = v15;
            unint64_t v150 = v31;
            while (1)
            {
              if (v155)
              {
                uint64_t v34 = MEMORY[0x1C8753960](v32, v31);
                BOOL v35 = __OFADD__(v32, 1);
                unint64_t v36 = v32 + 1;
                if (v35) {
                  break;
                }
                goto LABEL_14;
              }
              if (v32 >= *(void *)(v144 + 16)) {
                goto LABEL_98;
              }
              uint64_t v34 = swift_retain();
              BOOL v35 = __OFADD__(v32, 1);
              unint64_t v36 = v32 + 1;
              if (v35) {
                break;
              }
LABEL_14:
              unint64_t v164 = v36;
              uint64_t v37 = *(void **)(v34 + 16);
              uint64_t v163 = v34;
              int v177 = *(unsigned __int8 *)(v34 + 24);
              id v38 = v37;
              id v39 = v162;
              id v40 = objc_msgSend(v162, sel_startDate);
              uint64_t v41 = (uint64_t)v157;
              sub_1C2147A60();

              id v42 = objc_msgSend(v39, sel_endDate);
              uint64_t v15 = v158;
              sub_1C2147A60();

              id v43 = objc_msgSend(v39, sel_statisticsInterval);
              uint64_t v44 = (uint64_t)v159;
              sub_1C2147620();

              id v180 = v38;
              uint64_t v45 = sub_1C1F10F88(v41, (uint64_t)v15, v44, (char *)v38);
              (*v153)(v44, v161);
              unint64_t v31 = (unint64_t)v152;
              uint64_t v46 = *v152;
              uint64_t v47 = v160;
              (*v152)(v15, v160);
              v46((char *)v41, v47);
              uint64_t v176 = *(void *)(v45 + 16);
              if (v176)
              {
                unint64_t v48 = 0;
                uint64_t v49 = *(int *)(v156 + 48);
                unint64_t v174 = v45
                     + ((*(unsigned __int8 *)(v179 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v179 + 80));
                uint64_t v175 = v49;
                uint64_t v15 = v165;
                uint64_t v173 = v45;
                while (1)
                {
                  if (v48 >= *(void *)(v45 + 16))
                  {
                    __break(1u);
LABEL_89:
                    __break(1u);
LABEL_90:
                    __break(1u);
LABEL_91:
                    __break(1u);
LABEL_92:
                    __break(1u);
LABEL_93:
                    __break(1u);
LABEL_94:
                    __break(1u);
LABEL_95:
                    __break(1u);
LABEL_96:
                    __break(1u);
                    goto LABEL_97;
                  }
                  uint64_t v52 = v172;
                  sub_1C1F153E4(v174 + *(void *)(v179 + 72) * v48, v172, (uint64_t (*)(void))sub_1C1F163DC);
                  uint64_t v53 = *(void *)(v52 + v175);
                  (*v171)(isUniquelyReferenced_nonNull_native, v52, v10);
                  unint64_t v31 = *(void *)(v53 + 16);
                  if (v31)
                  {
                    unint64_t v54 = (double *)(v53 + 32);
                    double v55 = 0.0;
                    uint64_t v56 = *(void *)(v53 + 16);
                    do
                    {
                      double v57 = *v54++;
                      double v55 = v55 + v57;
                      --v56;
                    }
                    while (v56);
                  }
                  else
                  {
                    double v55 = 0.0;
                  }
                  swift_bridgeObjectRelease();
                  swift_beginAccess();
                  uint64_t v58 = *v30;
                  uint64_t v59 = *(void *)(*v30 + 16);
                  if ((v177 & 1) == 0)
                  {
                    if (v59)
                    {
                      unint64_t v76 = sub_1C1F15128(isUniquelyReferenced_nonNull_native);
                      uint64_t v77 = *v33;
                      if (v78)
                      {
                        uint64_t v79 = *(void *)(v58 + 56) + 32 * v76;
                        uint64_t v80 = *(void *)(v79 + 16);
                        uint64_t v15 = *(char **)(v79 + 24);
                        uint64_t v81 = v166;
                        v77(v166, isUniquelyReferenced_nonNull_native, v10);
                        uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                        unint64_t v182 = *v30;
                        unint64_t v82 = v182;
                        *uint64_t v30 = 0x8000000000000000;
                        unint64_t v84 = sub_1C1F15128(v81);
                        uint64_t v85 = *(void *)(v82 + 16);
                        BOOL v86 = (v83 & 1) == 0;
                        uint64_t v87 = v85 + v86;
                        if (__OFADD__(v85, v86)) {
                          goto LABEL_94;
                        }
                        char v88 = v83;
                        if (*(void *)(v82 + 24) >= v87)
                        {
                          if (isUniquelyReferenced_nonNull_native)
                          {
                            dispatch_group_t v91 = (void *)v182;
                            if ((v83 & 1) == 0) {
                              goto LABEL_76;
                            }
                          }
                          else
                          {
                            sub_1C1FAD53C();
                            dispatch_group_t v91 = (void *)v182;
                            if ((v88 & 1) == 0) {
                              goto LABEL_76;
                            }
                          }
                        }
                        else
                        {
                          sub_1C1F1544C(v87, isUniquelyReferenced_nonNull_native);
                          unint64_t v89 = sub_1C1F15128(v166);
                          if ((v88 & 1) != (v90 & 1)) {
                            goto LABEL_103;
                          }
                          unint64_t v84 = v89;
                          dispatch_group_t v91 = (void *)v182;
                          if ((v88 & 1) == 0)
                          {
LABEL_76:
                            v91[(v84 >> 6) + 8] |= 1 << v84;
                            v77(v91[6] + *(void *)(v168 + 72) * v84, v166, v10);
                            uint64_t v125 = v91[7] + 32 * v84;
                            *(double *)uint64_t v125 = v55;
                            *(void *)(v125 + 8) = v31;
                            *(void *)(v125 + 16) = v80;
                            *(void *)(v125 + 24) = v15;
                            uint64_t v126 = v91[2];
                            BOOL v35 = __OFADD__(v126, 1);
                            uint64_t v127 = v126 + 1;
                            if (v35) {
                              goto LABEL_96;
                            }
                            v91[2] = v127;
LABEL_78:
                            *uint64_t v30 = (uint64_t)v91;
                            swift_bridgeObjectRelease();
                            unint64_t v51 = *v169;
                            (*v169)(v166, v10);
LABEL_79:
                            uint64_t v15 = v165;
                            goto LABEL_18;
                          }
                        }
                        uint64_t v118 = v91[7] + 32 * v84;
                        *(double *)uint64_t v118 = v55;
                        *(void *)(v118 + 8) = v31;
                        *(void *)(v118 + 16) = v80;
                        *(void *)(v118 + 24) = v15;
                        goto LABEL_78;
                      }
                    }
                    else
                    {
                      uint64_t v77 = *v33;
                    }
                    uint64_t v102 = v178;
                    v77(v178, isUniquelyReferenced_nonNull_native, v10);
                    uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                    unint64_t v182 = *v30;
                    unint64_t v103 = v182;
                    *uint64_t v30 = 0x8000000000000000;
                    unint64_t v105 = sub_1C1F15128(v102);
                    uint64_t v106 = *(void *)(v103 + 16);
                    BOOL v107 = (v104 & 1) == 0;
                    uint64_t v108 = v106 + v107;
                    if (__OFADD__(v106, v107)) {
                      goto LABEL_90;
                    }
                    char v109 = v104;
                    if (*(void *)(v103 + 24) >= v108)
                    {
                      if (isUniquelyReferenced_nonNull_native)
                      {
                        v112 = (void *)v182;
                        if ((v104 & 1) == 0) {
                          goto LABEL_68;
                        }
                      }
                      else
                      {
                        sub_1C1FAD53C();
                        v112 = (void *)v182;
                        if ((v109 & 1) == 0) {
                          goto LABEL_68;
                        }
                      }
                    }
                    else
                    {
                      sub_1C1F1544C(v108, isUniquelyReferenced_nonNull_native);
                      unint64_t v110 = sub_1C1F15128(v178);
                      if ((v109 & 1) != (v111 & 1))
                      {
LABEL_103:
                        sub_1C214BAB0();
                        __break(1u);
                        return;
                      }
                      unint64_t v105 = v110;
                      v112 = (void *)v182;
                      if ((v109 & 1) == 0)
                      {
LABEL_68:
                        v112[(v105 >> 6) + 8] |= 1 << v105;
                        v77(v112[6] + *(void *)(v168 + 72) * v105, v178, v10);
                        uint64_t v119 = v112[7] + 32 * v105;
                        *(double *)uint64_t v119 = v55;
                        *(void *)(v119 + 8) = v31;
                        *(void *)(v119 + 16) = 0;
                        *(void *)(v119 + 24) = 0;
                        uint64_t v120 = v112[2];
                        BOOL v35 = __OFADD__(v120, 1);
                        uint64_t v121 = v120 + 1;
                        if (v35) {
                          goto LABEL_91;
                        }
                        v112[2] = v121;
                        goto LABEL_70;
                      }
                    }
                    uint64_t v116 = v112[7] + 32 * v105;
                    *(double *)uint64_t v116 = v55;
                    *(void *)(v116 + 16) = 0;
                    *(void *)(v116 + 24) = 0;
                    *(void *)(v116 + 8) = v31;
LABEL_70:
                    *uint64_t v30 = (uint64_t)v112;
                    swift_bridgeObjectRelease();
                    unint64_t v51 = *v169;
                    (*v169)(v178, v10);
                    goto LABEL_18;
                  }
                  if (v59)
                  {
                    unint64_t v60 = sub_1C1F15128(isUniquelyReferenced_nonNull_native);
                    uint64_t v61 = *v33;
                    if (v62)
                    {
                      os_log_t v63 = (uint64_t *)(*(void *)(v58 + 56) + 32 * v60);
                      uint64_t v64 = *v63;
                      uint64_t v15 = (char *)v63[1];
                      uint64_t v65 = v167;
                      v61(v167, isUniquelyReferenced_nonNull_native, v10);
                      uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                      unint64_t v182 = *v30;
                      unint64_t v66 = v182;
                      *uint64_t v30 = 0x8000000000000000;
                      unint64_t v68 = sub_1C1F15128(v65);
                      uint64_t v69 = *(void *)(v66 + 16);
                      BOOL v70 = (v67 & 1) == 0;
                      uint64_t v71 = v69 + v70;
                      if (__OFADD__(v69, v70)) {
                        goto LABEL_93;
                      }
                      char v72 = v67;
                      if (*(void *)(v66 + 24) >= v71)
                      {
                        if (isUniquelyReferenced_nonNull_native)
                        {
                          id v75 = (void *)v182;
                          if ((v67 & 1) == 0) {
                            goto LABEL_72;
                          }
                        }
                        else
                        {
                          sub_1C1FAD53C();
                          id v75 = (void *)v182;
                          if ((v72 & 1) == 0) {
                            goto LABEL_72;
                          }
                        }
                      }
                      else
                      {
                        sub_1C1F1544C(v71, isUniquelyReferenced_nonNull_native);
                        unint64_t v73 = sub_1C1F15128(v167);
                        if ((v72 & 1) != (v74 & 1)) {
                          goto LABEL_103;
                        }
                        unint64_t v68 = v73;
                        id v75 = (void *)v182;
                        if ((v72 & 1) == 0)
                        {
LABEL_72:
                          v75[(v68 >> 6) + 8] |= 1 << v68;
                          v61(v75[6] + *(void *)(v168 + 72) * v68, v167, v10);
                          uint64_t v122 = v75[7] + 32 * v68;
                          *(void *)uint64_t v122 = v64;
                          *(void *)(v122 + 8) = v15;
                          *(double *)(v122 + 16) = v55;
                          *(void *)(v122 + 24) = v31;
                          uint64_t v123 = v75[2];
                          BOOL v35 = __OFADD__(v123, 1);
                          uint64_t v124 = v123 + 1;
                          if (v35) {
                            goto LABEL_95;
                          }
                          v75[2] = v124;
                          goto LABEL_74;
                        }
                      }
                      uint64_t v117 = v75[7] + 32 * v68;
                      *(void *)uint64_t v117 = v64;
                      *(void *)(v117 + 8) = v15;
                      *(double *)(v117 + 16) = v55;
                      *(void *)(v117 + 24) = v31;
LABEL_74:
                      *uint64_t v30 = (uint64_t)v75;
                      swift_bridgeObjectRelease();
                      unint64_t v51 = *v169;
                      (*v169)(v167, v10);
                      goto LABEL_79;
                    }
                  }
                  else
                  {
                    uint64_t v61 = *v33;
                  }
                  v61((uint64_t)v15, isUniquelyReferenced_nonNull_native, v10);
                  uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                  unint64_t v182 = *v30;
                  unint64_t v92 = v182;
                  *uint64_t v30 = 0x8000000000000000;
                  unint64_t v94 = sub_1C1F15128((uint64_t)v15);
                  uint64_t v95 = *(void *)(v92 + 16);
                  BOOL v96 = (v93 & 1) == 0;
                  uint64_t v97 = v95 + v96;
                  if (__OFADD__(v95, v96)) {
                    goto LABEL_89;
                  }
                  char v98 = v93;
                  if (*(void *)(v92 + 24) >= v97)
                  {
                    if (isUniquelyReferenced_nonNull_native)
                    {
                      v101 = (void *)v182;
                      if ((v93 & 1) == 0) {
                        goto LABEL_54;
                      }
                    }
                    else
                    {
                      sub_1C1FAD53C();
                      v101 = (void *)v182;
                      if ((v98 & 1) == 0) {
                        goto LABEL_54;
                      }
                    }
                  }
                  else
                  {
                    sub_1C1F1544C(v97, isUniquelyReferenced_nonNull_native);
                    unint64_t v99 = sub_1C1F15128((uint64_t)v15);
                    if ((v98 & 1) != (v100 & 1)) {
                      goto LABEL_103;
                    }
                    unint64_t v94 = v99;
                    v101 = (void *)v182;
                    if ((v98 & 1) == 0)
                    {
LABEL_54:
                      v101[(v94 >> 6) + 8] |= 1 << v94;
                      v61(v101[6] + *(void *)(v168 + 72) * v94, (uint64_t)v15, v10);
                      uint64_t v113 = v101[7] + 32 * v94;
                      *(void *)uint64_t v113 = 0;
                      *(void *)(v113 + 8) = 0;
                      *(double *)(v113 + 16) = v55;
                      *(void *)(v113 + 24) = v31;
                      uint64_t v114 = v101[2];
                      BOOL v35 = __OFADD__(v114, 1);
                      uint64_t v115 = v114 + 1;
                      if (v35) {
                        goto LABEL_92;
                      }
                      v101[2] = v115;
                      goto LABEL_17;
                    }
                  }
                  uint64_t v50 = v101[7] + 32 * v94;
                  *(void *)uint64_t v50 = 0;
                  *(void *)(v50 + 8) = 0;
                  *(double *)(v50 + 16) = v55;
                  *(void *)(v50 + 24) = v31;
LABEL_17:
                  *uint64_t v30 = (uint64_t)v101;
                  swift_bridgeObjectRelease();
                  unint64_t v51 = *v169;
                  (*v169)((uint64_t)v15, v10);
LABEL_18:
                  uint64_t isUniquelyReferenced_nonNull_native = v170;
                  unint64_t v31 = (unint64_t)v180;
                  uint64_t v33 = v181;
                  ++v48;
                  swift_endAccess();
                  v51(isUniquelyReferenced_nonNull_native, v10);
                  uint64_t v45 = v173;
                  if (v48 == v176)
                  {

                    goto LABEL_82;
                  }
                }
              }

LABEL_82:
              swift_bridgeObjectRelease();
              swift_release();
              unint64_t v32 = v164;
              unint64_t v31 = v150;
              if (v164 == v151) {
                goto LABEL_83;
              }
            }
LABEL_97:
            __break(1u);
LABEL_98:
            __break(1u);
LABEL_99:
            swift_bridgeObjectRetain();
            uint64_t v139 = sub_1C214B930();
            swift_bridgeObjectRelease();
            if (v139 != 2) {
              break;
            }
            swift_bridgeObjectRetain();
            uint64_t v140 = sub_1C214B930();
            swift_bridgeObjectRelease();
            uint64_t v151 = v140;
            if (!v140)
            {
LABEL_83:
              swift_bridgeObjectRelease();
              swift_beginAccess();
              uint64_t v128 = *v30;
              swift_bridgeObjectRetain();
              id v129 = v162;
              id v130 = objc_msgSend(v162, sel_startDate);
              uint64_t v131 = (uint64_t)v157;
              sub_1C2147A60();

              id v132 = objc_msgSend(v129, sel_endDate);
              uint64_t v133 = (uint64_t)v158;
              sub_1C2147A60();

              id v134 = objc_msgSend(v129, sel_statisticsInterval);
              uint64_t v135 = (uint64_t)v159;
              sub_1C2147620();

              v136 = v142;
              os_log_type_t v29 = sub_1C1F18D90(v128, v131, v133, v135);
              swift_bridgeObjectRelease();
              (*(void (**)(uint64_t, uint64_t))(v146 + 8))(v135, v161);
              v137 = *(void (**)(uint64_t, uint64_t))(v145 + 8);
              uint64_t v138 = v160;
              v137(v133, v160);
              v137(v131, v138);
              v149(v29, v147);

              goto LABEL_86;
            }
          }
        }
        swift_bridgeObjectRelease();
        os_log_type_t v29 = v142;
        v149(0, v147);
        goto LABEL_86;
      }
    }
    else
    {
      sub_1C1F13C24((uint64_t)v183, (uint64_t)&qword_1EBF0CB20, MEMORY[0x1E4FBC840] + 8, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C1F13D64);
    }
    v149(0, v147);
LABEL_86:
  }
}

unint64_t sub_1C1F15128(uint64_t a1)
{
  sub_1C21475B0();
  uint64_t v2 = (void (*)(uint64_t))MEMORY[0x1E4F26E60];
  sub_1C1F1539C(&qword_1EBF0B198, MEMORY[0x1E4F26E60]);
  uint64_t v3 = sub_1C214A550();
  return sub_1C1F151FC(a1, v3, MEMORY[0x1E4F26E60], (unint64_t *)&unk_1EBF0B1A0, v2, MEMORY[0x1E4F26E78]);
}

unint64_t sub_1C1F151FC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), unint64_t *a4, void (*a5)(uint64_t), uint64_t a6)
{
  uint64_t v24 = a5;
  uint64_t v25 = a6;
  uint64_t v23 = a4;
  v21[1] = a1;
  uint64_t v8 = a3(0);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)v21 - v10;
  uint64_t v22 = v6;
  uint64_t v12 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v13 = a2 & ~v12;
  v21[0] = v6 + 64;
  if ((*(void *)(v6 + 64 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    uint64_t v14 = ~v12;
    uint64_t v17 = *(void (**)(char *, unint64_t, uint64_t))(v9 + 16);
    uint64_t v16 = v9 + 16;
    uint64_t v15 = v17;
    uint64_t v18 = *(void *)(v16 + 56);
    do
    {
      v15(v11, *(void *)(v22 + 48) + v18 * v13, v8);
      sub_1C1F1539C(v23, v24);
      char v19 = sub_1C214A5A0();
      (*(void (**)(char *, uint64_t))(v16 - 8))(v11, v8);
      if (v19) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v14;
    }
    while (((*(void *)(v21[0] + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) != 0);
  }
  return v13;
}

uint64_t sub_1C1F1539C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C1F153E4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C1F1544C(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = sub_1C21475B0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  sub_1C1F158C4();
  int v47 = a2;
  uint64_t v10 = sub_1C214B950();
  uint64_t v11 = v10;
  if (*(void *)(v9 + 16))
  {
    uint64_t v41 = v2;
    uint64_t v12 = 1 << *(unsigned char *)(v9 + 32);
    uint64_t v13 = *(void *)(v9 + 64);
    id v43 = (void *)(v9 + 64);
    if (v12 < 64) {
      uint64_t v14 = ~(-1 << v12);
    }
    else {
      uint64_t v14 = -1;
    }
    unint64_t v15 = v14 & v13;
    int64_t v42 = (unint64_t)(v12 + 63) >> 6;
    uint64_t v44 = (void (**)(char *, unint64_t, uint64_t))(v6 + 16);
    unint64_t v48 = (void (**)(char *, unint64_t, uint64_t))(v6 + 32);
    uint64_t v16 = v10 + 64;
    uint64_t result = swift_retain();
    int64_t v18 = 0;
    uint64_t v49 = v8;
    uint64_t v50 = v5;
    uint64_t v45 = v9;
    for (i = v6; ; uint64_t v6 = i)
    {
      if (v15)
      {
        unint64_t v21 = __clz(__rbit64(v15));
        v15 &= v15 - 1;
        unint64_t v22 = v21 | (v18 << 6);
      }
      else
      {
        int64_t v23 = v18 + 1;
        if (__OFADD__(v18, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v23 >= v42) {
          goto LABEL_34;
        }
        unint64_t v24 = v43[v23];
        ++v18;
        if (!v24)
        {
          int64_t v18 = v23 + 1;
          if (v23 + 1 >= v42) {
            goto LABEL_34;
          }
          unint64_t v24 = v43[v18];
          if (!v24)
          {
            int64_t v25 = v23 + 2;
            if (v25 >= v42)
            {
LABEL_34:
              swift_release();
              uint64_t v3 = v41;
              if (v47)
              {
                uint64_t v40 = 1 << *(unsigned char *)(v9 + 32);
                if (v40 >= 64) {
                  bzero(v43, ((unint64_t)(v40 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *id v43 = -1 << v40;
                }
                *(void *)(v9 + 16) = 0;
              }
              break;
            }
            unint64_t v24 = v43[v25];
            if (!v24)
            {
              while (1)
              {
                int64_t v18 = v25 + 1;
                if (__OFADD__(v25, 1)) {
                  goto LABEL_41;
                }
                if (v18 >= v42) {
                  goto LABEL_34;
                }
                unint64_t v24 = v43[v18];
                ++v25;
                if (v24) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v18 = v25;
          }
        }
LABEL_21:
        unint64_t v15 = (v24 - 1) & v24;
        unint64_t v22 = __clz(__rbit64(v24)) + (v18 << 6);
      }
      uint64_t v26 = *(void *)(v6 + 72);
      unint64_t v27 = *(void *)(v9 + 48) + v26 * v22;
      if (v47) {
        (*v48)(v49, v27, v50);
      }
      else {
        (*v44)(v49, v27, v50);
      }
      uint64_t v28 = (uint64_t *)(*(void *)(v9 + 56) + 32 * v22);
      uint64_t v29 = v28[3];
      uint64_t v30 = v28[2];
      uint64_t v31 = v28[1];
      uint64_t v32 = *v28;
      sub_1C1F1587C(&qword_1EBF0B198, MEMORY[0x1E4F26E60]);
      uint64_t result = sub_1C214A550();
      uint64_t v33 = -1 << *(unsigned char *)(v11 + 32);
      unint64_t v34 = result & ~v33;
      unint64_t v35 = v34 >> 6;
      if (((-1 << v34) & ~*(void *)(v16 + 8 * (v34 >> 6))) != 0)
      {
        unint64_t v19 = __clz(__rbit64((-1 << v34) & ~*(void *)(v16 + 8 * (v34 >> 6)))) | v34 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v36 = 0;
        unint64_t v37 = (unint64_t)(63 - v33) >> 6;
        do
        {
          if (++v35 == v37 && (v36 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v38 = v35 == v37;
          if (v35 == v37) {
            unint64_t v35 = 0;
          }
          v36 |= v38;
          uint64_t v39 = *(void *)(v16 + 8 * v35);
        }
        while (v39 == -1);
        unint64_t v19 = __clz(__rbit64(~v39)) + (v35 << 6);
      }
      *(void *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v48)(*(void *)(v11 + 48) + v26 * v19, v49, v50);
      uint64_t v20 = (void *)(*(void *)(v11 + 56) + 32 * v19);
      *uint64_t v20 = v32;
      v20[1] = v31;
      v20[2] = v30;
      v20[3] = v29;
      ++*(void *)(v11 + 16);
      uint64_t v9 = v45;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v11;
  return result;
}

uint64_t sub_1C1F1587C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C1F158C4()
{
  if (!qword_1EBF0B4D8)
  {
    sub_1C21475B0();
    sub_1C1F1587C(&qword_1EBF0B198, MEMORY[0x1E4F26E60]);
    unint64_t v0 = sub_1C214B980();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBF0B4D8);
    }
  }
}

uint64_t sub_1C1F15960(uint64_t a1, uint64_t a2)
{
  sub_1C1F163DC();
  uint64_t v56 = v4;
  uint64_t v55 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1C21475B0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  unint64_t v73 = (char *)v53 - v12;
  sub_1C1F171E8(0, (unint64_t *)&unk_1EBF0B1B0, MEMORY[0x1E4F26E60], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v13 - 8);
  unint64_t v15 = (char *)v53 - v14;
  sub_1C1F10AAC(0, &qword_1EBF0B1F8, MEMORY[0x1E4F27928]);
  uint64_t v74 = v16;
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = MEMORY[0x1F4188790](v16);
  uint64_t v70 = (uint64_t)v53 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  unint64_t v21 = (char *)v53 - v20;
  uint64_t v75 = *(void *)(a2 + 16);
  if (!v75) {
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v69 = a2 + ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80));
  sub_1C1F16090(v69, (uint64_t)v53 - v20);
  uint64_t v65 = *(void *)(a1 + 16);
  if (v65)
  {
    uint64_t v68 = v17;
    unint64_t v24 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
    uint64_t v23 = v8 + 16;
    unint64_t v22 = v24;
    uint64_t v64 = a1 + ((*(unsigned __int8 *)(v23 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 64));
    uint64_t v63 = *(void *)(v23 + 56);
    unint64_t v60 = (void (**)(char *, char *, uint64_t))(v23 + 16);
    uint64_t v61 = (unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 32);
    uint64_t v25 = a1;
    uint64_t v26 = (void (**)(char *, uint64_t))(v23 - 8);
    v53[2] = v25;
    swift_bridgeObjectRetain();
    uint64_t v27 = 0;
    uint64_t v28 = 0;
    char v62 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 40);
    v53[1] = (v23 + 40) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    uint64_t v57 = (v23 - 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    unint64_t v29 = MEMORY[0x1E4FBC860];
    uint64_t v71 = v7;
    char v72 = (void (*)(char *, char *, uint64_t))v24;
    uint64_t v59 = v15;
    unint64_t v54 = v6;
    while (1)
    {
      uint64_t v66 = v28;
      unint64_t v67 = v29;
      v22(v15, v64 + v63 * v28, v7);
      uint64_t v32 = *v62;
      (*v62)(v15, 0, 1, v7);
      if ((*v61)(v15, 1, v7) == 1) {
        goto LABEL_33;
      }
      uint64_t v58 = v32;
      uint64_t v33 = v73;
      (*v60)(v73, v15, v7);
      v22(v11, (uint64_t)v33, v7);
      if (v27 >= v75)
      {
        int64_t v42 = *v26;
        unint64_t v35 = (void *)MEMORY[0x1E4FBC860];
        (*v26)(v11, v7);
LABEL_23:
        if (v35[2])
        {
LABEL_24:
          uint64_t v49 = *(int *)(v56 + 48);
          v72(v6, v73, v7);
          *(void *)&v6[v49] = v35;
          unint64_t v29 = v67;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v29 = sub_1C1F16470(0, *(void *)(v29 + 16) + 1, 1, v29);
          }
          unint64_t v51 = *(void *)(v29 + 16);
          unint64_t v50 = *(void *)(v29 + 24);
          if (v51 >= v50 >> 1) {
            unint64_t v29 = sub_1C1F16470(v50 > 1, v51 + 1, 1, v29);
          }
          *(void *)(v29 + 16) = v51 + 1;
          sub_1C1F16378((uint64_t)v6, v29+ ((*(unsigned __int8 *)(v55 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v55 + 80))+ *(void *)(v55 + 72) * v51);
          uint64_t v7 = v71;
          goto LABEL_5;
        }
      }
      else
      {
        uint64_t v34 = v23;
        unint64_t v35 = (void *)MEMORY[0x1E4FBC860];
        while (1)
        {
          char v41 = sub_1C21475A0();
          int64_t v42 = *v26;
          (*v26)(v11, v7);
          if ((v41 & 1) == 0) {
            break;
          }
          uint64_t v43 = *(int *)(v74 + 48);
          uint64_t v44 = *(void *)&v21[v43];
          uint64_t result = swift_isUniquelyReferenced_nonNull_native();
          if ((result & 1) == 0)
          {
            uint64_t result = (uint64_t)sub_1C1F16110(0, v35[2] + 1, 1, v35);
            unint64_t v35 = (void *)result;
          }
          unint64_t v47 = v35[2];
          unint64_t v46 = v35[3];
          if (v47 >= v46 >> 1)
          {
            uint64_t result = (uint64_t)sub_1C1F16110((void *)(v46 > 1), v47 + 1, 1, v35);
            unint64_t v35 = (void *)result;
          }
          v35[2] = v47 + 1;
          v35[v47 + 4] = v44;
          uint64_t v48 = v27 + 1;
          uint64_t v40 = v75;
          if (v27 + 1 < v75)
          {
            if (v27 < -1)
            {
              __break(1u);
              return result;
            }
            uint64_t v36 = v70;
            sub_1C1F16090(v69 + *(void *)(v68 + 72) * v48, v70);
            uint64_t v37 = *(void *)(v36 + *(int *)(v74 + 48));
            uint64_t v38 = sub_1C2147AC0();
            uint64_t v39 = v36;
            uint64_t v40 = v75;
            (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v38 - 8) + 40))(v21, v39, v38);
            *(void *)&v21[v43] = v37;
          }
          uint64_t v7 = v71;
          v72(v11, v73, v71);
          ++v27;
          if (v40 == v48)
          {
            uint64_t v27 = v40;
            uint64_t v23 = v34;
            uint64_t v6 = v54;
            v42(v11, v7);
            goto LABEL_23;
          }
        }
        uint64_t v23 = v34;
        uint64_t v6 = v54;
        if (v35[2]) {
          goto LABEL_24;
        }
      }
      swift_bridgeObjectRelease();
      unint64_t v29 = v67;
LABEL_5:
      uint64_t v30 = v66 + 1;
      v42(v73, v7);
      uint64_t v28 = v30;
      BOOL v31 = v30 == v65;
      unint64_t v15 = v59;
      unint64_t v22 = (void (*)(char *, uint64_t, uint64_t))v72;
      if (v31)
      {
        unint64_t v67 = v29;
        v58(v59, 1, 1, v7);
        goto LABEL_33;
      }
    }
  }
  uint64_t v52 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
  swift_bridgeObjectRetain();
  unint64_t v67 = MEMORY[0x1E4FBC860];
  v52(v15, 1, 1, v7);
LABEL_33:
  swift_bridgeObjectRelease();
  sub_1C1F18CA0((uint64_t)v21);
  return v67;
}

uint64_t sub_1C1F16090(uint64_t a1, uint64_t a2)
{
  sub_1C1F10AAC(0, &qword_1EBF0B1F8, MEMORY[0x1E4F27928]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void *sub_1C1F16110(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1C1F16240(0, &qword_1EBF0B518, MEMORY[0x1E4FBB3D0], MEMORY[0x1E4FBBE00]);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1C1F1628C(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void sub_1C1F16240(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

char *sub_1C1F1628C(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + 8 * a1 + 32);
    size_t v6 = 8 * v4;
    uint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)sub_1C214B990();
  __break(1u);
  return result;
}

uint64_t sub_1C1F16378(uint64_t a1, uint64_t a2)
{
  sub_1C1F163DC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1C1F163DC()
{
  if (!qword_1EBF0B1C0)
  {
    sub_1C21475B0();
    sub_1C1F16240(255, &qword_1EBF0B4A8, MEMORY[0x1E4FBB3D0], MEMORY[0x1E4FBB320]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EBF0B1C0);
    }
  }
}

uint64_t sub_1C1F16470(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1C1F16EE8(a1, a2, a3, a4, &qword_1EBF0B4F0, (uint64_t (*)(uint64_t))sub_1C1F163DC, (uint64_t (*)(void))sub_1C1F163DC, (uint64_t (*)(void))sub_1C1F163DC);
}

unint64_t sub_1C1F164B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v88 = a2;
  uint64_t v72 = sub_1C21497F0();
  uint64_t v71 = *(void *)(v72 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v72);
  uint64_t v77 = (char *)&v68 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v70 = (char *)&v68 - v9;
  uint64_t v82 = sub_1C21475B0();
  uint64_t v87 = *(void *)(v82 - 8);
  MEMORY[0x1F4188790](v82);
  char v90 = (char *)&v68 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1F171E8(0, &qword_1EBF0B1F0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  uint64_t v12 = MEMORY[0x1F4188790](v11 - 8);
  uint64_t v14 = (char *)&v68 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&v68 - v15;
  uint64_t v17 = sub_1C2147AC0();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = MEMORY[0x1F4188790](v17);
  char v78 = (char *)&v68 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = MEMORY[0x1F4188790](v19);
  uint64_t v81 = (char *)&v68 - v22;
  uint64_t v23 = MEMORY[0x1F4188790](v21);
  uint64_t v80 = (char *)&v68 - v24;
  uint64_t v25 = MEMORY[0x1F4188790](v23);
  unint64_t v89 = (char *)&v68 - v26;
  uint64_t v27 = MEMORY[0x1F4188790](v25);
  unint64_t v29 = (char *)&v68 - v28;
  MEMORY[0x1F4188790](v27);
  BOOL v31 = (char *)&v68 - v30;
  uint64_t v86 = a3;
  uint64_t v83 = a4;
  sub_1C1F17520(a1, a3, (uint64_t)v16);
  unint64_t v84 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48);
  uint64_t v85 = v18 + 48;
  if (v84(v16, 1, v17) != 1)
  {
    uint64_t v43 = *(void (**)(char *, char *, uint64_t))(v18 + 32);
    v43(v31, v16, v17);
    uint64_t v44 = v18;
    unint64_t v47 = *(void (**)(char *, char *, uint64_t))(v18 + 16);
    unint64_t v46 = (char *)(v18 + 16);
    uint64_t v45 = v47;
    v47(v29, v31, v17);
    char v48 = sub_1C2147A20();
    uint64_t v69 = v44;
    if (v48)
    {
      unint64_t v76 = v45;
      uint64_t v77 = v46;
      uint64_t v74 = v87 + 32;
      unint64_t v73 = (void (**)(char *, char *, char *))(v44 + 40);
      unint64_t v49 = MEMORY[0x1E4FBC860];
      char v78 = (char *)v17;
      uint64_t v79 = v31;
      uint64_t v75 = v14;
      unint64_t v50 = v89;
      while (1)
      {
        sub_1C2147C80();
        if (v84(v14, 1, v17) == 1) {
          break;
        }
        v43(v50, v14, v17);
        unint64_t v51 = v76;
        ((void (*)(char *))v76)(v80);
        v51(v81, v50, v17);
        sub_1C2147580();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v49 = sub_1C1F174D8(0, *(void *)(v49 + 16) + 1, 1, v49);
        }
        unint64_t v53 = *(void *)(v49 + 16);
        unint64_t v52 = *(void *)(v49 + 24);
        if (v53 >= v52 >> 1) {
          unint64_t v49 = sub_1C1F174D8(v52 > 1, v53 + 1, 1, v49);
        }
        *(void *)(v49 + 16) = v53 + 1;
        (*(void (**)(unint64_t, char *, uint64_t))(v87 + 32))(v49+ ((*(unsigned __int8 *)(v87 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v87 + 80))+ *(void *)(v87 + 72) * v53, v90, v82);
        uint64_t v17 = (uint64_t)v78;
        (*v73)(v29, v89, v78);
        char v54 = sub_1C2147A20();
        BOOL v31 = v79;
        uint64_t v14 = v75;
        if ((v54 & 1) == 0) {
          goto LABEL_19;
        }
      }
      sub_1C1F394F8((uint64_t)v14);
      uint64_t v55 = v70;
      sub_1C21497D0();
      uint64_t v56 = sub_1C21497E0();
      os_log_type_t v57 = sub_1C214ABD0();
      if (os_log_type_enabled(v56, v57))
      {
        uint64_t v58 = v17;
        uint64_t v59 = swift_slowAlloc();
        uint64_t v60 = swift_slowAlloc();
        v93[0] = v60;
        *(_DWORD *)uint64_t v59 = 136315394;
        uint64_t v61 = sub_1C214BC10();
        v92[0] = sub_1C1F6FD54(v61, v62, v93);
        sub_1C214B530();
        swift_bridgeObjectRelease();
        *(_WORD *)(v59 + 12) = 2080;
        swift_beginAccess();
        sub_1C1F17D6C(&qword_1EA2C74F0, MEMORY[0x1E4F27928]);
        uint64_t v63 = sub_1C214BA40();
        uint64_t v91 = sub_1C1F6FD54(v63, v64, v93);
        sub_1C214B530();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1C1F0B000, v56, v57, "<%s> Failed to add interval to current start date %s", (uint8_t *)v59, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1C8754730](v60, -1, -1);
        MEMORY[0x1C8754730](v59, -1, -1);

        (*(void (**)(char *, uint64_t))(v71 + 8))(v55, v72);
        uint64_t v65 = *(void (**)(char *, uint64_t))(v69 + 8);
        v65(v79, v58);
        v65(v29, v58);
        return v49;
      }

      (*(void (**)(char *, uint64_t))(v71 + 8))(v55, v72);
    }
    else
    {
      unint64_t v49 = MEMORY[0x1E4FBC860];
    }
LABEL_19:
    uint64_t v66 = *(void (**)(char *, uint64_t))(v69 + 8);
    v66(v31, v17);
    v66(v29, v17);
    return v49;
  }
  sub_1C1F394F8((uint64_t)v16);
  uint64_t v32 = v77;
  sub_1C21497D0();
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v78, a1, v17);
  uint64_t v33 = sub_1C21497E0();
  os_log_type_t v34 = sub_1C214ABD0();
  if (os_log_type_enabled(v33, v34))
  {
    uint64_t v35 = v17;
    uint64_t v36 = swift_slowAlloc();
    char v90 = (char *)swift_slowAlloc();
    v92[0] = (uint64_t)v90;
    *(_DWORD *)uint64_t v36 = 136315394;
    uint64_t v37 = sub_1C214BC10();
    v93[0] = sub_1C1F6FD54(v37, v38, v92);
    sub_1C214B530();
    swift_bridgeObjectRelease();
    *(_WORD *)(v36 + 12) = 2080;
    sub_1C1F17D6C(&qword_1EA2C74F0, MEMORY[0x1E4F27928]);
    uint64_t v39 = v78;
    uint64_t v40 = sub_1C214BA40();
    v93[0] = sub_1C1F6FD54(v40, v41, v92);
    sub_1C214B530();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v39, v35);
    _os_log_impl(&dword_1C1F0B000, v33, v34, "<%s> Failed to strip date of unrelated components %s", (uint8_t *)v36, 0x16u);
    int64_t v42 = v90;
    swift_arrayDestroy();
    MEMORY[0x1C8754730](v42, -1, -1);
    MEMORY[0x1C8754730](v36, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v18 + 8))(v78, v17);
  }

  (*(void (**)(char *, uint64_t))(v71 + 8))(v32, v72);
  return MEMORY[0x1E4FBC860];
}

uint64_t sub_1C1F16EE8(char a1, int64_t a2, char a3, unint64_t a4, unint64_t *a5, uint64_t (*a6)(uint64_t), uint64_t (*a7)(void), uint64_t (*a8)(void))
{
  if (a3)
  {
    unint64_t v12 = *(void *)(a4 + 24);
    uint64_t v13 = v12 >> 1;
    if ((uint64_t)(v12 >> 1) < a2)
    {
      if (v13 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v13 = v12 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v12 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v13 = a2;
      }
    }
  }
  else
  {
    uint64_t v13 = a2;
  }
  uint64_t v14 = *(void *)(a4 + 16);
  if (v13 <= v14) {
    uint64_t v15 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v15 = v13;
  }
  if (!v15)
  {
    uint64_t v19 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_19;
  }
  sub_1C1F17184(0, a5, a6, MEMORY[0x1E4FBBE00]);
  uint64_t v16 = *(void *)(a7(0) - 8);
  uint64_t v17 = *(void *)(v16 + 72);
  unint64_t v18 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  uint64_t v19 = (void *)swift_allocObject();
  size_t v20 = _swift_stdlib_malloc_size(v19);
  if (!v17 || (v20 - v18 == 0x8000000000000000 ? (BOOL v21 = v17 == -1) : (BOOL v21 = 0), v21))
  {
LABEL_29:
    uint64_t result = sub_1C214B900();
    __break(1u);
    return result;
  }
  v19[2] = v14;
  v19[3] = 2 * ((uint64_t)(v20 - v18) / v17);
LABEL_19:
  uint64_t v22 = *(void *)(a7(0) - 8);
  unint64_t v23 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  unint64_t v24 = (unint64_t)v19 + v23;
  if (a1)
  {
    if ((unint64_t)v19 < a4 || v24 >= a4 + v23 + *(void *)(v22 + 72) * v14)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v19 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_1C1F17E48(0, v14, v24, a4, a8);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v19;
}

void sub_1C1F17184(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1C1F171E8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1C1F1724C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1C1F172B0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C214B4F0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1C1F17304(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1C1F17368(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C214B4F0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1C1F173BC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1C1F17420(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1C1F17484(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C214B4F0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1C1F174D8(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1C1F16EE8(a1, a2, a3, a4, &qword_1EBF0B4E8, MEMORY[0x1E4F26E60], MEMORY[0x1E4F26E60], MEMORY[0x1E4F26E60]);
}

uint64_t sub_1C1F17520@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v31 = a1;
  uint64_t v32 = a3;
  unint64_t v4 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C1F171E8(0, &qword_1EBF0B220, MEMORY[0x1E4F27D68], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v29 - v6;
  sub_1C1F171E8(0, (unint64_t *)&unk_1EBF0B210, MEMORY[0x1E4F27CA0], v4);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v29 - v9;
  uint64_t v11 = sub_1C21476D0();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1C2147CF0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v10, 1, 1, v15);
  uint64_t v16 = sub_1C2147D30();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v7, 1, 1, v16);
  sub_1C21476B0();
  LOBYTE(v10) = MEMORY[0x1C874F790](a2, v14);
  unint64_t v29 = *(void (**)(char *, uint64_t))(v12 + 8);
  uint64_t v30 = v11;
  v29(v14, v11);
  sub_1C1F171E8(0, &qword_1EBF0B508, MEMORY[0x1E4F27C88], MEMORY[0x1E4FBBE00]);
  uint64_t v17 = sub_1C2147CD0();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(void *)(v18 + 72);
  unint64_t v20 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  BOOL v21 = (void (**)(unint64_t, void, uint64_t))(v18 + 104);
  uint64_t v22 = 2 * v19;
  uint64_t v23 = swift_allocObject();
  if (v10)
  {
    *(_OWORD *)(v23 + 16) = xmmword_1C2152C90;
    unint64_t v24 = v23 + v20;
    uint64_t v25 = *v21;
    (*v21)(v24, *MEMORY[0x1E4F27C20], v17);
    v25(v24 + v19, *MEMORY[0x1E4F27C30], v17);
    v25(v24 + v22, *MEMORY[0x1E4F27BF0], v17);
    v25(v24 + 3 * v19, *MEMORY[0x1E4F27C10], v17);
  }
  else
  {
    *(_OWORD *)(v23 + 16) = xmmword_1C2150000;
    unint64_t v26 = v23 + v20;
    uint64_t v27 = *v21;
    (*v21)(v26, *MEMORY[0x1E4F27C20], v17);
    v27(v26 + v19, *MEMORY[0x1E4F27C30], v17);
    v27(v26 + v22, *MEMORY[0x1E4F27BF0], v17);
  }
  sub_1C1F17A58(v23);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  sub_1C2147BF0();
  swift_bridgeObjectRelease();
  sub_1C2147C70();
  return ((uint64_t (*)(char *, uint64_t))v29)(v14, v30);
}

uint64_t sub_1C1F17A58(uint64_t a1)
{
  uint64_t v2 = sub_1C2147CD0();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v37 = (char *)&v30 - v7;
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    sub_1C1F17DB4();
    uint64_t v9 = sub_1C214B7A0();
    uint64_t v10 = 0;
    uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    uint64_t v35 = v12;
    uint64_t v36 = v9 + 56;
    uint64_t v13 = *(unsigned __int8 *)(v11 + 64);
    uint64_t v32 = v8;
    uint64_t v33 = a1 + ((v13 + 32) & ~v13);
    uint64_t v14 = *(void *)(v11 + 56);
    uint64_t v15 = (void (**)(char *, uint64_t))(v11 - 8);
    uint64_t v31 = (uint64_t (**)(unint64_t, char *, uint64_t))(v11 + 16);
    while (1)
    {
      uint64_t v34 = v10;
      v35(v37, v33 + v14 * v10, v2);
      sub_1C1F17D6C(&qword_1EBF0B200, MEMORY[0x1E4F27C88]);
      uint64_t v16 = sub_1C214A550();
      uint64_t v17 = ~(-1 << *(unsigned char *)(v9 + 32));
      unint64_t v18 = v16 & v17;
      unint64_t v19 = (v16 & (unint64_t)v17) >> 6;
      uint64_t v20 = *(void *)(v36 + 8 * v19);
      uint64_t v21 = 1 << (v16 & v17);
      if ((v21 & v20) != 0)
      {
        while (1)
        {
          uint64_t v22 = v11;
          v35(v6, *(void *)(v9 + 48) + v18 * v14, v2);
          sub_1C1F17D6C(&qword_1EBF0B208, MEMORY[0x1E4F27C88]);
          char v23 = sub_1C214A5A0();
          unint64_t v24 = *v15;
          (*v15)(v6, v2);
          if (v23) {
            break;
          }
          unint64_t v18 = (v18 + 1) & v17;
          unint64_t v19 = v18 >> 6;
          uint64_t v20 = *(void *)(v36 + 8 * (v18 >> 6));
          uint64_t v21 = 1 << v18;
          uint64_t v11 = v22;
          if ((v20 & (1 << v18)) == 0) {
            goto LABEL_8;
          }
        }
        v24(v37, v2);
        uint64_t v11 = v22;
      }
      else
      {
LABEL_8:
        uint64_t v25 = v37;
        *(void *)(v36 + 8 * v19) = v21 | v20;
        uint64_t result = (*v31)(*(void *)(v9 + 48) + v18 * v14, v25, v2);
        uint64_t v27 = *(void *)(v9 + 16);
        BOOL v28 = __OFADD__(v27, 1);
        uint64_t v29 = v27 + 1;
        if (v28)
        {
          __break(1u);
          return result;
        }
        *(void *)(v9 + 16) = v29;
      }
      uint64_t v10 = v34 + 1;
      if (v34 + 1 == v32) {
        return v9;
      }
    }
  }
  return MEMORY[0x1E4FBC870];
}

uint64_t sub_1C1F17D6C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C1F17DB4()
{
  if (!qword_1EBF0B4D0)
  {
    sub_1C2147CD0();
    sub_1C1F17D6C(&qword_1EBF0B200, MEMORY[0x1E4F27C88]);
    unint64_t v0 = sub_1C214B7B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBF0B4D0);
    }
  }
}

uint64_t sub_1C1F17E48(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = *(void *)(a5(0) - 8);
    uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    unint64_t v12 = v10 + v11 * a1;
    unint64_t v13 = a3 + v11 * v5;
    if (v12 >= v13 || v12 + v11 * v5 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  uint64_t result = sub_1C214B990();
  __break(1u);
  return result;
}

uint64_t sub_1C1F17FA4(uint64_t a1, uint64_t a2)
{
  sub_1C1F13D64(0, (unint64_t *)&qword_1EBF0CB20, MEMORY[0x1E4FBC840] + 8, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

id sub_1C1F18030(NSObject *a1, uint64_t a2, void *a3)
{
  id v83 = a3;
  uint64_t v100 = a2;
  os_log_t v91 = a1;
  uint64_t v3 = sub_1C21497F0();
  uint64_t v85 = *(void *)(v3 - 8);
  uint64_t v86 = v3;
  MEMORY[0x1F4188790](v3);
  BOOL v96 = (char *)&v79 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C1F18C18(0, &qword_1EBF0B1F0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v90 = (uint64_t)&v79 - v7;
  uint64_t v8 = sub_1C2147AC0();
  uint64_t v88 = *(void *)(v8 - 8);
  uint64_t v89 = v8;
  uint64_t v9 = MEMORY[0x1F4188790](v8);
  uint64_t v87 = (char *)&v79 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v82 = (char *)&v79 - v11;
  uint64_t v12 = sub_1C2147CF0();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v97 = (char *)&v79 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1F18C18(0, &qword_1EBF0B220, MEMORY[0x1E4F27D68], v5);
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v17 = (char *)&v79 - v16;
  sub_1C1F18C18(0, (unint64_t *)&unk_1EBF0B210, MEMORY[0x1E4F27CA0], v5);
  MEMORY[0x1F4188790](v18 - 8);
  uint64_t v20 = (char *)&v79 - v19;
  uint64_t v101 = sub_1C21476D0();
  uint64_t v21 = *(void *)(v101 - 8);
  uint64_t v22 = MEMORY[0x1F4188790](v101);
  uint64_t v95 = (char *)&v79 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = MEMORY[0x1F4188790](v22);
  unint64_t v99 = (char *)&v79 - v25;
  MEMORY[0x1F4188790](v24);
  uint64_t v27 = (char *)&v79 - v26;
  uint64_t v94 = v13;
  BOOL v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56);
  uint64_t v98 = v12;
  uint64_t v80 = v28;
  v28(v20, 1, 1, v12);
  uint64_t v29 = sub_1C2147D30();
  uint64_t v30 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56);
  v30(v17, 1, 1, v29);
  uint64_t v31 = v17;
  sub_1C21476B0();
  LOBYTE(v17) = MEMORY[0x1C874F790](v100, v27);
  unint64_t v92 = *(void (**)(char *, uint64_t))(v21 + 8);
  uint64_t v93 = v21 + 8;
  v92(v27, v101);
  uint64_t v81 = v21;
  if (v17)
  {
    uint64_t v32 = v100;
    (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v99, v100, v101);
    uint64_t v33 = v96;
    uint64_t v34 = v97;
    uint64_t v36 = v88;
    uint64_t v35 = v89;
    uint64_t v37 = v87;
    unint64_t v38 = v95;
  }
  else
  {
    v80(v20, 1, 1, v98);
    v30(v31, 1, 1, v29);
    sub_1C21476B0();
    uint64_t v33 = v96;
    uint64_t v34 = v97;
    uint64_t v36 = v88;
    uint64_t v35 = v89;
    uint64_t v37 = v87;
    unint64_t v38 = v95;
    uint64_t v32 = v100;
  }
  sub_1C2147CB0();
  type metadata accessor for MedicationChartStatisticsFormatter();
  uint64_t v39 = v90;
  os_log_t v40 = v91;
  sub_1C1F17520((uint64_t)v91, v32, v90);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v36 + 48))(v39, 1, v35) == 1)
  {
    sub_1C1F13C24(v39, (uint64_t)&qword_1EBF0B1F0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C1F18C18);
    sub_1C21497A0();
    (*(void (**)(char *, os_log_t, uint64_t))(v36 + 16))(v37, v40, v35);
    (*(void (**)(char *, uint64_t, uint64_t))(v81 + 16))(v38, v32, v101);
    id v41 = v84;
    int64_t v42 = sub_1C21497E0();
    os_log_type_t v43 = sub_1C214ABD0();
    int v44 = v43;
    BOOL v45 = os_log_type_enabled(v42, v43);
    uint64_t v46 = v98;
    if (v45)
    {
      uint64_t v47 = swift_slowAlloc();
      uint64_t v100 = swift_slowAlloc();
      v103[0] = v100;
      *(_DWORD *)uint64_t v47 = 136446722;
      os_log_t v91 = v42;
      id v48 = v41;
      id v49 = objc_msgSend(v48, sel_description);
      uint64_t v50 = sub_1C214A5F0();
      LODWORD(v90) = v44;
      unint64_t v51 = v37;
      uint64_t v52 = v35;
      uint64_t v53 = v50;
      uint64_t v54 = v101;
      unint64_t v56 = v55;

      uint64_t v102 = sub_1C1F6FD54(v53, v56, v103);
      sub_1C214B530();

      swift_bridgeObjectRelease();
      *(_WORD *)(v47 + 12) = 2082;
      sub_1C1F0FAC8(&qword_1EA2C74F0, MEMORY[0x1E4F27928]);
      uint64_t v57 = sub_1C214BA40();
      uint64_t v102 = sub_1C1F6FD54(v57, v58, v103);
      sub_1C214B530();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v36 + 8))(v51, v52);
      *(_WORD *)(v47 + 22) = 2082;
      sub_1C1F0FAC8(&qword_1EA2C74F8, MEMORY[0x1E4F26F90]);
      uint64_t v59 = v95;
      uint64_t v60 = sub_1C214BA40();
      uint64_t v102 = sub_1C1F6FD54(v60, v61, v103);
      sub_1C214B530();
      swift_bridgeObjectRelease();
      unint64_t v62 = v92;
      v92(v59, v54);
      os_log_t v63 = v91;
      _os_log_impl(&dword_1C1F0B000, v91, (os_log_type_t)v90, "[%{public}s] Could not generate anchor date for start date with statistic interval <%{public}s %{public}s>", (uint8_t *)v47, 0x20u);
      uint64_t v64 = v100;
      swift_arrayDestroy();
      MEMORY[0x1C8754730](v64, -1, -1);
      MEMORY[0x1C8754730](v47, -1, -1);

      (*(void (**)(char *, uint64_t))(v85 + 8))(v96, v86);
      (*(void (**)(char *, uint64_t))(v94 + 8))(v97, v98);
      v62(v99, v54);
    }
    else
    {

      uint64_t v75 = v38;
      uint64_t v76 = v101;
      uint64_t v77 = v92;
      v92(v75, v101);
      (*(void (**)(char *, uint64_t))(v36 + 8))(v37, v35);

      (*(void (**)(char *, uint64_t))(v85 + 8))(v33, v86);
      (*(void (**)(char *, uint64_t))(v94 + 8))(v34, v46);
      v77(v99, v76);
    }
    return 0;
  }
  else
  {
    uint64_t v65 = v82;
    (*(void (**)(char *, uint64_t, uint64_t))(v36 + 32))(v82, v39, v35);
    id v66 = objc_msgSend(self, sel_medicationDoseEventType);
    id v67 = objc_allocWithZone(MEMORY[0x1E4F2B5C8]);
    id v68 = v83;
    uint64_t v69 = v36;
    uint64_t v70 = v35;
    uint64_t v71 = (void *)sub_1C2147A00();
    uint64_t v72 = v99;
    unint64_t v73 = (void *)sub_1C2147600();
    id v74 = objc_msgSend(v67, sel_initWithSampleType_samplePredicate_options_anchorDate_intervalComponents_, v66, v68, 16, v71, v73);

    (*(void (**)(char *, uint64_t))(v69 + 8))(v65, v70);
    (*(void (**)(char *, uint64_t))(v94 + 8))(v34, v98);
    v92(v72, v101);
  }
  return v74;
}

void sub_1C1F18BB4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1C1F18C18(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t type metadata accessor for MedicationChartStatisticsFormatter()
{
  return self;
}

uint64_t sub_1C1F18CA0(uint64_t a1)
{
  sub_1C1F10AAC(0, &qword_1EBF0B1F8, MEMORY[0x1E4F27928]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1C1F18D18(uint64_t a1, uint64_t a2)
{
  sub_1C1F18D20(a1, a2, *(void *)(v2 + 16));
}

void sub_1C1F18D20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = sub_1C21477F0();
  }
  else {
    uint64_t v5 = 0;
  }
  id v6 = (id)v5;
  (*(void (**)(uint64_t, uint64_t))(a3 + 16))(a3, a1);
}

void *sub_1C1F18D90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F679F8]), sel_init);
  uint64_t v7 = v6;
  if (v6)
  {
    sub_1C21478B0();
    objc_msgSend(v7, sel_setStartDate_);
    id v8 = v7;
    sub_1C21478B0();
    objc_msgSend(v8, sel_setEndDate_);
  }
  MEMORY[0x1F4188790](v6);
  v15[2] = a4;
  v15[4] = sub_1C1F0FC0C(a1, (void (*)(uint64_t, void, void, double, double))sub_1C1F10238, (uint64_t)v15);
  sub_1C1F18C18(0, &qword_1EBF0B498, (uint64_t (*)(uint64_t))type metadata accessor for MedicationChartCodableData, MEMORY[0x1E4FBB320]);
  sub_1C1F19034(&qword_1EBF0B4A0, (unint64_t *)&unk_1EBF0B2F8);
  uint64_t v9 = sub_1C21474E0();
  unint64_t v11 = v10;
  swift_bridgeObjectRelease();
  if (v7)
  {
    id v12 = v7;
    uint64_t v13 = (void *)sub_1C2147880();
    objc_msgSend(v12, sel_setQueryDataObject_, v13);
    sub_1C1F190F4(v9, v11);
  }
  else
  {
    sub_1C1F190F4(v9, v11);
  }
  return v7;
}

uint64_t sub_1C1F19034(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C1F18C18(255, &qword_1EBF0B498, (uint64_t (*)(uint64_t))type metadata accessor for MedicationChartCodableData, MEMORY[0x1E4FBB320]);
    sub_1C1F0FAC8(a2, (void (*)(uint64_t))type metadata accessor for MedicationChartCodableData);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C1F190F4(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }

  return swift_release();
}

unsigned char *__swift_memcpy1_1(unsigned char *result, unsigned char *a2)
{
  *uint64_t result = *a2;
  return result;
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

uint64_t block_destroy_helper_3()
{
  return swift_release();
}

uint64_t block_destroy_helper_4()
{
  return swift_release();
}

uint64_t block_destroy_helper_5()
{
  return swift_release();
}

uint64_t block_destroy_helper_6()
{
  return swift_release();
}

uint64_t block_destroy_helper_7()
{
  return swift_release();
}

uint64_t block_destroy_helper_8()
{
  return swift_release();
}

uint64_t block_destroy_helper_9()
{
  return swift_release();
}

uint64_t block_destroy_helper_10()
{
  return swift_release();
}

uint64_t block_destroy_helper_11()
{
  return swift_release();
}

uint64_t block_destroy_helper_12()
{
  return swift_release();
}

uint64_t block_destroy_helper_13()
{
  return swift_release();
}

uint64_t block_destroy_helper_14()
{
  return swift_release();
}

uint64_t block_destroy_helper_15()
{
  return swift_release();
}

uint64_t block_destroy_helper_16()
{
  return swift_release();
}

uint64_t block_destroy_helper_17()
{
  return swift_release();
}

uint64_t block_destroy_helper_18()
{
  return swift_release();
}

uint64_t block_destroy_helper_19()
{
  return swift_release();
}

uint64_t block_destroy_helper_20()
{
  return swift_release();
}

uint64_t block_destroy_helper_21()
{
  return swift_release();
}

uint64_t block_destroy_helper_22()
{
  return swift_release();
}

uint64_t block_destroy_helper_23()
{
  return swift_release();
}

uint64_t block_destroy_helper_24()
{
  return swift_release();
}

uint64_t block_destroy_helper_25()
{
  return swift_release();
}

uint64_t block_destroy_helper_26()
{
  return swift_release();
}

uint64_t block_destroy_helper_27()
{
  return swift_release();
}

uint64_t block_destroy_helper_28()
{
  return swift_release();
}

uint64_t block_destroy_helper_29()
{
  return swift_release();
}

uint64_t block_destroy_helper_30()
{
  return swift_release();
}

id sub_1C1F19298()
{
  uint64_t v1 = OBJC_IVAR____TtC19HealthMedicationsUI31MedicationsDayHistoryHeaderCell____lazy_storage___titleLabel;
  uint64_t v2 = *(void **)(v0
                + OBJC_IVAR____TtC19HealthMedicationsUI31MedicationsDayHistoryHeaderCell____lazy_storage___titleLabel);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI31MedicationsDayHistoryHeaderCell____lazy_storage___titleLabel);
  }
  else
  {
    swift_getObjectType();
    id v4 = sub_1C1F19300();
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_1C1F19300()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
  objc_msgSend(v0, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v0, sel_setAdjustsFontForContentSizeCategory_, 1);
  sub_1C214A5F0();
  sub_1C1F1A7C8(&qword_1EA2C2778, v1, (void (*)(uint64_t))type metadata accessor for MedicationsDayHistoryHeaderCell);
  id v2 = v0;
  sub_1C21481D0();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  id v3 = (void *)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setAccessibilityIdentifier_, v3);

  objc_msgSend(v2, sel_setNumberOfLines_, 1);
  id v4 = objc_msgSend(self, sel_labelColor);
  objc_msgSend(v2, sel_setTextColor_, v4);

  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8E0);
  uint64_t v5 = (void *)sub_1C214B0A0();
  objc_msgSend(v2, sel_setFont_, v5);

  if (qword_1EBF0CA00 != -1) {
    swift_once();
  }
  id v6 = (id)qword_1EBF0CA18;
  swift_bridgeObjectRetain();
  sub_1C2147730();
  swift_bridgeObjectRelease();

  uint64_t v7 = (void *)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setText_, v7, 0xE000000000000000);

  return v2;
}

id sub_1C1F19628(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = sub_1C2149BE0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  id v12 = (char *)v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI31MedicationsDayHistoryHeaderCell____lazy_storage___titleLabel] = 0;
  uint64_t v13 = &v4[OBJC_IVAR____TtC19HealthMedicationsUI31MedicationsDayHistoryHeaderCell_item];
  uint64_t v14 = (objc_class *)type metadata accessor for MedicationsDayHistoryHeaderCell();
  *(_OWORD *)uint64_t v13 = 0u;
  *((_OWORD *)v13 + 1) = 0u;
  *((void *)v13 + 4) = 0;
  v35.receiver = v4;
  v35.super_class = v14;
  id v15 = objc_msgSendSuper2(&v35, sel_initWithFrame_, a1, a2, a3, a4);
  id v16 = sub_1C1F19298();
  LODWORD(v17) = 1132068864;
  objc_msgSend(v16, sel_setContentHuggingPriority_forAxis_, 0, v17);

  sub_1C1F1D2F4(0, (unint64_t *)&qword_1EBF0CA10, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_1C214E170;
  *(void *)(v18 + 32) = sub_1C1F19298();
  v34[1] = v18;
  sub_1C214A7A0();
  id v19 = objc_allocWithZone(MEMORY[0x1E4FB1C60]);
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8F0);
  uint64_t v20 = (void *)sub_1C214A770();
  swift_bridgeObjectRelease();
  id v21 = objc_msgSend(v19, sel_initWithArrangedSubviews_, v20);

  objc_msgSend(v21, sel_setAxis_, 0);
  objc_msgSend(v21, sel_setAlignment_, 3);
  objc_msgSend(v21, sel_setDistribution_, 0);
  objc_msgSend(v21, sel_setSpacing_, 20.0);
  id v22 = objc_msgSend(v15, sel_contentView);
  objc_msgSend(v22, sel_addSubview_, v21);

  sub_1C2149B70();
  sub_1C2149B20();
  double v24 = v23;
  double v26 = v25;
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  id v27 = objc_msgSend(v15, sel_contentView);
  objc_msgSend(v21, sel_hk_alignConstraintsWithView_insets_, v27, 12.0, v24, 12.0, v26);

  id v28 = objc_msgSend(v15, sel_separatorLayoutGuide);
  id v29 = objc_msgSend(v28, sel_leadingAnchor);

  id v30 = objc_msgSend(v15, sel_contentView);
  id v31 = objc_msgSend(v30, sel_leadingAnchor);

  id v32 = objc_msgSend(v29, sel_constraintEqualToAnchor_, v31);
  objc_msgSend(v32, sel_setActive_, 1);

  return v15;
}

uint64_t sub_1C1F19A98()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1C21497F0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1F1CC40(0, &qword_1EBF0C620, MEMORY[0x1E4FB0F28]);
  uint64_t v7 = MEMORY[0x1F4188790](v6 - 8);
  uint64_t v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v31 - v10;
  id v12 = (void *)sub_1C2149950();
  uint64_t v13 = (objc_class *)type metadata accessor for MedicationsDayHistoryHeaderCell();
  v36.receiver = v1;
  v36.super_class = v13;
  objc_msgSendSuper2(&v36, sel__bridgedUpdateConfigurationUsingState_, v12);

  uint64_t v14 = (uint64_t)v1 + OBJC_IVAR____TtC19HealthMedicationsUI31MedicationsDayHistoryHeaderCell_item;
  swift_beginAccess();
  sub_1C1F1CC94(v14, (uint64_t)v35, (unint64_t *)&qword_1EBF0C300, (void (*)(uint64_t))sub_1C1F1CB5C);
  if (!v35[3])
  {
    sub_1C1F1CD00((uint64_t)v35, (unint64_t *)&qword_1EBF0C300, (void (*)(uint64_t))sub_1C1F1CB5C);
LABEL_6:
    sub_1C21497A0();
    id v19 = v1;
    uint64_t v20 = sub_1C21497E0();
    os_log_type_t v21 = sub_1C214ABD0();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v33 = v2;
      id v22 = (uint8_t *)swift_slowAlloc();
      uint64_t v23 = swift_slowAlloc();
      uint64_t v32 = v3;
      uint64_t v24 = v23;
      uint64_t v34 = v23;
      *(_DWORD *)id v22 = 136315138;
      id v31 = v22 + 4;
      sub_1C1F1CC94(v14, (uint64_t)v35, (unint64_t *)&qword_1EBF0C300, (void (*)(uint64_t))sub_1C1F1CB5C);
      sub_1C1F1CC40(0, (unint64_t *)&qword_1EBF0C300, (void (*)(uint64_t))sub_1C1F1CB5C);
      uint64_t v25 = sub_1C214A630();
      v35[0] = sub_1C1F6FD54(v25, v26, &v34);
      sub_1C214B530();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C1F0B000, v20, v21, "Incorrect view model for MedicationsDayHistoryItem: %s", v22, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C8754730](v24, -1, -1);
      MEMORY[0x1C8754730](v22, -1, -1);

      return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v5, v33);
    }
    else
    {

      return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    }
  }
  sub_1C1F1CB5C();
  type metadata accessor for MedicationsDayHistoryHeaderItem();
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_6;
  }
  uint64_t v15 = v34;
  MEMORY[0x1C8752FE0]();
  uint64_t v16 = sub_1C21499D0();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48))(v11, 1, v16))
  {
    double v17 = (void (*)(uint64_t))MEMORY[0x1E4FB0F28];
    sub_1C1F1CC94((uint64_t)v11, (uint64_t)v9, &qword_1EBF0C620, MEMORY[0x1E4FB0F28]);
    MEMORY[0x1C8752FF0](v9);
    swift_release();
    return sub_1C1F1CD00((uint64_t)v11, &qword_1EBF0C620, v17);
  }
  else
  {
    int v27 = *(unsigned __int8 *)(v15
                             + OBJC_IVAR____TtC19HealthMedicationsUI31MedicationsDayHistoryHeaderItem_displayContext);
    id v28 = self;
    id v29 = &selRef_secondarySystemBackgroundColor;
    if (!v27) {
      id v29 = &selRef_quaternarySystemFillColor;
    }
    id v30 = [v28 *v29];
    sub_1C2149990();
    MEMORY[0x1C8752FF0](v11);
    return swift_release();
  }
}

id sub_1C1F1A03C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MedicationsDayHistoryHeaderCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1C1F1A0CC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI31MedicationsDayHistoryHeaderCell_item;
  swift_beginAccess();
  return sub_1C1F1CC94(v3, a1, (unint64_t *)&qword_1EBF0C300, (void (*)(uint64_t))sub_1C1F1CB5C);
}

uint64_t sub_1C1F1A13C(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI31MedicationsDayHistoryHeaderCell_item;
  swift_beginAccess();
  sub_1C1F1CADC(a1, v3);
  return swift_endAccess();
}

uint64_t (*sub_1C1F1A198())()
{
  return j__swift_endAccess;
}

uint64_t MedicationsDayHistoryHeaderItem.reuseIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI31MedicationsDayHistoryHeaderItem_reuseIdentifier);
  swift_bridgeObjectRetain();
  return v1;
}

unint64_t sub_1C1F1A238()
{
  return 0xD000000000000015;
}

uint64_t MedicationsDayHistoryHeaderItem.__allocating_init(displayContext:)(unsigned char *a1)
{
  uint64_t v2 = swift_allocObject();
  LOBYTE(a1) = *a1;
  sub_1C2147B10();
  uint64_t v3 = (uint64_t *)(v2 + OBJC_IVAR____TtC19HealthMedicationsUI31MedicationsDayHistoryHeaderItem_reuseIdentifier);
  type metadata accessor for MedicationsDayHistoryHeaderCell();
  sub_1C1F1A7C8(&qword_1EA2C2778, v4, (void (*)(uint64_t))type metadata accessor for MedicationsDayHistoryHeaderCell);
  *uint64_t v3 = sub_1C21481D0();
  v3[1] = v5;
  *(unsigned char *)(v2 + OBJC_IVAR____TtC19HealthMedicationsUI31MedicationsDayHistoryHeaderItem_displayContext) = (_BYTE)a1;
  return v2;
}

uint64_t MedicationsDayHistoryHeaderItem.init(displayContext:)(char *a1)
{
  char v2 = *a1;
  sub_1C2147B10();
  uint64_t v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC19HealthMedicationsUI31MedicationsDayHistoryHeaderItem_reuseIdentifier);
  type metadata accessor for MedicationsDayHistoryHeaderCell();
  sub_1C1F1A7C8(&qword_1EA2C2778, v4, (void (*)(uint64_t))type metadata accessor for MedicationsDayHistoryHeaderCell);
  *uint64_t v3 = sub_1C21481D0();
  v3[1] = v5;
  *(unsigned char *)(v1 + OBJC_IVAR____TtC19HealthMedicationsUI31MedicationsDayHistoryHeaderItem_displayContext) = v2;
  return v1;
}

uint64_t type metadata accessor for MedicationsDayHistoryHeaderCell()
{
  return self;
}

BOOL static MedicationsDayHistoryHeaderItem.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return ((*(unsigned __int8 *)(a1
                              + OBJC_IVAR____TtC19HealthMedicationsUI31MedicationsDayHistoryHeaderItem_displayContext) ^ *(unsigned __int8 *)(a2 + OBJC_IVAR____TtC19HealthMedicationsUI31MedicationsDayHistoryHeaderItem_displayContext)) & 1) == 0;
}

uint64_t sub_1C1F1A468()
{
  return sub_1C214BB40();
}

uint64_t MedicationsDayHistoryHeaderItem.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC19HealthMedicationsUI31MedicationsDayHistoryHeaderItem_identifier;
  uint64_t v2 = sub_1C2147B20();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t MedicationsDayHistoryHeaderItem.__deallocating_deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC19HealthMedicationsUI31MedicationsDayHistoryHeaderItem_identifier;
  uint64_t v2 = sub_1C2147B20();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_1C1F1A5C8()
{
  return sub_1C214BB80();
}

uint64_t sub_1C1F1A614()
{
  return sub_1C214BB80();
}

uint64_t sub_1C1F1A664()
{
  return sub_1C214BB40();
}

uint64_t sub_1C1F1A69C()
{
  return sub_1C214BB80();
}

uint64_t sub_1C1F1A6E8()
{
  uint64_t v1 = *(void *)(*v0 + OBJC_IVAR____TtC19HealthMedicationsUI31MedicationsDayHistoryHeaderItem_reuseIdentifier);
  swift_bridgeObjectRetain();
  return v1;
}

unint64_t sub_1C1F1A728()
{
  return sub_1C1F1A238();
}

BOOL sub_1C1F1A74C(void *a1, void *a2)
{
  return ((*(unsigned __int8 *)(*a1
                              + OBJC_IVAR____TtC19HealthMedicationsUI31MedicationsDayHistoryHeaderItem_displayContext) ^ *(unsigned __int8 *)(*a2 + OBJC_IVAR____TtC19HealthMedicationsUI31MedicationsDayHistoryHeaderItem_displayContext)) & 1) == 0;
}

uint64_t sub_1C1F1A77C()
{
  return sub_1C1F1A7C8(&qword_1EA2C27E0, 255, (void (*)(uint64_t))type metadata accessor for MedicationsDayHistoryHeaderItem);
}

uint64_t sub_1C1F1A7C8(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for MedicationsDayHistoryHeaderItem()
{
  uint64_t result = qword_1EA2C27F8;
  if (!qword_1EA2C27F8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C1F1A85C()
{
  return type metadata accessor for MedicationsDayHistoryHeaderItem();
}

uint64_t sub_1C1F1A864()
{
  uint64_t result = sub_1C2147B20();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for MedicationsDayHistoryHeaderItem(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MedicationsDayHistoryHeaderItem);
}

uint64_t dispatch thunk of MedicationsDayHistoryHeaderItem.uniqueIdentifier.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t dispatch thunk of MedicationsDayHistoryHeaderItem.__allocating_init(displayContext:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of MedicationsDayHistoryHeaderItem.hash(into:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of MedicationsDayHistoryHeaderItem.hashValue.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

void type metadata accessor for ContentVerticalAlignment(uint64_t a1)
{
}

void type metadata accessor for HKMedicationListOnboardingDetailsEntryPointType(uint64_t a1)
{
}

void type metadata accessor for HKMCPregnancyState(uint64_t a1)
{
}

void type metadata accessor for HKMedicationDoseEventStatus(uint64_t a1)
{
}

void type metadata accessor for HKMedicationLoggingAnalyticsActions(uint64_t a1)
{
}

void type metadata accessor for HKMedicationLoggingContext(uint64_t a1)
{
}

void type metadata accessor for HKMedicationLoggingProvenance(uint64_t a1)
{
}

void type metadata accessor for HKOntologyShardIdentifier(uint64_t a1)
{
}

void type metadata accessor for SymbolScale(uint64_t a1)
{
}

void type metadata accessor for Weight(uint64_t a1)
{
}

void type metadata accessor for TextStyle(uint64_t a1)
{
}

void type metadata accessor for HKMedicationFreeTextFormTypeCode(uint64_t a1)
{
}

void type metadata accessor for UIDatePickerStyle(uint64_t a1)
{
}

void type metadata accessor for Mode(uint64_t a1)
{
}

void type metadata accessor for HKMedicationRoomType(uint64_t a1)
{
}

void type metadata accessor for HKError(uint64_t a1)
{
}

void type metadata accessor for HKMedicationScheduleType(uint64_t a1)
{
}

void type metadata accessor for HKDismissedPregnancyLactationInteractionType(uint64_t a1)
{
}

void type metadata accessor for HKOntologyShardState(uint64_t a1)
{
}

uint64_t initializeBufferWithCopyOfBuffer for MedicationScheduleDataSource.PresentationContext(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for MedicationStatisticCollector(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for MedicationStatisticCollector(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 32) = v3;
  return result;
}

void type metadata accessor for UIEdgeInsets(uint64_t a1)
{
}

void type metadata accessor for Key(uint64_t a1)
{
}

void type metadata accessor for HKDrugInteractionLifestyleFactor(uint64_t a1)
{
}

void type metadata accessor for HKDrugInteractionSeverityLevel(uint64_t a1)
{
}

uint64_t sub_1C1F1ADC4()
{
  return sub_1C1F1A7C8(&qword_1EA2C28C0, 255, type metadata accessor for HKDrugInteractionSeverityLevel);
}

uint64_t sub_1C1F1AE1C()
{
  return sub_1C2147DA0();
}

uint64_t sub_1C1F1AE24(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = 0;
  char v7 = 1;
  uint64_t result = MEMORY[0x1C874FF30](a1, &v6);
  char v4 = v7;
  uint64_t v5 = v6;
  if (v7) {
    uint64_t v5 = 0;
  }
  *(void *)a2 = v5;
  *(unsigned char *)(a2 + 8) = v4;
  return result;
}

uint64_t sub_1C1F1AE78(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = 0;
  char v8 = 1;
  char v3 = MEMORY[0x1C874FF40](a1, &v7);
  char v4 = v8;
  uint64_t v5 = v7;
  if (v8) {
    uint64_t v5 = 0;
  }
  *(void *)a2 = v5;
  *(unsigned char *)(a2 + 8) = v4;
  return v3 & 1;
}

void sub_1C1F1AED0(double *a1@<X8>)
{
  *a1 = MEMORY[0x1C874FF50]();
}

uint64_t sub_1C1F1AEF8()
{
  return MEMORY[0x1F40E63F0](*v0);
}

uint64_t sub_1C1F1AF00(uint64_t a1, uint64_t a2)
{
  int v6 = 0;
  char v7 = 1;
  uint64_t result = MEMORY[0x1C8752B90](a1, &v6);
  char v4 = v7;
  int v5 = v6;
  if (v7) {
    int v5 = 0;
  }
  *(_DWORD *)a2 = v5;
  *(unsigned char *)(a2 + 4) = v4;
  return result;
}

uint64_t sub_1C1F1AF54(uint64_t a1, uint64_t a2)
{
  int v7 = 0;
  char v8 = 1;
  char v3 = MEMORY[0x1C8752BA0](a1, &v7);
  char v4 = v8;
  int v5 = v7;
  if (v8) {
    int v5 = 0;
  }
  *(_DWORD *)a2 = v5;
  *(unsigned char *)(a2 + 4) = v4;
  return v3 & 1;
}

void sub_1C1F1AFAC(float *a1@<X8>)
{
  *a1 = MEMORY[0x1C8752BB0]();
}

uint64_t sub_1C1F1AFE0(uint64_t a1, uint64_t a2)
{
  return sub_1C1F1B520(a1, a2, MEMORY[0x1E4FBC3B8]);
}

uint64_t sub_1C1F1AFF8()
{
  return sub_1C214BB40();
}

uint64_t sub_1C1F1B024(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C1F1B578(a1, a2, a3, MEMORY[0x1E4FBC3B8]);
}

void *sub_1C1F1B03C@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *result;
  return result;
}

void *sub_1C1F1B048@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & *result;
  return result;
}

void *sub_1C1F1B05C(void *result)
{
  *v1 |= *result;
  return result;
}

void *sub_1C1F1B070(void *result)
{
  *v1 &= *result;
  return result;
}

BOOL sub_1C1F1B084(void *a1)
{
  return (*v1 & ~*a1) == 0;
}

BOOL sub_1C1F1B098(void *a1)
{
  return (*a1 & ~*v1) == 0;
}

uint64_t sub_1C1F1B0AC()
{
  return sub_1C1F1A7C8(&qword_1EA2C28C8, 255, type metadata accessor for HKDrugInteractionLifestyleFactor);
}

uint64_t sub_1C1F1B0F8(uint64_t a1, uint64_t a2)
{
  return sub_1C1F1B520(a1, a2, MEMORY[0x1E4FBC3C0]);
}

uint64_t sub_1C1F1B110()
{
  return sub_1C214BB70();
}

uint64_t sub_1C1F1B13C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C1F1B578(a1, a2, a3, MEMORY[0x1E4FBC3C0]);
}

uint64_t sub_1C1F1B158(uint64_t a1, id *a2)
{
  uint64_t result = sub_1C214A5D0();
  *a2 = 0;
  return result;
}

uint64_t sub_1C1F1B1D0(uint64_t a1, id *a2)
{
  char v3 = sub_1C214A5E0();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_1C1F1B250@<X0>(uint64_t *a1@<X8>)
{
  sub_1C214A5F0();
  uint64_t v2 = sub_1C214A5B0();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

void sub_1C1F1B294(void *a1@<X8>)
{
  *a1 = 0;
}

void *sub_1C1F1B29C@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 | *result;
  return result;
}

void *sub_1C1F1B2B0@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 ^ *result;
  return result;
}

void *sub_1C1F1B2C4@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *v2 & *result;
  if (v3) {
    *v2 &= ~*result;
  }
  *(void *)a2 = v3;
  *(unsigned char *)(a2 + 8) = v3 == 0;
  return result;
}

uint64_t *sub_1C1F1B2F0@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *result;
  uint64_t v4 = *v2;
  *v2 |= *result;
  uint64_t v5 = v4 & v3;
  *(void *)a2 = v5;
  *(unsigned char *)(a2 + 8) = v5 == 0;
  return result;
}

void *sub_1C1F1B314(void *result)
{
  *v1 ^= *result;
  return result;
}

void *sub_1C1F1B328@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_1C1F1B33C(void *a1)
{
  return (*v1 & *a1) == 0;
}

BOOL sub_1C1F1B350()
{
  return *v0 == 0;
}

uint64_t sub_1C1F1B360(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return MEMORY[0x1F4184B08](a1, a4, a2, a5, a3);
}

void *sub_1C1F1B378(void *result)
{
  *v1 &= ~*result;
  return result;
}

uint64_t sub_1C1F1B38C(uint64_t a1)
{
  uint64_t v2 = sub_1C1F1A7C8(&qword_1EA2C2960, 255, type metadata accessor for HKError);

  return MEMORY[0x1F40E6E20](a1, v2);
}

uint64_t sub_1C1F1B3FC(uint64_t a1)
{
  uint64_t v2 = sub_1C1F1A7C8(&qword_1EA2C2960, 255, type metadata accessor for HKError);

  return MEMORY[0x1F40E6E10](a1, v2);
}

uint64_t sub_1C1F1B470(uint64_t a1)
{
  uint64_t v2 = sub_1C1F1A7C8(&qword_1EA2C2998, 255, type metadata accessor for HKError);

  return MEMORY[0x1F40E4480](a1, v2);
}

id sub_1C1F1B4E0()
{
  return *v0;
}

uint64_t sub_1C1F1B4E8@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

BOOL sub_1C1F1B4F0(void *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = *v2 & *a2;
  if (v4 != *a2) {
    *v2 |= v3;
  }
  *a1 = v3;
  return v4 != v3;
}

uint64_t sub_1C1F1B520(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v5 = *v3;
  sub_1C214BB30();
  a3(v5);
  return sub_1C214BB80();
}

uint64_t sub_1C1F1B578(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v6 = *v4;
  sub_1C214BB30();
  a4(v6);
  return sub_1C214BB80();
}

uint64_t sub_1C1F1B5CC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = sub_1C1F1CBB4(a1);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

uint64_t sub_1C1F1B60C()
{
  return sub_1C214A5F0();
}

uint64_t sub_1C1F1B61C(uint64_t a1)
{
  uint64_t v2 = sub_1C1F1A7C8(&qword_1EA2C2998, 255, type metadata accessor for HKError);

  return MEMORY[0x1F40E44F0](a1, v2);
}

uint64_t sub_1C1F1B68C(uint64_t a1)
{
  uint64_t v2 = sub_1C1F1A7C8(&qword_1EA2C2998, 255, type metadata accessor for HKError);

  return MEMORY[0x1F40E44A8](a1, v2);
}

uint64_t sub_1C1F1B6FC(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_1C1F1A7C8(&qword_1EA2C2998, 255, type metadata accessor for HKError);
  id v5 = a1;

  return MEMORY[0x1F40E4498](v5, a2, v4);
}

uint64_t sub_1C1F1B790()
{
  id v1 = *v0;
  uint64_t v2 = sub_1C214B240();

  return v2;
}

uint64_t sub_1C1F1B7C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C1F1A7C8(&qword_1EA2C2998, 255, type metadata accessor for HKError);

  return MEMORY[0x1F40E44D8](a1, a2, v4);
}

uint64_t sub_1C1F1B848()
{
  return sub_1C214BB80();
}

void *sub_1C1F1B8A8@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

void sub_1C1F1B8B8(void *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_1C1F1B8C4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1C214A5F0();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1C1F1B8F0()
{
  sub_1C1F1A7C8(&qword_1EA2C29D8, 255, type metadata accessor for TextStyle);
  sub_1C1F1A7C8((unint64_t *)&unk_1EA2C29E0, 255, type metadata accessor for TextStyle);

  return sub_1C214B9A0();
}

double sub_1C1F1B9B4@<D0>(void *a1@<X8>)
{
  double result = *v1;
  *a1 = *(void *)v1;
  return result;
}

uint64_t sub_1C1F1B9C0()
{
  return sub_1C214B9A0();
}

uint64_t sub_1C1F1BA90()
{
  sub_1C1F1A7C8(&qword_1EA2C2A98, 255, type metadata accessor for UIContentSizeCategory);
  sub_1C1F1A7C8(&qword_1EA2C2AA0, 255, type metadata accessor for UIContentSizeCategory);

  return sub_1C214B9A0();
}

_DWORD *sub_1C1F1BB54@<X0>(_DWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_DWORD *)a2 = *result;
  *(unsigned char *)(a2 + 4) = 0;
  return result;
}

float sub_1C1F1BB64@<S0>(_DWORD *a1@<X8>)
{
  float result = *v1;
  *a1 = *(_DWORD *)v1;
  return result;
}

uint64_t sub_1C1F1BB70()
{
  return sub_1C214B9A0();
}

uint64_t sub_1C1F1BC34()
{
  sub_1C1F1A7C8(&qword_1EA2C29B0, 255, type metadata accessor for HKOntologyShardIdentifier);
  sub_1C1F1A7C8(&qword_1EA2C29B8, 255, type metadata accessor for HKOntologyShardIdentifier);

  return sub_1C214B9A0();
}

uint64_t sub_1C1F1BCF8()
{
  sub_1C1F1A7C8((unint64_t *)&qword_1EBF0C850, 255, type metadata accessor for Key);
  sub_1C1F1A7C8((unint64_t *)&unk_1EA2C29F0, 255, type metadata accessor for Key);

  return sub_1C214B9A0();
}

uint64_t sub_1C1F1BDBC()
{
  return sub_1C1F1A7C8(&qword_1EA2C28D0, 255, type metadata accessor for Key);
}

uint64_t sub_1C1F1BE08()
{
  return sub_1C1F1A7C8(&qword_1EA2C28D8, 255, type metadata accessor for Key);
}

uint64_t sub_1C1F1BE54()
{
  sub_1C1F1A7C8(&qword_1EA2C2AB8, 255, type metadata accessor for AttributeName);
  sub_1C1F1A7C8(&qword_1EA2C2AC0, 255, type metadata accessor for AttributeName);

  return sub_1C214B9A0();
}

uint64_t sub_1C1F1BF18@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_1C214A5B0();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_1C1F1BF60()
{
  sub_1C1F1A7C8(&qword_1EA2C2AA8, 255, type metadata accessor for FeatureKey);
  sub_1C1F1A7C8(&qword_1EA2C2AB0, 255, type metadata accessor for FeatureKey);

  return sub_1C214B9A0();
}

uint64_t sub_1C1F1C024(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C1F1A7C8(&qword_1EA2C2998, 255, type metadata accessor for HKError);

  return MEMORY[0x1F40E44B8](a1, a2, a3, v6);
}

uint64_t sub_1C1F1C0AC()
{
  return sub_1C1F1A7C8(&qword_1EA2C28E0, 255, type metadata accessor for HKError);
}

uint64_t sub_1C1F1C0F8()
{
  return sub_1C1F1A7C8(&qword_1EA2C28E8, 255, type metadata accessor for HKError);
}

uint64_t sub_1C1F1C144()
{
  return sub_1C1F1A7C8(&qword_1EA2C28F0, 255, type metadata accessor for HKMedicationFreeTextFormTypeCode);
}

uint64_t sub_1C1F1C190()
{
  return sub_1C1F1A7C8(&qword_1EA2C28F8, 255, type metadata accessor for TextStyle);
}

uint64_t sub_1C1F1C1DC()
{
  return sub_1C1F1A7C8(&qword_1EA2C2900, 255, type metadata accessor for TextStyle);
}

BOOL sub_1C1F1C228(void *a1, void *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1C1F1C23C(uint64_t a1, uint64_t a2)
{
  return sub_1C1F0DE6C(a1, a2, MEMORY[0x1E4FBB198]);
}

uint64_t sub_1C1F1C254()
{
  return MEMORY[0x1F4184070](*v0);
}

uint64_t sub_1C1F1C25C()
{
  return sub_1C214BB70();
}

uint64_t sub_1C1F1C290(uint64_t a1)
{
  if ((*v1 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    uint64_t v2 = *v1;
  }
  else {
    uint64_t v2 = 0;
  }
  return MEMORY[0x1F4185EA8](a1, v2);
}

uint64_t sub_1C1F1C2A0()
{
  return MEMORY[0x1F41840D0](*v0);
}

uint64_t sub_1C1F1C2A8()
{
  return sub_1C214BB60();
}

void sub_1C1F1C2DC()
{
}

uint64_t sub_1C1F1C2F0()
{
  sub_1C214A5F0();
  sub_1C214A690();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1C1F1C344()
{
  sub_1C214A5F0();
  sub_1C214BB30();
  sub_1C214A690();
  uint64_t v0 = sub_1C214BB80();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1C1F1C3B8()
{
  return sub_1C1F1A7C8(&qword_1EA2C2908, 255, type metadata accessor for TextStyle);
}

uint64_t sub_1C1F1C404()
{
  return sub_1C1F1A7C8(&qword_1EA2C2910, 255, type metadata accessor for Weight);
}

uint64_t sub_1C1F1C450()
{
  return sub_1C1F1A7C8(&qword_1EA2C2918, 255, type metadata accessor for Weight);
}

BOOL sub_1C1F1C49C(double *a1, double *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1C1F1C4B0()
{
  return sub_1C1F1A7C8(&qword_1EA2C2920, 255, type metadata accessor for Weight);
}

uint64_t sub_1C1F1C4FC()
{
  return sub_1C1F1A7C8(&qword_1EA2C2928, 255, type metadata accessor for HKOntologyShardIdentifier);
}

uint64_t sub_1C1F1C548()
{
  return sub_1C1F1A7C8(&qword_1EA2C2930, 255, type metadata accessor for HKOntologyShardIdentifier);
}

BOOL sub_1C1F1C594(float *a1, float *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1C1F1C5A8()
{
  uint64_t v0 = sub_1C214A5F0();
  uint64_t v2 = v1;
  if (v0 == sub_1C214A5F0() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = sub_1C214BA80();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_1C1F1C634()
{
  return sub_1C1F1A7C8(&qword_1EA2C2938, 255, type metadata accessor for HKOntologyShardIdentifier);
}

uint64_t sub_1C1F1C680()
{
  return sub_1C1F1A7C8(&qword_1EA2C2940, 255, type metadata accessor for HKMedicationLoggingAnalyticsActions);
}

uint64_t sub_1C1F1C6CC()
{
  return sub_1C1F1A7C8(&qword_1EA2C2948, 255, type metadata accessor for HKMedicationLoggingAnalyticsActions);
}

uint64_t sub_1C1F1C718()
{
  return sub_1C1F1A7C8(&qword_1EA2C2950, 255, type metadata accessor for HKMedicationLoggingAnalyticsActions);
}

uint64_t sub_1C1F1C764()
{
  return sub_1C1F1A7C8(&qword_1EA2C2958, 255, type metadata accessor for HKMedicationLoggingAnalyticsActions);
}

uint64_t sub_1C1F1C7B0()
{
  return sub_1C1F1A7C8(&qword_1EA2C2960, 255, type metadata accessor for HKError);
}

uint64_t sub_1C1F1C7FC()
{
  return sub_1C1F1A7C8(&qword_1EA2C2968, 255, type metadata accessor for HKError);
}

uint64_t sub_1C1F1C848()
{
  return sub_1C1F1A7C8(&qword_1EA2C2970, 255, type metadata accessor for HKError);
}

uint64_t sub_1C1F1C894()
{
  return sub_1C1F1A7C8(&qword_1EA2C2978, 255, type metadata accessor for Code);
}

void type metadata accessor for Code(uint64_t a1)
{
}

uint64_t sub_1C1F1C908()
{
  return sub_1C1F1A7C8(&qword_1EA2C2980, 255, type metadata accessor for Code);
}

unint64_t sub_1C1F1C958()
{
  unint64_t result = qword_1EA2C2988;
  if (!qword_1EA2C2988)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C2988);
  }
  return result;
}

uint64_t sub_1C1F1C9AC()
{
  return sub_1C1F1A7C8(&qword_1EA2C2990, 255, type metadata accessor for Code);
}

uint64_t sub_1C1F1C9F8()
{
  return sub_1C1F1A7C8(&qword_1EA2C2998, 255, type metadata accessor for HKError);
}

uint64_t sub_1C1F1CA44()
{
  return sub_1C1F1A7C8((unint64_t *)&unk_1EA2C29A0, 255, type metadata accessor for HKMedicationScheduleType);
}

uint64_t sub_1C1F1CA90()
{
  return sub_1C1F1A7C8((unint64_t *)&unk_1EBF0C858, 255, type metadata accessor for Key);
}

uint64_t sub_1C1F1CADC(uint64_t a1, uint64_t a2)
{
  sub_1C1F1CC40(0, (unint64_t *)&qword_1EBF0C300, (void (*)(uint64_t))sub_1C1F1CB5C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_1C1F1CB5C()
{
  unint64_t result = qword_1EBF0C2F0;
  if (!qword_1EBF0C2F0)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBF0C2F0);
  }
  return result;
}

uint64_t sub_1C1F1CBB4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return 0;
  }
  uint64_t result = 0;
  uint64_t v4 = (uint64_t *)(a1 + 32);
  do
  {
    uint64_t v6 = *v4++;
    uint64_t v5 = v6;
    if ((v6 & ~result) == 0) {
      uint64_t v5 = 0;
    }
    result |= v5;
    --v1;
  }
  while (v1);
  return result;
}

unint64_t sub_1C1F1CBEC()
{
  unint64_t result = qword_1EA2C29D0;
  if (!qword_1EA2C29D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C29D0);
  }
  return result;
}

void sub_1C1F1CC40(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C214B4F0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1C1F1CC94(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_1C1F1CC40(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_1C1F1CD00(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1C1F1CC40(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

void type metadata accessor for UIContentSizeCategory(uint64_t a1)
{
}

void type metadata accessor for FeatureKey(uint64_t a1)
{
}

void type metadata accessor for AttributeName(uint64_t a1)
{
}

void type metadata accessor for UILayoutPriority(uint64_t a1)
{
}

void type metadata accessor for CGRect(uint64_t a1)
{
}

void type metadata accessor for UIUserInterfaceSizeClass(uint64_t a1)
{
}

uint64_t sub_1C1F1CE4C()
{
  return sub_1C1F1A7C8(&qword_1EA2C2A30, 255, type metadata accessor for UILayoutPriority);
}

uint64_t sub_1C1F1CE98()
{
  return sub_1C1F1A7C8(&qword_1EA2C2A38, 255, type metadata accessor for UILayoutPriority);
}

uint64_t sub_1C1F1CEE4()
{
  return sub_1C1F1A7C8(&qword_1EA2C2A40, 255, type metadata accessor for UILayoutPriority);
}

uint64_t sub_1C1F1CF30()
{
  return sub_1C1F1A7C8(&qword_1EA2C2A48, 255, type metadata accessor for AttributeName);
}

uint64_t sub_1C1F1CF7C()
{
  return sub_1C1F1A7C8(&qword_1EA2C2A50, 255, type metadata accessor for AttributeName);
}

uint64_t sub_1C1F1CFC8()
{
  return sub_1C1F1A7C8(&qword_1EA2C2A58, 255, type metadata accessor for FeatureKey);
}

uint64_t sub_1C1F1D014()
{
  return sub_1C1F1A7C8(&qword_1EA2C2A60, 255, type metadata accessor for FeatureKey);
}

uint64_t sub_1C1F1D060()
{
  return sub_1C1F1A7C8(&qword_1EA2C2A68, 255, type metadata accessor for UIContentSizeCategory);
}

uint64_t sub_1C1F1D0AC()
{
  return sub_1C1F1A7C8(&qword_1EA2C2A70, 255, type metadata accessor for UIContentSizeCategory);
}

uint64_t sub_1C1F1D0F8()
{
  return sub_1C1F1A7C8(&qword_1EA2C2A78, 255, type metadata accessor for UIContentSizeCategory);
}

uint64_t sub_1C1F1D144()
{
  return sub_1C1F1A7C8(&qword_1EA2C2A80, 255, type metadata accessor for AttributeName);
}

uint64_t sub_1C1F1D190()
{
  return sub_1C1F1A7C8(&qword_1EA2C2A88, 255, type metadata accessor for FeatureKey);
}

uint64_t sub_1C1F1D1DC()
{
  return sub_1C1F1A7C8(&qword_1EA2C2A90, 255, type metadata accessor for UIUserInterfaceSizeClass);
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t sub_1C1F1D234(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_1C1F1D254(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 16) = v3;
  return result;
}

void type metadata accessor for CGSize(uint64_t a1)
{
}

void type metadata accessor for CGPoint(uint64_t a1)
{
}

void type metadata accessor for HKMedicationFreeTextLoggingUnitCode(uint64_t a1)
{
}

void sub_1C1F1D2F4(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t Presentation.isMedicationsCategory.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1C21481B0();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  char v8 = (char *)&v14 - v7;
  uint64_t v9 = *(void (**)(char *, void, uint64_t))(v3 + 104);
  v9((char *)&v14 - v7, *MEMORY[0x1E4F662A8], v2);
  char v10 = sub_1C21481A0();
  uint64_t v11 = *(void (**)(char *, uint64_t))(v3 + 8);
  v11(v8, v2);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, v1, v2);
  if (v10)
  {
    char v12 = 1;
  }
  else
  {
    v9(v8, *MEMORY[0x1E4F66268], v2);
    char v12 = sub_1C21481A0();
    v11(v8, v2);
  }
  v11(v6, v2);
  return v12 & 1;
}

void *MedicationsInputViewController.__allocating_init(schedulePublisher:medication:resetSchedule:restartingSchedule:)(uint64_t a1, void *a2, char a3, char a4)
{
  id v9 = objc_allocWithZone(v4);
  return MedicationsInputViewController.init(schedulePublisher:medication:resetSchedule:restartingSchedule:)(a1, a2, a3, a4);
}

void *MedicationsInputViewController.init(schedulePublisher:medication:resetSchedule:restartingSchedule:)(uint64_t a1, void *a2, char a3, char a4)
{
  *(void *)&v4[qword_1EA2C2BB0] = 0;
  *(void *)&v4[qword_1EA2C2BB8] = a1;
  *(void *)&v4[qword_1EA2C2BC0] = a2;
  v4[qword_1EA2C2BC8] = a3;
  v4[qword_1EA2C2BD0] = a4;
  type metadata accessor for MedicationScheduleDataSource();
  long long v21 = 0u;
  long long v22 = 0u;
  swift_allocObject();
  swift_retain_n();
  id v7 = a2;
  char v8 = v4;
  *(void *)&v8[qword_1EA2C2BD8] = MedicationScheduleDataSource.init(schedulePublisher:medication:concept:presentationContext:)(a1, v7, 0, (uint64_t *)&v21);
  swift_retain();
  id v9 = objc_msgSend(v7, sel_localizedOntologyEducationContent, v21, v22);
  char v10 = v9;
  if (v9)
  {
    *(void *)&long long v21 = v9;
    sub_1C1F12718(0, (unint64_t *)&unk_1EA2C4680);
    sub_1C21480A0();
    uint64_t v12 = v11;

    if (v12) {
      swift_bridgeObjectRelease();
    }
  }
  id v13 = objc_msgSend(v7, sel_localizedOntologyEducationContent);
  if (v13)
  {
    uint64_t v14 = v13;
    *(void *)&long long v21 = v13;
    sub_1C1F12718(0, (unint64_t *)&unk_1EA2C4680);
    sub_1C21480C0();
    uint64_t v16 = v15;

    if (v16) {
      swift_bridgeObjectRelease();
    }
  }
  sub_1C2149590();
  swift_allocObject();
  *(void *)&v8[qword_1EA2C2BE0] = sub_1C2149560();

  swift_retain();
  double v17 = (void *)sub_1C2148AC0();
  uint64_t v18 = v17;
  if (*((unsigned char *)v17 + qword_1EA2C2BC8) == 1)
  {
    *(void *)&long long v21 = 2;
    id v19 = v17;
    swift_retain();
    swift_retain();
    sub_1C2149E70();
    swift_release();
    swift_release();

    swift_release();
    swift_release();
  }
  else
  {
    swift_release();
    swift_release();
  }
  return v18;
}

void sub_1C1F1D844(char *a1, uint64_t a2, void *a3)
{
  *(void *)&a1[qword_1EA2C2BB0] = 0;
  id v4 = a3;

  sub_1C214B910();
  __break(1u);
}

uint64_t sub_1C1F1D8BC()
{
  uint64_t v1 = v0;
  v4.receiver = v0;
  v4.super_class = (Class)type metadata accessor for MedicationsInputViewController();
  objc_msgSendSuper2(&v4, sel_viewDidLoad);
  sub_1C1F1DB04();
  sub_1C1F1DF98();
  swift_beginAccess();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1C1F20160();
  sub_1C1F20A0C(&qword_1EA2C2BF0, (void (*)(uint64_t))sub_1C1F20160);
  swift_retain();
  uint64_t v2 = sub_1C214A0F0();
  swift_release();
  swift_release();
  *(void *)&v1[qword_1EA2C2BB0] = v2;
  return swift_release();
}

void sub_1C1F1DA10(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a2 + 16;
  swift_beginAccess();
  objc_super v4 = (void *)MEMORY[0x1C8754850](v3);
  if (v4)
  {
    uint64_t v5 = v4;
    id v6 = objc_msgSend(v4, sel_navigationItem);

    id v7 = objc_msgSend(v6, sel_rightBarButtonItem);
    objc_msgSend(v7, sel_setEnabled_, v2);
  }
}

void sub_1C1F1DABC(void *a1)
{
  id v1 = a1;
  sub_1C1F1D8BC();
}

void sub_1C1F1DB04()
{
  id v1 = v0;
  sub_1C2149E90();

  if (v24[0])
  {
    if (qword_1EBF0CA00 != -1) {
      swift_once();
    }
    id v2 = (id)qword_1EBF0CA18;
    swift_bridgeObjectRetain();
    sub_1C2147730();
    swift_bridgeObjectRelease();

    uint64_t v25 = type metadata accessor for MedicationsInputViewController();
    v24[0] = v0;
    id v3 = v0;
    objc_super v4 = (void *)sub_1C214A5B0();
    swift_bridgeObjectRelease();
    uint64_t v5 = v25;
    if (v25)
    {
      id v6 = __swift_project_boxed_opaque_existential_0(v24, v25);
      uint64_t v7 = *(void *)(v5 - 8);
      MEMORY[0x1F4188790](v6);
      id v9 = (char *)v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v7 + 16))(v9);
      uint64_t v10 = sub_1C214BA70();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v5);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v24);
    }
    else
    {
      uint64_t v10 = 0;
    }
    uint64_t v18 = sel_doneTapped_;
  }
  else
  {
    if (qword_1EBF0CA00 != -1) {
      swift_once();
    }
    id v11 = (id)qword_1EBF0CA18;
    swift_bridgeObjectRetain();
    sub_1C2147730();
    swift_bridgeObjectRelease();

    uint64_t v25 = type metadata accessor for MedicationsInputViewController();
    v24[0] = v0;
    id v12 = v0;
    objc_super v4 = (void *)sub_1C214A5B0();
    swift_bridgeObjectRelease();
    uint64_t v13 = v25;
    if (v25)
    {
      uint64_t v14 = __swift_project_boxed_opaque_existential_0(v24, v25);
      uint64_t v15 = *(void *)(v13 - 8);
      MEMORY[0x1F4188790](v14);
      double v17 = (char *)v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v15 + 16))(v17);
      uint64_t v10 = sub_1C214BA70();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v13);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v24);
    }
    else
    {
      uint64_t v10 = 0;
    }
    uint64_t v18 = sel_saveTapped_;
  }
  id v19 = objc_allocWithZone(MEMORY[0x1E4FB14A8]);
  id v20 = objc_msgSend(v19, sel_initWithTitle_style_target_action_, v4, 2, v10, v18, v24[0]);

  swift_unknownObjectRelease();
  id v21 = objc_msgSend(v1, sel_navigationItem);
  objc_msgSend(v21, sel_setRightBarButtonItem_, v20);

  id v22 = objc_msgSend(v1, sel_navigationItem);
  id v23 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB14A8]), sel_initWithBarButtonSystemItem_target_action_, 1, v1, sel_cancelTapped_);
  objc_msgSend(v22, sel_setLeftBarButtonItem_, v23);
}

void sub_1C1F1DF98()
{
  if (v0[qword_1EA2C2BC8] == 1)
  {
    if (qword_1EBF0CA00 == -1) {
      goto LABEL_6;
    }
    goto LABEL_10;
  }
  sub_1C2149E90();

  if (v6)
  {
    if (qword_1EBF0CA00 == -1)
    {
LABEL_6:
      id v1 = (id)qword_1EBF0CA18;
      swift_bridgeObjectRetain();
      sub_1C2147730();
      swift_bridgeObjectRelease();

      goto LABEL_7;
    }
LABEL_10:
    swift_once();
    goto LABEL_6;
  }
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8C0);
  sub_1C2149490();
LABEL_7:
  id v2 = (void *)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_setTitle_, v2);

  id v3 = objc_msgSend(v0, sel_collectionView);
  if (v3)
  {
    objc_super v4 = v3;
    id v5 = objc_msgSend(self, sel_systemBackgroundColor);
    objc_msgSend(v4, sel_setBackgroundColor_, v5);
  }
  else
  {
    __break(1u);
  }
}

void sub_1C1F1E1F4(void *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = a1;
  sub_1C1F2027C();
}

uint64_t sub_1C1F1E254(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v18 = a4;
  uint64_t v6 = sub_1C214A3F0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  id v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1C214A420();
  uint64_t v10 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19);
  id v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0CB10);
  uint64_t v13 = (void *)sub_1C214AD80();
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a1;
  aBlock[4] = a3;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C1F0E42C;
  aBlock[3] = v18;
  uint64_t v15 = _Block_copy(aBlock);
  id v16 = a1;
  swift_release();
  sub_1C214A410();
  aBlock[0] = MEMORY[0x1E4FBC860];
  sub_1C1F20A0C((unint64_t *)&qword_1EBF0CAE0, MEMORY[0x1E4FBCB00]);
  sub_1C1F209B4();
  sub_1C1F20A0C((unint64_t *)&qword_1EBF0CB00, (void (*)(uint64_t))sub_1C1F209B4);
  sub_1C214B640();
  MEMORY[0x1C8752F10](0, v12, v9, v15);
  _Block_release(v15);

  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v19);
}

void sub_1C1F1E530(void *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = a1;
  sub_1C1F205E8();
}

void sub_1C1F1E590(void *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = a1;
  sub_1C2149550();
  objc_msgSend(v5, sel_dismissViewControllerAnimated_completion_, 1, 0);
}

void sub_1C1F1E618()
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v1 = sub_1C21497F0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = MEMORY[0x1F4188790](v1);
  id v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v27 - v6;
  sub_1C21497A0();
  uint64_t v8 = sub_1C21497E0();
  os_log_type_t v9 = sub_1C214ABB0();
  BOOL v10 = os_log_type_enabled(v8, v9);
  uint64_t v29 = ObjectType;
  if (v10)
  {
    id v30 = v5;
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    id v12 = (void *)swift_slowAlloc();
    uint64_t v28 = v1;
    uint64_t v13 = v2;
    uint64_t v14 = v12;
    uint64_t v32 = v12;
    *(_DWORD *)uint64_t v11 = 136315138;
    uint64_t v15 = sub_1C214BC10();
    uint64_t v31 = sub_1C1F6FD54(v15, v16, (uint64_t *)&v32);
    id v5 = v30;
    sub_1C214B530();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C1F0B000, v8, v9, "[%s] Attempting to save new schedule", v11, 0xCu);
    swift_arrayDestroy();
    double v17 = v14;
    uint64_t v2 = v13;
    uint64_t v1 = v28;
    MEMORY[0x1C8754730](v17, -1, -1);
    MEMORY[0x1C8754730](v11, -1, -1);
  }

  uint64_t v18 = *(void (**)(char *, uint64_t))(v2 + 8);
  v18(v7, v1);
  swift_retain();
  sub_1C2149E90();
  swift_release();
  uint64_t v19 = v32;
  if (v32)
  {
    sub_1C1F1EC24(v32);
  }
  else
  {
    sub_1C21497A0();
    id v20 = sub_1C21497E0();
    uint64_t v21 = sub_1C214ABD0();
    if (os_log_type_enabled(v20, (os_log_type_t)v21))
    {
      id v22 = (uint8_t *)swift_slowAlloc();
      id v23 = (void *)swift_slowAlloc();
      uint64_t v32 = v23;
      id v30 = v5;
      *(_DWORD *)id v22 = 136315138;
      uint64_t v24 = sub_1C214BC10();
      uint64_t v31 = sub_1C1F6FD54(v24, v25, (uint64_t *)&v32);
      sub_1C214B530();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C1F0B000, v20, (os_log_type_t)v21, "[%s] Unable to save medication schedule. Schedule is nil.", v22, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C8754730](v23, -1, -1);
      MEMORY[0x1C8754730](v22, -1, -1);

      unint64_t v26 = v30;
    }
    else
    {

      unint64_t v26 = v5;
    }
    v18(v26, v1);
  }
}

void sub_1C1F1E9BC()
{
  swift_getObjectType();
  uint64_t v0 = sub_1C21497F0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  sub_1C2149E90();
  swift_release();
  uint64_t v4 = v13;
  if (v13)
  {
    sub_1C1F1EC24(v13);
  }
  else
  {
    sub_1C2149E90();
    id v5 = v13;
    if (v13)
    {
      sub_1C1F1F684((uint64_t)v13);
    }
    else
    {
      sub_1C21497A0();
      uint64_t v6 = sub_1C21497E0();
      uint64_t v7 = sub_1C214ABD0();
      if (os_log_type_enabled(v6, (os_log_type_t)v7))
      {
        uint64_t v8 = (uint8_t *)swift_slowAlloc();
        os_log_type_t v9 = (void *)swift_slowAlloc();
        uint64_t v13 = v9;
        *(_DWORD *)uint64_t v8 = 136315138;
        uint64_t v10 = sub_1C214BC10();
        uint64_t v12 = sub_1C1F6FD54(v10, v11, (uint64_t *)&v13);
        sub_1C214B530();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1C1F0B000, v6, (os_log_type_t)v7, "[%s] Unable to save medication schedule. Schedule or previous schedule was nil.", v8, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C8754730](v9, -1, -1);
        MEMORY[0x1C8754730](v8, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    }
  }
}

void sub_1C1F1EC24(void *a1)
{
  uint64_t v2 = v1;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = sub_1C21497F0();
  uint64_t v6 = *(char **)(v5 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  os_log_type_t v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  unint64_t v11 = (char *)&v37 - v10;
  sub_1C21497A0();
  uint64_t v12 = sub_1C21497E0();
  os_log_type_t v13 = sub_1C214ABB0();
  BOOL v14 = os_log_type_enabled(v12, v13);
  uint64_t v41 = ObjectType;
  if (v14)
  {
    uint64_t v40 = v5;
    uint64_t v15 = swift_slowAlloc();
    uint64_t v39 = v9;
    unint64_t v16 = (uint8_t *)v15;
    uint64_t v17 = swift_slowAlloc();
    aBlock[0] = v17;
    *(_DWORD *)unint64_t v16 = 136315138;
    unint64_t v38 = v2;
    uint64_t v18 = sub_1C214BC10();
    uint64_t v42 = sub_1C1F6FD54(v18, v19, aBlock);
    uint64_t v2 = v38;
    sub_1C214B530();
    uint64_t v5 = v40;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C1F0B000, v12, v13, "[%s] Attempting to save/update schedule", v16, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C8754730](v17, -1, -1);
    id v20 = v16;
    os_log_type_t v9 = v39;
    MEMORY[0x1C8754730](v20, -1, -1);
  }

  uint64_t v21 = (void (*)(char *, uint64_t))*((void *)v6 + 1);
  v21(v11, v5);
  sub_1C2149E90();
  id v22 = (void *)aBlock[0];
  if (objc_msgSend(a1, sel_isIdenticalToMedicationSchedule_, aBlock[0])
    && *((unsigned char *)v2 + qword_1EA2C2BD0) != 1)
  {
    sub_1C2149550();
    sub_1C21497A0();
    uint64_t v29 = sub_1C21497E0();
    os_log_type_t v30 = sub_1C214ABB0();
    if (os_log_type_enabled(v29, v30))
    {
      uint64_t v39 = v6;
      uint64_t v31 = (uint8_t *)swift_slowAlloc();
      uint64_t v32 = swift_slowAlloc();
      aBlock[0] = v32;
      uint64_t v40 = v5;
      *(_DWORD *)uint64_t v31 = 136315138;
      uint64_t v33 = sub_1C214BC10();
      uint64_t v42 = sub_1C1F6FD54(v33, v34, aBlock);
      sub_1C214B530();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C1F0B000, v29, v30, "[%s] Schedule not changed", v31, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C8754730](v32, -1, -1);
      MEMORY[0x1C8754730](v31, -1, -1);

      uint64_t v35 = v40;
      objc_super v36 = v9;
    }
    else
    {

      objc_super v36 = v9;
      uint64_t v35 = v5;
    }
    v21(v36, v35);
  }
  else
  {
    id v23 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F2B0B8]), sel_init);
    id v24 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F66B38]), sel_initWithHealthStore_, v23);

    unint64_t v25 = (void *)swift_allocObject();
    v25[2] = v2;
    v25[3] = a1;
    v25[4] = v41;
    aBlock[4] = (uint64_t)sub_1C1F20C1C;
    aBlock[5] = (uint64_t)v25;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_1C20E218C;
    aBlock[3] = (uint64_t)&block_descriptor_40;
    unint64_t v26 = _Block_copy(aBlock);
    id v27 = v2;
    id v28 = a1;
    swift_release();
    objc_msgSend(v24, sel_saveSchedule_completion_, v28, v26);
    _Block_release(v26);
  }
}

uint64_t sub_1C1F1F108(char a1, void *a2, uint64_t a3, void *a4)
{
  uint64_t v8 = sub_1C21497F0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x1F4188790](v10);
  uint64_t v15 = (char *)&v44 - v14;
  MEMORY[0x1F4188790](v13);
  uint64_t v17 = (char *)&v44 - v16;
  if (a1)
  {
    sub_1C21497A0();
    uint64_t v18 = sub_1C21497E0();
    os_log_type_t v19 = sub_1C214ABB0();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v45 = v8;
      id v20 = (uint8_t *)swift_slowAlloc();
      uint64_t v21 = swift_slowAlloc();
      uint64_t v47 = v21;
      uint64_t v44 = a3;
      *(_DWORD *)id v20 = 136315138;
      uint64_t v22 = sub_1C214BC10();
      uint64_t v46 = sub_1C1F6FD54(v22, v23, &v47);
      sub_1C214B530();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C1F0B000, v18, v19, "[%s] Schedule save/updated", v20, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C8754730](v21, -1, -1);
      MEMORY[0x1C8754730](v20, -1, -1);

      (*(void (**)(char *, uint64_t))(v9 + 8))(v17, v45);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v9 + 8))(v17, v8);
    }
    uint64_t v47 = (uint64_t)a4;
    id v35 = a4;
    sub_1C2149E70();

    return sub_1C2149550();
  }
  else
  {
    if (a2)
    {
      sub_1C21497A0();
      id v24 = a2;
      id v25 = a2;
      unint64_t v26 = sub_1C21497E0();
      os_log_type_t v27 = sub_1C214ABD0();
      if (os_log_type_enabled(v26, v27))
      {
        uint64_t v28 = swift_slowAlloc();
        uint64_t v29 = swift_slowAlloc();
        uint64_t v47 = v29;
        *(_DWORD *)uint64_t v28 = 136315394;
        uint64_t v45 = v8;
        uint64_t v30 = sub_1C214BC10();
        uint64_t v46 = sub_1C1F6FD54(v30, v31, &v47);
        sub_1C214B530();
        swift_bridgeObjectRelease();
        *(_WORD *)(v28 + 12) = 2080;
        swift_getErrorValue();
        uint64_t v32 = sub_1C214BAE0();
        uint64_t v46 = sub_1C1F6FD54(v32, v33, &v47);
        sub_1C214B530();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_1C1F0B000, v26, v27, "[%s] Failed to save/update medication schedule due to %s", (uint8_t *)v28, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1C8754730](v29, -1, -1);
        MEMORY[0x1C8754730](v28, -1, -1);

        return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, v45);
      }

      uint64_t v42 = *(uint64_t (**)(char *, uint64_t))(v9 + 8);
      os_log_type_t v43 = v12;
    }
    else
    {
      sub_1C21497A0();
      objc_super v36 = sub_1C21497E0();
      os_log_type_t v37 = sub_1C214ABD0();
      if (os_log_type_enabled(v36, v37))
      {
        unint64_t v38 = (uint8_t *)swift_slowAlloc();
        uint64_t v39 = swift_slowAlloc();
        uint64_t v47 = v39;
        *(_DWORD *)unint64_t v38 = 136315138;
        uint64_t v40 = sub_1C214BC10();
        uint64_t v46 = sub_1C1F6FD54(v40, v41, &v47);
        sub_1C214B530();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1C1F0B000, v36, v37, "[%s] Failed to save/update medication schedule without an error", v38, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C8754730](v39, -1, -1);
        MEMORY[0x1C8754730](v38, -1, -1);

        return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v15, v8);
      }

      uint64_t v42 = *(uint64_t (**)(char *, uint64_t))(v9 + 8);
      os_log_type_t v43 = v15;
    }
    return v42(v43, v8);
  }
}

void sub_1C1F1F684(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = sub_1C21497F0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C21497A0();
  uint64_t v9 = sub_1C21497E0();
  os_log_type_t v10 = sub_1C214ABB0();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v24 = v5;
    uint64_t v11 = swift_slowAlloc();
    uint64_t v26 = a1;
    uint64_t v12 = (uint8_t *)v11;
    uint64_t v13 = swift_slowAlloc();
    id v25 = v2;
    uint64_t v14 = v13;
    aBlock[0] = v13;
    *(_DWORD *)uint64_t v12 = 136315138;
    uint64_t v15 = sub_1C214BC10();
    uint64_t v27 = sub_1C1F6FD54(v15, v16, aBlock);
    sub_1C214B530();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C1F0B000, v9, v10, "[%s] Attempting to delete previous schedule", v12, 0xCu);
    swift_arrayDestroy();
    uint64_t v17 = v14;
    uint64_t v2 = v25;
    MEMORY[0x1C8754730](v17, -1, -1);
    uint64_t v18 = v12;
    a1 = v26;
    MEMORY[0x1C8754730](v18, -1, -1);

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v24);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  id v19 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F2B0B8]), sel_init);
  id v20 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F66B38]), sel_initWithHealthStore_, v19);

  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = v2;
  *(void *)(v21 + 24) = ObjectType;
  aBlock[4] = (uint64_t)sub_1C1F20BD4;
  aBlock[5] = v21;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1C20E218C;
  aBlock[3] = (uint64_t)&block_descriptor_34;
  uint64_t v22 = _Block_copy(aBlock);
  id v23 = v2;
  swift_release();
  objc_msgSend(v20, sel_deleteSchedule_completion_, a1, v22);
  _Block_release(v22);
}

uint64_t sub_1C1F1F984(char a1, void *a2)
{
  uint64_t v4 = sub_1C21497F0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x1F4188790](v6);
  uint64_t v11 = (char *)&v39 - v10;
  MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v39 - v12;
  if (a1)
  {
    sub_1C21497A0();
    uint64_t v14 = sub_1C21497E0();
    os_log_type_t v15 = sub_1C214ABB0();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v40 = v4;
      unint64_t v16 = (uint8_t *)swift_slowAlloc();
      uint64_t v17 = swift_slowAlloc();
      uint64_t v42 = v17;
      *(_DWORD *)unint64_t v16 = 136315138;
      uint64_t v18 = sub_1C214BC10();
      uint64_t v41 = sub_1C1F6FD54(v18, v19, &v42);
      sub_1C214B530();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C1F0B000, v14, v15, "[%s] Schedule deleted. Now considered \"As Needed\".", v16, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C8754730](v17, -1, -1);
      MEMORY[0x1C8754730](v16, -1, -1);

      (*(void (**)(char *, uint64_t))(v5 + 8))(v13, v40);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v5 + 8))(v13, v4);
    }
    uint64_t v42 = 0;
    return sub_1C2149E70();
  }
  else
  {
    if (a2)
    {
      sub_1C21497A0();
      id v20 = a2;
      id v21 = a2;
      uint64_t v22 = sub_1C21497E0();
      os_log_type_t v23 = sub_1C214ABD0();
      if (os_log_type_enabled(v22, v23))
      {
        uint64_t v24 = swift_slowAlloc();
        uint64_t v25 = swift_slowAlloc();
        uint64_t v42 = v25;
        *(_DWORD *)uint64_t v24 = 136315394;
        uint64_t v26 = sub_1C214BC10();
        uint64_t v41 = sub_1C1F6FD54(v26, v27, &v42);
        uint64_t v40 = v4;
        sub_1C214B530();
        swift_bridgeObjectRelease();
        *(_WORD *)(v24 + 12) = 2080;
        swift_getErrorValue();
        uint64_t v28 = sub_1C214BAE0();
        uint64_t v41 = sub_1C1F6FD54(v28, v29, &v42);
        sub_1C214B530();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_1C1F0B000, v22, v23, "[%s] Failed to delete medication schedule due to %s", (uint8_t *)v24, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1C8754730](v25, -1, -1);
        MEMORY[0x1C8754730](v24, -1, -1);

        return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v40);
      }

      os_log_type_t v37 = *(uint64_t (**)(char *, uint64_t))(v5 + 8);
      unint64_t v38 = v8;
    }
    else
    {
      sub_1C21497A0();
      unint64_t v31 = sub_1C21497E0();
      os_log_type_t v32 = sub_1C214ABD0();
      if (os_log_type_enabled(v31, v32))
      {
        unint64_t v33 = (uint8_t *)swift_slowAlloc();
        uint64_t v34 = swift_slowAlloc();
        uint64_t v42 = v34;
        *(_DWORD *)unint64_t v33 = 136315138;
        uint64_t v35 = sub_1C214BC10();
        uint64_t v41 = sub_1C1F6FD54(v35, v36, &v42);
        sub_1C214B530();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1C1F0B000, v31, v32, "[%s] Failed to delete medication schedule without an error", v33, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C8754730](v34, -1, -1);
        MEMORY[0x1C8754730](v33, -1, -1);
      }

      os_log_type_t v37 = *(uint64_t (**)(char *, uint64_t))(v5 + 8);
      unint64_t v38 = v11;
    }
    return v37(v38, v4);
  }
}

void MedicationsInputViewController.__allocating_init(dataSource:)()
{
}

void MedicationsInputViewController.init(dataSource:)()
{
}

id MedicationsInputViewController.__allocating_init(collectionViewLayout:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCollectionViewLayout_, a1);

  return v3;
}

void MedicationsInputViewController.init(collectionViewLayout:)()
{
}

void sub_1C1F1FF7C(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = a3;
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1C1F1FFB0()
{
  swift_release();

  swift_release();
  swift_release();

  return swift_release();
}

id MedicationsInputViewController.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MedicationsInputViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1C1F20058(uint64_t a1)
{
  swift_release();

  swift_release();
  swift_release();

  return swift_release();
}

uint64_t type metadata accessor for MedicationsInputViewController()
{
  uint64_t result = qword_1EA2C2BF8;
  if (!qword_1EA2C2BF8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C1F20120()
{
  swift_unknownObjectWeakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

void sub_1C1F20158(unsigned __int8 *a1)
{
  sub_1C1F1DA10(a1, v1);
}

void sub_1C1F20160()
{
  if (!qword_1EA2C2BE8)
  {
    unint64_t v0 = sub_1C2149EA0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C2BE8);
    }
  }
}

uint64_t sub_1C1F201C8()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for MedicationsInputViewController(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MedicationsInputViewController);
}

uint64_t dispatch thunk of MedicationsInputViewController.__allocating_init(schedulePublisher:medication:resetSchedule:restartingSchedule:)()
{
  return (*(uint64_t (**)(void))(class metadata base offset for MedicationsInputViewController + v0 + 80))();
}

uint64_t sub_1C1F20274()
{
  return type metadata accessor for MedicationsInputViewController();
}

void sub_1C1F2027C()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v3 = sub_1C21497F0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&aBlock[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  sub_1C2149E90();
  swift_release();
  uint64_t v7 = (void *)aBlock[0];
  if (aBlock[0])
  {
    uint64_t v8 = swift_allocObject();
    *(void *)(v8 + 16) = v1;
    id v9 = objc_allocWithZone(MEMORY[0x1E4F66B68]);
    id v10 = v1;
    id v11 = objc_msgSend(v9, sel_init);
    uint64_t v12 = (void *)swift_allocObject();
    v12[2] = sub_1C1F20A8C;
    v12[3] = v8;
    v12[4] = 0;
    v12[5] = 0;
    v12[6] = v10;
    v12[7] = ObjectType;
    aBlock[4] = (uint64_t)sub_1C1F20998;
    aBlock[5] = (uint64_t)v12;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_1C1F45FF0;
    aBlock[3] = (uint64_t)&block_descriptor_22;
    uint64_t v13 = _Block_copy(aBlock);
    id v14 = v10;
    swift_retain();
    swift_release();
    objc_msgSend(v11, sel_checkIncompatibilityForSchedule_completion_, v7, v13);
    _Block_release(v13);

    swift_release();
  }
  else
  {
    sub_1C21497A0();
    os_log_type_t v15 = sub_1C21497E0();
    os_log_type_t v16 = sub_1C214ABB0();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = (uint8_t *)swift_slowAlloc();
      uint64_t v18 = swift_slowAlloc();
      *(_DWORD *)uint64_t v17 = 136315138;
      id v21 = v17 + 4;
      aBlock[0] = v18;
      uint64_t v19 = sub_1C214BC10();
      uint64_t aBlock[6] = sub_1C1F6FD54(v19, v20, aBlock);
      sub_1C214B530();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C1F0B000, v15, v16, "[%s] Skipping check for device incompatibility", v17, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C8754730](v18, -1, -1);
      MEMORY[0x1C8754730](v17, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    sub_1C1F1E618();
    objc_msgSend(v1, sel_dismissViewControllerAnimated_completion_, 1, 0);
  }
}

void sub_1C1F205E8()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v3 = sub_1C21497F0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&aBlock[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  sub_1C2149E90();
  swift_release();
  uint64_t v7 = (void *)aBlock[0];
  if (aBlock[0])
  {
    uint64_t v8 = swift_allocObject();
    *(void *)(v8 + 16) = v1;
    id v9 = objc_allocWithZone(MEMORY[0x1E4F66B68]);
    id v10 = v1;
    id v11 = objc_msgSend(v9, sel_init);
    uint64_t v12 = (void *)swift_allocObject();
    v12[2] = sub_1C1F20954;
    v12[3] = v8;
    v12[4] = 0;
    v12[5] = 0;
    v12[6] = v10;
    v12[7] = ObjectType;
    aBlock[4] = (uint64_t)sub_1C1F20998;
    aBlock[5] = (uint64_t)v12;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_1C1F45FF0;
    aBlock[3] = (uint64_t)&block_descriptor_3;
    uint64_t v13 = _Block_copy(aBlock);
    id v14 = v10;
    swift_retain();
    swift_release();
    objc_msgSend(v11, sel_checkIncompatibilityForSchedule_completion_, v7, v13);
    _Block_release(v13);

    swift_release();
  }
  else
  {
    sub_1C21497A0();
    os_log_type_t v15 = sub_1C21497E0();
    os_log_type_t v16 = sub_1C214ABB0();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = (uint8_t *)swift_slowAlloc();
      uint64_t v18 = swift_slowAlloc();
      *(_DWORD *)uint64_t v17 = 136315138;
      id v21 = v17 + 4;
      aBlock[0] = v18;
      uint64_t v19 = sub_1C214BC10();
      uint64_t aBlock[6] = sub_1C1F6FD54(v19, v20, aBlock);
      sub_1C214B530();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C1F0B000, v15, v16, "[%s] Skipping check for device incompatibility", v17, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C8754730](v18, -1, -1);
      MEMORY[0x1C8754730](v17, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    sub_1C1F1E9BC();
    objc_msgSend(v1, sel_dismissViewControllerAnimated_completion_, 1, 0);
  }
}

uint64_t sub_1C1F20954()
{
  return sub_1C1F1E254(*(void **)(v0 + 16), (uint64_t)&unk_1F1D74798, (uint64_t)sub_1C1F2099C, (uint64_t)&block_descriptor_12);
}

id sub_1C1F2099C()
{
  return sub_1C1F20B50(sub_1C1F1E9BC);
}

void sub_1C1F209B4()
{
  if (!qword_1EBF0CAF0)
  {
    sub_1C214A3F0();
    unint64_t v0 = sub_1C214A830();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBF0CAF0);
    }
  }
}

uint64_t sub_1C1F20A0C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C1F20A54()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C1F20A8C()
{
  return sub_1C1F1E254(*(void **)(v0 + 16), (uint64_t)&unk_1F1D74860, (uint64_t)sub_1C1F20B38, (uint64_t)&block_descriptor_28);
}

uint64_t objectdestroy_5Tm()
{
  if (*(void *)(v0 + 16)) {
    swift_release();
  }
  if (*(void *)(v0 + 32)) {
    swift_release();
  }

  return MEMORY[0x1F4186498](v0, 64, 7);
}

void sub_1C1F20B28(void *a1, void *a2)
{
  sub_1C1F45AA0(a1, a2, *(uint64_t (***)(char *, uint64_t))(v2 + 16), *(id *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(void **)(v2 + 48));
}

id sub_1C1F20B38()
{
  return sub_1C1F20B50(sub_1C1F1E618);
}

id sub_1C1F20B50(void (*a1)(void))
{
  uint64_t v2 = *(void **)(v1 + 16);
  a1();

  return objc_msgSend(v2, sel_dismissViewControllerAnimated_completion_, 1, 0);
}

uint64_t sub_1C1F20B9C()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C1F20BD4(char a1, void *a2)
{
  return sub_1C1F1F984(a1, a2);
}

uint64_t sub_1C1F20BDC()
{
  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1C1F20C1C(char a1, void *a2)
{
  return sub_1C1F1F108(a1, a2, *(void *)(v2 + 16), *(void **)(v2 + 24));
}

uint64_t type metadata accessor for MedicationSideEffectsCompoundDataSource(uint64_t a1)
{
  return sub_1C1F20D10(a1, (uint64_t *)&unk_1EA2C2C08);
}

uint64_t sub_1C1F20C7C()
{
  return sub_1C1F20D54();
}

void sub_1C1F20C88()
{
}

uint64_t sub_1C1F20CB8()
{
  sub_1C2148830();

  return swift_deallocClassInstance();
}

uint64_t sub_1C1F20CE8()
{
  return type metadata accessor for MedicationSideEffectsCompoundDataSource(0);
}

uint64_t type metadata accessor for MedicationSideEffectsDataSource(uint64_t a1)
{
  return sub_1C1F20D10(a1, (uint64_t *)&unk_1EA2C2C18);
}

uint64_t sub_1C1F20D10(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C1F20D48()
{
  return sub_1C1F20D54();
}

uint64_t sub_1C1F20D54()
{
  return swift_initClassMetadata2();
}

void sub_1C1F20D90()
{
}

uint64_t sub_1C1F20DC0()
{
  _s19HealthMedicationsUI34InteractionSeperatorLineDataSourceCfd_0();

  return swift_deallocClassInstance();
}

uint64_t sub_1C1F20DF0()
{
  return type metadata accessor for MedicationSideEffectsDataSource(0);
}

uint64_t sub_1C1F20DF8()
{
  return sub_1C214ACC0();
}

uint64_t sub_1C1F20E68()
{
  uint64_t v0 = sub_1C2148710();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2148690();
  uint64_t v4 = sub_1C2148700();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

uint64_t sub_1C1F20F3C()
{
  return sub_1C2148B80();
}

uint64_t sub_1C1F20FB8()
{
  return sub_1C1F21000(&qword_1EA2C2C28, (void (*)(uint64_t))type metadata accessor for MedicationSideEffectsDataSource);
}

uint64_t sub_1C1F21000(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

double sub_1C1F21048()
{
  double result = 16.0;
  __asm { FMOV            V1.2D, #16.0 }
  xmmword_1EA2C7B20 = xmmword_1C214FC90;
  *(_OWORD *)&qword_1EA2C7B30 = _Q1;
  return result;
}

uint64_t sub_1C1F21064(uint64_t a1, void *a2)
{
  sub_1C1F2116C(a1, (uint64_t)v5);
  uint64_t v3 = *a2 + OBJC_IVAR____TtC19HealthMedicationsUI25InteractionMedicationCell_item;
  swift_beginAccess();
  sub_1C1F2373C((uint64_t)v5, v3, (unint64_t *)&qword_1EBF0C300, (unint64_t *)&qword_1EBF0C2F0);
  swift_endAccess();
  sub_1C1F22674();
  return sub_1C1F23854((uint64_t)v5, (unint64_t *)&qword_1EBF0C300, (unint64_t *)&qword_1EBF0C2F0);
}

uint64_t sub_1C1F21118@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI25InteractionMedicationCell_item;
  swift_beginAccess();
  return sub_1C1F2116C(v3, a1);
}

uint64_t sub_1C1F2116C(uint64_t a1, uint64_t a2)
{
  sub_1C1F237AC(0, (unint64_t *)&qword_1EBF0C300, (unint64_t *)&qword_1EBF0C2F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C1F211E8(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI25InteractionMedicationCell_item;
  swift_beginAccess();
  sub_1C1F2373C(a1, v3, (unint64_t *)&qword_1EBF0C300, (unint64_t *)&qword_1EBF0C2F0);
  swift_endAccess();
  sub_1C1F22674();
  return sub_1C1F23854(a1, (unint64_t *)&qword_1EBF0C300, (unint64_t *)&qword_1EBF0C2F0);
}

id (*sub_1C1F21290(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1C1F212F0;
}

id sub_1C1F212F0(uint64_t a1, char a2)
{
  id result = (id)swift_endAccess();
  if ((a2 & 1) == 0) {
    return sub_1C1F22674();
  }
  return result;
}

id sub_1C1F21324()
{
  uint64_t v1 = OBJC_IVAR____TtC19HealthMedicationsUI25InteractionMedicationCell____lazy_storage___titleButton;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI25InteractionMedicationCell____lazy_storage___titleButton);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI25InteractionMedicationCell____lazy_storage___titleButton);
  }
  else
  {
    if (qword_1EBF0CA00 != -1) {
      swift_once();
    }
    id v4 = (id)qword_1EBF0CA18;
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_1C2147730();
    uint64_t v7 = v6;
    swift_bridgeObjectRelease();

    _sSo8UIButtonC19HealthMedicationsUIE21makeExclamationButton5title29accessibilityIdentifierSuffixABSS_SStFZ_0(v5, v7, 0xD000000000000014, 0x80000001C215DEA0);
    id v9 = v8;
    swift_bridgeObjectRelease();
    id v10 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v9;
    id v3 = v9;

    uint64_t v2 = 0;
  }
  id v11 = v2;
  return v3;
}

char *sub_1C1F21464()
{
  uint64_t v1 = OBJC_IVAR____TtC19HealthMedicationsUI25InteractionMedicationCell____lazy_storage___stackedMedmojiView;
  uint64_t v2 = *(void **)(v0
                + OBJC_IVAR____TtC19HealthMedicationsUI25InteractionMedicationCell____lazy_storage___stackedMedmojiView);
  if (v2)
  {
    id v3 = *(char **)(v0
                  + OBJC_IVAR____TtC19HealthMedicationsUI25InteractionMedicationCell____lazy_storage___stackedMedmojiView);
  }
  else
  {
    uint64_t v4 = v0;
    id v5 = objc_allocWithZone((Class)type metadata accessor for InteractionStackedMedmojiView());
    uint64_t v6 = InteractionStackedMedmojiView.init(width:)(33.0);
    objc_msgSend(v6, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    uint64_t v7 = *(void **)(v4 + v1);
    *(void *)(v4 + v1) = v6;
    id v3 = v6;

    uint64_t v2 = 0;
  }
  id v8 = v2;
  return v3;
}

id sub_1C1F214F8()
{
  return sub_1C1F21540(&OBJC_IVAR____TtC19HealthMedicationsUI25InteractionMedicationCell____lazy_storage___firstInteractionNameLabel);
}

id sub_1C1F2151C()
{
  return sub_1C1F21540(&OBJC_IVAR____TtC19HealthMedicationsUI25InteractionMedicationCell____lazy_storage___secondInteractionNameLabel);
}

id sub_1C1F21540(uint64_t *a1)
{
  uint64_t v2 = *a1;
  id v3 = *(void **)(v1 + *a1);
  if (v3)
  {
    id v4 = *(id *)(v1 + *a1);
  }
  else
  {
    uint64_t v5 = v1;
    id v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
    sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8E0);
    uint64_t v7 = (void *)sub_1C214B0A0();
    objc_msgSend(v6, sel_setFont_, v7);

    id v8 = objc_msgSend(self, sel_labelColor);
    objc_msgSend(v6, sel_setTextColor_, v8);

    uint64_t v15 = sub_1C214A5F0();
    uint64_t v16 = v9;
    swift_bridgeObjectRetain();
    sub_1C214A6C0();
    id v10 = v6;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_1C214A6C0();
    swift_bridgeObjectRelease();
    id v11 = (void *)sub_1C214A5B0();
    swift_bridgeObjectRelease();
    objc_msgSend(v10, sel_setAccessibilityIdentifier_, v11, v15, v16);

    objc_msgSend(v10, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    objc_msgSend(v10, sel_setNumberOfLines_, 2);
    objc_msgSend(v10, sel_setAdjustsFontForContentSizeCategory_, 1);
    uint64_t v12 = *(void **)(v5 + v2);
    *(void *)(v5 + v2) = v10;
    id v4 = v10;

    id v3 = 0;
  }
  id v13 = v3;
  return v4;
}

id sub_1C1F2175C(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = &v4[OBJC_IVAR____TtC19HealthMedicationsUI25InteractionMedicationCell_item];
  *(_OWORD *)uint64_t v9 = 0u;
  *((_OWORD *)v9 + 1) = 0u;
  *((void *)v9 + 4) = 0;
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI25InteractionMedicationCell____lazy_storage___titleButton] = 0;
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI25InteractionMedicationCell_titleButtonHiddenConstraints] = 0;
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI25InteractionMedicationCell_titleButtonVisibleConstraints] = 0;
  v4[OBJC_IVAR____TtC19HealthMedicationsUI25InteractionMedicationCell_titleButtonHidden] = 0;
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI25InteractionMedicationCell____lazy_storage___stackedMedmojiView] = 0;
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI25InteractionMedicationCell____lazy_storage___firstInteractionNameLabel] = 0;
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI25InteractionMedicationCell____lazy_storage___secondInteractionNameLabel] = 0;
  v12.receiver = v4;
  v12.super_class = (Class)type metadata accessor for InteractionMedicationCell();
  id v10 = objc_msgSendSuper2(&v12, sel_initWithFrame_, a1, a2, a3, a4);
  sub_1C1F219B4();
  sub_1C1F21B08();

  return v10;
}

id sub_1C1F21870(void *a1)
{
  id v3 = &v1[OBJC_IVAR____TtC19HealthMedicationsUI25InteractionMedicationCell_item];
  *(_OWORD *)id v3 = 0u;
  *((_OWORD *)v3 + 1) = 0u;
  *((void *)v3 + 4) = 0;
  *(void *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI25InteractionMedicationCell____lazy_storage___titleButton] = 0;
  *(void *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI25InteractionMedicationCell_titleButtonHiddenConstraints] = 0;
  *(void *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI25InteractionMedicationCell_titleButtonVisibleConstraints] = 0;
  v1[OBJC_IVAR____TtC19HealthMedicationsUI25InteractionMedicationCell_titleButtonHidden] = 0;
  *(void *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI25InteractionMedicationCell____lazy_storage___stackedMedmojiView] = 0;
  *(void *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI25InteractionMedicationCell____lazy_storage___firstInteractionNameLabel] = 0;
  *(void *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI25InteractionMedicationCell____lazy_storage___secondInteractionNameLabel] = 0;
  v6.receiver = v1;
  v6.super_class = (Class)type metadata accessor for InteractionMedicationCell();
  id v4 = objc_msgSendSuper2(&v6, sel_initWithCoder_, a1);

  return v4;
}

void sub_1C1F219B4()
{
  id v1 = sub_1C1F21324();
  uint64_t v2 = sub_1C1F21464();
  id v3 = sub_1C1F214F8();
  id v4 = sub_1C1F2151C();
  id v5 = v1;
  id v6 = objc_msgSend(v0, sel_contentView);
  objc_msgSend(v6, sel_addSubview_, v5);

  uint64_t v7 = v2;
  id v8 = objc_msgSend(v0, sel_contentView);
  objc_msgSend(v8, sel_addSubview_, v7);

  id v9 = v3;
  id v10 = objc_msgSend(v0, sel_contentView);
  objc_msgSend(v10, sel_addSubview_, v9);

  id v11 = v4;
  id v12 = objc_msgSend(v0, sel_contentView);
  objc_msgSend(v12, sel_addSubview_, v11);
}

void sub_1C1F21B08()
{
  id v1 = v0;
  if (qword_1EA2C2640 != -1) {
    swift_once();
  }
  double v2 = *(double *)&xmmword_1EA2C7B20 + -5.0;
  double v3 = *(double *)&qword_1EA2C7B30 + -5.0;
  uint64_t v102 = self;
  sub_1C1F0ED28();
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1C214FCA0;
  id v5 = sub_1C1F21324();
  id v6 = objc_msgSend(v5, sel_leadingAnchor);

  id v7 = objc_msgSend(v1, sel_contentView);
  id v8 = objc_msgSend(v7, sel_layoutMarginsGuide);

  id v9 = objc_msgSend(v8, sel_leadingAnchor);
  id v10 = objc_msgSend(v6, sel_constraintEqualToAnchor_, v9);

  *(void *)(v4 + 32) = v10;
  id v11 = sub_1C1F21324();
  id v12 = objc_msgSend(v11, sel_topAnchor);

  id v13 = objc_msgSend(v1, (SEL)&selRef_setContentHuggingPriority_forAxis_);
  id v14 = objc_msgSend(v13, sel_topAnchor);

  id v15 = objc_msgSend(v12, sel_constraintEqualToAnchor_constant_, v14, *(double *)&xmmword_1EA2C7B20);
  *(void *)(v4 + 40) = v15;
  id v16 = sub_1C1F21324();
  id v17 = objc_msgSend(v16, sel_trailingAnchor);

  id v18 = objc_msgSend(v1, (SEL)&selRef_setContentHuggingPriority_forAxis_);
  id v19 = objc_msgSend(v18, sel_trailingAnchor);

  id v20 = objc_msgSend(v17, sel_constraintLessThanOrEqualToAnchor_constant_, v19, *(double *)&qword_1EA2C7B38);
  *(void *)(v4 + 48) = v20;
  id v21 = sub_1C1F21464();
  id v22 = objc_msgSend(v21, sel_leadingAnchor);

  id v23 = objc_msgSend(v1, (SEL)&selRef_setContentHuggingPriority_forAxis_);
  id v24 = objc_msgSend(v23, sel_layoutMarginsGuide);

  id v25 = objc_msgSend(v24, sel_leadingAnchor);
  id v26 = objc_msgSend(v22, sel_constraintEqualToAnchor_, v25);

  *(void *)(v4 + 56) = v26;
  id v27 = sub_1C1F214F8();
  id v28 = objc_msgSend(v27, sel_leadingAnchor);

  unint64_t v29 = sub_1C1F21464();
  id v30 = objc_msgSend(v29, sel_trailingAnchor);

  id v31 = objc_msgSend(v28, sel_constraintEqualToAnchor_constant_, v30, 10.0);
  *(void *)(v4 + 64) = v31;
  id v32 = sub_1C1F214F8();
  id v33 = objc_msgSend(v32, sel_trailingAnchor);

  id v34 = objc_msgSend(v1, (SEL)&selRef_setContentHuggingPriority_forAxis_);
  id v35 = objc_msgSend(v34, sel_layoutMarginsGuide);

  id v36 = objc_msgSend(v35, sel_trailingAnchor);
  id v37 = objc_msgSend(v33, sel_constraintEqualToAnchor_, v36);

  *(void *)(v4 + 72) = v37;
  id v38 = sub_1C1F2151C();
  id v39 = objc_msgSend(v38, sel_leadingAnchor);

  id v40 = sub_1C1F214F8();
  id v41 = objc_msgSend(v40, sel_leadingAnchor);

  id v42 = objc_msgSend(v39, sel_constraintEqualToAnchor_, v41);
  *(void *)(v4 + 80) = v42;
  id v43 = sub_1C1F2151C();
  id v44 = objc_msgSend(v43, sel_trailingAnchor);

  id v45 = objc_msgSend(v1, (SEL)&selRef_setContentHuggingPriority_forAxis_);
  id v46 = objc_msgSend(v45, sel_layoutMarginsGuide);

  id v47 = objc_msgSend(v46, sel_trailingAnchor);
  id v48 = objc_msgSend(v44, sel_constraintEqualToAnchor_, v47);

  *(void *)(v4 + 88) = v48;
  id v49 = sub_1C1F2151C();
  id v50 = objc_msgSend(v49, sel_topAnchor);

  id v51 = sub_1C1F214F8();
  id v52 = objc_msgSend(v51, sel_bottomAnchor);

  id v53 = objc_msgSend(v50, sel_constraintEqualToAnchor_constant_, v52, 8.0);
  *(void *)(v4 + 96) = v53;
  id v54 = objc_msgSend(v1, (SEL)&selRef_setContentHuggingPriority_forAxis_);
  id v55 = objc_msgSend(v54, sel_bottomAnchor);

  id v56 = sub_1C1F2151C();
  id v57 = objc_msgSend(v56, sel_bottomAnchor);

  id v58 = objc_msgSend(v55, sel_constraintGreaterThanOrEqualToAnchor_constant_, v57, *(double *)&qword_1EA2C7B30);
  *(void *)(v4 + 104) = v58;
  id v59 = objc_msgSend(v1, (SEL)&selRef_setContentHuggingPriority_forAxis_);
  id v60 = objc_msgSend(v59, sel_bottomAnchor);

  unint64_t v61 = sub_1C1F21464();
  id v62 = objc_msgSend(v61, sel_bottomAnchor);

  id v63 = objc_msgSend(v60, sel_constraintGreaterThanOrEqualToAnchor_constant_, v62, v3);
  *(void *)(v4 + 112) = v63;
  sub_1C214A7A0();
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C810);
  uint64_t v64 = (void *)sub_1C214A770();
  swift_bridgeObjectRelease();
  objc_msgSend(v102, sel_activateConstraints_, v64);

  uint64_t v65 = swift_allocObject();
  *(_OWORD *)(v65 + 16) = xmmword_1C214FCB0;
  id v66 = sub_1C1F21464();
  id v67 = objc_msgSend(v66, sel_topAnchor);

  id v68 = objc_msgSend(v1, (SEL)&selRef_setContentHuggingPriority_forAxis_);
  id v69 = objc_msgSend(v68, sel_topAnchor);

  id v70 = objc_msgSend(v67, sel_constraintEqualToAnchor_constant_, v69, v2);
  *(void *)(v65 + 32) = v70;
  id v71 = sub_1C1F214F8();
  id v72 = objc_msgSend(v71, sel_topAnchor);

  id v73 = objc_msgSend(v1, (SEL)&selRef_setContentHuggingPriority_forAxis_);
  id v74 = objc_msgSend(v73, sel_topAnchor);

  id v75 = objc_msgSend(v72, sel_constraintEqualToAnchor_constant_, v74, *(double *)&xmmword_1EA2C7B20);
  *(void *)(v65 + 40) = v75;
  sub_1C214A7A0();
  uint64_t v76 = OBJC_IVAR____TtC19HealthMedicationsUI25InteractionMedicationCell_titleButtonHiddenConstraints;
  *(void *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI25InteractionMedicationCell_titleButtonHiddenConstraints] = v65;
  swift_bridgeObjectRelease();
  uint64_t v77 = swift_allocObject();
  *(_OWORD *)(v77 + 16) = xmmword_1C214FCB0;
  char v78 = sub_1C1F21464();
  id v79 = objc_msgSend(v78, sel_topAnchor);

  id v80 = sub_1C1F21324();
  id v81 = objc_msgSend(v80, sel_bottomAnchor);

  id v82 = objc_msgSend(v79, sel_constraintEqualToAnchor_constant_, v81, 5.0);
  *(void *)(v77 + 32) = v82;
  id v83 = sub_1C1F214F8();
  id v84 = objc_msgSend(v83, sel_topAnchor);

  id v85 = sub_1C1F21324();
  id v86 = objc_msgSend(v85, sel_bottomAnchor);

  id v87 = objc_msgSend(v84, sel_constraintEqualToAnchor_constant_, v86, 10.0);
  *(void *)(v77 + 40) = v87;
  sub_1C214A7A0();
  uint64_t v88 = OBJC_IVAR____TtC19HealthMedicationsUI25InteractionMedicationCell_titleButtonVisibleConstraints;
  *(void *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI25InteractionMedicationCell_titleButtonVisibleConstraints] = v77;
  swift_bridgeObjectRelease();
  uint64_t v89 = OBJC_IVAR____TtC19HealthMedicationsUI25InteractionMedicationCell_titleButtonHidden;
  char v90 = v1[OBJC_IVAR____TtC19HealthMedicationsUI25InteractionMedicationCell_titleButtonHidden];
  v1[OBJC_IVAR____TtC19HealthMedicationsUI25InteractionMedicationCell_titleButtonHidden] = 1;
  if ((v90 & 1) == 0)
  {
    id v91 = sub_1C1F21324();
    objc_msgSend(v91, sel_setHidden_, v1[v89]);

    unint64_t v92 = *(void *)&v1[v76];
    if (!v92) {
      goto LABEL_15;
    }
    if (v92 >> 62)
    {
      swift_bridgeObjectRetain_n();
      uint64_t v93 = sub_1C214B930();
      if (v93) {
        goto LABEL_7;
      }
    }
    else
    {
      uint64_t v93 = *(void *)((v92 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain_n();
      if (v93)
      {
LABEL_7:
        if (v93 < 1)
        {
          __break(1u);
          goto LABEL_28;
        }
        for (uint64_t i = 0; i != v93; ++i)
        {
          if ((v92 & 0xC000000000000001) != 0) {
            id v95 = (id)MEMORY[0x1C8753960](i, v92);
          }
          else {
            id v95 = *(id *)(v92 + 8 * i + 32);
          }
          BOOL v96 = v95;
          objc_msgSend(v95, sel_setActive_, v1[v89]);
        }
      }
    }
    swift_bridgeObjectRelease_n();
LABEL_15:
    unint64_t v97 = *(void *)&v1[v88];
    if (!v97) {
      return;
    }
    if (v97 >> 62)
    {
      swift_bridgeObjectRetain_n();
      uint64_t v98 = sub_1C214B930();
      if (v98)
      {
LABEL_18:
        if (v98 >= 1)
        {
          for (uint64_t j = 0; j != v98; ++j)
          {
            if ((v97 & 0xC000000000000001) != 0) {
              id v100 = (id)MEMORY[0x1C8753960](j, v97);
            }
            else {
              id v100 = *(id *)(v97 + 8 * j + 32);
            }
            uint64_t v101 = v100;
            objc_msgSend(v100, sel_setActive_, (v1[v89] & 1) == 0);
          }
          goto LABEL_25;
        }
LABEL_28:
        __break(1u);
        return;
      }
    }
    else
    {
      uint64_t v98 = *(void *)((v97 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain_n();
      if (v98) {
        goto LABEL_18;
      }
    }
LABEL_25:
    swift_bridgeObjectRelease_n();
  }
}

id sub_1C1F22674()
{
  id v1 = v0;
  uint64_t v87 = sub_1C21497F0();
  uint64_t v2 = *(void *)(v87 - 8);
  MEMORY[0x1F4188790](v87);
  uint64_t v4 = (char *)&v69 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1C21498E0();
  uint64_t v85 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  id v7 = (char *)&v69 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1F23674(0, &qword_1EBF0C610, MEMORY[0x1E4FB0E38], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v8 - 8);
  id v84 = (char *)&v69 - v9;
  uint64_t v10 = sub_1C2149830();
  uint64_t v81 = *(void *)(v10 - 8);
  id v82 = (void (*)(char *, uint64_t))v10;
  MEMORY[0x1F4188790](v10);
  id v80 = (char *)&v69 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1C2149860();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  id v15 = (char *)&v69 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1C2149930();
  uint64_t v83 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  id v86 = (char *)&v69 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = (uint64_t)&v1[OBJC_IVAR____TtC19HealthMedicationsUI25InteractionMedicationCell_item];
  swift_beginAccess();
  sub_1C1F2116C(v18, (uint64_t)v89);
  if (!v89[3])
  {
    sub_1C1F23854((uint64_t)v89, (unint64_t *)&qword_1EBF0C300, (unint64_t *)&qword_1EBF0C2F0);
    goto LABEL_19;
  }
  id v79 = v7;
  sub_1C1F23804(0, (unint64_t *)&qword_1EBF0C2F0);
  type metadata accessor for InteractionMedicationItem();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_19:
    sub_1C21497A0();
    id v34 = v1;
    id v35 = sub_1C21497E0();
    os_log_type_t v36 = sub_1C214ABD0();
    if (os_log_type_enabled(v35, v36))
    {
      id v37 = (uint8_t *)swift_slowAlloc();
      uint64_t v38 = swift_slowAlloc();
      v88[0] = v38;
      *(_DWORD *)id v37 = 136446210;
      sub_1C1F2116C(v18, (uint64_t)v89);
      sub_1C1F237AC(0, (unint64_t *)&qword_1EBF0C300, (unint64_t *)&qword_1EBF0C2F0);
      uint64_t v39 = sub_1C214A630();
      v89[0] = sub_1C1F6FD54(v39, v40, v88);
      sub_1C214B530();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C1F0B000, v35, v36, "Incorrect view model for InteractionMedicationItem: %{public}s", v37, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C8754730](v38, -1, -1);
      MEMORY[0x1C8754730](v37, -1, -1);
    }
    else
    {
    }
    return (id)(*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v87);
  }
  uint64_t v87 = v88[0];
  uint64_t v19 = *(void *)(v88[0] + 16);
  swift_beginAccess();
  unint64_t v20 = *(void *)(v19 + 16);
  if (!(v20 >> 62))
  {
    uint64_t v21 = *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v21) {
      goto LABEL_5;
    }
LABEL_24:
    swift_bridgeObjectRelease();
    __break(1u);
    goto LABEL_25;
  }
  swift_bridgeObjectRetain();
  if (!sub_1C214B930()) {
    goto LABEL_24;
  }
LABEL_5:
  uint64_t v76 = v5;
  if ((v20 & 0xC000000000000001) != 0)
  {
LABEL_25:
    id v22 = (id)MEMORY[0x1C8753960](0, v20);
    goto LABEL_8;
  }
  if (!*(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_27;
  }
  id v22 = *(id *)(v20 + 32);
LABEL_8:
  id v23 = v22;
  uint64_t v78 = v12;
  swift_bridgeObjectRelease();
  id v24 = objc_msgSend(v23, sel_severity);

  id v25 = objc_msgSend(v24, sel_severityLevel);
  int v26 = v25 != (id)1;
  uint64_t v5 = OBJC_IVAR____TtC19HealthMedicationsUI25InteractionMedicationCell_titleButtonHidden;
  int v27 = v1[OBJC_IVAR____TtC19HealthMedicationsUI25InteractionMedicationCell_titleButtonHidden];
  v1[OBJC_IVAR____TtC19HealthMedicationsUI25InteractionMedicationCell_titleButtonHidden] = v26;
  uint64_t v77 = v16;
  if (v26 == v27) {
    goto LABEL_40;
  }
  id v28 = sub_1C1F21324();
  objc_msgSend(v28, sel_setHidden_, v1[v5]);

  unint64_t v20 = *(void *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI25InteractionMedicationCell_titleButtonHiddenConstraints];
  if (v20)
  {
    uint64_t v2 = v13;
    if (!(v20 >> 62))
    {
      uint64_t v29 = *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
      id result = (id)swift_bridgeObjectRetain_n();
      if (v29)
      {
LABEL_12:
        if (v29 < 1)
        {
          __break(1u);
          goto LABEL_47;
        }
        for (uint64_t i = 0; i != v29; ++i)
        {
          if ((v20 & 0xC000000000000001) != 0) {
            id v32 = (id)MEMORY[0x1C8753960](i, v20);
          }
          else {
            id v32 = *(id *)(v20 + 8 * i + 32);
          }
          id v33 = v32;
          objc_msgSend(v32, sel_setActive_, v1[v5]);
        }
      }
LABEL_28:
      swift_bridgeObjectRelease_n();
      uint64_t v13 = v2;
      goto LABEL_29;
    }
LABEL_27:
    swift_bridgeObjectRetain_n();
    id result = (id)sub_1C214B930();
    uint64_t v29 = (uint64_t)result;
    if (result) {
      goto LABEL_12;
    }
    goto LABEL_28;
  }
LABEL_29:
  unint64_t v41 = *(void *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI25InteractionMedicationCell_titleButtonVisibleConstraints];
  if (!v41) {
    goto LABEL_40;
  }
  uint64_t v70 = v13;
  if (v41 >> 62)
  {
    swift_bridgeObjectRetain_n();
    id result = (id)sub_1C214B930();
    uint64_t v42 = (uint64_t)result;
    if (result)
    {
LABEL_32:
      if (v42 >= 1)
      {
        for (uint64_t j = 0; j != v42; ++j)
        {
          if ((v41 & 0xC000000000000001) != 0) {
            id v44 = (id)MEMORY[0x1C8753960](j, v41);
          }
          else {
            id v44 = *(id *)(v41 + 8 * j + 32);
          }
          id v45 = v44;
          objc_msgSend(v44, sel_setActive_, (v1[v5] & 1) == 0);
        }
        goto LABEL_39;
      }
LABEL_47:
      __break(1u);
      goto LABEL_48;
    }
  }
  else
  {
    uint64_t v42 = *(void *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x10);
    id result = (id)swift_bridgeObjectRetain_n();
    if (v42) {
      goto LABEL_32;
    }
  }
LABEL_39:
  swift_bridgeObjectRelease_n();
  uint64_t v13 = v70;
LABEL_40:
  id v46 = sub_1C1F21464();
  uint64_t v47 = v87;
  sub_1C1F236D8(v87 + 24, (uint64_t)v89);
  uint64_t v48 = (uint64_t)&v46[OBJC_IVAR____TtC19HealthMedicationsUI29InteractionStackedMedmojiView_stackedMemojiConfig];
  swift_beginAccess();
  sub_1C1F2373C((uint64_t)v89, v48, &qword_1EA2C2C80, (unint64_t *)&qword_1EA2C55B0);
  swift_endAccess();
  sub_1C1FD8260();
  sub_1C1F23854((uint64_t)v89, &qword_1EA2C2C80, (unint64_t *)&qword_1EA2C55B0);

  id v49 = sub_1C1F214F8();
  swift_bridgeObjectRetain();
  id v50 = (void *)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  objc_msgSend(v49, sel_setText_, v50);

  id v51 = sub_1C1F2151C();
  swift_bridgeObjectRetain();
  id v52 = (void *)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  objc_msgSend(v51, sel_setText_, v52);

  id result = (id)HKIntegerFormatter();
  if (!result)
  {
LABEL_48:
    __break(1u);
    return result;
  }
  id v53 = result;
  uint64_t v54 = *(void *)(v47 + 16);
  swift_beginAccess();
  uint64_t v55 = v78;
  if (*(void *)(v54 + 16) >> 62)
  {
    swift_bridgeObjectRetain();
    sub_1C214B930();
    swift_bridgeObjectRelease();
  }
  id v56 = (void *)sub_1C214AAC0();
  id v57 = objc_msgSend(v53, sel_stringFromNumber_, v56);

  if (v57)
  {
    sub_1C214A5F0();

    unsigned int v75 = *MEMORY[0x1E4FB0E18];
    id v74 = *(void (**)(char *))(v13 + 104);
    v74(v15);
    uint64_t v72 = sub_1C2149870();
    uint64_t v58 = *(void *)(v72 - 8);
    id v71 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v58 + 56);
    uint64_t v73 = v58 + 56;
    id v59 = v84;
    v71(v84, 1, 1, v72);
    id v60 = v80;
    sub_1C2149820();
    unint64_t v61 = v86;
    sub_1C21498F0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, void))(v81 + 8))(v60, v82);
    id v82 = *(void (**)(char *, uint64_t))(v13 + 8);
    v82(v15, v55);
    sub_1C1F23674(0, (unint64_t *)&unk_1EBF0C990, MEMORY[0x1E4FB0E68], MEMORY[0x1E4FBBE00]);
    uint64_t v62 = v83;
    unint64_t v63 = (*(unsigned __int8 *)(v83 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v83 + 80);
    uint64_t v64 = swift_allocObject();
    *(_OWORD *)(v64 + 16) = xmmword_1C214FCC0;
    (*(void (**)(unint64_t, char *, uint64_t))(v62 + 16))(v64 + v63, v61, v77);
    uint64_t v65 = v78;
    ((void (*)(char *, void, uint64_t))v74)(v15, v75, v78);
    v71(v59, 1, 1, v72);
    id v66 = v79;
    sub_1C21498D0();
    sub_1C21498A0();
    (*(void (**)(char *, uint64_t))(v85 + 8))(v66, v76);
    v82(v15, v65);
    sub_1C214AEC0();
    swift_release();
    return (id)(*(uint64_t (**)(char *, uint64_t))(v62 + 8))(v86, v77);
  }
  else
  {
    sub_1C1F23674(0, (unint64_t *)&unk_1EBF0C990, MEMORY[0x1E4FB0E68], MEMORY[0x1E4FBBE00]);
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1C214FCD0;
    (*(void (**)(char *, void, uint64_t))(v13 + 104))(v15, *MEMORY[0x1E4FB0E18], v55);
    uint64_t v67 = sub_1C2149870();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v67 - 8) + 56))(v84, 1, 1, v67);
    id v68 = v79;
    sub_1C21498D0();
    sub_1C21498A0();
    (*(void (**)(char *, uint64_t))(v85 + 8))(v68, v76);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v55);
    sub_1C214AEC0();
    return (id)swift_release();
  }
}

uint64_t type metadata accessor for InteractionMedicationCell()
{
  return self;
}

id InteractionMedicationCell.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for InteractionMedicationCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1C1F23564@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC19HealthMedicationsUI25InteractionMedicationCell_item;
  swift_beginAccess();
  return sub_1C1F2116C(v3, a2);
}

uint64_t method lookup function for InteractionMedicationCell(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for InteractionMedicationCell);
}

uint64_t dispatch thunk of InteractionMedicationCell.item.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of InteractionMedicationCell.item.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of InteractionMedicationCell.item.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA0))();
}

void sub_1C1F23674(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C1F236D8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_1C1F2373C(uint64_t a1, uint64_t a2, unint64_t *a3, unint64_t *a4)
{
  sub_1C1F237AC(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a2, a1, v6);
  return a2;
}

void sub_1C1F237AC(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  if (!*a2)
  {
    sub_1C1F23804(255, a3);
    unint64_t v4 = sub_1C214B4F0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1C1F23804(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    uint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_1C1F23854(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  sub_1C1F237AC(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t type metadata accessor for ShapeStepViewController()
{
  uint64_t result = qword_1EA2C2C90;
  if (!qword_1EA2C2C90) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C1F238FC()
{
  return swift_initClassMetadata2();
}

void sub_1C1F23958(unsigned char *a1@<X8>)
{
  *a1 = 97;
}

uint64_t sub_1C1F23964(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  sub_1C1F24698(0, (unint64_t *)&qword_1EA2C2CC8, (void (*)(uint64_t))type metadata accessor for MedicationSearchItem);
  MEMORY[0x1F4188790](v6 - 8);
  unint64_t v8 = &v22[-v7];
  sub_1C1F24698(0, &qword_1EA2C2CA0, MEMORY[0x1E4F66C08]);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = &v22[-v10];
  uint64_t v12 = qword_1EA2C2C88;
  uint64_t v13 = sub_1C2148F60();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v11, 1, 1, v13);
  sub_1C1F24614();
  swift_allocObject();
  uint64_t v14 = v3;
  *(void *)&v3[v12] = sub_1C2149EB0();
  *(void *)&v14[qword_1EA2C7B40] = MEMORY[0x1E4FBC870];
  char v23 = 0;
  type metadata accessor for VisualizationShapeDataSource();
  swift_allocObject();
  uint64_t v15 = swift_retain();
  uint64_t v16 = sub_1C1F99470(v15, &v23);

  sub_1C1F246EC(a1, (uint64_t)v8);
  sub_1C1F246EC((uint64_t)v8, (uint64_t)&v14[qword_1EA2C7D08]);
  sub_1C1F2476C();
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = v16;
  *(void *)(v17 + 24) = *(void *)(v16 + qword_1EA2C4318);
  *(void *)&v14[qword_1EA2C4208] = v17;
  *(void *)&v14[qword_1EA2C4210] = a2;
  sub_1C2148820();
  sub_1C1F24848();
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_1C214FCD0;
  uint64_t v19 = MEMORY[0x1E4F66470];
  *(void *)(v18 + 32) = v16;
  *(void *)(v18 + 40) = v19;
  swift_retain_n();
  swift_retain();
  swift_retain();
  sub_1C2148850();
  uint64_t v20 = sub_1C2148AC0();
  swift_release();
  swift_release();
  sub_1C1F244F4((uint64_t)v8, (unint64_t *)&qword_1EA2C2CC8, (void (*)(uint64_t))type metadata accessor for MedicationSearchItem);
  sub_1C1F244F4(a1, (unint64_t *)&qword_1EA2C2CC8, (void (*)(uint64_t))type metadata accessor for MedicationSearchItem);
  return v20;
}

void sub_1C1F23C4C(char *a1, uint64_t a2, void *a3)
{
  sub_1C1F24698(0, &qword_1EA2C2CA0, MEMORY[0x1E4F66C08]);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v11 - v6;
  uint64_t v8 = qword_1EA2C2C88;
  uint64_t v9 = sub_1C2148F60();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v7, 1, 1, v9);
  sub_1C1F24614();
  swift_allocObject();
  id v10 = a3;
  *(void *)&a1[v8] = sub_1C2149EB0();
  *(void *)&a1[qword_1EA2C7B40] = MEMORY[0x1E4FBC870];

  sub_1C214B910();
  __break(1u);
}

void sub_1C1F23DA8(void *a1)
{
  sub_1C1F24698(0, &qword_1EA2C2CA0, MEMORY[0x1E4F66C08]);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v23 - v3;
  sub_1C1F24698(0, &qword_1EA2C2CA8, (void (*)(uint64_t))sub_1C1F243F4);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v23 - v6;
  sub_1C1F243F4();
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = (void *)sub_1C2147D40();
  objc_msgSend(a1, sel_deselectItemAtIndexPath_animated_, v13, 1);

  uint64_t v14 = (void *)sub_1C2147D40();
  id v24 = objc_msgSend(a1, sel_cellForItemAtIndexPath_, v14);

  if (v24)
  {
    type metadata accessor for ShapeCell(0);
    uint64_t v15 = swift_dynamicCastClass();
    if (v15)
    {
      uint64_t v16 = v15 + OBJC_IVAR____TtC19HealthMedicationsUI9ShapeCell_item;
      swift_beginAccess();
      sub_1C1F2116C(v16, (uint64_t)v25);
      if (v26)
      {
        sub_1C1F248B4(0, (unint64_t *)&qword_1EBF0C2F0);
        id v17 = v24;
        int v18 = swift_dynamicCast();
        (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, v18 ^ 1u, 1, v9);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v7, 1, v9) != 1)
        {
          sub_1C1F24550((uint64_t)v7, (uint64_t)v12);
          uint64_t v19 = sub_1C2148F60();
          uint64_t v20 = *(void *)(v19 - 8);
          (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v4, v12, v19);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v4, 0, 1, v19);
          swift_retain();
          sub_1C2149E70();

          swift_release();
          sub_1C1F244F4((uint64_t)v4, &qword_1EA2C2CA0, MEMORY[0x1E4F66C08]);
          sub_1C1F245B4((uint64_t)v12, (uint64_t (*)(void))sub_1C1F243F4);
          return;
        }
      }
      else
      {
        id v22 = v24;
        sub_1C1F245B4((uint64_t)v25, (uint64_t (*)(void))sub_1C1F24488);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v7, 1, 1, v9);
      }

      sub_1C1F244F4((uint64_t)v7, &qword_1EA2C2CA8, (void (*)(uint64_t))sub_1C1F243F4);
    }
    else
    {
      id v21 = v24;
    }
  }
}

uint64_t sub_1C1F241FC(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5 = sub_1C2147D90();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2147D50();
  id v9 = a3;
  id v10 = a1;
  sub_1C1F23DA8(v9);

  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void sub_1C1F242F8()
{
}

uint64_t sub_1C1F24328()
{
  swift_release();

  return swift_bridgeObjectRelease();
}

id sub_1C1F24368()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ShapeStepViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1C1F243A0()
{
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1C1F243EC()
{
  return type metadata accessor for ShapeStepViewController();
}

void sub_1C1F243F4()
{
  if (!qword_1EA2C2CB0)
  {
    sub_1C2148F60();
    sub_1C1F24800(&qword_1EA2C2CB8, MEMORY[0x1E4F66C08]);
    unint64_t v0 = type metadata accessor for MedmojiConfigItem();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C2CB0);
    }
  }
}

void sub_1C1F24488()
{
  if (!qword_1EBF0C300)
  {
    sub_1C1F248B4(255, (unint64_t *)&qword_1EBF0C2F0);
    unint64_t v0 = sub_1C214B4F0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBF0C300);
    }
  }
}

uint64_t sub_1C1F244F4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1C1F24698(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1C1F24550(uint64_t a1, uint64_t a2)
{
  sub_1C1F243F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C1F245B4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_1C1F24614()
{
  if (!qword_1EA2C2CC0)
  {
    sub_1C1F24698(255, &qword_1EA2C2CA0, MEMORY[0x1E4F66C08]);
    unint64_t v0 = sub_1C2149EA0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C2CC0);
    }
  }
}

void sub_1C1F24698(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C214B4F0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1C1F246EC(uint64_t a1, uint64_t a2)
{
  sub_1C1F24698(0, (unint64_t *)&qword_1EA2C2CC8, (void (*)(uint64_t))type metadata accessor for MedicationSearchItem);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1C1F2476C()
{
  if (!qword_1EA2C2CD0)
  {
    type metadata accessor for VisualizationShapeDataSource();
    sub_1C1F24800(&qword_1EA2C2CD8, (void (*)(uint64_t))type metadata accessor for VisualizationShapeDataSource);
    unint64_t v0 = type metadata accessor for SpecificationStepViewController.MedicationOnboardingStepObservableDataSource();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C2CD0);
    }
  }
}

uint64_t sub_1C1F24800(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C1F24848()
{
  if (!qword_1EA2C69F0)
  {
    sub_1C1F248B4(255, (unint64_t *)&qword_1EA2C2CE0);
    unint64_t v0 = sub_1C214BA50();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C69F0);
    }
  }
}

uint64_t sub_1C1F248B4(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    uint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_1C1F24904()
{
  uint64_t v0 = sub_1C2148410();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C21483F0();
  uint64_t v4 = sub_1C21483A0();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

void MedicationChartCellDataSource.__allocating_init(arrangedSections:isHidden:)()
{
}

void MedicationChartCellDataSource.init(arrangedSections:isHidden:)()
{
}

void sub_1C1F24A3C()
{
}

uint64_t MedicationChartCellDataSource.deinit()
{
  uint64_t v0 = _s19HealthMedicationsUI34InteractionSeperatorLineDataSourceCfd_0();

  return v0;
}

uint64_t MedicationChartCellDataSource.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1C1F24AD4()
{
  return sub_1C2148B80();
}

Swift::Void __swiftcall MedicationChartCellDataSource.registerCells(for:)(UICollectionView *a1)
{
}

unint64_t sub_1C1F24B6C()
{
  unint64_t result = qword_1EA2C2CF0;
  if (!qword_1EA2C2CF0)
  {
    type metadata accessor for MedicationChartCellDataSource();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C2CF0);
  }
  return result;
}

uint64_t type metadata accessor for MedicationChartCellDataSource()
{
  uint64_t result = qword_1EA2C2CF8;
  if (!qword_1EA2C2CF8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C1F24C10()
{
  return sub_1C214ACC0();
}

uint64_t sub_1C1F24C48()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for MedicationChartCellDataSource(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MedicationChartCellDataSource);
}

uint64_t dispatch thunk of MedicationChartCellDataSource.layout(for:environment:)()
{
  return (*(uint64_t (**)(void))(class metadata base offset for MedicationChartCellDataSource + *v0 + 16))();
}

uint64_t sub_1C1F24CF0()
{
  return type metadata accessor for MedicationChartCellDataSource();
}

uint64_t OntologyDebugDisplayable<>.name.getter()
{
  objc_msgSend(v0, sel_type);
  id v1 = (id)HKStringFromUserDomainConceptPropertyType();
  uint64_t v2 = sub_1C214A5F0();

  return v2;
}

uint64_t HKUserDomainConceptBasicProperty.value.getter()
{
  id v1 = objc_msgSend(v0, sel_stringValue);
  if (!v1) {
    return 0x6F6E2065756C6156;
  }
  uint64_t v2 = v1;
  uint64_t v3 = sub_1C214A5F0();

  return v3;
}

uint64_t sub_1C1F24DD4()
{
  return OntologyDebugDisplayable<>.name.getter();
}

uint64_t sub_1C1F24DF8()
{
  id v1 = objc_msgSend(*v0, sel_stringValue);
  if (!v1) {
    return 0x6F6E2065756C6156;
  }
  uint64_t v2 = v1;
  uint64_t v3 = sub_1C214A5F0();

  return v3;
}

uint64_t HKUserDomainConceptNamedQuantity.value.getter()
{
  id v1 = v0;
  sub_1C214B7C0();
  swift_bridgeObjectRelease();
  id v2 = objc_msgSend(v0, sel_name);
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = sub_1C214A5F0();
    uint64_t v6 = v5;
  }
  else
  {
    uint64_t v4 = 0;
    uint64_t v6 = 0;
  }
  sub_1C1F24FA8();
  sub_1C214A610();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  sub_1C214A6C0();
  id v7 = objc_msgSend(v1, sel_unitString, v4, v6);
  sub_1C214A5F0();

  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  return 0x203A656D614ELL;
}

void sub_1C1F24FA8()
{
  if (!qword_1EA2C44C0)
  {
    unint64_t v0 = sub_1C214B4F0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C44C0);
    }
  }
}

uint64_t sub_1C1F25000()
{
  return HKUserDomainConceptNamedQuantity.value.getter();
}

uint64_t HKUserDomainConceptLocalizedString.value.getter()
{
  uint64_t v1 = v0;
  sub_1C214B7C0();
  swift_bridgeObjectRelease();
  id v2 = objc_msgSend(v0, sel_locale);
  sub_1C214A5F0();

  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  sub_1C214A6C0();
  id v3 = objc_msgSend(v1, sel_stringValue);
  sub_1C214A5F0();

  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  return 0x203A656C61636F4CLL;
}

uint64_t sub_1C1F25134()
{
  return HKUserDomainConceptLocalizedString.value.getter();
}

uint64_t HKOntologyLocalizedEducationContent.value.getter()
{
  uint64_t v1 = v0;
  sub_1C214B7C0();
  swift_bridgeObjectRelease();
  id v2 = objc_msgSend(v0, sel_primarySection);
  id v3 = v2;
  if (v2)
  {
    id v4 = objc_msgSend(v2, sel_localeIdentifier);

    id v3 = (void *)sub_1C214A5F0();
    uint64_t v6 = v5;
  }
  else
  {
    uint64_t v6 = 0;
  }
  sub_1C1F24FA8();
  sub_1C214A610();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  sub_1C214A6C0();
  id v7 = objc_msgSend(v1, sel_primarySection, v3, v6);
  if (v7)
  {
    uint64_t v8 = v7;
    sub_1C214B070();
  }
  sub_1C214A610();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  return 0x203A656C61636F4CLL;
}

uint64_t sub_1C1F252D0()
{
  return HKOntologyLocalizedEducationContent.value.getter();
}

uint64_t OntologyIDDataSource.__allocating_init(with:)(void *a1)
{
  uint64_t v2 = swift_allocObject();
  OntologyIDDataSource.init(with:)(a1);
  return v2;
}

void OntologyIDDataSource.init(with:)(void *a1)
{
  uint64_t v2 = v1;
  v1[6] = 0x7865542065657246;
  v1[7] = 0xE900000000000074;
  v1[8] = 4271950;
  v1[9] = 0xE300000000000000;
  v1[10] = a1;
  id v4 = a1;
  uint64_t v5 = v4;
  if (!a1)
  {
    v2[4] = 0xD000000000000032;
    v2[5] = 0x80000001C215E040;
    uint64_t v19 = v2[9];
    v2[2] = v2[8];
    v2[3] = v19;
    uint64_t v20 = MEMORY[0x1E4FBC860];
    v2[11] = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();

    v2[12] = v20;
    return;
  }
  id v6 = v4;
  id v7 = objc_msgSend(v6, sel_firstConceptIdentifier);
  if (!v7) {
    goto LABEL_18;
  }
  uint64_t v8 = v7;
  id v9 = objc_msgSend(v6, sel_propertyCollection);
  if (!v9)
  {

LABEL_18:
    uint64_t v22 = v2[7];
    v2[4] = v2[6];
    v2[5] = v22;
    uint64_t v23 = v2[9];
    v2[2] = v2[8];
    v2[3] = v23;
    uint64_t v24 = MEMORY[0x1E4FBC860];
    v2[11] = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();

    v2[12] = v24;
    return;
  }
  id v10 = v9;
  id v11 = objc_msgSend(v9, sel_properties);
  sub_1C1F25654();
  uint64_t v12 = sub_1C214A780();

  v2[11] = v12;
  id v13 = objc_msgSend(v10, sel_properties);
  unint64_t v14 = sub_1C214A780();

  uint64_t v30 = MEMORY[0x1E4FBC860];
  if (v14 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v15 = sub_1C214B930();
    swift_bridgeObjectRelease();
    if (v15) {
      goto LABEL_6;
    }
LABEL_20:
    swift_bridgeObjectRelease();
    uint64_t v21 = MEMORY[0x1E4FBC860];
    goto LABEL_21;
  }
  uint64_t v15 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v15) {
    goto LABEL_20;
  }
LABEL_6:
  uint64_t v29 = v10;
  if (v15 < 1)
  {
    __break(1u);
    return;
  }
  for (uint64_t i = 0; i != v15; ++i)
  {
    if ((v14 & 0xC000000000000001) != 0) {
      id v17 = (id)MEMORY[0x1C8753960](i, v14);
    }
    else {
      id v17 = *(id *)(v14 + 8 * i + 32);
    }
    int v18 = v17;
    if (objc_msgSend(v17, sel_isDeleted))
    {
    }
    else
    {
      sub_1C214B820();
      sub_1C214B860();
      sub_1C214B870();
      sub_1C214B830();
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v21 = v30;
  id v10 = v29;
LABEL_21:
  v2[12] = v21;
  objc_msgSend(v8, sel_rawIdentifier);
  v2[2] = sub_1C214BA40();
  v2[3] = v25;
  uint64_t v26 = sub_1C214AF10();
  uint64_t v28 = v27;

  if (!v28)
  {
    uint64_t v26 = v2[6];
    uint64_t v28 = v2[7];
    swift_bridgeObjectRetain();
  }
  v2[4] = v26;
  v2[5] = v28;
}

unint64_t sub_1C1F25654()
{
  unint64_t result = qword_1EA2C2D08;
  if (!qword_1EA2C2D08)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA2C2D08);
  }
  return result;
}

uint64_t OntologyIDDataSource.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t OntologyIDDataSource.__deallocating_deinit()
{
  OntologyIDDataSource.deinit();

  return swift_deallocClassInstance();
}

uint64_t dispatch thunk of OntologyDebugDisplayable.name.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of OntologyDebugDisplayable.value.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t type metadata accessor for OntologyIDDataSource()
{
  return self;
}

uint64_t method lookup function for OntologyIDDataSource(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for OntologyIDDataSource);
}

uint64_t dispatch thunk of OntologyIDDataSource.__allocating_init(with:)()
{
  return (*(uint64_t (**)(void))(v0 + 256))();
}

double static NewMedicationsOnboardingDataSource.searchAnimationDuration.getter()
{
  return 0.4;
}

uint64_t sub_1C1F257A0()
{
  uint64_t v1 = qword_1EA2C2D58;
  if (*(void *)(v0 + qword_1EA2C2D58))
  {
    uint64_t v2 = *(void *)(v0 + qword_1EA2C2D58);
  }
  else
  {
    uint64_t v3 = v0;
    id v4 = *(void **)(v0 + qword_1EA2C2D88);
    sub_1C2149410();
    swift_allocObject();
    id v5 = v4;
    uint64_t v2 = sub_1C2149400();
    *(void *)(v3 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

id *sub_1C1F2582C()
{
  return sub_1C1F25854(&qword_1EA2C2D60, MEMORY[0x1E4F2A2A0]);
}

id *sub_1C1F25840()
{
  return sub_1C1F25854(&qword_1EA2C2D68, MEMORY[0x1E4F2A2C8]);
}

id *sub_1C1F25854(uint64_t *a1, void **a2)
{
  uint64_t v3 = *a1;
  id v4 = *(id **)(v2 + *a1);
  if (v4)
  {
    id v5 = v4;
  }
  else
  {
    uint64_t v6 = v2;
    id v7 = *a2;
    uint64_t v8 = *(void **)(v2 + qword_1EA2C2D88);
    sub_1C2148E10();
    id v9 = v7;
    id v10 = v8;
    sub_1C2148E00();
    sub_1C2148DB0();
    swift_release();
    sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C7C8);
    sub_1C214AC00();
    sub_1C2148D70();
    swift_allocObject();
    id v11 = (void *)sub_1C2148C90();
    type metadata accessor for OntologyShardStateObserver();
    swift_allocObject();
    id v5 = OntologyShardStateObserver.init(identifier:healthStore:settingsManager:)(v9, v10, v11);
    *(void *)(v6 + v3) = v5;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v5;
}

uint64_t sub_1C1F2597C()
{
  uint64_t v1 = qword_1EA2C2D70;
  if (*(void *)(v0 + qword_1EA2C2D70))
  {
    uint64_t v2 = *(void *)(v0 + qword_1EA2C2D70);
  }
  else
  {
    type metadata accessor for NetworkStateObserver();
    uint64_t v2 = swift_allocObject();
    sub_1C2149F40();
    uint64_t v3 = OBJC_IVAR____TtC19HealthMedicationsUI20NetworkStateObserver_networkMonitor;
    sub_1C214A170();
    swift_allocObject();
    *(void *)(v2 + v3) = sub_1C214A160();
    *(void *)(v0 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

id sub_1C1F25A4C()
{
  uint64_t v1 = qword_1EA2C2D78;
  uint64_t v2 = *(void **)(v0 + qword_1EA2C2D78);
  if (v2)
  {
    id v3 = *(id *)(v0 + qword_1EA2C2D78);
  }
  else
  {
    id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F2B300]), sel_initWithHealthStore_, *(void *)(v0 + qword_1EA2C2D88));
    id v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

uint64_t sub_1C1F25AD0()
{
  uint64_t v1 = qword_1EA2C2D80;
  if (*(void *)(v0 + qword_1EA2C2D80))
  {
    uint64_t v2 = *(void *)(v0 + qword_1EA2C2D80);
  }
  else
  {
    uint64_t v3 = v0;
    sub_1C2148E10();
    sub_1C2148E00();
    sub_1C2148DB0();
    swift_release();
    sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C7C8);
    sub_1C214AC00();
    sub_1C2148D70();
    swift_allocObject();
    uint64_t v2 = sub_1C2148C90();
    *(void *)(v3 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

uint64_t sub_1C1F25BA4@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1C2149F80();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t sub_1C1F25C24()
{
  return sub_1C2149F90();
}

uint64_t sub_1C1F25CA8()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1C2149F80();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1C1F25D24()
{
  return sub_1C2149F90();
}

uint64_t (*sub_1C1F25DA0(void *a1))()
{
  uint64_t v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = sub_1C2149F70();
  return sub_1C1F25E2C;
}

uint64_t sub_1C1F25E30()
{
  return sub_1C1F263D8((uint64_t)&qword_1EA2C2D10, (unint64_t *)&unk_1EA2C6A80, MEMORY[0x1E4FBB1A0]);
}

uint64_t sub_1C1F25E4C(uint64_t a1)
{
  return sub_1C1F26484(a1, &qword_1EA2C2D18, MEMORY[0x1E4FBB1A0], (uint64_t)&qword_1EA2C2D10, (unint64_t *)&unk_1EA2C6A80);
}

uint64_t (*sub_1C1F25E70(void *a1))()
{
  uint64_t v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = MEMORY[0x1E4FBB1A0];
  sub_1C1F306B8(0, &qword_1EA2C2D18, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4F1AC60]);
  v3[10] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  v3[11] = v6;
  size_t v7 = *(void *)(v6 + 64);
  v3[12] = malloc(v7);
  v3[13] = malloc(v7);
  uint64_t v8 = malloc(v7);
  uint64_t v9 = qword_1EA2C2D10;
  v3[14] = v8;
  v3[15] = v9;
  swift_beginAccess();
  sub_1C1F306B8(0, (unint64_t *)&unk_1EA2C6A80, v4, MEMORY[0x1E4F1AC70]);
  v3[16] = v10;
  sub_1C2149F50();
  swift_endAccess();
  return sub_1C1F25FC8;
}

uint64_t sub_1C1F25FCC@<X0>(unsigned char *a1@<X8>)
{
  return sub_1C1F2E09C(a1);
}

uint64_t sub_1C1F25FE0()
{
  return sub_1C1F2E140();
}

uint64_t sub_1C1F25FF4()
{
  return sub_1C1F268C0();
}

uint64_t sub_1C1F26010()
{
  return sub_1C2149F90();
}

uint64_t (*sub_1C1F26080(void *a1))()
{
  uint64_t v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = sub_1C2149F70();
  return sub_1C1F25E2C;
}

void sub_1C1F2610C(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void, void))(*a1 + 48))(*a1, 0);
  swift_release();
  swift_release();

  free(v1);
}

uint64_t sub_1C1F26174(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t *a5, uint64_t a6)
{
  return swift_endAccess();
}

uint64_t sub_1C1F26204(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t *a5, uint64_t a6, uint64_t a7, unint64_t *a8)
{
  uint64_t v20 = a8;
  sub_1C1F306B8(0, a5, a6, MEMORY[0x1E4F1AC60]);
  uint64_t v11 = v10;
  uint64_t v12 = *(void *)(v10 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v10);
  uint64_t v15 = (char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  id v17 = (char *)&v20 - v16;
  int v18 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  v18((char *)&v20 - v16, a1, v11);
  v18(v15, (uint64_t)v17, v11);
  swift_beginAccess();
  sub_1C1F306B8(0, v20, a6, MEMORY[0x1E4F1AC70]);
  sub_1C2149F60();
  swift_endAccess();
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v17, v11);
}

uint64_t sub_1C1F263BC()
{
  return sub_1C1F263D8((uint64_t)&qword_1EA2C2D20, &qword_1EBF0C750, MEMORY[0x1E4FBB390]);
}

uint64_t sub_1C1F263D8(uint64_t a1, unint64_t *a2, uint64_t a3)
{
  return swift_endAccess();
}

uint64_t sub_1C1F26460(uint64_t a1)
{
  return sub_1C1F26484(a1, &qword_1EBF0C740, MEMORY[0x1E4FBB390], (uint64_t)&qword_1EA2C2D20, &qword_1EBF0C750);
}

uint64_t sub_1C1F26484(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, unint64_t *a5)
{
  sub_1C1F306B8(0, a2, a3, MEMORY[0x1E4F1AC60]);
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v13 - v11, a1, v9);
  swift_beginAccess();
  sub_1C1F306B8(0, a5, a3, MEMORY[0x1E4F1AC70]);
  sub_1C2149F60();
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8))(a1, v9);
}

uint64_t (*sub_1C1F265E4(void *a1))()
{
  uint64_t v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = MEMORY[0x1E4FBB390];
  sub_1C1F306B8(0, &qword_1EBF0C740, MEMORY[0x1E4FBB390], MEMORY[0x1E4F1AC60]);
  v3[10] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  v3[11] = v6;
  size_t v7 = *(void *)(v6 + 64);
  v3[12] = malloc(v7);
  v3[13] = malloc(v7);
  uint64_t v8 = malloc(v7);
  uint64_t v9 = qword_1EA2C2D20;
  v3[14] = v8;
  v3[15] = v9;
  swift_beginAccess();
  sub_1C1F306B8(0, &qword_1EBF0C750, v4, MEMORY[0x1E4F1AC70]);
  v3[16] = v10;
  sub_1C2149F50();
  swift_endAccess();
  return sub_1C1F25FC8;
}

void sub_1C1F2673C(uint64_t a1, char a2)
{
  uint64_t v3 = *(void **)a1;
  uint64_t v4 = *(void (**)(void, void, void))(*(void *)(*(void *)a1 + 88) + 16);
  v4(*(void *)(*(void *)a1 + 104), v3[14], v3[10]);
  uint64_t v5 = (void *)v3[14];
  uint64_t v6 = (void *)v3[12];
  size_t v7 = (void *)v3[13];
  uint64_t v8 = v3[10];
  uint64_t v9 = v3[11];
  if (a2)
  {
    v4(v3[12], v3[13], v3[10]);
    swift_beginAccess();
    sub_1C2149F60();
    swift_endAccess();
    uint64_t v10 = *(void (**)(void *, uint64_t))(v9 + 8);
    v10(v7, v8);
    v10(v5, v8);
  }
  else
  {
    swift_beginAccess();
    sub_1C2149F60();
    swift_endAccess();
    (*(void (**)(void *, uint64_t))(v9 + 8))(v5, v8);
  }
  free(v5);
  free(v7);
  free(v6);

  free(v3);
}

uint64_t sub_1C1F268AC()
{
  return sub_1C1F268C0();
}

uint64_t sub_1C1F268C0()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1C2149F80();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1C1F2692C(char a1)
{
  if (!a1)
  {
    if (qword_1EBF0CA00 == -1) {
      goto LABEL_8;
    }
    goto LABEL_9;
  }
  if (a1 == 1)
  {
    if (qword_1EBF0CA00 == -1) {
      goto LABEL_8;
    }
    goto LABEL_9;
  }
  if (qword_1EBF0CA00 != -1) {
LABEL_9:
  }
    swift_once();
LABEL_8:
  id v1 = (id)qword_1EBF0CA18;
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_1C2147730();
  swift_bridgeObjectRelease();

  return v2;
}

BOOL sub_1C1F26AF8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t _s19HealthMedicationsUI30ScheduleUnavailableDeviceStateV0F0O9hashValueSivg_0()
{
  return sub_1C214BB80();
}

uint64_t sub_1C1F26B54()
{
  return sub_1C214BB40();
}

uint64_t sub_1C1F26B80()
{
  return sub_1C214BB80();
}

uint64_t sub_1C1F26BC4@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (void *)(*a1 + qword_1EA2C7B68);
  swift_beginAccess();
  *a2 = *v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C1F26C1C(uint64_t *a1, void *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (void *)(*a2 + qword_1EA2C7B68);
  swift_beginAccess();
  *uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return sub_1C1F26C8C();
}

uint64_t sub_1C1F26C8C()
{
  uint64_t v1 = v0 + qword_1EA2C7B68;
  swift_beginAccess();
  if (*(void *)(*(void *)v1 + 16)) {
    char v2 = 1;
  }
  else {
    char v2 = 2;
  }
  *(unsigned char *)(v0 + qword_1EA2C2DB0) = v2;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1C2149F80();
  swift_release();
  uint64_t result = swift_release();
  if ((v19 & 1) == 0)
  {
    if (*(void *)(*(void *)v1 + 16))
    {
      type metadata accessor for NewMedicationsOnboardingDataSource();
      uint64_t v4 = sub_1C2148360();
      uint64_t v5 = *(void *)(v4 + 16);
      if (v5)
      {
        uint64_t v6 = 0;
        size_t v7 = (void *)(v4 + 40);
        while ((*(v7 - 1) != 0xD000000000000010 || *v7 != 0x80000001C215E120) && (sub_1C214BA80() & 1) == 0)
        {
          v7 += 2;
          if (v5 == ++v6) {
            goto LABEL_16;
          }
        }
        swift_bridgeObjectRelease();
        sub_1C1F2F6C4(0, (unint64_t *)&qword_1EBF0C958, (unint64_t *)&qword_1EBF0C2F0, MEMORY[0x1E4F66028], MEMORY[0x1E4FBBE00]);
        uint64_t v8 = swift_allocObject();
        *(_OWORD *)(v8 + 16) = xmmword_1C214FCD0;
        if (qword_1EBF0CA00 != -1) {
          swift_once();
        }
        id v9 = (id)qword_1EBF0CA18;
        swift_bridgeObjectRetain();
        uint64_t v10 = sub_1C2147730();
        uint64_t v12 = v11;

        swift_bridgeObjectRelease();
        type metadata accessor for MedicationOnboardingHeaderCell();
        sub_1C1F2E1D8(&qword_1EA2C2DD8, (void (*)(uint64_t))type metadata accessor for MedicationOnboardingHeaderCell);
        uint64_t v13 = sub_1C21481D0();
        uint64_t v15 = v14;
        *(void *)(v8 + 56) = &type metadata for MedicationOnboardingHeaderItem;
        *(void *)(v8 + 64) = sub_1C1F2F72C();
        uint64_t v16 = (void *)swift_allocObject();
        *(void *)(v8 + 32) = v16;
        v16[2] = v10;
        v16[3] = v12;
        v16[4] = v13;
        v16[5] = v15;
        uint64_t v17 = swift_bridgeObjectRetain();
        uint64_t v18 = sub_1C1F37580(v17);
        swift_bridgeObjectRelease();
        sub_1C1F7D1D0(v18);
        sub_1C21485C0();
      }
LABEL_16:
      swift_bridgeObjectRelease();
    }
    return sub_1C1F2BE98();
  }
  return result;
}

uint64_t sub_1C1F26FC4()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C1F27010(uint64_t a1)
{
  uint64_t v3 = (void *)(v1 + qword_1EA2C7B68);
  swift_beginAccess();
  *uint64_t v3 = a1;
  swift_bridgeObjectRelease();
  return sub_1C1F26C8C();
}

uint64_t (*sub_1C1F27070(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1C1F270D0;
}

uint64_t sub_1C1F270D0(uint64_t a1, char a2)
{
  uint64_t result = swift_endAccess();
  if ((a2 & 1) == 0) {
    return sub_1C1F26C8C();
  }
  return result;
}

uint64_t sub_1C1F27104@<X0>(uint64_t a1@<X8>)
{
  uint64_t v36 = a1;
  uint64_t v1 = sub_1C2148A70();
  uint64_t v34 = *(void *)(v1 - 8);
  uint64_t v35 = v1;
  MEMORY[0x1F4188790](v1);
  id v33 = (char *)&v28 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1F2F7F4(0, &qword_1EBF0C620, MEMORY[0x1E4FB0F28], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v3 - 8);
  id v32 = (char *)&v28 - v4;
  uint64_t v5 = sub_1C2148620();
  uint64_t v28 = *(void *)(v5 - 8);
  uint64_t v29 = v5;
  MEMORY[0x1F4188790](v5);
  id v31 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_1C2149BE0();
  uint64_t v7 = *(void *)(v30 - 8);
  MEMORY[0x1F4188790](v30);
  id v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2149B70();
  if (qword_1EBF0CA00 != -1) {
    swift_once();
  }
  uint64_t v10 = (void *)qword_1EBF0CA18;
  sub_1C1F2F6C4(0, qword_1EBF0B8A0, (unint64_t *)&qword_1EBF0C9F0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1C214FCD0;
  swift_getKeyPath();
  swift_getKeyPath();
  id v12 = v10;
  swift_bridgeObjectRetain();
  sub_1C2149F80();
  swift_release();
  swift_release();
  uint64_t v13 = sub_1C20663EC(v37[0], v37[1]);
  uint64_t v15 = v14;
  swift_bridgeObjectRelease();
  *(void *)(v11 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v11 + 64) = sub_1C1F31298();
  *(void *)(v11 + 32) = v13;
  *(void *)(v11 + 40) = v15;
  sub_1C2147730();
  sub_1C214A5C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  sub_1C2149B90();
  id v16 = objc_msgSend(self, sel_preferredFontForTextStyle_, *MEMORY[0x1E4FB28C8]);
  uint64_t v17 = (void (*)(uint64_t *, void))sub_1C2149AA0();
  sub_1C2149A50();
  v17(v37, 0);
  uint64_t v18 = (void (*)(uint64_t *, void))sub_1C2149B10();
  *char v19 = 0x3FF0000000000000;
  v18(v37, 0);
  id v20 = objc_msgSend(self, sel_tintColor);
  uint64_t v21 = (void (*)(uint64_t *, void))sub_1C2149AA0();
  sub_1C2149A60();
  v21(v37, 0);
  uint64_t v22 = v30;
  v37[3] = v30;
  v37[4] = MEMORY[0x1E4FB0F88];
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v37);
  (*(void (**)(uint64_t *, char *, uint64_t))(v7 + 16))(boxed_opaque_existential_1, v9, v22);
  swift_allocObject();
  swift_weakInit();
  uint64_t v24 = v31;
  *id v31 = 1;
  (*(void (**)(unsigned char *, void, uint64_t))(v28 + 104))(v24, *MEMORY[0x1E4F66478], v29);
  swift_retain();
  uint64_t v25 = v32;
  sub_1C21499B0();
  uint64_t v26 = sub_1C21499D0();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v25, 0, 1, v26);
  (*(void (**)(char *, void, uint64_t))(v34 + 104))(v33, *MEMORY[0x1E4F66678], v35);
  sub_1C21487A0();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v22);
  return swift_release();
}

uint64_t sub_1C1F27734()
{
  type metadata accessor for NewMedicationOnboardingViewController();
  uint64_t result = swift_dynamicCastClass();
  if (result)
  {
    swift_beginAccess();
    if (swift_weakLoadStrong())
    {
      swift_bridgeObjectRetain();
      swift_release();
      swift_bridgeObjectRelease();
    }
    return sub_1C20B2838();
  }
  return result;
}

void sub_1C1F277E0()
{
  uint64_t v1 = v0;
  sub_1C1F2F7F4(0, (unint64_t *)&qword_1EA2C2FE8, MEMORY[0x1E4F664F8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v54 = (char *)&v40 - v3;
  uint64_t v4 = sub_1C2147B20();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2148EF0();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v9 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v10 = (void *)sub_1C214A5B0();
  id v11 = objc_msgSend(self, sel_imageNamed_inBundle_, v10, v9);

  if (v11)
  {
    sub_1C2147B10();
    uint64_t v42 = sub_1C2147AD0();
    uint64_t v46 = v12;
    uint64_t v13 = *(void (**)(char *, uint64_t))(v5 + 8);
    v13(v7, v4);
    type metadata accessor for MedicationSearchOptionsFieldCell();
    sub_1C1F2E1D8((unint64_t *)&qword_1EA2C3010, (void (*)(uint64_t))type metadata accessor for MedicationSearchOptionsFieldCell);
    uint64_t v41 = sub_1C21481D0();
    uint64_t v45 = v14;
    uint64_t v44 = swift_allocObject();
    swift_weakInit();
    sub_1C1F31118(0);
    uint64_t v43 = swift_allocObject();
    swift_weakInit();
    sub_1C1F31118(0);
    uint64_t v53 = qword_1EA2C2DB0;
    sub_1C1F2692C(*(unsigned char *)(v1 + qword_1EA2C2DB0));
    type metadata accessor for CollectionViewTextCell();
    sub_1C1F2E1D8((unint64_t *)&qword_1EA2C3018, (void (*)(uint64_t))type metadata accessor for CollectionViewTextCell);
    uint64_t v50 = sub_1C21481D0();
    uint64_t v51 = v15;
    *(void *)&long long v56 = 0x74497265746F6F46;
    *((void *)&v56 + 1) = 0xEB000000005F6D65;
    sub_1C2147B10();
    sub_1C2147AD0();
    uint64_t v49 = v1;
    v13(v7, v4);
    sub_1C214A6C0();
    swift_bridgeObjectRelease();
    uint64_t v55 = *((void *)&v56 + 1);
    uint64_t v48 = v56;
    id v16 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
    uint64_t v17 = (void *)sub_1C214A5B0();
    swift_bridgeObjectRelease();
    id v47 = objc_msgSend(v16, sel_initWithString_, v17);

    sub_1C1F2F6C4(0, (unint64_t *)&qword_1EBF0C958, (unint64_t *)&qword_1EBF0C2F0, MEMORY[0x1E4F66028], MEMORY[0x1E4FBBE00]);
    uint64_t v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_1C2150000;
    *(void *)(v18 + 56) = &type metadata for MedicationIconItem;
    *(void *)(v18 + 64) = sub_1C1F30FC8();
    char v19 = (void *)swift_allocObject();
    *(void *)(v18 + 32) = v19;
    id v20 = v11;
    sub_1C2147B10();
    uint64_t v21 = sub_1C2147AD0();
    uint64_t v23 = v22;
    v13(v7, v4);
    type metadata accessor for MedicationIconCell();
    sub_1C1F2E1D8((unint64_t *)&qword_1EA2C2FF8, (void (*)(uint64_t))type metadata accessor for MedicationIconCell);
    uint64_t v24 = sub_1C21481D0();
    v19[2] = v21;
    v19[3] = v23;
    id v52 = v20;
    v19[4] = v20;
    v19[5] = v24;
    v19[6] = v25;
    if (qword_1EBF0CA00 != -1) {
      swift_once();
    }
    id v26 = (id)qword_1EBF0CA18;
    swift_bridgeObjectRetain();
    sub_1C2147730();

    swift_bridgeObjectRelease();
    uint64_t v27 = sub_1C2148770();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v54, 1, 1, v27);
    *(void *)(v18 + 96) = sub_1C2148790();
    *(void *)(v18 + 104) = sub_1C1F2E1D8((unint64_t *)&qword_1EA2C3000, MEMORY[0x1E4F66500]);
    __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v18 + 72));
    sub_1C2148780();
    *(void *)(v18 + 136) = &type metadata for CollectionViewTextItem;
    *(void *)(v18 + 144) = sub_1C1F31130();
    uint64_t v28 = (void *)swift_allocObject();
    *(void *)(v18 + 112) = v28;
    uint64_t v29 = v51;
    v28[2] = v50;
    v28[3] = v29;
    uint64_t v30 = v47;
    uint64_t v31 = v55;
    v28[4] = v48;
    v28[5] = v31;
    v28[6] = v30;
    if (*(unsigned char *)(v49 + v53))
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v32 = v30;
      uint64_t v33 = v46;
      swift_bridgeObjectRetain();
      uint64_t v34 = v44;
      sub_1C1F1325C((uint64_t)sub_1C1F31110);
      uint64_t v35 = v43;
      sub_1C1F1325C((uint64_t)sub_1C1F31128);
      unint64_t v36 = *(void *)(v18 + 16);
      unint64_t v37 = *(void *)(v18 + 24);
      uint64_t v38 = v45;
      swift_bridgeObjectRetain();
      if (v36 >= v37 >> 1) {
        uint64_t v18 = (uint64_t)sub_1C1F3AAC4((void *)(v37 > 1), v36 + 1, 1, (void *)v18);
      }
      id v57 = &type metadata for MedicationSearchOptionsFieldItem;
      unint64_t v58 = sub_1C1F311CC();
      uint64_t v39 = (void *)swift_allocObject();
      *(void *)&long long v56 = v39;
      v39[2] = v42;
      v39[3] = v33;
      v39[4] = sub_1C1F31110;
      v39[5] = v34;
      v39[6] = sub_1C1F31128;
      v39[7] = v35;
      v39[8] = v41;
      v39[9] = v38;
      *(void *)(v18 + 16) = v36 + 1;
      sub_1C1F31280(&v56, v18 + 40 * v36 + 32);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();

    sub_1C1F31118((uint64_t)sub_1C1F31110);
    sub_1C1F31118((uint64_t)sub_1C1F31128);
    swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1C1F28024()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    if (MEMORY[0x1C8754850](result + qword_1EA2C2D40))
    {
      sub_1C20B2D54();
      swift_release();
      return swift_unknownObjectRelease();
    }
    else
    {
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_1C1F280A8(uint64_t a1, void *a2)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v5 = result;
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_1C2149F90();
    if (MEMORY[0x1C8754850](v5 + qword_1EA2C2D40))
    {
      sub_1C20B3000(a2, a1);
      swift_unknownObjectRelease();
    }
    return swift_release();
  }
  return result;
}

void sub_1C1F2818C()
{
  sub_1C1F2F7F4(0, (unint64_t *)&qword_1EA2C2FE8, MEMORY[0x1E4F664F8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v2 = (char *)&v28 - v1;
  uint64_t v30 = sub_1C2147B20();
  uint64_t v3 = *(void *)(v30 - 8);
  MEMORY[0x1F4188790](v30);
  uint64_t v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2148EF0();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v7 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v8 = (void *)sub_1C214A5B0();
  id v9 = objc_msgSend(self, sel_imageNamed_inBundle_, v8, v7);

  if (v9)
  {
    sub_1C1F2F6C4(0, (unint64_t *)&qword_1EBF0C958, (unint64_t *)&qword_1EBF0C2F0, MEMORY[0x1E4F66028], MEMORY[0x1E4FBBE00]);
    uint64_t v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_1C2150000;
    *(void *)(v10 + 56) = &type metadata for MedicationIconItem;
    *(void *)(v10 + 64) = sub_1C1F30FC8();
    id v11 = (void *)swift_allocObject();
    *(void *)(v10 + 32) = v11;
    id v12 = v9;
    sub_1C2147B10();
    uint64_t v13 = sub_1C2147AD0();
    uint64_t v15 = v14;
    id v16 = *(void (**)(char *, uint64_t))(v3 + 8);
    v16(v5, v30);
    type metadata accessor for MedicationIconCell();
    sub_1C1F2E1D8((unint64_t *)&qword_1EA2C2FF8, (void (*)(uint64_t))type metadata accessor for MedicationIconCell);
    uint64_t v17 = sub_1C21481D0();
    v11[2] = v13;
    void v11[3] = v15;
    id v29 = v12;
    v11[4] = v12;
    v11[5] = v17;
    v11[6] = v18;
    if (qword_1EBF0CA00 != -1) {
      swift_once();
    }
    id v19 = (id)qword_1EBF0CA18;
    swift_bridgeObjectRetain();
    sub_1C2147730();

    swift_bridgeObjectRelease();
    uint64_t v20 = sub_1C2148770();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v2, 1, 1, v20);
    *(void *)(v10 + 96) = sub_1C2148790();
    *(void *)(v10 + 104) = sub_1C1F2E1D8((unint64_t *)&qword_1EA2C3000, MEMORY[0x1E4F66500]);
    __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v10 + 72));
    sub_1C2148780();
    uint64_t v21 = swift_allocObject();
    swift_weakInit();
    *(void *)(v10 + 136) = &type metadata for MedicationSearchFieldItem;
    *(void *)(v10 + 144) = sub_1C1F3106C();
    uint64_t v22 = (void *)swift_allocObject();
    *(void *)(v10 + 112) = v22;
    sub_1C2147B10();
    uint64_t v23 = sub_1C2147AD0();
    uint64_t v25 = v24;
    v16(v5, v30);
    type metadata accessor for MedicationSearchFieldCell();
    sub_1C1F2E1D8((unint64_t *)&qword_1EA2C40D0, (void (*)(uint64_t))type metadata accessor for MedicationSearchFieldCell);
    uint64_t v26 = sub_1C21481D0();
    v22[2] = v23;
    v22[3] = v25;
    v22[4] = sub_1C1F31064;
    v22[5] = v21;
    v22[6] = v26;
    v22[7] = v27;
  }
  else
  {
    __break(1u);
  }
}

id sub_1C1F286D0()
{
  uint64_t v0 = sub_1C2149A10();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = &v8[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1C2149B50();
  id result = objc_msgSend(self, sel__preferredFontForTextStyle_variant_, *MEMORY[0x1E4FB2988], 1024);
  if (result)
  {
    uint64_t v5 = (void (*)(unsigned char *, void))sub_1C2149AA0();
    sub_1C2149A50();
    v5(v8, 0);
    (*(void (**)(unsigned char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FB0F60], v0);
    uint64_t v6 = (void (*)(unsigned char *, void))sub_1C2149AA0();
    sub_1C2149A70();
    v6(v8, 0);
    id v7 = (uint64_t (*)(unsigned char *, void))sub_1C2149AA0();
    sub_1C2149A20();
    return (id)v7(v8, 0);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C1F28884()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    return sub_1C2149F90();
  }
  return result;
}

uint64_t sub_1C1F28908()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1C2149F80();
  swift_release();
  uint64_t result = swift_release();
  if (v4 == 1)
  {
    if (*(void *)(*(void *)(v0 + qword_1EA2C2D98) + 16))
    {
      sub_1C1F2F7F4(0, (unint64_t *)&qword_1EA2C2DD0, MEMORY[0x1E4F66468], MEMORY[0x1E4FBBE00]);
      sub_1C2148540();
      *(_OWORD *)(swift_allocObject() + 16) = xmmword_1C214FCC0;
      swift_bridgeObjectRetain();
      sub_1C2148520();
      sub_1C1F2F6C4(0, (unint64_t *)&qword_1EBF0C958, (unint64_t *)&qword_1EBF0C2F0, MEMORY[0x1E4F66028], MEMORY[0x1E4FBBE00]);
      uint64_t v2 = swift_allocObject();
      *(_OWORD *)(v2 + 16) = xmmword_1C214FCD0;
      *(void *)(v2 + 56) = sub_1C21487B0();
      *(void *)(v2 + 64) = sub_1C1F2E1D8((unint64_t *)&qword_1EA2C2E68, MEMORY[0x1E4F66510]);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v2 + 32));
      sub_1C1F27104((uint64_t)boxed_opaque_existential_1);
      sub_1C2148520();
      sub_1C21485B0();
      return swift_bridgeObjectRelease();
    }
    else
    {
      return sub_1C21485B0();
    }
  }
  return result;
}

uint64_t sub_1C1F28B8C()
{
  sub_1C1F2F7C0(0);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v42 = (char *)&v33 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1F30D98(0);
  MEMORY[0x1F4188790](v2 - 8);
  unint64_t v36 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = sub_1C214AD60();
  uint64_t v34 = *(void *)(v38 - 8);
  MEMORY[0x1F4188790](v38);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x1E4FBB390];
  sub_1C1F306B8(0, &qword_1EBF0C740, MEMORY[0x1E4FBB390], MEMORY[0x1E4F1AC60]);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  id v11 = (char *)&v33 - v10;
  sub_1C1F30DCC();
  uint64_t v13 = v12;
  uint64_t v14 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  id v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1F30E74(0);
  uint64_t v37 = v17;
  uint64_t v39 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v33 = (char *)&v33 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1F2FD84(0, &qword_1EA2C2FD0, (uint64_t (*)(uint64_t))sub_1C1F30E74, sub_1C1F30EF0, MEMORY[0x1E4F1A998]);
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v40 = v19;
  uint64_t v41 = v20;
  MEMORY[0x1F4188790](v19);
  uint64_t v35 = (char *)&v33 - v21;
  swift_beginAccess();
  sub_1C1F306B8(0, &qword_1EBF0C750, v6, MEMORY[0x1E4F1AC70]);
  sub_1C2149F50();
  swift_endAccess();
  sub_1C1F2F96C((unint64_t *)&qword_1EBF0C730, &qword_1EBF0C740, v6);
  sub_1C214A060();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  sub_1C1F30EBC();
  sub_1C214A0D0();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  uint64_t v22 = v5;
  sub_1C214AD50();
  uint64_t v23 = v34;
  uint64_t v24 = (uint64_t)v36;
  uint64_t v25 = v38;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v34 + 56))(v36, 1, 1, v38);
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0CB10);
  id v43 = (id)sub_1C214AD80();
  uint64_t v26 = sub_1C214AD20();
  uint64_t v27 = (uint64_t)v42;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v42, 1, 1, v26);
  sub_1C1F30EF0();
  sub_1C1F2F9D0((unint64_t *)&qword_1EBF0C7F0, (unint64_t *)&qword_1EBF0CB10);
  uint64_t v28 = v35;
  uint64_t v29 = v37;
  uint64_t v30 = v33;
  sub_1C214A050();
  sub_1C1F30360(v27, (uint64_t (*)(void))sub_1C1F2F7C0);

  sub_1C1F30360(v24, (uint64_t (*)(void))sub_1C1F30D98);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v22, v25);
  (*(void (**)(char *, uint64_t))(v39 + 8))(v30, v29);
  swift_allocObject();
  swift_weakInit();
  sub_1C1F30F2C();
  uint64_t v31 = v40;
  sub_1C214A0F0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v28, v31);
  swift_beginAccess();
  sub_1C2149E20();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1C1F29258(unsigned __int8 *a1)
{
  return *a1;
}

uint64_t sub_1C1F29260()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1C21485B0();
    return swift_release();
  }
  return result;
}

uint64_t sub_1C1F292C4()
{
  sub_1C1F303D8(0);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v49 = (char *)&v39 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = (uint64_t (*)(void, uint64_t))MEMORY[0x1E4F1AC60];
  sub_1C1F306B8(0, &qword_1EA2C2EC8, (uint64_t)&type metadata for NetworkStateObserver.ConnectionStatus, MEMORY[0x1E4F1AC60]);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v41 = v3;
  uint64_t v42 = v4;
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v39 - v5;
  sub_1C1F3040C();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v44 = v7;
  uint64_t v45 = v8;
  MEMORY[0x1F4188790](v7);
  uint64_t v40 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x1E4FBB390];
  sub_1C1F306B8(0, &qword_1EBF0C740, MEMORY[0x1E4FBB390], v2);
  uint64_t v12 = v11;
  uint64_t v43 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v17 = (char *)&v39 - v16;
  sub_1C1F304B4();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v47 = v18;
  uint64_t v48 = v19;
  MEMORY[0x1F4188790](v18);
  uint64_t v39 = (char *)&v39 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1F305B8();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v50 = v21;
  uint64_t v51 = v22;
  MEMORY[0x1F4188790](v21);
  uint64_t v46 = (char *)&v39 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1F2582C();
  swift_beginAccess();
  uint64_t v24 = (uint64_t (*)(void, uint64_t))MEMORY[0x1E4F1AC70];
  sub_1C1F306B8(0, &qword_1EBF0C750, v10, MEMORY[0x1E4F1AC70]);
  sub_1C2149F50();
  swift_endAccess();
  swift_release();
  sub_1C1F25840();
  swift_beginAccess();
  sub_1C2149F50();
  swift_endAccess();
  swift_release();
  sub_1C1F2597C();
  swift_beginAccess();
  sub_1C1F306B8(0, &qword_1EA2C2F00, (uint64_t)&type metadata for NetworkStateObserver.ConnectionStatus, v24);
  sub_1C2149F50();
  swift_endAccess();
  swift_release();
  sub_1C1F2F96C(&qword_1EA2C2ED8, &qword_1EA2C2EC8, (uint64_t)&type metadata for NetworkStateObserver.ConnectionStatus);
  sub_1C1F30704();
  uint64_t v25 = v40;
  uint64_t v26 = v41;
  sub_1C214A0D0();
  (*(void (**)(char *, uint64_t))(v42 + 8))(v6, v26);
  sub_1C1F2F96C((unint64_t *)&qword_1EBF0C730, &qword_1EBF0C740, MEMORY[0x1E4FBB390]);
  sub_1C1F2E1D8(&qword_1EA2C2EE8, (void (*)(uint64_t))sub_1C1F3040C);
  uint64_t v27 = v39;
  uint64_t v28 = v25;
  uint64_t v29 = v44;
  sub_1C2149FF0();
  (*(void (**)(char *, uint64_t))(v45 + 8))(v28, v29);
  uint64_t v30 = *(void (**)(char *, uint64_t))(v43 + 8);
  v30(v15, v12);
  v30(v17, v12);
  id v52 = objc_msgSend(self, sel_mainRunLoop);
  uint64_t v31 = sub_1C214B490();
  uint64_t v32 = (uint64_t)v49;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v49, 1, 1, v31);
  sub_1C1F12718(0, &qword_1EBF0C940);
  sub_1C1F2E1D8(&qword_1EA2C2EF8, (void (*)(uint64_t))sub_1C1F304B4);
  sub_1C1F2F9D0((unint64_t *)&qword_1EBF0C938, &qword_1EBF0C940);
  uint64_t v34 = v46;
  uint64_t v33 = v47;
  sub_1C214A0A0();
  sub_1C1F30360(v32, (uint64_t (*)(void))sub_1C1F303D8);

  (*(void (**)(char *, uint64_t))(v48 + 8))(v27, v33);
  uint64_t v35 = swift_allocObject();
  swift_weakInit();
  uint64_t v36 = swift_allocObject();
  *(void *)(v36 + 16) = sub_1C1F30758;
  *(void *)(v36 + 24) = v35;
  sub_1C1F2E1D8(&qword_1EA2C2F10, (void (*)(uint64_t))sub_1C1F305B8);
  uint64_t v37 = v50;
  sub_1C214A0F0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v51 + 8))(v34, v37);
  swift_beginAccess();
  sub_1C2149E20();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1C1F29AAC(char a1, char a2, unsigned __int8 *a3)
{
  int v5 = *a3;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v7 = result;
    swift_getKeyPath();
    swift_getKeyPath();
    sub_1C2149F80();
    swift_release();
    swift_release();
    if ((v16 & 1) == 0)
    {
      if (a1 & 1) != 0 && (a2 & 1) != 0 || (sub_1C1F25AD0(), char v8 = sub_1C2148CD0(), swift_release(), (v8))
      {
        sub_1C1F2BE98();
        id v9 = *(id *)(v7 + qword_1EA2C2D88);
        unint64_t v10 = sub_1C2149710();
        unint64_t v11 = sub_1C21496C0();
        sub_1C1F7D34C(v11);
        sub_1C1F257A0();
        sub_1C1F2E248(v10);
        swift_release();
        swift_bridgeObjectRelease();
      }
      else
      {
        if (v5 == 1)
        {
          sub_1C1F29F5C();
          sub_1C1F2F7F4(0, (unint64_t *)&qword_1EA2C2DD0, MEMORY[0x1E4F66468], MEMORY[0x1E4FBBE00]);
          sub_1C2148540();
          *(_OWORD *)(swift_allocObject() + 16) = xmmword_1C214FCD0;
          sub_1C1F2F6C4(0, (unint64_t *)&qword_1EBF0C958, (unint64_t *)&qword_1EBF0C2F0, MEMORY[0x1E4F66028], MEMORY[0x1E4FBBE00]);
          uint64_t v12 = swift_allocObject();
          *(_OWORD *)(v12 + 16) = xmmword_1C214FCD0;
          uint64_t v13 = type metadata accessor for ShardSpinnerDownloadItem();
          uint64_t v14 = swift_allocObject();
          *(void *)(v12 + 56) = v13;
          *(void *)(v12 + 64) = sub_1C1F2E1D8(&qword_1EA2C2F20, (void (*)(uint64_t))type metadata accessor for ShardSpinnerDownloadItem);
        }
        else
        {
          sub_1C1F2F7F4(0, (unint64_t *)&qword_1EA2C2DD0, MEMORY[0x1E4F66468], MEMORY[0x1E4FBBE00]);
          sub_1C2148540();
          *(_OWORD *)(swift_allocObject() + 16) = xmmword_1C214FCD0;
          sub_1C1F2F6C4(0, (unint64_t *)&qword_1EBF0C958, (unint64_t *)&qword_1EBF0C2F0, MEMORY[0x1E4F66028], MEMORY[0x1E4FBBE00]);
          uint64_t v12 = swift_allocObject();
          *(_OWORD *)(v12 + 16) = xmmword_1C214FCD0;
          uint64_t v15 = type metadata accessor for ConnectivityIssueItem();
          uint64_t v14 = swift_allocObject();
          *(void *)(v12 + 56) = v15;
          *(void *)(v12 + 64) = sub_1C1F2E1D8(&qword_1EA2C2F18, (void (*)(uint64_t))type metadata accessor for ConnectivityIssueItem);
        }
        *(void *)(v12 + 32) = v14;
        sub_1C2148520();
        sub_1C21485B0();
        swift_bridgeObjectRelease();
      }
    }
    return swift_release();
  }
  return result;
}

void sub_1C1F29F5C()
{
  uint64_t v1 = *v0;
  uint64_t v2 = sub_1C21497F0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  int v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C21497A0();
  uint64_t v6 = sub_1C21497E0();
  os_log_type_t v7 = sub_1C214ABF0();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v18 = v1;
    uint64_t v8 = swift_slowAlloc();
    uint64_t v17 = v2;
    id v9 = (uint8_t *)v8;
    uint64_t v10 = swift_slowAlloc();
    aBlock[0] = v10;
    *(_DWORD *)id v9 = 136446210;
    uint64_t v11 = sub_1C214BC10();
    uint64_t v19 = sub_1C1F6FD54(v11, v12, aBlock);
    sub_1C214B530();
    uint64_t v1 = v18;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C1F0B000, v6, v7, "[%{public}s] Updating ontology...", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C8754730](v10, -1, -1);
    MEMORY[0x1C8754730](v9, -1, -1);

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v17);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  id v13 = sub_1C1F25A4C();
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = v1;
  aBlock[4] = (uint64_t)sub_1C1F303D0;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1C20E218C;
  aBlock[3] = (uint64_t)&block_descriptor_4;
  uint64_t v15 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(v13, sel_updateOntologyForReason_completion_, 5, v15);
  _Block_release(v15);
}

uint64_t sub_1C1F2A230(char a1, void *a2)
{
  uint64_t v4 = sub_1C21497F0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v29 - v9;
  if (a1)
  {
    sub_1C21497A0();
    uint64_t v11 = sub_1C21497E0();
    os_log_type_t v12 = sub_1C214ABF0();
    if (os_log_type_enabled(v11, v12))
    {
      id v13 = (uint8_t *)swift_slowAlloc();
      uint64_t v14 = swift_slowAlloc();
      uint64_t v30 = v14;
      *(_DWORD *)id v13 = 136446210;
      uint64_t v15 = sub_1C214BC10();
      uint64_t v29 = sub_1C1F6FD54(v15, v16, &v30);
      sub_1C214B530();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C1F0B000, v11, v12, "[%{public}s] Updated ontology successfully", v13, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C8754730](v14, -1, -1);
      MEMORY[0x1C8754730](v13, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v10, v4);
  }
  else
  {
    sub_1C21497A0();
    id v18 = a2;
    id v19 = a2;
    uint64_t v20 = sub_1C21497E0();
    os_log_type_t v21 = sub_1C214ABF0();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = swift_slowAlloc();
      uint64_t v23 = swift_slowAlloc();
      uint64_t v30 = v23;
      *(_DWORD *)uint64_t v22 = 136446466;
      uint64_t v24 = sub_1C214BC10();
      uint64_t v29 = sub_1C1F6FD54(v24, v25, &v30);
      sub_1C214B530();
      swift_bridgeObjectRelease();
      *(_WORD *)(v22 + 12) = 2082;
      uint64_t v29 = (uint64_t)a2;
      id v26 = a2;
      sub_1C1F2F6C4(0, &qword_1EA2C2EC0, (unint64_t *)&qword_1EBF0C9C0, MEMORY[0x1E4FBC0E8], MEMORY[0x1E4FBB718]);
      uint64_t v27 = sub_1C214A610();
      uint64_t v29 = sub_1C1F6FD54(v27, v28, &v30);
      sub_1C214B530();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1C1F0B000, v20, v21, "[%{public}s] Error updating ontology: %{public}s", (uint8_t *)v22, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C8754730](v23, -1, -1);
      MEMORY[0x1C8754730](v22, -1, -1);
    }
    else
    {
    }
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  }
}

uint64_t sub_1C1F2A5F8()
{
  sub_1C1F2F7C0(0);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v2 = (char *)v35 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = sub_1C214AD60();
  uint64_t v49 = *(void *)(v51 - 8);
  MEMORY[0x1F4188790](v51);
  uint64_t v4 = (char *)v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = MEMORY[0x1E4FBB1A0];
  sub_1C1F306B8(0, &qword_1EA2C2D18, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4F1AC60]);
  uint64_t v40 = v6;
  uint64_t v44 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)v35 - v7;
  sub_1C1F2F858();
  uint64_t v50 = v9;
  uint64_t v52 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v39 = (char *)v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1F2FF80(0, &qword_1EA2C2DF8, (void (*)(uint64_t))sub_1C1F2F858, sub_1C1F2FA14, (void (*)(void))sub_1C1F2FA68);
  uint64_t v45 = v11;
  uint64_t v47 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v38 = (char *)v35 - v12;
  sub_1C1F2FA9C();
  uint64_t v46 = v13;
  uint64_t v48 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v41 = (char *)v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1F2FD08(0);
  uint64_t v53 = v15;
  uint64_t v55 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v42 = (char *)v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1F2FD84(0, &qword_1EA2C2E50, (uint64_t (*)(uint64_t))sub_1C1F2FD08, sub_1C1F2FE68, MEMORY[0x1E4F1AAB0]);
  uint64_t v54 = v17;
  uint64_t v56 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v43 = (char *)v35 - v18;
  swift_beginAccess();
  sub_1C1F306B8(0, (unint64_t *)&unk_1EA2C6A80, v5, MEMORY[0x1E4F1AC70]);
  sub_1C2149F50();
  swift_endAccess();
  id v19 = v4;
  sub_1C214AD40();
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0CB10);
  id v57 = (id)sub_1C214AD80();
  uint64_t v20 = sub_1C214AD20();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v36 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56);
  uint64_t v37 = v21 + 56;
  v35[0] = v2;
  v36(v2, 1, 1, v20);
  sub_1C1F2F96C(&qword_1EA2C2DF0, &qword_1EA2C2D18, v5);
  v35[2] = sub_1C1F2F9D0((unint64_t *)&qword_1EBF0C7F0, (unint64_t *)&qword_1EBF0CB10);
  uint64_t v22 = v39;
  uint64_t v23 = v40;
  sub_1C214A0B0();
  sub_1C1F30360((uint64_t)v2, (uint64_t (*)(void))sub_1C1F2F7C0);

  (*(void (**)(char *, uint64_t))(v49 + 8))(v19, v51);
  (*(void (**)(char *, uint64_t))(v44 + 8))(v8, v23);
  swift_allocObject();
  swift_weakInit();
  sub_1C1F2FA14(0);
  sub_1C1F2FA68();
  uint64_t v24 = v38;
  uint64_t v25 = v50;
  sub_1C214A020();
  swift_release();
  (*(void (**)(char *, uint64_t))(v52 + 8))(v22, v25);
  sub_1C1F2FC38();
  sub_1C1F2FCD4();
  id v26 = v41;
  uint64_t v27 = v45;
  sub_1C214A0E0();
  (*(void (**)(char *, uint64_t))(v47 + 8))(v24, v27);
  id v57 = (id)MEMORY[0x1E4FBC860];
  sub_1C1F2FD50();
  unint64_t v28 = v42;
  uint64_t v29 = v46;
  sub_1C2149FE0();
  (*(void (**)(char *, uint64_t))(v48 + 8))(v26, v29);
  id v57 = (id)sub_1C214AD80();
  uint64_t v30 = v35[0];
  v36((char *)v35[0], 1, 1, v20);
  sub_1C1F2FE68();
  uint64_t v31 = v43;
  uint64_t v32 = v53;
  sub_1C214A0A0();
  sub_1C1F30360(v30, (uint64_t (*)(void))sub_1C1F2F7C0);

  (*(void (**)(char *, uint64_t))(v55 + 8))(v28, v32);
  swift_allocObject();
  swift_weakInit();
  sub_1C1F2FEE4();
  uint64_t v33 = v54;
  sub_1C214A0F0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v56 + 8))(v31, v33);
  swift_beginAccess();
  sub_1C2149E20();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1C1F2AEF0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v20 = a1;
  sub_1C1F2FF80(0, &qword_1EA2C2E70, (void (*)(uint64_t))sub_1C1F30010, sub_1C1F2FA34, (void (*)(void))sub_1C1F300C0);
  uint64_t v18 = *(void *)(v1 - 8);
  uint64_t v19 = v1;
  MEMORY[0x1F4188790](v1);
  uint64_t v3 = (char *)&v17 - v2;
  sub_1C1F2F7F4(0, &qword_1EA2C2E90, (uint64_t (*)(uint64_t))sub_1C1F2FA34, MEMORY[0x1E4F1AC08]);
  uint64_t v5 = v4;
  uint64_t v17 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v17 - v6;
  sub_1C1F300F4(0, &qword_1EA2C2E98, MEMORY[0x1E4F1ACE0]);
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v17 - v11;
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    __swift_project_boxed_opaque_existential_0((void *)(Strong + qword_1EA2C2D48), *(void *)(Strong + qword_1EA2C2D48 + 24));
    uint64_t v21 = sub_1C2149220();
    sub_1C1F30010();
    sub_1C1F2FA34(0);
    sub_1C1F300C0();
    sub_1C214A020();
    swift_release();
    sub_1C1F301F0();
    uint64_t v14 = v19;
    uint64_t v15 = sub_1C2149FC0();
    swift_release();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v3, v14);
  }
  else
  {
    uint64_t v21 = MEMORY[0x1E4FBC860];
    sub_1C1F2FA34(0);
    sub_1C2149EE0();
    sub_1C1F23804(0, (unint64_t *)&qword_1EBF0C9C0);
    sub_1C2149EC0();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v7, v5);
    sub_1C1F3017C();
    uint64_t v15 = sub_1C2149FC0();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  *uint64_t v20 = v15;
  return result;
}

uint64_t sub_1C1F2B2CC@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v68 = sub_1C2147B20();
  uint64_t v4 = *(void *)(v68 - 8);
  MEMORY[0x1F4188790](v68);
  uint64_t v67 = (char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = type metadata accessor for MedicationSearchItem.Source(0);
  MEMORY[0x1F4188790](v66);
  uint64_t v65 = (char *)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for MedicationSearchItem(0);
  uint64_t v63 = *(void *)(v7 - 8);
  uint64_t v64 = v7;
  uint64_t v8 = MEMORY[0x1F4188790](v7);
  id v60 = (char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v52 - v10;
  sub_1C1F3028C();
  uint64_t v62 = v12;
  uint64_t v13 = MEMORY[0x1F4188790](v12);
  unint64_t v61 = (char *)&v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  id v59 = (unint64_t *)((char *)&v52 - v16);
  MEMORY[0x1F4188790](v15);
  unint64_t v58 = (uint64_t *)((char *)&v52 - v17);
  uint64_t v18 = *a1;
  uint64_t v69 = MEMORY[0x1E4FBC860];
  swift_bridgeObjectRetain();
  sub_1C1F70654(0, 0, 0);
  uint64_t v19 = v69;
  uint64_t v20 = *(void *)(v18 + 16);
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v57 = v20;
  uint64_t v53 = a2;
  if (v20)
  {
    unint64_t v22 = 0;
    uint64_t v54 = (void (**)(char *, uint64_t))(v4 + 8);
    uint64_t v55 = v18;
    uint64_t v56 = v11;
    while (v22 < *(void *)(v18 + 16))
    {
      uint64_t v23 = sub_1C21490F0();
      uint64_t v24 = *(void *)(v23 - 8);
      uint64_t v25 = v24;
      uint64_t v27 = (uint64_t *)v61;
      uint64_t v26 = v62;
      unint64_t v28 = &v61[*(int *)(v62 + 48)];
      uint64_t v29 = *(void (**)(char *, unint64_t, uint64_t))(v24 + 16);
      v29(v28, v18+ ((*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80))+ *(void *)(v24 + 72) * v22, v23);
      uint64_t v30 = v59;
      uint64_t v31 = (char *)v59 + *(int *)(v26 + 48);
      *id v59 = v22;
      uint64_t v32 = *(void (**)(char *, char *, uint64_t))(v25 + 32);
      v32(v31, v28, v23);
      uint64_t v33 = (uint64_t)v30;
      uint64_t v34 = v58;
      sub_1C1F302F8(v33, (uint64_t)v58, (uint64_t (*)(void))sub_1C1F3028C);
      uint64_t v35 = *(int *)(v26 + 48);
      uint64_t v36 = (char *)v27 + v35;
      uint64_t v37 = *v34;
      uint64_t *v27 = *v34;
      v29((char *)v27 + v35, (unint64_t)v34 + v35, v23);
      uint64_t v38 = (uint64_t)v65;
      v32(v65, v36, v23);
      swift_storeEnumTagMultiPayload();
      uint64_t v39 = v64;
      uint64_t v40 = (uint64_t)v60;
      uint64_t v41 = (uint64_t *)&v60[*(int *)(v64 + 24)];
      uint64_t v42 = v67;
      sub_1C2147B10();
      uint64_t v43 = sub_1C2147AD0();
      uint64_t v45 = v44;
      uint64_t v46 = v42;
      uint64_t v47 = (uint64_t)v56;
      (*v54)(v46, v68);
      *uint64_t v41 = v43;
      v41[1] = v45;
      uint64_t v48 = (uint64_t *)(v40 + *(int *)(v39 + 28));
      type metadata accessor for MedicationSearchCell();
      sub_1C1F2E1D8(&qword_1EA2C2EB8, (void (*)(uint64_t))type metadata accessor for MedicationSearchCell);
      *uint64_t v48 = sub_1C21481D0();
      v48[1] = v49;
      sub_1C1F302F8(v38, v40, type metadata accessor for MedicationSearchItem.Source);
      *(void *)(v40 + *(int *)(v39 + 20)) = v37;
      sub_1C1F302F8(v40, v47, type metadata accessor for MedicationSearchItem);
      sub_1C1F30360((uint64_t)v34, (uint64_t (*)(void))sub_1C1F3028C);
      uint64_t v19 = v69;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C1F70654(0, *(void *)(v19 + 16) + 1, 1);
        uint64_t v19 = v69;
      }
      unint64_t v51 = *(void *)(v19 + 16);
      unint64_t v50 = *(void *)(v19 + 24);
      uint64_t v18 = v55;
      if (v51 >= v50 >> 1)
      {
        sub_1C1F70654(v50 > 1, v51 + 1, 1);
        uint64_t v19 = v69;
      }
      ++v22;
      *(void *)(v19 + 16) = v51 + 1;
      uint64_t result = sub_1C1F302F8(v47, v19+ ((*(unsigned __int8 *)(v63 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80))+ *(void *)(v63 + 72) * v51, type metadata accessor for MedicationSearchItem);
      if (v57 == v22) {
        goto LABEL_9;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_9:
    uint64_t result = swift_bridgeObjectRelease_n();
    *uint64_t v53 = v19;
  }
  return result;
}

uint64_t sub_1C1F2B888(unint64_t a1)
{
  uint64_t v37 = sub_1C2147B20();
  uint64_t v2 = *(void (***)(char *, uint64_t))(v37 - 8);
  MEMORY[0x1F4188790](v37);
  uint64_t v36 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = type metadata accessor for MedicationSearchItem.Source(0);
  MEMORY[0x1F4188790](v35);
  uint64_t v34 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for MedicationSearchItem(0);
  uint64_t v32 = *(void *)(v5 - 8);
  uint64_t v33 = (int *)v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = MEMORY[0x1E4FBC860];
  sub_1C1F70654(0, 0, 0);
  uint64_t v8 = v40;
  if (a1 >> 62) {
    goto LABEL_15;
  }
  uint64_t v9 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (v9)
  {
    while (1)
    {
      unint64_t v10 = 0;
      uint64_t v30 = a1 & 0xFFFFFFFFFFFFFF8;
      unint64_t v31 = a1 & 0xC000000000000001;
      uint64_t v27 = v2 + 1;
      uint64_t v28 = v9;
      unint64_t v29 = a1;
      uint64_t v11 = v33;
      while (v31)
      {
        uint64_t v12 = (char *)MEMORY[0x1C8753960](v10, a1);
LABEL_7:
        uint64_t v2 = (void (**)(char *, uint64_t))v12;
        if (__OFADD__(v10, 1)) {
          goto LABEL_14;
        }
        unint64_t v38 = v10 + 1;
        sub_1C1F30C40();
        uint64_t v39 = v8;
        uint64_t v13 = v34;
        *uint64_t v13 = objc_msgSend(v2, sel_specificProduct);
        id v14 = objc_msgSend(v2, sel_routedDoseFormProducts);
        sub_1C1F12718(0, (unint64_t *)&qword_1EA2C6A20);
        sub_1C214A780();

        sub_1C21491C0();
        swift_storeEnumTagMultiPayload();
        uint64_t v15 = (uint64_t *)&v7[v11[6]];
        uint64_t v16 = v36;
        sub_1C2147B10();
        uint64_t v17 = sub_1C2147AD0();
        uint64_t v19 = v18;
        (*v27)(v16, v37);
        *uint64_t v15 = v17;
        v15[1] = v19;
        uint64_t v20 = (uint64_t *)&v7[v11[7]];
        type metadata accessor for MedicationSearchCell();
        sub_1C1F2E1D8(&qword_1EA2C2EB8, (void (*)(uint64_t))type metadata accessor for MedicationSearchCell);
        *uint64_t v20 = sub_1C21481D0();
        v20[1] = v21;
        uint64_t v22 = (uint64_t)v13;
        uint64_t v8 = v39;
        sub_1C1F302F8(v22, (uint64_t)v7, type metadata accessor for MedicationSearchItem.Source);

        *(void *)&v7[v11[5]] = v10;
        uint64_t v40 = v8;
        unint64_t v24 = *(void *)(v8 + 16);
        unint64_t v23 = *(void *)(v8 + 24);
        uint64_t v2 = (void (**)(char *, uint64_t))(v24 + 1);
        if (v24 >= v23 >> 1)
        {
          sub_1C1F70654(v23 > 1, v24 + 1, 1);
          uint64_t v8 = v40;
        }
        *(void *)(v8 + 16) = v2;
        sub_1C1F302F8((uint64_t)v7, v8+ ((*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80))+ *(void *)(v32 + 72) * v24, type metadata accessor for MedicationSearchItem);
        ++v10;
        a1 = v29;
        if (v38 == v28) {
          goto LABEL_16;
        }
      }
      if (v10 < *(void *)(v30 + 16)) {
        break;
      }
      __break(1u);
LABEL_14:
      __break(1u);
LABEL_15:
      swift_bridgeObjectRetain();
      uint64_t v9 = sub_1C214B930();
      if (!v9) {
        goto LABEL_16;
      }
    }
    uint64_t v12 = (char *)*(id *)(a1 + 8 * v10 + 32);
    goto LABEL_7;
  }
LABEL_16:
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_1C1F2BCDC(uint64_t *a1)
{
  uint64_t v1 = *a1;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v3 = result;
    swift_getKeyPath();
    swift_getKeyPath();
    sub_1C2149F80();
    swift_release();
    swift_release();
    if (v4 == 1)
    {
      if (!*(void *)(v1 + 16))
      {
        swift_getKeyPath();
        swift_getKeyPath();
        sub_1C2149F80();
        swift_release();
        swift_release();
        sub_1C214A6A0();
        swift_bridgeObjectRelease();
        __swift_project_boxed_opaque_existential_0((void *)(v3 + qword_1EA2C2D48), *(void *)(v3 + qword_1EA2C2D48 + 24));
        sub_1C2149230();
      }
      swift_getKeyPath();
      swift_getKeyPath();
      swift_retain();
      sub_1C2149F90();
      *(void *)(v3 + qword_1EA2C2D98) = sub_1C1F37580(v1);
      swift_bridgeObjectRelease();
      sub_1C1F28908();
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_1C1F2BE98()
{
  uint64_t v1 = v0;
  sub_1C2148C70();
  char v2 = sub_1C2148C40();
  sub_1C1F2F7F4(0, (unint64_t *)&qword_1EA2C2DD0, MEMORY[0x1E4F66468], MEMORY[0x1E4FBBE00]);
  sub_1C2148540();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1C214FCC0;
  if (v2) {
    sub_1C1F277E0();
  }
  else {
    sub_1C1F2818C();
  }
  sub_1C2148520();
  uint64_t v3 = v1 + qword_1EA2C7B68;
  swift_beginAccess();
  if (*(void *)(*(void *)v3 + 16))
  {
    sub_1C1F2F6C4(0, (unint64_t *)&qword_1EBF0C958, (unint64_t *)&qword_1EBF0C2F0, MEMORY[0x1E4F66028], MEMORY[0x1E4FBBE00]);
    uint64_t v4 = swift_allocObject();
    *(_OWORD *)(v4 + 16) = xmmword_1C214FCD0;
    if (qword_1EBF0CA00 != -1) {
      swift_once();
    }
    id v5 = (id)qword_1EBF0CA18;
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_1C2147730();
    uint64_t v8 = v7;

    swift_bridgeObjectRelease();
    type metadata accessor for MedicationOnboardingHeaderCell();
    sub_1C1F2E1D8(&qword_1EA2C2DD8, (void (*)(uint64_t))type metadata accessor for MedicationOnboardingHeaderCell);
    uint64_t v9 = sub_1C21481D0();
    uint64_t v11 = v10;
    *(void *)(v4 + 56) = &type metadata for MedicationOnboardingHeaderItem;
    *(void *)(v4 + 64) = sub_1C1F2F72C();
    uint64_t v12 = (void *)swift_allocObject();
    *(void *)(v4 + 32) = v12;
    v12[2] = v6;
    v12[3] = v8;
    v12[4] = v9;
    v12[5] = v11;
    uint64_t v13 = swift_bridgeObjectRetain();
    uint64_t v14 = sub_1C1F37580(v13);
    swift_bridgeObjectRelease();
    sub_1C1F7D1D0(v14);
  }
  sub_1C2148520();
  sub_1C21485B0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C1F2C214@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  sub_1C1F2FF80(0, &qword_1EA2C2F68, (void (*)(uint64_t))sub_1C1F30A8C, sub_1C1F2FA34, (void (*)(void))sub_1C1F30B24);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)v13 - v7;
  uint64_t v9 = swift_allocObject();
  swift_weakInit();
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v9;
  *(void *)(v10 + 24) = a1;
  sub_1C1F30A8C();
  swift_allocObject();
  swift_bridgeObjectRetain();
  v13[1] = sub_1C2149F10();
  sub_1C1F2FA34(0);
  sub_1C1F30B24();
  sub_1C214A020();
  swift_release();
  sub_1C1F30BA4();
  uint64_t v11 = sub_1C2149FC0();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  *a2 = v11;
  return result;
}

uint64_t sub_1C1F2C41C(uint64_t (*a1)(long long *), uint64_t a2, char *a3, uint64_t a4)
{
  uint64_t v97 = a4;
  unint64_t v105 = a3;
  uint64_t v115 = *MEMORY[0x1E4F143B8];
  uint64_t v6 = sub_1C21475B0();
  uint64_t v94 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v93 = (char *)&v79 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1F30CC4(0);
  MEMORY[0x1F4188790](v8 - 8);
  unint64_t v103 = (char *)&v79 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  BOOL v107 = (void (*)(char *, uint64_t))sub_1C2147CF0();
  uint64_t v101 = *((void *)v107 - 1);
  MEMORY[0x1F4188790](v107);
  id v100 = (char *)&v79 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1C21476D0();
  uint64_t v99 = *(void *)(v11 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v11);
  id v95 = (char *)&v79 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  uint64_t v106 = (char *)&v79 - v15;
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v79 - v16;
  uint64_t v18 = sub_1C2147AC0();
  uint64_t v98 = *(void *)(v18 - 8);
  uint64_t v19 = MEMORY[0x1F4188790](v18);
  uint64_t v21 = (char *)&v79 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = MEMORY[0x1F4188790](v19);
  uint64_t v102 = (char *)&v79 - v23;
  uint64_t v24 = MEMORY[0x1F4188790](v22);
  BOOL v96 = (char *)&v79 - v25;
  MEMORY[0x1F4188790](v24);
  uint64_t v27 = (char *)&v79 - v26;
  uint64_t v28 = swift_allocObject();
  unint64_t v29 = a1;
  *(void *)(v28 + 16) = a1;
  *(void *)(v28 + 24) = a2;
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  swift_retain();
  if (Strong)
  {
    uint64_t v92 = v28;
    uint64_t v80 = v6;
    uint64_t v81 = v21;
    uint64_t v82 = Strong;
    uint64_t v83 = v18;
    uint64_t v104 = v11;
    uint64_t v108 = v27;
    sub_1C2147AB0();
    unint64_t v31 = v100;
    sub_1C2147CB0();
    sub_1C1F2F7F4(0, &qword_1EBF0B508, MEMORY[0x1E4F27C88], MEMORY[0x1E4FBBE00]);
    uint64_t v91 = v32;
    uint64_t v33 = sub_1C2147CD0();
    uint64_t v34 = *(void *)(v33 - 8);
    uint64_t v35 = *(void *)(v34 + 72);
    uint64_t v36 = *(unsigned __int8 *)(v34 + 80);
    uint64_t v37 = (v36 + 32) & ~v36;
    uint64_t v86 = 2 * v35;
    uint64_t v90 = v37 + 3 * v35;
    uint64_t v89 = v36 | 7;
    uint64_t v38 = swift_allocObject();
    long long v88 = xmmword_1C2150000;
    *(_OWORD *)(v38 + 16) = xmmword_1C2150000;
    unsigned int v87 = *MEMORY[0x1E4F27C20];
    uint64_t v39 = *(void (**)(uint64_t))(v34 + 104);
    v39(v38 + v37);
    unsigned int v85 = *MEMORY[0x1E4F27C30];
    v39(v38 + v37 + v35);
    unsigned int v84 = *MEMORY[0x1E4F27BF0];
    v39(v38 + v37 + 2 * v35);
    sub_1C1F17A58(v38);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    unint64_t v105 = v17;
    sub_1C2147BF0();
    swift_bridgeObjectRelease();
    uint64_t v101 = *(void *)(v101 + 8);
    ((void (*)(char *, void))v101)(v31, v107);
    sub_1C2147CB0();
    uint64_t v40 = swift_allocObject();
    *(_OWORD *)(v40 + 16) = v88;
    ((void (*)(uint64_t, void, uint64_t))v39)(v40 + v37, v87, v33);
    ((void (*)(uint64_t, void, uint64_t))v39)(v40 + v37 + v35, v85, v33);
    ((void (*)(uint64_t, void, uint64_t))v39)(v40 + v37 + v86, v84, v33);
    sub_1C1F17A58(v40);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    uint64_t v41 = v106;
    uint64_t v42 = v108;
    sub_1C2147BF0();
    swift_bridgeObjectRelease();
    ((void (*)(char *, void))v101)(v31, v107);
    uint64_t v44 = (void (*)(long long *, void))sub_1C2147650();
    if (*(unsigned char *)(v43 + 8))
    {
      v44(&aBlock, 0);
      uint64_t v46 = v102;
      uint64_t v45 = (uint64_t)v103;
      uint64_t v47 = v92;
    }
    else
    {
      uint64_t v46 = v102;
      uint64_t v45 = (uint64_t)v103;
      uint64_t v47 = v92;
      if (__OFSUB__(*(void *)v43, 3)) {
        __break(1u);
      }
      *(void *)v43 -= 3;
      v44(&aBlock, 0);
    }
    uint64_t v49 = self;
    uint64_t v50 = v99;
    unint64_t v51 = v95;
    uint64_t v52 = v104;
    (*(void (**)(char *, char *, uint64_t))(v99 + 16))(v95, v41, v104);
    uint64_t v53 = (void *)sub_1C2147600();
    BOOL v107 = *(void (**)(char *, uint64_t))(v50 + 8);
    v107(v51, v52);
    uint64_t v54 = (void *)sub_1C2147600();
    *(void *)&long long aBlock = 0;
    id v55 = objc_msgSend(v49, sel__sortDateIntervalFromStartDateComponents_endDateComponents_error_, v53, v54, &aBlock);

    id v56 = (id)aBlock;
    uint64_t v57 = v83;
    if (v55)
    {
      unint64_t v58 = v93;
      sub_1C2147560();

      sub_1C2147590();
      (*(void (**)(char *, uint64_t))(v94 + 8))(v58, v80);
      uint64_t v59 = 0;
    }
    else
    {
      id v60 = v56;
      unint64_t v61 = (void *)sub_1C2147800();

      swift_willThrow();
      uint64_t v59 = 1;
    }
    uint64_t v62 = v98;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v98 + 56))(v45, v59, 1, v57);
    uint64_t v63 = *(void (**)(char *, char *, uint64_t))(v62 + 16);
    v63(v46, v42, v57);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v62 + 48))(v45, 1, v57) == 1)
    {
      uint64_t v64 = v96;
      (*(void (**)(char *, char *, uint64_t))(v62 + 32))(v96, v46, v57);
      sub_1C1F30360(v45, (uint64_t (*)(void))sub_1C1F30CC4);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v62 + 8))(v46, v57);
      uint64_t v64 = v96;
      (*(void (**)(char *, uint64_t, uint64_t))(v62 + 32))(v96, v45, v57);
    }
    uint64_t v65 = v62;
    uint64_t v66 = v81;
    v63(v81, v64, v57);
    uint64_t v67 = swift_allocObject();
    *(void *)(v67 + 16) = sub_1C1F30CF8;
    *(void *)(v67 + 24) = v47;
    id v68 = objc_allocWithZone(MEMORY[0x1E4F66AE0]);
    sub_1C1F12718(0, (unint64_t *)&qword_1EA2C2FA0);
    uint64_t v69 = v97;
    swift_bridgeObjectRetain();
    uint64_t v70 = (void *)sub_1C214A770();
    swift_bridgeObjectRelease();
    id v71 = (void *)sub_1C2147A00();
    uint64_t v113 = sub_1C1F30D38;
    uint64_t v114 = v67;
    *(void *)&long long aBlock = MEMORY[0x1E4F143A8];
    *((void *)&aBlock + 1) = 1107296256;
    char v111 = sub_1C1F2DFE4;
    v112 = &block_descriptor_53;
    uint64_t v72 = _Block_copy(&aBlock);
    id v73 = objc_msgSend(v68, sel_initForCHRImportWithExistingMedications_sinceDate_limit_resultsHandler_, v70, v71, 100, v72);
    _Block_release(v72);

    id v74 = *(void (**)(char *, uint64_t))(v65 + 8);
    v74(v66, v57);
    swift_release();
    *(void *)&long long aBlock = 0;
    *((void *)&aBlock + 1) = 0xE000000000000000;
    id v75 = v73;
    sub_1C214B7C0();
    swift_bridgeObjectRelease();
    strcpy((char *)&aBlock, "CHR import: ");
    BYTE13(aBlock) = 0;
    HIWORD(aBlock) = -5120;
    uint64_t v109 = v69;
    sub_1C1F30D40(0, &qword_1EA2C2FA8, (unint64_t *)&qword_1EA2C2FA0);
    swift_bridgeObjectRetain();
    sub_1C214A660();
    sub_1C214A6C0();
    swift_bridgeObjectRelease();
    sub_1C214A6C0();
    sub_1C1F2E1D8(&qword_1EA2C74F0, MEMORY[0x1E4F27928]);
    sub_1C214BA40();
    sub_1C214A6C0();
    swift_bridgeObjectRelease();
    uint64_t v76 = (void *)sub_1C214A5B0();
    swift_bridgeObjectRelease();
    objc_msgSend(v75, sel_setDebugIdentifier_, v76);

    objc_msgSend(*(id *)(v82 + qword_1EA2C2D88), sel_executeQuery_, v75);
    v74(v64, v57);
    uint64_t v77 = v107;
    uint64_t v78 = v104;
    v107(v106, v104);
    v77(v105, v78);
    v74(v108, v57);
    return swift_release();
  }
  else
  {
    swift_release();
    *(void *)&long long aBlock = MEMORY[0x1E4FBC860];
    BYTE8(aBlock) = 0;
    return v29(&aBlock);
  }
}

void sub_1C1F2D100(int a1, void *a2, id a3, void (*a4)(id, uint64_t))
{
  if (a3)
  {
    id v6 = a3;
    a4(a3, 1);
  }
  else
  {
    if (a2) {
      uint64_t v7 = a2;
    }
    else {
      uint64_t v7 = (void *)MEMORY[0x1E4FBC860];
    }
    swift_bridgeObjectRetain();
    a4(v7, 0);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1C1F2D1AC@<X0>(uint64_t *a1@<X8>)
{
  unint64_t v2 = swift_bridgeObjectRetain();
  uint64_t v3 = sub_1C1F2B888(v2);
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v3;
  return result;
}

uint64_t sub_1C1F2D204(unint64_t a1)
{
  uint64_t v2 = sub_1C2148410();
  uint64_t v22 = *(void *)(v2 - 8);
  uint64_t v3 = MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v21 - v6;
  uint64_t v8 = sub_1C2148710();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for NewMedicationsOnboardingDataSource();
  uint64_t result = sub_1C2148360();
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)(result + 16) > a1)
  {
    uint64_t v21 = v2;
    uint64_t v13 = result + 16 * a1;
    uint64_t v15 = *(void *)(v13 + 32);
    uint64_t v14 = *(void *)(v13 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    if (v15 == 0xD000000000000010 && v14 == 0x80000001C215E120 || (sub_1C214BA80() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      sub_1C2148690();
      sub_1C21486B0();
      uint64_t v16 = (void *)sub_1C2148700();
    }
    else
    {
      if ((v15 != 0xD00000000000001ELL || v14 != 0x80000001C215E140) && (sub_1C214BA80() & 1) == 0)
      {
        if (v15 == 0xD00000000000001ELL && v14 == 0x80000001C215E160
          || (sub_1C214BA80() & 1) != 0
          || v15 == 0xD000000000000023 && v14 == 0x80000001C215E180
          || (sub_1C214BA80() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          sub_1C2148400();
          id v17 = objc_msgSend(self, sel_fractionalHeightDimension_, 0.75);
          sub_1C2148390();
          uint64_t v16 = (void *)sub_1C21483A0();
          (*(void (**)(char *, uint64_t))(v22 + 8))(v7, v21);
        }
        else
        {
          if (v15 == 0xD00000000000001CLL && v14 == 0x80000001C215E1B0)
          {
            swift_bridgeObjectRelease();
          }
          else
          {
            char v18 = sub_1C214BA80();
            swift_bridgeObjectRelease();
            if ((v18 & 1) == 0)
            {
              sub_1C21483E0();
              sub_1C21483B0();
              uint64_t v19 = v21;
              uint64_t v20 = *(void (**)(char *, uint64_t))(v22 + 8);
              v20(v7, v21);
              uint64_t v16 = (void *)sub_1C21483A0();
              v20(v5, v19);
              return (uint64_t)v16;
            }
          }
          sub_1C2148690();
          uint64_t v16 = (void *)sub_1C2148700();
          (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
          objc_msgSend(v16, sel_contentInsets);
          objc_msgSend(v16, sel_setContentInsets_, 0.0);
        }
        return (uint64_t)v16;
      }
      swift_bridgeObjectRelease();
      sub_1C2148660();
      sub_1C21486B0();
      uint64_t v16 = (void *)sub_1C2148700();
      objc_msgSend(v16, sel_contentInsets);
      objc_msgSend(v16, sel_setContentInsets_);
    }
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    return (uint64_t)v16;
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for NewMedicationsOnboardingDataSource()
{
  uint64_t result = qword_1EA2C2DB8;
  if (!qword_1EA2C2DB8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C1F2D710@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = sub_1C2147B20();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (sub_1C214A5F0() == a1 && v10 == a2)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v12 = sub_1C214BA80();
    swift_bridgeObjectRelease();
    if ((v12 & 1) == 0) {
      goto LABEL_12;
    }
  }
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1C2149F80();
  swift_release();
  swift_release();
  if (LOBYTE(v15[0]) != 1)
  {
LABEL_12:
    a3[3] = sub_1C2148220();
    a3[4] = sub_1C1F2E1D8(&qword_1EA2C2D28, MEMORY[0x1E4F66330]);
    __swift_allocate_boxed_opaque_existential_1(a3);
    return sub_1C2148210();
  }
  if (qword_1EBF0CA00 != -1) {
    swift_once();
  }
  id v13 = (id)qword_1EBF0CA18;
  swift_bridgeObjectRetain();
  sub_1C2147730();

  swift_bridgeObjectRelease();
  v15[0] = 0x74497265746F6F46;
  v15[1] = 0xEB000000005F6D65;
  sub_1C2147B10();
  sub_1C2147AD0();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  a3[3] = sub_1C2148960();
  a3[4] = sub_1C1F2E1D8(&qword_1EA2C2D38, MEMORY[0x1E4F665E8]);
  __swift_allocate_boxed_opaque_existential_1(a3);
  return sub_1C2148950();
}

uint64_t *__swift_allocate_boxed_opaque_existential_1(uint64_t *a1)
{
  uint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

void NewMedicationsOnboardingDataSource.__allocating_init(arrangedSections:identifier:)()
{
}

void NewMedicationsOnboardingDataSource.init(arrangedSections:identifier:)()
{
}

uint64_t sub_1C1F2DB0C()
{
  sub_1C1F2E220(v0 + qword_1EA2C2D40);
  __swift_destroy_boxed_opaque_existential_0(v0 + qword_1EA2C2D48);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  swift_release();
  uint64_t v1 = v0 + qword_1EA2C2D10;
  uint64_t v2 = (uint64_t (*)(void, uint64_t))MEMORY[0x1E4F1AC70];
  sub_1C1F306B8(0, (unint64_t *)&unk_1EA2C6A80, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4F1AC70]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v1, v3);
  uint64_t v4 = v0 + qword_1EA2C2D20;
  sub_1C1F306B8(0, &qword_1EBF0C750, MEMORY[0x1E4FBB390], v2);
  uint64_t v6 = v5;
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v7(v4, v5);
  v7(v0 + qword_1EA2C2D30, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t NewMedicationsOnboardingDataSource.deinit()
{
  uint64_t v0 = sub_1C2148610();
  sub_1C1F2E220(v0 + qword_1EA2C2D40);
  __swift_destroy_boxed_opaque_existential_0(v0 + qword_1EA2C2D48);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  swift_release();
  uint64_t v1 = v0 + qword_1EA2C2D10;
  uint64_t v2 = (uint64_t (*)(void, uint64_t))MEMORY[0x1E4F1AC70];
  sub_1C1F306B8(0, (unint64_t *)&unk_1EA2C6A80, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4F1AC70]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v1, v3);
  uint64_t v4 = v0 + qword_1EA2C2D20;
  sub_1C1F306B8(0, &qword_1EBF0C750, MEMORY[0x1E4FBB390], v2);
  uint64_t v6 = v5;
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v7(v4, v5);
  v7(v0 + qword_1EA2C2D30, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t NewMedicationsOnboardingDataSource.__deallocating_deinit()
{
  NewMedicationsOnboardingDataSource.deinit();

  return swift_deallocClassInstance();
}

uint64_t sub_1C1F2DF38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1C1F2D710(a1, a2, a3);
}

uint64_t sub_1C1F2DF5C(unint64_t a1)
{
  return sub_1C1F2D204(a1);
}

uint64_t sub_1C1F2DF80()
{
  return sub_1C2148B80();
}

uint64_t sub_1C1F2DFE4(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  uint64_t v5 = a3;
  uint64_t v7 = *(void (**)(id, uint64_t, void *))(a1 + 32);
  if (a3)
  {
    sub_1C1F12718(0, &qword_1EA2C2F80);
    uint64_t v5 = sub_1C214A780();
  }
  swift_retain();
  id v8 = a2;
  id v9 = a4;
  v7(v8, v5, a4);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1C1F2E09C@<X0>(unsigned char *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1C2149F80();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1C1F2E118@<X0>(unsigned char *a1@<X8>)
{
  return sub_1C1F2E09C(a1);
}

uint64_t sub_1C1F2E140()
{
  return sub_1C2149F90();
}

uint64_t sub_1C1F2E1B0()
{
  return sub_1C1F2E140();
}

uint64_t sub_1C1F2E1D8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C1F2E220(uint64_t a1)
{
  return a1;
}

uint64_t sub_1C1F2E248(unint64_t a1)
{
  sub_1C1F2F7C0(0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v47 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = sub_1C214A400();
  uint64_t v46 = *(void *)(v48 - 8);
  MEMORY[0x1F4188790](v48);
  uint64_t v45 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1F307D0(0, &qword_1EA2C2F28, (uint64_t (*)(uint64_t))sub_1C1F2FA14, sub_1C1F2FCD4, MEMORY[0x1E4F1AC50]);
  uint64_t v43 = *(void *)(v6 - 8);
  uint64_t v44 = v6;
  MEMORY[0x1F4188790](v6);
  id v8 = (char *)&v43 - v7;
  sub_1C1F30850(0);
  uint64_t v50 = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  char v12 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1F30898(0);
  uint64_t v14 = v13;
  uint64_t v15 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v52 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1F2FD84(0, &qword_1EA2C2F48, (uint64_t (*)(uint64_t))sub_1C1F30898, sub_1C1F30914, MEMORY[0x1E4F1AAB0]);
  uint64_t v18 = v17;
  uint64_t v53 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  unint64_t v51 = (char *)&v43 - v19;
  uint64_t v58 = MEMORY[0x1E4FBC860];
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_1C214B930();
    uint64_t v20 = result;
  }
  else
  {
    uint64_t v20 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
  }
  uint64_t v56 = v14;
  uint64_t v57 = v1;
  uint64_t v54 = v15;
  uint64_t v55 = v18;
  uint64_t v49 = v10;
  if (!v20)
  {
    swift_bridgeObjectRelease();
    uint64_t v26 = MEMORY[0x1E4FBC860];
LABEL_16:
    uint64_t v27 = swift_allocObject();
    *(void *)(v27 + 16) = v1;
    *(void *)(v27 + 24) = v26;
    sub_1C1F2FA14(0);
    sub_1C1F2FCD4();
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1C2149F20();
    sub_1C1F30954();
    uint64_t v28 = v44;
    uint64_t v29 = sub_1C2149FC0();
    (*(void (**)(char *, uint64_t))(v43 + 8))(v8, v28);
    swift_bridgeObjectRelease();
    uint64_t v58 = v29;
    uint64_t v59 = MEMORY[0x1E4FBC860];
    uint64_t v30 = v12;
    sub_1C2149FE0();
    swift_release();
    sub_1C1F12718(0, (unint64_t *)&qword_1EBF0CB10);
    uint64_t v32 = v45;
    uint64_t v31 = v46;
    uint64_t v33 = v48;
    (*(void (**)(char *, void, uint64_t))(v46 + 104))(v45, *MEMORY[0x1E4FBCB38], v48);
    uint64_t v34 = sub_1C214ADB0();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v32, v33);
    uint64_t v58 = v34;
    uint64_t v35 = sub_1C214AD20();
    uint64_t v36 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56);
    uint64_t v37 = (uint64_t)v47;
    v36(v47, 1, 1, v35);
    sub_1C1F308E0();
    sub_1C1F2F9D0((unint64_t *)&qword_1EBF0C7F0, (unint64_t *)&qword_1EBF0CB10);
    uint64_t v38 = v52;
    uint64_t v39 = v50;
    sub_1C214A0C0();
    sub_1C1F30360(v37, (uint64_t (*)(void))sub_1C1F2F7C0);

    (*(void (**)(char *, uint64_t))(v49 + 8))(v30, v39);
    uint64_t v58 = sub_1C214AD80();
    v36((char *)v37, 1, 1, v35);
    sub_1C1F30914();
    uint64_t v40 = v51;
    uint64_t v41 = v56;
    sub_1C214A0A0();
    sub_1C1F30360(v37, (uint64_t (*)(void))sub_1C1F2F7C0);

    (*(void (**)(char *, uint64_t))(v54 + 8))(v38, v41);
    swift_getKeyPath();
    uint64_t v58 = v57;
    sub_1C1F309F0();
    uint64_t v42 = v55;
    sub_1C214A100();
    swift_release();
    (*(void (**)(char *, uint64_t))(v53 + 8))(v40, v42);
    swift_beginAccess();
    sub_1C2149E20();
    swift_endAccess();
    return swift_release();
  }
  if (v20 >= 1)
  {
    for (uint64_t i = 0; i != v20; ++i)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v23 = (id)MEMORY[0x1C8753960](i, a1);
      }
      else {
        id v23 = *(id *)(a1 + 8 * i + 32);
      }
      uint64_t v24 = v23;
      id v25 = objc_msgSend(v23, sel_firstConceptIdentifier);

      if (v25)
      {
        MEMORY[0x1C87528E0]();
        if (*(void *)((v58 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v58 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1C214A7D0();
        }
        sub_1C214A820();
        sub_1C214A7A0();
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v1 = v57;
    uint64_t v26 = v58;
    goto LABEL_16;
  }
  __break(1u);
  return result;
}

uint64_t _s19HealthMedicationsUI03NewB20OnboardingDataSourceC13registerCells3forySo16UICollectionViewC_tF_0()
{
  return sub_1C214ACC0();
}

uint64_t sub_1C1F2ED30()
{
  return sub_1C1F2E1D8(&qword_1EA2C2DA0, (void (*)(uint64_t))type metadata accessor for NewMedicationsOnboardingDataSource);
}

uint64_t sub_1C1F2ED78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C1F26174(a1, a2, a3, (uint64_t)&qword_1EA2C2D10, (unint64_t *)&unk_1EA2C6A80, MEMORY[0x1E4FBB1A0]);
}

uint64_t sub_1C1F2EDA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C1F26204(a1, a2, a3, a4, &qword_1EA2C2D18, MEMORY[0x1E4FBB1A0], (uint64_t)&qword_1EA2C2D10, (unint64_t *)&unk_1EA2C6A80);
}

uint64_t sub_1C1F2EDE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C1F26174(a1, a2, a3, (uint64_t)&qword_1EA2C2D20, &qword_1EBF0C750, MEMORY[0x1E4FBB390]);
}

uint64_t sub_1C1F2EE10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C1F26204(a1, a2, a3, a4, &qword_1EBF0C740, MEMORY[0x1E4FBB390], (uint64_t)&qword_1EA2C2D20, &qword_1EBF0C750);
}

uint64_t sub_1C1F2EE48@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (void *)(*a1 + qword_1EA2C7B68);
  swift_beginAccess();
  *a2 = *v3;
  return swift_bridgeObjectRetain();
}

void sub_1C1F2EEA4()
{
  sub_1C1F306B8(319, (unint64_t *)&unk_1EA2C6A80, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4F1AC70]);
  if (v0 <= 0x3F)
  {
    sub_1C1F306B8(319, &qword_1EBF0C750, MEMORY[0x1E4FBB390], MEMORY[0x1E4F1AC70]);
    if (v1 <= 0x3F) {
      swift_initClassMetadata2();
    }
  }
}

uint64_t method lookup function for NewMedicationsOnboardingDataSource(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for NewMedicationsOnboardingDataSource);
}

uint64_t dispatch thunk of NewMedicationsOnboardingDataSource.searchText.getter()
{
  return (*(uint64_t (**)(void))(class metadata base offset for NewMedicationsOnboardingDataSource + *v0 + 336))();
}

uint64_t dispatch thunk of NewMedicationsOnboardingDataSource.searchText.setter()
{
  return (*(uint64_t (**)(void))(class metadata base offset for NewMedicationsOnboardingDataSource + *v0 + 344))();
}

uint64_t dispatch thunk of NewMedicationsOnboardingDataSource.searchText.modify()
{
  return (*(uint64_t (**)(void))(class metadata base offset for NewMedicationsOnboardingDataSource + *v0 + 352))();
}

uint64_t dispatch thunk of NewMedicationsOnboardingDataSource.$searchText.getter()
{
  return (*(uint64_t (**)(void))(class metadata base offset for NewMedicationsOnboardingDataSource + *v0 + 360))();
}

uint64_t dispatch thunk of NewMedicationsOnboardingDataSource.$searchText.setter()
{
  return (*(uint64_t (**)(void))(class metadata base offset for NewMedicationsOnboardingDataSource + *v0 + 368))();
}

uint64_t dispatch thunk of NewMedicationsOnboardingDataSource.$searchText.modify()
{
  return (*(uint64_t (**)(void))(class metadata base offset for NewMedicationsOnboardingDataSource + *v0 + 376))();
}

uint64_t dispatch thunk of NewMedicationsOnboardingDataSource.hasNoResults.getter()
{
  return (*(uint64_t (**)(void))(class metadata base offset for NewMedicationsOnboardingDataSource + *v0 + 384))();
}

uint64_t dispatch thunk of NewMedicationsOnboardingDataSource.hasNoResults.setter()
{
  return (*(uint64_t (**)(void))(class metadata base offset for NewMedicationsOnboardingDataSource + *v0 + 392))();
}

uint64_t dispatch thunk of NewMedicationsOnboardingDataSource.hasNoResults.modify()
{
  return (*(uint64_t (**)(void))(class metadata base offset for NewMedicationsOnboardingDataSource + *v0 + 400))();
}

uint64_t dispatch thunk of NewMedicationsOnboardingDataSource.$hasNoResults.getter()
{
  return (*(uint64_t (**)(void))(class metadata base offset for NewMedicationsOnboardingDataSource + *v0 + 408))();
}

uint64_t dispatch thunk of NewMedicationsOnboardingDataSource.$hasNoResults.setter()
{
  return (*(uint64_t (**)(void))(class metadata base offset for NewMedicationsOnboardingDataSource + *v0 + 416))();
}

uint64_t dispatch thunk of NewMedicationsOnboardingDataSource.$hasNoResults.modify()
{
  return (*(uint64_t (**)(void))(class metadata base offset for NewMedicationsOnboardingDataSource + *v0 + 424))();
}

uint64_t dispatch thunk of NewMedicationsOnboardingDataSource.chrSuggestionItems.getter()
{
  return (*(uint64_t (**)(void))(class metadata base offset for NewMedicationsOnboardingDataSource + *v0 + 528))();
}

uint64_t dispatch thunk of NewMedicationsOnboardingDataSource.chrSuggestionItems.setter()
{
  return (*(uint64_t (**)(void))(class metadata base offset for NewMedicationsOnboardingDataSource + *v0 + 536))();
}

uint64_t dispatch thunk of NewMedicationsOnboardingDataSource.chrSuggestionItems.modify()
{
  return (*(uint64_t (**)(void))(class metadata base offset for NewMedicationsOnboardingDataSource + *v0 + 544))();
}

uint64_t dispatch thunk of NewMedicationsOnboardingDataSource.layout(for:environment:)()
{
  return (*(uint64_t (**)(void))(class metadata base offset for NewMedicationsOnboardingDataSource + *v0 + 680))();
}

uint64_t dispatch thunk of NewMedicationsOnboardingDataSource.supplementaryItem(ofKind:at:)()
{
  return (*(uint64_t (**)(void))(class metadata base offset for NewMedicationsOnboardingDataSource + *v0 + 688))();
}

uint64_t sub_1C1F2F4C4()
{
  return type metadata accessor for NewMedicationsOnboardingDataSource();
}

uint64_t getEnumTagSinglePayload for NewMedicationsOnboardingDataSource.SubtitleState(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for NewMedicationsOnboardingDataSource.SubtitleState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C1F2F628);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

unsigned char *sub_1C1F2F654(unsigned char *result, char a2)
{
  *uint64_t result = a2;
  return result;
}

ValueMetadata *type metadata accessor for NewMedicationsOnboardingDataSource.SubtitleState()
{
  return &type metadata for NewMedicationsOnboardingDataSource.SubtitleState;
}

unint64_t sub_1C1F2F670()
{
  unint64_t result = qword_1EA2C2DC8;
  if (!qword_1EA2C2DC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C2DC8);
  }
  return result;
}

void sub_1C1F2F6C4(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = sub_1C1F23804(255, a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

unint64_t sub_1C1F2F72C()
{
  unint64_t result = qword_1EA2C2DE0;
  if (!qword_1EA2C2DE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C2DE0);
  }
  return result;
}

uint64_t sub_1C1F2F780()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 48, 7);
}

void sub_1C1F2F7C0(uint64_t a1)
{
}

void sub_1C1F2F7F4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1C1F2F858()
{
  if (!qword_1EA2C2DE8)
  {
    uint64_t v0 = MEMORY[0x1E4FBB1A0];
    sub_1C1F306B8(255, &qword_1EA2C2D18, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4F1AC60]);
    sub_1C1F12718(255, (unint64_t *)&qword_1EBF0CB10);
    sub_1C1F2F96C(&qword_1EA2C2DF0, &qword_1EA2C2D18, v0);
    sub_1C1F2F9D0((unint64_t *)&qword_1EBF0C7F0, (unint64_t *)&qword_1EBF0CB10);
    unint64_t v1 = sub_1C2149DB0();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_1EA2C2DE8);
    }
  }
}

uint64_t sub_1C1F2F96C(unint64_t *a1, unint64_t *a2, uint64_t a3)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C1F306B8(255, a2, a3, MEMORY[0x1E4F1AC60]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C1F2F9D0(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C1F12718(255, a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C1F2FA14(uint64_t a1)
{
}

void sub_1C1F2FA34(uint64_t a1)
{
}

uint64_t sub_1C1F2FA68()
{
  return sub_1C1F2E1D8(&qword_1EA2C2E10, (void (*)(uint64_t))sub_1C1F2F858);
}

void sub_1C1F2FA9C()
{
  if (!qword_1EA2C2E18)
  {
    sub_1C1F2FA14(255);
    sub_1C1F2FB58();
    sub_1C1F2FCD4();
    sub_1C1F2E1D8(&qword_1EA2C2E38, (void (*)(uint64_t))sub_1C1F2FB58);
    unint64_t v0 = sub_1C2149D40();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C2E18);
    }
  }
}

void sub_1C1F2FB58()
{
  if (!qword_1EA2C2E20)
  {
    sub_1C1F2FF80(255, &qword_1EA2C2DF8, (void (*)(uint64_t))sub_1C1F2F858, sub_1C1F2FA14, (void (*)(void))sub_1C1F2FA68);
    sub_1C1F23804(255, (unint64_t *)&qword_1EBF0C9C0);
    sub_1C1F2FC38();
    unint64_t v0 = sub_1C2149D30();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C2E20);
    }
  }
}

unint64_t sub_1C1F2FC38()
{
  unint64_t result = qword_1EA2C2E28;
  if (!qword_1EA2C2E28)
  {
    sub_1C1F2FF80(255, &qword_1EA2C2DF8, (void (*)(uint64_t))sub_1C1F2F858, sub_1C1F2FA14, (void (*)(void))sub_1C1F2FA68);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C2E28);
  }
  return result;
}

uint64_t sub_1C1F2FCD4()
{
  return sub_1C1F2E1D8(&qword_1EA2C2E30, sub_1C1F2FA14);
}

void sub_1C1F2FD08(uint64_t a1)
{
}

uint64_t sub_1C1F2FD50()
{
  return sub_1C1F2E1D8(&qword_1EA2C2E48, (void (*)(uint64_t))sub_1C1F2FA9C);
}

void sub_1C1F2FD84(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, void *))
{
  if (!*a2)
  {
    v11[0] = a3(255);
    v11[1] = sub_1C1F12718(255, (unint64_t *)&qword_1EBF0CB10);
    v11[2] = a4();
    void v11[3] = sub_1C1F2F9D0((unint64_t *)&qword_1EBF0C7F0, (unint64_t *)&qword_1EBF0CB10);
    unint64_t v9 = a5(a1, v11);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

uint64_t sub_1C1F2FE68()
{
  return sub_1C1F2E1D8(&qword_1EA2C2E58, sub_1C1F2FD08);
}

uint64_t sub_1C1F2FE9C()
{
  swift_weakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C1F2FED4@<X0>(uint64_t *a1@<X8>)
{
  return sub_1C1F2AEF0(a1);
}

uint64_t sub_1C1F2FEDC(uint64_t *a1)
{
  return sub_1C1F2BCDC(a1);
}

unint64_t sub_1C1F2FEE4()
{
  unint64_t result = qword_1EA2C2E60;
  if (!qword_1EA2C2E60)
  {
    sub_1C1F2FD84(255, &qword_1EA2C2E50, (uint64_t (*)(uint64_t))sub_1C1F2FD08, sub_1C1F2FE68, MEMORY[0x1E4F1AAB0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C2E60);
  }
  return result;
}

void sub_1C1F2FF80(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(uint64_t), void (*a5)(void))
{
  if (!*a2)
  {
    a3(255);
    a4(255);
    a5();
    unint64_t v8 = sub_1C2149D60();
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1C1F30010()
{
  if (!qword_1EA2C2E78)
  {
    sub_1C1F2F7F4(255, &qword_1EA2C2E80, MEMORY[0x1E4F66C38], MEMORY[0x1E4FBB320]);
    sub_1C1F23804(255, (unint64_t *)&qword_1EBF0C9C0);
    unint64_t v0 = sub_1C2149E10();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C2E78);
    }
  }
}

uint64_t sub_1C1F300C0()
{
  return sub_1C1F2E1D8(&qword_1EA2C2E88, (void (*)(uint64_t))sub_1C1F30010);
}

void sub_1C1F300F4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, void))
{
  if (!*a2)
  {
    sub_1C1F2FA34(255);
    uint64_t v7 = v6;
    uint64_t v8 = sub_1C1F23804(255, (unint64_t *)&qword_1EBF0C9C0);
    unint64_t v9 = a3(a1, v7, v8, MEMORY[0x1E4FBC0F0]);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

unint64_t sub_1C1F3017C()
{
  unint64_t result = qword_1EA2C2EA0;
  if (!qword_1EA2C2EA0)
  {
    sub_1C1F300F4(255, &qword_1EA2C2E98, MEMORY[0x1E4F1ACE0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C2EA0);
  }
  return result;
}

unint64_t sub_1C1F301F0()
{
  unint64_t result = qword_1EA2C2EA8;
  if (!qword_1EA2C2EA8)
  {
    sub_1C1F2FF80(255, &qword_1EA2C2E70, (void (*)(uint64_t))sub_1C1F30010, sub_1C1F2FA34, (void (*)(void))sub_1C1F300C0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C2EA8);
  }
  return result;
}

void sub_1C1F3028C()
{
  if (!qword_1EA2C2EB0)
  {
    sub_1C21490F0();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA2C2EB0);
    }
  }
}

uint64_t sub_1C1F302F8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C1F30360(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C1F303C0()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C1F303D0(char a1, void *a2)
{
  return sub_1C1F2A230(a1, a2);
}

void sub_1C1F303D8(uint64_t a1)
{
}

void sub_1C1F3040C()
{
  if (!qword_1EA2C2ED0)
  {
    sub_1C1F306B8(255, &qword_1EA2C2EC8, (uint64_t)&type metadata for NetworkStateObserver.ConnectionStatus, MEMORY[0x1E4F1AC60]);
    sub_1C1F2F96C(&qword_1EA2C2ED8, &qword_1EA2C2EC8, (uint64_t)&type metadata for NetworkStateObserver.ConnectionStatus);
    unint64_t v0 = sub_1C2149D50();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C2ED0);
    }
  }
}

void sub_1C1F304B4()
{
  if (!qword_1EA2C2EE0)
  {
    uint64_t v0 = MEMORY[0x1E4FBB390];
    sub_1C1F306B8(255, &qword_1EBF0C740, MEMORY[0x1E4FBB390], MEMORY[0x1E4F1AC60]);
    sub_1C1F3040C();
    sub_1C1F2F96C((unint64_t *)&qword_1EBF0C730, &qword_1EBF0C740, v0);
    sub_1C1F2E1D8(&qword_1EA2C2EE8, (void (*)(uint64_t))sub_1C1F3040C);
    unint64_t v1 = sub_1C2149CC0();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_1EA2C2EE0);
    }
  }
}

void sub_1C1F305B8()
{
  if (!qword_1EA2C2EF0)
  {
    sub_1C1F304B4();
    sub_1C1F12718(255, &qword_1EBF0C940);
    sub_1C1F2E1D8(&qword_1EA2C2EF8, (void (*)(uint64_t))sub_1C1F304B4);
    sub_1C1F2F9D0((unint64_t *)&qword_1EBF0C938, &qword_1EBF0C940);
    unint64_t v0 = sub_1C2149DF0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C2EF0);
    }
  }
}

void sub_1C1F306B8(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

unint64_t sub_1C1F30704()
{
  unint64_t result = qword_1EA2C2F08;
  if (!qword_1EA2C2F08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C2F08);
  }
  return result;
}

uint64_t sub_1C1F30758(char a1, char a2, unsigned __int8 *a3)
{
  return sub_1C1F29AAC(a1, a2, a3);
}

uint64_t sub_1C1F30760()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C1F30798(unsigned __int8 *a1)
{
  return (*(uint64_t (**)(void, void, unsigned __int8 *))(v1 + 16))(*a1, a1[1], a1 + 2);
}

void sub_1C1F307D0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    uint64_t v10 = a4();
    unint64_t v11 = a5(a1, v9, v10);
    if (!v12) {
      atomic_store(v11, a2);
    }
  }
}

void sub_1C1F30850(uint64_t a1)
{
}

void sub_1C1F30898(uint64_t a1)
{
}

uint64_t sub_1C1F308E0()
{
  return sub_1C1F2E1D8(&qword_1EA2C2F40, sub_1C1F30850);
}

uint64_t sub_1C1F30914()
{
  return sub_1C1F2E1D8(&qword_1EA2C2F50, sub_1C1F30898);
}

uint64_t sub_1C1F3094C@<X0>(uint64_t *a1@<X8>)
{
  return sub_1C1F2C214(*(void *)(v1 + 24), a1);
}

unint64_t sub_1C1F30954()
{
  unint64_t result = qword_1EA2C2F58;
  if (!qword_1EA2C2F58)
  {
    sub_1C1F307D0(255, &qword_1EA2C2F28, (uint64_t (*)(uint64_t))sub_1C1F2FA14, sub_1C1F2FCD4, MEMORY[0x1E4F1AC50]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C2F58);
  }
  return result;
}

unint64_t sub_1C1F309F0()
{
  unint64_t result = qword_1EA2C2F60;
  if (!qword_1EA2C2F60)
  {
    sub_1C1F2FD84(255, &qword_1EA2C2F48, (uint64_t (*)(uint64_t))sub_1C1F30898, sub_1C1F30914, MEMORY[0x1E4F1AAB0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C2F60);
  }
  return result;
}

void sub_1C1F30A8C()
{
  if (!qword_1EA2C2F70)
  {
    sub_1C1F30D40(255, &qword_1EA2C2F78, &qword_1EA2C2F80);
    sub_1C1F23804(255, (unint64_t *)&qword_1EBF0C9C0);
    unint64_t v0 = sub_1C2149F00();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C2F70);
    }
  }
}

uint64_t sub_1C1F30B24()
{
  return sub_1C1F2E1D8(&qword_1EA2C2F88, (void (*)(uint64_t))sub_1C1F30A8C);
}

uint64_t objectdestroy_37Tm()
{
  swift_release();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C1F30B9C(uint64_t (*a1)(long long *), uint64_t a2)
{
  return sub_1C1F2C41C(a1, a2, *(char **)(v2 + 16), *(void *)(v2 + 24));
}

unint64_t sub_1C1F30BA4()
{
  unint64_t result = qword_1EA2C2F90;
  if (!qword_1EA2C2F90)
  {
    sub_1C1F2FF80(255, &qword_1EA2C2F68, (void (*)(uint64_t))sub_1C1F30A8C, sub_1C1F2FA34, (void (*)(void))sub_1C1F30B24);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C2F90);
  }
  return result;
}

void sub_1C1F30C40()
{
  if (!qword_1EA2C2F98)
  {
    sub_1C1F12718(255, (unint64_t *)&qword_1EA2C6A20);
    sub_1C21491B0();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA2C2F98);
    }
  }
}

void sub_1C1F30CC4(uint64_t a1)
{
}

uint64_t sub_1C1F30CF8(uint64_t a1, char a2)
{
  uint64_t v3 = *(uint64_t (**)(uint64_t *))(v2 + 16);
  uint64_t v5 = a1;
  char v6 = a2 & 1;
  return v3(&v5);
}

void sub_1C1F30D38(int a1, void *a2, void *a3)
{
  sub_1C1F2D100(a1, a2, a3, *(void (**)(id, uint64_t))(v3 + 16));
}

void sub_1C1F30D40(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  if (!*a2)
  {
    sub_1C1F12718(255, a3);
    unint64_t v4 = sub_1C214A830();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1C1F30D98(uint64_t a1)
{
}

void sub_1C1F30DCC()
{
  if (!qword_1EA2C2FB8)
  {
    uint64_t v0 = MEMORY[0x1E4FBB390];
    sub_1C1F306B8(255, &qword_1EBF0C740, MEMORY[0x1E4FBB390], MEMORY[0x1E4F1AC60]);
    sub_1C1F2F96C((unint64_t *)&qword_1EBF0C730, &qword_1EBF0C740, v0);
    unint64_t v1 = sub_1C2149D90();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_1EA2C2FB8);
    }
  }
}

void sub_1C1F30E74(uint64_t a1)
{
}

uint64_t sub_1C1F30EBC()
{
  return sub_1C1F2E1D8(&qword_1EA2C2FC8, (void (*)(uint64_t))sub_1C1F30DCC);
}

uint64_t sub_1C1F30EF0()
{
  return sub_1C1F2E1D8(&qword_1EA2C2FD8, sub_1C1F30E74);
}

uint64_t sub_1C1F30F24()
{
  return sub_1C1F29260();
}

unint64_t sub_1C1F30F2C()
{
  unint64_t result = qword_1EA2C2FE0;
  if (!qword_1EA2C2FE0)
  {
    sub_1C1F2FD84(255, &qword_1EA2C2FD0, (uint64_t (*)(uint64_t))sub_1C1F30E74, sub_1C1F30EF0, MEMORY[0x1E4F1A998]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C2FE0);
  }
  return result;
}

unint64_t sub_1C1F30FC8()
{
  unint64_t result = qword_1EA2C2FF0;
  if (!qword_1EA2C2FF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C2FF0);
  }
  return result;
}

uint64_t sub_1C1F3101C()
{
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t sub_1C1F31064()
{
  return sub_1C1F28884();
}

unint64_t sub_1C1F3106C()
{
  unint64_t result = qword_1EA2C3008;
  if (!qword_1EA2C3008)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C3008);
  }
  return result;
}

uint64_t sub_1C1F310C0()
{
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 32)) {
    swift_release();
  }
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 64, 7);
}

uint64_t sub_1C1F31110()
{
  return sub_1C1F28024();
}

uint64_t sub_1C1F31118(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

uint64_t sub_1C1F31128(uint64_t a1, void *a2)
{
  return sub_1C1F280A8(a1, a2);
}

unint64_t sub_1C1F31130()
{
  unint64_t result = qword_1EA2C3020;
  if (!qword_1EA2C3020)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C3020);
  }
  return result;
}

uint64_t sub_1C1F31184()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 56, 7);
}

unint64_t sub_1C1F311CC()
{
  unint64_t result = qword_1EA2C3028;
  if (!qword_1EA2C3028)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C3028);
  }
  return result;
}

uint64_t sub_1C1F31220()
{
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 32)) {
    swift_release();
  }
  if (*(void *)(v0 + 48)) {
    swift_release();
  }
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 80, 7);
}

uint64_t sub_1C1F31280(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

unint64_t sub_1C1F31298()
{
  unint64_t result = qword_1EBF0C770;
  if (!qword_1EBF0C770)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBF0C770);
  }
  return result;
}

uint64_t sub_1C1F312EC()
{
  return sub_1C1F27734();
}

unint64_t sub_1C1F31304()
{
  return 0xD000000000000019;
}

uint64_t sub_1C1F313C4()
{
  return sub_1C214BB80();
}

uint64_t sub_1C1F31484()
{
  sub_1C2147B20();
  sub_1C1F335BC((unint64_t *)&unk_1EA2C30A0, MEMORY[0x1E4F27990]);
  sub_1C214A560();
  sub_1C20B7378();
  sub_1C214A690();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1C1F31538()
{
  return sub_1C214BB80();
}

uint64_t sub_1C1F315F8(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 28));
  swift_bridgeObjectRetain();
  return v2;
}

id sub_1C1F31634()
{
  uint64_t v1 = OBJC_IVAR____TtC19HealthMedicationsUI34MedicationLogDetailsTimePickerCell____lazy_storage___pickerView;
  uint64_t v2 = *(void **)(v0
                + OBJC_IVAR____TtC19HealthMedicationsUI34MedicationLogDetailsTimePickerCell____lazy_storage___pickerView);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC19HealthMedicationsUI34MedicationLogDetailsTimePickerCell____lazy_storage___pickerView);
  }
  else
  {
    type metadata accessor for MedicationLogDetailsTimePickerView();
    id v4 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

uint64_t sub_1C1F316BC()
{
  uint64_t v1 = v0;
  uint64_t v36 = (void *)sub_1C21497F0();
  uint64_t v2 = *(v36 - 1);
  MEMORY[0x1F4188790](v36);
  id v4 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1C2147AC0();
  uint64_t v35 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1F32C6C(0, (unint64_t *)&unk_1EA2C3078, (void (*)(uint64_t))type metadata accessor for MedicationLogDetailsTimePickerItem);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v34 - v9;
  uint64_t v11 = type metadata accessor for MedicationLogDetailsTimePickerItem();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = (uint64_t)v1 + OBJC_IVAR____TtC19HealthMedicationsUI34MedicationLogDetailsTimePickerCell_item;
  swift_beginAccess();
  sub_1C1F2116C(v15, (uint64_t)v38);
  if (v38[3])
  {
    sub_1C1F1CB5C();
    int v16 = swift_dynamicCast();
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v10, v16 ^ 1u, 1, v11);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) != 1)
    {
      sub_1C1F32D1C((uint64_t)v10, (uint64_t)v14);
      uint64_t v17 = (char *)sub_1C1F31634();
      uint64_t v18 = OBJC_IVAR____TtC19HealthMedicationsUI34MedicationLogDetailsTimePickerView_viewModel;
      *(void *)&v17[OBJC_IVAR____TtC19HealthMedicationsUI34MedicationLogDetailsTimePickerView_viewModel] = *(void *)&v14[*(int *)(v11 + 20)];
      swift_retain_n();
      swift_release();
      uint64_t v19 = *(void *)&v17[v18];
      if (v19)
      {
        swift_retain();
        uint64_t v36 = sub_1C1F323EC();
        uint64_t v20 = v19 + OBJC_IVAR____TtC19HealthMedicationsUI27MedicationsDoseLogViewModel_logDate;
        swift_beginAccess();
        uint64_t v21 = v35;
        (*(void (**)(char *, uint64_t, uint64_t))(v35 + 16))(v7, v20, v5);
        uint64_t v22 = (void *)sub_1C2147A00();
        (*(void (**)(char *, uint64_t))(v21 + 8))(v7, v5);
        id v23 = v36;
        objc_msgSend(v36, sel_setDate_, v22);

        swift_release();
      }
      else
      {
      }
      swift_release();
      uint64_t v32 = (char *)sub_1C1F31634();
      uint64_t v33 = &v14[*(int *)(v11 + 24)];
      MEMORY[0x1C8754850](v33);
      *(void *)&v32[OBJC_IVAR____TtC19HealthMedicationsUI34MedicationLogDetailsTimePickerView_detailsDelegate + 8] = *((void *)v33 + 1);
      swift_unknownObjectWeakAssign();

      swift_unknownObjectRelease();
      return sub_1C1F32D80((uint64_t)v14);
    }
  }
  else
  {
    sub_1C1F32CC0((uint64_t)v38, (unint64_t *)&qword_1EBF0C300, (void (*)(uint64_t))sub_1C1F1CB5C);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, 1, 1, v11);
  }
  sub_1C1F32CC0((uint64_t)v10, (unint64_t *)&unk_1EA2C3078, (void (*)(uint64_t))type metadata accessor for MedicationLogDetailsTimePickerItem);
  sub_1C21497A0();
  id v24 = v1;
  id v25 = sub_1C21497E0();
  os_log_type_t v26 = sub_1C214ABD0();
  if (os_log_type_enabled(v25, v26))
  {
    uint64_t v27 = (uint8_t *)swift_slowAlloc();
    uint64_t v28 = swift_slowAlloc();
    uint64_t v37 = v28;
    *(_DWORD *)uint64_t v27 = 136315138;
    sub_1C1F2116C(v15, (uint64_t)v38);
    sub_1C1F32C6C(0, (unint64_t *)&qword_1EBF0C300, (void (*)(uint64_t))sub_1C1F1CB5C);
    uint64_t v29 = sub_1C214A630();
    v38[0] = sub_1C1F6FD54(v29, v30, &v37);
    sub_1C214B530();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C1F0B000, v25, v26, "Incorrect view model for MedicationLogDetailsTimePickerItem: %s", v27, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C8754730](v28, -1, -1);
    MEMORY[0x1C8754730](v27, -1, -1);
  }
  else
  {
  }
  return (*(uint64_t (**)(char *, void *))(v2 + 8))(v4, v36);
}

id sub_1C1F31C98(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = sub_1C2149BE0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v49[-1] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI34MedicationLogDetailsTimePickerCell____lazy_storage___pickerView] = 0;
  uint64_t v13 = &v4[OBJC_IVAR____TtC19HealthMedicationsUI34MedicationLogDetailsTimePickerCell_item];
  uint64_t v14 = (objc_class *)type metadata accessor for MedicationLogDetailsTimePickerCell();
  *(_OWORD *)uint64_t v13 = 0u;
  *((_OWORD *)v13 + 1) = 0u;
  *((void *)v13 + 4) = 0;
  v50.receiver = v4;
  v50.super_class = v14;
  id v15 = objc_msgSendSuper2(&v50, sel_initWithFrame_, a1, a2, a3, a4);
  v49[3] = v9;
  v49[4] = MEMORY[0x1E4FB0F88];
  __swift_allocate_boxed_opaque_existential_1(v49);
  id v16 = v15;
  sub_1C2149B70();
  MEMORY[0x1C8752FD0](v49);
  id v17 = objc_msgSend(v16, sel_contentView);
  id v18 = sub_1C1F31634();
  objc_msgSend(v17, sel_addSubview_, v18);

  id v19 = objc_msgSend(v16, sel_contentView);
  objc_msgSend(v19, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);

  id v20 = objc_msgSend(v16, sel_contentView);
  id v21 = objc_msgSend(v20, sel_topAnchor);

  id v22 = objc_msgSend(v16, sel_topAnchor);
  id v23 = objc_msgSend(v21, sel_constraintEqualToAnchor_, v22);

  objc_msgSend(v23, sel_setActive_, 1);
  id v24 = objc_msgSend(v16, sel_contentView);
  id v25 = objc_msgSend(v24, sel_leadingAnchor);

  id v26 = objc_msgSend(v16, sel_leadingAnchor);
  id v27 = objc_msgSend(v25, sel_constraintEqualToAnchor_, v26);

  objc_msgSend(v27, sel_setActive_, 1);
  id v28 = objc_msgSend(v16, sel_contentView);
  id v29 = objc_msgSend(v28, sel_trailingAnchor);

  id v30 = objc_msgSend(v16, sel_trailingAnchor);
  id v31 = objc_msgSend(v29, sel_constraintEqualToAnchor_, v30);

  objc_msgSend(v31, sel_setActive_, 1);
  id v32 = objc_msgSend(v16, sel_contentView);
  id v33 = objc_msgSend(v32, sel_bottomAnchor);

  id v34 = objc_msgSend(v16, sel_bottomAnchor);
  id v35 = objc_msgSend(v33, sel_constraintEqualToAnchor_, v34);

  objc_msgSend(v35, sel_setActive_, 1);
  id v36 = sub_1C1F31634();
  objc_msgSend(v36, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);

  sub_1C2149B70();
  sub_1C2149B20();
  double v38 = v37;
  double v40 = v39;
  double v42 = v41;
  double v44 = v43;
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  id v45 = sub_1C1F31634();
  id v46 = objc_msgSend(v16, sel_contentView);
  objc_msgSend(v45, sel_hk_alignConstraintsWithView_insets_, v46, v38, v40, v42, v44);

  return v16;
}

id sub_1C1F321E0()
{
  return sub_1C1F32B68(type metadata accessor for MedicationLogDetailsTimePickerCell);
}

uint64_t type metadata accessor for MedicationLogDetailsTimePickerCell()
{
  return self;
}

uint64_t sub_1C1F32278@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI34MedicationLogDetailsTimePickerCell_item;
  swift_beginAccess();
  return sub_1C1F2116C(v3, a1);
}

uint64_t sub_1C1F322CC(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI34MedicationLogDetailsTimePickerCell_item;
  swift_beginAccess();
  sub_1C1F32DDC(a1, v3);
  swift_endAccess();
  sub_1C1F316BC();
  return sub_1C1F32CC0(a1, (unint64_t *)&qword_1EBF0C300, (void (*)(uint64_t))sub_1C1F1CB5C);
}

uint64_t (*sub_1C1F32358(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1C1F323B8;
}

uint64_t sub_1C1F323B8(uint64_t a1, char a2)
{
  uint64_t result = swift_endAccess();
  if ((a2 & 1) == 0) {
    return sub_1C1F316BC();
  }
  return result;
}

id sub_1C1F323EC()
{
  uint64_t v1 = OBJC_IVAR____TtC19HealthMedicationsUI34MedicationLogDetailsTimePickerView____lazy_storage___logTimePicker;
  uint64_t v2 = *(void **)(v0
                + OBJC_IVAR____TtC19HealthMedicationsUI34MedicationLogDetailsTimePickerView____lazy_storage___logTimePicker);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC19HealthMedicationsUI34MedicationLogDetailsTimePickerView____lazy_storage___logTimePicker);
  }
  else
  {
    id v4 = sub_1C1F32450(v0);
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_1C1F32450(uint64_t a1)
{
  uint64_t v2 = sub_1C2147AC0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB16B0]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v6, sel_setPreferredDatePickerStyle_, 1);
  objc_msgSend(v6, sel_setDatePickerMode_, 0);
  sub_1C2147AB0();
  uint64_t v7 = (void *)sub_1C2147A00();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  objc_msgSend(v6, sel_setMaximumDate_, v7);

  objc_msgSend(v6, sel_addTarget_action_forControlEvents_, a1, sel_logTimeChanged_, 4096);
  return v6;
}

void sub_1C1F326E8()
{
  uint64_t v1 = v0;
  sub_1C1F0ED28();
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1C214E170;
  *(void *)(v2 + 32) = sub_1C1F323EC();
  sub_1C214A7A0();
  id v3 = objc_allocWithZone(MEMORY[0x1E4FB1C60]);
  sub_1C1F32E5C();
  uint64_t v4 = (void *)sub_1C214A770();
  swift_bridgeObjectRelease();
  id v5 = objc_msgSend(v3, sel_initWithArrangedSubviews_, v4);

  objc_msgSend(v5, sel_setAxis_, 0);
  objc_msgSend(v5, sel_setAlignment_, 3);
  objc_msgSend(v5, sel_setDistribution_, 0);
  objc_msgSend(v5, sel_setSpacing_, 0.0);
  objc_msgSend(v1, sel_addSubview_, v5);
  objc_msgSend(v5, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  id v6 = objc_msgSend(v5, sel_topAnchor);
  id v7 = objc_msgSend(v1, sel_topAnchor);
  id v8 = objc_msgSend(v6, sel_constraintEqualToAnchor_, v7);

  objc_msgSend(v8, sel_setActive_, 1);
  id v9 = objc_msgSend(v5, sel_leadingAnchor);
  id v10 = objc_msgSend(v1, sel_leadingAnchor);
  id v11 = objc_msgSend(v9, sel_constraintEqualToAnchor_, v10);

  objc_msgSend(v11, sel_setActive_, 1);
  id v12 = objc_msgSend(v5, sel_trailingAnchor);
  id v13 = objc_msgSend(v1, sel_trailingAnchor);
  id v14 = objc_msgSend(v12, sel_constraintEqualToAnchor_, v13);

  objc_msgSend(v14, sel_setActive_, 1);
  id v15 = objc_msgSend(v5, sel_bottomAnchor);
  id v16 = objc_msgSend(v1, sel_bottomAnchor);
  id v17 = objc_msgSend(v15, sel_constraintEqualToAnchor_, v16);

  objc_msgSend(v17, sel_setActive_, 1);
}

id sub_1C1F32B50()
{
  return sub_1C1F32B68(type metadata accessor for MedicationLogDetailsTimePickerView);
}

id sub_1C1F32B68(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t type metadata accessor for MedicationLogDetailsTimePickerView()
{
  return self;
}

uint64_t type metadata accessor for MedicationLogDetailsTimePickerItem()
{
  uint64_t result = qword_1EA2C3088;
  if (!qword_1EA2C3088) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1C1F32C6C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C214B4F0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1C1F32CC0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1C1F32C6C(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1C1F32D1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MedicationLogDetailsTimePickerItem();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C1F32D80(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MedicationLogDetailsTimePickerItem();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C1F32DDC(uint64_t a1, uint64_t a2)
{
  sub_1C1F32C6C(0, (unint64_t *)&qword_1EBF0C300, (void (*)(uint64_t))sub_1C1F1CB5C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

unint64_t sub_1C1F32E5C()
{
  unint64_t result = qword_1EBF0C8F0;
  if (!qword_1EBF0C8F0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBF0C8F0);
  }
  return result;
}

uint64_t *sub_1C1F32E9C(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1C2147B20();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[6];
    *(uint64_t *)((char *)a1 + a3[5]) = *(uint64_t *)((char *)a2 + a3[5]);
    id v9 = (char *)a1 + v8;
    id v10 = (char *)a2 + v8;
    swift_retain();
    swift_unknownObjectWeakCopyInit();
    *((void *)v9 + 1) = *((void *)v10 + 1);
    uint64_t v11 = a3[7];
    id v12 = (uint64_t *)((char *)a1 + v11);
    id v13 = (uint64_t *)((char *)a2 + v11);
    uint64_t v14 = v13[1];
    *id v12 = *v13;
    v12[1] = v14;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1C1F32FA8(uint64_t a1)
{
  uint64_t v2 = sub_1C2147B20();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  swift_release();
  swift_unknownObjectWeakDestroy();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1C1F33038(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1C2147B20();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  swift_retain();
  swift_unknownObjectWeakCopyInit();
  *(void *)(v8 + 8) = *(void *)(v9 + 8);
  uint64_t v10 = a3[7];
  uint64_t v11 = (void *)(a1 + v10);
  id v12 = (void *)(a2 + v10);
  uint64_t v13 = v12[1];
  *uint64_t v11 = *v12;
  v11[1] = v13;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1C1F330F4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1C2147B20();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  swift_retain();
  swift_release();
  uint64_t v7 = a2 + a3[6];
  *(void *)(swift_unknownObjectWeakCopyAssign() + 8) = *(void *)(v7 + 8);
  uint64_t v8 = a3[7];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  *uint64_t v9 = *v10;
  v9[1] = v10[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C1F331C8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1C2147B20();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(void *)(swift_unknownObjectWeakTakeInit() + 8) = *(void *)(a2 + v7 + 8);
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_1C1F33268(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1C2147B20();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  swift_release();
  uint64_t v7 = a2 + a3[6];
  *(void *)(swift_unknownObjectWeakTakeAssign() + 8) = *(void *)(v7 + 8);
  uint64_t v8 = a3[7];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (uint64_t *)(a2 + v8);
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  *uint64_t v9 = v12;
  v9[1] = v11;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C1F33324(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C1F33338);
}

uint64_t sub_1C1F33338(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C2147B20();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_1C1F333F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C1F3340C);
}

uint64_t sub_1C1F3340C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1C2147B20();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_1C1F334C8()
{
  uint64_t result = sub_1C2147B20();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1C1F33574()
{
  return sub_1C1F335BC(&qword_1EA2C3098, (void (*)(uint64_t))type metadata accessor for MedicationLogDetailsTimePickerItem);
}

uint64_t sub_1C1F335BC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C1F33604()
{
  off_1EA2C30B0 = &unk_1F1D73820;
}

uint64_t static SpecificationStep.manualEntrySteps.getter()
{
  if (qword_1EA2C2648 != -1) {
    swift_once();
  }

  return swift_bridgeObjectRetain();
}

id SpecificationStep.headerImage.getter()
{
  unsigned int v1 = *v0;
  id v2 = 0;
  switch(v1 >> 5)
  {
    case 1u:
      if (qword_1EBF0CA38 != -1) {
        swift_once();
      }
      id v6 = (id)qword_1EBF0CA30;
      uint64_t v7 = (void *)sub_1C214A5B0();
      id v5 = objc_msgSend(self, sel_imageNamed_inBundle_, v7, v6);

      if (v5) {
        goto LABEL_12;
      }
      __break(1u);
      goto LABEL_23;
    case 2u:
      if (v1 == 64) {
        goto LABEL_24;
      }
      sub_1C1F346B8();
      id v5 = (id)sub_1C214B1F0();
      uint64_t v8 = (void *)sub_1C214A5B0();
      id v9 = objc_msgSend(self, sel_imageNamed_inBundle_, v8, v5);
      goto LABEL_17;
    case 3u:
      if (v1 != 96) {
        return 0;
      }
      if (qword_1EBF0CA38 != -1) {
        swift_once();
      }
      id v3 = (id)qword_1EBF0CA30;
      uint64_t v4 = (void *)sub_1C214A5B0();
      id v5 = objc_msgSend(self, sel_imageNamed_inBundle_, v4, v3);

      if (!v5)
      {
LABEL_23:
        __break(1u);
LABEL_24:
        sub_1C214B910();
        __break(1u);
        JUMPOUT(0x1C1F33A30);
      }
LABEL_12:
      id v2 = objc_msgSend(v5, sel_imageFlippedForRightToLeftLayoutDirection);
LABEL_18:

      return v2;
    case 4u:
      return v2;
    case 5u:
      if (qword_1EBF0CA38 == -1) {
        goto LABEL_16;
      }
      goto LABEL_21;
    default:
      if (qword_1EBF0CA38 == -1) {
        goto LABEL_16;
      }
LABEL_21:
      swift_once();
LABEL_16:
      id v5 = (id)qword_1EBF0CA30;
      uint64_t v8 = (void *)sub_1C214A5B0();
      id v9 = objc_msgSend(self, sel_imageNamed_inBundle_, v8, v5);
LABEL_17:
      id v2 = v9;

      goto LABEL_18;
  }
}

uint64_t SpecificationStep.title.getter()
{
  unsigned int v1 = *v0;
  switch(v1 >> 5)
  {
    case 1u:
      if (qword_1EBF0CA00 != -1) {
        swift_once();
      }
      id v2 = (id)qword_1EBF0CA18;
      swift_bridgeObjectRetain();
      uint64_t v3 = sub_1C2147730();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      return v3;
    case 2u:
      if (v1 == 64)
      {
        sub_1C214B910();
        __break(1u);
        JUMPOUT(0x1C1F33EBCLL);
      }
      if (qword_1EBF0CA00 != -1) {
        goto LABEL_22;
      }
      goto LABEL_20;
    case 3u:
      if (v1 == 96)
      {
        if (qword_1EBF0CA00 != -1) {
          goto LABEL_22;
        }
      }
      else if (qword_1EBF0CA00 != -1)
      {
        goto LABEL_22;
      }
      goto LABEL_20;
    case 4u:
      if (v1 != 128) {
        return 0;
      }
      if (qword_1EBF0CA00 != -1) {
LABEL_22:
      }
        swift_once();
LABEL_20:
      id v4 = (id)qword_1EBF0CA18;
      swift_bridgeObjectRetain();
      uint64_t v3 = sub_1C2147730();
      swift_bridgeObjectRelease();

      return v3;
    case 5u:
      if (qword_1EBF0CA00 == -1) {
        goto LABEL_20;
      }
      goto LABEL_22;
    default:
      if (qword_1EBF0CA00 == -1) {
        goto LABEL_20;
      }
      goto LABEL_22;
  }
}

uint64_t SpecificationStep.isSkipable.getter()
{
  unsigned int v1 = *v0;
  uint64_t result = 0;
  switch(v1 >> 5)
  {
    case 1u:
      uint64_t result = v1 & 1;
      break;
    case 3u:
      uint64_t result = v1 != 96;
      break;
    case 4u:
      uint64_t result = v1 != 128;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t SpecificationStep.analyticsStep.getter()
{
  unsigned int v1 = *v0;
  uint64_t result = 10;
  switch(v1 >> 5)
  {
    case 1u:
      uint64_t result = 12;
      break;
    case 2u:
      if (v1 == 64) {
        uint64_t result = 0;
      }
      else {
        uint64_t result = 13;
      }
      break;
    case 3u:
      if (v1 == 96) {
        uint64_t result = 6;
      }
      else {
        uint64_t result = 7;
      }
      break;
    case 4u:
      if (v1 == 128) {
        uint64_t result = 8;
      }
      else {
        uint64_t result = 9;
      }
      break;
    case 5u:
      return result;
    default:
      uint64_t result = 5;
      break;
  }
  return result;
}

BOOL static SpecificationStep.< infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned int v2 = *a1;
  unsigned int v3 = *a2;
  unint64_t v4 = 2;
  switch(v2 >> 5)
  {
    case 1u:
      unint64_t v4 = 3;
      break;
    case 2u:
      unint64_t v4 = v2 != 64;
      break;
    case 3u:
      unint64_t v4 = 4;
      if (v2 != 96) {
        unint64_t v4 = 5;
      }
      break;
    case 4u:
      unint64_t v4 = 6;
      if (v2 != 128) {
        unint64_t v4 = 7;
      }
      break;
    case 5u:
      unint64_t v4 = 8;
      break;
    default:
      break;
  }
  unint64_t v5 = 2;
  switch(v3 >> 5)
  {
    case 1u:
      unint64_t v5 = 3;
      break;
    case 2u:
      unint64_t v5 = v3 != 64;
      break;
    case 3u:
      if (v3 == 96) {
        unint64_t v5 = 4;
      }
      else {
        unint64_t v5 = 5;
      }
      break;
    case 4u:
      if (v3 == 128) {
        unint64_t v5 = 6;
      }
      else {
        unint64_t v5 = 7;
      }
      break;
    case 5u:
      unint64_t v5 = 8;
      break;
    default:
      return v4 < v5;
  }
  return v4 < v5;
}

BOOL sub_1C1F340E4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned int v2 = *a1;
  unsigned int v3 = *a2;
  unint64_t v4 = 2;
  switch(v2 >> 5)
  {
    case 1u:
      unint64_t v4 = 3;
      break;
    case 2u:
      unint64_t v4 = v2 != 64;
      break;
    case 3u:
      unint64_t v4 = 4;
      if (v2 != 96) {
        unint64_t v4 = 5;
      }
      break;
    case 4u:
      unint64_t v4 = 6;
      if (v2 != 128) {
        unint64_t v4 = 7;
      }
      break;
    case 5u:
      unint64_t v4 = 8;
      break;
    default:
      break;
  }
  unint64_t v5 = 2;
  switch(v3 >> 5)
  {
    case 1u:
      unint64_t v5 = 3;
      break;
    case 2u:
      unint64_t v5 = v3 != 64;
      break;
    case 3u:
      if (v3 == 96) {
        unint64_t v5 = 4;
      }
      else {
        unint64_t v5 = 5;
      }
      break;
    case 4u:
      if (v3 == 128) {
        unint64_t v5 = 6;
      }
      else {
        unint64_t v5 = 7;
      }
      break;
    case 5u:
      unint64_t v5 = 8;
      break;
    default:
      return v4 < v5;
  }
  return v4 < v5;
}

BOOL sub_1C1F341E8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned int v2 = *a1;
  unsigned int v3 = *a2;
  unint64_t v4 = 2;
  switch(v3 >> 5)
  {
    case 1u:
      unint64_t v4 = 3;
      break;
    case 2u:
      unint64_t v4 = v3 != 64;
      break;
    case 3u:
      unint64_t v4 = 4;
      if (v3 != 96) {
        unint64_t v4 = 5;
      }
      break;
    case 4u:
      unint64_t v4 = 6;
      if (v3 != 128) {
        unint64_t v4 = 7;
      }
      break;
    case 5u:
      unint64_t v4 = 8;
      break;
    default:
      break;
  }
  unint64_t v5 = 2;
  switch(v2 >> 5)
  {
    case 1u:
      unint64_t v5 = 3;
      break;
    case 2u:
      unint64_t v5 = v2 != 64;
      break;
    case 3u:
      if (v2 == 96) {
        unint64_t v5 = 4;
      }
      else {
        unint64_t v5 = 5;
      }
      break;
    case 4u:
      if (v2 == 128) {
        unint64_t v5 = 6;
      }
      else {
        unint64_t v5 = 7;
      }
      break;
    case 5u:
      unint64_t v5 = 8;
      break;
    default:
      return v4 >= v5;
  }
  return v4 >= v5;
}

BOOL sub_1C1F342EC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned int v2 = *a1;
  unsigned int v3 = *a2;
  unint64_t v4 = 2;
  switch(v2 >> 5)
  {
    case 1u:
      unint64_t v4 = 3;
      break;
    case 2u:
      unint64_t v4 = v2 != 64;
      break;
    case 3u:
      unint64_t v4 = 4;
      if (v2 != 96) {
        unint64_t v4 = 5;
      }
      break;
    case 4u:
      unint64_t v4 = 6;
      if (v2 != 128) {
        unint64_t v4 = 7;
      }
      break;
    case 5u:
      unint64_t v4 = 8;
      break;
    default:
      break;
  }
  unint64_t v5 = 2;
  switch(v3 >> 5)
  {
    case 1u:
      unint64_t v5 = 3;
      break;
    case 2u:
      unint64_t v5 = v3 != 64;
      break;
    case 3u:
      if (v3 == 96) {
        unint64_t v5 = 4;
      }
      else {
        unint64_t v5 = 5;
      }
      break;
    case 4u:
      if (v3 == 128) {
        unint64_t v5 = 6;
      }
      else {
        unint64_t v5 = 7;
      }
      break;
    case 5u:
      unint64_t v5 = 8;
      break;
    default:
      return v4 >= v5;
  }
  return v4 >= v5;
}

BOOL sub_1C1F343F0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned int v2 = *a1;
  unsigned int v3 = *a2;
  unint64_t v4 = 2;
  switch(v3 >> 5)
  {
    case 1u:
      unint64_t v4 = 3;
      break;
    case 2u:
      unint64_t v4 = v3 != 64;
      break;
    case 3u:
      unint64_t v4 = 4;
      if (v3 != 96) {
        unint64_t v4 = 5;
      }
      break;
    case 4u:
      unint64_t v4 = 6;
      if (v3 != 128) {
        unint64_t v4 = 7;
      }
      break;
    case 5u:
      unint64_t v4 = 8;
      break;
    default:
      break;
  }
  unint64_t v5 = 2;
  switch(v2 >> 5)
  {
    case 1u:
      unint64_t v5 = 3;
      break;
    case 2u:
      unint64_t v5 = v2 != 64;
      break;
    case 3u:
      if (v2 == 96) {
        unint64_t v5 = 4;
      }
      else {
        unint64_t v5 = 5;
      }
      break;
    case 4u:
      if (v2 == 128) {
        unint64_t v5 = 6;
      }
      else {
        unint64_t v5 = 7;
      }
      break;
    case 5u:
      unint64_t v5 = 8;
      break;
    default:
      return v4 < v5;
  }
  return v4 < v5;
}

uint64_t _s19HealthMedicationsUI17SpecificationStepO2eeoiySbAC_ACtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned int v2 = *a1;
  unsigned int v3 = *a2;
  switch(v2 >> 5)
  {
    case 1u:
      if ((v3 & 0xE0) != 0x20) {
        return 0;
      }
      return (((v2 & 1) == 0) ^ v3) & 1;
    case 2u:
      if (v2 == 64) {
        return v3 == 64;
      }
      return v3 == 65;
    case 3u:
      if (v2 == 96)
      {
        if (v3 == 96) {
          return 1;
        }
      }
      else if (v3 == 97)
      {
        return 1;
      }
      return 0;
    case 4u:
      if (v2 == 128) {
        return v3 == 128;
      }
      return v3 == 129;
    case 5u:
      return v3 == 160;
    default:
      if (v3 >= 0x20) {
        return 0;
      }
      return (((v2 & 1) == 0) ^ v3) & 1;
  }
}

char *_s19HealthMedicationsUI17SpecificationStepO10finalSteps16shouldDisplayDDI17skipVisualizationSayACGSb_SbtFZ_0(char a1, char a2)
{
  sub_1C1F34960();
  uint64_t v4 = swift_allocObject();
  unint64_t v5 = (char *)v4;
  *(_OWORD *)(v4 + 16) = xmmword_1C2150000;
  *(_WORD *)(v4 + 32) = 24928;
  *(unsigned char *)(v4 + 34) = 0x80;
  if (a2)
  {
    uint64_t v6 = 2;
    *(void *)(v4 + 16) = 2;
    uint64_t v7 = 3;
  }
  else
  {
    uint64_t v7 = 4;
    unint64_t v5 = sub_1C1F3AC10((char *)1, 4, 1, (char *)v4);
    uint64_t v6 = 3;
  }
  *((void *)v5 + 2) = v7;
  v5[v6 + 32] = -127;
  if (a1)
  {
    unint64_t v8 = *((void *)v5 + 3);
    uint64_t v9 = v6 + 2;
    if (v6 + 2 > v8 >> 1) {
      unint64_t v5 = sub_1C1F3AC10((char *)(v8 > 1), v6 + 2, 1, v5);
    }
    *((void *)v5 + 2) = v9;
    v5[v7 + 32] = -96;
  }
  return v5;
}

unint64_t sub_1C1F346B8()
{
  unint64_t result = qword_1EA2C30B8;
  if (!qword_1EA2C30B8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA2C30B8);
  }
  return result;
}

unint64_t sub_1C1F346FC()
{
  unint64_t result = qword_1EA2C30C0;
  if (!qword_1EA2C30C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C30C0);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for SpecificationStep(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0x7B) {
    goto LABEL_17;
  }
  if (a2 + 133 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 133) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 133;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 133;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 133;
    }
  }
LABEL_17:
  unsigned int v6 = ((*a1 >> 5) & 0xFFFFFF87 | (8 * ((*a1 >> 1) & 0xF))) ^ 0x7F;
  if (v6 >= 0x7A) {
    unsigned int v6 = -1;
  }
  return v6 + 1;
}

unsigned char *storeEnumTagSinglePayload for SpecificationStep(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 133 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 133) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0x7B) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0x7A)
  {
    unsigned int v6 = ((a2 - 123) >> 8) + 1;
    *unint64_t result = a2 - 123;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C1F348C8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = 2 * (((-a2 >> 3) & 0xF) - 16 * a2);
        break;
    }
  }
  return result;
}

uint64_t sub_1C1F348F0(unsigned __int8 *a1)
{
  unsigned int v1 = *a1;
  if (v1 <= 0x3F) {
    return v1 >> 5;
  }
  else {
    return (v1 | 0xFFFFFFFE) + 2 * (v1 >> 5);
  }
}

unsigned char *sub_1C1F3490C(unsigned char *result)
{
  *result &= 0x1Fu;
  return result;
}

unsigned char *sub_1C1F3491C(unsigned char *result, unsigned int a2)
{
  if (a2 < 2) {
    *unint64_t result = *result & 1 | (32 * a2);
  }
  else {
    *unint64_t result = (a2 & 1 | (32 * (a2 >> 1))) + 32;
  }
  return result;
}

ValueMetadata *type metadata accessor for SpecificationStep()
{
  return &type metadata for SpecificationStep;
}

void sub_1C1F34960()
{
  if (!qword_1EA2C30C8)
  {
    unint64_t v0 = sub_1C214BA50();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C30C8);
    }
  }
}

id sub_1C1F349B8()
{
  uint64_t v1 = *(void **)(v0 + 24);
  if (v1)
  {
    id v2 = *(id *)(v0 + 24);
  }
  else
  {
    id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F66AC0]), sel_initWithHealthStore_, *(void *)(v0 + 16));
    unsigned int v4 = *(void **)(v0 + 24);
    *(void *)(v0 + 24) = v3;
    id v2 = v3;

    uint64_t v1 = 0;
  }
  id v5 = v1;
  return v2;
}

id *sub_1C1F34A2C()
{
  if (*(void *)(v0 + 32))
  {
    uint64_t v1 = *(id **)(v0 + 32);
  }
  else
  {
    uint64_t v2 = v0;
    id v3 = (void *)*MEMORY[0x1E4F2A2A8];
    unsigned int v4 = *(void **)(v0 + 16);
    sub_1C2148E10();
    id v5 = v3;
    id v6 = v4;
    sub_1C2148E00();
    sub_1C2148DB0();
    swift_release();
    sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C7C8);
    sub_1C214AC00();
    sub_1C2148D70();
    swift_allocObject();
    uint64_t v7 = (void *)sub_1C2148C90();
    type metadata accessor for OntologyShardStateObserver();
    swift_allocObject();
    uint64_t v1 = OntologyShardStateObserver.init(identifier:healthStore:settingsManager:)(v5, v6, v7);
    *(void *)(v2 + 32) = v1;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v1;
}

uint64_t sub_1C1F34B50@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1C1F34EBC(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1C1F34B7C@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1C21497F0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v8 = *a1;
  sub_1C21497A0();
  id v9 = v8;
  id v10 = v8;
  uint64_t v11 = sub_1C21497E0();
  os_log_type_t v12 = sub_1C214ABD0();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = swift_slowAlloc();
    uint64_t v14 = (void *)swift_slowAlloc();
    uint64_t v22 = swift_slowAlloc();
    uint64_t v26 = v22;
    *(_DWORD *)uint64_t v13 = 136315394;
    uint64_t v24 = a2;
    uint64_t v15 = sub_1C214BC10();
    uint64_t v25 = sub_1C1F6FD54(v15, v16, &v26);
    uint64_t v23 = v4;
    sub_1C214B530();
    swift_bridgeObjectRelease();
    *(_WORD *)(v13 + 12) = 2112;
    id v17 = v8;
    uint64_t v18 = _swift_stdlib_bridgeErrorToNSError();
    uint64_t v25 = v18;
    sub_1C214B530();
    *uint64_t v14 = v18;

    _os_log_impl(&dword_1C1F0B000, v11, v12, "%s Lifestyle factor error: %@", (uint8_t *)v13, 0x16u);
    sub_1C1F3603C();
    swift_arrayDestroy();
    MEMORY[0x1C8754730](v14, -1, -1);
    uint64_t v19 = v22;
    swift_arrayDestroy();
    MEMORY[0x1C8754730](v19, -1, -1);
    MEMORY[0x1C8754730](v13, -1, -1);

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v23);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  uint64_t v26 = MEMORY[0x1E4FBC870];
  sub_1C1F35D28();
  return sub_1C2149EE0();
}

uint64_t sub_1C1F34E48()
{
  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MedicationsInteractionEngine()
{
  return self;
}

uint64_t sub_1C1F34EBC(uint64_t a1)
{
  uint64_t result = MEMORY[0x1E4FBC870];
  uint64_t v7 = MEMORY[0x1E4FBC870];
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    for (uint64_t i = 0; i != v3; ++i)
    {
      uint64_t v5 = *(void *)(a1 + 8 * i + 32);
      sub_1C208D5E0(&v6, objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithUnsignedInteger_, v5));
    }
    swift_bridgeObjectRelease();
    return v7;
  }
  return result;
}

void *sub_1C1F34F68(void *a1, uint64_t a2)
{
  uint64_t v35 = a2;
  uint64_t v42 = *v2;
  sub_1C1F35768();
  uint64_t v38 = v4;
  uint64_t v40 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  double v37 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1F3585C();
  uint64_t v43 = v6;
  uint64_t v46 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  id v36 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1F35B3C();
  uint64_t v45 = v8;
  uint64_t v47 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  double v39 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1F35C7C();
  uint64_t v48 = v10;
  uint64_t v50 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  double v41 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1F35E04();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v51 = v12;
  uint64_t v52 = v13;
  MEMORY[0x1F4188790](v12);
  double v44 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = v2;
  v2[3] = 0;
  v2[4] = 0;
  v2[2] = a1;
  id v15 = a1;
  unint64_t v16 = (void *)sub_1C2148CA0();
  sub_1C1F35C18(0, &qword_1EA2C3160, (uint64_t (*)(uint64_t))sub_1C1F357FC, MEMORY[0x1E4FBBE00]);
  sub_1C1F357FC();
  uint64_t v34 = v17;
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1C2150000;
  sub_1C1F12718(0, &qword_1EA2C3168);
  sub_1C214AC80();
  sub_1C214AC70();
  swift_bridgeObjectRelease();
  id v18 = v16;
  sub_1C214ACA0();
  sub_1C214AC70();
  swift_bridgeObjectRelease();

  id v19 = v18;
  sub_1C214AC90();
  sub_1C214AC70();
  swift_bridgeObjectRelease();

  sub_1C1F35FF4(&qword_1EA2C30E0, (void (*)(uint64_t))sub_1C1F357FC);
  id v20 = v37;
  sub_1C2149DE0();
  sub_1C1F35FF4(&qword_1EA2C3118, (void (*)(uint64_t))sub_1C1F35768);
  uint64_t v21 = v36;
  uint64_t v22 = v38;
  sub_1C214A090();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v20, v22);
  uint64_t v23 = swift_allocObject();
  uint64_t v24 = v42;
  *(void *)(v23 + 16) = v35;
  *(void *)(v23 + 24) = v24;
  sub_1C1F35C18(0, &qword_1EA2C3128, (uint64_t (*)(uint64_t))type metadata accessor for HKDrugInteractionLifestyleFactor, MEMORY[0x1E4FBB320]);
  sub_1C1F35FF4(&qword_1EA2C3130, (void (*)(uint64_t))sub_1C1F3585C);
  swift_retain();
  uint64_t v25 = v39;
  uint64_t v26 = v43;
  sub_1C2149FD0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v46 + 8))(v21, v26);
  sub_1C1F35D28();
  id v27 = v41;
  uint64_t v28 = v45;
  sub_1C2149CE0();
  (*(void (**)(char *, uint64_t))(v47 + 8))(v25, v28);
  *(void *)(swift_allocObject() + 16) = v24;
  sub_1C1F35C18(0, &qword_1EA2C3148, (uint64_t (*)(uint64_t))sub_1C1F35D28, MEMORY[0x1E4F1AC08]);
  sub_1C1F35FF4(&qword_1EA2C3150, (void (*)(uint64_t))sub_1C1F35C7C);
  sub_1C1F35EF0();
  id v29 = v44;
  uint64_t v30 = v48;
  sub_1C214A040();
  swift_release();
  (*(void (**)(char *, uint64_t))(v50 + 8))(v27, v30);
  sub_1C1F35FF4(&qword_1EA2C3170, (void (*)(uint64_t))sub_1C1F35E04);
  uint64_t v31 = v51;
  uint64_t v32 = sub_1C2149FC0();

  (*(void (**)(char *, uint64_t))(v52 + 8))(v29, v31);
  uint64_t result = v49;
  uint64_t v49[5] = v32;
  return result;
}

void sub_1C1F35768()
{
  if (!qword_1EA2C30D0)
  {
    sub_1C1F357FC();
    sub_1C1F35FF4(&qword_1EA2C30E0, (void (*)(uint64_t))sub_1C1F357FC);
    unint64_t v0 = sub_1C2149DD0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C30D0);
    }
  }
}

void sub_1C1F357FC()
{
  if (!qword_1EA2C30D8)
  {
    unint64_t v0 = sub_1C214AC60();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C30D8);
    }
  }
}

void sub_1C1F3585C()
{
  if (!qword_1EA2C30E8)
  {
    sub_1C1F35948();
    sub_1C1F35768();
    sub_1C1F35FF4(&qword_1EA2C3110, (void (*)(uint64_t))sub_1C1F35948);
    sub_1C1F35FF4(&qword_1EA2C3118, (void (*)(uint64_t))sub_1C1F35768);
    unint64_t v0 = sub_1C2149D10();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C30E8);
    }
  }
}

void sub_1C1F35948()
{
  if (!qword_1EA2C30F0)
  {
    sub_1C1F35C18(255, &qword_1EA2C30F8, (uint64_t (*)(uint64_t))sub_1C1F35A04, MEMORY[0x1E4FBB320]);
    sub_1C1F35A5C();
    sub_1C1F35AB4();
    unint64_t v0 = sub_1C2149DC0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C30F0);
    }
  }
}

void sub_1C1F35A04()
{
  if (!qword_1EA2C3100)
  {
    unint64_t v0 = sub_1C214B4F0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C3100);
    }
  }
}

unint64_t sub_1C1F35A5C()
{
  unint64_t result = qword_1EBF0C9C0;
  if (!qword_1EBF0C9C0)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBF0C9C0);
  }
  return result;
}

unint64_t sub_1C1F35AB4()
{
  unint64_t result = qword_1EA2C3108;
  if (!qword_1EA2C3108)
  {
    sub_1C1F35C18(255, &qword_1EA2C30F8, (uint64_t (*)(uint64_t))sub_1C1F35A04, MEMORY[0x1E4FBB320]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C3108);
  }
  return result;
}

void sub_1C1F35B3C()
{
  if (!qword_1EA2C3120)
  {
    sub_1C1F3585C();
    sub_1C1F35C18(255, &qword_1EA2C3128, (uint64_t (*)(uint64_t))type metadata accessor for HKDrugInteractionLifestyleFactor, MEMORY[0x1E4FBB320]);
    sub_1C1F35FF4(&qword_1EA2C3130, (void (*)(uint64_t))sub_1C1F3585C);
    unint64_t v0 = sub_1C2149D00();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C3120);
    }
  }
}

void sub_1C1F35C18(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1C1F35C7C()
{
  if (!qword_1EA2C3138)
  {
    sub_1C1F3585C();
    sub_1C1F35D28();
    sub_1C1F35FF4(&qword_1EA2C3130, (void (*)(uint64_t))sub_1C1F3585C);
    unint64_t v0 = sub_1C2149D00();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C3138);
    }
  }
}

void sub_1C1F35D28()
{
  if (!qword_1EBF0C7C0)
  {
    sub_1C1F12718(255, &qword_1EBF0C908);
    sub_1C1F35D9C();
    unint64_t v0 = sub_1C214AAB0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBF0C7C0);
    }
  }
}

unint64_t sub_1C1F35D9C()
{
  unint64_t result = qword_1EBF0C910;
  if (!qword_1EBF0C910)
  {
    sub_1C1F12718(255, &qword_1EBF0C908);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBF0C910);
  }
  return result;
}

void sub_1C1F35E04()
{
  if (!qword_1EA2C3140)
  {
    sub_1C1F35C7C();
    sub_1C1F35C18(255, &qword_1EA2C3148, (uint64_t (*)(uint64_t))sub_1C1F35D28, MEMORY[0x1E4F1AC08]);
    sub_1C1F35FF4(&qword_1EA2C3150, (void (*)(uint64_t))sub_1C1F35C7C);
    sub_1C1F35EF0();
    unint64_t v0 = sub_1C2149D70();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C3140);
    }
  }
}

unint64_t sub_1C1F35EF0()
{
  unint64_t result = qword_1EA2C3158;
  if (!qword_1EA2C3158)
  {
    sub_1C1F35C18(255, &qword_1EA2C3148, (uint64_t (*)(uint64_t))sub_1C1F35D28, MEMORY[0x1E4F1AC08]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C3158);
  }
  return result;
}

uint64_t sub_1C1F35F78()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

void *sub_1C1F35FB0@<X0>(void *a1@<X8>)
{
  unint64_t result = sub_1C1F360A4();
  *a1 = result;
  return result;
}

uint64_t sub_1C1F35FDC()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C1F35FEC@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C1F34B7C(a1, a2);
}

uint64_t sub_1C1F35FF4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C1F3603C()
{
  if (!qword_1EA2C3178)
  {
    sub_1C1F12718(255, (unint64_t *)&qword_1EA2C4AA0);
    unint64_t v0 = sub_1C214B4F0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C3178);
    }
  }
}

void *sub_1C1F360A4()
{
  if ((sub_1C2148D00() & 1) == 0)
  {
    unint64_t v0 = (void *)MEMORY[0x1E4FBC860];
    if ((sub_1C2148D50() & 1) == 0) {
      goto LABEL_12;
    }
    goto LABEL_7;
  }
  unint64_t v0 = sub_1C1F3ADBC(0, 1, 1, MEMORY[0x1E4FBC860]);
  unint64_t v2 = v0[2];
  unint64_t v1 = v0[3];
  if (v2 >= v1 >> 1) {
    unint64_t v0 = sub_1C1F3ADBC((void *)(v1 > 1), v2 + 1, 1, v0);
  }
  v0[2] = v2 + 1;
  v0[v2 + 4] = 1;
  if (sub_1C2148D50())
  {
LABEL_7:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v0 = sub_1C1F3ADBC(0, v0[2] + 1, 1, v0);
    }
    unint64_t v4 = v0[2];
    unint64_t v3 = v0[3];
    if (v4 >= v3 >> 1) {
      unint64_t v0 = sub_1C1F3ADBC((void *)(v3 > 1), v4 + 1, 1, v0);
    }
    v0[2] = v4 + 1;
    v0[v4 + 4] = 2;
  }
LABEL_12:
  if (sub_1C2148D20())
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v0 = sub_1C1F3ADBC(0, v0[2] + 1, 1, v0);
    }
    unint64_t v6 = v0[2];
    unint64_t v5 = v0[3];
    if (v6 >= v5 >> 1) {
      unint64_t v0 = sub_1C1F3ADBC((void *)(v5 > 1), v6 + 1, 1, v0);
    }
    v0[2] = v6 + 1;
    v0[v6 + 4] = 3;
  }
  return v0;
}

uint64_t sub_1C1F36230()
{
  uint64_t v1 = *(void *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1C1F36260()
{
  return sub_1C214A610();
}

id sub_1C1F36294()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1C214B3D0();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  unint64_t v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  unint64_t v8 = (char *)&v27 - v7;
  uint64_t v9 = OBJC_IVAR____TtC19HealthMedicationsUI18ScheduleHeaderCell____lazy_storage___closeButton;
  uint64_t v10 = *(void **)&v0[OBJC_IVAR____TtC19HealthMedicationsUI18ScheduleHeaderCell____lazy_storage___closeButton];
  if (v10)
  {
    id v11 = *(id *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI18ScheduleHeaderCell____lazy_storage___closeButton];
  }
  else
  {
    sub_1C1F12718(0, &qword_1EA2C3198);
    *(void *)(swift_allocObject() + 16) = v0;
    uint64_t v12 = v0;
    uint64_t v13 = (void *)sub_1C214B250();
    sub_1C214B380();
    uint64_t v14 = (void *)sub_1C214A5B0();
    id v15 = objc_msgSend(self, sel_systemImageNamed_, v14);

    sub_1C214B370();
    id v16 = objc_msgSend(self, sel_preferredFontForTextStyle_, *MEMORY[0x1E4FB28C8]);
    uint64_t v17 = self;
    id v18 = objc_msgSend(v17, sel_configurationWithFont_scale_, v16, 3);

    id v19 = objc_msgSend(self, sel_secondaryLabelColor);
    id v20 = objc_msgSend(v17, sel_configurationWithHierarchicalColor_, v19);

    id v21 = objc_msgSend(v18, sel_configurationByApplyingConfiguration_, v20);
    sub_1C214B260();
    sub_1C1F12718(0, &qword_1EBF0C928);
    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v8, v2);
    id v22 = v13;
    uint64_t v23 = (void *)sub_1C214B3E0();
    objc_msgSend(v23, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);

    (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
    uint64_t v24 = *(void **)&v1[v9];
    *(void *)&v1[v9] = v23;
    id v11 = v23;

    uint64_t v10 = 0;
  }
  id v25 = v10;
  return v11;
}

uint64_t sub_1C1F365EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 + OBJC_IVAR____TtC19HealthMedicationsUI18ScheduleHeaderCell_item;
  swift_beginAccess();
  sub_1C1F2116C(v2, (uint64_t)v6);
  if (!v7) {
    return sub_1C1F374E4((uint64_t)v6);
  }
  sub_1C1F1CB5C();
  uint64_t result = swift_dynamicCast();
  if (result)
  {
    swift_bridgeObjectRelease();
    uint64_t v4 = swift_bridgeObjectRelease();
    v5(v4);
    return swift_release();
  }
  return result;
}

uint64_t sub_1C1F366A8(uint64_t a1)
{
  uint64_t v3 = sub_1C2149BE0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  unint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI18ScheduleHeaderCell_item;
  swift_beginAccess();
  sub_1C1F32DDC(a1, v7);
  swift_endAccess();
  sub_1C1F2116C(v7, (uint64_t)v21);
  if (v22)
  {
    sub_1C1F1CB5C();
    if (swift_dynamicCast())
    {
      int v13 = v17;
      uint64_t v14 = v20;
      uint64_t v15 = v19;
      sub_1C2149B40();
      sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8E0);
      sub_1C214B0A0();
      unint64_t v8 = (void (*)(uint64_t *, void))sub_1C2149AA0();
      sub_1C2149A50();
      v8(&v16, 0);
      swift_bridgeObjectRetain();
      sub_1C2149B90();
      uint64_t v18 = v3;
      uint64_t v19 = MEMORY[0x1E4FB0F88];
      uint64_t v9 = __swift_allocate_boxed_opaque_existential_1(&v16);
      (*(void (**)(uint64_t *, char *, uint64_t))(v4 + 16))(v9, v6, v3);
      MEMORY[0x1C8752FD0](&v16);
      sub_1C1F36C2C();
      id v10 = sub_1C1F36294();
      objc_msgSend(v10, sel_setHidden_, (v13 & 1) == 0);
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();

      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    }
  }
  else
  {
    sub_1C1F374E4((uint64_t)v21);
  }
  return sub_1C1F374E4(a1);
}

void (*sub_1C1F36938(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0xE8uLL);
  *a1 = v3;
  v3[24] = v1;
  uint64_t v4 = sub_1C2149BE0();
  v3[25] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[26] = v5;
  unint64_t v6 = malloc(*(void *)(v5 + 64));
  uint64_t v7 = OBJC_IVAR____TtC19HealthMedicationsUI18ScheduleHeaderCell_item;
  v3[27] = v6;
  v3[28] = v7;
  swift_beginAccess();
  return sub_1C1F36A08;
}

void sub_1C1F36A08(uint64_t *a1, char a2)
{
  uint64_t v3 = *a1;
  swift_endAccess();
  if ((a2 & 1) == 0)
  {
    sub_1C1F2116C(*(void *)(v3 + 192) + *(void *)(v3 + 224), v3 + 56);
    if (*(void *)(v3 + 80))
    {
      sub_1C1F1CB5C();
      if (swift_dynamicCast())
      {
        uint64_t v5 = *(void *)(v3 + 208);
        uint64_t v4 = *(void *)(v3 + 216);
        uint64_t v6 = *(void *)(v3 + 200);
        char v11 = *(unsigned char *)(v3 + 16);
        sub_1C2149B40();
        sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8E0);
        sub_1C214B0A0();
        uint64_t v7 = (void (*)(uint64_t, void))sub_1C2149AA0();
        sub_1C2149A50();
        v7(v3 + 136, 0);
        swift_bridgeObjectRetain();
        sub_1C2149B90();
        uint64_t v8 = MEMORY[0x1E4FB0F88];
        *(void *)(v3 + 120) = v6;
        *(void *)(v3 + 128) = v8;
        boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v3 + 96));
        (*(void (**)(uint64_t *, uint64_t, uint64_t))(v5 + 16))(boxed_opaque_existential_1, v4, v6);
        MEMORY[0x1C8752FD0](v3 + 96);
        sub_1C1F36C2C();
        id v10 = sub_1C1F36294();
        objc_msgSend(v10, sel_setHidden_, (v11 & 1) == 0);

        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
      }
    }
    else
    {
      sub_1C1F374E4(v3 + 56);
    }
  }
  free(*(void **)(v3 + 216));

  free((void *)v3);
}

void sub_1C1F36C2C()
{
  id v1 = objc_msgSend(v0, sel_subviews);
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8F0);
  unint64_t v2 = sub_1C214A780();

  id v3 = sub_1C1F36294();
  char v4 = sub_1C20BFD8C((uint64_t)v3, v2);
  swift_bridgeObjectRelease();

  if ((v4 & 1) == 0)
  {
    id v5 = objc_msgSend(v0, sel_contentView);
    id v6 = sub_1C1F36294();
    objc_msgSend(v5, sel_addSubview_, v6);

    uint64_t v7 = self;
    sub_1C1F0ED28();
    uint64_t v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_1C214FCB0;
    id v9 = sub_1C1F36294();
    id v10 = objc_msgSend(v9, sel_centerYAnchor);

    id v11 = objc_msgSend(v0, sel_contentView);
    id v12 = objc_msgSend(v11, sel_centerYAnchor);

    id v13 = objc_msgSend(v10, sel_constraintEqualToAnchor_, v12);
    *(void *)(v8 + 32) = v13;
    id v14 = sub_1C1F36294();
    id v15 = objc_msgSend(v14, sel_trailingAnchor);

    id v16 = objc_msgSend(v0, sel_contentView);
    id v17 = objc_msgSend(v16, sel_trailingAnchor);

    id v18 = objc_msgSend(v15, sel_constraintEqualToAnchor_, v17);
    *(void *)(v8 + 40) = v18;
    sub_1C214A7A0();
    sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C810);
    id v19 = (id)sub_1C214A770();
    swift_bridgeObjectRelease();
    objc_msgSend(v7, sel_activateConstraints_, v19);
  }
}

id sub_1C1F36FDC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ScheduleHeaderCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for ScheduleHeaderCell()
{
  return self;
}

uint64_t destroy for ScheduleHeaderItem()
{
  swift_bridgeObjectRelease();
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ScheduleHeaderItem(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ScheduleHeaderItem(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_retain();
  swift_release();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy56_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for ScheduleHeaderItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ScheduleHeaderItem(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ScheduleHeaderItem(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ScheduleHeaderItem()
{
  return &type metadata for ScheduleHeaderItem;
}

uint64_t sub_1C1F372D4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI18ScheduleHeaderCell_item;
  swift_beginAccess();
  return sub_1C1F2116C(v3, a1);
}

uint64_t (*sub_1C1F3732C(void *a1))()
{
  unint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1C1F36938(v2);
  return sub_1C1F37384;
}

uint64_t sub_1C1F37388@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC19HealthMedicationsUI18ScheduleHeaderCell_item;
  swift_beginAccess();
  return sub_1C1F2116C(v3, a1);
}

uint64_t sub_1C1F373E0(uint64_t a1)
{
  return sub_1C1F366A8(a1);
}

uint64_t (*sub_1C1F37404(void *a1))()
{
  unint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1C1F36938(v2);
  return sub_1C1F37384;
}

void sub_1C1F37460(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);

  free(v1);
}

unint64_t sub_1C1F374A8()
{
  unint64_t result = qword_1EA2C3190;
  if (!qword_1EA2C3190)
  {
    unint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA2C3190);
  }
  return result;
}

uint64_t sub_1C1F374E4(uint64_t a1)
{
  sub_1C1F24488();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C1F37540()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C1F37578(uint64_t a1)
{
  return sub_1C1F365EC(a1, *(void *)(v1 + 16));
}

uint64_t sub_1C1F37580(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MedicationSearchItem(0);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = MEMORY[0x1E4FBC860];
  if (v6)
  {
    uint64_t v17 = MEMORY[0x1E4FBC860];
    sub_1C1F704CC(0, v6, 0);
    uint64_t v7 = v17;
    uint64_t v8 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v9 = *(void *)(v3 + 72);
    do
    {
      sub_1C1F3CBFC(v8, (uint64_t)v5, type metadata accessor for MedicationSearchItem);
      uint64_t v17 = v7;
      unint64_t v11 = *(void *)(v7 + 16);
      unint64_t v10 = *(void *)(v7 + 24);
      if (v11 >= v10 >> 1)
      {
        sub_1C1F704CC(v10 > 1, v11 + 1, 1);
        uint64_t v7 = v17;
      }
      uint64_t v15 = v2;
      uint64_t v16 = sub_1C1F3CC64(&qword_1EA2C3250, (void (*)(uint64_t))type metadata accessor for MedicationSearchItem);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v14);
      sub_1C1F3CBFC((uint64_t)v5, (uint64_t)boxed_opaque_existential_1, type metadata accessor for MedicationSearchItem);
      *(void *)(v7 + 16) = v11 + 1;
      sub_1C1F31280(&v14, v7 + 40 * v11 + 32);
      sub_1C1F3CCAC((uint64_t)v5, type metadata accessor for MedicationSearchItem);
      v8 += v9;
      --v6;
    }
    while (v6);
  }
  return v7;
}

uint64_t sub_1C1F37774(uint64_t a1)
{
  sub_1C1F3C674();
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  int64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v7 = *(void *)(a1 + 16);
  uint64_t v8 = MEMORY[0x1E4FBC860];
  if (v7)
  {
    uint64_t v18 = MEMORY[0x1E4FBC860];
    sub_1C1F704CC(0, v7, 0);
    uint64_t v8 = v18;
    uint64_t v9 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    uint64_t v10 = *(void *)(v4 + 72);
    do
    {
      sub_1C1F3CBFC(v9, (uint64_t)v6, (uint64_t (*)(void))sub_1C1F3C674);
      uint64_t v18 = v8;
      unint64_t v12 = *(void *)(v8 + 16);
      unint64_t v11 = *(void *)(v8 + 24);
      if (v12 >= v11 >> 1)
      {
        sub_1C1F704CC(v11 > 1, v12 + 1, 1);
        uint64_t v8 = v18;
      }
      uint64_t v16 = v3;
      uint64_t v17 = sub_1C1F3CC64(&qword_1EA2C31F8, (void (*)(uint64_t))sub_1C1F3C674);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v15);
      sub_1C1F3CBFC((uint64_t)v6, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(void))sub_1C1F3C674);
      *(void *)(v8 + 16) = v12 + 1;
      sub_1C1F31280(&v15, v8 + 40 * v12 + 32);
      sub_1C1F3CCAC((uint64_t)v6, (uint64_t (*)(void))sub_1C1F3C674);
      v9 += v10;
      --v7;
    }
    while (v7);
  }
  return v8;
}

uint64_t sub_1C1F37968(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ScheduleIntervalItem();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = MEMORY[0x1E4FBC860];
  if (v6)
  {
    uint64_t v17 = MEMORY[0x1E4FBC860];
    sub_1C1F704CC(0, v6, 0);
    uint64_t v7 = v17;
    uint64_t v8 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v9 = *(void *)(v3 + 72);
    do
    {
      sub_1C1F3CBFC(v8, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for ScheduleIntervalItem);
      uint64_t v17 = v7;
      unint64_t v11 = *(void *)(v7 + 16);
      unint64_t v10 = *(void *)(v7 + 24);
      if (v11 >= v10 >> 1)
      {
        sub_1C1F704CC(v10 > 1, v11 + 1, 1);
        uint64_t v7 = v17;
      }
      uint64_t v15 = v2;
      uint64_t v16 = sub_1C1F3CC64(&qword_1EA2C3248, (void (*)(uint64_t))type metadata accessor for ScheduleIntervalItem);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v14);
      sub_1C1F3CBFC((uint64_t)v5, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(void))type metadata accessor for ScheduleIntervalItem);
      *(void *)(v7 + 16) = v11 + 1;
      sub_1C1F31280(&v14, v7 + 40 * v11 + 32);
      sub_1C1F3CCAC((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for ScheduleIntervalItem);
      v8 += v9;
      --v6;
    }
    while (v6);
  }
  return v7;
}

uint64_t sub_1C1F37B5C(unint64_t a1)
{
  return sub_1C1F386EC(a1, (uint64_t (*)(void))type metadata accessor for OnboardingLifestyleInteractionSwitchItem, &qword_1EA2C3290, (void (*)(uint64_t))type metadata accessor for OnboardingLifestyleInteractionSwitchItem);
}

uint64_t _sSa19HealthMedicationsUIAA12LoggableDoseORszlE9lineItemsSayAA30DayScheduleLineItemDisplayable_pGvg_0(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v15 = MEMORY[0x1E4FBC860];
    sub_1C1F706A4(0, v1, 0);
    uint64_t v2 = v15;
    uint64_t v4 = (char *)(a1 + 48);
    do
    {
      uint64_t v5 = (void *)*((void *)v4 - 2);
      int64_t v6 = (void *)*((void *)v4 - 1);
      char v7 = *v4;
      sub_1C1F3AFEC(v5, v6, *v4);
      uint64_t v15 = v2;
      unint64_t v9 = *(void *)(v2 + 16);
      unint64_t v8 = *(void *)(v2 + 24);
      if (v9 >= v8 >> 1)
      {
        sub_1C1F706A4(v8 > 1, v9 + 1, 1);
        uint64_t v2 = v15;
      }
      v4 += 24;
      id v13 = &type metadata for LoggableDose;
      long long v14 = &protocol witness table for LoggableDose;
      *(void *)&long long v11 = v5;
      *((void *)&v11 + 1) = v6;
      char v12 = v7;
      *(void *)(v2 + 16) = v9 + 1;
      sub_1C1F31280(&v11, v2 + 40 * v9 + 32);
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1C1F37CB0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MedicationsRecordDoseItem(0);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = MEMORY[0x1E4FBC860];
  if (v6)
  {
    uint64_t v17 = MEMORY[0x1E4FBC860];
    sub_1C1F704CC(0, v6, 0);
    uint64_t v7 = v17;
    uint64_t v8 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v9 = *(void *)(v3 + 72);
    do
    {
      sub_1C1F3CBFC(v8, (uint64_t)v5, type metadata accessor for MedicationsRecordDoseItem);
      uint64_t v17 = v7;
      unint64_t v11 = *(void *)(v7 + 16);
      unint64_t v10 = *(void *)(v7 + 24);
      if (v11 >= v10 >> 1)
      {
        sub_1C1F704CC(v10 > 1, v11 + 1, 1);
        uint64_t v7 = v17;
      }
      uint64_t v15 = v2;
      uint64_t v16 = sub_1C1F3CC64(&qword_1EBF0C348, (void (*)(uint64_t))type metadata accessor for MedicationsRecordDoseItem);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v14);
      sub_1C1F3CBFC((uint64_t)v5, (uint64_t)boxed_opaque_existential_1, type metadata accessor for MedicationsRecordDoseItem);
      *(void *)(v7 + 16) = v11 + 1;
      sub_1C1F31280(&v14, v7 + 40 * v11 + 32);
      sub_1C1F3CCAC((uint64_t)v5, type metadata accessor for MedicationsRecordDoseItem);
      v8 += v9;
      --v6;
    }
    while (v6);
  }
  return v7;
}

uint64_t sub_1C1F37EA4(uint64_t a1)
{
  uint64_t v2 = sub_1C21487B0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = MEMORY[0x1E4FBC860];
  if (v6)
  {
    uint64_t v22 = MEMORY[0x1E4FBC860];
    sub_1C1F704CC(0, v6, 0);
    uint64_t v7 = v22;
    unint64_t v10 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v8 = v3 + 16;
    uint64_t v9 = v10;
    uint64_t v11 = a1 + ((*(unsigned __int8 *)(v8 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 64));
    uint64_t v18 = *(void *)(v8 + 56);
    do
    {
      v9(v5, v11, v2);
      uint64_t v22 = v7;
      unint64_t v13 = *(void *)(v7 + 16);
      unint64_t v12 = *(void *)(v7 + 24);
      if (v13 >= v12 >> 1) {
        sub_1C1F704CC(v12 > 1, v13 + 1, 1);
      }
      uint64_t v20 = v2;
      uint64_t v21 = sub_1C1F3CC64((unint64_t *)&qword_1EA2C2E68, MEMORY[0x1E4F66510]);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v19);
      v9((char *)boxed_opaque_existential_1, (uint64_t)v5, v2);
      uint64_t v15 = v22;
      *(void *)(v22 + 16) = v13 + 1;
      sub_1C1F31280(&v19, v15 + 40 * v13 + 32);
      (*(void (**)(char *, uint64_t))(v8 - 8))(v5, v2);
      uint64_t v7 = v22;
      v11 += v18;
      --v6;
    }
    while (v6);
  }
  return v7;
}

uint64_t sub_1C1F380A0(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v12 = MEMORY[0x1E4FBC860];
    sub_1C1F704CC(0, v1, 0);
    uint64_t v2 = v12;
    uint64_t v4 = a1 + 32;
    do
    {
      sub_1C1F3CA24(v4, (uint64_t)v11);
      uint64_t v12 = v2;
      unint64_t v6 = *(void *)(v2 + 16);
      unint64_t v5 = *(void *)(v2 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_1C1F704CC(v5 > 1, v6 + 1, 1);
        uint64_t v2 = v12;
      }
      uint64_t v9 = &type metadata for MedicationDoseLogMedicationItem;
      unint64_t v10 = sub_1C1F3CA80();
      *(void *)&long long v8 = swift_allocObject();
      sub_1C1F3CA24((uint64_t)v11, v8 + 16);
      *(void *)(v2 + 16) = v6 + 1;
      sub_1C1F31280(&v8, v2 + 40 * v6 + 32);
      sub_1C1F3CB1C((uint64_t)v11);
      v4 += 40;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1C1F381C0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MedicationDoseRecordAllItem(0);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  unint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = MEMORY[0x1E4FBC860];
  if (v6)
  {
    uint64_t v17 = MEMORY[0x1E4FBC860];
    sub_1C1F704CC(0, v6, 0);
    uint64_t v7 = v17;
    uint64_t v8 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v9 = *(void *)(v3 + 72);
    do
    {
      sub_1C1F3CBFC(v8, (uint64_t)v5, type metadata accessor for MedicationDoseRecordAllItem);
      uint64_t v17 = v7;
      unint64_t v11 = *(void *)(v7 + 16);
      unint64_t v10 = *(void *)(v7 + 24);
      if (v11 >= v10 >> 1)
      {
        sub_1C1F704CC(v10 > 1, v11 + 1, 1);
        uint64_t v7 = v17;
      }
      uint64_t v15 = v2;
      uint64_t v16 = sub_1C1F3CC64((unint64_t *)&unk_1EBF0C528, (void (*)(uint64_t))type metadata accessor for MedicationDoseRecordAllItem);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v14);
      sub_1C1F3CBFC((uint64_t)v5, (uint64_t)boxed_opaque_existential_1, type metadata accessor for MedicationDoseRecordAllItem);
      *(void *)(v7 + 16) = v11 + 1;
      sub_1C1F31280(&v14, v7 + 40 * v11 + 32);
      sub_1C1F3CCAC((uint64_t)v5, type metadata accessor for MedicationDoseRecordAllItem);
      v8 += v9;
      --v6;
    }
    while (v6);
  }
  return v7;
}

uint64_t sub_1C1F383B4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MedicationLogDetailsUnitItem();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  unint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = MEMORY[0x1E4FBC860];
  if (v6)
  {
    uint64_t v17 = MEMORY[0x1E4FBC860];
    sub_1C1F704CC(0, v6, 0);
    uint64_t v7 = v17;
    uint64_t v8 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v9 = *(void *)(v3 + 72);
    do
    {
      sub_1C1F3CBFC(v8, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for MedicationLogDetailsUnitItem);
      uint64_t v17 = v7;
      unint64_t v11 = *(void *)(v7 + 16);
      unint64_t v10 = *(void *)(v7 + 24);
      if (v11 >= v10 >> 1)
      {
        sub_1C1F704CC(v10 > 1, v11 + 1, 1);
        uint64_t v7 = v17;
      }
      uint64_t v15 = v2;
      uint64_t v16 = sub_1C1F3CC64(&qword_1EA2C3208, (void (*)(uint64_t))type metadata accessor for MedicationLogDetailsUnitItem);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v14);
      sub_1C1F3CBFC((uint64_t)v5, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(void))type metadata accessor for MedicationLogDetailsUnitItem);
      *(void *)(v7 + 16) = v11 + 1;
      sub_1C1F31280(&v14, v7 + 40 * v11 + 32);
      sub_1C1F3CCAC((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for MedicationLogDetailsUnitItem);
      v8 += v9;
      --v6;
    }
    while (v6);
  }
  return v7;
}

uint64_t sub_1C1F385A8(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v13 = MEMORY[0x1E4FBC860];
    sub_1C1F7078C(0, v1, 0);
    uint64_t v2 = v13;
    uint64_t v4 = (uint64_t *)(a1 + 32);
    do
    {
      uint64_t v5 = *v4;
      uint64_t v13 = v2;
      unint64_t v6 = *(void *)(v2 + 16);
      unint64_t v7 = *(void *)(v2 + 24);
      swift_bridgeObjectRetain();
      if (v6 >= v7 >> 1)
      {
        sub_1C1F7078C(v7 > 1, v6 + 1, 1);
        uint64_t v2 = v13;
      }
      sub_1C1F3C9F0(0);
      uint64_t v11 = v8;
      uint64_t v12 = &protocol witness table for <A> [A];
      *(void *)&long long v10 = v5;
      *(void *)(v2 + 16) = v6 + 1;
      sub_1C1F31280(&v10, v2 + 40 * v6 + 32);
      ++v4;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1C1F386A4(unint64_t a1)
{
  return sub_1C1F386EC(a1, (uint64_t (*)(void))type metadata accessor for InteractionFactorsLifestyleOptionsItem, &qword_1EA2C31B0, (void (*)(uint64_t))type metadata accessor for InteractionFactorsLifestyleOptionsItem);
}

uint64_t sub_1C1F386EC(unint64_t a1, uint64_t (*a2)(void), unint64_t *a3, void (*a4)(uint64_t))
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_1C214B930();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v8 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v9 = MEMORY[0x1E4FBC860];
  if (!v8) {
    return v9;
  }
  uint64_t v22 = MEMORY[0x1E4FBC860];
  uint64_t result = sub_1C1F704CC(0, v8 & ~(v8 >> 63), 0);
  if ((v8 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = v22;
    if ((a1 & 0xC000000000000001) != 0)
    {
      uint64_t v11 = 0;
      do
      {
        uint64_t v12 = MEMORY[0x1C8753960](v11, a1);
        uint64_t v22 = v9;
        unint64_t v14 = *(void *)(v9 + 16);
        unint64_t v13 = *(void *)(v9 + 24);
        if (v14 >= v13 >> 1)
        {
          sub_1C1F704CC(v13 > 1, v14 + 1, 1);
          uint64_t v9 = v22;
        }
        ++v11;
        uint64_t v20 = a2(0);
        uint64_t v21 = sub_1C1F3CC64(a3, a4);
        *(void *)&long long v19 = v12;
        *(void *)(v9 + 16) = v14 + 1;
        sub_1C1F31280(&v19, v9 + 40 * v14 + 32);
      }
      while (v8 != v11);
    }
    else
    {
      uint64_t v15 = (uint64_t *)(a1 + 32);
      do
      {
        uint64_t v16 = *v15;
        uint64_t v22 = v9;
        unint64_t v18 = *(void *)(v9 + 16);
        unint64_t v17 = *(void *)(v9 + 24);
        swift_retain();
        if (v18 >= v17 >> 1)
        {
          sub_1C1F704CC(v17 > 1, v18 + 1, 1);
          uint64_t v9 = v22;
        }
        uint64_t v20 = a2(0);
        uint64_t v21 = sub_1C1F3CC64(a3, a4);
        *(void *)&long long v19 = v16;
        *(void *)(v9 + 16) = v18 + 1;
        sub_1C1F31280(&v19, v9 + 40 * v18 + 32);
        ++v15;
        --v8;
      }
      while (v8);
    }
    return v9;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C1F388E8(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v13 = MEMORY[0x1E4FBC860];
    sub_1C1F70874(0, v1, 0);
    uint64_t v2 = v13;
    uint64_t v4 = (uint64_t *)(a1 + 32);
    do
    {
      uint64_t v5 = *v4;
      uint64_t v13 = v2;
      unint64_t v7 = *(void *)(v2 + 16);
      unint64_t v6 = *(void *)(v2 + 24);
      swift_bridgeObjectRetain();
      if (v7 >= v6 >> 1)
      {
        sub_1C1F70874(v6 > 1, v7 + 1, 1);
        uint64_t v2 = v13;
      }
      sub_1C1F16240(0, (unint64_t *)&qword_1EA2C3278, (uint64_t)&type metadata for LoggableDose, MEMORY[0x1E4FBB320]);
      uint64_t v11 = v8;
      uint64_t v12 = &protocol witness table for <A> [A];
      *(void *)&long long v10 = v5;
      *(void *)(v2 + 16) = v7 + 1;
      sub_1C1F31280(&v10, v2 + 40 * v7 + 32);
      ++v4;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1C1F38A0C(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1C214B930();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v3 = MEMORY[0x1E4FBC860];
  if (!v2) {
    return v3;
  }
  uint64_t v13 = MEMORY[0x1E4FBC860];
  uint64_t result = sub_1C1F708AC(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v2; ++i)
      {
        MEMORY[0x1C8753960](i, a1);
        sub_1C1F12718(0, (unint64_t *)&unk_1EBF0C800);
        swift_dynamicCast();
        uint64_t v3 = v13;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1C1F708AC(0, *(void *)(v3 + 16) + 1, 1);
          uint64_t v3 = v13;
        }
        unint64_t v7 = *(void *)(v3 + 16);
        unint64_t v6 = *(void *)(v3 + 24);
        if (v7 >= v6 >> 1)
        {
          sub_1C1F708AC(v6 > 1, v7 + 1, 1);
          uint64_t v3 = v13;
        }
        *(void *)(v3 + 16) = v7 + 1;
        sub_1C1F3CB70(v12, (_OWORD *)(v3 + 32 * v7 + 32));
      }
    }
    else
    {
      uint64_t v8 = (id *)(a1 + 32);
      sub_1C1F12718(0, (unint64_t *)&unk_1EBF0C800);
      do
      {
        id v9 = *v8;
        swift_dynamicCast();
        uint64_t v3 = v13;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1C1F708AC(0, *(void *)(v3 + 16) + 1, 1);
          uint64_t v3 = v13;
        }
        unint64_t v11 = *(void *)(v3 + 16);
        unint64_t v10 = *(void *)(v3 + 24);
        if (v11 >= v10 >> 1)
        {
          sub_1C1F708AC(v10 > 1, v11 + 1, 1);
          uint64_t v3 = v13;
        }
        *(void *)(v3 + 16) = v11 + 1;
        sub_1C1F3CB70(v12, (_OWORD *)(v3 + 32 * v11 + 32));
        ++v8;
        --v2;
      }
      while (v2);
    }
    return v3;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C1F38C70(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v24 = MEMORY[0x1E4FBC860];
    sub_1C1F704CC(0, v1, 0);
    uint64_t v2 = v24;
    uint64_t v4 = (uint64_t *)(a1 + 56);
    do
    {
      uint64_t v5 = *(v4 - 2);
      uint64_t v6 = *v4;
      uint64_t v18 = *(v4 - 1);
      uint64_t v19 = *(v4 - 3);
      uint64_t v7 = v4[2];
      uint64_t v8 = v4[4];
      uint64_t v16 = v4[3];
      uint64_t v17 = v4[1];
      char v15 = *((unsigned char *)v4 + 40);
      uint64_t v9 = v4[6];
      uint64_t v10 = v4[7];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1C1F1325C(v9);
      uint64_t v24 = v2;
      unint64_t v12 = *(void *)(v2 + 16);
      unint64_t v11 = *(void *)(v2 + 24);
      int64_t v20 = v12 + 1;
      if (v12 >= v11 >> 1)
      {
        sub_1C1F704CC(v11 > 1, v20, 1);
        uint64_t v2 = v24;
      }
      uint64_t v22 = &type metadata for ScheduleTypeOptionItem;
      unint64_t v23 = sub_1C1F3C93C();
      uint64_t v13 = swift_allocObject();
      *(void *)&long long v21 = v13;
      *(void *)(v13 + 16) = v19;
      *(void *)(v13 + 24) = v5;
      *(void *)(v13 + 32) = v18;
      *(void *)(v13 + 40) = v6;
      *(void *)(v13 + 48) = v17;
      *(void *)(v13 + 56) = v7;
      *(void *)(v13 + 64) = v16;
      *(void *)(v13 + 72) = v8;
      *(unsigned char *)(v13 + 80) = v15;
      *(void *)(v13 + 88) = v9;
      *(void *)(v13 + 96) = v10;
      *(void *)(v2 + 16) = v20;
      sub_1C1F31280(&v21, v2 + 40 * v12 + 32);
      v4 += 11;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1C1F38DF8(unint64_t a1)
{
  return sub_1C1F386EC(a1, (uint64_t (*)(void))type metadata accessor for InteractionMedicationItem, &qword_1EA2C3230, (void (*)(uint64_t))type metadata accessor for InteractionMedicationItem);
}

uint64_t sub_1C1F38E40(unint64_t a1)
{
  return sub_1C1F386EC(a1, (uint64_t (*)(void))type metadata accessor for MedicationSourceListItem, &qword_1EA2C3218, (void (*)(uint64_t))type metadata accessor for MedicationSourceListItem);
}

uint64_t sub_1C1F38E88(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v9 = MEMORY[0x1E4FBC860];
    sub_1C1F708AC(0, v1, 0);
    uint64_t v2 = v9;
    uint64_t v4 = a1 + 40;
    do
    {
      swift_bridgeObjectRetain();
      swift_dynamicCast();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C1F708AC(0, *(void *)(v2 + 16) + 1, 1);
        uint64_t v2 = v9;
      }
      unint64_t v6 = *(void *)(v2 + 16);
      unint64_t v5 = *(void *)(v2 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_1C1F708AC(v5 > 1, v6 + 1, 1);
        uint64_t v2 = v9;
      }
      v4 += 16;
      *(void *)(v2 + 16) = v6 + 1;
      sub_1C1F3CB70(&v8, (_OWORD *)(v2 + 32 * v6 + 32));
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1C1F38FB0(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1C214B930();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v3 = MEMORY[0x1E4FBC860];
  if (!v2) {
    return v3;
  }
  uint64_t v18 = MEMORY[0x1E4FBC860];
  uint64_t result = sub_1C1F709DC(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    uint64_t v3 = v18;
    if ((a1 & 0xC000000000000001) != 0)
    {
      uint64_t v5 = 0;
      do
      {
        uint64_t v6 = MEMORY[0x1C8753960](v5, a1);
        unint64_t v8 = *(void *)(v18 + 16);
        unint64_t v7 = *(void *)(v18 + 24);
        if (v8 >= v7 >> 1) {
          sub_1C1F709DC(v7 > 1, v8 + 1, 1);
        }
        ++v5;
        uint64_t v9 = sub_1C1F3CC64(&qword_1EA2C31B8, (void (*)(uint64_t))type metadata accessor for InteractionSeverityDataSource);
        *(void *)(v18 + 16) = v8 + 1;
        uint64_t v10 = v18 + 16 * v8;
        *(void *)(v10 + 32) = v6;
        *(void *)(v10 + 40) = v9;
      }
      while (v2 != v5);
    }
    else
    {
      unint64_t v11 = (uint64_t *)(a1 + 32);
      unint64_t v12 = *(void *)(v18 + 16);
      uint64_t v13 = 16 * v12;
      do
      {
        uint64_t v14 = *v11;
        unint64_t v15 = *(void *)(v18 + 24);
        swift_retain();
        if (v12 >= v15 >> 1) {
          sub_1C1F709DC(v15 > 1, v12 + 1, 1);
        }
        uint64_t v16 = sub_1C1F3CC64(&qword_1EA2C31B8, (void (*)(uint64_t))type metadata accessor for InteractionSeverityDataSource);
        *(void *)(v18 + 16) = v12 + 1;
        uint64_t v17 = v18 + v13;
        *(void *)(v17 + 32) = v14;
        *(void *)(v17 + 40) = v16;
        v13 += 16;
        ++v11;
        ++v12;
        --v2;
      }
      while (v2);
    }
    return v3;
  }
  __break(1u);
  return result;
}

uint64_t LoggableDose.scheduleDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1C2147AC0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1F17184(0, &qword_1EBF0B1F0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v21 - v8;
  uint64_t v10 = *(void **)v1;
  if (*(unsigned char *)(v1 + 16))
  {
    unint64_t v11 = *(void **)(v1 + 8);
    id v12 = v10;
    id v13 = objc_msgSend(v12, sel_scheduledDate);
    if (v13)
    {
      uint64_t v14 = v13;
      sub_1C2147A60();

      unint64_t v15 = *(void (**)(char *, char *, uint64_t))(v4 + 32);
      v15(v9, v6, v3);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v4 + 56))(v9, 0, 1, v3);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v9, 1, v3) != 1)
      {

        return ((uint64_t (*)(uint64_t, char *, uint64_t))v15)(a1, v9, v3);
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v9, 1, 1, v3);
    }
    sub_1C1F394F8((uint64_t)v9);
    uint64_t v22 = 0;
    unint64_t v23 = 0xE000000000000000;
    id v17 = v12;
    id v18 = v11;
    sub_1C214B7C0();
    id v25 = v22;
    unint64_t v26 = v23;
    sub_1C214A6C0();
    uint64_t v22 = v10;
    unint64_t v23 = (unint64_t)v11;
    char v24 = 1;
    id v19 = v17;
    id v20 = v18;
    sub_1C214A630();
    sub_1C214A6C0();
    swift_bridgeObjectRelease();
    sub_1C214A6C0();
    uint64_t result = sub_1C214B910();
    __break(1u);
  }
  else
  {
    swift_retain();
    sub_1C2148EA0();
    return swift_release();
  }
  return result;
}

uint64_t sub_1C1F394F8(uint64_t a1)
{
  sub_1C1F17184(0, &qword_1EBF0B1F0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id LoggableDose.medication.getter()
{
  return *(id *)(v0 + 8);
}

double *LoggableDose.makeLoggingViewModel(index:)(uint64_t a1)
{
  uint64_t v3 = sub_1C2147AC0();
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void **)v1;
  uint64_t v7 = *(void **)(v1 + 8);
  if (*(unsigned char *)(v1 + 16))
  {
    id v8 = v6;
    id v9 = v7;
    sub_1C2147A70();
    type metadata accessor for MedicationsDoseLogViewModel(0);
    swift_allocObject();
    uint64_t v10 = MedicationsDoseLogViewModel.init(medication:doseEvent:scheduleItem:logDate:dosage:index:)(v9, v6, 0, v5, a1, 1.0);
  }
  else
  {
    swift_retain_n();
    id v11 = v7;
    sub_1C2147A70();
    type metadata accessor for MedicationsDoseLogViewModel(0);
    swift_allocObject();
    uint64_t v10 = MedicationsDoseLogViewModel.init(medication:doseEvent:scheduleItem:logDate:dosage:index:)(v11, 0, (uint64_t)v6, v5, a1, 1.0);
    swift_release();
  }
  return v10;
}

double *LoggableDose.makeLoggingViewModel(logDate:index:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_1C2147AC0();
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = *(void **)v2;
  id v9 = *(void **)(v2 + 8);
  char v10 = *(unsigned char *)(v2 + 16);
  (*(void (**)(char *, uint64_t))(v11 + 16))(v7, a1);
  type metadata accessor for MedicationsDoseLogViewModel(0);
  swift_allocObject();
  if (v10)
  {
    id v12 = v8;
    id v13 = v9;
    double v14 = 1.0;
    unint64_t v15 = v8;
    uint64_t v16 = 0;
  }
  else
  {
    swift_retain();
    id v13 = v9;
    double v14 = 1.0;
    unint64_t v15 = 0;
    uint64_t v16 = (uint64_t)v8;
  }
  return MedicationsDoseLogViewModel.init(medication:doseEvent:scheduleItem:logDate:dosage:index:)(v13, v15, v16, v7, a2, v14);
}

uint64_t LoggableDose.name.getter()
{
  return sub_1C2149490();
}

void LoggableDose.medmojiConfiguration.getter()
{
  id v1 = *(id *)(v0 + 8);
  _sSo29HKMedicationUserDomainConceptC19HealthMedicationsUIE7medmoji0eF10Experience29MedicationVisualizationConfigVSgvg_0();
}

id LoggableDose.isLastScheduledDose.getter()
{
  if (*(unsigned char *)(v0 + 16)) {
    return objc_msgSend(*(id *)v0, sel_isLastScheduledDose);
  }
  swift_retain();
  char v2 = sub_1C2148E90();
  swift_release();
  return (id)(v2 & 1);
}

uint64_t sub_1C1F39910()
{
  return sub_1C2149490();
}

void sub_1C1F39964()
{
  id v1 = *(id *)(v0 + 8);
  _sSo29HKMedicationUserDomainConceptC19HealthMedicationsUIE7medmoji0eF10Experience29MedicationVisualizationConfigVSgvg_0();
}

id sub_1C1F399B8()
{
  if (*(unsigned char *)(v0 + 16)) {
    return objc_msgSend(*(id *)v0, sel_isLastScheduledDose);
  }
  swift_retain();
  char v2 = sub_1C2148E90();
  swift_release();
  return (id)(v2 & 1);
}

uint64_t Array<A>.date.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (*(void *)(a1 + 16))
  {
    LoggableDose.scheduleDate.getter(a2);
    uint64_t v3 = sub_1C2147AC0();
    uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56);
    uint64_t v5 = v3;
    uint64_t v6 = a2;
    uint64_t v7 = 0;
  }
  else
  {
    uint64_t v8 = sub_1C2147AC0();
    uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56);
    uint64_t v5 = v8;
    uint64_t v6 = a2;
    uint64_t v7 = 1;
  }

  return v4(v6, v7, 1, v5);
}

uint64_t Array<A>.time.getter(uint64_t a1)
{
  uint64_t v2 = sub_1C21478D0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1C21478F0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  id v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1F17184(0, &qword_1EBF0B1F0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v10 - 8);
  id v12 = (char *)&v19 - v11;
  if (!*(void *)(a1 + 16))
  {
    uint64_t v17 = sub_1C2147AC0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v12, 1, 1, v17);
    goto LABEL_5;
  }
  char v13 = *(unsigned char *)(a1 + 48);
  long long v19 = *(_OWORD *)(a1 + 32);
  char v20 = v13;
  LoggableDose.scheduleDate.getter((uint64_t)v12);
  uint64_t v14 = sub_1C2147AC0();
  uint64_t v15 = *(void *)(v14 - 8);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v12, 1, v14) == 1)
  {
LABEL_5:
    sub_1C1F394F8((uint64_t)v12);
    return 0;
  }
  sub_1C21478E0();
  sub_1C21478C0();
  uint64_t v16 = sub_1C2147A80();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v12, v14);
  return v16;
}

uint64_t sub_1C1F39E04()
{
  return Array<A>.time.getter(*v0);
}

uint64_t sub_1C1F39E0C@<X0>(uint64_t a1@<X8>)
{
  return Array<A>.date.getter(*v1, a1);
}

uint64_t sub_1C1F39E14()
{
  return _sSa19HealthMedicationsUIAA12LoggableDoseORszlE9lineItemsSayAA30DayScheduleLineItemDisplayable_pGvg_0(*v0);
}

uint64_t Array<A>.timeText.getter(unint64_t a1)
{
  uint64_t v16 = sub_1C21478D0();
  uint64_t v2 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1C21478F0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1C2147AC0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  id v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  Array<A>.logTime.getter(a1, (uint64_t)v12);
  sub_1C21478E0();
  sub_1C21478C0();
  uint64_t v13 = sub_1C2147A80();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v16);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return v13;
}

uint64_t Array<A>.logTime.getter@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1C2147AC0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1F17184(0, &qword_1EBF0B1F0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v16 - v9;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_1C214B930();
    if (result) {
      goto LABEL_3;
    }
LABEL_9:
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v10, 1, 1, v4);
    goto LABEL_10;
  }
  uint64_t v11 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain();
  if (!v11) {
    goto LABEL_9;
  }
LABEL_3:
  if ((a1 & 0xC000000000000001) != 0)
  {
    MEMORY[0x1C8753960](0, a1);
  }
  else
  {
    if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return result;
    }
    swift_retain();
  }
  swift_bridgeObjectRelease();
  uint64_t v13 = (void *)sub_1C2148F90();
  swift_release();
  id v14 = objc_msgSend(v13, sel_startDate);

  sub_1C2147A60();
  uint64_t v15 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
  v15(v10, v7, v4);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v10, 0, 1, v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4) != 1) {
    return ((uint64_t (*)(uint64_t, char *, uint64_t))v15)(a2, v10, v4);
  }
LABEL_10:
  sub_1C2147AB0();
  return sub_1C1F394F8((uint64_t)v10);
}

uint64_t Array<A>.lineItems.getter(unint64_t a1)
{
  unint64_t v1 = a1;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_1C214B930();
    uint64_t v2 = result;
    if (result) {
      goto LABEL_3;
    }
LABEL_21:
    swift_bridgeObjectRelease();
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain();
  if (!v2) {
    goto LABEL_21;
  }
LABEL_3:
  if (v2 >= 1)
  {
    uint64_t v4 = 0;
    unint64_t v18 = v1 & 0xC000000000000001;
    uint64_t v5 = (void *)MEMORY[0x1E4FBC860];
    while (1)
    {
      if (v18) {
        MEMORY[0x1C8753960](v4, v1);
      }
      else {
        swift_retain();
      }
      uint64_t v6 = sub_1C2148FA0();
      if (v6)
      {
        uint64_t v7 = (void *)v6;
        *(void *)&v23[0] = v6;
        sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8C0);
        uint64_t v19 = sub_1C2149490();
        uint64_t v9 = v8;
        uint64_t v10 = (void *)sub_1C2148F90();
        id v11 = objc_msgSend(v10, sel_status);

        unint64_t v12 = v1;
        uint64_t v13 = v2;
        BOOL v14 = v11 == (id)5;
        uint64_t v15 = (void *)sub_1C2148F90();
        LOBYTE(v11) = objc_msgSend(v15, sel_isLastScheduledDose);

        *((void *)&v21 + 1) = &type metadata for MedicationsDayHistoryLineItem;
        uint64_t v22 = &off_1F1D75EE8;
        *(void *)&long long v20 = v19;
        *((void *)&v20 + 1) = v9;
        LOBYTE(v21) = v14;
        uint64_t v2 = v13;
        unint64_t v1 = v12;
        BYTE1(v21) = (_BYTE)v11;
        swift_release();

        if (*((void *)&v21 + 1)) {
          goto LABEL_14;
        }
      }
      else
      {
        uint64_t v22 = 0;
        long long v20 = 0u;
        long long v21 = 0u;
        swift_release();
        if (*((void *)&v21 + 1))
        {
LABEL_14:
          sub_1C1F31280(&v20, (uint64_t)v23);
          sub_1C1F31280(v23, (uint64_t)&v20);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v5 = sub_1C1F3ADDC(0, v5[2] + 1, 1, v5, (unint64_t *)&unk_1EA2C32B0, &qword_1EA2C31A8, (uint64_t)&protocol descriptor for DayHistoryLineItemDisplayable);
          }
          unint64_t v17 = v5[2];
          unint64_t v16 = v5[3];
          if (v17 >= v16 >> 1) {
            uint64_t v5 = sub_1C1F3ADDC((void *)(v16 > 1), v17 + 1, 1, v5, (unint64_t *)&unk_1EA2C32B0, &qword_1EA2C31A8, (uint64_t)&protocol descriptor for DayHistoryLineItemDisplayable);
          }
          v5[2] = v17 + 1;
          sub_1C1F31280(&v20, (uint64_t)&v5[5 * v17 + 4]);
          goto LABEL_6;
        }
      }
      sub_1C1F3A7FC((uint64_t)&v20);
LABEL_6:
      if (v2 == ++v4)
      {
        swift_bridgeObjectRelease();
        return (uint64_t)v5;
      }
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1C1F3A5BC()
{
  uint64_t v15 = sub_1C21478D0();
  uint64_t v1 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1C21478F0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1C2147AC0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  id v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  Array<A>.logTime.getter(*v0, (uint64_t)v11);
  sub_1C21478E0();
  sub_1C21478C0();
  uint64_t v12 = sub_1C2147A80();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v15);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return v12;
}

uint64_t sub_1C1F3A7EC()
{
  return Array<A>.lineItems.getter(*v0);
}

uint64_t sub_1C1F3A7F4@<X0>(uint64_t a1@<X8>)
{
  return Array<A>.logTime.getter(*v1, a1);
}

uint64_t sub_1C1F3A7FC(uint64_t a1)
{
  sub_1C1F3A884(0, &qword_1EA2C31A0, &qword_1EA2C31A8, (uint64_t)&protocol descriptor for DayHistoryLineItemDisplayable, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1C1F3A884(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = sub_1C1F248B4(255, a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

void *sub_1C1F3A8F0(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1C1F3B6F0(a1, a2, a3, a4, &qword_1EA2C32A8, (uint64_t)&type metadata for ScheduleListItem);
}

void *sub_1C1F3A904(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1C1F16240(0, &qword_1EBF0C970, (uint64_t)&type metadata for MedicationCellItem, MEMORY[0x1E4FBBE00]);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 + 31;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 6);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[8 * v8 + 4]) {
          memmove(v13, a4 + 4, v8 << 6);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1C1F3BD78(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C1F3AA34(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1C1F16EE8(a1, a2, a3, a4, &qword_1EA2C31C0, type metadata accessor for WeekdaysAndDosages, type metadata accessor for WeekdaysAndDosages, type metadata accessor for WeekdaysAndDosages);
}

uint64_t sub_1C1F3AA7C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1C1F16EE8(a1, a2, a3, a4, (unint64_t *)&qword_1EA2C3220, (uint64_t (*)(uint64_t))type metadata accessor for Dosage, (uint64_t (*)(void))type metadata accessor for Dosage, (uint64_t (*)(void))type metadata accessor for Dosage);
}

void *sub_1C1F3AAC4(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1C1F3ADDC(a1, a2, a3, a4, (unint64_t *)&qword_1EBF0C958, (unint64_t *)&qword_1EBF0C2F0, MEMORY[0x1E4F66028]);
}

void *sub_1C1F3AAE0(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1C1F16240(0, (unint64_t *)&qword_1EA2C3298, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1C1F3BF74(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_1C1F3AC10(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    int64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  int64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      int64_t v7 = a2;
    }
LABEL_8:
    int64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      int64_t v9 = *((void *)a4 + 2);
    }
    else {
      int64_t v9 = v7;
    }
    if (v9)
    {
      sub_1C1F16240(0, (unint64_t *)&qword_1EA2C30C8, (uint64_t)&type metadata for SpecificationStep, MEMORY[0x1E4FBBE00]);
      uint64_t v10 = (char *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * v11 - 64;
      uint64_t v12 = v10 + 32;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[v8 + 32]) {
          memmove(v12, a4 + 32, v8);
        }
        *((void *)a4 + 2) = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
      uint64_t v12 = (char *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1C1F3C068(0, v8, v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C1F3AD2C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1C1F16EE8(a1, a2, a3, a4, (unint64_t *)&qword_1EA2C2DD0, MEMORY[0x1E4F66468], MEMORY[0x1E4F66468], MEMORY[0x1E4F66468]);
}

uint64_t sub_1C1F3AD74(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1C1F16EE8(a1, a2, a3, a4, &qword_1EA2C3240, type metadata accessor for ScheduleDataSource.DoseItem, type metadata accessor for ScheduleDataSource.DoseItem, type metadata accessor for ScheduleDataSource.DoseItem);
}

void *sub_1C1F3ADBC(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1C1F3B998(a1, a2, a3, a4, &qword_1EA2C3228, (uint64_t (*)(uint64_t))type metadata accessor for HKDrugInteractionLifestyleFactor);
}

void *sub_1C1F3ADDC(void *result, int64_t a2, char a3, void *a4, unint64_t *a5, unint64_t *a6, uint64_t a7)
{
  char v9 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v11 = a2;
    goto LABEL_8;
  }
  unint64_t v10 = a4[3];
  uint64_t v11 = v10 >> 1;
  if ((uint64_t)(v10 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v11 + 0x4000000000000000 >= 0)
  {
    uint64_t v11 = v10 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v10 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v11 = a2;
    }
LABEL_8:
    uint64_t v12 = a4[2];
    if (v11 <= v12) {
      uint64_t v13 = a4[2];
    }
    else {
      uint64_t v13 = v11;
    }
    if (v13)
    {
      sub_1C1F3A884(0, a5, a6, a7, MEMORY[0x1E4FBBE00]);
      uint64_t v14 = (void *)swift_allocObject();
      size_t v15 = _swift_stdlib_malloc_size(v14);
      v14[2] = v12;
      v14[3] = 2 * ((uint64_t)(v15 - 32) / 40);
      unint64_t v16 = v14 + 4;
      if (v9)
      {
LABEL_13:
        if (v14 != a4 || v16 >= &a4[5 * v12 + 4]) {
          memmove(v16, a4 + 4, 40 * v12);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v14 = (void *)MEMORY[0x1E4FBC860];
      unint64_t v16 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1C1F3C338(0, v12, (unint64_t)v16, (uint64_t)a4, a6);
LABEL_22:
    swift_bridgeObjectRelease();
    return v14;
  }
  __break(1u);
  return result;
}

uint64_t dispatch thunk of DayScheduleLineItemDisplayable.name.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of DayScheduleLineItemDisplayable.medmojiConfiguration.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of DayScheduleLineItemDisplayable.isLastScheduledDose.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of DayScheduleDisplayable.time.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of DayScheduleDisplayable.date.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of DayScheduleDisplayable.lineItems.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of DayScheduleActionable.scheduleDate.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of DayScheduleActionable.makeLoggingViewModel(index:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of DayScheduleActionable.makeLoggingViewModel(logDate:index:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

id sub_1C1F3AFEC(void *a1, void *a2, char a3)
{
  if (a3) {
    id v3 = a1;
  }
  else {
    swift_retain();
  }

  return a2;
}

void destroy for LoggableDose(uint64_t a1)
{
}

void sub_1C1F3B040(void *a1, void *a2, char a3)
{
  if (a3) {

  }
  else {
    swift_release();
  }
}

uint64_t _s19HealthMedicationsUI12LoggableDoseOwCP_0(uint64_t a1, uint64_t a2)
{
  id v3 = *(void **)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_1C1F3AFEC(*(void **)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for LoggableDose(uint64_t a1, uint64_t a2)
{
  id v3 = *(void **)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_1C1F3AFEC(*(void **)a2, v4, v5);
  unint64_t v6 = *(void **)a1;
  int64_t v7 = *(void **)(a1 + 8);
  char v8 = *(unsigned char *)(a1 + 16);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  sub_1C1F3B040(v6, v7, v8);
  return a1;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for LoggableDose(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void **)a1;
  char v5 = *(void **)(a1 + 8);
  char v6 = *(unsigned char *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v3;
  sub_1C1F3B040(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for LoggableDose(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for LoggableDose(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1C1F3B210(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_1C1F3B218(uint64_t result, char a2)
{
  *(unsigned char *)(result + 16) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for LoggableDose()
{
  return &type metadata for LoggableDose;
}

void *sub_1C1F3B234(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1C1F24848();
      unint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      unint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1C1F3C450(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1C1F3B340(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1C1F17184(0, (unint64_t *)&unk_1EBF0C9B0, (uint64_t (*)(uint64_t))type metadata accessor for UIContentSizeCategory, MEMORY[0x1E4FBBE00]);
      unint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      unint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1C1F3C56C(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1C1F3B47C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1C1F16240(0, &qword_1EA2C32A0, MEMORY[0x1E4FBB550], MEMORY[0x1E4FBBE00]);
      unint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      unint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1C1F1628C(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1C1F3B5AC(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1C1F16240(0, &qword_1EA2C3258, (uint64_t)&type metadata for ScheduledDoseIdentifier, MEMORY[0x1E4FBBE00]);
      unint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      unint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4]) {
          memmove(v13, a4 + 4, 32 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1C1F3C150(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1C1F3B6DC(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1C1F3B6F0(a1, a2, a3, a4, &qword_1EA2C3270, (uint64_t)&type metadata for LoggableDose);
}

void *sub_1C1F3B6F0(void *result, int64_t a2, char a3, void *a4, unint64_t *a5, uint64_t a6)
{
  char v7 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v9 = a2;
    goto LABEL_8;
  }
  unint64_t v8 = a4[3];
  uint64_t v9 = v8 >> 1;
  if ((uint64_t)(v8 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v9 + 0x4000000000000000 >= 0)
  {
    uint64_t v9 = v8 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v8 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v9 = a2;
    }
LABEL_8:
    uint64_t v10 = a4[2];
    if (v9 <= v10) {
      uint64_t v11 = a4[2];
    }
    else {
      uint64_t v11 = v9;
    }
    if (v11)
    {
      sub_1C1F16240(0, a5, a6, MEMORY[0x1E4FBBE00]);
      uint64_t v12 = (void *)swift_allocObject();
      size_t v13 = _swift_stdlib_malloc_size(v12);
      _OWORD v12[2] = v10;
      v12[3] = 2 * ((uint64_t)(v13 - 32) / 24);
      uint64_t v14 = v12 + 4;
      if (v7)
      {
LABEL_13:
        if (v12 != a4 || v14 >= &a4[3 * v10 + 4]) {
          memmove(v14, a4 + 4, 24 * v10);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v12 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v14 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1C1F3C244(0, v10, (unint64_t)v14, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v12;
  }
  __break(1u);
  return result;
}

void *sub_1C1F3B83C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1C1F17184(0, &qword_1EA2C3268, (uint64_t (*)(uint64_t))sub_1C1F3C9F0, MEMORY[0x1E4FBBE00]);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      size_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      size_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1C1F3C708(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1C1F3B978(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1C1F3B998(a1, a2, a3, a4, (unint64_t *)&qword_1EA2C3288, (uint64_t (*)(uint64_t))type metadata accessor for HKDrugInteractionSeverityLevel);
}

void *sub_1C1F3B998(void *result, int64_t a2, char a3, void *a4, unint64_t *a5, uint64_t (*a6)(uint64_t))
{
  char v7 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v9 = a2;
    goto LABEL_8;
  }
  unint64_t v8 = a4[3];
  uint64_t v9 = v8 >> 1;
  if ((uint64_t)(v8 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v9 + 0x4000000000000000 >= 0)
  {
    uint64_t v9 = v8 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v8 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v9 = a2;
    }
LABEL_8:
    uint64_t v10 = a4[2];
    if (v9 <= v10) {
      uint64_t v11 = a4[2];
    }
    else {
      uint64_t v11 = v9;
    }
    if (v11)
    {
      sub_1C1F17184(0, a5, a6, MEMORY[0x1E4FBBE00]);
      uint64_t v12 = (void *)swift_allocObject();
      int64_t v13 = _swift_stdlib_malloc_size(v12);
      uint64_t v14 = v13 - 32;
      if (v13 < 32) {
        uint64_t v14 = v13 - 25;
      }
      _OWORD v12[2] = v10;
      v12[3] = 2 * (v14 >> 3);
      size_t v15 = v12 + 4;
      if (v7) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v12 = (void *)MEMORY[0x1E4FBC860];
      size_t v15 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v12 != a4 || v15 >= &a4[v10 + 4]) {
          memmove(v15, a4 + 4, 8 * v10);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1C1F1628C(0, v10, (char *)v15, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v12;
  }
  __break(1u);
  return result;
}

void *sub_1C1F3BAC0(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1C1F3CB80();
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      int64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      int64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1C1F3C810(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_1C1F3BBCC(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    int64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  int64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      int64_t v7 = a2;
    }
LABEL_8:
    int64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      int64_t v9 = *((void *)a4 + 2);
    }
    else {
      int64_t v9 = v7;
    }
    if (v9)
    {
      sub_1C1F16240(0, &qword_1EA2C3210, (uint64_t)&type metadata for LogDetailsRow, MEMORY[0x1E4FBBE00]);
      uint64_t v10 = (char *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * v11 - 64;
      uint64_t v12 = v10 + 32;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[v8 + 32]) {
          memmove(v12, a4 + 32, v8);
        }
        *((void *)a4 + 2) = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
      uint64_t v12 = (char *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1C1F3C068(0, v8, v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C1F3BCE8(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1C1F16EE8(a1, a2, a3, a4, &qword_1EA2C3200, MEMORY[0x1E4F66CA0], MEMORY[0x1E4F66CA0], MEMORY[0x1E4F66CA0]);
}

uint64_t sub_1C1F3BD30(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1C1F16EE8(a1, a2, a3, a4, &qword_1EA2C31C8, (uint64_t (*)(uint64_t))sub_1C1F3BE6C, (uint64_t (*)(void))sub_1C1F3BE6C, (uint64_t (*)(void))sub_1C1F3BE6C);
}

uint64_t sub_1C1F3BD78(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + (a1 << 6) + 32;
    unint64_t v6 = a3 + (v4 << 6);
    if (v5 >= v6 || v5 + (v4 << 6) <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1C214B990();
  __break(1u);
  return result;
}

void sub_1C1F3BE6C()
{
  if (!qword_1EA2C31D0)
  {
    sub_1C2149390();
    sub_1C1F17184(255, (unint64_t *)&qword_1EA2C31D8, (uint64_t (*)(uint64_t))sub_1C1F3BF0C, MEMORY[0x1E4FBB718]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA2C31D0);
    }
  }
}

void sub_1C1F3BF0C()
{
  if (!qword_1EA2C31E0)
  {
    sub_1C1F12718(255, (unint64_t *)&qword_1EBF0C900);
    unint64_t v0 = sub_1C214A470();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C31E0);
    }
  }
}

uint64_t sub_1C1F3BF74(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1C214B990();
  __break(1u);
  return result;
}

char *sub_1C1F3C068(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  size_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + a1 + 32);
    unint64_t v6 = &__dst[v4];
    if (v5 >= &__dst[v4] || &v5[v4] <= __dst)
    {
      memcpy(__dst, v5, v4);
      return v6;
    }
  }
  uint64_t result = (char *)sub_1C214B990();
  __break(1u);
  return result;
}

uint64_t sub_1C1F3C150(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1C214B990();
  __break(1u);
  return result;
}

uint64_t sub_1C1F3C244(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 24 * a1 + 32;
    unint64_t v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1C214B990();
  __break(1u);
  return result;
}

uint64_t sub_1C1F3C338(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t *a5)
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    unint64_t v6 = a4 + 40 * a1 + 32;
    unint64_t v7 = a3 + 40 * v5;
    if (v6 >= v7 || v6 + 40 * v5 <= a3)
    {
      sub_1C1F248B4(0, a5);
      swift_arrayInitWithCopy();
      return v7;
    }
  }
  uint64_t result = sub_1C214B990();
  __break(1u);
  return result;
}

uint64_t sub_1C1F3C450(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      sub_1C1F248B4(0, (unint64_t *)&qword_1EA2C2CE0);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1C214B990();
  __break(1u);
  return result;
}

uint64_t sub_1C1F3C56C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 8 * a1 + 32;
    unint64_t v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      type metadata accessor for UIContentSizeCategory(0);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1C214B990();
  __break(1u);
  return result;
}

void sub_1C1F3C674()
{
  if (!qword_1EA2C31E8)
  {
    sub_1C2148E60();
    sub_1C1F3CC64(&qword_1EA2C31F0, MEMORY[0x1E4F66BE8]);
    unint64_t v0 = type metadata accessor for MedmojiConfigItem();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C31E8);
    }
  }
}

uint64_t sub_1C1F3C708(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 8 * a1 + 32;
    unint64_t v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      sub_1C1F3C9F0(0);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1C214B990();
  __break(1u);
  return result;
}

uint64_t sub_1C1F3C810(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 8 * a1 + 32;
    unint64_t v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      sub_1C1F16240(0, (unint64_t *)&qword_1EA2C3278, (uint64_t)&type metadata for LoggableDose, MEMORY[0x1E4FBB320]);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1C214B990();
  __break(1u);
  return result;
}

unint64_t sub_1C1F3C93C()
{
  unint64_t result = qword_1EA2C3238;
  if (!qword_1EA2C3238)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C3238);
  }
  return result;
}

uint64_t sub_1C1F3C990()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 88)) {
    swift_release();
  }

  return MEMORY[0x1F4186498](v0, 104, 7);
}

void sub_1C1F3C9F0(uint64_t a1)
{
}

uint64_t sub_1C1F3CA24(uint64_t a1, uint64_t a2)
{
  return a2;
}

unint64_t sub_1C1F3CA80()
{
  unint64_t result = qword_1EBF0C310;
  if (!qword_1EBF0C310)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBF0C310);
  }
  return result;
}

uint64_t sub_1C1F3CAD4()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_unknownObjectWeakDestroy();

  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t sub_1C1F3CB1C(uint64_t a1)
{
  return a1;
}

_OWORD *sub_1C1F3CB70(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

void sub_1C1F3CB80()
{
  if (!qword_1EA2C3280)
  {
    sub_1C1F16240(255, (unint64_t *)&qword_1EA2C3278, (uint64_t)&type metadata for LoggableDose, MEMORY[0x1E4FBB320]);
    unint64_t v0 = sub_1C214BA50();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C3280);
    }
  }
}

uint64_t sub_1C1F3CBFC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C1F3CC64(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C1F3CCAC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C1F3CD0C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1C2149F80();
  swift_release();
  swift_release();
  return v1;
}

id MedicationScheduleObserver.__allocating_init(healthStore:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  id v4 = sub_1C1F3F0A0(a1);

  return v4;
}

id MedicationScheduleObserver.init(healthStore:)(void *a1)
{
  id v2 = sub_1C1F3F0A0(a1);

  return v2;
}

id MedicationScheduleObserver.__deallocating_deinit()
{
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI26MedicationScheduleObserver_scheduleControl], sel_unregisterObserver_, v0);
  if (*(void *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI26MedicationScheduleObserver_scheduleItemObserverTask])
  {
    sub_1C1F35A5C();
    swift_retain();
    sub_1C214A920();
    swift_release();
  }
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MedicationScheduleObserver();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1C1F3CFE0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1C214A3F0();
  uint64_t v17 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  unint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1C214A420();
  uint64_t v7 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  int64_t v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *(void *)(v2 + OBJC_IVAR____TtC19HealthMedicationsUI26MedicationScheduleObserver_queue);
  uint64_t v10 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v10;
  *(void *)(v11 + 24) = a1;
  aBlock[4] = sub_1C1F3FC34;
  aBlock[5] = v11;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C1F0E42C;
  aBlock[3] = &block_descriptor_5;
  uint64_t v12 = _Block_copy(aBlock);
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1C214A410();
  uint64_t v18 = MEMORY[0x1E4FBC860];
  sub_1C1F404F4((unint64_t *)&qword_1EBF0CAE0, MEMORY[0x1E4FBCB00]);
  int64_t v13 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FBCB00];
  sub_1C1F3F578(0, (unint64_t *)&qword_1EBF0CAF0, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
  sub_1C1F4053C((unint64_t *)&qword_1EBF0CB00, (unint64_t *)&qword_1EBF0CAF0, v13);
  sub_1C214B640();
  MEMORY[0x1C8752F10](0, v9, v6, v12);
  _Block_release(v12);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v6, v4);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v16);
  swift_release();
  return swift_release();
}

uint64_t sub_1C1F3D304(uint64_t a1)
{
  uint64_t v1 = a1 + 16;
  swift_beginAccess();
  uint64_t result = MEMORY[0x1C8754850](v1);
  if (result)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    swift_bridgeObjectRetain();
    return sub_1C2149F90();
  }
  return result;
}

uint64_t sub_1C1F3D39C()
{
  uint64_t v1 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C1F3F578(0, (unint64_t *)&qword_1EA2C32D8, MEMORY[0x1E4FBCFE8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v23 - v3;
  sub_1C1F3F578(0, (unint64_t *)&unk_1EBF0B1B0, MEMORY[0x1E4F26E60], v1);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v23 - v6;
  uint64_t v8 = sub_1C21475B0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  uint64_t v11 = MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v23 - v13;
  uint64_t v15 = v0 + OBJC_IVAR____TtC19HealthMedicationsUI26MedicationScheduleObserver_dateInterval;
  swift_beginAccess();
  sub_1C1F3F5DC(v15, (uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1) {
    return sub_1C1F40148((uint64_t)v7, (unint64_t *)&unk_1EBF0B1B0, MEMORY[0x1E4F26E60]);
  }
  id v25 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
  v25(v14, v7, v8);
  uint64_t v17 = sub_1C214A8C0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v4, 1, 1, v17);
  uint64_t v18 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v19 = *(void *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI26MedicationScheduleObserver_scheduleItemDataSource);
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v12, v14, v8);
  unint64_t v20 = (*(unsigned __int8 *)(v9 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  char v24 = v4;
  unint64_t v21 = (v10 + v20 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v22 = (char *)swift_allocObject();
  *((void *)v22 + 2) = 0;
  *((void *)v22 + 3) = 0;
  *((void *)v22 + 4) = v19;
  v25(&v22[v20], v12, v8);
  *(void *)&v22[v21] = v18;
  swift_retain();
  sub_1C1F3E744((uint64_t)v24, (uint64_t)&unk_1EA2C3300, (uint64_t)v22);
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v14, v8);
}

uint64_t sub_1C1F3D764(uint64_t a1, uint64_t a2)
{
  v3[6] = a2;
  v3[7] = v2;
  v3[5] = a1;
  sub_1C1F3F578(0, &qword_1EA2C3310, (uint64_t (*)(uint64_t))sub_1C1F3F800, MEMORY[0x1E4FBD030]);
  v3[8] = v4;
  v3[9] = *(void *)(v4 - 8);
  v3[10] = swift_task_alloc();
  sub_1C1F3F578(0, (unint64_t *)&unk_1EBF0B1B0, MEMORY[0x1E4F26E60], MEMORY[0x1E4FBB718]);
  v3[11] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C1F3D8B4, 0, 0);
}

uint64_t sub_1C1F3D8B4()
{
  uint64_t v1 = v0[7];
  if (*(void *)(v1 + OBJC_IVAR____TtC19HealthMedicationsUI26MedicationScheduleObserver_scheduleItemObserverTask))
  {
    sub_1C1F35A5C();
    swift_retain();
    sub_1C214A920();
    swift_release();
    uint64_t v1 = v0[7];
  }
  uint64_t v3 = v0[10];
  uint64_t v2 = v0[11];
  uint64_t v4 = v0[8];
  uint64_t v5 = v0[9];
  uint64_t v6 = v0[6];
  uint64_t v7 = sub_1C21475B0();
  uint64_t v8 = *(void *)(v7 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v2, v6, v7);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v8 + 56))(v2, 0, 1, v7);
  uint64_t v9 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI26MedicationScheduleObserver_dateInterval;
  swift_beginAccess();
  sub_1C1F3F868(v2, v9);
  swift_endAccess();
  uint64_t v10 = *(void **)(v1 + OBJC_IVAR____TtC19HealthMedicationsUI26MedicationScheduleObserver_scheduleControl);
  objc_msgSend(v10, sel_unregisterObserver_, v1);
  objc_msgSend(v10, sel_registerObserver_queue_, v1, *(void *)(v1 + OBJC_IVAR____TtC19HealthMedicationsUI26MedicationScheduleObserver_queue));
  *(void *)(swift_task_alloc() + 16) = v1;
  sub_1C1F3F800();
  (*(void (**)(uint64_t, void, uint64_t))(v5 + 104))(v3, *MEMORY[0x1E4FBD028], v4);
  sub_1C214A910();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v11 = (uint64_t (*)(void))v0[1];
  return v11();
}

uint64_t sub_1C1F3DB04(uint64_t a1, uint64_t a2)
{
  sub_1C1F3F578(0, &qword_1EA2C33D0, (uint64_t (*)(uint64_t))sub_1C1F3F800, MEMORY[0x1E4FBD038]);
  uint64_t v30 = v4;
  uint64_t v36 = *(void *)(v4 - 8);
  uint64_t v37 = *(void *)(v36 + 64);
  MEMORY[0x1F4188790](v4);
  uint64_t v35 = (char *)&v29 - v5;
  sub_1C1F3F578(0, &qword_1EA2C33D8, (uint64_t (*)(uint64_t))sub_1C1F3F800, MEMORY[0x1E4F1AC60]);
  uint64_t v34 = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  uint64_t v9 = MEMORY[0x1F4188790](v6);
  id v33 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v29 - v10;
  sub_1C1F3F578(0, (unint64_t *)&qword_1EA2C32D8, MEMORY[0x1E4FBCFE8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = (char *)&v29 - v13;
  uint64_t v32 = (uint64_t)&v29 - v13;
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1C214A8D0();
  uint64_t v15 = sub_1C214A8C0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 1, 1, v15);
  uint64_t v29 = swift_allocObject();
  uint64_t v31 = a2;
  swift_unknownObjectWeakInit();
  swift_beginAccess();
  sub_1C1F3F578(0, (unint64_t *)&unk_1EA2C33C0, (uint64_t (*)(uint64_t))sub_1C1F3F800, MEMORY[0x1E4F1AC70]);
  sub_1C2149F50();
  swift_endAccess();
  uint64_t v16 = v7 + 32;
  uint64_t v17 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
  uint64_t v19 = v33;
  uint64_t v18 = v34;
  v17(v33, v11, v34);
  unint64_t v20 = v35;
  uint64_t v21 = v36;
  uint64_t v22 = a1;
  uint64_t v23 = v30;
  (*(void (**)(char *, uint64_t, uint64_t))(v36 + 16))(v35, v22, v30);
  unint64_t v24 = (*(unsigned __int8 *)(v16 + 48) + 40) & ~(unint64_t)*(unsigned __int8 *)(v16 + 48);
  unint64_t v25 = (v8 + *(unsigned __int8 *)(v21 + 80) + v24) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  unint64_t v26 = (char *)swift_allocObject();
  *((void *)v26 + 2) = 0;
  *((void *)v26 + 3) = 0;
  *((void *)v26 + 4) = v29;
  v17(&v26[v24], v19, v18);
  (*(void (**)(char *, char *, uint64_t))(v21 + 32))(&v26[v25], v20, v23);
  uint64_t v27 = sub_1C1F3E744(v32, (uint64_t)&unk_1EA2C33E8, (uint64_t)v26);
  *(void *)(v31 + OBJC_IVAR____TtC19HealthMedicationsUI26MedicationScheduleObserver_scheduleItemObserverTask) = v27;
  return swift_release();
}

void sub_1C1F3DF40(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 + 16;
  swift_beginAccess();
  uint64_t v3 = MEMORY[0x1C8754850](v2);
  if (v3)
  {
    uint64_t v4 = (void *)v3;
    uint64_t v5 = *(void *)(v3 + OBJC_IVAR____TtC19HealthMedicationsUI26MedicationScheduleObserver_scheduleItemObserverTask);
    swift_retain();

    if (v5)
    {
      sub_1C1F35A5C();
      sub_1C214A920();
      swift_release();
    }
  }
}

uint64_t sub_1C1F3DFD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[9] = a5;
  v6[10] = a6;
  v6[8] = a4;
  sub_1C1F3F578(0, &qword_1EA2C33F0, (uint64_t (*)(uint64_t))sub_1C1F3F800, MEMORY[0x1E4FBD010]);
  v6[11] = v7;
  v6[12] = *(void *)(v7 - 8);
  v6[13] = swift_task_alloc();
  sub_1C1F40038(0, &qword_1EA2C33F8, MEMORY[0x1E4F1AB48]);
  v6[14] = v8;
  v6[15] = *(void *)(v8 - 8);
  v6[16] = swift_task_alloc();
  sub_1C1F40038(0, &qword_1EA2C3408, MEMORY[0x1E4F1AB38]);
  v6[17] = v9;
  v6[18] = *(void *)(v9 - 8);
  v6[19] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C1F3E1BC, 0, 0);
}

uint64_t sub_1C1F3E1BC()
{
  if (sub_1C214A930())
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v1 = (uint64_t (*)(void))v0[1];
    return v1();
  }
  else
  {
    uint64_t v3 = v0[8] + 16;
    swift_beginAccess();
    uint64_t v4 = MEMORY[0x1C8754850](v3);
    if (v4)
    {
      uint64_t v5 = (void *)v4;
      sub_1C1F3E8E0();
    }
    uint64_t v7 = v0[15];
    uint64_t v6 = v0[16];
    uint64_t v8 = v0[14];
    sub_1C1F3F578(0, &qword_1EA2C33D8, (uint64_t (*)(uint64_t))sub_1C1F3F800, MEMORY[0x1E4F1AC60]);
    uint64_t v10 = v9;
    unint64_t v11 = sub_1C1F3FFB0();
    MEMORY[0x1C8752290](v10, v11);
    sub_1C2149E50();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
    unint64_t v12 = sub_1C1F400D4();
    uint64_t v13 = (void *)swift_task_alloc();
    v0[20] = v13;
    *uint64_t v13 = v0;
    v13[1] = sub_1C1F3E3A8;
    uint64_t v14 = v0[17];
    return MEMORY[0x1F4187C78](v0 + 5, v14, v12);
  }
}

uint64_t sub_1C1F3E3A8()
{
  *(void *)(*(void *)v1 + 168) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1C1F3E6C4;
  }
  else {
    uint64_t v2 = sub_1C1F3E4BC;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C1F3E4BC()
{
  *(void *)(v0 + 176) = *(void *)(v0 + 40);
  return MEMORY[0x1F4188298](sub_1C1F3E4E0, 0, 0);
}

uint64_t sub_1C1F3E4E0()
{
  uint64_t v1 = v0[22];
  if (!v1)
  {
    (*(void (**)(void, void))(v0[18] + 8))(v0[19], v0[17]);
    goto LABEL_5;
  }
  if (sub_1C214A930())
  {
    (*(void (**)(void, void))(v0[18] + 8))(v0[19], v0[17]);
    swift_bridgeObjectRelease();
LABEL_5:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v2 = (uint64_t (*)(void))v0[1];
    return v2();
  }
  uint64_t v5 = v0[12];
  uint64_t v4 = v0[13];
  uint64_t v6 = v0[11];
  v0[7] = v1;
  sub_1C1F3F578(0, &qword_1EA2C33D0, (uint64_t (*)(uint64_t))sub_1C1F3F800, MEMORY[0x1E4FBD038]);
  sub_1C214A8E0();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  unint64_t v7 = sub_1C1F400D4();
  uint64_t v8 = (void *)swift_task_alloc();
  v0[20] = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_1C1F3E3A8;
  uint64_t v9 = v0[17];
  return MEMORY[0x1F4187C78](v0 + 5, v9, v7);
}

uint64_t sub_1C1F3E6C4()
{
  *(void *)(v0 + 48) = *(void *)(v0 + 168);
  sub_1C1F35A5C();
  swift_dynamicCast();
  return swift_willThrowTypedImpl();
}

uint64_t sub_1C1F3E744(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_1C214A8C0();
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5) != 1)
  {
    sub_1C214A8B0();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    if (!*(void *)(a3 + 16)) {
      return swift_task_create();
    }
    goto LABEL_3;
  }
  sub_1C1F40148(a1, (unint64_t *)&qword_1EA2C32D8, MEMORY[0x1E4FBCFE8]);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1C214A840();
    swift_unknownObjectRelease();
  }
  return swift_task_create();
}

uint64_t sub_1C1F3E8E0()
{
  uint64_t v1 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C1F3F578(0, (unint64_t *)&qword_1EA2C32D8, MEMORY[0x1E4FBCFE8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v23 - v3;
  sub_1C1F3F578(0, (unint64_t *)&unk_1EBF0B1B0, MEMORY[0x1E4F26E60], v1);
  MEMORY[0x1F4188790](v5 - 8);
  unint64_t v7 = (char *)&v23 - v6;
  uint64_t v8 = sub_1C21475B0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  uint64_t v11 = MEMORY[0x1F4188790](v8);
  unint64_t v12 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v23 - v13;
  uint64_t v15 = v0 + OBJC_IVAR____TtC19HealthMedicationsUI26MedicationScheduleObserver_dateInterval;
  swift_beginAccess();
  sub_1C1F3F5DC(v15, (uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1) {
    return sub_1C1F40148((uint64_t)v7, (unint64_t *)&unk_1EBF0B1B0, MEMORY[0x1E4F26E60]);
  }
  unint64_t v25 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
  v25(v14, v7, v8);
  uint64_t v17 = sub_1C214A8C0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v4, 1, 1, v17);
  uint64_t v18 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v19 = *(void *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI26MedicationScheduleObserver_scheduleItemDataSource);
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v12, v14, v8);
  unint64_t v20 = (*(unsigned __int8 *)(v9 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  unint64_t v24 = v4;
  unint64_t v21 = (v10 + v20 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v22 = (char *)swift_allocObject();
  *((void *)v22 + 2) = 0;
  *((void *)v22 + 3) = 0;
  *((void *)v22 + 4) = v19;
  v25(&v22[v20], v12, v8);
  *(void *)&v22[v21] = v18;
  swift_retain();
  sub_1C1F3E744((uint64_t)v24, (uint64_t)&unk_1EA2C3418, (uint64_t)v22);
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v14, v8);
}

uint64_t sub_1C1F3EC60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(void *)(v6 + 40) = a6;
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v6 + 48) = v8;
  *uint64_t v8 = v6;
  v8[1] = sub_1C1F3ED04;
  return MEMORY[0x1F411F778](a5);
}

uint64_t sub_1C1F3ED04(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 56) = a1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v4 = *(uint64_t (**)(void))(v3 + 8);
    return v4();
  }
  else
  {
    return MEMORY[0x1F4188298](sub_1C1F3EE38, 0, 0);
  }
}

uint64_t sub_1C1F3EE38()
{
  uint64_t v1 = v0[5] + 16;
  swift_beginAccess();
  uint64_t v2 = MEMORY[0x1C8754850](v1);
  if (v2)
  {
    uint64_t v3 = (void *)v2;
    sub_1C1F3CFE0(v0[7]);
  }
  swift_bridgeObjectRelease();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

id MedicationScheduleObserver.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

void MedicationScheduleObserver.init()()
{
}

uint64_t sub_1C1F3EF68@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for MedicationScheduleObserver();
  uint64_t result = sub_1C2149E60();
  *a1 = result;
  return result;
}

uint64_t sub_1C1F3EFA8@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1C2149F80();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1C1F3F028(uint64_t a1, void **a2)
{
  uint64_t v2 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  id v3 = v2;
  return sub_1C2149F90();
}

id sub_1C1F3F0A0(void *a1)
{
  uint64_t v28 = a1;
  sub_1C1F3F578(0, (unint64_t *)&unk_1EA2C33C0, (uint64_t (*)(uint64_t))sub_1C1F3F800, MEMORY[0x1E4F1AC70]);
  uint64_t v26 = *(void *)(v2 - 8);
  uint64_t v27 = v2;
  MEMORY[0x1F4188790](v2);
  unint64_t v25 = (char *)v21 - v3;
  uint64_t v24 = sub_1C214AD70();
  uint64_t v4 = *(void *)(v24 - 8);
  MEMORY[0x1F4188790](v24);
  uint64_t v23 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1C214AD10();
  MEMORY[0x1F4188790](v6);
  uint64_t v7 = sub_1C214A420();
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v22 = OBJC_IVAR____TtC19HealthMedicationsUI26MedicationScheduleObserver_queue;
  v21[0] = sub_1C1F12718(0, (unint64_t *)&qword_1EBF0CB10);
  uint64_t v8 = v1;
  sub_1C214A410();
  uint64_t v30 = MEMORY[0x1E4FBC860];
  sub_1C1F404F4(&qword_1EA2C3428, MEMORY[0x1E4FBCC10]);
  uint64_t v9 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FBCC10];
  sub_1C1F3F578(0, &qword_1EA2C3430, MEMORY[0x1E4FBCC10], MEMORY[0x1E4FBB320]);
  sub_1C1F4053C(&qword_1EA2C3438, &qword_1EA2C3430, v9);
  sub_1C214B640();
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v23, *MEMORY[0x1E4FBCC58], v24);
  *(void *)(v21[1] + v22) = sub_1C214ADA0();
  uint64_t v10 = &v8[OBJC_IVAR____TtC19HealthMedicationsUI26MedicationScheduleObserver_dateInterval];
  uint64_t v11 = sub_1C21475B0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v10, 1, 1, v11);
  *(void *)&v8[OBJC_IVAR____TtC19HealthMedicationsUI26MedicationScheduleObserver_scheduleItemObserverTask] = 0;
  unint64_t v12 = &v8[OBJC_IVAR____TtC19HealthMedicationsUI26MedicationScheduleObserver__scheduleItems];
  uint64_t v30 = MEMORY[0x1E4FBC860];
  sub_1C1F3F800();
  uint64_t v13 = v25;
  sub_1C2149F40();
  (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v12, v13, v27);
  uint64_t v14 = v28;
  *(void *)&v8[OBJC_IVAR____TtC19HealthMedicationsUI26MedicationScheduleObserver_healthStore] = v28;
  id v15 = objc_allocWithZone(MEMORY[0x1E4F66B38]);
  id v16 = v14;
  id v17 = objc_msgSend(v15, sel_initWithHealthStore_, v16);
  *(void *)&v8[OBJC_IVAR____TtC19HealthMedicationsUI26MedicationScheduleObserver_scheduleControl] = v17;
  sub_1C21493C0();
  swift_allocObject();
  id v18 = v16;
  *(void *)&v8[OBJC_IVAR____TtC19HealthMedicationsUI26MedicationScheduleObserver_scheduleItemDataSource] = sub_1C21493B0();

  uint64_t v19 = (objc_class *)type metadata accessor for MedicationScheduleObserver();
  v29.receiver = v8;
  v29.super_class = v19;
  return objc_msgSendSuper2(&v29, sel_init);
}

uint64_t type metadata accessor for MedicationScheduleObserver()
{
  uint64_t result = qword_1EA2C33A8;
  if (!qword_1EA2C33A8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1C1F3F578(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C1F3F5DC(uint64_t a1, uint64_t a2)
{
  sub_1C1F3F578(0, (unint64_t *)&unk_1EBF0B1B0, MEMORY[0x1E4F26E60], MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C1F3F670()
{
  swift_unknownObjectWeakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C1F3F6AC()
{
  uint64_t v2 = *(void *)(sub_1C21475B0() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = v0 + v3;
  uint64_t v5 = *(void *)(v0 + ((*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v6;
  *uint64_t v6 = v1;
  v6[1] = sub_1C1F405A0;
  v6[5] = v5;
  uint64_t v7 = (void *)swift_task_alloc();
  v6[6] = v7;
  *uint64_t v7 = v6;
  v7[1] = sub_1C1F3ED04;
  return MEMORY[0x1F411F778](v4);
}

void sub_1C1F3F800()
{
  if (!qword_1EA2C3318)
  {
    sub_1C1F12718(255, &qword_1EA2C3320);
    unint64_t v0 = sub_1C214A830();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C3318);
    }
  }
}

uint64_t sub_1C1F3F868(uint64_t a1, uint64_t a2)
{
  sub_1C1F3F578(0, (unint64_t *)&unk_1EBF0B1B0, MEMORY[0x1E4F26E60], MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C1F3F8FC(uint64_t a1)
{
  return sub_1C1F3DB04(a1, *(void *)(v1 + 16));
}

uint64_t sub_1C1F3F904()
{
  return MEMORY[0x1E4F1ABE8];
}

uint64_t sub_1C1F3F910()
{
  return type metadata accessor for MedicationScheduleObserver();
}

void sub_1C1F3F918()
{
  sub_1C1F3F578(319, (unint64_t *)&unk_1EBF0B1B0, MEMORY[0x1E4F26E60], MEMORY[0x1E4FBB718]);
  if (v0 <= 0x3F)
  {
    sub_1C1F3F578(319, (unint64_t *)&unk_1EA2C33C0, (uint64_t (*)(uint64_t))sub_1C1F3F800, MEMORY[0x1E4F1AC70]);
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

uint64_t method lookup function for MedicationScheduleObserver(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MedicationScheduleObserver);
}

uint64_t dispatch thunk of MedicationScheduleObserver.__allocating_init(healthStore:)()
{
  return (*(uint64_t (**)(void))(v0 + 232))();
}

uint64_t dispatch thunk of MedicationScheduleObserver.scheduleControlDidRescheduleItems()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xF8))();
}

uint64_t dispatch thunk of MedicationScheduleObserver.observeChanges(in:)(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(int **)((*MEMORY[0x1E4FBC8C8] & *v2) + 0x100);
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))((char *)v6 + *v6);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_1C1F405A0;
  return v9(a1, a2);
}

uint64_t sub_1C1F3FBF4()
{
  swift_release();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C1F3FC34()
{
  return sub_1C1F3D304(*(void *)(v0 + 16));
}

void sub_1C1F3FC44(uint64_t a1)
{
  sub_1C1F3DF40(a1, v1);
}

uint64_t sub_1C1F3FC4C()
{
  sub_1C1F3F578(0, &qword_1EA2C33D8, (uint64_t (*)(uint64_t))sub_1C1F3F800, MEMORY[0x1E4F1AC60]);
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(v1 - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = (v4 + 40) & ~v4;
  uint64_t v6 = *(void *)(v3 + 64);
  sub_1C1F3F578(0, &qword_1EA2C33D0, (uint64_t (*)(uint64_t))sub_1C1F3F800, MEMORY[0x1E4FBD038]);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  uint64_t v10 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = (v5 + v6 + v10) & ~v10;
  uint64_t v12 = v11 + *(void *)(v9 + 64);
  uint64_t v13 = v4 | v10 | 7;
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0 + v5, v2);
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v0 + v11, v8);

  return MEMORY[0x1F4186498](v0, v12, v13);
}

uint64_t sub_1C1F3FE00(uint64_t a1)
{
  sub_1C1F3F578(0, &qword_1EA2C33D8, (uint64_t (*)(uint64_t))sub_1C1F3F800, MEMORY[0x1E4F1AC60]);
  unint64_t v5 = (*(unsigned __int8 *)(*(void *)(v4 - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v4 - 8) + 80);
  uint64_t v6 = *(void *)(*(void *)(v4 - 8) + 64);
  sub_1C1F3F578(0, &qword_1EA2C33D0, (uint64_t (*)(uint64_t))sub_1C1F3F800, MEMORY[0x1E4FBD038]);
  uint64_t v8 = *(unsigned __int8 *)(*(void *)(v7 - 8) + 80);
  unint64_t v9 = v5 + v6 + v8;
  uint64_t v10 = v1[2];
  uint64_t v11 = v1[3];
  uint64_t v12 = v1[4];
  uint64_t v13 = (uint64_t)v1 + v5;
  uint64_t v14 = (uint64_t)v1 + (v9 & ~v8);
  id v15 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v15;
  *id v15 = v2;
  v15[1] = sub_1C1F405A0;
  return sub_1C1F3DFD8(a1, v10, v11, v12, v13, v14);
}

unint64_t sub_1C1F3FFB0()
{
  unint64_t result = qword_1EA2C3400;
  if (!qword_1EA2C3400)
  {
    sub_1C1F3F578(255, &qword_1EA2C33D8, (uint64_t (*)(uint64_t))sub_1C1F3F800, MEMORY[0x1E4F1AC60]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C3400);
  }
  return result;
}

void sub_1C1F40038(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, unint64_t))
{
  if (!*a2)
  {
    sub_1C1F3F578(255, &qword_1EA2C33D8, (uint64_t (*)(uint64_t))sub_1C1F3F800, MEMORY[0x1E4F1AC60]);
    uint64_t v7 = v6;
    unint64_t v8 = sub_1C1F3FFB0();
    unint64_t v9 = a3(a1, v7, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

unint64_t sub_1C1F400D4()
{
  unint64_t result = qword_1EA2C3410;
  if (!qword_1EA2C3410)
  {
    sub_1C1F40038(255, &qword_1EA2C3408, MEMORY[0x1E4F1AB38]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C3410);
  }
  return result;
}

uint64_t sub_1C1F40148(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1C1F3F578(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t objectdestroy_2Tm()
{
  uint64_t v1 = sub_1C21475B0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();

  return MEMORY[0x1F4186498](v0, v6, v5);
}

uint64_t sub_1C1F402AC()
{
  uint64_t v2 = *(void *)(sub_1C21475B0() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = v0 + v3;
  uint64_t v5 = *(void *)(v0 + ((*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8));
  unint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v6;
  *unint64_t v6 = v1;
  v6[1] = sub_1C1F40400;
  v6[5] = v5;
  uint64_t v7 = (void *)swift_task_alloc();
  v6[6] = v7;
  *uint64_t v7 = v6;
  v7[1] = sub_1C1F3ED04;
  return MEMORY[0x1F411F778](v4);
}

uint64_t sub_1C1F40400()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1C1F404F4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C1F4053C(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C1F3F578(255, a2, a3, MEMORY[0x1E4FBB320]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for ManualNameStepViewController()
{
  uint64_t result = qword_1EA2C3440;
  if (!qword_1EA2C3440) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C1F405F0()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1C1F40630()
{
  sub_1C1F40A2C();
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v5 = (char *)v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8[1] = *(void *)(*(void *)(v0 + qword_1EA2C4208) + 24);
  sub_1C1F40AC8();
  sub_1C1F40B30((unint64_t *)&qword_1EA2C3460, (void (*)(uint64_t))sub_1C1F40AC8);
  swift_retain();
  sub_1C2149FD0();
  swift_release();
  sub_1C1F40B30(&qword_1EA2C3468, (void (*)(uint64_t))sub_1C1F40A2C);
  uint64_t v6 = sub_1C2149FC0();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v6;
}

BOOL sub_1C1F407E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C2147530();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a2) {
    return 0;
  }
  v13[0] = a1;
  v13[1] = a2;
  swift_bridgeObjectRetain();
  sub_1C2147520();
  sub_1C1F40B78();
  uint64_t v8 = sub_1C214B580();
  unint64_t v10 = v9;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v11 = HIBYTE(v10) & 0xF;
  if ((v10 & 0x2000000000000000) == 0) {
    uint64_t v11 = v8 & 0xFFFFFFFFFFFFLL;
  }
  return v11 != 0;
}

BOOL sub_1C1F40920@<W0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  BOOL result = sub_1C1F407E8(*a1, a1[1]);
  *a2 = result;
  return result;
}

void sub_1C1F40954(unsigned char *a1@<X8>)
{
  *a1 = 65;
}

void sub_1C1F40960()
{
}

void sub_1C1F409BC()
{
}

id sub_1C1F409EC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ManualNameStepViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1C1F40A24()
{
  return type metadata accessor for ManualNameStepViewController();
}

void sub_1C1F40A2C()
{
  if (!qword_1EA2C3450)
  {
    sub_1C1F40AC8();
    sub_1C1F40B30((unint64_t *)&qword_1EA2C3460, (void (*)(uint64_t))sub_1C1F40AC8);
    unint64_t v0 = sub_1C2149D00();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C3450);
    }
  }
}

void sub_1C1F40AC8()
{
  if (!qword_1EA2C3458)
  {
    sub_1C1F24FA8();
    unint64_t v0 = sub_1C2149EA0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C3458);
    }
  }
}

uint64_t sub_1C1F40B30(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C1F40B78()
{
  unint64_t result = qword_1EBF0C760;
  if (!qword_1EBF0C760)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBF0C760);
  }
  return result;
}

BOOL == infix(_:_:)(void *a1, void *a2)
{
  uint64_t v3 = a1[3];
  uint64_t v4 = a1[4];
  __swift_project_boxed_opaque_existential_0(a1, v3);
  uint64_t v5 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v3, v4);
  id v6 = objc_msgSend(v5, sel_identifier);

  id v7 = objc_msgSend(v6, sel_rawIdentifier);
  uint64_t v8 = a2[3];
  uint64_t v9 = a2[4];
  __swift_project_boxed_opaque_existential_0(a2, v8);
  unint64_t v10 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(v8, v9);
  id v11 = objc_msgSend(v10, sel_identifier);

  id v12 = objc_msgSend(v11, sel_rawIdentifier);
  return v7 == v12;
}

id InteractionResultDetailDataProvider.interactionResult.getter()
{
  return *v0;
}

void InteractionResultDetailDataProvider.interactionResult.setter(void *a1)
{
  id *v1 = a1;
}

uint64_t (*InteractionResultDetailDataProvider.interactionResult.modify())()
{
  return nullsub_1;
}

uint64_t InteractionResultDetailDataProvider.stackedMedmojiDisplayable.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C1F236D8(v1 + 8, a1);
}

uint64_t InteractionResultDetailDataProvider.stackedMedmojiDisplayable.setter(long long *a1)
{
  uint64_t v3 = v1 + 8;
  __swift_destroy_boxed_opaque_existential_0(v3);

  return sub_1C1F31280(a1, v3);
}

uint64_t (*InteractionResultDetailDataProvider.stackedMedmojiDisplayable.modify())()
{
  return nullsub_1;
}

uint64_t InteractionResultDetailDataProvider.firstItemName.getter()
{
  uint64_t v1 = *(void *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t InteractionResultDetailDataProvider.firstItemName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 48) = a1;
  *(void *)(v2 + 56) = a2;
  return result;
}

uint64_t (*InteractionResultDetailDataProvider.firstItemName.modify())()
{
  return nullsub_1;
}

uint64_t InteractionResultDetailDataProvider.firstItemDetailsProviding.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C1F236D8(v1 + 64, a1);
}

uint64_t InteractionResultDetailDataProvider.firstItemDetailsProviding.setter(long long *a1)
{
  uint64_t v3 = v1 + 64;
  __swift_destroy_boxed_opaque_existential_0(v3);

  return sub_1C1F31280(a1, v3);
}

uint64_t (*InteractionResultDetailDataProvider.firstItemDetailsProviding.modify())()
{
  return nullsub_1;
}

uint64_t InteractionResultDetailDataProvider.firstItemIngredients.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t InteractionResultDetailDataProvider.firstItemIngredients.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 104) = a1;
  return result;
}

uint64_t (*InteractionResultDetailDataProvider.firstItemIngredients.modify())()
{
  return nullsub_1;
}

uint64_t InteractionResultDetailDataProvider.secondItemName.getter()
{
  uint64_t v1 = *(void *)(v0 + 112);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t InteractionResultDetailDataProvider.secondItemName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 112) = a1;
  *(void *)(v2 + 120) = a2;
  return result;
}

uint64_t (*InteractionResultDetailDataProvider.secondItemName.modify())()
{
  return nullsub_1;
}

uint64_t InteractionResultDetailDataProvider.secondItemDetailsProviding.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C1F236D8(v1 + 128, a1);
}

uint64_t InteractionResultDetailDataProvider.secondItemDetailsProviding.setter(long long *a1)
{
  uint64_t v3 = v1 + 128;
  __swift_destroy_boxed_opaque_existential_0(v3);

  return sub_1C1F31280(a1, v3);
}

uint64_t (*InteractionResultDetailDataProvider.secondItemDetailsProviding.modify())()
{
  return nullsub_1;
}

uint64_t InteractionResultDetailDataProvider.secondItemIngredients.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t InteractionResultDetailDataProvider.secondItemIngredients.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 168) = a1;
  return result;
}

uint64_t (*InteractionResultDetailDataProvider.secondItemIngredients.modify())()
{
  return nullsub_1;
}

uint64_t InteractionResultDetailDataProvider.education.getter()
{
  uint64_t v1 = *(void *)(v0 + 176);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t InteractionResultDetailDataProvider.education.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 176) = a1;
  *(void *)(v2 + 184) = a2;
  return result;
}

uint64_t (*InteractionResultDetailDataProvider.education.modify())()
{
  return nullsub_1;
}

uint64_t InteractionResultDetailDataProvider.attributions.getter()
{
  uint64_t v1 = *(void *)(v0 + 192);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t InteractionResultDetailDataProvider.attributions.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 192) = a1;
  *(void *)(v2 + 200) = a2;
  return result;
}

uint64_t (*InteractionResultDetailDataProvider.attributions.modify())()
{
  return nullsub_1;
}

uint64_t InteractionResultDetailDataProvider.copySortingItemsByName()@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v5 = v1[6];
  uint64_t v4 = v1[7];
  id v7 = v1[14];
  id v6 = v1[15];
  BOOL v8 = v7 == v5 && v6 == v4;
  if (v8 || (sub_1C214BA80() & 1) == 0)
  {
    return sub_1C1F412E4((uint64_t)v1, (uint64_t)a1);
  }
  else
  {
    uint64_t v17 = *v1;
    uint64_t v9 = (uint64_t)v1[4];
    unint64_t v10 = v1[5];
    __swift_project_boxed_opaque_existential_0(v1 + 1, v9);
    id v16 = (void (*)(uint64_t, void *))v10[5];
    id v18 = v17;
    v16(v9, v10);
    sub_1C1F236D8((uint64_t)(v1 + 16), (uint64_t)(a1 + 8));
    sub_1C1F236D8((uint64_t)(v1 + 8), (uint64_t)(a1 + 16));
    id v11 = v1[22];
    id v12 = v1[23];
    uint64_t v14 = v2[24];
    uint64_t v13 = v2[25];
    *a1 = v18;
    a1[6] = v7;
    a1[7] = v6;
    a1[13] = 0;
    a1[14] = v5;
    a1[15] = v4;
    a1[21] = 0;
    a1[22] = v11;
    a1[23] = v12;
    a1[24] = v14;
    a1[25] = v13;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
}

uint64_t sub_1C1F412E4(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1C1F4131C@<X0>(uint64_t a1@<X8>)
{
  return sub_1C1F236D8(v1 + 8, a1);
}

uint64_t sub_1C1F4133C()
{
  uint64_t v1 = *(void *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1C1F4136C@<X0>(uint64_t a1@<X8>)
{
  return sub_1C1F236D8(v1 + 64, a1);
}

uint64_t sub_1C1F4138C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C1F41394()
{
  uint64_t v1 = *(void *)(v0 + 112);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1C1F413C4@<X0>(uint64_t a1@<X8>)
{
  return sub_1C1F236D8(v1 + 128, a1);
}

uint64_t sub_1C1F413E4()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C1F413EC()
{
  uint64_t v1 = *(void *)(v0 + 176);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1C1F4141C()
{
  uint64_t v1 = *(void *)(v0 + 192);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t dispatch thunk of InteractionResultDetailItemDisplayable.interactionResult.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of InteractionResultDetailItemDisplayable.stackedMedmojiDisplayable.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of InteractionResultDetailItemDisplayable.firstItemName.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of InteractionResultDetailItemDisplayable.firstItemDetailsProviding.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of InteractionResultDetailItemDisplayable.firstItemIngredients.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of InteractionResultDetailItemDisplayable.secondItemName.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of InteractionResultDetailItemDisplayable.secondItemDetailsProviding.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of InteractionResultDetailItemDisplayable.secondItemIngredients.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of InteractionResultDetailItemDisplayable.education.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of InteractionResultDetailItemDisplayable.attributions.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t destroy for InteractionResultDetailDataProvider(id *a1)
{
  __swift_destroy_boxed_opaque_existential_0((uint64_t)(a1 + 1));
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)(a1 + 8));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)(a1 + 16));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for InteractionResultDetailDataProvider(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  uint64_t v5 = a1 + 8;
  uint64_t v6 = a2 + 8;
  long long v7 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v7;
  uint64_t v8 = v7;
  uint64_t v9 = **(void (***)(uint64_t, uint64_t, uint64_t))(v7 - 8);
  id v10 = v4;
  v9(v5, v6, v8);
  uint64_t v11 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v11;
  long long v12 = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 88) = v12;
  uint64_t v13 = v12;
  uint64_t v14 = **(void (***)(uint64_t, uint64_t, uint64_t))(v12 - 8);
  swift_bridgeObjectRetain();
  v14(a1 + 64, a2 + 64, v13);
  uint64_t v15 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v15;
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  long long v16 = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 152) = v16;
  uint64_t v17 = v16;
  id v18 = **(void (***)(uint64_t, uint64_t, uint64_t))(v16 - 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v18(a1 + 128, a2 + 128, v17);
  uint64_t v19 = *(void *)(a2 + 176);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = v19;
  uint64_t v20 = *(void *)(a2 + 192);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = v20;
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for InteractionResultDetailDataProvider(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 8), (uint64_t *)(a2 + 8));
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 64), (uint64_t *)(a2 + 64));
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 128), (uint64_t *)(a2 + 128));
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t *__swift_assign_boxed_opaque_existential_1(uint64_t *result, uint64_t *a2)
{
  if (result != a2)
  {
    uint64_t v3 = result;
    uint64_t v4 = result[3];
    uint64_t v5 = a2[3];
    if (v4 == v5)
    {
      uint64_t v10 = *(void *)(v4 - 8);
      if ((*(unsigned char *)(v10 + 82) & 2) != 0)
      {
        uint64_t v12 = *a2;
        swift_retain();
        uint64_t result = (uint64_t *)swift_release();
        *uint64_t v3 = v12;
      }
      else
      {
        uint64_t v11 = *(uint64_t (**)(void))(v10 + 24);
        return (uint64_t *)v11();
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      uint64_t v6 = *(void *)(v4 - 8);
      uint64_t v7 = *(void *)(v5 - 8);
      uint64_t v8 = v7;
      int v9 = *(_DWORD *)(v7 + 80);
      if ((*(unsigned char *)(v6 + 82) & 2) != 0)
      {
        if ((v9 & 0x20000) != 0)
        {
          *uint64_t result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t *, uint64_t))(v6 + 32))(v13, result, v4);
        if ((v9 & 0x20000) != 0)
        {
          *uint64_t v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v13, v4);
      }
    }
  }
  return result;
}

__n128 __swift_memcpy208_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  long long v2 = *(_OWORD *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  long long v5 = *(_OWORD *)(a2 + 80);
  long long v6 = *(_OWORD *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v7;
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 96) = v6;
  __n128 result = *(__n128 *)(a2 + 144);
  long long v9 = *(_OWORD *)(a2 + 160);
  long long v10 = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 192) = v10;
  *(__n128 *)(a1 + 144) = result;
  *(_OWORD *)(a1 + 160) = v9;
  return result;
}

uint64_t assignWithTake for InteractionResultDetailDataProvider(uint64_t a1, uint64_t a2)
{
  long long v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  __swift_destroy_boxed_opaque_existential_0(a1 + 8);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(a1 + 64);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  uint64_t v6 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v7;
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(a1 + 128);
  long long v8 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v8;
  uint64_t v9 = *(void *)(a2 + 168);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(a2 + 184);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(a2 + 200);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(void *)(a1 + 200) = v11;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for InteractionResultDetailDataProvider(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 208)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for InteractionResultDetailDataProvider(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 200) = 0;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 208) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 208) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for InteractionResultDetailDataProvider()
{
  return &type metadata for InteractionResultDetailDataProvider;
}

uint64_t sub_1C1F41C58()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_0(v0 + 24);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(v0 + 80);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(v0 + 144);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1C1F41CB0()
{
  sub_1C1F41C58();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for InteractionResultDetailDataSourceProvider()
{
  return self;
}

uint64_t sub_1C1F41D08()
{
  return sub_1C1F41D30();
}

uint64_t sub_1C1F41D30()
{
  sub_1C1F24848();
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1C214FCD0;
  uint64_t v2 = v0[2];
  sub_1C1F236D8((uint64_t)(v0 + 3), (uint64_t)v14);
  uint64_t v3 = v0[8];
  uint64_t v4 = v0[9];
  sub_1C1F236D8((uint64_t)(v0 + 10), (uint64_t)v13);
  uint64_t v5 = v0[15];
  uint64_t v6 = v0[16];
  uint64_t v7 = v0[17];
  sub_1C1F236D8((uint64_t)(v0 + 18), (uint64_t)v12);
  uint64_t v8 = v0[23];
  type metadata accessor for InteractionDetailDataSource();
  swift_allocObject();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_1C2106F70(v2, (uint64_t)v14, v3, v4, (uint64_t)v13, v5, v6, v7, (uint64_t)v12, v8);
  unint64_t v10 = sub_1C1F41EA4();
  *(void *)(v1 + 32) = v9;
  *(void *)(v1 + 40) = v10;
  return v1;
}

unint64_t sub_1C1F41E50()
{
  unint64_t result = qword_1EA2C2CE0;
  if (!qword_1EA2C2CE0)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA2C2CE0);
  }
  return result;
}

unint64_t sub_1C1F41EA4()
{
  unint64_t result = qword_1EA2C3470;
  if (!qword_1EA2C3470)
  {
    type metadata accessor for InteractionDetailDataSource();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C3470);
  }
  return result;
}

uint64_t InteractionSeperatorLineDataSource.__allocating_init()()
{
  return InteractionSeperatorLineDataSource.init()();
}

uint64_t InteractionSeperatorLineDataSource.init()()
{
  uint64_t v0 = sub_1C2147B20();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1F421FC(0, (unint64_t *)&qword_1EA2C2DD0, MEMORY[0x1E4F66468]);
  sub_1C2148540();
  uint64_t v4 = swift_allocObject();
  long long v11 = xmmword_1C214FCD0;
  *(_OWORD *)(v4 + 16) = xmmword_1C214FCD0;
  sub_1C1F421FC(0, (unint64_t *)&qword_1EBF0C958, (void (*)(uint64_t))sub_1C1F1CB5C);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = v11;
  uint64_t v6 = type metadata accessor for InteractionSeparatorLineItem();
  uint64_t v7 = swift_allocObject();
  sub_1C2147B10();
  uint64_t v8 = (uint64_t *)(v7 + OBJC_IVAR____TtC19HealthMedicationsUI28InteractionSeparatorLineItem_reuseIdentifier);
  type metadata accessor for InteractionSeparatorLineCell();
  sub_1C1F425FC(&qword_1EA2C3478, (void (*)(uint64_t))type metadata accessor for InteractionSeparatorLineCell);
  *uint64_t v8 = sub_1C21481D0();
  v8[1] = v9;
  *(void *)(v5 + 56) = v6;
  *(void *)(v5 + 64) = sub_1C1F425FC(&qword_1EA2C3480, (void (*)(uint64_t))type metadata accessor for InteractionSeparatorLineItem);
  *(void *)(v5 + 32) = v7;
  sub_1C2147B10();
  sub_1C2147AD0();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  sub_1C2148520();
  return sub_1C2147F50();
}

void sub_1C1F421FC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C214BA50();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1C1F42250()
{
  uint64_t v0 = sub_1C2148710();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = MEMORY[0x1F4188790](v0);
  unint64_t v4 = &v14[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v2);
  uint64_t v6 = &v14[-v5];
  sub_1C2148690();
  uint64_t v7 = (void (*)(unsigned char *, void))sub_1C21486D0();
  *uint64_t v8 = 0x4024000000000000;
  v7(v14, 0);
  uint64_t v9 = (void (*)(unsigned char *, void))sub_1C21486D0();
  *(void *)(v10 + 16) = 0;
  v9(v14, 0);
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v1 + 16))(v4, v6, v0);
  uint64_t v11 = sub_1C2148700();
  uint64_t v12 = *(void (**)(unsigned char *, uint64_t))(v1 + 8);
  v12(v4, v0);
  v12(v6, v0);
  return v11;
}

void InteractionSeperatorLineDataSource.__allocating_init(arrangedSections:isHidden:)()
{
}

void InteractionSeperatorLineDataSource.init(arrangedSections:isHidden:)()
{
}

uint64_t InteractionSeperatorLineDataSource.__deallocating_deinit()
{
  _s19HealthMedicationsUI34InteractionSeperatorLineDataSourceCfd_0();

  return swift_deallocClassInstance();
}

uint64_t sub_1C1F42478()
{
  return sub_1C2148B80();
}

Swift::Void __swiftcall InteractionSeperatorLineDataSource.registerCells(for:)(UICollectionView *a1)
{
}

uint64_t sub_1C1F42544()
{
  return sub_1C214ACC0();
}

uint64_t sub_1C1F425B4()
{
  return sub_1C1F425FC(&qword_1EA2C3488, (void (*)(uint64_t))type metadata accessor for InteractionSeperatorLineDataSource);
}

uint64_t sub_1C1F425FC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for InteractionSeperatorLineDataSource()
{
  uint64_t result = qword_1EA2C3490;
  if (!qword_1EA2C3490) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C1F42690()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for InteractionSeperatorLineDataSource(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for InteractionSeperatorLineDataSource);
}

uint64_t dispatch thunk of InteractionSeperatorLineDataSource.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + class metadata base offset for InteractionSeperatorLineDataSource))();
}

uint64_t dispatch thunk of InteractionSeperatorLineDataSource.layout(for:environment:)()
{
  return (*(uint64_t (**)(void))(class metadata base offset for InteractionSeperatorLineDataSource + *v0 + 8))();
}

uint64_t sub_1C1F42744()
{
  return type metadata accessor for InteractionSeperatorLineDataSource();
}

uint64_t MedicationsAsNeededDoseDataSource.__allocating_init(healthStore:listManager:datePublisher:didTapRecordDoseHandler:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return MedicationsAsNeededDoseDataSource.init(healthStore:listManager:datePublisher:didTapRecordDoseHandler:)(a1, a2, a3, a4, a5);
}

uint64_t MedicationsAsNeededDoseDataSource.init(healthStore:listManager:datePublisher:didTapRecordDoseHandler:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v19 = sub_1C2147B20();
  uint64_t v12 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19);
  uint64_t v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = (uint64_t *)(v6 + qword_1EA2C34A0);
  *uint64_t v15 = 0;
  v15[1] = 0;
  *(void *)(v6 + qword_1EA2C34A8) = 0;
  *(void *)(v6 + qword_1EA2C34B0) = a1;
  uint64_t v21 = a2;
  uint64_t v22 = a3;
  *(void *)(v6 + qword_1EA2C34B8) = a2;
  *(void *)(v6 + qword_1EA2C34C0) = a3;
  uint64_t v16 = *v15;
  *uint64_t v15 = a4;
  v15[1] = a5;
  id v20 = a1;
  swift_retain();
  swift_retain();
  sub_1C1F1325C(a4);
  sub_1C1F31118(v16);
  v23[0] = 0;
  v23[1] = 0xE000000000000000;
  sub_1C214B7C0();
  swift_bridgeObjectRelease();
  strcpy((char *)v23, "MutableArray<");
  HIWORD(v23[1]) = -4864;
  sub_1C2147B10();
  sub_1C2147AD0();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v19);
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  sub_1C214A6C0();
  uint64_t v17 = sub_1C2148590();
  swift_retain();
  sub_1C1F429EC();
  sub_1C1F31118(a4);
  swift_release();

  swift_release();
  swift_release();
  return v17;
}

uint64_t sub_1C1F429EC()
{
  sub_1C1F443D0(0, &qword_1EBF0C7E8, MEMORY[0x1E4FBCC28], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v28 = (char *)&v27 - v2;
  sub_1C1F43C30();
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1F43D50();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v29 = v8;
  uint64_t v30 = v9;
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1F43F08();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v31 = v12;
  uint64_t v32 = v13;
  MEMORY[0x1F4188790](v12);
  uint64_t v27 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v34 = (id)sub_1C2149730();
  uint64_t v15 = (void (*)(uint64_t))MEMORY[0x1E4F677F0];
  sub_1C1F43E54(0, (unint64_t *)&qword_1EBF0C690, MEMORY[0x1E4F677F0]);
  sub_1C1F43CE8();
  sub_1C1F43EB8((unint64_t *)&qword_1EBF0C688, (unint64_t *)&qword_1EBF0C690, v15);
  sub_1C214A020();
  swift_release();
  sub_1C1F44318(&qword_1EBF0C648, (void (*)(uint64_t))sub_1C1F43C30);
  uint64_t v16 = (void *)sub_1C2149FC0();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t v33 = *(void *)(v0 + qword_1EA2C34C0);
  id v34 = v16;
  sub_1C1F43E54(0, &qword_1EBF0C6C0, (void (*)(uint64_t))sub_1C1F43CE8);
  uint64_t v17 = (void (*)(uint64_t))MEMORY[0x1E4F27928];
  sub_1C1F43E54(0, &qword_1EBF0C670, MEMORY[0x1E4F27928]);
  sub_1C1F43EB8(&qword_1EBF0C6B8, &qword_1EBF0C6C0, (void (*)(uint64_t))sub_1C1F43CE8);
  sub_1C1F43EB8(&qword_1EBF0C668, &qword_1EBF0C670, v17);
  sub_1C214A010();
  swift_release();
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0CB10);
  id v34 = (id)sub_1C214AD80();
  uint64_t v18 = sub_1C214AD20();
  uint64_t v19 = (uint64_t)v28;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v28, 1, 1, v18);
  sub_1C1F44318(&qword_1EBF0C628, (void (*)(uint64_t))sub_1C1F43D50);
  sub_1C1F43FD4();
  id v20 = v27;
  uint64_t v21 = v29;
  sub_1C214A0A0();
  sub_1C1F441C8(v19);

  (*(void (**)(char *, uint64_t))(v30 + 8))(v11, v21);
  uint64_t v22 = swift_allocObject();
  swift_weakInit();
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = sub_1C1F4428C;
  *(void *)(v23 + 24) = v22;
  sub_1C1F44318(&qword_1EBF0C658, (void (*)(uint64_t))sub_1C1F43F08);
  uint64_t v24 = v31;
  uint64_t v25 = sub_1C214A0F0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v20, v24);
  *(void *)(v0 + qword_1EA2C34A8) = v25;
  return swift_release();
}

uint64_t sub_1C1F42FB8(unint64_t a1, uint64_t a2)
{
  uint64_t v48 = a2;
  uint64_t v3 = sub_1C2147CF0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1C2147AC0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x1F4188790](v9);
  uint64_t v14 = (char *)&v40 - v13;
  uint64_t v15 = MEMORY[0x1F4188790](v12);
  uint64_t v47 = (char *)&v40 - v16;
  MEMORY[0x1F4188790](v15);
  uint64_t v18 = (char *)&v40 - v17;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v43 = v4;
    uint64_t v45 = result;
    if (a1 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v20 = sub_1C214B930();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v20 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    double v44 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
    v44(v18, v48, v7);
    uint64_t v46 = v8;
    if (v20)
    {
      sub_1C2147CB0();
      sub_1C2147AB0();
      sub_1C2147BC0();
      uint64_t v21 = *(void (**)(char *, uint64_t))(v8 + 8);
      v21(v11, v7);
      (*(void (**)(char *, uint64_t))(v43 + 8))(v6, v3);
      uint64_t v22 = v47;
      sub_1C21479F0();
      v21(v14, v7);
      int v23 = sub_1C2147A10();
      v21(v22, v7);
      LODWORD(v43) = v23 ^ 1;
    }
    else
    {
      LODWORD(v43) = 0;
      uint64_t v21 = *(void (**)(char *, uint64_t))(v8 + 8);
    }
    v21(v18, v7);
    sub_1C1F443D0(0, &qword_1EBF0C968, type metadata accessor for MedicationsRecordDoseItem, MEMORY[0x1E4FBBE00]);
    uint64_t v24 = (int *)type metadata accessor for MedicationsRecordDoseItem(0);
    unint64_t v25 = (*(unsigned __int8 *)(*((void *)v24 - 1) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*((void *)v24 - 1) + 80);
    uint64_t v26 = swift_allocObject();
    *(_OWORD *)(v26 + 16) = xmmword_1C214FCD0;
    uint64_t v27 = (uint64_t *)(v26 + v25);
    uint64_t v28 = v45;
    uint64_t v29 = qword_1EBF0CA00;
    id v42 = *(id *)(v45 + qword_1EA2C34B0);
    if (v29 != -1) {
      swift_once();
    }
    id v30 = (id)qword_1EBF0CA18;
    swift_bridgeObjectRetain();
    uint64_t v31 = sub_1C2147730();
    uint64_t v40 = v32;
    uint64_t v41 = v31;
    swift_bridgeObjectRelease();

    uint64_t v33 = *(void *)(v28 + qword_1EA2C34B8);
    id v34 = v47;
    v44(v47, v48, v7);
    uint64_t v36 = *(void *)(v28 + qword_1EA2C34A0);
    uint64_t v35 = *(void *)(v28 + qword_1EA2C34A0 + 8);
    type metadata accessor for MedicationsRecordDoseCollectionViewCell(0);
    swift_retain();
    sub_1C1F1325C(v36);
    sub_1C1F44318(&qword_1EBF0C490, (void (*)(uint64_t))type metadata accessor for MedicationsRecordDoseCollectionViewCell);
    uint64_t *v27 = sub_1C21481D0();
    v27[1] = v37;
    uint64_t v38 = (uint64_t *)((char *)v27 + v24[10]);
    v27[4] = (uint64_t)v42;
    v27[5] = v33;
    uint64_t v39 = v40;
    v27[2] = v41;
    v27[3] = v39;
    (*(void (**)(char *, char *, uint64_t))(v46 + 32))((char *)v27 + v24[8], v34, v7);
    *((unsigned char *)v27 + v24[9]) = v43 & 1;
    *uint64_t v38 = v36;
    v38[1] = v35;
    sub_1C1F37CB0(v26);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    sub_1C21485C0();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void MedicationsAsNeededDoseDataSource.__allocating_init(arrangedSections:identifier:)()
{
}

void MedicationsAsNeededDoseDataSource.init(arrangedSections:identifier:)()
{
}

uint64_t sub_1C1F435E0()
{
  swift_release();
  swift_release();
  sub_1C1F31118(*(void *)(v0 + qword_1EA2C34A0));

  return swift_release();
}

uint64_t MedicationsAsNeededDoseDataSource.deinit()
{
  uint64_t v0 = sub_1C2148610();

  swift_release();
  swift_release();
  sub_1C1F31118(*(void *)(v0 + qword_1EA2C34A0));
  swift_release();
  return v0;
}

uint64_t MedicationsAsNeededDoseDataSource.__deallocating_deinit()
{
  uint64_t v0 = sub_1C2148610();

  swift_release();
  swift_release();
  sub_1C1F31118(*(void *)(v0 + qword_1EA2C34A0));
  swift_release();

  return swift_deallocClassInstance();
}

Swift::Void __swiftcall MedicationsAsNeededDoseDataSource.registerCells(for:)(UICollectionView *a1)
{
}

uint64_t sub_1C1F437D4()
{
  return sub_1C214ACC0();
}

void *MedicationsAsNeededDoseDataSource.layout(for:environment:)()
{
  uint64_t v0 = sub_1C2148710();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2148690();
  id v4 = objc_msgSend(self, sel_systemBackgroundColor);
  sub_1C21486A0();
  uint64_t v5 = (void *)sub_1C2148700();
  objc_msgSend(v5, sel_contentInsets);
  objc_msgSend(v5, sel_setContentInsets_, -10.0);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v5;
}

uint64_t sub_1C1F4395C()
{
  return sub_1C1F44318(&qword_1EA2C34C8, (void (*)(uint64_t))type metadata accessor for MedicationsAsNeededDoseDataSource);
}

uint64_t type metadata accessor for MedicationsAsNeededDoseDataSource()
{
  uint64_t result = qword_1EA2C34D0;
  if (!qword_1EA2C34D0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void *sub_1C1F439F0()
{
  uint64_t v0 = sub_1C2148710();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2148690();
  id v4 = objc_msgSend(self, sel_systemBackgroundColor);
  sub_1C21486A0();
  uint64_t v5 = (void *)sub_1C2148700();
  objc_msgSend(v5, sel_contentInsets);
  objc_msgSend(v5, sel_setContentInsets_, -10.0);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v5;
}

uint64_t sub_1C1F43B08()
{
  return sub_1C2148B80();
}

uint64_t sub_1C1F43B80()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for MedicationsAsNeededDoseDataSource(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MedicationsAsNeededDoseDataSource);
}

uint64_t dispatch thunk of MedicationsAsNeededDoseDataSource.__allocating_init(healthStore:listManager:datePublisher:didTapRecordDoseHandler:)()
{
  return (*(uint64_t (**)(void))(class metadata base offset for MedicationsAsNeededDoseDataSource + v0 + 40))();
}

uint64_t sub_1C1F43C28()
{
  return type metadata accessor for MedicationsAsNeededDoseDataSource();
}

void sub_1C1F43C30()
{
  if (!qword_1EBF0C650)
  {
    uint64_t v0 = (void (*)(uint64_t))MEMORY[0x1E4F677F0];
    sub_1C1F43E54(255, (unint64_t *)&qword_1EBF0C690, MEMORY[0x1E4F677F0]);
    sub_1C1F43CE8();
    sub_1C1F43EB8((unint64_t *)&qword_1EBF0C688, (unint64_t *)&qword_1EBF0C690, v0);
    unint64_t v1 = sub_1C2149D60();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_1EBF0C650);
    }
  }
}

void sub_1C1F43CE8()
{
  if (!qword_1EBF0C790)
  {
    sub_1C1F12718(255, (unint64_t *)&qword_1EBF0C8C0);
    unint64_t v0 = sub_1C214A830();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBF0C790);
    }
  }
}

void sub_1C1F43D50()
{
  if (!qword_1EBF0C630)
  {
    sub_1C1F43E54(255, &qword_1EBF0C6C0, (void (*)(uint64_t))sub_1C1F43CE8);
    unint64_t v0 = (void (*)(uint64_t))MEMORY[0x1E4F27928];
    sub_1C1F43E54(255, &qword_1EBF0C670, MEMORY[0x1E4F27928]);
    sub_1C1F43EB8(&qword_1EBF0C6B8, &qword_1EBF0C6C0, (void (*)(uint64_t))sub_1C1F43CE8);
    sub_1C1F43EB8(&qword_1EBF0C668, &qword_1EBF0C670, v0);
    unint64_t v1 = sub_1C2149CA0();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_1EBF0C630);
    }
  }
}

void sub_1C1F43E54(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C2149E10();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1C1F43EB8(unint64_t *a1, unint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C1F43E54(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C1F43F08()
{
  if (!qword_1EBF0C660)
  {
    sub_1C1F43D50();
    sub_1C1F12718(255, (unint64_t *)&qword_1EBF0CB10);
    sub_1C1F44318(&qword_1EBF0C628, (void (*)(uint64_t))sub_1C1F43D50);
    sub_1C1F43FD4();
    unint64_t v0 = sub_1C2149DF0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBF0C660);
    }
  }
}

unint64_t sub_1C1F43FD4()
{
  unint64_t result = qword_1EBF0C7F0;
  if (!qword_1EBF0C7F0)
  {
    sub_1C1F12718(255, (unint64_t *)&qword_1EBF0CB10);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBF0C7F0);
  }
  return result;
}

uint64_t sub_1C1F4403C@<X0>(void *a1@<X8>)
{
  unint64_t v2 = sub_1C2149740();
  unint64_t v3 = v2;
  uint64_t v10 = MEMORY[0x1E4FBC860];
  if (!(v2 >> 62))
  {
    uint64_t v4 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v4) {
      goto LABEL_3;
    }
LABEL_16:
    swift_bridgeObjectRelease();
    uint64_t v9 = MEMORY[0x1E4FBC860];
LABEL_17:
    uint64_t result = swift_bridgeObjectRelease();
    *a1 = v9;
    return result;
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_1C214B930();
  uint64_t v4 = result;
  if (!result) {
    goto LABEL_16;
  }
LABEL_3:
  if (v4 >= 1)
  {
    for (uint64_t i = 0; i != v4; ++i)
    {
      if ((v3 & 0xC000000000000001) != 0) {
        id v7 = (id)MEMORY[0x1C8753960](i, v3);
      }
      else {
        id v7 = *(id *)(v3 + 8 * i + 32);
      }
      uint64_t v8 = v7;
      self;
      if (swift_dynamicCastObjCClass())
      {
        MEMORY[0x1C87528E0]();
        if (*(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1C214A7D0();
        }
        sub_1C214A820();
        sub_1C214A7A0();
      }
      else
      {
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v9 = v10;
    goto LABEL_17;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C1F441C8(uint64_t a1)
{
  sub_1C1F443D0(0, &qword_1EBF0C7E8, MEMORY[0x1E4FBCC28], MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C1F44254()
{
  swift_weakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C1F4428C(unint64_t a1, uint64_t a2)
{
  return sub_1C1F42FB8(a1, a2);
}

uint64_t sub_1C1F44294()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C1F442CC(char *a1)
{
  unint64_t v3 = *(uint64_t (**)(uint64_t, char *))(v1 + 16);
  uint64_t v4 = *(void *)a1;
  sub_1C1F44360();
  return v3(v4, &a1[*(int *)(v5 + 48)]);
}

uint64_t sub_1C1F44318(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C1F44360()
{
  if (!qword_1EBF0C798)
  {
    sub_1C1F43CE8();
    sub_1C2147AC0();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EBF0C798);
    }
  }
}

void sub_1C1F443D0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1C1F44434(char *a1, uint64_t a2, void *a3)
{
  uint64_t v5 = (uint64_t *)&a1[qword_1EA2C34E8];
  uint64_t v8 = sub_1C214A5F0();
  uint64_t v9 = v6;
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  id v7 = a3;
  swift_bridgeObjectRelease();
  *uint64_t v5 = v8;
  v5[1] = v9;

  sub_1C214B910();
  __break(1u);
}

Swift::Void __swiftcall MedicationSideEffectsViewController.viewDidLoad()()
{
  v1.receiver = v0;
  v1.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v1, sel_viewDidLoad);
  sub_1C1F4454C();
}

void sub_1C1F4454C()
{
  if (qword_1EBF0CA00 != -1) {
    swift_once();
  }
  id v1 = (id)qword_1EBF0CA18;
  swift_bridgeObjectRetain();
  sub_1C2147730();
  swift_bridgeObjectRelease();

  uint64_t v2 = (void *)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_setTitle_, v2, 0xE000000000000000);

  id v3 = objc_msgSend(v0, sel_collectionView);
  if (!v3)
  {
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v4 = v3;
  id v5 = objc_msgSend(self, sel_systemGroupedBackgroundColor);
  objc_msgSend(v4, sel_setBackgroundColor_, v5);

  id v6 = objc_msgSend(v0, sel_collectionView);
  if (!v6)
  {
LABEL_9:
    __break(1u);
    return;
  }
  id v7 = v6;
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  id v8 = (id)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  objc_msgSend(v7, sel_setAccessibilityIdentifier_, v8);
}

void sub_1C1F4474C(void *a1)
{
  v2.receiver = a1;
  v2.super_class = (Class)swift_getObjectType();
  id v1 = v2.receiver;
  objc_msgSendSuper2(&v2, sel_viewDidLoad);
  sub_1C1F4454C();
}

void MedicationSideEffectsViewController.__allocating_init(dataSource:)()
{
}

void MedicationSideEffectsViewController.init(dataSource:)()
{
}

id MedicationSideEffectsViewController.__allocating_init(collectionViewLayout:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCollectionViewLayout_, a1);

  return v3;
}

void MedicationSideEffectsViewController.init(collectionViewLayout:)()
{
}

void sub_1C1F44878(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = a3;
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1C1F448AC()
{
  return swift_bridgeObjectRelease();
}

id MedicationSideEffectsViewController.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for MedicationSideEffectsViewController()
{
  uint64_t result = qword_1EA2C34F0;
  if (!qword_1EA2C34F0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C1F44944()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for MedicationSideEffectsViewController(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MedicationSideEffectsViewController);
}

uint64_t sub_1C1F449A8()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C1F449BC()
{
  return type metadata accessor for MedicationSideEffectsViewController();
}

void sub_1C1F449C4(uint64_t a1, uint64_t a2, void *a3, char a4)
{
  if (a4) {
    sub_1C1F449D0(a1, a2, a3);
  }
  else {
    id v4 = (id)a1;
  }
}

void sub_1C1F449D0(uint64_t a1, uint64_t a2, void *a3)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    id v3 = a3;
  }
}

void destroy for StrengthStepResult(uint64_t a1)
{
}

void sub_1C1F44A28(uint64_t a1, uint64_t a2, void *a3, char a4)
{
  if (a4) {
    sub_1C1F44A34(a1, a2, a3);
  }
  else {
}
  }

void sub_1C1F44A34(uint64_t a1, uint64_t a2, void *a3)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
  }
}

uint64_t initializeWithCopy for StrengthStepResult(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  id v5 = *(void **)(a2 + 16);
  char v6 = *(unsigned char *)(a2 + 24);
  sub_1C1F449C4(*(void *)a2, v4, v5, v6);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = v6;
  return a1;
}

uint64_t assignWithCopy for StrengthStepResult(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  id v5 = *(void **)(a2 + 16);
  char v6 = *(unsigned char *)(a2 + 24);
  sub_1C1F449C4(*(void *)a2, v4, v5, v6);
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  uint64_t v9 = *(void **)(a1 + 16);
  char v10 = *(unsigned char *)(a1 + 24);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = v6;
  sub_1C1F44A28(v7, v8, v9, v10);
  return a1;
}

__n128 __swift_memcpy25_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for StrengthStepResult(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  char v4 = *(unsigned char *)(a2 + 24);
  uint64_t v5 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  char v6 = *(void **)(a1 + 16);
  char v8 = *(unsigned char *)(a1 + 24);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v3;
  *(unsigned char *)(a1 + 24) = v4;
  sub_1C1F44A28(v5, v7, v6, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for StrengthStepResult(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 25)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 24);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for StrengthStepResult(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 25) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 24) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1C1F44C3C(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 24);
}

uint64_t sub_1C1F44C44(uint64_t result, char a2)
{
  *(unsigned char *)(result + 24) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for StrengthStepResult()
{
  return &type metadata for StrengthStepResult;
}

uint64_t sub_1C1F44C60(void *a1, void *a2)
{
  BOOL v2 = *a1 == *a2 && a1[1] == a2[1];
  if (!v2 && (sub_1C214BA80() & 1) == 0) {
    return 0;
  }
  sub_1C1F45050();
  return sub_1C214B220() & 1;
}

uint64_t sub_1C1F44CD4()
{
  id v1 = *(void **)(v0 + 16);
  sub_1C214BB30();
  sub_1C214A690();
  id v2 = v1;
  sub_1C214B230();

  return sub_1C214BB80();
}

void sub_1C1F44D40()
{
  id v1 = *(void **)(v0 + 16);
  sub_1C214A690();
  id v2 = v1;
  sub_1C214B230();
}

uint64_t sub_1C1F44DA0()
{
  id v1 = *(void **)(v0 + 16);
  sub_1C214BB30();
  sub_1C214A690();
  id v2 = v1;
  sub_1C214B230();

  return sub_1C214BB80();
}

uint64_t sub_1C1F44E08(uint64_t a1, uint64_t a2)
{
  return sub_1C1F44E2C(*(void *)a1, *(void *)(a1 + 8), *(void **)(a1 + 16), *(unsigned char *)(a1 + 24), *(void *)a2, *(void *)(a2 + 8), *(void **)(a2 + 16), *(unsigned char *)(a2 + 24));
}

uint64_t sub_1C1F44E2C(uint64_t a1, uint64_t a2, void *a3, char a4, uint64_t a5, uint64_t a6, void *a7, char a8)
{
  uint64_t v12 = a2;
  if ((a4 & 1) == 0)
  {
    if ((a8 & 1) == 0)
    {
      sub_1C1F45050();
      sub_1C1F449C4(a1, v12, a3, 0);
      sub_1C1F449C4(a5, a6, a7, 0);
      char v14 = sub_1C214B220();
      sub_1C1F44A28(a5, a6, a7, 0);
      sub_1C1F44A28(a1, v12, a3, 0);
      return v14 & 1;
    }
    return 0;
  }
  if ((a8 & 1) == 0) {
    return 0;
  }
  if (a2)
  {
    if (a6)
    {
      if (a1 == a5 && a2 == a6 || (sub_1C214BA80() & 1) != 0)
      {
        sub_1C1F45050();
        uint64_t v16 = 1;
        sub_1C1F449C4(a1, v12, a3, 1);
        sub_1C1F449C4(a1, v12, a3, 1);
        sub_1C1F449C4(a5, a6, a7, 1);
        char v17 = sub_1C214B220();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1C1F44A28(a1, v12, a3, 1);
        if (v17) {
          return v16;
        }
        return 0;
      }
      sub_1C1F449C4(a1, v12, a3, 1);
      sub_1C1F449C4(a1, v12, a3, 1);
      sub_1C1F449C4(a5, a6, a7, 1);

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_16;
    }
    return 0;
  }
  if (a6)
  {
    uint64_t v12 = 0;
LABEL_16:
    sub_1C1F44A28(a1, v12, a3, 1);
    return 0;
  }
  sub_1C1F449D0(a5, 0, a7);
  return 1;
}

unint64_t sub_1C1F45050()
{
  unint64_t result = qword_1EA2C4AA0;
  if (!qword_1EA2C4AA0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA2C4AA0);
  }
  return result;
}

void destroy for ManualMedicationStrength(uint64_t a1)
{
  swift_bridgeObjectRelease();
  id v2 = *(void **)(a1 + 16);
}

void *_s19HealthMedicationsUI24ManualMedicationStrengthVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  int v4 = (void *)a2[2];
  a1[2] = v4;
  swift_bridgeObjectRetain();
  id v5 = v4;
  return a1;
}

void *assignWithCopy for ManualMedicationStrength(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  int v4 = (void *)a2[2];
  id v5 = (void *)a1[2];
  a1[2] = v4;
  id v6 = v4;

  return a1;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for ManualMedicationStrength(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  int v4 = *(void **)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);

  return a1;
}

uint64_t getEnumTagSinglePayload for ManualMedicationStrength(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ManualMedicationStrength(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ManualMedicationStrength()
{
  return &type metadata for ManualMedicationStrength;
}

unint64_t sub_1C1F45268()
{
  unint64_t result = qword_1EA2C3500;
  if (!qword_1EA2C3500)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C3500);
  }
  return result;
}

uint64_t sub_1C1F452BC()
{
  switch((unint64_t)objc_msgSend(v0, sel_status))
  {
    case 1uLL:
      if (qword_1EBF0CA00 != -1) {
        goto LABEL_16;
      }
      goto LABEL_14;
    case 2uLL:
      if (qword_1EBF0CA00 == -1) {
        goto LABEL_14;
      }
      goto LABEL_16;
    case 3uLL:
      if (qword_1EBF0CA00 == -1) {
        goto LABEL_14;
      }
      goto LABEL_16;
    case 4uLL:
      if (qword_1EBF0CA00 == -1) {
        goto LABEL_14;
      }
      goto LABEL_16;
    case 5uLL:
      if (qword_1EBF0CA00 == -1) {
        goto LABEL_14;
      }
      goto LABEL_16;
    case 6uLL:
      if (qword_1EBF0CA00 == -1) {
        goto LABEL_14;
      }
LABEL_16:
      swift_once();
LABEL_14:
      id v1 = (id)qword_1EBF0CA18;
      swift_bridgeObjectRetain();
      uint64_t v2 = sub_1C2147730();
      swift_bridgeObjectRelease();
      break;
    default:
      objc_msgSend(v0, sel_status);
      id v1 = (id)HKMedicationDoseEventStatusToString();
      uint64_t v2 = sub_1C214A5F0();
      break;
  }

  return v2;
}

void UIViewController.showIncompatibleWatchAlertIfNeeded(for:okHandler:cancelHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t ObjectType = swift_getObjectType();
  id v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F66B68]), sel_init);
  uint64_t v13 = (void *)swift_allocObject();
  void v13[2] = a2;
  v13[3] = a3;
  v13[4] = a4;
  v13[5] = a5;
  v13[6] = v5;
  v13[7] = ObjectType;
  v16[4] = sub_1C1F20B28;
  v16[5] = v13;
  v16[0] = MEMORY[0x1E4F143A8];
  v16[1] = 1107296256;
  v16[2] = sub_1C1F45FF0;
  v16[3] = &block_descriptor_6;
  char v14 = _Block_copy(v16);
  sub_1C1F1325C(a2);
  sub_1C1F1325C(a4);
  id v15 = v5;
  swift_release();
  objc_msgSend(v12, sel_checkIncompatibilityForSchedule_completion_, a1, v14);
  _Block_release(v14);
}

void UIViewController.presentAsFormSheetWithNavigationController(viewController:isModalInPresentation:leadingAction:trailingAction:)(void *a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = v6;
  id v24 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F67B78]), sel_initWithRootViewController_, a1);
  if (a3)
  {
    swift_retain();
    id v14 = objc_msgSend(a1, sel_navigationItem);
    sub_1C1F12718(0, (unint64_t *)&qword_1EA2C3508);
    sub_1C1F12718(0, &qword_1EA2C3198);
    id v15 = (void *)swift_allocObject();
    void v15[2] = a3;
    v15[3] = a4;
    v15[4] = v24;
    sub_1C1F1325C(a3);
    id v16 = v24;
    uint64_t v22 = v15;
    sub_1C214B250();
    char v17 = (void *)sub_1C214AC50();
    objc_msgSend(v14, sel_setLeftBarButtonItem_, v17, 0, 0, 0, sub_1C1F46080, v22);

    uint64_t v7 = v6;
    sub_1C1F31118(a3);
  }
  if (a5)
  {
    swift_retain();
    id v18 = objc_msgSend(a1, sel_navigationItem);
    sub_1C1F12718(0, (unint64_t *)&qword_1EA2C3508);
    sub_1C1F12718(0, &qword_1EA2C3198);
    uint64_t v19 = (void *)swift_allocObject();
    v19[2] = a5;
    v19[3] = a6;
    v19[4] = v24;
    id v20 = v24;
    sub_1C1F1325C(a5);
    int v23 = v19;
    sub_1C214B250();
    uint64_t v21 = (void *)sub_1C214AC50();
    objc_msgSend(v18, sel_setRightBarButtonItem_, v21, 0, 0, 0, sub_1C1F46080, v23);

    sub_1C1F31118(a5);
  }
  objc_msgSend(v24, sel_setModalPresentationStyle_, 2);
  objc_msgSend(v24, sel_setModalInPresentation_, a2 & 1);
  objc_msgSend(v7, sel_presentViewController_animated_completion_, v24, 1, 0);
}

void sub_1C1F45AA0(void *a1, void *a2, uint64_t (**a3)(char *, uint64_t), id a4, uint64_t a5, uint64_t a6, void *a7)
{
  id v44 = a4;
  uint64_t v13 = sub_1C21497F0();
  id v14 = *(uint64_t (***)(char *, uint64_t))(v13 - 8);
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  char v17 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    id v18 = a2;
    sub_1C21497A0();
    id v19 = a2;
    id v20 = a2;
    uint64_t v21 = sub_1C21497E0();
    os_log_type_t v22 = sub_1C214ABD0();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = swift_slowAlloc();
      uint64_t v24 = swift_slowAlloc();
      uint64_t v46 = v24;
      *(_DWORD *)uint64_t v23 = 136446466;
      uint64_t v43 = a3;
      uint64_t v25 = sub_1C214BC10();
      uint64_t v45 = sub_1C1F6FD54(v25, v26, &v46);
      sub_1C214B530();
      swift_bridgeObjectRelease();
      *(_WORD *)(v23 + 12) = 2080;
      uint64_t v45 = (uint64_t)a2;
      id v27 = a2;
      sub_1C1F35A5C();
      uint64_t v28 = sub_1C214A630();
      uint64_t v45 = sub_1C1F6FD54(v28, v29, &v46);
      a3 = v43;
      sub_1C214B530();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1C1F0B000, v21, v22, "[%{public}s]: Error: %s", (uint8_t *)v23, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C8754730](v24, -1, -1);
      MEMORY[0x1C8754730](v23, -1, -1);
    }
    else
    {
    }
    uint64_t v39 = v14[1](v17, v13);
    if (a3) {
      ((void (*)(uint64_t))a3)(v39);
    }

    return;
  }
  if (a1)
  {
    id v30 = a1;
    id v31 = objc_msgSend(v30, sel_incompatibleDevices);
    sub_1C1F12718(0, &qword_1EA2C3510);
    unint64_t v32 = sub_1C214A780();

    if (v32 >> 62)
    {
      id v14 = a3;
      swift_bridgeObjectRetain();
      uint64_t v40 = sub_1C214B930();
      swift_bridgeObjectRelease();
      if (v40) {
        goto LABEL_7;
      }
    }
    else if (*(void *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_7:
      if ((v32 & 0xC000000000000001) != 0)
      {
        id v33 = (id)MEMORY[0x1C8753960](0, v32);
        goto LABEL_10;
      }
      if (*(void *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        id v33 = *(id *)(v32 + 32);
LABEL_10:
        id v34 = v33;
        swift_bridgeObjectRelease();
        id v35 = objc_msgSend(v34, sel_deviceName);

        uint64_t v36 = sub_1C214A5F0();
        uint64_t v38 = v37;
LABEL_21:

        id v44 = _sSo17UIAlertControllerC19HealthMedicationsUIE46makeAlertForMedicationWithIncompatibleSchedule10deviceName9okHandler06cancelP0ABSS_yycSgAHtFZ_0(v36, v38, (uint64_t)a3, (uint64_t)v44, a5, a6);
        swift_bridgeObjectRelease();
        objc_msgSend(a7, sel_presentViewController_animated_completion_, v44, 1, 0);

        id v42 = v44;

        return;
      }
      __break(1u);
      goto LABEL_26;
    }
    id v14 = a3;
    swift_bridgeObjectRelease();
    if (qword_1EBF0CA00 == -1)
    {
LABEL_20:
      id v35 = (id)qword_1EBF0CA18;
      swift_bridgeObjectRetain();
      uint64_t v36 = sub_1C2147730();
      uint64_t v38 = v41;
      swift_bridgeObjectRelease();
      a3 = v14;
      goto LABEL_21;
    }
LABEL_26:
    swift_once();
    goto LABEL_20;
  }
  if (a3) {
    ((void (*)(uint64_t))a3)(v15);
  }
}

uint64_t sub_1C1F45F98()
{
  if (*(void *)(v0 + 16)) {
    swift_release();
  }
  if (*(void *)(v0 + 32)) {
    swift_release();
  }

  return MEMORY[0x1F4186498](v0, 64, 7);
}

void sub_1C1F45FF0(uint64_t a1, void *a2, void *a3)
{
  id v5 = *(void (**)(void *, void *))(a1 + 32);
  swift_retain();
  id v7 = a2;
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

uint64_t objectdestroy_2Tm_0()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1C1F460C8()
{
  return (*(uint64_t (**)(void))(v0 + 16))(*(void *)(v0 + 32));
}

__n128 sub_1C1F460F8()
{
  __asm { FMOV            V0.2D, #16.0 }
  xmmword_1EA2C7BC0 = (__int128)result;
  *(__n128 *)&qword_1EA2C7BD0 = result;
  return result;
}

uint64_t sub_1C1F4610C(uint64_t a1, void *a2)
{
  sub_1C1F47488(a1, (uint64_t)v5, (unint64_t *)&qword_1EBF0C300, (void (*)(uint64_t))sub_1C1F1CB5C);
  uint64_t v3 = *a2 + OBJC_IVAR____TtC19HealthMedicationsUI25InteractionNotCheckedCell_item;
  swift_beginAccess();
  sub_1C1F32DDC((uint64_t)v5, v3);
  swift_endAccess();
  sub_1C1F46E88();
  return sub_1C1F474F4((uint64_t)v5, (unint64_t *)&qword_1EBF0C300, (void (*)(uint64_t))sub_1C1F1CB5C);
}

uint64_t sub_1C1F461B4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI25InteractionNotCheckedCell_item;
  swift_beginAccess();
  return sub_1C1F47488(v3, a1, (unint64_t *)&qword_1EBF0C300, (void (*)(uint64_t))sub_1C1F1CB5C);
}

uint64_t sub_1C1F46224(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI25InteractionNotCheckedCell_item;
  swift_beginAccess();
  sub_1C1F32DDC(a1, v3);
  swift_endAccess();
  sub_1C1F46E88();
  return sub_1C1F474F4(a1, (unint64_t *)&qword_1EBF0C300, (void (*)(uint64_t))sub_1C1F1CB5C);
}

void (*sub_1C1F462B0(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1C1F46310;
}

void sub_1C1F46310(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    sub_1C1F46E88();
  }
}

id sub_1C1F46344()
{
  uint64_t v1 = OBJC_IVAR____TtC19HealthMedicationsUI25InteractionNotCheckedCell____lazy_storage___medicationView;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI25InteractionNotCheckedCell____lazy_storage___medicationView);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI25InteractionNotCheckedCell____lazy_storage___medicationView);
  }
  else
  {
    id v4 = objc_msgSend(objc_allocWithZone((Class)sub_1C2148EF0()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    id v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_1C1F463DC()
{
  uint64_t v1 = OBJC_IVAR____TtC19HealthMedicationsUI25InteractionNotCheckedCell____lazy_storage___titleLabel;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI25InteractionNotCheckedCell____lazy_storage___titleLabel);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI25InteractionNotCheckedCell____lazy_storage___titleLabel);
  }
  else
  {
    id v4 = sub_1C1F4643C();
    id v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_1C1F4643C()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
  uint64_t v7 = sub_1C214A5F0();
  uint64_t v8 = v1;
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  id v2 = v0;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  id v3 = (void *)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setAccessibilityIdentifier_, v3, v7, v8);

  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8E0);
  id v4 = (void *)sub_1C214B0A0();
  objc_msgSend(v2, sel_setFont_, v4);

  id v5 = objc_msgSend(self, sel_secondaryLabelColor);
  objc_msgSend(v2, sel_setTextColor_, v5);

  objc_msgSend(v2, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v2, sel_setNumberOfLines_, 1);
  objc_msgSend(v2, sel_setAdjustsFontForContentSizeCategory_, 1);
  return v2;
}

void sub_1C1F467A4()
{
  uint64_t v1 = v0;
  sub_1C1F47550(0, &qword_1EBF0C620, MEMORY[0x1E4FB0F28]);
  uint64_t v3 = MEMORY[0x1F4188790](v2 - 8);
  id v5 = (char *)v56 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)v56 - v6;
  id v8 = objc_msgSend(v0, sel_contentView);
  id v9 = sub_1C1F46344();
  objc_msgSend(v8, sel_addSubview_, v9);

  id v10 = objc_msgSend(v1, sel_contentView);
  id v11 = sub_1C1F463DC();
  objc_msgSend(v10, sel_addSubview_, v11);

  sub_1C21499A0();
  uint64_t v12 = sub_1C21499D0();
  uint64_t v13 = *(void *)(v12 - 8);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v7, 0, 1, v12);
  uint64_t v14 = MEMORY[0x1C8752FF0](v7);
  MEMORY[0x1C8752FE0](v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v5, 1, v12))
  {
    uint64_t v15 = (void (*)(uint64_t))MEMORY[0x1E4FB0F28];
    sub_1C1F47488((uint64_t)v5, (uint64_t)v7, &qword_1EBF0C620, MEMORY[0x1E4FB0F28]);
    MEMORY[0x1C8752FF0](v7);
    sub_1C1F474F4((uint64_t)v5, &qword_1EBF0C620, v15);
  }
  else
  {
    id v16 = objc_msgSend(self, sel_quaternarySystemFillColor);
    sub_1C2149990();
    MEMORY[0x1C8752FF0](v5);
  }
  char v17 = self;
  sub_1C1F0ED28();
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_1C2150CA0;
  id v19 = sub_1C1F46344();
  id v20 = objc_msgSend(v19, sel_leadingAnchor);

  id v21 = objc_msgSend(v1, sel_contentView);
  id v22 = objc_msgSend(v21, sel_leadingAnchor);

  if (qword_1EA2C2650 != -1) {
    swift_once();
  }
  id v23 = objc_msgSend(v20, sel_constraintEqualToAnchor_constant_, v22, *((double *)&xmmword_1EA2C7BC0 + 1));

  *(void *)(v18 + 32) = v23;
  id v24 = sub_1C1F46344();
  id v25 = objc_msgSend(v24, sel_topAnchor);

  id v26 = objc_msgSend(v1, sel_contentView);
  id v27 = objc_msgSend(v26, sel_topAnchor);

  id v28 = objc_msgSend(v25, sel_constraintEqualToAnchor_constant_, v27, *(double *)&xmmword_1EA2C7BC0);
  *(void *)(v18 + 40) = v28;
  id v29 = sub_1C1F46344();
  id v30 = objc_msgSend(v29, sel_bottomAnchor);

  id v31 = objc_msgSend(v1, sel_contentView);
  id v32 = objc_msgSend(v31, sel_bottomAnchor);

  id v33 = objc_msgSend(v30, sel_constraintEqualToAnchor_constant_, v32, -*(double *)&qword_1EA2C7BD0);
  *(void *)(v18 + 48) = v33;
  id v34 = sub_1C1F46344();
  id v35 = objc_msgSend(v34, sel_widthAnchor);

  id v36 = objc_msgSend(v35, sel_constraintEqualToConstant_, 44.0);
  *(void *)(v18 + 56) = v36;
  id v37 = sub_1C1F46344();
  id v38 = objc_msgSend(v37, sel_heightAnchor);

  id v39 = objc_msgSend(v38, sel_constraintEqualToConstant_, 44.0);
  *(void *)(v18 + 64) = v39;
  id v40 = sub_1C1F463DC();
  id v41 = objc_msgSend(v40, sel_leadingAnchor);

  id v42 = sub_1C1F46344();
  id v43 = objc_msgSend(v42, sel_trailingAnchor);

  id v44 = objc_msgSend(v41, sel_constraintEqualToAnchor_constant_, v43, 16.0);
  *(void *)(v18 + 72) = v44;
  id v45 = sub_1C1F463DC();
  id v46 = objc_msgSend(v45, sel_centerYAnchor);

  id v47 = objc_msgSend(v1, sel_contentView);
  id v48 = objc_msgSend(v47, sel_centerYAnchor);

  id v49 = objc_msgSend(v46, sel_constraintEqualToAnchor_, v48);
  *(void *)(v18 + 80) = v49;
  id v50 = sub_1C1F463DC();
  id v51 = objc_msgSend(v50, sel_trailingAnchor);

  id v52 = objc_msgSend(v1, sel_contentView);
  id v53 = objc_msgSend(v52, sel_trailingAnchor);

  id v54 = objc_msgSend(v51, sel_constraintEqualToAnchor_constant_, v53, -*(double *)&qword_1EA2C7BD8);
  *(void *)(v18 + 88) = v54;
  v56[1] = v18;
  sub_1C214A7A0();
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C810);
  uint64_t v55 = (void *)sub_1C214A770();
  swift_bridgeObjectRelease();
  objc_msgSend(v17, sel_activateConstraints_, v55);
}

void sub_1C1F46E88()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1C21497F0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  id v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1F47550(0, (unint64_t *)&qword_1EBF0B690, MEMORY[0x1E4F66C80]);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v7 = (uint64_t)v1 + OBJC_IVAR____TtC19HealthMedicationsUI25InteractionNotCheckedCell_item;
  swift_beginAccess();
  sub_1C1F47488(v7, (uint64_t)v24, (unint64_t *)&qword_1EBF0C300, (void (*)(uint64_t))sub_1C1F1CB5C);
  if (v24[3])
  {
    sub_1C1F1CB5C();
    type metadata accessor for InteractionNotCheckedItem();
    if (swift_dynamicCast())
    {
      uint64_t v8 = v23;
      id v9 = sub_1C1F46344();
      _sSo29HKMedicationUserDomainConceptC19HealthMedicationsUIE7medmoji0eF10Experience29MedicationVisualizationConfigVSgvg_0();
      sub_1C2148ED0();

      id v10 = sub_1C1F463DC();
      v24[0] = *(void *)(v8 + 16);
      sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8C0);
      sub_1C2149490();
      id v11 = (void *)sub_1C214A5B0();
      swift_bridgeObjectRelease();
      objc_msgSend(v10, sel_setText_, v11);
      swift_release();

      return;
    }
  }
  else
  {
    sub_1C1F474F4((uint64_t)v24, (unint64_t *)&qword_1EBF0C300, (void (*)(uint64_t))sub_1C1F1CB5C);
  }
  sub_1C21497A0();
  id v12 = v1;
  uint64_t v13 = sub_1C21497E0();
  os_log_type_t v14 = sub_1C214ABD0();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v22 = v2;
    uint64_t v15 = (uint8_t *)swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    uint64_t v21 = v3;
    uint64_t v17 = v16;
    uint64_t v23 = v16;
    *(_DWORD *)uint64_t v15 = 136446210;
    id v20 = v15 + 4;
    sub_1C1F47488(v7, (uint64_t)v24, (unint64_t *)&qword_1EBF0C300, (void (*)(uint64_t))sub_1C1F1CB5C);
    sub_1C1F47550(0, (unint64_t *)&qword_1EBF0C300, (void (*)(uint64_t))sub_1C1F1CB5C);
    uint64_t v18 = sub_1C214A630();
    v24[0] = sub_1C1F6FD54(v18, v19, &v23);
    sub_1C214B530();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C1F0B000, v13, v14, "Incorrect view model for InteractionFactorsItem: %{public}s", v15, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C8754730](v17, -1, -1);
    MEMORY[0x1C8754730](v15, -1, -1);

    (*(void (**)(char *, uint64_t))(v21 + 8))(v5, v22);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
}

uint64_t type metadata accessor for InteractionNotCheckedCell()
{
  return self;
}

id InteractionNotCheckedCell.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for InteractionNotCheckedCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1C1F4735C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC19HealthMedicationsUI25InteractionNotCheckedCell_item;
  swift_beginAccess();
  return sub_1C1F47488(v3, a2, (unint64_t *)&qword_1EBF0C300, (void (*)(uint64_t))sub_1C1F1CB5C);
}

uint64_t method lookup function for InteractionNotCheckedCell(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for InteractionNotCheckedCell);
}

uint64_t dispatch thunk of InteractionNotCheckedCell.item.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of InteractionNotCheckedCell.item.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of InteractionNotCheckedCell.item.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x78))();
}

uint64_t sub_1C1F47488(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_1C1F47550(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_1C1F474F4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1C1F47550(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

void sub_1C1F47550(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C214B4F0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1C1F475A4(uint64_t a1)
{
  uint64_t v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1C214B680();
    sub_1C2149E40();
    sub_1C1F49390(&qword_1EA2C3570, MEMORY[0x1E4F1AB18]);
    uint64_t result = sub_1C214AAA0();
    uint64_t v1 = v18;
    uint64_t v17 = v19;
    uint64_t v3 = v20;
    uint64_t v4 = v21;
    unint64_t v5 = v22;
  }
  else
  {
    uint64_t v6 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v17 = a1 + 56;
    uint64_t v3 = ~v6;
    uint64_t v7 = -v6;
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v5 = v8 & *(void *)(a1 + 56);
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v4 = 0;
  }
  int64_t v9 = (unint64_t)(v3 + 64) >> 6;
  if (v1 < 0) {
    goto LABEL_10;
  }
  while (1)
  {
    if (v5)
    {
      uint64_t v10 = (v5 - 1) & v5;
      unint64_t v11 = __clz(__rbit64(v5)) | (v4 << 6);
      uint64_t v12 = v4;
      goto LABEL_29;
    }
    int64_t v13 = v4 + 1;
    if (__OFADD__(v4, 1)) {
      break;
    }
    if (v13 >= v9) {
      return sub_1C1F495B8();
    }
    unint64_t v14 = *(void *)(v17 + 8 * v13);
    uint64_t v12 = v4 + 1;
    if (!v14)
    {
      uint64_t v12 = v4 + 2;
      if (v4 + 2 >= v9) {
        return sub_1C1F495B8();
      }
      unint64_t v14 = *(void *)(v17 + 8 * v12);
      if (!v14)
      {
        uint64_t v12 = v4 + 3;
        if (v4 + 3 >= v9) {
          return sub_1C1F495B8();
        }
        unint64_t v14 = *(void *)(v17 + 8 * v12);
        if (!v14)
        {
          uint64_t v12 = v4 + 4;
          if (v4 + 4 >= v9) {
            return sub_1C1F495B8();
          }
          unint64_t v14 = *(void *)(v17 + 8 * v12);
          if (!v14)
          {
            uint64_t v12 = v4 + 5;
            if (v4 + 5 >= v9) {
              return sub_1C1F495B8();
            }
            unint64_t v14 = *(void *)(v17 + 8 * v12);
            if (!v14)
            {
              uint64_t v15 = v4 + 6;
              while (v9 != v15)
              {
                unint64_t v14 = *(void *)(v17 + 8 * v15++);
                if (v14)
                {
                  uint64_t v12 = v15 - 1;
                  goto LABEL_28;
                }
              }
              return sub_1C1F495B8();
            }
          }
        }
      }
    }
LABEL_28:
    uint64_t v10 = (v14 - 1) & v14;
    unint64_t v11 = __clz(__rbit64(v14)) + (v12 << 6);
LABEL_29:
    uint64_t v16 = *(void *)(*(void *)(v1 + 48) + 8 * v11);
    swift_retain();
    if (!v16) {
      return sub_1C1F495B8();
    }
    while (1)
    {
      sub_1C2149E30();
      uint64_t result = swift_release();
      uint64_t v4 = v12;
      unint64_t v5 = v10;
      if ((v1 & 0x8000000000000000) == 0) {
        break;
      }
LABEL_10:
      if (sub_1C214B700())
      {
        sub_1C2149E40();
        swift_unknownObjectRetain();
        swift_dynamicCast();
        swift_unknownObjectRelease();
        uint64_t v12 = v4;
        uint64_t v10 = v5;
        if (v23) {
          continue;
        }
      }
      return sub_1C1F495B8();
    }
  }
  __break(1u);
  return result;
}

uint64_t RelatedCHRRecordsDataSource.__allocating_init(with:healthStore:)(void *a1, void *a2)
{
  return RelatedCHRRecordsDataSource.init(with:healthStore:)(a1, a2);
}

uint64_t RelatedCHRRecordsDataSource.init(with:healthStore:)(void *a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = qword_1EA2C3530;
  sub_1C2147F10();
  swift_retain();
  uint64_t v7 = (void *)sub_1C2147F00();
  uint64_t v8 = sub_1C2147EF0();

  *(void *)(v3 + v6) = v8;
  *(void *)(v3 + qword_1EA2C3538) = MEMORY[0x1E4FBC870];
  sub_1C2149410();
  swift_allocObject();
  id v9 = a2;
  *(void *)(v3 + qword_1EA2C3540) = sub_1C2149400();
  type metadata accessor for ClinicalRecordsMedicationsProvider();
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v9;
  *(void *)(v3 + qword_1EA2C3548) = v10;
  id v11 = v9;
  swift_release();
  uint64_t v12 = sub_1C2147F50();
  swift_retain();
  sub_1C1F479CC(a1);
  swift_release();
  swift_release();

  return v12;
}

uint64_t sub_1C1F479CC(void *a1)
{
  sub_1C1F4950C(0, &qword_1EBF0C7E8, MEMORY[0x1E4FBCC28], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v2 - 8);
  id v43 = (char *)&v31 - v3;
  sub_1C1F495C0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v32 = v4;
  uint64_t v33 = v5;
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1F498E4();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v35 = v8;
  uint64_t v36 = v9;
  MEMORY[0x1F4188790](v8);
  id v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1F499A0();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v37 = v12;
  uint64_t v38 = v13;
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1F49B28();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v40 = v16;
  uint64_t v41 = v17;
  MEMORY[0x1F4188790](v16);
  id v34 = (char *)&v31 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1F49BBC();
  uint64_t v42 = v19;
  uint64_t v44 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19);
  id v39 = (char *)&v31 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v45 = a1;
  swift_retain();
  sub_1C2149E00();
  sub_1C1F4986C();
  sub_1C1F496AC();
  sub_1C1F49390(&qword_1EA2C35A0, (void (*)(uint64_t))sub_1C1F4986C);
  sub_1C1F49390(&qword_1EA2C35A8, (void (*)(uint64_t))sub_1C1F496AC);
  sub_1C214A120();
  swift_release();
  sub_1C1F12718(0, (unint64_t *)&qword_1EA2C6A20);
  sub_1C1F49390(&qword_1EA2C35C0, (void (*)(uint64_t))sub_1C1F495C0);
  uint64_t v21 = v32;
  sub_1C2149FD0();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v7, v21);
  swift_retain();
  sub_1C2149E00();
  sub_1C1F49748(0, (unint64_t *)&qword_1EA2C35D8, &qword_1EA2C35E0, 0x1E4F2B1A0, MEMORY[0x1E4FBB320]);
  sub_1C1F49A8C();
  sub_1C1F49390(&qword_1EA2C35F0, (void (*)(uint64_t))sub_1C1F498E4);
  sub_1C1F49390(&qword_1EA2C35E8, (void (*)(uint64_t))sub_1C1F49A8C);
  uint64_t v22 = v35;
  sub_1C214A080();
  swift_release();
  (*(void (**)(char *, uint64_t))(v36 + 8))(v11, v22);
  id v45 = (id)MEMORY[0x1E4FBC860];
  sub_1C1F49390(&qword_1EA2C3600, (void (*)(uint64_t))sub_1C1F499A0);
  uint64_t v23 = v34;
  uint64_t v24 = v37;
  sub_1C2149FE0();
  (*(void (**)(char *, uint64_t))(v38 + 8))(v15, v24);
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0CB10);
  id v45 = (id)sub_1C214AD80();
  uint64_t v25 = sub_1C214AD20();
  uint64_t v26 = (uint64_t)v43;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v43, 1, 1, v25);
  sub_1C1F49390(&qword_1EA2C3610, (void (*)(uint64_t))sub_1C1F49B28);
  sub_1C1F43FD4();
  id v28 = v39;
  uint64_t v27 = v40;
  sub_1C214A0A0();
  sub_1C1F441C8(v26);

  (*(void (**)(char *, uint64_t))(v41 + 8))(v23, v27);
  swift_allocObject();
  swift_weakInit();
  sub_1C1F49390(&qword_1EA2C3618, (void (*)(uint64_t))sub_1C1F49BBC);
  uint64_t v29 = v42;
  sub_1C214A0F0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v44 + 8))(v28, v29);
  swift_beginAccess();
  sub_1C2149E20();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1C1F481D4@<X0>(uint64_t *a1@<X8>)
{
  sub_1C21493F0();
  sub_1C1F496AC();
  sub_1C1F49390(&qword_1EA2C35A8, (void (*)(uint64_t))sub_1C1F496AC);
  uint64_t v2 = sub_1C2149FC0();
  uint64_t result = swift_release();
  *a1 = v2;
  return result;
}

id sub_1C1F48278@<X0>(void **a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *a1;
  *a2 = v2;
  return v2;
}

uint64_t sub_1C1F48284(unint64_t *a1)
{
  unint64_t v1 = *a1;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v3 = result;
    swift_retain();
    uint64_t v4 = sub_1C1F49CFC(v1, v3);
    swift_release();
    swift_retain();
    sub_1C2147F40();
    swift_release();
    sub_1C21482F0();
    swift_release();
    sub_1C1F4950C(0, (unint64_t *)&qword_1EA2C2DD0, MEMORY[0x1E4F66468], MEMORY[0x1E4FBBE00]);
    sub_1C2148540();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1C214FCD0;
    if (qword_1EBF0CA00 != -1) {
      swift_once();
    }
    id v5 = (id)qword_1EBF0CA18;
    swift_bridgeObjectRetain();
    sub_1C2147730();
    swift_bridgeObjectRelease();

    sub_1C1F37EA4(v4);
    swift_bridgeObjectRelease();
    sub_1C2148520();
    sub_1C21485B0();
    swift_release();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C1F48504@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v61 = a2;
  uint64_t v3 = sub_1C2148A70();
  uint64_t v59 = *(void *)(v3 - 8);
  uint64_t v60 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v58 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v5 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C1F4950C(0, &qword_1EBF0C620, MEMORY[0x1E4FB0F28], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v56 = (char *)&v42 - v7;
  uint64_t v8 = sub_1C2148620();
  uint64_t v54 = *(void *)(v8 - 8);
  uint64_t v55 = v8;
  MEMORY[0x1F4188790](v8);
  id v53 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1F4950C(0, &qword_1EBF0C610, MEMORY[0x1E4FB0E38], v5);
  MEMORY[0x1F4188790](v10 - 8);
  id v50 = (char *)&v42 - v11;
  uint64_t v12 = sub_1C21498E0();
  uint64_t v51 = *(void *)(v12 - 8);
  uint64_t v52 = v12;
  MEMORY[0x1F4188790](v12);
  id v49 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1C2149860();
  uint64_t v47 = *(void *)(v14 - 8);
  uint64_t v48 = v14;
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1C2147B20();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v20 = (char *)&v42 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = sub_1C2149BE0();
  uint64_t v21 = *(void *)(v43 - 8);
  MEMORY[0x1F4188790](v43);
  uint64_t v23 = (char *)&v42 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2149BD0();
  uint64_t v44 = a1;
  id v24 = objc_msgSend(a1, sel_sourceRevision);
  id v25 = objc_msgSend(v24, sel_source);

  id v26 = objc_msgSend(v25, sel_name);
  sub_1C214A5F0();

  sub_1C2149B90();
  id v27 = objc_msgSend(a1, sel_UUID);
  sub_1C2147B00();

  uint64_t v46 = sub_1C2147AD0();
  uint64_t v45 = v28;
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  uint64_t v29 = v43;
  v62[3] = v43;
  v62[4] = MEMORY[0x1E4FB0F88];
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v62);
  (*(void (**)(uint64_t *, char *, uint64_t))(v21 + 16))(boxed_opaque_existential_1, v23, v29);
  sub_1C1F4950C(0, (unint64_t *)&unk_1EBF0C990, MEMORY[0x1E4FB0E68], MEMORY[0x1E4FBBE00]);
  sub_1C2149930();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1C214FCD0;
  uint64_t v32 = v47;
  uint64_t v31 = v48;
  (*(void (**)(char *, void, uint64_t))(v47 + 104))(v16, *MEMORY[0x1E4FB0E18], v48);
  uint64_t v33 = sub_1C2149870();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v50, 1, 1, v33);
  id v34 = v49;
  sub_1C21498D0();
  sub_1C21498A0();
  (*(void (**)(char *, uint64_t))(v51 + 8))(v34, v52);
  (*(void (**)(char *, uint64_t))(v32 + 8))(v16, v31);
  uint64_t v35 = *(void **)(v57 + qword_1EA2C3530);
  uint64_t v36 = swift_allocObject();
  uint64_t v37 = v44;
  *(void *)(v36 + 16) = v44;
  *(void *)(v36 + 24) = v35;
  (*(void (**)(char *, void, uint64_t))(v54 + 104))(v53, *MEMORY[0x1E4F66480], v55);
  uint64_t v38 = sub_1C21499D0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v56, 1, 1, v38);
  (*(void (**)(char *, void, uint64_t))(v59 + 104))(v58, *MEMORY[0x1E4F66678], v60);
  id v39 = v35;
  id v40 = v37;
  sub_1C21487A0();
  return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v23, v29);
}

void sub_1C1F48CD4(void *a1)
{
  sub_1C2148070();
  uint64_t v2 = (void *)sub_1C2148060();
  id v5 = (id)sub_1C2148050();

  id v3 = objc_msgSend(a1, sel_navigationController);
  if (v3)
  {
    uint64_t v4 = v3;
    objc_msgSend(v3, sel_pushViewController_animated_, v5, 1);
  }
}

uint64_t sub_1C1F48D80()
{
  uint64_t v0 = sub_1C2148710();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  id v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2148660();
  uint64_t v4 = sub_1C2148700();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

uint64_t sub_1C1F48E54()
{
  swift_release();
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t RelatedCHRRecordsDataSource.deinit()
{
  swift_beginAccess();
  uint64_t v0 = swift_bridgeObjectRetain();
  sub_1C1F475A4(v0);
  swift_bridgeObjectRelease();
  uint64_t v1 = _s19HealthMedicationsUI34InteractionSeperatorLineDataSourceCfd_0();
  swift_release();
  swift_release();

  swift_bridgeObjectRelease();
  return v1;
}

uint64_t RelatedCHRRecordsDataSource.__deallocating_deinit()
{
  swift_beginAccess();
  uint64_t v0 = swift_bridgeObjectRetain();
  sub_1C1F475A4(v0);
  swift_bridgeObjectRelease();
  uint64_t v1 = _s19HealthMedicationsUI34InteractionSeperatorLineDataSourceCfd_0();
  swift_release();
  swift_release();

  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

void RelatedCHRRecordsDataSource.__allocating_init(arrangedSections:isHidden:)()
{
}

void RelatedCHRRecordsDataSource.init(arrangedSections:isHidden:)()
{
}

uint64_t sub_1C1F49080()
{
  return sub_1C2148B80();
}

Swift::Void __swiftcall RelatedCHRRecordsDataSource.registerCells(for:)(UICollectionView *a1)
{
}

uint64_t sub_1C1F4912C()
{
  return sub_1C214ACC0();
}

uint64_t RelatedCHRRecordsDataSource.supplementaryItem(ofKind:at:)@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_1C2149BE0();
  MEMORY[0x1F4188790](v2 - 8);
  if (qword_1EBF0CA00 != -1) {
    swift_once();
  }
  id v3 = (id)qword_1EBF0CA18;
  swift_bridgeObjectRetain();
  sub_1C2147730();
  swift_bridgeObjectRelease();

  sub_1C2149B50();
  uint64_t v4 = sub_1C2148180();
  swift_allocObject();
  uint64_t v5 = sub_1C2148170();
  a1[3] = v4;
  uint64_t result = sub_1C1F49390((unint64_t *)&qword_1EA2C3550, MEMORY[0x1E4F66208]);
  a1[4] = result;
  *a1 = v5;
  return result;
}

uint64_t sub_1C1F49330@<X0>(uint64_t *a1@<X8>)
{
  return RelatedCHRRecordsDataSource.supplementaryItem(ofKind:at:)(a1);
}

uint64_t sub_1C1F49348()
{
  return sub_1C1F49390(&qword_1EA2C3558, (void (*)(uint64_t))type metadata accessor for RelatedCHRRecordsDataSource);
}

uint64_t sub_1C1F49390(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for RelatedCHRRecordsDataSource()
{
  uint64_t result = qword_1EA2C3560;
  if (!qword_1EA2C3560) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C1F49424()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for RelatedCHRRecordsDataSource(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for RelatedCHRRecordsDataSource);
}

uint64_t dispatch thunk of RelatedCHRRecordsDataSource.__allocating_init(with:healthStore:)()
{
  return (*(uint64_t (**)(void))(class metadata base offset for RelatedCHRRecordsDataSource + v0 + 128))();
}

uint64_t dispatch thunk of RelatedCHRRecordsDataSource.layout(for:environment:)()
{
  return (*(uint64_t (**)(void))(class metadata base offset for RelatedCHRRecordsDataSource + *v0 + 152))();
}

uint64_t sub_1C1F49504()
{
  return type metadata accessor for RelatedCHRRecordsDataSource();
}

void sub_1C1F4950C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C1F49570()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

void sub_1C1F495B0(void *a1)
{
}

uint64_t sub_1C1F495B8()
{
  return swift_release();
}

void sub_1C1F495C0()
{
  if (!qword_1EA2C3578)
  {
    sub_1C1F496AC();
    sub_1C1F497B0();
    sub_1C1F49390(&qword_1EA2C35A8, (void (*)(uint64_t))sub_1C1F496AC);
    sub_1C1F49390(&qword_1EA2C35B0, (void (*)(uint64_t))sub_1C1F497B0);
    unint64_t v0 = sub_1C2149DA0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C3578);
    }
  }
}

void sub_1C1F496AC()
{
  if (!qword_1EA2C3580)
  {
    sub_1C1F49748(255, &qword_1EA2C3588, (unint64_t *)&qword_1EA2C6A20, 0x1E4F2ADD8, MEMORY[0x1E4FBB718]);
    sub_1C1F35A5C();
    unint64_t v0 = sub_1C2149E10();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C3580);
    }
  }
}

void sub_1C1F49748(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = sub_1C1F12718(255, a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

void sub_1C1F497B0()
{
  if (!qword_1EA2C3590)
  {
    sub_1C1F4986C();
    sub_1C1F35A5C();
    sub_1C1F49390(&qword_1EA2C35A0, (void (*)(uint64_t))sub_1C1F4986C);
    unint64_t v0 = sub_1C2149D30();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C3590);
    }
  }
}

void sub_1C1F4986C()
{
  if (!qword_1EA2C3598)
  {
    sub_1C1F12718(255, (unint64_t *)&qword_1EBF0C8C0);
    unint64_t v0 = sub_1C2149EA0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C3598);
    }
  }
}

void sub_1C1F498E4()
{
  if (!qword_1EA2C35B8)
  {
    sub_1C1F495C0();
    sub_1C1F12718(255, (unint64_t *)&qword_1EA2C6A20);
    sub_1C1F49390(&qword_1EA2C35C0, (void (*)(uint64_t))sub_1C1F495C0);
    unint64_t v0 = sub_1C2149D00();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C35B8);
    }
  }
}

void sub_1C1F499A0()
{
  if (!qword_1EA2C35C8)
  {
    sub_1C1F49A8C();
    sub_1C1F498E4();
    sub_1C1F49390(&qword_1EA2C35E8, (void (*)(uint64_t))sub_1C1F49A8C);
    sub_1C1F49390(&qword_1EA2C35F0, (void (*)(uint64_t))sub_1C1F498E4);
    unint64_t v0 = sub_1C2149DA0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C35C8);
    }
  }
}

void sub_1C1F49A8C()
{
  if (!qword_1EA2C35D0)
  {
    sub_1C1F49748(255, (unint64_t *)&qword_1EA2C35D8, &qword_1EA2C35E0, 0x1E4F2B1A0, MEMORY[0x1E4FBB320]);
    sub_1C1F35A5C();
    unint64_t v0 = sub_1C2149E10();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C35D0);
    }
  }
}

void sub_1C1F49B28()
{
  if (!qword_1EA2C35F8)
  {
    sub_1C1F499A0();
    sub_1C1F49390(&qword_1EA2C3600, (void (*)(uint64_t))sub_1C1F499A0);
    unint64_t v0 = sub_1C2149D20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C35F8);
    }
  }
}

void sub_1C1F49BBC()
{
  if (!qword_1EA2C3608)
  {
    sub_1C1F49B28();
    sub_1C1F12718(255, (unint64_t *)&qword_1EBF0CB10);
    sub_1C1F49390(&qword_1EA2C3610, (void (*)(uint64_t))sub_1C1F49B28);
    sub_1C1F43FD4();
    unint64_t v0 = sub_1C2149DF0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C3608);
    }
  }
}

uint64_t sub_1C1F49C88@<X0>(uint64_t *a1@<X8>)
{
  return sub_1C1F481D4(a1);
}

uint64_t sub_1C1F49C90@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1C20D218C(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1C1F49CBC()
{
  swift_weakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C1F49CF4(unint64_t *a1)
{
  return sub_1C1F48284(a1);
}

uint64_t sub_1C1F49CFC(unint64_t a1, uint64_t a2)
{
  unint64_t v3 = v2;
  uint64_t v20 = a2;
  uint64_t v19 = sub_1C21487B0();
  uint64_t v5 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62) {
    goto LABEL_15;
  }
  uint64_t v8 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v9 = MEMORY[0x1E4FBC860];
    if (!v8) {
      return v9;
    }
    uint64_t v21 = MEMORY[0x1E4FBC860];
    uint64_t result = sub_1C1F706DC(0, v8 & ~(v8 >> 63), 0);
    if (v8 < 0) {
      break;
    }
    uint64_t v11 = 0;
    uint64_t v9 = v21;
    unint64_t v18 = a1 & 0xC000000000000001;
    v17[1] = v3;
    v17[2] = v5 + 32;
    unint64_t v12 = a1;
    while (v8 != v11)
    {
      if (v18) {
        id v13 = (id)MEMORY[0x1C8753960](v11, a1);
      }
      else {
        id v13 = *(id *)(a1 + 8 * v11 + 32);
      }
      uint64_t v14 = v13;
      sub_1C1F48504(v13, (uint64_t)v7);

      uint64_t v21 = v9;
      unint64_t v16 = *(void *)(v9 + 16);
      unint64_t v15 = *(void *)(v9 + 24);
      unint64_t v3 = v16 + 1;
      if (v16 >= v15 >> 1)
      {
        sub_1C1F706DC(v15 > 1, v16 + 1, 1);
        uint64_t v9 = v21;
      }
      ++v11;
      *(void *)(v9 + 16) = v3;
      (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v9+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(void *)(v5 + 72) * v16, v7, v19);
      a1 = v12;
      if (v8 == v11) {
        return v9;
      }
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_1C214B930();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

unint64_t sub_1C1F49F18(uint64_t a1)
{
  return sub_1C1F4A3CC(a1, (void (*)(void))sub_1C1F4CA34, (unint64_t *)&qword_1EBF0C870, type metadata accessor for Key, (uint64_t (*)(uint64_t))sub_1C1F4B590);
}

unint64_t sub_1C1F49F60(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    unint64_t v3 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1C1F4C67C();
  uint64_t v2 = sub_1C214B970();
  unint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1C1F4C6E8(v6, (uint64_t)&v15, (uint64_t (*)(void))sub_1C1F4C750);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_1C1F4B4D0(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v3[6] + 16 * result);
    *uint64_t v11 = v7;
    v11[1] = v8;
    unint64_t result = (unint64_t)sub_1C1F3CB70(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1C1F4A09C(uint64_t a1)
{
  sub_1C1F4C854();
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v6 = (void *)((char *)v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!*(void *)(a1 + 16))
  {
    uint64_t v8 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1C1F4C8BC();
  uint64_t v7 = sub_1C214B970();
  uint64_t v8 = (void *)v7;
  uint64_t v9 = *(void *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  uint64_t v10 = (uint64_t)v6 + *(int *)(v3 + 48);
  uint64_t v11 = v7 + 64;
  unint64_t v12 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v26[1] = a1;
  uint64_t v13 = a1 + v12;
  uint64_t v14 = *(void *)(v4 + 72);
  swift_retain();
  while (1)
  {
    sub_1C1F4C6E8(v13, (uint64_t)v6, (uint64_t (*)(void))sub_1C1F4C854);
    uint64_t v15 = *v6;
    uint64_t v16 = v6[1];
    unint64_t result = sub_1C1F4B4D0(*v6, v16);
    if (v18) {
      break;
    }
    unint64_t v19 = result;
    *(void *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v20 = (uint64_t *)(v8[6] + 16 * result);
    *uint64_t v20 = v15;
    v20[1] = v16;
    uint64_t v21 = v8[7];
    uint64_t v22 = type metadata accessor for Dosage();
    unint64_t result = sub_1C1F4C924(v10, v21 + *(void *)(*(void *)(v22 - 8) + 72) * v19);
    uint64_t v23 = v8[2];
    BOOL v24 = __OFADD__(v23, 1);
    uint64_t v25 = v23 + 1;
    if (v24) {
      goto LABEL_11;
    }
    void v8[2] = v25;
    v13 += v14;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1C1F4A288(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1C1F4C5E0();
  uint64_t v2 = (void *)sub_1C214B970();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 40);
  while (1)
  {
    uint64_t v5 = *v4;
    id v6 = (id)*(v4 - 1);
    unint64_t result = sub_1C1F4B9B4((uint64_t)v6);
    if (v8) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v9 = 8 * result;
    *(void *)(v2[6] + v9) = v6;
    *(void *)(v2[7] + v9) = v5;
    uint64_t v10 = v2[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_11;
    }
    v4 += 2;
    v2[2] = v12;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1C1F4A384(uint64_t a1)
{
  return sub_1C1F4A3CC(a1, (void (*)(void))sub_1C1F4C540, &qword_1EA2C3660, type metadata accessor for AttributeName, (uint64_t (*)(uint64_t))sub_1C1F4B9B4);
}

unint64_t sub_1C1F4A3CC(uint64_t a1, void (*a2)(void), unint64_t *a3, void (*a4)(uint64_t), uint64_t (*a5)(uint64_t))
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v10 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  a2(0);
  uint64_t v9 = sub_1C214B970();
  uint64_t v10 = (void *)v9;
  uint64_t v11 = *(void *)(a1 + 16);
  if (!v11)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v10;
  }
  uint64_t v12 = v9 + 64;
  uint64_t v13 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1C1F4CAD4(v13, (uint64_t)&v20, a3, a4);
    uint64_t v14 = v20;
    unint64_t result = a5(v20);
    if (v16) {
      break;
    }
    *(void *)(v12 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(void *)(v10[6] + 8 * result) = v14;
    unint64_t result = (unint64_t)sub_1C1F3CB70(&v21, (_OWORD *)(v10[7] + 32 * result));
    uint64_t v17 = v10[2];
    BOOL v18 = __OFADD__(v17, 1);
    uint64_t v19 = v17 + 1;
    if (v18) {
      goto LABEL_11;
    }
    v10[2] = v19;
    v13 += 40;
    if (!--v11)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1C1F4A510(uint64_t a1)
{
  return sub_1C1F4A53C(a1, (void (*)(void))sub_1C1F4B7BC, (uint64_t (*)(id))sub_1C1F4BA94);
}

unint64_t sub_1C1F4A53C(uint64_t a1, void (*a2)(void), uint64_t (*a3)(id))
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v5 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  a2(0);
  uint64_t v5 = (void *)sub_1C214B970();
  uint64_t v6 = *(void *)(a1 + 16);
  if (!v6)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v5;
  }
  swift_retain();
  uint64_t v7 = (void **)(a1 + 40);
  while (1)
  {
    char v8 = *v7;
    id v9 = *(v7 - 1);
    id v10 = v8;
    unint64_t result = a3(v9);
    if (v12) {
      break;
    }
    *(void *)((char *)v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v13 = 8 * result;
    *(void *)(v5[6] + v13) = v9;
    *(void *)(v5[7] + v13) = v10;
    uint64_t v14 = v5[2];
    BOOL v15 = __OFADD__(v14, 1);
    uint64_t v16 = v14 + 1;
    if (v15) {
      goto LABEL_11;
    }
    v5[2] = v16;
    v7 += 2;
    if (!--v6)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

id sub_1C1F4A658()
{
  sub_1C1F4CC58();
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *(void **)(v0 + 48);
  if (v4)
  {
    id v5 = *(id *)(v0 + 48);
  }
  else
  {
    uint64_t v6 = sub_1C21492D0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v3, 1, 1, v6);
    sub_1C214B090();
    id v9 = (void *)sub_1C1F647E8(v7, v8, 1, (uint64_t)v3);
    sub_1C1F4CCB0((uint64_t)v3);
    id v10 = *(void **)(v0 + 48);
    *(void *)(v0 + 48) = v9;
    id v5 = v9;

    uint64_t v4 = 0;
  }
  id v11 = v4;
  return v5;
}

uint64_t MedmojiImageCache.__allocating_init(listManager:imageDimension:includeArchived:)(uint64_t a1, char a2, double a3)
{
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 40) = sub_1C1F4A53C(MEMORY[0x1E4FBC860], (void (*)(void))sub_1C1F4CD0C, (uint64_t (*)(id))sub_1C1F4B6F8);
  *(void *)(v6 + 48) = 0;
  *(void *)(v6 + 16) = a1;
  *(double *)(v6 + 24) = a3;
  *(unsigned char *)(v6 + 32) = a2;
  sub_1C1F4A9CC();
  return v6;
}

uint64_t MedmojiImageCache.init(listManager:imageDimension:includeArchived:)(uint64_t a1, char a2, double a3)
{
  *(void *)(v3 + 40) = sub_1C1F4A53C(MEMORY[0x1E4FBC860], (void (*)(void))sub_1C1F4CD0C, (uint64_t (*)(id))sub_1C1F4B6F8);
  *(void *)(v3 + 48) = 0;
  *(void *)(v3 + 16) = a1;
  *(double *)(v3 + 24) = a3;
  *(unsigned char *)(v3 + 32) = a2;
  swift_retain();
  sub_1C1F4A9CC();
  swift_release();
  return v3;
}

id sub_1C1F4A880(void *a1)
{
  id v2 = objc_msgSend(a1, sel_semanticIdentifier);
  swift_beginAccess();
  uint64_t v3 = *(void *)(v1 + 40);
  if ((v3 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    id v4 = v2;
    uint64_t v5 = sub_1C214B8E0();

    if (!v5
      || (sub_1C1F12718(0, &qword_1EA2C4670),
          swift_unknownObjectRetain(),
          swift_dynamicCast(),
          id v6 = v11,
          swift_unknownObjectRelease(),
          !v11))
    {
LABEL_8:
      id v6 = sub_1C1F4A658();
    }
  }
  else
  {
    uint64_t v7 = *(void *)(v3 + 16);
    swift_bridgeObjectRetain();
    if (!v7) {
      goto LABEL_8;
    }
    unint64_t v8 = sub_1C1F4B6F8((uint64_t)v2);
    if ((v9 & 1) == 0) {
      goto LABEL_8;
    }
    id v6 = *(id *)(*(void *)(v3 + 56) + 8 * v8);
    if (!v6) {
      goto LABEL_8;
    }
  }

  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1C1F4A9CC()
{
  sub_1C1F4CC58();
  uint64_t v3 = MEMORY[0x1F4188790](v2 - 8);
  uint64_t v108 = (char *)&v102 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  uint64_t v104 = (char *)&v102 - v5;
  uint64_t v105 = v0;
  uint64_t v6 = *(void *)(v0 + 16);
  unint64_t v7 = sub_1C2149710();
  unint64_t v8 = v7;
  unint64_t v111 = MEMORY[0x1E4FBC860];
  if (v7 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_1C214B930();
    uint64_t v103 = v6;
    if (v9) {
      goto LABEL_3;
    }
LABEL_16:
    swift_bridgeObjectRelease();
    unint64_t v13 = MEMORY[0x1E4FBC860];
    goto LABEL_17;
  }
  uint64_t v9 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  uint64_t v103 = v6;
  if (!v9) {
    goto LABEL_16;
  }
LABEL_3:
  if (v9 < 1)
  {
    __break(1u);
    goto LABEL_82;
  }
  for (uint64_t i = 0; i != v9; ++i)
  {
    if ((v8 & 0xC000000000000001) != 0) {
      id v11 = (id)MEMORY[0x1C8753960](i, v8);
    }
    else {
      id v11 = *(id *)(v8 + 8 * i + 32);
    }
    char v12 = v11;
    self;
    if (swift_dynamicCastObjCClass())
    {
      MEMORY[0x1C87528E0]();
      if (*(void *)((v111 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v111 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_1C214A7D0();
      }
      sub_1C214A820();
      sub_1C214A7A0();
    }
    else
    {
    }
  }
  swift_bridgeObjectRelease();
  unint64_t v13 = v111;
LABEL_17:
  swift_bridgeObjectRelease();
  if (v13 >> 62) {
    goto LABEL_80;
  }
  uint64_t v14 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
LABEL_19:
  uint64_t v15 = (uint64_t)v104;
  uint64_t k = v14;
  if (v14)
  {
    uint64_t v16 = (uint64_t *)(v105 + 40);
    unint64_t v106 = v13;
    unint64_t v107 = v13 & 0xC000000000000001;
    uint64_t v17 = 4;
    do
    {
      if (v107) {
        id v18 = (id)MEMORY[0x1C8753960](v17 - 4, v13);
      }
      else {
        id v18 = *(id *)(v13 + 8 * v17);
      }
      uint64_t v19 = v18;
      uint64_t v20 = v17 - 3;
      if (__OFADD__(v17 - 4, 1))
      {
        __break(1u);
LABEL_76:
        __break(1u);
LABEL_77:
        __break(1u);
LABEL_78:
        __break(1u);
LABEL_79:
        __break(1u);
LABEL_80:
        swift_bridgeObjectRetain_n();
        uint64_t v14 = sub_1C214B930();
        swift_bridgeObjectRelease();
        goto LABEL_19;
      }
      id v21 = objc_msgSend(v18, sel_semanticIdentifier);
      _sSo29HKMedicationUserDomainConceptC19HealthMedicationsUIE7medmoji0eF10Experience29MedicationVisualizationConfigVSgvg_0();
      uint64_t v22 = sub_1C21492D0();
      uint64_t v23 = *(void *)(v22 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48))(v15, 1, v22) == 1)
      {
        sub_1C1F4CCB0(v15);
        swift_beginAccess();
      }
      else
      {
        sub_1C214B090();
        double v25 = v24;
        double v27 = v26;
        uint64_t v28 = (uint64_t)v108;
        (*(void (**)(char *, uint64_t, uint64_t))(v23 + 16))(v108, v15, v22);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v23 + 56))(v28, 0, 1, v22);
        uint64_t v29 = sub_1C1F647E8(v25, v27, 1, v28);
        sub_1C1F4CCB0(v28);
        id v30 = *(void (**)(uint64_t, uint64_t))(v23 + 8);
        unint64_t v13 = v23 + 8;
        v30(v15, v22);
        swift_beginAccess();
        if (v29)
        {
          uint64_t v31 = *v16;
          if ((*v16 & 0xC000000000000001) != 0)
          {
            if (v31 < 0) {
              uint64_t v32 = *v16;
            }
            else {
              uint64_t v32 = v31 & 0xFFFFFFFFFFFFFF8;
            }
            uint64_t v33 = sub_1C214B6D0();
            if (__OFADD__(v33, 1)) {
              goto LABEL_78;
            }
            *uint64_t v16 = sub_1C1F4BFB8(v32, v33 + 1);
          }
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          unint64_t v110 = (void *)*v16;
          uint64_t v35 = v110;
          *uint64_t v16 = 0x8000000000000000;
          unint64_t v37 = sub_1C1F4B6F8((uint64_t)v21);
          uint64_t v38 = v35[2];
          BOOL v39 = (v36 & 1) == 0;
          uint64_t v40 = v38 + v39;
          if (__OFADD__(v38, v39)) {
            goto LABEL_76;
          }
          unint64_t v13 = v36;
          if (v35[3] >= v40)
          {
            if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
              sub_1C1FACC1C();
            }
          }
          else
          {
            sub_1C1FABC80(v40, isUniquelyReferenced_nonNull_native);
            unint64_t v41 = sub_1C1F4B6F8((uint64_t)v21);
            if ((v13 & 1) != (v42 & 1)) {
              goto LABEL_118;
            }
            unint64_t v37 = v41;
          }
          uint64_t v58 = v110;
          if (v13)
          {
            uint64_t v59 = v110[7];
            uint64_t v60 = *(void **)(v59 + 8 * v37);
            *(void *)(v59 + 8 * v37) = v29;
          }
          else
          {
            v110[(v37 >> 6) + 8] |= 1 << v37;
            *(void *)(v58[6] + 8 * v37) = v21;
            *(void *)(v58[7] + 8 * v37) = v29;
            uint64_t v61 = v58[2];
            BOOL v62 = __OFADD__(v61, 1);
            uint64_t v63 = v61 + 1;
            if (v62) {
              goto LABEL_79;
            }
            v58[2] = v63;
            id v64 = v21;
          }
          *uint64_t v16 = (uint64_t)v58;

          swift_bridgeObjectRelease();
          uint64_t v15 = (uint64_t)v104;
          goto LABEL_23;
        }
      }
      uint64_t v43 = *v16;
      if ((*v16 & 0xC000000000000001) != 0)
      {
        if (v43 < 0) {
          uint64_t v44 = *v16;
        }
        else {
          uint64_t v44 = v43 & 0xFFFFFFFFFFFFFF8;
        }
        id v45 = v21;
        swift_bridgeObjectRetain();
        uint64_t v46 = sub_1C214B8E0();

        if (v46)
        {
          swift_unknownObjectRelease();
          uint64_t v47 = sub_1C214B6D0();
          uint64_t v48 = sub_1C1F4BFB8(v44, v47);
          swift_retain();
          unint64_t v13 = sub_1C1F4B6F8((uint64_t)v45);
          char v50 = v49;
          swift_release();
          if ((v50 & 1) == 0) {
            goto LABEL_77;
          }

          uint64_t v51 = *(void **)(*(void *)(v48 + 56) + 8 * v13);
          sub_1C209F2A8(v13, v48);
          *uint64_t v16 = v48;
        }
        else
        {
        }
      }
      else
      {
        swift_bridgeObjectRetain();
        unint64_t v52 = sub_1C1F4B6F8((uint64_t)v21);
        char v54 = v53;
        swift_bridgeObjectRelease();
        if ((v54 & 1) == 0)
        {

          goto LABEL_23;
        }
        char v55 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v56 = *v16;
        unint64_t v110 = (void *)*v16;
        *uint64_t v16 = 0x8000000000000000;
        if ((v55 & 1) == 0)
        {
          sub_1C1FACC1C();
          uint64_t v56 = (uint64_t)v110;
        }

        uint64_t v57 = *(void **)(*(void *)(v56 + 56) + 8 * v52);
        sub_1C209F2A8(v52, v56);
        *uint64_t v16 = v56;
      }
      swift_bridgeObjectRelease();
LABEL_23:
      unint64_t v13 = v106;
      swift_endAccess();

      ++v17;
    }
    while (v20 != k);
  }
  uint64_t result = swift_bridgeObjectRelease_n();
  if ((*(unsigned char *)(v105 + 32) & 1) == 0) {
    return result;
  }
  unint64_t v66 = sub_1C21496C0();
  unint64_t v1 = v66;
  unint64_t v111 = MEMORY[0x1E4FBC860];
  if (v66 >> 62)
  {
LABEL_82:
    swift_bridgeObjectRetain();
    uint64_t v67 = sub_1C214B930();
    if (v67) {
      goto LABEL_63;
    }
    goto LABEL_83;
  }
  uint64_t v67 = *(void *)((v66 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (v67)
  {
LABEL_63:
    if (v67 < 1)
    {
      __break(1u);
LABEL_117:
      __break(1u);
LABEL_118:
      sub_1C1F12718(0, &qword_1EA2C36B0);
      uint64_t result = sub_1C214BAB0();
      __break(1u);
      return result;
    }
    for (uint64_t j = 0; j != v67; ++j)
    {
      if ((v1 & 0xC000000000000001) != 0) {
        id v69 = (id)MEMORY[0x1C8753960](j, v1);
      }
      else {
        id v69 = *(id *)(v1 + 8 * j + 32);
      }
      uint64_t v70 = v69;
      self;
      if (swift_dynamicCastObjCClass())
      {
        MEMORY[0x1C87528E0]();
        if (*(void *)((v111 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v111 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1C214A7D0();
        }
        sub_1C214A820();
        sub_1C214A7A0();
      }
      else
      {
      }
    }
    swift_bridgeObjectRelease();
    unint64_t v71 = v111;
    goto LABEL_84;
  }
LABEL_83:
  swift_bridgeObjectRelease();
  unint64_t v71 = MEMORY[0x1E4FBC860];
LABEL_84:
  swift_bridgeObjectRelease();
  if (v71 >> 62) {
    goto LABEL_113;
  }
  uint64_t v72 = *(void *)((v71 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (uint64_t k = v72; k; uint64_t k = sub_1C214B930())
  {
    if (k < 1) {
      goto LABEL_117;
    }
    uint64_t v73 = 0;
    id v74 = (uint64_t *)(v105 + 40);
    unint64_t v107 = v71 & 0xC000000000000001;
    id v75 = (id *)v71;
    while (1)
    {
      if (v107) {
        uint64_t v78 = (id *)MEMORY[0x1C8753960](v73, v71);
      }
      else {
        uint64_t v78 = (id *)*(id *)(v71 + 8 * v73 + 32);
      }
      unint64_t v71 = (unint64_t)v78;
      id v79 = objc_msgSend(v78, sel_semanticIdentifier);
      uint64_t v80 = (uint64_t)v108;
      _sSo29HKMedicationUserDomainConceptC19HealthMedicationsUIE7medmoji0eF10Experience29MedicationVisualizationConfigVSgvg_0();
      sub_1C214B090();
      uint64_t v83 = sub_1C1F647E8(v81, v82, 1, v80);
      sub_1C1F4CCB0(v80);
      swift_beginAccess();
      uint64_t v84 = *v74;
      if ((*v74 & 0xC000000000000001) != 0)
      {
        if (v84 < 0) {
          uint64_t v85 = *v74;
        }
        else {
          uint64_t v85 = v84 & 0xFFFFFFFFFFFFFF8;
        }
        uint64_t v86 = sub_1C214B6D0();
        if (__OFADD__(v86, 1)) {
          goto LABEL_111;
        }
        *id v74 = sub_1C1F4BFB8(v85, v86 + 1);
      }
      char v87 = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v110 = (void *)*v74;
      long long v88 = v110;
      *id v74 = 0x8000000000000000;
      unint64_t v90 = sub_1C1F4B6F8((uint64_t)v79);
      uint64_t v91 = v88[2];
      BOOL v92 = (v89 & 1) == 0;
      uint64_t v93 = v91 + v92;
      if (__OFADD__(v91, v92)) {
        break;
      }
      char v94 = v89;
      if (v88[3] >= v93)
      {
        if (v87)
        {
          uint64_t v97 = v110;
          if (v89) {
            goto LABEL_88;
          }
        }
        else
        {
          sub_1C1FACC1C();
          uint64_t v97 = v110;
          if (v94) {
            goto LABEL_88;
          }
        }
      }
      else
      {
        sub_1C1FABC80(v93, v87);
        unint64_t v95 = sub_1C1F4B6F8((uint64_t)v79);
        if ((v94 & 1) != (v96 & 1)) {
          goto LABEL_118;
        }
        unint64_t v90 = v95;
        uint64_t v97 = v110;
        if (v94)
        {
LABEL_88:
          uint64_t v76 = v97[7];
          uint64_t v77 = *(void **)(v76 + 8 * v90);
          *(void *)(v76 + 8 * v90) = v83;

          goto LABEL_89;
        }
      }
      v97[(v90 >> 6) + 8] |= 1 << v90;
      uint64_t v98 = 8 * v90;
      *(void *)(v97[6] + v98) = v79;
      *(void *)(v97[7] + v98) = v83;
      uint64_t v99 = v97[2];
      BOOL v62 = __OFADD__(v99, 1);
      uint64_t v100 = v99 + 1;
      if (v62) {
        goto LABEL_112;
      }
      v97[2] = v100;
      id v101 = v79;
LABEL_89:
      ++v73;
      *id v74 = (uint64_t)v97;

      swift_bridgeObjectRelease();
      swift_endAccess();

      unint64_t v71 = (unint64_t)v75;
      if (k == v73) {
        return swift_bridgeObjectRelease_n();
      }
    }
    __break(1u);
LABEL_111:
    __break(1u);
LABEL_112:
    __break(1u);
LABEL_113:
    swift_bridgeObjectRetain();
  }
  return swift_bridgeObjectRelease_n();
}

uint64_t MedmojiImageCache.deinit()
{
  swift_release();
  swift_bridgeObjectRelease();

  return v0;
}

uint64_t MedmojiImageCache.__deallocating_deinit()
{
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

unint64_t sub_1C1F4B4D0(uint64_t a1, uint64_t a2)
{
  sub_1C214BB30();
  sub_1C214A690();
  uint64_t v4 = sub_1C214BB80();

  return sub_1C1F4BAE4(a1, a2, v4);
}

unint64_t sub_1C1F4B54C(uint64_t a1)
{
  uint64_t v2 = sub_1C214B740();

  return sub_1C1F4BBC8(a1, v2);
}

unint64_t sub_1C1F4B590(uint64_t a1)
{
  sub_1C214A5F0();
  sub_1C214BB30();
  sub_1C214A690();
  uint64_t v2 = sub_1C214BB80();
  swift_bridgeObjectRelease();

  return sub_1C1F4BC90(a1, v2);
}

unint64_t sub_1C1F4B624(uint64_t a1)
{
  sub_1C21496A0();
  uint64_t v2 = (void (*)(uint64_t))MEMORY[0x1E4F66D28];
  sub_1C1F1539C(&qword_1EA2C3688, MEMORY[0x1E4F66D28]);
  uint64_t v3 = sub_1C214A550();
  return sub_1C1F151FC(a1, v3, MEMORY[0x1E4F66D28], &qword_1EBF0C5E8, v2, MEMORY[0x1E4F66D38]);
}

unint64_t sub_1C1F4B6F8(uint64_t a1)
{
  uint64_t v2 = sub_1C214B210();
  return sub_1C1F4BE08(a1, v2, &qword_1EA2C36B0);
}

uint64_t type metadata accessor for MedmojiImageCache()
{
  return self;
}

uint64_t method lookup function for MedmojiImageCache(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MedmojiImageCache);
}

uint64_t dispatch thunk of MedmojiImageCache.__allocating_init(listManager:imageDimension:includeArchived:)()
{
  return (*(uint64_t (**)(void))(v0 + 176))();
}

uint64_t dispatch thunk of MedmojiImageCache.subscript.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

void sub_1C1F4B7BC()
{
  if (!qword_1EA2C3620)
  {
    sub_1C1F12718(255, &qword_1EBF0C908);
    sub_1C1F12718(255, &qword_1EA2C3628);
    sub_1C1F4CDC8((unint64_t *)&qword_1EBF0C910, &qword_1EBF0C908);
    unint64_t v0 = sub_1C214B980();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C3620);
    }
  }
}

unint64_t sub_1C1F4B878(uint64_t a1)
{
  sub_1C214BB30();
  sub_1C214BB40();
  uint64_t v2 = sub_1C214BB80();
  return sub_1C1F4BF1C(a1, v2);
}

unint64_t sub_1C1F4B8E0(uint64_t a1)
{
  sub_1C2149390();
  uint64_t v2 = (void (*)(uint64_t))MEMORY[0x1E4F66CA8];
  sub_1C1F1539C(&qword_1EA2C3648, MEMORY[0x1E4F66CA8]);
  uint64_t v3 = sub_1C214A550();
  return sub_1C1F151FC(a1, v3, MEMORY[0x1E4F66CA8], &qword_1EA2C3650, v2, MEMORY[0x1E4F66CB8]);
}

unint64_t sub_1C1F4B9B4(uint64_t a1)
{
  sub_1C214A5F0();
  sub_1C214BB30();
  sub_1C214A690();
  uint64_t v2 = sub_1C214BB80();
  swift_bridgeObjectRelease();
  return sub_1C1F4BC90(a1, v2);
}

unint64_t sub_1C1F4BA44(uint64_t a1)
{
  uint64_t v2 = sub_1C214B210();
  return sub_1C1F4BE08(a1, v2, &qword_1EA2C36A8);
}

unint64_t sub_1C1F4BA94(uint64_t a1)
{
  uint64_t v2 = sub_1C214B210();
  return sub_1C1F4BE08(a1, v2, &qword_1EBF0C908);
}

unint64_t sub_1C1F4BAE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    id v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_1C214BA80() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        unint64_t v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_1C214BA80() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_1C1F4BBC8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v6 = ~v3;
    do
    {
      sub_1C1F4CBA8(*(void *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      char v7 = MEMORY[0x1C87538D0](v9, a1);
      sub_1C1F4CC04((uint64_t)v9);
      if (v7) {
        break;
      }
      unint64_t v4 = (v4 + 1) & v6;
    }
    while (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_1C1F4BC90(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v5 = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
  {
    uint64_t v6 = sub_1C214A5F0();
    uint64_t v8 = v7;
    if (v6 == sub_1C214A5F0() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    char v11 = sub_1C214BA80();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      uint64_t v12 = ~v4;
      unint64_t v5 = (v5 + 1) & v12;
      if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
      {
        while (1)
        {
          uint64_t v13 = sub_1C214A5F0();
          uint64_t v15 = v14;
          if (v13 == sub_1C214A5F0() && v15 == v16) {
            break;
          }
          char v18 = sub_1C214BA80();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            unint64_t v5 = (v5 + 1) & v12;
            if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5)) {
              continue;
            }
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

unint64_t sub_1C1F4BE08(uint64_t a1, uint64_t a2, unint64_t *a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t i = a2 & ~v5;
  if ((*(void *)(v3 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    sub_1C1F12718(0, a3);
    id v7 = *(id *)(*(void *)(v3 + 48) + 8 * i);
    char v8 = sub_1C214B220();

    if ((v8 & 1) == 0)
    {
      uint64_t v9 = ~v5;
      for (unint64_t i = (i + 1) & v9; ((*(void *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v9)
      {
        id v10 = *(id *)(*(void *)(v3 + 48) + 8 * i);
        char v11 = sub_1C214B220();

        if (v11) {
          break;
        }
      }
    }
  }
  return i;
}

unint64_t sub_1C1F4BF1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(void *)(v7 + 8 * result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(void *)(v7 + 8 * result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

uint64_t sub_1C1F4BFB8(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    sub_1C1F4CD0C();
    uint64_t v2 = sub_1C214B960();
    uint64_t v18 = v2;
    sub_1C214B8C0();
    uint64_t v3 = sub_1C214B8F0();
    if (v3)
    {
      uint64_t v4 = v3;
      sub_1C1F12718(0, &qword_1EA2C36B0);
      do
      {
        swift_dynamicCast();
        sub_1C1F12718(0, &qword_1EA2C4670);
        swift_dynamicCast();
        uint64_t v2 = v18;
        unint64_t v12 = *(void *)(v18 + 16);
        if (*(void *)(v18 + 24) <= v12)
        {
          sub_1C1FABC80(v12 + 1, 1);
          uint64_t v2 = v18;
        }
        uint64_t result = sub_1C214B210();
        uint64_t v6 = v2 + 64;
        uint64_t v7 = -1 << *(unsigned char *)(v2 + 32);
        unint64_t v8 = result & ~v7;
        unint64_t v9 = v8 >> 6;
        if (((-1 << v8) & ~*(void *)(v2 + 64 + 8 * (v8 >> 6))) != 0)
        {
          unint64_t v10 = __clz(__rbit64((-1 << v8) & ~*(void *)(v2 + 64 + 8 * (v8 >> 6)))) | v8 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v13 = 0;
          unint64_t v14 = (unint64_t)(63 - v7) >> 6;
          do
          {
            if (++v9 == v14 && (v13 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v15 = v9 == v14;
            if (v9 == v14) {
              unint64_t v9 = 0;
            }
            v13 |= v15;
            uint64_t v16 = *(void *)(v6 + 8 * v9);
          }
          while (v16 == -1);
          unint64_t v10 = __clz(__rbit64(~v16)) + (v9 << 6);
        }
        *(void *)(v6 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
        uint64_t v11 = 8 * v10;
        *(void *)(*(void *)(v2 + 48) + v11) = v17;
        *(void *)(*(void *)(v2 + 56) + v11) = v4;
        ++*(void *)(v2 + 16);
        uint64_t v4 = sub_1C214B8F0();
      }
      while (v4);
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x1E4FBC868];
  }
  return v2;
}

unint64_t sub_1C1F4C208(uint64_t a1)
{
  return sub_1C1F4C30C(a1, (void (*)(void))sub_1C1F4C988);
}

unint64_t sub_1C1F4C220(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_1C1F4C7BC();
    uint64_t v3 = (void *)sub_1C214B970();
    for (unint64_t i = (uint64_t *)(a1 + 40); ; i += 2)
    {
      uint64_t v5 = *(i - 1);
      uint64_t v6 = *i;
      unint64_t result = sub_1C1F4B878(v5);
      if (v8) {
        break;
      }
      *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      uint64_t v9 = 8 * result;
      *(void *)(v3[6] + v9) = v5;
      *(void *)(v3[7] + v9) = v6;
      uint64_t v10 = v3[2];
      BOOL v11 = __OFADD__(v10, 1);
      uint64_t v12 = v10 + 1;
      if (v11) {
        goto LABEL_10;
      }
      v3[2] = v12;
      if (!--v1) {
        return (unint64_t)v3;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E4FBC868];
  }
  return result;
}

unint64_t sub_1C1F4C2F4(uint64_t a1)
{
  return sub_1C1F4C30C(a1, (void (*)(void))sub_1C1F4C438);
}

unint64_t sub_1C1F4C30C(uint64_t a1, void (*a2)(void))
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    return MEMORY[0x1E4FBC868];
  }
  a2(0);
  uint64_t v4 = (void *)sub_1C214B970();
  uint64_t v5 = *(void *)(a1 + 32);
  long long v17 = *(_OWORD *)(a1 + 40);
  uint64_t v6 = *(void *)(a1 + 56);
  unint64_t result = sub_1C1F4B878(v5);
  long long v8 = v17;
  if (v9)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_unknownObjectRetain();
    return (unint64_t)v4;
  }
  uint64_t v10 = a1 + 64;
  while (1)
  {
    *(void *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(void *)(v4[6] + 8 * result) = v5;
    uint64_t v11 = v4[7] + 24 * result;
    *(_OWORD *)uint64_t v11 = v8;
    *(void *)(v11 + 16) = v6;
    uint64_t v12 = v4[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      break;
    }
    v4[2] = v14;
    if (!--v2) {
      goto LABEL_8;
    }
    uint64_t v15 = v10 + 32;
    uint64_t v5 = *(void *)v10;
    long long v18 = *(_OWORD *)(v10 + 8);
    uint64_t v6 = *(void *)(v10 + 24);
    swift_unknownObjectRetain();
    unint64_t result = sub_1C1F4B878(v5);
    uint64_t v10 = v15;
    long long v8 = v18;
    if (v16) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

void sub_1C1F4C438()
{
  if (!qword_1EA2C3630)
  {
    type metadata accessor for UIUserInterfaceSizeClass(255);
    sub_1C1F4C4E4();
    sub_1C1F1539C(&qword_1EA2C3640, type metadata accessor for UIUserInterfaceSizeClass);
    unint64_t v0 = sub_1C214B980();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C3630);
    }
  }
}

unint64_t sub_1C1F4C4E4()
{
  unint64_t result = qword_1EA2C3638;
  if (!qword_1EA2C3638)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA2C3638);
  }
  return result;
}

void sub_1C1F4C540()
{
  if (!qword_1EA2C3658)
  {
    type metadata accessor for AttributeName(255);
    sub_1C1F1539C(&qword_1EA2C2AB8, type metadata accessor for AttributeName);
    unint64_t v0 = sub_1C214B980();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C3658);
    }
  }
}

void sub_1C1F4C5E0()
{
  if (!qword_1EA2C3668)
  {
    type metadata accessor for FeatureKey(255);
    sub_1C1F1539C(&qword_1EA2C2AA8, type metadata accessor for FeatureKey);
    unint64_t v0 = sub_1C214B980();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C3668);
    }
  }
}

void sub_1C1F4C67C()
{
  if (!qword_1EA2C7520)
  {
    unint64_t v0 = sub_1C214B980();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C7520);
    }
  }
}

uint64_t sub_1C1F4C6E8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void sub_1C1F4C750()
{
  if (!qword_1EA2C3670)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA2C3670);
    }
  }
}

void sub_1C1F4C7BC()
{
  if (!qword_1EA2C3678)
  {
    type metadata accessor for HKMedicationScheduleType(255);
    sub_1C1F1539C(&qword_1EA2C3680, type metadata accessor for HKMedicationScheduleType);
    unint64_t v0 = sub_1C214B980();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C3678);
    }
  }
}

void sub_1C1F4C854()
{
  if (!qword_1EA2C3690)
  {
    type metadata accessor for Dosage();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA2C3690);
    }
  }
}

void sub_1C1F4C8BC()
{
  if (!qword_1EA2C3698)
  {
    type metadata accessor for Dosage();
    unint64_t v0 = sub_1C214B980();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C3698);
    }
  }
}

uint64_t sub_1C1F4C924(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Dosage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1C1F4C988()
{
  if (!qword_1EA2C36A0)
  {
    type metadata accessor for HKMedicationScheduleType(255);
    sub_1C1F4C4E4();
    sub_1C1F1539C(&qword_1EA2C3680, type metadata accessor for HKMedicationScheduleType);
    unint64_t v0 = sub_1C214B980();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C36A0);
    }
  }
}

void sub_1C1F4CA34()
{
  if (!qword_1EBF0C950)
  {
    type metadata accessor for Key(255);
    sub_1C1F1539C((unint64_t *)&qword_1EBF0C850, type metadata accessor for Key);
    unint64_t v0 = sub_1C214B980();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBF0C950);
    }
  }
}

uint64_t sub_1C1F4CAD4(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_1C1F4CB40(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

void sub_1C1F4CB40(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v5) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

uint64_t sub_1C1F4CBA8(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1C1F4CC04(uint64_t a1)
{
  return a1;
}

void sub_1C1F4CC58()
{
  if (!qword_1EBF0B690)
  {
    sub_1C21492D0();
    unint64_t v0 = sub_1C214B4F0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBF0B690);
    }
  }
}

uint64_t sub_1C1F4CCB0(uint64_t a1)
{
  sub_1C1F4CC58();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1C1F4CD0C()
{
  if (!qword_1EA2C36B8)
  {
    sub_1C1F12718(255, &qword_1EA2C36B0);
    sub_1C1F12718(255, &qword_1EA2C4670);
    sub_1C1F4CDC8(&qword_1EA2C36C0, &qword_1EA2C36B0);
    unint64_t v0 = sub_1C214B980();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C36B8);
    }
  }
}

uint64_t sub_1C1F4CDC8(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C1F12718(255, a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for MedicationSecondaryEducationCompoundDataSource(uint64_t a1)
{
  return sub_1C1F20D10(a1, (uint64_t *)&unk_1EA2C36C8);
}

uint64_t sub_1C1F4CE38()
{
  return swift_initClassMetadata2();
}

void sub_1C1F4CE78()
{
}

uint64_t sub_1C1F4CEA8()
{
  return type metadata accessor for MedicationSecondaryEducationCompoundDataSource(0);
}

uint64_t type metadata accessor for MedicationSecondaryEducationDataSource(uint64_t a1)
{
  return sub_1C1F20D10(a1, (uint64_t *)&unk_1EA2C36E0);
}

uint64_t sub_1C1F4CED0()
{
  return swift_initClassMetadata2();
}

void sub_1C1F4CF1C()
{
}

uint64_t sub_1C1F4CF4C()
{
  _s19HealthMedicationsUI34InteractionSeperatorLineDataSourceCfd_0();

  return swift_deallocClassInstance();
}

uint64_t sub_1C1F4CF7C()
{
  return type metadata accessor for MedicationSecondaryEducationDataSource(0);
}

uint64_t sub_1C1F4CF84()
{
  uint64_t v1 = *v0;
  type metadata accessor for MedicationInfoItemCell();
  sub_1C1F4D2E8((unint64_t *)&qword_1EA2C36F8, (void (*)(uint64_t))type metadata accessor for MedicationInfoItemCell);
  sub_1C214ACC0();
  if (*(unsigned char *)(v1 + qword_1EA2C36D8))
  {
    type metadata accessor for MedicationMarkdownItemCell();
    uint64_t v2 = (unint64_t *)&unk_1EA2C3700;
    uint64_t v3 = type metadata accessor for MedicationMarkdownItemCell;
  }
  else
  {
    type metadata accessor for MedicationSideEffectsItemCell();
    uint64_t v2 = &qword_1EA2C2C30;
    uint64_t v3 = type metadata accessor for MedicationSideEffectsItemCell;
  }
  sub_1C1F4D2E8(v2, (void (*)(uint64_t))v3);
  return sub_1C214ACC0();
}

uint64_t sub_1C1F4D0A0(uint64_t a1)
{
  uint64_t v2 = sub_1C2148710();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  uint64_t v6 = &v15[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v4);
  long long v8 = &v15[-v7];
  sub_1C2148690();
  if (a1) {
    double v9 = -10.0;
  }
  else {
    double v9 = 10.0;
  }
  uint64_t v10 = (void (*)(unsigned char *, void))sub_1C21486D0();
  *uint64_t v11 = v9;
  v10(v15, 0);
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v3 + 16))(v6, v8, v2);
  uint64_t v12 = sub_1C2148700();
  BOOL v13 = *(void (**)(unsigned char *, uint64_t))(v3 + 8);
  v13(v6, v2);
  v13(v8, v2);
  return v12;
}

uint64_t sub_1C1F4D228()
{
  return sub_1C2148B80();
}

uint64_t sub_1C1F4D2A0()
{
  return sub_1C1F4D2E8(&qword_1EA2C36F0, (void (*)(uint64_t))type metadata accessor for MedicationSecondaryEducationDataSource);
}

uint64_t sub_1C1F4D2E8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C1F4D330(unsigned __int8 *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t), char *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v72 = a4;
  uint64_t v73 = a5;
  *(void *)&long long v71 = a3;
  uint64_t v14 = sub_1C2147B20();
  uint64_t v76 = *(void *)(v14 - 8);
  uint64_t v77 = v14;
  MEMORY[0x1F4188790](v14);
  char v16 = (char *)&v71 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1C2148540();
  uint64_t v80 = *(void *)(v17 - 8);
  uint64_t v81 = v17;
  uint64_t v18 = MEMORY[0x1F4188790](v17);
  id v79 = (char *)&v71 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  id v75 = (char *)&v71 - v20;
  sub_1C1F4DBBC(0, (unint64_t *)&qword_1EBF0B690, MEMORY[0x1E4F66C80], MEMORY[0x1E4FBB718]);
  uint64_t v22 = MEMORY[0x1F4188790](v21 - 8);
  double v24 = (char *)&v71 - v23;
  MEMORY[0x1F4188790](v22);
  double v26 = (char *)&v71 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = v27;
  (*(void (**)(char *, uint64_t, uint64_t))(v27 + 32))(v26, a2, a8);
  int v28 = *a1;
  uint64_t v82 = a7;
  *(unsigned char *)(a7 + qword_1EA2C36D8) = v28;
  if (v28)
  {
    LOBYTE(v83[0]) = v28;
    uint64_t v29 = a6;
    char v30 = sub_1C1FECA34((uint64_t)v26, v83, a8, a9);
    uint64_t v31 = type metadata accessor for MedicationMarkdownItem();
    uint64_t v32 = swift_allocObject();
    type metadata accessor for MedicationMarkdownItemCell();
    sub_1C1F4D2E8(&qword_1EA2C3700, (void (*)(uint64_t))type metadata accessor for MedicationMarkdownItemCell);
    *(void *)(v32 + 16) = sub_1C21481D0();
    *(void *)(v32 + 24) = v33;
    id v34 = v72;
    *(void *)(v32 + 32) = v71;
    *(void *)(v32 + 40) = v34;
    *(void *)(v32 + 48) = v73;
    *(void *)(v32 + 56) = v29;
    *(unsigned char *)(v32 + 64) = v30 & 1;
    uint64_t v35 = (unint64_t *)&unk_1EA2C3710;
    unint64_t v36 = type metadata accessor for MedicationMarkdownItem;
  }
  else
  {
    uint64_t v31 = type metadata accessor for MedicationSideEffectsItem();
    uint64_t v32 = swift_allocObject();
    type metadata accessor for MedicationSideEffectsItemCell();
    sub_1C1F4D2E8(&qword_1EA2C2C30, (void (*)(uint64_t))type metadata accessor for MedicationSideEffectsItemCell);
    *(void *)(v32 + 16) = sub_1C21481D0();
    *(void *)(v32 + 24) = v37;
    uint64_t v38 = v72;
    *(void *)(v32 + 32) = v71;
    *(void *)(v32 + 40) = v38;
    *(void *)(v32 + 48) = v73;
    *(void *)(v32 + 56) = a6;
    uint64_t v35 = (unint64_t *)&unk_1EA2C3720;
    unint64_t v36 = type metadata accessor for MedicationSideEffectsItem;
  }
  uint64_t v39 = sub_1C1F4D2E8(v35, (void (*)(uint64_t))v36);
  v83[3] = v31;
  v83[4] = v39;
  v83[0] = v32;
  (*(void (**)(uint64_t, uint64_t))(a9 + 16))(a8, a9);
  uint64_t v40 = (*(uint64_t (**)(uint64_t, uint64_t))(a9 + 24))(a8, a9);
  uint64_t v42 = v41;
  uint64_t v43 = (*(uint64_t (**)(uint64_t, uint64_t))(a9 + 32))(a8, a9);
  if (v44) {
    uint64_t v45 = v43;
  }
  else {
    uint64_t v45 = 0;
  }
  uint64_t v46 = a8;
  uint64_t v74 = a8;
  if (v44) {
    unint64_t v47 = v44;
  }
  else {
    unint64_t v47 = 0xE000000000000000;
  }
  uint64_t v48 = (*(uint64_t (**)(uint64_t, uint64_t))(a9 + 40))(v46, a9);
  uint64_t v73 = v26;
  if (v48) {
    uint64_t v49 = v48;
  }
  else {
    uint64_t v49 = MEMORY[0x1E4FBC860];
  }
  uint64_t v50 = type metadata accessor for MedicationInfoItem();
  uint64_t v51 = swift_allocObject();
  type metadata accessor for MedicationInfoItemCell();
  sub_1C1F4D2E8((unint64_t *)&qword_1EA2C36F8, (void (*)(uint64_t))type metadata accessor for MedicationInfoItemCell);
  *(void *)(v51 + 16) = sub_1C21481D0();
  *(void *)(v51 + 24) = v52;
  sub_1C1F4DB28((uint64_t)v24, v51 + OBJC_IVAR____TtC19HealthMedicationsUI18MedicationInfoItem_medmoji);
  char v53 = (uint64_t *)(v51 + OBJC_IVAR____TtC19HealthMedicationsUI18MedicationInfoItem_name);
  *char v53 = v40;
  v53[1] = v42;
  char v54 = (uint64_t *)(v51 + OBJC_IVAR____TtC19HealthMedicationsUI18MedicationInfoItem_strength);
  *char v54 = v45;
  v54[1] = v47;
  *(void *)(v51 + OBJC_IVAR____TtC19HealthMedicationsUI18MedicationInfoItem_ingredients) = v49;
  uint64_t v72 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
  sub_1C1F4DBBC(0, (unint64_t *)&qword_1EBF0C958, (uint64_t (*)(uint64_t))sub_1C1F1CB5C, MEMORY[0x1E4FBBE00]);
  uint64_t v55 = swift_allocObject();
  long long v71 = xmmword_1C214FCD0;
  *(_OWORD *)(v55 + 16) = xmmword_1C214FCD0;
  *(void *)(v55 + 56) = v50;
  *(void *)(v55 + 64) = sub_1C1F4D2E8(&qword_1EA2C3718, (void (*)(uint64_t))type metadata accessor for MedicationInfoItem);
  *(void *)(v55 + 32) = v51;
  swift_retain();
  sub_1C2147B10();
  sub_1C2147AD0();
  uint64_t v56 = v77;
  uint64_t v57 = *(void (**)(char *, uint64_t))(v76 + 8);
  v57(v16, v77);
  uint64_t v58 = v75;
  sub_1C2148520();
  uint64_t v59 = swift_allocObject();
  *(_OWORD *)(v59 + 16) = v71;
  sub_1C1F236D8((uint64_t)v83, v59 + 32);
  sub_1C2147B10();
  sub_1C2147AD0();
  v57(v16, v56);
  uint64_t v60 = v79;
  sub_1C2148520();
  sub_1C1F4DBBC(0, (unint64_t *)&qword_1EA2C2DD0, MEMORY[0x1E4F66468], v72);
  uint64_t v61 = v80;
  uint64_t v62 = *(void *)(v80 + 72);
  unint64_t v63 = (*(unsigned __int8 *)(v80 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v80 + 80);
  uint64_t v64 = swift_allocObject();
  *(_OWORD *)(v64 + 16) = xmmword_1C214FCC0;
  unint64_t v65 = v64 + v63;
  unint64_t v66 = *(void (**)(unint64_t, char *, uint64_t))(v61 + 16);
  uint64_t v67 = v81;
  v66(v65, v58, v81);
  v66(v65 + v62, v60, v67);
  uint64_t v68 = sub_1C2147F50();
  swift_release();
  id v69 = *(void (**)(char *, uint64_t))(v61 + 8);
  v69(v60, v67);
  v69(v58, v67);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v83);
  (*(void (**)(char *, uint64_t))(v78 + 8))(v73, v74);
  return v68;
}

uint64_t sub_1C1F4DB28(uint64_t a1, uint64_t a2)
{
  sub_1C1F4DBBC(0, (unint64_t *)&qword_1EBF0B690, MEMORY[0x1E4F66C80], MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1C1F4DBBC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t type metadata accessor for MedicationHighlightsDataSource()
{
  uint64_t result = qword_1EA2C3728;
  if (!qword_1EA2C3728) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C1F4DC6C()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1C1F4DCAC(void *a1, void *a2)
{
  sub_1C1F4E678(0, (unint64_t *)&unk_1EBF0B1B0, MEMORY[0x1E4F26E60], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v34 - v5;
  sub_1C2147EE0();
  uint64_t v7 = (void *)MEMORY[0x1C8750050]();
  id v8 = objc_msgSend(a2, sel_semanticIdentifier);
  id v9 = objc_msgSend(v8, sel_stringValue);

  sub_1C214A5F0();
  uint64_t v10 = (void *)sub_1C2147EC0();
  swift_bridgeObjectRelease();
  sub_1C1F4E678(0, &qword_1EA2C3738, MEMORY[0x1E4F67030], MEMORY[0x1E4FBBE00]);
  uint64_t v11 = sub_1C2147E50();
  uint64_t v12 = *(void *)(v11 - 8);
  unint64_t v13 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1C214FCD0;
  (*(void (**)(unint64_t, void, uint64_t))(v12 + 104))(v14 + v13, *MEMORY[0x1E4F67020], v11);
  uint64_t v15 = sub_1C2147E70();
  uint64_t v17 = v16;
  uint64_t v18 = sub_1C21475B0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v6, 1, 1, v18);
  sub_1C1F13C84(0, &qword_1EA2C3740);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_1C214FCC0;
  *(void *)(v19 + 32) = sub_1C2147E60();
  *(void *)(v19 + 40) = 0;
  uint64_t v20 = (void *)MEMORY[0x1C8750030](v14, v15, v17, v6, v19);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C1F4E6DC((uint64_t)v6);
  sub_1C1F13C84(0, (unint64_t *)&qword_1EBF0CA10);
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_1C214FCB0;
  *(void *)(v21 + 32) = v10;
  *(void *)(v21 + 40) = v20;
  uint64_t v35 = v21;
  sub_1C214A7A0();
  sub_1C1F12718(0, &qword_1EBF0B4B0);
  id v22 = v10;
  id v23 = v20;
  double v24 = (void *)sub_1C214A770();
  swift_bridgeObjectRelease();
  id v25 = objc_msgSend(self, sel_andPredicateWithSubpredicates_, v24);

  objc_msgSend(v7, sel_setPredicate_, v25);
  id v26 = objc_allocWithZone(MEMORY[0x1E4F29008]);
  uint64_t v27 = (void *)sub_1C214A5B0();
  id v28 = objc_msgSend(v26, sel_initWithKey_ascending_, v27, 0);

  uint64_t v29 = swift_allocObject();
  *(_OWORD *)(v29 + 16) = xmmword_1C214E170;
  *(void *)(v29 + 32) = v28;
  uint64_t v35 = v29;
  sub_1C214A7A0();
  sub_1C1F12718(0, (unint64_t *)&unk_1EBF0B4B8);
  id v30 = v28;
  uint64_t v31 = (void *)sub_1C214A770();
  swift_bridgeObjectRelease();
  objc_msgSend(v7, sel_setSortDescriptors_, v31);

  objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1C0F0]), sel_initWithFetchRequest_managedObjectContext_sectionNameKeyPath_cacheName_, v7, a1, 0, 0);
  uint64_t v32 = sub_1C2148A10();

  return v32;
}

void sub_1C1F4E184()
{
}

id sub_1C1F4E1B4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MedicationHighlightsDataSource();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1C1F4E1EC()
{
  return type metadata accessor for MedicationHighlightsDataSource();
}

void sub_1C1F4E1F4()
{
}

unint64_t sub_1C1F4E20C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_1C2149BE0();
  MEMORY[0x1F4188790](v2 - 8);
  if (qword_1EBF0CA00 != -1) {
    swift_once();
  }
  id v3 = (id)qword_1EBF0CA18;
  swift_bridgeObjectRetain();
  sub_1C2147730();
  swift_bridgeObjectRelease();

  sub_1C2149B50();
  uint64_t v4 = sub_1C2148180();
  swift_allocObject();
  uint64_t v5 = sub_1C2148170();
  a1[3] = v4;
  unint64_t result = sub_1C1F4E620();
  a1[4] = result;
  *a1 = v5;
  return result;
}

unint64_t sub_1C1F4E390@<X0>(uint64_t *a1@<X8>)
{
  return sub_1C1F4E20C(a1);
}

void sub_1C1F4E3A8()
{
  uint64_t v0 = sub_1C2148410();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  id v3 = (char *)v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1C2148280();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = objc_msgSend(self, sel_sharedBehavior);
  if (!v8)
  {
    __break(1u);
    goto LABEL_9;
  }
  id v9 = v8;
  id v10 = objc_msgSend(v8, sel_features);

  if (!v10)
  {
LABEL_9:
    __break(1u);
    return;
  }
  unsigned int v11 = objc_msgSend(v10, sel_stanley);

  if (v11)
  {
    sub_1C2148270();
    uint64_t v12 = v16[1];
    uint64_t v13 = sub_1C2148260();
    if (v12)
    {
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    }
    else
    {
      uint64_t v14 = (void *)v13;
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      id v15 = objc_msgSend(self, sel_estimatedDimension_, 100.0);
      sub_1C214AEE0();
    }
  }
  else
  {
    sub_1C21483D0();
    sub_1C21483A0();
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  }
}

unint64_t sub_1C1F4E620()
{
  unint64_t result = qword_1EA2C3550;
  if (!qword_1EA2C3550)
  {
    sub_1C2148180();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C3550);
  }
  return result;
}

void sub_1C1F4E678(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C1F4E6DC(uint64_t a1)
{
  sub_1C1F4E678(0, (unint64_t *)&unk_1EBF0B1B0, MEMORY[0x1E4F26E60], MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t InteractionResultDetailViewController.interactionResults.getter()
{
  return swift_retain();
}

uint64_t InteractionResultDetailViewController.stackedMemojiDisplayable.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C1F236D8(v1 + qword_1EA2C3750, a1);
}

uint64_t InteractionResultDetailViewController.firstItemName.getter()
{
  uint64_t v1 = *(void *)(v0 + qword_1EA2C3758);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t InteractionResultDetailViewController.firstItemDetailsProviding.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C1F236D8(v1 + qword_1EA2C3760, a1);
}

uint64_t InteractionResultDetailViewController.firstItemIngredients.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t InteractionResultDetailViewController.secondItemName.getter()
{
  uint64_t v1 = *(void *)(v0 + qword_1EA2C3770);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t InteractionResultDetailViewController.secondItemDetailsProviding.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C1F236D8(v1 + qword_1EA2C3778, a1);
}

uint64_t InteractionResultDetailViewController.secondItemIngredients.getter()
{
  return swift_bridgeObjectRetain();
}

id InteractionResultDetailViewController.__allocating_init(interactionResults:stackedMemojiDisplayable:firstItemName:firstItemDetailsProviding:firstItemIngredients:secondItemName:secondItemDetailsProviding:secondItemIngredients:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  id v18 = objc_allocWithZone(v10);
  id v19 = sub_1C1F4F79C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
  swift_release();
  return v19;
}

id InteractionResultDetailViewController.init(interactionResults:stackedMemojiDisplayable:firstItemName:firstItemDetailsProviding:firstItemIngredients:secondItemName:secondItemDetailsProviding:secondItemIngredients:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  id v10 = sub_1C1F4F79C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
  swift_release();
  return v10;
}

void sub_1C1F4E978()
{
}

void sub_1C1F4E9D4()
{
  uint64_t v1 = *(void *)&v0[qword_1EA2C3748];
  sub_1C1F236D8((uint64_t)&v0[qword_1EA2C3750], (uint64_t)&v19);
  uint64_t v3 = *(void *)&v0[qword_1EA2C3758];
  uint64_t v2 = *(void *)&v0[qword_1EA2C3758 + 8];
  sub_1C1F236D8((uint64_t)&v0[qword_1EA2C3760], (uint64_t)v18);
  uint64_t v4 = *(void *)&v0[qword_1EA2C3768];
  uint64_t v6 = *(void *)&v0[qword_1EA2C3770];
  uint64_t v5 = *(void *)&v0[qword_1EA2C3770 + 8];
  sub_1C1F236D8((uint64_t)&v0[qword_1EA2C3778], (uint64_t)v17);
  uint64_t v7 = *(void *)&v0[qword_1EA2C3780];
  uint64_t v8 = type metadata accessor for InteractionResultDetailDataSourceProvider();
  uint64_t v9 = (void *)swift_allocObject();
  v9[2] = v1;
  sub_1C1F31280(&v19, (uint64_t)(v9 + 3));
  v9[8] = v3;
  v9[9] = v2;
  sub_1C1F31280(v18, (uint64_t)(v9 + 10));
  v9[15] = v4;
  v9[16] = v6;
  v9[17] = v5;
  sub_1C1F31280(v17, (uint64_t)(v9 + 18));
  v9[23] = v7;
  uint64_t v20 = v8;
  unint64_t v21 = sub_1C1F4F9F8();
  *(void *)&long long v19 = v9;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C2148AF0();
  v16.receiver = v0;
  v16.super_class = (Class)type metadata accessor for InteractionResultDetailViewController();
  objc_msgSendSuper2(&v16, sel_viewDidLoad);
  id v10 = objc_msgSend(v0, sel_collectionView);
  if (v10)
  {
    unsigned int v11 = v10;
    sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C900);
    uint64_t v12 = self;
    id v13 = objc_msgSend(v12, sel_secondarySystemBackgroundColor);
    id v14 = objc_msgSend(v12, sel_systemGroupedBackgroundColor);
    id v15 = (void *)sub_1C214B150();

    objc_msgSend(v11, sel_setBackgroundColor_, v15);
  }
  else
  {
    __break(1u);
  }
}

void sub_1C1F4EC04(void *a1)
{
  id v1 = a1;
  sub_1C1F4E9D4();
}

id sub_1C1F4EC4C()
{
  sub_1C2148B10();
  id v1 = (void (*)(void))sub_1C2148B20();
  v1();
  sub_1C2148AB0();
  uint64_t v2 = sub_1C2148810();
  swift_release();
  uint64_t v3 = *(void *)(v2 + 16);
  if (v3)
  {
    sub_1C1F248B4(0, (unint64_t *)&qword_1EA2C2CE0);
    sub_1C1F248B4(0, &qword_1EA2C3790);
    uint64_t v4 = 0;
    while (1)
    {
      long long v9 = *(_OWORD *)(v2 + 16 * v4 + 32);
      swift_unknownObjectRetain_n();
      if (swift_dynamicCast())
      {
        sub_1C1F31280(v7, (uint64_t)v10);
        __swift_project_boxed_opaque_existential_0(v10, v10[3]);
        id result = objc_msgSend(v0, sel_collectionView);
        if (!result)
        {
          __break(1u);
          return result;
        }
        uint64_t v6 = result;
        sub_1C21488E0();

        swift_unknownObjectRelease();
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v10);
      }
      else
      {
        uint64_t v8 = 0;
        memset(v7, 0, sizeof(v7));
        swift_unknownObjectRelease();
        sub_1C1F4FA9C((uint64_t)v7, &qword_1EA2C3798, &qword_1EA2C3790);
      }
      if (v3 == ++v4) {
        return (id)swift_bridgeObjectRelease();
      }
    }
  }

  return (id)swift_bridgeObjectRelease();
}

void sub_1C1F4EE40(void *a1)
{
  uint64_t v2 = (void *)sub_1C2147D40();
  objc_msgSend(a1, sel_deselectItemAtIndexPath_animated_, v2, 1);

  uint64_t v3 = (void *)sub_1C2147D40();
  id v4 = objc_msgSend(a1, sel_cellForItemAtIndexPath_, v3);

  if (v4)
  {
    sub_1C2148AB0();
    sub_1C2148820();
    sub_1C2148380();
    swift_release();
    sub_1C1F236D8((uint64_t)v11, (uint64_t)v8);
    sub_1C1F248B4(0, (unint64_t *)&qword_1EBF0C2F0);
    sub_1C1F248B4(0, &qword_1EA2C37A0);
    if (swift_dynamicCast())
    {
      uint64_t v5 = v6;
LABEL_6:
      sub_1C1F31280(v5, (uint64_t)v10);
      __swift_project_boxed_opaque_existential_0(v10, v10[3]);
      sub_1C2148470();

      __swift_destroy_boxed_opaque_existential_0((uint64_t)v11);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v10);
      return;
    }
    uint64_t v7 = 0;
    memset(v6, 0, sizeof(v6));
    sub_1C1F4FA9C((uint64_t)v6, (unint64_t *)&qword_1EA2C6A10, &qword_1EA2C37A0);
    *(void *)&v6[0] = v4;
    sub_1C1F12718(0, (unint64_t *)&qword_1EA2C6A00);
    id v4 = v4;
    if (swift_dynamicCast())
    {
      uint64_t v5 = v8;
      goto LABEL_6;
    }
    uint64_t v9 = 0;
    memset(v8, 0, sizeof(v8));

    __swift_destroy_boxed_opaque_existential_0((uint64_t)v11);
    sub_1C1F4FA9C((uint64_t)v8, (unint64_t *)&qword_1EA2C6A10, &qword_1EA2C37A0);
  }
}

uint64_t sub_1C1F4F074(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5 = sub_1C2147D90();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2147D50();
  id v9 = a3;
  id v10 = a1;
  sub_1C1F4EE40(v9);

  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1C1F4F170(void *a1)
{
  swift_unknownObjectRetain();
  id v2 = a1;
  sub_1C214B5A0();
  swift_unknownObjectRelease();
  objc_msgSend(v2, sel_dismissViewControllerAnimated_completion_, 1, 0);

  return __swift_destroy_boxed_opaque_existential_0((uint64_t)&v4);
}

void sub_1C1F4F1E4(char a1)
{
  id v3 = objc_msgSend(v1, sel_navigationItem);
  if (a1) {
    id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB14A8]), sel_initWithBarButtonSystemItem_target_action_, 0, v1, sel_doneButtonTapped_);
  }
  else {
    id v4 = 0;
  }
  sub_1C1F12718(0, (unint64_t *)&qword_1EA2C3508);
  v10[3] = type metadata accessor for InteractionResultDetailViewController();
  v10[0] = v1;
  id v5 = v1;
  uint64_t v6 = (void *)MEMORY[0x1C8752DC0](v10, sel_tapToRadar_);
  sub_1C1F4FC0C((uint64_t)v10);
  v10[0] = MEMORY[0x1E4FBC860];
  if (v4)
  {
    id v7 = v4;
    MEMORY[0x1C87528E0]();
    if (*(void *)((v10[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v10[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C214A7D0();
    }
    sub_1C214A820();
    sub_1C214A7A0();
  }
  if (v6)
  {
    id v8 = v6;
    MEMORY[0x1C87528E0]();
    if (*(void *)((v10[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v10[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C214A7D0();
    }
    sub_1C214A820();
    sub_1C214A7A0();
  }

  id v9 = (void *)sub_1C214A770();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setRightBarButtonItems_, v9);
}

uint64_t sub_1C1F4F3D4(void *a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    id v4 = a1;
    swift_unknownObjectRetain();
    sub_1C214B5A0();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v7, 0, sizeof(v7));
    id v5 = a1;
  }
  sub_1C2147F30();
  sub_1C2147F20();

  return sub_1C1F4FC0C((uint64_t)v7);
}

void InteractionResultDetailViewController.__allocating_init(dataSource:)()
{
}

void InteractionResultDetailViewController.init(dataSource:)()
{
}

id InteractionResultDetailViewController.__allocating_init(collectionViewLayout:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCollectionViewLayout_, a1);

  return v3;
}

void InteractionResultDetailViewController.init(collectionViewLayout:)()
{
}

void sub_1C1F4F524(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = a3;
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1C1F4F558()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_0(v0 + qword_1EA2C3750);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(v0 + qword_1EA2C3760);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(v0 + qword_1EA2C3778);

  return swift_bridgeObjectRelease();
}

id InteractionResultDetailViewController.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for InteractionResultDetailViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1C1F4F638(uint64_t a1)
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_0(a1 + qword_1EA2C3750);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(a1 + qword_1EA2C3760);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(a1 + qword_1EA2C3778);

  return swift_bridgeObjectRelease();
}

Swift::Void __swiftcall InteractionResultDetailViewController.viewControllerWillEnterAdaptiveModal()()
{
}

void sub_1C1F4F6F4(void *a1)
{
  id v1 = a1;
  sub_1C1F4F1E4(1);
}

Swift::Void __swiftcall InteractionResultDetailViewController.viewControllerDidLeaveAdaptiveModal()()
{
}

void sub_1C1F4F74C(void *a1)
{
  id v1 = a1;
  sub_1C1F4F1E4(0);
}

id sub_1C1F4F79C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  *(void *)&v10[qword_1EA2C3748] = a1;
  sub_1C1F236D8(a2, (uint64_t)&v10[qword_1EA2C3750]);
  uint64_t v17 = &v10[qword_1EA2C3758];
  *(void *)uint64_t v17 = a3;
  *((void *)v17 + 1) = a4;
  sub_1C1F236D8(a5, (uint64_t)&v10[qword_1EA2C3760]);
  *(void *)&v10[qword_1EA2C3768] = a6;
  id v18 = &v10[qword_1EA2C3770];
  *(void *)id v18 = a7;
  *((void *)v18 + 1) = a8;
  sub_1C1F236D8(a9, (uint64_t)&v10[qword_1EA2C3778]);
  *(void *)&v10[qword_1EA2C3780] = a10;
  v27.receiver = v10;
  v27.super_class = (Class)type metadata accessor for InteractionResultDetailViewController();
  swift_retain();
  id v19 = objc_msgSendSuper2(&v27, sel_initWithCollectionViewLayout_, 0);
  uint64_t v20 = qword_1EBF0CA00;
  id v21 = v19;
  if (v20 != -1) {
    swift_once();
  }
  id v22 = (id)qword_1EBF0CA18;
  swift_bridgeObjectRetain();
  sub_1C2147730();
  swift_bridgeObjectRelease();

  id v23 = (void *)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  objc_msgSend(v21, sel_setTitle_, v23, 0xE000000000000000);

  id v24 = objc_msgSend(v21, sel_navigationItem);
  objc_msgSend(v24, sel_setLargeTitleDisplayMode_, 2);

  objc_msgSend(v21, sel_setModalPresentationStyle_, 2);
  __swift_destroy_boxed_opaque_existential_0(a9);
  __swift_destroy_boxed_opaque_existential_0(a5);
  __swift_destroy_boxed_opaque_existential_0(a2);
  return v21;
}

unint64_t sub_1C1F4F9F8()
{
  unint64_t result = qword_1EA2C3788;
  if (!qword_1EA2C3788)
  {
    type metadata accessor for InteractionResultDetailDataSourceProvider();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C3788);
  }
  return result;
}

uint64_t type metadata accessor for InteractionResultDetailViewController()
{
  uint64_t result = qword_1EA2C37A8;
  if (!qword_1EA2C37A8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C1F4FA9C(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  sub_1C1F4FAF8(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

void sub_1C1F4FAF8(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  if (!*a2)
  {
    sub_1C1F248B4(255, a3);
    unint64_t v4 = sub_1C214B4F0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1C1F4FB54()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for InteractionResultDetailViewController(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for InteractionResultDetailViewController);
}

uint64_t dispatch thunk of InteractionResultDetailViewController.__allocating_init(interactionResults:stackedMemojiDisplayable:firstItemName:firstItemDetailsProviding:firstItemIngredients:secondItemName:secondItemDetailsProviding:secondItemIngredients:)()
{
  return (*(uint64_t (**)(void))(class metadata base offset for InteractionResultDetailViewController + v0 + 64))();
}

uint64_t sub_1C1F4FC04()
{
  return type metadata accessor for InteractionResultDetailViewController();
}

uint64_t sub_1C1F4FC0C(uint64_t a1)
{
  sub_1C1F4FC68();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1C1F4FC68()
{
  if (!qword_1EBF0CB20)
  {
    unint64_t v0 = sub_1C214B4F0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBF0CB20);
    }
  }
}

id sub_1C1F4FCC4()
{
  uint64_t v1 = OBJC_IVAR____TtC19HealthMedicationsUI27MedicationDoseLogHeaderView____lazy_storage___titleLabel;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI27MedicationDoseLogHeaderView____lazy_storage___titleLabel);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI27MedicationDoseLogHeaderView____lazy_storage___titleLabel);
  }
  else
  {
    sub_1C1F527B4();
    unint64_t v4 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v5;
    id v3 = v5;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_1C1F4FD24()
{
  return sub_1C1F4FD58(&OBJC_IVAR____TtC19HealthMedicationsUI27MedicationDoseLogHeaderView____lazy_storage___dateLabel, 0x62614C657461642ELL, 0xEF6C6562614C6C65, (SEL *)&selRef_secondaryLabelColor);
}

id sub_1C1F4FD58(uint64_t *a1, uint64_t a2, uint64_t a3, SEL *a4)
{
  uint64_t v5 = *a1;
  id v6 = *(void **)(v4 + *a1);
  if (v6)
  {
    id v7 = *(id *)(v4 + *a1);
  }
  else
  {
    id v8 = sub_1C1F52A3C(a2, a3, a4);
    id v9 = *(void **)(v4 + v5);
    *(void *)(v4 + v5) = v8;
    id v7 = v8;

    id v6 = 0;
  }
  id v10 = v6;
  return v7;
}

id sub_1C1F4FDC0()
{
  return sub_1C1F4FD58(&OBJC_IVAR____TtC19HealthMedicationsUI27MedicationDoseLogHeaderView____lazy_storage___countLabel, 0x614C746E756F432ELL, 0xEB000000006C6562, (SEL *)&selRef_labelColor);
}

id sub_1C1F4FDF0()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1C2147BB0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = OBJC_IVAR____TtC19HealthMedicationsUI27MedicationDoseLogHeaderView____lazy_storage___dateFormatter;
  id v7 = *(void **)(v1 + OBJC_IVAR____TtC19HealthMedicationsUI27MedicationDoseLogHeaderView____lazy_storage___dateFormatter);
  if (v7)
  {
    id v8 = *(id *)(v1 + OBJC_IVAR____TtC19HealthMedicationsUI27MedicationDoseLogHeaderView____lazy_storage___dateFormatter);
  }
  else
  {
    id v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28C10]), sel_init);
    sub_1C2147BA0();
    id v10 = (void *)sub_1C2147B50();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    objc_msgSend(v9, sel_setLocale_, v10);

    objc_msgSend(v9, sel_setFormattingContext_, 2);
    unsigned int v11 = (void *)sub_1C214A5B0();
    objc_msgSend(v9, sel_setLocalizedDateFormatFromTemplate_, v11);

    uint64_t v12 = *(void **)(v1 + v6);
    *(void *)(v1 + v6) = v9;
    id v8 = v9;

    id v7 = 0;
  }
  id v13 = v7;
  return v8;
}

uint64_t sub_1C1F4FF88()
{
  uint64_t v1 = OBJC_IVAR____TtC19HealthMedicationsUI27MedicationDoseLogHeaderView____lazy_storage___countLabelConstraints;
  if (*(void *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI27MedicationDoseLogHeaderView____lazy_storage___countLabelConstraints])
  {
    uint64_t v2 = *(void *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI27MedicationDoseLogHeaderView____lazy_storage___countLabelConstraints];
  }
  else
  {
    uint64_t v2 = sub_1C1F4FFF0(v0);
    *(void *)&v0[v1] = v2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1C1F4FFF0(void *a1)
{
  sub_1C1F0ED28();
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1C21510C0;
  id v3 = sub_1C1F4FDC0();
  id v4 = objc_msgSend(v3, sel_topAnchor);

  id v5 = sub_1C1F4FCC4();
  id v6 = objc_msgSend(v5, sel_bottomAnchor);

  id v7 = objc_msgSend(v4, sel_constraintEqualToAnchor_constant_, v6, 4.0);
  *(void *)(v2 + 32) = v7;
  id v8 = sub_1C1F4FDC0();
  id v9 = objc_msgSend(v8, sel_leadingAnchor);

  id v10 = objc_msgSend(a1, sel_leadingAnchor);
  id v11 = objc_msgSend(v9, sel_constraintEqualToAnchor_, v10);

  *(void *)(v2 + 40) = v11;
  id v12 = sub_1C1F4FDC0();
  id v13 = objc_msgSend(v12, sel_trailingAnchor);

  id v14 = objc_msgSend(a1, sel_trailingAnchor);
  id v15 = objc_msgSend(v13, sel_constraintEqualToAnchor_, v14);

  *(void *)(v2 + 48) = v15;
  id v16 = sub_1C1F4FDC0();
  id v17 = objc_msgSend(v16, sel_bottomAnchor);

  id v18 = objc_msgSend(a1, sel_bottomAnchor);
  id v19 = objc_msgSend(v17, sel_constraintEqualToAnchor_, v18);

  *(void *)(v2 + 56) = v19;
  sub_1C214A7A0();
  return v2;
}

id sub_1C1F50208()
{
  uint64_t v1 = OBJC_IVAR____TtC19HealthMedicationsUI27MedicationDoseLogHeaderView____lazy_storage___titleLabelToBottomAnchor;
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC19HealthMedicationsUI27MedicationDoseLogHeaderView____lazy_storage___titleLabelToBottomAnchor];
  if (v2)
  {
    id v3 = *(id *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI27MedicationDoseLogHeaderView____lazy_storage___titleLabelToBottomAnchor];
  }
  else
  {
    id v4 = sub_1C1F4FCC4();
    id v5 = objc_msgSend(v4, sel_bottomAnchor);

    id v6 = objc_msgSend(v0, sel_bottomAnchor);
    id v7 = objc_msgSend(v5, sel_constraintEqualToAnchor_, v6);

    id v8 = *(void **)&v0[v1];
    *(void *)&v0[v1] = v7;
    id v3 = v7;

    uint64_t v2 = 0;
  }
  id v9 = v2;
  return v3;
}

uint64_t sub_1C1F502D0()
{
  id v1 = sub_1C1F4FD24();
  objc_msgSend(v0, sel_addSubview_, v1);

  id v2 = sub_1C1F4FCC4();
  objc_msgSend(v0, sel_addSubview_, v2);

  id v3 = sub_1C1F4FDC0();
  objc_msgSend(v0, sel_addSubview_, v3);

  id v4 = sub_1C1F4FD24();
  objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);

  id v5 = sub_1C1F4FCC4();
  objc_msgSend(v5, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);

  id v6 = sub_1C1F4FDC0();
  objc_msgSend(v6, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);

  id v7 = sub_1C1F4FD24();
  id v8 = objc_msgSend(v7, sel_topAnchor);

  id v9 = objc_msgSend(v0, sel_topAnchor);
  id v10 = objc_msgSend(v8, sel_constraintEqualToAnchor_, v9);

  objc_msgSend(v10, sel_setActive_, 1);
  id v11 = sub_1C1F4FD24();
  id v12 = objc_msgSend(v11, sel_leadingAnchor);

  id v13 = objc_msgSend(v0, sel_leadingAnchor);
  id v14 = objc_msgSend(v12, sel_constraintEqualToAnchor_, v13);

  objc_msgSend(v14, sel_setActive_, 1);
  id v15 = sub_1C1F4FD24();
  id v16 = objc_msgSend(v15, sel_trailingAnchor);

  id v17 = objc_msgSend(v0, sel_trailingAnchor);
  id v18 = objc_msgSend(v16, sel_constraintEqualToAnchor_, v17);

  objc_msgSend(v18, sel_setActive_, 1);
  id v19 = sub_1C1F4FCC4();
  id v20 = objc_msgSend(v19, sel_topAnchor);

  id v21 = sub_1C1F4FD24();
  id v22 = objc_msgSend(v21, sel_bottomAnchor);

  id v23 = objc_msgSend(v20, sel_constraintEqualToAnchor_constant_, v22, 4.0);
  objc_msgSend(v23, sel_setActive_, 1);

  id v24 = sub_1C1F4FCC4();
  id v25 = objc_msgSend(v24, sel_leadingAnchor);

  id v26 = objc_msgSend(v0, sel_leadingAnchor);
  id v27 = objc_msgSend(v25, sel_constraintEqualToAnchor_, v26);

  objc_msgSend(v27, sel_setActive_, 1);
  id v28 = sub_1C1F4FCC4();
  id v29 = objc_msgSend(v28, sel_trailingAnchor);

  id v30 = objc_msgSend(v0, sel_trailingAnchor);
  id v31 = objc_msgSend(v29, sel_constraintEqualToAnchor_, v30);

  objc_msgSend(v31, sel_setActive_, 1);
  unint64_t v32 = sub_1C1F4FF88();
  unint64_t v33 = v32;
  if (!(v32 >> 62))
  {
    uint64_t v34 = *(void *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v34) {
      goto LABEL_3;
    }
    return swift_bridgeObjectRelease_n();
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_1C214B930();
  uint64_t v34 = result;
  if (!result) {
    return swift_bridgeObjectRelease_n();
  }
LABEL_3:
  if (v34 >= 1)
  {
    for (uint64_t i = 0; i != v34; ++i)
    {
      if ((v33 & 0xC000000000000001) != 0) {
        id v37 = (id)MEMORY[0x1C8753960](i, v33);
      }
      else {
        id v37 = *(id *)(v33 + 8 * i + 32);
      }
      uint64_t v38 = v37;
      objc_msgSend(v37, sel_setActive_, 1);
    }
    return swift_bridgeObjectRelease_n();
  }
  __break(1u);
  return result;
}

uint64_t sub_1C1F50724(uint64_t a1)
{
  id v2 = sub_1C1F50208();
  objc_msgSend(v2, sel_setActive_, a1 == 1);

  unint64_t v3 = sub_1C1F4FF88();
  unint64_t v4 = v3;
  if (!(v3 >> 62))
  {
    uint64_t v5 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v5) {
      goto LABEL_3;
    }
    return swift_bridgeObjectRelease_n();
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_1C214B930();
  uint64_t v5 = result;
  if (!result) {
    return swift_bridgeObjectRelease_n();
  }
LABEL_3:
  BOOL v7 = a1 != 1;
  if (v5 >= 1)
  {
    for (uint64_t i = 0; i != v5; ++i)
    {
      if ((v4 & 0xC000000000000001) != 0) {
        id v9 = (id)MEMORY[0x1C8753960](i, v4);
      }
      else {
        id v9 = *(id *)(v4 + 8 * i + 32);
      }
      id v10 = v9;
      objc_msgSend(v9, sel_setActive_, v7);
    }
    return swift_bridgeObjectRelease_n();
  }
  __break(1u);
  return result;
}

id sub_1C1F50830(double a1, double a2, double a3, double a4)
{
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI27MedicationDoseLogHeaderView____lazy_storage___titleLabel] = 0;
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI27MedicationDoseLogHeaderView____lazy_storage___dateLabel] = 0;
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI27MedicationDoseLogHeaderView____lazy_storage___countLabel] = 0;
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI27MedicationDoseLogHeaderView____lazy_storage___dateFormatter] = 0;
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI27MedicationDoseLogHeaderView____lazy_storage___countLabelConstraints] = 0;
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI27MedicationDoseLogHeaderView____lazy_storage___titleLabelToBottomAnchor] = 0;
  id v9 = &v4[OBJC_IVAR____TtC19HealthMedicationsUI27MedicationDoseLogHeaderView_item];
  id v10 = (objc_class *)type metadata accessor for MedicationDoseLogHeaderView();
  *(_OWORD *)id v9 = 0u;
  *((_OWORD *)v9 + 1) = 0u;
  *((void *)v9 + 4) = 0;
  v13.receiver = v4;
  v13.super_class = v10;
  id v11 = objc_msgSendSuper2(&v13, sel_initWithFrame_, a1, a2, a3, a4);
  sub_1C1F502D0();

  return v11;
}

uint64_t sub_1C1F5095C()
{
  id v1 = v0;
  uint64_t v2 = sub_1C21497F0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1F52314();
  MEMORY[0x1F4188790](v6 - 8);
  id v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for MedicationsDoseLogHeaderItem(0);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  id v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = (uint64_t)v1 + OBJC_IVAR____TtC19HealthMedicationsUI27MedicationDoseLogHeaderView_item;
  swift_beginAccess();
  sub_1C1F2116C(v13, (uint64_t)v38);
  if (!v38[3])
  {
    sub_1C1F374E4((uint64_t)v38);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
LABEL_9:
    sub_1C1F52438((uint64_t)v8, (uint64_t (*)(void))sub_1C1F52314);
    sub_1C21497A0();
    id v29 = v1;
    id v30 = sub_1C21497E0();
    os_log_type_t v31 = sub_1C214ABD0();
    if (os_log_type_enabled(v30, v31))
    {
      unint64_t v32 = (uint8_t *)swift_slowAlloc();
      uint64_t v33 = swift_slowAlloc();
      uint64_t v36 = v2;
      uint64_t v37 = v33;
      *(_DWORD *)unint64_t v32 = 136315138;
      sub_1C1F2116C(v13, (uint64_t)v38);
      sub_1C1F5236C(0, (unint64_t *)&qword_1EBF0C300, (unint64_t *)&qword_1EBF0C2F0, MEMORY[0x1E4F66028], MEMORY[0x1E4FBB718]);
      uint64_t v34 = sub_1C214A630();
      v38[0] = sub_1C1F6FD54(v34, v35, &v37);
      sub_1C214B530();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C1F0B000, v30, v31, "Incorrect view model for MedicationsDoseLogHeaderItem: %s", v32, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C8754730](v33, -1, -1);
      MEMORY[0x1C8754730](v32, -1, -1);

      return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v36);
    }
    else
    {

      return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    }
  }
  sub_1C1F23804(0, (unint64_t *)&qword_1EBF0C2F0);
  int v14 = swift_dynamicCast();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v8, v14 ^ 1u, 1, v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
    goto LABEL_9;
  }
  sub_1C1F523D4((uint64_t)v8, (uint64_t)v12);
  id v15 = sub_1C1F4FCC4();
  swift_bridgeObjectRetain();
  id v16 = (void *)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  objc_msgSend(v15, sel_setText_, v16);

  id v17 = sub_1C1F4FD24();
  id v18 = sub_1C1F4FDF0();
  id v19 = (void *)sub_1C2147A00();
  id v20 = objc_msgSend(v18, sel_stringFromDate_, v19);

  if (!v20)
  {
    sub_1C214A5F0();
    id v20 = (id)sub_1C214A5B0();
    swift_bridgeObjectRelease();
  }
  objc_msgSend(v17, sel_setText_, v20);

  id v21 = sub_1C1F4FDC0();
  if (qword_1EBF0CA00 != -1) {
    swift_once();
  }
  id v22 = (id)qword_1EBF0CA18;
  swift_bridgeObjectRetain();
  sub_1C2147730();
  swift_bridgeObjectRelease();

  sub_1C1F5236C(0, qword_1EBF0B8A0, (unint64_t *)&qword_1EBF0C9F0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_1C214FCD0;
  uint64_t v24 = *(void *)&v12[*(int *)(v9 + 32)];
  uint64_t v25 = MEMORY[0x1E4FBB5C8];
  *(void *)(v23 + 56) = MEMORY[0x1E4FBB550];
  *(void *)(v23 + 64) = v25;
  *(void *)(v23 + 32) = v24;
  sub_1C214A600();
  swift_bridgeObjectRelease();
  id v26 = (void *)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  objc_msgSend(v21, sel_setText_, v26);

  id v27 = sub_1C1F4FDC0();
  objc_msgSend(v27, sel_setHidden_, v24 == 1);

  sub_1C1F50724(v24);
  return sub_1C1F52438((uint64_t)v12, type metadata accessor for MedicationsDoseLogHeaderItem);
}

id sub_1C1F50FF0()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MedicationDoseLogHeaderView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for MedicationDoseLogHeaderView()
{
  return self;
}

uint64_t type metadata accessor for MedicationsDoseLogHeaderDataSource(uint64_t a1)
{
  return sub_1C1F20D10(a1, (uint64_t *)&unk_1EA2C3860);
}

uint64_t sub_1C1F51104()
{
  uint64_t result = type metadata accessor for MedicationsDoseLogHeaderItem(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1C1F5119C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC19HealthMedicationsUI27MedicationDoseLogHeaderView_item;
  swift_beginAccess();
  return sub_1C1F2116C(v3, a1);
}

uint64_t sub_1C1F511F4(uint64_t a1)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC19HealthMedicationsUI27MedicationDoseLogHeaderView_item;
  swift_beginAccess();
  sub_1C1F32DDC(a1, v3);
  swift_endAccess();
  sub_1C1F5095C();
  return sub_1C1F374E4(a1);
}

uint64_t (*sub_1C1F51268(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = *v1;
  swift_beginAccess();
  return sub_1C1F512CC;
}

uint64_t sub_1C1F512CC(uint64_t a1, char a2)
{
  uint64_t result = swift_endAccess();
  if ((a2 & 1) == 0) {
    return sub_1C1F5095C();
  }
  return result;
}

uint64_t sub_1C1F51300()
{
  uint64_t v0 = qword_1EA2C3818;
  swift_bridgeObjectRetain();
  return v0;
}

unint64_t sub_1C1F51338()
{
  return 0xD000000000000012;
}

uint64_t sub_1C1F513B8()
{
  return sub_1C214BB80();
}

uint64_t sub_1C1F51490()
{
  return sub_1C214BB40();
}

uint64_t sub_1C1F51554()
{
  return sub_1C214BB80();
}

uint64_t sub_1C1F51628(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 20));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1C1F51668()
{
  uint64_t v0 = sub_1C2148710();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2148660();
  uint64_t v4 = sub_1C2148700();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

void sub_1C1F5173C()
{
}

void sub_1C1F51758()
{
}

void sub_1C1F51774()
{
}

uint64_t sub_1C1F517A0()
{
  return sub_1C1F52438(v0 + qword_1EA2C7C30, type metadata accessor for MedicationsDoseLogHeaderItem);
}

uint64_t sub_1C1F517D8()
{
  uint64_t v0 = sub_1C21489E0();
  sub_1C1F52438(v0 + qword_1EA2C7C30, type metadata accessor for MedicationsDoseLogHeaderItem);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MedicationsDoseLogHeaderItem(uint64_t a1)
{
  return sub_1C1F20D10(a1, (uint64_t *)&unk_1EBF0C3A0);
}

uint64_t sub_1C1F51880()
{
  return type metadata accessor for MedicationsDoseLogHeaderDataSource(0);
}

uint64_t *sub_1C1F51888(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v21 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1C2147B20();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = (uint64_t *)((char *)a1 + v8);
    uint64_t v11 = (uint64_t *)((char *)a2 + v8);
    uint64_t v12 = v11[1];
    *uint64_t v10 = *v11;
    v10[1] = v12;
    uint64_t v13 = (uint64_t *)((char *)a1 + v9);
    int v14 = (uint64_t *)((char *)a2 + v9);
    uint64_t v15 = v14[1];
    *uint64_t v13 = *v14;
    v13[1] = v15;
    uint64_t v16 = a3[7];
    id v17 = (char *)a1 + v16;
    id v18 = (char *)a2 + v16;
    uint64_t v19 = sub_1C2147AC0();
    id v20 = *(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v20(v17, v18, v19);
    *(uint64_t *)((char *)a1 + a3[8]) = *(uint64_t *)((char *)a2 + a3[8]);
  }
  return a1;
}

uint64_t sub_1C1F519EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C2147B20();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = a1 + *(int *)(a2 + 28);
  uint64_t v6 = sub_1C2147AC0();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);

  return v7(v5, v6);
}

uint64_t sub_1C1F51AB4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1C2147B20();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)(a1 + v7);
  uint64_t v10 = (void *)(a2 + v7);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  uint64_t v12 = (void *)(a1 + v8);
  uint64_t v13 = (void *)(a2 + v8);
  uint64_t v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_1C2147AC0();
  uint64_t v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v19(v16, v17, v18);
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  return a1;
}

uint64_t sub_1C1F51BC8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1C2147B20();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = a3[6];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v13 = a3[7];
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  uint64_t v16 = sub_1C2147AC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 24))(v14, v15, v16);
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  return a1;
}

uint64_t sub_1C1F51CEC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1C2147B20();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  uint64_t v8 = a3[7];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_1C2147AC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  return a1;
}

uint64_t sub_1C1F51DCC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1C2147B20();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[6];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (uint64_t *)(a2 + v12);
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  *uint64_t v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  uint64_t v17 = a3[7];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  uint64_t v20 = sub_1C2147AC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 40))(v18, v19, v20);
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  return a1;
}

uint64_t sub_1C1F51ED0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C1F51EE4);
}

uint64_t sub_1C1F51EE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C2147B20();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if (a2 == 0x7FFFFFFF)
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
  else
  {
    uint64_t v11 = sub_1C2147AC0();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a3 + 28);
    return v12(v14, a2, v13);
  }
}

uint64_t sub_1C1F52014(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C1F52028);
}

uint64_t sub_1C1F52028(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1C2147B20();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v11 = sub_1C2147AC0();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a4 + 28);
    return v12(v14, a2, a2, v13);
  }
  return result;
}

uint64_t sub_1C1F52158()
{
  uint64_t result = sub_1C2147B20();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1C2147AC0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_1C1F52238()
{
  return sub_1C1F52498(&qword_1EA2C3870, (void (*)(uint64_t))type metadata accessor for MedicationsDoseLogHeaderItem);
}

uint64_t sub_1C1F52280@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = *v1 + qword_1EA2C7C30;
  a1[3] = type metadata accessor for MedicationsDoseLogHeaderItem(0);
  a1[4] = sub_1C1F52498(&qword_1EBF0C398, (void (*)(uint64_t))type metadata accessor for MedicationsDoseLogHeaderItem);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a1);

  return sub_1C1F524E0(v3, (uint64_t)boxed_opaque_existential_1);
}

void sub_1C1F52314()
{
  if (!qword_1EBF0C3B0)
  {
    type metadata accessor for MedicationsDoseLogHeaderItem(255);
    unint64_t v0 = sub_1C214B4F0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBF0C3B0);
    }
  }
}

void sub_1C1F5236C(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = sub_1C1F23804(255, a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

uint64_t sub_1C1F523D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MedicationsDoseLogHeaderItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C1F52438(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C1F52498(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C1F524E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MedicationsDoseLogHeaderItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

BOOL sub_1C1F52544(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MedicationsDoseLogHeaderItem(0);
  uint64_t v5 = MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x1F4188790](v5);
  uint64_t v10 = (char *)&v27 - v9;
  uint64_t v11 = MEMORY[0x1F4188790](v8);
  uint64_t v13 = (char *)&v27 - v12;
  uint64_t v14 = MEMORY[0x1F4188790](v11);
  uint64_t v16 = (char *)&v27 - v15;
  uint64_t v17 = *(int *)(v14 + 24);
  uint64_t v18 = *(void *)(a1 + v17);
  uint64_t v19 = *(void *)(a1 + v17 + 8);
  uint64_t v20 = (void *)(a2 + v17);
  if (v18 == *v20 && v19 == v20[1])
  {
    sub_1C1F524E0(a1, (uint64_t)&v27 - v15);
    sub_1C1F524E0(a2, (uint64_t)v13);
  }
  else
  {
    char v22 = sub_1C214BA80();
    sub_1C1F524E0(a1, (uint64_t)v16);
    sub_1C1F524E0(a2, (uint64_t)v13);
    if ((v22 & 1) == 0)
    {
      sub_1C1F52438((uint64_t)v13, type metadata accessor for MedicationsDoseLogHeaderItem);
      sub_1C1F52438((uint64_t)v16, type metadata accessor for MedicationsDoseLogHeaderItem);
      sub_1C1F524E0(a1, (uint64_t)v10);
      sub_1C1F524E0(a2, (uint64_t)v7);
      goto LABEL_10;
    }
  }
  char v23 = sub_1C2147A50();
  sub_1C1F52438((uint64_t)v13, type metadata accessor for MedicationsDoseLogHeaderItem);
  sub_1C1F52438((uint64_t)v16, type metadata accessor for MedicationsDoseLogHeaderItem);
  sub_1C1F524E0(a1, (uint64_t)v10);
  sub_1C1F524E0(a2, (uint64_t)v7);
  if (v23)
  {
    uint64_t v24 = *(void *)&v10[*(int *)(v4 + 32)];
    sub_1C1F52438((uint64_t)v10, type metadata accessor for MedicationsDoseLogHeaderItem);
    uint64_t v25 = *(void *)&v7[*(int *)(v4 + 32)];
    sub_1C1F52438((uint64_t)v7, type metadata accessor for MedicationsDoseLogHeaderItem);
    return v24 == v25;
  }
LABEL_10:
  sub_1C1F52438((uint64_t)v7, type metadata accessor for MedicationsDoseLogHeaderItem);
  sub_1C1F52438((uint64_t)v10, type metadata accessor for MedicationsDoseLogHeaderItem);
  return 0;
}

void sub_1C1F527B4()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v0, sel_setNumberOfLines_, 0);
  uint64_t v1 = sub_1C214A5F0();
  uint64_t v3 = v2;
  id v4 = v0;
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  uint64_t v12 = v1;
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  uint64_t v5 = (void *)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_setAccessibilityIdentifier_, v5, v12, v3);

  id v6 = objc_msgSend(self, sel_labelColor);
  objc_msgSend(v4, sel_setTextColor_, v6);

  objc_msgSend(v4, sel_setTextAlignment_, 1);
  objc_msgSend(v4, sel_setAdjustsFontForContentSizeCategory_, 1);
  uint64_t v7 = self;
  id v8 = objc_msgSend(v7, sel_preferredFontForTextStyle_, *MEMORY[0x1E4FB2988]);
  id v9 = objc_msgSend(v8, sel_fontDescriptor);
  id v10 = objc_msgSend(v9, sel_fontDescriptorWithSymbolicTraits_, 2);

  if (v10)
  {
    id v11 = objc_msgSend(v7, sel_fontWithDescriptor_size_, v10, 0.0);
    objc_msgSend(v4, sel_setFont_, v11);
  }
  else
  {
    __break(1u);
  }
}

id sub_1C1F52A3C(uint64_t a1, uint64_t a2, SEL *a3)
{
  id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v4, sel_setNumberOfLines_, 0);
  uint64_t v5 = sub_1C214A5F0();
  uint64_t v7 = v6;
  id v8 = v4;
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  id v9 = (void *)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  objc_msgSend(v8, sel_setAccessibilityIdentifier_, v9, v5, v7);

  id v10 = [self *a3];
  objc_msgSend(v8, sel_setTextColor_, v10);

  objc_msgSend(v8, sel_setTextAlignment_, 1);
  objc_msgSend(v8, sel_setAdjustsFontForContentSizeCategory_, 1);
  id v11 = objc_msgSend(self, sel_preferredFontForTextStyle_, *MEMORY[0x1E4FB28C8]);
  objc_msgSend(v8, sel_setFont_, v11);

  return v8;
}

void sub_1C1F52C58()
{
  *(void *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI27MedicationDoseLogHeaderView____lazy_storage___titleLabel] = 0;
  *(void *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI27MedicationDoseLogHeaderView____lazy_storage___dateLabel] = 0;
  *(void *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI27MedicationDoseLogHeaderView____lazy_storage___countLabel] = 0;
  *(void *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI27MedicationDoseLogHeaderView____lazy_storage___dateFormatter] = 0;
  *(void *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI27MedicationDoseLogHeaderView____lazy_storage___countLabelConstraints] = 0;
  *(void *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI27MedicationDoseLogHeaderView____lazy_storage___titleLabelToBottomAnchor] = 0;
  uint64_t v1 = &v0[OBJC_IVAR____TtC19HealthMedicationsUI27MedicationDoseLogHeaderView_item];
  *(_OWORD *)uint64_t v1 = 0u;
  *((_OWORD *)v1 + 1) = 0u;
  *((void *)v1 + 4) = 0;

  sub_1C214B910();
  __break(1u);
}

uint64_t sub_1C1F52D18()
{
  return 0;
}

uint64_t ScheduleItemDisplayable.identifier.getter()
{
  return 0;
}

uint64_t sub_1C1F52D30()
{
  return 0;
}

uint64_t ScheduleItemDisplayable.prefetchedSchedule.getter()
{
  return 0;
}

uint64_t ScheduleItemDisplayable.isEditable.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t sub_1C1F52D58()
{
  return 1;
}

uint64_t ScheduleItemDisplayable.shouldFetchScheduleLocally.getter()
{
  return 1;
}

Swift::String __swiftcall ScheduleItemDisplayable.localizedResolvedLoggingUnit(for:)(Swift::Double a1)
{
  uint64_t v3 = v2;
  uint64_t v4 = v1;
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8C0);
  v3[6](v4, v3);
  v3[7](v4, v3);
  v3[9](v4, v3);
  uint64_t v5 = sub_1C214AF90();
  uint64_t v7 = v6;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v8 = v5;
  id v9 = v7;
  result._object = v9;
  result._countAndFlagsBits = v8;
  return result;
}

uint64_t HKMedicationUserDomainConcept.identifier.getter()
{
  id v1 = objc_msgSend(v0, sel_semanticIdentifier);
  id v2 = objc_msgSend(v1, sel_stringValue);

  uint64_t v3 = sub_1C214A5F0();
  return v3;
}

uint64_t sub_1C1F52EF0()
{
  id v1 = objc_msgSend(*v0, sel_semanticIdentifier);
  id v2 = objc_msgSend(v1, sel_stringValue);

  uint64_t v3 = sub_1C214A5F0();
  return v3;
}

uint64_t sub_1C1F52F68()
{
  return sub_1C214AF80();
}

uint64_t sub_1C1F52F8C()
{
  return sub_1C214AF60();
}

uint64_t sub_1C1F52FB0()
{
  return sub_1C214AF40();
}

uint64_t sub_1C1F52FD8()
{
  return sub_1C214AFC0();
}

uint64_t sub_1C1F53000()
{
  return sub_1C1F5F5A4(*(void *)(v0 + 16), *(unsigned __int8 *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_1C1F5301C()
{
  return sub_1C2149010();
}

void *sub_1C1F5302C()
{
  id v1 = *(void **)(v0 + 40);
  id v2 = v1;
  return v1;
}

uint64_t sub_1C1F53054()
{
  return 0;
}

uint64_t sub_1C1F5305C()
{
  if (!*(void *)(v0 + 32)) {
    return 0;
  }
  uint64_t v1 = sub_1C201A1E8();
  if (!v2) {
    return 0;
  }
  uint64_t v3 = v1;
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_1C1F530A8()
{
  if (!*(void *)(v0 + 32)) {
    return 0;
  }
  sub_1C201A1E8();
  if (!v2) {
    return 0;
  }
  uint64_t v3 = v1;
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_1C1F53100()
{
  return *(void *)v0;
}

uint64_t sub_1C1F5310C()
{
  return *(void *)(v0 + 16);
}

BOOL static ScheduleDataSource.DisplayContext.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t ScheduleDataSource.DisplayContext.hash(into:)()
{
  return sub_1C214BB40();
}

uint64_t ScheduleDataSource.DisplayContext.hashValue.getter()
{
  return sub_1C214BB80();
}

BOOL sub_1C1F531A4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_1C1F531BC()
{
  return sub_1C214BB80();
}

uint64_t sub_1C1F53274()
{
  return sub_1C214B230();
}

uint64_t sub_1C1F53314()
{
  return sub_1C214BB80();
}

uint64_t ScheduleDataSource.__allocating_init(with:healthStore:isMedicationActivePublisher:analyticsManager:context:)(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, unsigned char *a5)
{
  uint64_t v11 = *(void *)(a1 + 24);
  uint64_t v12 = *(void *)(a1 + 32);
  uint64_t v13 = __swift_mutable_project_boxed_opaque_existential_1(a1, v11);
  uint64_t v14 = sub_1C1F5F6AC(v13, a2, a3, a4, a5, v5, v11, v12);
  __swift_destroy_boxed_opaque_existential_0(a1);
  return v14;
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t ScheduleDataSource.init(with:healthStore:isMedicationActivePublisher:analyticsManager:context:)(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, unsigned char *a5)
{
  uint64_t v11 = *(void *)(a1 + 24);
  uint64_t v12 = *(void *)(a1 + 32);
  uint64_t v13 = __swift_mutable_project_boxed_opaque_existential_1(a1, v11);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v16 + 16))(v15);
  uint64_t v17 = sub_1C1F5D2C0((uint64_t)v15, a2, a3, a4, a5, v5, v11, v12);
  __swift_destroy_boxed_opaque_existential_0(a1);
  return v17;
}

uint64_t sub_1C1F535BC()
{
  uint64_t v1 = v0;
  uint64_t v51 = *v0;
  uint64_t v2 = sub_1C21497F0();
  uint64_t v45 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (char *)v43 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C1F5FCAC(0, (unint64_t *)&qword_1EA2C32D8, MEMORY[0x1E4FBCFE8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v50 = (char *)v43 - v7;
  sub_1C1F60298();
  uint64_t v48 = *(void *)(v8 - 8);
  uint64_t v49 = v8;
  MEMORY[0x1F4188790](v8);
  unint64_t v47 = (char *)v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1F5FCAC(0, &qword_1EBF0C7E8, MEMORY[0x1E4FBCC28], v5);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)v43 - v11;
  sub_1C1F603DC();
  uint64_t v14 = v13;
  uint64_t v46 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)v43 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = (void *)((char *)v1 + qword_1EA2C3880);
  uint64_t v18 = *(void *)((char *)v1 + qword_1EA2C3880 + 24);
  uint64_t v19 = *(void *)((char *)v1 + qword_1EA2C3880 + 32);
  __swift_project_boxed_opaque_existential_0((void *)((char *)v1 + qword_1EA2C3880), v18);
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v19 + 40))(v18, v19))
  {
    uint64_t v52 = *(void *)((char *)v1 + qword_1EA2C3888);
    sub_1C1F12718(0, (unint64_t *)&qword_1EBF0CB10);
    swift_retain();
    id v53 = (id)sub_1C214AD80();
    uint64_t v20 = sub_1C214AD20();
    uint64_t v21 = *(void *)(v20 - 8);
    unint64_t v44 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56);
    uint64_t v45 = v21 + 56;
    v44(v12, 1, 1, v20);
    sub_1C1F604A8();
    sub_1C1F61C84((unint64_t *)&qword_1EA2C3980, (void (*)(uint64_t))sub_1C1F604A8);
    v43[1] = sub_1C1F43FD4();
    sub_1C214A0A0();
    char v22 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FBCC28];
    sub_1C1F60528((uint64_t)v12, &qword_1EBF0C7E8, MEMORY[0x1E4FBCC28]);

    swift_release();
    uint64_t v23 = swift_allocObject();
    swift_weakInit();
    uint64_t v24 = swift_allocObject();
    uint64_t v25 = v51;
    *(void *)(v24 + 16) = v23;
    *(void *)(v24 + 24) = v25;
    sub_1C1F61C84(&qword_1EA2C3988, (void (*)(uint64_t))sub_1C1F603DC);
    sub_1C214A0F0();
    swift_release();
    (*(void (**)(char *, uint64_t))(v46 + 8))(v16, v14);
    swift_beginAccess();
    sub_1C2149E20();
    swift_endAccess();
    swift_release();
    uint64_t v52 = sub_1C2149440();
    id v53 = (id)sub_1C214AD80();
    v44(v12, 1, 1, v20);
    sub_1C1F607A4(0, &qword_1EA2C3960, MEMORY[0x1E4FBC848] + 8, MEMORY[0x1E4F1ABB0]);
    sub_1C1F6035C();
    id v26 = v47;
    sub_1C214A0A0();
    sub_1C1F60528((uint64_t)v12, &qword_1EBF0C7E8, v22);

    swift_release();
    uint64_t v27 = swift_allocObject();
    swift_weakInit();
    uint64_t v28 = swift_allocObject();
    *(void *)(v28 + 16) = sub_1C1F605D8;
    *(void *)(v28 + 24) = v27;
    sub_1C1F61C84(&qword_1EA2C3990, (void (*)(uint64_t))sub_1C1F60298);
    uint64_t v29 = v49;
    sub_1C214A0F0();
    swift_release();
    (*(void (**)(char *, uint64_t))(v48 + 8))(v26, v29);
    swift_beginAccess();
    sub_1C2149E20();
    swift_endAccess();
    swift_release();
    uint64_t v30 = (uint64_t)v50;
    sub_1C214A8A0();
    uint64_t v31 = sub_1C214A8C0();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v30, 0, 1, v31);
    uint64_t v32 = swift_allocObject();
    swift_weakInit();
    uint64_t v33 = (void *)swift_allocObject();
    v33[2] = 0;
    v33[3] = 0;
    uint64_t v34 = v51;
    v33[4] = v32;
    v33[5] = v34;
    sub_1C1F86288(v30, (uint64_t)&unk_1EA2C3998, (uint64_t)v33);
    return swift_release();
  }
  else
  {
    uint64_t v36 = v45;
    uint64_t v37 = v17[3];
    uint64_t v38 = v17[4];
    __swift_project_boxed_opaque_existential_0(v17, v37);
    uint64_t v39 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v38 + 24))(v37, v38);

    if (v39)
    {
      uint64_t result = sub_1C2147F60();
      if ((result & 1) == 0)
      {
        sub_1C2147F40();
        sub_1C21482F0();
        swift_release();
        sub_1C1F54BE8();
        sub_1C21485B0();
        swift_release();
        return swift_bridgeObjectRelease();
      }
    }
    else
    {
      sub_1C21497A0();
      uint64_t v40 = sub_1C21497E0();
      uint64_t v41 = sub_1C214ABD0();
      if (os_log_type_enabled(v40, (os_log_type_t)v41))
      {
        uint64_t v42 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v42 = 0;
        _os_log_impl(&dword_1C1F0B000, v40, (os_log_type_t)v41, "Unable to display schedule if we have no prefetched schedule and should not fetch it.", v42, 2u);
        MEMORY[0x1C8754730](v42, -1, -1);
      }

      return (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v4, v2);
    }
  }
  return result;
}

uint64_t sub_1C1F53E9C()
{
  uint64_t v0 = sub_1C21497F0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    if (sub_1C2147F60())
    {
      return swift_release();
    }
    else
    {
      sub_1C2147F40();
      sub_1C21482F0();
      swift_release();
      sub_1C1F54BE8();
      sub_1C21485B0();
      swift_release();
      swift_release();
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    sub_1C21497A0();
    uint64_t v5 = sub_1C21497E0();
    os_log_type_t v6 = sub_1C214ABD0();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      uint64_t v8 = swift_slowAlloc();
      uint64_t v12 = v8;
      *(_DWORD *)uint64_t v7 = 136315138;
      uint64_t v9 = sub_1C214BC10();
      v11[1] = sub_1C1F6FD54(v9, v10, &v12);
      sub_1C214B530();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C1F0B000, v5, v6, "Unable to update section as %s was deallocated.", v7, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C8754730](v8, -1, -1);
      MEMORY[0x1C8754730](v7, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  }
}

uint64_t sub_1C1F54108()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1C1F54160();
    return swift_release();
  }
  return result;
}

uint64_t sub_1C1F54160()
{
  uint64_t v1 = *v0;
  sub_1C1F5FCAC(0, (unint64_t *)&qword_1EA2C32D8, MEMORY[0x1E4FBCFE8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v9 - v3;
  sub_1C214A8A0();
  uint64_t v5 = sub_1C214A8C0();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 0, 1, v5);
  uint64_t v6 = swift_allocObject();
  swift_weakInit();
  uint64_t v7 = (void *)swift_allocObject();
  _OWORD v7[2] = 0;
  v7[3] = 0;
  v7[4] = v6;
  v7[5] = v1;
  sub_1C1F86288((uint64_t)v4, (uint64_t)&unk_1EA2C3950, (uint64_t)v7);
  return swift_release();
}

uint64_t sub_1C1F542CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[21] = a4;
  v5[22] = a5;
  uint64_t v6 = sub_1C21497F0();
  v5[23] = v6;
  v5[24] = *(void *)(v6 - 8);
  v5[25] = swift_task_alloc();
  v5[26] = swift_task_alloc();
  v5[27] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C1F543A8, 0, 0);
}

uint64_t sub_1C1F543A8()
{
  uint64_t v32 = v0;
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  v0[28] = Strong;
  if (Strong)
  {
    uint64_t v2 = Strong;
    uint64_t v3 = (void *)(Strong + qword_1EA2C3880);
    uint64_t v4 = v3[3];
    uint64_t v5 = v3[4];
    __swift_project_boxed_opaque_existential_0(v3, v4);
    (*(void (**)(uint64_t, uint64_t))(v5 + 16))(v4, v5);
    if (v6)
    {
      uint64_t v7 = *(void **)(v2 + qword_1EA2C38A0);
      v0[29] = v7;
      if (v7)
      {
        id v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F66B38]), sel_initWithHealthStore_, v7);
        v0[30] = v8;
        uint64_t v9 = sub_1C214A5B0();
        v0[31] = v9;
        swift_bridgeObjectRelease();
        v0[2] = v0;
        v0[7] = v0 + 19;
        v0[3] = sub_1C1F5487C;
        uint64_t v10 = swift_continuation_init();
        v0[10] = MEMORY[0x1E4F143A8];
        v0[11] = 0x40000000;
        v0[12] = sub_1C1F54B18;
        v0[13] = &block_descriptor_19;
        v0[14] = v10;
        objc_msgSend(v8, sel_fetchScheduleWithMedicationIdentifier_completion_, v9, v0 + 10);
        return MEMORY[0x1F41881E8](v0 + 2);
      }
      swift_bridgeObjectRelease();
      sub_1C21497A0();
      uint64_t v25 = sub_1C21497E0();
      os_log_type_t v26 = sub_1C214ABD0();
      if (os_log_type_enabled(v25, v26))
      {
        uint64_t v27 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v27 = 0;
        _os_log_impl(&dword_1C1F0B000, v25, v26, "Unable to fetch schedule as healthStore is nil.", v27, 2u);
        MEMORY[0x1C8754730](v27, -1, -1);

        swift_release();
      }
      else
      {
        swift_release();
      }
      uint64_t v24 = v0[25];
    }
    else
    {
      sub_1C21497A0();
      uint64_t v21 = sub_1C21497E0();
      os_log_type_t v22 = sub_1C214ABD0();
      if (os_log_type_enabled(v21, v22))
      {
        uint64_t v23 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v23 = 0;
        _os_log_impl(&dword_1C1F0B000, v21, v22, "Unable to fetch schedule as identifier is nil.", v23, 2u);
        MEMORY[0x1C8754730](v23, -1, -1);

        swift_release();
      }
      else
      {
        swift_release();
      }
      uint64_t v24 = v0[26];
    }
    (*(void (**)(uint64_t, void))(v0[24] + 8))(v24, v0[23]);
  }
  else
  {
    sub_1C21497A0();
    uint64_t v11 = sub_1C21497E0();
    os_log_type_t v12 = sub_1C214ABD0();
    BOOL v13 = os_log_type_enabled(v11, v12);
    uint64_t v14 = v0[27];
    uint64_t v16 = v0[23];
    uint64_t v15 = v0[24];
    if (v13)
    {
      uint64_t v30 = v0[27];
      uint64_t v17 = (uint8_t *)swift_slowAlloc();
      uint64_t v18 = swift_slowAlloc();
      uint64_t v31 = v18;
      *(_DWORD *)uint64_t v17 = 136315138;
      uint64_t v19 = sub_1C214BC10();
      v0[18] = sub_1C1F6FD54(v19, v20, &v31);
      sub_1C214B530();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C1F0B000, v11, v12, "Unable to fetch schedule as %s was deallocated.", v17, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C8754730](v18, -1, -1);
      MEMORY[0x1C8754730](v17, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v30, v16);
    }
    else
    {

      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
    }
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v28 = (uint64_t (*)(void))v0[1];
  return v28();
}

uint64_t sub_1C1F5487C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 256) = v1;
  if (v1) {
    uint64_t v2 = sub_1C1F54A4C;
  }
  else {
    uint64_t v2 = sub_1C1F5498C;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C1F5498C()
{
  uint64_t v1 = *(void **)(v0 + 152);
  uint64_t v2 = *(void **)(v0 + 240);
  uint64_t v3 = *(void **)(v0 + 232);

  *(void *)(v0 + 160) = v1;
  sub_1C2149E70();

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_1C1F54A4C()
{
  uint64_t v1 = *(void **)(v0 + 256);
  swift_willThrow();

  uint64_t v2 = *(void **)(v0 + 240);
  uint64_t v3 = *(void **)(v0 + 232);

  *(void *)(v0 + 160) = 0;
  sub_1C2149E70();

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_1C1F54B18(uint64_t a1, void *a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a3)
  {
    sub_1C1F23804(0, (unint64_t *)&qword_1EBF0C9C0);
    uint64_t v5 = swift_allocError();
    *uint64_t v6 = a3;
    id v7 = a3;
    return MEMORY[0x1F4188208](v3, v5);
  }
  else
  {
    uint64_t v11 = a2;
    uint64_t v8 = *(void *)(*(void *)(v3 + 64) + 40);
    id v9 = a2;
    sub_1C1F6021C((uint64_t)&v11, v8);
    return swift_continuation_throwingResume();
  }
}

unint64_t sub_1C1F54BE8()
{
  id v49 = *v0;
  uint64_t v1 = sub_1C2148A70();
  uint64_t v52 = *(void *)(v1 - 8);
  uint64_t v53 = v1;
  MEMORY[0x1F4188790](v1);
  uint64_t v3 = (char *)&v42 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1C2148620();
  uint64_t v50 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1F5FCAC(0, &qword_1EBF0C620, MEMORY[0x1E4FB0F28], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v7 - 8);
  id v9 = (char *)&v42 - v8;
  uint64_t v10 = sub_1C2149BE0();
  uint64_t v51 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  os_log_type_t v12 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1C2147B20();
  uint64_t v56 = *(void *)(v13 - 8);
  uint64_t v57 = v13;
  MEMORY[0x1F4188790](v13);
  uint64_t v55 = (char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  LODWORD(v54) = *((unsigned __int8 *)v0 + qword_1EA2C3878);
  LOBYTE(v60) = v54;
  uint64_t v15 = (id *)((char *)v0 + qword_1EA2C3880);
  uint64_t v58 = sub_1C1F57D98(&v60, (id *)((char *)v0 + qword_1EA2C3880));
  sub_1C2149E90();
  id v16 = v60;
  if (v60)
  {
    if (objc_msgSend(v60, sel_isUnavailable))
    {
      swift_bridgeObjectRelease();
      unint64_t v17 = sub_1C1F579E8(v15);
    }
    else
    {
      char v35 = v54;
      LOBYTE(v60) = v54;
      uint64_t v36 = (void *)sub_1C1F5DDF4((uint64_t)v15, (unsigned __int8 *)&v60);
      LOBYTE(v60) = v35;
      uint64_t v37 = sub_1C1F55600((unsigned __int8 *)&v60);
      LOBYTE(v60) = v35;
      uint64_t v38 = sub_1C1F5E758((unsigned __int8 *)&v60);
      LOBYTE(v60) = v35;
      uint64_t v39 = sub_1C1F5F024(&v60);
      sub_1C1F5FCAC(0, (unint64_t *)&qword_1EA2C2DD0, MEMORY[0x1E4F66468], MEMORY[0x1E4FBBE00]);
      sub_1C2148540();
      unint64_t v17 = swift_allocObject();
      *(_OWORD *)(v17 + 16) = xmmword_1C214FCD0;
      id v60 = v36;
      sub_1C1F7D1D0(v37);
      sub_1C1F7D1D0(v38);
      sub_1C1F7D1D0(v58);
      sub_1C1F7D1D0(v39);
      uint64_t v40 = v55;
      sub_1C2147B10();
      sub_1C2147AD0();
      (*(void (**)(char *, uint64_t))(v56 + 8))(v40, v57);
      sub_1C2148520();
    }
  }
  else
  {
    uint64_t v44 = v4;
    uint64_t v45 = v12;
    uint64_t v43 = v10;
    uint64_t v46 = v9;
    unint64_t v47 = v6;
    uint64_t v48 = v3;
    if (qword_1EA2C2658 != -1) {
      swift_once();
    }
    id v60 = 0;
    unint64_t v61 = 0xE000000000000000;
    swift_bridgeObjectRetain();
    sub_1C214B7C0();
    uint64_t v18 = (void *)sub_1C214BC10();
    unint64_t v20 = v19;
    swift_bridgeObjectRelease();
    id v60 = v18;
    unint64_t v61 = v20;
    sub_1C214A6C0();
    id v49 = v60;
    uint64_t v42 = *(uint64_t *)((char *)v0 + qword_1EA2C3890);
    uint64_t v21 = v45;
    sub_1C2149B70();
    swift_bridgeObjectRetain();
    sub_1C2149B90();
    os_log_type_t v22 = self;
    id v23 = objc_msgSend(v22, sel_labelColor);
    uint64_t v24 = (void (*)(id *, void))sub_1C2149AA0();
    sub_1C2149A60();
    v24(&v60, 0);
    sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8E0);
    sub_1C214B0A0();
    uint64_t v25 = (void (*)(id *, void))sub_1C2149AA0();
    sub_1C2149A50();
    v25(&v60, 0);
    uint64_t v26 = v43;
    v59[3] = v43;
    v59[4] = MEMORY[0x1E4FB0F88];
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v59);
    uint64_t v28 = v51;
    (*(void (**)(uint64_t *, char *, uint64_t))(v51 + 16))(boxed_opaque_existential_1, v21, v26);
    swift_bridgeObjectRetain();
    uint64_t v29 = v46;
    sub_1C21499A0();
    uint64_t v30 = &selRef_tertiarySystemGroupedBackgroundColor;
    if (!v54) {
      uint64_t v30 = &selRef_tertiarySystemBackgroundColor;
    }
    id v31 = [v22 *v30];
    sub_1C2149990();
    uint64_t v32 = sub_1C21499D0();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v29, 0, 1, v32);
    (*(void (**)(char *, void, uint64_t))(v50 + 104))(v47, *MEMORY[0x1E4F66480], v44);
    (*(void (**)(char *, void, uint64_t))(v52 + 104))(v48, *MEMORY[0x1E4F66678], v53);
    uint64_t v62 = sub_1C21487B0();
    uint64_t v63 = sub_1C1F61C84((unint64_t *)&qword_1EA2C2E68, MEMORY[0x1E4F66510]);
    __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v60);
    swift_bridgeObjectRetain();
    sub_1C21487A0();
    (*(void (**)(char *, uint64_t))(v28 + 8))(v21, v26);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C1F5FCAC(0, (unint64_t *)&qword_1EA2C2DD0, MEMORY[0x1E4F66468], MEMORY[0x1E4FBBE00]);
    sub_1C2148540();
    unint64_t v17 = swift_allocObject();
    long long v54 = xmmword_1C214FCD0;
    *(_OWORD *)(v17 + 16) = xmmword_1C214FCD0;
    sub_1C1F5FE64(0, (unint64_t *)&qword_1EBF0C958, (unint64_t *)&qword_1EBF0C2F0);
    uint64_t v33 = swift_allocObject();
    *(_OWORD *)(v33 + 16) = v54;
    sub_1C1F236D8((uint64_t)&v60, v33 + 32);
    v59[0] = v33;
    sub_1C1F7D1D0(v58);
    uint64_t v34 = v55;
    sub_1C2147B10();
    sub_1C2147AD0();
    (*(void (**)(char *, uint64_t))(v56 + 8))(v34, v57);
    sub_1C2148520();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)&v60);
  }
  return v17;
}

uint64_t sub_1C1F55600(unsigned __int8 *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1C21497F0();
  uint64_t v119 = *(void (***)(void, void))(v4 - 8);
  uint64_t v120 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v95 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v109 = sub_1C2148A70();
  uint64_t v118 = *(void *)(v109 - 8);
  MEMORY[0x1F4188790](v109);
  uint64_t v117 = (char *)&v95 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1C2148620();
  uint64_t v113 = *(void *)(v8 - 8);
  uint64_t v114 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v115 = (char *)&v95 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C1F5FCAC(0, &qword_1EBF0C620, MEMORY[0x1E4FB0F28], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v11 - 8);
  v112 = (char *)&v95 - v12;
  uint64_t v13 = sub_1C21487B0();
  uint64_t v110 = *(void *)(v13 - 8);
  uint64_t v111 = v13;
  MEMORY[0x1F4188790](v13);
  uint64_t v116 = (char *)&v95 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1C2147AC0();
  uint64_t v123 = *(void *)(v15 - 8);
  uint64_t v16 = MEMORY[0x1F4188790](v15);
  uint64_t v108 = (char *)&v95 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  unint64_t v19 = (char *)&v95 - v18;
  sub_1C1F5FCAC(0, &qword_1EBF0B1F0, MEMORY[0x1E4F27928], v10);
  uint64_t v21 = MEMORY[0x1F4188790](v20 - 8);
  id v23 = (char *)&v95 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v21);
  uint64_t v25 = (char *)&v95 - v24;
  uint64_t v26 = sub_1C2149BE0();
  uint64_t v121 = *(void *)(v26 - 8);
  uint64_t v122 = v26;
  MEMORY[0x1F4188790](v26);
  uint64_t v124 = (char *)&v95 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_1C2147CF0();
  MEMORY[0x1F4188790](v28 - 8);
  uint64_t v30 = (char *)&v95 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1F5FCAC(0, &qword_1EA2C3918, (uint64_t (*)(uint64_t))type metadata accessor for CycleData, v10);
  uint64_t v32 = MEMORY[0x1F4188790](v31 - 8);
  uint64_t v34 = (char *)&v95 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v32);
  uint64_t v36 = (char *)&v95 - v35;
  int v37 = *a1;
  id v38 = objc_msgSend(v2, sel_scheduleType);
  if (v38 == (id)7)
  {
    if (v37) {
      return MEMORY[0x1E4FBC860];
    }
  }
  else
  {
    if (v38 == (id)8) {
      char v39 = v37;
    }
    else {
      char v39 = 1;
    }
    if (v39) {
      return MEMORY[0x1E4FBC860];
    }
  }
  uint64_t v107 = v15;
  unint64_t v106 = v19;
  uint64_t v105 = v23;
  id v40 = v2;
  sub_1C2147C50();
  sub_1C2084348(v40, (uint64_t)v30, (uint64_t)v36);
  uint64_t v41 = type metadata accessor for CycleData();
  uint64_t v42 = *(void *)(v41 - 8);
  uint64_t v43 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48);
  uint64_t v44 = v42 + 48;
  if (v43(v36, 1, v41) == 1)
  {
    sub_1C1F60528((uint64_t)v36, &qword_1EA2C3918, (uint64_t (*)(uint64_t))type metadata accessor for CycleData);
    sub_1C21497A0();
    uint64_t v45 = sub_1C21497E0();
    os_log_type_t v46 = sub_1C214ABD0();
    if (os_log_type_enabled(v45, v46))
    {
      unint64_t v47 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v47 = 0;
      _os_log_impl(&dword_1C1F0B000, v45, v46, "Could not create cycleDataDescription item while attempting to display an item.", v47, 2u);
      MEMORY[0x1C8754730](v47, -1, -1);
    }

    ((void (**)(char *, uint64_t))v119)[1](v6, v120);
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v102 = v34;
  uint64_t v103 = v44;
  uint64_t v104 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v43;
  uint64_t v120 = v41;
  int v101 = v37;
  CycleData.localizedDescription.getter();
  sub_1C1F61C24((uint64_t)v36, (uint64_t (*)(void))type metadata accessor for CycleData);
  sub_1C2149BD0();
  sub_1C2149B90();
  uint64_t v119 = (void (**)(void, void))v40;
  id v49 = objc_msgSend(v40, sel_endDateTime);
  if (!v49)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v123 + 56))(v25, 1, 1, v107);
    uint64_t v58 = v120;
    goto LABEL_19;
  }
  uint64_t v50 = v49;
  uint64_t v51 = v106;
  sub_1C2147A60();

  uint64_t v52 = v123;
  uint64_t v53 = v123 + 32;
  uint64_t v54 = v107;
  uint64_t v100 = *(void (**)(char *, char *, uint64_t))(v123 + 32);
  v100(v25, v51, v107);
  uint64_t v55 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v52 + 56);
  v55((uint64_t)v25, 0, 1, v54);
  uint64_t v56 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v52 + 48);
  int v57 = v56(v25, 1, v54);
  uint64_t v58 = v120;
  if (v57 == 1)
  {
LABEL_19:
    sub_1C1F60528((uint64_t)v25, &qword_1EBF0B1F0, MEMORY[0x1E4F27928]);
    uint64_t v69 = v122;
    uint64_t v70 = v104;
    uint64_t v68 = (uint64_t)v102;
    goto LABEL_20;
  }
  uint64_t v98 = v52 + 56;
  char v96 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v56;
  uint64_t v99 = v55;
  uint64_t v97 = v53;
  sub_1C1F60528((uint64_t)v25, &qword_1EBF0B1F0, MEMORY[0x1E4F27928]);
  id v59 = objc_msgSend(v119, sel_endDateTime);
  if (v59)
  {
    id v60 = v59;
    unint64_t v61 = v51;
    sub_1C2147A60();

    uint64_t v62 = (uint64_t)v105;
    uint64_t v63 = v51;
    uint64_t v64 = v107;
    unint64_t v65 = (void (*)(char *, uint64_t, uint64_t))v100;
    v100(v105, v63, v107);
    v99(v62, 0, 1, v64);
    int v66 = v96(v62, 1, v64);
    uint64_t v67 = v108;
    uint64_t v68 = (uint64_t)v102;
    if (v66 != 1)
    {
      v65(v108, v62, v64);
      goto LABEL_30;
    }
  }
  else
  {
    uint64_t v62 = (uint64_t)v105;
    uint64_t v92 = v107;
    v99((uint64_t)v105, 1, 1, v107);
    uint64_t v67 = v108;
    unint64_t v61 = v51;
    uint64_t v64 = v92;
    uint64_t v68 = (uint64_t)v102;
  }
  sub_1C2147A70();
  sub_1C1F60528(v62, &qword_1EBF0B1F0, MEMORY[0x1E4F27928]);
LABEL_30:
  sub_1C21479C0();
  char v93 = sub_1C2147A10();
  char v94 = *(void (**)(char *, uint64_t))(v123 + 8);
  v94(v61, v64);
  v94(v67, v64);
  uint64_t v70 = v104;
  uint64_t v69 = v122;
  uint64_t v58 = v120;
  if ((v93 & 1) == 0)
  {
    (*(void (**)(char *, uint64_t))(v121 + 8))(v124, v122);
    return MEMORY[0x1E4FBC860];
  }
LABEL_20:
  long long v71 = v119;
  sub_1C2147C50();
  sub_1C2084348(v71, (uint64_t)v30, v68);
  if (v70(v68, 1, v58) == 1)
  {
    sub_1C1F60528(v68, &qword_1EA2C3918, (uint64_t (*)(uint64_t))type metadata accessor for CycleData);
    uint64_t v73 = v110;
    uint64_t v72 = v111;
    uint64_t v74 = v109;
  }
  else
  {
    CycleData.localizedNextPhaseDateChangeDescription.getter();
    uint64_t v76 = v75;
    sub_1C1F61C24(v68, (uint64_t (*)(void))type metadata accessor for CycleData);
    uint64_t v73 = v110;
    uint64_t v72 = v111;
    uint64_t v74 = v109;
    if (v76)
    {
      sub_1C2149A00();
      id v77 = objc_msgSend(self, sel_preferredFontForTextStyle_, *MEMORY[0x1E4FB28C8]);
      uint64_t v78 = (void (*)(uint64_t *, void))sub_1C2149AF0();
      sub_1C2149A50();
      v78(v125, 0);
      id v79 = objc_msgSend(self, sel_secondaryLabelColor);
      uint64_t v80 = (void (*)(uint64_t *, void))sub_1C2149AF0();
      sub_1C2149A60();
      v80(v125, 0);
    }
  }
  v125[3] = v69;
  v125[4] = MEMORY[0x1E4FB0F88];
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v125);
  uint64_t v82 = v121;
  uint64_t v83 = v124;
  (*(void (**)(uint64_t *, char *, uint64_t))(v121 + 16))(boxed_opaque_existential_1, v124, v69);
  uint64_t v84 = v112;
  sub_1C21499A0();
  uint64_t v85 = self;
  uint64_t v86 = &selRef_tertiarySystemGroupedBackgroundColor;
  if (!v101) {
    uint64_t v86 = &selRef_tertiarySystemBackgroundColor;
  }
  id v87 = [v85 *v86];
  sub_1C2149990();
  uint64_t v88 = sub_1C21499D0();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v88 - 8) + 56))(v84, 0, 1, v88);
  (*(void (**)(char *, void, uint64_t))(v113 + 104))(v115, *MEMORY[0x1E4F66480], v114);
  (*(void (**)(char *, void, uint64_t))(v118 + 104))(v117, *MEMORY[0x1E4F66678], v74);
  char v89 = v116;
  sub_1C21487A0();
  sub_1C1F5FE64(0, (unint64_t *)&qword_1EBF0C958, (unint64_t *)&qword_1EBF0C2F0);
  uint64_t v48 = swift_allocObject();
  *(_OWORD *)(v48 + 16) = xmmword_1C214FCD0;
  *(void *)(v48 + 56) = v72;
  *(void *)(v48 + 64) = sub_1C1F61C84((unint64_t *)&qword_1EA2C2E68, MEMORY[0x1E4F66510]);
  unint64_t v90 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v48 + 32));
  (*(void (**)(uint64_t *, char *, uint64_t))(v73 + 32))(v90, v89, v72);
  (*(void (**)(char *, uint64_t))(v82 + 8))(v83, v69);
  return v48;
}

id sub_1C1F563C4()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1C21497F0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = objc_msgSend(self, sel_currentDevice);
  id v7 = objc_msgSend(v6, sel_userInterfaceIdiom);

  BOOL v8 = v7 == (id)1;
  uint64_t v9 = *(void *)(v1 + qword_1EA2C3880 + 24);
  uint64_t v10 = *(void *)(v1 + qword_1EA2C3880 + 32);
  __swift_project_boxed_opaque_existential_0((void *)(v1 + qword_1EA2C3880), v9);
  char v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 40))(v9, v10);
  LOBYTE(v24[0]) = v8;
  BYTE1(v24[0]) = 1;
  BYTE2(v24[0]) = (v11 & 1) == 0;
  v24[1] = 1;
  id result = (id)ScheduleUnavailableDeviceState.bodyText.getter();
  if (!v13)
  {
    sub_1C21497A0();
    swift_retain_n();
    uint64_t v14 = sub_1C21497E0();
    os_log_type_t v15 = sub_1C214ABD0();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      uint64_t v17 = swift_slowAlloc();
      uint64_t v23 = v1;
      v24[0] = v17;
      *(_DWORD *)uint64_t v16 = 136446210;
      uint64_t v22 = v16 + 4;
      type metadata accessor for ScheduleDataSource(0);
      swift_retain();
      uint64_t v18 = sub_1C214A610();
      uint64_t v23 = sub_1C1F6FD54(v18, v19, v24);
      sub_1C214B530();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C1F0B000, v14, v15, "[%{public}s] Error getting body text for data source, ScheduleUnavailableDeviceState returned nil", v16, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C8754730](v17, -1, -1);
      MEMORY[0x1C8754730](v16, -1, -1);
    }
    else
    {

      swift_release_n();
    }
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    id result = objc_msgSend(self, sel_sharedBehavior);
    if (result)
    {
      uint64_t v20 = result;
      unsigned int v21 = objc_msgSend(result, sel_isAppleInternalInstall);

      if (v21) {
        return (id)0xD00000000000002ALL;
      }
      else {
        return 0;
      }
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_1C1F566E8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_1C21499D0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EBF0CA00 != -1) {
    swift_once();
  }
  id v6 = (id)qword_1EBF0CA18;
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_1C2147730();
  uint64_t v38 = v8;
  uint64_t v39 = v7;
  swift_bridgeObjectRelease();

  id v9 = sub_1C1F563C4();
  uint64_t v36 = v10;
  id v37 = v9;
  id v11 = (id)qword_1EBF0CA18;
  swift_bridgeObjectRetain();
  uint64_t v35 = sub_1C2147730();
  uint64_t v13 = v12;
  swift_bridgeObjectRelease();

  sub_1C21499A0();
  id v14 = objc_allocWithZone(MEMORY[0x1E4FB1618]);
  aBlock[4] = sub_1C1F56B08;
  aBlock[5] = 0;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C1F5B400;
  aBlock[3] = &block_descriptor_13;
  os_log_type_t v15 = _Block_copy(aBlock);
  id v16 = objc_msgSend(v14, sel_initWithDynamicProvider_, v15);
  _Block_release(v15);
  swift_release();
  id v17 = v16;
  sub_1C2149990();
  uint64_t v18 = (int *)type metadata accessor for TileItem(0);
  a1[3] = (uint64_t)v18;
  a1[4] = sub_1C1F61C84(&qword_1EA2C38F0, (void (*)(uint64_t))type metadata accessor for TileItem);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a1);
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))((char *)boxed_opaque_existential_1 + v18[11], v5, v2);
  type metadata accessor for TileItem.Background(0);
  swift_storeEnumTagMultiPayload();
  sub_1C2147B10();
  uint64_t v20 = (uint64_t *)((char *)boxed_opaque_existential_1 + v18[5]);
  type metadata accessor for TileItemCell();
  sub_1C1F61C84(&qword_1EA2C4950, (void (*)(uint64_t))type metadata accessor for TileItemCell);
  uint64_t v21 = sub_1C21481D0();
  uint64_t v23 = v22;

  *uint64_t v20 = v21;
  v20[1] = v23;
  uint64_t v24 = (uint64_t *)((char *)boxed_opaque_existential_1 + v18[6]);
  uint64_t v25 = v38;
  *uint64_t v24 = v39;
  v24[1] = v25;
  uint64_t v26 = (uint64_t *)((char *)boxed_opaque_existential_1 + v18[7]);
  uint64_t v27 = v36;
  *uint64_t v26 = v37;
  v26[1] = v27;
  uint64_t v28 = (uint64_t *)((char *)boxed_opaque_existential_1 + v18[8]);
  *uint64_t v28 = 0;
  v28[1] = 0;
  uint64_t v29 = (uint64_t *)((char *)boxed_opaque_existential_1 + v18[9]);
  *uint64_t v29 = v35;
  v29[1] = v13;
  uint64_t v30 = (uint64_t *)((char *)boxed_opaque_existential_1 + v18[10]);
  *uint64_t v30 = 0;
  v30[1] = 0;
  uint64_t v31 = (uint64_t (**)())((char *)boxed_opaque_existential_1 + v18[12]);
  *uint64_t v31 = sub_1C1F56B0C;
  v31[1] = 0;
  uint64_t v32 = (uint64_t *)((char *)boxed_opaque_existential_1 + v18[13]);
  *uint64_t v32 = 0;
  v32[1] = 0;
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_1C1F56B0C()
{
  uint64_t v18 = sub_1C2148F80();
  uint64_t v0 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18);
  uint64_t v2 = (char *)&v17 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27A78];
  uint64_t v4 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C1F5FCAC(0, (unint64_t *)&unk_1EA2C5130, MEMORY[0x1E4F27A78], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v17 - v6;
  sub_1C1F5FCAC(0, &qword_1EA2C38F8, MEMORY[0x1E4F276F0], v4);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v17 - v9;
  uint64_t v11 = sub_1C2147870();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  id v14 = (char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1C2147BB0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v7, 1, 1, v15);
  sub_1C2148F70();
  sub_1C21496B0();
  (*(void (**)(char *, uint64_t))(v0 + 8))(v2, v18);
  sub_1C1F60528((uint64_t)v7, (unint64_t *)&unk_1EA2C5130, v3);
  sub_1C2147860();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1) {
    return sub_1C1F60528((uint64_t)v10, &qword_1EA2C38F8, MEMORY[0x1E4F276F0]);
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v10, v11);
  sub_1C2147830();
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
}

uint64_t sub_1C1F56E80@<X0>(uint64_t *a1@<X8>)
{
  unint64_t v47 = a1;
  uint64_t v37 = *v1;
  uint64_t v2 = sub_1C2148A70();
  uint64_t v44 = *(void *)(v2 - 8);
  uint64_t v45 = v2;
  MEMORY[0x1F4188790](v2);
  os_log_type_t v46 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1C2148620();
  uint64_t v39 = *(void *)(v4 - 8);
  uint64_t v40 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v43 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1F5FCAC(0, &qword_1EBF0C620, MEMORY[0x1E4FB0F28], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v42 = (char *)&v31 - v7;
  uint64_t v41 = sub_1C21499D0();
  uint64_t v38 = *(void *)(v41 - 8);
  MEMORY[0x1F4188790](v41);
  uint64_t v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = sub_1C2149BE0();
  uint64_t v33 = *(void *)(v32 - 8);
  MEMORY[0x1F4188790](v32);
  uint64_t v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2149BD0();
  id v12 = objc_msgSend(self, sel_linkColor);
  uint64_t v13 = v11;
  id v14 = (void (*)(uint64_t *, void))sub_1C2149AA0();
  sub_1C2149A60();
  v14(&aBlock, 0);
  if (qword_1EBF0CA00 != -1) {
    swift_once();
  }
  id v15 = (id)qword_1EBF0CA18;
  swift_bridgeObjectRetain();
  sub_1C2147730();
  swift_bridgeObjectRelease();

  uint64_t v35 = v11;
  sub_1C2149B90();
  sub_1C21499A0();
  id v16 = objc_allocWithZone(MEMORY[0x1E4FB1618]);
  uint64_t v52 = sub_1C1F56B08;
  uint64_t v53 = 0;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  unint64_t v49 = 1107296256;
  uint64_t v50 = sub_1C1F5B400;
  uint64_t v51 = &block_descriptor_7;
  uint64_t v17 = _Block_copy(&aBlock);
  id v18 = objc_msgSend(v16, sel_initWithDynamicProvider_, v17);
  _Block_release(v17);
  swift_release();
  id v36 = v18;
  sub_1C2149990();
  uint64_t aBlock = 0;
  unint64_t v49 = 0xE000000000000000;
  sub_1C214B7C0();
  uint64_t v19 = sub_1C214BC10();
  unint64_t v21 = v20;
  swift_bridgeObjectRelease();
  uint64_t aBlock = v19;
  unint64_t v49 = v21;
  sub_1C214A6C0();
  uint64_t v37 = aBlock;
  unint64_t v34 = v49;
  uint64_t v22 = v32;
  uint64_t v51 = (void *)v32;
  uint64_t v52 = (uint64_t (*)())MEMORY[0x1E4FB0F88];
  uint64_t v23 = __swift_allocate_boxed_opaque_existential_1(&aBlock);
  uint64_t v24 = v33;
  (*(void (**)(uint64_t *, char *, uint64_t))(v33 + 16))(v23, v13, v22);
  swift_allocObject();
  swift_weakInit();
  uint64_t v25 = v38;
  uint64_t v27 = v41;
  uint64_t v26 = v42;
  (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v42, v9, v41);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v26, 0, 1, v27);
  (*(void (**)(char *, void, uint64_t))(v39 + 104))(v43, *MEMORY[0x1E4F66480], v40);
  (*(void (**)(char *, void, uint64_t))(v44 + 104))(v46, *MEMORY[0x1E4F66678], v45);
  uint64_t v28 = sub_1C21487B0();
  uint64_t v29 = v47;
  v47[3] = v28;
  v29[4] = sub_1C1F61C84((unint64_t *)&qword_1EA2C2E68, MEMORY[0x1E4F66510]);
  __swift_allocate_boxed_opaque_existential_1(v29);
  swift_retain();
  sub_1C21487A0();

  (*(void (**)(char *, uint64_t))(v25 + 8))(v9, v27);
  (*(void (**)(char *, uint64_t))(v24 + 8))(v35, v22);
  return swift_release();
}

id sub_1C1F57574(void *a1)
{
  id v1 = objc_msgSend(a1, sel_userInterfaceStyle);
  uint64_t v2 = self;
  uint64_t v3 = &selRef_tertiarySystemBackgroundColor;
  if (v1 != (id)2) {
    uint64_t v3 = &selRef_tertiarySystemFillColor;
  }
  id v4 = [v2 *v3];

  return v4;
}

uint64_t sub_1C1F575E0(void *a1)
{
  uint64_t v2 = sub_1C21497F0();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x1F4188790](v4);
  uint64_t v9 = (char *)v32 - v8;
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)v32 - v10;
  sub_1C21497A0();
  id v12 = sub_1C21497E0();
  os_log_type_t v13 = sub_1C214ABB0();
  if (os_log_type_enabled(v12, v13))
  {
    id v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v14 = 0;
    _os_log_impl(&dword_1C1F0B000, v12, v13, "Did tap 'Reset Schedule' item", v14, 2u);
    MEMORY[0x1C8754730](v14, -1, -1);
  }

  id v15 = *(void (**)(char *, uint64_t))(v3 + 8);
  v15(v11, v2);
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v17 = Strong;
    sub_1C1F236D8(Strong + qword_1EA2C3880, (uint64_t)v33);
    sub_1C1F23804(0, &qword_1EA2C38E8);
    sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8C0);
    if (swift_dynamicCast())
    {
      id v18 = (void *)v32[1];
      uint64_t v19 = *(void *)(v17 + qword_1EA2C3888);
      id v20 = objc_allocWithZone((Class)type metadata accessor for MedicationsInputViewController());
      swift_retain();
      id v21 = v18;
      uint64_t v22 = MedicationsInputViewController.init(schedulePublisher:medication:resetSchedule:restartingSchedule:)(v19, v21, 1, 0);
      id v23 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F67B78]), sel_initWithRootViewController_, v22);
      objc_msgSend(a1, sel_presentViewController_animated_completion_, v23, 1, 0);

      swift_retain();
      sub_1C2149550();
      swift_release();

      return swift_release();
    }
    sub_1C21497A0();
    uint64_t v29 = sub_1C21497E0();
    os_log_type_t v30 = sub_1C214ABD0();
    if (os_log_type_enabled(v29, v30))
    {
      uint64_t v31 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v31 = 0;
      _os_log_impl(&dword_1C1F0B000, v29, v30, "Unable to create MedicationsInputViewController if medication is nil.", v31, 2u);
      MEMORY[0x1C8754730](v31, -1, -1);
      swift_release();
    }
    else
    {

      swift_release();
    }
    uint64_t v28 = v6;
  }
  else
  {
    sub_1C21497A0();
    uint64_t v25 = sub_1C21497E0();
    os_log_type_t v26 = sub_1C214ABD0();
    if (os_log_type_enabled(v25, v26))
    {
      uint64_t v27 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v27 = 0;
      _os_log_impl(&dword_1C1F0B000, v25, v26, "Unable to create MedicationsInputViewController if ScheduleDataSource is nil.", v27, 2u);
      MEMORY[0x1C8754730](v27, -1, -1);
    }

    uint64_t v28 = v9;
  }
  return ((uint64_t (*)(char *, uint64_t))v15)(v28, v2);
}

unint64_t sub_1C1F579E8(void *a1)
{
  uint64_t v3 = sub_1C2147B20();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = sub_1C2148540();
  uint64_t v7 = *(void *)(v36 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v36);
  uint64_t v35 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v28 - v10;
  sub_1C1F566E8(v38);
  sub_1C1F5FE64(0, (unint64_t *)&qword_1EBF0C958, (unint64_t *)&qword_1EBF0C2F0);
  uint64_t v32 = v12;
  uint64_t v13 = swift_allocObject();
  long long v30 = xmmword_1C214FCD0;
  *(_OWORD *)(v13 + 16) = xmmword_1C214FCD0;
  sub_1C1F236D8((uint64_t)v38, v13 + 32);
  sub_1C2147B10();
  sub_1C2147AD0();
  uint64_t v31 = *(void (**)(char *, uint64_t))(v4 + 8);
  v31(v6, v3);
  sub_1C2148520();
  unint64_t v14 = sub_1C1F3AD2C(0, 1, 1, MEMORY[0x1E4FBC860]);
  unint64_t v16 = *(void *)(v14 + 16);
  unint64_t v15 = *(void *)(v14 + 24);
  uint64_t v33 = v1;
  uint64_t v34 = v3;
  if (v16 >= v15 >> 1) {
    unint64_t v14 = sub_1C1F3AD2C(v15 > 1, v16 + 1, 1, v14);
  }
  *(void *)(v14 + 16) = v16 + 1;
  id v18 = *(void (**)(unint64_t, char *, uint64_t))(v7 + 32);
  uint64_t v17 = v7 + 32;
  unint64_t v19 = (*(unsigned __int8 *)(v17 + 48) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 48);
  uint64_t v20 = *(void *)(v17 + 40);
  uint64_t v29 = v18;
  v18(v14 + v19 + v20 * v16, v11, v36);
  uint64_t v21 = a1[3];
  uint64_t v22 = a1[4];
  __swift_project_boxed_opaque_existential_0(a1, v21);
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v22 + 32))(v21, v22))
  {
    sub_1C1F56E80(v37);
    uint64_t v23 = swift_allocObject();
    *(_OWORD *)(v23 + 16) = v30;
    sub_1C1F236D8((uint64_t)v37, v23 + 32);
    sub_1C2147B10();
    sub_1C2147AD0();
    v31(v6, v34);
    uint64_t v24 = v35;
    sub_1C2148520();
    unint64_t v26 = *(void *)(v14 + 16);
    unint64_t v25 = *(void *)(v14 + 24);
    if (v26 >= v25 >> 1) {
      unint64_t v14 = sub_1C1F3AD2C(v25 > 1, v26 + 1, 1, v14);
    }
    *(void *)(v14 + 16) = v26 + 1;
    v29(v14 + v19 + v26 * v20, v24, v36);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v37);
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v38);
  return v14;
}

uint64_t sub_1C1F57D98(unsigned char *a1, void *a2)
{
  uint64_t v4 = sub_1C2148A70();
  uint64_t v46 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1C2148620();
  uint64_t v44 = *(void *)(v7 - 8);
  uint64_t v45 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1F5FCAC(0, &qword_1EBF0C620, MEMORY[0x1E4FB0F28], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v38 - v11;
  uint64_t v13 = sub_1C21487B0();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  unint64_t v47 = (char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v16 = (void *)sub_1C2149BE0();
  MEMORY[0x1F4188790](v16);
  unint64_t v19 = (char *)&v38 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*a1) {
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v42 = v14;
  uint64_t v43 = v17;
  uint64_t v41 = v4;
  uint64_t v20 = a2[3];
  uint64_t v21 = a2[4];
  __swift_project_boxed_opaque_existential_0(a2, v20);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v21 + 32))(v20, v21) & 1) == 0) {
    return MEMORY[0x1E4FBC860];
  }
  sub_1C2149E90();
  id v22 = v51[0];
  if (v51[0])
  {
    unsigned __int8 v23 = objc_msgSend(v51[0], sel_isUnavailable);

    if (v23) {
      return MEMORY[0x1E4FBC860];
    }
  }
  uint64_t v40 = v13;
  sub_1C2149BD0();
  id v39 = self;
  id v26 = objc_msgSend(v39, sel_tintColor);
  uint64_t v27 = (void (*)(id *, void))sub_1C2149AA0();
  sub_1C2149A60();
  v27(v51, 0);
  if (qword_1EBF0CA00 != -1) {
    swift_once();
  }
  id v28 = (id)qword_1EBF0CA18;
  swift_bridgeObjectRetain();
  sub_1C2147730();
  swift_bridgeObjectRelease();

  sub_1C2149B90();
  v51[3] = v16;
  v51[4] = (id)MEMORY[0x1E4FB0F88];
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)v51);
  (*(void (**)(uint64_t *, char *, void *))(v43 + 16))(boxed_opaque_existential_1, v19, v16);
  uint64_t v30 = swift_allocObject();
  swift_weakInit();
  sub_1C1F236D8((uint64_t)a2, (uint64_t)v50);
  uint64_t v31 = swift_allocObject();
  *(void *)(v31 + 16) = v30;
  sub_1C1F31280(v50, v31 + 24);
  swift_retain();
  sub_1C21499A0();
  id v32 = objc_msgSend(v39, sel_tertiarySystemBackgroundColor);
  sub_1C2149990();
  uint64_t v33 = sub_1C21499D0();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v12, 0, 1, v33);
  uint64_t v48 = sub_1C214A5F0();
  uint64_t v49 = v34;
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, void, uint64_t))(v44 + 104))(v9, *MEMORY[0x1E4F66480], v45);
  (*(void (**)(char *, void, uint64_t))(v46 + 104))(v6, *MEMORY[0x1E4F66678], v41);
  uint64_t v35 = v47;
  sub_1C21487A0();
  swift_release();
  sub_1C1F5FE64(0, (unint64_t *)&qword_1EBF0C958, (unint64_t *)&qword_1EBF0C2F0);
  uint64_t v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_1C214FCD0;
  uint64_t v36 = v40;
  *(void *)(v24 + 56) = v40;
  *(void *)(v24 + 64) = sub_1C1F61C84((unint64_t *)&qword_1EA2C2E68, MEMORY[0x1E4F66510]);
  uint64_t v37 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v24 + 32));
  (*(void (**)(uint64_t *, char *, uint64_t))(v42 + 32))(v37, v35, v36);
  (*(void (**)(char *, void *))(v43 + 8))(v19, v16);
  return v24;
}

uint64_t sub_1C1F584AC(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_1C21497F0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v10 = *(void *)(result + qword_1EA2C3888);
    swift_retain();
    swift_release();
    sub_1C1F236D8(a3, (uint64_t)v20);
    sub_1C1F23804(0, &qword_1EA2C38E8);
    sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8C0);
    if (swift_dynamicCast())
    {
      uint64_t v11 = (void *)v19[1];
      id v12 = objc_allocWithZone((Class)type metadata accessor for MedicationsInputViewController());
      swift_retain();
      id v13 = v11;
      uint64_t v14 = MedicationsInputViewController.init(schedulePublisher:medication:resetSchedule:restartingSchedule:)(v10, v13, 0, 0);
      id v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F67B78]), sel_initWithRootViewController_, v14);
      objc_msgSend(v15, sel_setModalPresentationStyle_, 2);
      objc_msgSend(v15, sel_setModalInPresentation_, 1);
      objc_msgSend(a1, sel_presentViewController_animated_completion_, v15, 1, 0);

      swift_beginAccess();
      if (swift_weakLoadStrong())
      {
        swift_retain();
        swift_release();
        sub_1C2149550();
        swift_release();
      }

      return swift_release();
    }
    else
    {
      sub_1C21497A0();
      unint64_t v16 = sub_1C21497E0();
      os_log_type_t v17 = sub_1C214ABD0();
      if (os_log_type_enabled(v16, v17))
      {
        uint64_t v18 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v18 = 0;
        _os_log_impl(&dword_1C1F0B000, v16, v17, "Unable to create MedicationsInputViewController if medication is nil.", v18, 2u);
        MEMORY[0x1C8754730](v18, -1, -1);
        swift_release();
      }
      else
      {

        swift_release();
      }
      return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
  }
  return result;
}

uint64_t sub_1C1F587BC(uint64_t a1)
{
  uint64_t v3 = sub_1C2148710();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](v3);
  uint64_t v7 = &v20[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = MEMORY[0x1F4188790](v5);
  uint64_t v10 = &v20[-v9];
  MEMORY[0x1F4188790](v8);
  id v12 = &v20[-v11];
  if (a1) {
    sub_1C2148690();
  }
  else {
    sub_1C2148660();
  }
  if (*(unsigned char *)(v1 + qword_1EA2C3878))
  {
    id v13 = (void (*)(unsigned char *, void))sub_1C21486D0();
    *(void *)(v14 + 16) = 0x4024000000000000;
    v13(v20, 0);
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v4 + 16))(v10, v12, v3);
  }
  else
  {
    id v15 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v4 + 16);
    v15(v10, v12, v3);
    sub_1C2148650();
    unint64_t v16 = *(void (**)(unsigned char *, uint64_t))(v4 + 8);
    v16(v10, v3);
    v16(v12, v3);
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v4 + 32))(v12, v7, v3);
    v15(v10, v12, v3);
  }
  uint64_t v17 = sub_1C2148700();
  uint64_t v18 = *(void (**)(unsigned char *, uint64_t))(v4 + 8);
  v18(v10, v3);
  v18(v12, v3);
  return v17;
}

void ScheduleDataSource.__allocating_init(arrangedSections:isHidden:)()
{
}

void ScheduleDataSource.init(arrangedSections:isHidden:)()
{
}

uint64_t sub_1C1F58A58()
{
  __swift_destroy_boxed_opaque_existential_0(v0 + qword_1EA2C3880);
  swift_release();
  swift_bridgeObjectRelease();

  swift_release();
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t ScheduleDataSource.deinit()
{
  uint64_t v0 = _s19HealthMedicationsUI34InteractionSeperatorLineDataSourceCfd_0();
  __swift_destroy_boxed_opaque_existential_0(v0 + qword_1EA2C3880);
  swift_release();
  swift_bridgeObjectRelease();

  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t ScheduleDataSource.__deallocating_deinit()
{
  ScheduleDataSource.deinit();

  return swift_deallocClassInstance();
}

uint64_t sub_1C1F58BD8(uint64_t a1)
{
  return sub_1C1F587BC(a1);
}

uint64_t sub_1C1F58BFC()
{
  return sub_1C2148B80();
}

Swift::Void __swiftcall ScheduleDataSource.registerCells(for:)(UICollectionView *a1)
{
}

uint64_t sub_1C1F58D68()
{
  return sub_1C214ACD0();
}

uint64_t ScheduleDataSource.supplementaryItem(ofKind:at:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v7 = sub_1C2149BE0();
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v8 = sub_1C2147B20();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (sub_1C214A5F0() == a1 && v12 == a2)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v14 = sub_1C214BA80();
    swift_bridgeObjectRelease();
    if ((v14 & 1) == 0) {
      goto LABEL_9;
    }
  }
  if ((*(unsigned char *)(v3 + qword_1EA2C3878) & 1) == 0)
  {
    sub_1C2149E90();
    unint64_t v19 = (void *)v25[0];
    if (!v25[0] || (sub_1C20BA914(1), uint64_t v21 = v20, v19, !v21)) {
      swift_bridgeObjectRelease();
    }
    v25[0] = 0x74497265746F6F46;
    v25[1] = 0xEB000000005F6D65;
    sub_1C2147B10();
    sub_1C2147AD0();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    sub_1C214A6C0();
    swift_bridgeObjectRelease();
    a3[3] = sub_1C2148960();
    a3[4] = sub_1C1F61C84(&qword_1EA2C2D38, MEMORY[0x1E4F665E8]);
    __swift_allocate_boxed_opaque_existential_1(a3);
    return sub_1C2148950();
  }
LABEL_9:
  if (sub_1C214A5F0() == a1 && v15 == a2)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v17 = sub_1C214BA80();
    swift_bridgeObjectRelease();
    if ((v17 & 1) == 0)
    {
      a3[3] = sub_1C2148220();
      a3[4] = sub_1C1F61C84(&qword_1EA2C2D28, MEMORY[0x1E4F66330]);
      __swift_allocate_boxed_opaque_existential_1(a3);
      return sub_1C2148210();
    }
  }
  if (qword_1EBF0CA00 != -1) {
    swift_once();
  }
  id v22 = (id)qword_1EBF0CA18;
  swift_bridgeObjectRetain();
  sub_1C2147730();
  swift_bridgeObjectRelease();

  sub_1C2149B50();
  uint64_t v23 = sub_1C2148180();
  swift_allocObject();
  uint64_t v24 = sub_1C2148170();
  a3[3] = v23;
  uint64_t result = sub_1C1F61C84((unint64_t *)&qword_1EA2C3550, MEMORY[0x1E4F66208]);
  a3[4] = result;
  *a3 = v24;
  return result;
}

uint64_t sub_1C1F592D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return ScheduleDataSource.supplementaryItem(ofKind:at:)(a1, a2, a3);
}

uint64_t sub_1C1F592F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1C2147CF0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2147CB0();
  char v8 = sub_1C2147BD0();
  uint64_t v9 = *(void (**)(char *, uint64_t))(v5 + 8);
  v9(v7, v4);
  sub_1C2147CB0();
  char v10 = sub_1C2147C00();
  v9(v7, v4);
  uint64_t v11 = sub_1C2147AC0();
  uint64_t v12 = *(void *)(v11 - 8);
  if (v8)
  {
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(a1, v11);
    sub_1C1F5FE14();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(a2, 1, 2, v13);
  }
  else if (v10)
  {
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(a1, v11);
    sub_1C1F5FE14();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(a2, 2, 2, v15);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 32))(a2, a1, v11);
    sub_1C1F5FE14();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(a2, 0, 2, v16);
  }
}

id sub_1C1F5953C@<X0>(id *a1@<X0>, void *a2@<X2>, char *a3@<X8>)
{
  uint64_t v45 = a3;
  uint64_t v40 = a2;
  uint64_t v4 = sub_1C21497F0();
  uint64_t v41 = *(void *)(v4 - 8);
  uint64_t v42 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v43 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1C21476D0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1F5FCAC(0, &qword_1EBF0B1F0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v39 - v11;
  uint64_t v13 = sub_1C2147AC0();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v44 = *a1;
  id v17 = objc_msgSend(v44, sel_startTimeComponent);
  sub_1C2147620();

  sub_1C1F6CCE8((uint64_t)v9, (uint64_t)v12);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_1C1F60528((uint64_t)v12, &qword_1EBF0B1F0, MEMORY[0x1E4F27928]);
    uint64_t v18 = v43;
    sub_1C21497A0();
    unint64_t v19 = v44;
    uint64_t v20 = sub_1C21497E0();
    os_log_type_t v21 = sub_1C214ABD0();
    if (os_log_type_enabled(v20, v21))
    {
      id v22 = (uint8_t *)swift_slowAlloc();
      uint64_t v23 = (void *)swift_slowAlloc();
      *(_DWORD *)id v22 = 138412290;
      uint64_t v46 = v19;
      uint64_t v24 = v19;
      uint64_t v18 = v43;
      sub_1C214B530();
      *uint64_t v23 = v19;

      _os_log_impl(&dword_1C1F0B000, v20, v21, "Could not create schedule dosage row for timeInterval: %@", v22, 0xCu);
      sub_1C1F60100(0, (unint64_t *)&qword_1EA2C3178, (unint64_t *)&qword_1EA2C4AA0);
      swift_arrayDestroy();
      MEMORY[0x1C8754730](v23, -1, -1);
      MEMORY[0x1C8754730](v22, -1, -1);
    }
    else
    {

      uint64_t v20 = v19;
    }
    uint64_t v35 = v45;
    uint64_t v37 = v41;
    uint64_t v36 = v42;

    (*(void (**)(char *, uint64_t))(v37 + 8))(v18, v36);
    uint64_t v38 = type metadata accessor for ScheduleDataSource.DoseItem(0);
    return (id)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v35, 1, 1, v38);
  }
  else
  {
    unint64_t v25 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
    v25(v16, v12, v13);
    __swift_project_boxed_opaque_existential_0(v40, v40[3]);
    id v26 = v44;
    id v27 = objc_msgSend(v44, sel_dose);
    uint64_t v28 = sub_1C2148FF0();
    uint64_t v30 = v29;

    uint64_t v31 = v45;
    v25(v45, v16, v13);
    uint64_t v32 = type metadata accessor for ScheduleDataSource.DoseItem(0);
    uint64_t v33 = (uint64_t *)&v31[*(int *)(v32 + 20)];
    *uint64_t v33 = v28;
    v33[1] = v30;
    *(void *)&v31[*(int *)(v32 + 24)] = v26;
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v31, 0, 1, v32);
    return v26;
  }
}

uint64_t sub_1C1F59A84()
{
  return sub_1C2147A20() & 1;
}

BOOL sub_1C1F59AB0(uint64_t a1, uint64_t a2)
{
  v25[1] = a2;
  uint64_t v2 = sub_1C2147CF0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1F5FCAC(0, &qword_1EA2C3940, MEMORY[0x1E4F66D20], MEMORY[0x1E4FBB718]);
  uint64_t v7 = MEMORY[0x1F4188790](v6 - 8);
  uint64_t v9 = (char *)v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)v25 - v10;
  sub_1C2147CB0();
  uint64_t v12 = sub_1C21495A0();
  uint64_t v13 = *(void (**)(char *, uint64_t))(v3 + 8);
  uint64_t v26 = v2;
  uint64_t v29 = v13;
  v13(v5, v2);
  uint64_t v14 = *(void *)(v12 + 16);
  uint64_t v15 = sub_1C21495D0();
  uint64_t v16 = *(void *)(v15 - 8);
  if (v14)
  {
    (*(void (**)(char *, unint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(v11, v12+ ((*(unsigned __int8 *)(*(void *)(v15 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v15 - 8) + 80)), v15);
    uint64_t v17 = 0;
  }
  else
  {
    uint64_t v17 = 1;
  }
  uint64_t v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56);
  v28(v11, v17, 1, v15);
  swift_bridgeObjectRelease();
  uint64_t v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
  unsigned int v19 = v18(v11, 1, v15);
  id v27 = v18;
  if (v19 == 1)
  {
    sub_1C1F60528((uint64_t)v11, &qword_1EA2C3940, MEMORY[0x1E4F66D20]);
    v25[0] = 0;
  }
  else
  {
    v25[0] = sub_1C21495C0();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v11, v15);
  }
  uint64_t v20 = v26;
  sub_1C2147CB0();
  uint64_t v21 = sub_1C21495A0();
  v29(v5, v20);
  if (*(void *)(v21 + 16))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v16 + 16))(v9, v21 + ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80)), v15);
    uint64_t v22 = 0;
  }
  else
  {
    uint64_t v22 = 1;
  }
  v28(v9, v22, 1, v15);
  swift_bridgeObjectRelease();
  if (v27(v9, 1, v15) == 1)
  {
    sub_1C1F60528((uint64_t)v9, &qword_1EA2C3940, MEMORY[0x1E4F66D20]);
    uint64_t v23 = 0;
  }
  else
  {
    uint64_t v23 = sub_1C21495C0();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v9, v15);
  }
  return v25[0] < v23;
}

uint64_t sub_1C1F59E7C@<X0>(uint64_t a1@<X1>, void *a2@<X2>, int a3@<W3>, char *a4@<X8>)
{
  int v27 = a3;
  uint64_t v26 = a1;
  uint64_t v28 = sub_1C21499D0();
  uint64_t v6 = *(void *)(v28 - 8);
  MEMORY[0x1F4188790](v28);
  uint64_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1C2147CF0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v13 = objc_msgSend(a2, sel_scheduleType);
  sub_1C2147CB0();
  uint64_t v14 = sub_1C2149670();
  unint64_t v16 = v15;
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  uint64_t v17 = v26;
  swift_bridgeObjectRetain();
  sub_1C21499A0();
  uint64_t v18 = self;
  unsigned int v19 = &selRef_tertiarySystemBackgroundColor;
  if (v27) {
    unsigned int v19 = &selRef_tertiarySystemGroupedBackgroundColor;
  }
  id v20 = [v18 *v19];
  sub_1C2149990();
  *(void *)a4 = 0xD000000000000014;
  *((void *)a4 + 1) = 0x80000001C215FD70;
  unint64_t v21 = 0xE000000000000000;
  if (v16)
  {
    unint64_t v21 = v16;
    uint64_t v22 = v14;
  }
  else
  {
    uint64_t v22 = 0;
  }
  *((void *)a4 + 2) = v22;
  *((void *)a4 + 3) = v21;
  *((void *)a4 + 4) = v13;
  *((void *)a4 + 5) = v17;
  uint64_t v23 = type metadata accessor for ScheduleIntervalItem();
  return (*(uint64_t (**)(char *, char *, uint64_t))(v6 + 32))(&a4[*(int *)(v23 + 32)], v8, v28);
}

uint64_t sub_1C1F5A0B8()
{
  uint64_t v1 = sub_1C21497F0();
  uint64_t v105 = *(void *)(v1 - 8);
  uint64_t v106 = v1;
  uint64_t v2 = MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v103 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = MEMORY[0x1F4188790](v2);
  uint64_t v103 = (char *)&v103 - v6;
  MEMORY[0x1F4188790](v5);
  uint64_t v104 = (char *)&v103 - v7;
  sub_1C1F5FD10();
  uint64_t v108 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v109 = (uint64_t)&v103 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C1F5FCAC(0, &qword_1EBF0B1F0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  uint64_t v12 = MEMORY[0x1F4188790](v11 - 8);
  uint64_t v14 = (char *)&v103 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  unint64_t v16 = (char *)&v103 - v15;
  sub_1C1F5FCAC(0, &qword_1EA2C3908, type metadata accessor for FutureDateRecencyState, v10);
  uint64_t v18 = MEMORY[0x1F4188790](v17 - 8);
  id v20 = (char *)&v103 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  uint64_t v116 = (uint64_t)&v103 - v21;
  uint64_t v22 = sub_1C2147AC0();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v114 = v22;
  uint64_t v115 = v23;
  uint64_t v24 = MEMORY[0x1F4188790](v22);
  uint64_t v111 = (char *)&v103 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v24);
  int v27 = (char *)&v103 - v26;
  v112 = (char *)&v103 - v26;
  uint64_t v28 = type metadata accessor for FutureDateRecencyState(0);
  uint64_t v29 = *(void *)(v28 - 8);
  uint64_t v30 = MEMORY[0x1F4188790](v28);
  uint64_t v107 = (uint64_t)&v103 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = MEMORY[0x1F4188790](v30);
  uint64_t v110 = (uint64_t)&v103 - v33;
  MEMORY[0x1F4188790](v32);
  uint64_t v35 = (char *)&v103 - v34;
  id v36 = objc_msgSend(v0, sel_startDateTime);
  sub_1C2147A60();

  uint64_t v113 = v35;
  sub_1C1F592F8((uint64_t)v27, (uint64_t)v35);
  id v37 = objc_msgSend(v0, sel_endDateTime);
  if (v37)
  {
    uint64_t v38 = v37;
    sub_1C2147A60();

    uint64_t v39 = 0;
  }
  else
  {
    uint64_t v39 = 1;
  }
  uint64_t v40 = v114;
  uint64_t v41 = v115;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v115 + 56))(v16, v39, 1, v114);
  sub_1C1F5FD94((uint64_t)v16, (uint64_t)v14, &qword_1EBF0B1F0, MEMORY[0x1E4F27928]);
  int v42 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v41 + 48))(v14, 1, v40);
  uint64_t v43 = v116;
  if (v42 == 1)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v29 + 56))(v116, 1, 1, v28);
  }
  else
  {
    id v44 = v4;
    uint64_t v45 = v112;
    (*(void (**)(char *, char *, uint64_t))(v41 + 32))(v112, v14, v40);
    uint64_t v46 = (uint64_t)v111;
    (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v111, v45, v40);
    sub_1C1F592F8(v46, v43);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v29 + 56))(v43, 0, 1, v28);
    unint64_t v47 = v45;
    uint64_t v4 = v44;
    (*(void (**)(char *, uint64_t))(v41 + 8))(v47, v40);
  }
  uint64_t v48 = (uint64_t)v113;
  sub_1C1F60528((uint64_t)v16, &qword_1EBF0B1F0, MEMORY[0x1E4F27928]);
  sub_1C1F5FD94(v43, (uint64_t)v20, &qword_1EA2C3908, type metadata accessor for FutureDateRecencyState);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v20, 1, v28) != 1)
  {
    uint64_t v52 = (uint64_t)v20;
    uint64_t v53 = v110;
    sub_1C1F60098(v52, v110, type metadata accessor for FutureDateRecencyState);
    uint64_t v54 = v109;
    uint64_t v55 = v109 + *(int *)(v108 + 48);
    sub_1C1F60030(v48, v109, type metadata accessor for FutureDateRecencyState);
    sub_1C1F60030(v53, v55, type metadata accessor for FutureDateRecencyState);
    sub_1C1F5FE14();
    uint64_t v57 = v56;
    uint64_t v58 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v56 - 8) + 48);
    int v59 = v58(v55, 2, v56);
    if (v59)
    {
      if (v59 == 1)
      {
        if (v58(v54, 2, v57) == 1)
        {
          if (qword_1EBF0CA00 == -1) {
            goto LABEL_30;
          }
          goto LABEL_54;
        }
        uint64_t v74 = v104;
        sub_1C21497A0();
        uint64_t v75 = sub_1C21497E0();
        os_log_type_t v76 = sub_1C214ABD0();
        if (os_log_type_enabled(v75, v76))
        {
          id v77 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)id v77 = 0;
          _os_log_impl(&dword_1C1F0B000, v75, v76, "Attempted to display an endDate that is today. Impossible!", v77, 2u);
          MEMORY[0x1C8754730](v77, -1, -1);
        }

        (*(void (**)(char *, uint64_t))(v105 + 8))(v74, v106);
        sub_1C1F61C24(v53, type metadata accessor for FutureDateRecencyState);
        sub_1C1F60528(v116, &qword_1EA2C3908, type metadata accessor for FutureDateRecencyState);
        sub_1C1F61C24(v48, type metadata accessor for FutureDateRecencyState);
        uint64_t v78 = v54;
      }
      else
      {
        int v72 = v58(v54, 2, v57);
        if (!v72)
        {
          char v96 = v103;
          sub_1C21497A0();
          uint64_t v97 = sub_1C21497E0();
          os_log_type_t v98 = sub_1C214ABD0();
          if (os_log_type_enabled(v97, v98))
          {
            uint64_t v99 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v99 = 0;
            _os_log_impl(&dword_1C1F0B000, v97, v98, "Attempted to display a start and end date with start date after endDate. Impossible!", v99, 2u);
            MEMORY[0x1C8754730](v99, -1, -1);
          }

          (*(void (**)(char *, uint64_t))(v105 + 8))(v96, v106);
          sub_1C1F61C24(v53, type metadata accessor for FutureDateRecencyState);
          sub_1C1F60528(v116, &qword_1EA2C3908, type metadata accessor for FutureDateRecencyState);
          sub_1C1F61C24(v48, type metadata accessor for FutureDateRecencyState);
          (*(void (**)(uint64_t, uint64_t))(v115 + 8))(v54, v114);
          return 0;
        }
        if (v72 == 1)
        {
          if (qword_1EBF0CA00 == -1)
          {
LABEL_30:
            id v73 = (id)qword_1EBF0CA18;
            swift_bridgeObjectRetain();
            uint64_t v65 = sub_1C2147730();
            swift_bridgeObjectRelease();

LABEL_39:
            uint64_t v91 = v53;
LABEL_40:
            sub_1C1F61C24(v91, type metadata accessor for FutureDateRecencyState);
            sub_1C1F60528(v116, &qword_1EA2C3908, type metadata accessor for FutureDateRecencyState);
            uint64_t v67 = v48;
            goto LABEL_41;
          }
LABEL_54:
          swift_once();
          goto LABEL_30;
        }
        sub_1C21497A0();
        uint64_t v100 = sub_1C21497E0();
        os_log_type_t v101 = sub_1C214ABD0();
        if (os_log_type_enabled(v100, v101))
        {
          uint64_t v102 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v102 = 0;
          _os_log_impl(&dword_1C1F0B000, v100, v101, "Attempted to display a start and end date with equal state. Impossible!", v102, 2u);
          MEMORY[0x1C8754730](v102, -1, -1);
        }

        (*(void (**)(char *, uint64_t))(v105 + 8))(v4, v106);
        sub_1C1F61C24(v53, type metadata accessor for FutureDateRecencyState);
        sub_1C1F60528(v116, &qword_1EA2C3908, type metadata accessor for FutureDateRecencyState);
        uint64_t v78 = v48;
      }
      sub_1C1F61C24(v78, type metadata accessor for FutureDateRecencyState);
      return 0;
    }
    int v68 = v58(v54, 2, v57);
    if (!v68)
    {
      uint64_t v79 = v115;
      uint64_t v80 = *(void (**)(char *, uint64_t, uint64_t))(v115 + 32);
      uint64_t v81 = v54;
      uint64_t v82 = v114;
      v80(v112, v81, v114);
      v80(v111, v55, v82);
      if (qword_1EBF0CA00 != -1) {
        swift_once();
      }
      id v83 = (id)qword_1EBF0CA18;
      swift_bridgeObjectRetain();
      sub_1C2147730();
      swift_bridgeObjectRelease();

      sub_1C1F5FE64(0, qword_1EBF0B8A0, (unint64_t *)&qword_1EBF0C9F0);
      uint64_t v84 = swift_allocObject();
      *(_OWORD *)(v84 + 16) = xmmword_1C214FCC0;
      Swift::String v85 = Date.formattedWithYearIfDifferent()();
      uint64_t v86 = MEMORY[0x1E4FBB1A0];
      *(void *)(v84 + 56) = MEMORY[0x1E4FBB1A0];
      unint64_t v87 = sub_1C1F31298();
      *(void *)(v84 + 64) = v87;
      *(Swift::String *)(v84 + 32) = v85;
      uint64_t v88 = v111;
      Swift::String v89 = Date.formattedWithYearIfDifferent()();
      *(void *)(v84 + 96) = v86;
      *(void *)(v84 + 104) = v87;
      *(Swift::String *)(v84 + 72) = v89;
      uint64_t v65 = sub_1C214A5C0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v90 = *(void (**)(char *, uint64_t))(v79 + 8);
      v90(v88, v82);
      v90(v112, v82);
      uint64_t v91 = v110;
      goto LABEL_40;
    }
    uint64_t v69 = v115;
    uint64_t v70 = v112;
    if (v68 == 1)
    {
      uint64_t v71 = v114;
      (*(void (**)(char *, uint64_t, uint64_t))(v115 + 32))(v112, v55, v114);
      if (qword_1EBF0CA00 == -1) {
        goto LABEL_38;
      }
    }
    else
    {
      uint64_t v71 = v114;
      (*(void (**)(char *, uint64_t, uint64_t))(v115 + 32))(v112, v55, v114);
      if (qword_1EBF0CA00 == -1)
      {
LABEL_38:
        id v92 = (id)qword_1EBF0CA18;
        swift_bridgeObjectRetain();
        sub_1C2147730();
        swift_bridgeObjectRelease();

        sub_1C1F5FE64(0, qword_1EBF0B8A0, (unint64_t *)&qword_1EBF0C9F0);
        uint64_t v93 = swift_allocObject();
        *(_OWORD *)(v93 + 16) = xmmword_1C214FCD0;
        Swift::String v94 = Date.formattedWithYearIfDifferent()();
        *(void *)(v93 + 56) = MEMORY[0x1E4FBB1A0];
        *(void *)(v93 + 64) = sub_1C1F31298();
        *(Swift::String *)(v93 + 32) = v94;
        uint64_t v65 = sub_1C214A5C0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v69 + 8))(v70, v71);
        goto LABEL_39;
      }
    }
    swift_once();
    goto LABEL_38;
  }
  sub_1C1F60528((uint64_t)v20, &qword_1EA2C3908, type metadata accessor for FutureDateRecencyState);
  uint64_t v49 = v107;
  sub_1C1F60030(v48, v107, type metadata accessor for FutureDateRecencyState);
  sub_1C1F5FE14();
  int v51 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 48))(v49, 2, v50);
  if (!v51)
  {
    uint64_t v60 = v115;
    unint64_t v61 = v112;
    (*(void (**)(char *, uint64_t, uint64_t))(v115 + 32))(v112, v49, v40);
    if (qword_1EBF0CA00 != -1) {
      swift_once();
    }
    id v62 = (id)qword_1EBF0CA18;
    swift_bridgeObjectRetain();
    sub_1C2147730();
    swift_bridgeObjectRelease();

    sub_1C1F5FE64(0, qword_1EBF0B8A0, (unint64_t *)&qword_1EBF0C9F0);
    uint64_t v63 = swift_allocObject();
    *(_OWORD *)(v63 + 16) = xmmword_1C214FCD0;
    Swift::String v64 = Date.formattedWithYearIfDifferent()();
    *(void *)(v63 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v63 + 64) = sub_1C1F31298();
    *(Swift::String *)(v63 + 32) = v64;
    uint64_t v65 = sub_1C214A5C0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v60 + 8))(v61, v40);
    goto LABEL_22;
  }
  if (v51 == 1)
  {
    if (qword_1EBF0CA00 == -1) {
      goto LABEL_21;
    }
    goto LABEL_51;
  }
  if (qword_1EBF0CA00 != -1) {
LABEL_51:
  }
    swift_once();
LABEL_21:
  id v66 = (id)qword_1EBF0CA18;
  swift_bridgeObjectRetain();
  uint64_t v65 = sub_1C2147730();
  swift_bridgeObjectRelease();

LABEL_22:
  sub_1C1F60528(v116, &qword_1EA2C3908, type metadata accessor for FutureDateRecencyState);
  uint64_t v67 = v48;
LABEL_41:
  sub_1C1F61C24(v67, type metadata accessor for FutureDateRecencyState);
  return v65;
}

uint64_t sub_1C1F5B358(void **a1)
{
  sub_1C1F5FF8C();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v4 = (void *)sub_1C20FB210(v4);
  }
  uint64_t v5 = v4[2];
  v7[0] = (uint64_t)v4 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  v7[1] = v5;
  uint64_t result = sub_1C1F5B468(v7);
  *a1 = v4;
  return result;
}

id sub_1C1F5B400(uint64_t a1, void *a2)
{
  uint64_t v3 = *(uint64_t (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  uint64_t v5 = (void *)v3();
  swift_release();

  return v5;
}

uint64_t sub_1C1F5B468(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v194 = sub_1C2147CF0();
  uint64_t v4 = *(void *)(v194 - 8);
  MEMORY[0x1F4188790](v194);
  v193 = (char *)&v162 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1F5FCAC(0, &qword_1EA2C3940, MEMORY[0x1E4F66D20], MEMORY[0x1E4FBB718]);
  uint64_t v7 = MEMORY[0x1F4188790](v6 - 8);
  uint64_t v9 = (char *)&v162 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x1F4188790](v7);
  uint64_t v12 = (char *)&v162 - v11;
  uint64_t v13 = MEMORY[0x1F4188790](v10);
  uint64_t v168 = (char *)&v162 - v14;
  MEMORY[0x1F4188790](v13);
  v169 = (char *)&v162 - v15;
  sub_1C1F5FF8C();
  uint64_t v177 = v16;
  uint64_t v174 = *(void *)(v16 - 8);
  uint64_t v17 = MEMORY[0x1F4188790](v16);
  uint64_t v167 = (uint64_t)&v162 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = MEMORY[0x1F4188790](v17);
  uint64_t v185 = (uint64_t)&v162 - v20;
  uint64_t v21 = MEMORY[0x1F4188790](v19);
  uint64_t v195 = (uint64_t)&v162 - v22;
  uint64_t v23 = MEMORY[0x1F4188790](v21);
  uint64_t v191 = (uint64_t)&v162 - v24;
  uint64_t v25 = MEMORY[0x1F4188790](v23);
  uint64_t v175 = (uint64_t)&v162 - v26;
  uint64_t v27 = MEMORY[0x1F4188790](v25);
  uint64_t v172 = (uint64_t)&v162 - v28;
  uint64_t v29 = MEMORY[0x1F4188790](v27);
  uint64_t v164 = (uint64_t)&v162 - v30;
  MEMORY[0x1F4188790](v29);
  uint64_t v32 = (char *)&v162 - v31;
  uint64_t v33 = a1[1];
  uint64_t result = sub_1C214BA30();
  if (result >= v33)
  {
    if (v33 < 0) {
      goto LABEL_171;
    }
    if (v33) {
      return sub_1C1F5C6F4(0, v33, 1, a1);
    }
    return result;
  }
  if (v33 >= 0) {
    uint64_t v35 = v33;
  }
  else {
    uint64_t v35 = v33 + 1;
  }
  if (v33 < -1) {
    goto LABEL_179;
  }
  uint64_t v163 = result;
  if (v33 < 2)
  {
    unint64_t v173 = MEMORY[0x1E4FBC860]
         + ((*(unsigned __int8 *)(v174 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v174 + 80));
    uint64_t v162 = MEMORY[0x1E4FBC860];
    if (v33 != 1)
    {
      unint64_t v102 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      uint64_t v40 = (char *)MEMORY[0x1E4FBC860];
LABEL_133:
      uint64_t v176 = v2;
      if (v102 >= 2)
      {
        uint64_t v154 = *a1;
        uint64_t v153 = v162;
        while (1)
        {
          unint64_t v155 = v102 - 2;
          if (v102 < 2) {
            goto LABEL_165;
          }
          if (!v154) {
            goto LABEL_178;
          }
          uint64_t v156 = v40;
          uint64_t v157 = *(void *)&v40[16 * v155 + 32];
          uint64_t v158 = *(void *)&v40[16 * v102 + 24];
          uint64_t v159 = v176;
          sub_1C1F5CD30(v154 + *(void *)(v174 + 72) * v157, v154 + *(void *)(v174 + 72) * *(void *)&v40[16 * v102 + 16], v154 + *(void *)(v174 + 72) * v158, v173);
          uint64_t v176 = v159;
          if (v159) {
            goto LABEL_146;
          }
          if (v158 < v157) {
            goto LABEL_167;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v156 = sub_1C20FB150((uint64_t)v156);
          }
          if (v155 >= *((void *)v156 + 2)) {
            goto LABEL_168;
          }
          uint64_t v160 = &v156[16 * v155 + 32];
          *(void *)uint64_t v160 = v157;
          *((void *)v160 + 1) = v158;
          unint64_t v161 = *((void *)v156 + 2);
          if (v102 > v161) {
            goto LABEL_169;
          }
          memmove(&v156[16 * v102 + 16], &v156[16 * v102 + 32], 16 * (v161 - v102));
          uint64_t v40 = v156;
          *((void *)v156 + 2) = v161 - 1;
          unint64_t v102 = v161 - 1;
          if (v161 <= 2) {
            goto LABEL_146;
          }
        }
      }
      uint64_t v153 = v162;
LABEL_146:
      swift_bridgeObjectRelease();
LABEL_147:
      *(void *)(v153 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v176 = v1;
  }
  else
  {
    uint64_t v176 = v1;
    uint64_t v36 = v35 >> 1;
    uint64_t v37 = sub_1C214A810();
    *(void *)(v37 + 16) = v36;
    uint64_t v38 = *(unsigned __int8 *)(v174 + 80);
    uint64_t v162 = v37;
    unint64_t v173 = v37 + ((v38 + 32) & ~v38);
  }
  uint64_t v39 = 0;
  v192 = (void (**)(char *, uint64_t))(v4 + 8);
  uint64_t v40 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v178 = v9;
  uint64_t v179 = a1;
  v183 = v12;
  uint64_t v170 = v32;
  while (1)
  {
    uint64_t v41 = v39;
    uint64_t v42 = v39 + 1;
    uint64_t v166 = v40;
    uint64_t v171 = v39;
    if (v39 + 1 >= v33)
    {
      uint64_t v47 = v39 + 1;
    }
    else
    {
      uint64_t v43 = *a1;
      uint64_t v44 = *(void *)(v174 + 72);
      sub_1C1F60030(*a1 + v44 * v42, (uint64_t)v32, (uint64_t (*)(void))sub_1C1F5FF8C);
      uint64_t v180 = v43;
      uint64_t v190 = v44;
      uint64_t v45 = v164;
      sub_1C1F60030(v43 + v44 * v41, v164, (uint64_t (*)(void))sub_1C1F5FF8C);
      uint64_t v46 = v176;
      LODWORD(v187) = sub_1C1F59AB0((uint64_t)v32, v45);
      uint64_t v176 = v46;
      if (v46)
      {
        sub_1C1F61C24(v45, (uint64_t (*)(void))sub_1C1F5FF8C);
        sub_1C1F61C24((uint64_t)v32, (uint64_t (*)(void))sub_1C1F5FF8C);
LABEL_131:
        swift_bridgeObjectRelease();
        uint64_t v153 = v162;
        goto LABEL_147;
      }
      sub_1C1F61C24(v45, (uint64_t (*)(void))sub_1C1F5FF8C);
      sub_1C1F61C24((uint64_t)v32, (uint64_t (*)(void))sub_1C1F5FF8C);
      uint64_t v47 = v41 + 2;
      uint64_t v186 = v33;
      if (v41 + 2 < v33)
      {
        uint64_t v48 = v180;
        uint64_t v181 = v190 * v47;
        uint64_t v182 = v190 * v42;
        uint64_t v49 = (uint64_t)v169;
        while (1)
        {
          uint64_t v184 = v47;
          sub_1C1F60030(v48 + v181, v172, (uint64_t (*)(void))sub_1C1F5FF8C);
          sub_1C1F60030(v48 + v182, v175, (uint64_t (*)(void))sub_1C1F5FF8C);
          uint64_t v50 = v193;
          sub_1C2147CB0();
          uint64_t v51 = sub_1C21495A0();
          v189 = *v192;
          v189(v50, v194);
          uint64_t v52 = *(void *)(v51 + 16);
          uint64_t v53 = sub_1C21495D0();
          uint64_t v54 = *(void *)(v53 - 8);
          if (v52)
          {
            (*(void (**)(uint64_t, unint64_t, uint64_t))(*(void *)(v53 - 8) + 16))(v49, v51+ ((*(unsigned __int8 *)(*(void *)(v53 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v53 - 8) + 80)), v53);
            uint64_t v55 = 0;
          }
          else
          {
            uint64_t v55 = 1;
          }
          uint64_t v56 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v54 + 56);
          v56(v49, v55, 1, v53);
          swift_bridgeObjectRelease();
          uint64_t v57 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v54 + 48);
          if (v57(v49, 1, v53) == 1)
          {
            sub_1C1F60528(v49, &qword_1EA2C3940, MEMORY[0x1E4F66D20]);
            uint64_t v188 = 0;
          }
          else
          {
            uint64_t v188 = sub_1C21495C0();
            (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v49, v53);
          }
          uint64_t v58 = v193;
          sub_1C2147CB0();
          uint64_t v59 = sub_1C21495A0();
          v189(v58, v194);
          if (*(void *)(v59 + 16))
          {
            uint64_t v60 = (uint64_t)v168;
            (*(void (**)(char *, unint64_t, uint64_t))(v54 + 16))(v168, v59 + ((*(unsigned __int8 *)(v54 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80)), v53);
            uint64_t v61 = 0;
          }
          else
          {
            uint64_t v61 = 1;
            uint64_t v60 = (uint64_t)v168;
          }
          v56(v60, v61, 1, v53);
          swift_bridgeObjectRelease();
          if (v57(v60, 1, v53) == 1)
          {
            sub_1C1F60528(v60, &qword_1EA2C3940, MEMORY[0x1E4F66D20]);
            uint64_t v62 = 0;
          }
          else
          {
            uint64_t v62 = sub_1C21495C0();
            (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v60, v53);
          }
          uint64_t v12 = v183;
          uint64_t v33 = v186;
          BOOL v63 = v188 >= v62;
          sub_1C1F61C24(v175, (uint64_t (*)(void))sub_1C1F5FF8C);
          sub_1C1F61C24(v172, (uint64_t (*)(void))sub_1C1F5FF8C);
          uint64_t v49 = (uint64_t)v169;
          if ((v187 & 1) == v63) {
            break;
          }
          uint64_t v47 = v184 + 1;
          v48 += v190;
          if (v33 == v184 + 1)
          {
            uint64_t v47 = v33;
            a1 = v179;
            uint64_t v32 = v170;
            goto LABEL_35;
          }
        }
        a1 = v179;
        uint64_t v32 = v170;
        uint64_t v47 = v184;
LABEL_35:
        uint64_t v41 = v171;
      }
      if (v187)
      {
        if (v47 < v41) {
          goto LABEL_174;
        }
        if (v41 < v47)
        {
          uint64_t v64 = 0;
          uint64_t v65 = v190 * (v47 - 1);
          uint64_t v66 = v47 * v190;
          uint64_t v67 = v41;
          uint64_t v68 = v41 * v190;
          do
          {
            if (v67 != v47 + v64 - 1)
            {
              uint64_t v70 = v47;
              uint64_t v71 = v180;
              if (!v180) {
                goto LABEL_177;
              }
              unint64_t v72 = v180 + v68;
              v189 = (void (*)(char *, uint64_t))(v180 + v65);
              sub_1C1F60098(v180 + v68, v167, (uint64_t (*)(void))sub_1C1F5FF8C);
              if (v68 < v65 || v72 >= v71 + v66)
              {
                uint64_t v69 = (uint64_t)v189;
                swift_arrayInitWithTakeFrontToBack();
              }
              else
              {
                uint64_t v69 = (uint64_t)v189;
                if (v68 != v65) {
                  swift_arrayInitWithTakeBackToFront();
                }
              }
              sub_1C1F60098(v167, v69, (uint64_t (*)(void))sub_1C1F5FF8C);
              uint64_t v47 = v70;
              uint64_t v41 = v171;
            }
            ++v67;
            --v64;
            v65 -= v190;
            v66 -= v190;
            v68 += v190;
          }
          while (v67 < v47 + v64);
          uint64_t v12 = v183;
          uint64_t v32 = v170;
          uint64_t v33 = v186;
        }
      }
    }
    if (v47 < v33)
    {
      if (__OFSUB__(v47, v41)) {
        goto LABEL_170;
      }
      if (v47 - v41 < v163) {
        break;
      }
    }
LABEL_80:
    if (v47 < v41) {
      goto LABEL_166;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v184 = v47;
    if (isUniquelyReferenced_nonNull_native) {
      uint64_t v40 = v166;
    }
    else {
      uint64_t v40 = sub_1C20FADDC(0, *((void *)v166 + 2) + 1, 1, v166);
    }
    unint64_t v101 = *((void *)v40 + 2);
    unint64_t v100 = *((void *)v40 + 3);
    unint64_t v102 = v101 + 1;
    if (v101 >= v100 >> 1) {
      uint64_t v40 = sub_1C20FADDC((char *)(v100 > 1), v101 + 1, 1, v40);
    }
    *((void *)v40 + 2) = v102;
    uint64_t v103 = v40 + 32;
    uint64_t v104 = &v40[16 * v101 + 32];
    uint64_t v105 = v184;
    *(void *)uint64_t v104 = v171;
    *((void *)v104 + 1) = v105;
    if (v101)
    {
      while (1)
      {
        unint64_t v106 = v102 - 1;
        if (v102 >= 4)
        {
          uint64_t v111 = &v103[16 * v102];
          uint64_t v112 = *((void *)v111 - 8);
          uint64_t v113 = *((void *)v111 - 7);
          BOOL v117 = __OFSUB__(v113, v112);
          uint64_t v114 = v113 - v112;
          if (v117) {
            goto LABEL_154;
          }
          uint64_t v116 = *((void *)v111 - 6);
          uint64_t v115 = *((void *)v111 - 5);
          BOOL v117 = __OFSUB__(v115, v116);
          uint64_t v109 = v115 - v116;
          char v110 = v117;
          if (v117) {
            goto LABEL_155;
          }
          unint64_t v118 = v102 - 2;
          uint64_t v119 = &v103[16 * v102 - 32];
          uint64_t v121 = *(void *)v119;
          uint64_t v120 = *((void *)v119 + 1);
          BOOL v117 = __OFSUB__(v120, v121);
          uint64_t v122 = v120 - v121;
          if (v117) {
            goto LABEL_157;
          }
          BOOL v117 = __OFADD__(v109, v122);
          uint64_t v123 = v109 + v122;
          if (v117) {
            goto LABEL_160;
          }
          if (v123 >= v114)
          {
            uint64_t v141 = &v103[16 * v106];
            uint64_t v143 = *(void *)v141;
            uint64_t v142 = *((void *)v141 + 1);
            BOOL v117 = __OFSUB__(v142, v143);
            uint64_t v144 = v142 - v143;
            if (v117) {
              goto LABEL_164;
            }
            BOOL v134 = v109 < v144;
            goto LABEL_117;
          }
        }
        else
        {
          if (v102 != 3)
          {
            uint64_t v135 = *((void *)v40 + 4);
            uint64_t v136 = *((void *)v40 + 5);
            BOOL v117 = __OFSUB__(v136, v135);
            uint64_t v128 = v136 - v135;
            char v129 = v117;
            goto LABEL_111;
          }
          uint64_t v108 = *((void *)v40 + 4);
          uint64_t v107 = *((void *)v40 + 5);
          BOOL v117 = __OFSUB__(v107, v108);
          uint64_t v109 = v107 - v108;
          char v110 = v117;
        }
        if (v110) {
          goto LABEL_156;
        }
        unint64_t v118 = v102 - 2;
        uint64_t v124 = &v103[16 * v102 - 32];
        uint64_t v126 = *(void *)v124;
        uint64_t v125 = *((void *)v124 + 1);
        BOOL v127 = __OFSUB__(v125, v126);
        uint64_t v128 = v125 - v126;
        char v129 = v127;
        if (v127) {
          goto LABEL_159;
        }
        id v130 = &v103[16 * v106];
        uint64_t v132 = *(void *)v130;
        uint64_t v131 = *((void *)v130 + 1);
        BOOL v117 = __OFSUB__(v131, v132);
        uint64_t v133 = v131 - v132;
        if (v117) {
          goto LABEL_162;
        }
        if (__OFADD__(v128, v133)) {
          goto LABEL_163;
        }
        if (v128 + v133 >= v109)
        {
          BOOL v134 = v109 < v133;
LABEL_117:
          if (v134) {
            unint64_t v106 = v118;
          }
          goto LABEL_119;
        }
LABEL_111:
        if (v129) {
          goto LABEL_158;
        }
        v137 = &v103[16 * v106];
        uint64_t v139 = *(void *)v137;
        uint64_t v138 = *((void *)v137 + 1);
        BOOL v117 = __OFSUB__(v138, v139);
        uint64_t v140 = v138 - v139;
        if (v117) {
          goto LABEL_161;
        }
        if (v140 < v128) {
          goto LABEL_128;
        }
LABEL_119:
        unint64_t v145 = v106 - 1;
        if (v106 - 1 >= v102)
        {
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
LABEL_154:
          __break(1u);
LABEL_155:
          __break(1u);
LABEL_156:
          __break(1u);
LABEL_157:
          __break(1u);
LABEL_158:
          __break(1u);
LABEL_159:
          __break(1u);
LABEL_160:
          __break(1u);
LABEL_161:
          __break(1u);
LABEL_162:
          __break(1u);
LABEL_163:
          __break(1u);
LABEL_164:
          __break(1u);
LABEL_165:
          __break(1u);
LABEL_166:
          __break(1u);
LABEL_167:
          __break(1u);
LABEL_168:
          __break(1u);
LABEL_169:
          __break(1u);
LABEL_170:
          __break(1u);
LABEL_171:
          __break(1u);
LABEL_172:
          __break(1u);
          goto LABEL_173;
        }
        if (!*a1) {
          goto LABEL_176;
        }
        uint64_t v146 = v40;
        uint64_t v147 = &v103[16 * v145];
        uint64_t v148 = *(void *)v147;
        v149 = &v103[16 * v106];
        uint64_t v150 = *((void *)v149 + 1);
        uint64_t v151 = v176;
        sub_1C1F5CD30(*a1 + *(void *)(v174 + 72) * *(void *)v147, *a1 + *(void *)(v174 + 72) * *(void *)v149, *a1 + *(void *)(v174 + 72) * v150, v173);
        uint64_t v176 = v151;
        if (v151) {
          goto LABEL_131;
        }
        if (v150 < v148) {
          goto LABEL_151;
        }
        if (v106 > *((void *)v146 + 2)) {
          goto LABEL_152;
        }
        *(void *)uint64_t v147 = v148;
        *(void *)&v103[16 * v145 + 8] = v150;
        unint64_t v152 = *((void *)v146 + 2);
        if (v106 >= v152) {
          goto LABEL_153;
        }
        unint64_t v102 = v152 - 1;
        memmove(&v103[16 * v106], v149 + 16, 16 * (v152 - 1 - v106));
        uint64_t v40 = v146;
        *((void *)v146 + 2) = v152 - 1;
        BOOL v134 = v152 > 2;
        uint64_t v12 = v183;
        uint64_t v32 = v170;
        if (!v134) {
          goto LABEL_128;
        }
      }
    }
    unint64_t v102 = 1;
LABEL_128:
    uint64_t v33 = a1[1];
    uint64_t v39 = v184;
    if (v184 >= v33)
    {
      uint64_t v2 = v176;
      goto LABEL_133;
    }
  }
  if (__OFADD__(v41, v163)) {
    goto LABEL_172;
  }
  if (v41 + v163 >= v33) {
    uint64_t v73 = v33;
  }
  else {
    uint64_t v73 = v41 + v163;
  }
  if (v73 >= v41)
  {
    if (v47 != v73)
    {
      uint64_t v74 = *(void *)(v174 + 72);
      uint64_t v75 = v74 * (v47 - 1);
      uint64_t v180 = v74;
      uint64_t v76 = v47 * v74;
      uint64_t v165 = v73;
      do
      {
        uint64_t v78 = 0;
        uint64_t v181 = v76;
        uint64_t v182 = v75;
        uint64_t v184 = v47;
        while (1)
        {
          uint64_t v188 = v41;
          uint64_t v79 = *a1;
          uint64_t v80 = v76 + v78;
          sub_1C1F60030(v76 + v78 + *a1, v191, (uint64_t (*)(void))sub_1C1F5FF8C);
          uint64_t v81 = v75 + v78;
          sub_1C1F60030(v75 + v78 + v79, v195, (uint64_t (*)(void))sub_1C1F5FF8C);
          uint64_t v82 = v193;
          sub_1C2147CB0();
          uint64_t v83 = sub_1C21495A0();
          uint64_t v84 = *v192;
          (*v192)(v82, v194);
          uint64_t v85 = *(void *)(v83 + 16);
          uint64_t v86 = sub_1C21495D0();
          uint64_t v87 = *(void *)(v86 - 8);
          uint64_t v88 = v87;
          uint64_t v186 = v81;
          uint64_t v187 = v80;
          v189 = v84;
          if (v85)
          {
            (*(void (**)(char *, unint64_t, uint64_t))(v87 + 16))(v12, v83 + ((*(unsigned __int8 *)(v87 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v87 + 80)), v86);
            uint64_t v89 = 0;
          }
          else
          {
            uint64_t v89 = 1;
          }
          unint64_t v90 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v88 + 56);
          v90(v12, v89, 1, v86);
          swift_bridgeObjectRelease();
          uint64_t v91 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v88 + 48);
          if (v91(v12, 1, v86) == 1)
          {
            sub_1C1F60528((uint64_t)v12, &qword_1EA2C3940, MEMORY[0x1E4F66D20]);
            uint64_t v190 = 0;
          }
          else
          {
            uint64_t v190 = sub_1C21495C0();
            (*(void (**)(char *, uint64_t))(v88 + 8))(v12, v86);
          }
          id v92 = v193;
          sub_1C2147CB0();
          uint64_t v93 = sub_1C21495A0();
          v189(v92, v194);
          if (*(void *)(v93 + 16))
          {
            uint64_t v94 = (uint64_t)v178;
            (*(void (**)(char *, unint64_t, uint64_t))(v88 + 16))(v178, v93 + ((*(unsigned __int8 *)(v88 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v88 + 80)), v86);
            uint64_t v95 = 0;
          }
          else
          {
            uint64_t v95 = 1;
            uint64_t v94 = (uint64_t)v178;
          }
          v90((char *)v94, v95, 1, v86);
          swift_bridgeObjectRelease();
          if (v91((char *)v94, 1, v86) == 1)
          {
            sub_1C1F60528(v94, &qword_1EA2C3940, MEMORY[0x1E4F66D20]);
            uint64_t v96 = 0;
          }
          else
          {
            uint64_t v96 = sub_1C21495C0();
            (*(void (**)(uint64_t, uint64_t))(v88 + 8))(v94, v86);
          }
          a1 = v179;
          uint64_t v75 = v182;
          sub_1C1F61C24(v195, (uint64_t (*)(void))sub_1C1F5FF8C);
          sub_1C1F61C24(v191, (uint64_t (*)(void))sub_1C1F5FF8C);
          uint64_t v12 = v183;
          if (v190 >= v96) {
            break;
          }
          uint64_t v97 = *a1;
          uint64_t v76 = v181;
          if (!*a1) {
            goto LABEL_175;
          }
          uint64_t v98 = v97 + v75 + v78;
          sub_1C1F60098(v97 + v181 + v78, v185, (uint64_t (*)(void))sub_1C1F5FF8C);
          swift_arrayInitWithTakeFrontToBack();
          sub_1C1F60098(v185, v98, (uint64_t (*)(void))sub_1C1F5FF8C);
          v78 -= v180;
          uint64_t v41 = v188 + 1;
          uint64_t v77 = v184;
          if (v184 == v188 + 1) {
            goto LABEL_61;
          }
        }
        uint64_t v77 = v184;
        uint64_t v76 = v181;
LABEL_61:
        uint64_t v47 = v77 + 1;
        v75 += v180;
        v76 += v180;
        uint64_t v41 = v171;
      }
      while (v47 != v165);
      uint64_t v47 = v165;
      uint64_t v32 = v170;
    }
    goto LABEL_80;
  }
LABEL_173:
  __break(1u);
LABEL_174:
  __break(1u);
LABEL_175:
  __break(1u);
LABEL_176:
  __break(1u);
LABEL_177:
  __break(1u);
LABEL_178:
  __break(1u);
LABEL_179:
  uint64_t result = sub_1C214B900();
  __break(1u);
  return result;
}

uint64_t sub_1C1F5C6F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v58 = a4;
  uint64_t v46 = a1;
  uint64_t v64 = sub_1C2147CF0();
  uint64_t v6 = *(void *)(v64 - 8);
  MEMORY[0x1F4188790](v64);
  BOOL v63 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1F5FCAC(0, &qword_1EA2C3940, MEMORY[0x1E4F66D20], MEMORY[0x1E4FBB718]);
  uint64_t v9 = MEMORY[0x1F4188790](v8 - 8);
  uint64_t v11 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v44 - v12;
  sub_1C1F5FF8C();
  uint64_t v47 = v14;
  uint64_t v15 = MEMORY[0x1F4188790](v14);
  uint64_t v55 = (uint64_t)&v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  uint64_t v65 = (uint64_t)&v44 - v18;
  uint64_t result = MEMORY[0x1F4188790](v17);
  uint64_t v22 = (char *)&v44 - v21;
  uint64_t v54 = a3;
  uint64_t v45 = a2;
  if (a3 != a2)
  {
    uint64_t v23 = *(void *)(v20 + 72);
    uint64_t v62 = (void (**)(char *, uint64_t))(v6 + 8);
    uint64_t v24 = v23 * (v54 - 1);
    uint64_t v50 = v11;
    uint64_t v51 = v23;
    uint64_t v25 = v23 * v54;
    uint64_t v48 = (char *)&v44 - v21;
    uint64_t v49 = v13;
LABEL_5:
    uint64_t v26 = 0;
    uint64_t v59 = v46;
    uint64_t v52 = v25;
    uint64_t v53 = v24;
    while (1)
    {
      uint64_t v27 = *v58;
      uint64_t v57 = v25 + v26;
      sub_1C1F60030(v25 + v26 + v27, (uint64_t)v22, (uint64_t (*)(void))sub_1C1F5FF8C);
      uint64_t v56 = v24 + v26;
      sub_1C1F60030(v24 + v26 + v27, v65, (uint64_t (*)(void))sub_1C1F5FF8C);
      uint64_t v28 = v63;
      sub_1C2147CB0();
      uint64_t v29 = sub_1C21495A0();
      uint64_t v61 = *v62;
      v61(v28, v64);
      uint64_t v30 = *(void *)(v29 + 16);
      uint64_t v31 = sub_1C21495D0();
      uint64_t v32 = *(void *)(v31 - 8);
      if (v30)
      {
        (*(void (**)(char *, unint64_t, uint64_t))(*(void *)(v31 - 8) + 16))(v13, v29+ ((*(unsigned __int8 *)(*(void *)(v31 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v31 - 8) + 80)), v31);
        uint64_t v33 = 0;
      }
      else
      {
        uint64_t v33 = 1;
      }
      uint64_t v34 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v32 + 56);
      v34(v13, v33, 1, v31);
      swift_bridgeObjectRelease();
      uint64_t v35 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48);
      if (v35(v13, 1, v31) == 1)
      {
        sub_1C1F60528((uint64_t)v13, &qword_1EA2C3940, MEMORY[0x1E4F66D20]);
        uint64_t v60 = 0;
      }
      else
      {
        uint64_t v60 = sub_1C21495C0();
        (*(void (**)(char *, uint64_t))(v32 + 8))(v13, v31);
      }
      uint64_t v36 = v63;
      sub_1C2147CB0();
      uint64_t v37 = sub_1C21495A0();
      v61(v36, v64);
      if (*(void *)(v37 + 16))
      {
        uint64_t v38 = (uint64_t)v50;
        (*(void (**)(char *, unint64_t, uint64_t))(v32 + 16))(v50, v37 + ((*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80)), v31);
        uint64_t v39 = 0;
      }
      else
      {
        uint64_t v39 = 1;
        uint64_t v38 = (uint64_t)v50;
      }
      v34((char *)v38, v39, 1, v31);
      swift_bridgeObjectRelease();
      if (v35((char *)v38, 1, v31) == 1)
      {
        sub_1C1F60528(v38, &qword_1EA2C3940, MEMORY[0x1E4F66D20]);
        uint64_t v40 = 0;
      }
      else
      {
        uint64_t v40 = sub_1C21495C0();
        (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v38, v31);
      }
      uint64_t v22 = v48;
      uint64_t v25 = v52;
      uint64_t v24 = v53;
      uint64_t v41 = v60;
      sub_1C1F61C24(v65, (uint64_t (*)(void))sub_1C1F5FF8C);
      uint64_t result = sub_1C1F61C24((uint64_t)v22, (uint64_t (*)(void))sub_1C1F5FF8C);
      uint64_t v13 = v49;
      if (v41 >= v40)
      {
LABEL_4:
        v24 += v51;
        v25 += v51;
        if (++v54 == v45) {
          return result;
        }
        goto LABEL_5;
      }
      uint64_t v42 = *v58;
      if (!*v58) {
        break;
      }
      uint64_t v43 = v42 + v24 + v26;
      sub_1C1F60098(v42 + v25 + v26, v55, (uint64_t (*)(void))sub_1C1F5FF8C);
      swift_arrayInitWithTakeFrontToBack();
      uint64_t result = sub_1C1F60098(v55, v43, (uint64_t (*)(void))sub_1C1F5FF8C);
      v26 -= v51;
      if (v54 == ++v59) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1C1F5CD30(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  sub_1C1F5FF8C();
  uint64_t v50 = v8;
  uint64_t v9 = MEMORY[0x1F4188790](v8);
  uint64_t v10 = MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v46 - v11;
  uint64_t v13 = MEMORY[0x1F4188790](v10);
  uint64_t v15 = (char *)&v46 - v14;
  MEMORY[0x1F4188790](v13);
  uint64_t v18 = (char *)&v46 - v17;
  uint64_t v20 = *(void *)(v19 + 72);
  if (!v20)
  {
    __break(1u);
LABEL_66:
    __break(1u);
LABEL_67:
    __break(1u);
    goto LABEL_68;
  }
  if (a2 - a1 == 0x8000000000000000 && v20 == -1) {
    goto LABEL_66;
  }
  int64_t v21 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v20 == -1) {
    goto LABEL_67;
  }
  uint64_t v22 = (uint64_t)(a2 - a1) / v20;
  unint64_t v54 = a1;
  unint64_t v53 = a4;
  uint64_t v23 = v21 / v20;
  if (v22 >= v21 / v20)
  {
    if ((v23 & 0x8000000000000000) == 0)
    {
      uint64_t v25 = v23 * v20;
      uint64_t v18 = v12;
      uint64_t v49 = v16;
      if (a4 < a2 || a2 + v25 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v35 = a4 + v25;
      unint64_t v52 = a4 + v25;
      unint64_t v54 = a2;
      if (v25 < 1 || a1 >= a2) {
        goto LABEL_64;
      }
      uint64_t v37 = -v20;
      unint64_t v47 = a4;
      unint64_t v48 = a1;
      uint64_t v15 = v49;
      while (1)
      {
        sub_1C1F60030(v35 + v37, (uint64_t)v18, (uint64_t (*)(void))sub_1C1F5FF8C);
        unint64_t v38 = a2 + v37;
        sub_1C1F60030(a2 + v37, (uint64_t)v15, (uint64_t (*)(void))sub_1C1F5FF8C);
        uint64_t v39 = v51;
        BOOL v40 = sub_1C1F59AB0((uint64_t)v18, (uint64_t)v15);
        uint64_t v51 = v39;
        if (v39) {
          goto LABEL_63;
        }
        BOOL v41 = v40;
        unint64_t v42 = a3 + v37;
        sub_1C1F61C24((uint64_t)v15, (uint64_t (*)(void))sub_1C1F5FF8C);
        sub_1C1F61C24((uint64_t)v18, (uint64_t (*)(void))sub_1C1F5FF8C);
        if (v41)
        {
          if (a3 < a2 || v42 >= a2)
          {
            swift_arrayInitWithTakeFrontToBack();
            unint64_t v43 = v48;
          }
          else
          {
            unint64_t v43 = v48;
            if (a3 != a2) {
              swift_arrayInitWithTakeBackToFront();
            }
          }
          v54 += v37;
        }
        else
        {
          unint64_t v44 = v52;
          v52 += v37;
          if (a3 < v44 || v42 >= v44)
          {
            swift_arrayInitWithTakeFrontToBack();
            unint64_t v38 = a2;
            unint64_t v43 = v48;
          }
          else
          {
            unint64_t v43 = v48;
            if (a3 != v44) {
              swift_arrayInitWithTakeBackToFront();
            }
            unint64_t v38 = a2;
          }
        }
        unint64_t v35 = v52;
        if (v52 > v47)
        {
          a2 = v38;
          a3 += v37;
          if (v38 > v43) {
            continue;
          }
        }
        goto LABEL_64;
      }
    }
  }
  else if ((v22 & 0x8000000000000000) == 0)
  {
    uint64_t v24 = v22 * v20;
    if (a4 < a1 || a1 + v24 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v26 = a4 + v24;
    unint64_t v52 = a4 + v24;
    BOOL v27 = v24 < 1 || a2 >= a3;
    if (v27) {
      goto LABEL_64;
    }
    while (1)
    {
      sub_1C1F60030(a2, (uint64_t)v18, (uint64_t (*)(void))sub_1C1F5FF8C);
      sub_1C1F60030(a4, (uint64_t)v15, (uint64_t (*)(void))sub_1C1F5FF8C);
      uint64_t v28 = v51;
      BOOL v29 = sub_1C1F59AB0((uint64_t)v18, (uint64_t)v15);
      uint64_t v51 = v28;
      if (v28) {
        break;
      }
      BOOL v30 = v29;
      unint64_t v31 = a3;
      sub_1C1F61C24((uint64_t)v15, (uint64_t (*)(void))sub_1C1F5FF8C);
      sub_1C1F61C24((uint64_t)v18, (uint64_t (*)(void))sub_1C1F5FF8C);
      unint64_t v32 = v54;
      if (v30)
      {
        unint64_t v33 = a2 + v20;
        if (v54 < a2 || v54 >= v33)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v54 == a2)
        {
          unint64_t v32 = a2;
        }
        else
        {
          swift_arrayInitWithTakeBackToFront();
        }
      }
      else
      {
        unint64_t v34 = v53 + v20;
        if (v54 < v53 || v54 >= v34)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v54 != v53)
        {
          swift_arrayInitWithTakeBackToFront();
        }
        unint64_t v53 = v34;
        unint64_t v33 = a2;
      }
      unint64_t v54 = v32 + v20;
      a4 = v53;
      if (v53 < v26)
      {
        a2 = v33;
        BOOL v27 = v33 >= v31;
        a3 = v31;
        if (!v27) {
          continue;
        }
      }
      goto LABEL_64;
    }
LABEL_63:
    sub_1C1F61C24((uint64_t)v15, (uint64_t (*)(void))sub_1C1F5FF8C);
    sub_1C1F61C24((uint64_t)v18, (uint64_t (*)(void))sub_1C1F5FF8C);
LABEL_64:
    sub_1C20FAFC0(&v54, &v53, (uint64_t *)&v52);
    return 1;
  }
LABEL_68:
  uint64_t result = sub_1C214B990();
  __break(1u);
  return result;
}

uint64_t sub_1C1F5D2C0(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, unsigned char *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v35 = a3;
  sub_1C1F60744();
  uint64_t v33 = *(void *)(v15 - 8);
  uint64_t v34 = v15;
  MEMORY[0x1F4188790](v15);
  unint64_t v32 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1C2149430();
  MEMORY[0x1F4188790](v17 - 8);
  v39[3] = a7;
  v39[4] = a8;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v39);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a7 - 8) + 32))(boxed_opaque_existential_1, a1, a7);
  LOBYTE(a1) = *a5;
  uint64_t v19 = (void *)(a6 + qword_1EA2C3890);
  *uint64_t v19 = 0xD000000000000014;
  v19[1] = 0x80000001C215FE50;
  uint64_t v20 = qword_1EA2C3898;
  swift_retain();
  sub_1C2149420();
  id v21 = objc_allocWithZone((Class)sub_1C2149460());
  *(void *)(a6 + v20) = sub_1C2149450();
  uint64_t v22 = qword_1EA2C38A0;
  *(void *)(a6 + qword_1EA2C38A0) = 0;
  uint64_t v23 = qword_1EA2C38B0;
  *(void *)(a6 + qword_1EA2C38B0) = 0;
  *(void *)(a6 + qword_1EA2C38B8) = MEMORY[0x1E4FBC870];
  sub_1C1F236D8((uint64_t)v39, a6 + qword_1EA2C3880);
  uint64_t v24 = *(void **)(a6 + v22);
  *(void *)(a6 + v22) = a2;
  id v36 = a2;

  *(void *)(a6 + qword_1EA2C38A8) = a4;
  uint64_t v25 = *(uint64_t (**)(uint64_t, uint64_t))(a8 + 24);
  uint64_t v37 = a4;
  swift_retain();
  uint64_t v38 = v25(a7, a8);
  sub_1C1F604A8();
  swift_allocObject();
  *(void *)(a6 + qword_1EA2C3888) = sub_1C2149EB0();
  *(unsigned char *)(a6 + qword_1EA2C3878) = a1;
  *(void *)(a6 + v23) = v35;
  swift_retain();
  swift_release();
  swift_release();
  sub_1C1F5FCAC(0, (unint64_t *)&qword_1EA2C2DD0, MEMORY[0x1E4F66468], MEMORY[0x1E4FBBE00]);
  sub_1C2148540();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1C214FCD0;
  sub_1C2148520();
  uint64_t v26 = sub_1C2147F50();
  uint64_t v27 = *(void *)(v26 + qword_1EA2C38B0);
  if (v27)
  {
    swift_retain_n();
    uint64_t v28 = v27;
  }
  else
  {
    LOBYTE(v38) = 1;
    swift_retain_n();
    BOOL v29 = v32;
    sub_1C2149EE0();
    sub_1C1F61C84((unint64_t *)&qword_1EA2C39A8, (void (*)(uint64_t))sub_1C1F60744);
    uint64_t v30 = v34;
    uint64_t v28 = sub_1C2149FC0();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v29, v30);
  }
  swift_retain();
  swift_release();
  uint64_t v38 = v28;
  swift_allocObject();
  swift_weakInit();
  sub_1C1F607A4(0, (unint64_t *)&qword_1EA2C39B0, MEMORY[0x1E4FBB390], MEMORY[0x1E4F1AAE0]);
  sub_1C1F60808();
  sub_1C214A0F0();
  swift_release();
  swift_release();
  swift_beginAccess();
  sub_1C2149E20();
  swift_endAccess();
  swift_release();
  sub_1C1F535BC();
  swift_release();

  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v39);
  return v26;
}

uint64_t sub_1C1F5D82C(uint64_t a1, uint64_t a2)
{
  if ((sub_1C2147A50() & 1) == 0) {
    return 0;
  }
  uint64_t v4 = *(int *)(type metadata accessor for ScheduleDataSource.DoseItem(0) + 20);
  uint64_t v5 = *(void *)(a1 + v4);
  uint64_t v6 = *(void *)(a1 + v4 + 8);
  uint64_t v7 = (void *)(a2 + v4);
  BOOL v8 = v5 == *v7 && v6 == v7[1];
  if (!v8 && (sub_1C214BA80() & 1) == 0) {
    return 0;
  }
  sub_1C1F12718(0, (unint64_t *)&qword_1EA2C4AA0);
  return sub_1C214B220() & 1;
}

uint64_t sub_1C1F5D8D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C2147AC0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for FutureDateRecencyState(0);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1F5FD10();
  uint64_t v12 = MEMORY[0x1F4188790](v11 - 8);
  uint64_t v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = (uint64_t)&v14[*(int *)(v12 + 56)];
  sub_1C1F60030(a1, (uint64_t)v14, type metadata accessor for FutureDateRecencyState);
  sub_1C1F60030(a2, v15, type metadata accessor for FutureDateRecencyState);
  sub_1C1F5FE14();
  uint64_t v17 = v16;
  uint64_t v18 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48);
  int v19 = v18(v14, 2, v16);
  if (!v19)
  {
    sub_1C1F60030((uint64_t)v14, (uint64_t)v10, type metadata accessor for FutureDateRecencyState);
    if (!v18((char *)v15, 2, v17))
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v7, v15, v4);
      char v23 = sub_1C2147A50();
      uint64_t v24 = *(void (**)(char *, uint64_t))(v5 + 8);
      v24(v7, v4);
      v24(v10, v4);
      id v21 = type metadata accessor for FutureDateRecencyState;
      goto LABEL_11;
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
    goto LABEL_9;
  }
  if (v19 == 1)
  {
    int v20 = v18((char *)v15, 2, v17);
    id v21 = type metadata accessor for FutureDateRecencyState;
    if (v20 == 1) {
      goto LABEL_8;
    }
LABEL_9:
    char v23 = 0;
    id v21 = (uint64_t (*)(void))sub_1C1F5FD10;
    goto LABEL_11;
  }
  int v22 = v18((char *)v15, 2, v17);
  id v21 = type metadata accessor for FutureDateRecencyState;
  if (v22 != 2) {
    goto LABEL_9;
  }
LABEL_8:
  char v23 = 1;
LABEL_11:
  sub_1C1F61C24((uint64_t)v14, v21);
  return v23 & 1;
}

uint64_t sub_1C1F5DBFC(uint64_t a1, void (*a2)(uint64_t, void), uint64_t a3)
{
  int v19 = a2;
  uint64_t v20 = a3;
  uint64_t v5 = type metadata accessor for ScheduleIntervalItem();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v9 = *(void *)(a1 + 16);
  uint64_t v10 = MEMORY[0x1E4FBC860];
  if (v9)
  {
    uint64_t v17 = v3;
    uint64_t v21 = MEMORY[0x1E4FBC860];
    sub_1C1F70604(0, v9, 0);
    uint64_t v10 = v21;
    sub_1C1F5FF8C();
    uint64_t v18 = v11;
    uint64_t v12 = a1
        + ((*(unsigned __int8 *)(*(void *)(v11 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v11 - 8) + 80));
    uint64_t v13 = *(void *)(*(void *)(v11 - 8) + 72);
    do
    {
      v19(v12, *(void *)(v12 + *(int *)(v18 + 48)));
      uint64_t v21 = v10;
      unint64_t v15 = *(void *)(v10 + 16);
      unint64_t v14 = *(void *)(v10 + 24);
      if (v15 >= v14 >> 1)
      {
        sub_1C1F70604(v14 > 1, v15 + 1, 1);
        uint64_t v10 = v21;
      }
      *(void *)(v10 + 16) = v15 + 1;
      sub_1C1F60098((uint64_t)v8, v10+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(void *)(v6 + 72) * v15, (uint64_t (*)(void))type metadata accessor for ScheduleIntervalItem);
      v12 += v13;
      --v9;
    }
    while (v9);
  }
  return v10;
}

uint64_t sub_1C1F5DDF4(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t v75 = sub_1C21499D0();
  uint64_t v74 = *(void *)(v75 - 8);
  MEMORY[0x1F4188790](v75);
  uint64_t v73 = (char *)&v71 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v88 = sub_1C21496A0();
  uint64_t v86 = *(void *)(v88 - 8);
  MEMORY[0x1F4188790](v88);
  uint64_t v85 = (char *)&v71 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v89 = type metadata accessor for ScheduleDataSource.DoseItem(0);
  uint64_t v6 = *(void *)(v89 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v89);
  uint64_t v87 = (uint64_t)&v71 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v71 - v9;
  LODWORD(a2) = *a2;
  id v78 = v2;
  unint64_t v12 = sub_1C1F6C38C();
  unint64_t v13 = v12;
  unint64_t v90 = (void *)MEMORY[0x1E4FBC860];
  if (v12 >> 62) {
    goto LABEL_41;
  }
  for (uint64_t i = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10); ; uint64_t i = sub_1C214B930())
  {
    uint64_t v84 = v10;
    int v76 = (int)a2;
    if (i)
    {
      if (i < 1)
      {
        __break(1u);
LABEL_43:
        sub_1C214BAB0();
        __break(1u);
        goto LABEL_44;
      }
      uint64_t v83 = v6;
      for (uint64_t j = 0; j != i; ++j)
      {
        if ((v13 & 0xC000000000000001) != 0) {
          id v16 = (id)MEMORY[0x1C8753960](j, v13);
        }
        else {
          id v16 = *(id *)(v13 + 8 * j + 32);
        }
        uint64_t v17 = v16;
        id v18 = objc_msgSend(v16, sel_dose);
        if (v18 && (v19 = v18, objc_msgSend(v18, sel_floatValue), float v21 = v20, v19, v21 > 0.0))
        {
          sub_1C214B820();
          sub_1C214B860();
          sub_1C214B870();
          sub_1C214B830();
        }
        else
        {
        }
      }
      uint64_t v22 = swift_bridgeObjectRelease();
      char v23 = v90;
      uint64_t v6 = v83;
      uint64_t v10 = v84;
    }
    else
    {
      uint64_t v22 = swift_bridgeObjectRelease();
      char v23 = (void *)MEMORY[0x1E4FBC860];
    }
    MEMORY[0x1F4188790](v22);
    *(&v71 - 2) = (uint64_t)v78;
    *(&v71 - 1) = a1;
    uint64_t v24 = (void *)sub_1C205A250((void (*)(id *))sub_1C1F5FEDC, (uint64_t)(&v71 - 4), (unint64_t)v23);
    swift_release();
    unint64_t v90 = v24;
    swift_getKeyPath();
    sub_1C1F5FCAC(0, &qword_1EA2C3920, type metadata accessor for ScheduleDataSource.DoseItem, MEMORY[0x1E4FBB320]);
    sub_1C1F5FEF8();
    uint64_t v25 = sub_1C214A730();
    uint64_t v72 = 0;
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v26 = (void *)MEMORY[0x1E4FBC868];
    unint64_t v90 = (void *)MEMORY[0x1E4FBC868];
    uint64_t v27 = *(void *)(v25 + 16);
    uint64_t v77 = v25;
    if (!v27) {
      break;
    }
    uint64_t v28 = *(unsigned __int8 *)(v6 + 80);
    uint64_t v29 = (v28 + 32) & ~v28;
    a2 = (unsigned __int8 *)(v25 + v29);
    a1 = *(void *)(v6 + 72);
    uint64_t v82 = v28 | 7;
    uint64_t v83 = a1 + v29;
    uint64_t v80 = (void (**)(uint64_t, uint64_t))(v86 + 8);
    uint64_t v81 = v86 + 32;
    swift_bridgeObjectRetain();
    uint64_t v30 = &off_1E6447000;
    long long v79 = xmmword_1C214FCD0;
    uint64_t v6 = (uint64_t)v85;
    while (1)
    {
      sub_1C1F60030((uint64_t)a2, (uint64_t)v10, type metadata accessor for ScheduleDataSource.DoseItem);
      sub_1C2092484((uint64_t)[*(id *)&v10[*(int *)(v89 + 24)] (SEL)v30[239]], (char *)v6);
      unint64_t v13 = sub_1C1F4B624(v6);
      uint64_t v33 = v26[2];
      BOOL v34 = (v32 & 1) == 0;
      uint64_t v35 = v33 + v34;
      if (__OFADD__(v33, v34)) {
        break;
      }
      char v36 = v32;
      if (v26[3] < v35)
      {
        sub_1C1FAB860(v35, 1);
        uint64_t v26 = v90;
        unint64_t v37 = sub_1C1F4B624(v6);
        if ((v36 & 1) != (v38 & 1)) {
          goto LABEL_43;
        }
        unint64_t v13 = v37;
      }
      if (v36)
      {
        uint64_t v39 = a1;
        uint64_t v40 = v29;
        (*v80)(v6, v88);
        uint64_t v26 = v90;
        uint64_t v41 = v90[7];
        sub_1C1F60098((uint64_t)v10, v87, type metadata accessor for ScheduleDataSource.DoseItem);
        unint64_t v42 = *(void *)(v41 + 8 * v13);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(void *)(v41 + 8 * v13) = v42;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          unint64_t v42 = sub_1C1F3AD74(0, *(void *)(v42 + 16) + 1, 1, v42);
          *(void *)(v41 + 8 * v13) = v42;
        }
        unint64_t v45 = *(void *)(v42 + 16);
        unint64_t v44 = *(void *)(v42 + 24);
        if (v45 >= v44 >> 1)
        {
          unint64_t v42 = sub_1C1F3AD74(v44 > 1, v45 + 1, 1, v42);
          *(void *)(v41 + 8 * v13) = v42;
        }
        *(void *)(v42 + 16) = v45 + 1;
        uint64_t v29 = v40;
        unint64_t v31 = v42 + v40;
        a1 = v39;
        sub_1C1F60098(v87, v31 + v45 * v39, type metadata accessor for ScheduleDataSource.DoseItem);
        uint64_t v10 = v84;
        uint64_t v6 = (uint64_t)v85;
        uint64_t v30 = &off_1E6447000;
      }
      else
      {
        sub_1C1F5FCAC(0, &qword_1EA2C3240, type metadata accessor for ScheduleDataSource.DoseItem, MEMORY[0x1E4FBBE00]);
        uint64_t v46 = swift_allocObject();
        *(_OWORD *)(v46 + 16) = v79;
        sub_1C1F60098((uint64_t)v10, v46 + v29, type metadata accessor for ScheduleDataSource.DoseItem);
        v26[(v13 >> 6) + 8] |= 1 << v13;
        (*(void (**)(unint64_t, uint64_t, uint64_t))(v86 + 32))(v26[6] + *(void *)(v86 + 72) * v13, v6, v88);
        *(void *)(v26[7] + 8 * v13) = v46;
        uint64_t v47 = v26[2];
        BOOL v48 = __OFADD__(v47, 1);
        uint64_t v49 = v47 + 1;
        if (v48) {
          goto LABEL_40;
        }
        void v26[2] = v49;
      }
      a2 += a1;
      if (!--v27)
      {
        swift_bridgeObjectRelease();
        goto LABEL_32;
      }
    }
    __break(1u);
LABEL_40:
    __break(1u);
LABEL_41:
    ;
  }
LABEL_32:
  id v50 = v78;
  if (objc_msgSend(v78, sel_scheduleType) != (id)5)
  {
    swift_release();
    sub_1C1F5FCAC(0, &qword_1EA2C3930, (uint64_t (*)(uint64_t))type metadata accessor for ScheduleIntervalItem, MEMORY[0x1E4FBBE00]);
    uint64_t v57 = (int *)(type metadata accessor for ScheduleIntervalItem() - 8);
    unint64_t v58 = (*(unsigned __int8 *)(*(void *)v57 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v57 + 80);
    uint64_t v56 = swift_allocObject();
    *(_OWORD *)(v56 + 16) = xmmword_1C214FCD0;
    uint64_t v59 = (char *)(v56 + v58);
    id v60 = objc_msgSend(v50, sel_scheduleType);
    id v61 = sub_1C1F84CF4();
    uint64_t v63 = v62;
    uint64_t v64 = v73;
    sub_1C21499A0();
    uint64_t v65 = self;
    uint64_t v66 = &selRef_tertiarySystemGroupedBackgroundColor;
    if (!v76) {
      uint64_t v66 = &selRef_tertiarySystemBackgroundColor;
    }
    id v67 = [v65 *v66];
    sub_1C2149990();
    *(void *)uint64_t v59 = 0xD000000000000014;
    *((void *)v59 + 1) = 0x80000001C215FD70;
    *((void *)v59 + 2) = v61;
    *((void *)v59 + 3) = v63;
    uint64_t v68 = v77;
    *((void *)v59 + 4) = v60;
    *((void *)v59 + 5) = v68;
    (*(void (**)(char *, char *, uint64_t))(v74 + 32))(&v59[v57[10]], v64, v75);
    goto LABEL_38;
  }
  swift_bridgeObjectRelease();
  uint64_t v51 = swift_bridgeObjectRetain();
  unint64_t v52 = (void *)sub_1C1F7F57C(v51);
  swift_release();
  unint64_t v90 = v52;
  uint64_t v53 = v72;
  sub_1C1F5B358(&v90);
  if (!v53)
  {
    uint64_t v54 = swift_release();
    uint64_t v55 = v90;
    MEMORY[0x1F4188790](v54);
    *(&v71 - 2) = (uint64_t)v50;
    *((unsigned char *)&v71 - 8) = v76;
    uint64_t v56 = sub_1C1F5DBFC((uint64_t)v55, (void (*)(uint64_t, void))sub_1C1F5FF80, (uint64_t)(&v71 - 4));
    swift_release();
LABEL_38:
    uint64_t v69 = sub_1C1F37968(v56);
    swift_bridgeObjectRelease();
    return v69;
  }
LABEL_44:
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_1C1F5E758(unsigned __int8 *a1)
{
  uint64_t v3 = sub_1C2148A70();
  uint64_t v63 = *(void *)(v3 - 8);
  uint64_t v64 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v62 = (char *)&v54 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1C2148620();
  uint64_t v56 = *(void *)(v5 - 8);
  uint64_t v57 = v5;
  MEMORY[0x1F4188790](v5);
  id v60 = (char *)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C1F5FCAC(0, &qword_1EBF0C620, MEMORY[0x1E4FB0F28], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v55 = (char *)&v54 - v9;
  uint64_t v10 = sub_1C21487B0();
  uint64_t v65 = *(void *)(v10 - 8);
  uint64_t v66 = v10;
  MEMORY[0x1F4188790](v10);
  id v61 = (char *)&v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1C2149A80();
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v13 = sub_1C2149BE0();
  uint64_t v58 = *(void *)(v13 - 8);
  uint64_t v59 = v13;
  MEMORY[0x1F4188790](v13);
  unint64_t v15 = (char *)&v54 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1C2147CF0();
  MEMORY[0x1F4188790](v16 - 8);
  id v18 = (char *)&v54 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1F5FCAC(0, &qword_1EA2C3918, (uint64_t (*)(uint64_t))type metadata accessor for CycleData, v7);
  MEMORY[0x1F4188790](v19 - 8);
  float v21 = (char *)&v54 - v20;
  uint64_t v22 = type metadata accessor for CycleData();
  uint64_t v23 = *(void *)(v22 - 8);
  MEMORY[0x1F4188790](v22);
  uint64_t v25 = (char *)&v54 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v26 = *a1;
  id v27 = v1;
  sub_1C2147C50();
  sub_1C2084348(v27, (uint64_t)v18, (uint64_t)v21);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22) == 1)
  {
    sub_1C1F60528((uint64_t)v21, &qword_1EA2C3918, (uint64_t (*)(uint64_t))type metadata accessor for CycleData);
    return MEMORY[0x1E4FBC860];
  }
  sub_1C1F60098((uint64_t)v21, (uint64_t)v25, (uint64_t (*)(void))type metadata accessor for CycleData);
  if (!v26)
  {
    sub_1C1F61C24((uint64_t)v25, (uint64_t (*)(void))type metadata accessor for CycleData);
    return MEMORY[0x1E4FBC860];
  }
  sub_1C21499F0();
  CycleData.localizedDescription.getter();
  sub_1C2149B90();
  uint64_t v28 = self;
  id v29 = objc_msgSend(v28, sel_labelColor);
  uint64_t v30 = (void (*)(uint64_t *, void))sub_1C2149AA0();
  sub_1C2149A60();
  v30(v67, 0);
  unint64_t v31 = self;
  uint64_t v32 = *MEMORY[0x1E4FB2950];
  id v33 = objc_msgSend(v31, sel_preferredFontForTextStyle_, *MEMORY[0x1E4FB2950]);
  BOOL v34 = (void (*)(uint64_t *, void))sub_1C2149AA0();
  sub_1C2149A50();
  v34(v67, 0);
  sub_1C2149B60();
  CycleData.localizedNextPhaseDateChangeDescription.getter();
  sub_1C2149A00();
  sub_1C2149AB0();
  sub_1C2149B00();
  id v35 = objc_msgSend(v28, sel_secondaryLabelColor);
  char v36 = (void (*)(uint64_t *, void))sub_1C2149AF0();
  sub_1C2149A60();
  v36(v67, 0);
  id v37 = objc_msgSend(v31, sel_preferredFontForTextStyle_, v32);
  char v38 = (void (*)(uint64_t *, void))sub_1C2149AF0();
  sub_1C2149A50();
  v38(v67, 0);
  uint64_t v39 = (void (*)(uint64_t *, void))sub_1C2149B10();
  *uint64_t v40 = 0x4028000000000000;
  v39(v67, 0);
  uint64_t v41 = (void (*)(uint64_t *, void))sub_1C2149B10();
  *(void *)(v42 + 16) = 0x4028000000000000;
  v41(v67, 0);
  uint64_t v43 = v59;
  v67[3] = v59;
  v67[4] = MEMORY[0x1E4FB0F88];
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v67);
  uint64_t v45 = v58;
  (*(void (**)(uint64_t *, char *, uint64_t))(v58 + 16))(boxed_opaque_existential_1, v15, v43);
  uint64_t v46 = v55;
  sub_1C21499A0();
  id v47 = objc_msgSend(v28, sel_tertiarySystemGroupedBackgroundColor);
  sub_1C2149990();
  uint64_t v48 = sub_1C21499D0();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v48 - 8) + 56))(v46, 0, 1, v48);
  (*(void (**)(char *, void, uint64_t))(v56 + 104))(v60, *MEMORY[0x1E4F66480], v57);
  (*(void (**)(char *, void, uint64_t))(v63 + 104))(v62, *MEMORY[0x1E4F66678], v64);
  uint64_t v49 = v61;
  sub_1C21487A0();
  sub_1C1F5FE64(0, (unint64_t *)&qword_1EBF0C958, (unint64_t *)&qword_1EBF0C2F0);
  uint64_t v50 = swift_allocObject();
  *(_OWORD *)(v50 + 16) = xmmword_1C214FCD0;
  uint64_t v51 = v66;
  *(void *)(v50 + 56) = v66;
  *(void *)(v50 + 64) = sub_1C1F61C84((unint64_t *)&qword_1EA2C2E68, MEMORY[0x1E4F66510]);
  unint64_t v52 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v50 + 32));
  (*(void (**)(uint64_t *, char *, uint64_t))(v65 + 32))(v52, v49, v51);
  (*(void (**)(char *, uint64_t))(v45 + 8))(v15, v43);
  sub_1C1F61C24((uint64_t)v25, (uint64_t (*)(void))type metadata accessor for CycleData);
  return v50;
}

uint64_t sub_1C1F5F024(unsigned char *a1)
{
  uint64_t v2 = sub_1C2148A70();
  uint64_t v39 = *(void *)(v2 - 8);
  uint64_t v40 = v2;
  MEMORY[0x1F4188790](v2);
  char v38 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1C2148620();
  uint64_t v36 = *(void *)(v4 - 8);
  uint64_t v37 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1F5FCAC(0, &qword_1EBF0C620, MEMORY[0x1E4FB0F28], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v32 - v8;
  uint64_t v10 = sub_1C21487B0();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1C2149BE0();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*a1 != 1) {
    return MEMORY[0x1E4FBC860];
  }
  sub_1C21499F0();
  sub_1C1F5A0B8();
  sub_1C2149B90();
  id v18 = self;
  id v19 = objc_msgSend(v18, sel_secondaryLabelColor);
  uint64_t v35 = v11;
  id v33 = v13;
  uint64_t v20 = sub_1C2149AA0();
  uint64_t v34 = v10;
  float v21 = (void (*)(uint64_t *, void))v20;
  sub_1C2149A60();
  v21(v41, 0);
  id v22 = objc_msgSend(self, sel_preferredFontForTextStyle_, *MEMORY[0x1E4FB2950]);
  uint64_t v23 = (void (*)(uint64_t *, void))sub_1C2149AA0();
  sub_1C2149A50();
  v23(v41, 0);
  v41[3] = v14;
  v41[4] = MEMORY[0x1E4FB0F88];
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v41);
  (*(void (**)(uint64_t *, char *, uint64_t))(v15 + 16))(boxed_opaque_existential_1, v17, v14);
  sub_1C21499A0();
  id v25 = objc_msgSend(v18, sel_tertiarySystemGroupedBackgroundColor);
  sub_1C2149990();
  uint64_t v26 = sub_1C21499D0();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v9, 0, 1, v26);
  (*(void (**)(char *, void, uint64_t))(v36 + 104))(v6, *MEMORY[0x1E4F66480], v37);
  (*(void (**)(char *, void, uint64_t))(v39 + 104))(v38, *MEMORY[0x1E4F66678], v40);
  id v27 = v33;
  sub_1C21487A0();
  sub_1C1F5FE64(0, (unint64_t *)&qword_1EBF0C958, (unint64_t *)&qword_1EBF0C2F0);
  uint64_t v28 = swift_allocObject();
  *(_OWORD *)(v28 + 16) = xmmword_1C214FCD0;
  uint64_t v29 = v34;
  *(void *)(v28 + 56) = v34;
  *(void *)(v28 + 64) = sub_1C1F61C84((unint64_t *)&qword_1EA2C2E68, MEMORY[0x1E4F66510]);
  uint64_t v30 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v28 + 32));
  (*(void (**)(uint64_t *, char *, uint64_t))(v35 + 32))(v30, v27, v29);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  return v28;
}

uint64_t sub_1C1F5F5A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    sub_1C201A1E8();
    if (!v3)
    {
      sub_1C201A1E8();
      if (!v5) {
        goto LABEL_7;
      }
      goto LABEL_4;
    }
    swift_bridgeObjectRelease();
    sub_1C201A1E8();
    if (v4) {
LABEL_4:
    }
      swift_bridgeObjectRelease();
  }
LABEL_7:
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8C0);
  uint64_t v6 = sub_1C214AF90();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1C1F5F6AC(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, unsigned char *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v15 = *(void *)(a7 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v17 = (char *)&v20 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ScheduleDataSource(0);
  uint64_t v18 = swift_allocObject();
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, a1, a7);
  return sub_1C1F5D2C0((uint64_t)v17, a2, a3, a4, a5, v18, a7, a8);
}

unint64_t sub_1C1F5F7D0()
{
  unint64_t result = qword_1EA2C38C8;
  if (!qword_1EA2C38C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C38C8);
  }
  return result;
}

uint64_t sub_1C1F5F824()
{
  return sub_1C1F61C84(&qword_1EA2C38D0, (void (*)(uint64_t))type metadata accessor for ScheduleDataSource);
}

uint64_t type metadata accessor for ScheduleDataSource(uint64_t a1)
{
  return sub_1C1F20D10(a1, (uint64_t *)&unk_1EA2C38D8);
}

uint64_t dispatch thunk of ScheduleItemDisplayable.identifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of ScheduleItemDisplayable.prefetchedSchedule.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of ScheduleItemDisplayable.isEditable.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of ScheduleItemDisplayable.shouldFetchScheduleLocally.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of ScheduleItemDisplayable.ontologyLoggingUnitSingular.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of ScheduleItemDisplayable.ontologyLoggingUnitPlural.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of ScheduleItemDisplayable.freeTextMedicationForm.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of ScheduleItemDisplayable.freeTextMedicationLoggingUnit.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t sub_1C1F5F96C()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for ScheduleDataSource(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ScheduleDataSource);
}

uint64_t dispatch thunk of ScheduleDataSource.__allocating_init(with:healthStore:isMedicationActivePublisher:analyticsManager:context:)()
{
  return (*(uint64_t (**)(void))(class metadata base offset for ScheduleDataSource + v0 + 152))();
}

uint64_t dispatch thunk of ScheduleDataSource.layout(for:environment:)()
{
  return (*(uint64_t (**)(void))(class metadata base offset for ScheduleDataSource + *v0 + 232))();
}

uint64_t sub_1C1F5FA78()
{
  return type metadata accessor for ScheduleDataSource(0);
}

uint64_t getEnumTagSinglePayload for HistoryDisplayContext(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ScheduleDataSource.DisplayContext(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C1F5FBDCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

unsigned char *sub_1C1F5FC04(unsigned char *result, char a2)
{
  *unint64_t result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for ScheduleDataSource.DisplayContext()
{
  return &type metadata for ScheduleDataSource.DisplayContext;
}

uint64_t sub_1C1F5FC20()
{
  swift_weakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C1F5FC58()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_0(v0 + 24);

  return MEMORY[0x1F4186498](v0, 64, 7);
}

uint64_t sub_1C1F5FC98(void *a1)
{
  return sub_1C1F584AC(a1, *(void *)(v1 + 16), v1 + 24);
}

uint64_t sub_1C1F5FCA4(void *a1)
{
  return sub_1C1F575E0(a1);
}

void sub_1C1F5FCAC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1C1F5FD10()
{
  if (!qword_1EA2C3900)
  {
    type metadata accessor for FutureDateRecencyState(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA2C3900);
    }
  }
}

uint64_t type metadata accessor for FutureDateRecencyState(uint64_t a1)
{
  return sub_1C1F20D10(a1, (uint64_t *)&unk_1EA2C39C0);
}

uint64_t sub_1C1F5FD94(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_1C1F5FCAC(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

void sub_1C1F5FE14()
{
  if (!qword_1EA2C3910)
  {
    unint64_t v0 = sub_1C2147AC0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C3910);
    }
  }
}

void sub_1C1F5FE64(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  if (!*a2)
  {
    sub_1C1F23804(255, a3);
    unint64_t v4 = sub_1C214BA50();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t type metadata accessor for ScheduleDataSource.DoseItem(uint64_t a1)
{
  return sub_1C1F20D10(a1, (uint64_t *)&unk_1EA2C39D0);
}

id sub_1C1F5FEDC@<X0>(id *a1@<X0>, char *a2@<X8>)
{
  return sub_1C1F5953C(a1, *(void **)(v2 + 24), a2);
}

unint64_t sub_1C1F5FEF8()
{
  unint64_t result = qword_1EA2C3928;
  if (!qword_1EA2C3928)
  {
    sub_1C1F5FCAC(255, &qword_1EA2C3920, type metadata accessor for ScheduleDataSource.DoseItem, MEMORY[0x1E4FBB320]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C3928);
  }
  return result;
}

uint64_t sub_1C1F5FF80@<X0>(uint64_t a1@<X1>, char *a2@<X8>)
{
  return sub_1C1F59E7C(a1, *(void **)(v2 + 16), *(unsigned __int8 *)(v2 + 24), a2);
}

void sub_1C1F5FF8C()
{
  if (!qword_1EA2C3938)
  {
    sub_1C21496A0();
    sub_1C1F5FCAC(255, &qword_1EA2C3920, type metadata accessor for ScheduleDataSource.DoseItem, MEMORY[0x1E4FBB320]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA2C3938);
    }
  }
}

uint64_t sub_1C1F60030(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C1F60098(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_1C1F60100(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  if (!*a2)
  {
    sub_1C1F12718(255, a3);
    unint64_t v4 = sub_1C214B4F0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1C1F6015C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  unint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *unint64_t v8 = v2;
  v8[1] = sub_1C1F405A0;
  return sub_1C1F542CC(a1, v4, v5, v7, v6);
}

uint64_t sub_1C1F6021C(uint64_t a1, uint64_t a2)
{
  sub_1C1F60100(0, (unint64_t *)&qword_1EBF0C830, &qword_1EBF0C828);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1C1F60298()
{
  if (!qword_1EA2C3958)
  {
    sub_1C1F607A4(255, &qword_1EA2C3960, MEMORY[0x1E4FBC848] + 8, MEMORY[0x1E4F1ABB0]);
    sub_1C1F12718(255, (unint64_t *)&qword_1EBF0CB10);
    sub_1C1F6035C();
    sub_1C1F43FD4();
    unint64_t v0 = sub_1C2149DF0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C3958);
    }
  }
}

unint64_t sub_1C1F6035C()
{
  unint64_t result = qword_1EA2C3968;
  if (!qword_1EA2C3968)
  {
    sub_1C1F607A4(255, &qword_1EA2C3960, MEMORY[0x1E4FBC848] + 8, MEMORY[0x1E4F1ABB0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C3968);
  }
  return result;
}

void sub_1C1F603DC()
{
  if (!qword_1EA2C3970)
  {
    sub_1C1F604A8();
    sub_1C1F12718(255, (unint64_t *)&qword_1EBF0CB10);
    sub_1C1F61C84((unint64_t *)&qword_1EA2C3980, (void (*)(uint64_t))sub_1C1F604A8);
    sub_1C1F43FD4();
    unint64_t v0 = sub_1C2149DF0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C3970);
    }
  }
}

void sub_1C1F604A8()
{
  if (!qword_1EA2C3978)
  {
    sub_1C1F60100(255, (unint64_t *)&qword_1EBF0C830, &qword_1EBF0C828);
    unint64_t v0 = sub_1C2149EA0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C3978);
    }
  }
}

uint64_t sub_1C1F60528(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1C1F5FCAC(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1C1F60598()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C1F605D0()
{
  return sub_1C1F53E9C();
}

uint64_t sub_1C1F605D8()
{
  return sub_1C1F54108();
}

uint64_t sub_1C1F605E0()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C1F60618()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t objectdestroy_16Tm()
{
  swift_unknownObjectRelease();
  swift_release();

  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1C1F60684(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  unint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *unint64_t v8 = v2;
  v8[1] = sub_1C1F40400;
  return sub_1C1F542CC(a1, v4, v5, v7, v6);
}

void sub_1C1F60744()
{
  if (!qword_1EA2C39A0)
  {
    unint64_t v0 = sub_1C2149ED0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C39A0);
    }
  }
}

uint64_t sub_1C1F6079C()
{
  return sub_1C211B2EC();
}

void sub_1C1F607A4(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t, void, void))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3, MEMORY[0x1E4FBC248], MEMORY[0x1E4FBC278]);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

unint64_t sub_1C1F60808()
{
  unint64_t result = qword_1EA2C39B8;
  if (!qword_1EA2C39B8)
  {
    sub_1C1F607A4(255, (unint64_t *)&qword_1EA2C39B0, MEMORY[0x1E4FBB390], MEMORY[0x1E4F1AAE0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C39B8);
  }
  return result;
}

void destroy for TransientSchedule(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 40);
}

uint64_t initializeWithCopy for TransientSchedule(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  int v3 = *(void **)(a2 + 32);
  uint64_t v4 = *(void **)(a2 + 40);
  *(void *)(a1 + 32) = v3;
  *(void *)(a1 + 40) = v4;
  id v5 = v3;
  id v6 = v4;
  return a1;
}

uint64_t assignWithCopy for TransientSchedule(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v4;
  uint64_t v5 = a2[2];
  *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
  *(void *)(a1 + 16) = v5;
  id v6 = *(void **)(a1 + 32);
  uint64_t v7 = (void *)a2[4];
  *(void *)(a1 + 32) = v7;
  id v8 = v7;

  uint64_t v9 = (void *)a2[5];
  uint64_t v10 = *(void **)(a1 + 40);
  *(void *)(a1 + 40) = v9;
  id v11 = v9;

  return a1;
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for TransientSchedule(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);

  uint64_t v4 = *(void **)(a1 + 40);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);

  return a1;
}

uint64_t getEnumTagSinglePayload for TransientSchedule(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 40);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TransientSchedule(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 40) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TransientSchedule()
{
  return &type metadata for TransientSchedule;
}

uint64_t *sub_1C1F60AA4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    sub_1C1F5FE14();
    uint64_t v8 = v7;
    uint64_t v9 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v9 + 48))(a2, 2, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v11 = sub_1C2147AC0();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v9 + 56))(a1, 0, 2, v8);
    }
  }
  return a1;
}

uint64_t sub_1C1F60C0C(uint64_t a1)
{
  sub_1C1F5FE14();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(a1, 2, v2);
  if (!result)
  {
    uint64_t v4 = sub_1C2147AC0();
    int v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
    return v5(a1, v4);
  }
  return result;
}

void *sub_1C1F60CBC(void *a1, const void *a2, uint64_t a3)
{
  sub_1C1F5FE14();
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(a2, 2, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v9 = sub_1C2147AC0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 2, v7);
  }
  return a1;
}

void *sub_1C1F60DE8(void *a1, void *a2, uint64_t a3)
{
  sub_1C1F5FE14();
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  uint64_t v9 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v8 + 48);
  int v10 = v9(a1, 2, v6);
  int v11 = v9(a2, 2, v7);
  if (!v10)
  {
    if (!v11)
    {
      uint64_t v14 = sub_1C2147AC0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 24))(a1, a2, v14);
      return a1;
    }
    sub_1C1F61C24((uint64_t)a1, (uint64_t (*)(void))sub_1C1F5FE14);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  uint64_t v12 = sub_1C2147AC0();
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(a1, a2, v12);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 2, v7);
  return a1;
}

void *sub_1C1F60F9C(void *a1, const void *a2, uint64_t a3)
{
  sub_1C1F5FE14();
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(a2, 2, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v9 = sub_1C2147AC0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 32))(a1, a2, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 2, v7);
  }
  return a1;
}

void *sub_1C1F610C8(void *a1, void *a2, uint64_t a3)
{
  sub_1C1F5FE14();
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  uint64_t v9 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v8 + 48);
  int v10 = v9(a1, 2, v6);
  int v11 = v9(a2, 2, v7);
  if (!v10)
  {
    if (!v11)
    {
      uint64_t v14 = sub_1C2147AC0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 40))(a1, a2, v14);
      return a1;
    }
    sub_1C1F61C24((uint64_t)a1, (uint64_t (*)(void))sub_1C1F5FE14);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  uint64_t v12 = sub_1C2147AC0();
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 32))(a1, a2, v12);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 2, v7);
  return a1;
}

uint64_t sub_1C1F6127C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C1F61290);
}

uint64_t sub_1C1F61290(uint64_t a1, uint64_t a2)
{
  sub_1C1F5FE14();
  unsigned int v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 3) {
    return v5 - 2;
  }
  else {
    return 0;
  }
}

uint64_t sub_1C1F612FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C1F61310);
}

uint64_t sub_1C1F61310(uint64_t a1, int a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = (a2 + 2);
  }
  else {
    uint64_t v5 = 0;
  }
  sub_1C1F5FE14();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);

  return v7(a1, v5, a3, v6);
}

uint64_t sub_1C1F61394(uint64_t a1)
{
  sub_1C1F5FE14();
  long long v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48);

  return v3(a1, 2, v2);
}

uint64_t sub_1C1F613FC(uint64_t a1, uint64_t a2)
{
  sub_1C1F5FE14();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, 2, v4);
}

uint64_t sub_1C1F6146C()
{
  uint64_t result = sub_1C2147AC0();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t *sub_1C1F614E4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1C2147AC0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = *(int *)(a3 + 24);
    int v10 = (uint64_t *)((char *)a1 + v8);
    int v11 = (uint64_t *)((char *)a2 + v8);
    uint64_t v12 = v11[1];
    *int v10 = *v11;
    v10[1] = v12;
    uint64_t v13 = *(void **)((char *)a2 + v9);
    *(uint64_t *)((char *)a1 + v9) = (uint64_t)v13;
    swift_bridgeObjectRetain();
    id v14 = v13;
  }
  return a1;
}

void sub_1C1F615C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C2147AC0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  int v5 = *(void **)(a1 + *(int *)(a2 + 24));
}

uint64_t sub_1C1F6164C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C2147AC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = (void *)(a1 + v7);
  int v10 = (void *)(a2 + v7);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  uint64_t v12 = *(void **)(a2 + v8);
  *(void *)(a1 + v8) = v12;
  swift_bridgeObjectRetain();
  id v13 = v12;
  return a1;
}

uint64_t sub_1C1F616E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C2147AC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = *(void **)(a2 + v10);
  uint64_t v12 = *(void **)(a1 + v10);
  *(void *)(a1 + v10) = v11;
  id v13 = v11;

  return a1;
}

uint64_t sub_1C1F61794(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C2147AC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  return a1;
}

uint64_t sub_1C1F61818(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C2147AC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  uint64_t v12 = *(int *)(a3 + 24);
  id v13 = *(void **)(a1 + v12);
  *(void *)(a1 + v12) = *(void *)(a2 + v12);

  return a1;
}

uint64_t sub_1C1F618B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C1F618CC);
}

uint64_t sub_1C1F618CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C2147AC0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_1C1F61990(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C1F619A4);
}

uint64_t sub_1C1F619A4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1C2147AC0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t sub_1C1F61A64()
{
  uint64_t result = sub_1C2147AC0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1C1F61B08()
{
  return sub_1C1F61C84(&qword_1EA2C39E0, (void (*)(uint64_t))type metadata accessor for ScheduleDataSource.DoseItem);
}

unint64_t sub_1C1F61B54()
{
  unint64_t result = qword_1EA2C39E8;
  if (!qword_1EA2C39E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C39E8);
  }
  return result;
}

unint64_t sub_1C1F61BA8(uint64_t a1)
{
  unint64_t result = sub_1C1F61BD0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C1F61BD0()
{
  unint64_t result = qword_1EA2C39F0;
  if (!qword_1EA2C39F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C39F0);
  }
  return result;
}

uint64_t sub_1C1F61C24(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C1F61C84(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t MedicationEducationAndComponentsItem.primaryEducationContent.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MedicationEducationAndComponentsItem.medicationName.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MedicationEducationAndComponentsItem.componentsList.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t MedicationEducationAndComponentsItem.hasEducation.getter()
{
  return *(unsigned __int8 *)(v0 + 40);
}

uint64_t MedicationEducationAndComponentsItem.reuseIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MedicationEducationAndComponentsItem.reuseIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 48) = a1;
  *(void *)(v2 + 56) = a2;
  return result;
}

uint64_t (*MedicationEducationAndComponentsItem.reuseIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t MedicationEducationAndComponentsItem.uniqueIdentifier.getter()
{
  type metadata accessor for MedicationEducationAndComponentsItem();
  sub_1C2147B20();
  sub_1C1F61FCC(&qword_1EA2C39F8, 255, MEMORY[0x1E4F27990]);
  uint64_t v1 = sub_1C214BA40();
  sub_1C214A6C0();
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t type metadata accessor for MedicationEducationAndComponentsItem()
{
  uint64_t result = qword_1EA2C3A28;
  if (!qword_1EA2C3A28) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t MedicationEducationAndComponentsItem.init(medicationName:primaryEducationContent:componentsList:hasEducation:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X8>)
{
  type metadata accessor for MedicationEducationAndComponentsItemCell();
  sub_1C1F61FCC(&qword_1EA2C3A00, v14, (void (*)(uint64_t))type metadata accessor for MedicationEducationAndComponentsItemCell);
  *(void *)(a7 + 48) = sub_1C21481D0();
  *(void *)(a7 + 56) = v15;
  type metadata accessor for MedicationEducationAndComponentsItem();
  uint64_t result = sub_1C2147B10();
  *(void *)(a7 + 16) = a1;
  *(void *)(a7 + 24) = a2;
  *(void *)a7 = a3;
  *(void *)(a7 + 8) = a4;
  *(void *)(a7 + 32) = a5;
  *(unsigned char *)(a7 + 40) = a6;
  return result;
}

uint64_t type metadata accessor for MedicationEducationAndComponentsItemCell()
{
  return self;
}

uint64_t sub_1C1F61FCC(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C1F62014()
{
  sub_1C2147B20();
  sub_1C1F61FCC(&qword_1EA2C39F8, 255, MEMORY[0x1E4F27990]);
  uint64_t v1 = sub_1C214BA40();
  sub_1C214A6C0();
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1C1F620D8(uint64_t a1, void *a2)
{
  sub_1C1F2116C(a1, (uint64_t)v5);
  uint64_t v3 = *a2 + OBJC_IVAR____TtC19HealthMedicationsUI40MedicationEducationAndComponentsItemCell_item;
  swift_beginAccess();
  sub_1C1F32DDC((uint64_t)v5, v3);
  swift_endAccess();
  sub_1C1F62168();
  return sub_1C1F64498((uint64_t)v5, (unint64_t *)&qword_1EBF0C300, (void (*)(uint64_t))sub_1C1F1CB5C);
}

void sub_1C1F62168()
{
  uint64_t v1 = v0;
  sub_1C1F628A4();
  sub_1C214A5F0();
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  id v2 = sub_1C1F62438();
  id v3 = objc_msgSend(v2, sel_text);

  if (!v3)
  {
    id v4 = sub_1C1F62438();
    id v3 = objc_msgSend(v4, sel_description);
  }
  sub_1C214A5F0();

  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v5 = (id)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_setAccessibilityIdentifier_, v5);
}

uint64_t sub_1C1F622C4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI40MedicationEducationAndComponentsItemCell_item;
  swift_beginAccess();
  return sub_1C1F2116C(v3, a1);
}

uint64_t sub_1C1F62318(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI40MedicationEducationAndComponentsItemCell_item;
  swift_beginAccess();
  sub_1C1F32DDC(a1, v3);
  swift_endAccess();
  sub_1C1F62168();
  return sub_1C1F64498(a1, (unint64_t *)&qword_1EBF0C300, (void (*)(uint64_t))sub_1C1F1CB5C);
}

void (*sub_1C1F623A4(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1C1F62404;
}

void sub_1C1F62404(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    sub_1C1F62168();
  }
}

id sub_1C1F62438()
{
  return sub_1C1F626AC(&OBJC_IVAR____TtC19HealthMedicationsUI40MedicationEducationAndComponentsItemCell____lazy_storage___primaryLabel);
}

id sub_1C1F6245C()
{
  uint64_t v1 = OBJC_IVAR____TtC19HealthMedicationsUI40MedicationEducationAndComponentsItemCell____lazy_storage___componentsLabel;
  id v2 = *(void **)(v0
                + OBJC_IVAR____TtC19HealthMedicationsUI40MedicationEducationAndComponentsItemCell____lazy_storage___componentsLabel);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC19HealthMedicationsUI40MedicationEducationAndComponentsItemCell____lazy_storage___componentsLabel);
  }
  else
  {
    id v4 = sub_1C1F624BC();
    id v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    id v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_1C1F624BC()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
  uint64_t v7 = sub_1C214A5F0();
  uint64_t v8 = v1;
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  id v2 = v0;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  id v3 = (void *)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setAccessibilityIdentifier_, v3, v7, v8);

  objc_msgSend(v2, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v2, sel_setNumberOfLines_, 0);
  id v4 = objc_msgSend(self, sel_secondaryLabelColor);
  objc_msgSend(v2, sel_setTextColor_, v4);

  id v5 = objc_msgSend(self, sel_preferredFontForTextStyle_, *MEMORY[0x1E4FB28D8]);
  objc_msgSend(v2, sel_setFont_, v5);

  objc_msgSend(v2, sel_setAdjustsFontForContentSizeCategory_, 1);
  return v2;
}

id sub_1C1F62688()
{
  return sub_1C1F626AC(&OBJC_IVAR____TtC19HealthMedicationsUI40MedicationEducationAndComponentsItemCell____lazy_storage___educationLabel);
}

id sub_1C1F626AC(uint64_t *a1)
{
  uint64_t v2 = *a1;
  id v3 = *(void **)(v1 + *a1);
  if (v3)
  {
    id v4 = *(id *)(v1 + *a1);
  }
  else
  {
    id v5 = sub_1C1F62710();
    id v6 = *(void **)(v1 + v2);
    *(void *)(v1 + v2) = v5;
    id v4 = v5;

    id v3 = 0;
  }
  id v7 = v3;
  return v4;
}

id sub_1C1F62710()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
  uint64_t v6 = sub_1C214A5F0();
  uint64_t v7 = v1;
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  id v2 = v0;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  id v3 = (void *)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setAccessibilityIdentifier_, v3, v6, v7);

  objc_msgSend(v2, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v2, sel_setNumberOfLines_, 0);
  id v4 = objc_msgSend(self, sel_preferredFontForTextStyle_, *MEMORY[0x1E4FB28C8]);
  objc_msgSend(v2, sel_setFont_, v4);

  objc_msgSend(v2, sel_setAdjustsFontForContentSizeCategory_, 1);
  return v2;
}

uint64_t sub_1C1F628A4()
{
  uint64_t v1 = v0;
  uint64_t v123 = sub_1C21497F0();
  uint64_t v2 = *(void *)(v123 - 8);
  MEMORY[0x1F4188790](v123);
  id v4 = (char *)&v117 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1F64444(0, &qword_1EBF0C620, MEMORY[0x1E4FB0F28]);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v121 = (char *)&v117 - v6;
  uint64_t v7 = sub_1C21499D0();
  uint64_t v122 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v117 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1F64444(0, &qword_1EA2C3A38, (void (*)(uint64_t))type metadata accessor for MedicationEducationAndComponentsItem);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v117 - v11;
  uint64_t v13 = type metadata accessor for MedicationEducationAndComponentsItem();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v117 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = (uint64_t)v1 + OBJC_IVAR____TtC19HealthMedicationsUI40MedicationEducationAndComponentsItemCell_item;
  swift_beginAccess();
  sub_1C1F2116C(v17, (uint64_t)v125);
  if (!v125[3])
  {
    sub_1C1F64498((uint64_t)v125, (unint64_t *)&qword_1EBF0C300, (void (*)(uint64_t))sub_1C1F1CB5C);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v12, 1, 1, v13);
    goto LABEL_6;
  }
  sub_1C1F1CB5C();
  int v18 = swift_dynamicCast();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v12, v18 ^ 1u, 1, v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
LABEL_6:
    sub_1C1F64498((uint64_t)v12, &qword_1EA2C3A38, (void (*)(uint64_t))type metadata accessor for MedicationEducationAndComponentsItem);
    sub_1C21497A0();
    id v21 = v1;
    id v22 = sub_1C21497E0();
    os_log_type_t v23 = sub_1C214ABD0();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = (uint8_t *)swift_slowAlloc();
      uint64_t v25 = swift_slowAlloc();
      uint64_t v124 = v25;
      *(_DWORD *)uint64_t v24 = 136446210;
      sub_1C1F2116C(v17, (uint64_t)v125);
      sub_1C1F64444(0, (unint64_t *)&qword_1EBF0C300, (void (*)(uint64_t))sub_1C1F1CB5C);
      uint64_t v26 = sub_1C214A630();
      v125[0] = sub_1C1F6FD54(v26, v27, &v124);
      sub_1C214B530();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C1F0B000, v22, v23, "Incorrect view model for MedicationEducationAndComponentsItemCell: %{public}s", v24, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C8754730](v25, -1, -1);
      MEMORY[0x1C8754730](v24, -1, -1);
    }
    else
    {
    }
    return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v123);
  }
  sub_1C1F644F4((uint64_t)v12, (uint64_t)v16);
  char v19 = v16[40];
  uint64_t v120 = v7;
  unint64_t v118 = v9;
  if (v19) {
    unsigned int v20 = 0;
  }
  else {
    unsigned int v20 = objc_msgSend(self, sel_supportsOntologyBackedMedications);
  }
  sub_1C1F13CCC(0, (unint64_t *)&qword_1EBF0CA10, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
  uint64_t v29 = swift_allocObject();
  *(_OWORD *)(v29 + 16) = xmmword_1C214FCA0;
  id v30 = sub_1C1F62438();
  id v31 = objc_msgSend(v30, sel_topAnchor);

  id v32 = objc_msgSend(v1, sel_contentView);
  id v33 = objc_msgSend(v32, sel_topAnchor);

  sub_1C2147E00();
  id v34 = objc_msgSend(v31, sel_constraintEqualToAnchor_constant_, v33);

  *(void *)(v29 + 32) = v34;
  id v35 = sub_1C1F62438();
  id v36 = objc_msgSend(v35, sel_leadingAnchor);

  id v37 = objc_msgSend(v1, sel_contentView);
  id v38 = objc_msgSend(v37, (SEL)&selRef_setTranslatesAutoresizingMaskIntoConstraints_ + 2);

  sub_1C2147E00();
  id v39 = objc_msgSend(v36, sel_constraintEqualToAnchor_constant_, v38);

  *(void *)(v29 + 40) = v39;
  id v40 = sub_1C1F62438();
  id v41 = objc_msgSend(v40, sel_trailingAnchor);

  id v42 = objc_msgSend(v1, sel_contentView);
  uint64_t v43 = v42;
  unint64_t v44 = &selRef_centerXAnchor;
  LODWORD(v123) = v20;
  if (v20) {
    unint64_t v44 = &selRef_trailingAnchor;
  }
  id v45 = [v42 *v44];

  sub_1C2147E00();
  id v47 = objc_msgSend(v41, sel_constraintEqualToAnchor_constant_, v45, -v46);

  *(void *)(v29 + 48) = v47;
  id v48 = sub_1C1F62438();
  id v49 = objc_msgSend(v48, sel_bottomAnchor);

  id v50 = objc_msgSend(v1, sel_contentView);
  id v51 = objc_msgSend(v50, sel_bottomAnchor);

  sub_1C2147E00();
  id v53 = objc_msgSend(v49, sel_constraintLessThanOrEqualToAnchor_constant_, v51, -v52);

  *(void *)(v29 + 56) = v53;
  id v54 = sub_1C1F6245C();
  id v55 = objc_msgSend(v54, sel_topAnchor);

  id v56 = sub_1C1F62438();
  id v57 = objc_msgSend(v56, sel_bottomAnchor);

  id v58 = objc_msgSend(v55, (SEL)&selRef_dealloc + 7, v57, 2.0);
  *(void *)(v29 + 64) = v58;
  id v59 = sub_1C1F6245C();
  id v60 = objc_msgSend(v59, sel_leadingAnchor);

  id v61 = sub_1C1F62438();
  id v62 = objc_msgSend(v61, sel_leadingAnchor);

  id v63 = objc_msgSend(v60, sel_constraintEqualToAnchor_, v62);
  *(void *)(v29 + 72) = v63;
  id v64 = sub_1C1F6245C();
  id v65 = objc_msgSend(v64, sel_trailingAnchor);

  id v66 = sub_1C1F62438();
  id v67 = objc_msgSend(v66, sel_trailingAnchor);

  id v68 = objc_msgSend(v65, (SEL)&selRef_leadingAnchor + 6, v67);
  *(void *)(v29 + 80) = v68;
  id v69 = sub_1C1F62688();
  id v70 = objc_msgSend(v69, sel_leadingAnchor);

  id v71 = objc_msgSend(v1, sel_contentView);
  id v72 = objc_msgSend(v71, sel_centerXAnchor);

  sub_1C2147E00();
  id v73 = objc_msgSend(v70, (SEL)&selRef_dealloc + 7, v72);

  *(void *)(v29 + 88) = v73;
  id v74 = sub_1C1F62688();
  id v75 = objc_msgSend(v74, sel_trailingAnchor);

  id v76 = objc_msgSend(v1, sel_contentView);
  id v77 = objc_msgSend(v76, sel_trailingAnchor);

  sub_1C2147E00();
  id v79 = objc_msgSend(v75, (SEL)&selRef_dealloc + 7, v77, -v78);

  *(void *)(v29 + 96) = v79;
  id v80 = sub_1C1F62688();
  id v81 = objc_msgSend(v80, sel_topAnchor);

  id v82 = sub_1C1F62438();
  id v83 = objc_msgSend(v82, sel_topAnchor);

  id v84 = objc_msgSend(v81, sel_constraintEqualToAnchor_, v83);
  *(void *)(v29 + 104) = v84;
  id v85 = sub_1C1F62688();
  id v86 = objc_msgSend(v85, sel_bottomAnchor);

  id v87 = objc_msgSend(v1, sel_contentView);
  id v88 = objc_msgSend(v87, sel_bottomAnchor);

  sub_1C2147E00();
  id v90 = objc_msgSend(v86, (SEL)&selRef_dealloc + 7, v88, -v89);

  *(void *)(v29 + 112) = v90;
  v125[0] = v29;
  sub_1C214A7A0();
  uint64_t v119 = v125[0];
  id v91 = objc_msgSend(v1, sel_contentView);
  id v92 = sub_1C1F62438();
  objc_msgSend(v91, sel_addSubview_, v92);

  id v93 = objc_msgSend(v1, (SEL)&selRef_setContentHuggingPriority_forAxis_);
  id v94 = sub_1C1F6245C();
  objc_msgSend(v93, sel_addSubview_, v94);

  id v95 = objc_msgSend(v1, (SEL)&selRef_setContentHuggingPriority_forAxis_);
  id v96 = sub_1C1F62688();
  objc_msgSend(v95, sel_addSubview_, v96);

  uint64_t v97 = v118;
  sub_1C21499A0();
  if (v123)
  {
    id v98 = sub_1C1F62438();
    uint64_t v99 = v120;
    if (qword_1EBF0CA00 != -1) {
      swift_once();
    }
    id v100 = (id)qword_1EBF0CA18;
    swift_bridgeObjectRetain();
    sub_1C2147730();
    swift_bridgeObjectRelease();

    unint64_t v101 = (void *)sub_1C214A5B0();
    swift_bridgeObjectRelease();
    objc_msgSend(v98, sel_setText_, v101);

    id v102 = sub_1C1F62438();
    uint64_t v103 = self;
    id v104 = objc_msgSend(v103, sel_secondaryLabelColor);
    objc_msgSend(v102, sel_setTextColor_, v104);

    id v105 = objc_msgSend(v103, sel_tertiarySystemFillColor);
    sub_1C2149990();
  }
  else
  {
    id v106 = objc_msgSend(self, sel_tertiarySystemBackgroundColor);
    sub_1C2149990();
    id v107 = sub_1C1F62438();
    swift_bridgeObjectRetain();
    uint64_t v108 = (void *)sub_1C214A5B0();
    swift_bridgeObjectRelease();
    objc_msgSend(v107, sel_setText_, v108);

    id v109 = sub_1C1F6245C();
    v125[0] = *((void *)v16 + 4);
    sub_1C1F13CCC(0, (unint64_t *)&qword_1EA2C3A40, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
    sub_1C1F64558();
    swift_bridgeObjectRetain();
    sub_1C214A580();
    swift_bridgeObjectRelease();
    char v110 = (void *)sub_1C214A5B0();
    swift_bridgeObjectRelease();
    objc_msgSend(v109, sel_setText_, v110);

    id v111 = sub_1C1F62688();
    uint64_t v99 = v120;
    if (*((void *)v16 + 1))
    {
      swift_bridgeObjectRetain();
      uint64_t v112 = (void *)sub_1C214A5B0();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v112 = 0;
    }
    objc_msgSend(v111, sel_setText_, v112);
  }
  uint64_t v113 = v121;
  uint64_t v114 = v122;
  (*(void (**)(char *, char *, uint64_t))(v122 + 16))(v121, v97, v99);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v114 + 56))(v113, 0, 1, v99);
  MEMORY[0x1C8752FF0](v113);
  uint64_t v115 = self;
  sub_1C1F645D4();
  uint64_t v116 = (void *)sub_1C214A770();
  swift_bridgeObjectRelease();
  objc_msgSend(v115, sel_activateConstraints_, v116);

  (*(void (**)(char *, uint64_t))(v114 + 8))(v97, v99);
  return sub_1C1F64614((uint64_t)v16);
}

id MedicationEducationAndComponentsItemCell.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  id v9 = objc_allocWithZone(v4);

  return objc_msgSend(v9, sel_initWithFrame_, a1, a2, a3, a4);
}

id MedicationEducationAndComponentsItemCell.init(frame:)(double a1, double a2, double a3, double a4)
{
  id v9 = &v4[OBJC_IVAR____TtC19HealthMedicationsUI40MedicationEducationAndComponentsItemCell_item];
  *(_OWORD *)id v9 = 0u;
  *((_OWORD *)v9 + 1) = 0u;
  *((void *)v9 + 4) = 0;
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI40MedicationEducationAndComponentsItemCell____lazy_storage___primaryLabel] = 0;
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI40MedicationEducationAndComponentsItemCell____lazy_storage___componentsLabel] = 0;
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI40MedicationEducationAndComponentsItemCell____lazy_storage___educationLabel] = 0;
  v11.receiver = v4;
  v11.super_class = (Class)type metadata accessor for MedicationEducationAndComponentsItemCell();
  return objc_msgSendSuper2(&v11, sel_initWithFrame_, a1, a2, a3, a4);
}

id MedicationEducationAndComponentsItemCell.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id MedicationEducationAndComponentsItemCell.init(coder:)(void *a1)
{
  id v3 = &v1[OBJC_IVAR____TtC19HealthMedicationsUI40MedicationEducationAndComponentsItemCell_item];
  *(_OWORD *)id v3 = 0u;
  *((_OWORD *)v3 + 1) = 0u;
  *((void *)v3 + 4) = 0;
  *(void *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI40MedicationEducationAndComponentsItemCell____lazy_storage___primaryLabel] = 0;
  *(void *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI40MedicationEducationAndComponentsItemCell____lazy_storage___componentsLabel] = 0;
  *(void *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI40MedicationEducationAndComponentsItemCell____lazy_storage___educationLabel] = 0;
  v6.receiver = v1;
  v6.super_class = (Class)type metadata accessor for MedicationEducationAndComponentsItemCell();
  id v4 = objc_msgSendSuper2(&v6, sel_initWithCoder_, a1);

  return v4;
}

id MedicationEducationAndComponentsItemCell.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MedicationEducationAndComponentsItemCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1C1F63C14@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC19HealthMedicationsUI40MedicationEducationAndComponentsItemCell_item;
  swift_beginAccess();
  return sub_1C1F2116C(v3, a2);
}

void *initializeBufferWithCopyOfBuffer for MedicationEducationAndComponentsItem(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (void *)(v13 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v5;
    uint64_t v6 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v6;
    *(void *)(a1 + 32) = a2[4];
    *(unsigned char *)(a1 + 40) = *((unsigned char *)a2 + 40);
    uint64_t v7 = a2[7];
    uint64_t v8 = *(int *)(a3 + 36);
    uint64_t v9 = (uint64_t)a2 + v8;
    uint64_t v10 = a1 + v8;
    *(void *)(a1 + 48) = a2[6];
    *(void *)(a1 + 56) = v7;
    uint64_t v11 = sub_1C2147B20();
    uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12(v10, v9, v11);
  }
  return v3;
}

uint64_t destroy for MedicationEducationAndComponentsItem(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 36);
  uint64_t v5 = sub_1C2147B20();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

uint64_t initializeWithCopy for MedicationEducationAndComponentsItem(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v6 = *(void *)(a2 + 56);
  uint64_t v7 = *(int *)(a3 + 36);
  uint64_t v8 = a2 + v7;
  uint64_t v9 = a1 + v7;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  uint64_t v10 = sub_1C2147B20();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11(v9, v8, v10);
  return a1;
}

uint64_t assignWithCopy for MedicationEducationAndComponentsItem(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 36);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1C2147B20();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t initializeWithTake for MedicationEducationAndComponentsItem(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  uint64_t v5 = *(int *)(a3 + 36);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  uint64_t v8 = sub_1C2147B20();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for MedicationEducationAndComponentsItem(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v8 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(int *)(a3 + 36);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = sub_1C2147B20();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 40))(v10, v11, v12);
  return a1;
}

uint64_t getEnumTagSinglePayload for MedicationEducationAndComponentsItem(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C1F64168);
}

uint64_t sub_1C1F64168(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1C2147B20();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 36);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for MedicationEducationAndComponentsItem(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C1F6422C);
}

uint64_t sub_1C1F6422C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 24) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1C2147B20();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 36);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1C1F642D4()
{
  uint64_t result = sub_1C2147B20();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t method lookup function for MedicationEducationAndComponentsItemCell(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MedicationEducationAndComponentsItemCell);
}

uint64_t dispatch thunk of MedicationEducationAndComponentsItemCell.item.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of MedicationEducationAndComponentsItemCell.item.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of MedicationEducationAndComponentsItemCell.item.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x80))();
}

void sub_1C1F64444(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C214B4F0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1C1F64498(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1C1F64444(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1C1F644F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MedicationEducationAndComponentsItem();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1C1F64558()
{
  unint64_t result = qword_1EA2C44D0;
  if (!qword_1EA2C44D0)
  {
    sub_1C1F13CCC(255, (unint64_t *)&qword_1EA2C3A40, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C44D0);
  }
  return result;
}

unint64_t sub_1C1F645D4()
{
  unint64_t result = qword_1EBF0C810;
  if (!qword_1EBF0C810)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBF0C810);
  }
  return result;
}

uint64_t sub_1C1F64614(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MedicationEducationAndComponentsItem();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t Optional<A>.makeAcessoryImage(size:circular:)(uint64_t a1, double a2, double a3)
{
  return sub_1C1F647E8(a2, a3, a1, v3);
}

UIImage __swiftcall MedicationVisualizationConfig.makeAccessoryImage(size:circular:)(CGSize size, Swift::Bool circular)
{
  BOOL v3 = circular;
  double height = size.height;
  double width = size.width;
  sub_1C1F4CC58();
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1C21492D0();
  uint64_t v10 = *(void *)(v9 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v8, v2, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
  uint64_t v11 = sub_1C1F647E8(width, height, v3, (uint64_t)v8);
  sub_1C1F4CCB0((uint64_t)v8);
  return (UIImage)v11;
}

void sub_1C1F6479C(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void (**)(void))(a1 + 32);
  id v3 = a2;
  v2();
}

uint64_t sub_1C1F647E8(double a1, double a2, uint64_t a3, uint64_t a4)
{
  sub_1C1F4CC58();
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = objc_msgSend(objc_allocWithZone((Class)sub_1C2148EF0()), sel_initWithFrame_, 0.0, 0.0, a1, a2);
  sub_1C2148EE0();
  sub_1C1F64A60(a4, (uint64_t)v9);
  sub_1C2148ED0();
  sub_1C1F64AC4();
  id v11 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_defaultFormat);
  objc_msgSend(v11, sel_setOpaque_, 0);
  id v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB17D8]), sel_initWithSize_format_, v11, a1, a2);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = v10;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = sub_1C1F64B3C;
  *(void *)(v14 + 24) = v13;
  aBlock[4] = sub_1C1F64B9C;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C1F6479C;
  aBlock[3] = &block_descriptor_8;
  uint64_t v15 = _Block_copy(aBlock);
  id v16 = v10;
  swift_retain();
  swift_release();
  id v17 = objc_msgSend(v12, sel_imageWithActions_, v15);

  _Block_release(v15);
  LOBYTE(v11) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if ((v11 & 1) == 0) {
    return (uint64_t)v17;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C1F64A60(uint64_t a1, uint64_t a2)
{
  sub_1C1F4CC58();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1C1F64AC4()
{
  unint64_t result = qword_1EA2C3A48;
  if (!qword_1EA2C3A48)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA2C3A48);
  }
  return result;
}

uint64_t sub_1C1F64B04()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

id sub_1C1F64B3C()
{
  unint64_t v1 = *(void **)(v0 + 16);
  objc_msgSend(v1, sel_bounds);

  return objc_msgSend(v1, sel_drawViewHierarchyInRect_afterScreenUpdates_, 1);
}

uint64_t sub_1C1F64B8C()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C1F64B9C()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

id PregnancyLactationEducationViewController.__allocating_init(listManager:educationType:)(uint64_t a1, unsigned __int8 *a2)
{
  id v5 = objc_allocWithZone(v2);
  return PregnancyLactationEducationViewController.init(listManager:educationType:)(a1, a2);
}

id PregnancyLactationEducationViewController.init(listManager:educationType:)(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t v39 = sub_1C2147B20();
  uint64_t v4 = *(void *)(v39 - 8);
  MEMORY[0x1F4188790](v39);
  uint64_t v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v7 = *a2;
  uint64_t v38 = a1;
  unint64_t v8 = sub_1C2149710();
  uint64_t v9 = sub_1C1F65224(v8);
  swift_bridgeObjectRelease();
  if (v9) {
    uint64_t v10 = v9;
  }
  else {
    uint64_t v10 = MEMORY[0x1E4FBC860];
  }
  unsigned __int8 v44 = v7;
  char v43 = 0;
  uint64_t v11 = sub_1C1F9D47C(v10, &v44, &v43);
  int v37 = v7;
  unsigned __int8 v42 = v7;
  char v41 = 1;
  uint64_t v12 = sub_1C1F9D47C(v10, &v42, &v41);
  swift_bridgeObjectRelease();
  uint64_t v35 = v11;
  uint64_t v36 = v12;
  if (*(void *)(v11 + 16)) {
    BOOL v13 = *(void *)(v12 + 16) != 0;
  }
  else {
    BOOL v13 = 0;
  }
  HIDWORD(v28) = v13;
  sub_1C1F24848();
  uint64_t v34 = swift_allocObject();
  *(_OWORD *)(v34 + 16) = xmmword_1C214FCC0;
  type metadata accessor for PregnancyLactationEducationDataSource();
  uint64_t v14 = swift_allocObject();
  *(unsigned char *)(v14 + qword_1EA2C43D0) = 0;
  *(unsigned char *)(v14 + qword_1EA2C43D8) = v13;
  sub_1C1F65B7C();
  uint64_t v33 = v15;
  uint64_t v16 = *(void *)(sub_1C2148540() - 8);
  uint64_t v17 = *(void *)(v16 + 72);
  uint64_t v18 = *(unsigned __int8 *)(v16 + 80);
  uint64_t v31 = v18 | 7;
  uint64_t v32 = ((v18 + 32) & ~v18) + v17;
  uint64_t v19 = swift_allocObject();
  long long v30 = xmmword_1C214FCD0;
  *(_OWORD *)(v19 + 16) = xmmword_1C214FCD0;
  sub_1C2147B10();
  sub_1C2147AD0();
  uint64_t v29 = *(void (**)(char *, uint64_t))(v4 + 8);
  v29(v6, v39);
  sub_1C2148520();
  uint64_t v20 = sub_1C2147F50();
  unint64_t v21 = sub_1C1F65BD4();
  id v22 = (void *)v34;
  *(void *)(v34 + 32) = v20;
  v22[5] = v21;
  uint64_t v23 = swift_allocObject();
  *(unsigned char *)(v23 + qword_1EA2C43D0) = 1;
  *(unsigned char *)(v23 + qword_1EA2C43D8) = BYTE4(v28);
  *(_OWORD *)(swift_allocObject() + 16) = v30;
  sub_1C2147B10();
  sub_1C2147AD0();
  v29(v6, v39);
  sub_1C2148520();
  v22[6] = sub_1C2147F50();
  v22[7] = v21;
  sub_1C2148820();
  swift_allocObject();
  sub_1C2148840();
  swift_retain();
  uint64_t v24 = (void *)sub_1C2148AC0();
  char v40 = v37;
  id v25 = v24;
  MedicationSecondaryEducationType.title.getter();
  uint64_t v26 = (void *)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  objc_msgSend(v25, sel_setTitle_, v26);
  swift_release();

  swift_release();
  return v25;
}

uint64_t sub_1C1F6501C(unint64_t a1)
{
  return sub_1C1F65224(a1);
}

uint64_t sub_1C1F65028(unint64_t a1)
{
  uint64_t v1 = a1;
  uint64_t v9 = MEMORY[0x1E4FBC860];
  if (a1 >> 62) {
    goto LABEL_18;
  }
  sub_1C214B850();
  uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v2)
  {
    if ((v1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; ; ++i)
      {
        MEMORY[0x1C8753960](i, v1);
        uint64_t v4 = i + 1;
        if (__OFADD__(i, 1)) {
          break;
        }
        type metadata accessor for MedicationChartUserInfo(0);
        if (!swift_dynamicCastClass())
        {
          swift_unknownObjectRelease();
          goto LABEL_15;
        }
        sub_1C214B820();
        sub_1C214B860();
        sub_1C214B870();
        sub_1C214B830();
        if (v4 == v2) {
          return v9;
        }
      }
      __break(1u);
    }
    else
    {
      for (uint64_t j = 0; ; ++j)
      {
        uint64_t v6 = j + 1;
        if (__OFADD__(j, 1)) {
          break;
        }
        type metadata accessor for MedicationChartUserInfo(0);
        uint64_t v7 = swift_dynamicCastClass();
        if (!v7)
        {
LABEL_15:
          swift_release();
          return 0;
        }
        uint64_t v1 = v7;
        swift_unknownObjectRetain();
        sub_1C214B820();
        sub_1C214B860();
        sub_1C214B870();
        sub_1C214B830();
        if (v6 == v2) {
          return v9;
        }
      }
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
    sub_1C214B930();
    swift_bridgeObjectRelease();
    sub_1C214B850();
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1C214B930();
    swift_bridgeObjectRelease();
  }
  return v9;
}

uint64_t sub_1C1F6520C(unint64_t a1)
{
  return sub_1C1F65224(a1);
}

uint64_t sub_1C1F65218(unint64_t a1)
{
  return sub_1C1F65224(a1);
}

uint64_t sub_1C1F65224(unint64_t a1)
{
  uint64_t v1 = a1;
  uint64_t v12 = MEMORY[0x1E4FBC860];
  if (a1 >> 62) {
    goto LABEL_18;
  }
  sub_1C214B850();
  uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v2)
  {
    if ((v1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; ; ++i)
      {
        MEMORY[0x1C8753960](i, v1);
        uint64_t v4 = i + 1;
        if (__OFADD__(i, 1)) {
          break;
        }
        self;
        if (!swift_dynamicCastObjCClass())
        {
          swift_unknownObjectRelease();
          goto LABEL_15;
        }
        sub_1C214B820();
        sub_1C214B860();
        sub_1C214B870();
        sub_1C214B830();
        if (v4 == v2) {
          return v12;
        }
      }
      __break(1u);
    }
    else
    {
      uint64_t v5 = 0;
      uint64_t v6 = v1 + 32;
      while (1)
      {
        uint64_t v7 = v5 + 1;
        if (__OFADD__(v5, 1)) {
          break;
        }
        unint64_t v8 = *(void **)(v6 + 8 * v5);
        self;
        uint64_t v9 = swift_dynamicCastObjCClass();
        if (!v9)
        {
LABEL_15:
          swift_release();
          return 0;
        }
        uint64_t v1 = v9;
        id v10 = v8;
        sub_1C214B820();
        sub_1C214B860();
        sub_1C214B870();
        sub_1C214B830();
        ++v5;
        if (v7 == v2) {
          return v12;
        }
      }
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
    sub_1C214B930();
    swift_bridgeObjectRelease();
    sub_1C214B850();
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1C214B930();
    swift_bridgeObjectRelease();
  }
  return v12;
}

id PregnancyLactationEducationViewController.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void PregnancyLactationEducationViewController.init(coder:)()
{
}

void sub_1C1F654A8()
{
}

id sub_1C1F65504(void *a1)
{
  v2.receiver = a1;
  v2.super_class = (Class)type metadata accessor for PregnancyLactationEducationViewController();
  return objc_msgSendSuper2(&v2, sel_viewDidLoad);
}

uint64_t sub_1C1F65548@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x1E4F662A8];
  uint64_t v3 = sub_1C21481B0();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104);

  return v4(a1, v2, v3);
}

uint64_t sub_1C1F655BC(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5 = sub_1C2147D90();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  unint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2147D50();
  id v9 = a3;
  id v10 = a1;
  sub_1C1F4EE40(v9);

  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void PregnancyLactationEducationViewController.__allocating_init(dataSource:)()
{
}

void PregnancyLactationEducationViewController.init(dataSource:)()
{
}

id PregnancyLactationEducationViewController.__allocating_init(collectionViewLayout:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCollectionViewLayout_, a1);

  return v3;
}

void PregnancyLactationEducationViewController.init(collectionViewLayout:)()
{
}

void sub_1C1F6578C(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = a3;
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id PregnancyLactationEducationViewController.__deallocating_deinit()
{
  return sub_1C1F657CC((SEL *)&selRef_dealloc);
}

id sub_1C1F657CC(SEL *a1)
{
  v4.receiver = v1;
  v4.super_class = (Class)type metadata accessor for PregnancyLactationEducationViewController();
  return objc_msgSendSuper2(&v4, *a1);
}

Swift::Void __swiftcall PregnancyLactationEducationViewController.viewControllerWillEnterAdaptiveModal()()
{
  uint64_t v1 = v0;
  id v2 = objc_msgSend(v0, sel_navigationItem);
  sub_1C1F12718(0, (unint64_t *)&qword_1EA2C3508);
  sub_1C1F12718(0, &qword_1EA2C3198);
  uint64_t v3 = swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1C214B250();
  objc_super v4 = (void *)sub_1C214AC50();
  objc_msgSend(v2, sel_setRightBarButtonItem_, v4, 0, 0, 0, sub_1C1F65CB0, v3);

  id v5 = objc_msgSend(v1, sel_navigationController);
  uint64_t v6 = v5;
  if (v5)
  {
    id v7 = objc_msgSend(v5, sel_navigationBar);

    objc_msgSend(v7, sel_setPrefersLargeTitles_, 1);
  }
  id v8 = objc_msgSend(v1, sel_navigationController);
  if (v8)
  {
    id v9 = v8;
    id v10 = objc_msgSend(v8, sel_navigationBar);

    sub_1C214AEB0();
    objc_msgSend(v10, sel_setDirectionalLayoutMargins_);
  }
}

void sub_1C1F65A08(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 + 16;
  swift_beginAccess();
  uint64_t v3 = (void *)MEMORY[0x1C8754850](v2);
  if (v3)
  {
    objc_super v4 = v3;
    objc_msgSend(v3, sel_dismissViewControllerAnimated_completion_, 1, 0);
  }
}

void sub_1C1F65A6C(void *a1)
{
  id v1 = a1;
  PregnancyLactationEducationViewController.viewControllerWillEnterAdaptiveModal()();
}

Swift::Void __swiftcall PregnancyLactationEducationViewController.viewControllerDidLeaveAdaptiveModal()()
{
  id v1 = objc_msgSend(v0, sel_navigationItem);
  objc_msgSend(v1, sel_setRightBarButtonItem_, 0);
}

void sub_1C1F65B10(void *a1)
{
  id v1 = a1;
  id v2 = objc_msgSend(v1, sel_navigationItem);
  objc_msgSend(v2, sel_setRightBarButtonItem_, 0);
}

void sub_1C1F65B7C()
{
  if (!qword_1EA2C2DD0)
  {
    sub_1C2148540();
    unint64_t v0 = sub_1C214BA50();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C2DD0);
    }
  }
}

unint64_t sub_1C1F65BD4()
{
  unint64_t result = qword_1EA2C3A50;
  if (!qword_1EA2C3A50)
  {
    type metadata accessor for PregnancyLactationEducationDataSource();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C3A50);
  }
  return result;
}

uint64_t type metadata accessor for PregnancyLactationEducationViewController()
{
  uint64_t result = qword_1EA2C3A58;
  if (!qword_1EA2C3A58) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C1F65C78()
{
  swift_unknownObjectWeakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

void sub_1C1F65CB0(uint64_t a1)
{
  sub_1C1F65A08(a1, v1);
}

uint64_t sub_1C1F65CB8()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for PregnancyLactationEducationViewController(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for PregnancyLactationEducationViewController);
}

uint64_t dispatch thunk of PregnancyLactationEducationViewController.__allocating_init(listManager:educationType:)()
{
  return (*(uint64_t (**)(void))(v0 + class metadata base offset for PregnancyLactationEducationViewController))();
}

uint64_t dispatch thunk of PregnancyLactationEducationViewController.providedPresentation.getter()
{
  return (*(uint64_t (**)(void))(class metadata base offset for PregnancyLactationEducationViewController
                              + (*MEMORY[0x1E4FBC8C8] & *v0)
                              + 8))();
}

uint64_t sub_1C1F65D7C()
{
  return type metadata accessor for PregnancyLactationEducationViewController();
}

uint64_t sub_1C1F65D84(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (*(uint64_t (**)(void))(a2 + 24))();
  if (!v5) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 16))(a1, a2);
  }
  uint64_t v7 = v4;
  sub_1C214A6C0();
  (*(void (**)(uint64_t, uint64_t))(a2 + 16))(a1, a2);
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  sub_1C214A6C0();
  return v7;
}

uint64_t sub_1C1F65E54(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(uint64_t (**)(void))(a2 + 32);
  uint64_t v5 = v4();
  if (v6)
  {
    uint64_t v7 = v5;
    uint64_t v8 = v6;
    uint64_t v9 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 40))(a1, a2);
    if (v10)
    {
      uint64_t v11 = v9;
      uint64_t v12 = v10;
      if (qword_1EBF0CA00 != -1) {
        swift_once();
      }
      BOOL v13 = (void *)qword_1EBF0CA18;
      sub_1C1F68308(0, qword_1EBF0B8A0, (unint64_t *)&qword_1EBF0C9F0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
      uint64_t v14 = swift_allocObject();
      *(_OWORD *)(v14 + 16) = xmmword_1C214FCC0;
      uint64_t v15 = MEMORY[0x1E4FBB1A0];
      *(void *)(v14 + 56) = MEMORY[0x1E4FBB1A0];
      unint64_t v16 = sub_1C1F31298();
      *(void *)(v14 + 32) = v7;
      *(void *)(v14 + 40) = v8;
      *(void *)(v14 + 96) = v15;
      *(void *)(v14 + 104) = v16;
      *(void *)(v14 + 64) = v16;
      *(void *)(v14 + 72) = v11;
      *(void *)(v14 + 80) = v12;
      id v17 = v13;
      swift_bridgeObjectRetain();
      sub_1C2147730();
      uint64_t v18 = sub_1C214A5C0();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v18;
    }
    swift_bridgeObjectRelease();
  }
  uint64_t v19 = ((uint64_t (*)(uint64_t, uint64_t))v4)(a1, a2);
  if (!v20) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 40))(a1, a2);
  }
  return v19;
}

uint64_t sub_1C1F66064(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1)
  {
    sub_1C1F13D18(0, (unint64_t *)&qword_1EA2C3A40, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
    sub_1C1F64558();
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_1C214A580();
    uint64_t v7 = v6;
    swift_bridgeObjectRelease();
    uint64_t v8 = sub_1C1F65E54(a2, a3);
    if (!v9) {
      goto LABEL_9;
    }
    uint64_t v10 = v9;
    if (v7)
    {
      uint64_t v11 = v8;
      sub_1C1F13D18(0, (unint64_t *)&qword_1EA2C3298, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
      uint64_t v12 = swift_allocObject();
      *(_OWORD *)(v12 + 16) = xmmword_1C214FCC0;
      *(void *)(v12 + 32) = v11;
      *(void *)(v12 + 40) = v10;
      *(void *)(v12 + 48) = v5;
      *(void *)(v12 + 56) = v7;
      uint64_t v5 = sub_1C214A580();
      swift_bridgeObjectRelease();
      return v5;
    }
    goto LABEL_7;
  }
  sub_1C1F65E54(a2, a3);
  if (v13)
  {
    uint64_t v5 = 0;
LABEL_7:
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  uint64_t v5 = 0;
LABEL_9:
  uint64_t v14 = sub_1C1F65E54(a2, a3);
  if (v15)
  {
    uint64_t v16 = v14;
    swift_bridgeObjectRelease();
    return v16;
  }
  return v5;
}

uint64_t HKMedicationUserDomainConcept.visualizationConfig.getter@<X0>(uint64_t a1@<X8>)
{
  id v3 = objc_msgSend(v1, sel_userVisualizationConfigJSONString);
  if (v3)
  {
    uint64_t v4 = v3;
    sub_1C214A5F0();

    sub_1C2149260();
  }
  else
  {
    uint64_t v5 = sub_1C21492D0();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(a1, 1, 1, v5);
  }
  type metadata accessor for DrugInteractionVisualizationConfig(0);

  return swift_storeEnumTagMultiPayload();
}

uint64_t HKMedicationUserDomainConcept.name.getter()
{
  return sub_1C2149480();
}

id HKMedicationUserDomainConcept.nickname.getter()
{
  id v1 = objc_msgSend(v0, sel_userSpecifiedName);
  if (v1)
  {
    sub_1C214A5F0();

    id v1 = (id)sub_1C214A680();
    swift_bridgeObjectRelease();
  }
  return v1;
}

uint64_t sub_1C1F663F4@<X0>(uint64_t a1@<X8>)
{
  id v3 = objc_msgSend(*v1, sel_userVisualizationConfigJSONString);
  if (v3)
  {
    uint64_t v4 = v3;
    sub_1C214A5F0();

    sub_1C2149260();
  }
  else
  {
    uint64_t v5 = sub_1C21492D0();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(a1, 1, 1, v5);
  }
  type metadata accessor for DrugInteractionVisualizationConfig(0);

  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1C1F664D8()
{
  return sub_1C2149480();
}

id sub_1C1F6652C()
{
  id v1 = objc_msgSend(*v0, sel_userSpecifiedName);
  if (v1)
  {
    sub_1C214A5F0();

    id v1 = (id)sub_1C214A680();
    swift_bridgeObjectRelease();
  }
  return v1;
}

uint64_t sub_1C1F665B0()
{
  return _sSo29HKMedicationUserDomainConceptC19HealthMedicationsUIE8doseFormSSSgvg_0();
}

uint64_t sub_1C1F665D4()
{
  return _sSo29HKMedicationUserDomainConceptC19HealthMedicationsUIE8strengthSSSgvg_0();
}

uint64_t sub_1C1F665F8()
{
  return _sSo29HKMedicationUserDomainConceptC19HealthMedicationsUIE20ingredientComponentsSaySSGSgvg_0();
}

uint64_t HKDrugInteractionLifestyleFactor.visualizationConfig.getter@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = a1;
  type metadata accessor for DrugInteractionVisualizationConfig(0);

  return swift_storeEnumTagMultiPayload();
}

uint64_t HKDrugInteractionLifestyleFactor.name.getter(uint64_t a1)
{
  char v2 = 0;
  return HKDrugInteractionLifestyleFactor.localizedString(variant:)((uint64_t)&v2, a1);
}

uint64_t HKDrugInteractionLifestyleFactor.nickname.getter()
{
  return 0;
}

uint64_t HKDrugInteractionLifestyleFactor.doseForm.getter()
{
  return 0;
}

uint64_t HKDrugInteractionLifestyleFactor.strength.getter()
{
  return 0;
}

uint64_t HKDrugInteractionLifestyleFactor.components.getter()
{
  return 0;
}

uint64_t sub_1C1F666BC@<X0>(void *a1@<X8>)
{
  *a1 = *v1;
  type metadata accessor for DrugInteractionVisualizationConfig(0);

  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1C1F66708()
{
  uint64_t v1 = *v0;
  char v3 = 0;
  return HKDrugInteractionLifestyleFactor.localizedString(variant:)((uint64_t)&v3, v1);
}

uint64_t sub_1C1F66734(uint64_t a1, void *a2)
{
  sub_1C1F67CD8(a1, (uint64_t)v5);
  uint64_t v3 = *a2 + OBJC_IVAR____TtC19HealthMedicationsUI27InteractionDetailFactorView_viewModelFactor;
  swift_beginAccess();
  sub_1C1F67D68((uint64_t)v5, v3);
  swift_endAccess();
  sub_1C1F67128();
  return sub_1C1F67DF8((uint64_t)v5);
}

uint64_t sub_1C1F667A8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI27InteractionDetailFactorView_viewModelFactor;
  swift_beginAccess();
  return sub_1C1F67CD8(v3, a1);
}

uint64_t sub_1C1F667FC(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI27InteractionDetailFactorView_viewModelFactor;
  swift_beginAccess();
  sub_1C1F67D68(a1, v3);
  swift_endAccess();
  sub_1C1F67128();
  return sub_1C1F67DF8(a1);
}

uint64_t (*sub_1C1F6686C(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1C1F668CC;
}

uint64_t sub_1C1F668CC(uint64_t a1, char a2)
{
  uint64_t result = swift_endAccess();
  if ((a2 & 1) == 0) {
    return sub_1C1F67128();
  }
  return result;
}

uint64_t sub_1C1F66900(uint64_t *a1, void *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (void *)(*a2 + OBJC_IVAR____TtC19HealthMedicationsUI27InteractionDetailFactorView_ingredients);
  swift_beginAccess();
  *uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C1F6696C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C1F669B8(uint64_t a1)
{
  uint64_t v3 = (void *)(v1 + OBJC_IVAR____TtC19HealthMedicationsUI27InteractionDetailFactorView_ingredients);
  swift_beginAccess();
  *uint64_t v3 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1C1F66A0C())()
{
  return j__swift_endAccess;
}

id sub_1C1F66A68()
{
  uint64_t v1 = &v0[OBJC_IVAR____TtC19HealthMedicationsUI27InteractionDetailFactorView_viewModelFactor];
  *(_OWORD *)uint64_t v1 = 0u;
  *((_OWORD *)v1 + 1) = 0u;
  *((void *)v1 + 4) = 0;
  *(void *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI27InteractionDetailFactorView_ingredients] = 0;
  *(void *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI27InteractionDetailFactorView____lazy_storage___drugInteractionVisualization] = 0;
  *(void *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI27InteractionDetailFactorView____lazy_storage___factorNameLabel] = 0;
  *(void *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI27InteractionDetailFactorView____lazy_storage___infoLabel] = 0;
  *(void *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI27InteractionDetailFactorView_infoLabelHiddenBottomConstraint] = 0;
  *(void *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI27InteractionDetailFactorView_infoLabelVisibleBottomConstraint] = 0;
  v0[OBJC_IVAR____TtC19HealthMedicationsUI27InteractionDetailFactorView_infoLabelHidden] = 0;
  v7.receiver = v0;
  v7.super_class = (Class)type metadata accessor for InteractionDetailFactorView();
  id v2 = objc_msgSendSuper2(&v7, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  id v3 = sub_1C1F66C30();
  id v4 = sub_1C1F66CB8();
  id v5 = sub_1C1F66E7C();
  objc_msgSend(v2, sel_addSubview_, v3);
  objc_msgSend(v2, sel_addSubview_, v4);
  objc_msgSend(v2, sel_addSubview_, v5);

  sub_1C1F67508();
  return v2;
}

id InteractionDetailFactorView.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id sub_1C1F66C30()
{
  uint64_t v1 = OBJC_IVAR____TtC19HealthMedicationsUI27InteractionDetailFactorView____lazy_storage___drugInteractionVisualization;
  id v2 = *(void **)(v0
                + OBJC_IVAR____TtC19HealthMedicationsUI27InteractionDetailFactorView____lazy_storage___drugInteractionVisualization);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC19HealthMedicationsUI27InteractionDetailFactorView____lazy_storage___drugInteractionVisualization);
  }
  else
  {
    id v4 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for DrugInteractionVisualizationView()), sel_init);
    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    id v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    id v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_1C1F66CB8()
{
  uint64_t v1 = OBJC_IVAR____TtC19HealthMedicationsUI27InteractionDetailFactorView____lazy_storage___factorNameLabel;
  id v2 = *(void **)(v0
                + OBJC_IVAR____TtC19HealthMedicationsUI27InteractionDetailFactorView____lazy_storage___factorNameLabel);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC19HealthMedicationsUI27InteractionDetailFactorView____lazy_storage___factorNameLabel);
  }
  else
  {
    id v4 = sub_1C1F66D18();
    id v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    id v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_1C1F66D18()
{
  id v0 = objc_msgSend(objc_allocWithZone((Class)sub_1C2148250()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  id v1 = (id)*MEMORY[0x1E4FB28C8];
  sub_1C2148240();
  sub_1C2148230();
  uint64_t v6 = sub_1C214A5F0();
  uint64_t v7 = v2;
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  id v3 = v0;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  id v4 = (void *)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setAccessibilityIdentifier_, v4, v6, v7);

  objc_msgSend(v3, sel_setNumberOfLines_, 0);
  objc_msgSend(v3, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  return v3;
}

id sub_1C1F66E7C()
{
  uint64_t v1 = OBJC_IVAR____TtC19HealthMedicationsUI27InteractionDetailFactorView____lazy_storage___infoLabel;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI27InteractionDetailFactorView____lazy_storage___infoLabel);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI27InteractionDetailFactorView____lazy_storage___infoLabel);
  }
  else
  {
    uint64_t v4 = v0;
    id v5 = objc_msgSend(objc_allocWithZone((Class)sub_1C2148250()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
    id v6 = (id)*MEMORY[0x1E4FB2950];
    sub_1C2148240();
    sub_1C2148230();
    uint64_t v7 = self;
    id v8 = v5;
    id v9 = objc_msgSend(v7, sel_secondaryLabelColor);
    objc_msgSend(v8, sel_setTextColor_, v9);

    uint64_t v16 = sub_1C214A5F0();
    uint64_t v17 = v10;
    swift_bridgeObjectRetain();
    sub_1C214A6C0();
    id v11 = v8;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_1C214A6C0();
    swift_bridgeObjectRelease();
    uint64_t v12 = (void *)sub_1C214A5B0();
    swift_bridgeObjectRelease();
    objc_msgSend(v11, sel_setAccessibilityIdentifier_, v12, v16, v17);

    objc_msgSend(v11, sel_setNumberOfLines_, 0);
    objc_msgSend(v11, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    uint64_t v13 = *(void **)(v4 + v1);
    *(void *)(v4 + v1) = v11;
    id v3 = v11;

    uint64_t v2 = 0;
  }
  id v14 = v2;
  return v3;
}

id sub_1C1F67068(id result)
{
  uint64_t v2 = OBJC_IVAR____TtC19HealthMedicationsUI27InteractionDetailFactorView_infoLabelHidden;
  int v3 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC19HealthMedicationsUI27InteractionDetailFactorView_infoLabelHidden);
  *(unsigned char *)(v1 + OBJC_IVAR____TtC19HealthMedicationsUI27InteractionDetailFactorView_infoLabelHidden) = (_BYTE)result;
  if (v3 != (result & 1))
  {
    id v4 = sub_1C1F66E7C();
    objc_msgSend(v4, sel_setHidden_, *(unsigned __int8 *)(v1 + v2));

    id v5 = *(void **)(v1
                  + OBJC_IVAR____TtC19HealthMedicationsUI27InteractionDetailFactorView_infoLabelHiddenBottomConstraint);
    if (v5) {
      objc_msgSend(v5, sel_setActive_, *(unsigned __int8 *)(v1 + v2));
    }
    uint64_t result = *(id *)(v1
                   + OBJC_IVAR____TtC19HealthMedicationsUI27InteractionDetailFactorView_infoLabelVisibleBottomConstraint);
    if (result)
    {
      BOOL v6 = (*(unsigned char *)(v1 + v2) & 1) == 0;
      return objc_msgSend(result, sel_setActive_, v6);
    }
  }
  return result;
}

uint64_t sub_1C1F67128()
{
  sub_1C1F681F0();
  MEMORY[0x1F4188790](v1 - 8);
  int v3 = (char *)&v33 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = v0 + OBJC_IVAR____TtC19HealthMedicationsUI27InteractionDetailFactorView_viewModelFactor;
  swift_beginAccess();
  sub_1C1F67CD8(v4, (uint64_t)&v34);
  if (v35)
  {
    sub_1C1F31280(&v34, (uint64_t)v36);
    id v5 = (char *)sub_1C1F66C30();
    uint64_t v6 = v37;
    uint64_t v7 = v38;
    __swift_project_boxed_opaque_existential_0(v36, v37);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v7);
    uint64_t v8 = type metadata accessor for DrugInteractionVisualizationConfig(0);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v3, 0, 1, v8);
    uint64_t v9 = (uint64_t)&v5[OBJC_IVAR____TtC19HealthMedicationsUI32DrugInteractionVisualizationView_visualizationConfig];
    swift_beginAccess();
    sub_1C1F68248((uint64_t)v3, v9);
    swift_endAccess();
    sub_1C1F6BA10();
    uint64_t v10 = *(void **)&v5[OBJC_IVAR____TtC19HealthMedicationsUI32DrugInteractionVisualizationView_subview];
    if (v10) {
      objc_msgSend(v10, sel_hk_alignConstraintsWithView_, v5);
    }
    sub_1C1F682AC((uint64_t)v3);

    id v11 = sub_1C1F66CB8();
    uint64_t v12 = v37;
    uint64_t v13 = v38;
    __swift_project_boxed_opaque_existential_0(v36, v37);
    sub_1C1F65D84(v12, v13);
    id v14 = (void *)sub_1C214A5B0();
    swift_bridgeObjectRelease();
    objc_msgSend(v11, sel_setText_, v14);

    uint64_t v15 = v37;
    uint64_t v16 = v38;
    __swift_project_boxed_opaque_existential_0(v36, v37);
    swift_beginAccess();
    uint64_t v17 = swift_bridgeObjectRetain();
    uint64_t v18 = sub_1C1F66064(v17, v15, v16);
    uint64_t v20 = v19;
    swift_bridgeObjectRelease();
    id v21 = sub_1C1F66E7C();
    sub_1C211951C(2.0, v18, v20);

    uint64_t v22 = v37;
    uint64_t v23 = v38;
    __swift_project_boxed_opaque_existential_0(v36, v37);
    sub_1C1F65E54(v22, v23);
    if (v24)
    {
      id v25 = sub_1C1F66E7C();
      id v26 = objc_msgSend(v25, sel_attributedText);

      if (!v26)
      {
        swift_bridgeObjectRelease();
        if (!v20) {
          goto LABEL_9;
        }
        goto LABEL_8;
      }
      id v27 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28E48]), sel_initWithAttributedString_, v26);
      uint64_t v28 = *MEMORY[0x1E4FB0700];
      id v29 = objc_msgSend(self, sel_labelColor);
      uint64_t v30 = sub_1C214A6A0();
      swift_bridgeObjectRelease();
      objc_msgSend(v27, sel_addAttribute_value_range_, v28, v29, 0, v30);

      id v31 = sub_1C1F66E7C();
      objc_msgSend(v31, sel_setAttributedText_, v27);
    }
    if (!v20)
    {
LABEL_9:
      sub_1C1F67068((id)(v20 == 0));
      return __swift_destroy_boxed_opaque_existential_0((uint64_t)v36);
    }
LABEL_8:
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  return sub_1C1F67DF8((uint64_t)&v34);
}

id sub_1C1F67508()
{
  uint64_t v1 = v0;
  uint64_t v2 = self;
  sub_1C1F13D18(0, (unint64_t *)&qword_1EBF0CA10, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1C2151820;
  id v4 = sub_1C1F66C30();
  id v5 = objc_msgSend(v4, sel_leadingAnchor);

  id v6 = objc_msgSend(v1, sel_leadingAnchor);
  id v7 = objc_msgSend(v5, sel_constraintEqualToAnchor_, v6);

  *(void *)(v3 + 32) = v7;
  id v8 = sub_1C1F66C30();
  id v9 = objc_msgSend(v8, sel_widthAnchor);

  id v10 = objc_msgSend(v9, sel_constraintEqualToConstant_, 33.0);
  *(void *)(v3 + 40) = v10;
  id v11 = sub_1C1F66C30();
  id v12 = objc_msgSend(v11, sel_heightAnchor);

  id v13 = sub_1C1F66C30();
  id v14 = objc_msgSend(v13, sel_widthAnchor);

  id v15 = objc_msgSend(v12, sel_constraintEqualToAnchor_, v14);
  *(void *)(v3 + 48) = v15;
  id v16 = sub_1C1F66C30();
  id v17 = objc_msgSend(v16, sel_centerYAnchor);

  id v18 = sub_1C1F66CB8();
  id v19 = objc_msgSend(v18, sel_centerYAnchor);

  id v20 = objc_msgSend(v17, sel_constraintEqualToAnchor_, v19);
  *(void *)(v3 + 56) = v20;
  id v21 = sub_1C1F66CB8();
  id v22 = objc_msgSend(v21, sel_leadingAnchor);

  id v23 = sub_1C1F66C30();
  id v24 = objc_msgSend(v23, sel_trailingAnchor);

  id v25 = objc_msgSend(v22, sel_constraintEqualToAnchor_constant_, v24, 10.0);
  *(void *)(v3 + 64) = v25;
  id v26 = sub_1C1F66CB8();
  id v27 = objc_msgSend(v26, sel_topAnchor);

  id v28 = objc_msgSend(v1, sel_topAnchor);
  id v29 = objc_msgSend(v27, sel_constraintEqualToAnchor_, v28);

  *(void *)(v3 + 72) = v29;
  id v30 = sub_1C1F66CB8();
  id v31 = objc_msgSend(v30, sel_trailingAnchor);

  id v32 = objc_msgSend(v1, sel_trailingAnchor);
  id v33 = objc_msgSend(v31, sel_constraintEqualToAnchor_, v32);

  *(void *)(v3 + 80) = v33;
  id v34 = sub_1C1F66E7C();
  id v35 = objc_msgSend(v34, sel_leadingAnchor);

  id v36 = sub_1C1F66CB8();
  id v37 = objc_msgSend(v36, sel_leadingAnchor);

  id v38 = objc_msgSend(v35, sel_constraintEqualToAnchor_, v37);
  *(void *)(v3 + 88) = v38;
  id v39 = sub_1C1F66E7C();
  id v40 = objc_msgSend(v39, sel_trailingAnchor);

  id v41 = objc_msgSend(v1, sel_trailingAnchor);
  id v42 = objc_msgSend(v40, sel_constraintEqualToAnchor_, v41);

  *(void *)(v3 + 96) = v42;
  id v43 = sub_1C1F66E7C();
  id v44 = objc_msgSend(v43, sel_topAnchor);

  id v45 = sub_1C1F66CB8();
  id v46 = objc_msgSend(v45, sel_bottomAnchor);

  id v47 = objc_msgSend(v44, sel_constraintGreaterThanOrEqualToAnchor_constant_, v46, 2.0);
  *(void *)(v3 + 104) = v47;
  sub_1C214A7A0();
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C810);
  id v48 = (void *)sub_1C214A770();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_activateConstraints_, v48);

  id v49 = objc_msgSend(v1, sel_bottomAnchor);
  id v50 = sub_1C1F66E7C();
  id v51 = objc_msgSend(v50, sel_bottomAnchor);

  id v52 = objc_msgSend(v49, sel_constraintEqualToAnchor_, v51);
  id v53 = *(void **)&v1[OBJC_IVAR____TtC19HealthMedicationsUI27InteractionDetailFactorView_infoLabelVisibleBottomConstraint];
  *(void *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI27InteractionDetailFactorView_infoLabelVisibleBottomConstraint] = v52;

  id v54 = objc_msgSend(v1, sel_bottomAnchor);
  id v55 = sub_1C1F66CB8();
  id v56 = objc_msgSend(v55, sel_bottomAnchor);

  id v57 = objc_msgSend(v54, sel_constraintEqualToAnchor_, v56);
  id v58 = *(void **)&v1[OBJC_IVAR____TtC19HealthMedicationsUI27InteractionDetailFactorView_infoLabelHiddenBottomConstraint];
  *(void *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI27InteractionDetailFactorView_infoLabelHiddenBottomConstraint] = v57;

  return sub_1C1F67068((id)1);
}

id InteractionDetailFactorView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  id v9 = objc_allocWithZone(v4);

  return objc_msgSend(v9, sel_initWithFrame_, a1, a2, a3, a4);
}

void InteractionDetailFactorView.init(frame:)()
{
}

id InteractionDetailFactorView.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for InteractionDetailFactorView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1C1F67CD8(uint64_t a1, uint64_t a2)
{
  sub_1C1F68308(0, &qword_1EA2C3A70, &qword_1EA2C3A78, (uint64_t)&protocol descriptor for InteractionDetailFactorViewModelProviding, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C1F67D68(uint64_t a1, uint64_t a2)
{
  sub_1C1F68308(0, &qword_1EA2C3A70, &qword_1EA2C3A78, (uint64_t)&protocol descriptor for InteractionDetailFactorViewModelProviding, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C1F67DF8(uint64_t a1)
{
  sub_1C1F68308(0, &qword_1EA2C3A70, &qword_1EA2C3A78, (uint64_t)&protocol descriptor for InteractionDetailFactorViewModelProviding, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void _s19HealthMedicationsUI27InteractionDetailFactorViewC5coderACSgSo7NSCoderC_tcfc_0()
{
  uint64_t v1 = &v0[OBJC_IVAR____TtC19HealthMedicationsUI27InteractionDetailFactorView_viewModelFactor];
  *(_OWORD *)uint64_t v1 = 0u;
  *((_OWORD *)v1 + 1) = 0u;
  *((void *)v1 + 4) = 0;
  *(void *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI27InteractionDetailFactorView_ingredients] = 0;
  *(void *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI27InteractionDetailFactorView____lazy_storage___drugInteractionVisualization] = 0;
  *(void *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI27InteractionDetailFactorView____lazy_storage___factorNameLabel] = 0;
  *(void *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI27InteractionDetailFactorView____lazy_storage___infoLabel] = 0;
  *(void *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI27InteractionDetailFactorView_infoLabelHiddenBottomConstraint] = 0;
  *(void *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI27InteractionDetailFactorView_infoLabelVisibleBottomConstraint] = 0;
  v0[OBJC_IVAR____TtC19HealthMedicationsUI27InteractionDetailFactorView_infoLabelHidden] = 0;

  sub_1C214B910();
  __break(1u);
}

uint64_t type metadata accessor for InteractionDetailFactorView()
{
  return self;
}

uint64_t sub_1C1F67F70@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC19HealthMedicationsUI27InteractionDetailFactorView_viewModelFactor;
  swift_beginAccess();
  return sub_1C1F67CD8(v3, a2);
}

uint64_t sub_1C1F67FCC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (void *)(*a1 + OBJC_IVAR____TtC19HealthMedicationsUI27InteractionDetailFactorView_ingredients);
  swift_beginAccess();
  *a2 = *v3;
  return swift_bridgeObjectRetain();
}

uint64_t dispatch thunk of InteractionDetailFactorViewModelProviding.visualizationConfig.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of InteractionDetailFactorViewModelProviding.name.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of InteractionDetailFactorViewModelProviding.nickname.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of InteractionDetailFactorViewModelProviding.doseForm.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of InteractionDetailFactorViewModelProviding.strength.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of InteractionDetailFactorViewModelProviding.components.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t method lookup function for InteractionDetailFactorView(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for InteractionDetailFactorView);
}

uint64_t dispatch thunk of InteractionDetailFactorView.viewModelFactor.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of InteractionDetailFactorView.viewModelFactor.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of InteractionDetailFactorView.viewModelFactor.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of InteractionDetailFactorView.ingredients.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of InteractionDetailFactorView.ingredients.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of InteractionDetailFactorView.ingredients.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB8))();
}

void sub_1C1F681F0()
{
  if (!qword_1EA2C3AB8)
  {
    type metadata accessor for DrugInteractionVisualizationConfig(255);
    unint64_t v0 = sub_1C214B4F0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C3AB8);
    }
  }
}

uint64_t sub_1C1F68248(uint64_t a1, uint64_t a2)
{
  sub_1C1F681F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C1F682AC(uint64_t a1)
{
  sub_1C1F681F0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1C1F68308(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = sub_1C1F23804(255, a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

uint64_t MedicationAvatarItem.reuseIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for MedicationAvatarItem() + 28));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t type metadata accessor for MedicationAvatarItem()
{
  uint64_t result = qword_1EA2C3AC8;
  if (!qword_1EA2C3AC8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t MedicationAvatarItem.uniqueIdentifier.getter()
{
  return 0x7449726174617641;
}

uint64_t static MedicationAvatarItem.== infix(_:_:)()
{
  type metadata accessor for MedicationAvatarItem();

  return sub_1C2147AF0();
}

uint64_t MedicationAvatarItem.hash(into:)()
{
  return sub_1C214A560();
}

uint64_t MedicationAvatarItem.hashValue.getter()
{
  return sub_1C214BB80();
}

uint64_t sub_1C1F685D4()
{
  return sub_1C214BB80();
}

uint64_t sub_1C1F68668()
{
  return sub_1C214A560();
}

uint64_t sub_1C1F686E8()
{
  return sub_1C214BB80();
}

uint64_t sub_1C1F68778()
{
  return sub_1C1F687C0(&qword_1EA2C3AC0, (void (*)(uint64_t))type metadata accessor for MedicationAvatarItem);
}

uint64_t sub_1C1F687C0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C1F68808()
{
  return sub_1C2147AF0();
}

uint64_t sub_1C1F68818()
{
  return 0x7449726174617641;
}

uint64_t *initializeBufferWithCopyOfBuffer for MedicationAvatarItem(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1C21492D0();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      sub_1C1F6B2C0(0, (unint64_t *)&qword_1EBF0B690, MEMORY[0x1E4F66C80]);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v11 = a3[5];
    uint64_t v12 = a3[6];
    id v13 = (uint64_t *)((char *)a1 + v11);
    id v14 = (uint64_t *)((char *)a2 + v11);
    uint64_t v15 = v14[1];
    *id v13 = *v14;
    v13[1] = v15;
    id v16 = (char *)a1 + v12;
    id v17 = (char *)a2 + v12;
    uint64_t v18 = sub_1C2147B20();
    id v19 = *(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16);
    swift_retain();
    v19(v16, v17, v18);
    uint64_t v20 = a3[7];
    id v21 = (uint64_t *)((char *)a1 + v20);
    id v22 = (uint64_t *)((char *)a2 + v20);
    uint64_t v23 = v22[1];
    *id v21 = *v22;
    v21[1] = v23;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for MedicationAvatarItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C21492D0();
  uint64_t v5 = *(void *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  }
  swift_release();
  uint64_t v6 = a1 + *(int *)(a2 + 24);
  uint64_t v7 = sub_1C2147B20();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);

  return swift_bridgeObjectRelease();
}

char *initializeWithCopy for MedicationAvatarItem(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_1C21492D0();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    sub_1C1F6B2C0(0, (unint64_t *)&qword_1EBF0B690, MEMORY[0x1E4F66C80]);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = a3[5];
  uint64_t v10 = a3[6];
  uint64_t v11 = &a1[v9];
  uint64_t v12 = &a2[v9];
  uint64_t v13 = *((void *)v12 + 1);
  *(void *)uint64_t v11 = *(void *)v12;
  *((void *)v11 + 1) = v13;
  id v14 = &a1[v10];
  uint64_t v15 = &a2[v10];
  uint64_t v16 = sub_1C2147B20();
  id v17 = *(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16);
  swift_retain();
  v17(v14, v15, v16);
  uint64_t v18 = a3[7];
  id v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  uint64_t v21 = *((void *)v20 + 1);
  *(void *)id v19 = *(void *)v20;
  *((void *)v19 + 1) = v21;
  swift_bridgeObjectRetain();
  return a1;
}

char *assignWithCopy for MedicationAvatarItem(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_1C21492D0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    sub_1C1F6B2C0(0, (unint64_t *)&qword_1EBF0B690, MEMORY[0x1E4F66C80]);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  uint64_t v12 = a3[5];
  uint64_t v13 = &a1[v12];
  id v14 = &a2[v12];
  uint64_t v15 = *((void *)v14 + 1);
  *(void *)uint64_t v13 = *(void *)v14;
  *((void *)v13 + 1) = v15;
  swift_retain();
  swift_release();
  uint64_t v16 = a3[6];
  id v17 = &a1[v16];
  uint64_t v18 = &a2[v16];
  uint64_t v19 = sub_1C2147B20();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 24))(v17, v18, v19);
  uint64_t v20 = a3[7];
  uint64_t v21 = &a1[v20];
  id v22 = &a2[v20];
  *(void *)uint64_t v21 = *(void *)v22;
  *((void *)v21 + 1) = *((void *)v22 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

char *initializeWithTake for MedicationAvatarItem(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_1C21492D0();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    sub_1C1F6B2C0(0, (unint64_t *)&qword_1EBF0B690, MEMORY[0x1E4F66C80]);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = a3[6];
  *(_OWORD *)&a1[a3[5]] = *(_OWORD *)&a2[a3[5]];
  int v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = sub_1C2147B20();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
  *(_OWORD *)&a1[a3[7]] = *(_OWORD *)&a2[a3[7]];
  return a1;
}

char *assignWithTake for MedicationAvatarItem(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_1C21492D0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    sub_1C1F6B2C0(0, (unint64_t *)&qword_1EBF0B690, MEMORY[0x1E4F66C80]);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  *(_OWORD *)&a1[a3[5]] = *(_OWORD *)&a2[a3[5]];
  swift_release();
  uint64_t v12 = a3[6];
  uint64_t v13 = &a1[v12];
  id v14 = &a2[v12];
  uint64_t v15 = sub_1C2147B20();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 40))(v13, v14, v15);
  uint64_t v16 = a3[7];
  id v17 = &a1[v16];
  uint64_t v18 = &a2[v16];
  uint64_t v20 = *(void *)v18;
  uint64_t v19 = *((void *)v18 + 1);
  *(void *)id v17 = v20;
  *((void *)v17 + 1) = v19;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MedicationAvatarItem(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C1F69358);
}

uint64_t sub_1C1F69358(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C1F6B2C0(0, (unint64_t *)&qword_1EBF0B690, MEMORY[0x1E4F66C80]);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if (a2 == 0x7FFFFFFF)
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
  else
  {
    uint64_t v11 = sub_1C2147B20();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a3 + 24);
    return v12(v14, a2, v13);
  }
}

uint64_t storeEnumTagSinglePayload for MedicationAvatarItem(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C1F694B4);
}

void sub_1C1F694B4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_1C1F6B2C0(0, (unint64_t *)&qword_1EBF0B690, MEMORY[0x1E4F66C80]);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v10(a1, a2, a2, v8);
  }
  else if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  else
  {
    uint64_t v11 = sub_1C2147B20();
    uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a4 + 24);
    v12(v14, a2, a2, v13);
  }
}

void sub_1C1F695FC()
{
  sub_1C1F6B2C0(319, (unint64_t *)&qword_1EBF0B690, MEMORY[0x1E4F66C80]);
  if (v0 <= 0x3F)
  {
    sub_1C2147B20();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

id sub_1C1F696F4()
{
  uint64_t v1 = OBJC_IVAR____TtC19HealthMedicationsUI20MedicationAvatarCell____lazy_storage___pillImageView;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI20MedicationAvatarCell____lazy_storage___pillImageView);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI20MedicationAvatarCell____lazy_storage___pillImageView);
  }
  else
  {
    id v4 = objc_msgSend(objc_allocWithZone((Class)sub_1C2148EF0()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_1C1F6978C()
{
  uint64_t v1 = OBJC_IVAR____TtC19HealthMedicationsUI20MedicationAvatarCell____lazy_storage___editButton;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI20MedicationAvatarCell____lazy_storage___editButton);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI20MedicationAvatarCell____lazy_storage___editButton);
  }
  else
  {
    id v4 = sub_1C1F697F0(v0);
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_1C1F697F0(uint64_t a1)
{
  uint64_t v22 = a1;
  sub_1C1F6B2C0(0, &qword_1EBF0C920, MEMORY[0x1E4FB1290]);
  MEMORY[0x1F4188790](v1 - 8);
  id v3 = (char *)&v21 - v2;
  uint64_t v4 = sub_1C214B350();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1C214B280();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1C214B3D0();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C214B3A0();
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E4FB1218], v8);
  sub_1C214B290();
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FB1268], v4);
  sub_1C214B270();
  if (qword_1EBF0CA00 != -1) {
    swift_once();
  }
  id v16 = (id)qword_1EBF0CA18;
  swift_bridgeObjectRetain();
  sub_1C2147730();
  swift_bridgeObjectRelease();

  sub_1C214B390();
  id v17 = objc_msgSend(self, sel_buttonWithType_, 1);
  id v18 = objc_msgSend(v17, sel_titleLabel);
  if (v18)
  {
    uint64_t v19 = v18;
    objc_msgSend(v18, sel_setAdjustsFontForContentSizeCategory_, 1);
  }
  objc_msgSend(v17, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v17, sel_setAdjustsImageSizeForAccessibilityContentSizeCategory_, 1);
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v3, v15, v12);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v3, 0, 1, v12);
  sub_1C214B400();
  objc_msgSend(v17, sel_addTarget_action_forControlEvents_, v22, sel_editButtonTappedWithSender_, 64);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  return v17;
}

void sub_1C1F69D6C()
{
  sub_1C1F6B2C0(0, &qword_1EBF0C620, MEMORY[0x1E4FB0F28]);
  MEMORY[0x1F4188790](v1 - 8);
  id v3 = (char *)v43 - v2;
  sub_1C21499B0();
  uint64_t v4 = sub_1C21499D0();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 0, 1, v4);
  MEMORY[0x1C8752FF0](v3);
  id v5 = objc_msgSend(v0, sel_contentView);
  id v6 = sub_1C1F696F4();
  objc_msgSend(v5, sel_addSubview_, v6);

  id v7 = objc_msgSend(v0, sel_contentView);
  id v8 = sub_1C1F6978C();
  objc_msgSend(v7, sel_addSubview_, v8);

  uint64_t v9 = self;
  sub_1C1F0ED28();
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1C21518E0;
  id v11 = sub_1C1F696F4();
  id v12 = objc_msgSend(v11, sel_topAnchor);

  id v13 = objc_msgSend(v0, sel_contentView);
  id v14 = objc_msgSend(v13, sel_topAnchor);

  id v15 = objc_msgSend(v12, sel_constraintEqualToAnchor_, v14);
  *(void *)(v10 + 32) = v15;
  id v16 = sub_1C1F696F4();
  id v17 = objc_msgSend(v16, sel_centerXAnchor);

  id v18 = objc_msgSend(v0, sel_contentView);
  id v19 = objc_msgSend(v18, sel_centerXAnchor);

  id v20 = objc_msgSend(v17, sel_constraintEqualToAnchor_, v19);
  *(void *)(v10 + 40) = v20;
  id v21 = sub_1C1F696F4();
  id v22 = objc_msgSend(v21, sel_widthAnchor);

  id v23 = objc_msgSend(v22, sel_constraintEqualToConstant_, 80.0);
  *(void *)(v10 + 48) = v23;
  id v24 = sub_1C1F696F4();
  id v25 = objc_msgSend(v24, sel_heightAnchor);

  id v26 = objc_msgSend(v25, sel_constraintEqualToConstant_, 80.0);
  *(void *)(v10 + 56) = v26;
  id v27 = sub_1C1F6978C();
  id v28 = objc_msgSend(v27, sel_topAnchor);

  id v29 = sub_1C1F696F4();
  id v30 = objc_msgSend(v29, sel_bottomAnchor);

  id v31 = objc_msgSend(v28, sel_constraintEqualToAnchor_constant_, v30, 8.0);
  *(void *)(v10 + 64) = v31;
  id v32 = sub_1C1F6978C();
  id v33 = objc_msgSend(v32, sel_bottomAnchor);

  id v34 = objc_msgSend(v0, sel_contentView);
  id v35 = objc_msgSend(v34, sel_bottomAnchor);

  id v36 = objc_msgSend(v33, sel_constraintEqualToAnchor_, v35);
  *(void *)(v10 + 72) = v36;
  id v37 = sub_1C1F6978C();
  id v38 = objc_msgSend(v37, sel_centerXAnchor);

  id v39 = objc_msgSend(v0, sel_contentView);
  id v40 = objc_msgSend(v39, sel_centerXAnchor);

  id v41 = objc_msgSend(v38, sel_constraintEqualToAnchor_, v40);
  *(void *)(v10 + 80) = v41;
  v43[1] = v10;
  sub_1C214A7A0();
  sub_1C1F645D4();
  id v42 = (void *)sub_1C214A770();
  swift_bridgeObjectRelease();
  objc_msgSend(v9, sel_activateConstraints_, v42);
}

uint64_t sub_1C1F6A254()
{
  uint64_t v1 = sub_1C21497F0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1F6B2C0(0, (unint64_t *)&qword_1EBF0B690, MEMORY[0x1E4F66C80]);
  MEMORY[0x1F4188790](v5 - 8);
  id v7 = (char *)&v26 - v6;
  sub_1C1F6B2C0(0, &qword_1EA2C3AF0, (void (*)(uint64_t))type metadata accessor for MedicationAvatarItem);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v26 - v9;
  uint64_t v11 = type metadata accessor for MedicationAvatarItem();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  id v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = (uint64_t)v0 + OBJC_IVAR____TtC19HealthMedicationsUI20MedicationAvatarCell_item;
  swift_beginAccess();
  sub_1C1F6B1F8(v15, (uint64_t)v30, (unint64_t *)&qword_1EBF0C300, (void (*)(uint64_t))sub_1C1F1CB5C);
  if (v30[3])
  {
    sub_1C1F1CB5C();
    int v16 = swift_dynamicCast();
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v10, v16 ^ 1u, 1, v11);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) != 1)
    {
      sub_1C1F6B194((uint64_t)v10, (uint64_t)v14);
      id v17 = sub_1C1F696F4();
      sub_1C1F6B1F8((uint64_t)v14, (uint64_t)v7, (unint64_t *)&qword_1EBF0B690, MEMORY[0x1E4F66C80]);
      sub_1C2148ED0();

      return sub_1C1F6B264((uint64_t)v14);
    }
  }
  else
  {
    sub_1C1F6B138((uint64_t)v30, (unint64_t *)&qword_1EBF0C300, (void (*)(uint64_t))sub_1C1F1CB5C);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, 1, 1, v11);
  }
  sub_1C1F6B138((uint64_t)v10, &qword_1EA2C3AF0, (void (*)(uint64_t))type metadata accessor for MedicationAvatarItem);
  sub_1C21497A0();
  id v19 = v0;
  id v20 = sub_1C21497E0();
  os_log_type_t v21 = sub_1C214ABD0();
  if (os_log_type_enabled(v20, v21))
  {
    id v22 = (uint8_t *)swift_slowAlloc();
    uint64_t v23 = swift_slowAlloc();
    uint64_t v28 = v1;
    uint64_t v29 = v23;
    *(_DWORD *)id v22 = 136446210;
    id v26 = v22 + 4;
    uint64_t v27 = v2;
    sub_1C1F6B1F8(v15, (uint64_t)v30, (unint64_t *)&qword_1EBF0C300, (void (*)(uint64_t))sub_1C1F1CB5C);
    sub_1C1F6B2C0(0, (unint64_t *)&qword_1EBF0C300, (void (*)(uint64_t))sub_1C1F1CB5C);
    uint64_t v24 = sub_1C214A630();
    v30[0] = sub_1C1F6FD54(v24, v25, &v29);
    sub_1C214B530();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C1F0B000, v20, v21, "Incorrect view model for MedicationAvatarCell: %{public}s", v22, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C8754730](v23, -1, -1);
    MEMORY[0x1C8754730](v22, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v4, v28);
  }
  else
  {

    return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
}

void sub_1C1F6A750()
{
  sub_1C1F6B2C0(0, (unint64_t *)&qword_1EBF0B690, MEMORY[0x1E4F66C80]);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)&v10 - v2;
  id v4 = objc_msgSend(v0, sel_viewController);
  if (v4)
  {
    uint64_t v5 = v4;
    id v6 = sub_1C1F696F4();
    sub_1C2148EC0();

    id v7 = objc_allocWithZone((Class)type metadata accessor for MedmojiPickerViewController());
    uint64_t v8 = (char *)MedmojiPickerViewController.init(config:)((uint64_t)v3);
    *(void *)&v8[OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_delegate + 8] = &off_1F1D757F8;
    swift_unknownObjectWeakAssign();
    id v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F67B78]), sel_initWithRootViewController_, v8);
    objc_msgSend(v9, sel_setModalPresentationStyle_, 2);
    objc_msgSend(v9, sel_setModalInPresentation_, 1);
    objc_msgSend(v5, sel_presentViewController_animated_completion_, v9, 1, 0);
  }
}

id sub_1C1F6A91C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MedicationAvatarCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for MedicationAvatarCell()
{
  return self;
}

uint64_t sub_1C1F6A9E0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI20MedicationAvatarCell_item;
  swift_beginAccess();
  return sub_1C1F6B1F8(v3, a1, (unint64_t *)&qword_1EBF0C300, (void (*)(uint64_t))sub_1C1F1CB5C);
}

uint64_t sub_1C1F6AA50(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI20MedicationAvatarCell_item;
  swift_beginAccess();
  sub_1C1F32DDC(a1, v3);
  swift_endAccess();
  sub_1C1F6A254();
  return sub_1C1F6B138(a1, (unint64_t *)&qword_1EBF0C300, (void (*)(uint64_t))sub_1C1F1CB5C);
}

uint64_t (*sub_1C1F6AADC(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1C1F6AB3C;
}

uint64_t sub_1C1F6AB3C(uint64_t a1, char a2)
{
  uint64_t result = swift_endAccess();
  if ((a2 & 1) == 0) {
    return sub_1C1F6A254();
  }
  return result;
}

uint64_t sub_1C1F6AB70(uint64_t a1)
{
  uint64_t v3 = sub_1C21497F0();
  uint64_t v35 = *(void *)(v3 - 8);
  uint64_t v36 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1F6B2C0(0, (unint64_t *)&qword_1EBF0B690, MEMORY[0x1E4F66C80]);
  uint64_t v7 = MEMORY[0x1F4188790](v6 - 8);
  id v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v34 - v10;
  sub_1C1F6B2C0(0, &qword_1EA2C3AF0, (void (*)(uint64_t))type metadata accessor for MedicationAvatarItem);
  MEMORY[0x1F4188790](v12 - 8);
  id v14 = (char *)&v34 - v13;
  uint64_t v15 = type metadata accessor for MedicationAvatarItem();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  id v18 = (char *)&v34 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = (uint64_t)v1 + OBJC_IVAR____TtC19HealthMedicationsUI20MedicationAvatarCell_item;
  swift_beginAccess();
  sub_1C1F6B1F8(v19, (uint64_t)v38, (unint64_t *)&qword_1EBF0C300, (void (*)(uint64_t))sub_1C1F1CB5C);
  if (v38[3])
  {
    sub_1C1F1CB5C();
    int v20 = swift_dynamicCast();
    (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v14, v20 ^ 1u, 1, v15);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) != 1)
    {
      sub_1C1F6B194((uint64_t)v14, (uint64_t)v18);
      uint64_t v21 = sub_1C21492D0();
      uint64_t v22 = *(void *)(v21 - 8);
      (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v11, a1, v21);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v11, 0, 1, v21);
      id v23 = sub_1C1F696F4();
      uint64_t v24 = (void (*)(uint64_t))MEMORY[0x1E4F66C80];
      sub_1C1F6B1F8((uint64_t)v11, (uint64_t)v9, (unint64_t *)&qword_1EBF0B690, MEMORY[0x1E4F66C80]);
      sub_1C2148ED0();

      sub_1C1F6B138((uint64_t)v11, (unint64_t *)&qword_1EBF0B690, v24);
      unint64_t v25 = *(void (**)(char *, uint64_t))&v18[*(int *)(v15 + 20)];
      swift_retain();
      v25(v18, a1);
      swift_release();
      return sub_1C1F6B264((uint64_t)v18);
    }
  }
  else
  {
    sub_1C1F6B138((uint64_t)v38, (unint64_t *)&qword_1EBF0C300, (void (*)(uint64_t))sub_1C1F1CB5C);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v14, 1, 1, v15);
  }
  sub_1C1F6B138((uint64_t)v14, &qword_1EA2C3AF0, (void (*)(uint64_t))type metadata accessor for MedicationAvatarItem);
  sub_1C21497A0();
  id v27 = v1;
  uint64_t v28 = sub_1C21497E0();
  os_log_type_t v29 = sub_1C214ABD0();
  if (os_log_type_enabled(v28, v29))
  {
    id v30 = (uint8_t *)swift_slowAlloc();
    uint64_t v31 = swift_slowAlloc();
    uint64_t v37 = v31;
    *(_DWORD *)id v30 = 136446210;
    id v34 = v30 + 4;
    sub_1C1F6B1F8(v19, (uint64_t)v38, (unint64_t *)&qword_1EBF0C300, (void (*)(uint64_t))sub_1C1F1CB5C);
    sub_1C1F6B2C0(0, (unint64_t *)&qword_1EBF0C300, (void (*)(uint64_t))sub_1C1F1CB5C);
    uint64_t v32 = sub_1C214A630();
    v38[0] = sub_1C1F6FD54(v32, v33, &v37);
    sub_1C214B530();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C1F0B000, v28, v29, "Incorrect view model for MedicationAvatarCell: %{public}s", v30, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C8754730](v31, -1, -1);
    MEMORY[0x1C8754730](v30, -1, -1);
  }
  else
  {
  }
  return (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v5, v36);
}

uint64_t sub_1C1F6B138(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1C1F6B2C0(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1C1F6B194(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MedicationAvatarItem();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C1F6B1F8(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_1C1F6B2C0(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_1C1F6B264(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MedicationAvatarItem();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1C1F6B2C0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C214B4F0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1C1F6B314(uint64_t a1, uint64_t *a2)
{
  sub_1C1F6C14C(0, (unint64_t *)&qword_1EA2C3AB8, (void (*)(uint64_t))type metadata accessor for DrugInteractionVisualizationConfig);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v11 - v5;
  sub_1C1F6C2C4(a1, (uint64_t)&v11 - v5, (unint64_t *)&qword_1EA2C3AB8, (void (*)(uint64_t))type metadata accessor for DrugInteractionVisualizationConfig);
  uint64_t v7 = *a2;
  uint64_t v8 = v7 + OBJC_IVAR____TtC19HealthMedicationsUI32DrugInteractionVisualizationView_visualizationConfig;
  swift_beginAccess();
  sub_1C1F68248((uint64_t)v6, v8);
  swift_endAccess();
  sub_1C1F6BA10();
  id v9 = *(void **)(v7 + OBJC_IVAR____TtC19HealthMedicationsUI32DrugInteractionVisualizationView_subview);
  if (v9) {
    objc_msgSend(v9, sel_hk_alignConstraintsWithView_, v7);
  }
  return sub_1C1F6C330((uint64_t)v6, (unint64_t *)&qword_1EA2C3AB8, (void (*)(uint64_t))type metadata accessor for DrugInteractionVisualizationConfig);
}

uint64_t sub_1C1F6B448@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI32DrugInteractionVisualizationView_visualizationConfig;
  swift_beginAccess();
  return sub_1C1F6C2C4(v3, a1, (unint64_t *)&qword_1EA2C3AB8, (void (*)(uint64_t))type metadata accessor for DrugInteractionVisualizationConfig);
}

uint64_t sub_1C1F6B4B8(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI32DrugInteractionVisualizationView_visualizationConfig;
  swift_beginAccess();
  sub_1C1F68248(a1, v3);
  swift_endAccess();
  sub_1C1F6BA10();
  uint64_t v4 = *(void **)(v1 + OBJC_IVAR____TtC19HealthMedicationsUI32DrugInteractionVisualizationView_subview);
  if (v4) {
    objc_msgSend(v4, sel_hk_alignConstraintsWithView_, v1);
  }
  return sub_1C1F6C330(a1, (unint64_t *)&qword_1EA2C3AB8, (void (*)(uint64_t))type metadata accessor for DrugInteractionVisualizationConfig);
}

id (*sub_1C1F6B564(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1C1F6B5C4;
}

id sub_1C1F6B5C4(uint64_t a1, char a2)
{
  id result = (id)swift_endAccess();
  if ((a2 & 1) == 0)
  {
    uint64_t v5 = *(void *)(a1 + 24);
    sub_1C1F6BA10();
    id result = *(id *)(v5 + OBJC_IVAR____TtC19HealthMedicationsUI32DrugInteractionVisualizationView_subview);
    if (result)
    {
      uint64_t v6 = *(void *)(a1 + 24);
      return objc_msgSend(result, sel_hk_alignConstraintsWithView_, v6);
    }
  }
  return result;
}

id sub_1C1F6B630()
{
  uint64_t v1 = OBJC_IVAR____TtC19HealthMedicationsUI32DrugInteractionVisualizationView____lazy_storage___medicationView;
  uint64_t v2 = *(void **)(v0
                + OBJC_IVAR____TtC19HealthMedicationsUI32DrugInteractionVisualizationView____lazy_storage___medicationView);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC19HealthMedicationsUI32DrugInteractionVisualizationView____lazy_storage___medicationView);
  }
  else
  {
    id v4 = objc_msgSend(objc_allocWithZone((Class)sub_1C2148EF0()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_1C1F6B6C8()
{
  uint64_t v1 = OBJC_IVAR____TtC19HealthMedicationsUI32DrugInteractionVisualizationView____lazy_storage___imageView;
  uint64_t v2 = *(void **)(v0
                + OBJC_IVAR____TtC19HealthMedicationsUI32DrugInteractionVisualizationView____lazy_storage___imageView);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI32DrugInteractionVisualizationView____lazy_storage___imageView);
  }
  else
  {
    id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1838]), sel_init);
    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id DrugInteractionVisualizationView.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void DrugInteractionVisualizationView.init(coder:)()
{
  uint64_t v1 = &v0[OBJC_IVAR____TtC19HealthMedicationsUI32DrugInteractionVisualizationView_visualizationConfig];
  uint64_t v2 = type metadata accessor for DrugInteractionVisualizationConfig(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  *(void *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI32DrugInteractionVisualizationView_subview] = 0;
  *(void *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI32DrugInteractionVisualizationView____lazy_storage___medicationView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI32DrugInteractionVisualizationView____lazy_storage___imageView] = 0;

  sub_1C214B910();
  __break(1u);
}

uint64_t sub_1C1F6BA10()
{
  uint64_t v1 = v0;
  sub_1C1F6C14C(0, (unint64_t *)&qword_1EBF0B690, MEMORY[0x1E4F66C80]);
  uint64_t v3 = MEMORY[0x1F4188790](v2 - 8);
  uint64_t v29 = (uint64_t)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  id v6 = (char *)&v29 - v5;
  sub_1C1F6C14C(0, (unint64_t *)&qword_1EA2C3AB8, (void (*)(uint64_t))type metadata accessor for DrugInteractionVisualizationConfig);
  MEMORY[0x1F4188790](v7 - 8);
  id v9 = (char *)&v29 - v8;
  uint64_t v10 = type metadata accessor for DrugInteractionVisualizationConfig(0);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  id v14 = (uint64_t *)((char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&v29 - v15;
  uint64_t v17 = (uint64_t)&v1[OBJC_IVAR____TtC19HealthMedicationsUI32DrugInteractionVisualizationView_visualizationConfig];
  swift_beginAccess();
  sub_1C1F6C2C4(v17, (uint64_t)v9, (unint64_t *)&qword_1EA2C3AB8, (void (*)(uint64_t))type metadata accessor for DrugInteractionVisualizationConfig);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1) {
    return sub_1C1F6C330((uint64_t)v9, (unint64_t *)&qword_1EA2C3AB8, (void (*)(uint64_t))type metadata accessor for DrugInteractionVisualizationConfig);
  }
  sub_1C1F6C1A0((uint64_t)v9, (uint64_t)v16);
  uint64_t v19 = OBJC_IVAR____TtC19HealthMedicationsUI32DrugInteractionVisualizationView_subview;
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI32DrugInteractionVisualizationView_subview], sel_removeFromSuperview);
  sub_1C1F6C204((uint64_t)v16, (uint64_t)v14);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v20 = *v14;
    id v21 = sub_1C1F6B6C8();
    id v22 = HKDrugInteractionLifestyleFactor.image.getter(v20);
    objc_msgSend(v21, sel_setImage_, v22);

    id v23 = sub_1C1F6B6C8();
    uint64_t v24 = *(void **)&v1[v19];
    *(void *)&v1[v19] = v23;

    if (!*(void *)&v1[v19]) {
      return sub_1C1F6C268((uint64_t)v16);
    }
    goto LABEL_7;
  }
  sub_1C1F4DB28((uint64_t)v14, (uint64_t)v6);
  id v25 = sub_1C1F6B630();
  id v26 = (void (*)(uint64_t))MEMORY[0x1E4F66C80];
  sub_1C1F6C2C4((uint64_t)v6, v29, (unint64_t *)&qword_1EBF0B690, MEMORY[0x1E4F66C80]);
  sub_1C2148ED0();

  id v27 = sub_1C1F6B630();
  uint64_t v28 = *(void **)&v1[v19];
  *(void *)&v1[v19] = v27;

  sub_1C1F6C330((uint64_t)v6, (unint64_t *)&qword_1EBF0B690, v26);
  if (*(void *)&v1[v19]) {
LABEL_7:
  }
    objc_msgSend(v1, sel_addSubview_);
  return sub_1C1F6C268((uint64_t)v16);
}

id DrugInteractionVisualizationView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  id v9 = objc_allocWithZone(v4);

  return objc_msgSend(v9, sel_initWithFrame_, a1, a2, a3, a4);
}

void DrugInteractionVisualizationView.init(frame:)()
{
}

id DrugInteractionVisualizationView.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DrugInteractionVisualizationView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for DrugInteractionVisualizationView()
{
  uint64_t result = qword_1EA2C3B10;
  if (!qword_1EA2C3B10) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C1F6BED8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC19HealthMedicationsUI32DrugInteractionVisualizationView_visualizationConfig;
  swift_beginAccess();
  return sub_1C1F6C2C4(v3, a2, (unint64_t *)&qword_1EA2C3AB8, (void (*)(uint64_t))type metadata accessor for DrugInteractionVisualizationConfig);
}

uint64_t sub_1C1F6BFD8()
{
  return type metadata accessor for DrugInteractionVisualizationView();
}

void sub_1C1F6BFE0()
{
  sub_1C1F6C14C(319, (unint64_t *)&qword_1EA2C3AB8, (void (*)(uint64_t))type metadata accessor for DrugInteractionVisualizationConfig);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for DrugInteractionVisualizationView(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for DrugInteractionVisualizationView);
}

uint64_t dispatch thunk of DrugInteractionVisualizationView.visualizationConfig.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of DrugInteractionVisualizationView.visualizationConfig.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of DrugInteractionVisualizationView.visualizationConfig.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x80))();
}

void sub_1C1F6C14C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C214B4F0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1C1F6C1A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DrugInteractionVisualizationConfig(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C1F6C204(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DrugInteractionVisualizationConfig(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C1F6C268(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DrugInteractionVisualizationConfig(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C1F6C2C4(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_1C1F6C14C(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_1C1F6C330(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1C1F6C14C(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1C1F6C38C()
{
  uint64_t v1 = v0;
  unint64_t v2 = sub_1C21476D0();
  unint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x1F4188790](v4);
  id v67 = (char *)&v51 - v8;
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v51 - v9;
  sub_1C1F105C4(0, &qword_1EA2C3B60, MEMORY[0x1E4F26F90], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v51 - v12;
  id v14 = &off_1E6447000;
  if (objc_msgSend(v0, sel_scheduleType) != (id)8)
  {
    id v29 = objc_msgSend(v0, sel_timeIntervals);
    sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8D8);
    uint64_t v30 = sub_1C214A780();

    return v30;
  }
  id v64 = v13;
  unint64_t v15 = MEMORY[0x1E4FBC860];
  uint64_t v70 = MEMORY[0x1E4FBC860];
  id v16 = objc_msgSend(v1, sel_timeIntervals);
  uint64_t v63 = sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8D8);
  unint64_t v17 = sub_1C214A780();

  if (v17 >> 62) {
    goto LABEL_59;
  }
  uint64_t v18 = *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v68 = v2;
    unint64_t v66 = v3;
    id v53 = v1;
    if (v18)
    {
      id v72 = (void *)v15;
      sub_1C1F7047C(0, v18 & ~(v18 >> 63), 0);
      if (v18 < 0)
      {
        __break(1u);
        goto LABEL_67;
      }
      uint64_t v65 = v18;
      uint64_t v19 = 0;
      unint64_t v20 = (unint64_t)v72;
      unint64_t v21 = v17 & 0xC000000000000001;
      unint64_t v22 = v17;
      do
      {
        if (v21) {
          id v23 = (id)MEMORY[0x1C8753960](v19, v17);
        }
        else {
          id v23 = *(id *)(v17 + 8 * v19 + 32);
        }
        uint64_t v24 = v23;
        id v25 = objc_msgSend(v23, sel_startTimeComponent);
        sub_1C2147620();

        id v72 = (void *)v20;
        unint64_t v27 = *(void *)(v20 + 16);
        unint64_t v26 = *(void *)(v20 + 24);
        if (v27 >= v26 >> 1)
        {
          sub_1C1F7047C(v26 > 1, v27 + 1, 1);
          unint64_t v20 = (unint64_t)v72;
        }
        ++v19;
        *(void *)(v20 + 16) = v27 + 1;
        unint64_t v28 = v20
            + ((*(unsigned __int8 *)(v66 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v66 + 80))
            + *(void *)(v66 + 72) * v27;
        unint64_t v2 = v68;
        (*(void (**)(unint64_t, char *, uint64_t))(v66 + 32))(v28, v10, v68);
        unint64_t v17 = v22;
      }
      while (v65 != v19);
      swift_bridgeObjectRelease();
      unint64_t v3 = v66;
      id v14 = &off_1E6447000;
      uint64_t v1 = v53;
    }
    else
    {
      swift_bridgeObjectRelease();
      unint64_t v20 = MEMORY[0x1E4FBC860];
    }
    id v72 = (void *)v20;
    sub_1C1F105C4(0, &qword_1EA2C3B68, MEMORY[0x1E4F26F90], MEMORY[0x1E4FBB320]);
    unint64_t v17 = sub_1C1F729D4();
    sub_1C1F72BCC(&qword_1EA2C3B78, MEMORY[0x1E4F26F90]);
    unint64_t v15 = sub_1C214AAF0();
    swift_bridgeObjectRelease();
    uint64_t v62 = *(void *)(v15 + 16);
    if (v62)
    {
      unint64_t v32 = 0;
      unint64_t v61 = v15 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
      unint64_t v58 = v3 + 48;
      id v57 = (void (**)(char *, char *, unint64_t))(v3 + 32);
      uint64_t v10 = (char *)(v3 + 8);
      unint64_t v59 = v3 + 56;
      unint64_t v60 = v3 + 16;
      unint64_t v52 = (v3 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
      uint64_t v55 = (v3 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
      unint64_t v56 = v15;
      unint64_t v33 = v64;
      while (v32 < *(void *)(v15 + 16))
      {
        uint64_t v37 = *(void *)(v3 + 72);
        uint64_t v65 = v32;
        (*(void (**)(char *, unint64_t, unint64_t))(v3 + 16))(v33, v61 + v37 * v32, v2);
        id v54 = *(void (**)(char *, uint64_t, uint64_t, unint64_t))(v3 + 56);
        v54(v33, 0, 1, v2);
        if ((*(unsigned int (**)(char *, uint64_t, unint64_t))(v3 + 48))(v33, 1, v2) == 1) {
          goto LABEL_40;
        }
        (*v57)(v67, v33, v2);
        id v38 = [v1 (SEL)v14[270]];
        unint64_t v15 = sub_1C214A780();

        if (v15 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v39 = sub_1C214B930();
          if (v39)
          {
LABEL_24:
            uint64_t v1 = (void *)(v15 & 0xC000000000000001);
            unint64_t v2 = 4;
            while (1)
            {
              id v14 = (__objc2_prot **)(v2 - 4);
              id v40 = v1 ? (id)MEMORY[0x1C8753960](v2 - 4, v15) : *(id *)(v15 + 8 * v2);
              unint64_t v3 = (unint64_t)v40;
              unint64_t v41 = v2 - 3;
              if (__OFADD__(v14, 1)) {
                break;
              }
              id v42 = objc_msgSend(v40, sel_startTimeComponent);
              sub_1C2147620();

              unint64_t v17 = MEMORY[0x1C874F790](v6, v67);
              id v34 = *(void (**)(char *, unint64_t))v10;
              (*(void (**)(char *, uint64_t))v10)(v6, v68);
              if (v17)
              {
                swift_bridgeObjectRelease_n();
                id v43 = (id)v3;
                MEMORY[0x1C87528E0]();
                unint64_t v17 = *(void *)((v70 & 0xFFFFFFFFFFFFFF8) + 0x10);
                if (v17 >= *(void *)((v70 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
                  sub_1C214A7D0();
                }
                sub_1C214A820();
                sub_1C214A7A0();

                goto LABEL_35;
              }

              ++v2;
              if (v41 == v39)
              {
                swift_bridgeObjectRelease_n();
LABEL_35:
                uint64_t v1 = v53;
                unint64_t v2 = v68;
                unint64_t v3 = v66;
                goto LABEL_19;
              }
            }
            __break(1u);
            goto LABEL_55;
          }
        }
        else
        {
          uint64_t v39 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain();
          if (v39) {
            goto LABEL_24;
          }
        }
        swift_bridgeObjectRelease_n();
        id v34 = *(void (**)(char *, unint64_t))v10;
LABEL_19:
        uint64_t v35 = v65 + 1;
        v34(v67, v2);
        unint64_t v32 = v35;
        BOOL v36 = v35 == v62;
        id v14 = &off_1E6447000;
        unint64_t v33 = v64;
        unint64_t v15 = v56;
        if (v36)
        {
          unint64_t v3 = v52;
          v54(v64, 1, 1, v2);
          goto LABEL_40;
        }
      }
      goto LABEL_56;
    }
    id v44 = *(void (**)(char *, uint64_t, uint64_t, unint64_t))(v3 + 56);
    unint64_t v3 = (v3 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    v44(v64, 1, 1, v2);
LABEL_40:
    swift_bridgeObjectRelease();
    id v45 = [v1 (SEL)v14[270]];
    unint64_t v46 = sub_1C214A780();

    unint64_t v69 = v46;
    if (!(v46 >> 62))
    {
      unint64_t v2 = *(void *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (!v2) {
        break;
      }
      goto LABEL_42;
    }
    swift_bridgeObjectRetain();
    unint64_t v2 = sub_1C214B930();
    swift_bridgeObjectRelease();
    if (!v2) {
      break;
    }
LABEL_42:
    unint64_t v15 = sub_1C1F12718(0, &qword_1EBF0C908);
    uint64_t v10 = (char *)(v46 & 0xC000000000000001);
    uint64_t v68 = v46 & 0xFFFFFFFFFFFFFF8;
    id v14 = &off_1E6447000;
    while (!__OFSUB__(v2--, 1))
    {
      if (v10)
      {
        id v48 = (char *)MEMORY[0x1C8753960](v2, v46);
      }
      else
      {
        if ((v2 & 0x8000000000000000) != 0) {
          goto LABEL_57;
        }
        if (v2 >= *(void *)(v68 + 16)) {
          goto LABEL_58;
        }
        id v48 = (char *)*(id *)(v46 + 32 + 8 * v2);
      }
      uint64_t v6 = v48;
      unint64_t v17 = (unint64_t)objc_msgSend(v48, sel_dose);
      uint64_t v1 = (void *)sub_1C214B200();
      if (v17)
      {
        unint64_t v17 = (unint64_t)(id)v17;
        unint64_t v3 = sub_1C214B220();

        if (v3)
        {
          MEMORY[0x1F4188790](v49);
          *(&v51 - 2) = (uint64_t)&v69;
          unint64_t v71 = v2;
          sub_1C1F72A5C(&v71, (unint64_t *)&v72);
          id v50 = v72;
          goto LABEL_62;
        }
      }
      else
      {
      }
      if (!v2) {
        goto LABEL_61;
      }
    }
LABEL_55:
    __break(1u);
LABEL_56:
    __break(1u);
LABEL_57:
    __break(1u);
LABEL_58:
    __break(1u);
LABEL_59:
    swift_bridgeObjectRetain();
    uint64_t v18 = sub_1C214B930();
    swift_bridgeObjectRelease();
  }
LABEL_61:
  id v50 = 0;
LABEL_62:
  swift_bridgeObjectRelease();
  if (v50)
  {
    uint64_t v18 = v50;
    MEMORY[0x1C87528E0]();
    if (*(void *)((v70 & 0xFFFFFFFFFFFFFF8) + 0x10) < *(void *)((v70 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    {
LABEL_64:
      sub_1C214A820();
      sub_1C214A7A0();

      return v70;
    }
LABEL_67:
    sub_1C214A7D0();
    goto LABEL_64;
  }
  return v70;
}

uint64_t sub_1C1F6CCE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v55 = a2;
  uint64_t v3 = sub_1C21497F0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C1F105C4(0, &qword_1EBF0B220, MEMORY[0x1E4F27D68], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v8 - 8);
  id v53 = (char *)v46 - v9;
  sub_1C1F105C4(0, (unint64_t *)&unk_1EBF0B210, MEMORY[0x1E4F27CA0], v7);
  MEMORY[0x1F4188790](v10 - 8);
  unint64_t v52 = (char *)v46 - v11;
  uint64_t v54 = sub_1C2147AC0();
  uint64_t v12 = *(void *)(v54 - 8);
  MEMORY[0x1F4188790](v54);
  id v14 = (char *)v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1C2147CF0();
  uint64_t v47 = *(void *)(v15 - 8);
  uint64_t v48 = v15;
  MEMORY[0x1F4188790](v15);
  unint64_t v17 = (char *)v46 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1C21476D0();
  uint64_t v50 = *(void *)(v18 - 8);
  uint64_t v51 = v18;
  uint64_t v19 = MEMORY[0x1F4188790](v18);
  unint64_t v21 = (char *)v46 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  id v23 = (char *)v46 - v22;
  uint64_t v24 = sub_1C2147630();
  if (v25)
  {
    uint64_t v42 = v54;
    sub_1C21497A0();
    id v43 = sub_1C21497E0();
    os_log_type_t v44 = sub_1C214ABD0();
    if (os_log_type_enabled(v43, v44))
    {
      id v45 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v45 = 0;
      _os_log_impl(&dword_1C1F0B000, v43, v44, "Cannot infer date from timeComponents; hour is nil.", v45, 2u);
      MEMORY[0x1C8754730](v45, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56))(v55, 1, 1, v42);
  }
  else
  {
    v46[0] = a1;
    v46[2] = v24;
    uint64_t v26 = sub_1C2147670();
    if (v27) {
      uint64_t v28 = 0;
    }
    else {
      uint64_t v28 = v26;
    }
    v46[1] = v28;
    sub_1C2147CB0();
    sub_1C1F105C4(0, &qword_1EBF0B508, MEMORY[0x1E4F27C88], MEMORY[0x1E4FBBE00]);
    uint64_t v29 = sub_1C2147CD0();
    uint64_t v30 = *(void *)(v29 - 8);
    unint64_t v31 = (*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
    uint64_t v32 = swift_allocObject();
    *(_OWORD *)(v32 + 16) = xmmword_1C214FCD0;
    (*(void (**)(unint64_t, void, uint64_t))(v30 + 104))(v32 + v31, *MEMORY[0x1E4F27C20], v29);
    sub_1C1F17A58(v32);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    id v33 = objc_msgSend(v49, sel_startDateTime);
    sub_1C2147A60();

    sub_1C2147BF0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v54);
    uint64_t v34 = v47;
    uint64_t v35 = v48;
    BOOL v36 = *(void (**)(char *, uint64_t))(v47 + 8);
    v36(v17, v48);
    uint64_t v37 = v52;
    sub_1C2147CB0();
    (*(void (**)(char *, void, uint64_t, uint64_t))(v34 + 56))(v37, 0, 1, v35);
    sub_1C21476C0();
    sub_1C2147660();
    sub_1C21476B0();
    sub_1C2147CB0();
    sub_1C2147C70();
    v36(v17, v35);
    id v38 = *(void (**)(char *, uint64_t))(v50 + 8);
    uint64_t v39 = v21;
    uint64_t v40 = v51;
    v38(v39, v51);
    return ((uint64_t (*)(char *, uint64_t))v38)(v23, v40);
  }
}

uint64_t HKMedicationSchedule.makeScheduleItems()()
{
  uint64_t v1 = v0;
  swift_getObjectType();
  unint64_t v2 = sub_1C21497F0();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  uint64_t v6 = (NSObject **)((char *)&v66 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v66 - v7;
  uint64_t v72 = sub_1C2147CF0();
  uint64_t v69 = *(void *)(v72 - 8);
  MEMORY[0x1F4188790](v72);
  uint64_t v70 = ((char *)&v66 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v71 = sub_1C21496A0();
  uint64_t v10 = *(void *)(v71 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v71);
  uint64_t v13 = (char *)&v66 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)&v66 - v14;
  uint64_t v16 = (uint64_t)&off_1E6447000;
  switch((unint64_t)objc_msgSend(v1, sel_scheduleType))
  {
    case 0uLL:
      goto LABEL_44;
    case 1uLL:
    case 2uLL:
    case 4uLL:
      sub_1C1F72C70(0, &qword_1EA2C32A8, (uint64_t)&type metadata for ScheduleListItem, MEMORY[0x1E4FBBE00]);
      uint64_t v17 = swift_allocObject();
      *(_OWORD *)(v17 + 16) = xmmword_1C214FCD0;
      *(void *)(v17 + 32) = sub_1C1F84CF4();
      *(void *)(v17 + 40) = v18;
      *(unsigned char *)(v17 + 48) = 0;
      return v17;
    case 3uLL:
      long long v73 = xmmword_1C214FCD0;
      id v20 = objc_msgSend(v1, sel_timeIntervals);
      sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8D8);
      unint64_t v21 = sub_1C214A780();

      if (v21 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v6 = (NSObject **)sub_1C214B930();
        swift_bridgeObjectRelease();
        if (v6) {
          goto LABEL_8;
        }
      }
      else
      {
        uint64_t v6 = *(NSObject ***)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (v6)
        {
LABEL_8:
          if ((v21 & 0xC000000000000001) != 0)
          {
            id v22 = (id)MEMORY[0x1C8753960](0, v21);
LABEL_11:
            id v23 = v22;
            swift_bridgeObjectRelease();
            id v24 = objc_msgSend(v23, sel_daysOfWeek);

            sub_1C2092484((uint64_t)v24, v15);
            char v25 = v70;
            sub_1C2147CB0();
            uint64_t v26 = sub_1C2149670();
            unint64_t v28 = v27;
            (*(void (**)(NSObject *, uint64_t))(v69 + 8))(v25, v72);
            (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v71);
            if (v28)
            {
              uint64_t v74 = v26;
              unint64_t v75 = v28;
LABEL_35:
              swift_bridgeObjectRetain();
              uint64_t v17 = (uint64_t)sub_1C1F3A8F0(0, 1, 1, MEMORY[0x1E4FBC860]);
              unint64_t v45 = *(void *)(v17 + 16);
              unint64_t v44 = *(void *)(v17 + 24);
              if (v45 >= v44 >> 1) {
                uint64_t v17 = (uint64_t)sub_1C1F3A8F0((void *)(v44 > 1), v45 + 1, 1, (void *)v17);
              }
              *(void *)(v17 + 16) = v45 + 1;
              uint64_t v46 = v17 + 24 * v45;
              *(void *)(v46 + 32) = v26;
              *(void *)(v46 + 40) = v28;
              *(unsigned char *)(v46 + 48) = 0;
              swift_arrayDestroy();
              return v17;
            }
LABEL_34:
            unint64_t v28 = 0xE000000000000000;
            uint64_t v74 = 0;
            unint64_t v75 = 0xE000000000000000;
            swift_bridgeObjectRelease();
            uint64_t v26 = 0;
            goto LABEL_35;
          }
          if (*(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            id v22 = *(id *)(v21 + 32);
            goto LABEL_11;
          }
LABEL_43:
          __break(1u);
LABEL_44:
          uint64_t v71 = v3;
          uint64_t v72 = v2;
          sub_1C21497A0();
          id v47 = v1;
          uint64_t v48 = sub_1C21497E0();
          os_log_type_t v49 = sub_1C214ABD0();
          uint64_t v70 = v48;
          if (os_log_type_enabled(v48, v49))
          {
            uint64_t v50 = swift_slowAlloc();
            uint64_t v68 = (void *)swift_slowAlloc();
            uint64_t v69 = swift_slowAlloc();
            id v77 = v69;
            *(_DWORD *)uint64_t v50 = 136315394;
            uint64_t v51 = sub_1C214BC10();
            id v76 = (id)sub_1C1F6FD54(v51, v52, (uint64_t *)&v77);
            sub_1C214B530();
            swift_bridgeObjectRelease();
            *(_WORD *)(v50 + 12) = 2112;
            id v76 = v47;
            id v53 = v47;
            sub_1C214B530();
            uint64_t v54 = v68;
            *uint64_t v68 = v47;

            uint64_t v55 = v70;
            _os_log_impl(&dword_1C1F0B000, v70, v49, "%s Unexpectedly found schedule with null type. Schedule: %@", (uint8_t *)v50, 0x16u);
            sub_1C1F7296C(0, (unint64_t *)&qword_1EA2C3178, (unint64_t *)&qword_1EA2C4AA0, 0x1E4FBA8A8, MEMORY[0x1E4FBB718]);
            swift_arrayDestroy();
            MEMORY[0x1C8754730](v54, -1, -1);
            uint64_t v56 = v69;
            swift_arrayDestroy();
            MEMORY[0x1C8754730](v56, -1, -1);
            MEMORY[0x1C8754730](v50, -1, -1);

            (*(void (**)(NSObject **, uint64_t))(v71 + 8))(v6, v72);
            uint64_t v16 = 0x1E6447000;
          }
          else
          {

            (*(void (**)(NSObject **, uint64_t))(v71 + 8))(v6, v72);
          }
LABEL_49:
          id v77 = 0;
          unint64_t v78 = 0xE000000000000000;
          sub_1C214B7C0();
          swift_bridgeObjectRelease();
          id v77 = 0xD00000000000001CLL;
          unint64_t v78 = 0x80000001C2160550;
          id v76 = [v1 *(SEL *)(v16 + 1896)];
          sub_1C214BA40();
          sub_1C214A6C0();
          swift_bridgeObjectRelease();
          sub_1C214A6C0();
LABEL_52:
          sub_1C214B910();
          __break(1u);
          JUMPOUT(0x1C1F6E040);
        }
      }
      swift_bridgeObjectRelease();
      goto LABEL_34;
    case 5uLL:
      id v29 = objc_msgSend(v1, sel_timeIntervals);
      sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8D8);
      uint64_t v1 = (void *)sub_1C214A780();

      unint64_t v2 = sub_1C214A800();
      swift_bridgeObjectRelease();
      if (v2 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v16 = sub_1C214B930();
        swift_bridgeObjectRelease();
        if (v16) {
          goto LABEL_15;
        }
      }
      else
      {
        uint64_t v16 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (v16)
        {
LABEL_15:
          id v77 = MEMORY[0x1E4FBC860];
          uint64_t v6 = &v77;
          sub_1C1F7043C(0, v16 & ~(v16 >> 63), 0);
          if ((v16 & 0x8000000000000000) == 0)
          {
            uint64_t v30 = 0;
            unint64_t v67 = v2 & 0xC000000000000001;
            uint64_t v68 = (void *)v16;
            unint64_t v31 = (void (**)(NSObject *, uint64_t))(v69 + 8);
            uint64_t v32 = (void (**)(char *, uint64_t))(v10 + 8);
            uint64_t v69 = v2;
            do
            {
              if (v67) {
                id v33 = (id)MEMORY[0x1C8753960](v30, v2);
              }
              else {
                id v33 = *(id *)(v2 + 8 * (void)v30 + 32);
              }
              uint64_t v34 = v33;
              sub_1C2092484((uint64_t)objc_msgSend(v33, sel_daysOfWeek), v13);
              uint64_t v35 = v70;
              sub_1C2147CB0();
              uint64_t v36 = sub_1C2149670();
              unint64_t v38 = v37;
              (*v31)(v35, v72);
              (*v32)(v13, v71);

              if (v38) {
                uint64_t v39 = v36;
              }
              else {
                uint64_t v39 = 0;
              }
              if (v38) {
                unint64_t v40 = v38;
              }
              else {
                unint64_t v40 = 0xE000000000000000;
              }
              uint64_t v17 = (uint64_t)v77;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              {
                sub_1C1F7043C(0, *(void *)(v17 + 16) + 1, 1);
                uint64_t v17 = (uint64_t)v77;
              }
              unint64_t v42 = *(void *)(v17 + 16);
              unint64_t v41 = *(void *)(v17 + 24);
              if (v42 >= v41 >> 1)
              {
                sub_1C1F7043C(v41 > 1, v42 + 1, 1);
                uint64_t v17 = (uint64_t)v77;
              }
              uint64_t v30 = (void *)((char *)v30 + 1);
              *(void *)(v17 + 16) = v42 + 1;
              uint64_t v43 = v17 + 24 * v42;
              *(void *)(v43 + 32) = v39;
              *(void *)(v43 + 40) = v40;
              *(unsigned char *)(v43 + 48) = 0;
              unint64_t v2 = v69;
            }
            while (v68 != v30);
            swift_bridgeObjectRelease();
            return v17;
          }
          __break(1u);
          goto LABEL_43;
        }
      }
      swift_bridgeObjectRelease();
      return MEMORY[0x1E4FBC860];
    case 6uLL:
      uint64_t v71 = v3;
      uint64_t v72 = v2;
      sub_1C21497A0();
      id v57 = v1;
      unint64_t v58 = sub_1C21497E0();
      os_log_type_t v59 = sub_1C214ABD0();
      if (os_log_type_enabled(v58, v59))
      {
        uint64_t v60 = swift_slowAlloc();
        uint64_t v69 = swift_slowAlloc();
        uint64_t v70 = swift_slowAlloc();
        id v77 = v70;
        *(_DWORD *)uint64_t v60 = 136315394;
        uint64_t v61 = sub_1C214BC10();
        id v76 = (id)sub_1C1F6FD54(v61, v62, (uint64_t *)&v77);
        sub_1C214B530();
        swift_bridgeObjectRelease();
        *(_WORD *)(v60 + 12) = 2112;
        id v76 = v57;
        id v63 = v57;
        sub_1C214B530();
        uint64_t v64 = v69;
        *(void *)uint64_t v69 = v57;

        _os_log_impl(&dword_1C1F0B000, v58, v59, "%s Unexpectedly found schedule with deprecated alternating daily type. Schedule: %@", (uint8_t *)v60, 0x16u);
        sub_1C1F7296C(0, (unint64_t *)&qword_1EA2C3178, (unint64_t *)&qword_1EA2C4AA0, 0x1E4FBA8A8, MEMORY[0x1E4FBB718]);
        swift_arrayDestroy();
        MEMORY[0x1C8754730](v64, -1, -1);
        uint64_t v65 = v70;
        swift_arrayDestroy();
        MEMORY[0x1C8754730](v65, -1, -1);
        MEMORY[0x1C8754730](v60, -1, -1);
      }
      else
      {
      }
      (*(void (**)(char *, uint64_t))(v71 + 8))(v8, v72);
      id v77 = 0;
      unint64_t v78 = 0xE000000000000000;
      sub_1C214B7C0();
      sub_1C214A6C0();
      id v76 = objc_msgSend(v57, sel_scheduleType);
      sub_1C214BA40();
      sub_1C214A6C0();
      swift_bridgeObjectRelease();
      sub_1C214A6C0();
      goto LABEL_52;
    case 7uLL:
    case 8uLL:
      return _sSo20HKMedicationScheduleC19HealthMedicationsUIE024unittesting_makeCyclicalB5ItemsSayAC0B8ListItemOGyF_0();
    default:
      goto LABEL_49;
  }
}

uint64_t sub_1C1F6E064@<X0>(id *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_1C21496A0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2092484((uint64_t)objc_msgSend(*a1, sel_daysOfWeek), v7);
  uint64_t v8 = sub_1C2149640();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  *a2 = v8;
  return result;
}

uint64_t _sSo20HKMedicationScheduleC19HealthMedicationsUIE024unittesting_makeCyclicalB5ItemsSayAC0B8ListItemOGyF_0()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1C2147CF0();
  MEMORY[0x1F4188790](v2 - 8);
  id v76 = (void (**)(char *, uint64_t))((char *)&v69 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v4 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C1F105C4(0, &qword_1EA2C3918, (uint64_t (*)(uint64_t))type metadata accessor for CycleData, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v69 - v6;
  uint64_t v75 = type metadata accessor for CycleData();
  uint64_t v8 = *(void *)(v75 - 8);
  MEMORY[0x1F4188790](v75);
  uint64_t v73 = (uint64_t)&v69 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1F105C4(0, &qword_1EBF0B1F0, MEMORY[0x1E4F27928], v4);
  uint64_t v11 = MEMORY[0x1F4188790](v10 - 8);
  uint64_t v71 = (uint64_t)&v69 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v69 - v13;
  uint64_t v15 = sub_1C2147AC0();
  uint64_t v16 = *(void (***)(char *, uint64_t, uint64_t, uint64_t))(v15 - 8);
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  uint64_t v70 = (char *)&v69 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = MEMORY[0x1F4188790](v17);
  unint64_t v21 = (char *)&v69 - v20;
  MEMORY[0x1F4188790](v19);
  id v23 = (char *)&v69 - v22;
  id v72 = sub_1C1F84CF4();
  uint64_t v77 = v24;
  id v25 = objc_msgSend(v0, sel_endDateTime);
  uint64_t v74 = v15;
  if (!v25)
  {
    v16[7](v14, 1, 1, v15);
    goto LABEL_6;
  }
  uint64_t v26 = v25;
  sub_1C2147A60();

  unint64_t v27 = v16;
  unint64_t v28 = v16;
  uint64_t v29 = v15;
  uint64_t v30 = v27[4];
  ((void (*)(char *, char *, uint64_t))v30)(v14, v21, v29);
  v28[7](v14, 0, 1, v29);
  uint64_t v31 = v29;
  uint64_t v16 = v28;
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v28[6])(v14, 1, v31) == 1)
  {
LABEL_6:
    sub_1C1F13A74((uint64_t)v14, &qword_1EBF0B1F0, MEMORY[0x1E4F27928]);
    goto LABEL_7;
  }
  uint64_t v32 = v74;
  ((void (*)(char *, char *, uint64_t))v30)(v23, v14, v74);
  sub_1C21479C0();
  sub_1C1F72BCC((unint64_t *)&qword_1EBF0B7B0, MEMORY[0x1E4F27928]);
  char v33 = sub_1C214A590();
  uint64_t v34 = v28[1];
  ((void (*)(char *, uint64_t))v34)(v21, v32);
  if ((v33 & 1) == 0)
  {
    sub_1C1F72C70(0, &qword_1EA2C32A8, (uint64_t)&type metadata for ScheduleListItem, MEMORY[0x1E4FBBE00]);
    uint64_t v42 = swift_allocObject();
    *(_OWORD *)(v42 + 16) = xmmword_1C214FCD0;
    uint64_t v47 = v77;
    *(void *)(v42 + 32) = v72;
    *(void *)(v42 + 40) = v47;
    *(unsigned char *)(v42 + 48) = 0;
    ((void (*)(char *, uint64_t))v34)(v23, v32);
    return v42;
  }
  ((void (*)(char *, uint64_t))v34)(v23, v32);
  uint64_t v16 = v28;
LABEL_7:
  id v35 = v1;
  uint64_t v36 = (uint64_t)v76;
  sub_1C2147C50();
  sub_1C2084348(v35, v36, (uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v7, 1, v75) == 1)
  {
    swift_bridgeObjectRelease();
    unint64_t v37 = &qword_1EA2C3918;
    unint64_t v38 = type metadata accessor for CycleData;
    uint64_t v39 = (uint64_t)v7;
LABEL_9:
    sub_1C1F13A74(v39, v37, (uint64_t (*)(uint64_t))v38);
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v40 = v73;
  sub_1C1F72B04((uint64_t)v7, v73, (uint64_t (*)(void))type metadata accessor for CycleData);
  CycleData.currentPhase.getter((uint64_t)v78);
  unsigned __int8 v41 = v80;
  if (v80 == 255)
  {
    sub_1C1F72B6C(v40, (uint64_t (*)(void))type metadata accessor for CycleData);
    swift_bridgeObjectRelease();
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v44 = v79;
  uint64_t v45 = v71;
  CycleData.nextCycleChangeDate.getter(v71);
  uint64_t v46 = v74;
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v16[6])(v45, 1, v74) == 1)
  {
    sub_1C1F72B6C(v40, (uint64_t (*)(void))type metadata accessor for CycleData);
    swift_bridgeObjectRelease();
    unint64_t v37 = &qword_1EBF0B1F0;
    unint64_t v38 = (uint64_t (*)())MEMORY[0x1E4F27928];
    uint64_t v39 = v45;
    goto LABEL_9;
  }
  uint64_t v48 = v70;
  ((void (*)(char *, uint64_t, uint64_t))v16[4])(v70, v45, v46);
  uint64_t v49 = CycleData.localizeCurrentPhaseDescription.getter();
  uint64_t v51 = (void (**)(char *, uint64_t))v16;
  if (!v50)
  {
    swift_bridgeObjectRelease();
    ((void (*)(char *, uint64_t))v16[1])(v48, v46);
    sub_1C1F72B6C(v40, (uint64_t (*)(void))type metadata accessor for CycleData);
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v52 = v49;
  uint64_t v53 = v50;
  id v76 = v51;
  if (v41)
  {
    sub_1C1F72C70(0, &qword_1EA2C32A8, (uint64_t)&type metadata for ScheduleListItem, MEMORY[0x1E4FBBE00]);
    uint64_t v42 = swift_allocObject();
    *(_OWORD *)(v42 + 16) = xmmword_1C2150000;
    uint64_t v63 = v77;
    *(void *)(v42 + 32) = v72;
    *(void *)(v42 + 40) = v63;
    *(unsigned char *)(v42 + 48) = 0;
    if (qword_1EBF0CA00 != -1) {
      swift_once();
    }
    id v64 = (id)qword_1EBF0CA18;
    swift_bridgeObjectRetain();
    uint64_t v65 = sub_1C2147730();
    uint64_t v67 = v66;
    swift_bridgeObjectRelease();

    *(void *)(v42 + 56) = v65;
    *(void *)(v42 + 64) = v67;
    *(unsigned char *)(v42 + 72) = 1;
    *(void *)(v42 + 80) = v52;
    *(void *)(v42 + 88) = v53;
    *(unsigned char *)(v42 + 96) = 1;
    v76[1](v70, v46);
  }
  else
  {
    sub_1C1F72C70(0, &qword_1EA2C32A8, (uint64_t)&type metadata for ScheduleListItem, MEMORY[0x1E4FBBE00]);
    if (v44)
    {
      uint64_t v42 = swift_allocObject();
      *(_OWORD *)(v42 + 16) = xmmword_1C2150000;
      uint64_t v54 = v77;
      *(void *)(v42 + 32) = v72;
      *(void *)(v42 + 40) = v54;
      *(unsigned char *)(v42 + 48) = 0;
      *(void *)(v42 + 56) = v52;
      *(void *)(v42 + 64) = v53;
      *(unsigned char *)(v42 + 72) = 1;
      if (qword_1EBF0CA00 != -1) {
        swift_once();
      }
      uint64_t v55 = (void *)qword_1EBF0CA18;
      sub_1C1F72888(0, qword_1EBF0B8A0, (unint64_t *)&qword_1EBF0C9F0);
      uint64_t v56 = swift_allocObject();
      *(_OWORD *)(v56 + 16) = xmmword_1C214FCD0;
      id v57 = v55;
      swift_bridgeObjectRetain();
      Swift::String v58 = Date.formattedWithYearIfDifferent()();
      os_log_type_t v59 = v48;
      *(void *)(v56 + 56) = MEMORY[0x1E4FBB1A0];
      *(void *)(v56 + 64) = sub_1C1F31298();
      *(Swift::String *)(v56 + 32) = v58;
      sub_1C2147730();
      uint64_t v60 = sub_1C214A5C0();
      uint64_t v62 = v61;
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *(void *)(v42 + 80) = v60;
      *(void *)(v42 + 88) = v62;
      *(unsigned char *)(v42 + 96) = 1;
      v76[1](v59, v46);
    }
    else
    {
      uint64_t v42 = swift_allocObject();
      *(_OWORD *)(v42 + 16) = xmmword_1C214FCC0;
      uint64_t v68 = v77;
      *(void *)(v42 + 32) = v72;
      *(void *)(v42 + 40) = v68;
      *(unsigned char *)(v42 + 48) = 0;
      *(void *)(v42 + 56) = v52;
      *(void *)(v42 + 64) = v53;
      *(unsigned char *)(v42 + 72) = 1;
      v76[1](v48, v46);
    }
  }
  sub_1C1F72B6C(v40, (uint64_t (*)(void))type metadata accessor for CycleData);
  return v42;
}

uint64_t HKMedicationSchedule.makeItems()()
{
  if (objc_msgSend(v0, sel_isUnavailable))
  {
    if (qword_1EBF0CA00 != -1) {
      swift_once();
    }
    id v1 = (id)qword_1EBF0CA18;
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1C2147730();
    uint64_t v4 = v3;
    swift_bridgeObjectRelease();

    sub_1C1F72C70(0, &qword_1EBF0C970, (uint64_t)&type metadata for MedicationCellItem, MEMORY[0x1E4FBBE00]);
    uint64_t v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_1C214FCD0;
    id v6 = objc_msgSend(self, sel_secondaryLabelColor, 0xE000000000000000);
    id v7 = (id)qword_1EBF0CA18;
    swift_bridgeObjectRetain();
    sub_1C2147730();
    swift_bridgeObjectRelease();

    sub_1C214A6C0();
    swift_bridgeObjectRelease();
    sub_1C214A6C0();
    sub_1C214A6C0();
    uint64_t v8 = v5;
    *(unsigned char *)(v5 + 32) = 0;
    *(void *)(v5 + 40) = v6;
    *(void *)(v5 + 48) = v2;
    *(void *)(v5 + 56) = v4;
    *(void *)(v5 + 64) = 0xD00000000000001BLL;
    *(void *)(v5 + 72) = 0x80000001C21605E0;
    *(void *)(v5 + 80) = 0;
    *(void *)(v5 + 88) = 0xE000000000000000;
  }
  else
  {
    uint64_t v9 = HKMedicationSchedule.makeScheduleItems()();
    int64_t v10 = *(void *)(v9 + 16);
    if (v10)
    {
      uint64_t v28 = MEMORY[0x1E4FBC860];
      sub_1C1F7045C(0, v10, 0);
      uint64_t v8 = v28;
      uint64_t v11 = (unsigned __int8 *)(v9 + 48);
      id v24 = self;
      do
      {
        uint64_t v12 = *((void *)v11 - 2);
        uint64_t v13 = *((void *)v11 - 1);
        int v14 = *v11;
        id v15 = objc_msgSend(v24, sel_secondaryLabelColor, v23);
        uint64_t v16 = 0x7261646E656C6163;
        if (v14) {
          uint64_t v16 = 0;
        }
        uint64_t v26 = v16;
        id v27 = v15;
        unint64_t v17 = 0xE800000000000000;
        if (v14) {
          unint64_t v17 = 0;
        }
        unint64_t v25 = v17;
        sub_1C1F72768();
        if (qword_1EBF0CA00 != -1) {
          swift_once();
        }
        id v18 = (id)qword_1EBF0CA18;
        swift_bridgeObjectRetain();
        unint64_t v23 = 0xE000000000000000;
        sub_1C2147730();
        swift_bridgeObjectRelease();

        sub_1C214A6C0();
        swift_bridgeObjectRelease();
        sub_1C214A6C0();
        sub_1C1F72768();
        sub_1C214A6C0();
        sub_1C1F72770();
        unint64_t v20 = *(void *)(v28 + 16);
        unint64_t v19 = *(void *)(v28 + 24);
        if (v20 >= v19 >> 1) {
          sub_1C1F7045C(v19 > 1, v20 + 1, 1);
        }
        *(void *)(v28 + 16) = v20 + 1;
        unint64_t v21 = v28 + (v20 << 6);
        *(unsigned char *)(v21 + 32) = 0;
        v11 += 24;
        *(void *)(v21 + 40) = v27;
        *(void *)(v21 + 48) = v12;
        *(void *)(v21 + 56) = v13;
        *(void *)(v21 + 64) = v26;
        *(void *)(v21 + 72) = v25;
        *(void *)(v21 + 80) = 0;
        *(void *)(v21 + 88) = 0xE000000000000000;
        --v10;
      }
      while (v10);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      return MEMORY[0x1E4FBC860];
    }
  }
  return v8;
}

unint64_t sub_1C1F6EFDC()
{
  uint64_t v111 = sub_1C21496A0();
  unint64_t v0 = *(__objc2_prot ***)(v111 - 8);
  uint64_t v1 = MEMORY[0x1F4188790](v111);
  uint64_t v79 = (char *)&v75 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = MEMORY[0x1F4188790](v1);
  uint64_t v5 = (void (*)(char *, uint64_t, unint64_t))((char *)&v75 - v4);
  MEMORY[0x1F4188790](v3);
  char v110 = (char *)&v75 - v6;
  uint64_t v108 = type metadata accessor for WeekdaysAndDosages(0);
  uint64_t v90 = *(void *)(v108 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v108);
  id v91 = (uint64_t *)((char *)&v75 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v7);
  uint64_t v107 = (uint64_t)&v75 - v9;
  uint64_t v95 = sub_1C2147B20();
  int64_t v10 = *(char **)(v95 - 8);
  MEMORY[0x1F4188790](v95);
  id v94 = (char *)&v75 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v103 = sub_1C21476D0();
  unint64_t v12 = *(void *)(v103 - 8);
  MEMORY[0x1F4188790](v103);
  int v14 = (char *)&v75 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v102 = sub_1C2147CF0();
  id v15 = *(char **)(v102 - 8);
  MEMORY[0x1F4188790](v102);
  id v87 = (char *)&v75 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1F105C4(0, &qword_1EBF0B1F0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v17 - 8);
  id v88 = (char *)&v75 - v18;
  unint64_t v19 = sub_1C2147AC0();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = MEMORY[0x1F4188790](v19);
  id v86 = (char *)&v75 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v21);
  id v24 = (char *)&v75 - v23;
  unint64_t v25 = sub_1C1F6C38C();
  unint64_t v26 = v25;
  if (v25 >> 62) {
    goto LABEL_40;
  }
  for (uint64_t i = *(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10); i; uint64_t i = sub_1C214B930())
  {
    unint64_t v28 = v12;
    unint64_t v12 = 0;
    unint64_t v106 = v26 & 0xC000000000000001;
    unint64_t v104 = v26;
    unint64_t v97 = v26 + 32;
    uint64_t v98 = v26 & 0xFFFFFFFFFFFFFF8;
    id v100 = (void (**)(char *, uint64_t))(v15 + 8);
    unint64_t v101 = (void (**)(char *, uint64_t))(v28 + 8);
    uint64_t v99 = (unsigned int (**)(uint64_t, uint64_t, unint64_t))(v20 + 48);
    id v93 = (void (**)(char *, uint64_t, unint64_t))(v20 + 32);
    id v85 = (void (**)(char *, char *, unint64_t))(v20 + 16);
    id v84 = (void (**)(unint64_t, char *, uint64_t))(v10 + 32);
    id v109 = (void (**)(char *, id))(v0 + 1);
    id v92 = (void (**)(char *, unint64_t))(v20 + 8);
    unint64_t v78 = (void (**)(char *, char *, uint64_t))(v0 + 2);
    uint64_t v77 = (void (**)(char *, uint64_t))(v10 + 8);
    id v76 = (void (**)(char *, char *, char *))(v0 + 4);
    unint64_t v112 = MEMORY[0x1E4FBC860];
    unint64_t v0 = &off_1E6447000;
    long long v83 = xmmword_1C214FCD0;
    id v15 = v87;
    uint64_t v20 = (uint64_t)v88;
    uint64_t v105 = i;
    double v89 = v5;
    id v82 = v14;
    unint64_t v80 = v19;
    id v81 = v24;
    while (v106)
    {
      uint64_t v29 = (char *)MEMORY[0x1C8753960](v12, v104);
      BOOL v30 = __OFADD__(v12++, 1);
      if (v30) {
        goto LABEL_37;
      }
LABEL_12:
      uint64_t v31 = (const char *)v0[238];
      uint64_t v113 = v29;
      id v32 = [v29 v31];
      if (v32)
      {
        unint64_t v26 = (unint64_t)v32;
        objc_msgSend(v32, sel_doubleValue);
        double v34 = v33;

        if (v34 == 0.0)
        {

          goto LABEL_5;
        }
      }
      sub_1C2147CB0();
      int64_t v10 = v113;
      id v35 = objc_msgSend(v113, sel_startTimeComponent);
      sub_1C2147620();

      unint64_t v26 = (unint64_t)v15;
      sub_1C2147C70();
      (*v101)(v14, v103);
      (*v100)(v15, v102);
      if ((*v99)(v20, 1, v19) == 1)
      {

        sub_1C1F13A74(v20, &qword_1EBF0B1F0, MEMORY[0x1E4F27928]);
        goto LABEL_5;
      }
      unint64_t v26 = (unint64_t)v0;
      uint64_t v5 = *v93;
      (*v93)(v24, v20, v19);
      id v36 = [v10 (SEL)v0 + 3607];
      if (v36)
      {
        unint64_t v37 = v36;
        objc_msgSend(v36, sel_doubleValue);
        uint64_t v39 = v38;

        sub_1C1F105C4(0, (unint64_t *)&qword_1EA2C3220, (uint64_t (*)(uint64_t))type metadata accessor for Dosage, MEMORY[0x1E4FBBE00]);
        uint64_t v40 = (int *)(type metadata accessor for Dosage() - 8);
        unint64_t v41 = (*(unsigned __int8 *)(*(void *)v40 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v40 + 80);
        uint64_t v42 = swift_allocObject();
        *(_OWORD *)(v42 + 16) = v83;
        uint64_t v96 = v42;
        unint64_t v43 = v42 + v41;
        uint64_t v44 = v86;
        (*v85)(v86, v24, v19);
        uint64_t v45 = v94;
        sub_1C2147B10();
        (*v84)(v43, v45, v95);
        v5((char *)(v43 + v40[7]), (uint64_t)v44, v19);
        *(void *)(v43 + v40[8]) = v39;
        uint64_t v46 = *(char **)(v112 + 16);
        uint64_t v5 = v89;
        if (v46)
        {
          uint64_t v47 = v90;
          unint64_t v19 = (*(unsigned __int8 *)(v90 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v90 + 80);
          uint64_t v48 = swift_bridgeObjectRetain();
          id v15 = 0;
          uint64_t v5 = *(void (**)(char *, uint64_t, unint64_t))(v47 + 72);
          while (1)
          {
            uint64_t v49 = v107;
            sub_1C1F72AA0(v48 + v19, v107);
            id v50 = objc_msgSend(v113, sel_daysOfWeek);
            uint64_t v51 = v110;
            sub_1C2092484((uint64_t)v50, v110);
            sub_1C1F72BCC(&qword_1EA2C3B90, MEMORY[0x1E4F66D28]);
            int64_t v10 = (char *)v111;
            sub_1C214A750();
            sub_1C214A750();
            uint64_t v53 = v114;
            uint64_t v52 = v115;
            (*v109)(v51, v10);
            sub_1C1F72B6C(v49, type metadata accessor for WeekdaysAndDosages);
            if (v52 == v53) {
              break;
            }
            ++v15;
            v19 += (unint64_t)v5;
            uint64_t v48 = v112;
            if (v46 == v15)
            {
              swift_bridgeObjectRelease();
              uint64_t v5 = v89;
              goto LABEL_22;
            }
          }
          unint64_t v26 = v112;
          swift_bridgeObjectRelease();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v26 = sub_1C1F814D8(v26);
          }
          int v14 = v82;
          uint64_t v20 = (uint64_t)v88;
          id v24 = v81;
          unint64_t v0 = &off_1E6447000;
          if ((unint64_t)v15 >= *(void *)(v26 + 16)) {
            goto LABEL_39;
          }
          uint64_t v73 = *(int *)(v108 + 24);
          unint64_t v112 = v26;
          v26 += v19 + v73;
          sub_1C1F7D1A4(v96);

          unint64_t v19 = v80;
          (*v92)(v24, v80);
          id v15 = v87;
        }
        else
        {
LABEL_22:
          id v54 = v113;
          id v55 = objc_msgSend(v113, sel_daysOfWeek);
          uint64_t v56 = v110;
          sub_1C2092484((uint64_t)v55, v110);
          id v57 = (void (*)(uint64_t))MEMORY[0x1E4F66D28];
          sub_1C1F72BCC(&qword_1EA2C3B98, MEMORY[0x1E4F66D28]);
          Swift::String v58 = v79;
          uint64_t v59 = v111;
          sub_1C214B630();
          sub_1C1F72BCC(&qword_1EBF0C5E8, v57);
          char v60 = sub_1C214A5A0();
          uint64_t v61 = *v109;
          (*v109)(v58, (id)v59);
          v61(v56, (id)v59);
          if (v60) {
            sub_1C21495E0();
          }
          else {
            sub_1C2092484((uint64_t)objc_msgSend(v54, sel_daysOfWeek), (char *)v5);
          }
          id v24 = v81;
          unint64_t v0 = &off_1E6447000;
          uint64_t v62 = v110;
          int64_t v10 = (char *)v111;
          (*v78)(v110, (char *)v5, v111);
          uint64_t v63 = v94;
          sub_1C2147B10();
          uint64_t v64 = sub_1C2147AD0();
          uint64_t v66 = v65;
          (*v77)(v63, v95);
          uint64_t v67 = v91;
          *id v91 = v64;
          v67[1] = v66;
          uint64_t v68 = v108;
          (*v76)((char *)v67 + *(int *)(v108 + 20), v62, v10);
          *(uint64_t *)((char *)v67 + *(int *)(v68 + 24)) = v96;
          unint64_t v69 = v112;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v112 = sub_1C1F3AA34(0, *(void *)(v69 + 16) + 1, 1, v69);
          }
          int v14 = v82;
          id v15 = v87;
          unint64_t v71 = *(void *)(v112 + 16);
          unint64_t v70 = *(void *)(v112 + 24);
          unint64_t v26 = v71 + 1;
          if (v71 >= v70 >> 1) {
            unint64_t v112 = sub_1C1F3AA34(v70 > 1, v71 + 1, 1, v112);
          }
          unint64_t v72 = v112;
          *(void *)(v112 + 16) = v26;
          sub_1C1F72B04((uint64_t)v91, v72+ ((*(unsigned __int8 *)(v90 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v90 + 80))+ *(void *)(v90 + 72) * v71, type metadata accessor for WeekdaysAndDosages);

          v61((char *)v5, (id)v111);
          unint64_t v19 = v80;
          (*v92)(v24, v80);
          uint64_t v20 = (uint64_t)v88;
        }
LABEL_5:
        if (v12 == v105) {
          goto LABEL_36;
        }
      }
      else
      {
        (*v92)(v24, v19);

        unint64_t v0 = &off_1E6447000;
        if (v12 == v105)
        {
LABEL_36:
          swift_bridgeObjectRelease();
          return v112;
        }
      }
    }
    if (v12 >= *(void *)(v98 + 16)) {
      goto LABEL_38;
    }
    uint64_t v29 = (char *)*(id *)(v97 + 8 * v12);
    BOOL v30 = __OFADD__(v12++, 1);
    if (!v30) {
      goto LABEL_12;
    }
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
LABEL_39:
    __break(1u);
LABEL_40:
    ;
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x1E4FBC860];
}

uint64_t sub_1C1F6FD54(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_1C1F6FE28(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    uint64_t ObjectType = swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_1C1F72C14((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    uint64_t ObjectType = MEMORY[0x1E4FBB9B0];
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_1C1F72C14((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v12);
  return v7;
}

uint64_t sub_1C1F6FE28(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_1C214B540();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_1C1F6FFE4(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = sub_1C214B800();
  if (!v8)
  {
    sub_1C214B900();
    __break(1u);
LABEL_17:
    uint64_t result = sub_1C214B990();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_1C1F6FFE4(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = sub_1C1F7007C(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1C1F7027C(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_1C1F7027C(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_1C1F7007C(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_1C1F701F4(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = sub_1C214B7D0();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return (uint64_t)v4;
      }
      sub_1C214B900();
      __break(1u);
LABEL_10:
      uint64_t v2 = sub_1C214A6D0();
      if (!v2) {
        return MEMORY[0x1E4FBC860];
      }
    }
    sub_1C214B990();
    __break(1u);
LABEL_14:
    uint64_t result = sub_1C214B900();
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E4FBC860];
  }
  return result;
}

void *sub_1C1F701F4(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  sub_1C1F72C70(0, &qword_1EA2C3BD0, MEMORY[0x1E4FBC358], MEMORY[0x1E4FBBE00]);
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_1C1F7027C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    sub_1C1F72C70(0, &qword_1EA2C3BD0, MEMORY[0x1E4FBC358], MEMORY[0x1E4FBBE00]);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1C214B990();
  __break(1u);
  return result;
}

uint64_t sub_1C1F703EC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C1F10360(a1, a2, a3, (void *)*v3, &qword_1EA2C31C0, type metadata accessor for WeekdaysAndDosages, type metadata accessor for WeekdaysAndDosages);
  *unint64_t v3 = result;
  return result;
}

uint64_t sub_1C1F7043C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C1F70A80(a1, a2, a3, *v3);
  *unint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1C1F7045C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C1F70C1C(a1, a2, a3, *v3);
  *unint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1C1F7047C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C1F10360(a1, a2, a3, (void *)*v3, &qword_1EA2C3B80, MEMORY[0x1E4F26F90], MEMORY[0x1E4F26F90]);
  *unint64_t v3 = result;
  return result;
}

uint64_t sub_1C1F704CC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C1F71C1C(a1, a2, a3, (void *)*v3, (unint64_t *)&qword_1EBF0C958, (unint64_t *)&qword_1EBF0C2F0);
  *unint64_t v3 = result;
  return result;
}

uint64_t sub_1C1F70504(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C1F70DA8(a1, a2, a3, *v3);
  *unint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1C1F70524(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C1F70F28(a1, a2, a3, *v3);
  *unint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1C1F70544(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C1F710B4(a1, a2, a3, *v3);
  *unint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1C1F70564(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C1F10360(a1, a2, a3, (void *)*v3, &qword_1EA2C31C8, (uint64_t (*)(uint64_t))sub_1C1F3BE6C, (uint64_t (*)(void))sub_1C1F3BE6C);
  *unint64_t v3 = result;
  return result;
}

uint64_t sub_1C1F705B4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C1F10360(a1, a2, a3, (void *)*v3, &qword_1EA2C3B30, (uint64_t (*)(uint64_t))sub_1C1F3C674, (uint64_t (*)(void))sub_1C1F3C674);
  *unint64_t v3 = result;
  return result;
}

uint64_t sub_1C1F70604(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C1F10360(a1, a2, a3, (void *)*v3, &qword_1EA2C3930, (uint64_t (*)(uint64_t))type metadata accessor for ScheduleIntervalItem, (uint64_t (*)(void))type metadata accessor for ScheduleIntervalItem);
  *unint64_t v3 = result;
  return result;
}

uint64_t sub_1C1F70654(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C1F10360(a1, a2, a3, (void *)*v3, &qword_1EA2C3B88, type metadata accessor for MedicationSearchItem, type metadata accessor for MedicationSearchItem);
  *unint64_t v3 = result;
  return result;
}

uint64_t sub_1C1F706A4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C1F71C1C(a1, a2, a3, (void *)*v3, &qword_1EA2C3BE0, &qword_1EA2C3BE8);
  *unint64_t v3 = result;
  return result;
}

uint64_t sub_1C1F706DC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C1F10360(a1, a2, a3, (void *)*v3, &qword_1EA2C3BD8, MEMORY[0x1E4F66510], MEMORY[0x1E4F66510]);
  *unint64_t v3 = result;
  return result;
}

uint64_t sub_1C1F7072C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C1F71274(a1, a2, a3, (void *)*v3);
  *unint64_t v3 = result;
  return result;
}

uint64_t sub_1C1F7074C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C1F71438(a1, a2, a3, *v3);
  *unint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1C1F7076C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C1F715C4(a1, a2, a3, (void *)*v3);
  *unint64_t v3 = result;
  return result;
}

uint64_t sub_1C1F7078C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C1F71C1C(a1, a2, a3, (void *)*v3, &qword_1EA2C3BA0, (unint64_t *)&qword_1EA2C3BA8);
  *unint64_t v3 = result;
  return result;
}

uint64_t sub_1C1F707C4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C1F71778(a1, a2, a3, *v3);
  *unint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1C1F707E4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C1F10360(a1, a2, a3, (void *)*v3, &qword_1EA2C3B28, MEMORY[0x1E4F66CA8], MEMORY[0x1E4F66CA8]);
  *unint64_t v3 = result;
  return result;
}

uint64_t sub_1C1F70834(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C1F718F8(a1, a2, a3, *v3);
  *unint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1C1F70854(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C1F71A74(a1, a2, a3, (void *)*v3);
  *unint64_t v3 = result;
  return result;
}

uint64_t sub_1C1F70874(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C1F71C1C(a1, a2, a3, (void *)*v3, &qword_1EA2C3BC0, &qword_1EA2C3BC8);
  *unint64_t v3 = result;
  return result;
}

uint64_t sub_1C1F708AC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C1F71DE4(a1, a2, a3, *v3);
  *unint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1C1F708CC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C1F10360(a1, a2, a3, (void *)*v3, &qword_1EA2C3BB0, MEMORY[0x1E4F66C68], MEMORY[0x1E4F66C68]);
  *unint64_t v3 = result;
  return result;
}

uint64_t sub_1C1F7091C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C1F10360(a1, a2, a3, (void *)*v3, (unint64_t *)&qword_1EA2C3220, (uint64_t (*)(uint64_t))type metadata accessor for Dosage, (uint64_t (*)(void))type metadata accessor for Dosage);
  *unint64_t v3 = result;
  return result;
}

uint64_t sub_1C1F7096C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C1F71FAC(a1, a2, a3, *v3);
  *unint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1C1F7098C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C1F10360(a1, a2, a3, (void *)*v3, (unint64_t *)&qword_1EA2C2DD0, MEMORY[0x1E4F66468], MEMORY[0x1E4F66468]);
  *unint64_t v3 = result;
  return result;
}

uint64_t sub_1C1F709DC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C1F72154(a1, a2, a3, (void *)*v3);
  *unint64_t v3 = result;
  return result;
}

uint64_t sub_1C1F709FC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C1F10360(a1, a2, a3, (void *)*v3, &qword_1EA2C3B20, (uint64_t (*)(uint64_t))sub_1C1F728E8, (uint64_t (*)(void))sub_1C1F728E8);
  *unint64_t v3 = result;
  return result;
}

uint64_t sub_1C1F70A4C(char a1, int64_t a2, char a3, void *a4)
{
  return sub_1C1F10360(a1, a2, a3, a4, &qword_1EA2C31C0, type metadata accessor for WeekdaysAndDosages, type metadata accessor for WeekdaysAndDosages);
}

uint64_t sub_1C1F70A80(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1C1F72C70(0, &qword_1EA2C32A8, (uint64_t)&type metadata for ScheduleListItem, MEMORY[0x1E4FBBE00]);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  size_t v14 = 24 * v8;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v14]) {
      memmove(v12, v13, v14);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v14] || v12 >= &v13[v14])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1C214B990();
  __break(1u);
  return result;
}

uint64_t sub_1C1F70C1C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1C1F72C70(0, &qword_1EBF0C970, (uint64_t)&type metadata for MedicationCellItem, MEMORY[0x1E4FBBE00]);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 + 31;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 6);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[64 * v8]) {
      memmove(v13, v14, v8 << 6);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[64 * v8] || v13 >= &v14[64 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1C214B990();
  __break(1u);
  return result;
}

uint64_t sub_1C1F70DA8(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1C1F72C70(0, &qword_1EA2C3BB8, (uint64_t)&type metadata for FrequencyInterval, MEMORY[0x1E4FBBE00]);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1C214B990();
  __break(1u);
  return result;
}

uint64_t sub_1C1F70F28(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1C1F72C70(0, (unint64_t *)&qword_1EA2C3298, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1C214B990();
  __break(1u);
  return result;
}

uint64_t sub_1C1F710B4(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1C1F105C4(0, &qword_1EA2C3B38, (uint64_t (*)(uint64_t))type metadata accessor for HKMedicationFreeTextFormTypeCode, MEMORY[0x1E4FBBE00]);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1C214B990();
  __break(1u);
  return result;
}

uint64_t sub_1C1F71240(char a1, int64_t a2, char a3, void *a4)
{
  return sub_1C1F10360(a1, a2, a3, a4, &qword_1EA2C3B58, (uint64_t (*)(uint64_t))sub_1C1F5FF8C, (uint64_t (*)(void))sub_1C1F5FF8C);
}

uint64_t sub_1C1F71274(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1C1F72C70(0, &qword_1EBF0C960, (uint64_t)&type metadata for MedicationDoseLogMedicationItem, MEMORY[0x1E4FBBE00]);
    uint64_t v10 = (void *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v12 = (unint64_t)(v10 + 4);
  unint64_t v13 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 < a4 || v12 >= v13 + 40 * v8)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v10 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v13 >= v12 + 40 * v8 || v12 >= v13 + 40 * v8)
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1C214B990();
  __break(1u);
  return result;
}

uint64_t sub_1C1F71438(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1C1F72C70(0, &qword_1EA2C3258, (uint64_t)&type metadata for ScheduledDoseIdentifier, MEMORY[0x1E4FBBE00]);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1C214B990();
  __break(1u);
  return result;
}

uint64_t sub_1C1F715C4(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1C1F105C4(0, &qword_1EA2C3268, (uint64_t (*)(uint64_t))sub_1C1F3C9F0, MEMORY[0x1E4FBBE00]);
    uint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 8 * v8) {
      memmove(v10 + 4, a4 + 4, 8 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 8 * v8 || v13 >= v14 + 8 * v8)
  {
    sub_1C1F3C9F0(0);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1C214B990();
  __break(1u);
  return result;
}

uint64_t sub_1C1F71778(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1C1F72C70(0, &qword_1EA2C3B48, (uint64_t)&type metadata for UserSelectableScheduleType, MEMORY[0x1E4FBBE00]);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1C214B990();
  __break(1u);
  return result;
}

uint64_t sub_1C1F718F8(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1C1F72C70(0, &qword_1EA2C3B50, (uint64_t)&type metadata for PauseUsePeriod, MEMORY[0x1E4FBBE00]);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  size_t v15 = 16 * v8;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[v15]) {
      memmove(v13, v14, v15);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[v15] || v13 >= &v14[v15])
  {
    memcpy(v13, v14, v15);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1C214B990();
  __break(1u);
  return result;
}

uint64_t sub_1C1F71A74(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1C1F3CB80();
    uint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 8 * v8) {
      memmove(v10 + 4, a4 + 4, 8 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 8 * v8 || v13 >= v14 + 8 * v8)
  {
    sub_1C1F72C70(0, (unint64_t *)&qword_1EA2C3278, (uint64_t)&type metadata for LoggableDose, MEMORY[0x1E4FBB320]);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1C214B990();
  __break(1u);
  return result;
}

uint64_t sub_1C1F71C1C(char a1, int64_t a2, char a3, void *a4, unint64_t *a5, unint64_t *a6)
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (v12)
  {
    sub_1C1F72888(0, a5, a6);
    unint64_t v13 = (void *)swift_allocObject();
    size_t v14 = _swift_stdlib_malloc_size(v13);
    void v13[2] = v11;
    v13[3] = 2 * ((uint64_t)(v14 - 32) / 40);
  }
  else
  {
    unint64_t v13 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v15 = (unint64_t)(v13 + 4);
  unint64_t v16 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v13 != a4 || v15 >= v16 + 40 * v11) {
      memmove(v13 + 4, a4 + 4, 40 * v11);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v16 >= v15 + 40 * v11 || v15 >= v16 + 40 * v11)
  {
    sub_1C1F248B4(0, a6);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_30:
  uint64_t result = sub_1C214B990();
  __break(1u);
  return result;
}

uint64_t sub_1C1F71DE4(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1C1F72C70(0, (unint64_t *)&qword_1EA2C3DA0, MEMORY[0x1E4FBC840] + 8, MEMORY[0x1E4FBBE00]);
    int64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    int64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1C214B990();
  __break(1u);
  return result;
}

uint64_t sub_1C1F71F78(char a1, int64_t a2, char a3, void *a4)
{
  return sub_1C1F10360(a1, a2, a3, a4, (unint64_t *)&qword_1EA2C3220, (uint64_t (*)(uint64_t))type metadata accessor for Dosage, (uint64_t (*)(void))type metadata accessor for Dosage);
}

uint64_t sub_1C1F71FAC(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1C1F72C70(0, &qword_1EA2C3B40, (uint64_t)&type metadata for ScheduleTypeOptionItem, MEMORY[0x1E4FBBE00]);
    int64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 88);
  }
  else
  {
    int64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[88 * v8]) {
      memmove(v12, v13, 88 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[88 * v8] || v12 >= &v13[88 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1C214B990();
  __break(1u);
  return result;
}

uint64_t sub_1C1F72154(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1C1F72888(0, (unint64_t *)&qword_1EA2C69F0, (unint64_t *)&qword_1EA2C2CE0);
    int64_t v10 = (void *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    int64_t v10 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 16 * v8) {
      memmove(v10 + 4, a4 + 4, 16 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 16 * v8 || v13 >= v14 + 16 * v8)
  {
    sub_1C1F248B4(0, (unint64_t *)&qword_1EA2C2CE0);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1C214B990();
  __break(1u);
  return result;
}

unint64_t sub_1C1F72308(unint64_t result, uint64_t a2)
{
  if ((a2 & 0xC000000000000001) != 0) {
    return MEMORY[0x1C8753960]();
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10) > result)
  {
    return (unint64_t)*(id *)(a2 + 8 * result + 32);
  }
  __break(1u);
  return result;
}

uint64_t (*sub_1C1F72364(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  unint64_t v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_1C1F724E8(v6, a2, a3);
  return sub_1C1F723CC;
}

uint64_t (*sub_1C1F723D0(void (**a1)(id *a1), unint64_t a2, uint64_t a3))()
{
  unint64_t v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_1C1F72568(v6, a2, a3);
  return sub_1C1F723CC;
}

uint64_t (*sub_1C1F72438(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  unint64_t v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_1C1F725F0(v6, a2, a3);
  return sub_1C1F723CC;
}

void sub_1C1F724A0(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);

  free(v1);
}

uint64_t (*sub_1C1F724E8(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  unint64_t v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    id v4 = (id)MEMORY[0x1C8753960](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    id v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(void *)unint64_t v3 = v4;
    return j__s19HealthMedicationsUI31MedicationInformationDataSourceC14DisplayContextOwxx;
  }
  __break(1u);
  return result;
}

void (*sub_1C1F72568(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  unint64_t v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    id v4 = (id)MEMORY[0x1C8753960](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    id v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(void *)unint64_t v3 = v4;
    return destroy for MedicationInformationDataSource.DisplayContext;
  }
  __break(1u);
  return result;
}

void destroy for MedicationInformationDataSource.DisplayContext(id *a1)
{
}

uint64_t (*sub_1C1F725F0(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  unint64_t v3 = (uint64_t *)result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    uint64_t v4 = MEMORY[0x1C8753960](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    uint64_t v4 = swift_retain();
LABEL_5:
    *unint64_t v3 = v4;
    return sub_1C1F72670;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C1F72670()
{
  return swift_release();
}

uint64_t _s19HealthMedicationsUI16ScheduleListItemO2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = *a2;
  uint64_t v5 = a2[1];
  if (a1[2])
  {
    if (a2[2])
    {
      if (v2 != v4 || v3 != v5)
      {
LABEL_15:
        char v7 = sub_1C214BA80();
        goto LABEL_17;
      }
LABEL_16:
      char v7 = 1;
      goto LABEL_17;
    }
  }
  else if ((a2[2] & 1) == 0)
  {
    if (v2 != v4 || v3 != v5) {
      goto LABEL_15;
    }
    goto LABEL_16;
  }
  char v7 = 0;
LABEL_17:
  sub_1C1F72768();
  sub_1C1F72768();
  sub_1C1F72770();
  sub_1C1F72770();
  return v7 & 1;
}

uint64_t sub_1C1F72768()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C1F72770()
{
  return swift_bridgeObjectRelease();
}

uint64_t destroy for ScheduleListItem()
{
  return sub_1C1F72770();
}

uint64_t _s19HealthMedicationsUI16ScheduleListItemOwCP_0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  char v5 = *((unsigned char *)a2 + 16);
  sub_1C1F72768();
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for ScheduleListItem(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  char v5 = *((unsigned char *)a2 + 16);
  sub_1C1F72768();
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  sub_1C1F72770();
  return a1;
}

uint64_t assignWithTake for ScheduleListItem(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v3;
  sub_1C1F72770();
  return a1;
}

ValueMetadata *type metadata accessor for ScheduleListItem()
{
  return &type metadata for ScheduleListItem;
}

void sub_1C1F72888(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  if (!*a2)
  {
    sub_1C1F248B4(255, a3);
    unint64_t v4 = sub_1C214BA50();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1C1F728E8()
{
  if (!qword_1EA2C31D8)
  {
    sub_1C1F7296C(255, (unint64_t *)&qword_1EA2C31E0, (unint64_t *)&qword_1EBF0C900, 0x1E4FB1618, MEMORY[0x1E4F29518]);
    unint64_t v0 = sub_1C214B4F0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C31D8);
    }
  }
}

void sub_1C1F7296C(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = sub_1C1F12718(255, a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

unint64_t sub_1C1F729D4()
{
  unint64_t result = qword_1EA2C3B70;
  if (!qword_1EA2C3B70)
  {
    sub_1C1F105C4(255, &qword_1EA2C3B68, MEMORY[0x1E4F26F90], MEMORY[0x1E4FBB320]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C3B70);
  }
  return result;
}

unint64_t sub_1C1F72A5C@<X0>(unint64_t *a1@<X0>, unint64_t *a2@<X8>)
{
  unint64_t result = sub_1C1F72308(*a1, **(void **)(v2 + 16));
  if (!v3) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1C1F72AA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WeekdaysAndDosages(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C1F72B04(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C1F72B6C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C1F72BCC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C1F72C14(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

void sub_1C1F72C70(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t type metadata accessor for StrengthStepViewController(uint64_t a1)
{
  return sub_1C1F20D10(a1, (uint64_t *)&unk_1EA2C3BF8);
}

uint64_t sub_1C1F72CE0()
{
  return swift_initClassMetadata2();
}

void sub_1C1F72D2C(unsigned char *a1@<X8>)
{
  *a1 = 32;
}

uint64_t sub_1C1F72D38()
{
  uint64_t v1 = (uint64_t (*)(uint64_t, uint64_t, void, unint64_t))MEMORY[0x1E4F1A930];
  sub_1C1F73798(0, &qword_1EA2C3C40, MEMORY[0x1E4F1A930]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)v9 - v5;
  v9[1] = *(void *)(*(void *)(v0 + qword_1EA2C4208) + 24);
  sub_1C1F73550();
  sub_1C1F73610();
  swift_retain();
  sub_1C214A020();
  swift_release();
  sub_1C1F73724(&qword_1EA2C3C48, &qword_1EA2C3C40, v1);
  uint64_t v7 = sub_1C2149FC0();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return v7;
}

uint64_t sub_1C1F72EDC@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  int v2 = *(unsigned __int8 *)(result + 24);
  if (v2 == 255) {
    char v3 = 0;
  }
  else {
    char v3 = v2 & 1;
  }
  *a2 = v3;
  return result;
}

id sub_1C1F72EF4()
{
  uint64_t v1 = qword_1EA2C3BF0;
  int v2 = *(void **)(v0 + qword_1EA2C3BF0);
  if (v2)
  {
    id v3 = *(id *)(v0 + qword_1EA2C3BF0);
  }
  else
  {
    id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28EE0]), sel_init);
    objc_msgSend(v4, sel_setNumberStyle_, 1);
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    int v2 = 0;
  }
  id v6 = v2;
  return v3;
}

uint64_t sub_1C1F72F7C()
{
  uint64_t v1 = (uint64_t (*)(uint64_t, uint64_t, void, unint64_t))MEMORY[0x1E4F1A818];
  sub_1C1F73798(0, &qword_1EA2C3C18, MEMORY[0x1E4F1A818]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  id v6 = (char *)v12 - v5;
  v12[1] = *(void *)(*(void *)&v0[qword_1EA2C4208] + 24);
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v0;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = sub_1C1F736A0;
  *(void *)(v8 + 24) = v7;
  sub_1C1F73550();
  sub_1C1F73610();
  swift_retain();
  unint64_t v9 = v0;
  sub_1C2149FD0();
  swift_release();
  swift_release();
  sub_1C1F73724(&qword_1EA2C3C38, &qword_1EA2C3C18, v1);
  uint64_t v10 = sub_1C2149FC0();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return v10;
}

uint64_t sub_1C1F73174(uint64_t a1, uint64_t a2, void *a3, unsigned __int8 a4)
{
  if (a4 == 0xFF) {
    return 0;
  }
  if (a4)
  {
    if (a2)
    {
      swift_bridgeObjectRetain_n();
      id v11 = a3;
      id v12 = sub_1C1F72EF4();
      unint64_t v13 = (void *)sub_1C214A5B0();
      swift_bridgeObjectRelease();
      id v14 = objc_msgSend(v12, sel_numberFromString_, v13);
      sub_1C1F73780(a1, a2, a3, a4);
      sub_1C1F73780(a1, a2, a3, a4);

      if (!v14)
      {
        char v9 = 0;
        return v9 & 1;
      }
    }
    else
    {
      sub_1C1F73780(a1, 0, a3, a4);
    }
    char v9 = 1;
  }
  else
  {
    swift_beginAccess();
    sub_1C1F73768(a1, a2, a3, a4);
    swift_retain();
    char v8 = sub_1C21496E0();
    sub_1C1F73780(a1, a2, a3, a4);
    swift_release();
    char v9 = v8 ^ 1;
  }
  return v9 & 1;
}

void sub_1C1F7330C(char *a1, uint64_t a2, void *a3)
{
  *(void *)&a1[qword_1EA2C3BF0] = 0;
  id v4 = a3;

  sub_1C214B910();
  __break(1u);
}

void sub_1C1F73384()
{
}

void sub_1C1F733A0()
{
}

id sub_1C1F733B0()
{
  return sub_1C1F73508(type metadata accessor for StrengthStepViewController);
}

void sub_1C1F733C8(uint64_t a1)
{
}

uint64_t sub_1C1F733D8()
{
  return type metadata accessor for StrengthStepViewController(0);
}

uint64_t type metadata accessor for ManualStrengthStepViewController(uint64_t a1)
{
  return sub_1C1F20D10(a1, (uint64_t *)&unk_1EA2C3C08);
}

uint64_t sub_1C1F73400()
{
  return swift_initClassMetadata2();
}

void sub_1C1F73440(unsigned char *a1@<X8>)
{
  *a1 = 33;
}

void sub_1C1F7344C()
{
}

void sub_1C1F734A8()
{
}

void sub_1C1F734C4()
{
}

id sub_1C1F734F0()
{
  return sub_1C1F73508(type metadata accessor for ManualStrengthStepViewController);
}

id sub_1C1F73508(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1(0);
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t sub_1C1F73548()
{
  return type metadata accessor for ManualStrengthStepViewController(0);
}

void sub_1C1F73550()
{
  if (!qword_1EA2C3C20)
  {
    sub_1C1F735B8();
    unint64_t v0 = sub_1C2149EA0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C3C20);
    }
  }
}

void sub_1C1F735B8()
{
  if (!qword_1EA2C3C28)
  {
    unint64_t v0 = sub_1C214B4F0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C3C28);
    }
  }
}

unint64_t sub_1C1F73610()
{
  unint64_t result = qword_1EA2C3C30;
  if (!qword_1EA2C3C30)
  {
    sub_1C1F73550();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C3C30);
  }
  return result;
}

uint64_t sub_1C1F73668()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C1F736A0(uint64_t a1, uint64_t a2, void *a3, unsigned __int8 a4)
{
  return sub_1C1F73174(a1, a2, a3, a4);
}

uint64_t sub_1C1F736A8()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C1F736E0@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void, void, void, void))(v2 + 16))(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned __int8 *)(a1 + 24));
  *a2 = result & 1;
  return result;
}

uint64_t sub_1C1F73724(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, void, unint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C1F73798(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C1F73768(uint64_t a1, uint64_t a2, void *a3, unsigned __int8 a4)
{
  if (a4 != 255) {
    sub_1C1F449C4(a1, a2, a3, a4 & 1);
  }
}

void sub_1C1F73780(uint64_t a1, uint64_t a2, void *a3, unsigned __int8 a4)
{
  if (a4 != 255) {
    sub_1C1F44A28(a1, a2, a3, a4 & 1);
  }
}

void sub_1C1F73798(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, void, unint64_t))
{
  if (!*a2)
  {
    sub_1C1F73550();
    uint64_t v7 = v6;
    unint64_t v8 = sub_1C1F73610();
    unint64_t v9 = a3(a1, v7, MEMORY[0x1E4FBB390], v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

uint64_t sub_1C1F7380C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v27 = a4;
  uint64_t v28 = a2;
  uint64_t v26 = a1;
  sub_1C1F73AC0();
  MEMORY[0x1F4188790](v7 - 8);
  unint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1C21491B0();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  unint64_t v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for MedicationSearchItem(0);
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(v4 + qword_1EA2C3BF0) = 0;
  sub_1C1F73B18(a1, (uint64_t)v17);
  uint64_t v30 = 0;
  uint64_t v31 = 0;
  if (a3) {
    char v18 = 0;
  }
  else {
    char v18 = -1;
  }
  uint64_t v29 = a3;
  char v32 = v18;
  sub_1C1F73550();
  swift_allocObject();
  id v19 = a3;
  uint64_t v20 = sub_1C2149EB0();
  uint64_t v21 = v27;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v27, v10);
  type metadata accessor for MedicationStrengthsDataSource();
  swift_allocObject();
  uint64_t v22 = sub_1C2070458((uint64_t)v17, v20, (uint64_t)v13);
  uint64_t v23 = v26;
  sub_1C1F73B18(v26, (uint64_t)v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v9, 0, 1, v14);
  uint64_t v24 = sub_1C2134B0C((uint64_t)v9, (uint64_t)v22, v28);
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v21, v10);
  sub_1C1F73B7C(v23);
  return v24;
}

void sub_1C1F73AC0()
{
  if (!qword_1EA2C2CC8)
  {
    type metadata accessor for MedicationSearchItem(255);
    unint64_t v0 = sub_1C214B4F0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C2CC8);
    }
  }
}

uint64_t sub_1C1F73B18(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MedicationSearchItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C1F73B7C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MedicationSearchItem(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for MedicationHeaderDataSource()
{
  uint64_t result = qword_1EA2C3C58;
  if (!qword_1EA2C3C58) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C1F73C24()
{
  return swift_initClassMetadata2();
}

void sub_1C1F73C70()
{
}

void sub_1C1F73C8C()
{
}

void sub_1C1F73CA8()
{
}

uint64_t sub_1C1F73CD4()
{
  sub_1C21489E0();

  return swift_deallocClassInstance();
}

uint64_t sub_1C1F73D04()
{
  return type metadata accessor for MedicationHeaderDataSource();
}

unsigned char *storeEnumTagSinglePayload for MedicationHeaderDataSource.State(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C1F73DD8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MedicationHeaderDataSource.State()
{
  return &type metadata for MedicationHeaderDataSource.State;
}

unint64_t sub_1C1F73E14()
{
  unint64_t result = qword_1EA2C3C68;
  if (!qword_1EA2C3C68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C3C68);
  }
  return result;
}

void *sub_1C1F73E68@<X0>(void *a1@<X8>)
{
  if (*(unsigned char *)(v1 + qword_1EA2C3C50))
  {
    uint64_t v3 = 0;
    unint64_t v4 = 0xE000000000000000;
  }
  else
  {
    if (qword_1EBF0CA00 != -1) {
      swift_once();
    }
    id v5 = (id)qword_1EBF0CA18;
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_1C2147730();
    unint64_t v4 = v6;
    swift_bridgeObjectRelease();
  }
  type metadata accessor for MedicationSummaryCollectionViewHeaderCell();
  sub_1C1F74018();
  uint64_t v7 = sub_1C21481D0();
  uint64_t v9 = v8;
  a1[3] = &type metadata for MedicationSummaryItem;
  a1[4] = sub_1C1F74070();
  unint64_t result = (void *)swift_allocObject();
  *a1 = result;
  result[2] = v3;
  result[3] = v4;
  result[4] = v7;
  result[5] = v9;
  return result;
}

void *sub_1C1F73FB4@<X0>(void *a1@<X8>)
{
  return sub_1C1F73E68(a1);
}

uint64_t sub_1C1F73FD8()
{
  return sub_1C214ACE0();
}

unint64_t sub_1C1F74018()
{
  unint64_t result = qword_1EA2C3C70;
  if (!qword_1EA2C3C70)
  {
    type metadata accessor for MedicationSummaryCollectionViewHeaderCell();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C3C70);
  }
  return result;
}

unint64_t sub_1C1F74070()
{
  unint64_t result = qword_1EA2C3C78;
  if (!qword_1EA2C3C78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C3C78);
  }
  return result;
}

uint64_t sub_1C1F740C4()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t type metadata accessor for NotificationFooterDataSource()
{
  uint64_t result = qword_1EA2C3C88;
  if (!qword_1EA2C3C88) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C1F74150()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1C1F7419C()
{
  uint64_t v0 = sub_1C2149C60();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1C2148710();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v14 - v9;
  sub_1C2148690();
  sub_1C2148650();
  uint64_t v11 = *(void (**)(char *, uint64_t))(v5 + 8);
  v11(v8, v4);
  sub_1C21486C0();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FB10F8], v0);
  sub_1C2148640();
  uint64_t v12 = sub_1C2148700();
  v11(v10, v4);
  return v12;
}

void sub_1C1F74374()
{
}

void sub_1C1F74390()
{
}

void sub_1C1F743AC()
{
}

uint64_t sub_1C1F743D8()
{
  return type metadata accessor for NotificationFooterDataSource();
}

uint64_t sub_1C1F743E0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = *v1;
  if (qword_1EBF0CA00 != -1) {
    swift_once();
  }
  id v4 = (id)qword_1EBF0CA18;
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_1C2147730();
  uint64_t v7 = v6;
  swift_bridgeObjectRelease();

  LOBYTE(v4) = *(unsigned char *)(v3 + qword_1EA2C3C80);
  type metadata accessor for SeparatorFooterCell();
  sub_1C1F75074();
  uint64_t v8 = sub_1C21481D0();
  uint64_t v10 = v9;
  a1[3] = (uint64_t)&type metadata for SeparatorFooterItem;
  a1[4] = sub_1C1F750C8();
  uint64_t result = swift_allocObject();
  *a1 = result;
  *(void *)(result + 16) = v5;
  *(void *)(result + 24) = v7;
  *(unsigned char *)(result + 32) = (_BYTE)v4;
  *(void *)(result + 40) = v8;
  *(void *)(result + 48) = v10;
  return result;
}

uint64_t sub_1C1F74528()
{
  return sub_1C214ACD0();
}

uint64_t sub_1C1F74564()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1C1F74594()
{
  return sub_1C214A610();
}

uint64_t sub_1C1F745C8()
{
  uint64_t v1 = sub_1C2149BE0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  id v4 = &v14[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = v0 + OBJC_IVAR____TtC19HealthMedicationsUI19SeparatorFooterCell_item;
  swift_beginAccess();
  sub_1C1F2116C(v5, (uint64_t)v15);
  if (!v16) {
    return sub_1C1F374E4((uint64_t)v15);
  }
  sub_1C1F1CB5C();
  uint64_t result = swift_dynamicCast();
  if (result)
  {
    char v7 = v14[24];
    sub_1C2149BB0();
    swift_bridgeObjectRetain();
    sub_1C2149B90();
    uint64_t v8 = (void (*)(uint64_t *, void))sub_1C2149B10();
    *uint64_t v9 = 0x4028000000000000;
    v8(v15, 0);
    uint64_t v10 = (void (*)(uint64_t *, void))sub_1C2149B10();
    *(void *)(v11 + 16) = 0x4028000000000000;
    v10(v15, 0);
    uint64_t v16 = v1;
    uint64_t v17 = MEMORY[0x1E4FB0F88];
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v15);
    (*(void (**)(uint64_t *, unsigned char *, uint64_t))(v2 + 16))(boxed_opaque_existential_1, v4, v1);
    MEMORY[0x1C8752FD0](v15);
    sub_1C1F748CC();
    id v13 = sub_1C1F747F8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    objc_msgSend(v13, sel_setHidden_, (v7 & 1) == 0);

    return (*(uint64_t (**)(unsigned char *, uint64_t))(v2 + 8))(v4, v1);
  }
  return result;
}

id sub_1C1F747F8()
{
  uint64_t v1 = OBJC_IVAR____TtC19HealthMedicationsUI19SeparatorFooterCell____lazy_storage___separatorView;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI19SeparatorFooterCell____lazy_storage___separatorView);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI19SeparatorFooterCell____lazy_storage___separatorView);
  }
  else
  {
    id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F67C08]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    id v5 = objc_msgSend(self, sel_separatorColor);
    objc_msgSend(v4, sel_setColor_, v5);

    uint64_t v6 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v7 = v2;
  return v3;
}

void sub_1C1F748CC()
{
  uint64_t v1 = v0;
  id v2 = objc_msgSend(v0, sel_contentView);
  id v3 = sub_1C1F747F8();
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8F0);
  char v4 = sub_1C214AE00();

  if ((v4 & 1) == 0)
  {
    id v5 = objc_msgSend(v1, sel_contentView);
    id v6 = sub_1C1F747F8();
    objc_msgSend(v5, sel_addSubview_, v6);

    id v7 = self;
    sub_1C1F0ED28();
    uint64_t v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_1C21510C0;
    id v9 = sub_1C1F747F8();
    id v10 = objc_msgSend(v9, sel_heightAnchor);

    id v11 = objc_msgSend(v10, sel_constraintEqualToConstant_, 0.5);
    *(void *)(v8 + 32) = v11;
    id v12 = sub_1C1F747F8();
    id v13 = objc_msgSend(v12, sel_leadingAnchor);

    id v14 = objc_msgSend(v1, sel_layoutMarginsGuide);
    id v15 = objc_msgSend(v14, sel_leadingAnchor);

    id v16 = objc_msgSend(v13, sel_constraintEqualToAnchor_, v15);
    *(void *)(v8 + 40) = v16;
    id v17 = sub_1C1F747F8();
    id v18 = objc_msgSend(v17, sel_trailingAnchor);

    id v19 = objc_msgSend(v1, sel_layoutMarginsGuide);
    id v20 = objc_msgSend(v19, sel_trailingAnchor);

    id v21 = objc_msgSend(v18, sel_constraintEqualToAnchor_, v20);
    *(void *)(v8 + 48) = v21;
    id v22 = sub_1C1F747F8();
    id v23 = objc_msgSend(v22, sel_topAnchor);

    id v24 = objc_msgSend(v1, sel_contentView);
    id v25 = objc_msgSend(v24, sel_topAnchor);

    id v26 = objc_msgSend(v23, sel_constraintEqualToAnchor_, v25);
    *(void *)(v8 + 56) = v26;
    sub_1C214A7A0();
    sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C810);
    id v27 = (id)sub_1C214A770();
    swift_bridgeObjectRelease();
    objc_msgSend(v7, sel_activateConstraints_, v27);
  }
}

id sub_1C1F74D44()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SeparatorFooterCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for SeparatorFooterCell()
{
  return self;
}

uint64_t sub_1C1F74DE8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI19SeparatorFooterCell_item;
  swift_beginAccess();
  return sub_1C1F2116C(v3, a1);
}

uint64_t sub_1C1F74E3C(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI19SeparatorFooterCell_item;
  swift_beginAccess();
  sub_1C1F32DDC(a1, v3);
  swift_endAccess();
  sub_1C1F745C8();
  return sub_1C1F374E4(a1);
}

uint64_t (*sub_1C1F74EAC(uint64_t a1))()
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1C1F74F0C;
}

uint64_t sub_1C1F74F10@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC19HealthMedicationsUI19SeparatorFooterCell_item;
  swift_beginAccess();
  return sub_1C1F2116C(v3, a1);
}

uint64_t sub_1C1F74F68(uint64_t a1)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC19HealthMedicationsUI19SeparatorFooterCell_item;
  swift_beginAccess();
  sub_1C1F32DDC(a1, v3);
  swift_endAccess();
  sub_1C1F745C8();
  return sub_1C1F374E4(a1);
}

uint64_t (*sub_1C1F74FDC(uint64_t a1))()
{
  *(void *)(a1 + 24) = *v1;
  swift_beginAccess();
  return sub_1C1F74F0C;
}

uint64_t sub_1C1F75040(uint64_t a1, char a2)
{
  uint64_t result = swift_endAccess();
  if ((a2 & 1) == 0) {
    return sub_1C1F745C8();
  }
  return result;
}

unint64_t sub_1C1F75074()
{
  unint64_t result = qword_1EA2C3CA8;
  if (!qword_1EA2C3CA8)
  {
    type metadata accessor for SeparatorFooterCell();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C3CA8);
  }
  return result;
}

unint64_t sub_1C1F750C8()
{
  unint64_t result = qword_1EA2C3CB0;
  if (!qword_1EA2C3CB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C3CB0);
  }
  return result;
}

uint64_t sub_1C1F7511C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t destroy for SeparatorFooterItem()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SeparatorFooterItem(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SeparatorFooterItem(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for SeparatorFooterItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SeparatorFooterItem(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SeparatorFooterItem(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SeparatorFooterItem()
{
  return &type metadata for SeparatorFooterItem;
}

unint64_t sub_1C1F7535C()
{
  unint64_t result = qword_1EA2C3CB8;
  if (!qword_1EA2C3CB8)
  {
    unint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA2C3CB8);
  }
  return result;
}

uint64_t MedicationShape.previewConfig.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1C2149390();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  id v6 = (char *)v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1F3BE6C();
  uint64_t v51 = *(void *)(v7 - 8);
  uint64_t v52 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v53 = (char *)v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1C2149540();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  id v12 = (char *)v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1F3BF0C();
  uint64_t v50 = v13;
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v44 = (char *)v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1C2148F60();
  uint64_t v41 = *(void *)(v16 - 8);
  uint64_t v42 = v16;
  MEMORY[0x1F4188790](v16);
  unint64_t v43 = (char *)v35 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1C2148F50();
  int64_t v19 = *(void *)(v18 + 16);
  if (v19)
  {
    id v36 = v12;
    uint64_t v37 = v10;
    uint64_t v38 = v9;
    uint64_t v39 = v1;
    uint64_t v40 = a1;
    uint64_t v54 = MEMORY[0x1E4FBC860];
    uint64_t v20 = v18;
    sub_1C1F70564(0, v19, 0);
    id v22 = *(void (**)(void, void, void))(v4 + 16);
    uint64_t v21 = v4 + 16;
    unint64_t v23 = (*(unsigned __int8 *)(v21 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 64);
    v35[1] = v20;
    unint64_t v24 = v20 + v23;
    uint64_t v46 = *(void *)(v21 + 56);
    uint64_t v47 = v22;
    uint64_t v45 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    uint64_t v48 = v21;
    uint64_t v49 = v3;
    id v25 = (void (**)(char *, uint64_t))(v21 - 8);
    uint64_t v26 = (uint64_t)v53;
    id v27 = (void (*)(char *, unint64_t, uint64_t))v22;
    do
    {
      v27(v6, v24, v3);
      char v28 = sub_1C2149380();
      uint64_t v29 = v26 + *(int *)(v52 + 48);
      v27((char *)v26, (unint64_t)v6, v3);
      if (v28)
      {
        sub_1C1F758A4();
        sub_1C214B190();
        sub_1C214A480();
        uint64_t v30 = 0;
      }
      else
      {
        uint64_t v30 = 1;
      }
      (*v45)(v29, v30, 1, v50);
      (*v25)(v6, v3);
      uint64_t v31 = v54;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C1F70564(0, *(void *)(v31 + 16) + 1, 1);
        uint64_t v31 = v54;
      }
      uint64_t v26 = (uint64_t)v53;
      unint64_t v33 = *(void *)(v31 + 16);
      unint64_t v32 = *(void *)(v31 + 24);
      if (v33 >= v32 >> 1)
      {
        sub_1C1F70564(v32 > 1, v33 + 1, 1);
        uint64_t v26 = (uint64_t)v53;
        uint64_t v31 = v54;
      }
      *(void *)(v31 + 16) = v33 + 1;
      sub_1C1F75A88(v26, v31+ ((*(unsigned __int8 *)(v51 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80))+ *(void *)(v51 + 72) * v33);
      v24 += v46;
      --v19;
      uint64_t v3 = v49;
    }
    while (v19);
    swift_bridgeObjectRelease();
    uint64_t v1 = v39;
    uint64_t v10 = v37;
    uint64_t v9 = v38;
    id v12 = v36;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v41 + 16))(v43, v1, v42);
  sub_1C1F758A4();
  sub_1C214B180();
  sub_1C214A480();
  (*(void (**)(char *, void, uint64_t))(v10 + 104))(v12, *MEMORY[0x1E4F66CE0], v9);
  return sub_1C21492B0();
}

unint64_t sub_1C1F758A4()
{
  unint64_t result = qword_1EBF0C900;
  if (!qword_1EBF0C900)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBF0C900);
  }
  return result;
}

uint64_t MedicationShape.shapeImage.getter()
{
  sub_1C1F75AEC(0, (unint64_t *)&qword_1EBF0B690, MEMORY[0x1E4F66C80], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v0 - 8);
  unint64_t v2 = (char *)&v9 - v1;
  uint64_t v3 = sub_1C21492D0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  id v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MedicationShape.previewConfig.getter((uint64_t)v6);
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v2, v6, v3);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v4 + 56))(v2, 0, 1, v3);
  uint64_t v7 = sub_1C1F647E8(104.0, 104.0, 1, (uint64_t)v2);
  sub_1C1F4CCB0((uint64_t)v2);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return v7;
}

uint64_t sub_1C1F75A88(uint64_t a1, uint64_t a2)
{
  sub_1C1F3BE6C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1C1F75AEC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t HKMedicationUserDomainConcept.medmojiConfiguration.getter@<X0>(uint64_t a1@<X8>)
{
  unint64_t v2 = v1;
  sub_1C1F7C74C(0, (unint64_t *)&qword_1EBF0B690, MEMORY[0x1E4F66C80], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v4 - 8);
  id v6 = (char *)&v13 - v5;
  id v7 = objc_msgSend(v2, sel_userVisualizationConfigJSONString);
  if (v7)
  {
    unint64_t v8 = v7;
    sub_1C214A5F0();

    sub_1C2149260();
    uint64_t v9 = sub_1C21492D0();
    uint64_t v10 = *(void *)(v9 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v6, 1, v9) != 1)
    {
      (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(a1, v6, v9);
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v10 + 56))(a1, 0, 1, v9);
    }
    sub_1C1F75DD4((uint64_t)v6, (uint64_t)&qword_1EBF0B690, MEMORY[0x1E4F66C80], MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C1F7C74C);
  }
  uint64_t v11 = sub_1C21492D0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(a1, 1, 1, v11);
}

uint64_t sub_1C1F75DD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v6 = a5(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
  return a1;
}

uint64_t sub_1C1F75E34@<X0>(uint64_t a1@<X8>)
{
  return HKMedicationUserDomainConcept.medmojiConfiguration.getter(a1);
}

unint64_t sub_1C1F75E58(uint64_t a1)
{
  unint64_t result = sub_1C1F75E80();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C1F75E80()
{
  unint64_t result = qword_1EBF0C8C8;
  if (!qword_1EBF0C8C8)
  {
    sub_1C1F12718(255, (unint64_t *)&qword_1EBF0C8C0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBF0C8C8);
  }
  return result;
}

uint64_t dispatch thunk of MedicationDoseLogMedicationItemRepresentable.medmojiConfiguration.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_1C1F75EFC()
{
  uint64_t v1 = v0;
  swift_getObjectType();
  uint64_t v2 = sub_1C21497F0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v85 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1F7C74C(0, (unint64_t *)&qword_1EBF0B690, MEMORY[0x1E4F66C80], MEMORY[0x1E4FBB718]);
  uint64_t v7 = MEMORY[0x1F4188790](v6 - 8);
  uint64_t v9 = (char *)&v85 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v85 - v10;
  uint64_t v12 = sub_1C21492D0();
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = *(void *)(v1 + OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationView_viewModel);
  if (v15)
  {
    uint64_t v16 = *(void **)(v1 + OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationView_lastDoseLabelContainer);
    uint64_t v17 = *(void *)(v15 + 32);
    id v86 = v9;
    uint64_t v87 = v14;
    id v85 = (char *)&v85 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
    swift_retain();
    if (v17)
    {
      swift_retain();
      char v18 = sub_1C2148E90();
      swift_release();
      char v19 = v18 ^ 1;
    }
    else
    {
      char v19 = 1;
    }
    objc_msgSend(v16, sel_setHidden_, v19 & 1, v85);
    uint64_t v27 = swift_retain();
    sub_1C1F7AD48(v27);
    sub_1C1F76D08();
    uint64_t v29 = v28;
    uint64_t v30 = (void *)sub_1C214A5B0();
    objc_msgSend(v29, sel_setText_, v30);

    id v31 = sub_1C1F76EF4();
    unint64_t v32 = (void *)sub_1C214A5B0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    objc_msgSend(v31, sel_setText_, v32);

    id v33 = sub_1C1F76FAC();
    id v34 = objc_msgSend(*(id *)(v15 + 16), sel_userSpecifiedNotes);
    objc_msgSend(v33, sel_setText_, v34);

    id v35 = sub_1C1F7702C();
    id v36 = *(void **)(v15 + 24);
    if (v36) {
      BOOL v37 = objc_msgSend(v36, sel_logOrigin) != (id)2;
    }
    else {
      BOOL v37 = *(void *)(v15 + 32) == 0;
    }
    objc_msgSend(v35, sel_setHidden_, v37);

    id v38 = objc_msgSend(*(id *)(v15 + 16), sel_userVisualizationConfigJSONString);
    if (v38)
    {
      uint64_t v39 = v38;
      sub_1C214A5F0();

      sub_1C2149260();
      uint64_t v40 = v87;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v87 + 48))(v11, 1, v12) == 1)
      {
        sub_1C1F75DD4((uint64_t)v11, (uint64_t)&qword_1EBF0B690, MEMORY[0x1E4F66C80], MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C1F7C74C);
      }
      else
      {
        uint64_t v41 = v85;
        (*(void (**)(char *, char *, uint64_t))(v40 + 32))(v85, v11, v12);
        id v42 = sub_1C1F76F14();
        unint64_t v43 = v86;
        (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v86, v41, v12);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v40 + 56))(v43, 0, 1, v12);
        sub_1C2148ED0();

        (*(void (**)(char *, uint64_t))(v40 + 8))(v41, v12);
      }
    }
    id v44 = objc_msgSend(*(id *)(v15 + 16), sel_userSpecifiedNotes);
    if (v44)
    {
      uint64_t v45 = v44;
      sub_1C214A5F0();

      sub_1C214A680();
      uint64_t v47 = v46;
      swift_bridgeObjectRelease();
      if (v47)
      {
        swift_bridgeObjectRelease();
        uint64_t v48 = *(void **)(v1 + OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationView_contentView);
        if (v48)
        {
          id v49 = v48;
          objc_msgSend(v49, sel_setSpacing_, 12.0);
          id v50 = sub_1C1F77C28();
          objc_msgSend(v49, sel_removeArrangedSubview_, v50);

          id v51 = sub_1C1F77AA0();
          objc_msgSend(v49, sel_addArrangedSubview_, v51);

          id v52 = sub_1C1F77AA0();
          id v53 = objc_msgSend(v52, sel_leadingAnchor);

          id v54 = objc_msgSend(v49, sel_leadingAnchor);
          id v55 = objc_msgSend(v53, sel_constraintEqualToAnchor_, v54);

          objc_msgSend(v55, sel_setActive_, 1);
          id v56 = sub_1C1F77AA0();
          id v57 = objc_msgSend(v56, sel_trailingAnchor);

          id v58 = objc_msgSend(v49, sel_trailingAnchor);
          id v59 = objc_msgSend(v57, sel_constraintEqualToAnchor_, v58);

          objc_msgSend(v59, sel_setActive_, 1);
          id v60 = sub_1C1F77FD0();
          id v61 = objc_msgSend(v60, sel_heightAnchor);

          id v62 = objc_msgSend(v61, sel_constraintEqualToConstant_, 0.5);
          objc_msgSend(v62, sel_setActive_, 1);

          id v63 = sub_1C1F77FD0();
          id v64 = objc_msgSend(v63, sel_leadingAnchor);

          id v65 = sub_1C1F77AA0();
          id v66 = objc_msgSend(v65, sel_leadingAnchor);

          id v67 = objc_msgSend(v64, sel_constraintEqualToAnchor_, v66);
          objc_msgSend(v67, sel_setActive_, 1);

          id v68 = sub_1C1F77FD0();
          id v69 = objc_msgSend(v68, sel_trailingAnchor);

          id v70 = sub_1C1F77AA0();
          id v71 = objc_msgSend(v70, sel_trailingAnchor);

          id v72 = objc_msgSend(v69, sel_constraintEqualToAnchor_, v71);
          objc_msgSend(v72, sel_setActive_, 1);

          id v73 = sub_1C1F77DA0();
          id v74 = objc_msgSend(v73, sel_leadingAnchor);

          id v75 = sub_1C1F77AA0();
          id v76 = objc_msgSend(v75, sel_leadingAnchor);

          id v77 = objc_msgSend(v74, sel_constraintEqualToAnchor_, v76);
          objc_msgSend(v77, sel_setActive_, 1);

          id v78 = sub_1C1F77DA0();
          id v79 = objc_msgSend(v78, sel_trailingAnchor);

          id v80 = sub_1C1F77AA0();
          id v81 = objc_msgSend(v80, sel_trailingAnchor);

          id v82 = objc_msgSend(v79, sel_constraintEqualToAnchor_, v81);
          objc_msgSend(v82, sel_setActive_, 1);
        }
      }
    }
    sub_1C1F76960();
    uint64_t v83 = *(void *)(v15 + 48);
    if (v83 == 4) {
      char v84 = 1;
    }
    else {
      char v84 = 2 * (v83 == 5);
    }
    sub_1C1F7C278(v84);
    return swift_release();
  }
  else
  {
    sub_1C21497A0();
    uint64_t v20 = sub_1C21497E0();
    os_log_type_t v21 = sub_1C214ABD0();
    if (os_log_type_enabled(v20, v21))
    {
      id v22 = (uint8_t *)swift_slowAlloc();
      uint64_t v23 = swift_slowAlloc();
      uint64_t v89 = v23;
      *(_DWORD *)id v22 = 136315138;
      uint64_t v24 = sub_1C214BC10();
      uint64_t v88 = sub_1C1F6FD54(v24, v25, &v89);
      sub_1C214B530();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C1F0B000, v20, v21, "[%s] Couldn't load viewModel", v22, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C8754730](v23, -1, -1);
      MEMORY[0x1C8754730](v22, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
}

void sub_1C1F76960()
{
  sub_1C214A5F0();
  sub_1C214A6C0();
  sub_1C214BA40();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  sub_1C214A6C0();
  sub_1C1F76D08();
  uint64_t v1 = v0;
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  uint64_t v2 = (void *)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_setAccessibilityIdentifier_, v2);

  id v3 = sub_1C1F76EF4();
  sub_1C214B7C0();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_1C214A6C0();
  uint64_t v4 = (void *)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setAccessibilityIdentifier_, v4);

  id v5 = sub_1C1F76FAC();
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  uint64_t v6 = (void *)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  objc_msgSend(v5, sel_setAccessibilityIdentifier_, v6);

  id v7 = sub_1C1F7702C();
  sub_1C214B7C0();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_1C214A6C0();
  uint64_t v8 = (void *)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  objc_msgSend(v7, sel_setAccessibilityIdentifier_, v8);

  id v9 = sub_1C1F771B4();
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  uint64_t v10 = (void *)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  objc_msgSend(v9, sel_setAccessibilityIdentifier_, v10);

  id v11 = sub_1C1F7733C();
  sub_1C214B7C0();
  swift_bridgeObjectRelease();
  sub_1C214A6C0();
  uint64_t v12 = (void *)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  objc_msgSend(v11, sel_setAccessibilityIdentifier_, v12);
}

void sub_1C1F76D08()
{
  uint64_t v1 = OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationView____lazy_storage___medicationNameLabel;
  uint64_t v2 = *(void **)(v0
                + OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationView____lazy_storage___medicationNameLabel);
  if (v2) {
    goto LABEL_4;
  }
  id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v3, sel_setAdjustsFontForContentSizeCategory_, 1);
  objc_msgSend(v3, sel_setNumberOfLines_, 0);
  id v4 = objc_msgSend(self, sel_labelColor);
  objc_msgSend(v3, sel_setTextColor_, v4);

  id v5 = self;
  id v6 = objc_msgSend(v5, sel_preferredFontForTextStyle_, *MEMORY[0x1E4FB2998]);
  id v7 = objc_msgSend(v6, sel_fontDescriptor);
  id v8 = objc_msgSend(v7, sel_fontDescriptorWithSymbolicTraits_, 32770);

  if (v8)
  {
    id v9 = v8;
    objc_msgSend(v6, sel_pointSize);
    id v10 = objc_msgSend(v5, sel_fontWithDescriptor_size_, v9);

    objc_msgSend(v3, sel_setFont_, v10);
    objc_msgSend(v3, sel_setNumberOfLines_, 0);
    objc_msgSend(v3, sel_setLineBreakMode_, 4);

    id v11 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v3;
    v3;

    uint64_t v2 = 0;
LABEL_4:
    id v12 = v2;
    return;
  }
  __break(1u);
}

id sub_1C1F76EF4()
{
  return sub_1C1F76FCC(&OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationView____lazy_storage___formStrengthLabel, (uint64_t (*)(void))sub_1C1F7B004);
}

id sub_1C1F76F14()
{
  uint64_t v1 = OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationView____lazy_storage___medmojiImageView;
  uint64_t v2 = *(void **)(v0
                + OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationView____lazy_storage___medmojiImageView);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationView____lazy_storage___medmojiImageView);
  }
  else
  {
    id v4 = objc_msgSend(objc_allocWithZone((Class)sub_1C2148EF0()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    id v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_1C1F76FAC()
{
  return sub_1C1F76FCC(&OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationView____lazy_storage___notesLabel, (uint64_t (*)(void))sub_1C1F7B32C);
}

id sub_1C1F76FCC(uint64_t *a1, uint64_t (*a2)(void))
{
  uint64_t v3 = *a1;
  id v4 = *(void **)(v2 + *a1);
  if (v4)
  {
    id v5 = *(id *)(v2 + *a1);
  }
  else
  {
    id v6 = (void *)a2();
    id v7 = *(void **)(v2 + v3);
    *(void *)(v2 + v3) = v6;
    id v5 = v6;

    id v4 = 0;
  }
  id v8 = v4;
  return v5;
}

id sub_1C1F7702C()
{
  uint64_t v1 = v0;
  sub_1C1F7C74C(0, &qword_1EBF0C920, MEMORY[0x1E4FB1290], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v2 - 8);
  id v4 = (char *)&v13 - v3;
  uint64_t v5 = OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationView____lazy_storage___skippedButton;
  id v6 = *(void **)(v1
                + OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationView____lazy_storage___skippedButton);
  if (v6)
  {
    id v7 = *(id *)(v1
               + OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationView____lazy_storage___skippedButton);
  }
  else
  {
    id v8 = objc_msgSend(self, sel_buttonWithType_, 1);
    sub_1C1F793BC(0, 0xD000000000000023, 0x80000001C215F130, (void *)0xD000000000000011);
    uint64_t v9 = sub_1C214B3D0();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v4, 0, 1, v9);
    sub_1C214B400();
    id v10 = *(void **)(v1 + v5);
    *(void *)(v1 + v5) = v8;
    id v7 = v8;

    id v6 = 0;
  }
  id v11 = v6;
  return v7;
}

id sub_1C1F771B4()
{
  uint64_t v1 = v0;
  sub_1C1F7C74C(0, &qword_1EBF0C920, MEMORY[0x1E4FB1290], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v2 - 8);
  id v4 = (char *)&v13 - v3;
  uint64_t v5 = OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationView____lazy_storage___takenButton;
  id v6 = *(void **)(v1
                + OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationView____lazy_storage___takenButton);
  if (v6)
  {
    id v7 = *(id *)(v1
               + OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationView____lazy_storage___takenButton);
  }
  else
  {
    id v8 = objc_msgSend(self, sel_buttonWithType_, 1);
    sub_1C1F793BC(0, 0xD000000000000021, 0x80000001C215F160, (void *)0xD000000000000015);
    uint64_t v9 = sub_1C214B3D0();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v4, 0, 1, v9);
    sub_1C214B400();
    id v10 = *(void **)(v1 + v5);
    *(void *)(v1 + v5) = v8;
    id v7 = v8;

    id v6 = 0;
  }
  id v11 = v6;
  return v7;
}

id sub_1C1F7733C()
{
  return sub_1C1F77DC0(&OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationView____lazy_storage___doseAmountTimeButton, (uint64_t (*)(uint64_t))sub_1C1F7735C);
}

void sub_1C1F7735C(void *a1)
{
  uint64_t v40 = sub_1C214B3D0();
  uint64_t v2 = *(void *)(v40 - 8);
  uint64_t v3 = MEMORY[0x1F4188790](v40);
  uint64_t v5 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  id v7 = (char *)&v39 - v6;
  id v8 = self;
  id v9 = objc_msgSend(v8, sel_preferredFontForTextStyle_, *MEMORY[0x1E4FB28C8]);
  id v10 = objc_msgSend(v9, sel_fontDescriptor);
  id v11 = objc_msgSend(v10, sel_fontDescriptorWithSymbolicTraits_, 32770);

  if (v11)
  {
    id v12 = v11;
    objc_msgSend(v9, sel_pointSize);
    id v13 = objc_msgSend(v8, sel_fontWithDescriptor_size_, v12);

    id v14 = objc_msgSend(self, sel_configurationWithFont_scale_, v13, 1);
    objc_msgSend(self, sel_userInterfaceLayoutDirectionForSemanticContentAttribute_, objc_msgSend(a1, sel_semanticContentAttribute));
    sub_1C214B380();
    id v15 = objc_msgSend(self, sel_tertiaryLabelColor);
    sub_1C214B320();
    sub_1C214B2B0();
    uint64_t v16 = (void *)sub_1C214A5B0();
    swift_bridgeObjectRelease();
    id v17 = objc_msgSend(self, sel_systemImageNamed_, v16);

    if (v17)
    {
      id v18 = objc_msgSend(v17, sel_imageWithConfiguration_, v14);
    }
    sub_1C214B370();
    sub_1C214B2D0();
    sub_1C214B2A0();
    sub_1C1F12718(0, &qword_1EBF0C928);
    (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v5, v7, v40);
    char v19 = (void *)sub_1C214B3E0();
    id v20 = objc_msgSend(v19, sel_titleLabel);
    if (v20)
    {
      os_log_type_t v21 = v20;
      id v22 = v12;
      objc_msgSend(v9, sel_pointSize);
      id v23 = objc_msgSend(v8, sel_fontWithDescriptor_size_, v22);

      objc_msgSend(v21, sel_setFont_, v23);
    }
    objc_msgSend(v19, sel_setContentHorizontalAlignment_, 1);
    id v24 = objc_msgSend(v19, sel_titleLabel);
    objc_msgSend(v24, sel_setNumberOfLines_, 2);

    unint64_t v25 = self;
    id v26 = v19;
    id v27 = objc_msgSend(v25, sel_mainScreen);
    objc_msgSend(v27, sel_bounds);
    CGFloat v29 = v28;
    CGFloat v31 = v30;
    CGFloat v33 = v32;
    CGFloat v35 = v34;

    v41.origin.x = v29;
    v41.origin.y = v31;
    v41.size.double width = v33;
    v41.size.double height = v35;
    CGFloat Width = CGRectGetWidth(v41);
    BOOL v37 = (id *)MEMORY[0x1E4FB2790];
    if (Width >= 414.0) {
      BOOL v37 = (id *)MEMORY[0x1E4FB2788];
    }
    id v38 = *v37;
    objc_msgSend(v26, sel_setMaximumContentSizeCategory_, v38);

    (*(void (**)(char *, uint64_t))(v2 + 8))(v7, v40);
  }
  else
  {
    __break(1u);
  }
}

id sub_1C1F77840()
{
  return sub_1C1F77DC0(&OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationView____lazy_storage___medicationStackView, (uint64_t (*)(uint64_t))sub_1C1F77860);
}

id sub_1C1F77860()
{
  sub_1C1F7CB04(0, (unint64_t *)&qword_1EBF0CA10, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1C2151E40;
  sub_1C1F76D08();
  *(void *)(v0 + 32) = v1;
  *(void *)(v0 + 40) = sub_1C1F76EF4();
  *(void *)(v0 + 48) = sub_1C1F7733C();
  sub_1C214A7A0();
  id v2 = objc_allocWithZone(MEMORY[0x1E4FB1C60]);
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8F0);
  uint64_t v3 = (void *)sub_1C214A770();
  swift_bridgeObjectRelease();
  id v4 = objc_msgSend(v2, sel_initWithArrangedSubviews_, v3);

  objc_msgSend(v4, sel_setAxis_, 1);
  objc_msgSend(v4, sel_setAlignment_, 1);
  objc_msgSend(v4, sel_setDistribution_, 0);
  objc_msgSend(v4, sel_setSpacing_, 2.0);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1C214FCB0;
  *(void *)(v5 + 32) = sub_1C1F76F14();
  *(void *)(v5 + 40) = v4;
  sub_1C214A7A0();
  id v6 = objc_allocWithZone(MEMORY[0x1E4FB1C60]);
  id v7 = v4;
  id v8 = (void *)sub_1C214A770();
  swift_bridgeObjectRelease();
  id v9 = objc_msgSend(v6, sel_initWithArrangedSubviews_, v8);

  objc_msgSend(v9, sel_setAxis_, 0);
  objc_msgSend(v9, sel_setAlignment_, 1);
  objc_msgSend(v7, sel_setDistribution_, 0);
  objc_msgSend(v9, sel_setSpacing_, 12.0);

  return v9;
}

id sub_1C1F77AA0()
{
  return sub_1C1F77DC0(&OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationView____lazy_storage___lowerSectionStackViewWithNotes, (uint64_t (*)(uint64_t))sub_1C1F77AC0);
}

id sub_1C1F77AC0()
{
  sub_1C1F7CB04(0, (unint64_t *)&qword_1EBF0CA10, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1C2151E40;
  *(void *)(v0 + 32) = sub_1C1F77FD0();
  *(void *)(v0 + 40) = sub_1C1F76FAC();
  *(void *)(v0 + 48) = sub_1C1F77DA0();
  sub_1C214A7A0();
  id v1 = objc_allocWithZone(MEMORY[0x1E4FB1C60]);
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8F0);
  id v2 = (void *)sub_1C214A770();
  swift_bridgeObjectRelease();
  id v3 = objc_msgSend(v1, sel_initWithArrangedSubviews_, v2);

  objc_msgSend(v3, sel_setAxis_, 1);
  objc_msgSend(v3, sel_setAlignment_, 1);
  objc_msgSend(v3, sel_setDistribution_, 0);
  objc_msgSend(v3, sel_setSpacing_, 12.0);
  objc_msgSend(v3, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  return v3;
}

id sub_1C1F77C28()
{
  return sub_1C1F77DC0(&OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationView____lazy_storage___lowerSectionStackView, (uint64_t (*)(uint64_t))sub_1C1F77C48);
}

id sub_1C1F77C48()
{
  sub_1C1F7CB04(0, (unint64_t *)&qword_1EBF0CA10, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1C214E170;
  *(void *)(v0 + 32) = sub_1C1F77DA0();
  sub_1C214A7A0();
  id v1 = objc_allocWithZone(MEMORY[0x1E4FB1C60]);
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8F0);
  id v2 = (void *)sub_1C214A770();
  swift_bridgeObjectRelease();
  id v3 = objc_msgSend(v1, sel_initWithArrangedSubviews_, v2);

  objc_msgSend(v3, sel_setAxis_, 1);
  objc_msgSend(v3, sel_setAlignment_, 1);
  objc_msgSend(v3, sel_setDistribution_, 0);
  objc_msgSend(v3, sel_setSpacing_, 10.0);
  objc_msgSend(v3, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  return v3;
}

id sub_1C1F77DA0()
{
  return sub_1C1F77DC0(&OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationView____lazy_storage___skippedTakenStackView, (uint64_t (*)(uint64_t))sub_1C1F77E24);
}

id sub_1C1F77DC0(uint64_t *a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v3 = *a1;
  id v4 = *(void **)(v2 + *a1);
  if (v4)
  {
    id v5 = *(id *)(v2 + *a1);
  }
  else
  {
    id v6 = (void *)a2(v2);
    id v7 = *(void **)(v2 + v3);
    *(void *)(v2 + v3) = v6;
    id v5 = v6;

    id v4 = 0;
  }
  id v8 = v4;
  return v5;
}

id sub_1C1F77E24(void *a1)
{
  sub_1C1F7CB04(0, (unint64_t *)&qword_1EBF0CA10, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1C214FCB0;
  *(void *)(v2 + 32) = sub_1C1F7702C();
  *(void *)(v2 + 40) = sub_1C1F771B4();
  sub_1C214A7A0();
  id v3 = objc_allocWithZone(MEMORY[0x1E4FB1C60]);
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8F0);
  id v4 = (void *)sub_1C214A770();
  swift_bridgeObjectRelease();
  id v5 = objc_msgSend(v3, sel_initWithArrangedSubviews_, v4);

  id v6 = objc_msgSend(a1, sel_traitCollection);
  id v7 = objc_msgSend(v6, sel_preferredContentSizeCategory);

  uint64_t v8 = sub_1C1F7B6CC((uint64_t)v7);
  objc_msgSend(v5, sel_setAxis_, v8);
  objc_msgSend(v5, sel_setAlignment_, 0);
  objc_msgSend(v5, sel_setDistribution_, 0);
  objc_msgSend(v5, sel_setSpacing_, 8.0);
  objc_msgSend(v5, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  return v5;
}

id sub_1C1F77FD0()
{
  uint64_t v1 = OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationView____lazy_storage___dividerView;
  uint64_t v2 = *(void **)(v0
                + OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationView____lazy_storage___dividerView);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationView____lazy_storage___dividerView);
  }
  else
  {
    id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1EB0]), sel_init);
    id v5 = objc_msgSend(self, sel_separatorColor);
    objc_msgSend(v4, sel_setBackgroundColor_, v5);

    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    id v6 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v7 = v2;
  return v3;
}

id sub_1C1F78098()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
  objc_msgSend(v0, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  if (qword_1EBF0CA00 != -1) {
    swift_once();
  }
  id v1 = (id)qword_1EBF0CA18;
  swift_bridgeObjectRetain();
  sub_1C2147730();
  swift_bridgeObjectRelease();

  sub_1C214A640();
  swift_bridgeObjectRelease();
  uint64_t v2 = (void *)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_setText_, v2, 0xE000000000000000);

  objc_msgSend(v0, sel_setNumberOfLines_, 0);
  objc_msgSend(v0, sel_setAdjustsFontForContentSizeCategory_, 1);
  id v3 = objc_msgSend(self, sel_preferredFontForTextStyle_, *MEMORY[0x1E4FB28F0]);
  objc_msgSend(v0, sel_setFont_, v3);

  id v4 = objc_msgSend(self, sel_labelColor);
  objc_msgSend(v0, sel_setTextColor_, v4);

  return v0;
}

id sub_1C1F78294()
{
  id v1 = v0;
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationView_lastDoseLabelContainer];
  id v3 = *(void **)&v1[OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationView_lastDoseLabel];
  objc_msgSend(v2, sel_addSubview_, v3);
  sub_1C214AEB0();
  objc_msgSend(v3, sel_hk_alignConstraintsWithView_insets_, v2);
  sub_1C1F7CB04(0, (unint64_t *)&qword_1EBF0CA10, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1C2151E40;
  *(void *)(v4 + 32) = v2;
  id v5 = v2;
  *(void *)(v4 + 40) = sub_1C1F77840();
  *(void *)(v4 + 48) = sub_1C1F77C28();
  sub_1C214A7A0();
  id v6 = objc_allocWithZone(MEMORY[0x1E4FB1C60]);
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8F0);
  id v7 = (void *)sub_1C214A770();
  swift_bridgeObjectRelease();
  id v8 = objc_msgSend(v6, sel_initWithArrangedSubviews_, v7);

  uint64_t v9 = OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationView_contentView;
  id v10 = *(void **)&v1[OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationView_contentView];
  *(void *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationView_contentView] = v8;

  id result = *(id *)&v1[v9];
  if (result)
  {
    id result = objc_msgSend(result, sel_setCustomSpacing_afterView_, v5, 8.0);
    id v12 = *(void **)&v1[v9];
    if (v12)
    {
      id v13 = v12;
      objc_msgSend(v13, sel_setAxis_, 1);
      objc_msgSend(v13, sel_setAlignment_, 1);
      objc_msgSend(v13, sel_setDistribution_, 0);
      objc_msgSend(v13, sel_setSpacing_, 17.0);
      objc_msgSend(v13, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
      objc_msgSend(v1, sel_addSubview_, v13);
      id v70 = self;
      uint64_t v14 = swift_allocObject();
      *(_OWORD *)(v14 + 16) = xmmword_1C2151E50;
      id v15 = objc_msgSend(v13, sel_topAnchor);
      id v16 = objc_msgSend(v1, sel_topAnchor);
      id v17 = objc_msgSend(v15, sel_constraintEqualToAnchor_, v16);

      *(void *)(v14 + 32) = v17;
      id v18 = objc_msgSend(v13, sel_leadingAnchor);
      id v19 = objc_msgSend(v1, sel_leadingAnchor);
      id v20 = objc_msgSend(v18, sel_constraintEqualToAnchor_, v19);

      *(void *)(v14 + 40) = v20;
      id v21 = objc_msgSend(v13, sel_trailingAnchor);
      id v22 = objc_msgSend(v1, sel_trailingAnchor);
      id v23 = objc_msgSend(v21, sel_constraintEqualToAnchor_, v22);

      *(void *)(v14 + 48) = v23;
      id v24 = objc_msgSend(v13, sel_bottomAnchor);
      id v25 = objc_msgSend(v1, sel_bottomAnchor);
      id v26 = objc_msgSend(v24, sel_constraintEqualToAnchor_, v25);

      *(void *)(v14 + 56) = v26;
      id v27 = sub_1C1F76F14();
      id v28 = objc_msgSend(v27, sel_topAnchor);

      id v29 = sub_1C1F77840();
      id v30 = objc_msgSend(v29, sel_topAnchor);

      id v31 = objc_msgSend(v28, sel_constraintEqualToAnchor_constant_, v30, 5.0);
      *(void *)(v14 + 64) = v31;
      id v32 = sub_1C1F76F14();
      id v33 = objc_msgSend(v32, sel_leadingAnchor);

      id v34 = sub_1C1F77840();
      id v35 = objc_msgSend(v34, sel_leadingAnchor);

      id v36 = objc_msgSend(v33, sel_constraintEqualToAnchor_, v35);
      *(void *)(v14 + 72) = v36;
      id v37 = sub_1C1F76F14();
      id v38 = objc_msgSend(v37, sel_widthAnchor);

      id v39 = objc_msgSend(v38, sel_constraintEqualToConstant_, 64.0);
      *(void *)(v14 + 80) = v39;
      id v40 = sub_1C1F76F14();
      id v41 = objc_msgSend(v40, sel_heightAnchor);

      id v42 = sub_1C1F76F14();
      id v43 = objc_msgSend(v42, sel_widthAnchor);

      id v44 = objc_msgSend(v41, sel_constraintEqualToAnchor_, v43);
      *(void *)(v14 + 88) = v44;
      id v45 = sub_1C1F77C28();
      id v46 = objc_msgSend(v45, sel_leadingAnchor);

      id v47 = objc_msgSend(v13, sel_leadingAnchor);
      id v48 = objc_msgSend(v46, sel_constraintEqualToAnchor_, v47);

      *(void *)(v14 + 96) = v48;
      id v49 = sub_1C1F77C28();
      id v50 = objc_msgSend(v49, sel_trailingAnchor);

      id v51 = objc_msgSend(v13, sel_trailingAnchor);
      id v52 = objc_msgSend(v50, sel_constraintEqualToAnchor_, v51);

      *(void *)(v14 + 104) = v52;
      id v53 = sub_1C1F77DA0();
      id v54 = objc_msgSend(v53, sel_leadingAnchor);

      id v55 = sub_1C1F77C28();
      id v56 = objc_msgSend(v55, sel_leadingAnchor);

      id v57 = objc_msgSend(v54, sel_constraintEqualToAnchor_, v56);
      *(void *)(v14 + 112) = v57;
      id v58 = sub_1C1F77DA0();
      id v59 = objc_msgSend(v58, sel_trailingAnchor);

      id v60 = sub_1C1F77C28();
      id v61 = objc_msgSend(v60, sel_trailingAnchor);

      id v62 = objc_msgSend(v59, sel_constraintEqualToAnchor_, v61);
      *(void *)(v14 + 120) = v62;
      sub_1C214A7A0();
      sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C810);
      id v63 = (void *)sub_1C214A770();
      swift_bridgeObjectRelease();
      objc_msgSend(v70, sel_activateConstraints_, v63);

      id v64 = sub_1C1F771B4();
      objc_msgSend(v64, sel_addTarget_action_forControlEvents_, v1, sel_didTapRecord_, 64);

      id v65 = sub_1C1F7702C();
      objc_msgSend(v65, sel_addTarget_action_forControlEvents_, v1, sel_didTapSkip_, 64);

      id v66 = sub_1C1F7733C();
      objc_msgSend(v66, sel_addTarget_action_forControlEvents_, v1, sel_didTapUnitTime_, 64);

      sub_1C1F7C74C(0, (unint64_t *)&qword_1EA2C3D80, (uint64_t (*)(uint64_t))sub_1C1F7C864, MEMORY[0x1E4FBBE00]);
      uint64_t v67 = swift_allocObject();
      *(_OWORD *)(v67 + 16) = xmmword_1C214FCD0;
      uint64_t v68 = sub_1C2149C70();
      uint64_t v69 = MEMORY[0x1E4FB1138];
      *(void *)(v67 + 32) = v68;
      *(void *)(v67 + 40) = v69;
      swift_allocObject();
      swift_unknownObjectWeakInit();
      sub_1C1F7C8F0();
      sub_1C214B120();

      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      return (id)swift_release();
    }
  }
  return result;
}

void sub_1C1F78B90(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a3 + 16;
  swift_beginAccess();
  uint64_t v5 = MEMORY[0x1C8754850](v4);
  if (v5)
  {
    id v6 = (void *)v5;
    type metadata accessor for MedicationDoseLogMedicationView();
    if ((sub_1C214AE10() & 1) == 0)
    {
      id v7 = sub_1C1F77DA0();
      id v8 = objc_msgSend(a1, sel_traitCollection);
      id v9 = objc_msgSend(v8, sel_preferredContentSizeCategory);

      uint64_t v10 = sub_1C1F7B6CC((uint64_t)v9);
      objc_msgSend(v7, sel_setAxis_, v10);

      id v6 = v7;
    }
  }
}

void sub_1C1F78C70()
{
  v16.receiver = v0;
  v16.super_class = (Class)type metadata accessor for MedicationDoseLogMedicationView();
  objc_msgSendSuper2(&v16, sel_layoutSubviews);
  sub_1C1F7CB04(0, (unint64_t *)&qword_1EA2C3DA0, MEMORY[0x1E4FBC840] + 8, MEMORY[0x1E4FBBE00]);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1C2150000;
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationView_lastDoseLabelContainer];
  objc_msgSend(v2, sel_frame);
  uint64_t v3 = MEMORY[0x1E4FBC958];
  *(void *)(v1 + 56) = MEMORY[0x1E4FBC958];
  *(void *)(v1 + 32) = v4;
  uint64_t v5 = *(void **)&v0[OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationView_lastDoseLabel];
  objc_msgSend(v5, sel_frame);
  *(void *)(v1 + 88) = v3;
  *(void *)(v1 + 64) = v6;
  id v7 = objc_msgSend(v5, sel_font);
  if (v7)
  {
    id v8 = v7;
    objc_msgSend(v7, sel_lineHeight);
    uint64_t v10 = v9;

    *(void *)(v1 + 120) = v3;
    *(void *)(v1 + 96) = v10;
    sub_1C214BB00();
    swift_bridgeObjectRelease();
    id v11 = objc_msgSend(v2, sel_layer);
    id v12 = objc_msgSend(v5, sel_font);
    if (v12)
    {
      id v13 = v12;
      objc_msgSend(v12, sel_pointSize);
      double v15 = v14;

      objc_msgSend(v11, sel_setCornerRadius_, v15 * 0.5 + 3.0);
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

id sub_1C1F78E78(double a1, double a2, double a3, double a4)
{
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationView_viewModel] = 0;
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationView_logDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationView____lazy_storage___timeFormatter] = 0;
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationView____lazy_storage___medicationNameLabel] = 0;
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationView____lazy_storage___formStrengthLabel] = 0;
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationView____lazy_storage___medmojiImageView] = 0;
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationView____lazy_storage___notesLabel] = 0;
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationView____lazy_storage___skippedButton] = 0;
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationView____lazy_storage___takenButton] = 0;
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationView____lazy_storage___doseAmountTimeButton] = 0;
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationView____lazy_storage___medicationStackView] = 0;
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationView____lazy_storage___lowerSectionStackViewWithNotes] = 0;
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationView____lazy_storage___lowerSectionStackView] = 0;
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationView____lazy_storage___skippedTakenStackView] = 0;
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationView____lazy_storage___dividerView] = 0;
  uint64_t v9 = OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationView_lastDoseLabel;
  uint64_t v10 = v4;
  *(void *)&v4[v9] = sub_1C1F78098();
  uint64_t v11 = OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationView_lastDoseLabelContainer;
  id v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1EB0]), sel_init);
  id v13 = objc_msgSend(self, sel_systemGray3Color);
  objc_msgSend(v12, sel_setBackgroundColor_, v13);

  objc_msgSend(v12, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  *(void *)&v10[v11] = v12;
  *(void *)&v10[OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationView_contentView] = 0;

  v16.receiver = v10;
  v16.super_class = (Class)type metadata accessor for MedicationDoseLogMedicationView();
  id v14 = objc_msgSendSuper2(&v16, sel_initWithFrame_, a1, a2, a3, a4);
  sub_1C1F78294();

  return v14;
}

void sub_1C1F790AC()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationView_viewModel);
  if (v1)
  {
    if (*(void *)(v1 + 48) == 5)
    {
      uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC19HealthMedicationsUI27MedicationsDoseLogViewModel_initialStatus);
      if ((unint64_t)(v2 - 1) >= 2) {
        uint64_t v2 = 6;
      }
    }
    else
    {
      uint64_t v2 = 5;
    }
    *(void *)(v1 + 48) = v2;
    uint64_t v3 = MEMORY[0x1C8754850](v0 + OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationView_logDelegate);
    swift_retain();
    if (v3)
    {
      sub_1C208A8F4(v1);
      swift_unknownObjectRelease();
    }
    uint64_t v4 = *(void *)(v1 + 48);
    if (v4 == 4) {
      char v5 = 1;
    }
    else {
      char v5 = 2 * (v4 == 5);
    }
    sub_1C1F7C278(v5);
    swift_release();
  }
}

void sub_1C1F791A4()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationView_viewModel);
  if (v1)
  {
    if (*(void *)(v1 + 48) == 4)
    {
      uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC19HealthMedicationsUI27MedicationsDoseLogViewModel_initialStatus);
      if ((unint64_t)(v2 - 1) >= 2) {
        uint64_t v2 = 6;
      }
    }
    else
    {
      uint64_t v2 = 4;
    }
    *(void *)(v1 + 48) = v2;
    uint64_t v3 = MEMORY[0x1C8754850](v0 + OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationView_logDelegate);
    swift_retain();
    if (v3)
    {
      sub_1C208A8F4(v1);
      swift_unknownObjectRelease();
    }
    uint64_t v4 = *(void *)(v1 + 48);
    if (v4 == 4) {
      char v5 = 1;
    }
    else {
      char v5 = 2 * (v4 == 5);
    }
    sub_1C1F7C278(v5);
    swift_release();
  }
}

uint64_t sub_1C1F7929C(void *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  swift_unknownObjectRetain();
  id v6 = a1;
  sub_1C214B5A0();
  uint64_t v7 = swift_unknownObjectRelease();
  a4(v7);

  return __swift_destroy_boxed_opaque_existential_0((uint64_t)&v9);
}

void sub_1C1F793BC(char a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v47 = a4;
  uint64_t v49 = a2;
  uint64_t v50 = a3;
  sub_1C1F7C74C(0, (unint64_t *)&unk_1EBF0C2E0, MEMORY[0x1E4F273A8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v5 - 8);
  id v51 = (char *)&v47 - v6;
  uint64_t v7 = sub_1C2147750();
  uint64_t v52 = *(void *)(v7 - 8);
  uint64_t v53 = v7;
  uint64_t v8 = MEMORY[0x1F4188790](v7);
  id v48 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v47 - v10;
  uint64_t v12 = sub_1C214B350();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  double v15 = (char *)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1C214B280();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  id v19 = (char *)&v47 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1) {
    sub_1C214B3A0();
  }
  else {
    sub_1C214B3B0();
  }
  (*(void (**)(char *, void, uint64_t))(v17 + 104))(v19, *MEMORY[0x1E4FB11F8], v16);
  sub_1C214B290();
  (*(void (**)(char *, void, uint64_t))(v13 + 104))(v15, *MEMORY[0x1E4FB1270], v12);
  sub_1C214B270();
  if (a1)
  {
    id v20 = self;
    uint64_t v21 = *MEMORY[0x1E4FB28C8];
    id v22 = objc_msgSend(v20, sel_preferredFontForTextStyle_, *MEMORY[0x1E4FB28C8], v47);
    id v23 = objc_msgSend(self, sel_configurationWithFont_scale_, v22, 2);

    swift_bridgeObjectRetain();
    id v24 = (void *)sub_1C214A5B0();
    swift_bridgeObjectRelease();
    id v25 = objc_msgSend(self, sel_systemImageNamed_, v24);

    if (v25)
    {
      id v26 = objc_msgSend(v25, sel_imageWithConfiguration_, v23);
    }
    sub_1C214B370();
    sub_1C214B2D0();
    sub_1C214B2A0();
  }
  else
  {
    id v27 = objc_msgSend(self, sel_systemBlueColor, v47);
    sub_1C214B320();
    uint64_t v21 = *MEMORY[0x1E4FB28C8];
  }
  id v28 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB0848]), sel_init);
  LODWORD(v29) = 1036831949;
  objc_msgSend(v28, sel_setHyphenationFactor_, v29);
  id v30 = self;
  id v31 = objc_msgSend(v30, sel_preferredFontForTextStyle_, v21);
  id v32 = objc_msgSend(v31, sel_fontDescriptor);

  id v33 = objc_msgSend(v32, sel_fontDescriptorWithSymbolicTraits_, 2);
  if (v33)
  {
    id v34 = objc_msgSend(v30, sel_fontWithDescriptor_size_, v33, 0.0);
    sub_1C1F7C74C(0, (unint64_t *)&unk_1EBF0C9A0, (uint64_t (*)(uint64_t))sub_1C1F7C7B0, MEMORY[0x1E4FBBE00]);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1C214FCC0;
    id v36 = (void *)*MEMORY[0x1E4FB06F8];
    *(void *)(inited + 32) = *MEMORY[0x1E4FB06F8];
    uint64_t v37 = sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8E0);
    *(void *)(inited + 40) = v34;
    id v38 = (void *)*MEMORY[0x1E4FB0738];
    *(void *)(inited + 64) = v37;
    *(void *)(inited + 72) = v38;
    *(void *)(inited + 104) = sub_1C1F12718(0, &qword_1EBF0C898);
    *(void *)(inited + 80) = v28;
    id v39 = v36;
    id v47 = v34;
    id v40 = v38;
    id v41 = v28;
    sub_1C1F49F18(inited);
    sub_1C2147760();
    if (qword_1EBF0CA00 != -1) {
      swift_once();
    }
    id v42 = (id)qword_1EBF0CA18;
    swift_bridgeObjectRetain();
    sub_1C2147730();
    swift_bridgeObjectRelease();

    uint64_t v44 = v52;
    uint64_t v43 = v53;
    (*(void (**)(char *, char *, uint64_t))(v52 + 16))(v48, v11, v53);
    id v45 = v51;
    sub_1C2147720();
    uint64_t v46 = sub_1C2147710();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(v45, 0, 1, v46);
    sub_1C214B2F0();

    (*(void (**)(char *, uint64_t))(v44 + 8))(v11, v43);
  }
  else
  {
    __break(1u);
  }
}

id sub_1C1F79A90()
{
  return sub_1C1F7A7F4(type metadata accessor for MedicationDoseLogMedicationView);
}

uint64_t type metadata accessor for MedicationDoseLogMedicationView()
{
  return self;
}

id sub_1C1F79C18()
{
  uint64_t v1 = OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationCell____lazy_storage___logView;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationCell____lazy_storage___logView);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationCell____lazy_storage___logView);
  }
  else
  {
    type metadata accessor for MedicationDoseLogMedicationView();
    id v4 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

uint64_t sub_1C1F79CA0()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1C21497F0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1F7C74C(0, (unint64_t *)&qword_1EBF0B690, MEMORY[0x1E4F66C80], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v25 - v7;
  uint64_t v9 = (uint64_t)v1 + OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationCell_item;
  swift_beginAccess();
  sub_1C1F2116C(v9, (uint64_t)v27);
  if (v28)
  {
    sub_1C1F23804(0, (unint64_t *)&qword_1EBF0C2F0);
    if (swift_dynamicCast())
    {
      if (*((void *)&v29 + 1))
      {
        sub_1C1F7ABDC((uint64_t)&v29, (uint64_t)v32);
        id v10 = sub_1C1F79C18();
        id v11 = sub_1C1F76F14();

        uint64_t v12 = v33;
        id v13 = *(id *)(v33 + 16);
        HKMedicationUserDomainConcept.medmojiConfiguration.getter((uint64_t)v8);

        sub_1C2148ED0();
        uint64_t v14 = (char *)sub_1C1F79C18();
        *(void *)&v14[OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationView_viewModel] = v12;
        swift_retain_n();
        swift_release();
        sub_1C1F75EFC();

        swift_release();
        double v15 = (char *)sub_1C1F79C18();
        MEMORY[0x1C8754850](v34);
        *(void *)&v15[OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationView_logDelegate + 8] = v34[1];
        swift_unknownObjectWeakAssign();

        swift_unknownObjectRelease();
        return sub_1C1F3CB1C((uint64_t)v32);
      }
    }
    else
    {
      uint64_t v31 = 0;
      long long v29 = 0u;
      long long v30 = 0u;
    }
  }
  else
  {
    sub_1C1F374E4((uint64_t)v27);
    long long v29 = 0u;
    long long v30 = 0u;
    uint64_t v31 = 0;
  }
  sub_1C1F75DD4((uint64_t)&v29, (uint64_t)&unk_1EA2C3D78, (uint64_t)&type metadata for MedicationDoseLogMedicationItem, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C1F7CB04);
  sub_1C21497A0();
  id v17 = v1;
  uint64_t v18 = sub_1C21497E0();
  os_log_type_t v19 = sub_1C214ABD0();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = swift_slowAlloc();
    uint64_t v26 = v2;
    uint64_t v21 = (uint8_t *)v20;
    uint64_t v22 = swift_slowAlloc();
    *(void *)&long long v29 = v22;
    *(_DWORD *)uint64_t v21 = 136315138;
    sub_1C1F2116C(v9, (uint64_t)v32);
    sub_1C1F5236C(0, (unint64_t *)&qword_1EBF0C300, (unint64_t *)&qword_1EBF0C2F0, MEMORY[0x1E4F66028], MEMORY[0x1E4FBB718]);
    uint64_t v23 = sub_1C214A630();
    v32[0] = sub_1C1F6FD54(v23, v24, (uint64_t *)&v29);
    sub_1C214B530();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C1F0B000, v18, v19, "Incorrect view model for MedicationDoseLogMedicationItem: %s", v21, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C8754730](v22, -1, -1);
    MEMORY[0x1C8754730](v21, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v26);
  }
  else
  {

    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
}

id sub_1C1F7A114(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = sub_1C2149BE0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1F7C74C(0, &qword_1EBF0C620, MEMORY[0x1E4FB0F28], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v13 - 8);
  double v15 = (char *)v35 - v14;
  uint64_t v16 = sub_1C21499D0();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  os_log_type_t v19 = (char *)v35 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationCell____lazy_storage___logView] = 0;
  uint64_t v20 = &v4[OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationCell_item];
  uint64_t v21 = (objc_class *)type metadata accessor for MedicationDoseLogMedicationCell();
  *(_OWORD *)uint64_t v20 = 0u;
  *((_OWORD *)v20 + 1) = 0u;
  *((void *)v20 + 4) = 0;
  v36.receiver = v4;
  v36.super_class = v21;
  id v22 = objc_msgSendSuper2(&v36, sel_initWithFrame_, a1, a2, a3, a4);
  sub_1C21499A0();
  sub_1C2149980();
  id v23 = objc_msgSend(self, sel_secondarySystemGroupedBackgroundColor);
  sub_1C2149990();
  (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v15, v19, v16);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v15, 0, 1, v16);
  id v24 = v22;
  MEMORY[0x1C8752FF0](v15);

  id v25 = objc_msgSend(v24, sel_contentView);
  id v26 = sub_1C1F79C18();
  objc_msgSend(v25, sel_addSubview_, v26);

  sub_1C2149B70();
  sub_1C2149B20();
  double v28 = v27;
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  id v29 = sub_1C1F79C18();
  id v30 = objc_msgSend(v24, sel_contentView);
  objc_msgSend(v29, sel_hk_alignConstraintsWithView_insets_, v30, v28, v28, v28, v28);

  uint64_t v31 = sub_1C1F7A56C();
  if (v31)
  {
    id v32 = v31;
    type metadata accessor for UILayoutPriority(0);
    v35[1] = 1065353216;
    void v35[2] = 1148846080;
    sub_1C1F7C81C(&qword_1EBF0C7D8, type metadata accessor for UILayoutPriority);
    sub_1C2149800();
    LODWORD(v33) = v35[3];
    objc_msgSend(v32, sel_setPriority_, v33);

    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  }
  return v24;
}

void *sub_1C1F7A56C()
{
  id v0 = sub_1C1F79C18();
  id v1 = objc_msgSend(v0, sel_constraints);

  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C810);
  unint64_t v2 = sub_1C214A780();

  if (v2 >> 62) {
    goto LABEL_14;
  }
  uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v3; uint64_t v3 = sub_1C214B930())
  {
    uint64_t v4 = 4;
    while (1)
    {
      id v5 = (v2 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1C8753960](v4 - 4, v2) : *(id *)(v2 + 8 * v4);
      uint64_t v6 = v5;
      uint64_t v7 = v4 - 3;
      if (__OFADD__(v4 - 4, 1)) {
        break;
      }
      if (objc_msgSend(v5, sel_firstAttribute) == (id)4)
      {
        swift_bridgeObjectRelease_n();
        return v6;
      }

      ++v4;
      if (v7 == v3) {
        goto LABEL_10;
      }
    }
    __break(1u);
LABEL_14:
    swift_bridgeObjectRetain();
  }
LABEL_10:
  swift_bridgeObjectRelease_n();
  return 0;
}

id sub_1C1F7A7DC()
{
  return sub_1C1F7A7F4(type metadata accessor for MedicationDoseLogMedicationCell);
}

id sub_1C1F7A7F4(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t type metadata accessor for MedicationDoseLogMedicationCell()
{
  return self;
}

uint64_t sub_1C1F7A89C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationCell_item;
  swift_beginAccess();
  return sub_1C1F2116C(v3, a1);
}

uint64_t sub_1C1F7A8F0(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationCell_item;
  swift_beginAccess();
  sub_1C1F32DDC(a1, v3);
  swift_endAccess();
  sub_1C1F79CA0();
  return sub_1C1F374E4(a1);
}

uint64_t (*sub_1C1F7A960(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1C1F7A9C0;
}

uint64_t sub_1C1F7A9C0(uint64_t a1, char a2)
{
  uint64_t result = swift_endAccess();
  if ((a2 & 1) == 0) {
    return sub_1C1F79CA0();
  }
  return result;
}

unint64_t sub_1C1F7A9F4()
{
  return 0xD000000000000016;
}

uint64_t sub_1C1F7AA74()
{
  return sub_1C214BB80();
}

uint64_t sub_1C1F7AAE0()
{
  sub_1C214A690();
  sub_1C20B7378();
  sub_1C214A690();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1C1F7AB3C()
{
  return sub_1C214BB80();
}

uint64_t sub_1C1F7ABA4()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1C1F7ABDC(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a2 = *(_OWORD *)a1;
  *(void *)(a2 + 16) = *(void *)(a1 + 16);
  swift_unknownObjectWeakTakeInit();
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  return a2;
}

uint64_t sub_1C1F7AC28()
{
  return 1;
}

uint64_t sub_1C1F7AD48(uint64_t a1)
{
  id v2 = *(id *)(a1 + 16);
  _sSo29HKMedicationUserDomainConceptC19HealthMedicationsUIE8doseFormSSSgvg_0();

  id v3 = *(id *)(a1 + 16);
  _sSo29HKMedicationUserDomainConceptC19HealthMedicationsUIE8strengthSSSgvg_0();

  id v4 = objc_msgSend(*(id *)(a1 + 16), sel_userSpecifiedName);
  if (v4)
  {
    id v5 = v4;
    sub_1C214A5F0();

    uint64_t v6 = sub_1C214A680();
    uint64_t v8 = v7;
    swift_bridgeObjectRelease();
    if (v8)
    {
      swift_bridgeObjectRelease();
      sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8C0);
      sub_1C2149470();
      id v9 = *(id *)(a1 + 16);
      sub_1C214B000();
      uint64_t v11 = v10;

      if (v11) {
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRetain();
      sub_1C214A680();
      uint64_t v13 = v12;
      swift_bridgeObjectRelease();
      if (!v13)
      {
        swift_bridgeObjectRelease();
        goto LABEL_13;
      }
      goto LABEL_11;
    }
  }
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8C0);
  uint64_t v6 = sub_1C2149490();
  sub_1C214A680();
  uint64_t v15 = v14;
  swift_bridgeObjectRelease();
  if (!v15) {
    swift_bridgeObjectRelease();
  }
  sub_1C214A680();
  uint64_t v17 = v16;
  swift_bridgeObjectRelease();
  if (v17)
  {
    swift_bridgeObjectRetain();
LABEL_11:
    sub_1C214A680();
    uint64_t v19 = v18;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v19)
    {
      sub_1C214A6C0();
      swift_bridgeObjectRelease();
      sub_1C214A6C0();
    }
  }
LABEL_13:
  swift_bridgeObjectRelease();
  swift_release();
  return v6;
}

void sub_1C1F7B004()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v0, sel_setAdjustsFontForContentSizeCategory_, 1);
  objc_msgSend(v0, sel_setNumberOfLines_, 0);
  uint64_t v1 = self;
  id v2 = objc_msgSend(v1, sel_labelColor);
  objc_msgSend(v0, sel_setTextColor_, v2);

  id v3 = objc_msgSend(v1, sel_secondaryLabelColor);
  objc_msgSend(v0, sel_setTextColor_, v3);

  id v4 = self;
  id v5 = objc_msgSend(v4, sel_preferredFontForTextStyle_, *MEMORY[0x1E4FB28C8]);
  id v6 = objc_msgSend(v5, sel_fontDescriptor);
  id v7 = objc_msgSend(v6, sel_fontDescriptorWithSymbolicTraits_, 0x8000);

  if (v7)
  {
    id v8 = v7;
    objc_msgSend(v5, sel_pointSize);
    id v9 = objc_msgSend(v4, sel_fontWithDescriptor_size_, v8);

    objc_msgSend(v0, sel_setFont_, v9);
    objc_msgSend(v0, sel_setNumberOfLines_, 2);
    objc_msgSend(v0, sel_setLineBreakMode_, 2);
    uint64_t v10 = self;
    id v11 = v0;
    id v12 = objc_msgSend(v10, sel_mainScreen);
    objc_msgSend(v12, sel_bounds);
    CGFloat v14 = v13;
    CGFloat v16 = v15;
    CGFloat v18 = v17;
    CGFloat v20 = v19;

    v33.origin.x = v14;
    v33.origin.y = v16;
    v33.size.double width = v18;
    v33.size.double height = v20;
    if (CGRectGetWidth(v33) >= 390.0)
    {
      id v22 = objc_msgSend(v10, sel_mainScreen);
      objc_msgSend(v22, sel_bounds);
      CGFloat v24 = v23;
      CGFloat v26 = v25;
      CGFloat v28 = v27;
      CGFloat v30 = v29;

      v34.origin.x = v24;
      v34.origin.y = v26;
      v34.size.double width = v28;
      v34.size.double height = v30;
      CGFloat Width = CGRectGetWidth(v34);
      uint64_t v21 = (id *)MEMORY[0x1E4FB2780];
      if (Width < 414.0) {
        uint64_t v21 = (id *)MEMORY[0x1E4FB2788];
      }
    }
    else
    {
      uint64_t v21 = (id *)MEMORY[0x1E4FB2790];
    }
    id v32 = *v21;
    objc_msgSend(v11, sel_setMaximumContentSizeCategory_, v32);

    objc_msgSend(v11, sel_setLineBreakMode_, 4);
  }
  else
  {
    __break(1u);
  }
}

id sub_1C1F7B32C()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v0, sel_setAdjustsFontForContentSizeCategory_, 1);
  objc_msgSend(v0, sel_setNumberOfLines_, 0);
  uint64_t v1 = self;
  id v2 = objc_msgSend(v1, sel_labelColor);
  objc_msgSend(v0, sel_setTextColor_, v2);

  objc_msgSend(v0, sel_setNumberOfLines_, 0);
  id v3 = objc_msgSend(v1, sel_secondaryLabelColor);
  objc_msgSend(v0, sel_setTextColor_, v3);

  id v4 = objc_msgSend(self, sel_preferredFontForTextStyle_, *MEMORY[0x1E4FB28C8]);
  objc_msgSend(v0, sel_setFont_, v4);

  id v5 = self;
  id v6 = v0;
  id v7 = objc_msgSend(v5, sel_mainScreen);
  objc_msgSend(v7, sel_bounds);
  CGFloat v9 = v8;
  CGFloat v11 = v10;
  CGFloat v13 = v12;
  CGFloat v15 = v14;

  v20.origin.x = v9;
  v20.origin.y = v11;
  v20.size.double width = v13;
  v20.size.double height = v15;
  CGFloat Width = CGRectGetWidth(v20);
  double v17 = (id *)MEMORY[0x1E4FB2788];
  if (Width >= 414.0) {
    double v17 = (id *)MEMORY[0x1E4FB2780];
  }
  id v18 = *v17;
  objc_msgSend(v6, sel_setMaximumContentSizeCategory_, v18);

  return v6;
}

BOOL sub_1C1F7B538()
{
  if (qword_1EBF0CA00 != -1) {
    swift_once();
  }
  id v0 = (id)qword_1EBF0CA18;
  swift_bridgeObjectRetain();
  sub_1C2147730();
  swift_bridgeObjectRelease();

  id v1 = (id)qword_1EBF0CA18;
  swift_bridgeObjectRetain();
  sub_1C2147730();
  swift_bridgeObjectRelease();

  uint64_t v2 = sub_1C214A6A0();
  swift_bridgeObjectRelease();
  if (v2 < 8)
  {
    uint64_t v4 = sub_1C214A6A0();
    swift_bridgeObjectRelease();
    return v4 > 7;
  }
  else
  {
    swift_bridgeObjectRelease();
    return 1;
  }
}

uint64_t sub_1C1F7B6CC(uint64_t a1)
{
  sub_1C1F7C74C(0, (unint64_t *)&unk_1EBF0C9B0, (uint64_t (*)(uint64_t))type metadata accessor for UIContentSizeCategory, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C2151E60;
  id v3 = (void *)*MEMORY[0x1E4FB2798];
  uint64_t v4 = (void *)*MEMORY[0x1E4FB2790];
  *(void *)(inited + 32) = *MEMORY[0x1E4FB2798];
  *(void *)(inited + 40) = v4;
  id v5 = (void *)*MEMORY[0x1E4FB2788];
  id v6 = (void *)*MEMORY[0x1E4FB2780];
  *(void *)(inited + 48) = *MEMORY[0x1E4FB2788];
  *(void *)(inited + 56) = v6;
  id v7 = (void *)*MEMORY[0x1E4FB2778];
  *(void *)(inited + 64) = *MEMORY[0x1E4FB2778];
  id v8 = v3;
  id v9 = v4;
  id v10 = v5;
  id v11 = v6;
  id v12 = v7;
  LOBYTE(v6) = sub_1C1F7B538();
  CGFloat v13 = self;
  id v14 = objc_msgSend(v13, sel_mainScreen);
  objc_msgSend(v14, sel_bounds);
  CGFloat v16 = v15;
  CGFloat v18 = v17;
  CGFloat v20 = v19;
  CGFloat v22 = v21;

  v72.origin.x = v16;
  v72.origin.y = v18;
  v72.size.double width = v20;
  v72.size.double height = v22;
  double Width = CGRectGetWidth(v72);
  if (v6)
  {
    if (Width < 414.0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    uint64_t v71 = a1;
    id v35 = (void *)*MEMORY[0x1E4FB27D0];
    objc_super v36 = (void *)*MEMORY[0x1E4FB27C0];
    uint64_t v37 = (void *)*MEMORY[0x1E4FB27B8];
    id v38 = (void *)*MEMORY[0x1E4FB27B0];
    id v39 = (id)*MEMORY[0x1E4FB27D8];
    id v40 = v35;
    id v41 = v36;
    id v42 = v37;
    id v43 = v38;
    uint64_t inited = (uint64_t)sub_1C1F3B340((void *)1, 10, 1, (void *)inited);
    unint64_t v45 = *(void *)(inited + 16);
    unint64_t v44 = *(void *)(inited + 24);
    unint64_t v46 = v45 + 1;
    id v47 = v39;
    if (v45 >= v44 >> 1) {
      uint64_t inited = (uint64_t)sub_1C1F3B340((void *)(v44 > 1), v45 + 1, 1, (void *)inited);
    }
    *(void *)(inited + 16) = v46;
    *(void *)(inited + 8 * v45 + 32) = v47;
    unint64_t v48 = *(void *)(inited + 24);
    unint64_t v49 = v45 + 2;
    id v34 = v40;
    if ((uint64_t)(v45 + 2) > (uint64_t)(v48 >> 1)) {
      uint64_t inited = (uint64_t)sub_1C1F3B340((void *)(v48 > 1), v45 + 2, 1, (void *)inited);
    }
    *(void *)(inited + 16) = v49;
    *(void *)(inited + 8 * v46 + 32) = v34;
    unint64_t v50 = *(void *)(inited + 24);
    unint64_t v51 = v45 + 3;
    id v52 = v41;
    if ((uint64_t)(v45 + 3) > (uint64_t)(v50 >> 1)) {
      uint64_t inited = (uint64_t)sub_1C1F3B340((void *)(v50 > 1), v45 + 3, 1, (void *)inited);
    }
    id v70 = v47;
    *(void *)(inited + 16) = v51;
    *(void *)(inited + 8 * v49 + 32) = v52;
    unint64_t v53 = *(void *)(inited + 24);
    unint64_t v54 = v45 + 4;
    id v55 = v42;
    id v56 = v43;
    if ((uint64_t)(v45 + 4) > (uint64_t)(v53 >> 1)) {
      uint64_t inited = (uint64_t)sub_1C1F3B340((void *)(v53 > 1), v45 + 4, 1, (void *)inited);
    }
    *(void *)(inited + 16) = v54;
    *(void *)(inited + 8 * v51 + 32) = v55;
    unint64_t v57 = *(void *)(inited + 24);
    unint64_t v58 = v45 + 5;
    id v59 = v56;
    if ((uint64_t)(v45 + 5) > (uint64_t)(v57 >> 1)) {
      uint64_t inited = (uint64_t)sub_1C1F3B340((void *)(v57 > 1), v45 + 5, 1, (void *)inited);
    }
    a1 = v71;
    *(void *)(inited + 16) = v58;
    *(void *)(inited + 8 * v54 + 32) = v59;

    goto LABEL_23;
  }
  if (Width < 390.0)
  {
    double v25 = (void *)*MEMORY[0x1E4FB27B0];
    id v26 = (id)*MEMORY[0x1E4FB27B8];
    id v27 = v25;
    uint64_t inited = (uint64_t)sub_1C1F3B340((void *)1, 7, 1, (void *)inited);
    unint64_t v28 = *(void *)(inited + 16);
    unint64_t v29 = *(void *)(inited + 24);
    unint64_t v30 = v28 + 1;
    id v31 = v26;
    if (v28 >= v29 >> 1) {
      uint64_t inited = (uint64_t)sub_1C1F3B340((void *)(v29 > 1), v28 + 1, 1, (void *)inited);
    }
    *(void *)(inited + 16) = v30;
    *(void *)(inited + 8 * v28 + 32) = v31;
    unint64_t v32 = *(void *)(inited + 24);
    int64_t v33 = v28 + 2;
    id v34 = v27;
    if (v33 > (uint64_t)(v32 >> 1)) {
      uint64_t inited = (uint64_t)sub_1C1F3B340((void *)(v32 > 1), v33, 1, (void *)inited);
    }
    *(void *)(inited + 16) = v33;
    *(void *)(inited + 8 * v30 + 32) = v34;

    goto LABEL_23;
  }
  id v60 = objc_msgSend(v13, sel_mainScreen);
  objc_msgSend(v60, sel_bounds);
  CGFloat v62 = v61;
  CGFloat v64 = v63;
  CGFloat v66 = v65;
  CGFloat v68 = v67;

  v73.origin.x = v62;
  v73.origin.y = v64;
  v73.size.double width = v66;
  v73.size.double height = v68;
  if (CGRectGetWidth(v73) < 414.0)
  {
    id v34 = (id)*MEMORY[0x1E4FB27B0];
    uint64_t inited = (uint64_t)sub_1C1F3B340((void *)1, 6, 1, (void *)inited);
    *(void *)(inited + 16) = 6;
    *(void *)(inited + 72) = v34;
LABEL_23:
  }
  char v69 = sub_1C20BFE04(a1, inited);
  swift_bridgeObjectRelease();
  return v69 & 1;
}

uint64_t sub_1C1F7BC18(uint64_t a1)
{
  uint64_t v2 = sub_1C2147AC0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  id v5 = (char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = *(void *)(a1 + 16);
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8C0);
  uint64_t v6 = sub_1C2149030();
  uint64_t v49 = v7;
  uint64_t v50 = v6;
  id v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28C10]), sel_init);
  objc_msgSend(v8, sel_setDateStyle_, 0);
  objc_msgSend(v8, sel_setTimeStyle_, 1);
  uint64_t v9 = a1 + OBJC_IVAR____TtC19HealthMedicationsUI27MedicationsDoseLogViewModel_logDate;
  swift_beginAccess();
  id v10 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v10(v5, v9, v2);
  id v11 = (void *)sub_1C2147A00();
  id v12 = *(void (**)(char *, uint64_t))(v3 + 8);
  v12(v5, v2);
  id v13 = objc_msgSend(v8, sel_stringFromDate_, v11);

  uint64_t v47 = sub_1C214A5F0();
  uint64_t v46 = v14;

  double v15 = (void *)sub_1C214A5B0();
  v10(v5, v9, v2);
  CGFloat v16 = (void *)sub_1C2147A00();
  v12(v5, v2);
  id v45 = v8;
  id v17 = objc_msgSend(v8, sel_hm_localizableTimeStringKeyWithPrefix_date_, v15, v16);

  sub_1C214A5F0();
  if (qword_1EBF0CA00 != -1) {
    swift_once();
  }
  CGFloat v18 = (void *)qword_1EBF0CA18;
  sub_1C1F5236C(0, qword_1EBF0B8A0, (unint64_t *)&qword_1EBF0C9F0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
  uint64_t v19 = swift_allocObject();
  long long v48 = xmmword_1C214FCC0;
  *(_OWORD *)(v19 + 16) = xmmword_1C214FCC0;
  uint64_t v20 = MEMORY[0x1E4FBB1A0];
  *(void *)(v19 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v21 = sub_1C1F31298();
  uint64_t v22 = v49;
  *(void *)(v19 + 32) = v50;
  *(void *)(v19 + 40) = v22;
  *(void *)(v19 + 96) = v20;
  *(void *)(v19 + 104) = v21;
  uint64_t v23 = v47;
  *(void *)(v19 + 64) = v21;
  *(void *)(v19 + 72) = v23;
  *(void *)(v19 + 80) = v46;
  id v24 = v18;
  swift_bridgeObjectRetain();
  sub_1C2147730();
  if (*(void *)(v19 + 16))
  {
    sub_1C214A5C0();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  double v25 = self;
  id v26 = objc_msgSend(v25, sel_preferredFontForTextStyle_, *MEMORY[0x1E4FB28C8]);
  id v27 = objc_msgSend(v26, sel_fontDescriptor);
  id v28 = objc_msgSend(v27, sel_fontDescriptorWithSymbolicTraits_, 32770);

  sub_1C1F7C74C(0, (unint64_t *)&unk_1EBF0C9A0, (uint64_t (*)(uint64_t))sub_1C1F7C7B0, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  unint64_t v30 = (void **)MEMORY[0x1E4FB0700];
  *(_OWORD *)(inited + 16) = v48;
  id v31 = *v30;
  *(void *)(inited + 32) = *v30;
  unint64_t v32 = self;
  id v33 = v31;
  id v34 = objc_msgSend(v32, sel_systemBlueColor);
  uint64_t result = sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C900);
  *(void *)(inited + 40) = v34;
  objc_super v36 = (void *)*MEMORY[0x1E4FB06F8];
  *(void *)(inited + 64) = result;
  *(void *)(inited + 72) = v36;
  if (v28)
  {
    id v37 = v36;
    id v38 = v28;
    objc_msgSend(v26, sel_pointSize);
    id v39 = objc_msgSend(v25, sel_fontWithDescriptor_size_, v38);

    *(void *)(inited + 104) = sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8E0);
    *(void *)(inited + 80) = v39;
    sub_1C1F49F18(inited);
    id v40 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
    id v41 = (void *)sub_1C214A5B0();
    swift_bridgeObjectRelease();
    type metadata accessor for Key(0);
    sub_1C1F7C81C((unint64_t *)&qword_1EBF0C850, type metadata accessor for Key);
    id v42 = (void *)sub_1C214A500();
    swift_bridgeObjectRelease();
    id v43 = objc_msgSend(v40, sel_initWithString_attributes_, v41, v42);

    return (uint64_t)v43;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1C1F7C278(char a1)
{
  sub_1C1F7C74C(0, &qword_1EBF0C920, MEMORY[0x1E4FB1290], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v3 - 8);
  id v5 = (char *)v36 - v4;
  uint64_t v6 = *(void *)(v1 + OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationView_viewModel);
  if (v6)
  {
    uint64_t v7 = swift_retain();
    id v8 = (void *)sub_1C1F7BC18(v7);
    id v9 = sub_1C1F7733C();
    objc_msgSend(v9, sel_setAttributedTitle_forState_, v8, 0);

    id v10 = sub_1C1F771B4();
    if (a1 == 2)
    {
      sub_1C1F793BC(0, 0xD000000000000021, 0x80000001C215F160, (void *)0xD000000000000015);
      uint64_t v11 = sub_1C214B3D0();
      id v12 = *(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
      v12(v5, 0, 1, v11);
      sub_1C214B400();

      id v13 = sub_1C1F7702C();
      char v14 = 1;
    }
    else
    {
      sub_1C1F793BC(a1 == 1, 0xD000000000000021, 0x80000001C215F160, (void *)0xD000000000000015);
      uint64_t v11 = sub_1C214B3D0();
      id v12 = *(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
      v12(v5, 0, 1, v11);
      sub_1C214B400();

      id v13 = sub_1C1F7702C();
      char v14 = 0;
    }
    sub_1C1F793BC(v14, 0xD000000000000023, 0x80000001C215F130, (void *)0xD000000000000011);
    v12(v5, 0, 1, v11);
    sub_1C214B400();

    id v15 = sub_1C1F77DA0();
    if (sub_1C1F7B538())
    {
      id v16 = objc_msgSend(self, sel_mainScreen);
      objc_msgSend(v16, sel_bounds);
      CGFloat v18 = v17;
      CGFloat v20 = v19;
      CGFloat v22 = v21;
      CGFloat v24 = v23;

      v37.origin.x = v18;
      v37.origin.y = v20;
      v37.size.double width = v22;
      v37.size.double height = v24;
      CGFloat Width = CGRectGetWidth(v37);
      id v26 = (id *)MEMORY[0x1E4FB2790];
      if (Width < 414.0) {
        id v26 = (id *)MEMORY[0x1E4FB2798];
      }
    }
    else
    {
      id v26 = (id *)MEMORY[0x1E4FB2788];
    }
    id v27 = *v26;
    objc_msgSend(v15, sel_setMaximumContentSizeCategory_, v27);

    id v28 = objc_msgSend(*(id *)(v6 + 16), sel_userSpecifiedName);
    if (v28)
    {
      unint64_t v29 = v28;
      sub_1C214A5F0();

      sub_1C214A680();
      uint64_t v31 = v30;
      swift_bridgeObjectRelease();
      if (v31)
      {
        swift_bridgeObjectRelease();
        v36[1] = *(void *)(v6 + 16);
        sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8C0);
        sub_1C2149470();
        if (v32)
        {
          sub_1C214A680();
          uint64_t v34 = v33;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v34)
          {
            id v35 = sub_1C1F76EF4();
            objc_msgSend(v35, sel_setNumberOfLines_, 3);
          }
        }
      }
    }
    swift_release();
  }
}

void sub_1C1F7C74C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1C1F7C7B0()
{
  if (!qword_1EBF0C870)
  {
    type metadata accessor for Key(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EBF0C870);
    }
  }
}

uint64_t sub_1C1F7C81C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C1F7C864()
{
  unint64_t result = qword_1EA2C4600;
  if (!qword_1EA2C4600)
  {
    sub_1C1F23804(255, (unint64_t *)&unk_1EA2C3D90);
    unint64_t result = swift_getExistentialMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA2C4600);
  }
  return result;
}

uint64_t sub_1C1F7C8B0()
{
  swift_unknownObjectWeakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

void sub_1C1F7C8E8(void *a1, uint64_t a2)
{
  sub_1C1F78B90(a1, a2, v2);
}

unint64_t sub_1C1F7C8F0()
{
  unint64_t result = qword_1EA2C4610;
  if (!qword_1EA2C4610)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA2C4610);
  }
  return result;
}

void sub_1C1F7C948()
{
  *(void *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationView_viewModel] = 0;
  *(void *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationView_logDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationView____lazy_storage___timeFormatter] = 0;
  *(void *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationView____lazy_storage___medicationNameLabel] = 0;
  *(void *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationView____lazy_storage___formStrengthLabel] = 0;
  *(void *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationView____lazy_storage___medmojiImageView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationView____lazy_storage___notesLabel] = 0;
  *(void *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationView____lazy_storage___skippedButton] = 0;
  *(void *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationView____lazy_storage___takenButton] = 0;
  *(void *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationView____lazy_storage___doseAmountTimeButton] = 0;
  *(void *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationView____lazy_storage___medicationStackView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationView____lazy_storage___lowerSectionStackViewWithNotes] = 0;
  *(void *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationView____lazy_storage___lowerSectionStackView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationView____lazy_storage___skippedTakenStackView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationView____lazy_storage___dividerView] = 0;
  uint64_t v1 = OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationView_lastDoseLabel;
  *(void *)&v0[v1] = sub_1C1F78098();
  uint64_t v2 = OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationView_lastDoseLabelContainer;
  id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1EB0]), sel_init);
  id v4 = objc_msgSend(self, sel_systemGray3Color);
  objc_msgSend(v3, sel_setBackgroundColor_, v4);

  objc_msgSend(v3, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  *(void *)&v0[v2] = v3;
  *(void *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI31MedicationDoseLogMedicationView_contentView] = 0;

  sub_1C214B910();
  __break(1u);
}

void sub_1C1F7CB04(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t destroy for MedicationDoseLogMedicationItem()
{
  swift_bridgeObjectRelease();
  swift_release();

  return swift_unknownObjectWeakDestroy();
}

void *initializeWithCopy for MedicationDoseLogMedicationItem(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_retain();
  swift_unknownObjectWeakCopyInit();
  a1[4] = a2[4];
  return a1;
}

void *assignWithCopy for MedicationDoseLogMedicationItem(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  swift_unknownObjectWeakCopyAssign();
  a1[4] = a2[4];
  return a1;
}

uint64_t initializeWithTake for MedicationDoseLogMedicationItem(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_unknownObjectWeakTakeInit();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  return a1;
}

void *assignWithTake for MedicationDoseLogMedicationItem(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_release();
  swift_unknownObjectWeakTakeAssign();
  a1[4] = a2[4];
  return a1;
}

ValueMetadata *type metadata accessor for MedicationDoseLogMedicationItem()
{
  return &type metadata for MedicationDoseLogMedicationItem;
}

unint64_t sub_1C1F7CD3C()
{
  unint64_t result = qword_1EBF0C318;
  if (!qword_1EBF0C318)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBF0C318);
  }
  return result;
}

uint64_t sub_1C1F7CD90(uint64_t a1)
{
  uint64_t v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1C214B680();
    sub_1C2149E40();
    sub_1C1F846A4(&qword_1EA2C3570, 255, MEMORY[0x1E4F1AB18]);
    uint64_t result = sub_1C214AAA0();
    uint64_t v1 = v18;
    uint64_t v17 = v19;
    uint64_t v3 = v20;
    uint64_t v4 = v21;
    unint64_t v5 = v22;
  }
  else
  {
    uint64_t v6 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v17 = a1 + 56;
    uint64_t v3 = ~v6;
    uint64_t v7 = -v6;
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v5 = v8 & *(void *)(a1 + 56);
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v4 = 0;
  }
  int64_t v9 = (unint64_t)(v3 + 64) >> 6;
  if (v1 < 0) {
    goto LABEL_10;
  }
  while (1)
  {
    if (v5)
    {
      uint64_t v10 = (v5 - 1) & v5;
      unint64_t v11 = __clz(__rbit64(v5)) | (v4 << 6);
      uint64_t v12 = v4;
      goto LABEL_29;
    }
    int64_t v13 = v4 + 1;
    if (__OFADD__(v4, 1)) {
      break;
    }
    if (v13 >= v9) {
      return sub_1C1F495B8();
    }
    unint64_t v14 = *(void *)(v17 + 8 * v13);
    uint64_t v12 = v4 + 1;
    if (!v14)
    {
      uint64_t v12 = v4 + 2;
      if (v4 + 2 >= v9) {
        return sub_1C1F495B8();
      }
      unint64_t v14 = *(void *)(v17 + 8 * v12);
      if (!v14)
      {
        uint64_t v12 = v4 + 3;
        if (v4 + 3 >= v9) {
          return sub_1C1F495B8();
        }
        unint64_t v14 = *(void *)(v17 + 8 * v12);
        if (!v14)
        {
          uint64_t v12 = v4 + 4;
          if (v4 + 4 >= v9) {
            return sub_1C1F495B8();
          }
          unint64_t v14 = *(void *)(v17 + 8 * v12);
          if (!v14)
          {
            uint64_t v12 = v4 + 5;
            if (v4 + 5 >= v9) {
              return sub_1C1F495B8();
            }
            unint64_t v14 = *(void *)(v17 + 8 * v12);
            if (!v14)
            {
              uint64_t v15 = v4 + 6;
              while (v9 != v15)
              {
                unint64_t v14 = *(void *)(v17 + 8 * v15++);
                if (v14)
                {
                  uint64_t v12 = v15 - 1;
                  goto LABEL_28;
                }
              }
              return sub_1C1F495B8();
            }
          }
        }
      }
    }
LABEL_28:
    uint64_t v10 = (v14 - 1) & v14;
    unint64_t v11 = __clz(__rbit64(v14)) + (v12 << 6);
LABEL_29:
    uint64_t v16 = *(void *)(*(void *)(v1 + 48) + 8 * v11);
    swift_retain();
    if (!v16) {
      return sub_1C1F495B8();
    }
    while (1)
    {
      sub_1C2149E30();
      uint64_t result = swift_release();
      uint64_t v4 = v12;
      unint64_t v5 = v10;
      if ((v1 & 0x8000000000000000) == 0) {
        break;
      }
LABEL_10:
      if (sub_1C214B700())
      {
        sub_1C2149E40();
        swift_unknownObjectRetain();
        swift_dynamicCast();
        swift_unknownObjectRelease();
        uint64_t v12 = v4;
        uint64_t v10 = v5;
        if (v23) {
          continue;
        }
      }
      return sub_1C1F495B8();
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1C1F7D050(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  uint64_t v3 = sub_1C1F3A904(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = (unint64_t)&v3[8 * v8 + 4];
  if (a1 + 32 < v9 + (v2 << 6) && v9 < a1 + 32 + (v2 << 6)) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = v3[2];
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_1C214B990();
  __break(1u);
  return result;
}

uint64_t sub_1C1F7D1A4(uint64_t a1)
{
  return sub_1C1F7E030(a1, (uint64_t (*)(void))sub_1C1F3AA7C, (uint64_t (*)(void))type metadata accessor for Dosage);
}

uint64_t sub_1C1F7D1D0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  uint64_t v3 = sub_1C1F3AAC4(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = (unint64_t)&v3[5 * v8 + 4];
  if (a1 + 32 < v9 + 40 * v2 && v9 < a1 + 32 + 40 * v2) {
    goto LABEL_24;
  }
  sub_1C1F248B4(0, (unint64_t *)&qword_1EBF0C2F0);
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = v3[2];
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_1C214B990();
  __break(1u);
  return result;
}

uint64_t sub_1C1F7D34C(unint64_t a1)
{
  return sub_1C1F7DE30(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_1C1F81BB0);
}

uint64_t sub_1C1F7D364(unint64_t a1)
{
  return sub_1C1F7DE30(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_1C1F81E0C);
}

uint64_t sub_1C1F7D37C(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_1C214B930();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if ((unint64_t)*v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v20 = sub_1C214B930();
    swift_bridgeObjectRelease();
    uint64_t v5 = v20 + v3;
    if (!__OFADD__(v20, v3)) {
      goto LABEL_5;
    }
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  uint64_t v4 = *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v5 = v4 + v3;
  if (__OFADD__(v4, v3)) {
    goto LABEL_26;
  }
LABEL_5:
  unint64_t v6 = *v1;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  uint64_t *v1 = v6;
  uint64_t v8 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v6 & 0x8000000000000000) == 0 && (v6 & 0x4000000000000000) == 0)
  {
    uint64_t v9 = v6 & 0xFFFFFFFFFFFFFF8;
    if (v5 <= *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      goto LABEL_15;
    }
    uint64_t v8 = 1;
  }
  if (v6 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1C214B930();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v10 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v10 <= v5) {
    uint64_t v10 = v5;
  }
  swift_bridgeObjectRetain();
  uint64_t v11 = MEMORY[0x1C8753970](v8, v10, 1, v6);
  swift_bridgeObjectRelease();
  uint64_t *v1 = v11;
  uint64_t v9 = v11 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
  uint64_t v12 = *(void *)(v9 + 16);
  uint64_t v13 = (*(void *)(v9 + 24) >> 1) - v12;
  uint64_t result = sub_1C1F82068(v9 + 8 * v12 + 32, v13, a1);
  if (v15 < v3)
  {
LABEL_27:
    __break(1u);
LABEL_28:
    sub_1C1F847C0(0, &qword_1EA2C3E50, (unint64_t *)&qword_1EBF0C880, 0x1E4F66AC8, MEMORY[0x1E4FBB320]);
    goto LABEL_20;
  }
  uint64_t v16 = v15;
  if (v15 >= 1)
  {
    uint64_t v17 = *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    BOOL v18 = __OFADD__(v17, v15);
    uint64_t v19 = v17 + v15;
    if (v18)
    {
      __break(1u);
      return result;
    }
    *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v19;
  }
  swift_bridgeObjectRelease();
  if (v16 == v13) {
    goto LABEL_28;
  }
LABEL_20:

  return sub_1C214A7A0();
}

uint64_t sub_1C1F7D590(unint64_t a1)
{
  return sub_1C1F7DE30(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_1C1F824F0);
}

uint64_t sub_1C1F7D5A8(uint64_t result)
{
  uint64_t v3 = *(void *)(result + 16);
  uint64_t v4 = *(void **)v1;
  int64_t v5 = *(void *)(*(void *)v1 + 16);
  int64_t v6 = v5 + v3;
  if (__OFADD__(v5, v3))
  {
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v7 = result;
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || (int64_t v9 = v4[3] >> 1, v9 < v6))
  {
    if (v5 <= v6) {
      int64_t v10 = v5 + v3;
    }
    else {
      int64_t v10 = v5;
    }
    uint64_t v4 = sub_1C1F3B5AC(isUniquelyReferenced_nonNull_native, v10, 1, v4);
    int64_t v9 = v4[3] >> 1;
  }
  uint64_t v11 = v4[2];
  uint64_t v12 = v9 - v11;
  uint64_t result = sub_1C1F83544((uint64_t)v42, &v4[4 * v11 + 4], v9 - v11, v7);
  if (result < v3) {
    goto LABEL_15;
  }
  if (result)
  {
    uint64_t v15 = v4[2];
    BOOL v16 = __OFADD__(v15, result);
    uint64_t v17 = v15 + result;
    if (v16)
    {
      __break(1u);
      goto LABEL_47;
    }
    v4[2] = v17;
  }
  if (result != v12)
  {
LABEL_13:
    uint64_t result = sub_1C1F495B8();
    *(void *)uint64_t v1 = v4;
    return result;
  }
LABEL_16:
  int64_t v2 = v4[2];
  uint64_t v41 = v42[0];
  uint64_t v13 = v43;
  uint64_t v40 = v42[1];
  uint64_t v14 = v44;
  if (v45)
  {
    unint64_t v18 = (v45 - 1) & v45;
    uint64_t v19 = v44;
    unint64_t v20 = __clz(__rbit64(v45)) | (v44 << 6);
    int64_t v39 = (unint64_t)(v43 + 64) >> 6;
    goto LABEL_18;
  }
LABEL_47:
  int64_t v36 = v14 + 1;
  if (__OFADD__(v14, 1)) {
    goto LABEL_66;
  }
  int64_t v39 = (unint64_t)(v13 + 64) >> 6;
  if (v36 >= v39) {
    goto LABEL_13;
  }
  unint64_t v37 = *(void *)(v40 + 8 * v36);
  uint64_t v19 = v14 + 1;
  if (!v37)
  {
    uint64_t v19 = v14 + 2;
    if (v14 + 2 >= v39) {
      goto LABEL_13;
    }
    unint64_t v37 = *(void *)(v40 + 8 * v19);
    if (!v37)
    {
      uint64_t v19 = v14 + 3;
      if (v14 + 3 >= v39) {
        goto LABEL_13;
      }
      unint64_t v37 = *(void *)(v40 + 8 * v19);
      if (!v37)
      {
        uint64_t v19 = v14 + 4;
        if (v14 + 4 >= v39) {
          goto LABEL_13;
        }
        unint64_t v37 = *(void *)(v40 + 8 * v19);
        if (!v37)
        {
          uint64_t v19 = v14 + 5;
          if (v14 + 5 >= v39) {
            goto LABEL_13;
          }
          unint64_t v37 = *(void *)(v40 + 8 * v19);
          if (!v37)
          {
            uint64_t v38 = v14 + 6;
            do
            {
              if (v39 == v38) {
                goto LABEL_13;
              }
              unint64_t v37 = *(void *)(v40 + 8 * v38++);
            }
            while (!v37);
            uint64_t v19 = v38 - 1;
          }
        }
      }
    }
  }
  unint64_t v18 = (v37 - 1) & v37;
  unint64_t v20 = __clz(__rbit64(v37)) + (v19 << 6);
LABEL_18:
  uint64_t v21 = (uint64_t *)(*(void *)(v41 + 48) + 32 * v20);
  uint64_t v22 = *v21;
  uint64_t v23 = v21[1];
  uint64_t v24 = v21[2];
  uint64_t v25 = v21[3];
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRetain();
  while (1)
  {
    unint64_t v26 = v4[3];
    int64_t v27 = v26 >> 1;
    if ((uint64_t)(v26 >> 1) < v2 + 1) {
      break;
    }
    if (v2 < v27) {
      goto LABEL_23;
    }
LABEL_20:
    v4[2] = v2;
  }
  uint64_t result = (uint64_t)sub_1C1F3B5AC((void *)(v26 > 1), v2 + 1, 1, v4);
  uint64_t v4 = (void *)result;
  int64_t v27 = *(void *)(result + 24) >> 1;
  if (v2 >= v27) {
    goto LABEL_20;
  }
  while (1)
  {
LABEL_23:
    id v28 = &v4[4 * v2 + 4];
    *id v28 = v22;
    v28[1] = v23;
    v28[2] = v24;
    v28[3] = v25;
    ++v2;
    if (v18)
    {
      unint64_t v29 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      unint64_t v30 = v29 | (v19 << 6);
      goto LABEL_41;
    }
    int64_t v31 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v31 >= v39) {
      goto LABEL_45;
    }
    unint64_t v32 = *(void *)(v40 + 8 * v31);
    uint64_t v33 = v19 + 1;
    if (!v32)
    {
      uint64_t v33 = v19 + 2;
      if (v19 + 2 >= v39) {
        goto LABEL_45;
      }
      unint64_t v32 = *(void *)(v40 + 8 * v33);
      if (!v32)
      {
        uint64_t v33 = v19 + 3;
        if (v19 + 3 >= v39) {
          goto LABEL_45;
        }
        unint64_t v32 = *(void *)(v40 + 8 * v33);
        if (!v32)
        {
          uint64_t v33 = v19 + 4;
          if (v19 + 4 >= v39) {
            goto LABEL_45;
          }
          unint64_t v32 = *(void *)(v40 + 8 * v33);
          if (!v32)
          {
            uint64_t v33 = v19 + 5;
            if (v19 + 5 >= v39) {
              goto LABEL_45;
            }
            unint64_t v32 = *(void *)(v40 + 8 * v33);
            if (!v32)
            {
              uint64_t v34 = v19 + 6;
              while (v39 != v34)
              {
                unint64_t v32 = *(void *)(v40 + 8 * v34++);
                if (v32)
                {
                  uint64_t v33 = v34 - 1;
                  goto LABEL_40;
                }
              }
LABEL_45:
              v4[2] = v2;
              goto LABEL_13;
            }
          }
        }
      }
    }
LABEL_40:
    unint64_t v18 = (v32 - 1) & v32;
    unint64_t v30 = __clz(__rbit64(v32)) + (v33 << 6);
    uint64_t v19 = v33;
LABEL_41:
    id v35 = (uint64_t *)(*(void *)(v41 + 48) + 32 * v30);
    uint64_t v22 = *v35;
    uint64_t v23 = v35[1];
    uint64_t v24 = v35[2];
    uint64_t v25 = v35[3];
    if (v2 >= v27)
    {
      swift_bridgeObjectRetain();
      uint64_t result = swift_bridgeObjectRetain();
      goto LABEL_20;
    }
    swift_bridgeObjectRetain();
    uint64_t result = swift_bridgeObjectRetain();
  }
  __break(1u);
LABEL_66:
  __break(1u);
  return result;
}

uint64_t sub_1C1F7D9C4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  uint64_t v3 = sub_1C1F3B6DC(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = (unint64_t)&v3[3 * v8 + 4];
  if (a1 + 32 < v9 + 24 * v2 && v9 < a1 + 32 + 24 * v2) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = v3[2];
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_1C214B990();
  __break(1u);
  return result;
}

uint64_t sub_1C1F7DB20(unint64_t a1)
{
  return sub_1C1F7DE30(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_1C1F8274C);
}

uint64_t sub_1C1F7DB38(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  uint64_t v3 = sub_1C1F3B5AC(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = (unint64_t)&v3[4 * v8 + 4];
  if (a1 + 32 < v9 + 32 * v2 && v9 < a1 + 32 + 32 * v2) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = v3[2];
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_1C214B990();
  __break(1u);
  return result;
}

uint64_t sub_1C1F7DC8C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  uint64_t v3 = sub_1C1F3B234(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = (unint64_t)&v3[2 * v8 + 4];
  if (a1 + 32 < v9 + 16 * v2 && v9 < a1 + 32 + 16 * v2) {
    goto LABEL_24;
  }
  sub_1C1F248B4(0, (unint64_t *)&qword_1EA2C2CE0);
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = v3[2];
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_1C214B990();
  __break(1u);
  return result;
}

uint64_t sub_1C1F7DE00(unint64_t a1)
{
  return sub_1C1F7DE30(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_1C1F82C04);
}

uint64_t sub_1C1F7DE18(unint64_t a1)
{
  return sub_1C1F7DE30(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_1C1F82E60);
}

uint64_t sub_1C1F7DE30(unint64_t a1, uint64_t (*a2)(uint64_t, void, unint64_t))
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_1C214B930();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  unint64_t v6 = *v2;
  if (*v2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1C214B930();
    swift_bridgeObjectRelease();
    uint64_t v8 = v7 + v5;
    if (!__OFADD__(v7, v5)) {
      goto LABEL_5;
    }
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v8 = v7 + v5;
  if (__OFADD__(v7, v5)) {
    goto LABEL_25;
  }
LABEL_5:
  unint64_t v6 = *v2;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v2 = v6;
  uint64_t v7 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v6 & 0x8000000000000000) == 0 && (v6 & 0x4000000000000000) == 0)
  {
    uint64_t v10 = v6 & 0xFFFFFFFFFFFFFF8;
    if (v8 <= *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      goto LABEL_15;
    }
    uint64_t v7 = 1;
  }
  if (v6 >> 62) {
    goto LABEL_27;
  }
  uint64_t v11 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v11 <= v8) {
      uint64_t v11 = v8;
    }
    swift_bridgeObjectRetain();
    unint64_t v6 = MEMORY[0x1C8753970](v7, v11, 1, v6);
    swift_bridgeObjectRelease();
    *uint64_t v2 = v6;
    uint64_t v10 = v6 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    uint64_t result = a2(v10 + 8 * *(void *)(v10 + 16) + 32, (*(void *)(v10 + 24) >> 1) - *(void *)(v10 + 16), a1);
    if (v13 >= v5) {
      break;
    }
LABEL_26:
    __break(1u);
LABEL_27:
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_1C214B930();
    swift_bridgeObjectRelease();
  }
  if (v13 >= 1)
  {
    uint64_t v14 = *(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    BOOL v15 = __OFADD__(v14, v13);
    uint64_t v16 = v14 + v13;
    if (v15)
    {
      __break(1u);
      return result;
    }
    *(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10) = v16;
  }
  swift_bridgeObjectRelease();

  return sub_1C214A7A0();
}

uint64_t sub_1C1F7E004(uint64_t a1)
{
  return sub_1C1F7E030(a1, (uint64_t (*)(void))sub_1C1F3BD30, (uint64_t (*)(void))sub_1C1F3BE6C);
}

uint64_t sub_1C1F7E030(uint64_t a1, uint64_t (*a2)(void), uint64_t (*a3)(void))
{
  unint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *v3;
  uint64_t v6 = *(void *)(*v3 + 16);
  if (__OFADD__(v6, v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  if (swift_isUniquelyReferenced_nonNull_native()
    && (int64_t)(v6 + v4) <= *(void *)(v5 + 24) >> 1)
  {
    unint64_t v10 = *(void *)(a1 + 16);
    if (v10) {
      goto LABEL_5;
    }
LABEL_15:
    if (!v4) {
      goto LABEL_16;
    }
    goto LABEL_18;
  }
  uint64_t v5 = a2();
  unint64_t v10 = *(void *)(a1 + 16);
  if (!v10) {
    goto LABEL_15;
  }
LABEL_5:
  uint64_t v11 = *(void *)(v5 + 16);
  uint64_t v12 = (*(void *)(v5 + 24) >> 1) - v11;
  uint64_t v13 = *(void *)(a3(0) - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  if (v12 < (uint64_t)v10)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  unint64_t v16 = v5 + v15 + v14 * v11;
  unint64_t v17 = a1 + v15;
  uint64_t v18 = v14 * v10;
  unint64_t v19 = v16 + v18;
  unint64_t v20 = v17 + v18;
  if (v17 < v19 && v16 < v20) {
    goto LABEL_21;
  }
  swift_arrayInitWithCopy();
  if (v10 < v4)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v22 = *(void *)(v5 + 16);
  BOOL v23 = __OFADD__(v22, v10);
  uint64_t v24 = v22 + v10;
  if (!v23)
  {
    *(void *)(v5 + 16) = v24;
LABEL_16:
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v3 = v5;
    return result;
  }
LABEL_20:
  __break(1u);
LABEL_21:
  uint64_t result = sub_1C214B990();
  __break(1u);
  return result;
}

uint64_t InteractionMedicationItem.interactionResults.getter()
{
  return swift_retain();
}

uint64_t InteractionMedicationItem.stackedMemojiDisplayable.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C1F236D8(v1 + 24, a1);
}

uint64_t InteractionMedicationItem.firstItemName.getter()
{
  uint64_t v1 = *(void *)(v0 + 64);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t InteractionMedicationItem.firstItemDetailsProviding.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C1F236D8(v1 + 80, a1);
}

uint64_t InteractionMedicationItem.secondItemDetailsProviding.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C1F236D8(v1 + 120, a1);
}

uint64_t InteractionMedicationItem.secondItemName.getter()
{
  uint64_t v1 = *(void *)(v0 + 160);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t InteractionMedicationItem.reuseIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 176);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1C1F7E2E8()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_beginAccess();
  unint64_t v2 = *(void *)(v1 + 16);
  if (!(v2 >> 62))
  {
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v3) {
      goto LABEL_3;
    }
LABEL_8:
    swift_bridgeObjectRelease();
    __break(1u);
    goto LABEL_9;
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_1C214B930();
  if (!result) {
    goto LABEL_8;
  }
LABEL_3:
  if ((v2 & 0xC000000000000001) != 0)
  {
LABEL_9:
    id v5 = (id)MEMORY[0x1C8753960](0, v2);
    goto LABEL_6;
  }
  if (*(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v5 = *(id *)(v2 + 32);
LABEL_6:
    uint64_t v6 = v5;
    swift_bridgeObjectRelease();
    id v7 = objc_msgSend(v6, sel_uniqueIdentifier);

    uint64_t v8 = sub_1C214A5F0();
    swift_bridgeObjectRetain();
    sub_1C214A6C0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_1C214A6C0();
    swift_bridgeObjectRelease();
    return v8;
  }
  __break(1u);
  return result;
}

uint64_t InteractionMedicationItem.__allocating_init(interactionResults:stackedMemojiDisplayable:firstItemName:firstItemDetailsProviding:secondItemName:secondItemDetailsProviding:healthStore:analyticsManager:roomType:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, long long *a5, uint64_t a6, uint64_t a7, long long *a8, long long a9, uint64_t a10)
{
  uint64_t v18 = *(void *)(a2 + 24);
  uint64_t v17 = *(void *)(a2 + 32);
  uint64_t v19 = __swift_mutable_project_boxed_opaque_existential_1(a2, v18);
  uint64_t v20 = sub_1C1F841F4(a1, v19, a3, a4, a5, a6, a7, a8, a9, a10, v10, v18, v17);
  __swift_destroy_boxed_opaque_existential_0(a2);
  return v20;
}

uint64_t InteractionMedicationItem.init(interactionResults:stackedMemojiDisplayable:firstItemName:firstItemDetailsProviding:secondItemName:secondItemDetailsProviding:healthStore:analyticsManager:roomType:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, long long *a5, uint64_t a6, uint64_t a7, long long *a8, long long a9, uint64_t a10)
{
  uint64_t v26 = a7;
  int64_t v27 = a8;
  uint64_t v25 = a6;
  long long v24 = a9;
  uint64_t v17 = *(void *)(a2 + 24);
  uint64_t v16 = *(void *)(a2 + 32);
  uint64_t v18 = __swift_mutable_project_boxed_opaque_existential_1(a2, v17);
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)&v24 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v21 + 16))(v20);
  uint64_t v22 = sub_1C1F83D6C(a1, (uint64_t)v20, a3, a4, a5, v25, v26, v27, v24, a10, v10, v17, v16);
  __swift_destroy_boxed_opaque_existential_0(a2);
  return v22;
}

uint64_t sub_1C1F7E658()
{
  uint64_t v1 = (unint64_t *)(*(void *)(v0 + 16) + 16);
  swift_beginAccess();
  unint64_t v2 = swift_bridgeObjectRetain();
  sub_1C1F7D37C(v2);
  sub_1C1F7F478(v1);
  return swift_endAccess();
}

uint64_t InteractionMedicationItem.deinit()
{
  uint64_t v1 = swift_bridgeObjectRetain();
  sub_1C1F7CD90(v1);
  swift_bridgeObjectRelease();
  swift_release();
  __swift_destroy_boxed_opaque_existential_0(v0 + 24);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(v0 + 80);
  __swift_destroy_boxed_opaque_existential_0(v0 + 120);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t InteractionMedicationItem.__deallocating_deinit()
{
  InteractionMedicationItem.deinit();

  return swift_deallocClassInstance();
}

uint64_t sub_1C1F7E7A0(uint64_t a1)
{
  swift_bridgeObjectRetain();
  sub_1C214A690();
  swift_bridgeObjectRelease();
  uint64_t v3 = *(void *)(v1 + 16);
  swift_beginAccess();
  unint64_t v4 = *(void *)(v3 + 16);
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1C1F830C0(a1, v4);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1C214A690();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1C214A690();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C1F7E884()
{
  sub_1C214BB30();
  swift_bridgeObjectRetain();
  sub_1C214A690();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(void *)(v0 + 16);
  swift_beginAccess();
  unint64_t v2 = *(void *)(v1 + 16);
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1C1F830C0((uint64_t)v4, v2);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1C214A690();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1C214A690();
  swift_bridgeObjectRelease();
  return sub_1C214BB80();
}

uint64_t sub_1C1F7E978()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 176);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1C1F7E9AC()
{
  return sub_1C1F7E2E8();
}

uint64_t sub_1C1F7E9D0(void **a1, void **a2)
{
  return _s19HealthMedicationsUI25InteractionMedicationItemC2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

uint64_t sub_1C1F7E9DC()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 256))();
}

uint64_t sub_1C1F7EA28(uint64_t a1)
{
  return sub_1C1F7E7A0(a1);
}

uint64_t sub_1C1F7EA4C()
{
  sub_1C214BB30();
  sub_1C1F7E7A0((uint64_t)v1);
  return sub_1C214BB80();
}

uint64_t Array<A>.sortedByName()(uint64_t a1)
{
  if (a1 < 0 || (a1 & 0x4000000000000000) != 0)
  {
    unint64_t v3 = swift_bridgeObjectRetain();
    uint64_t v1 = (uint64_t)sub_1C1F7F730(v3, (void (*)(void *, uint64_t, unint64_t))sub_1C1F822C4);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v1 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
  }
  uint64_t v4 = v1;
  sub_1C1F7F500(&v4);
  return v4;
}

uint64_t Array<A>.deduped()(unint64_t a1)
{
  unint64_t v1 = a1;
  unint64_t v57 = a1;
  unint64_t v56 = MEMORY[0x1E4FBC860];
  if (a1 >> 62) {
    goto LABEL_95;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
LABEL_3:
  unint64_t v3 = (void *)MEMORY[0x1E4FBC860];
  if (v2)
  {
    uint64_t v4 = 0;
    while (1)
    {
      unint64_t v5 = v1 >> 62;
      if (v1 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v26 = sub_1C214B930();
        swift_bridgeObjectRelease();
        if (!v26) {
          goto LABEL_92;
        }
        swift_bridgeObjectRetain();
        uint64_t v27 = sub_1C214B930();
        swift_bridgeObjectRelease();
        if (!v27)
        {
LABEL_93:
          __break(1u);
LABEL_94:
          __break(1u);
LABEL_95:
          swift_bridgeObjectRetain();
          uint64_t v2 = sub_1C214B930();
          goto LABEL_3;
        }
      }
      else if (!*(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        goto LABEL_92;
      }
      if ((v1 & 0xC000000000000001) != 0)
      {
        uint64_t v6 = MEMORY[0x1C8753960](0, v1);
        if (v5) {
          goto LABEL_48;
        }
      }
      else
      {
        if (!*(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_94;
        }
        uint64_t v6 = *(void *)(v1 + 32);
        swift_retain();
        if (v5)
        {
LABEL_48:
          swift_bridgeObjectRetain();
          uint64_t v28 = sub_1C214B930();
          swift_bridgeObjectRelease();
          if (!v28)
          {
LABEL_97:
            __break(1u);
LABEL_98:
            swift_bridgeObjectRelease();
            __break(1u);
LABEL_99:
            swift_bridgeObjectRelease();
            __break(1u);
LABEL_100:
            uint64_t result = sub_1C214B990();
            __break(1u);
            return result;
          }
          goto LABEL_11;
        }
      }
      if (!*(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_97;
      }
LABEL_11:
      sub_1C1F84330(0, 1);
      unint64_t v1 = v57;
      if (v57 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v29 = sub_1C214B930();
        swift_bridgeObjectRelease();
        if (!v29) {
          goto LABEL_74;
        }
        uint64_t v52 = v4;
        swift_bridgeObjectRetain_n();
        uint64_t v30 = sub_1C214B930();
        swift_bridgeObjectRelease();
        uint64_t v54 = v30;
        if (v30) {
          goto LABEL_14;
        }
        uint64_t v8 = v3;
LABEL_53:
        swift_bridgeObjectRelease();
        unint64_t v3 = (void *)MEMORY[0x1E4FBC860];
        unint64_t v55 = MEMORY[0x1E4FBC860];
        uint64_t v31 = v8[2];
        if (v31)
        {
          swift_bridgeObjectRetain();
          while (1)
          {
            if (v31 > v8[2])
            {
              __break(1u);
LABEL_85:
              __break(1u);
LABEL_86:
              __break(1u);
              goto LABEL_87;
            }
            unint64_t v32 = v8[v31 + 3];
            unint64_t v33 = v57;
            if (!swift_isUniquelyReferenced_nonNull_bridgeObject()
              || (v57 & 0x8000000000000000) != 0
              || (v57 & 0x4000000000000000) != 0)
            {
              sub_1C1F814EC(v57);
              unint64_t v33 = v34;
              unint64_t v57 = v34;
            }
            uint64_t v35 = v33 & 0xFFFFFFFFFFFFFF8;
            unint64_t v36 = *(void *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x10);
            if (v32 >= v36) {
              goto LABEL_85;
            }
            unint64_t v37 = v36 - 1;
            uint64_t v38 = v36 - 1 - v32;
            if (v38 < 0) {
              goto LABEL_100;
            }
            uint64_t v39 = v35 + 8 * v32;
            uint64_t v40 = *(void *)(v39 + 32);
            memmove((void *)(v39 + 32), (const void *)(v39 + 40), 8 * v38);
            *(void *)(v35 + 16) = v37;
            sub_1C214A7A0();
            uint64_t v41 = *(void *)(v40 + 16);
            swift_retain();
            swift_release();
            swift_beginAccess();
            unint64_t v42 = *(void *)(v41 + 16);
            if (v42 >> 62)
            {
              swift_bridgeObjectRetain_n();
              uint64_t v46 = sub_1C214B930();
              swift_bridgeObjectRelease();
              if (!v46)
              {
LABEL_96:
                swift_bridgeObjectRelease();
                __break(1u);
                goto LABEL_97;
              }
            }
            else
            {
              uint64_t v43 = *(void *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x10);
              swift_bridgeObjectRetain();
              if (!v43) {
                goto LABEL_96;
              }
            }
            if ((v42 & 0xC000000000000001) != 0)
            {
              MEMORY[0x1C8753960](0, v42);
            }
            else
            {
              if (!*(void *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
                goto LABEL_86;
              }
              id v44 = *(id *)(v42 + 32);
            }
            swift_release();
            uint64_t v45 = swift_bridgeObjectRelease();
            MEMORY[0x1C87528E0](v45);
            if (*(void *)((v55 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v55 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              sub_1C214A7D0();
            }
            --v31;
            sub_1C214A820();
            sub_1C214A7A0();
            if (!v31)
            {
              swift_bridgeObjectRelease();
              break;
            }
          }
        }
        swift_bridgeObjectRelease();
        long long v48 = (unint64_t *)(*(void *)(v6 + 16) + 16);
        swift_beginAccess();
        swift_bridgeObjectRetain_n();
        sub_1C1F7D37C(v55);
        uint64_t v4 = v52;
        sub_1C1F7F478(v48);
        swift_endAccess();
        swift_bridgeObjectRelease();
        uint64_t v49 = swift_retain();
        MEMORY[0x1C87528E0](v49);
        if (*(void *)((v56 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v56 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1C214A7D0();
        }
        sub_1C214A820();
        sub_1C214A7A0();
        swift_bridgeObjectRelease();
        swift_release();
        unint64_t v1 = v57;
        if (!(v57 >> 62)) {
          goto LABEL_77;
        }
LABEL_82:
        swift_bridgeObjectRetain();
        uint64_t v50 = sub_1C214B930();
        swift_bridgeObjectRelease();
        if (!v50)
        {
LABEL_87:
          unint64_t v3 = (void *)v56;
          break;
        }
      }
      else
      {
        uint64_t v54 = *(void *)((v57 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (v54)
        {
          uint64_t v52 = v4;
          swift_bridgeObjectRetain();
LABEL_14:
          uint64_t v53 = v6;
          uint64_t v7 = 4;
          uint64_t v8 = v3;
          while (1)
          {
            uint64_t v9 = v7 - 4;
            if ((v57 & 0xC000000000000001) != 0)
            {
              uint64_t v10 = MEMORY[0x1C8753960](v7 - 4, v1);
              uint64_t v11 = v7 - 3;
              if (__OFADD__(v9, 1)) {
                goto LABEL_89;
              }
            }
            else
            {
              uint64_t v10 = *(void *)(v1 + 8 * v7);
              swift_retain();
              uint64_t v11 = v7 - 3;
              if (__OFADD__(v9, 1))
              {
LABEL_89:
                __break(1u);
LABEL_90:
                __break(1u);
LABEL_91:
                __break(1u);
LABEL_92:
                __break(1u);
                goto LABEL_93;
              }
            }
            uint64_t v12 = *(void *)(v6 + 16);
            uint64_t v13 = *(void *)(v10 + 16);
            swift_beginAccess();
            unint64_t v14 = *(void *)(v13 + 16);
            if (v14 >> 62)
            {
              swift_bridgeObjectRetain_n();
              swift_retain();
              uint64_t v24 = sub_1C214B930();
              swift_bridgeObjectRelease();
              if (!v24) {
                goto LABEL_98;
              }
            }
            else
            {
              uint64_t v15 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
              swift_bridgeObjectRetain();
              swift_retain();
              if (!v15) {
                goto LABEL_98;
              }
            }
            if ((v14 & 0xC000000000000001) != 0)
            {
              uint64_t v16 = (void *)MEMORY[0x1C8753960](0, v14);
            }
            else
            {
              if (!*(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
                goto LABEL_90;
              }
              uint64_t v16 = *(id *)(v14 + 32);
            }
            unint64_t v1 = (unint64_t)v16;
            swift_bridgeObjectRelease();
            swift_beginAccess();
            unint64_t v17 = *(void *)(v12 + 16);
            if (v17 >> 62)
            {
              swift_bridgeObjectRetain_n();
              uint64_t v25 = sub_1C214B930();
              swift_bridgeObjectRelease();
              if (!v25) {
                goto LABEL_99;
              }
            }
            else
            {
              uint64_t v18 = *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
              swift_bridgeObjectRetain();
              if (!v18) {
                goto LABEL_99;
              }
            }
            if ((v17 & 0xC000000000000001) != 0)
            {
              id v19 = (id)MEMORY[0x1C8753960](0, v17);
            }
            else
            {
              if (!*(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
                goto LABEL_91;
              }
              id v19 = *(id *)(v17 + 32);
            }
            uint64_t v20 = v19;
            swift_bridgeObjectRelease();
            unsigned int v21 = objc_msgSend(v20, sel_hasSameAncestorIdentifiersAsInteractionResult_, v1);
            swift_release();

            if (v21)
            {
              uint64_t v6 = v53;
              unint64_t v1 = v57;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                uint64_t v8 = sub_1C1F3B47C(0, v8[2] + 1, 1, v8);
              }
              unint64_t v23 = v8[2];
              unint64_t v22 = v8[3];
              if (v23 >= v22 >> 1) {
                uint64_t v8 = sub_1C1F3B47C((void *)(v22 > 1), v23 + 1, 1, v8);
              }
              _OWORD v8[2] = v23 + 1;
              v8[v23 + 4] = v9;
            }
            else
            {
              uint64_t v6 = v53;
              unint64_t v1 = v57;
            }
            swift_release();
            ++v7;
            if (v11 == v54) {
              goto LABEL_53;
            }
          }
        }
LABEL_74:
        uint64_t v47 = swift_retain();
        MEMORY[0x1C87528E0](v47);
        if (*(void *)((v56 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v56 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1C214A7D0();
        }
        sub_1C214A820();
        sub_1C214A7A0();
        swift_release();
        if (v57 >> 62) {
          goto LABEL_82;
        }
LABEL_77:
        if (!*(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_87;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v3;
}

Swift::Void __swiftcall InteractionMedicationItem.didSelectCell(_:in:)(UIView *_, UIViewController *in)
{
}

uint64_t InteractionMedicationItem.deselectionBehavior(in:)()
{
  type metadata accessor for InteractionMedicationItem();
  sub_1C1F846A4(&qword_1EA2C3DA8, v0, (void (*)(uint64_t))type metadata accessor for InteractionMedicationItem);
  return sub_1C21484D0();
}

void sub_1C1F7F3EC(uint64_t a1, void *a2)
{
}

uint64_t sub_1C1F7F418()
{
  return sub_1C21484D0();
}

uint64_t sub_1C1F7F478(unint64_t *a1)
{
  unint64_t v2 = *a1;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *a1 = v2;
  if (!isUniquelyReferenced_nonNull_bridgeObject
    || (v2 & 0x8000000000000000) != 0
    || (v2 & 0x4000000000000000) != 0)
  {
    sub_1C1F814EC(v2);
    unint64_t v2 = v4;
    *a1 = v4;
  }
  uint64_t v5 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v7[0] = (v2 & 0xFFFFFFFFFFFFFF8) + 32;
  v7[1] = v5;
  sub_1C1F7FB28(v7);
  return sub_1C214A7A0();
}

uint64_t sub_1C1F7F500(uint64_t *a1)
{
  uint64_t v2 = *a1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    sub_1C20FB224();
  }
  uint64_t v4 = *(void *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  sub_1C1F80318(v6);
  return sub_1C214B830();
}

size_t sub_1C1F7F57C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x1E4FBC860];
  }
  sub_1C1F84BA4(0, &qword_1EA2C3B58, 255, (uint64_t (*)(uint64_t))sub_1C1F5FF8C, MEMORY[0x1E4FBBE00]);
  sub_1C1F5FF8C();
  uint64_t v4 = *(void *)(*(void *)(v3 - 8) + 72);
  unint64_t v5 = (*(unsigned __int8 *)(*(void *)(v3 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v3 - 8) + 80);
  uint64_t v6 = (void *)swift_allocObject();
  size_t result = _swift_stdlib_malloc_size(v6);
  if (v4)
  {
    if (result - v5 != 0x8000000000000000 || v4 != -1)
    {
      uint64_t v6[2] = v1;
      v6[3] = 2 * ((uint64_t)(result - v5) / v4);
      uint64_t v9 = sub_1C1F831D8(&v10, (uint64_t)v6 + v5, v1, a1);
      swift_bridgeObjectRetain();
      sub_1C1F495B8();
      if (v9 == v1) {
        return (size_t)v6;
      }
      __break(1u);
      return MEMORY[0x1E4FBC860];
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void *sub_1C1F7F700(unint64_t a1)
{
  return sub_1C1F7F730(a1, (void (*)(void *, uint64_t, unint64_t))sub_1C1F81E0C);
}

void *sub_1C1F7F718(unint64_t a1)
{
  return sub_1C1F7F730(a1, (void (*)(void *, uint64_t, unint64_t))sub_1C1F822C4);
}

void *sub_1C1F7F730(unint64_t a1, void (*a2)(void *, uint64_t, unint64_t))
{
  if (a1 >> 62) {
    goto LABEL_10;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v4) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  while (1)
  {
    if (v4 <= 0)
    {
      unint64_t v5 = (void *)MEMORY[0x1E4FBC860];
    }
    else
    {
      sub_1C1F0ED28();
      unint64_t v5 = (void *)swift_allocObject();
      int64_t v6 = _swift_stdlib_malloc_size(v5);
      uint64_t v7 = v6 - 32;
      if (v6 < 32) {
        uint64_t v7 = v6 - 25;
      }
      v5[2] = v4;
      v5[3] = (2 * (v7 >> 3)) | 1;
    }
    swift_bridgeObjectRetain();
    a2(v5 + 4, v4, a1);
    a2 = v8;
    swift_bridgeObjectRelease();
    if (a2 == (void (*)(void *, uint64_t, unint64_t))v4) {
      break;
    }
    __break(1u);
LABEL_10:
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_1C214B930();
    swift_bridgeObjectRelease();
    if (!v4) {
      return (void *)MEMORY[0x1E4FBC860];
    }
  }
  return v5;
}

size_t sub_1C1F7F834(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x1E4FBC860];
  }
  sub_1C1F84BA4(0, (unint64_t *)&qword_1EA2C3220, 255, (uint64_t (*)(uint64_t))type metadata accessor for Dosage, MEMORY[0x1E4FBBE00]);
  uint64_t v3 = *(void *)(type metadata accessor for Dosage() - 8);
  uint64_t v4 = *(void *)(v3 + 72);
  unint64_t v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  int64_t v6 = (void *)swift_allocObject();
  size_t result = _swift_stdlib_malloc_size(v6);
  if (v4)
  {
    if (result - v5 != 0x8000000000000000 || v4 != -1)
    {
      uint64_t v6[2] = v1;
      v6[3] = 2 * ((uint64_t)(result - v5) / v4);
      uint64_t v9 = sub_1C1F83760(&v10, (uint64_t)v6 + v5, v1, a1);
      swift_bridgeObjectRetain();
      sub_1C1F495B8();
      if (v9 == v1) {
        return (size_t)v6;
      }
      __break(1u);
      return MEMORY[0x1E4FBC860];
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1C1F7F9B8(uint64_t a1)
{
  return sub_1C1F7FA08(a1, (unint64_t *)&qword_1EBF0C8A8, 0x1E4F66B08, (unint64_t *)&unk_1EBF0C8B0);
}

void *sub_1C1F7F9D4(unint64_t a1)
{
  return sub_1C1F7F730(a1, (void (*)(void *, uint64_t, unint64_t))sub_1C1F829A8);
}

uint64_t sub_1C1F7F9EC(uint64_t a1)
{
  return sub_1C1F7FA08(a1, &qword_1EA2C3DB8, 0x1E4F2B560, &qword_1EA2C3DC0);
}

uint64_t sub_1C1F7FA08(uint64_t a1, unint64_t *a2, uint64_t a3, unint64_t *a4)
{
  if ((a1 & 0xC000000000000001) != 0)
  {
    uint64_t v8 = sub_1C214B6D0();
    if (v8) {
      goto LABEL_3;
    }
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    return MEMORY[0x1E4FBC860];
  }
LABEL_3:
  if (v8 <= 0)
  {
    uint64_t v9 = (void *)MEMORY[0x1E4FBC860];
  }
  else
  {
    sub_1C1F0ED28();
    uint64_t v9 = (void *)swift_allocObject();
    int64_t v10 = _swift_stdlib_malloc_size(v9);
    uint64_t v11 = v10 - 32;
    if (v10 < 32) {
      uint64_t v11 = v10 - 25;
    }
    void v9[2] = v8;
    v9[3] = (2 * (v11 >> 3)) | 1;
  }
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_1C1F83A70(&v14, v9 + 4, v8, a1, a2, a3, a4);
  uint64_t result = sub_1C1F495B8();
  if (v12 == (void *)v8) {
    return (uint64_t)v9;
  }
  __break(1u);
  return result;
}

void sub_1C1F7FB28(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t v4 = sub_1C214BA30();
  if (v4 >= v3)
  {
    if (v3 < 0) {
      goto LABEL_131;
    }
    if (v3) {
      sub_1C1F80B44(0, v3, 1, a1);
    }
    return;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_139;
  }
  uint64_t v102 = v4;
  uint64_t v99 = a1;
  if (v3 < 2)
  {
    uint64_t v8 = (char *)MEMORY[0x1E4FBC860];
    uint64_t v113 = MEMORY[0x1E4FBC860];
    uint64_t v111 = (void **)((MEMORY[0x1E4FBC860] & 0xFFFFFFFFFFFFFF8) + 32);
    if (v3 != 1)
    {
      unint64_t v11 = *(void *)(MEMORY[0x1E4FBC860] + 16);
LABEL_97:
      if (v11 >= 2)
      {
        uint64_t v93 = *v99;
        do
        {
          unint64_t v94 = v11 - 2;
          if (v11 < 2) {
            goto LABEL_126;
          }
          if (!v93) {
            goto LABEL_138;
          }
          uint64_t v95 = *(void *)&v8[16 * v94 + 32];
          uint64_t v96 = *(void *)&v8[16 * v11 + 24];
          sub_1C1F80DA0((id *)(v93 + 8 * v95), (id *)(v93 + 8 * *(void *)&v8[16 * v11 + 16]), v93 + 8 * v96, v111);
          if (v1) {
            break;
          }
          if (v96 < v95) {
            goto LABEL_127;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v8 = sub_1C20FB150((uint64_t)v8);
          }
          if (v94 >= *((void *)v8 + 2)) {
            goto LABEL_128;
          }
          unint64_t v97 = &v8[16 * v94 + 32];
          *(void *)unint64_t v97 = v95;
          *((void *)v97 + 1) = v96;
          unint64_t v98 = *((void *)v8 + 2);
          if (v11 > v98) {
            goto LABEL_129;
          }
          memmove(&v8[16 * v11 + 16], &v8[16 * v11 + 32], 16 * (v98 - v11));
          *((void *)v8 + 2) = v98 - 1;
          unint64_t v11 = v98 - 1;
        }
        while (v98 > 2);
      }
LABEL_108:
      swift_bridgeObjectRelease();
      *(void *)((v113 & 0xFFFFFFFFFFFFFF8) + 0x10) = 0;
      sub_1C214A7A0();
      swift_bridgeObjectRelease();
      return;
    }
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C880);
    uint64_t v7 = sub_1C214A810();
    *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10) = v6;
    uint64_t v111 = (void **)((v7 & 0xFFFFFFFFFFFFFF8) + 32);
    uint64_t v113 = v7;
  }
  uint64_t v9 = 0;
  uint64_t v10 = *a1;
  uint64_t v100 = *a1 - 8;
  uint64_t v101 = *a1 + 16;
  uint64_t v8 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v107 = v3;
  uint64_t v112 = *a1;
  while (1)
  {
    uint64_t v12 = v9++;
    uint64_t v108 = v12;
    if (v9 < v3)
    {
      uint64_t v103 = v8;
      uint64_t v13 = *(void **)(v10 + 8 * v12);
      id v14 = *(id *)(v10 + 8 * v9);
      id v15 = v13;
      id v16 = objc_msgSend(v14, sel_identifier);
      id v109 = objc_msgSend(v16, sel_rawIdentifier);

      id v17 = objc_msgSend(v15, sel_identifier);
      id v105 = objc_msgSend(v17, sel_rawIdentifier);

      uint64_t v9 = v12 + 2;
      if (v12 + 2 < v3)
      {
        uint64_t v18 = (id *)(v101 + 8 * v12);
        while (1)
        {
          id v19 = *(v18 - 1);
          id v20 = *v18;
          id v21 = v19;
          id v22 = objc_msgSend(v20, sel_identifier);
          id v23 = objc_msgSend(v22, sel_rawIdentifier);

          id v24 = objc_msgSend(v21, sel_identifier);
          id v25 = objc_msgSend(v24, sel_rawIdentifier);

          if ((uint64_t)v109 < (uint64_t)v105 == (uint64_t)v23 >= (uint64_t)v25) {
            break;
          }
          ++v9;
          ++v18;
          uint64_t v3 = v107;
          if (v107 == v9)
          {
            uint64_t v9 = v107;
            goto LABEL_22;
          }
        }
        uint64_t v3 = v107;
LABEL_22:
        uint64_t v12 = v108;
      }
      uint64_t v8 = v103;
      uint64_t v10 = v112;
      if ((uint64_t)v109 < (uint64_t)v105)
      {
        if (v9 < v12) {
          goto LABEL_132;
        }
        if (v12 < v9)
        {
          uint64_t v26 = (uint64_t *)(v100 + 8 * v9);
          uint64_t v27 = v9;
          uint64_t v28 = v12;
          uint64_t v29 = (uint64_t *)(v112 + 8 * v12);
          do
          {
            if (v28 != --v27)
            {
              if (!v112) {
                goto LABEL_137;
              }
              uint64_t v30 = *v29;
              *uint64_t v29 = *v26;
              *uint64_t v26 = v30;
            }
            ++v28;
            --v26;
            ++v29;
          }
          while (v28 < v27);
        }
      }
    }
    if (v9 < v3)
    {
      if (__OFSUB__(v9, v12)) {
        goto LABEL_130;
      }
      if (v9 - v12 < v102) {
        break;
      }
    }
LABEL_49:
    if (v9 < v12) {
      goto LABEL_125;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v8 = sub_1C20FADDC(0, *((void *)v8 + 2) + 1, 1, v8);
    }
    unint64_t v44 = *((void *)v8 + 2);
    unint64_t v43 = *((void *)v8 + 3);
    unint64_t v11 = v44 + 1;
    uint64_t v10 = v112;
    if (v44 >= v43 >> 1)
    {
      id v92 = sub_1C20FADDC((char *)(v43 > 1), v44 + 1, 1, v8);
      uint64_t v10 = v112;
      uint64_t v8 = v92;
    }
    *((void *)v8 + 2) = v11;
    uint64_t v45 = v8 + 32;
    uint64_t v46 = &v8[16 * v44 + 32];
    *(void *)uint64_t v46 = v12;
    *((void *)v46 + 1) = v9;
    if (v44)
    {
      while (1)
      {
        unint64_t v47 = v11 - 1;
        if (v11 >= 4)
        {
          uint64_t v52 = &v45[16 * v11];
          uint64_t v53 = *((void *)v52 - 8);
          uint64_t v54 = *((void *)v52 - 7);
          BOOL v58 = __OFSUB__(v54, v53);
          uint64_t v55 = v54 - v53;
          if (v58) {
            goto LABEL_114;
          }
          uint64_t v57 = *((void *)v52 - 6);
          uint64_t v56 = *((void *)v52 - 5);
          BOOL v58 = __OFSUB__(v56, v57);
          uint64_t v50 = v56 - v57;
          char v51 = v58;
          if (v58) {
            goto LABEL_115;
          }
          unint64_t v59 = v11 - 2;
          id v60 = &v45[16 * v11 - 32];
          uint64_t v62 = *(void *)v60;
          uint64_t v61 = *((void *)v60 + 1);
          BOOL v58 = __OFSUB__(v61, v62);
          uint64_t v63 = v61 - v62;
          if (v58) {
            goto LABEL_117;
          }
          BOOL v58 = __OFADD__(v50, v63);
          uint64_t v64 = v50 + v63;
          if (v58) {
            goto LABEL_120;
          }
          if (v64 >= v55)
          {
            id v82 = &v45[16 * v47];
            uint64_t v84 = *(void *)v82;
            uint64_t v83 = *((void *)v82 + 1);
            BOOL v58 = __OFSUB__(v83, v84);
            uint64_t v85 = v83 - v84;
            if (v58) {
              goto LABEL_124;
            }
            BOOL v75 = v50 < v85;
            goto LABEL_86;
          }
        }
        else
        {
          if (v11 != 3)
          {
            uint64_t v76 = *((void *)v8 + 4);
            uint64_t v77 = *((void *)v8 + 5);
            BOOL v58 = __OFSUB__(v77, v76);
            uint64_t v69 = v77 - v76;
            char v70 = v58;
            goto LABEL_80;
          }
          uint64_t v49 = *((void *)v8 + 4);
          uint64_t v48 = *((void *)v8 + 5);
          BOOL v58 = __OFSUB__(v48, v49);
          uint64_t v50 = v48 - v49;
          char v51 = v58;
        }
        if (v51) {
          goto LABEL_116;
        }
        unint64_t v59 = v11 - 2;
        double v65 = &v45[16 * v11 - 32];
        uint64_t v67 = *(void *)v65;
        uint64_t v66 = *((void *)v65 + 1);
        BOOL v68 = __OFSUB__(v66, v67);
        uint64_t v69 = v66 - v67;
        char v70 = v68;
        if (v68) {
          goto LABEL_119;
        }
        uint64_t v71 = &v45[16 * v47];
        uint64_t v73 = *(void *)v71;
        uint64_t v72 = *((void *)v71 + 1);
        BOOL v58 = __OFSUB__(v72, v73);
        uint64_t v74 = v72 - v73;
        if (v58) {
          goto LABEL_122;
        }
        if (__OFADD__(v69, v74)) {
          goto LABEL_123;
        }
        if (v69 + v74 >= v50)
        {
          BOOL v75 = v50 < v74;
LABEL_86:
          if (v75) {
            unint64_t v47 = v59;
          }
          goto LABEL_88;
        }
LABEL_80:
        if (v70) {
          goto LABEL_118;
        }
        id v78 = &v45[16 * v47];
        uint64_t v80 = *(void *)v78;
        uint64_t v79 = *((void *)v78 + 1);
        BOOL v58 = __OFSUB__(v79, v80);
        uint64_t v81 = v79 - v80;
        if (v58) {
          goto LABEL_121;
        }
        if (v81 < v69) {
          goto LABEL_14;
        }
LABEL_88:
        unint64_t v86 = v47 - 1;
        if (v47 - 1 >= v11)
        {
          __break(1u);
LABEL_111:
          __break(1u);
LABEL_112:
          __break(1u);
LABEL_113:
          __break(1u);
LABEL_114:
          __break(1u);
LABEL_115:
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
          goto LABEL_134;
        }
        if (!v10) {
          goto LABEL_136;
        }
        uint64_t v87 = &v45[16 * v86];
        uint64_t v88 = *(void *)v87;
        uint64_t v89 = &v45[16 * v47];
        uint64_t v90 = *((void *)v89 + 1);
        sub_1C1F80DA0((id *)(v10 + 8 * *(void *)v87), (id *)(v10 + 8 * *(void *)v89), v10 + 8 * v90, v111);
        if (v1) {
          goto LABEL_108;
        }
        if (v90 < v88) {
          goto LABEL_111;
        }
        if (v47 > *((void *)v8 + 2)) {
          goto LABEL_112;
        }
        *(void *)uint64_t v87 = v88;
        *(void *)&v45[16 * v86 + 8] = v90;
        unint64_t v91 = *((void *)v8 + 2);
        if (v47 >= v91) {
          goto LABEL_113;
        }
        unint64_t v11 = v91 - 1;
        memmove(&v45[16 * v47], v89 + 16, 16 * (v91 - 1 - v47));
        *((void *)v8 + 2) = v91 - 1;
        uint64_t v10 = v112;
        if (v91 <= 2) {
          goto LABEL_14;
        }
      }
    }
    unint64_t v11 = 1;
LABEL_14:
    uint64_t v3 = v107;
    if (v9 >= v107) {
      goto LABEL_97;
    }
  }
  if (__OFADD__(v12, v102)) {
    goto LABEL_133;
  }
  if (v12 + v102 >= v3) {
    uint64_t v31 = v3;
  }
  else {
    uint64_t v31 = v12 + v102;
  }
  if (v31 >= v12)
  {
    if (v9 != v31)
    {
      unint64_t v104 = v8;
      uint64_t v106 = v31;
      uint64_t v32 = v100 + 8 * v9;
      do
      {
        unint64_t v33 = *(void **)(v10 + 8 * v9);
        uint64_t v34 = v12;
        uint64_t v110 = v32;
        while (1)
        {
          uint64_t v35 = *(void **)v32;
          id v36 = v33;
          id v37 = v35;
          id v38 = objc_msgSend(v36, sel_identifier);
          id v39 = objc_msgSend(v38, sel_rawIdentifier);

          id v40 = objc_msgSend(v37, sel_identifier);
          id v41 = objc_msgSend(v40, sel_rawIdentifier);

          if ((uint64_t)v39 >= (uint64_t)v41) {
            break;
          }
          uint64_t v10 = v112;
          if (!v112) {
            goto LABEL_135;
          }
          unint64_t v42 = *(void **)v32;
          unint64_t v33 = *(void **)(v32 + 8);
          *(void *)uint64_t v32 = v33;
          *(void *)(v32 + 8) = v42;
          v32 -= 8;
          if (v9 == ++v34) {
            goto LABEL_42;
          }
        }
        uint64_t v10 = v112;
LABEL_42:
        ++v9;
        uint64_t v12 = v108;
        uint64_t v32 = v110 + 8;
      }
      while (v9 != v106);
      uint64_t v9 = v106;
      uint64_t v8 = v104;
    }
    goto LABEL_49;
  }
LABEL_134:
  __break(1u);
LABEL_135:
  __break(1u);
LABEL_136:
  __break(1u);
LABEL_137:
  __break(1u);
LABEL_138:
  __break(1u);
LABEL_139:
  sub_1C214B900();
  __break(1u);
}

uint64_t sub_1C1F80318(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = a1[1];
  uint64_t result = sub_1C214BA30();
  if (result >= v4)
  {
    if (v4 < 0) {
      goto LABEL_166;
    }
    if (v4) {
      return sub_1C1F80C7C(0, v4, 1, a1);
    }
    return result;
  }
  if (v4 >= 0) {
    uint64_t v6 = v4;
  }
  else {
    uint64_t v6 = v4 + 1;
  }
  if (v4 < -1) {
    goto LABEL_174;
  }
  uint64_t v102 = result;
  uint64_t v105 = v4;
  uint64_t v100 = a1;
  if (v4 < 2)
  {
    uint64_t v9 = (char *)MEMORY[0x1E4FBC860];
    uint64_t v111 = MEMORY[0x1E4FBC860];
    id v109 = (char *)((MEMORY[0x1E4FBC860] & 0xFFFFFFFFFFFFFF8) + 32);
    if (v4 != 1)
    {
      unint64_t v13 = *(void *)(MEMORY[0x1E4FBC860] + 16);
LABEL_132:
      if (v13 >= 2)
      {
        uint64_t v90 = *v100;
        do
        {
          unint64_t v91 = v13 - 2;
          if (v13 < 2) {
            goto LABEL_161;
          }
          if (!v90) {
            goto LABEL_173;
          }
          id v92 = v9;
          uint64_t v93 = v9 + 32;
          uint64_t v94 = *(void *)&v9[16 * v91 + 32];
          uint64_t v95 = *(void *)&v9[16 * v13 + 24];
          sub_1C1F81160((char *)(v90 + 8 * v94), (char *)(v90 + 8 * *(void *)&v93[16 * v13 - 16]), v90 + 8 * v95, v109);
          if (v2) {
            break;
          }
          if (v95 < v94) {
            goto LABEL_162;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            id v92 = sub_1C20FB150((uint64_t)v92);
          }
          if (v91 >= *((void *)v92 + 2)) {
            goto LABEL_163;
          }
          uint64_t v96 = &v92[16 * v91 + 32];
          *(void *)uint64_t v96 = v94;
          *((void *)v96 + 1) = v95;
          unint64_t v97 = *((void *)v92 + 2);
          if (v13 > v97) {
            goto LABEL_164;
          }
          uint64_t v9 = v92;
          memmove(&v92[16 * v13 + 16], &v92[16 * v13 + 32], 16 * (v97 - v13));
          *((void *)v92 + 2) = v97 - 1;
          unint64_t v13 = v97 - 1;
        }
        while (v97 > 2);
      }
LABEL_143:
      swift_bridgeObjectRelease();
      *(void *)((v111 & 0xFFFFFFFFFFFFFF8) + 0x10) = 0;
      sub_1C214A7A0();
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v7 = v6 >> 1;
    type metadata accessor for InteractionMedicationItem();
    uint64_t v8 = sub_1C214A810();
    *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10) = v7;
    id v109 = (char *)((v8 & 0xFFFFFFFFFFFFFF8) + 32);
    uint64_t v111 = v8;
  }
  uint64_t v10 = 0;
  uint64_t v11 = *a1;
  uint64_t v101 = *a1 - 8;
  uint64_t v9 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v12 = v105;
  uint64_t v110 = *a1;
  while (1)
  {
    uint64_t v14 = v10;
    uint64_t v15 = v10 + 1;
    if (v10 + 1 >= v12) {
      goto LABEL_56;
    }
    id v16 = *(void **)(v11 + 8 * v15);
    uint64_t v104 = v10;
    id v17 = *(void **)(v11 + 8 * v10);
    BOOL v18 = v16[8] == v17[8] && v16[9] == v17[9];
    if (!v18 && (sub_1C214BA80() & 1) == 0) {
      break;
    }
    if (v16[20] != v17[20] || v16[21] != v17[21]) {
      break;
    }
    uint64_t v20 = v104 + 2;
    if (v104 + 2 < v105)
    {
      int v106 = 0;
      uint64_t v11 = v110;
      goto LABEL_32;
    }
    uint64_t v15 = v104 + 2;
    uint64_t v11 = v110;
    uint64_t v14 = v104;
LABEL_56:
    if (v15 < v105)
    {
      if (__OFSUB__(v15, v14)) {
        goto LABEL_165;
      }
      if (v15 - v14 < v102)
      {
        if (__OFADD__(v14, v102)) {
          goto LABEL_167;
        }
        uint64_t v32 = v105;
        if (v14 + v102 < v105) {
          uint64_t v32 = v14 + v102;
        }
        if (v32 < v14)
        {
LABEL_168:
          __break(1u);
          goto LABEL_169;
        }
        if (v15 != v32)
        {
          uint64_t v103 = v32;
          unint64_t v98 = v9;
          uint64_t v99 = v2;
          unint64_t v33 = (void *)(v101 + 8 * v15);
          do
          {
            uint64_t v34 = *(void **)(v11 + 8 * v15);
            uint64_t v35 = v14;
            uint64_t v107 = v33;
            while (1)
            {
              uint64_t v36 = *v33;
              BOOL v37 = v34[8] == *(void *)(*v33 + 64) && v34[9] == *(void *)(*v33 + 72);
              if (v37 || (sub_1C214BA80())
                && v34[20] == *(void *)(v36 + 160)
                && v34[21] == *(void *)(v36 + 168))
              {
                break;
              }
              if ((sub_1C214BA80() & 1) == 0)
              {
                uint64_t v11 = v110;
                goto LABEL_66;
              }
              uint64_t v11 = v110;
              if (!v110) {
                goto LABEL_170;
              }
              uint64_t v39 = *v33;
              uint64_t v34 = (void *)v33[1];
              *unint64_t v33 = v34;
              v33[1] = v39;
              --v33;
              if (v15 == ++v35) {
                goto LABEL_66;
              }
            }
            uint64_t v11 = v110;
LABEL_66:
            ++v15;
            unint64_t v33 = v107 + 1;
          }
          while (v15 != v103);
          uint64_t v15 = v103;
          uint64_t v9 = v98;
          uint64_t v2 = v99;
        }
      }
    }
    if (v15 < v14) {
      goto LABEL_160;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v9 = sub_1C20FADDC(0, *((void *)v9 + 2) + 1, 1, v9);
    }
    unint64_t v41 = *((void *)v9 + 2);
    unint64_t v40 = *((void *)v9 + 3);
    unint64_t v13 = v41 + 1;
    uint64_t v11 = v110;
    if (v41 >= v40 >> 1)
    {
      uint64_t v89 = sub_1C20FADDC((char *)(v40 > 1), v41 + 1, 1, v9);
      uint64_t v11 = v110;
      uint64_t v9 = v89;
    }
    *((void *)v9 + 2) = v13;
    unint64_t v42 = v9 + 32;
    unint64_t v43 = &v9[16 * v41 + 32];
    *(void *)unint64_t v43 = v14;
    *((void *)v43 + 1) = v15;
    uint64_t v108 = v15;
    if (v41)
    {
      while (1)
      {
        unint64_t v44 = v13 - 1;
        if (v13 >= 4)
        {
          uint64_t v49 = &v42[16 * v13];
          uint64_t v50 = *((void *)v49 - 8);
          uint64_t v51 = *((void *)v49 - 7);
          BOOL v55 = __OFSUB__(v51, v50);
          uint64_t v52 = v51 - v50;
          if (v55) {
            goto LABEL_149;
          }
          uint64_t v54 = *((void *)v49 - 6);
          uint64_t v53 = *((void *)v49 - 5);
          BOOL v55 = __OFSUB__(v53, v54);
          uint64_t v47 = v53 - v54;
          char v48 = v55;
          if (v55) {
            goto LABEL_150;
          }
          unint64_t v56 = v13 - 2;
          uint64_t v57 = &v42[16 * v13 - 32];
          uint64_t v59 = *(void *)v57;
          uint64_t v58 = *((void *)v57 + 1);
          BOOL v55 = __OFSUB__(v58, v59);
          uint64_t v60 = v58 - v59;
          if (v55) {
            goto LABEL_152;
          }
          BOOL v55 = __OFADD__(v47, v60);
          uint64_t v61 = v47 + v60;
          if (v55) {
            goto LABEL_155;
          }
          if (v61 >= v52)
          {
            uint64_t v79 = &v42[16 * v44];
            uint64_t v81 = *(void *)v79;
            uint64_t v80 = *((void *)v79 + 1);
            BOOL v55 = __OFSUB__(v80, v81);
            uint64_t v82 = v80 - v81;
            if (v55) {
              goto LABEL_159;
            }
            BOOL v72 = v47 < v82;
            goto LABEL_121;
          }
        }
        else
        {
          if (v13 != 3)
          {
            uint64_t v73 = *((void *)v9 + 4);
            uint64_t v74 = *((void *)v9 + 5);
            BOOL v55 = __OFSUB__(v74, v73);
            uint64_t v66 = v74 - v73;
            char v67 = v55;
            goto LABEL_115;
          }
          uint64_t v46 = *((void *)v9 + 4);
          uint64_t v45 = *((void *)v9 + 5);
          BOOL v55 = __OFSUB__(v45, v46);
          uint64_t v47 = v45 - v46;
          char v48 = v55;
        }
        if (v48) {
          goto LABEL_151;
        }
        unint64_t v56 = v13 - 2;
        uint64_t v62 = &v42[16 * v13 - 32];
        uint64_t v64 = *(void *)v62;
        uint64_t v63 = *((void *)v62 + 1);
        BOOL v65 = __OFSUB__(v63, v64);
        uint64_t v66 = v63 - v64;
        char v67 = v65;
        if (v65) {
          goto LABEL_154;
        }
        BOOL v68 = &v42[16 * v44];
        uint64_t v70 = *(void *)v68;
        uint64_t v69 = *((void *)v68 + 1);
        BOOL v55 = __OFSUB__(v69, v70);
        uint64_t v71 = v69 - v70;
        if (v55) {
          goto LABEL_157;
        }
        if (__OFADD__(v66, v71)) {
          goto LABEL_158;
        }
        if (v66 + v71 >= v47)
        {
          BOOL v72 = v47 < v71;
LABEL_121:
          if (v72) {
            unint64_t v44 = v56;
          }
          goto LABEL_123;
        }
LABEL_115:
        if (v67) {
          goto LABEL_153;
        }
        BOOL v75 = &v42[16 * v44];
        uint64_t v77 = *(void *)v75;
        uint64_t v76 = *((void *)v75 + 1);
        BOOL v55 = __OFSUB__(v76, v77);
        uint64_t v78 = v76 - v77;
        if (v55) {
          goto LABEL_156;
        }
        if (v78 < v66) {
          goto LABEL_14;
        }
LABEL_123:
        unint64_t v83 = v44 - 1;
        if (v44 - 1 >= v13)
        {
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
LABEL_154:
          __break(1u);
LABEL_155:
          __break(1u);
LABEL_156:
          __break(1u);
LABEL_157:
          __break(1u);
LABEL_158:
          __break(1u);
LABEL_159:
          __break(1u);
LABEL_160:
          __break(1u);
LABEL_161:
          __break(1u);
LABEL_162:
          __break(1u);
LABEL_163:
          __break(1u);
LABEL_164:
          __break(1u);
LABEL_165:
          __break(1u);
LABEL_166:
          __break(1u);
LABEL_167:
          __break(1u);
          goto LABEL_168;
        }
        if (!v11) {
          goto LABEL_171;
        }
        uint64_t v84 = &v42[16 * v83];
        uint64_t v85 = *(void *)v84;
        unint64_t v86 = &v42[16 * v44];
        uint64_t v87 = *((void *)v86 + 1);
        sub_1C1F81160((char *)(v11 + 8 * *(void *)v84), (char *)(v11 + 8 * *(void *)v86), v11 + 8 * v87, v109);
        if (v2) {
          goto LABEL_143;
        }
        if (v87 < v85) {
          goto LABEL_146;
        }
        if (v44 > *((void *)v9 + 2)) {
          goto LABEL_147;
        }
        *(void *)uint64_t v84 = v85;
        *(void *)&v42[16 * v83 + 8] = v87;
        unint64_t v88 = *((void *)v9 + 2);
        if (v44 >= v88) {
          goto LABEL_148;
        }
        unint64_t v13 = v88 - 1;
        memmove(&v42[16 * v44], v86 + 16, 16 * (v88 - 1 - v44));
        *((void *)v9 + 2) = v88 - 1;
        uint64_t v11 = v110;
        if (v88 <= 2) {
          goto LABEL_14;
        }
      }
    }
    unint64_t v13 = 1;
LABEL_14:
    uint64_t v12 = v105;
    uint64_t v10 = v108;
    if (v108 >= v105) {
      goto LABEL_132;
    }
  }
  int v106 = sub_1C214BA80();
  uint64_t v20 = v104 + 2;
  uint64_t v11 = v110;
  if (v104 + 2 >= v105)
  {
LABEL_46:
    uint64_t v15 = v20;
    uint64_t v14 = v104;
    if ((v106 & 1) == 0) {
      goto LABEL_56;
    }
    if (v20 < v104) {
      goto LABEL_169;
    }
    goto LABEL_48;
  }
  while (1)
  {
LABEL_32:
    id v23 = *(void **)(v11 + 8 * v20);
    id v24 = *(void **)(v11 + 8 * v15);
    BOOL v25 = v23[8] == v24[8] && v23[9] == v24[9];
    if (!v25 && (sub_1C214BA80() & 1) == 0 || (v23[20] == v24[20] ? (BOOL v26 = v23[21] == v24[21]) : (BOOL v26 = 0), !v26))
    {
      int v21 = sub_1C214BA80();
      uint64_t v11 = v110;
      if ((v106 ^ v21)) {
        goto LABEL_46;
      }
      goto LABEL_31;
    }
    uint64_t v11 = v110;
    if (v106) {
      break;
    }
LABEL_31:
    uint64_t v22 = v20 + 1;
    uint64_t v15 = v20;
    uint64_t v20 = v22;
    if (v22 >= v105)
    {
      uint64_t v20 = v22;
      goto LABEL_46;
    }
  }
  uint64_t v14 = v104;
  if (v20 >= v104)
  {
LABEL_48:
    if (v14 < v20)
    {
      uint64_t v27 = (uint64_t *)(v101 + 8 * v20);
      uint64_t v28 = v20;
      uint64_t v29 = v14;
      uint64_t v30 = (uint64_t *)(v11 + 8 * v14);
      do
      {
        if (v29 != --v28)
        {
          if (!v11) {
            goto LABEL_172;
          }
          uint64_t v31 = *v30;
          *uint64_t v30 = *v27;
          uint64_t *v27 = v31;
        }
        ++v29;
        --v27;
        ++v30;
      }
      while (v29 < v28);
    }
    uint64_t v15 = v20;
    goto LABEL_56;
  }
LABEL_169:
  __break(1u);
LABEL_170:
  __break(1u);
LABEL_171:
  __break(1u);
LABEL_172:
  __break(1u);
LABEL_173:
  __break(1u);
LABEL_174:
  uint64_t result = sub_1C214B900();
  __break(1u);
  return result;
}

void sub_1C1F80B44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v19 = *a4;
    uint64_t v5 = *a4 + 8 * a3 - 8;
LABEL_5:
    uint64_t v6 = *(void **)(v19 + 8 * v4);
    uint64_t v7 = a1;
    uint64_t v18 = v5;
    while (1)
    {
      uint64_t v8 = *(void **)v5;
      id v9 = v6;
      id v10 = v8;
      id v11 = objc_msgSend(v9, sel_identifier);
      id v12 = objc_msgSend(v11, sel_rawIdentifier);

      id v13 = objc_msgSend(v10, sel_identifier);
      id v14 = objc_msgSend(v13, sel_rawIdentifier);

      if ((uint64_t)v12 >= (uint64_t)v14)
      {
LABEL_4:
        ++v4;
        uint64_t v5 = v18 + 8;
        if (v4 == a2) {
          return;
        }
        goto LABEL_5;
      }
      if (!v19) {
        break;
      }
      uint64_t v15 = *(void **)v5;
      uint64_t v6 = *(void **)(v5 + 8);
      *(void *)uint64_t v5 = v6;
      *(void *)(v5 + 8) = v15;
      v5 -= 8;
      if (v4 == ++v7) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
}

uint64_t sub_1C1F80C7C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v13 = result;
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v15 = *a4;
    uint64_t v5 = (void *)(*a4 + 8 * a3 - 8);
LABEL_5:
    uint64_t v6 = *(void **)(v15 + 8 * v4);
    uint64_t v7 = v13;
    id v14 = v5;
    while (1)
    {
      uint64_t v8 = *v5;
      BOOL v9 = v6[8] == *(void *)(*v5 + 64) && v6[9] == *(void *)(*v5 + 72);
      if (v9 || (sub_1C214BA80())
        && ((uint64_t result = v6[20], result == *(void *)(v8 + 160)) ? (v10 = v6[21] == *(void *)(v8 + 168)) : (v10 = 0), v10)
        || (uint64_t result = sub_1C214BA80(), (result & 1) == 0))
      {
LABEL_4:
        ++v4;
        uint64_t v5 = v14 + 1;
        if (v4 == a2) {
          return result;
        }
        goto LABEL_5;
      }
      if (!v15) {
        break;
      }
      uint64_t v11 = *v5;
      uint64_t v6 = (void *)v5[1];
      *uint64_t v5 = v6;
      v5[1] = v11;
      --v5;
      if (v4 == ++v7) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1C1F80DA0(id *__src, id *a2, unint64_t a3, void **a4)
{
  uint64_t v4 = a2;
  uint64_t v5 = __src;
  int64_t v6 = (char *)a2 - (char *)__src;
  int64_t v7 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0) {
    int64_t v7 = (char *)a2 - (char *)__src;
  }
  uint64_t v8 = v7 >> 3;
  uint64_t v9 = a3 - (void)a2;
  uint64_t v10 = a3 - (void)a2 + 7;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v10 = a3 - (void)a2;
  }
  uint64_t v11 = v10 >> 3;
  unint64_t v43 = __src;
  unint64_t v42 = a4;
  if (v8 >= v10 >> 3)
  {
    if (v9 < -7) {
      goto LABEL_46;
    }
    if (a4 != a2 || &a2[v11] <= a4) {
      memmove(a4, a2, 8 * v11);
    }
    id v23 = (char *)&a4[v11];
    unint64_t v41 = v23;
    unint64_t v43 = v4;
    if (v5 >= v4 || v9 < 8) {
      goto LABEL_45;
    }
    id v24 = (id *)(a3 - 8);
    BOOL v25 = v4;
    uint64_t v35 = v5;
    while (1)
    {
      unint64_t v37 = (unint64_t)v23;
      uint64_t v39 = v24 + 1;
      BOOL v26 = v23 - 8;
      uint64_t v27 = *--v25;
      id v28 = *((id *)v23 - 1);
      id v29 = v27;
      id v30 = objc_msgSend(v28, sel_identifier);
      id v31 = objc_msgSend(v30, sel_rawIdentifier);

      id v32 = objc_msgSend(v29, sel_identifier);
      id v33 = objc_msgSend(v32, sel_rawIdentifier);

      if ((uint64_t)v31 < (uint64_t)v33) {
        break;
      }
      unint64_t v41 = v26;
      if ((unint64_t)v39 < v37 || (unint64_t)v24 >= v37)
      {
        *id v24 = *(id *)v26;
        BOOL v25 = v4;
        id v23 = v26;
        goto LABEL_43;
      }
      if (v39 != (id *)v37) {
        *id v24 = *(id *)v26;
      }
      BOOL v25 = v4;
      id v23 = v26;
      if (v4 <= v35) {
        goto LABEL_45;
      }
LABEL_44:
      --v24;
      uint64_t v4 = v25;
      if (v23 <= (char *)a4) {
        goto LABEL_45;
      }
    }
    id v23 = (char *)v37;
    if (v39 != v4 || v24 >= v4) {
      *id v24 = *v25;
    }
    unint64_t v43 = v25;
LABEL_43:
    if (v25 <= v35) {
      goto LABEL_45;
    }
    goto LABEL_44;
  }
  if (v6 >= -7)
  {
    if (a4 != __src || &__src[v8] <= a4) {
      memmove(a4, __src, 8 * v8);
    }
    id v38 = (char *)&a4[v8];
    unint64_t v41 = v38;
    if ((unint64_t)v4 < a3 && v6 >= 8)
    {
      id v12 = a4;
      do
      {
        uint64_t v13 = v5;
        id v14 = *v12;
        id v15 = *v4;
        id v16 = v14;
        id v17 = objc_msgSend(v15, sel_identifier);
        id v18 = objc_msgSend(v17, sel_rawIdentifier);

        id v19 = objc_msgSend(v16, sel_identifier);
        id v20 = objc_msgSend(v19, sel_rawIdentifier);

        if ((uint64_t)v18 >= (uint64_t)v20)
        {
          uint64_t v22 = v13;
          if (v13 != v12) {
            *uint64_t v13 = *v12;
          }
          unint64_t v42 = ++v12;
          int v21 = v4;
        }
        else
        {
          int v21 = v4 + 1;
          uint64_t v22 = v13;
          if (v13 < v4 || v13 >= v21 || v13 != v4) {
            *uint64_t v13 = *v4;
          }
        }
        uint64_t v5 = v22 + 1;
        if (v12 >= (void **)v38) {
          break;
        }
        uint64_t v4 = v21;
      }
      while ((unint64_t)v21 < a3);
      unint64_t v43 = v5;
    }
LABEL_45:
    sub_1C20FAFD8(&v43, &v42, &v41);
    return 1;
  }
LABEL_46:
  uint64_t result = sub_1C214B990();
  __break(1u);
  return result;
}

uint64_t sub_1C1F81160(char *__src, char *a2, unint64_t a3, char *a4)
{
  uint64_t v4 = a2;
  uint64_t v5 = __src;
  int64_t v6 = a2 - __src;
  int64_t v7 = a2 - __src + 7;
  if (a2 - __src >= 0) {
    int64_t v7 = a2 - __src;
  }
  uint64_t v8 = v7 >> 3;
  uint64_t v9 = a3 - (void)a2;
  uint64_t v10 = a3 - (void)a2 + 7;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v10 = a3 - (void)a2;
  }
  uint64_t v11 = v10 >> 3;
  uint64_t v39 = __src;
  id v38 = a4;
  if (v8 >= v10 >> 3)
  {
    if (v9 >= -7)
    {
      if (a4 != a2 || &a2[8 * v11] <= a4) {
        memmove(a4, a2, 8 * v11);
      }
      int v21 = &a4[8 * v11];
      unint64_t v37 = v21;
      uint64_t v39 = v4;
      if (v5 < v4 && v9 >= 8)
      {
        uint64_t v22 = (char *)(a3 - 8);
        id v23 = v4;
        while (1)
        {
          uint64_t v35 = v21;
          id v33 = v22 + 8;
          BOOL v25 = (void *)*((void *)v21 - 1);
          v21 -= 8;
          id v24 = v25;
          uint64_t v27 = *((void *)v23 - 1);
          v23 -= 8;
          uint64_t v26 = v27;
          uint64_t v28 = *(void *)(v27 + 72);
          BOOL v29 = v24[8] == *(void *)(v27 + 64) && v24[9] == v28;
          if (v29 || (sub_1C214BA80())
            && (v24[20] == *(void *)(v26 + 160) ? (BOOL v30 = v24[21] == *(void *)(v26 + 168)) : (BOOL v30 = 0), v30)
            || (sub_1C214BA80() & 1) == 0)
          {
            unint64_t v37 = v21;
            if (v33 < v35 || v22 >= v35 || v33 != v35) {
              *(void *)uint64_t v22 = *(void *)v21;
            }
            id v23 = v4;
            if (v4 <= v5) {
              goto LABEL_65;
            }
          }
          else
          {
            if (v33 != v4 || v22 >= v4) {
              *(void *)uint64_t v22 = *(void *)v23;
            }
            uint64_t v39 = v23;
            int v21 = v35;
            if (v23 <= v5) {
              goto LABEL_65;
            }
          }
          v22 -= 8;
          uint64_t v4 = v23;
          if (v21 <= a4) {
            goto LABEL_65;
          }
        }
      }
      goto LABEL_65;
    }
  }
  else if (v6 >= -7)
  {
    if (a4 != __src || &__src[8 * v8] <= a4) {
      memmove(a4, __src, 8 * v8);
    }
    uint64_t v34 = &a4[8 * v8];
    unint64_t v37 = v34;
    if ((unint64_t)v4 < a3 && v6 >= 8)
    {
      id v12 = a4;
      do
      {
        uint64_t v13 = v4;
        uint64_t v14 = *(void *)v4;
        uint64_t v15 = *(void *)v12;
        uint64_t v16 = *(void *)(*(void *)v4 + 64);
        uint64_t v17 = *(void *)(*(void *)v4 + 72);
        BOOL v18 = v16 == *(void *)(*(void *)v12 + 64) && v17 == *(void *)(*(void *)v12 + 72);
        if (v18 || (sub_1C214BA80())
          && (*(void *)(v14 + 160) == *(void *)(v15 + 160)
            ? (BOOL v19 = *(void *)(v14 + 168) == *(void *)(v15 + 168))
            : (BOOL v19 = 0),
              v19)
          || (sub_1C214BA80() & 1) == 0)
        {
          if (v5 != v12) {
            *(void *)uint64_t v5 = *(void *)v12;
          }
          v12 += 8;
          id v38 = v12;
          id v20 = v13;
        }
        else
        {
          id v20 = v13 + 8;
          if (v5 < v13 || v5 >= v20 || v5 != v13) {
            *(void *)uint64_t v5 = *(void *)v13;
          }
        }
        v5 += 8;
        if (v12 >= v34) {
          break;
        }
        uint64_t v4 = v20;
      }
      while ((unint64_t)v20 < a3);
      uint64_t v39 = v5;
    }
LABEL_65:
    sub_1C20FAFD8(&v39, &v38, &v37);
    return 1;
  }
  uint64_t result = sub_1C214B990();
  __break(1u);
  return result;
}

uint64_t sub_1C1F814D8(unint64_t a1)
{
  return sub_1C1F3AA34(0, *(void *)(a1 + 16), 0, a1);
}

void sub_1C1F814EC(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_1C214B930();
    swift_bridgeObjectRelease();
  }

  JUMPOUT(0x1C8753970);
}

uint64_t sub_1C1F81568(unint64_t a1)
{
  return sub_1C1F3AA7C(0, *(void *)(a1 + 16), 0, a1);
}

char *sub_1C1F8157C(uint64_t a1)
{
  return sub_1C1F3BBCC(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1C1F81590(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v3 = a3;
    uint64_t v5 = a2;
    uint64_t v7 = a1;
    unint64_t v6 = *v4;
    if (!(*v4 >> 62))
    {
      if (*(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10) >= a2) {
        goto LABEL_4;
      }
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v23 = sub_1C214B930();
  swift_bridgeObjectRelease();
  if (v23 < v5) {
    goto LABEL_33;
  }
LABEL_4:
  uint64_t v9 = v5 - v7;
  if (__OFSUB__(v5, v7))
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  uint64_t v8 = 1 - v9;
  if (__OFSUB__(1, v9))
  {
LABEL_35:
    __break(1u);
LABEL_36:
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1C214B930();
    swift_bridgeObjectRelease();
    uint64_t v11 = v10 + v8;
    if (!__OFADD__(v10, v8)) {
      goto LABEL_8;
    }
LABEL_38:
    __break(1u);
LABEL_39:
    swift_bridgeObjectRetain();
    uint64_t v14 = sub_1C214B930();
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  unint64_t v6 = *v4;
  if (*v4 >> 62) {
    goto LABEL_36;
  }
  uint64_t v10 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v11 = v10 + v8;
  if (__OFADD__(v10, v8)) {
    goto LABEL_38;
  }
LABEL_8:
  unint64_t v6 = *v4;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v4 = v6;
  uint64_t v10 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v6 & 0x8000000000000000) == 0 && (v6 & 0x4000000000000000) == 0)
  {
    uint64_t v13 = v6 & 0xFFFFFFFFFFFFFF8;
    if (v11 <= *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      goto LABEL_18;
    }
    uint64_t v10 = 1;
  }
  if (v6 >> 62) {
    goto LABEL_39;
  }
  uint64_t v14 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_15:
  if (v14 <= v11) {
    uint64_t v14 = v11;
  }
  swift_bridgeObjectRetain();
  unint64_t v6 = MEMORY[0x1C8753970](v10, v14, 1, v6);
  swift_bridgeObjectRelease();
  *uint64_t v4 = v6;
  uint64_t v13 = v6 & 0xFFFFFFFFFFFFFF8;
LABEL_18:
  uint64_t v15 = (void *)(v13 + 32 + 8 * v7);
  sub_1C1F12718(0, (unint64_t *)&qword_1EA2C3508);
  swift_arrayDestroy();
  if (v8)
  {
    if (v6 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v24 = sub_1C214B930();
      swift_bridgeObjectRelease();
      uint64_t v17 = v24 - v5;
      if (!__OFSUB__(v24, v5))
      {
LABEL_21:
        if (v17 < 0)
        {
LABEL_46:
          uint64_t result = sub_1C214B990();
          __break(1u);
          return result;
        }
        BOOL v18 = (char *)(v15 + 1);
        BOOL v19 = (char *)(v13 + 32 + 8 * v5);
        if (v15 + 1 != (void *)v19 || v18 >= &v19[8 * v17]) {
          memmove(v18, v19, 8 * v17);
        }
        if (!(v6 >> 62))
        {
          uint64_t v20 = *(void *)(v13 + 16);
          uint64_t v21 = v20 + v8;
          if (!__OFADD__(v20, v8))
          {
LABEL_27:
            *(void *)(v13 + 16) = v21;
            goto LABEL_28;
          }
          goto LABEL_45;
        }
LABEL_43:
        swift_bridgeObjectRetain();
        uint64_t v25 = sub_1C214B930();
        swift_bridgeObjectRelease();
        uint64_t v21 = v25 + v8;
        if (!__OFADD__(v25, v8)) {
          goto LABEL_27;
        }
LABEL_45:
        __break(1u);
        goto LABEL_46;
      }
    }
    else
    {
      uint64_t v16 = *(void *)(v13 + 16);
      uint64_t v17 = v16 - v5;
      if (!__OFSUB__(v16, v5)) {
        goto LABEL_21;
      }
    }
    __break(1u);
    goto LABEL_43;
  }
LABEL_28:
  *uint64_t v15 = v3;

  return sub_1C214A7A0();
}

char *sub_1C1F8188C(uint64_t a1, int64_t a2, char a3)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v5 = *v3;
  int64_t v6 = *((void *)*v3 + 2);
  if (v6 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v8 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v9 = 1 - v8;
  if (__OFSUB__(1, v8))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  int64_t v10 = v6 + v9;
  if (__OFADD__(v6, v9))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  uint64_t result = (char *)swift_isUniquelyReferenced_nonNull_native();
  if (!result || v10 > *((void *)v5 + 3) >> 1)
  {
    if (v6 <= v10) {
      int64_t v13 = v6 + v9;
    }
    else {
      int64_t v13 = v6;
    }
    uint64_t result = sub_1C1F3BBCC(result, v13, 1, v5);
    uint64_t v5 = result;
  }
  uint64_t v14 = v5 + 32;
  uint64_t v15 = &v5[a1 + 32];
  if (!v9) {
    goto LABEL_20;
  }
  uint64_t v16 = *((void *)v5 + 2);
  size_t v17 = v16 - a2;
  if (__OFSUB__(v16, a2)) {
    goto LABEL_26;
  }
  if ((v17 & 0x8000000000000000) == 0)
  {
    uint64_t result = v15 + 1;
    BOOL v18 = &v14[a2];
    if (v15 + 1 != &v14[a2] || result >= &v18[v17]) {
      uint64_t result = (char *)memmove(result, v18, v17);
    }
    uint64_t v19 = *((void *)v5 + 2);
    BOOL v20 = __OFADD__(v19, v9);
    uint64_t v21 = v19 + v9;
    if (!v20)
    {
      *((void *)v5 + 2) = v21;
LABEL_20:
      *uint64_t v15 = a3;
      *uint64_t v3 = v5;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  uint64_t result = (char *)sub_1C214B990();
  __break(1u);
  return result;
}

uint64_t sub_1C1F819EC(uint64_t a1, int64_t a2, uint64_t a3)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v5 = *(void **)v3;
  int64_t v6 = *(void *)(*(void *)v3 + 16);
  if (v6 < a2)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  uint64_t v8 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v9 = 1 - v8;
  if (__OFSUB__(1, v8))
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  int64_t v10 = v6 + v9;
  if (__OFADD__(v6, v9))
  {
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  *(void *)uint64_t v3 = v5;
  if (!isUniquelyReferenced_nonNull_native || v10 > v5[3] >> 1)
  {
    if (v6 <= v10) {
      int64_t v13 = v6 + v9;
    }
    else {
      int64_t v13 = v6;
    }
    uint64_t v5 = sub_1C1F3AAC4(isUniquelyReferenced_nonNull_native, v13, 1, v5);
    *(void *)uint64_t v3 = v5;
  }
  uint64_t v14 = (uint64_t)&v5[5 * a1 + 4];
  sub_1C1F248B4(0, (unint64_t *)&qword_1EBF0C2F0);
  swift_arrayDestroy();
  if (!v9) {
    goto LABEL_20;
  }
  uint64_t v15 = v5[2];
  BOOL v16 = __OFSUB__(v15, a2);
  uint64_t v17 = v15 - a2;
  if (v16) {
    goto LABEL_28;
  }
  if (v17 < 0)
  {
LABEL_30:
    uint64_t result = sub_1C214B990();
    __break(1u);
    return result;
  }
  BOOL v18 = (char *)(v14 + 40);
  uint64_t v19 = (char *)&v5[5 * a2 + 4];
  if ((char *)(v14 + 40) != v19 || v18 >= &v19[40 * v17]) {
    memmove(v18, v19, 40 * v17);
  }
  uint64_t v20 = v5[2];
  BOOL v16 = __OFADD__(v20, v9);
  uint64_t v21 = v20 + v9;
  if (v16)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  v5[2] = v21;
LABEL_20:
  sub_1C1F236D8(a3, v14);

  return sub_1C1F84A10(a3);
}

uint64_t sub_1C1F81BB0(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1C214B930();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1C214B930();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1C1F847C0(0, &qword_1EA2C3DE8, &qword_1EA2C3DE0, 0x1E4F2B630, MEMORY[0x1E4FBB320]);
        sub_1C1F84C90(&qword_1EA2C3DF0, &qword_1EA2C3DE8, &qword_1EA2C3DE0, 0x1E4F2B630);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          id v12 = sub_1C1F72364(v16, i, a3);
          id v14 = *v13;
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1C1F12718(0, &qword_1EA2C3DE0);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_1C214B990();
  __break(1u);
  return result;
}

uint64_t sub_1C1F81E0C(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1C214B930();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1C214B930();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1C1F847C0(0, (unint64_t *)&qword_1EBF0C790, (unint64_t *)&qword_1EBF0C8C0, 0x1E4F66B80, MEMORY[0x1E4FBB320]);
        sub_1C1F84C90(&qword_1EA2C3E38, (unint64_t *)&qword_1EBF0C790, (unint64_t *)&qword_1EBF0C8C0, 0x1E4F66B80);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          id v12 = sub_1C1F72364(v16, i, a3);
          id v14 = *v13;
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8C0);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_1C214B990();
  __break(1u);
  return result;
}

uint64_t sub_1C1F82068(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1C214B930();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1C214B930();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1C1F847C0(0, &qword_1EA2C3E50, (unint64_t *)&qword_1EBF0C880, 0x1E4F66AC8, MEMORY[0x1E4FBB320]);
        sub_1C1F84C90(&qword_1EA2C3E58, &qword_1EA2C3E50, (unint64_t *)&qword_1EBF0C880, 0x1E4F66AC8);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          id v12 = sub_1C1F72364(v16, i, a3);
          id v14 = *v13;
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C880);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_1C214B990();
  __break(1u);
  return result;
}

uint64_t sub_1C1F822C4(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1C214B930();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1C214B930();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1C1F84BA4(0, &qword_1EA2C3E40, v11, (uint64_t (*)(uint64_t))type metadata accessor for InteractionMedicationItem, MEMORY[0x1E4FBB320]);
        sub_1C1F84C08(v12, v13, v14);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          BOOL v16 = sub_1C1F72438(v20, i, a3);
          uint64_t v18 = *v17;
          swift_retain();
          ((void (*)(uint64_t (**)(), void))v16)(v20, 0);
          *(void *)(a1 + 8 * i) = v18;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    type metadata accessor for InteractionMedicationItem();
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_1C214B990();
  __break(1u);
  return result;
}

uint64_t sub_1C1F824F0(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1C214B930();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1C214B930();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1C1F847C0(0, &qword_1EA2C3DD0, (unint64_t *)&qword_1EBF0C810, 0x1E4F28DC8, MEMORY[0x1E4FBB320]);
        sub_1C1F84C90(&qword_1EA2C3DD8, &qword_1EA2C3DD0, (unint64_t *)&qword_1EBF0C810, 0x1E4F28DC8);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          uint64_t v12 = sub_1C1F723D0(v16, i, a3);
          id v14 = *v13;
          ((void (*)(void (**)(id *), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C810);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_1C214B990();
  __break(1u);
  return result;
}

uint64_t sub_1C1F8274C(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1C214B930();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1C214B930();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1C1F847C0(0, &qword_1EA2C3E28, &qword_1EBF0C8A0, 0x1E4F66AD0, MEMORY[0x1E4FBB320]);
        sub_1C1F84C90(&qword_1EA2C3E30, &qword_1EA2C3E28, &qword_1EBF0C8A0, 0x1E4F66AD0);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          uint64_t v12 = sub_1C1F72364(v16, i, a3);
          id v14 = *v13;
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1C1F12718(0, &qword_1EBF0C8A0);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_1C214B990();
  __break(1u);
  return result;
}

uint64_t sub_1C1F829A8(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1C214B930();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1C214B930();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1C1F847C0(0, &qword_1EBF0C778, (unint64_t *)&qword_1EBF0C8A8, 0x1E4F66B08, MEMORY[0x1E4FBB320]);
        sub_1C1F84C90(&qword_1EA2C3DC8, &qword_1EBF0C778, (unint64_t *)&qword_1EBF0C8A8, 0x1E4F66B08);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          uint64_t v12 = sub_1C1F72364(v16, i, a3);
          id v14 = *v13;
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8A8);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_1C214B990();
  __break(1u);
  return result;
}

uint64_t sub_1C1F82C04(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1C214B930();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1C214B930();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1C1F847C0(0, &qword_1EA2C3E18, &qword_1EA2C3E10, 0x1E4F66B20, MEMORY[0x1E4FBB320]);
        sub_1C1F84C90(&qword_1EA2C3E20, &qword_1EA2C3E18, &qword_1EA2C3E10, 0x1E4F66B20);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          uint64_t v12 = sub_1C1F72364(v16, i, a3);
          id v14 = *v13;
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1C1F12718(0, &qword_1EA2C3E10);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_1C214B990();
  __break(1u);
  return result;
}

uint64_t sub_1C1F82E60(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1C214B930();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1C214B930();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1C1F847C0(0, &qword_1EA2C3E00, (unint64_t *)&qword_1EBF0C8D8, 0x1E4F66B48, MEMORY[0x1E4FBB320]);
        sub_1C1F84C90(&qword_1EA2C3E08, &qword_1EA2C3E00, (unint64_t *)&qword_1EBF0C8D8, 0x1E4F66B48);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          uint64_t v12 = sub_1C1F72364(v16, i, a3);
          id v14 = *v13;
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8D8);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_1C214B990();
  __break(1u);
  return result;
}

void sub_1C1F830C0(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_1C214B930();
    swift_bridgeObjectRelease();
    sub_1C214BB40();
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_1C214B930();
    swift_bridgeObjectRelease();
    if (!v3) {
      return;
    }
  }
  else
  {
    sub_1C214BB40();
    uint64_t v3 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v3) {
      return;
    }
  }
  if (v3 < 1)
  {
    __break(1u);
  }
  else if ((a2 & 0xC000000000000001) != 0)
  {
    for (uint64_t i = 0; i != v3; ++i)
    {
      MEMORY[0x1C8753960](i, a2);
      sub_1C214B230();
      swift_unknownObjectRelease();
    }
  }
  else
  {
    uint64_t v5 = (void **)(a2 + 32);
    do
    {
      unint64_t v6 = *v5++;
      id v7 = v6;
      sub_1C214B230();

      --v3;
    }
    while (v3);
  }
}

uint64_t sub_1C1F831D8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1C1F5FF8C();
  uint64_t v36 = *(void *)(v8 - 8);
  uint64_t v37 = v8;
  uint64_t v9 = MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x1F4188790](v9);
  id v14 = (char *)&v30 - v13;
  uint64_t v15 = *(void *)(a4 + 64);
  uint64_t v35 = a4 + 64;
  uint64_t v16 = -1 << *(unsigned char *)(a4 + 32);
  if (-v16 < 64) {
    uint64_t v17 = ~(-1 << -(char)v16);
  }
  else {
    uint64_t v17 = -1;
  }
  unint64_t v18 = v17 & v15;
  if (!a2)
  {
    int64_t v19 = 0;
    a3 = 0;
LABEL_39:
    uint64_t v29 = v35;
    *a1 = a4;
    a1[1] = v29;
    a1[2] = ~v16;
    a1[3] = v19;
    a1[4] = v18;
    return a3;
  }
  if (!a3)
  {
    int64_t v19 = 0;
    goto LABEL_39;
  }
  if (a3 < 0) {
    goto LABEL_41;
  }
  uint64_t v32 = -1 << *(unsigned char *)(a4 + 32);
  id v33 = a1;
  int64_t v19 = 0;
  uint64_t v20 = 0;
  int64_t v34 = (unint64_t)(63 - v16) >> 6;
  int64_t v31 = v34 - 1;
  uint64_t v21 = a3;
  if (!v18) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v22 = __clz(__rbit64(v18));
  v18 &= v18 - 1;
  unint64_t v23 = v22 | (v19 << 6);
  while (1)
  {
    ++v20;
    uint64_t v27 = *(void *)(a4 + 48);
    uint64_t v28 = sub_1C21496A0();
    (*(void (**)(char *, unint64_t, uint64_t))(*(void *)(v28 - 8) + 16))(v11, v27 + *(void *)(*(void *)(v28 - 8) + 72) * v23, v28);
    *(void *)&v11[*(int *)(v37 + 48)] = *(void *)(*(void *)(a4 + 56) + 8 * v23);
    sub_1C1F84B3C((uint64_t)v11, (uint64_t)v14, (uint64_t (*)(void))sub_1C1F5FF8C);
    sub_1C1F84B3C((uint64_t)v14, a2, (uint64_t (*)(void))sub_1C1F5FF8C);
    if (v20 == v21)
    {
      a3 = v21;
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    a2 += *(void *)(v36 + 72);
    uint64_t result = swift_bridgeObjectRetain();
    if (v18) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v24 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v24 >= v34) {
      goto LABEL_33;
    }
    unint64_t v25 = *(void *)(v35 + 8 * v24);
    if (!v25)
    {
      v19 += 2;
      if (v24 + 1 >= v34)
      {
        unint64_t v18 = 0;
        int64_t v19 = v24;
      }
      else
      {
        unint64_t v25 = *(void *)(v35 + 8 * v19);
        if (v25) {
          goto LABEL_14;
        }
        int64_t v26 = v24 + 2;
        if (v24 + 2 >= v34) {
          goto LABEL_33;
        }
        unint64_t v25 = *(void *)(v35 + 8 * v26);
        if (v25)
        {
LABEL_17:
          int64_t v24 = v26;
          goto LABEL_18;
        }
        int64_t v19 = v24 + 3;
        if (v24 + 3 < v34)
        {
          unint64_t v25 = *(void *)(v35 + 8 * v19);
          if (v25)
          {
LABEL_14:
            int64_t v24 = v19;
            goto LABEL_18;
          }
          int64_t v26 = v24 + 4;
          if (v24 + 4 >= v34)
          {
LABEL_33:
            unint64_t v18 = 0;
            goto LABEL_37;
          }
          unint64_t v25 = *(void *)(v35 + 8 * v26);
          if (!v25)
          {
            while (1)
            {
              int64_t v24 = v26 + 1;
              if (__OFADD__(v26, 1)) {
                goto LABEL_42;
              }
              if (v24 >= v34)
              {
                unint64_t v18 = 0;
                int64_t v19 = v31;
                goto LABEL_37;
              }
              unint64_t v25 = *(void *)(v35 + 8 * v24);
              ++v26;
              if (v25) {
                goto LABEL_18;
              }
            }
          }
          goto LABEL_17;
        }
        unint64_t v18 = 0;
        int64_t v19 = v24 + 2;
      }
LABEL_37:
      a3 = v20;
LABEL_38:
      uint64_t v16 = v32;
      a1 = v33;
      goto LABEL_39;
    }
LABEL_18:
    unint64_t v18 = (v25 - 1) & v25;
    unint64_t v23 = __clz(__rbit64(v25)) + (v24 << 6);
    int64_t v19 = v24;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_1C1F83544(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 56;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 56);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_39:
    *uint64_t v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_39;
  }
  if (a3 < 0) {
    goto LABEL_41;
  }
  uint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  uint64_t v24 = -1 << *(unsigned char *)(a4 + 32);
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    uint64_t v20 = (void *)(*(void *)(a4 + 48) + 32 * v16);
    uint64_t v21 = v20[1];
    uint64_t v22 = v20[2];
    uint64_t v23 = v20[3];
    *uint64_t v11 = *v20;
    v11[1] = v21;
    void v11[2] = v22;
    void v11[3] = v23;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 4;
    swift_bridgeObjectRetain();
    uint64_t result = swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      break;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18)
    {
      v12 += 2;
      if (v17 + 1 >= v14)
      {
        unint64_t v9 = 0;
        int64_t v12 = v17;
      }
      else
      {
        unint64_t v18 = *(void *)(v6 + 8 * v12);
        if (v18) {
          goto LABEL_14;
        }
        int64_t v19 = v17 + 2;
        if (v17 + 2 >= v14) {
          goto LABEL_33;
        }
        unint64_t v18 = *(void *)(v6 + 8 * v19);
        if (v18)
        {
LABEL_17:
          int64_t v17 = v19;
          goto LABEL_18;
        }
        int64_t v12 = v17 + 3;
        if (v17 + 3 < v14)
        {
          unint64_t v18 = *(void *)(v6 + 8 * v12);
          if (v18)
          {
LABEL_14:
            int64_t v17 = v12;
            goto LABEL_18;
          }
          int64_t v19 = v17 + 4;
          if (v17 + 4 >= v14)
          {
LABEL_33:
            unint64_t v9 = 0;
            goto LABEL_37;
          }
          unint64_t v18 = *(void *)(v6 + 8 * v19);
          if (!v18)
          {
            while (1)
            {
              int64_t v17 = v19 + 1;
              if (__OFADD__(v19, 1)) {
                goto LABEL_42;
              }
              if (v17 >= v14)
              {
                unint64_t v9 = 0;
                int64_t v12 = v14 - 1;
                goto LABEL_37;
              }
              unint64_t v18 = *(void *)(v6 + 8 * v17);
              ++v19;
              if (v18) {
                goto LABEL_18;
              }
            }
          }
          goto LABEL_17;
        }
        unint64_t v9 = 0;
        int64_t v12 = v17 + 2;
      }
LABEL_37:
      uint64_t v10 = v13;
LABEL_38:
      uint64_t v7 = v24;
      goto LABEL_39;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_1C1F83760(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for Dosage();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v8 - 8);
  int64_t v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x1F4188790](v10);
  unint64_t v15 = (char *)&v29 - v14;
  uint64_t v34 = a4;
  uint64_t v17 = a4 + 64;
  uint64_t v16 = *(void *)(a4 + 64);
  uint64_t v31 = -1 << *(unsigned char *)(a4 + 32);
  if (-v31 < 64) {
    uint64_t v18 = ~(-1 << -(char)v31);
  }
  else {
    uint64_t v18 = -1;
  }
  unint64_t v19 = v18 & v16;
  if (!a2)
  {
    int64_t v20 = 0;
    a3 = 0;
LABEL_34:
    uint64_t v28 = ~v31;
    *a1 = v34;
    a1[1] = v17;
    a1[2] = v28;
    a1[3] = v20;
    a1[4] = v19;
    return a3;
  }
  if (!a3)
  {
    int64_t v20 = 0;
    goto LABEL_34;
  }
  if (a3 < 0)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  uint64_t v30 = a1;
  int64_t v20 = 0;
  uint64_t v21 = 0;
  uint64_t v32 = v17;
  int64_t v33 = (unint64_t)(63 - v31) >> 6;
  int64_t v29 = v33 - 1;
  if (!v19) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v22 = __clz(__rbit64(v19));
  v19 &= v19 - 1;
  unint64_t v23 = v22 | (v20 << 6);
  while (1)
  {
    ++v21;
    uint64_t v27 = *(void *)(v9 + 72);
    sub_1C1F84AD8(*(void *)(v34 + 56) + v27 * v23, (uint64_t)v12);
    sub_1C1F84B3C((uint64_t)v12, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for Dosage);
    uint64_t result = sub_1C1F84B3C((uint64_t)v15, a2, (uint64_t (*)(void))type metadata accessor for Dosage);
    if (v21 == a3) {
      goto LABEL_33;
    }
    a2 += v27;
    if (v19) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v24 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
      __break(1u);
      goto LABEL_41;
    }
    if (v24 >= v33)
    {
      unint64_t v19 = 0;
      a3 = v21;
LABEL_33:
      a1 = v30;
      uint64_t v17 = v32;
      goto LABEL_34;
    }
    uint64_t v17 = v32;
    unint64_t v25 = *(void *)(v32 + 8 * v24);
    if (!v25) {
      break;
    }
LABEL_18:
    unint64_t v19 = (v25 - 1) & v25;
    unint64_t v23 = __clz(__rbit64(v25)) + (v24 << 6);
    int64_t v20 = v24;
  }
  v20 += 2;
  if (v24 + 1 >= v33)
  {
    unint64_t v19 = 0;
    int64_t v20 = v24;
LABEL_39:
    a3 = v21;
    a1 = v30;
    goto LABEL_34;
  }
  unint64_t v25 = *(void *)(v32 + 8 * v20);
  if (v25) {
    goto LABEL_14;
  }
  int64_t v26 = v24 + 2;
  if (v24 + 2 >= v33) {
    goto LABEL_36;
  }
  unint64_t v25 = *(void *)(v32 + 8 * v26);
  if (v25) {
    goto LABEL_17;
  }
  int64_t v20 = v24 + 3;
  if (v24 + 3 >= v33)
  {
    unint64_t v19 = 0;
    int64_t v20 = v24 + 2;
    goto LABEL_39;
  }
  unint64_t v25 = *(void *)(v32 + 8 * v20);
  if (v25)
  {
LABEL_14:
    int64_t v24 = v20;
    goto LABEL_18;
  }
  int64_t v26 = v24 + 4;
  if (v24 + 4 >= v33)
  {
LABEL_36:
    unint64_t v19 = 0;
    goto LABEL_39;
  }
  unint64_t v25 = *(void *)(v32 + 8 * v26);
  if (v25)
  {
LABEL_17:
    int64_t v24 = v26;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v24 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v24 >= v33)
    {
      unint64_t v19 = 0;
      int64_t v20 = v29;
      goto LABEL_39;
    }
    unint64_t v25 = *(void *)(v32 + 8 * v24);
    ++v26;
    if (v25) {
      goto LABEL_18;
    }
  }
LABEL_42:
  __break(1u);
  return result;
}

void *sub_1C1F83A70(void *result, void *a2, uint64_t a3, uint64_t a4, unint64_t *a5, uint64_t a6, unint64_t *a7)
{
  uint64_t v7 = a4;
  uint64_t v9 = a2;
  int64_t v29 = result;
  if ((a4 & 0xC000000000000001) != 0)
  {
    sub_1C214B680();
    sub_1C1F12718(0, a5);
    sub_1C1F4CDC8(a7, a5);
    uint64_t result = (void *)sub_1C214AAA0();
    uint64_t v7 = v33;
    uint64_t v12 = v34;
    uint64_t v13 = v35;
    int64_t v14 = v36;
    unint64_t v15 = v37;
    if (v9) {
      goto LABEL_3;
    }
LABEL_36:
    uint64_t v16 = 0;
    goto LABEL_38;
  }
  int64_t v14 = 0;
  uint64_t v24 = -1 << *(unsigned char *)(a4 + 32);
  uint64_t v12 = a4 + 56;
  uint64_t v13 = ~v24;
  uint64_t v25 = -v24;
  if (v25 < 64) {
    uint64_t v26 = ~(-1 << v25);
  }
  else {
    uint64_t v26 = -1;
  }
  unint64_t v15 = v26 & *(void *)(a4 + 56);
  if (!a2) {
    goto LABEL_36;
  }
LABEL_3:
  if (!a3)
  {
    uint64_t v16 = 0;
LABEL_38:
    uint64_t v27 = v29;
LABEL_41:
    void *v27 = v7;
    v27[1] = v12;
    v27[2] = v13;
    v27[3] = v14;
    v27[4] = v15;
    return (void *)v16;
  }
  if (a3 < 0) {
    goto LABEL_48;
  }
  uint64_t v16 = 0;
  int64_t v30 = (unint64_t)(v13 + 64) >> 6;
  uint64_t v28 = v13;
  while (1)
  {
    if (v7 < 0)
    {
      if (!sub_1C214B700()) {
        goto LABEL_40;
      }
      sub_1C1F12718(0, a5);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      id v19 = v32;
      uint64_t result = (void *)swift_unknownObjectRelease();
      if (!v32) {
        goto LABEL_40;
      }
      goto LABEL_8;
    }
    if (v15)
    {
      unint64_t v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      unint64_t v18 = v17 | (v14 << 6);
      goto LABEL_7;
    }
    int64_t v20 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v20 >= v30)
    {
      unint64_t v15 = 0;
      goto LABEL_40;
    }
    unint64_t v21 = *(void *)(v12 + 8 * v20);
    if (v21) {
      goto LABEL_23;
    }
    int64_t v22 = v14 + 2;
    if (v14 + 2 >= v30)
    {
      unint64_t v15 = 0;
      ++v14;
      goto LABEL_40;
    }
    unint64_t v21 = *(void *)(v12 + 8 * v22);
    if (!v21)
    {
      if (v14 + 3 >= v30) {
        goto LABEL_44;
      }
      unint64_t v21 = *(void *)(v12 + 8 * (v14 + 3));
      if (v21)
      {
        int64_t v20 = v14 + 3;
        goto LABEL_23;
      }
      int64_t v22 = v14 + 4;
      if (v14 + 4 >= v30)
      {
        unint64_t v15 = 0;
        v14 += 3;
        goto LABEL_40;
      }
      unint64_t v21 = *(void *)(v12 + 8 * v22);
      if (!v21)
      {
        int64_t v20 = v14 + 5;
        if (v14 + 5 >= v30)
        {
LABEL_44:
          unint64_t v15 = 0;
          int64_t v14 = v22;
          goto LABEL_40;
        }
        unint64_t v21 = *(void *)(v12 + 8 * v20);
        if (!v21)
        {
          int64_t v23 = v14 + 6;
          while (v30 != v23)
          {
            unint64_t v21 = *(void *)(v12 + 8 * v23++);
            if (v21)
            {
              int64_t v20 = v23 - 1;
              goto LABEL_23;
            }
          }
          unint64_t v15 = 0;
          int64_t v14 = v30 - 1;
          goto LABEL_40;
        }
        goto LABEL_23;
      }
    }
    int64_t v20 = v22;
LABEL_23:
    unint64_t v15 = (v21 - 1) & v21;
    unint64_t v18 = __clz(__rbit64(v21)) + (v20 << 6);
    int64_t v14 = v20;
LABEL_7:
    uint64_t result = *(id *)(*(void *)(v7 + 48) + 8 * v18);
    id v19 = result;
    if (!result) {
      goto LABEL_40;
    }
LABEL_8:
    ++v16;
    *v9++ = v19;
    if (v16 == a3)
    {
      uint64_t v16 = a3;
LABEL_40:
      uint64_t v13 = v28;
      uint64_t v27 = v29;
      goto LABEL_41;
    }
  }
  __break(1u);
LABEL_48:
  __break(1u);
  return result;
}

uint64_t sub_1C1F83D6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, long long *a5, uint64_t a6, uint64_t a7, long long *a8, long long a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  v25[3] = a12;
  v25[4] = a13;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v25);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a12 - 8) + 32))(boxed_opaque_existential_1, a2, a12);
  type metadata accessor for InteractionMedicationCell();
  sub_1C1F846A4(&qword_1EA2C3E60, 255, (void (*)(uint64_t))type metadata accessor for InteractionMedicationCell);
  *(void *)(a11 + 176) = sub_1C21481D0();
  *(void *)(a11 + 184) = v20;
  *(void *)(a11 + 216) = MEMORY[0x1E4FBC870];
  *(void *)(a11 + 224) = 0;
  *(_OWORD *)(a11 + 192) = a9;
  *(void *)(a11 + 208) = a10;
  *(void *)(a11 + 16) = a1;
  if (a6 == a3 && a7 == a4 || (sub_1C214BA80() & 1) == 0)
  {
    *(void *)(a11 + 64) = a3;
    *(void *)(a11 + 72) = a4;
    sub_1C1F31280(a5, a11 + 80);
    *(void *)(a11 + 160) = a6;
    *(void *)(a11 + 168) = a7;
    sub_1C1F31280(a8, a11 + 120);
    sub_1C1F236D8((uint64_t)v25, a11 + 24);
  }
  else
  {
    *(void *)(a11 + 64) = a6;
    *(void *)(a11 + 72) = a7;
    sub_1C1F236D8((uint64_t)a8, a11 + 80);
    *(void *)(a11 + 160) = a3;
    *(void *)(a11 + 168) = a4;
    sub_1C1F236D8((uint64_t)a5, a11 + 120);
    (*(void (**)(long long *__return_ptr, uint64_t))(a13 + 40))(v24, a12);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a8);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a5);
    sub_1C1F31280(v24, a11 + 24);
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v25);
  return a11;
}

uint64_t _s19HealthMedicationsUI25InteractionMedicationItemC2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  uint64_t v4 = a1[2];
  uint64_t v5 = a2[2];
  swift_beginAccess();
  uint64_t v6 = *(void *)(v4 + 16);
  swift_beginAccess();
  uint64_t v7 = *(void *)(v5 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v8 = sub_1C1FC0FBC(v6, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v8)
  {
    if (a1[8] == a2[8] && a1[9] == a2[9] || (v9 = sub_1C214BA80(), char v10 = 0, (v9 & 1) != 0))
    {
      if (a1[20] == a2[20] && a1[21] == a2[21]) {
        char v10 = 1;
      }
      else {
        char v10 = sub_1C214BA80();
      }
    }
  }
  else
  {
    char v10 = 0;
  }
  return v10 & 1;
}

void sub_1C1F84068(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = v1[2];
  sub_1C1F236D8((uint64_t)(v1 + 3), (uint64_t)v22);
  uint64_t v4 = v1[9];
  uint64_t v18 = v1[8];
  uint64_t v5 = v1 + 10;
  sub_1C1F236D8((uint64_t)v5, (uint64_t)v21);
  uint64_t v6 = v2[13];
  uint64_t v7 = v2[14];
  __swift_project_boxed_opaque_existential_0(v5, v6);
  char v8 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 48);
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v17 = v8(v6, v7);
  uint64_t v9 = v2[20];
  uint64_t v10 = v2[21];
  sub_1C1F236D8((uint64_t)(v2 + 15), (uint64_t)v20);
  uint64_t v12 = v2[18];
  uint64_t v11 = v2[19];
  __swift_project_boxed_opaque_existential_0(v2 + 15, v12);
  uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  uint64_t v14 = v13(v12, v11);
  id v15 = objc_allocWithZone((Class)type metadata accessor for InteractionResultDetailViewController());
  id v16 = sub_1C1F4F79C(v3, (uint64_t)v22, v18, v4, (uint64_t)v21, v17, v9, v10, (uint64_t)v20, v14);
  swift_release();
  objc_msgSend(v16, sel_setModalPresentationStyle_, 2);
  objc_msgSend(a1, sel_showAdaptively_sender_, v16, v2);
  sub_1C2149550();
}

uint64_t sub_1C1F841F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, long long *a5, uint64_t a6, uint64_t a7, long long *a8, long long a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v25 = a7;
  uint64_t v26 = a8;
  int64_t v23 = a5;
  uint64_t v24 = a6;
  long long v22 = a9;
  uint64_t v17 = *(void *)(a12 - 8);
  MEMORY[0x1F4188790](a1);
  id v19 = (char *)&v22 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for InteractionMedicationItem();
  uint64_t v20 = swift_allocObject();
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v19, a2, a12);
  return sub_1C1F83D6C(a1, (uint64_t)v19, a3, a4, v23, v24, v25, v26, v22, a10, v20, a12, a13);
}

uint64_t sub_1C1F84330(uint64_t a1, uint64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v2 = a2;
    uint64_t v4 = a1;
    if (!(*v3 >> 62))
    {
      if (*(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10) >= a2) {
        goto LABEL_4;
      }
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v21 = sub_1C214B930();
  swift_bridgeObjectRelease();
  if (v21 < v2) {
    goto LABEL_33;
  }
LABEL_4:
  uint64_t v6 = v2 - v4;
  if (__OFSUB__(v2, v4))
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  uint64_t v5 = v4 - v2;
  if (__OFSUB__(0, v6))
  {
LABEL_35:
    __break(1u);
LABEL_36:
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1C214B930();
    swift_bridgeObjectRelease();
    uint64_t v8 = v7 + v5;
    if (!__OFADD__(v7, v5)) {
      goto LABEL_8;
    }
LABEL_38:
    __break(1u);
LABEL_39:
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_1C214B930();
    swift_bridgeObjectRelease();
    unint64_t v9 = *v3;
    goto LABEL_15;
  }
  if (*v3 >> 62) {
    goto LABEL_36;
  }
  uint64_t v7 = *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v8 = v7 - v6;
  if (__OFADD__(v7, v5)) {
    goto LABEL_38;
  }
LABEL_8:
  unint64_t v9 = *v3;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v3 = v9;
  uint64_t v7 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v9 & 0x8000000000000000) == 0 && (v9 & 0x4000000000000000) == 0)
  {
    uint64_t v11 = v9 & 0xFFFFFFFFFFFFFF8;
    if (v8 <= *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      goto LABEL_18;
    }
    uint64_t v7 = 1;
  }
  if (v9 >> 62) {
    goto LABEL_39;
  }
  uint64_t v12 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_15:
  if (v12 <= v8) {
    uint64_t v12 = v8;
  }
  swift_bridgeObjectRetain();
  *uint64_t v3 = MEMORY[0x1C8753970](v7, v12, 1, v9);
  swift_bridgeObjectRelease();
  uint64_t v11 = *v3 & 0xFFFFFFFFFFFFFF8;
LABEL_18:
  uint64_t v13 = v11 + 32;
  uint64_t v14 = (char *)(v11 + 32 + 8 * v4);
  type metadata accessor for InteractionMedicationItem();
  swift_arrayDestroy();
  if (v5)
  {
    if (*v3 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v22 = sub_1C214B930();
      swift_bridgeObjectRelease();
      uint64_t v16 = v22 - v2;
      if (!__OFSUB__(v22, v2))
      {
LABEL_21:
        if (v16 < 0)
        {
LABEL_46:
          uint64_t result = sub_1C214B990();
          __break(1u);
          return result;
        }
        uint64_t v17 = (char *)(v13 + 8 * v2);
        if (v4 != v2 || v14 >= &v17[8 * v16]) {
          memmove(v14, v17, 8 * v16);
        }
        if (!(*v3 >> 62))
        {
          uint64_t v18 = *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
          uint64_t v19 = v18 + v5;
          if (!__OFADD__(v18, v5))
          {
LABEL_27:
            *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10) = v19;
            goto LABEL_28;
          }
          goto LABEL_45;
        }
LABEL_43:
        swift_bridgeObjectRetain();
        uint64_t v23 = sub_1C214B930();
        swift_bridgeObjectRelease();
        uint64_t v19 = v23 + v5;
        if (!__OFADD__(v23, v5)) {
          goto LABEL_27;
        }
LABEL_45:
        __break(1u);
        goto LABEL_46;
      }
    }
    else
    {
      uint64_t v15 = *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t v16 = v15 - v2;
      if (!__OFSUB__(v15, v2)) {
        goto LABEL_21;
      }
    }
    __break(1u);
    goto LABEL_43;
  }
LABEL_28:

  return sub_1C214A7A0();
}

uint64_t type metadata accessor for InteractionMedicationItem()
{
  return self;
}

uint64_t sub_1C1F8465C(uint64_t a1, uint64_t a2)
{
  return sub_1C1F846A4(&qword_1EA2C3DB0, a2, (void (*)(uint64_t))type metadata accessor for InteractionMedicationItem);
}

uint64_t sub_1C1F846A4(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t method lookup function for InteractionMedicationItem(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for InteractionMedicationItem);
}

uint64_t dispatch thunk of InteractionMedicationItem.uniqueIdentifier.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t dispatch thunk of InteractionMedicationItem.__allocating_init(interactionResults:stackedMemojiDisplayable:firstItemName:firstItemDetailsProviding:secondItemName:secondItemDetailsProviding:healthStore:analyticsManager:roomType:)()
{
  return (*(uint64_t (**)(void))(v0 + 184))();
}

uint64_t dispatch thunk of InteractionMedicationItem.addInteractionResults(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

uint64_t dispatch thunk of InteractionMedicationItem.hash(into:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t dispatch thunk of InteractionMedicationItem.hashValue.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 256))();
}

void sub_1C1F847C0(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = sub_1C1F12718(255, a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

uint64_t sub_1C1F84828(uint64_t a1, int64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_27;
  }
  unint64_t v4 = *v2;
  int64_t v5 = *(void *)(*v2 + 16);
  if (v5 < a2)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  uint64_t v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  uint64_t v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  int64_t v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v9 > *(void *)(v4 + 24) >> 1)
  {
    if (v5 <= v9) {
      int64_t v11 = v5 + v8;
    }
    else {
      int64_t v11 = v5;
    }
    unint64_t v4 = sub_1C1F3AA7C(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  uint64_t v12 = *(void *)(type metadata accessor for Dosage() - 8);
  unint64_t v13 = v4 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
  uint64_t v14 = *(void *)(v12 + 72);
  uint64_t v15 = v14 * a1;
  unint64_t v16 = v13 + v14 * a1;
  uint64_t result = swift_arrayDestroy();
  if (!v7) {
    goto LABEL_25;
  }
  uint64_t v18 = *(void *)(v4 + 16);
  uint64_t v19 = v18 - a2;
  if (__OFSUB__(v18, a2)) {
    goto LABEL_31;
  }
  if ((v19 & 0x8000000000000000) == 0)
  {
    if (v15 < v14 * a2 || v16 >= v13 + v14 * a2 + v19 * v14)
    {
      uint64_t result = swift_arrayInitWithTakeFrontToBack();
    }
    else if (v15 != v14 * a2)
    {
      uint64_t result = swift_arrayInitWithTakeBackToFront();
    }
    uint64_t v21 = *(void *)(v4 + 16);
    BOOL v22 = __OFADD__(v21, v8);
    uint64_t v23 = v21 - v7;
    if (!v22)
    {
      *(void *)(v4 + 16) = v23;
LABEL_25:
      *uint64_t v2 = v4;
      return result;
    }
    goto LABEL_32;
  }
LABEL_33:
  uint64_t result = sub_1C214B990();
  __break(1u);
  return result;
}

uint64_t sub_1C1F84A10(uint64_t a1)
{
  sub_1C1F84A6C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1C1F84A6C()
{
  if (!qword_1EA2C3DF8)
  {
    sub_1C1F248B4(255, (unint64_t *)&qword_1EBF0C2F0);
    unint64_t v0 = sub_1C214B810();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C3DF8);
    }
  }
}

uint64_t sub_1C1F84AD8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Dosage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C1F84B3C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_1C1F84BA4(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(uint64_t), uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = a4(a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

unint64_t sub_1C1F84C08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t result = qword_1EA2C3E48;
  if (!qword_1EA2C3E48)
  {
    sub_1C1F84BA4(255, &qword_1EA2C3E40, a3, (uint64_t (*)(uint64_t))type metadata accessor for InteractionMedicationItem, MEMORY[0x1E4FBB320]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C3E48);
  }
  return result;
}

uint64_t sub_1C1F84C90(unint64_t *a1, unint64_t *a2, unint64_t *a3, uint64_t a4)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C1F847C0(255, a2, a3, a4, MEMORY[0x1E4FBB320]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id sub_1C1F84CF4()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1C21497F0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = objc_msgSend(v0, sel_scheduleType);
  switch((unint64_t)v6)
  {
    case 0uLL:
      return v6;
    case 1uLL:
      sub_1C20C7088((uint64_t)&v16);
      if (v17)
      {
        sub_1C21497A0();
        unint64_t v9 = v1;
        uint64_t v10 = sub_1C21497E0();
        os_log_type_t v11 = sub_1C214ABD0();
        if (os_log_type_enabled(v10, v11))
        {
          uint64_t v12 = (uint8_t *)swift_slowAlloc();
          *(_DWORD *)uint64_t v12 = 134217984;
          id v16 = objc_msgSend(v9, (SEL)&selRef_yValue + 7);
          sub_1C214B530();

          _os_log_impl(&dword_1C1F0B000, v10, v11, "Attempted to display localizedString with nil frequencyInterval for %ld returning empty string", v12, 0xCu);
          MEMORY[0x1C8754730](v12, -1, -1);
        }
        else
        {

          uint64_t v10 = v9;
        }

        (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
LABEL_17:
        if (qword_1EA2C2658 != -1) {
          swift_once();
        }
        id v6 = (id)qword_1EA2C7CB0;
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v7 = sub_1C20C71E4(1);
LABEL_14:
        id v6 = (id)v7;
      }
      break;
    case 2uLL:
      if (qword_1EBF0CA00 == -1) {
        goto LABEL_12;
      }
      goto LABEL_21;
    case 3uLL:
    case 5uLL:
      uint64_t v7 = sub_1C1F85948();
      if (!v8) {
        goto LABEL_17;
      }
      goto LABEL_14;
    case 4uLL:
      if (qword_1EBF0CA00 == -1) {
        goto LABEL_12;
      }
      goto LABEL_21;
    case 6uLL:
      goto LABEL_17;
    case 7uLL:
    case 8uLL:
      if (qword_1EBF0CA00 == -1) {
        goto LABEL_12;
      }
LABEL_21:
      swift_once();
LABEL_12:
      id v13 = (id)qword_1EBF0CA18;
      swift_bridgeObjectRetain();
      id v6 = (id)sub_1C2147730();
      swift_bridgeObjectRelease();

      break;
    default:
      id v16 = 0;
      unint64_t v17 = 0xE000000000000000;
      sub_1C214B7C0();
      swift_bridgeObjectRelease();
      id v16 = (id)0xD00000000000002DLL;
      unint64_t v17 = 0x80000001C2161030;
      v15[1] = objc_msgSend(v1, sel_scheduleType);
      sub_1C214BA40();
      sub_1C214A6C0();
      swift_bridgeObjectRelease();
      sub_1C214B910();
      __break(1u);
      JUMPOUT(0x1C1F851B0);
  }
  return v6;
}

void sub_1C1F851D4()
{
  if (qword_1EBF0CA00 != -1) {
    swift_once();
  }
  id v0 = (id)qword_1EBF0CA18;
  swift_bridgeObjectRetain();
  uint64_t v1 = sub_1C2147730();
  uint64_t v3 = v2;
  swift_bridgeObjectRelease();

  qword_1EA2C7CB0 = v1;
  *(void *)algn_1EA2C7CB8 = v3;
}

void sub_1C1F852AC()
{
  uint64_t v58 = sub_1C2147B20();
  uint64_t v1 = *(void *)(v58 - 8);
  MEMORY[0x1F4188790](v58);
  uint64_t v3 = (char *)&v48 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = sub_1C2147AC0();
  unint64_t v4 = *(void *)(v57 - 8);
  MEMORY[0x1F4188790](v57);
  uint64_t v60 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = sub_1C21496A0();
  uint64_t v6 = *(void *)(v56 - 8);
  MEMORY[0x1F4188790](v56);
  uint64_t v59 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for WeekdaysAndDosages(0);
  uint64_t v54 = *(void *)(v8 - 8);
  uint64_t v55 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (uint64_t *)((char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v11 = objc_msgSend(v0, sel_timeIntervals);
  sub_1C1F85EA8();
  unint64_t v12 = sub_1C214A780();

  uint64_t v13 = MEMORY[0x1E4FBC860];
  uint64_t v61 = MEMORY[0x1E4FBC860];
  if (!(v12 >> 62))
  {
    uint64_t v14 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v53 = v6;
    if (v14) {
      goto LABEL_3;
    }
LABEL_16:
    swift_bridgeObjectRelease();
    uint64_t v22 = MEMORY[0x1E4FBC860];
    if ((MEMORY[0x1E4FBC860] & 0x8000000000000000) != 0) {
      goto LABEL_33;
    }
    goto LABEL_17;
  }
  swift_bridgeObjectRetain();
  uint64_t v14 = sub_1C214B930();
  swift_bridgeObjectRelease();
  uint64_t v53 = v6;
  if (!v14) {
    goto LABEL_16;
  }
LABEL_3:
  if (v14 < 1)
  {
    __break(1u);
    goto LABEL_36;
  }
  unint64_t v51 = v4;
  uint64_t v52 = v1;
  for (uint64_t i = 0; i != v14; ++i)
  {
    if ((v12 & 0xC000000000000001) != 0) {
      id v16 = (id)MEMORY[0x1C8753960](i, v12);
    }
    else {
      id v16 = *(id *)(v12 + 8 * i + 32);
    }
    unint64_t v17 = v16;
    id v18 = objc_msgSend(v16, sel_dose);
    if (v18 && (v19 = v18, objc_msgSend(v18, sel_floatValue), float v21 = v20, v19, v21 > 0.0))
    {
      sub_1C214B820();
      sub_1C214B860();
      sub_1C214B870();
      sub_1C214B830();
    }
    else
    {
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v22 = v61;
  unint64_t v4 = v51;
  uint64_t v1 = v52;
  uint64_t v13 = MEMORY[0x1E4FBC860];
  if (v61 < 0) {
    goto LABEL_33;
  }
LABEL_17:
  if ((v22 & 0x4000000000000000) == 0)
  {
    uint64_t v23 = *(void *)(v22 + 16);
    if (!v23)
    {
LABEL_32:
      swift_release();
      return;
    }
    goto LABEL_19;
  }
LABEL_33:
  swift_bridgeObjectRetain();
  uint64_t v23 = sub_1C214B930();
  swift_release();
  if (!v23) {
    goto LABEL_32;
  }
LABEL_19:
  uint64_t v61 = v13;
  sub_1C1F703EC(0, v23 & ~(v23 >> 63), 0);
  if ((v23 & 0x8000000000000000) == 0)
  {
    uint64_t v24 = 0;
    uint64_t v50 = (void (**)(unint64_t, char *, uint64_t))(v1 + 32);
    unint64_t v51 = v22 & 0xC000000000000001;
    uint64_t v49 = (void (**)(unint64_t, char *, uint64_t))(v4 + 32);
    uint64_t v25 = (void (**)(char *, uint64_t))(v1 + 8);
    uint64_t v26 = (void (**)(char *, char *, uint64_t))(v53 + 32);
    long long v48 = xmmword_1C214FCD0;
    uint64_t v52 = v23;
    uint64_t v53 = v22;
    do
    {
      if (v51) {
        id v27 = (id)MEMORY[0x1C8753960](v24, v22);
      }
      else {
        id v27 = *(id *)(v22 + 8 * v24 + 32);
      }
      uint64_t v28 = v27;
      id v29 = objc_msgSend(v27, sel_daysOfWeek, v48);
      sub_1C2092484((uint64_t)v29, v59);
      sub_1C1F85EE8();
      uint64_t v30 = type metadata accessor for Dosage();
      unint64_t v31 = (*(unsigned __int8 *)(*(void *)(v30 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v30 - 8) + 80);
      uint64_t v32 = swift_allocObject();
      *(_OWORD *)(v32 + 16) = v48;
      sub_1C2147AB0();
      id v33 = objc_msgSend(v28, sel_dose);
      if (v33)
      {
        uint64_t v34 = v33;
        objc_msgSend(v33, sel_doubleValue);
        uint64_t v36 = v35;
      }
      else
      {
        uint64_t v36 = 0;
      }
      unint64_t v37 = v32 + v31;
      sub_1C2147B10();
      unint64_t v38 = v32 + v31;
      uint64_t v39 = v58;
      (*v50)(v38, v3, v58);
      (*v49)(v37 + *(int *)(v30 + 20), v60, v57);
      *(void *)(v37 + *(int *)(v30 + 24)) = v36;
      sub_1C2147B10();
      uint64_t v40 = sub_1C2147AD0();
      uint64_t v42 = v41;
      (*v25)(v3, v39);
      *uint64_t v10 = v40;
      v10[1] = v42;
      uint64_t v43 = v55;
      (*v26)((char *)v10 + *(int *)(v55 + 20), v59, v56);

      *(uint64_t *)((char *)v10 + *(int *)(v43 + 24)) = v32;
      uint64_t v44 = v61;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C1F703EC(0, *(void *)(v44 + 16) + 1, 1);
        uint64_t v44 = v61;
      }
      uint64_t v45 = v52;
      unint64_t v47 = *(void *)(v44 + 16);
      unint64_t v46 = *(void *)(v44 + 24);
      if (v47 >= v46 >> 1)
      {
        sub_1C1F703EC(v46 > 1, v47 + 1, 1);
        uint64_t v44 = v61;
      }
      ++v24;
      *(void *)(v44 + 16) = v47 + 1;
      sub_1C1F85F40((uint64_t)v10, v44+ ((*(unsigned __int8 *)(v54 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80))+ *(void *)(v54 + 72) * v47);
      uint64_t v22 = v53;
    }
    while (v45 != v24);
    goto LABEL_32;
  }
LABEL_36:
  __break(1u);
}

uint64_t sub_1C1F85948()
{
  uint64_t v0 = type metadata accessor for WeekdaysAndDosages(0);
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v54 = v0;
  uint64_t v55 = v1;
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v42 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1C2147CF0();
  uint64_t v48 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  unint64_t v47 = (char *)v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1C21496A0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x1F4188790](v8);
  uint64_t v13 = (char *)v42 - v12;
  uint64_t v14 = MEMORY[0x1F4188790](v11);
  id v16 = (char *)v42 - v15;
  uint64_t v17 = MEMORY[0x1F4188790](v14);
  uint64_t v19 = (char *)v42 - v18;
  MEMORY[0x1F4188790](v17);
  unint64_t v46 = (char *)v42 - v20;
  sub_1C1F852AC();
  uint64_t v22 = v21;
  uint64_t v56 = 0;
  uint64_t v53 = sub_1C1F85E08(&qword_1EBF0C5F0);
  sub_1C214BC00();
  uint64_t v24 = v7 + 16;
  uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
  uint64_t v49 = v16;
  uint64_t v25 = v16;
  uint64_t v26 = v23;
  uint64_t v45 = v19;
  v23(v25, v19, v6);
  uint64_t v27 = *(void *)(v22 + 16);
  if (v27)
  {
    uint64_t v43 = v7;
    uint64_t v44 = v4;
    uint64_t v28 = *(unsigned __int8 *)(v55 + 80);
    uint64_t v52 = v26;
    uint64_t v29 = v22 + ((v28 + 32) & ~v28);
    uint64_t v51 = *(void *)(v55 + 72);
    uint64_t v30 = (void (**)(char *, uint64_t))(v7 + 8);
    uint64_t v55 = v7 + 32;
    v42[1] = v22;
    swift_bridgeObjectRetain();
    unint64_t v31 = v49;
    uint64_t v50 = v24;
    do
    {
      sub_1C1F72AA0(v29, (uint64_t)v3);
      uint64_t v32 = &v3[*(int *)(v54 + 20)];
      sub_1C1F85E08(&qword_1EA2C3B90);
      sub_1C214A750();
      sub_1C214BC00();
      v52(v10, v32, v6);
      sub_1C1F85E08(&qword_1EA2C3B98);
      sub_1C214B610();
      sub_1C1F85E4C((uint64_t)v3);
      (*v30)(v31, v6);
      id v33 = *(void (**)(char *, char *, uint64_t))v55;
      (*(void (**)(char *, char *, uint64_t))v55)(v31, v13, v6);
      v29 += v51;
      --v27;
    }
    while (v27);
    uint64_t v55 = v55 & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
    swift_bridgeObjectRelease();
    uint64_t v34 = v43;
    uint64_t v35 = v44;
  }
  else
  {
    uint64_t v34 = v7;
    id v33 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
    uint64_t v55 = (v7 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
    uint64_t v35 = v4;
  }
  uint64_t v36 = v48;
  unint64_t v37 = v46;
  v33(v46, v49, v6);
  unint64_t v38 = *(void (**)(char *, uint64_t))(v34 + 8);
  v38(v45, v6);
  swift_bridgeObjectRelease();
  uint64_t v39 = v47;
  sub_1C2147CB0();
  uint64_t v40 = sub_1C2149670();
  (*(void (**)(char *, uint64_t))(v36 + 8))(v39, v35);
  v38(v37, v6);
  return v40;
}

uint64_t sub_1C1F85E08(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C21496A0();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C1F85E4C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for WeekdaysAndDosages(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1C1F85EA8()
{
  unint64_t result = qword_1EBF0C8D8;
  if (!qword_1EBF0C8D8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBF0C8D8);
  }
  return result;
}

void sub_1C1F85EE8()
{
  if (!qword_1EA2C3220)
  {
    type metadata accessor for Dosage();
    unint64_t v0 = sub_1C214BA50();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C3220);
    }
  }
}

uint64_t sub_1C1F85F40(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WeekdaysAndDosages(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C1F85FA4()
{
  uint64_t result = sub_1C214A5B0();
  qword_1EBF0B890 = result;
  return result;
}

id static NSNotificationName.UserDidRequestToShowCurrentMedication.getter()
{
  return sub_1C1F86108(&qword_1EBF0C820, (void **)&qword_1EBF0B890);
}

void static NSNotificationName.UserDidRequestToShowCurrentMedication.setter(void *a1)
{
}

uint64_t (*static NSNotificationName.UserDidRequestToShowCurrentMedication.modify())()
{
  if (qword_1EBF0C820 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_1C1F860AC()
{
  uint64_t result = sub_1C214A5B0();
  qword_1EA2C3E68 = result;
  return result;
}

id static NSNotificationName.UserDidAddMedicationWhenNotificationsDisabled.getter()
{
  return sub_1C1F86108(&qword_1EA2C2668, (void **)&qword_1EA2C3E68);
}

id sub_1C1F86108(void *a1, void **a2)
{
  if (*a1 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v3 = *a2;

  return v3;
}

void static NSNotificationName.UserDidAddMedicationWhenNotificationsDisabled.setter(void *a1)
{
}

void sub_1C1F86194(void *a1, void *a2, void **a3)
{
  if (*a2 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v5 = *a3;
  *a3 = a1;
}

uint64_t (*static NSNotificationName.UserDidAddMedicationWhenNotificationsDisabled.modify())()
{
  if (qword_1EA2C2668 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1C1F86288(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C214A8C0();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_1C214A8B0();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_1C1F89A08(a1, (unint64_t *)&qword_1EA2C32D8, MEMORY[0x1E4FBCFE8]);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1C214A840();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_1C1F86448@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x1E4F66288];
  uint64_t v3 = sub_1C21481B0();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104);

  return v4(a1, v2, v3);
}

id MedicationConceptDetailViewController.medication.getter()
{
  return *(id *)(v0 + qword_1EA2C3E70);
}

uint64_t sub_1C1F864CC()
{
  return sub_1C1F86720();
}

uint64_t sub_1C1F864D8(uint64_t a1)
{
  return sub_1C1F86774(a1, &qword_1EA2C3E78);
}

uint64_t (*sub_1C1F864E4())()
{
  return j_j__swift_endAccess;
}

void sub_1C1F86540(void **a1, void *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (void **)(*a2 + qword_1EA2C3E80);
  swift_beginAccess();
  uint64_t v4 = *v3;
  *uint64_t v3 = v2;
  id v5 = v2;
}

id sub_1C1F865A4()
{
  uint64_t v1 = (void **)(v0 + qword_1EA2C3E80);
  swift_beginAccess();
  uint64_t v2 = *v1;

  return v2;
}

void sub_1C1F865FC(void *a1)
{
  uint64_t v3 = (void **)(v1 + qword_1EA2C3E80);
  swift_beginAccess();
  uint64_t v4 = *v3;
  *uint64_t v3 = a1;
}

uint64_t (*sub_1C1F86650())()
{
  return j__swift_endAccess;
}

uint64_t sub_1C1F866AC(uint64_t *a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v5 = *a1;
  uint64_t v6 = (void *)(*a2 + *a5);
  swift_beginAccess();
  *uint64_t v6 = v5;
  swift_retain();
  return swift_release();
}

uint64_t sub_1C1F86714()
{
  return sub_1C1F86720();
}

uint64_t sub_1C1F86720()
{
  return swift_retain();
}

uint64_t sub_1C1F86768(uint64_t a1)
{
  return sub_1C1F86774(a1, &qword_1EA2C3E88);
}

uint64_t sub_1C1F86774(uint64_t a1, void *a2)
{
  uint64_t v4 = (void *)(v2 + *a2);
  swift_beginAccess();
  *uint64_t v4 = a1;
  return swift_release();
}

uint64_t (*sub_1C1F867C4())()
{
  return j_j__swift_endAccess;
}

id sub_1C1F86820()
{
  uint64_t v1 = qword_1EA2C3E98;
  uint64_t v2 = *(void **)(v0 + qword_1EA2C3E98);
  if (v2)
  {
    id v3 = *(id *)(v0 + qword_1EA2C3E98);
  }
  else
  {
    uint64_t v4 = (void *)(v0 + qword_1EA2C3E80);
    swift_beginAccess();
    id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F2B300]), sel_initWithHealthStore_, *v4);
    uint64_t v6 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v5;
    id v3 = v5;

    uint64_t v2 = 0;
  }
  id v7 = v2;
  return v3;
}

id sub_1C1F868C4()
{
  uint64_t v1 = qword_1EA2C3EA0;
  uint64_t v2 = *(void **)(v0 + qword_1EA2C3EA0);
  if (v2)
  {
    id v3 = *(id *)(v0 + qword_1EA2C3EA0);
  }
  else
  {
    uint64_t v4 = v0;
    sub_1C2149790();
    id v5 = (id *)(v0 + qword_1EA2C3E80);
    swift_beginAccess();
    id v6 = *v5;
    id v7 = (void *)sub_1C2149780();
    uint64_t v8 = *(void **)(v0 + v1);
    *(void *)(v4 + v1) = v7;
    id v3 = v7;

    uint64_t v2 = 0;
  }
  id v9 = v2;
  return v3;
}

void *MedicationConceptDetailViewController.__allocating_init(medication:healthStore:listManager:provenance:)(void *a1, void *a2, uint64_t a3)
{
  id v7 = objc_allocWithZone(v3);
  return MedicationConceptDetailViewController.init(medication:healthStore:listManager:provenance:)(a1, a2, a3);
}

void *MedicationConceptDetailViewController.init(medication:healthStore:listManager:provenance:)(void *a1, void *a2, uint64_t a3)
{
  id v7 = (uint64_t *)&v3[qword_1EA2C3E90];
  uint64_t v26 = sub_1C214A5F0();
  uint64_t v27 = v8;
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  uint64_t v9 = v27;
  uint64_t v10 = v3;
  swift_bridgeObjectRelease();
  *id v7 = v26;
  v7[1] = v9;
  *(void *)&v10[qword_1EA2C3E98] = 0;
  *(void *)&v10[qword_1EA2C3EA0] = 0;
  *(void *)&v10[qword_1EA2C3EA8] = 0;
  *(void *)&v10[qword_1EA2C3E70] = a1;
  *(void *)&v10[qword_1EA2C3E78] = a3;
  *(void *)&v10[qword_1EA2C3E80] = a2;
  id v11 = a1;
  swift_retain();
  id v12 = a2;
  id v13 = objc_msgSend(v11, sel_localizedOntologyEducationContent);
  uint64_t v14 = v13;
  if (v13)
  {
    uint64_t v26 = (uint64_t)v13;
    sub_1C1F12718(0, (unint64_t *)&unk_1EA2C4680);
    sub_1C21480A0();
    uint64_t v16 = v15;

    if (v16) {
      swift_bridgeObjectRelease();
    }
  }
  id v17 = objc_msgSend(v11, sel_localizedOntologyEducationContent);
  if (v17)
  {
    uint64_t v18 = v17;
    uint64_t v26 = (uint64_t)v17;
    sub_1C1F12718(0, (unint64_t *)&unk_1EA2C4680);
    sub_1C21480C0();
    uint64_t v20 = v19;

    if (v20) {
      swift_bridgeObjectRelease();
    }
  }
  sub_1C2149590();
  swift_allocObject();
  *(void *)&v10[qword_1EA2C3E88] = sub_1C2149560();

  v25.receiver = v10;
  v25.super_class = (Class)type metadata accessor for MedicationConceptDetailViewController();
  uint64_t v21 = objc_msgSendSuper2(&v25, sel_initWithCollectionViewLayout_, 0);
  uint64_t v22 = *(void (**)(id))(class metadata base offset for MedicationConceptDetailViewController
                                  + (*MEMORY[0x1E4FBC8C8] & *v21)
                                  + 224);
  uint64_t v23 = v21;
  v22(v11);
  swift_release();

  return v23;
}

uint64_t type metadata accessor for MedicationConceptDetailViewController()
{
  uint64_t result = qword_1EA2C3ED0;
  if (!qword_1EA2C3ED0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

id MedicationConceptDetailViewController.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void sub_1C1F86D14(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = a3;
  _s19HealthMedicationsUI37MedicationConceptDetailViewControllerC5coderACSgSo7NSCoderC_tcfc_0();
}

void sub_1C1F86D3C()
{
  sub_1C1F896A0(0, (unint64_t *)&qword_1EA2C32D8, MEMORY[0x1E4FBCFE8]);
  MEMORY[0x1F4188790](v1 - 8);
  unint64_t v31 = (char *)&v31 - v2;
  id v3 = *(void **)&v0[qword_1EA2C3E70];
  uint64_t v4 = &v0[qword_1EA2C3E78];
  swift_beginAccess();
  uint64_t v5 = *(void *)v4;
  id v6 = (void **)&v0[qword_1EA2C3E80];
  uint64_t v32 = (void **)&v0[qword_1EA2C3E80];
  swift_beginAccess();
  id v7 = *v6;
  uint64_t v8 = &v0[qword_1EA2C3E88];
  swift_beginAccess();
  uint64_t v9 = *(void *)v8;
  uint64_t v10 = type metadata accessor for MedicationConceptDetailDataSourceProvider();
  id v11 = (char *)swift_allocObject();
  sub_1C2148E10();
  id v12 = v3;
  swift_retain();
  id v13 = v7;
  swift_retain();
  sub_1C2148E00();
  uint64_t v14 = sub_1C2148DF0();
  swift_release();
  *((void *)v11 + 6) = v14;
  *((void *)v11 + 7) = 0;
  *((void *)v11 + 2) = v5;
  *((void *)v11 + 3) = v12;
  *((void *)v11 + 4) = v13;
  *((void *)v11 + 5) = v9;
  uint64_t v36 = v10;
  uint64_t v37 = sub_1C1F899C0(&qword_1EA2C3EB0, (void (*)(uint64_t))type metadata accessor for MedicationConceptDetailDataSourceProvider);
  uint64_t v34 = v11;
  sub_1C2148AF0();
  uint64_t v15 = (objc_class *)type metadata accessor for MedicationConceptDetailViewController();
  v33.receiver = v0;
  v33.super_class = v15;
  objc_msgSendSuper2(&v33, sel_viewDidLoad);
  uint64_t v16 = sub_1C214A8C0();
  uint64_t v17 = (uint64_t)v31;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v31, 1, 1, v16);
  sub_1C214A890();
  uint64_t v18 = v0;
  uint64_t v19 = sub_1C214A880();
  uint64_t v20 = (void *)swift_allocObject();
  uint64_t v21 = MEMORY[0x1E4FBCFD8];
  v20[2] = v19;
  v20[3] = v21;
  v20[4] = v18;
  sub_1C1F86288(v17, (uint64_t)&unk_1EA2C3EC0, (uint64_t)v20);
  swift_release();
  swift_retain();
  sub_1C2149550();
  swift_release();
  uint64_t v34 = v18;
  uint64_t v22 = *MEMORY[0x1E4F67910];
  uint64_t v23 = *v32;
  uint64_t v24 = sub_1C1F899C0(&qword_1EA2C3EC8, (void (*)(uint64_t))type metadata accessor for MedicationConceptDetailViewController);
  id v25 = v23;
  MEMORY[0x1C8750CD0](0xD000000000000014, 0x80000001C2161120, v22, v25, v15, v24);

  id v26 = objc_msgSend(v18, sel_navigationController);
  if (v26)
  {
    uint64_t v27 = v26;
    id v28 = objc_msgSend(v26, sel_navigationBar);

    uint64_t v29 = *(void *)&v18[qword_1EA2C3E90 + 8];
    uint64_t v34 = *(char **)&v18[qword_1EA2C3E90];
    uint64_t v35 = v29;
    swift_bridgeObjectRetain();
    sub_1C214A6C0();
    uint64_t v30 = (void *)sub_1C214A5B0();
    swift_bridgeObjectRelease();
    objc_msgSend(v28, sel_setAccessibilityIdentifier_, v30);
  }
}

void sub_1C1F87138(void *a1)
{
  id v1 = a1;
  sub_1C1F86D3C();
}

uint64_t sub_1C1F87180(void *a1)
{
  swift_beginAccess();
  swift_retain();
  id v2 = objc_msgSend(a1, sel_localizedOntologyEducationContent);
  if (v2)
  {
    id v3 = v2;
    sub_1C1F12718(0, (unint64_t *)&unk_1EA2C4680);
    sub_1C21480C0();
    uint64_t v5 = v4;

    if (v5) {
      swift_bridgeObjectRelease();
    }
  }
  sub_1C2149570();
  swift_release();
  swift_retain();
  id v6 = objc_msgSend(a1, sel_localizedOntologyEducationContent);
  if (v6)
  {
    id v7 = v6;
    sub_1C1F12718(0, (unint64_t *)&unk_1EA2C4680);
    sub_1C21480A0();
    uint64_t v9 = v8;

    if (v9) {
      swift_bridgeObjectRelease();
    }
  }
  sub_1C2149580();
  swift_release();
  sub_1C1F87304(a1);
  return sub_1C1F87464(a1);
}

uint64_t sub_1C1F87304(void *a1)
{
  v9[0] = a1;
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8C0);
  sub_1C2149490();
  id v3 = (void *)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_setTitle_, v3);

  sub_1C2148AE0();
  if (!v9[3]) {
    return sub_1C1F4FA9C((uint64_t)v9, &qword_1EA2C3F10, &qword_1EA2C3F18);
  }
  sub_1C1F248B4(0, &qword_1EA2C3F18);
  type metadata accessor for MedicationConceptDetailDataSourceProvider();
  uint64_t result = swift_dynamicCast();
  if (result)
  {
    uint64_t v5 = *(void **)(v8 + 24);
    *(void *)(v8 + 24) = a1;
    id v6 = a1;

    sub_1C211A588();
    id v7 = *(id *)(v8 + 24);
    sub_1C2149E70();
    swift_release();

    return swift_release();
  }
  return result;
}

uint64_t sub_1C1F87464(void *a1)
{
  uint64_t v2 = v1;
  sub_1C1F896A0(0, &qword_1EBF0C7E8, MEMORY[0x1E4FBCC28]);
  MEMORY[0x1F4188790](v4 - 8);
  id v6 = (char *)&v25 - v5;
  sub_1C1F896F4();
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  id v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1F89884();
  uint64_t result = MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(v2 + qword_1EA2C3EA8))
  {
    id v25 = a1;
    uint64_t v26 = result;
    uint64_t v27 = v14;
    uint64_t v28 = qword_1EA2C3EA8;
    id v17 = sub_1C1F868C4();
    uint64_t v18 = sub_1C2149770();

    uint64_t v30 = v18;
    sub_1C1F12718(0, (unint64_t *)&qword_1EBF0CB10);
    id v29 = (id)sub_1C214AD80();
    uint64_t v19 = sub_1C214AD20();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v6, 1, 1, v19);
    sub_1C1F897AC(0, &qword_1EA2C3EE8, MEMORY[0x1E4F67808]);
    sub_1C1F89810();
    sub_1C1F43FD4();
    sub_1C214A0A0();
    sub_1C1F89A08((uint64_t)v6, &qword_1EBF0C7E8, MEMORY[0x1E4FBCC28]);

    swift_release();
    uint64_t v20 = swift_allocObject();
    uint64_t v21 = v25;
    *(void *)(v20 + 16) = v25;
    sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8C0);
    sub_1C1F899C0(&qword_1EA2C3F00, (void (*)(uint64_t))sub_1C1F896F4);
    id v22 = v21;
    sub_1C2149FD0();
    swift_release();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    swift_allocObject();
    swift_unknownObjectWeakInit();
    sub_1C1F899C0(&qword_1EA2C3F08, (void (*)(uint64_t))sub_1C1F89884);
    uint64_t v23 = v26;
    uint64_t v24 = sub_1C214A0F0();
    swift_release();
    (*(void (**)(char *, uint64_t))(v27 + 8))(v16, v23);
    *(void *)(v2 + v28) = v24;
    return swift_release();
  }
  return result;
}

unint64_t sub_1C1F878A4@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X8>)
{
  unint64_t v6 = sub_1C2149760();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (uint64_t *)((char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, uint64_t, unint64_t))(v7 + 16))(v9, a1, v6);
  if ((*(unsigned int (**)(uint64_t *, unint64_t))(v7 + 88))(v9, v6) != *MEMORY[0x1E4F67800])
  {
    *a3 = 0;
    return (*(uint64_t (**)(uint64_t *, unint64_t))(v7 + 8))(v9, v6);
  }
  (*(void (**)(uint64_t *, unint64_t))(v7 + 96))(v9, v6);
  uint64_t v10 = *v9;
  unint64_t v23 = MEMORY[0x1E4FBC860];
  if ((unint64_t)v10 >> 62)
  {
    if (v10 < 0) {
      unint64_t v6 = v10;
    }
    else {
      unint64_t v6 = v10 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    unint64_t result = sub_1C214B930();
    uint64_t v11 = result;
    if (result) {
      goto LABEL_4;
    }
LABEL_21:
    swift_bridgeObjectRelease();
    unint64_t v16 = MEMORY[0x1E4FBC860];
    goto LABEL_22;
  }
  uint64_t v11 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
  unint64_t result = swift_bridgeObjectRetain();
  if (!v11) {
    goto LABEL_21;
  }
LABEL_4:
  if (v11 < 1)
  {
    __break(1u);
    goto LABEL_33;
  }
  for (uint64_t i = 0; i != v11; ++i)
  {
    if ((v10 & 0xC000000000000001) != 0) {
      id v14 = (id)MEMORY[0x1C8753960](i, v10);
    }
    else {
      id v14 = *(id *)(v10 + 8 * i + 32);
    }
    uint64_t v15 = v14;
    self;
    if (swift_dynamicCastObjCClass())
    {
      MEMORY[0x1C87528E0]();
      if (*(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_1C214A7D0();
      }
      sub_1C214A820();
      sub_1C214A7A0();
    }
    else
    {
    }
  }
  swift_bridgeObjectRelease();
  unint64_t v16 = v23;
LABEL_22:
  swift_bridgeObjectRelease();
  id v17 = a2;
  unint64_t v6 = sub_1C1F88D68(v16, v17);
  swift_bridgeObjectRelease();

  if (!(v6 >> 62))
  {
    uint64_t v18 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v18) {
      goto LABEL_24;
    }
LABEL_31:
    unint64_t result = swift_bridgeObjectRelease();
    *a3 = 0;
    return result;
  }
  uint64_t v18 = sub_1C214B930();
  if (!v18) {
    goto LABEL_31;
  }
LABEL_24:
  BOOL v19 = __OFSUB__(v18, 1);
  unint64_t result = v18 - 1;
  if (v19)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  if ((v6 & 0xC000000000000001) != 0)
  {
LABEL_34:
    id v20 = (id)MEMORY[0x1C8753960](result, v6);
    goto LABEL_29;
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (result < *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v20 = *(id *)(v6 + 8 * result + 32);
LABEL_29:
    id v21 = v20;
    unint64_t result = swift_bridgeObjectRelease();
    *a3 = v21;
    return result;
  }
  __break(1u);
  return result;
}

void sub_1C1F87BD8(void **a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a2 + 16;
  swift_beginAccess();
  uint64_t v4 = MEMORY[0x1C8754850](v3);
  if (v4)
  {
    uint64_t v5 = (void *)v4;
    sub_1C1F87304(v2);
  }
}

uint64_t sub_1C1F87C34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[21] = a4;
  uint64_t v5 = sub_1C21497F0();
  v4[22] = v5;
  v4[23] = *(void *)(v5 - 8);
  v4[24] = swift_task_alloc();
  v4[25] = swift_task_alloc();
  sub_1C214A890();
  v4[26] = sub_1C214A880();
  uint64_t v7 = sub_1C214A840();
  v4[27] = v7;
  v4[28] = v6;
  return MEMORY[0x1F4188298](sub_1C1F87D38, v7, v6);
}

uint64_t sub_1C1F87D38()
{
  unint64_t v23 = v0;
  uint64_t v1 = (void *)v0[21];
  sub_1C21497A0();
  id v2 = v1;
  uint64_t v3 = sub_1C21497E0();
  os_log_type_t v4 = sub_1C214ABB0();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v19 = v0[23];
    uint64_t v5 = (void *)v0[21];
    uint64_t v20 = v0[22];
    uint64_t v21 = v0[25];
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136446210;
    uint64_t v22 = v7;
    v0[19] = v5;
    type metadata accessor for MedicationConceptDetailViewController();
    id v8 = v5;
    uint64_t v9 = sub_1C214A630();
    v0[20] = sub_1C1F6FD54(v9, v10, &v22);
    sub_1C214B530();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C1F0B000, v3, v4, "[%{public}s] Marking interaction shard as required during viewing DDI overview", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C8754730](v7, -1, -1);
    MEMORY[0x1C8754730](v6, -1, -1);

    uint64_t v11 = *(void (**)(uint64_t, uint64_t))(v19 + 8);
    v11(v21, v20);
  }
  else
  {
    uint64_t v12 = v0[25];
    uint64_t v13 = v0[22];
    uint64_t v14 = v0[23];
    uint64_t v15 = (void *)v0[21];

    uint64_t v11 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
    v11(v12, v13);
  }
  v0[29] = v11;
  id v16 = sub_1C1F86820();
  v0[30] = v16;
  v0[2] = v0;
  v0[3] = sub_1C1F87FF0;
  uint64_t v17 = swift_continuation_init();
  v0[10] = MEMORY[0x1E4F143A8];
  v0[11] = 0x40000000;
  v0[12] = sub_1C20B073C;
  v0[13] = &block_descriptor;
  v0[14] = v17;
  objc_msgSend(v16, sel_markInteractionsShardAsRequiredWithCompletion_, v0 + 10);
  return MEMORY[0x1F41881E8](v0 + 2);
}

uint64_t sub_1C1F87FF0()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 48);
  *(void *)(*v0 + 248) = v2;
  uint64_t v3 = *(void *)(v1 + 224);
  uint64_t v4 = *(void *)(v1 + 216);
  if (v2) {
    uint64_t v5 = sub_1C1F88198;
  }
  else {
    uint64_t v5 = sub_1C1F88120;
  }
  return MEMORY[0x1F4188298](v5, v4, v3);
}

uint64_t sub_1C1F88120()
{
  uint64_t v1 = *(void **)(v0 + 240);
  swift_release();

  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1C1F88198()
{
  unint64_t v31 = v0;
  uint64_t v2 = (void *)v0[30];
  uint64_t v1 = (void *)v0[31];
  uint64_t v3 = (void *)v0[21];
  swift_release();
  swift_willThrow();

  sub_1C21497A0();
  id v4 = v3;
  id v5 = v1;
  id v6 = v4;
  id v7 = v1;
  id v8 = sub_1C21497E0();
  os_log_type_t v9 = sub_1C214ABD0();
  if (os_log_type_enabled(v8, v9))
  {
    unint64_t v10 = (void *)v0[31];
    uint64_t v28 = v0[24];
    id v29 = (void (*)(uint64_t, uint64_t))v0[29];
    uint64_t v11 = (void *)v0[21];
    uint64_t v27 = v0[22];
    uint64_t v12 = swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    v30[0] = v13;
    *(_DWORD *)uint64_t v12 = 136446466;
    v0[15] = v11;
    type metadata accessor for MedicationConceptDetailViewController();
    id v14 = v11;
    uint64_t v15 = sub_1C214A630();
    v0[16] = sub_1C1F6FD54(v15, v16, v30);
    sub_1C214B530();

    swift_bridgeObjectRelease();
    *(_WORD *)(v12 + 12) = 2082;
    v0[17] = v10;
    id v17 = v10;
    sub_1C1F248B4(0, (unint64_t *)&qword_1EBF0C9C0);
    uint64_t v18 = sub_1C214A610();
    v0[18] = sub_1C1F6FD54(v18, v19, v30);
    sub_1C214B530();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1C1F0B000, v8, v9, "[%{public}s] Could not mark medication education/interaction shards as required: %{public}s", (uint8_t *)v12, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C8754730](v13, -1, -1);
    MEMORY[0x1C8754730](v12, -1, -1);

    v29(v28, v27);
  }
  else
  {
    uint64_t v20 = (void *)v0[31];
    uint64_t v21 = (void (*)(uint64_t, uint64_t))v0[29];
    uint64_t v22 = v0[24];
    uint64_t v24 = (void *)v0[21];
    uint64_t v23 = v0[22];

    v21(v22, v23);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  id v25 = (uint64_t (*)(void))v0[1];
  return v25();
}

uint64_t sub_1C1F88494(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5 = sub_1C2147D90();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  id v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2147D50();
  id v9 = a3;
  id v10 = a1;
  sub_1C1F4EE40(v9);

  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void MedicationConceptDetailViewController.__allocating_init(dataSource:)()
{
}

void MedicationConceptDetailViewController.init(dataSource:)()
{
}

id MedicationConceptDetailViewController.__allocating_init(collectionViewLayout:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCollectionViewLayout_, a1);

  return v3;
}

void MedicationConceptDetailViewController.init(collectionViewLayout:)()
{
}

void sub_1C1F88664(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = a3;
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1C1F88698()
{
  swift_bridgeObjectRelease();
  swift_release();

  swift_release();

  return swift_release();
}

id MedicationConceptDetailViewController.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MedicationConceptDetailViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1C1F88774(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_release();

  swift_release();

  return swift_release();
}

Swift::Void __swiftcall MedicationConceptDetailViewController.presentMedicationsInputViewController()()
{
  uint64_t v1 = v0;
  sub_1C1F897AC(0, (unint64_t *)&qword_1EA2C3978, (void (*)(uint64_t))sub_1C1F89100);
  swift_allocObject();
  uint64_t v2 = sub_1C2149EB0();
  id v3 = *(void **)&v0[qword_1EA2C3E70];
  id v4 = objc_allocWithZone((Class)type metadata accessor for MedicationsInputViewController());
  swift_retain();
  uint64_t v5 = MedicationsInputViewController.init(schedulePublisher:medication:resetSchedule:restartingSchedule:)(v2, v3, 0, 0);
  id v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F67B78]), sel_initWithRootViewController_, v5);
  objc_msgSend(v6, sel_setModalPresentationStyle_, 2);
  objc_msgSend(v6, sel_setModalInPresentation_, 1);
  objc_msgSend(v1, sel_presentViewController_animated_completion_, v6, 1, 0);
  swift_release();
}

uint64_t MedicationConceptDetailViewController.getLogDoseViewController(medication:prefillLogDate:prefillDosage:)(void *a1, uint64_t a2, double a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_1C2147AC0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  type metadata accessor for MedicationsDoseLogViewModel(0);
  swift_allocObject();
  id v12 = a1;
  uint64_t v13 = MedicationsDoseLogViewModel.init(medication:doseEvent:scheduleItem:logDate:dosage:index:)(v12, 0, 0, v11, 0, a3);
  sub_1C2147AB0();
  uint64_t v25 = (uint64_t)v12;
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8C0);
  uint64_t v14 = sub_1C2149490();
  uint64_t v16 = v15;
  sub_1C1F0ED28();
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_1C214E170;
  *(void *)(v17 + 32) = v13;
  uint64_t v25 = v17;
  sub_1C214A7A0();
  uint64_t v18 = v25;
  type metadata accessor for MedicationDoseLogListViewModel(0);
  uint64_t v19 = swift_allocObject();
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v19 + OBJC_IVAR____TtC19HealthMedicationsUI30MedicationDoseLogListViewModel_date, v11, v8);
  uint64_t v20 = (uint64_t *)(v19 + OBJC_IVAR____TtC19HealthMedicationsUI30MedicationDoseLogListViewModel_title);
  *uint64_t v20 = v14;
  v20[1] = v16;
  *(void *)(v19 + 16) = v18;
  uint64_t v21 = (void **)(v4 + qword_1EA2C3E80);
  swift_beginAccess();
  uint64_t v22 = *v21;
  objc_allocWithZone((Class)type metadata accessor for MedicationsLogViewController());
  return MedicationsLogViewController.init(medicationDoseLogList:asNeededMedicationDoseLogList:healthStore:showRecordAll:provenance:context:)(v19, 0, v22, 0, 4, 0, 2, 0);
}

uint64_t sub_1C1F88B94(uint64_t a1, int *a2)
{
  id v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1C1F88C70;
  return v6(a1);
}

uint64_t sub_1C1F88C70()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1C1F88D68(unint64_t a1, void *a2)
{
  uint64_t v13 = MEMORY[0x1E4FBC860];
  if (a1 >> 62) {
    goto LABEL_16;
  }
  uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v3)
  {
    while (1)
    {
      unint64_t v4 = 0;
      while ((a1 & 0xC000000000000001) != 0)
      {
        id v5 = (id)MEMORY[0x1C8753960](v4, a1);
LABEL_9:
        id v6 = v5;
        unint64_t v7 = v4 + 1;
        if (__OFADD__(v4, 1)) {
          goto LABEL_15;
        }
        sub_1C1F12718(0, (unint64_t *)&qword_1EA2C4AA0);
        id v8 = objc_msgSend(v6, sel_semanticIdentifier);
        id v9 = objc_msgSend(a2, sel_semanticIdentifier);
        char v10 = sub_1C214B220();

        if (v10)
        {
          sub_1C214B820();
          sub_1C214B860();
          sub_1C214B870();
          sub_1C214B830();
        }
        else
        {
        }
        ++v4;
        if (v7 == v3) {
          return v13;
        }
      }
      if (v4 < *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        break;
      }
      __break(1u);
LABEL_15:
      __break(1u);
LABEL_16:
      uint64_t v3 = sub_1C214B930();
      if (!v3) {
        return MEMORY[0x1E4FBC860];
      }
    }
    id v5 = *(id *)(a1 + 8 * v4 + 32);
    goto LABEL_9;
  }
  return MEMORY[0x1E4FBC860];
}

void _s19HealthMedicationsUI37MedicationConceptDetailViewControllerC5coderACSgSo7NSCoderC_tcfc_0()
{
  uint64_t v1 = (uint64_t *)&v0[qword_1EA2C3E90];
  uint64_t v3 = sub_1C214A5F0();
  uint64_t v4 = v2;
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  uint64_t *v1 = v3;
  v1[1] = v4;
  *(void *)&v0[qword_1EA2C3E98] = 0;
  *(void *)&v0[qword_1EA2C3EA0] = 0;
  *(void *)&v0[qword_1EA2C3EA8] = 0;

  sub_1C214B910();
  __break(1u);
}

uint64_t sub_1C1F8900C()
{
  swift_unknownObjectRelease();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1C1F8904C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  unint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *unint64_t v7 = v2;
  v7[1] = sub_1C1F40400;
  return sub_1C1F87C34(a1, v4, v5, v6);
}

void sub_1C1F89100()
{
  if (!qword_1EBF0C830)
  {
    sub_1C1F12718(255, &qword_1EBF0C828);
    unint64_t v0 = sub_1C214B4F0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBF0C830);
    }
  }
}

uint64_t sub_1C1F89168@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return keypath_getTm(a1, &qword_1EA2C3E78, a2);
}

uint64_t sub_1C1F89174(uint64_t *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_1C1F866AC(a1, a2, a3, a4, &qword_1EA2C3E78);
}

id sub_1C1F89194@<X0>(void *a1@<X0>, void **a2@<X8>)
{
  uint64_t v3 = (void **)(*a1 + qword_1EA2C3E80);
  swift_beginAccess();
  uint64_t v4 = *v3;
  *a2 = *v3;

  return v4;
}

uint64_t sub_1C1F891FC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return keypath_getTm(a1, &qword_1EA2C3E88, a2);
}

uint64_t keypath_getTm@<X0>(void *a1@<X0>, void *a2@<X3>, void *a3@<X8>)
{
  uint64_t v4 = (void *)(*a1 + *a2);
  swift_beginAccess();
  *a3 = *v4;
  return swift_retain();
}

uint64_t sub_1C1F8925C(uint64_t *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_1C1F866AC(a1, a2, a3, a4, &qword_1EA2C3E88);
}

uint64_t sub_1C1F8927C()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for MedicationConceptDetailViewController(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MedicationConceptDetailViewController);
}

uint64_t dispatch thunk of MedicationConceptDetailViewController.providedPresentation.getter()
{
  return (*(uint64_t (**)(void))(class metadata base offset for MedicationConceptDetailViewController
                              + (*MEMORY[0x1E4FBC8C8] & *v0)
                              + 64))();
}

uint64_t dispatch thunk of MedicationConceptDetailViewController.listManager.getter()
{
  return (*(uint64_t (**)(void))(class metadata base offset for MedicationConceptDetailViewController
                              + (*MEMORY[0x1E4FBC8C8] & *v0)
                              + 72))();
}

uint64_t dispatch thunk of MedicationConceptDetailViewController.listManager.setter()
{
  return (*(uint64_t (**)(void))(class metadata base offset for MedicationConceptDetailViewController
                              + (*MEMORY[0x1E4FBC8C8] & *v0)
                              + 80))();
}

uint64_t dispatch thunk of MedicationConceptDetailViewController.listManager.modify()
{
  return (*(uint64_t (**)(void))(class metadata base offset for MedicationConceptDetailViewController
                              + (*MEMORY[0x1E4FBC8C8] & *v0)
                              + 88))();
}

uint64_t dispatch thunk of MedicationConceptDetailViewController.healthStore.getter()
{
  return (*(uint64_t (**)(void))(class metadata base offset for MedicationConceptDetailViewController
                              + (*MEMORY[0x1E4FBC8C8] & *v0)
                              + 96))();
}

uint64_t dispatch thunk of MedicationConceptDetailViewController.healthStore.setter()
{
  return (*(uint64_t (**)(void))(class metadata base offset for MedicationConceptDetailViewController
                              + (*MEMORY[0x1E4FBC8C8] & *v0)
                              + 104))();
}

uint64_t dispatch thunk of MedicationConceptDetailViewController.healthStore.modify()
{
  return (*(uint64_t (**)(void))(class metadata base offset for MedicationConceptDetailViewController
                              + (*MEMORY[0x1E4FBC8C8] & *v0)
                              + 112))();
}

uint64_t dispatch thunk of MedicationConceptDetailViewController.analyticsManager.getter()
{
  return (*(uint64_t (**)(void))(class metadata base offset for MedicationConceptDetailViewController
                              + (*MEMORY[0x1E4FBC8C8] & *v0)
                              + 120))();
}

uint64_t dispatch thunk of MedicationConceptDetailViewController.analyticsManager.setter()
{
  return (*(uint64_t (**)(void))(class metadata base offset for MedicationConceptDetailViewController
                              + (*MEMORY[0x1E4FBC8C8] & *v0)
                              + 128))();
}

uint64_t dispatch thunk of MedicationConceptDetailViewController.analyticsManager.modify()
{
  return (*(uint64_t (**)(void))(class metadata base offset for MedicationConceptDetailViewController
                              + (*MEMORY[0x1E4FBC8C8] & *v0)
                              + 136))();
}

uint64_t dispatch thunk of MedicationConceptDetailViewController.__allocating_init(medication:healthStore:listManager:provenance:)()
{
  return (*(uint64_t (**)(void))(class metadata base offset for MedicationConceptDetailViewController + v0 + 216))();
}

uint64_t dispatch thunk of MedicationConceptDetailViewController.setUp(with:)()
{
  return (*(uint64_t (**)(void))(class metadata base offset for MedicationConceptDetailViewController
                              + (*MEMORY[0x1E4FBC8C8] & *v0)
                              + 224))();
}

uint64_t sub_1C1F89698()
{
  return type metadata accessor for MedicationConceptDetailViewController();
}

void sub_1C1F896A0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C214B4F0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1C1F896F4()
{
  if (!qword_1EA2C3EE0)
  {
    sub_1C1F897AC(255, &qword_1EA2C3EE8, MEMORY[0x1E4F67808]);
    sub_1C1F12718(255, (unint64_t *)&qword_1EBF0CB10);
    sub_1C1F89810();
    sub_1C1F43FD4();
    unint64_t v0 = sub_1C2149DF0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C3EE0);
    }
  }
}

void sub_1C1F897AC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C2149EA0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

unint64_t sub_1C1F89810()
{
  unint64_t result = qword_1EA2C3EF0;
  if (!qword_1EA2C3EF0)
  {
    sub_1C1F897AC(255, &qword_1EA2C3EE8, MEMORY[0x1E4F67808]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C3EF0);
  }
  return result;
}

void sub_1C1F89884()
{
  if (!qword_1EA2C3EF8)
  {
    sub_1C1F896F4();
    sub_1C1F12718(255, (unint64_t *)&qword_1EBF0C8C0);
    sub_1C1F899C0(&qword_1EA2C3F00, (void (*)(uint64_t))sub_1C1F896F4);
    unint64_t v0 = sub_1C2149D00();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C3EF8);
    }
  }
}

uint64_t sub_1C1F89940()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

unint64_t sub_1C1F89978@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_1C1F878A4(a1, *(void **)(v2 + 16), a2);
}

uint64_t sub_1C1F89980()
{
  swift_unknownObjectWeakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

void sub_1C1F899B8(void **a1)
{
  sub_1C1F87BD8(a1, v1);
}

uint64_t sub_1C1F899C0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C1F89A08(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1C1F896A0(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1C1F89A64()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C1F89A9C(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1C1F40400;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1EA2C3F20 + dword_1EA2C3F20);
  return v6(a1, v4);
}

uint64_t AddMedicationItem.init(enabled:onTap:)@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  type metadata accessor for AddMedicationCell();
  sub_1C1F89BF4();
  uint64_t result = sub_1C21481D0();
  *(void *)a4 = 0xD000000000000011;
  *(void *)(a4 + 8) = 0x80000001C2152300;
  *(unsigned char *)(a4 + 16) = a1;
  *(void *)(a4 + 24) = a2;
  *(void *)(a4 + 32) = a3;
  *(void *)(a4 + 40) = result;
  *(void *)(a4 + 48) = v9;
  return result;
}

uint64_t type metadata accessor for AddMedicationCell()
{
  return self;
}

unint64_t sub_1C1F89BF4()
{
  unint64_t result = qword_1EA2C3F30;
  if (!qword_1EA2C3F30)
  {
    type metadata accessor for AddMedicationCell();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C3F30);
  }
  return result;
}

uint64_t AddMedicationItem.reuseIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

unint64_t AddMedicationItem.uniqueIdentifier.getter()
{
  return 0xD000000000000012;
}

uint64_t static AddMedicationItem.== infix(_:_:)(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return 1;
  }
  else {
    return sub_1C214BA80();
  }
}

uint64_t AddMedicationItem.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_1C214A690();

  return swift_bridgeObjectRelease();
}

uint64_t AddMedicationItem.hashValue.getter()
{
  return sub_1C214BB80();
}

uint64_t sub_1C1F89DD8()
{
  return sub_1C214BB80();
}

uint64_t sub_1C1F89E24()
{
  return sub_1C214A690();
}

uint64_t sub_1C1F89E2C()
{
  return sub_1C214BB80();
}

uint64_t sub_1C1F89E74(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return 1;
  }
  else {
    return sub_1C214BA80();
  }
}

id sub_1C1F89EA8()
{
  return sub_1C1F8A328(&OBJC_IVAR____TtC19HealthMedicationsUI17AddMedicationView____lazy_storage___iconView, (uint64_t (*)(void))sub_1C1F89EC8);
}

id sub_1C1F89EC8()
{
  sub_1C1F12718(0, (unint64_t *)&qword_1EA2C30B8);
  uint64_t v0 = (void *)sub_1C214B1F0();
  uint64_t v1 = (void *)sub_1C214A5B0();
  id v2 = objc_msgSend(self, sel_imageNamed_inBundle_, v1, v0);

  id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1838]), sel_initWithImage_, v2);
  objc_msgSend(v3, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v3, sel_setContentMode_, 1);
  return v3;
}

id sub_1C1F89FB4()
{
  return sub_1C1F8A328(&OBJC_IVAR____TtC19HealthMedicationsUI17AddMedicationView____lazy_storage___addMedLabel, (uint64_t (*)(void))sub_1C1F89FD4);
}

id sub_1C1F89FD4()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
  if (qword_1EBF0CA00 != -1) {
    swift_once();
  }
  id v1 = (id)qword_1EBF0CA18;
  swift_bridgeObjectRetain();
  sub_1C2147730();
  swift_bridgeObjectRelease();

  id v2 = (void *)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_setText_, v2, 0xE000000000000000);

  sub_1C214A5F0();
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  id v3 = v0;
  swift_bridgeObjectRelease();
  uint64_t v4 = (void *)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setAccessibilityIdentifier_, v4);

  objc_msgSend(v3, sel_setIsAccessibilityElement_, 1);
  uint64_t v5 = (void *)qword_1EBF0CA18;
  id v6 = v3;
  id v7 = v5;
  swift_bridgeObjectRetain();
  sub_1C2147730();
  swift_bridgeObjectRelease();

  uint64_t v8 = (void *)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  objc_msgSend(v6, sel_setAccessibilityLabel_, v8, 0xE000000000000000);

  objc_msgSend(v6, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v6, sel_setNumberOfLines_, 0);
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8E0);
  uint64_t v9 = (void *)sub_1C214B0A0();
  objc_msgSend(v6, sel_setFont_, v9);

  id v10 = objc_msgSend(self, sel_labelColor);
  objc_msgSend(v6, sel_setTextColor_, v10);

  return v6;
}

id sub_1C1F8A308()
{
  return sub_1C1F8A328(&OBJC_IVAR____TtC19HealthMedicationsUI17AddMedicationView____lazy_storage___detailLabel, (uint64_t (*)(void))sub_1C1F8A388);
}

id sub_1C1F8A328(uint64_t *a1, uint64_t (*a2)(void))
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(void **)(v2 + *a1);
  if (v4)
  {
    id v5 = *(id *)(v2 + *a1);
  }
  else
  {
    id v6 = (void *)a2();
    id v7 = *(void **)(v2 + v3);
    *(void *)(v2 + v3) = v6;
    id v5 = v6;

    uint64_t v4 = 0;
  }
  id v8 = v4;
  return v5;
}

id sub_1C1F8A388()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
  if (qword_1EBF0CA00 != -1) {
    swift_once();
  }
  id v1 = (id)qword_1EBF0CA18;
  swift_bridgeObjectRetain();
  sub_1C2147730();
  swift_bridgeObjectRelease();

  uint64_t v2 = (void *)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_setText_, v2, 0xE000000000000000);

  sub_1C214A5F0();
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  id v3 = v0;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  uint64_t v4 = (void *)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setAccessibilityIdentifier_, v4);

  objc_msgSend(v3, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v3, sel_setNumberOfLines_, 0);
  id v5 = objc_msgSend(self, sel_preferredFontForTextStyle_, *MEMORY[0x1E4FB2950]);
  objc_msgSend(v3, sel_setFont_, v5);

  id v6 = objc_msgSend(self, sel_secondaryLabelColor);
  objc_msgSend(v3, sel_setTextColor_, v6);

  return v3;
}

id sub_1C1F8A61C()
{
  uint64_t v1 = OBJC_IVAR____TtC19HealthMedicationsUI17AddMedicationView____lazy_storage___separatorView;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI17AddMedicationView____lazy_storage___separatorView);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI17AddMedicationView____lazy_storage___separatorView);
  }
  else
  {
    id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1EB0]), sel_init);
    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    id v5 = objc_msgSend(self, sel_opaqueSeparatorColor);
    objc_msgSend(v4, sel_setBackgroundColor_, v5);

    id v6 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v7 = v2;
  return v3;
}

id sub_1C1F8A6E0()
{
  uint64_t v1 = OBJC_IVAR____TtC19HealthMedicationsUI17AddMedicationView____lazy_storage___addMedPromptLabel;
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC19HealthMedicationsUI17AddMedicationView____lazy_storage___addMedPromptLabel];
  if (v2)
  {
    id v3 = *(id *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI17AddMedicationView____lazy_storage___addMedPromptLabel];
  }
  else
  {
    id v4 = v0;
    id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
    if (qword_1EBF0CA00 != -1) {
      swift_once();
    }
    id v6 = (id)qword_1EBF0CA18;
    swift_bridgeObjectRetain();
    sub_1C2147730();
    swift_bridgeObjectRelease();

    id v7 = (void *)sub_1C214A5B0();
    swift_bridgeObjectRelease();
    objc_msgSend(v5, sel_setText_, v7, 0xE000000000000000);

    objc_msgSend(v5, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    objc_msgSend(v5, sel_setNumberOfLines_, 0);
    sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8E0);
    id v8 = (void *)sub_1C214B0A0();
    objc_msgSend(v5, sel_setFont_, v8);

    id v9 = objc_msgSend(self, sel_systemBlueColor);
    objc_msgSend(v5, sel_setTextColor_, v9);

    id v10 = (void *)sub_1C214A5B0();
    objc_msgSend(v4, sel_setAccessibilityIdentifier_, v10);

    uint64_t v11 = *(void **)&v4[v1];
    *(void *)&v4[v1] = v5;
    id v3 = v5;

    uint64_t v2 = 0;
  }
  id v12 = v2;
  return v3;
}

id AddMedicationView.init(frame:)(double a1, double a2, double a3, double a4)
{
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI17AddMedicationView____lazy_storage___iconView] = 0;
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI17AddMedicationView____lazy_storage___addMedLabel] = 0;
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI17AddMedicationView____lazy_storage___detailLabel] = 0;
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI17AddMedicationView____lazy_storage___separatorView] = 0;
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI17AddMedicationView____lazy_storage___addMedPromptLabel] = 0;
  v11.receiver = v4;
  v11.super_class = (Class)type metadata accessor for AddMedicationView();
  id v9 = objc_msgSendSuper2(&v11, sel_initWithFrame_, a1, a2, a3, a4);
  sub_1C1F8AB98();

  return v9;
}

uint64_t type metadata accessor for AddMedicationView()
{
  return self;
}

void sub_1C1F8AB98()
{
  sub_1C2147DE0();
  id v1 = (id)*MEMORY[0x1E4F39EA8];
  sub_1C214B0D0();

  id v2 = sub_1C1F89EA8();
  objc_msgSend(v0, sel_addSubview_, v2);

  id v3 = sub_1C1F89FB4();
  objc_msgSend(v0, sel_addSubview_, v3);

  id v4 = sub_1C1F8A308();
  objc_msgSend(v0, sel_addSubview_, v4);

  id v5 = sub_1C1F8A61C();
  objc_msgSend(v0, sel_addSubview_, v5);

  id v6 = sub_1C1F8A6E0();
  objc_msgSend(v0, sel_addSubview_, v6);

  uint64_t v87 = self;
  sub_1C1F0ED28();
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1C2152310;
  id v8 = sub_1C1F89EA8();
  id v9 = objc_msgSend(v8, sel_topAnchor);

  id v10 = objc_msgSend(v0, sel_topAnchor);
  id v11 = objc_msgSend(v9, sel_constraintEqualToAnchor_constant_, v10, 12.0);

  *(void *)(v7 + 32) = v11;
  id v12 = sub_1C1F89EA8();
  id v13 = objc_msgSend(v12, sel_leadingAnchor);

  id v14 = objc_msgSend(v0, (SEL)&selRef_setTranslatesAutoresizingMaskIntoConstraints_ + 2);
  id v15 = objc_msgSend(v13, sel_constraintEqualToAnchor_constant_, v14, 12.0);

  *(void *)(v7 + 40) = v15;
  id v16 = sub_1C1F89EA8();
  id v17 = objc_msgSend(v16, sel_widthAnchor);

  id v18 = objc_msgSend(v17, sel_constraintEqualToConstant_, 60.0);
  *(void *)(v7 + 48) = v18;
  id v19 = sub_1C1F89EA8();
  id v20 = objc_msgSend(v19, sel_heightAnchor);

  id v21 = objc_msgSend(v20, (SEL)&selRef_systemBackgroundColor + 2, 60.0);
  *(void *)(v7 + 56) = v21;
  id v22 = sub_1C1F89FB4();
  id v23 = objc_msgSend(v22, (SEL)&selRef_setTranslatesAutoresizingMaskIntoConstraints_ + 2);

  id v24 = sub_1C1F89EA8();
  id v25 = objc_msgSend(v24, sel_trailingAnchor);

  id v26 = objc_msgSend(v23, sel_constraintEqualToAnchor_constant_, v25, 12.0);
  *(void *)(v7 + 64) = v26;
  id v27 = sub_1C1F89FB4();
  id v28 = objc_msgSend(v27, sel_trailingAnchor);

  id v29 = objc_msgSend(v0, sel_trailingAnchor);
  id v30 = objc_msgSend(v28, sel_constraintEqualToAnchor_constant_, v29, -12.0);

  *(void *)(v7 + 72) = v30;
  id v31 = sub_1C1F89FB4();
  id v32 = objc_msgSend(v31, sel_topAnchor);

  id v33 = objc_msgSend(v0, sel_topAnchor);
  id v34 = objc_msgSend(v32, sel_constraintEqualToAnchor_constant_, v33, 12.0);

  *(void *)(v7 + 80) = v34;
  id v35 = sub_1C1F89FB4();
  id v36 = objc_msgSend(v35, sel_bottomAnchor);

  id v37 = sub_1C1F8A308();
  id v38 = objc_msgSend(v37, sel_topAnchor);

  id v39 = objc_msgSend(v36, sel_constraintEqualToAnchor_constant_, v38, -4.0);
  *(void *)(v7 + 88) = v39;
  id v40 = sub_1C1F8A308();
  id v41 = objc_msgSend(v40, (SEL)&selRef_setTranslatesAutoresizingMaskIntoConstraints_ + 2);

  id v42 = sub_1C1F89FB4();
  id v43 = objc_msgSend(v42, (SEL)&selRef_setTranslatesAutoresizingMaskIntoConstraints_ + 2);

  id v44 = objc_msgSend(v41, sel_constraintEqualToAnchor_, v43);
  *(void *)(v7 + 96) = v44;
  id v45 = sub_1C1F8A308();
  id v46 = objc_msgSend(v45, sel_trailingAnchor);

  id v47 = sub_1C1F89FB4();
  id v48 = objc_msgSend(v47, sel_trailingAnchor);

  id v49 = objc_msgSend(v46, sel_constraintEqualToAnchor_, v48);
  *(void *)(v7 + 104) = v49;
  id v50 = sub_1C1F8A308();
  id v51 = objc_msgSend(v50, sel_bottomAnchor);

  id v52 = sub_1C1F8A61C();
  id v53 = objc_msgSend(v52, sel_topAnchor);

  id v54 = objc_msgSend(v51, sel_constraintEqualToAnchor_constant_, v53, -12.0);
  *(void *)(v7 + 112) = v54;
  id v55 = sub_1C1F8A61C();
  id v56 = objc_msgSend(v55, sel_heightAnchor);

  id v57 = objc_msgSend(v56, sel_constraintEqualToConstant_, 1.0);
  *(void *)(v7 + 120) = v57;
  id v58 = sub_1C1F8A61C();
  id v59 = objc_msgSend(v58, sel_leadingAnchor);

  id v60 = sub_1C1F89FB4();
  id v61 = objc_msgSend(v60, sel_leadingAnchor);

  id v62 = objc_msgSend(v59, sel_constraintEqualToAnchor_, v61);
  *(void *)(v7 + 128) = v62;
  id v63 = sub_1C1F8A61C();
  id v64 = objc_msgSend(v63, sel_trailingAnchor);

  id v65 = sub_1C1F89FB4();
  id v66 = objc_msgSend(v65, sel_trailingAnchor);

  id v67 = objc_msgSend(v64, sel_constraintEqualToAnchor_, v66);
  *(void *)(v7 + 136) = v67;
  id v68 = sub_1C1F8A61C();
  id v69 = objc_msgSend(v68, sel_bottomAnchor);

  id v70 = sub_1C1F8A6E0();
  id v71 = objc_msgSend(v70, sel_topAnchor);

  id v72 = objc_msgSend(v69, sel_constraintEqualToAnchor_constant_, v71, -14.0);
  *(void *)(v7 + 144) = v72;
  id v73 = sub_1C1F8A6E0();
  id v74 = objc_msgSend(v73, sel_leadingAnchor);

  id v75 = sub_1C1F89EA8();
  id v76 = objc_msgSend(v75, sel_trailingAnchor);

  id v77 = objc_msgSend(v74, sel_constraintEqualToAnchor_constant_, v76, 12.0);
  *(void *)(v7 + 152) = v77;
  id v78 = sub_1C1F8A6E0();
  id v79 = objc_msgSend(v78, sel_trailingAnchor);

  id v80 = sub_1C1F89FB4();
  id v81 = objc_msgSend(v80, sel_trailingAnchor);

  id v82 = objc_msgSend(v79, sel_constraintEqualToAnchor_, v81);
  *(void *)(v7 + 160) = v82;
  id v83 = sub_1C1F8A6E0();
  id v84 = objc_msgSend(v83, sel_bottomAnchor);

  id v85 = objc_msgSend(v0, sel_bottomAnchor);
  id v86 = objc_msgSend(v84, sel_constraintEqualToAnchor_constant_, v85, -12.0);

  *(void *)(v7 + 168) = v86;
  sub_1C214A7A0();
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C810);
  id v88 = (id)sub_1C214A770();
  swift_bridgeObjectRelease();
  objc_msgSend(v87, sel_activateConstraints_, v88);
}

id AddMedicationView.__deallocating_deinit()
{
  return sub_1C1F8CA10(type metadata accessor for AddMedicationView);
}

uint64_t sub_1C1F8B500(uint64_t a1, void *a2)
{
  sub_1C1F8C930(a1, (uint64_t)v5, (unint64_t *)&qword_1EBF0C300, (void (*)(uint64_t))sub_1C1F1CB5C);
  uint64_t v3 = *a2 + OBJC_IVAR____TtC19HealthMedicationsUI17AddMedicationCell_item;
  swift_beginAccess();
  sub_1C1F32DDC((uint64_t)v5, v3);
  swift_endAccess();
  sub_1C1F8C48C();
  return sub_1C1F8C99C((uint64_t)v5, (unint64_t *)&qword_1EBF0C300, (void (*)(uint64_t))sub_1C1F1CB5C);
}

uint64_t sub_1C1F8B5A8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI17AddMedicationCell_item;
  swift_beginAccess();
  return sub_1C1F8C930(v3, a1, (unint64_t *)&qword_1EBF0C300, (void (*)(uint64_t))sub_1C1F1CB5C);
}

uint64_t sub_1C1F8B618(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI17AddMedicationCell_item;
  swift_beginAccess();
  sub_1C1F32DDC(a1, v3);
  swift_endAccess();
  sub_1C1F8C48C();
  return sub_1C1F8C99C(a1, (unint64_t *)&qword_1EBF0C300, (void (*)(uint64_t))sub_1C1F1CB5C);
}

uint64_t (*sub_1C1F8B6A4(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1C1F8B704;
}

uint64_t sub_1C1F8B704(uint64_t a1, char a2)
{
  uint64_t result = swift_endAccess();
  if ((a2 & 1) == 0) {
    return sub_1C1F8C48C();
  }
  return result;
}

id sub_1C1F8B738()
{
  uint64_t v1 = OBJC_IVAR____TtC19HealthMedicationsUI17AddMedicationCell____lazy_storage___addMedicationView;
  id v2 = *(void **)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI17AddMedicationCell____lazy_storage___addMedicationView);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI17AddMedicationCell____lazy_storage___addMedicationView);
  }
  else
  {
    type metadata accessor for AddMedicationView();
    id v4 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    objc_msgSend(v4, sel_addTarget_action_forControlEvents_, v0, sel_actionButtonTappedWithSender_, 64);
    id v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    id v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id _s19HealthMedicationsUI17AddMedicationViewC5frameACSo6CGRectV_tcfC_0(double a1, double a2, double a3, double a4)
{
  id v9 = objc_allocWithZone(v4);

  return objc_msgSend(v9, sel_initWithFrame_, a1, a2, a3, a4);
}

id AddMedicationCell.init(frame:)(double a1, double a2, double a3, double a4)
{
  id v9 = &v4[OBJC_IVAR____TtC19HealthMedicationsUI17AddMedicationCell_item];
  *(_OWORD *)id v9 = 0u;
  *((_OWORD *)v9 + 1) = 0u;
  *((void *)v9 + 4) = 0;
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI17AddMedicationCell____lazy_storage___addMedicationView] = 0;
  v12.receiver = v4;
  v12.super_class = (Class)type metadata accessor for AddMedicationCell();
  id v10 = objc_msgSendSuper2(&v12, sel_initWithFrame_, a1, a2, a3, a4);
  sub_1C1F8BA24();

  return v10;
}

void sub_1C1F8BA24()
{
  sub_1C2147DE0();
  id v1 = (id)*MEMORY[0x1E4F39EA8];
  sub_1C214B0D0();

  id v2 = objc_msgSend(v0, sel_contentView);
  id v3 = sub_1C1F8B738();
  objc_msgSend(v2, sel_addSubview_, v3);

  id v4 = self;
  sub_1C1F0ED28();
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1C21510C0;
  id v6 = sub_1C1F8B738();
  id v7 = objc_msgSend(v6, sel_topAnchor);

  id v8 = objc_msgSend(v0, sel_contentView);
  id v9 = objc_msgSend(v8, sel_topAnchor);

  id v10 = objc_msgSend(v7, sel_constraintEqualToAnchor_, v9);
  *(void *)(v5 + 32) = v10;
  id v11 = sub_1C1F8B738();
  id v12 = objc_msgSend(v11, sel_bottomAnchor);

  id v13 = objc_msgSend(v0, sel_contentView);
  id v14 = objc_msgSend(v13, sel_bottomAnchor);

  id v15 = objc_msgSend(v12, sel_constraintEqualToAnchor_, v14);
  *(void *)(v5 + 40) = v15;
  id v16 = sub_1C1F8B738();
  id v17 = objc_msgSend(v16, sel_leadingAnchor);

  id v18 = objc_msgSend(v0, sel_contentView);
  id v19 = objc_msgSend(v18, sel_leadingAnchor);

  id v20 = objc_msgSend(v17, sel_constraintEqualToAnchor_, v19);
  *(void *)(v5 + 48) = v20;
  id v21 = sub_1C1F8B738();
  id v22 = objc_msgSend(v21, sel_trailingAnchor);

  id v23 = objc_msgSend(v0, sel_contentView);
  id v24 = objc_msgSend(v23, sel_trailingAnchor);

  id v25 = objc_msgSend(v22, sel_constraintEqualToAnchor_, v24);
  *(void *)(v5 + 56) = v25;
  sub_1C214A7A0();
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C810);
  id v26 = (id)sub_1C214A770();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_activateConstraints_, v26);
}

uint64_t sub_1C1F8BD6C()
{
  id v1 = v0;
  sub_1C1F8CC5C(0, &qword_1EBF0C620, MEMORY[0x1E4FB0F28]);
  uint64_t v3 = MEMORY[0x1F4188790](v2 - 8);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x1F4188790](v3);
  id v8 = (char *)&v20 - v7;
  MEMORY[0x1F4188790](v6);
  id v10 = (char *)&v20 - v9;
  id v11 = (void *)sub_1C2149950();
  id v12 = (objc_class *)type metadata accessor for AddMedicationCell();
  v20.receiver = v1;
  v20.super_class = v12;
  objc_msgSendSuper2(&v20, sel__bridgedUpdateConfigurationUsingState_, v11);

  if (objc_msgSend(v1, sel_isHighlighted))
  {
    MEMORY[0x1C8752FE0]();
    uint64_t v13 = sub_1C21499D0();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48))(v10, 1, v13))
    {
      id v14 = (void (*)(uint64_t))MEMORY[0x1E4FB0F28];
      sub_1C1F8C930((uint64_t)v10, (uint64_t)v8, &qword_1EBF0C620, MEMORY[0x1E4FB0F28]);
      MEMORY[0x1C8752FF0](v8);
      uint64_t v15 = (uint64_t)v10;
      return sub_1C1F8C99C(v15, &qword_1EBF0C620, v14);
    }
    sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C900);
    sub_1C214B170();
    sub_1C2149990();
    id v18 = v10;
  }
  else
  {
    MEMORY[0x1C8752FE0]();
    uint64_t v16 = sub_1C21499D0();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48))(v5, 1, v16))
    {
      id v14 = (void (*)(uint64_t))MEMORY[0x1E4FB0F28];
      sub_1C1F8C930((uint64_t)v5, (uint64_t)v8, &qword_1EBF0C620, MEMORY[0x1E4FB0F28]);
      MEMORY[0x1C8752FF0](v8);
      uint64_t v15 = (uint64_t)v5;
      return sub_1C1F8C99C(v15, &qword_1EBF0C620, v14);
    }
    id v19 = objc_msgSend(self, sel_tertiarySystemBackgroundColor);
    sub_1C2149990();
    id v18 = v5;
  }
  return MEMORY[0x1C8752FF0](v18);
}

uint64_t sub_1C1F8C100()
{
  uint64_t v1 = sub_1C21497F0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = (uint64_t)v0 + OBJC_IVAR____TtC19HealthMedicationsUI17AddMedicationCell_item;
  swift_beginAccess();
  sub_1C1F8C930(v5, (uint64_t)v19, (unint64_t *)&qword_1EBF0C300, (void (*)(uint64_t))sub_1C1F1CB5C);
  if (v19[3])
  {
    sub_1C1F1CB5C();
    if (swift_dynamicCast())
    {
      ((void (*)(void))v18[3])();
      swift_bridgeObjectRelease();
      swift_release();
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    sub_1C1F8C99C((uint64_t)v19, (unint64_t *)&qword_1EBF0C300, (void (*)(uint64_t))sub_1C1F1CB5C);
  }
  sub_1C21497A0();
  id v7 = v0;
  id v8 = sub_1C21497E0();
  os_log_type_t v9 = sub_1C214ABD0();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v17 = v1;
    uint64_t v10 = swift_slowAlloc();
    uint64_t v16 = v2;
    id v11 = (uint8_t *)v10;
    uint64_t v12 = swift_slowAlloc();
    v19[0] = v12;
    *(_DWORD *)id v11 = 136446210;
    uint64_t v15 = v11 + 4;
    sub_1C1F8C930(v5, (uint64_t)v18, (unint64_t *)&qword_1EBF0C300, (void (*)(uint64_t))sub_1C1F1CB5C);
    sub_1C1F8CC5C(0, (unint64_t *)&qword_1EBF0C300, (void (*)(uint64_t))sub_1C1F1CB5C);
    uint64_t v13 = sub_1C214A630();
    v18[0] = sub_1C1F6FD54(v13, v14, v19);
    sub_1C214B530();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C1F0B000, v8, v9, "Incorrect view model for AddMedicationItem: %{public}s", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C8754730](v12, -1, -1);
    MEMORY[0x1C8754730](v11, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v4, v17);
  }
  else
  {

    return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
}

uint64_t sub_1C1F8C48C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1C21497F0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1F8CC5C(0, &qword_1EBF0C920, MEMORY[0x1E4FB1290]);
  uint64_t v7 = MEMORY[0x1F4188790](v6 - 8);
  os_log_type_t v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  id v11 = (char *)&v31 - v10;
  uint64_t v12 = (uint64_t)v1 + OBJC_IVAR____TtC19HealthMedicationsUI17AddMedicationCell_item;
  swift_beginAccess();
  sub_1C1F8C930(v12, (uint64_t)v36, (unint64_t *)&qword_1EBF0C300, (void (*)(uint64_t))sub_1C1F1CB5C);
  if (!v36[3])
  {
    sub_1C1F8C99C((uint64_t)v36, (unint64_t *)&qword_1EBF0C300, (void (*)(uint64_t))sub_1C1F1CB5C);
LABEL_9:
    sub_1C21497A0();
    id v23 = v1;
    id v24 = sub_1C21497E0();
    os_log_type_t v25 = sub_1C214ABD0();
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v33 = v2;
      id v26 = (uint8_t *)swift_slowAlloc();
      uint64_t v27 = swift_slowAlloc();
      uint64_t v32 = v3;
      uint64_t v28 = v27;
      v36[0] = v27;
      *(_DWORD *)id v26 = 136446210;
      id v31 = v26 + 4;
      sub_1C1F8C930(v12, (uint64_t)&v34, (unint64_t *)&qword_1EBF0C300, (void (*)(uint64_t))sub_1C1F1CB5C);
      sub_1C1F8CC5C(0, (unint64_t *)&qword_1EBF0C300, (void (*)(uint64_t))sub_1C1F1CB5C);
      uint64_t v29 = sub_1C214A630();
      uint64_t v34 = sub_1C1F6FD54(v29, v30, v36);
      sub_1C214B530();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C1F0B000, v24, v25, "Incorrect view model for AddMedicationItem: %{public}s", v26, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C8754730](v28, -1, -1);
      MEMORY[0x1C8754730](v26, -1, -1);

      return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v5, v33);
    }
    else
    {

      return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    }
  }
  sub_1C1F1CB5C();
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_9;
  }
  int v13 = v35;
  unint64_t v14 = self;
  uint64_t v15 = &selRef_linkColor;
  if (!v13) {
    uint64_t v15 = &selRef_secondaryLabelColor;
  }
  id v16 = [v14 *v15];
  id v17 = sub_1C1F8B738();
  sub_1C214B3F0();

  uint64_t v18 = sub_1C214B3D0();
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 48))(v11, 1, v18))
  {
    id v19 = v16;
    sub_1C214B320();
  }
  id v20 = sub_1C1F8B738();
  id v21 = (void (*)(uint64_t))MEMORY[0x1E4FB1290];
  sub_1C1F8C930((uint64_t)v11, (uint64_t)v9, &qword_1EBF0C920, MEMORY[0x1E4FB1290]);
  sub_1C214B400();

  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();

  return sub_1C1F8C99C((uint64_t)v11, &qword_1EBF0C920, v21);
}

uint64_t sub_1C1F8C930(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_1C1F8CC5C(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_1C1F8C99C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1C1F8CC5C(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

id AddMedicationCell.__deallocating_deinit()
{
  return sub_1C1F8CA10(type metadata accessor for AddMedicationCell);
}

id sub_1C1F8CA10(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

unint64_t sub_1C1F8CA4C()
{
  unint64_t result = qword_1EA2C3F70;
  if (!qword_1EA2C3F70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C3F70);
  }
  return result;
}

uint64_t sub_1C1F8CB08@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC19HealthMedicationsUI17AddMedicationCell_item;
  swift_beginAccess();
  return sub_1C1F8C930(v3, a2, (unint64_t *)&qword_1EBF0C300, (void (*)(uint64_t))sub_1C1F1CB5C);
}

ValueMetadata *type metadata accessor for AddMedicationItem()
{
  return &type metadata for AddMedicationItem;
}

uint64_t method lookup function for AddMedicationView(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for AddMedicationView);
}

uint64_t method lookup function for AddMedicationCell(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for AddMedicationCell);
}

uint64_t dispatch thunk of AddMedicationCell.item.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x60))();
}

uint64_t dispatch thunk of AddMedicationCell.item.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of AddMedicationCell.item.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x70))();
}

void sub_1C1F8CC5C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C214B4F0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t type metadata accessor for VisualizationModificationStepViewController()
{
  uint64_t result = qword_1EA2C3F90;
  if (!qword_1EA2C3F90) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C1F8CCFC()
{
  return swift_initClassMetadata2();
}

void sub_1C1F8CD5C(unsigned char *a1@<X8>)
{
  *a1 = 0x80;
}

uint64_t sub_1C1F8CD68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v50 = a3;
  sub_1C1F8DF10(0, (unint64_t *)&qword_1EA2C2CC8, (void (*)(uint64_t))type metadata accessor for MedicationSearchItem);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v41 - v7;
  uint64_t v9 = sub_1C2148F60();
  uint64_t v48 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  id v47 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1C2148E60();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  unint64_t v14 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = qword_1EA2C3F78;
  id v51 = v3;
  id v16 = v3;
  uint64_t result = sub_1C2148E30();
  if (!*(void *)(result + 16))
  {
    __break(1u);
    goto LABEL_6;
  }
  id v43 = v8;
  uint64_t v44 = v9;
  uint64_t v45 = a2;
  uint64_t v46 = a1;
  unint64_t v18 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  id v49 = *(void (**)(char *, unint64_t, uint64_t))(v12 + 16);
  v49(v14, result + v18, v11);
  swift_bridgeObjectRelease();
  uint64_t v19 = sub_1C2148E50();
  id v20 = *(void (**)(char *, uint64_t))(v12 + 8);
  v20(v14, v11);
  v52[0] = v19;
  sub_1C1F8DF64(0, (unint64_t *)&qword_1EA2C3FA8, (void (*)(uint64_t))sub_1C1F758A4);
  swift_allocObject();
  uint64_t v21 = sub_1C2149EB0();
  uint64_t v42 = v15;
  *(void *)&v51[v15] = v21;
  uint64_t v22 = qword_1EA2C3F80;
  uint64_t result = sub_1C2148E20();
  if (!*(void *)(result + 16))
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v49(v14, result + v18, v11);
  swift_bridgeObjectRelease();
  uint64_t v23 = sub_1C2148E50();
  v20(v14, v11);
  v52[0] = v23;
  swift_allocObject();
  uint64_t v24 = sub_1C2149EB0();
  uint64_t v41 = v22;
  *(void *)&v16[v22] = v24;
  uint64_t v25 = qword_1EA2C3F88;
  uint64_t result = sub_1C2148E20();
  if (*(void *)(result + 16))
  {
    v49(v14, result + v18, v11);
    swift_bridgeObjectRelease();
    uint64_t v26 = sub_1C2148E50();
    v20(v14, v11);
    v52[0] = v26;
    swift_allocObject();
    *(void *)&v16[v25] = sub_1C2149EB0();
    *(void *)&v16[qword_1EA2C7CD0] = MEMORY[0x1E4FBC870];
    uint64_t v27 = v48;
    uint64_t v28 = v44;
    (*(void (**)(char *, uint64_t, uint64_t))(v48 + 16))(v47, v50, v44);
    sub_1C1F8DF64(0, &qword_1EA2C3FB0, MEMORY[0x1E4F66C08]);
    swift_allocObject();
    uint64_t v29 = sub_1C2149EB0();
    uint64_t v30 = *(void *)&v51[v42];
    uint64_t v31 = *(void *)&v16[v41];
    uint64_t v32 = *(void *)&v16[v25];
    LOBYTE(v52[0]) = 0;
    type metadata accessor for VisualizationModificationDataSource();
    swift_allocObject();
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v33 = sub_1C20FF950(v29, v30, v31, v32, (unsigned __int8 *)v52);

    uint64_t v34 = v46;
    uint64_t v35 = (uint64_t)v43;
    sub_1C1F246EC(v46, (uint64_t)v43);
    sub_1C1F246EC(v35, (uint64_t)&v16[qword_1EA2C7D08]);
    sub_1C1F8DFC8();
    uint64_t v36 = swift_allocObject();
    *(void *)(v36 + 16) = v33;
    id v37 = (void *)(v33 + qword_1EA2C71F8);
    swift_beginAccess();
    *(void *)(v36 + 24) = *v37;
    *(void *)&v16[qword_1EA2C4208] = v36;
    *(void *)&v16[qword_1EA2C4210] = v45;
    sub_1C2148820();
    sub_1C1F24848();
    uint64_t v38 = swift_allocObject();
    *(_OWORD *)(v38 + 16) = xmmword_1C214FCD0;
    uint64_t v39 = MEMORY[0x1E4F66470];
    *(void *)(v38 + 32) = v33;
    *(void *)(v38 + 40) = v39;
    swift_retain_n();
    swift_retain();
    swift_retain();
    sub_1C2148850();
    uint64_t v40 = sub_1C2148AC0();
    swift_release();
    swift_release();
    sub_1C1F8DB1C(v35, (unint64_t *)&qword_1EA2C2CC8, (void (*)(uint64_t))type metadata accessor for MedicationSearchItem);
    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v50, v28);
    sub_1C1F8DB1C(v34, (unint64_t *)&qword_1EA2C2CC8, (void (*)(uint64_t))type metadata accessor for MedicationSearchItem);
    return v40;
  }
LABEL_7:
  __break(1u);
  return result;
}

void sub_1C1F8D348(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = a3;
  sub_1C1F8DC3C();
}

void sub_1C1F8D370(void *a1)
{
  sub_1C1F8DF10(0, &qword_1EA2C3FA0, (void (*)(uint64_t))sub_1C1F3C674);
  MEMORY[0x1F4188790](v2 - 8);
  unint64_t v4 = (char *)&v26 - v3;
  sub_1C1F3C674();
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (void *)sub_1C2147D40();
  objc_msgSend(a1, sel_deselectItemAtIndexPath_animated_, v10, 1);

  uint64_t v11 = (void *)sub_1C2147D40();
  id v27 = objc_msgSend(a1, sel_cellForItemAtIndexPath_, v11);

  if (v27)
  {
    type metadata accessor for ColorCell(0);
    uint64_t v12 = swift_dynamicCastClass();
    if (v12)
    {
      uint64_t v13 = v12 + OBJC_IVAR____TtC19HealthMedicationsUI9ColorCell_item;
      swift_beginAccess();
      sub_1C1F2116C(v13, (uint64_t)v28);
      if (v28[3])
      {
        sub_1C1F248B4(0, (unint64_t *)&qword_1EBF0C2F0);
        id v14 = v27;
        int v15 = swift_dynamicCast();
        (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v4, v15 ^ 1u, 1, v6);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v4, 1, v6) != 1)
        {
          sub_1C1F8DB78((uint64_t)v4, (uint64_t)v9);
          sub_1C2148AB0();
          uint64_t v16 = sub_1C2148810();
          swift_release();
          if (*(void *)(v16 + 16))
          {
            swift_unknownObjectRetain();
            swift_bridgeObjectRelease();
            swift_getObjectType();
            uint64_t v17 = sub_1C2148360();
            swift_unknownObjectRelease();
            unint64_t v18 = sub_1C2147D80();
            if ((v18 & 0x8000000000000000) == 0)
            {
              if (v18 < *(void *)(v17 + 16))
              {
                unint64_t v19 = v17 + 16 * v18;
                uint64_t v21 = *(void *)(v19 + 32);
                uint64_t v20 = *(void *)(v19 + 40);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                if (v21 == 0xD000000000000011 && v20 == 0x80000001C2161550
                  || (sub_1C214BA80() & 1) != 0
                  || v21 == 0xD000000000000012 && v20 == 0x80000001C2161570
                  || (sub_1C214BA80() & 1) != 0
                  || v21 == 0x756F72676B636162 && v20 == 0xEF726F6C6F43646ELL)
                {
                  swift_bridgeObjectRelease();
                }
                else
                {
                  char v25 = sub_1C214BA80();
                  swift_bridgeObjectRelease();
                  if ((v25 & 1) == 0)
                  {
                    sub_1C1F8DBDC((uint64_t)v9, (uint64_t (*)(void))sub_1C1F3C674);

                    return;
                  }
                }
                swift_retain();
                uint64_t v22 = (void *)sub_1C2148E50();
                v28[0] = v22;
                sub_1C2149E70();

                swift_release();
                sub_1C1F8DBDC((uint64_t)v9, (uint64_t (*)(void))sub_1C1F3C674);
                return;
              }
              goto LABEL_29;
            }
          }
          else
          {
            __break(1u);
          }
          __break(1u);
LABEL_29:
          __break(1u);
          return;
        }
      }
      else
      {
        id v24 = v27;
        sub_1C1F8DBDC((uint64_t)v28, (uint64_t (*)(void))sub_1C1F24488);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v4, 1, 1, v6);
      }

      sub_1C1F8DB1C((uint64_t)v4, &qword_1EA2C3FA0, (void (*)(uint64_t))sub_1C1F3C674);
    }
    else
    {
      id v23 = v27;
    }
  }
}

uint64_t sub_1C1F8D8E4(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5 = sub_1C2147D90();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2147D50();
  id v9 = a3;
  id v10 = a1;
  sub_1C1F8D370(v9);

  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void sub_1C1F8D9E0()
{
}

uint64_t sub_1C1F8DA10()
{
  swift_release();
  swift_release();
  swift_release();

  return swift_bridgeObjectRelease();
}

id sub_1C1F8DA70()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for VisualizationModificationStepViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1C1F8DAA8()
{
  swift_release();
  swift_release();
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1C1F8DB14()
{
  return type metadata accessor for VisualizationModificationStepViewController();
}

uint64_t sub_1C1F8DB1C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1C1F8DF10(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1C1F8DB78(uint64_t a1, uint64_t a2)
{
  sub_1C1F3C674();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C1F8DBDC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_1C1F8DC3C()
{
  uint64_t v3 = sub_1C2148E60();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = qword_1EA2C3F78;
  uint64_t v8 = sub_1C2148E30();
  if (!*(void *)(v8 + 16)) {
    goto LABEL_5;
  }
  unint64_t v1 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v0 = *(void (**)(char *, unint64_t, uint64_t))(v4 + 16);
  v0(v6, v8 + v1, v3);
  swift_bridgeObjectRelease();
  uint64_t v9 = sub_1C2148E50();
  objc_super v2 = *(void (**)(char *, uint64_t))(v4 + 8);
  v2(v6, v3);
  uint64_t v15 = v9;
  sub_1C1F8DF64(0, (unint64_t *)&qword_1EA2C3FA8, (void (*)(uint64_t))sub_1C1F758A4);
  swift_allocObject();
  *(void *)&v14[v7] = sub_1C2149EB0();
  uint64_t v7 = qword_1EA2C3F80;
  uint64_t v8 = sub_1C2148E20();
  if (!*(void *)(v8 + 16))
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v0(v6, v8 + v1, v3);
  swift_bridgeObjectRelease();
  uint64_t v10 = sub_1C2148E50();
  v2(v6, v3);
  uint64_t v15 = v10;
  swift_allocObject();
  *(void *)&v14[v7] = sub_1C2149EB0();
  uint64_t v7 = qword_1EA2C3F88;
  uint64_t v8 = sub_1C2148E20();
  if (!*(void *)(v8 + 16))
  {
    __break(1u);
LABEL_5:
    __break(1u);
    goto LABEL_6;
  }
LABEL_7:
  v0(v6, v8 + v1, v3);
  swift_bridgeObjectRelease();
  uint64_t v11 = sub_1C2148E50();
  v2(v6, v3);
  uint64_t v15 = v11;
  swift_allocObject();
  uint64_t v12 = sub_1C2149EB0();
  uint64_t v13 = v14;
  *(void *)&v14[v7] = v12;
  *(void *)&v13[qword_1EA2C7CD0] = MEMORY[0x1E4FBC870];

  sub_1C214B910();
  __break(1u);
}

void sub_1C1F8DF10(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C214B4F0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1C1F8DF64(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C2149EA0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1C1F8DFC8()
{
  if (!qword_1EA2C3FB8)
  {
    type metadata accessor for VisualizationModificationDataSource();
    sub_1C1F8E05C(&qword_1EA2C3FC0, (void (*)(uint64_t))type metadata accessor for VisualizationModificationDataSource);
    unint64_t v0 = type metadata accessor for SpecificationStepViewController.MedicationOnboardingStepObservableDataSource();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C3FB8);
    }
  }
}

uint64_t sub_1C1F8E05C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C1F8E0A8()
{
  uint64_t result = type metadata accessor for MedicationOnboardingFlowManager(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1C1F8E190()
{
  return *(unsigned __int8 *)(v0 + qword_1EA2C3FE8);
}

void sub_1C1F8E1A0()
{
  unint64_t v1 = v0;
  uint64_t v2 = sub_1C21488D0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = (objc_class *)type metadata accessor for OnboardingStepViewController();
  v18.receiver = v0;
  v18.super_class = v6;
  objc_msgSendSuper2(&v18, sel_viewDidLoad);
  sub_1C21488C0();
  char v7 = sub_1C21488B0();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  if ((v7 & 1) == 0) {
    goto LABEL_7;
  }
  id v8 = objc_msgSend(v1, sel_navigationItem);
  id v9 = objc_msgSend(v8, sel_rightBarButtonItems);

  if (v9)
  {
    sub_1C1F12718(0, (unint64_t *)&qword_1EA2C3508);
    unint64_t v10 = sub_1C214A780();
  }
  else
  {
    unint64_t v10 = MEMORY[0x1E4FBC860];
  }
  v17[1] = v10;
  uint64_t v11 = (void *)sub_1C214A5B0();
  id v12 = objc_msgSend(self, sel_systemImageNamed_, v11);

  v17[0] = v1;
  id v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB14A8]), sel_initWithImage_style_target_action_, v12, 0, sub_1C214BA70(), sel_tapToRadarButtonTappedWithSender_);
  swift_unknownObjectRelease();

  if (!(v10 >> 62)
    || (swift_bridgeObjectRetain(), uint64_t v16 = sub_1C214B930(),
                                    swift_bridgeObjectRelease(),
                                    (v16 & 0x8000000000000000) == 0))
  {
    sub_1C1F81590(0, 0, (uint64_t)v13);
    id v14 = objc_msgSend(v1, sel_navigationItem);
    sub_1C1F12718(0, (unint64_t *)&qword_1EA2C3508);
    uint64_t v15 = (void *)sub_1C214A770();
    swift_bridgeObjectRelease();
    objc_msgSend(v14, sel_setRightBarButtonItems_, v15);

LABEL_7:
    sub_1C1F8E508();
    return;
  }
  __break(1u);
}

void sub_1C1F8E4C0(void *a1)
{
  id v1 = a1;
  sub_1C1F8E1A0();
}

void sub_1C1F8E508()
{
  id v1 = *(void **)&v0[qword_1EA2C3FE0];
  if (v1)
  {
    uint64_t v2 = v0;
    if (v0[qword_1EA2C3FE8] == 1)
    {
      id v32 = v1;
      id v3 = objc_msgSend(v0, sel_headerView);
      id v4 = objc_msgSend(v3, sel_customIconContainerView);

      if (v4)
      {
        id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1838]), sel_initWithImage_, v32);
        objc_msgSend(v5, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
        objc_msgSend(v5, sel_setContentMode_, 1);
        id v6 = objc_msgSend(v2, sel_headerView);
        objc_msgSend(v6, sel_addSubview_, v5);

        id v7 = objc_msgSend(v2, sel_contentView);
        id v8 = objc_msgSend(self, sel_clearColor);
        objc_msgSend(v7, sel_setBackgroundColor_, v8);

        sub_1C1F0ED28();
        uint64_t v9 = swift_allocObject();
        *(_OWORD *)(v9 + 16) = xmmword_1C21510C0;
        id v10 = objc_msgSend(v2, sel_headerView);
        id v11 = objc_msgSend(v10, sel_topAnchor);

        id v12 = objc_msgSend(v5, sel_topAnchor);
        id v13 = objc_msgSend(v11, sel_constraintEqualToAnchor_, v12);

        *(void *)(v9 + 32) = v13;
        id v14 = objc_msgSend(v2, sel_headerView);
        id v15 = objc_msgSend(v14, sel_centerXAnchor);

        id v16 = objc_msgSend(v5, sel_centerXAnchor);
        id v17 = objc_msgSend(v15, sel_constraintEqualToAnchor_, v16);

        *(void *)(v9 + 40) = v17;
        id v18 = objc_msgSend(v2, sel_headerView);
        id v19 = objc_msgSend(v18, sel_widthAnchor);

        id v20 = objc_msgSend(v5, sel_widthAnchor);
        id v21 = objc_msgSend(v19, sel_constraintEqualToAnchor_, v20);

        *(void *)(v9 + 48) = v21;
        id v22 = objc_msgSend(v5, sel_heightAnchor);
        id v23 = objc_msgSend(v22, sel_constraintEqualToConstant_, 80.0);

        *(void *)(v9 + 56) = v23;
        uint64_t v33 = v9;
        sub_1C214A7A0();
        id v24 = &v2[qword_1EA2C3FD0];
        if (v24[*(int *)(type metadata accessor for MedicationOnboardingFlowManager(0) + 28)] >= 0xA0u)
        {
          id v25 = objc_msgSend(v2, sel_contentView);
          id v26 = objc_msgSend(v25, sel_topAnchor);

          id v27 = objc_msgSend(v2, sel_headerView);
          id v28 = objc_msgSend(v27, sel_bottomAnchor);

          id v29 = objc_msgSend(v26, sel_constraintEqualToAnchor_constant_, v28, 15.0);
          MEMORY[0x1C87528E0]();
          if (*(void *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_1C214A7D0();
          }
          sub_1C214A820();
          sub_1C214A7A0();
        }
        uint64_t v30 = self;
        sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C810);
        uint64_t v31 = (void *)sub_1C214A770();
        swift_bridgeObjectRelease();
        objc_msgSend(v30, sel_activateConstraints_, v31);
      }
      else
      {
      }
    }
  }
}

void *sub_1C1F8EA0C()
{
  if (objc_msgSend(v0, sel_isFirstResponder))
  {
    id v1 = v0;
  }
  else
  {
    id v2 = objc_msgSend(v0, sel_subviews);
    sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8F0);
    unint64_t v3 = sub_1C214A780();

    if (v3 >> 62) {
      goto LABEL_16;
    }
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    while (v4)
    {
      uint64_t v5 = 4;
      while (1)
      {
        id v6 = (v3 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1C8753960](v5 - 4, v3) : *(id *)(v3 + 8 * v5);
        id v7 = v6;
        uint64_t v8 = v5 - 3;
        if (__OFADD__(v5 - 4, 1)) {
          break;
        }
        uint64_t v0 = (void *)sub_1C1F8EA0C();

        if (v0)
        {
          swift_bridgeObjectRelease();
          return v0;
        }
        ++v5;
        if (v8 == v4) {
          goto LABEL_12;
        }
      }
      __break(1u);
LABEL_16:
      swift_bridgeObjectRetain();
      uint64_t v4 = sub_1C214B930();
      swift_bridgeObjectRelease();
    }
LABEL_12:
    swift_bridgeObjectRelease();
    return 0;
  }
  return v0;
}

void sub_1C1F8EB5C()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v2 = sub_1C214B4F0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v8 - v4;
  uint64_t v6 = v0 + qword_1EA2C3FD0;
  unsigned int v7 = *(unsigned __int8 *)(v6 + *(int *)(type metadata accessor for MedicationOnboardingFlowManager(0) + 28));
  switch(v7 >> 5)
  {
    case 1u:
      if (v7) {
        goto LABEL_7;
      }
      break;
    case 3u:
      if (v7 != 96) {
        goto LABEL_7;
      }
      break;
    case 4u:
      if (v7 != 128)
      {
LABEL_7:
        sub_1C1F9822C();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 56))(v5, 1, 1, AssociatedTypeWitness);
        swift_retain();
        sub_1C2149E70();
        swift_release();
        (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      }
      break;
    default:
      break;
  }
  sub_1C1F8EE1C();
  sub_1C1F8F45C();
}

uint64_t sub_1C1F8ED68(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C1F8F3E8(a1, a2, a3, (void (*)(uint64_t))sub_1C1F8EB5C);
}

void sub_1C1F8ED80()
{
  sub_1C1F8EE1C();

  sub_1C1F8F45C();
}

uint64_t sub_1C1F8EDAC(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C1F8F3E8(a1, a2, a3, (void (*)(uint64_t))sub_1C1F8ED80);
}

id sub_1C1F8EDC4()
{
  sub_1C1F8EE1C();

  return objc_msgSend(v0, sel_dismissViewControllerAnimated_completion_, 1, 0);
}

uint64_t sub_1C1F8EE04(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C1F8F3E8(a1, a2, a3, (void (*)(uint64_t))sub_1C1F8EDC4);
}

uint64_t sub_1C1F8EE1C()
{
  sub_1C1F90A2C(0, &qword_1EBF0B1F0, MEMORY[0x1E4F27928]);
  uint64_t v2 = MEMORY[0x1F4188790](v1 - 8);
  uint64_t v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v15 - v5;
  uint64_t v7 = v0 + qword_1EA2C3FD0;
  uint64_t result = type metadata accessor for MedicationOnboardingFlowManager(0);
  unsigned int v9 = *(unsigned __int8 *)(v7 + *(int *)(result + 28));
  switch(v9 >> 5)
  {
    case 2u:
      if (v9 != 64) {
        goto LABEL_3;
      }
      break;
    default:
LABEL_3:
      sub_1C2149E90();
      id v10 = v16;
      if (v16)
      {
        objc_msgSend(v16, sel_scheduleType);
      }
      sub_1C2149350();
      sub_1C2148E10();
      swift_retain();
      sub_1C2148E00();
      sub_1C2148DB0();
      swift_release();
      sub_1C2149E90();
      id v11 = v16;
      if (v16)
      {
        id v12 = objc_msgSend(v16, sel_endDateTime);

        if (v12)
        {
          sub_1C2147A60();

          uint64_t v13 = sub_1C2147AC0();
          (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v4, 0, 1, v13);
        }
        else
        {
          uint64_t v13 = sub_1C2147AC0();
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v4, 1, 1, v13);
        }
        sub_1C1F90A80((uint64_t)v4, (uint64_t)v6);
        sub_1C2147AC0();
        (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48))(v6, 1, v13);
      }
      else
      {
        uint64_t v14 = sub_1C2147AC0();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v6, 1, 1, v14);
      }
      sub_1C1F90B00((uint64_t)v6, &qword_1EBF0B1F0, MEMORY[0x1E4F27928]);
      sub_1C2149310();
      swift_allocObject();
      sub_1C2149300();
      sub_1C21493E0();
      sub_1C21493D0();
      uint64_t result = swift_release();
      break;
  }
  return result;
}

uint64_t sub_1C1F8F1FC()
{
  sub_1C1F90A2C(0, &qword_1EA2C4098, MEMORY[0x1E4F66D80]);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)&v9 - v2;
  uint64_t v4 = sub_1C2148BB0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2148BF0();
  sub_1C2148BE0();
  sub_1C2148BD0();
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
    sub_1C1F90B00((uint64_t)v3, &qword_1EA2C4098, MEMORY[0x1E4F66D80]);
    return _s19HealthMedicationsUI0B10TapToRadarC19medicationsTracking14viewControllerySo06UIViewJ0CSg_tFZ_0(v0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v3, v4);
    sub_1C2148BA0();
    MEMORY[0x1C8750D10](v7, v0);
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
}

uint64_t sub_1C1F8F3D0(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C1F8F3E8(a1, a2, a3, (void (*)(uint64_t))sub_1C1F8F1FC);
}

uint64_t sub_1C1F8F3E8(void *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  swift_unknownObjectRetain();
  id v6 = a1;
  sub_1C214B5A0();
  uint64_t v7 = swift_unknownObjectRelease();
  a4(v7);

  return __swift_destroy_boxed_opaque_existential_0((uint64_t)&v9);
}

void sub_1C1F8F45C()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = swift_getObjectType();
  sub_1C1F90A2C(0, (unint64_t *)&qword_1EA2C32D8, MEMORY[0x1E4FBCFE8]);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)aBlock - v4;
  id v6 = &v0[qword_1EA2C3FD0];
  MedicationOnboardingFlowManager.makeNextViewControllerForStep()((UIViewController_optional *)qword_1EA2C3FD0);
  if (v7)
  {
    uint64_t v8 = v7;
    uint64_t v9 = type metadata accessor for MedicationOnboardingFlowManager(0);
    sub_1C2149E90();
    id v10 = aBlock[0];
    if (aBlock[0])
    {
      unsigned int v11 = v6[*(int *)(v9 + 28)];
      if (v11 >> 5 == 3 && v11 == 96)
      {
        uint64_t v17 = swift_allocObject();
        *(void *)(v17 + 16) = v1;
        *(void *)(v17 + 24) = v8;
        id v18 = objc_allocWithZone(MEMORY[0x1E4F66B68]);
        id v19 = v1;
        id v20 = v8;
        id v21 = objc_msgSend(v18, sel_init);
        id v22 = (void *)swift_allocObject();
        v22[2] = sub_1C1F909C0;
        v22[3] = v17;
        v22[4] = 0;
        v22[5] = 0;
        v22[6] = v19;
        v22[7] = ObjectType;
        aBlock[4] = sub_1C1F20B28;
        aBlock[5] = v22;
        aBlock[0] = (id)MEMORY[0x1E4F143A8];
        aBlock[1] = (id)1107296256;
        aBlock[2] = sub_1C1F45FF0;
        aBlock[3] = &block_descriptor_9;
        id v23 = _Block_copy(aBlock);
        id v24 = v19;
        swift_retain();
        swift_release();
        objc_msgSend(v21, sel_checkIncompatibilityForSchedule_completion_, v10, v23);
        _Block_release(v23);

        swift_release();
        return;
      }
    }
    objc_msgSend(v1, sel_showViewController_sender_, v8, v1);

    return;
  }
  sub_1C214A8A0();
  uint64_t v12 = sub_1C214A8C0();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v5, 0, 1, v12);
  sub_1C214A890();
  uint64_t v13 = v0;
  uint64_t v14 = sub_1C214A880();
  uint64_t v15 = (void *)swift_allocObject();
  uint64_t v16 = MEMORY[0x1E4FBCFD8];
  void v15[2] = v14;
  uint64_t v15[3] = v16;
  v15[4] = v13;
  void v15[5] = ObjectType;
  sub_1C1F86288((uint64_t)v5, (uint64_t)&unk_1EA2C4090, (uint64_t)v15);
  swift_release();
}

uint64_t sub_1C1F8F794(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[6] = a4;
  v5[7] = a5;
  uint64_t v6 = sub_1C21497F0();
  v5[8] = v6;
  v5[9] = *(void *)(v6 - 8);
  v5[10] = swift_task_alloc();
  sub_1C214A890();
  v5[11] = sub_1C214A880();
  uint64_t v8 = sub_1C214A840();
  v5[12] = v8;
  v5[13] = v7;
  return MEMORY[0x1F4188298](sub_1C1F8F888, v8, v7);
}

uint64_t sub_1C1F8F888()
{
  id v1 = objc_msgSend(*(id *)(v0 + 48), sel_buttonTray);
  objc_msgSend(v1, sel_showButtonsBusy);

  sub_1C2148E10();
  sub_1C2148E00();
  sub_1C2148DC0();
  swift_release();
  *(void *)(v0 + 112) = sub_1C2149710();
  swift_release();
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 120) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1C1F8F990;
  return sub_1C21284A0();
}

uint64_t sub_1C1F8F990()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 128) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 104);
  uint64_t v4 = *(void *)(v2 + 96);
  if (v0) {
    uint64_t v5 = sub_1C1F8FB98;
  }
  else {
    uint64_t v5 = sub_1C1F8FACC;
  }
  return MEMORY[0x1F4188298](v5, v4, v3);
}

uint64_t sub_1C1F8FACC()
{
  unint64_t v1 = v0[14];
  uint64_t v2 = (void *)v0[6];
  swift_release();
  sub_1C1F8FF4C();
  sub_1C1F8FE70();
  sub_1C1F9052C(v1);
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_dismissViewControllerAnimated_completion_, 1, 0);
  id v3 = objc_msgSend(v2, sel_buttonTray);
  objc_msgSend(v3, sel_showButtonsAvailable);

  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1C1F8FB98()
{
  id v24 = v0;
  unint64_t v1 = (void *)v0[16];
  swift_release();
  swift_bridgeObjectRelease();
  sub_1C21497A0();
  id v2 = v1;
  id v3 = v1;
  uint64_t v4 = sub_1C21497E0();
  os_log_type_t v5 = sub_1C214ABD0();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (void *)v0[16];
    uint64_t v20 = v0[9];
    uint64_t v21 = v0[8];
    uint64_t v22 = v0[10];
    uint64_t v7 = swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v23 = v8;
    *(_DWORD *)uint64_t v7 = 136446722;
    uint64_t v9 = sub_1C214BC10();
    v0[2] = sub_1C1F6FD54(v9, v10, &v23);
    sub_1C214B530();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2082;
    v0[3] = sub_1C1F6FD54(0xD000000000000023, 0x80000001C21617A0, &v23);
    sub_1C214B530();
    *(_WORD *)(v7 + 22) = 2080;
    v0[4] = v6;
    id v11 = v6;
    sub_1C1F35A5C();
    uint64_t v12 = sub_1C214A610();
    v0[5] = sub_1C1F6FD54(v12, v13, &v23);
    sub_1C214B530();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1C1F0B000, v4, v5, "[%{public}s.%{public}s]: Failed to save medication with %s", (uint8_t *)v7, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1C8754730](v8, -1, -1);
    MEMORY[0x1C8754730](v7, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v22, v21);
  }
  else
  {
    uint64_t v14 = (void *)v0[16];
    uint64_t v16 = v0[9];
    uint64_t v15 = v0[10];
    uint64_t v17 = v0[8];

    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
  }
  swift_task_dealloc();
  id v18 = (uint64_t (*)(void))v0[1];
  return v18();
}

uint64_t sub_1C1F8FE70()
{
  sub_1C2148E10();
  sub_1C2148E00();
  sub_1C2148DB0();
  swift_release();
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C7C8);
  sub_1C214AC00();
  sub_1C2148D70();
  swift_allocObject();
  sub_1C2148C90();
  if ((sub_1C2148CE0() & 1) == 0)
  {
    type metadata accessor for MedicationOnboardingFlowManager(0);
    sub_1C2148CF0();
  }

  return swift_release();
}

void sub_1C1F8FF4C()
{
  swift_getObjectType();
  uint64_t v0 = sub_1C21497F0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  id v3 = (char *)&v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C21497A0();
  uint64_t v4 = sub_1C21497E0();
  os_log_type_t v5 = sub_1C214ABB0();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v21 = v7;
    *(_DWORD *)uint64_t v6 = 136446210;
    uint64_t v8 = sub_1C214BC10();
    uint64_t v19 = v0;
    uint64_t v20 = sub_1C1F6FD54(v8, v9, &v21);
    sub_1C214B530();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C1F0B000, v4, v5, "[%{public}s]: Submitting Tips Discoverability Signal", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C8754730](v7, -1, -1);
    MEMORY[0x1C8754730](v6, -1, -1);

    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v19);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  }
  id v10 = objc_msgSend((id)BiomeLibrary(), sel_Discoverability);
  swift_unknownObjectRelease();
  id v11 = objc_msgSend(v10, sel_Signals);
  swift_unknownObjectRelease();
  id v12 = objc_msgSend(v11, sel_source);
  sub_1C214A5F0();
  sub_1C1F90294();
  id v13 = objc_allocWithZone(MEMORY[0x1E4F4FE08]);
  uint64_t v14 = (void *)sub_1C214A5B0();
  uint64_t v15 = (void *)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  uint64_t v16 = (void *)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  id v17 = objc_msgSend(v13, sel_initWithContentIdentifier_context_osBuild_userInfo_, v14, v15, v16, 0);

  objc_msgSend(v12, sel_sendEvent_, v17);
}

uint64_t sub_1C1F90294()
{
  uint64_t v0 = (void *)sub_1C214A5B0();
  uint64_t result = MGGetStringAnswer();
  if (result)
  {
    uint64_t v2 = (void *)result;
    sub_1C214A5F0();

    sub_1C214A6C0();
    swift_bridgeObjectRelease();
    return 760434537;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1C1F90334()
{
}

void sub_1C1F90364()
{
  swift_bridgeObjectRelease();
  sub_1C1F90B5C(v0 + qword_1EA2C3FD0);
  swift_bridgeObjectRelease();

  swift_release();
  uint64_t v1 = *(void **)(v0 + qword_1EA2C4000);
}

id sub_1C1F903F8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for OnboardingStepViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1C1F90474(uint64_t a1)
{
  swift_bridgeObjectRelease();
  sub_1C1F90B5C(a1 + qword_1EA2C3FD0);
  swift_bridgeObjectRelease();

  swift_release();
  objc_super v2 = *(void **)(a1 + qword_1EA2C4000);
}

uint64_t type metadata accessor for OnboardingStepViewController()
{
  return __swift_instantiateGenericMetadata();
}

void sub_1C1F9052C(unint64_t a1)
{
  uint64_t v28 = sub_1C2147AC0();
  objc_super v2 = *(void (***)(char *, uint64_t))(v28 - 8);
  uint64_t v3 = MEMORY[0x1F4188790](v28);
  id v27 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = MEMORY[0x1F4188790](v3);
  id v26 = (char *)&v21 - v6;
  MEMORY[0x1F4188790](v5);
  uint64_t v25 = (char *)&v21 - v7;
  sub_1C2147E40();
  sub_1C2147E30();
  uint64_t v8 = (void *)sub_1C2147E20();
  swift_release();
  uint64_t v9 = (uint64_t)objc_msgSend(v8, sel_authorizationStatus);

  if (a1 >> 62)
  {
LABEL_19:
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1C214B930();
    swift_bridgeObjectRelease();
    if (v10) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v10 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v10)
    {
LABEL_3:
      unint64_t v24 = a1 & 0xC000000000000001;
      uint64_t v22 = v9;
      uint64_t v23 = v2 + 1;
      swift_bridgeObjectRetain();
      uint64_t v9 = 4;
      id v12 = v25;
      id v11 = v26;
      objc_super v2 = v23;
      uint64_t v13 = v28;
      while (1)
      {
        uint64_t v14 = v9 - 4;
        if (v24)
        {
          id v15 = (id)MEMORY[0x1C8753960](v9 - 4, a1);
          uint64_t v16 = v9 - 3;
          if (__OFADD__(v14, 1)) {
            goto LABEL_18;
          }
        }
        else
        {
          id v15 = *(id *)(a1 + 8 * v9);
          uint64_t v16 = v9 - 3;
          if (__OFADD__(v14, 1))
          {
LABEL_18:
            __break(1u);
            goto LABEL_19;
          }
        }
        id v29 = v15;
        id v17 = objc_msgSend(v15, sel_creationDate);
        sub_1C2147A60();

        uint64_t v18 = v27;
        sub_1C2147AB0();
        sub_1C21479D0();
        uint64_t v19 = *v2;
        (*v2)(v18, v13);
        LOBYTE(v18) = sub_1C2147A20();
        v19(v11, v13);
        v19(v12, v13);

        if ((v18 & 1) == 0)
        {
          swift_bridgeObjectRelease();
          return;
        }
        ++v9;
        if (v16 == v10)
        {
          swift_bridgeObjectRelease();
          uint64_t v9 = v22;
          break;
        }
      }
    }
  }
  if (v9 != 2)
  {
    id v20 = objc_msgSend(self, sel_defaultCenter);
    if (qword_1EA2C2668 != -1) {
      swift_once();
    }
    swift_beginAccess();
    objc_msgSend(v20, sel_postNotificationName_object_, qword_1EA2C3E68, 0);
  }
}

uint64_t sub_1C1F90880()
{
  swift_unknownObjectRelease();

  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1C1F908C0(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_1C1F40400;
  return sub_1C1F8F794(a1, v4, v5, v7, v6);
}

uint64_t sub_1C1F90980()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

id sub_1C1F909C0()
{
  return objc_msgSend(*(id *)(v0 + 16), sel_showViewController_sender_, *(void *)(v0 + 24), *(void *)(v0 + 16));
}

uint64_t sub_1C1F909D4()
{
  if (*(void *)(v0 + 16)) {
    swift_release();
  }
  if (*(void *)(v0 + 32)) {
    swift_release();
  }

  return MEMORY[0x1F4186498](v0, 64, 7);
}

void sub_1C1F90A2C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C214B4F0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1C1F90A80(uint64_t a1, uint64_t a2)
{
  sub_1C1F90A2C(0, &qword_1EBF0B1F0, MEMORY[0x1E4F27928]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C1F90B00(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1C1F90A2C(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1C1F90B5C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MedicationOnboardingFlowManager(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t __swift_instantiateGenericMetadata()
{
  return swift_getGenericMetadata();
}

uint64_t InteractionSummaryItemState.hash(into:)(uint64_t a1)
{
  uint64_t v3 = *v1;
  if (!*v1 || v3 == 1) {
    return sub_1C214BB40();
  }
  sub_1C214BB40();

  return sub_1C1F830BC(a1, v3);
}

uint64_t InteractionSummaryItemState.hashValue.getter()
{
  unint64_t v1 = *v0;
  sub_1C214BB30();
  sub_1C214BB40();
  if (v1 > 1) {
    sub_1C1F830BC(v3, v1);
  }
  return sub_1C214BB80();
}

uint64_t sub_1C1F90CE0()
{
  unint64_t v1 = *v0;
  sub_1C214BB30();
  sub_1C214BB40();
  if (v1 > 1) {
    sub_1C1F830BC(v3, v1);
  }
  return sub_1C214BB80();
}

uint64_t sub_1C1F90D54(uint64_t a1)
{
  uint64_t v3 = *v1;
  if (!*v1 || v3 == 1) {
    return sub_1C214BB40();
  }
  sub_1C214BB40();

  return sub_1C1F830BC(a1, v3);
}

uint64_t sub_1C1F90DD4()
{
  unint64_t v1 = *v0;
  sub_1C214BB30();
  sub_1C214BB40();
  if (v1 > 1) {
    sub_1C1F830BC(v3, v1);
  }
  return sub_1C214BB80();
}

unint64_t InteractionSummaryItem.itemState.getter@<X0>(unint64_t *a1@<X8>)
{
  unint64_t v2 = *(void *)(v1 + 16);
  *a1 = v2;
  return sub_1C1F916A8(v2);
}

void *InteractionSummaryItem.filteringMedication.getter()
{
  uint64_t v1 = *(void **)(v0 + 24);
  id v2 = v1;
  return v1;
}

uint64_t InteractionSummaryItem.listManager.getter()
{
  return swift_retain();
}

id InteractionSummaryItem.healthStore.getter()
{
  return *(id *)(v0 + 40);
}

uint64_t InteractionSummaryItem.reuseIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 64);
  swift_bridgeObjectRetain();
  return v1;
}

void *InteractionSummaryItem.__allocating_init(itemState:filteringMedication:listManager:healthStore:didSelectCellCallback:)(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  id v12 = (void *)swift_allocObject();
  uint64_t v13 = *a1;
  type metadata accessor for InteractionSummaryItemCell();
  sub_1C1F9178C(&qword_1EBF0C4E0, 255, (void (*)(uint64_t))type metadata accessor for InteractionSummaryItemCell);
  v12[8] = sub_1C21481D0();
  v12[9] = v14;
  void v12[2] = v13;
  uint64_t v12[3] = a2;
  v12[4] = a3;
  v12[5] = a4;
  v12[6] = a5;
  v12[7] = a6;
  return v12;
}

void *InteractionSummaryItem.init(itemState:filteringMedication:listManager:healthStore:didSelectCellCallback:)(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = *a1;
  type metadata accessor for InteractionSummaryItemCell();
  sub_1C1F9178C(&qword_1EBF0C4E0, 255, (void (*)(uint64_t))type metadata accessor for InteractionSummaryItemCell);
  v6[8] = sub_1C21481D0();
  v6[9] = v13;
  uint64_t v6[2] = v12;
  v6[3] = a2;
  v6[4] = a3;
  v6[5] = a4;
  v6[6] = a5;
  v6[7] = a6;
  return v6;
}

unint64_t sub_1C1F9103C(uint64_t a1)
{
  swift_bridgeObjectRetain();
  sub_1C214A690();
  swift_bridgeObjectRelease();
  unint64_t v3 = *(void *)(v1 + 16);
  if (v3 <= 1) {
    return sub_1C214BB40();
  }
  sub_1C214BB40();
  swift_bridgeObjectRetain();
  sub_1C1F830BC(a1, v3);

  return sub_1C1F916B8(v3);
}

uint64_t InteractionSummaryItem.deinit()
{
  sub_1C1F916B8(*(void *)(v0 + 16));

  swift_release();
  sub_1C1F31118(*(void *)(v0 + 48));
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t InteractionSummaryItem.__deallocating_deinit()
{
  sub_1C1F916B8(*(void *)(v0 + 16));

  swift_release();
  sub_1C1F31118(*(void *)(v0 + 48));
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_1C1F91198()
{
  sub_1C214BB30();
  sub_1C214A690();
  unint64_t v1 = *(void *)(v0 + 16);
  sub_1C214BB40();
  if (v1 > 1) {
    sub_1C1F830BC(v3, v1);
  }
  return sub_1C214BB80();
}

uint64_t sub_1C1F9121C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 64);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1C1F91250(uint64_t *a1, uint64_t *a2)
{
  return _s19HealthMedicationsUI22InteractionSummaryItemC2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

uint64_t sub_1C1F9125C()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 152))();
}

unint64_t sub_1C1F912A0(uint64_t a1)
{
  uint64_t v3 = *v1;
  sub_1C214A690();
  unint64_t v4 = *(void *)(v3 + 16);
  if (v4 <= 1) {
    return sub_1C214BB40();
  }
  sub_1C214BB40();
  swift_bridgeObjectRetain();
  sub_1C1F830BC(a1, v4);

  return sub_1C1F916B8(v4);
}

uint64_t sub_1C1F9133C()
{
  sub_1C214BB30();
  uint64_t v1 = *v0;
  sub_1C214A690();
  unint64_t v2 = *(void *)(v1 + 16);
  sub_1C214BB40();
  if (v2 > 1)
  {
    swift_bridgeObjectRetain();
    sub_1C1F830BC(v4, v2);
    sub_1C1F916B8(v2);
  }
  return sub_1C214BB80();
}

Swift::Void __swiftcall InteractionSummaryItem.didSelectCell(_:in:)(UIView *_, UIViewController *in)
{
  uint64_t v3 = *(void (**)(UIViewController *))(v2 + 48);
  if (v3) {
    v3(in);
  }
}

uint64_t InteractionSummaryItem.deselectionBehavior(in:)()
{
  type metadata accessor for InteractionSummaryItem();
  sub_1C1F9178C(&qword_1EA2C40A0, v0, (void (*)(uint64_t))type metadata accessor for InteractionSummaryItem);
  return sub_1C21484D0();
}

uint64_t sub_1C1F91490(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(uint64_t (**)(uint64_t))(*(void *)v2 + 48);
  if (v3) {
    return v3(a2);
  }
  return result;
}

uint64_t sub_1C1F914C8()
{
  return sub_1C21484D0();
}

uint64_t _s19HealthMedicationsUI22InteractionSummaryItemC2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = *(void *)(a1 + 16);
  unint64_t v3 = *(void *)(a2 + 16);
  if (!v2)
  {
    if (!v3)
    {
      unint64_t v4 = 0;
      goto LABEL_7;
    }
    goto LABEL_9;
  }
  if (v2 != 1)
  {
    if (v3 >= 2)
    {
      sub_1C1F916A8(*(void *)(a1 + 16));
      sub_1C1F916A8(v3);
      sub_1C1F916A8(v2);
      sub_1C1F916A8(v3);
      char v5 = sub_1C1FC0FD0(v2, v3);
      sub_1C1F916B8(v2);
      sub_1C1F916B8(v3);
      unint64_t v4 = v3;
      unint64_t v3 = v2;
      goto LABEL_11;
    }
    goto LABEL_9;
  }
  if (v3 != 1)
  {
LABEL_9:
    sub_1C1F916A8(*(void *)(a1 + 16));
    sub_1C1F916A8(v3);
    char v5 = 0;
    unint64_t v4 = v2;
    goto LABEL_11;
  }
  unint64_t v4 = 1;
LABEL_7:
  char v5 = 1;
LABEL_11:
  sub_1C1F916B8(v4);
  sub_1C1F916B8(v3);
  return v5 & 1;
}

uint64_t _s19HealthMedicationsUI27InteractionSummaryItemStateO2eeoiySbAC_ACtFZ_0(unint64_t *a1, unint64_t *a2)
{
  unint64_t v2 = *a1;
  unint64_t v3 = *a2;
  if (!*a1)
  {
    if (!v3)
    {
      unint64_t v2 = 0;
      char v4 = 1;
      goto LABEL_10;
    }
    goto LABEL_8;
  }
  if (v2 != 1)
  {
    if (v3 >= 2)
    {
      sub_1C1F916A8(*a2);
      sub_1C1F916A8(v2);
      char v4 = sub_1C1FC0FD0(v2, v3);
      goto LABEL_10;
    }
    goto LABEL_8;
  }
  if (v3 != 1)
  {
LABEL_8:
    sub_1C1F916A8(*a2);
    sub_1C1F916A8(v2);
    char v4 = 0;
    goto LABEL_10;
  }
  unint64_t v2 = 1;
  char v4 = 1;
LABEL_10:
  sub_1C1F916B8(v2);
  sub_1C1F916B8(v3);
  return v4 & 1;
}

unint64_t sub_1C1F916A8(unint64_t result)
{
  if (result >= 2) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

unint64_t sub_1C1F916B8(unint64_t result)
{
  if (result >= 2) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t type metadata accessor for InteractionSummaryItem()
{
  return self;
}

unint64_t sub_1C1F916F0()
{
  unint64_t result = qword_1EA2C40A8;
  if (!qword_1EA2C40A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C40A8);
  }
  return result;
}

uint64_t sub_1C1F91744(uint64_t a1, uint64_t a2)
{
  return sub_1C1F9178C(&qword_1EA2C40B0, a2, (void (*)(uint64_t))type metadata accessor for InteractionSummaryItem);
}

uint64_t sub_1C1F9178C(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for InteractionSummaryItemState(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  if ((unint64_t)*a2 >= 0xFFFFFFFF) {
    uint64_t v3 = swift_bridgeObjectRetain();
  }
  *a1 = v3;
  return a1;
}

unint64_t destroy for InteractionSummaryItemState(unint64_t *a1)
{
  unint64_t result = *a1;
  if (result >= 0xFFFFFFFF) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t *assignWithCopy for InteractionSummaryItemState(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a1;
  unint64_t v4 = *a2;
  if (v3 < 0xFFFFFFFF)
  {
    *a1 = v4;
    if (v4 >= 0xFFFFFFFF) {
      swift_bridgeObjectRetain();
    }
  }
  else if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    *a1 = *a2;
  }
  else
  {
    *a1 = v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  return a1;
}

void *__swift_memcpy8_8(void *result, void *a2)
{
  *unint64_t result = *a2;
  return result;
}

unint64_t *assignWithTake for InteractionSummaryItemState(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a2;
  if (*a1 < 0xFFFFFFFF) {
    goto LABEL_5;
  }
  if (v3 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    *a1 = v3;
    return a1;
  }
  *a1 = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for InteractionSummaryItemState(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFE && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 2147483646);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 1;
  if (v4 >= 3) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for InteractionSummaryItemState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(void *)unint64_t result = 0;
    *(_DWORD *)unint64_t result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2 + 1;
    }
  }
  return result;
}

uint64_t sub_1C1F919D0(uint64_t *a1)
{
  uint64_t v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void *sub_1C1F919E8(void *result, int a2)
{
  if (a2 < 0)
  {
    unsigned int v2 = a2 ^ 0x80000000;
  }
  else
  {
    if (!a2) {
      return result;
    }
    unsigned int v2 = a2 - 1;
  }
  *unint64_t result = v2;
  return result;
}

ValueMetadata *type metadata accessor for InteractionSummaryItemState()
{
  return &type metadata for InteractionSummaryItemState;
}

uint64_t method lookup function for InteractionSummaryItem(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for InteractionSummaryItem);
}

uint64_t dispatch thunk of InteractionSummaryItem.uniqueIdentifier.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of InteractionSummaryItem.__allocating_init(itemState:filteringMedication:listManager:healthStore:didSelectCellCallback:)()
{
  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t dispatch thunk of InteractionSummaryItem.hash(into:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t dispatch thunk of InteractionSummaryItem.hashValue.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t destroy for MedicationsDayHistoryLineItem()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s19HealthMedicationsUI29MedicationsDayHistoryLineItemVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for MedicationsDayHistoryLineItem(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  return a1;
}

__n128 __swift_memcpy18_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u16[0] = a2[1].n128_u16[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for MedicationsDayHistoryLineItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  return a1;
}

uint64_t getEnumTagSinglePayload for MedicationsDayHistoryLineItem(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 18)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MedicationsDayHistoryLineItem(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_WORD *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 18) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 18) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MedicationsDayHistoryLineItem()
{
  return &type metadata for MedicationsDayHistoryLineItem;
}

unint64_t sub_1C1F91C54()
{
  if (*(unsigned char *)(v0 + 16)) {
    return 0xD000000000000011;
  }
  else {
    return 0xD000000000000015;
  }
}

uint64_t sub_1C1F91C94()
{
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t sub_1C1F91C9C()
{
  return *(unsigned __int8 *)(v0 + 17);
}

void *sub_1C1F91CA4(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v23 = *a2;
    *a1 = *a2;
    a1 = (void *)(v23 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1C2147B20();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = (void *)((char *)a1 + v8);
    id v11 = (void *)((char *)a2 + v8);
    uint64_t v12 = v11[1];
    *uint64_t v10 = *v11;
    v10[1] = v12;
    *(void *)((char *)a1 + v9) = *(void *)((char *)a2 + v9);
    uint64_t v13 = a3[8];
    *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
    uint64_t v14 = *(void **)((char *)a2 + v13);
    *(void *)((char *)a1 + v13) = v14;
    uint64_t v15 = a3[9];
    uint64_t v25 = (char *)a2 + v15;
    id v26 = (char *)a1 + v15;
    uint64_t v16 = sub_1C2147AC0();
    id v17 = *(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v18 = v14;
    v17(v26, v25, v16);
    uint64_t v19 = a3[11];
    *((unsigned char *)a1 + a3[10]) = *((unsigned char *)a2 + a3[10]);
    id v20 = (void *)((char *)a1 + v19);
    uint64_t v21 = (void *)((char *)a2 + v19);
    uint64_t v22 = v21[1];
    *id v20 = *v21;
    v20[1] = v22;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1C1F91E3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C2147B20();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  uint64_t v5 = a1 + *(int *)(a2 + 36);
  uint64_t v6 = sub_1C2147AC0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);

  return swift_bridgeObjectRelease();
}

uint64_t sub_1C1F91F30(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1C2147B20();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)(a1 + v7);
  uint64_t v10 = (void *)(a2 + v7);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  uint64_t v12 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  uint64_t v13 = *(void **)(a2 + v12);
  *(void *)(a1 + v12) = v13;
  uint64_t v14 = a3[9];
  uint64_t v23 = a2 + v14;
  uint64_t v24 = a1 + v14;
  uint64_t v15 = sub_1C2147AC0();
  uint64_t v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v17 = v13;
  v16(v24, v23, v15);
  uint64_t v18 = a3[11];
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  uint64_t v19 = (void *)(a1 + v18);
  id v20 = (void *)(a2 + v18);
  uint64_t v21 = v20[1];
  *uint64_t v19 = *v20;
  v19[1] = v21;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1C1F92078(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1C2147B20();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = a3[8];
  uint64_t v11 = *(void **)(a2 + v10);
  uint64_t v12 = *(void **)(a1 + v10);
  *(void *)(a1 + v10) = v11;
  id v13 = v11;

  uint64_t v14 = a3[9];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  uint64_t v17 = sub_1C2147AC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 24))(v15, v16, v17);
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  uint64_t v18 = a3[11];
  uint64_t v19 = (void *)(a1 + v18);
  id v20 = (void *)(a2 + v18);
  *uint64_t v19 = *v20;
  v19[1] = v20[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C1F921EC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1C2147B20();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  uint64_t v8 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  uint64_t v9 = a3[9];
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = sub_1C2147AC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
  uint64_t v13 = a3[11];
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  *(_OWORD *)(a1 + v13) = *(_OWORD *)(a2 + v13);
  return a1;
}

uint64_t sub_1C1F922E8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1C2147B20();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[8];
  uint64_t v13 = *(void **)(a1 + v12);
  *(void *)(a1 + v12) = *(void *)(a2 + v12);

  uint64_t v14 = a3[9];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  uint64_t v17 = sub_1C2147AC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 40))(v15, v16, v17);
  uint64_t v18 = a3[11];
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  uint64_t v19 = (void *)(a1 + v18);
  id v20 = (uint64_t *)(a2 + v18);
  uint64_t v22 = *v20;
  uint64_t v21 = v20[1];
  *uint64_t v19 = v22;
  v19[1] = v21;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C1F92424(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C1F92438);
}

uint64_t sub_1C1F92438(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C2147B20();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if (a2 == 0x7FFFFFFF)
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
  else
  {
    uint64_t v11 = sub_1C2147AC0();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a3 + 36);
    return v12(v14, a2, v13);
  }
}

uint64_t sub_1C1F92568(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C1F9257C);
}

uint64_t sub_1C1F9257C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1C2147B20();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v11 = sub_1C2147AC0();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a4 + 36);
    return v12(v14, a2, a2, v13);
  }
  return result;
}

uint64_t type metadata accessor for MedicationsDayHistoryItem()
{
  uint64_t result = qword_1EA2C40B8;
  if (!qword_1EA2C40B8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C1F926F8()
{
  uint64_t result = sub_1C2147B20();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1C2147AC0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_1C1F927FC()
{
  return sub_1C214BB80();
}

uint64_t sub_1C1F9284C()
{
  return sub_1C214A690();
}

uint64_t sub_1C1F9285C()
{
  return sub_1C214BB80();
}

uint64_t sub_1C1F928A8(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 44));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1C1F928E0()
{
  return 0x6F74736948796144;
}

unint64_t sub_1C1F92970()
{
  unint64_t result = qword_1EA2C40C8;
  if (!qword_1EA2C40C8)
  {
    type metadata accessor for MedicationsDayHistoryItem();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C40C8);
  }
  return result;
}

uint64_t sub_1C1F929C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MedicationsDayHistoryItem();
  uint64_t v5 = MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x1F4188790](v5);
  unint64_t v10 = (char *)&v22 - v9;
  uint64_t v11 = *(int *)(v8 + 20);
  uint64_t v12 = *(void *)(a1 + v11);
  uint64_t v13 = *(void *)(a1 + v11 + 8);
  uint64_t v14 = (void *)(a2 + v11);
  if (v12 == *v14 && v13 == v14[1])
  {
    sub_1C1F92B8C(a1, (uint64_t)&v22 - v9);
    sub_1C1F92B8C(a2, (uint64_t)v7);
LABEL_8:
    uint64_t v18 = *(int *)(v4 + 28);
    uint64_t v19 = *(void *)&v7[v18];
    if (*(void *)&v10[v18])
    {
      if (v19)
      {
        swift_bridgeObjectRetain();
        unint64_t v20 = swift_bridgeObjectRetain();
        char v17 = sub_1C1FC1908(v20, v19);
        swift_bridgeObjectRelease();
        sub_1C1F92BF0((uint64_t)v7);
        sub_1C1F92BF0((uint64_t)v10);
        swift_bridgeObjectRelease();
        return v17 & 1;
      }
      swift_bridgeObjectRetain();
      sub_1C1F92BF0((uint64_t)v7);
      sub_1C1F92BF0((uint64_t)v10);
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_1C1F92BF0((uint64_t)v7);
      sub_1C1F92BF0((uint64_t)v10);
      if (!v19)
      {
        char v17 = 1;
        return v17 & 1;
      }
    }
    swift_bridgeObjectRelease();
    char v17 = 0;
    return v17 & 1;
  }
  char v16 = sub_1C214BA80();
  sub_1C1F92B8C(a1, (uint64_t)v10);
  sub_1C1F92B8C(a2, (uint64_t)v7);
  if (v16) {
    goto LABEL_8;
  }
  sub_1C1F92BF0((uint64_t)v7);
  sub_1C1F92BF0((uint64_t)v10);
  char v17 = 0;
  return v17 & 1;
}

uint64_t sub_1C1F92B8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MedicationsDayHistoryItem();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C1F92BF0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MedicationsDayHistoryItem();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t MedicationSearchFieldItem.init(onActive:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = sub_1C2147B20();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2147B10();
  uint64_t v10 = sub_1C2147AD0();
  uint64_t v12 = v11;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  type metadata accessor for MedicationSearchFieldCell();
  sub_1C1F92D7C();
  uint64_t result = sub_1C21481D0();
  *a3 = v10;
  a3[1] = v12;
  a3[2] = a1;
  a3[3] = a2;
  a3[4] = result;
  a3[5] = v14;
  return result;
}

uint64_t type metadata accessor for MedicationSearchFieldCell()
{
  return self;
}

unint64_t sub_1C1F92D7C()
{
  unint64_t result = qword_1EA2C40D0;
  if (!qword_1EA2C40D0)
  {
    type metadata accessor for MedicationSearchFieldCell();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C40D0);
  }
  return result;
}

uint64_t MedicationSearchFieldItem.uniqueIdentifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MedicationSearchFieldItem.reuseIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t static MedicationSearchFieldItem.== infix(_:_:)(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return 1;
  }
  else {
    return sub_1C214BA80();
  }
}

uint64_t MedicationSearchFieldItem.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_1C214A690();

  return swift_bridgeObjectRelease();
}

uint64_t MedicationSearchFieldItem.hashValue.getter()
{
  return sub_1C214BB80();
}

unint64_t sub_1C1F92F08()
{
  unint64_t result = qword_1EA2C40D8;
  if (!qword_1EA2C40D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C40D8);
  }
  return result;
}

uint64_t sub_1C1F92F5C()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t destroy for MedicationSearchFieldItem(uint64_t a1)
{
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 16)) {
    swift_release();
  }

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for MedicationSearchFieldItem(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v6 = a2 + 2;
  uint64_t v5 = a2[2];
  swift_bridgeObjectRetain();
  if (v5)
  {
    uint64_t v7 = a2[3];
    a1[2] = v5;
    a1[3] = v7;
    swift_retain();
  }
  else
  {
    *((_OWORD *)a1 + 1) = *v6;
  }
  uint64_t v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for MedicationSearchFieldItem(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = a2[2];
  if (!a1[2])
  {
    if (v4)
    {
      uint64_t v6 = a2[3];
      a1[2] = v4;
      a1[3] = v6;
      swift_retain();
      goto LABEL_8;
    }
LABEL_7:
    *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
    goto LABEL_8;
  }
  if (!v4)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v5 = a2[3];
  a1[2] = v4;
  a1[3] = v5;
  swift_retain();
  swift_release();
LABEL_8:
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for MedicationSearchFieldItem(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[2];
  if (!a1[2])
  {
    if (v5)
    {
      uint64_t v7 = a2[3];
      a1[2] = v5;
      a1[3] = v7;
      goto LABEL_8;
    }
LABEL_7:
    *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
    goto LABEL_8;
  }
  if (!v5)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v6 = a2[3];
  a1[2] = v5;
  a1[3] = v6;
  swift_release();
LABEL_8:
  uint64_t v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MedicationSearchFieldItem(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MedicationSearchFieldItem(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MedicationSearchFieldItem()
{
  return &type metadata for MedicationSearchFieldItem;
}

id sub_1C1F93250()
{
  uint64_t v1 = OBJC_IVAR____TtC19HealthMedicationsUI25MedicationSearchFieldCell____lazy_storage___searchBar;
  unint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI25MedicationSearchFieldCell____lazy_storage___searchBar);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI25MedicationSearchFieldCell____lazy_storage___searchBar);
  }
  else
  {
    id v4 = sub_1C1F932B4(v0);
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    unint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_1C1F932B4(uint64_t a1)
{
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1BF0]), sel_init);
  objc_msgSend(v2, sel_setSearchBarStyle_, 2);
  if (qword_1EBF0CA00 != -1) {
    swift_once();
  }
  id v3 = (id)qword_1EBF0CA18;
  swift_bridgeObjectRetain();
  sub_1C2147730();
  swift_bridgeObjectRelease();

  id v4 = (void *)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setPlaceholder_, v4, 0xE000000000000000);

  objc_msgSend(v2, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v2, sel_setDelegate_, a1);
  objc_msgSend(v2, sel_setAutocorrectionType_, 1);
  objc_msgSend(v2, sel_setSpellCheckingType_, 1);
  return v2;
}

void sub_1C1F935A0()
{
  id v1 = objc_msgSend(v0, sel_contentView);
  id v2 = sub_1C1F93250();
  objc_msgSend(v1, sel_addSubview_, v2);

  id v3 = self;
  sub_1C1F0ED28();
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1C21510C0;
  id v5 = objc_msgSend(v0, sel_contentView);
  id v6 = objc_msgSend(v5, sel_leadingAnchor);

  id v7 = sub_1C1F93250();
  id v8 = objc_msgSend(v7, sel_leadingAnchor);

  id v9 = objc_msgSend(v6, sel_constraintEqualToAnchor_, v8);
  *(void *)(v4 + 32) = v9;
  id v10 = objc_msgSend(v0, sel_contentView);
  id v11 = objc_msgSend(v10, sel_trailingAnchor);

  id v12 = sub_1C1F93250();
  id v13 = objc_msgSend(v12, sel_trailingAnchor);

  id v14 = objc_msgSend(v11, sel_constraintEqualToAnchor_, v13);
  *(void *)(v4 + 40) = v14;
  id v15 = objc_msgSend(v0, sel_contentView);
  id v16 = objc_msgSend(v15, sel_topAnchor);

  id v17 = sub_1C1F93250();
  id v18 = objc_msgSend(v17, sel_topAnchor);

  id v19 = objc_msgSend(v16, sel_constraintEqualToAnchor_, v18);
  *(void *)(v4 + 48) = v19;
  id v20 = objc_msgSend(v0, sel_contentView);
  id v21 = objc_msgSend(v20, sel_bottomAnchor);

  id v22 = sub_1C1F93250();
  id v23 = objc_msgSend(v22, sel_bottomAnchor);

  id v24 = objc_msgSend(v21, sel_constraintEqualToAnchor_, v23);
  *(void *)(v4 + 56) = v24;
  sub_1C214A7A0();
  sub_1C1F645D4();
  id v25 = (id)sub_1C214A770();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_activateConstraints_, v25);
}

id sub_1C1F9389C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MedicationSearchFieldCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1C1F9391C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI25MedicationSearchFieldCell_item;
  swift_beginAccess();
  return sub_1C1F2116C(v3, a1);
}

uint64_t sub_1C1F93970(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI25MedicationSearchFieldCell_item;
  swift_beginAccess();
  sub_1C1F1CADC(a1, v3);
  return swift_endAccess();
}

uint64_t (*sub_1C1F939CC())()
{
  return j__swift_endAccess;
}

void sub_1C1F93A28(void *a1)
{
  uint64_t v2 = v1;
  id v4 = objc_msgSend(a1, sel_viewController);
  if (v4)
  {
    id v7 = v4;
    type metadata accessor for NewMedicationOnboardingViewController();
    if (swift_dynamicCastClass())
    {
      objc_msgSend(a1, sel_resignFirstResponder);
      uint64_t v5 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI25MedicationSearchFieldCell_item;
      swift_beginAccess();
      sub_1C1F2116C(v5, (uint64_t)v9);
      if (v10)
      {
        sub_1C1F1CB5C();
        if (swift_dynamicCast())
        {
          sub_1C1F1325C((uint64_t)v8);
          swift_bridgeObjectRelease();
          sub_1C1F31118((uint64_t)v8);
          uint64_t v6 = swift_bridgeObjectRelease();
          if (v8)
          {
            v8(v6);
            sub_1C1F31118((uint64_t)v8);
          }
        }
      }
      else
      {
        sub_1C1F374E4((uint64_t)v9);
      }
      sub_1C20B3000(a1, v2);
    }
    else
    {
    }
  }
}

id sub_1C1F93C18(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  id v4 = (void *)(*a2 + OBJC_IVAR____TtC19HealthMedicationsUI32DrugInteractionSeverityLevelView_severityLevel);
  swift_beginAccess();
  *id v4 = v2;
  sub_1C1F942CC();
  id result = *(id *)(v3 + OBJC_IVAR____TtC19HealthMedicationsUI32DrugInteractionSeverityLevelView_subview);
  if (result) {
    return objc_msgSend(result, sel_hk_alignConstraintsWithView_, v3);
  }
  return result;
}

uint64_t sub_1C1F93C94()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC19HealthMedicationsUI32DrugInteractionSeverityLevelView_severityLevel;
  swift_beginAccess();
  return *(void *)v1;
}

id sub_1C1F93CDC(uint64_t a1)
{
  uint64_t v3 = (void *)(v1 + OBJC_IVAR____TtC19HealthMedicationsUI32DrugInteractionSeverityLevelView_severityLevel);
  swift_beginAccess();
  *uint64_t v3 = a1;
  sub_1C1F942CC();
  id result = *(id *)(v1 + OBJC_IVAR____TtC19HealthMedicationsUI32DrugInteractionSeverityLevelView_subview);
  if (result) {
    return objc_msgSend(result, sel_hk_alignConstraintsWithView_, v1);
  }
  return result;
}

id (*sub_1C1F93D54(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1C1F93DB4;
}

id sub_1C1F93DB4(uint64_t a1, char a2)
{
  id result = (id)swift_endAccess();
  if ((a2 & 1) == 0)
  {
    uint64_t v5 = *(void *)(a1 + 24);
    sub_1C1F942CC();
    id result = *(id *)(v5 + OBJC_IVAR____TtC19HealthMedicationsUI32DrugInteractionSeverityLevelView_subview);
    if (result)
    {
      uint64_t v6 = *(void *)(a1 + 24);
      return objc_msgSend(result, sel_hk_alignConstraintsWithView_, v6);
    }
  }
  return result;
}

id sub_1C1F93E20()
{
  uint64_t v1 = OBJC_IVAR____TtC19HealthMedicationsUI32DrugInteractionSeverityLevelView____lazy_storage___severityLabel;
  uint64_t v2 = *(void **)(v0
                + OBJC_IVAR____TtC19HealthMedicationsUI32DrugInteractionSeverityLevelView____lazy_storage___severityLabel);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC19HealthMedicationsUI32DrugInteractionSeverityLevelView____lazy_storage___severityLabel);
  }
  else
  {
    id v4 = sub_1C1F93E80();
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_1C1F93E80()
{
  id v0 = objc_msgSend(objc_allocWithZone((Class)sub_1C2148250()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  id v1 = (id)*MEMORY[0x1E4FB2950];
  sub_1C2148240();
  sub_1C2148230();
  uint64_t v2 = self;
  id v3 = v0;
  id v4 = objc_msgSend(v2, sel_secondaryLabelColor);
  objc_msgSend(v3, sel_setTextColor_, v4);

  uint64_t v9 = sub_1C214A5F0();
  uint64_t v10 = v5;
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  id v6 = v3;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  id v7 = (void *)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  objc_msgSend(v6, sel_setAccessibilityIdentifier_, v7, v9, v10);

  objc_msgSend(v6, sel_setNumberOfLines_, 0);
  objc_msgSend(v6, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  return v6;
}

id sub_1C1F94034()
{
  uint64_t v1 = OBJC_IVAR____TtC19HealthMedicationsUI32DrugInteractionSeverityLevelView____lazy_storage___criticalSeverityButton;
  uint64_t v2 = *(void **)(v0
                + OBJC_IVAR____TtC19HealthMedicationsUI32DrugInteractionSeverityLevelView____lazy_storage___criticalSeverityButton);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC19HealthMedicationsUI32DrugInteractionSeverityLevelView____lazy_storage___criticalSeverityButton);
  }
  else
  {
    if (qword_1EBF0CA00 != -1) {
      swift_once();
    }
    id v4 = (id)qword_1EBF0CA18;
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_1C2147730();
    uint64_t v7 = v6;
    swift_bridgeObjectRelease();

    _sSo8UIButtonC19HealthMedicationsUIE21makeExclamationButton5title29accessibilityIdentifierSuffixABSS_SStFZ_0(v5, v7, 0xD000000000000014, 0x80000001C215DEA0);
    uint64_t v9 = v8;
    swift_bridgeObjectRelease();
    uint64_t v10 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v9;
    id v3 = v9;

    uint64_t v2 = 0;
  }
  id v11 = v2;
  return v3;
}

id DrugInteractionSeverityLevelView.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void DrugInteractionSeverityLevelView.init(coder:)()
{
  *(void *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI32DrugInteractionSeverityLevelView_subview] = 0;
  *(void *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI32DrugInteractionSeverityLevelView____lazy_storage___severityLabel] = 0;
  *(void *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI32DrugInteractionSeverityLevelView____lazy_storage___criticalSeverityButton] = 0;

  sub_1C214B910();
  __break(1u);
}

void sub_1C1F942CC()
{
  uint64_t v1 = OBJC_IVAR____TtC19HealthMedicationsUI32DrugInteractionSeverityLevelView_subview;
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI32DrugInteractionSeverityLevelView_subview], sel_removeFromSuperview);
  uint64_t v2 = (uint64_t *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI32DrugInteractionSeverityLevelView_severityLevel];
  swift_beginAccess();
  if ((unint64_t)(*v2 - 2) >= 3)
  {
    if (*v2 != 1)
    {
      sub_1C214B910();
      __break(1u);
      return;
    }
    id v6 = sub_1C1F94034();
  }
  else
  {
    id v3 = sub_1C1F93E20();
    sub_1C20DB3B0(0xD000000000000016, 0x80000001C2161A70, *v2);
    if (qword_1EBF0CA00 != -1) {
      swift_once();
    }
    id v4 = (id)qword_1EBF0CA18;
    swift_bridgeObjectRetain();
    sub_1C2147730();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    uint64_t v5 = (void *)sub_1C214A5B0();
    swift_bridgeObjectRelease();
    objc_msgSend(v3, sel_setText_, v5, 0xE000000000000000);

    id v6 = sub_1C1F93E20();
  }
  uint64_t v7 = *(void **)&v0[v1];
  *(void *)&v0[v1] = v6;

  if (*(void *)&v0[v1]) {
    objc_msgSend(v0, sel_addSubview_);
  }
}

id DrugInteractionSeverityLevelView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  id v9 = objc_allocWithZone(v4);

  return objc_msgSend(v9, sel_initWithFrame_, a1, a2, a3, a4);
}

void DrugInteractionSeverityLevelView.init(frame:)()
{
}

id DrugInteractionSeverityLevelView.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DrugInteractionSeverityLevelView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for DrugInteractionSeverityLevelView()
{
  return self;
}

uint64_t sub_1C1F945DC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  id v3 = (void *)(*a1 + OBJC_IVAR____TtC19HealthMedicationsUI32DrugInteractionSeverityLevelView_severityLevel);
  uint64_t result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

uint64_t method lookup function for DrugInteractionSeverityLevelView(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for DrugInteractionSeverityLevelView);
}

uint64_t dispatch thunk of DrugInteractionSeverityLevelView.severityLevel.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of DrugInteractionSeverityLevelView.severityLevel.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of DrugInteractionSeverityLevelView.severityLevel.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x80))();
}

void FlexibleText.hash(into:)()
{
  uint64_t v1 = *(void **)v0;
  uint64_t v2 = *(void *)(v0 + 8);
  if (*(unsigned char *)(v0 + 16))
  {
    sub_1C214BB40();
    id v3 = v1;
    sub_1C214B230();
    sub_1C1F94FC4(v1, v2, 1);
  }
  else
  {
    sub_1C214BB40();
    sub_1C214A690();
  }
}

uint64_t FlexibleText.hashValue.getter()
{
  uint64_t v1 = *(void **)v0;
  uint64_t v2 = *(void *)(v0 + 8);
  char v3 = *(unsigned char *)(v0 + 16);
  sub_1C214BB30();
  sub_1C214BB40();
  if (v3)
  {
    id v4 = v1;
    sub_1C214B230();
    sub_1C1F94FC4(v1, v2, 1);
  }
  else
  {
    sub_1C214A690();
  }
  return sub_1C214BB80();
}

uint64_t sub_1C1F94884()
{
  uint64_t v1 = *(void **)v0;
  uint64_t v2 = *(void *)(v0 + 8);
  char v3 = *(unsigned char *)(v0 + 16);
  sub_1C214BB30();
  sub_1C214BB40();
  if (v3)
  {
    id v4 = v1;
    sub_1C214B230();
    sub_1C1F94FC4(v1, v2, 1);
  }
  else
  {
    sub_1C214A690();
  }
  return sub_1C214BB80();
}

void sub_1C1F9491C()
{
  uint64_t v1 = *(void **)v0;
  uint64_t v2 = *(void *)(v0 + 8);
  if (*(unsigned char *)(v0 + 16))
  {
    sub_1C214BB40();
    id v3 = v1;
    sub_1C214B230();
    sub_1C1F94FC4(v1, v2, 1);
  }
  else
  {
    sub_1C214BB40();
    sub_1C214A690();
  }
}

uint64_t sub_1C1F949C0()
{
  uint64_t v1 = *(void **)v0;
  uint64_t v2 = *(void *)(v0 + 8);
  char v3 = *(unsigned char *)(v0 + 16);
  sub_1C214BB30();
  sub_1C214BB40();
  if (v3)
  {
    id v4 = v1;
    sub_1C214B230();
    sub_1C1F94FC4(v1, v2, 1);
  }
  else
  {
    sub_1C214A690();
  }
  return sub_1C214BB80();
}

uint64_t TitleWithSubtitleItem.reuseIdentifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TitleWithSubtitleItem.reuseIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*TitleWithSubtitleItem.reuseIdentifier.modify())()
{
  return nullsub_1;
}

id TitleWithSubtitleItem.title.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void **)(v1 + 16);
  uint64_t v3 = *(void *)(v1 + 24);
  char v4 = *(unsigned char *)(v1 + 32);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4;
  return sub_1C1F94FD4(v2, v3, v4);
}

id TitleWithSubtitleItem.subtitle.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void **)(v1 + 40);
  uint64_t v3 = *(void *)(v1 + 48);
  char v4 = *(unsigned char *)(v1 + 56);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4;
  return sub_1C1F94FD4(v2, v3, v4);
}

uint64_t TitleWithSubtitleItem.uniqueIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 64);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TitleWithSubtitleItem.init(title:subtitle:uniqueIdentifier:)@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8 = *a1;
  uint64_t v9 = a1[1];
  char v10 = *((unsigned char *)a1 + 16);
  uint64_t v11 = *a2;
  uint64_t v12 = a2[1];
  char v13 = *((unsigned char *)a2 + 16);
  swift_beginAccess();
  id v14 = off_1EA2C4EF8;
  *(void *)a5 = qword_1EA2C4EF0;
  *(void *)(a5 + 8) = v14;
  *(void *)(a5 + 16) = v8;
  *(void *)(a5 + 24) = v9;
  *(unsigned char *)(a5 + 32) = v10;
  *(void *)(a5 + 40) = v11;
  *(void *)(a5 + 48) = v12;
  *(unsigned char *)(a5 + 56) = v13;
  *(void *)(a5 + 64) = a3;
  *(void *)(a5 + 72) = a4;
  return swift_bridgeObjectRetain();
}

uint64_t TitleWithSubtitleItem.hash(into:)()
{
  uint64_t v1 = *(void **)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 24);
  char v4 = *(void **)(v0 + 40);
  uint64_t v3 = *(void *)(v0 + 48);
  char v5 = *(unsigned char *)(v0 + 56);
  if (*(unsigned char *)(v0 + 32))
  {
    sub_1C214BB40();
    id v6 = v1;
    sub_1C214B230();
    sub_1C1F94FC4(v1, v2, 1);
    if ((v5 & 1) == 0)
    {
LABEL_3:
      sub_1C214BB40();
      sub_1C214A690();
      goto LABEL_6;
    }
  }
  else
  {
    sub_1C214BB40();
    sub_1C214A690();
    if ((v5 & 1) == 0) {
      goto LABEL_3;
    }
  }
  sub_1C214BB40();
  id v7 = v4;
  sub_1C214B230();
  sub_1C1F94FC4(v4, v3, 1);
LABEL_6:
  swift_bridgeObjectRetain();
  sub_1C214A690();

  return swift_bridgeObjectRelease();
}

uint64_t TitleWithSubtitleItem.hashValue.getter()
{
  return sub_1C214BB80();
}

uint64_t sub_1C1F94D6C()
{
  uint64_t v1 = *(void *)(v0 + 64);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1C1F94D9C()
{
  return sub_1C214BB80();
}

uint64_t sub_1C1F94E14()
{
  return sub_1C214BB80();
}

uint64_t _s19HealthMedicationsUI12FlexibleTextO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void *)(a1 + 8);
  char v4 = *(unsigned char *)(a1 + 16);
  char v5 = *(void **)a2;
  uint64_t v6 = *(void *)(a2 + 8);
  char v7 = *(unsigned char *)(a2 + 16);
  if (v4)
  {
    if (*(unsigned char *)(a2 + 16))
    {
      sub_1C1F45050();
      char v4 = 1;
      sub_1C1F94FD4(v5, v6, 1);
      sub_1C1F94FD4(v2, v3, 1);
      char v8 = sub_1C214B220();
      char v7 = 1;
      goto LABEL_13;
    }
LABEL_5:
    sub_1C1F94FD4(*(void **)a2, *(void *)(a2 + 8), v7);
    sub_1C1F94FD4(v2, v3, v4);
    char v8 = 0;
    goto LABEL_13;
  }
  if (*(unsigned char *)(a2 + 16)) {
    goto LABEL_5;
  }
  if (v2 == v5 && v3 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1C214BA80();
  }
  sub_1C1F94FD4(v5, v6, 0);
  sub_1C1F94FD4(v2, v3, 0);
  char v4 = 0;
  char v7 = 0;
LABEL_13:
  sub_1C1F94FC4(v2, v3, v4);
  sub_1C1F94FC4(v5, v6, v7);
  return v8 & 1;
}

void sub_1C1F94FC4(void *a1, uint64_t a2, char a3)
{
  if (a3) {

  }
  else {
    swift_bridgeObjectRelease();
  }
}

id sub_1C1F94FD4(void *a1, uint64_t a2, char a3)
{
  if (a3) {
    return a1;
  }
  else {
    return (id)swift_bridgeObjectRetain();
  }
}

uint64_t _s19HealthMedicationsUI21TitleWithSubtitleItemV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)(a1 + 16);
  uint64_t v2 = *(void *)(a1 + 24);
  char v4 = *(unsigned char *)(a1 + 32);
  char v5 = *(void **)(a1 + 40);
  char v6 = *(unsigned char *)(a1 + 56);
  char v8 = *(void **)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  char v9 = *(unsigned char *)(a2 + 32);
  char v10 = *(void **)(a2 + 40);
  char v11 = *(unsigned char *)(a2 + 56);
  if ((v4 & 1) == 0)
  {
    if ((*(unsigned char *)(a2 + 32) & 1) == 0)
    {
      uint64_t v23 = *(void *)(a2 + 64);
      uint64_t v24 = *(void *)(a1 + 72);
      uint64_t v21 = *(void *)(a1 + 64);
      uint64_t v22 = *(void *)(a2 + 72);
      uint64_t v25 = *(void *)(a1 + 48);
      if (v3 == v8 && v2 == v7)
      {
        uint64_t v12 = *(void *)(a2 + 48);
        sub_1C1F94FD4(v3, v2, 0);
        sub_1C1F94FD4(v3, v2, 0);
        sub_1C1F94FC4(v3, v2, 0);
        sub_1C1F94FC4(v3, v2, 0);
      }
      else
      {
        uint64_t v12 = *(void *)(a2 + 48);
        char v17 = sub_1C214BA80();
        sub_1C1F94FD4(v8, v7, 0);
        sub_1C1F94FD4(v3, v2, 0);
        sub_1C1F94FC4(v3, v2, 0);
        sub_1C1F94FC4(v8, v7, 0);
        uint64_t result = 0;
        if ((v17 & 1) == 0) {
          return result;
        }
      }
      goto LABEL_11;
    }
LABEL_6:
    sub_1C1F94FD4(*(void **)(a2 + 16), *(void *)(a2 + 24), v9);
    sub_1C1F94FD4(v3, v2, v4);
    sub_1C1F94FC4(v3, v2, v4);
    id v14 = v8;
    uint64_t v15 = v7;
    char v16 = v9;
LABEL_17:
    sub_1C1F94FC4(v14, v15, v16);
    return 0;
  }
  if ((*(unsigned char *)(a2 + 32) & 1) == 0) {
    goto LABEL_6;
  }
  uint64_t v12 = *(void *)(a2 + 48);
  uint64_t v24 = *(void *)(a1 + 72);
  uint64_t v25 = *(void *)(a1 + 48);
  uint64_t v22 = *(void *)(a2 + 72);
  uint64_t v23 = *(void *)(a2 + 64);
  uint64_t v21 = *(void *)(a1 + 64);
  sub_1C1F45050();
  sub_1C1F94FD4(v8, v7, 1);
  sub_1C1F94FD4(v3, v2, 1);
  sub_1C1F94FD4(v8, v7, 1);
  sub_1C1F94FD4(v3, v2, 1);
  char v13 = sub_1C214B220();
  sub_1C1F94FC4(v3, v2, 1);
  sub_1C1F94FC4(v8, v7, 1);
  sub_1C1F94FC4(v8, v7, 1);
  sub_1C1F94FC4(v3, v2, 1);
  if ((v13 & 1) == 0) {
    return 0;
  }
LABEL_11:
  if (v6)
  {
    if (v11)
    {
      sub_1C1F45050();
      sub_1C1F94FD4(v10, v12, 1);
      sub_1C1F94FD4(v5, v25, 1);
      sub_1C1F94FD4(v10, v12, 1);
      sub_1C1F94FD4(v5, v25, 1);
      char v19 = sub_1C214B220();
      sub_1C1F94FC4(v5, v25, 1);
      sub_1C1F94FC4(v10, v12, 1);
      sub_1C1F94FC4(v10, v12, 1);
      sub_1C1F94FC4(v5, v25, 1);
      if (v19) {
        goto LABEL_24;
      }
      return 0;
    }
    goto LABEL_16;
  }
  if (v11)
  {
LABEL_16:
    sub_1C1F94FD4(v10, v12, v11);
    sub_1C1F94FD4(v5, v25, v6);
    sub_1C1F94FC4(v5, v25, v6);
    id v14 = v10;
    uint64_t v15 = v12;
    char v16 = v11;
    goto LABEL_17;
  }
  if (v5 == v10 && v25 == v12)
  {
    sub_1C1F94FD4(v5, v25, 0);
    sub_1C1F94FD4(v5, v25, 0);
    sub_1C1F94FC4(v5, v25, 0);
    sub_1C1F94FC4(v5, v25, 0);
  }
  else
  {
    char v20 = sub_1C214BA80();
    sub_1C1F94FD4(v10, v12, 0);
    sub_1C1F94FD4(v5, v25, 0);
    sub_1C1F94FC4(v5, v25, 0);
    sub_1C1F94FC4(v10, v12, 0);
    uint64_t result = 0;
    if ((v20 & 1) == 0) {
      return result;
    }
  }
LABEL_24:
  if (v21 == v23 && v24 == v22) {
    return 1;
  }

  return sub_1C214BA80();
}

unint64_t sub_1C1F9542C()
{
  unint64_t result = qword_1EA2C41E0;
  if (!qword_1EA2C41E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C41E0);
  }
  return result;
}

unint64_t sub_1C1F95484()
{
  unint64_t result = qword_1EA2C41E8;
  if (!qword_1EA2C41E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C41E8);
  }
  return result;
}

void destroy for FlexibleText(uint64_t a1)
{
}

uint64_t _s19HealthMedicationsUI12FlexibleTextOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_1C1F94FD4(*(void **)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for FlexibleText(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_1C1F94FD4(*(void **)a2, v4, v5);
  char v6 = *(void **)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  char v8 = *(unsigned char *)(a1 + 16);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  sub_1C1F94FC4(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for FlexibleText(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void **)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  char v6 = *(unsigned char *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v3;
  sub_1C1F94FC4(v4, v5, v6);
  return a1;
}

ValueMetadata *type metadata accessor for FlexibleText()
{
  return &type metadata for FlexibleText;
}

uint64_t destroy for TitleWithSubtitleItem(uint64_t a1)
{
  swift_bridgeObjectRelease();
  sub_1C1F94FC4(*(void **)(a1 + 16), *(void *)(a1 + 24), *(unsigned char *)(a1 + 32));
  sub_1C1F94FC4(*(void **)(a1 + 40), *(void *)(a1 + 48), *(unsigned char *)(a1 + 56));

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for TitleWithSubtitleItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void **)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  char v7 = *(unsigned char *)(a2 + 32);
  swift_bridgeObjectRetain();
  sub_1C1F94FD4(v5, v6, v7);
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = v7;
  char v8 = *(void **)(a2 + 40);
  uint64_t v9 = *(void *)(a2 + 48);
  char v10 = *(unsigned char *)(a2 + 56);
  sub_1C1F94FD4(v8, v9, v10);
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v9;
  *(unsigned char *)(a1 + 56) = v10;
  uint64_t v11 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v11;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for TitleWithSubtitleItem(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void **)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 24);
  char v6 = *(unsigned char *)(a2 + 32);
  sub_1C1F94FD4(v4, v5, v6);
  char v7 = *(void **)(a1 + 16);
  uint64_t v8 = *(void *)(a1 + 24);
  char v9 = *(unsigned char *)(a1 + 32);
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(unsigned char *)(a1 + 32) = v6;
  sub_1C1F94FC4(v7, v8, v9);
  char v10 = *(void **)(a2 + 40);
  uint64_t v11 = *(void *)(a2 + 48);
  char v12 = *(unsigned char *)(a2 + 56);
  sub_1C1F94FD4(v10, v11, v12);
  char v13 = *(void **)(a1 + 40);
  uint64_t v14 = *(void *)(a1 + 48);
  char v15 = *(unsigned char *)(a1 + 56);
  *(void *)(a1 + 40) = v10;
  *(void *)(a1 + 48) = v11;
  *(unsigned char *)(a1 + 56) = v12;
  sub_1C1F94FC4(v13, v14, v15);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy80_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

uint64_t assignWithTake for TitleWithSubtitleItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  char v5 = *(unsigned char *)(a2 + 32);
  char v6 = *(void **)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  char v8 = *(unsigned char *)(a1 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = v5;
  sub_1C1F94FC4(v6, v7, v8);
  char v9 = *(unsigned char *)(a2 + 56);
  char v10 = *(void **)(a1 + 40);
  uint64_t v11 = *(void *)(a1 + 48);
  char v12 = *(unsigned char *)(a1 + 56);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(unsigned char *)(a1 + 56) = v9;
  sub_1C1F94FC4(v10, v11, v12);
  uint64_t v13 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v13;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for TitleWithSubtitleItem(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 80)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TitleWithSubtitleItem(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 80) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 80) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TitleWithSubtitleItem()
{
  return &type metadata for TitleWithSubtitleItem;
}

uint64_t sub_1C1F95964()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1C21495D0();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  id v63 = (char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  id v47 = (char *)&v46 - v6;
  uint64_t v7 = sub_1C2147CF0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  char v10 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1C21496A0();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  id v64 = (char *)&v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  char v16 = (char *)&v46 - v15;
  sub_1C2149630();
  sub_1C2147CB0();
  uint64_t v17 = sub_1C21495A0();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  id v18 = *(void (**)(char *, uint64_t))(v12 + 8);
  id v62 = v16;
  char v19 = v16;
  uint64_t v20 = v11;
  uint64_t v21 = v18;
  v18(v19, v11);
  if (*(void *)(v17 + 16))
  {
    uint64_t v65 = *(void *)(v17 + 16);
    id v60 = sel_didTapDay_;
    id v58 = &v1[OBJC_IVAR____TtC19HealthMedicationsUI9DayPicker_disabledDays];
    id v57 = &v1[OBJC_IVAR____TtC19HealthMedicationsUI9DayPicker_dayViews];
    unint64_t v22 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
    uint64_t v46 = v17;
    unint64_t v23 = v17 + v22;
    id v59 = &v1[OBJC_IVAR____TtC19HealthMedicationsUI9DayPicker_selectedDays];
    swift_beginAccess();
    uint64_t v24 = (char *)v23;
    id v26 = *(void (**)(char *, char *, uint64_t))(v3 + 16);
    uint64_t v25 = v3 + 16;
    uint64_t v55 = *(void *)(v25 + 56);
    id v56 = v26;
    id v53 = (void (**)(char *, uint64_t))(v25 - 8);
    id v54 = (void (**)(char *, char *, uint64_t))(v12 + 16);
    unint64_t v52 = 0x80000001C2161B10;
    uint64_t v51 = *MEMORY[0x1E4F67960];
    id v27 = v47;
    uint64_t v28 = v20;
    id v29 = v64;
    uint64_t v61 = v25;
    uint64_t v50 = v2;
    uint64_t v49 = v12 + 8;
    uint64_t v48 = v21;
    do
    {
      id v64 = v24;
      uint64_t v30 = v56;
      v56(v27, v24, v2);
      uint64_t v31 = (uint64_t)v63;
      v30(v63, v27, v2);
      id v32 = objc_allocWithZone((Class)type metadata accessor for DayPickerDay());
      uint64_t v33 = sub_1C1FF024C(v31);
      sub_1C21495B0();
      uint64_t v34 = sub_1C214A5F0();
      unint64_t v36 = v35;
      unint64_t v66 = 0;
      unint64_t v67 = 0xE000000000000000;
      id v37 = v33;
      sub_1C214B7C0();
      swift_bridgeObjectRelease();
      unint64_t v66 = 0xD000000000000022;
      unint64_t v67 = v52;
      uint64_t v68 = sub_1C21495C0();
      sub_1C214BA40();
      sub_1C214A6C0();
      swift_bridgeObjectRelease();
      unint64_t v66 = v34;
      unint64_t v67 = v36;
      swift_bridgeObjectRetain();
      sub_1C214A6C0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v38 = (void *)sub_1C214A5B0();
      swift_bridgeObjectRelease();
      objc_msgSend(v37, sel_setAccessibilityIdentifier_, v38);

      uint64_t v39 = v62;
      (*v54)(v62, v59, v28);
      sub_1C1F85E08(&qword_1EA2C3B98);
      LOBYTE(v30) = sub_1C214B5B0();
      uint64_t v40 = v48;
      v48(v39, v28);
      objc_msgSend(v37, sel_setSelected_, v30 & 1);
      uint64_t v41 = v37;
      objc_msgSend(v41, sel_setEnabled_, (sub_1C214B5B0() & 1) == 0);

      objc_msgSend(v41, sel_addTarget_action_forControlEvents_, v1, v60, 64);
      uint64_t v42 = v57;
      swift_beginAccess();
      id v43 = v41;
      MEMORY[0x1C87528E0]();
      if (*(void *)((*(void *)v42 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)v42 & 0xFFFFFFFFFFFFFF8)
                                                                                   + 0x18) >> 1)
        sub_1C214A7D0();
      sub_1C214A820();
      sub_1C214A7A0();
      swift_endAccess();
      objc_msgSend(v1, sel_addSubview_, v43);

      v40(v29, v28);
      uint64_t v44 = v50;
      (*v53)(v27, v50);
      uint64_t v24 = &v64[v55];
      --v65;
      uint64_t v2 = v44;
    }
    while (v65);
  }
  return swift_bridgeObjectRelease();
}

void sub_1C1F95FE0()
{
  unint64_t v42 = MEMORY[0x1E4FBC860];
  id v1 = objc_msgSend(v0, sel_layoutMarginsGuide);
  id v41 = objc_msgSend(v1, sel_topAnchor);

  id v2 = objc_msgSend(v0, sel_layoutMarginsGuide);
  id v40 = objc_msgSend(v2, sel_bottomAnchor);

  id v3 = objc_msgSend(v0, sel_layoutMarginsGuide);
  id v4 = objc_msgSend(v3, sel_leadingAnchor);

  uint64_t v5 = (id *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI9DayPicker_dayViews];
  swift_beginAccess();
  unint64_t v6 = (unint64_t)*v5;
  if ((unint64_t)*v5 >> 62)
  {
LABEL_33:
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1C214B930();
  }
  else
  {
    uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  id v36 = v0;
  if (v7)
  {
    if (v7 >= 1)
    {
      id v8 = 0;
      uint64_t v9 = 0;
      unint64_t v38 = v6;
      unint64_t v39 = v6 & 0xC000000000000001;
      char v10 = v4;
      uint64_t v37 = v7;
      while (1)
      {
        if (v39) {
          id v12 = (id)MEMORY[0x1C8753960](v9, v6);
        }
        else {
          id v12 = *(id *)(v6 + 8 * v9 + 32);
        }
        id v4 = v12;
        objc_msgSend(v12, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0, v36);
        id v13 = objc_msgSend(v4, sel_leadingAnchor);
        unint64_t v6 = (unint64_t)objc_msgSend(v13, sel_constraintEqualToAnchor_, v10);

        id v14 = objc_msgSend(v4, sel_topAnchor);
        id v15 = objc_msgSend(v14, sel_constraintEqualToAnchor_, v41);

        id v16 = objc_msgSend(v4, sel_bottomAnchor);
        id v17 = objc_msgSend(v40, sel_constraintEqualToAnchor_, v16);

        uint64_t v0 = (char *)v42;
        if (v42 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v30 = sub_1C214B930();
          swift_bridgeObjectRelease();
          uint64_t v19 = v30 + 3;
          if (__OFADD__(v30, 3))
          {
LABEL_32:
            __break(1u);
            goto LABEL_33;
          }
        }
        else
        {
          uint64_t v18 = *(void *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x10);
          uint64_t v19 = v18 + 3;
          if (__OFADD__(v18, 3)) {
            goto LABEL_32;
          }
        }
        sub_1C1FCDE1C(v19, 1);
        sub_1C214A7A0();
        id v20 = (id)v6;
        MEMORY[0x1C87528E0]();
        if (*(void *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1C214A7D0();
        }
        sub_1C214A820();
        sub_1C214A7A0();
        id v21 = v15;
        MEMORY[0x1C87528E0]();
        if (*(void *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1C214A7D0();
        }
        sub_1C214A820();
        sub_1C214A7A0();
        id v22 = v17;
        MEMORY[0x1C87528E0]();
        if (*(void *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1C214A7D0();
        }
        sub_1C214A820();
        sub_1C214A7A0();

        id v23 = objc_msgSend(v4, sel_heightAnchor);
        id v24 = objc_msgSend(v23, sel_constraintEqualToConstant_, 44.0);

        LODWORD(v25) = 1144750080;
        objc_msgSend(v24, sel_setPriority_, v25);
        id v26 = v24;
        MEMORY[0x1C87528E0]();
        if (*(void *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1C214A7D0();
        }
        sub_1C214A820();
        sub_1C214A7A0();
        if (v8)
        {
          id v27 = v8;
          id v28 = objc_msgSend(v4, sel_widthAnchor);
          id v29 = objc_msgSend(v28, sel_constraintEqualToAnchor_, v27);

          MEMORY[0x1C87528E0]();
          if (*(void *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_1C214A7D0();
          }
          sub_1C214A820();
          sub_1C214A7A0();
        }
        else
        {
          id v8 = objc_msgSend(v4, sel_widthAnchor);
        }
        ++v9;
        id v11 = v4;
        id v4 = objc_msgSend(v11, sel_trailingAnchor);

        char v10 = v4;
        unint64_t v6 = v38;
        if (v37 == v9) {
          goto LABEL_29;
        }
      }
    }
    __break(1u);
  }
  else
  {
    id v8 = 0;
LABEL_29:
    swift_bridgeObjectRelease();
    id v31 = objc_msgSend(v36, sel_layoutMarginsGuide);
    id v32 = objc_msgSend(v31, sel_trailingAnchor);

    id v33 = objc_msgSend(v32, sel_constraintEqualToAnchor_, v4);
    MEMORY[0x1C87528E0]();
    if (*(void *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C214A7D0();
    }
    sub_1C214A820();
    sub_1C214A7A0();
    uint64_t v34 = self;
    sub_1C1F645D4();
    unint64_t v35 = (void *)sub_1C214A770();
    swift_bridgeObjectRelease();
    objc_msgSend(v34, sel_activateConstraints_, v35);
  }
}

uint64_t sub_1C1F9668C(void *a1)
{
  sub_1C1F96EF0();
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1C21496A0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  char v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x1F4188790](v8);
  id v13 = (char *)&v20 - v12;
  MEMORY[0x1F4188790](v11);
  id v15 = (char *)&v20 - v14;
  objc_msgSend(a1, sel_setSelected_, objc_msgSend(a1, sel_isSelected) ^ 1);
  sub_1C21495B0();
  unsigned int v16 = objc_msgSend(a1, sel_isSelected);
  id v17 = &v1[OBJC_IVAR____TtC19HealthMedicationsUI9DayPicker_selectedDays];
  if (v16)
  {
    swift_beginAccess();
    sub_1C1F969A8(v13, (uint64_t)v15);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
  }
  else
  {
    swift_beginAccess();
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v13, v17, v6);
    sub_1C1F85E08(&qword_1EA2C3B98);
    sub_1C214B5C0();
    if (sub_1C214B5F0())
    {
      (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
      uint64_t v18 = 1;
    }
    else
    {
      sub_1C214B600();
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v5, v10, v6);
      uint64_t v18 = 0;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, v18, 1, v6);
    sub_1C1F96F48((uint64_t)v5);
  }
  swift_endAccess();
  objc_msgSend(v1, sel_sendActionsForControlEvents_, 4096);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v15, v6);
}

uint64_t sub_1C1F969A8(char *a1, uint64_t a2)
{
  id v29 = a1;
  sub_1C1F96FA4();
  uint64_t v5 = v4;
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  id v27 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v24 - v8;
  uint64_t v10 = sub_1C21496A0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  unsigned int v16 = (char *)&v24 - v15;
  id v17 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  uint64_t v26 = v2;
  v17(v14, v2, v10);
  uint64_t v24 = sub_1C1F85E08(&qword_1EA2C3B98);
  sub_1C214B5C0();
  sub_1C1F85E08(&qword_1EBF0C5E8);
  uint64_t v25 = a2;
  char v18 = sub_1C214A5A0() ^ 1;
  uint64_t v28 = v5;
  uint64_t v19 = &v9[*(int *)(v5 + 48)];
  *uint64_t v9 = v18 & 1;
  if (v18)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
    uint64_t v21 = v25;
    v17(v19, v25, v10);
    v17(v14, v21, v10);
    sub_1C214B610();
    uint64_t v20 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
  }
  else
  {
    uint64_t v20 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
    v20(v19, v16, v10);
  }
  id v22 = &v27[*(int *)(v28 + 48)];
  v20(v22, v19, v10);
  v20(v29, v22, v10);
  return v18 & 1;
}

id sub_1C1F96D14()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DayPicker();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1C1F96DFC()
{
  return type metadata accessor for DayPicker();
}

uint64_t type metadata accessor for DayPicker()
{
  uint64_t result = qword_1EA2C41F8;
  if (!qword_1EA2C41F8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C1F96E50()
{
  uint64_t result = sub_1C21496A0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

void sub_1C1F96EF0()
{
  if (!qword_1EBF0C5F8)
  {
    sub_1C21496A0();
    unint64_t v0 = sub_1C214B4F0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBF0C5F8);
    }
  }
}

uint64_t sub_1C1F96F48(uint64_t a1)
{
  sub_1C1F96EF0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1C1F96FA4()
{
  if (!qword_1EBF0C7B0)
  {
    sub_1C21496A0();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EBF0C7B0);
    }
  }
}

uint64_t SpecificationStepViewController.init(item:dataSource:listManager:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *MEMORY[0x1E4FBC8C8] & *v3;
  sub_1C1F246EC(a1, (uint64_t)v3 + qword_1EA2C7D08);
  uint64_t v8 = *(void *)(v7 + class metadata base offset for SpecificationStepViewController + 8);
  type metadata accessor for SpecificationStepViewController.MedicationOnboardingStepObservableDataSource();
  uint64_t v9 = v3;
  uint64_t v10 = swift_unknownObjectRetain();
  uint64_t v11 = sub_1C1F98100(v10);
  swift_unknownObjectRelease();
  *(void *)((char *)v9 + qword_1EA2C4208) = v11;
  *(void *)((char *)v9 + qword_1EA2C4210) = a3;
  swift_retain();

  sub_1C2148820();
  if (swift_dynamicCastClass())
  {
    swift_unknownObjectRetain();
  }
  else
  {
    sub_1C1F24848();
    uint64_t v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_1C214FCD0;
    uint64_t v13 = *(void *)(v8 + 8);
    *(void *)(v12 + 32) = a2;
    *(void *)(v12 + 40) = v13;
    swift_unknownObjectRetain();
    sub_1C2148850();
  }
  uint64_t v14 = sub_1C2148AC0();
  swift_unknownObjectRelease();
  swift_release();
  sub_1C1F983FC(a1, (uint64_t (*)(void))sub_1C1F73AC0);
  return v14;
}

uint64_t type metadata accessor for SpecificationStepViewController.MedicationOnboardingStepObservableDataSource()
{
  return __swift_instantiateGenericMetadata();
}

void SpecificationStepViewController.__allocating_init(dataSource:)()
{
}

uint64_t sub_1C1F971EC()
{
  sub_1C1F981E4();

  return swift_retain();
}

uint64_t sub_1C1F97214(uint64_t a1)
{
  uint64_t v3 = (void *)(v1 + qword_1EA2C4210);
  swift_beginAccess();
  *uint64_t v3 = a1;
  return swift_release();
}

uint64_t (*sub_1C1F97268())()
{
  return j__swift_endAccess;
}

uint64_t sub_1C1F972C4()
{
  sub_1C1F9822C();

  return swift_retain();
}

uint64_t sub_1C1F972EC()
{
  uint64_t v1 = *MEMORY[0x1E4FBC8C8] & *v0;
  uint64_t v3 = *(void *)(v1 + class metadata base offset for SpecificationStepViewController);
  uint64_t v2 = *(void *)(v1 + class metadata base offset for SpecificationStepViewController + 8);
  swift_getAssociatedTypeWitness();
  sub_1C214B4F0();
  sub_1C2149EA0();
  swift_getWitnessTable();
  uint64_t v4 = sub_1C2149D60();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v11 - v6;
  v11[1] = *(void *)(*(void *)((char *)v0 + qword_1EA2C4208) + 24);
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = v3;
  *(void *)(v8 + 24) = v2;
  swift_retain();
  sub_1C214A020();
  swift_release();
  swift_release();
  swift_getWitnessTable();
  uint64_t v9 = sub_1C2149FC0();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v9;
}

uint64_t sub_1C1F9752C()
{
  sub_1C1F60744();
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v4 = &v7[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7[15] = 0;
  sub_1C2149EE0();
  sub_1C1F982D8();
  uint64_t v5 = sub_1C2149FC0();
  (*(void (**)(unsigned char *, uint64_t))(v2 + 8))(v4, v1);
  return v5;
}

void sub_1C1F97618()
{
  id v1 = objc_msgSend(v0, sel_navigationItem);
  if (qword_1EBF0CA00 != -1) {
    swift_once();
  }
  id v2 = (id)qword_1EBF0CA18;
  swift_bridgeObjectRetain();
  sub_1C2147730();
  swift_bridgeObjectRelease();

  uint64_t v3 = type metadata accessor for SpecificationStepViewController();
  v13[3] = v3;
  v13[0] = v0;
  id v4 = v0;
  uint64_t v5 = (void *)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  if (v3)
  {
    uint64_t v6 = __swift_project_boxed_opaque_existential_0(v13, v3);
    uint64_t v7 = *(void *)(v3 - 8);
    MEMORY[0x1F4188790](v6);
    uint64_t v9 = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v7 + 16))(v9);
    uint64_t v10 = sub_1C214BA70();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v3);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v13);
  }
  else
  {
    uint64_t v10 = 0;
  }
  id v11 = objc_allocWithZone(MEMORY[0x1E4FB14A8]);
  id v12 = objc_msgSend(v11, sel_initWithTitle_style_target_action_, v5, 2, v10, sel_cancelTapped_, v13[0]);

  swift_unknownObjectRelease();
  objc_msgSend(v1, sel_setRightBarButtonItem_, v12);
}

uint64_t sub_1C1F978C4()
{
  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocClassInstance();
}

void sub_1C1F97904(unsigned char *a1@<X8>)
{
  *a1 = 64;
}

uint64_t SpecificationStepViewController.__allocating_init(item:dataSource:listManager:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v7 = objc_allocWithZone(v3);
  return SpecificationStepViewController.init(item:dataSource:listManager:)(a1, a2, a3);
}

id SpecificationStepViewController.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

uint64_t SpecificationStepViewController.init(coder:)(uint64_t a1)
{
  return sub_1C1F97E6C(a1, (uint64_t (*)(void, void))sub_1C1F98348);
}

void sub_1C1F979B8()
{
}

uint64_t sub_1C1F97A14(uint64_t a1)
{
  id v3 = v1;
  return a1;
}

void sub_1C1F97A2C()
{
  sub_1C1F97618();
  v6.receiver = v0;
  v6.super_class = (Class)type metadata accessor for SpecificationStepViewController();
  objc_msgSendSuper2(&v6, sel_viewDidLoad);
  id v1 = objc_msgSend(v0, sel_collectionView);
  if (v1)
  {
    id v2 = v1;
    objc_msgSend(v1, sel_setPreservesSuperviewLayoutMargins_, 1);

    id v3 = objc_msgSend(v0, sel_collectionView);
    if (v3)
    {
      id v4 = v3;
      id v5 = objc_msgSend(self, sel_systemBackgroundColor);
      objc_msgSend(v4, sel_setBackgroundColor_, v5);

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_1C1F97B58(void *a1)
{
  id v1 = a1;
  sub_1C1F97A2C();
}

void sub_1C1F97BA0(void *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = a1;
  sub_1C1F98330();
}

void sub_1C1F97C00(void *a1)
{
  id v2 = (void *)sub_1C2147D40();
  objc_msgSend(a1, sel_deselectItemAtIndexPath_animated_, v2, 1);

  id v3 = (void *)sub_1C2147D40();
  id v4 = objc_msgSend(a1, sel_cellForItemAtIndexPath_, v3);

  if (v4)
  {
    id v8 = v4;
    sub_1C1F983BC();
    sub_1C1F248B4(0, &qword_1EA2C37A0);
    id v5 = v4;
    if (swift_dynamicCast())
    {
      sub_1C1F31280(v6, (uint64_t)v9);
      __swift_project_boxed_opaque_existential_0(v9, v9[3]);
      sub_1C2148470();

      __swift_destroy_boxed_opaque_existential_0((uint64_t)v9);
    }
    else
    {
      uint64_t v7 = 0;
      memset(v6, 0, sizeof(v6));

      sub_1C1F983FC((uint64_t)v6, (uint64_t (*)(void))sub_1C1F9845C);
    }
  }
}

uint64_t sub_1C1F97D58(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5 = sub_1C2147D90();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  id v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2147D50();
  id v9 = a3;
  id v10 = a1;
  sub_1C1F97C00(v9);

  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t SpecificationStepViewController.init(dataSource:)(uint64_t a1)
{
  return sub_1C1F97E6C(a1, (uint64_t (*)(void, void))sub_1C1F981B4);
}

uint64_t sub_1C1F97E6C(uint64_t a1, uint64_t (*a2)(void, void))
{
  return a2(*(void *)((*MEMORY[0x1E4FBC8C8] & *v2) + class metadata base offset for SpecificationStepViewController), *(void *)((*MEMORY[0x1E4FBC8C8] & *v2) + class metadata base offset for SpecificationStepViewController + 8));
}

id SpecificationStepViewController.__allocating_init(collectionViewLayout:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCollectionViewLayout_, a1);

  return v3;
}

void SpecificationStepViewController.init(collectionViewLayout:)()
{
}

void sub_1C1F97F48(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = a3;

  sub_1C1F984C8();
}

uint64_t sub_1C1F97FC4()
{
  swift_release();
  swift_release();
  return sub_1C1F983FC(v0 + qword_1EA2C7D08, (uint64_t (*)(void))sub_1C1F73AC0);
}

id SpecificationStepViewController.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SpecificationStepViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1C1F98098(uint64_t a1)
{
  return sub_1C1F983FC(a1 + qword_1EA2C7D08, (uint64_t (*)(void))sub_1C1F73AC0);
}

uint64_t *sub_1C1F98100(uint64_t a1)
{
  type metadata accessor for SpecificationStepViewController.MedicationOnboardingStepObservableDataSource();
  objc_super v2 = (uint64_t *)swift_allocObject();
  uint64_t v3 = *v2;
  v2[2] = a1;
  uint64_t v4 = *(void *)(v3 + 88);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(v4 + 32);
  uint64_t v6 = *(void *)(v3 + 80);
  swift_unknownObjectRetain();
  v2[3] = v5(v6, v4);
  return v2;
}

void sub_1C1F981B4()
{
}

uint64_t sub_1C1F981E4()
{
  uint64_t v1 = v0 + qword_1EA2C4210;
  swift_beginAccess();
  return *(void *)v1;
}

uint64_t sub_1C1F9822C()
{
  return *(void *)(*(void *)(v0 + qword_1EA2C4208) + 24);
}

uint64_t sub_1C1F98240()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C1F98250@<X0>(uint64_t a1@<X0>, BOOL *a2@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 48))(a1, 1, AssociatedTypeWitness);
  *a2 = result != 1;
  return result;
}

unint64_t sub_1C1F982D8()
{
  unint64_t result = qword_1EA2C39A8;
  if (!qword_1EA2C39A8)
  {
    sub_1C1F60744();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C39A8);
  }
  return result;
}

id sub_1C1F98330()
{
  return objc_msgSend(v0, sel_dismissViewControllerAnimated_completion_, 1, 0);
}

void sub_1C1F98348()
{
}

uint64_t type metadata accessor for SpecificationStepViewController()
{
  return __swift_instantiateGenericMetadata();
}

unint64_t sub_1C1F983BC()
{
  unint64_t result = qword_1EA2C6A00;
  if (!qword_1EA2C6A00)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA2C6A00);
  }
  return result;
}

uint64_t sub_1C1F983FC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_1C1F9845C()
{
  if (!qword_1EA2C6A10)
  {
    sub_1C1F248B4(255, &qword_1EA2C37A0);
    unint64_t v0 = sub_1C214B4F0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C6A10);
    }
  }
}

void sub_1C1F984C8()
{
}

uint64_t sub_1C1F984F8@<X0>(uint64_t *a1@<X8>)
{
  *a1 = sub_1C1F981E4();

  return swift_retain();
}

uint64_t sub_1C1F98534()
{
  uint64_t v0 = swift_retain();
  return sub_1C1F97214(v0);
}

uint64_t sub_1C1F98560()
{
  return 16;
}

__n128 sub_1C1F9856C(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

void sub_1C1F98578()
{
  sub_1C1F73AC0();
  if (v0 <= 0x3F) {
    swift_initClassMetadata2();
  }
}

uint64_t method lookup function for SpecificationStepViewController(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SpecificationStepViewController);
}

uint64_t dispatch thunk of SpecificationStepViewController.listManager.getter()
{
  return (*(uint64_t (**)(void))(class metadata base offset for SpecificationStepViewController
                              + (*MEMORY[0x1E4FBC8C8] & *v0)
                              + 40))();
}

uint64_t dispatch thunk of SpecificationStepViewController.listManager.setter()
{
  return (*(uint64_t (**)(void))(class metadata base offset for SpecificationStepViewController
                              + (*MEMORY[0x1E4FBC8C8] & *v0)
                              + 48))();
}

uint64_t dispatch thunk of SpecificationStepViewController.listManager.modify()
{
  return (*(uint64_t (**)(void))(class metadata base offset for SpecificationStepViewController
                              + (*MEMORY[0x1E4FBC8C8] & *v0)
                              + 56))();
}

uint64_t dispatch thunk of SpecificationStepViewController.step.getter()
{
  return (*(uint64_t (**)(void))(class metadata base offset for SpecificationStepViewController
                              + (*MEMORY[0x1E4FBC8C8] & *v0)
                              + 64))();
}

uint64_t dispatch thunk of SpecificationStepViewController.resultPublisher.getter()
{
  return (*(uint64_t (**)(void))(class metadata base offset for SpecificationStepViewController
                              + (*MEMORY[0x1E4FBC8C8] & *v0)
                              + 72))();
}

uint64_t dispatch thunk of SpecificationStepViewController.canStepForwardPublisher.getter()
{
  return (*(uint64_t (**)(void))(class metadata base offset for SpecificationStepViewController
                              + (*MEMORY[0x1E4FBC8C8] & *v0)
                              + 80))();
}

uint64_t dispatch thunk of SpecificationStepViewController.shouldProceedManuallyPublisher.getter()
{
  return (*(uint64_t (**)(void))(class metadata base offset for SpecificationStepViewController
                              + (*MEMORY[0x1E4FBC8C8] & *v0)
                              + 88))();
}

uint64_t dispatch thunk of SpecificationStepViewController.__allocating_init(item:dataSource:listManager:)()
{
  return (*(uint64_t (**)(void))(class metadata base offset for SpecificationStepViewController + v0 + 96))();
}

uint64_t sub_1C1F98888()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1C1F988D8(void *a1)
{
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = MEMORY[0x1E4FBC860];
  uint64_t v3 = (void *)sub_1C2147A00();
  uint64_t v4 = (void *)sub_1C2147A00();
  v8[4] = sub_1C1F10724;
  v8[5] = v2;
  v8[0] = MEMORY[0x1E4F143A8];
  v8[1] = 1107296256;
  _OWORD v8[2] = sub_1C1F106B0;
  v8[3] = &block_descriptor_10;
  uint64_t v5 = _Block_copy(v8);
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_enumerateStatisticsFromDate_toDate_withBlock_, v3, v4, v5);
  _Block_release(v5);

  swift_beginAccess();
  uint64_t v6 = *(void *)(v2 + 16);
  swift_bridgeObjectRetain();
  swift_release();
  return v6;
}

unint64_t sub_1C1F98A2C(uint64_t a1)
{
  uint64_t v45 = sub_1C2147AC0();
  uint64_t v2 = *(void *)(v45 - 8);
  uint64_t v3 = MEMORY[0x1F4188790](v45);
  unint64_t v42 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  id v40 = (char *)&v35 - v5;
  sub_1C1F10AAC(0, &qword_1EBF0B1F8, MEMORY[0x1E4F27928]);
  uint64_t v43 = *(void *)(v6 - 8);
  uint64_t v44 = v6;
  uint64_t v7 = MEMORY[0x1F4188790](v6);
  id v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x1F4188790](v7);
  unint64_t v39 = (char *)&v35 - v11;
  MEMORY[0x1F4188790](v10);
  uint64_t v41 = (uint64_t)&v35 - v12;
  uint64_t v13 = *(void *)(a1 + 16);
  if (!v13) {
    return MEMORY[0x1E4FBC860];
  }
  sub_1C1F10AAC(0, (unint64_t *)&unk_1EBF0B1C8, MEMORY[0x1E4F26E60]);
  uint64_t v38 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = a1 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
  id v36 = (void (**)(char *, uint64_t))(v2 + 8);
  uint64_t v37 = *(void *)(v15 + 72);
  uint64_t v35 = a1;
  swift_bridgeObjectRetain();
  unint64_t v17 = MEMORY[0x1E4FBC860];
  char v18 = v40;
  uint64_t v19 = v36;
  do
  {
    uint64_t v46 = v13;
    uint64_t v20 = *(void *)(v16 + *(int *)(v38 + 48));
    uint64_t v21 = *(int *)(v44 + 48);
    sub_1C2147590();
    id v22 = v42;
    sub_1C2147570();
    sub_1C21478B0();
    sub_1C21478B0();
    uint64_t v23 = (uint64_t)v39;
    sub_1C21478A0();
    uint64_t v24 = *v19;
    uint64_t v25 = v22;
    uint64_t v26 = v9;
    uint64_t v27 = v45;
    (*v19)(v25, v45);
    uint64_t v28 = v27;
    id v9 = v26;
    v24(v18, v28);
    *(void *)(v23 + v21) = v20;
    id v29 = (void (*)(uint64_t))MEMORY[0x1E4F27928];
    uint64_t v30 = v41;
    sub_1C1F115E8(v23, v41, &qword_1EBF0B1F8, MEMORY[0x1E4F27928]);
    sub_1C1F115E8(v30, (uint64_t)v9, &qword_1EBF0B1F8, v29);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v17 = sub_1C1F11654(0, *(void *)(v17 + 16) + 1, 1, v17);
    }
    unint64_t v32 = *(void *)(v17 + 16);
    unint64_t v31 = *(void *)(v17 + 24);
    uint64_t v33 = v46;
    if (v32 >= v31 >> 1) {
      unint64_t v17 = sub_1C1F11654(v31 > 1, v32 + 1, 1, v17);
    }
    *(void *)(v17 + 16) = v32 + 1;
    sub_1C1F115E8((uint64_t)v9, v17+ ((*(unsigned __int8 *)(v43 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80))+ *(void *)(v43 + 72) * v32, &qword_1EBF0B1F8, MEMORY[0x1E4F27928]);
    v16 += v37;
    uint64_t v13 = v33 - 1;
  }
  while (v13);
  swift_bridgeObjectRelease();
  return v17;
}

uint64_t sub_1C1F98E50()
{
  sub_1C21478B0();
  sub_1C21478B0();

  return sub_1C21478A0();
}

double sub_1C1F98EBC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return 0.0;
  }
  if (v1 == 1)
  {
    uint64_t v2 = 0;
    double result = 0.0;
LABEL_8:
    uint64_t v6 = v1 - v2;
    uint64_t v7 = (double *)(a1 + 8 * v2 + 32);
    do
    {
      double v8 = *v7++;
      double result = result + v8;
      --v6;
    }
    while (v6);
    return result;
  }
  uint64_t v2 = v1 & 0x7FFFFFFFFFFFFFFELL;
  uint64_t v4 = (double *)(a1 + 40);
  double result = 0.0;
  uint64_t v5 = v1 & 0x7FFFFFFFFFFFFFFELL;
  do
  {
    double result = result + *(v4 - 1) + *v4;
    v4 += 2;
    v5 -= 2;
  }
  while (v5);
  if (v1 != v2) {
    goto LABEL_8;
  }
  return result;
}

uint64_t MedicationChartStatisticsFormatter.deinit()
{
  return v0;
}

uint64_t MedicationChartStatisticsFormatter.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1C1F98F48()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t method lookup function for MedicationChartStatisticsFormatter(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MedicationChartStatisticsFormatter);
}

uint64_t dispatch thunk of static MedicationChartStatisticsFormatter.dateIntervales(startDate:endDate:interval:calendar:)()
{
  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t dispatch thunk of static MedicationChartStatisticsFormatter.stripDate(_:statisticInterval:calendar:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of static MedicationChartStatisticsFormatter.createValueStatisticWindowTuplesFrom(_:startDate:endDate:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of static MedicationChartStatisticsFormatter.transformDateIntervalsToMidpointDate(_:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of static MedicationChartStatisticsFormatter.midpointDate(start:end:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of static MedicationChartStatisticsFormatter.summarizeValuesBelongingTo(dateIntervals:in:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of static MedicationChartStatisticsFormatter.synthesizeDateIntervaledStatisticsWithStartDate(_:endDate:statisticsInterval:statisticCollection:)()
{
  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t dispatch thunk of static MedicationChartStatisticsFormatter.sumOfDoubleValuesIn(_:)()
{
  return (*(uint64_t (**)(void))(v0 + 136))();
}

void sub_1C1F99038(unint64_t a1)
{
  unint64_t v1 = a1;
  unint64_t v2 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_1C214B930();
    swift_bridgeObjectRelease();
    if (v6)
    {
LABEL_3:
      sub_1C1F9938C();
      uint64_t v3 = sub_1C214B7A0();
      uint64_t v4 = v1 & 0xFFFFFFFFFFFFFF8;
      if (!v2) {
        goto LABEL_4;
      }
LABEL_8:
      swift_bridgeObjectRetain();
      uint64_t v5 = sub_1C214B930();
      swift_bridgeObjectRelease();
      if (!v5) {
        return;
      }
      goto LABEL_9;
    }
  }
  else if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  uint64_t v3 = MEMORY[0x1E4FBC870];
  uint64_t v4 = v1 & 0xFFFFFFFFFFFFFF8;
  if (v2) {
    goto LABEL_8;
  }
LABEL_4:
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return;
  }
LABEL_9:
  uint64_t v7 = v3 + 56;
  uint64_t v42 = v5;
  if ((v1 & 0xC000000000000001) != 0)
  {
    uint64_t v8 = 0;
    unint64_t v40 = v1;
    while (1)
    {
      uint64_t v9 = MEMORY[0x1C8753960](v8, v1);
      BOOL v10 = __OFADD__(v8++, 1);
      if (v10)
      {
        __break(1u);
        goto LABEL_37;
      }
      uint64_t v11 = v9;
      uint64_t v12 = sub_1C214B210();
      uint64_t v13 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v14 = v12 & ~v13;
      unint64_t v15 = v14 >> 6;
      uint64_t v16 = *(void *)(v7 + 8 * (v14 >> 6));
      uint64_t v17 = 1 << v14;
      if (((1 << v14) & v16) != 0)
      {
        sub_1C1F99420();
        id v18 = *(id *)(*(void *)(v3 + 48) + 8 * v14);
        char v19 = sub_1C214B220();

        if (v19)
        {
LABEL_11:
          swift_unknownObjectRelease();
          unint64_t v1 = v40;
          goto LABEL_12;
        }
        uint64_t v20 = ~v13;
        while (1)
        {
          unint64_t v14 = (v14 + 1) & v20;
          unint64_t v15 = v14 >> 6;
          uint64_t v16 = *(void *)(v7 + 8 * (v14 >> 6));
          uint64_t v17 = 1 << v14;
          if ((v16 & (1 << v14)) == 0) {
            break;
          }
          id v21 = *(id *)(*(void *)(v3 + 48) + 8 * v14);
          char v22 = sub_1C214B220();

          if (v22) {
            goto LABEL_11;
          }
        }
        unint64_t v1 = v40;
      }
      *(void *)(v7 + 8 * v15) = v17 | v16;
      *(void *)(*(void *)(v3 + 48) + 8 * v14) = v11;
      uint64_t v23 = *(void *)(v3 + 16);
      BOOL v10 = __OFADD__(v23, 1);
      uint64_t v24 = v23 + 1;
      if (v10) {
        goto LABEL_38;
      }
      *(void *)(v3 + 16) = v24;
LABEL_12:
      if (v8 == v42) {
        return;
      }
    }
  }
  uint64_t v25 = 0;
  uint64_t v41 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v25 != v41)
  {
    id v26 = *(id *)(v1 + 32 + 8 * v25);
    uint64_t v27 = sub_1C214B210();
    uint64_t v28 = -1 << *(unsigned char *)(v3 + 32);
    unint64_t v29 = v27 & ~v28;
    unint64_t v30 = v29 >> 6;
    uint64_t v31 = *(void *)(v7 + 8 * (v29 >> 6));
    uint64_t v32 = 1 << v29;
    if (((1 << v29) & v31) != 0)
    {
      sub_1C1F99420();
      id v33 = *(id *)(*(void *)(v3 + 48) + 8 * v29);
      char v34 = sub_1C214B220();

      if (v34) {
        goto LABEL_24;
      }
      uint64_t v35 = ~v28;
      unint64_t v29 = (v29 + 1) & v35;
      unint64_t v30 = v29 >> 6;
      uint64_t v31 = *(void *)(v7 + 8 * (v29 >> 6));
      uint64_t v32 = 1 << v29;
      if ((v31 & (1 << v29)) != 0)
      {
        while (1)
        {
          id v36 = *(id *)(*(void *)(v3 + 48) + 8 * v29);
          char v37 = sub_1C214B220();

          if (v37) {
            break;
          }
          unint64_t v29 = (v29 + 1) & v35;
          unint64_t v30 = v29 >> 6;
          uint64_t v31 = *(void *)(v7 + 8 * (v29 >> 6));
          uint64_t v32 = 1 << v29;
          if ((v31 & (1 << v29)) == 0) {
            goto LABEL_32;
          }
        }
LABEL_24:

        uint64_t v5 = v42;
        goto LABEL_25;
      }
LABEL_32:
      uint64_t v5 = v42;
    }
    *(void *)(v7 + 8 * v30) = v32 | v31;
    *(void *)(*(void *)(v3 + 48) + 8 * v29) = v26;
    uint64_t v38 = *(void *)(v3 + 16);
    BOOL v10 = __OFADD__(v38, 1);
    uint64_t v39 = v38 + 1;
    if (v10) {
      goto LABEL_39;
    }
    *(void *)(v3 + 16) = v39;
LABEL_25:
    if (++v25 == v5) {
      return;
    }
  }
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
}

void sub_1C1F9938C()
{
  if (!qword_1EBF0C948)
  {
    sub_1C1F99420();
    sub_1C1F17D6C((unint64_t *)&unk_1EBF0C8B0, (void (*)(uint64_t))sub_1C1F99420);
    unint64_t v0 = sub_1C214B7B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBF0C948);
    }
  }
}

unint64_t sub_1C1F99420()
{
  unint64_t result = qword_1EBF0C8A8;
  if (!qword_1EBF0C8A8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBF0C8A8);
  }
  return result;
}

uint64_t sub_1C1F99460()
{
  return swift_retain();
}

uint64_t sub_1C1F99470(uint64_t a1, char *a2)
{
  char v4 = *a2;
  uint64_t v5 = qword_1EA2C4330;
  swift_retain();
  uint64_t result = sub_1C2148F40();
  if (*(void *)(result + 16) < 8uLL)
  {
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v7 = result;
  uint64_t v8 = v2 + v5;
  uint64_t v9 = *(void *)(sub_1C2148F60() - 8);
  unint64_t v10 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  *(void *)uint64_t v8 = v7;
  *(void *)(v8 + 8) = v7 + v10;
  *(_OWORD *)(v8 + 16) = xmmword_1C2152CE0;
  uint64_t v11 = qword_1EA2C4338;
  uint64_t result = sub_1C2148F40();
  if (*(void *)(result + 16) < 0x1CuLL)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v12 = v2 + v11;
  *(void *)uint64_t v12 = result;
  *(void *)(v12 + 8) = result + v10;
  *(_OWORD *)(v12 + 16) = xmmword_1C2152CF0;
  uint64_t v13 = qword_1EA2C4340;
  uint64_t result = sub_1C2148F40();
  if (*(void *)(result + 16) < 0x28uLL)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v14 = v2 + v13;
  *(void *)uint64_t v14 = result;
  *(void *)(v14 + 8) = result + v10;
  *(_OWORD *)(v14 + 16) = xmmword_1C2152D00;
  uint64_t v15 = qword_1EA2C4348;
  uint64_t result = sub_1C2148F40();
  unint64_t v16 = *(void *)(result + 16);
  if (v16 >= 0x28)
  {
    uint64_t v17 = (uint64_t *)(v2 + v15);
    *uint64_t v17 = result;
    v17[1] = result + v10;
    void v17[2] = 40;
    void v17[3] = (2 * v16) | 1;
    *(void *)(v2 + qword_1EA2C4350) = MEMORY[0x1E4FBC870];
    *(void *)(v2 + qword_1EA2C4318) = a1;
    swift_retain();
    swift_release();
    sub_1C1F9B690(0, (unint64_t *)&qword_1EA2C2DD0, MEMORY[0x1E4F66468], MEMORY[0x1E4FBBE00]);
    sub_1C2148540();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1C214FCD0;
    sub_1C2148520();
    *(unsigned char *)(swift_allocObject() + 16) = v4;
    uint64_t v18 = sub_1C21489B0();
    swift_retain();
    sub_1C1F99E1C();
    swift_release();
    swift_release();
    return v18;
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_1C1F99720(uint64_t a1, void *a2, char a3)
{
  uint64_t v58 = a1;
  int v4 = a3 & 1;
  uint64_t v5 = sub_1C2148710();
  uint64_t v52 = *(void *)(v5 - 8);
  uint64_t v53 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v51 = (char *)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1C2148410();
  uint64_t v56 = *(void *)(v7 - 8);
  uint64_t v57 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = objc_msgSend(a2, sel_traitCollection);
  uint64_t v11 = sub_1C214ADC0();

  int v54 = v4;
  if (v11 < 3 || v4 == 0)
  {
    uint64_t v13 = self;
    double v14 = 3.5;
    if ((objc_msgSend(v13, sel_hk_currentDeviceHas4InchScreen) & 1) == 0)
    {
      if (objc_msgSend(v13, sel_hk_currentDeviceHas4Point7InchScreen)) {
        double v14 = 3.5;
      }
      else {
        double v14 = 4.0;
      }
    }
  }
  else
  {
    double v14 = 44.0;
  }
  uint64_t v15 = self;
  id v16 = objc_msgSend(v15, sel_fractionalWidthDimension_, 0.25);
  id v17 = objc_msgSend(v15, sel_fractionalHeightDimension_, 1.0);
  uint64_t v18 = self;
  id v19 = objc_msgSend(v18, sel_sizeWithWidthDimension_heightDimension_, v16, v17);

  uint64_t v20 = self;
  id v55 = v19;
  id v21 = objc_msgSend(v20, sel_itemWithLayoutSize_, v19);
  sub_1C214AEB0();
  objc_msgSend(v21, sel_setContentInsets_);
  id v22 = objc_msgSend(v15, sel_fractionalWidthDimension_, 1.0);
  id v23 = objc_msgSend(v15, sel_fractionalWidthDimension_, 0.25);
  id v24 = objc_msgSend(v18, sel_sizeWithWidthDimension_heightDimension_, v22, v23);

  uint64_t v25 = self;
  sub_1C1F0ED28();
  uint64_t v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = xmmword_1C214E170;
  *(void *)(v26 + 32) = v21;
  uint64_t v59 = v26;
  sub_1C214A7A0();
  sub_1C1F12718(0, &qword_1EA2C43A0);
  id v27 = v21;
  uint64_t v28 = (void *)sub_1C214A770();
  swift_bridgeObjectRelease();
  id v29 = objc_msgSend(v25, sel_horizontalGroupWithLayoutSize_subitems_, v24, v28);

  sub_1C21483E0();
  id v30 = objc_msgSend(self, sel_sectionWithGroup_, v29);
  objc_msgSend(v30, sel_setContentInsetsReference_, sub_1C21483C0());
  uint64_t v31 = (void *)sub_1C21483A0();
  objc_msgSend(v31, sel_contentInsets);
  double v33 = v32;

  char v34 = (void *)sub_1C21483A0();
  objc_msgSend(v34, sel_contentInsets);
  double v36 = v35;

  objc_msgSend(v30, sel_setContentInsets_, v33, v14, v36, v14);
  if (!v58 && v54)
  {
    char v37 = (void *)sub_1C21483A0();
    objc_msgSend(v37, sel_contentInsets);
    double v39 = v38;

    objc_msgSend(v30, sel_contentInsets);
    objc_msgSend(v30, sel_setContentInsets_, v39 + 30.0);
LABEL_24:
    (*(void (**)(char *, uint64_t))(v56 + 8))(v9, v57);

    return (uint64_t)v30;
  }
  if (v58 < 1) {
    goto LABEL_24;
  }
  unint64_t v40 = v51;
  sub_1C2148660();
  uint64_t v41 = (void *)sub_1C2148700();
  (*(void (**)(char *, uint64_t))(v52 + 8))(v40, v53);
  id v42 = objc_msgSend(v41, sel_boundarySupplementaryItems);

  if (!v42)
  {
    sub_1C1F12718(0, (unint64_t *)&qword_1EA2C43A8);
    sub_1C214A780();
    id v42 = (id)sub_1C214A770();
    swift_bridgeObjectRelease();
  }
  uint64_t v58 = (uint64_t)v27;
  objc_msgSend(v30, sel_setBoundarySupplementaryItems_, v42);

  objc_msgSend(v30, sel_setSupplementaryContentInsetsReference_, 3);
  id v43 = objc_msgSend(v30, sel_boundarySupplementaryItems);
  sub_1C1F12718(0, (unint64_t *)&qword_1EA2C43A8);
  unint64_t v44 = sub_1C214A780();

  id v50 = v24;
  if (!(v44 >> 62))
  {
    uint64_t v45 = *(void *)((v44 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v45) {
      goto LABEL_18;
    }
LABEL_26:

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v56 + 8))(v9, v57);
    return (uint64_t)v30;
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_1C214B930();
  uint64_t v45 = result;
  if (!result) {
    goto LABEL_26;
  }
LABEL_18:
  if (v45 >= 1)
  {
    uint64_t v47 = 0;
    do
    {
      if ((v44 & 0xC000000000000001) != 0) {
        id v48 = (id)MEMORY[0x1C8753960](v47, v44);
      }
      else {
        id v48 = *(id *)(v44 + 8 * v47 + 32);
      }
      uint64_t v49 = v48;
      ++v47;
      objc_msgSend(v48, sel_contentInsets, v50);
      objc_msgSend(v49, sel_setContentInsets_);
      objc_msgSend(v49, sel_contentInsets);
      objc_msgSend(v49, sel_setContentInsets_);
    }
    while (v45 != v47);
    goto LABEL_26;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C1F99E1C()
{
  uint64_t v1 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FBCC28];
  sub_1C1F9B690(0, &qword_1EBF0C7E8, MEMORY[0x1E4FBCC28], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v2 - 8);
  int v4 = (char *)v12 - v3;
  sub_1C1F9B6F4();
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  void v12[2] = *(void *)(v0 + qword_1EA2C4318);
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0CB10);
  swift_retain();
  id v13 = (id)sub_1C214AD80();
  uint64_t v10 = sub_1C214AD20();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v4, 1, 1, v10);
  sub_1C1F24614();
  sub_1C1F9AEE8(&qword_1EA2C4390, (void (*)(uint64_t))sub_1C1F24614);
  sub_1C1F43FD4();
  sub_1C214A0A0();
  sub_1C1F9B7C0((uint64_t)v4, &qword_1EBF0C7E8, v1);

  swift_release();
  swift_allocObject();
  swift_weakInit();
  sub_1C1F9AEE8(&qword_1EA2C4398, (void (*)(uint64_t))sub_1C1F9B6F4);
  sub_1C214A0F0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  swift_beginAccess();
  sub_1C2149E20();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1C1F9A140(unint64_t a1)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1C1F9A1A0(a1);
    return swift_release();
  }
  return result;
}

uint64_t sub_1C1F9A1A0(unint64_t a1)
{
  sub_1C1F9B690(0, (unint64_t *)&qword_1EA2C2DD0, MEMORY[0x1E4F66468], MEMORY[0x1E4FBBE00]);
  uint64_t v3 = *(void *)(sub_1C2148540() - 8);
  uint64_t v4 = *(void *)(v3 + 72);
  unint64_t v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1C2152C90;
  uint64_t v32 = v6;
  unint64_t v33 = a1;
  unint64_t v7 = v6 + v5;
  uint64_t v8 = *(void *)(v1 + qword_1EA2C4330 + 8);
  uint64_t v9 = *(void *)(v1 + qword_1EA2C4330 + 16);
  unint64_t v10 = *(void *)(v1 + qword_1EA2C4330 + 24);
  unint64_t v35 = a1;
  swift_unknownObjectRetain();
  sub_1C2021C24((void (*)(void *__return_ptr, char *))sub_1C1F9B888, (uint64_t)v34, v8, v9, v10);
  swift_unknownObjectRelease();
  sub_1C2148520();
  if (qword_1EBF0CA00 != -1) {
    swift_once();
  }
  unint64_t v31 = v7 + v4;
  uint64_t v30 = v4;
  id v11 = (id)qword_1EBF0CA18;
  swift_bridgeObjectRetain();
  unint64_t v27 = 0xE000000000000000;
  uint64_t v29 = sub_1C2147730();
  swift_bridgeObjectRelease();

  uint64_t v12 = *(void *)(v1 + qword_1EA2C4338 + 8);
  unint64_t v13 = v7;
  unint64_t v28 = v7;
  uint64_t v14 = *(void *)(v1 + qword_1EA2C4338 + 16);
  unint64_t v15 = *(void *)(v1 + qword_1EA2C4338 + 24);
  MEMORY[0x1F4188790](v16);
  unint64_t v27 = v33;
  swift_unknownObjectRetain();
  sub_1C2021C24((void (*)(void *__return_ptr, char *))sub_1C1F9B4EC, (uint64_t)v26, v12, v14, v15);
  swift_unknownObjectRelease();
  uint64_t v17 = sub_1C2148520();
  unint64_t v31 = v13 + 2 * v30;
  uint64_t v18 = *(void *)(v1 + qword_1EA2C4340 + 8);
  uint64_t v19 = *(void *)(v1 + qword_1EA2C4340 + 16);
  unint64_t v20 = *(void *)(v1 + qword_1EA2C4340 + 24);
  MEMORY[0x1F4188790](v17);
  unint64_t v27 = v33;
  swift_unknownObjectRetain();
  sub_1C2021C24((void (*)(void *__return_ptr, char *))sub_1C1F9B888, (uint64_t)v26, v18, v19, v20);
  swift_unknownObjectRelease();
  uint64_t v21 = sub_1C2148520();
  uint64_t v22 = *(void *)(v1 + qword_1EA2C4348 + 8);
  uint64_t v23 = *(void *)(v1 + qword_1EA2C4348 + 16);
  unint64_t v24 = *(void *)(v1 + qword_1EA2C4348 + 24);
  MEMORY[0x1F4188790](v21);
  unint64_t v27 = v33;
  swift_unknownObjectRetain();
  sub_1C2021C24((void (*)(void *__return_ptr, char *))sub_1C1F9B888, (uint64_t)v26, v22, v23, v24);
  swift_unknownObjectRelease();
  sub_1C2148520();
  sub_1C21485B0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C1F9A62C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v33 = a2;
  unint64_t v35 = a3;
  sub_1C1F9B50C();
  uint64_t v5 = v4 - 8;
  MEMORY[0x1F4188790](v4);
  unint64_t v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1F9B690(0, &qword_1EA2C2CA0, MEMORY[0x1E4F66C08], MEMORY[0x1E4FBB718]);
  uint64_t v9 = MEMORY[0x1F4188790](v8 - 8);
  uint64_t v32 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v32 - v11;
  uint64_t v13 = sub_1C2148F60();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  uint64_t v17 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v18 = *(void (**)(void))(v14 + 16);
  char v34 = (char *)&v32 - v19;
  v18();
  ((void (*)(char *, uint64_t, uint64_t))v18)(v12, a1, v13);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v12, 0, 1, v13);
  uint64_t v20 = (uint64_t)&v7[*(int *)(v5 + 56)];
  sub_1C1F9B5A0((uint64_t)v12, (uint64_t)v7);
  sub_1C1F9B5A0(v33, v20);
  uint64_t v21 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
  if (v21((uint64_t)v7, 1, v13) != 1)
  {
    uint64_t v23 = (uint64_t)v32;
    sub_1C1F9B5A0((uint64_t)v7, (uint64_t)v32);
    if (v21(v20, 1, v13) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v14 + 32))(v17, v20, v13);
      sub_1C1F9AEE8(&qword_1EA2C4360, MEMORY[0x1E4F66C08]);
      char v22 = sub_1C214A5A0();
      unint64_t v24 = *(void (**)(char *, uint64_t))(v14 + 8);
      v24(v17, v13);
      uint64_t v25 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F66C08];
      sub_1C1F9B7C0((uint64_t)v12, &qword_1EA2C2CA0, MEMORY[0x1E4F66C08]);
      v24(v32, v13);
      sub_1C1F9B7C0((uint64_t)v7, &qword_1EA2C2CA0, v25);
      goto LABEL_8;
    }
    sub_1C1F9B7C0((uint64_t)v12, &qword_1EA2C2CA0, MEMORY[0x1E4F66C08]);
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v23, v13);
    goto LABEL_6;
  }
  sub_1C1F9B7C0((uint64_t)v12, &qword_1EA2C2CA0, MEMORY[0x1E4F66C08]);
  if (v21(v20, 1, v13) != 1)
  {
LABEL_6:
    sub_1C1F9B634((uint64_t)v7);
    char v22 = 0;
    goto LABEL_8;
  }
  sub_1C1F9B7C0((uint64_t)v7, &qword_1EA2C2CA0, MEMORY[0x1E4F66C08]);
  char v22 = 1;
LABEL_8:
  sub_1C1F243F4();
  uint64_t v27 = v26;
  unint64_t v28 = v35;
  void v35[3] = v26;
  v28[4] = sub_1C1F9AEE8(&qword_1EA2C4380, (void (*)(uint64_t))sub_1C1F243F4);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v28);
  uint64_t result = (*(uint64_t (**)(uint64_t *, char *, uint64_t))(v14 + 32))(boxed_opaque_existential_1, v34, v13);
  *((unsigned char *)boxed_opaque_existential_1 + *(int *)(v27 + 36)) = v22 & 1;
  unint64_t v31 = (uint64_t *)((char *)boxed_opaque_existential_1 + *(int *)(v27 + 40));
  *unint64_t v31 = 0;
  v31[1] = 0xE000000000000000;
  return result;
}

unint64_t sub_1C1F9AAF4@<X0>(uint64_t *a1@<X8>)
{
  sub_1C1F9B690(0, (unint64_t *)&qword_1EA2C2FE8, MEMORY[0x1E4F664F8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v18 - v3;
  uint64_t v5 = sub_1C2148540();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (sub_1C2147D80() == 1)
  {
    uint64_t v9 = sub_1C21485A0();
    unint64_t result = sub_1C2147D80();
    if ((result & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (result < *(void *)(v9 + 16))
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v8, v9+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(void *)(v6 + 72) * result, v5);
      swift_bridgeObjectRelease();
      sub_1C2148530();
      uint64_t v12 = v11;
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      if (v12)
      {
        uint64_t v13 = sub_1C2148770();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v4, 1, 1, v13);
        a1[3] = sub_1C2148790();
        a1[4] = sub_1C1F9AEE8((unint64_t *)&qword_1EA2C3000, MEMORY[0x1E4F66500]);
        __swift_allocate_boxed_opaque_existential_1(a1);
        return sub_1C2148780();
      }
      goto LABEL_7;
    }
    __break(1u);
  }
  else
  {
    if ((unint64_t)(sub_1C2147D80() - 5) < 0xFFFFFFFFFFFFFFFDLL)
    {
LABEL_7:
      a1[3] = sub_1C2148220();
      a1[4] = sub_1C1F9AEE8(&qword_1EA2C2D28, MEMORY[0x1E4F66330]);
      __swift_allocate_boxed_opaque_existential_1(a1);
      return sub_1C2148210();
    }
    id v14 = objc_msgSend(self, sel_separatorColor);
    type metadata accessor for SeparatorHeaderCell();
    sub_1C1F9AEE8(&qword_1EA2C4320, (void (*)(uint64_t))type metadata accessor for SeparatorHeaderCell);
    uint64_t v15 = sub_1C21481D0();
    uint64_t v17 = v16;
    a1[3] = (uint64_t)&type metadata for SeparatorHeaderItem;
    unint64_t result = sub_1C1F9AE94();
    a1[4] = result;
    *a1 = (uint64_t)v14;
    a1[1] = v15;
    a1[2] = v17;
  }
  return result;
}

unint64_t sub_1C1F9AE94()
{
  unint64_t result = qword_1EA2C4328;
  if (!qword_1EA2C4328)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C4328);
  }
  return result;
}

uint64_t sub_1C1F9AEE8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void VisualizationShapeDataSource.__allocating_init(arrangedSections:collapseEmptySections:layoutConstructor:)()
{
}

void VisualizationShapeDataSource.init(arrangedSections:collapseEmptySections:layoutConstructor:)()
{
}

void VisualizationShapeDataSource.__allocating_init(arrangedSections:collapseEmptySections:layoutSectionProvider:)()
{
}

void sub_1C1F9AF88()
{
}

void VisualizationShapeDataSource.init(arrangedSections:collapseEmptySections:layoutSectionProvider:)()
{
}

uint64_t sub_1C1F9AFD0()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t VisualizationShapeDataSource.deinit()
{
  uint64_t v0 = sub_1C21489E0();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t VisualizationShapeDataSource.__deallocating_deinit()
{
  sub_1C21489E0();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

unint64_t sub_1C1F9B178@<X0>(uint64_t *a1@<X8>)
{
  return sub_1C1F9AAF4(a1);
}

Swift::Void __swiftcall VisualizationShapeDataSource.registerCells(for:)(UICollectionView *a1)
{
}

uint64_t sub_1C1F9B274()
{
  return sub_1C1F9AEE8(&qword_1EA2C4360, MEMORY[0x1E4F66C08]);
}

uint64_t sub_1C1F9B2BC()
{
  return sub_1C214ACC0();
}

uint64_t type metadata accessor for VisualizationShapeDataSource()
{
  uint64_t result = qword_1EA2C4368;
  if (!qword_1EA2C4368) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C1F9B3E0()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for VisualizationShapeDataSource(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for VisualizationShapeDataSource);
}

uint64_t dispatch thunk of VisualizationShapeDataSource.currentValuePublisher.getter()
{
  return (*(uint64_t (**)(void))(class metadata base offset for VisualizationShapeDataSource + *v0 + 48))();
}

uint64_t dispatch thunk of VisualizationShapeDataSource.supplementaryItem(ofKind:at:)()
{
  return (*(uint64_t (**)(void))(class metadata base offset for VisualizationShapeDataSource + *v0 + 224))();
}

uint64_t sub_1C1F9B4E4()
{
  return type metadata accessor for VisualizationShapeDataSource();
}

uint64_t sub_1C1F9B4EC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1C1F9A62C(a1, *(void *)(v2 + 16), a2);
}

void sub_1C1F9B50C()
{
  if (!qword_1EA2C4378)
  {
    sub_1C1F9B690(255, &qword_1EA2C2CA0, MEMORY[0x1E4F66C08], MEMORY[0x1E4FBB718]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA2C4378);
    }
  }
}

uint64_t sub_1C1F9B5A0(uint64_t a1, uint64_t a2)
{
  sub_1C1F9B690(0, &qword_1EA2C2CA0, MEMORY[0x1E4F66C08], MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C1F9B634(uint64_t a1)
{
  sub_1C1F9B50C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1C1F9B690(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1C1F9B6F4()
{
  if (!qword_1EA2C4388)
  {
    sub_1C1F24614();
    sub_1C1F12718(255, (unint64_t *)&qword_1EBF0CB10);
    sub_1C1F9AEE8(&qword_1EA2C4390, (void (*)(uint64_t))sub_1C1F24614);
    sub_1C1F43FD4();
    unint64_t v0 = sub_1C2149DF0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C4388);
    }
  }
}

uint64_t sub_1C1F9B7C0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1C1F9B690(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1C1F9B830()
{
  swift_weakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C1F9B868(unint64_t a1)
{
  return sub_1C1F9A140(a1);
}

uint64_t sub_1C1F9B870()
{
  return MEMORY[0x1F4186498](v0, 17, 7);
}

uint64_t sub_1C1F9B880(uint64_t a1, void *a2)
{
  return sub_1C1F99720(a1, a2, *(unsigned char *)(v2 + 16));
}

uint64_t sub_1C1F9B888@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1C1F9B4EC(a1, a2);
}

uint64_t sub_1C1F9B8A0(uint64_t a1, void *a2)
{
  sub_1C1F1CC94(a1, (uint64_t)v5, (unint64_t *)&qword_1EBF0C300, (void (*)(uint64_t))sub_1C1F1CB5C);
  uint64_t v3 = *a2 + OBJC_IVAR____TtC19HealthMedicationsUI28InteractionFactorsHeaderCell_item;
  swift_beginAccess();
  sub_1C1F1CADC((uint64_t)v5, v3);
  return swift_endAccess();
}

uint64_t sub_1C1F9B924@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI28InteractionFactorsHeaderCell_item;
  swift_beginAccess();
  return sub_1C1F1CC94(v3, a1, (unint64_t *)&qword_1EBF0C300, (void (*)(uint64_t))sub_1C1F1CB5C);
}

uint64_t sub_1C1F9B994(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI28InteractionFactorsHeaderCell_item;
  swift_beginAccess();
  sub_1C1F1CADC(a1, v3);
  return swift_endAccess();
}

uint64_t (*sub_1C1F9B9F0())()
{
  return j_j__swift_endAccess;
}

id sub_1C1F9BA4C()
{
  return sub_1C1F9BD7C(&OBJC_IVAR____TtC19HealthMedicationsUI28InteractionFactorsHeaderCell____lazy_storage___titleLabel, (uint64_t (*)(void))sub_1C1F9BA6C);
}

id sub_1C1F9BA6C()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8E0);
  uint64_t v1 = (void *)sub_1C214B0A0();
  objc_msgSend(v0, sel_setFont_, v1);

  if (qword_1EBF0CA00 != -1) {
    swift_once();
  }
  id v2 = (id)qword_1EBF0CA18;
  swift_bridgeObjectRetain();
  sub_1C2147730();
  swift_bridgeObjectRelease();

  uint64_t v3 = (void *)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_setText_, v3, 0xE000000000000000);

  sub_1C214A5F0();
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  id v4 = v0;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  uint64_t v5 = (void *)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_setAccessibilityIdentifier_, v5);

  id v6 = objc_msgSend(self, sel_labelColor);
  objc_msgSend(v4, sel_setTextColor_, v6);

  objc_msgSend(v4, sel_setTextAlignment_, 1);
  objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v4, sel_setNumberOfLines_, 0);
  objc_msgSend(v4, sel_setAdjustsFontForContentSizeCategory_, 1);
  LODWORD(v7) = 1036831949;
  objc_msgSend(v4, sel__setHyphenationFactor_, v7);
  return v4;
}

id sub_1C1F9BD5C()
{
  return sub_1C1F9BD7C(&OBJC_IVAR____TtC19HealthMedicationsUI28InteractionFactorsHeaderCell____lazy_storage___subtitleLabel, (uint64_t (*)(void))sub_1C1F9BDDC);
}

id sub_1C1F9BD7C(uint64_t *a1, uint64_t (*a2)(void))
{
  uint64_t v3 = *a1;
  id v4 = *(void **)(v2 + *a1);
  if (v4)
  {
    id v5 = *(id *)(v2 + *a1);
  }
  else
  {
    id v6 = (void *)a2();
    double v7 = *(void **)(v2 + v3);
    *(void *)(v2 + v3) = v6;
    id v5 = v6;

    id v4 = 0;
  }
  id v8 = v4;
  return v5;
}

id sub_1C1F9BDDC()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8E0);
  uint64_t v1 = (void *)sub_1C214B0A0();
  objc_msgSend(v0, sel_setFont_, v1);

  if (qword_1EBF0CA00 != -1) {
    swift_once();
  }
  id v2 = (id)qword_1EBF0CA18;
  swift_bridgeObjectRetain();
  sub_1C2147730();
  swift_bridgeObjectRelease();

  uint64_t v3 = (void *)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_setText_, v3, 0xE000000000000000);

  sub_1C214A5F0();
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  id v4 = v0;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  id v5 = (void *)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_setAccessibilityIdentifier_, v5);

  id v6 = objc_msgSend(self, sel_labelColor);
  objc_msgSend(v4, sel_setTextColor_, v6);

  objc_msgSend(v4, sel_setTextAlignment_, 1);
  objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v4, sel_setNumberOfLines_, 0);
  objc_msgSend(v4, sel_setAdjustsFontForContentSizeCategory_, 1);
  return v4;
}

uint64_t type metadata accessor for InteractionFactorsHeaderCell()
{
  return self;
}

void sub_1C1F9C25C()
{
  id v1 = objc_msgSend(v0, sel_contentView);
  id v2 = sub_1C1F9BA4C();
  objc_msgSend(v1, sel_addSubview_, v2);

  id v3 = objc_msgSend(v0, sel_contentView);
  id v4 = sub_1C1F9BD5C();
  objc_msgSend(v3, sel_addSubview_, v4);

  uint64_t v41 = self;
  sub_1C1F0ED28();
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1C21518E0;
  id v6 = sub_1C1F9BA4C();
  id v7 = objc_msgSend(v6, sel_topAnchor);

  id v8 = objc_msgSend(v0, sel_contentView);
  id v9 = objc_msgSend(v8, sel_topAnchor);

  id v10 = objc_msgSend(v7, sel_constraintEqualToAnchor_, v9);
  *(void *)(v5 + 32) = v10;
  id v11 = sub_1C1F9BA4C();
  id v12 = objc_msgSend(v11, sel_leadingAnchor);

  id v13 = objc_msgSend(v0, sel_contentView);
  id v14 = objc_msgSend(v13, sel_leadingAnchor);

  if (qword_1EA2C2728 != -1) {
    swift_once();
  }
  id v15 = objc_msgSend(v12, sel_constraintEqualToAnchor_constant_, v14, *(double *)&qword_1EA2C80B8);

  *(void *)(v5 + 40) = v15;
  id v16 = sub_1C1F9BA4C();
  id v17 = objc_msgSend(v16, sel_trailingAnchor);

  id v18 = objc_msgSend(v0, sel_contentView);
  id v19 = objc_msgSend(v18, sel_trailingAnchor);

  id v20 = objc_msgSend(v17, sel_constraintEqualToAnchor_constant_, v19, -*(double *)&qword_1EA2C80C8);
  *(void *)(v5 + 48) = v20;
  id v21 = sub_1C1F9BD5C();
  id v22 = objc_msgSend(v21, sel_leadingAnchor);

  id v23 = objc_msgSend(v0, sel_contentView);
  id v24 = objc_msgSend(v23, sel_leadingAnchor);

  id v25 = objc_msgSend(v22, sel_constraintEqualToAnchor_constant_, v24, *(double *)&qword_1EA2C80B8);
  *(void *)(v5 + 56) = v25;
  id v26 = sub_1C1F9BD5C();
  id v27 = objc_msgSend(v26, sel_trailingAnchor);

  id v28 = objc_msgSend(v0, sel_contentView);
  id v29 = objc_msgSend(v28, sel_trailingAnchor);

  id v30 = objc_msgSend(v27, sel_constraintEqualToAnchor_constant_, v29, -*(double *)&qword_1EA2C80C8);
  *(void *)(v5 + 64) = v30;
  id v31 = sub_1C1F9BD5C();
  id v32 = objc_msgSend(v31, sel_topAnchor);

  id v33 = sub_1C1F9BA4C();
  id v34 = objc_msgSend(v33, sel_bottomAnchor);

  id v35 = objc_msgSend(v32, sel_constraintEqualToAnchor_constant_, v34, 15.0);
  *(void *)(v5 + 72) = v35;
  id v36 = sub_1C1F9BD5C();
  id v37 = objc_msgSend(v36, sel_bottomAnchor);

  id v38 = objc_msgSend(v0, sel_contentView);
  id v39 = objc_msgSend(v38, sel_bottomAnchor);

  id v40 = objc_msgSend(v37, sel_constraintEqualToAnchor_, v39);
  *(void *)(v5 + 80) = v40;
  sub_1C214A7A0();
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C810);
  id v42 = (id)sub_1C214A770();
  swift_bridgeObjectRelease();
  objc_msgSend(v41, sel_activateConstraints_, v42);
}

uint64_t sub_1C1F9C75C()
{
  id v1 = v0;
  sub_1C1F1CC40(0, &qword_1EBF0C620, MEMORY[0x1E4FB0F28]);
  uint64_t v3 = MEMORY[0x1F4188790](v2 - 8);
  uint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  id v7 = (char *)&v14 - v6;
  id v8 = (void *)sub_1C2149950();
  id v9 = (objc_class *)type metadata accessor for InteractionFactorsHeaderCell();
  v14.receiver = v1;
  v14.super_class = v9;
  objc_msgSendSuper2(&v14, sel__bridgedUpdateConfigurationUsingState_, v8);

  MEMORY[0x1C8752FE0]();
  uint64_t v10 = sub_1C21499D0();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v7, 1, v10))
  {
    id v11 = (void (*)(uint64_t))MEMORY[0x1E4FB0F28];
    sub_1C1F1CC94((uint64_t)v7, (uint64_t)v5, &qword_1EBF0C620, MEMORY[0x1E4FB0F28]);
    MEMORY[0x1C8752FF0](v5);
    return sub_1C1F1CD00((uint64_t)v7, &qword_1EBF0C620, v11);
  }
  else
  {
    id v13 = objc_msgSend(self, sel_clearColor);
    sub_1C2149990();
    return MEMORY[0x1C8752FF0](v7);
  }
}

id InteractionFactorsHeaderCell.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for InteractionFactorsHeaderCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t (*sub_1C1F9CAA4())()
{
  return j__swift_endAccess;
}

uint64_t sub_1C1F9CB00@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC19HealthMedicationsUI28InteractionFactorsHeaderCell_item;
  swift_beginAccess();
  return sub_1C1F1CC94(v3, a2, (unint64_t *)&qword_1EBF0C300, (void (*)(uint64_t))sub_1C1F1CB5C);
}

uint64_t method lookup function for InteractionFactorsHeaderCell(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for InteractionFactorsHeaderCell);
}

uint64_t dispatch thunk of InteractionFactorsHeaderCell.item.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of InteractionFactorsHeaderCell.item.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of InteractionFactorsHeaderCell.item.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x78))();
}

uint64_t sub_1C1F9CC2C()
{
  return MedicationOnboardingDataSource.cellBackgroundConfiguration.getter();
}

uint64_t MedicationOnboardingDataSource.cellBackgroundConfiguration.getter()
{
  sub_1C21499A0();
  id v0 = objc_msgSend(self, sel_secondarySystemBackgroundColor);
  return sub_1C2149990();
}

uint64_t dispatch thunk of MedicationOnboardingDataSource.currentValuePublisher.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of MedicationOnboardingDataSource.cellBackgroundConfiguration.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t sub_1C1F9CCB8()
{
  sub_1C21499A0();
  id v0 = objc_msgSend(self, sel_secondarySystemBackgroundColor);
  return sub_1C2149990();
}

uint64_t sub_1C1F9CD00@<X0>(uint64_t *a1@<X8>)
{
  unint64_t v2 = sub_1C2149740();
  uint64_t v3 = sub_1C1F6501C(v2);
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v3;
  return result;
}

uint64_t sub_1C1F9CD48()
{
  if (*v0)
  {
    if (qword_1EA2C2710 != -1) {
      swift_once();
    }
  }
  else if (qword_1EA2C2710 != -1)
  {
    swift_once();
  }
  id v1 = (id)qword_1EA2C5D90;
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_1C2147730();
  swift_bridgeObjectRelease();

  return v2;
}

BOOL static MedicationInformationImportance.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t MedicationInformationImportance.hash(into:)()
{
  return sub_1C214BB40();
}

uint64_t MedicationInformationImportance.hashValue.getter()
{
  return sub_1C214BB80();
}

unint64_t sub_1C1F9CF20()
{
  unint64_t result = qword_1EA2C43C8;
  if (!qword_1EA2C43C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C43C8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for MedicationInformationImportance(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C1F9D040);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MedicationInformationImportance()
{
  return &type metadata for MedicationInformationImportance;
}

uint64_t type metadata accessor for PregnancyLactationEducationDataSource()
{
  uint64_t result = qword_1EA2C43E0;
  if (!qword_1EA2C43E0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C1F9D0C4()
{
  return swift_initClassMetadata2();
}

void sub_1C1F9D110()
{
}

uint64_t sub_1C1F9D140()
{
  _s19HealthMedicationsUI34InteractionSeperatorLineDataSourceCfd_0();

  return swift_deallocClassInstance();
}

uint64_t sub_1C1F9D170()
{
  return type metadata accessor for PregnancyLactationEducationDataSource();
}

uint64_t sub_1C1F9D178()
{
  return sub_1C214ACE0();
}

uint64_t sub_1C1F9D200()
{
  return sub_1C1F9D838();
}

uint64_t sub_1C1F9D228()
{
  return sub_1C2148B80();
}

uint64_t sub_1C1F9D2A4@<X0>(uint64_t *a1@<X8>)
{
  sub_1C1F9D95C();
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(v9[0]) = *(unsigned char *)(*v1 + qword_1EA2C43D0);
  v9[0] = sub_1C1F9CD48();
  v9[1] = v6;
  sub_1C1F40B78();
  sub_1C214B570();
  swift_bridgeObjectRelease();
  uint64_t v7 = sub_1C2148770();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v5, 1, 1, v7);
  a1[3] = sub_1C2148790();
  a1[4] = sub_1C1F9D9B4((unint64_t *)&qword_1EA2C3000, MEMORY[0x1E4F66500]);
  __swift_allocate_boxed_opaque_existential_1(a1);
  return sub_1C2148780();
}

uint64_t sub_1C1F9D434()
{
  return sub_1C1F9D9B4(&qword_1EA2C43F0, (void (*)(uint64_t))type metadata accessor for PregnancyLactationEducationDataSource);
}

uint64_t sub_1C1F9D47C(uint64_t a1, unsigned __int8 *a2, char *a3)
{
  char v3 = *a3;
  int v29 = *a2;
  v30[0] = v29;
  unint64_t v5 = Array<A>.groupByCritical(for:)(v30, a1);
  if (v3)
  {
    *(void *)id v30 = v4;
    swift_bridgeObjectRetain();
    unint64_t v6 = swift_bridgeObjectRetain();
    sub_1C1F7D364(v6);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v5 = *(void *)v30;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (v5 >> 62) {
    goto LABEL_18;
  }
  uint64_t v7 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v7)
  {
    while (1)
    {
      uint64_t v33 = MEMORY[0x1E4FBC860];
      sub_1C1F704CC(0, v7 & ~(v7 >> 63), 0);
      if (v7 < 0) {
        break;
      }
      uint64_t v8 = v33;
      type metadata accessor for MedicationInformationOverviewCell();
      uint64_t v9 = 0;
      unint64_t v28 = v5 & 0xC000000000000001;
      unsigned int v27 = v29 - 1;
      unint64_t v10 = v5;
      while (v7 != v9)
      {
        if (v28) {
          id v11 = (id)MEMORY[0x1C8753960](v9, v5);
        }
        else {
          id v11 = *(id *)(v5 + 8 * v9 + 32);
        }
        id v12 = v11;
        uint64_t v13 = type metadata accessor for MedicationInformationOverviewItem();
        uint64_t v14 = swift_allocObject();
        sub_1C1F9D9B4(&qword_1EA2C43F8, (void (*)(uint64_t))type metadata accessor for MedicationInformationOverviewCell);
        id v15 = v12;
        *(void *)(v14 + 32) = sub_1C21481D0();
        *(void *)(v14 + 40) = v16;
        *(void *)(v14 + 16) = v15;
        *(unsigned char *)(v14 + 24) = v29;
        if (v27 >= 2) {
          goto LABEL_22;
        }
        uint64_t v31 = v13;
        uint64_t v32 = sub_1C1F9D9B4(&qword_1EA2C4408, (void (*)(uint64_t))type metadata accessor for MedicationInformationOverviewItem);

        *(void *)id v30 = v14;
        uint64_t v33 = v8;
        unint64_t v18 = *(void *)(v8 + 16);
        unint64_t v17 = *(void *)(v8 + 24);
        if (v18 >= v17 >> 1) {
          sub_1C1F704CC(v17 > 1, v18 + 1, 1);
        }
        ++v9;
        uint64_t v19 = v31;
        uint64_t v20 = v32;
        uint64_t v21 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v30, v31);
        MEMORY[0x1F4188790](v21);
        id v23 = (char *)&v26 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *))(v24 + 16))(v23);
        sub_1C20A09B8(v18, (uint64_t)v23, &v33, v19, v20);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v30);
        uint64_t v8 = v33;
        unint64_t v5 = v10;
        if (v7 == v9)
        {
          swift_bridgeObjectRelease();
          return v8;
        }
      }
      __break(1u);
LABEL_18:
      swift_bridgeObjectRetain();
      uint64_t v7 = sub_1C214B930();
      swift_bridgeObjectRelease();
      if (!v7) {
        goto LABEL_19;
      }
    }
    __break(1u);
LABEL_22:
    uint64_t result = sub_1C214B910();
    __break(1u);
  }
  else
  {
LABEL_19:
    swift_bridgeObjectRelease();
    return MEMORY[0x1E4FBC860];
  }
  return result;
}

uint64_t sub_1C1F9D838()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1C2148710();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  unint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned char *)(v1 + qword_1EA2C43D8) == 1)
  {
    sub_1C2148660();
    sub_1C21486B0();
  }
  else
  {
    sub_1C2148690();
    sub_1C21486B0();
    sub_1C21486F0();
  }
  uint64_t v6 = sub_1C2148700();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v6;
}

void sub_1C1F9D95C()
{
  if (!qword_1EA2C2FE8)
  {
    sub_1C2148770();
    unint64_t v0 = sub_1C214B4F0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C2FE8);
    }
  }
}

uint64_t sub_1C1F9D9B4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t MedicationDetailsCardItem.init(detailsDisplayable:medication:)@<X0>(long long *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for MedicationDetailsCardItem();
  sub_1C2147B10();
  uint64_t v7 = (uint64_t *)(a3 + *(int *)(v6 + 28));
  type metadata accessor for MedicationDetailsCardCell();
  sub_1C1F9DCC4((unint64_t *)&unk_1EA2C4410, v8, (void (*)(uint64_t))type metadata accessor for MedicationDetailsCardCell);
  *uint64_t v7 = sub_1C21481D0();
  v7[1] = v9;
  uint64_t result = sub_1C1F31280(a1, a3);
  *(void *)(a3 + *(int *)(v6 + 24)) = a2;
  return result;
}

uint64_t type metadata accessor for MedicationDetailsCardItem()
{
  uint64_t result = qword_1EA2C4498;
  if (!qword_1EA2C4498) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for MedicationDetailsCardCell()
{
  return self;
}

uint64_t MedicationDetailsCardItem.reuseIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for MedicationDetailsCardItem() + 28));
  swift_bridgeObjectRetain();
  return v1;
}

unint64_t MedicationDetailsCardItem.uniqueIdentifier.getter()
{
  return 0xD000000000000010;
}

uint64_t static MedicationDetailsCardItem.== infix(_:_:)()
{
  type metadata accessor for MedicationDetailsCardItem();

  return sub_1C2147AF0();
}

uint64_t MedicationDetailsCardItem.hash(into:)()
{
  return sub_1C214A560();
}

uint64_t sub_1C1F9DCC4(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t MedicationDetailsCardItem.hashValue.getter()
{
  return sub_1C214BB80();
}

uint64_t sub_1C1F9DDA8()
{
  return sub_1C214BB80();
}

uint64_t sub_1C1F9DE40()
{
  return sub_1C214A560();
}

uint64_t sub_1C1F9DEC4()
{
  return sub_1C214BB80();
}

uint64_t sub_1C1F9DF58()
{
  return sub_1C2147AF0();
}

id sub_1C1F9DF6C()
{
  uint64_t v1 = OBJC_IVAR____TtC19HealthMedicationsUI25MedicationDetailsCardCell____lazy_storage___pillImageView;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI25MedicationDetailsCardCell____lazy_storage___pillImageView);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI25MedicationDetailsCardCell____lazy_storage___pillImageView);
  }
  else
  {
    id v4 = objc_msgSend(objc_allocWithZone((Class)sub_1C2148EF0()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    unint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_1C1F9E004()
{
  uint64_t v1 = OBJC_IVAR____TtC19HealthMedicationsUI25MedicationDetailsCardCell____lazy_storage___titleLabel;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI25MedicationDetailsCardCell____lazy_storage___titleLabel);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI25MedicationDetailsCardCell____lazy_storage___titleLabel);
  }
  else
  {
    uint64_t v4 = v0;
    id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
    LODWORD(v6) = 1148846080;
    objc_msgSend(v5, sel_setContentHuggingPriority_forAxis_, 1, v6);
    objc_msgSend(v5, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    uint64_t v14 = sub_1C214A5F0();
    uint64_t v15 = v7;
    swift_bridgeObjectRetain();
    sub_1C214A6C0();
    id v8 = v5;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_1C214A6C0();
    swift_bridgeObjectRelease();
    uint64_t v9 = (void *)sub_1C214A5B0();
    swift_bridgeObjectRelease();
    objc_msgSend(v8, sel_setAccessibilityIdentifier_, v9, v14, v15);

    objc_msgSend(v8, sel_setNumberOfLines_, 0);
    sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8E0);
    unint64_t v10 = (void *)sub_1C214B0A0();
    objc_msgSend(v8, sel_setFont_, v10);

    id v11 = *(void **)(v4 + v1);
    *(void *)(v4 + v1) = v8;
    id v3 = v8;

    uint64_t v2 = 0;
  }
  id v12 = v2;
  return v3;
}

id sub_1C1F9E1F4()
{
  uint64_t v1 = OBJC_IVAR____TtC19HealthMedicationsUI25MedicationDetailsCardCell____lazy_storage___captionLabel;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI25MedicationDetailsCardCell____lazy_storage___captionLabel);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI25MedicationDetailsCardCell____lazy_storage___captionLabel);
  }
  else
  {
    uint64_t v4 = v0;
    id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
    objc_msgSend(v5, sel_setNumberOfLines_, 0);
    uint64_t v13 = sub_1C214A5F0();
    uint64_t v14 = v6;
    swift_bridgeObjectRetain();
    sub_1C214A6C0();
    id v7 = v5;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_1C214A6C0();
    swift_bridgeObjectRelease();
    id v8 = (void *)sub_1C214A5B0();
    swift_bridgeObjectRelease();
    objc_msgSend(v7, sel_setAccessibilityIdentifier_, v8, v13, v14);

    objc_msgSend(v7, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8E0);
    uint64_t v9 = (void *)sub_1C214B0A0();
    objc_msgSend(v7, sel_setFont_, v9);

    unint64_t v10 = *(void **)(v4 + v1);
    *(void *)(v4 + v1) = v7;
    id v3 = v7;

    uint64_t v2 = 0;
  }
  id v11 = v2;
  return v3;
}

id sub_1C1F9E3C8()
{
  uint64_t v1 = OBJC_IVAR____TtC19HealthMedicationsUI25MedicationDetailsCardCell____lazy_storage___separatorView;
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC19HealthMedicationsUI25MedicationDetailsCardCell____lazy_storage___separatorView];
  if (v2)
  {
    id v3 = *(id *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI25MedicationDetailsCardCell____lazy_storage___separatorView];
  }
  else
  {
    id v4 = sub_1C1F9E42C(v0);
    id v5 = *(void **)&v0[v1];
    *(void *)&v0[v1] = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_1C1F9E42C(void *a1)
{
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F67C08]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  HKUIOnePixel();
  objc_msgSend(v2, sel_setSeparatorThickness_);
  id v3 = objc_msgSend(self, sel_separatorColor);
  objc_msgSend(v2, sel_setColor_, v3);

  objc_msgSend(v2, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  id v4 = v2;
  id v5 = objc_msgSend(a1, sel_traitCollection);
  id v6 = objc_msgSend(v5, sel_horizontalSizeClass);

  objc_msgSend(v4, sel_setHidden_, v6 == (id)2);
  return v4;
}

id sub_1C1F9E53C()
{
  uint64_t v1 = OBJC_IVAR____TtC19HealthMedicationsUI25MedicationDetailsCardCell____lazy_storage___notesLabel;
  id v2 = *(void **)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI25MedicationDetailsCardCell____lazy_storage___notesLabel);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI25MedicationDetailsCardCell____lazy_storage___notesLabel);
  }
  else
  {
    uint64_t v4 = v0;
    id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
    objc_msgSend(v5, sel_setNumberOfLines_, 0);
    objc_msgSend(v5, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    uint64_t v14 = sub_1C214A5F0();
    uint64_t v15 = v6;
    swift_bridgeObjectRetain();
    sub_1C214A6C0();
    id v7 = v5;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_1C214A6C0();
    swift_bridgeObjectRelease();
    id v8 = (void *)sub_1C214A5B0();
    swift_bridgeObjectRelease();
    objc_msgSend(v7, sel_setAccessibilityIdentifier_, v8, v14, v15);

    sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8E0);
    uint64_t v9 = (void *)sub_1C214B0A0();
    objc_msgSend(v7, sel_setFont_, v9);

    id v10 = objc_msgSend(self, sel_secondaryLabelColor);
    objc_msgSend(v7, sel_setTextColor_, v10);

    id v11 = *(void **)(v4 + v1);
    *(void *)(v4 + v1) = v7;
    id v3 = v7;

    id v2 = 0;
  }
  id v12 = v2;
  return v3;
}

uint64_t sub_1C1F9E748()
{
  return sub_1C1F9F09C(&OBJC_IVAR____TtC19HealthMedicationsUI25MedicationDetailsCardCell____lazy_storage___pillImageConstraints, (uint64_t (*)(uint64_t))sub_1C1F9E768);
}

uint64_t sub_1C1F9E768(char *a1)
{
  sub_1C1F13D64(0, (unint64_t *)&qword_1EBF0CA10, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1C21510C0;
  id v3 = sub_1C1F9DF6C();
  id v4 = objc_msgSend(v3, sel_topAnchor);

  id v5 = objc_msgSend(a1, sel_contentView);
  id v6 = objc_msgSend(v5, sel_topAnchor);

  id v7 = objc_msgSend(a1, sel_traitCollection);
  id v8 = objc_msgSend(v7, sel_horizontalSizeClass);

  double v9 = 24.0;
  if (v8 == (id)1) {
    double v9 = 16.0;
  }
  id v10 = objc_msgSend(v4, sel_constraintEqualToAnchor_constant_, v6, v9);

  *(void *)(v2 + 32) = v10;
  id v11 = sub_1C1F9DF6C();
  id v12 = objc_msgSend(v11, sel_leadingAnchor);

  id v13 = objc_msgSend(a1, sel_contentView);
  id v14 = objc_msgSend(v13, sel_layoutMarginsGuide);

  id v15 = objc_msgSend(v14, sel_leadingAnchor);
  id v16 = objc_msgSend(v12, sel_constraintEqualToAnchor_, v15);

  *(void *)(v2 + 40) = v16;
  id v17 = sub_1C1F9DF6C();
  id v18 = objc_msgSend(v17, sel_widthAnchor);

  uint64_t v19 = OBJC_IVAR____TtC19HealthMedicationsUI25MedicationDetailsCardCell_pillImageSize;
  id v20 = objc_msgSend(v18, sel_constraintEqualToConstant_, *(double *)&a1[OBJC_IVAR____TtC19HealthMedicationsUI25MedicationDetailsCardCell_pillImageSize]);

  *(void *)(v2 + 48) = v20;
  id v21 = sub_1C1F9DF6C();
  id v22 = objc_msgSend(v21, sel_heightAnchor);

  id v23 = objc_msgSend(v22, sel_constraintEqualToConstant_, *(double *)&a1[v19]);
  *(void *)(v2 + 56) = v23;
  sub_1C214A7A0();
  return v2;
}

uint64_t sub_1C1F9EA04()
{
  return sub_1C1F9F09C(&OBJC_IVAR____TtC19HealthMedicationsUI25MedicationDetailsCardCell____lazy_storage___notesConstraints, (uint64_t (*)(uint64_t))sub_1C1F9EA24);
}

uint64_t sub_1C1F9EA24(char *a1)
{
  sub_1C1F13D64(0, (unint64_t *)&qword_1EBF0CA10, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1C21518E0;
  id v3 = sub_1C1F9E1F4();
  id v4 = objc_msgSend(v3, sel_bottomAnchor);

  id v5 = sub_1C1F9E3C8();
  id v6 = objc_msgSend(v5, sel_topAnchor);

  uint64_t v7 = OBJC_IVAR____TtC19HealthMedicationsUI25MedicationDetailsCardCell_separatorToNoteMargin;
  id v8 = objc_msgSend(v4, sel_constraintEqualToAnchor_constant_, v6, -*(double *)&a1[OBJC_IVAR____TtC19HealthMedicationsUI25MedicationDetailsCardCell_separatorToNoteMargin]);

  *(void *)(v2 + 32) = v8;
  id v9 = sub_1C1F9E3C8();
  id v10 = objc_msgSend(v9, sel_leadingAnchor);

  id v11 = sub_1C1F9E1F4();
  id v12 = objc_msgSend(v11, sel_leadingAnchor);

  id v13 = objc_msgSend(v10, sel_constraintEqualToAnchor_, v12);
  *(void *)(v2 + 40) = v13;
  id v14 = sub_1C1F9E3C8();
  id v15 = objc_msgSend(v14, sel_trailingAnchor);

  id v16 = sub_1C1F9E1F4();
  id v17 = objc_msgSend(v16, sel_trailingAnchor);

  id v18 = objc_msgSend(v15, sel_constraintEqualToAnchor_, v17);
  *(void *)(v2 + 48) = v18;
  id v19 = sub_1C1F9E3C8();
  id v20 = objc_msgSend(v19, sel_bottomAnchor);

  id v21 = sub_1C1F9E53C();
  id v22 = objc_msgSend(v21, sel_topAnchor);

  id v23 = objc_msgSend(v20, sel_constraintEqualToAnchor_constant_, v22, -*(double *)&a1[v7]);
  *(void *)(v2 + 56) = v23;
  id v24 = sub_1C1F9E53C();
  id v25 = objc_msgSend(v24, sel_leadingAnchor);

  id v26 = sub_1C1F9E3C8();
  id v27 = objc_msgSend(v26, sel_leadingAnchor);

  id v28 = objc_msgSend(v25, sel_constraintEqualToAnchor_, v27);
  *(void *)(v2 + 64) = v28;
  id v29 = sub_1C1F9E53C();
  id v30 = objc_msgSend(v29, sel_trailingAnchor);

  id v31 = sub_1C1F9E3C8();
  id v32 = objc_msgSend(v31, sel_trailingAnchor);

  id v33 = objc_msgSend(v30, sel_constraintEqualToAnchor_, v32);
  *(void *)(v2 + 72) = v33;
  id v34 = sub_1C1F9E53C();
  id v35 = objc_msgSend(v34, sel_bottomAnchor);

  id v36 = objc_msgSend(a1, sel_contentView);
  id v37 = objc_msgSend(v36, sel_bottomAnchor);

  id v38 = objc_msgSend(a1, sel_traitCollection);
  id v39 = objc_msgSend(v38, sel_horizontalSizeClass);

  double v40 = 24.0;
  if (v39 == (id)1) {
    double v40 = 16.0;
  }
  id v41 = objc_msgSend(v35, sel_constraintEqualToAnchor_constant_, v37, -v40);

  *(void *)(v2 + 80) = v41;
  sub_1C214A7A0();
  return v2;
}

uint64_t sub_1C1F9EE34()
{
  return sub_1C1F9F09C(&OBJC_IVAR____TtC19HealthMedicationsUI25MedicationDetailsCardCell____lazy_storage___emptyNotesConstraints, (uint64_t (*)(uint64_t))sub_1C1F9EE54);
}

uint64_t sub_1C1F9EE54(void *a1)
{
  sub_1C1F13D64(0, (unint64_t *)&qword_1EBF0CA10, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1C214FCB0;
  id v3 = sub_1C1F9E1F4();
  id v4 = objc_msgSend(v3, sel_lastBaselineAnchor);

  id v5 = objc_msgSend(a1, sel_contentView);
  id v6 = objc_msgSend(v5, sel_bottomAnchor);

  id v7 = objc_msgSend(a1, sel_traitCollection);
  id v8 = objc_msgSend(v7, sel_horizontalSizeClass);

  if (v8 == (id)1) {
    double v9 = 16.0;
  }
  else {
    double v9 = 24.0;
  }
  id v10 = objc_msgSend(v4, sel_constraintEqualToAnchor_constant_, v6, -v9);

  *(void *)(v2 + 32) = v10;
  id v11 = sub_1C1F9DF6C();
  id v12 = objc_msgSend(v11, sel_bottomAnchor);

  id v13 = objc_msgSend(a1, sel_contentView);
  id v14 = objc_msgSend(v13, sel_bottomAnchor);

  id v15 = objc_msgSend(a1, sel_traitCollection);
  id v16 = objc_msgSend(v15, sel_horizontalSizeClass);

  if (v16 == (id)1) {
    double v17 = 16.0;
  }
  else {
    double v17 = 24.0;
  }
  id v18 = objc_msgSend(v12, sel_constraintLessThanOrEqualToAnchor_constant_, v14, -v17);

  *(void *)(v2 + 40) = v18;
  sub_1C214A7A0();
  return v2;
}

uint64_t sub_1C1F9F07C()
{
  return sub_1C1F9F09C(&OBJC_IVAR____TtC19HealthMedicationsUI25MedicationDetailsCardCell____lazy_storage___captionConstraints, (uint64_t (*)(uint64_t))sub_1C1F9F104);
}

uint64_t sub_1C1F9F09C(uint64_t *a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(void *)(v2 + *a1);
  if (v4)
  {
    uint64_t v5 = v4;
  }
  else
  {
    uint64_t v5 = a2(v2);
    *(void *)(v2 + v3) = v5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v5;
}

uint64_t sub_1C1F9F104()
{
  sub_1C1F13D64(0, (unint64_t *)&qword_1EBF0CA10, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1C214FCB0;
  id v1 = sub_1C1F9E1F4();
  id v2 = objc_msgSend(v1, sel_leadingAnchor);

  id v3 = sub_1C1F9E004();
  id v4 = objc_msgSend(v3, sel_leadingAnchor);

  id v5 = objc_msgSend(v2, sel_constraintEqualToAnchor_, v4);
  *(void *)(v0 + 32) = v5;
  id v6 = sub_1C1F9E1F4();
  id v7 = objc_msgSend(v6, sel_trailingAnchor);

  id v8 = sub_1C1F9E004();
  id v9 = objc_msgSend(v8, sel_trailingAnchor);

  id v10 = objc_msgSend(v7, sel_constraintEqualToAnchor_, v9);
  *(void *)(v0 + 40) = v10;
  sub_1C214A7A0();
  return v0;
}

id MedicationDetailsCardCell.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  id v9 = objc_allocWithZone(v4);

  return objc_msgSend(v9, sel_initWithFrame_, a1, a2, a3, a4);
}

id MedicationDetailsCardCell.init(frame:)(double a1, double a2, double a3, double a4)
{
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI25MedicationDetailsCardCell____lazy_storage___pillImageView] = 0;
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI25MedicationDetailsCardCell____lazy_storage___titleLabel] = 0;
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI25MedicationDetailsCardCell____lazy_storage___captionLabel] = 0;
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI25MedicationDetailsCardCell____lazy_storage___separatorView] = 0;
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI25MedicationDetailsCardCell____lazy_storage___notesLabel] = 0;
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI25MedicationDetailsCardCell_pillImageSize] = 0x4054000000000000;
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI25MedicationDetailsCardCell_separatorToNoteMargin] = 0x4028000000000000;
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI25MedicationDetailsCardCell____lazy_storage___pillImageConstraints] = 0;
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI25MedicationDetailsCardCell____lazy_storage___notesConstraints] = 0;
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI25MedicationDetailsCardCell____lazy_storage___emptyNotesConstraints] = 0;
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI25MedicationDetailsCardCell____lazy_storage___captionConstraints] = 0;
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI25MedicationDetailsCardCell_titleToPillImageConstraints] = MEMORY[0x1E4FBC860];
  id v9 = &v4[OBJC_IVAR____TtC19HealthMedicationsUI25MedicationDetailsCardCell_item];
  id v10 = (objc_class *)type metadata accessor for MedicationDetailsCardCell();
  *(_OWORD *)id v9 = 0u;
  *((_OWORD *)v9 + 1) = 0u;
  *((void *)v9 + 4) = 0;
  v15.receiver = v4;
  v15.super_class = v10;
  id v11 = objc_msgSendSuper2(&v15, sel_initWithFrame_, a1, a2, a3, a4);
  sub_1C1F9F4A8();
  id v12 = objc_msgSend(v11, sel_traitCollection);
  id v13 = objc_msgSend(v12, sel_horizontalSizeClass);

  if (v13 == (id)1) {
    sub_1C1F9FA90();
  }
  else {
    sub_1C1F9FE6C();
  }

  return v11;
}

id sub_1C1F9F4A8()
{
  id v1 = v0;
  sub_1C1FA20A8(0, &qword_1EBF0C620, MEMORY[0x1E4FB0F28], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v2 - 8);
  id v4 = (char *)&v28 - v3;
  uint64_t v5 = sub_1C21499D0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  id v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2147DE0();
  id v9 = (id)*MEMORY[0x1E4F39EA8];
  sub_1C214B0D0();

  sub_1C21499A0();
  id v10 = objc_msgSend(self, sel_tertiarySystemBackgroundColor);
  sub_1C2149990();
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v4, v8, v5);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
  MEMORY[0x1C8752FF0](v4);
  id result = objc_msgSend(self, sel_sharedBehavior);
  if (result)
  {
    id v12 = result;
    unsigned int v13 = objc_msgSend(result, sel_isAppleInternalInstall);

    if (v13)
    {
      id v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1D38]), sel_initWithTarget_action_, v1, sel_cellTripleTapped_);
      objc_msgSend(v14, sel_setNumberOfTapsRequired_, 3);
      objc_msgSend(v1, sel_addGestureRecognizer_, v14);
    }
    id v15 = objc_msgSend(v1, sel_contentView);
    id v16 = sub_1C1F9DF6C();
    objc_msgSend(v15, sel_addSubview_, v16);

    id v17 = objc_msgSend(v1, sel_contentView);
    id v18 = sub_1C1F9E004();
    objc_msgSend(v17, sel_addSubview_, v18);

    id v19 = objc_msgSend(v1, sel_contentView);
    id v20 = sub_1C1F9E1F4();
    objc_msgSend(v19, sel_addSubview_, v20);

    id v21 = objc_msgSend(v1, sel_contentView);
    id v22 = sub_1C1F9E3C8();
    objc_msgSend(v21, sel_addSubview_, v22);

    id v23 = objc_msgSend(v1, sel_contentView);
    id v24 = sub_1C1F9E53C();
    objc_msgSend(v23, sel_addSubview_, v24);

    sub_1C1FA20A8(0, (unint64_t *)&qword_1EA2C3D80, (uint64_t (*)(uint64_t))sub_1C1F7C864, MEMORY[0x1E4FBBE00]);
    uint64_t v25 = swift_allocObject();
    *(_OWORD *)(v25 + 16) = xmmword_1C214FCD0;
    uint64_t v26 = sub_1C2149BF0();
    uint64_t v27 = MEMORY[0x1E4FB0FA8];
    *(void *)(v25 + 32) = v26;
    *(void *)(v25 + 40) = v27;
    swift_allocObject();
    swift_unknownObjectWeakInit();
    sub_1C1F7C8F0();
    sub_1C214B120();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    return (id)(*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1C1F9F934(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = a3 + 16;
  swift_beginAccess();
  uint64_t v6 = MEMORY[0x1C8754850](v5);
  if (v6)
  {
    uint64_t v7 = (void *)v6;
    id v8 = objc_msgSend(a2, sel_horizontalSizeClass);
    id v9 = objc_msgSend(a1, sel_traitCollection);
    id v10 = objc_msgSend(v9, sel_horizontalSizeClass);

    if (v8 != v10)
    {
      id v11 = self;
      sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C810);
      swift_bridgeObjectRetain();
      id v12 = (void *)sub_1C214A770();
      swift_bridgeObjectRelease();
      objc_msgSend(v11, sel_deactivateConstraints_, v12);

      id v13 = objc_msgSend(v7, sel_traitCollection);
      id v14 = objc_msgSend(v13, sel_horizontalSizeClass);

      if (v14 == (id)1) {
        sub_1C1F9FA90();
      }
      else {
        sub_1C1F9FE6C();
      }
      sub_1C1FA0438();
    }
  }
}

void sub_1C1F9FA90()
{
  id v1 = v0;
  sub_1C1F13D64(0, (unint64_t *)&qword_1EBF0CA10, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1C21510C0;
  id v3 = sub_1C1F9E004();
  id v4 = objc_msgSend(v3, sel_leadingAnchor);

  id v5 = sub_1C1F9DF6C();
  id v6 = objc_msgSend(v5, sel_leadingAnchor);

  id v7 = objc_msgSend(v4, sel_constraintEqualToAnchor_, v6);
  *(void *)(v2 + 32) = v7;
  id v8 = sub_1C1F9E004();
  id v9 = objc_msgSend(v8, sel_trailingAnchor);

  id v10 = objc_msgSend(v1, sel_contentView);
  id v11 = objc_msgSend(v10, sel_trailingAnchor);

  id v12 = objc_msgSend(v1, sel_traitCollection);
  id v13 = objc_msgSend(v12, sel_horizontalSizeClass);

  if (v13 == (id)1) {
    double v14 = 16.0;
  }
  else {
    double v14 = 24.0;
  }
  id v15 = objc_msgSend(v9, sel_constraintEqualToAnchor_constant_, v11, -v14);

  *(void *)(v2 + 40) = v15;
  id v16 = sub_1C1F9E004();
  id v17 = objc_msgSend(v16, sel_topAnchor);

  id v18 = sub_1C1F9DF6C();
  id v19 = objc_msgSend(v18, sel_bottomAnchor);

  id v20 = objc_msgSend(v1, sel_traitCollection);
  id v21 = objc_msgSend(v20, sel_horizontalSizeClass);

  if (v21 == (id)1) {
    double v22 = 16.0;
  }
  else {
    double v22 = 24.0;
  }
  id v23 = objc_msgSend(v17, sel_constraintEqualToAnchor_constant_, v19, v22);

  *(void *)(v2 + 48) = v23;
  id v24 = sub_1C1F9E004();
  id v25 = objc_msgSend(v24, sel_bottomAnchor);

  id v26 = sub_1C1F9E1F4();
  id v27 = objc_msgSend(v26, sel_topAnchor);

  id v28 = objc_msgSend(v25, sel_constraintEqualToAnchor_constant_, v27, -2.0);
  *(void *)(v2 + 56) = v28;
  sub_1C214A7A0();
  *(void *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI25MedicationDetailsCardCell_titleToPillImageConstraints] = v2;
  swift_bridgeObjectRelease();
  id v29 = self;
  sub_1C1F9E748();
  unint64_t v30 = swift_bridgeObjectRetain();
  sub_1C1F7D590(v30);
  unint64_t v31 = sub_1C1F9F07C();
  sub_1C1F7D590(v31);
  unint64_t v32 = sub_1C1F9EA04();
  sub_1C1F7D590(v32);
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C810);
  id v33 = (id)sub_1C214A770();
  swift_bridgeObjectRelease();
  objc_msgSend(v29, sel_activateConstraints_, v33);
}

void sub_1C1F9FE6C()
{
  id v1 = v0;
  sub_1C1F13D64(0, (unint64_t *)&qword_1EBF0CA10, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1C21510C0;
  id v3 = sub_1C1F9E004();
  id v4 = objc_msgSend(v3, sel_leadingAnchor);

  id v5 = sub_1C1F9DF6C();
  id v6 = objc_msgSend(v5, sel_trailingAnchor);

  id v7 = objc_msgSend(v1, sel_traitCollection);
  id v8 = objc_msgSend(v7, sel_horizontalSizeClass);

  if (v8 == (id)1) {
    double v9 = 16.0;
  }
  else {
    double v9 = 24.0;
  }
  id v10 = objc_msgSend(v4, sel_constraintEqualToAnchor_constant_, v6, v9);

  *(void *)(v2 + 32) = v10;
  id v11 = sub_1C1F9E004();
  id v12 = objc_msgSend(v11, sel_trailingAnchor);

  id v13 = objc_msgSend(v1, sel_contentView);
  id v14 = objc_msgSend(v13, sel_trailingAnchor);

  id v15 = objc_msgSend(v1, sel_traitCollection);
  id v16 = objc_msgSend(v15, sel_horizontalSizeClass);

  if (v16 == (id)1) {
    double v17 = 16.0;
  }
  else {
    double v17 = 24.0;
  }
  id v18 = objc_msgSend(v12, sel_constraintEqualToAnchor_constant_, v14, -v17);

  *(void *)(v2 + 40) = v18;
  id v19 = sub_1C1F9E004();
  id v20 = objc_msgSend(v19, sel_topAnchor);

  id v21 = sub_1C1F9DF6C();
  id v22 = objc_msgSend(v21, sel_topAnchor);

  id v23 = objc_msgSend(v20, sel_constraintEqualToAnchor_, v22);
  *(void *)(v2 + 48) = v23;
  id v24 = sub_1C1F9E004();
  id v25 = objc_msgSend(v24, sel_bottomAnchor);

  id v26 = sub_1C1F9E1F4();
  id v27 = objc_msgSend(v26, sel_topAnchor);

  id v28 = objc_msgSend(v25, sel_constraintEqualToAnchor_constant_, v27, -2.0);
  *(void *)(v2 + 56) = v28;
  sub_1C214A7A0();
  *(void *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI25MedicationDetailsCardCell_titleToPillImageConstraints] = v2;
  swift_bridgeObjectRelease();
  id v29 = self;
  sub_1C1F9E748();
  unint64_t v30 = swift_bridgeObjectRetain();
  sub_1C1F7D590(v30);
  unint64_t v31 = sub_1C1F9F07C();
  sub_1C1F7D590(v31);
  unint64_t v32 = sub_1C1F9EA04();
  sub_1C1F7D590(v32);
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C810);
  id v33 = (id)sub_1C214A770();
  swift_bridgeObjectRelease();
  objc_msgSend(v29, sel_activateConstraints_, v33);
}

uint64_t sub_1C1FA0244(uint64_t a1, void *a2)
{
  sub_1C1F2116C(a1, (uint64_t)v5);
  uint64_t v3 = *a2 + OBJC_IVAR____TtC19HealthMedicationsUI25MedicationDetailsCardCell_item;
  swift_beginAccess();
  sub_1C1F32DDC((uint64_t)v5, v3);
  swift_endAccess();
  sub_1C1FA0438();
  return sub_1C1FA2170((uint64_t)v5, (uint64_t (*)(void))sub_1C1F24488);
}

uint64_t sub_1C1FA02CC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI25MedicationDetailsCardCell_item;
  swift_beginAccess();
  return sub_1C1F2116C(v3, a1);
}

uint64_t sub_1C1FA0320(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI25MedicationDetailsCardCell_item;
  swift_beginAccess();
  sub_1C1F32DDC(a1, v3);
  swift_endAccess();
  sub_1C1FA0438();
  return sub_1C1FA2170(a1, (uint64_t (*)(void))sub_1C1F24488);
}

uint64_t (*sub_1C1FA03A4(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1C1FA0404;
}

uint64_t sub_1C1FA0404(uint64_t a1, char a2)
{
  uint64_t result = swift_endAccess();
  if ((a2 & 1) == 0) {
    return sub_1C1FA0438();
  }
  return result;
}

uint64_t sub_1C1FA0438()
{
  uint64_t v1 = v0;
  uint64_t v59 = sub_1C21497F0();
  uint64_t v2 = *(void *)(v59 - 8);
  MEMORY[0x1F4188790](v59);
  id v4 = (char *)&v59 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v5 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C1FA20A8(0, (unint64_t *)&qword_1EBF0B690, MEMORY[0x1E4F66C80], MEMORY[0x1E4FBB718]);
  uint64_t v7 = MEMORY[0x1F4188790](v6 - 8);
  double v9 = (char *)&v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  id v11 = (char *)&v59 - v10;
  sub_1C1FA20A8(0, &qword_1EA2C44B0, (uint64_t (*)(uint64_t))type metadata accessor for MedicationDetailsCardItem, v5);
  MEMORY[0x1F4188790](v12 - 8);
  id v14 = (char *)&v59 - v13;
  uint64_t v15 = type metadata accessor for MedicationDetailsCardItem();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  id v18 = (char *)&v59 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = (uint64_t)v1 + OBJC_IVAR____TtC19HealthMedicationsUI25MedicationDetailsCardCell_item;
  swift_beginAccess();
  sub_1C1F2116C(v19, (uint64_t)v61);
  if (v62)
  {
    sub_1C1F23804(0, (unint64_t *)&qword_1EBF0C2F0);
    int v20 = swift_dynamicCast();
    (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v14, v20 ^ 1u, 1, v15);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) != 1)
    {
      sub_1C1FA210C((uint64_t)v14, (uint64_t)v18);
      sub_1C1F236D8((uint64_t)v18, (uint64_t)v61);
      uint64_t v21 = v62;
      uint64_t v22 = v63;
      __swift_project_boxed_opaque_existential_0(v61, v62);
      (*(void (**)(uint64_t, uint64_t))(v22 + 32))(v21, v22);
      id v23 = sub_1C1F9DF6C();
      sub_1C1F64A60((uint64_t)v11, (uint64_t)v9);
      sub_1C2148ED0();

      id v24 = sub_1C1F9E004();
      uint64_t v25 = v62;
      uint64_t v26 = v63;
      __swift_project_boxed_opaque_existential_0(v61, v62);
      (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v25, v26);
      id v27 = (void *)sub_1C214A5B0();
      swift_bridgeObjectRelease();
      objc_msgSend(v24, sel_setText_, v27);

      id v28 = sub_1C1F9E1F4();
      sub_1C1FA0CC4(v61);
      if (v29)
      {
        unint64_t v30 = (void *)sub_1C214A5B0();
        swift_bridgeObjectRelease();
      }
      else
      {
        unint64_t v30 = 0;
      }
      objc_msgSend(v28, sel_setText_, v30, v59);

      id v39 = sub_1C1F9E53C();
      uint64_t v40 = v62;
      uint64_t v41 = v63;
      __swift_project_boxed_opaque_existential_0(v61, v62);
      (*(void (**)(uint64_t, uint64_t))(v41 + 40))(v40, v41);
      if (v42)
      {
        id v43 = (void *)sub_1C214A5B0();
        swift_bridgeObjectRelease();
      }
      else
      {
        id v43 = 0;
      }
      objc_msgSend(v39, sel_setText_, v43);

      uint64_t v44 = v62;
      uint64_t v45 = v63;
      __swift_project_boxed_opaque_existential_0(v61, v62);
      (*(void (**)(uint64_t, uint64_t))(v45 + 40))(v44, v45);
      if (v46 && (sub_1C214A680(), uint64_t v48 = v47, swift_bridgeObjectRelease(), swift_bridgeObjectRelease(), v48))
      {
        id v49 = sub_1C1F9E53C();
        objc_msgSend(v49, sel_setHidden_, 0);

        id v50 = sub_1C1F9E3C8();
        id v51 = objc_msgSend(v1, sel_traitCollection);
        id v52 = objc_msgSend(v51, sel_horizontalSizeClass);

        objc_msgSend(v50, sel_setHidden_, v52 == (id)2);
        uint64_t v53 = self;
        sub_1C1F9EE34();
        sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C810);
        int v54 = (void *)sub_1C214A770();
        swift_bridgeObjectRelease();
        objc_msgSend(v53, sel_deactivateConstraints_, v54);

        sub_1C1F9EA04();
      }
      else
      {
        id v55 = sub_1C1F9E53C();
        objc_msgSend(v55, sel_setHidden_, 1);

        id v56 = sub_1C1F9E3C8();
        objc_msgSend(v56, sel_setHidden_, 1);

        uint64_t v53 = self;
        sub_1C1F9EA04();
        sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C810);
        uint64_t v57 = (void *)sub_1C214A770();
        swift_bridgeObjectRelease();
        objc_msgSend(v53, sel_deactivateConstraints_, v57);

        sub_1C1F9EE34();
      }
      uint64_t v58 = (void *)sub_1C214A770();
      swift_bridgeObjectRelease();
      objc_msgSend(v53, sel_activateConstraints_, v58);

      sub_1C1FA21D0((uint64_t)v11, (unint64_t *)&qword_1EBF0B690, MEMORY[0x1E4F66C80]);
      sub_1C1FA2170((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for MedicationDetailsCardItem);
      return __swift_destroy_boxed_opaque_existential_0((uint64_t)v61);
    }
  }
  else
  {
    sub_1C1FA2170((uint64_t)v61, (uint64_t (*)(void))sub_1C1F24488);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v14, 1, 1, v15);
  }
  sub_1C1FA21D0((uint64_t)v14, &qword_1EA2C44B0, (uint64_t (*)(uint64_t))type metadata accessor for MedicationDetailsCardItem);
  sub_1C21497A0();
  id v31 = v1;
  unint64_t v32 = sub_1C21497E0();
  os_log_type_t v33 = sub_1C214ABD0();
  if (os_log_type_enabled(v32, v33))
  {
    id v34 = (uint8_t *)swift_slowAlloc();
    uint64_t v35 = swift_slowAlloc();
    uint64_t v60 = v35;
    *(_DWORD *)id v34 = 136446210;
    sub_1C1F2116C(v19, (uint64_t)v61);
    sub_1C1F24488();
    uint64_t v36 = sub_1C214A630();
    v61[0] = sub_1C1F6FD54(v36, v37, &v60);
    sub_1C214B530();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C1F0B000, v32, v33, "Incorrect view model for MedicationDetailsCardCell: %{public}s", v34, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C8754730](v35, -1, -1);
    MEMORY[0x1C8754730](v34, -1, -1);
  }
  else
  {
  }
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v59);
}

uint64_t sub_1C1FA0CC4(void *a1)
{
  sub_1C1FA2240();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C214FCC0;
  uint64_t v3 = a1[3];
  uint64_t v4 = a1[4];
  __swift_project_boxed_opaque_existential_0(a1, v3);
  (*(void (**)(uint64_t, uint64_t))(v4 + 16))(v3, v4);
  uint64_t v5 = sub_1C214A680();
  uint64_t v7 = v6;
  swift_bridgeObjectRelease();
  *(void *)(inited + 32) = v5;
  *(void *)(inited + 40) = v7;
  uint64_t v8 = a1[3];
  uint64_t v9 = a1[4];
  __swift_project_boxed_opaque_existential_0(a1, v8);
  (*(void (**)(uint64_t, uint64_t))(v9 + 24))(v8, v9);
  uint64_t v10 = sub_1C214A680();
  uint64_t v12 = v11;
  swift_bridgeObjectRelease();
  *(void *)(inited + 48) = v10;
  *(void *)(inited + 56) = v12;
  if (!v7)
  {
    uint64_t v13 = (void *)MEMORY[0x1E4FBC860];
    if (!v12) {
      goto LABEL_12;
    }
    goto LABEL_7;
  }
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_1C1F3AAE0(0, 1, 1, MEMORY[0x1E4FBC860]);
  unint64_t v15 = v13[2];
  unint64_t v14 = v13[3];
  if (v15 >= v14 >> 1) {
    uint64_t v13 = sub_1C1F3AAE0((void *)(v14 > 1), v15 + 1, 1, v13);
  }
  void v13[2] = v15 + 1;
  uint64_t v16 = &v13[2 * v15];
  v16[4] = v5;
  v16[5] = v7;
  if (v12)
  {
LABEL_7:
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v13 = sub_1C1F3AAE0(0, v13[2] + 1, 1, v13);
    }
    unint64_t v18 = v13[2];
    unint64_t v17 = v13[3];
    if (v18 >= v17 >> 1) {
      uint64_t v13 = sub_1C1F3AAE0((void *)(v17 > 1), v18 + 1, 1, v13);
    }
    void v13[2] = v18 + 1;
    uint64_t v19 = &v13[2 * v18];
    v19[4] = v10;
    uint64_t v19[5] = v12;
  }
LABEL_12:
  swift_release();
  sub_1C1F13D64(0, (unint64_t *)&qword_1EA2C3A40, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
  sub_1C1F64558();
  uint64_t v20 = sub_1C214A580();
  swift_bridgeObjectRelease();
  return v20;
}

id MedicationDetailsCardCell.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MedicationDetailsCardCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1C1FA108C()
{
  return sub_1C1F9DCC4((unint64_t *)&unk_1EA2C4488, 255, (void (*)(uint64_t))type metadata accessor for MedicationDetailsCardItem);
}

uint64_t sub_1C1FA10D8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC19HealthMedicationsUI25MedicationDetailsCardCell_item;
  swift_beginAccess();
  return sub_1C1F2116C(v3, a2);
}

void *initializeBufferWithCopyOfBuffer for MedicationDetailsCardItem(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v19 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    long long v7 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 24) = v7;
    (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)v4 + v8;
    uint64_t v10 = (uint64_t)a2 + v8;
    uint64_t v11 = sub_1C2147B20();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = a3[7];
    unint64_t v14 = *(void **)((char *)a2 + v12);
    *(void *)((char *)v4 + v12) = v14;
    unint64_t v15 = (void *)((char *)v4 + v13);
    uint64_t v16 = (uint64_t *)((char *)a2 + v13);
    uint64_t v17 = v16[1];
    *unint64_t v15 = *v16;
    v15[1] = v17;
    id v18 = v14;
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for MedicationDetailsCardItem(uint64_t a1, uint64_t a2)
{
  __swift_destroy_boxed_opaque_existential_0(a1);
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_1C2147B20();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for MedicationDetailsCardItem(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v6;
  (**(void (***)(void))(v6 - 8))();
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1C2147B20();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a3[7];
  uint64_t v13 = *(void **)(a2 + v11);
  *(void *)(a1 + v11) = v13;
  unint64_t v14 = (void *)(a1 + v12);
  unint64_t v15 = (void *)(a2 + v12);
  uint64_t v16 = v15[1];
  *unint64_t v14 = *v15;
  v14[1] = v16;
  id v17 = v13;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t *assignWithCopy for MedicationDetailsCardItem(uint64_t *a1, uint64_t *a2, int *a3)
{
  __swift_assign_boxed_opaque_existential_1(a1, a2);
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1C2147B20();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = *(void **)((char *)a1 + v10);
  uint64_t v12 = *(void **)((char *)a2 + v10);
  *(uint64_t *)((char *)a1 + v10) = (uint64_t)v12;
  id v13 = v12;

  uint64_t v14 = a3[7];
  unint64_t v15 = (uint64_t *)((char *)a1 + v14);
  uint64_t v16 = (uint64_t *)((char *)a2 + v14);
  *unint64_t v15 = *v16;
  v15[1] = v16[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for MedicationDetailsCardItem(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1C2147B20();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[7];
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  *(_OWORD *)(a1 + v11) = *(_OWORD *)(a2 + v11);
  return a1;
}

uint64_t assignWithTake for MedicationDetailsCardItem(uint64_t a1, uint64_t a2, int *a3)
{
  __swift_destroy_boxed_opaque_existential_0(a1);
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1C2147B20();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = *(void **)(a1 + v11);
  *(void *)(a1 + v11) = *(void *)(a2 + v11);

  uint64_t v13 = a3[7];
  uint64_t v14 = (void *)(a1 + v13);
  unint64_t v15 = (uint64_t *)(a2 + v13);
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  *uint64_t v14 = v17;
  v14[1] = v16;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MedicationDetailsCardItem(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C1FA1634);
}

uint64_t sub_1C1FA1634(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1C2147B20();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for MedicationDetailsCardItem(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C1FA16F8);
}

uint64_t sub_1C1FA16F8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 24) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1C2147B20();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1C1FA17A0()
{
  uint64_t result = sub_1C2147B20();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t method lookup function for MedicationDetailsCardCell(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MedicationDetailsCardCell);
}

uint64_t dispatch thunk of MedicationDetailsCardCell.item.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x208))();
}

uint64_t dispatch thunk of MedicationDetailsCardCell.item.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x210))();
}

uint64_t dispatch thunk of MedicationDetailsCardCell.item.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x218))();
}

void sub_1C1FA1918()
{
  *(void *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI25MedicationDetailsCardCell____lazy_storage___pillImageView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI25MedicationDetailsCardCell____lazy_storage___titleLabel] = 0;
  *(void *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI25MedicationDetailsCardCell____lazy_storage___captionLabel] = 0;
  *(void *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI25MedicationDetailsCardCell____lazy_storage___separatorView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI25MedicationDetailsCardCell____lazy_storage___notesLabel] = 0;
  *(void *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI25MedicationDetailsCardCell_pillImageSize] = 0x4054000000000000;
  *(void *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI25MedicationDetailsCardCell_separatorToNoteMargin] = 0x4028000000000000;
  *(void *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI25MedicationDetailsCardCell____lazy_storage___pillImageConstraints] = 0;
  *(void *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI25MedicationDetailsCardCell____lazy_storage___notesConstraints] = 0;
  *(void *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI25MedicationDetailsCardCell____lazy_storage___emptyNotesConstraints] = 0;
  *(void *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI25MedicationDetailsCardCell____lazy_storage___captionConstraints] = 0;
  *(void *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI25MedicationDetailsCardCell_titleToPillImageConstraints] = MEMORY[0x1E4FBC860];
  unint64_t v1 = &v0[OBJC_IVAR____TtC19HealthMedicationsUI25MedicationDetailsCardCell_item];
  *(_OWORD *)unint64_t v1 = 0u;
  *((_OWORD *)v1 + 1) = 0u;
  *((void *)v1 + 4) = 0;

  sub_1C214B910();
  __break(1u);
}

id sub_1C1FA1A30()
{
  uint64_t v41 = sub_1C21497F0();
  uint64_t v1 = *(void *)(v41 - 8);
  uint64_t v2 = MEMORY[0x1F4188790](v41);
  unint64_t v4 = (char *)v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v2);
  long long v6 = (char *)v40 - v5;
  sub_1C1FA20A8(0, &qword_1EA2C44B0, (uint64_t (*)(uint64_t))type metadata accessor for MedicationDetailsCardItem, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)v40 - v8;
  uint64_t v10 = type metadata accessor for MedicationDetailsCardItem();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = (uint64_t)v0 + OBJC_IVAR____TtC19HealthMedicationsUI25MedicationDetailsCardCell_item;
  swift_beginAccess();
  sub_1C1F2116C(v14, (uint64_t)v44);
  if (!v44[3])
  {
    sub_1C1FA2170((uint64_t)v44, (uint64_t (*)(void))sub_1C1F24488);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, 1, 1, v10);
    goto LABEL_7;
  }
  sub_1C1F23804(0, (unint64_t *)&qword_1EBF0C2F0);
  int v15 = swift_dynamicCast();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v9, v15 ^ 1u, 1, v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
LABEL_7:
    sub_1C1FA21D0((uint64_t)v9, &qword_1EA2C44B0, (uint64_t (*)(uint64_t))type metadata accessor for MedicationDetailsCardItem);
    sub_1C21497A0();
    id v26 = v0;
    id v27 = sub_1C21497E0();
    os_log_type_t v28 = sub_1C214ABD0();
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v29 = (uint8_t *)swift_slowAlloc();
      uint64_t v30 = swift_slowAlloc();
      uint64_t v43 = v30;
      *(_DWORD *)uint64_t v29 = 136446210;
      sub_1C1F2116C(v14, (uint64_t)v44);
      sub_1C1F24488();
      uint64_t v31 = sub_1C214A630();
      v44[0] = sub_1C1F6FD54(v31, v32, &v43);
      sub_1C214B530();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C1F0B000, v27, v28, "Incorrect view model for MedicationDetailsCardCell: %{public}s", v29, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C8754730](v30, -1, -1);
      MEMORY[0x1C8754730](v29, -1, -1);
    }
    else
    {
    }
    return (id)(*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v4, v41);
  }
  sub_1C1FA210C((uint64_t)v9, (uint64_t)v13);
  id v16 = objc_msgSend(v0, sel_viewController);
  if (v16)
  {
    uint64_t v17 = v16;
    id v18 = *(void **)&v13[*(int *)(v10 + 24)];
    uint64_t v19 = (objc_class *)type metadata accessor for OntologyInfoInternalViewController();
    id v20 = objc_allocWithZone(v19);
    type metadata accessor for OntologyIDDataSource();
    swift_allocObject();
    id v21 = v18;
    uint64_t v22 = (char *)v20;
    OntologyIDDataSource.init(with:)(v18);
    *(void *)&v22[OBJC_IVAR____TtC19HealthMedicationsUI34OntologyInfoInternalViewController_conceptsDataSource] = v23;

    v42.receiver = v22;
    v42.super_class = v19;
    id result = objc_msgSendSuper2(&v42, sel_initWithUsingInsetStyling_, 1);
    if (!result)
    {
      __break(1u);
      return result;
    }
    uint64_t v25 = result;

    objc_msgSend(v17, sel_showViewController_sender_, v25, 0);
  }
  else
  {
    sub_1C21497A0();
    id v33 = v0;
    id v34 = sub_1C21497E0();
    os_log_type_t v35 = sub_1C214ABD0();
    if (os_log_type_enabled(v34, v35))
    {
      uint64_t v36 = (uint8_t *)swift_slowAlloc();
      uint64_t v37 = swift_slowAlloc();
      uint64_t v43 = v37;
      *(_DWORD *)uint64_t v36 = 136446210;
      v40[1] = v36 + 4;
      sub_1C1F2116C(v14, (uint64_t)v44);
      sub_1C1F24488();
      uint64_t v38 = sub_1C214A630();
      v44[0] = sub_1C1F6FD54(v38, v39, &v43);
      sub_1C214B530();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C1F0B000, v34, v35, "Incorrect ViewController for MedicationDetailsCardCell: %{public}s", v36, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C8754730](v37, -1, -1);
      MEMORY[0x1C8754730](v36, -1, -1);
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v1 + 8))(v6, v41);
  }
  return (id)sub_1C1FA2170((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for MedicationDetailsCardItem);
}

void sub_1C1FA20A8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C1FA210C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MedicationDetailsCardItem();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C1FA2170(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C1FA21D0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1C1FA20A8(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

void sub_1C1FA2240()
{
  if (!qword_1EA2C44B8)
  {
    sub_1C1F13D64(255, (unint64_t *)&qword_1EA2C44C0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB718]);
    unint64_t v0 = sub_1C214BA50();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C44B8);
    }
  }
}

uint64_t sub_1C1FA22BC()
{
  swift_unknownObjectWeakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

void sub_1C1FA22F4(void *a1, void *a2)
{
  sub_1C1F9F934(a1, a2, v2);
}

void *sub_1C1FA22FC()
{
  id result = (void *)sub_1C1F4C220((uint64_t)&unk_1F1D73C38);
  off_1EA2C44D8 = result;
  return result;
}

uint64_t sub_1C1FA2324(uint64_t a1)
{
  uint64_t v2 = sub_1C21497F0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = 0;
  switch(a1)
  {
    case 0:
      sub_1C21497A0();
      uint64_t v7 = sub_1C21497E0();
      os_log_type_t v8 = sub_1C214ABF0();
      if (os_log_type_enabled(v7, v8))
      {
        uint64_t v9 = (uint8_t *)swift_slowAlloc();
        uint64_t v10 = swift_slowAlloc();
        uint64_t v14 = v10;
        *(_DWORD *)uint64_t v9 = 136446210;
        uint64_t v13 = sub_1C1F6FD54(0xD000000000000018, 0x80000001C2162270, &v14);
        sub_1C214B530();
        _os_log_impl(&dword_1C1F0B000, v7, v8, "[%{public}s] attempting to display localized title of a schedule with type null", v9, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C8754730](v10, -1, -1);
        MEMORY[0x1C8754730](v9, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      return 0;
    case 1:
      if (qword_1EBF0CA00 != -1) {
        goto LABEL_17;
      }
      goto LABEL_14;
    case 2:
      if (qword_1EBF0CA00 == -1) {
        goto LABEL_14;
      }
      goto LABEL_17;
    case 3:
      if (qword_1EBF0CA00 == -1) {
        goto LABEL_14;
      }
      goto LABEL_17;
    case 4:
      if (qword_1EBF0CA00 == -1) {
        goto LABEL_14;
      }
      goto LABEL_17;
    case 7:
    case 8:
      if (qword_1EBF0CA00 == -1) {
        goto LABEL_14;
      }
LABEL_17:
      swift_once();
LABEL_14:
      id v11 = (id)qword_1EBF0CA18;
      swift_bridgeObjectRetain();
      uint64_t v6 = sub_1C2147730();
      swift_bridgeObjectRelease();

      break;
    default:
      return v6;
  }
  return v6;
}

uint64_t sub_1C1FA27F8(uint64_t a1)
{
  uint64_t v2 = sub_1C21497F0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = 0;
  switch(a1)
  {
    case 0:
      sub_1C21497A0();
      uint64_t v7 = sub_1C21497E0();
      os_log_type_t v8 = sub_1C214ABF0();
      if (os_log_type_enabled(v7, v8))
      {
        uint64_t v9 = (uint8_t *)swift_slowAlloc();
        uint64_t v10 = swift_slowAlloc();
        uint64_t v14 = v10;
        *(_DWORD *)uint64_t v9 = 136446210;
        uint64_t v13 = sub_1C1F6FD54(0xD00000000000001ALL, 0x80000001C2153210, &v14);
        sub_1C214B530();
        _os_log_impl(&dword_1C1F0B000, v7, v8, "[%{public}s] attempting to display localized usage of a schedule with type null", v9, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C8754730](v10, -1, -1);
        MEMORY[0x1C8754730](v9, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      return 0;
    case 1:
      if (qword_1EBF0CA00 != -1) {
        goto LABEL_14;
      }
      goto LABEL_12;
    case 2:
      if (qword_1EBF0CA00 == -1) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 3:
      if (qword_1EBF0CA00 == -1) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 7:
      if (qword_1EBF0CA00 == -1) {
        goto LABEL_12;
      }
LABEL_14:
      swift_once();
LABEL_12:
      id v11 = (id)qword_1EBF0CA18;
      swift_bridgeObjectRetain();
      uint64_t v6 = sub_1C2147730();
      swift_bridgeObjectRelease();

      break;
    default:
      return v6;
  }
  return v6;
}

uint64_t sub_1C1FA2C38()
{
  return sub_1C214BB80();
}

uint64_t sub_1C1FA2C80()
{
  return sub_1C214BB80();
}

uint64_t sub_1C1FA2CC4()
{
  uint64_t v6 = MEMORY[0x1E4FBC860];
  sub_1C1F707C4(0, 5, 0);
  if (qword_1EA2C2670 != -1) {
    swift_once();
  }
  uint64_t v0 = 0;
  while (1)
  {
    uint64_t v1 = *(void *)((char *)&unk_1F1D73CF0 + v0 + 32);
    swift_beginAccess();
    if (*((void *)off_1EA2C44D8 + 2))
    {
      sub_1C1F4B548(v1);
      if (v2) {
        break;
      }
    }
    swift_endAccess();
    unint64_t v4 = *(void *)(v6 + 16);
    unint64_t v3 = *(void *)(v6 + 24);
    if (v4 >= v3 >> 1) {
      sub_1C1F707C4(v3 > 1, v4 + 1, 1);
    }
    *(void *)(v6 + 16) = v4 + 1;
    *(void *)(v6 + 8 * v4 + 32) = v1;
    v0 += 8;
    if (v0 == 40) {
      return v6;
    }
  }
  swift_endAccess();
  sub_1C214B7C0();
  sub_1C214A6C0();
  type metadata accessor for HKMedicationScheduleType(0);
  sub_1C214B8B0();
  sub_1C214A6C0();
  sub_1C214B8B0();
  sub_1C214A6C0();
  uint64_t result = sub_1C214B910();
  __break(1u);
  return result;
}

ValueMetadata *type metadata accessor for UserSelectableScheduleType()
{
  return &type metadata for UserSelectableScheduleType;
}

unint64_t sub_1C1FA2F18()
{
  unint64_t result = qword_1EA2C44E0;
  if (!qword_1EA2C44E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C44E0);
  }
  return result;
}

uint64_t TipAction.title.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TipAction.accessibilityIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TipAction.action.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_retain();
  return v1;
}

uint64_t TipAction.init(title:accessibilityIdentifier:action:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, void *a7@<X8>)
{
  *a7 = result;
  a7[1] = a2;
  a7[2] = a3;
  a7[3] = a4;
  a7[4] = a5;
  a7[5] = a6;
  return result;
}

uint64_t static TipAction.== infix(_:_:)(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return 1;
  }
  else {
    return sub_1C214BA80();
  }
}

uint64_t TipAction.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_1C214A690();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1C214A690();

  return swift_bridgeObjectRelease();
}

uint64_t TipAction.hashValue.getter()
{
  return sub_1C214BB80();
}

uint64_t sub_1C1FA3128()
{
  return sub_1C214BB80();
}

uint64_t sub_1C1FA3190()
{
  sub_1C214A690();

  return sub_1C214A690();
}

uint64_t sub_1C1FA31E0()
{
  return sub_1C214BB80();
}

uint64_t MedicationsCategoryTipItem.reuseIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

unint64_t MedicationsCategoryTipItem.uniqueIdentifier.getter()
{
  return 0xD000000000000010;
}

uint64_t MedicationsCategoryTipItem.init(identifier:headerView:titleText:bodyText:bodyTextLineLimit:buttonTitle:imageSystemName:imageTintColor:baseIdentifier:didTapActionButton:didTapDismiss:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, uint64_t a10, uint64_t a11, long long a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  type metadata accessor for MedicationCategoryTipCell();
  sub_1C1FA79E8(&qword_1EA2C44F0, v27, (void (*)(uint64_t))type metadata accessor for MedicationCategoryTipCell);
  a9[2] = sub_1C21481D0();
  a9[3] = v28;
  *a9 = a1;
  a9[1] = a2;
  a9[4] = a3;
  a9[5] = a4;
  a9[6] = a5;
  a9[7] = a6;
  a9[8] = a7;
  a9[9] = a8;
  uint64_t v29 = (int *)type metadata accessor for MedicationsCategoryTipItem(0);
  uint64_t v30 = (char *)a9 + v29[10];
  *(_OWORD *)uint64_t v30 = a12;
  *((void *)v30 + 2) = a13;
  *((void *)v30 + 3) = 0x4041000000000000;
  type metadata accessor for TipImage(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v31 = (void *)((char *)a9 + v29[12]);
  *uint64_t v31 = a14;
  v31[1] = a15;
  unint64_t v32 = (void *)((char *)a9 + v29[11]);
  *unint64_t v32 = a18;
  v32[1] = a19;
  sub_1C1F13C84(0, &qword_1EA2C44F8);
  uint64_t result = swift_allocObject();
  *(_OWORD *)(result + 16) = xmmword_1C214FCD0;
  *(void *)(result + 32) = a10;
  *(void *)(result + 40) = a11;
  strcpy((char *)(result + 48), "ActionButton");
  *(unsigned char *)(result + 61) = 0;
  *(_WORD *)(result + 62) = -5120;
  *(void *)(result + 64) = a16;
  *(void *)(result + 72) = a17;
  *(void *)((char *)a9 + v29[13]) = result;
  return result;
}

uint64_t type metadata accessor for MedicationCategoryTipCell()
{
  return self;
}

uint64_t type metadata accessor for MedicationsCategoryTipItem(uint64_t a1)
{
  return sub_1C1F20D10(a1, qword_1EA2C4520);
}

uint64_t type metadata accessor for TipImage(uint64_t a1)
{
  return sub_1C1F20D10(a1, qword_1EBF0B5E0);
}

uint64_t MedicationsCategoryTipItem.init(identifier:headerView:titleText:bodyText:bodyTextLineLimit:image:baseIdentifier:actions:didTapDismiss:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  type metadata accessor for MedicationCategoryTipCell();
  sub_1C1FA79E8(&qword_1EA2C44F0, v23, (void (*)(uint64_t))type metadata accessor for MedicationCategoryTipCell);
  a9[2] = sub_1C21481D0();
  a9[3] = v24;
  *a9 = a1;
  a9[1] = a2;
  a9[4] = a3;
  a9[5] = a4;
  a9[6] = a5;
  a9[7] = a6;
  a9[8] = a7;
  a9[9] = a8;
  uint64_t v25 = (int *)type metadata accessor for MedicationsCategoryTipItem(0);
  uint64_t result = sub_1C1FAA598(a10, (uint64_t)a9 + v25[10], type metadata accessor for TipImage);
  uint64_t v27 = (void *)((char *)a9 + v25[12]);
  void *v27 = a11;
  v27[1] = a12;
  uint64_t v28 = (void *)((char *)a9 + v25[11]);
  *uint64_t v28 = a14;
  v28[1] = a15;
  *(void *)((char *)a9 + v25[13]) = a13;
  return result;
}

uint64_t MedicationsCategoryTipItem.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_1C214A690();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for MedicationsCategoryTipItem(0) + 52));
  sub_1C214BB40();
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = v1 + 40;
    do
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      sub_1C214A690();
      sub_1C214A690();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v3 += 48;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  sub_1C214A690();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1C214A690();

  return swift_bridgeObjectRelease();
}

uint64_t MedicationsCategoryTipItem.hashValue.getter()
{
  return sub_1C214BB80();
}

uint64_t sub_1C1FA3844()
{
  return sub_1C214BB80();
}

uint64_t sub_1C1FA3888()
{
  return sub_1C214BB80();
}

uint64_t sub_1C1FA38C8()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1C1FA38FC(uint64_t a1, void *a2)
{
  sub_1C1FAA660(a1, (uint64_t)v5, (uint64_t (*)(void))sub_1C1F24488);
  uint64_t v3 = *a2 + OBJC_IVAR____TtC19HealthMedicationsUI25MedicationCategoryTipCell_item;
  swift_beginAccess();
  sub_1C1F32DDC((uint64_t)v5, v3);
  swift_endAccess();
  sub_1C1FA3994();
  return sub_1C1FAA600((uint64_t)v5, (uint64_t (*)(void))sub_1C1F24488);
}

uint64_t sub_1C1FA3994()
{
  swift_getObjectType();
  uint64_t v1 = sub_1C21497F0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  unint64_t v4 = (char *)v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1FA7E4C(0, (unint64_t *)&unk_1EA2C4560, type metadata accessor for MedicationsCategoryTipItem, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)v21 - v6;
  uint64_t v8 = type metadata accessor for MedicationsCategoryTipItem(0);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  id v11 = (char *)v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = v0 + OBJC_IVAR____TtC19HealthMedicationsUI25MedicationCategoryTipCell_item;
  swift_beginAccess();
  sub_1C1FAA660(v12, (uint64_t)v22, (uint64_t (*)(void))sub_1C1F24488);
  if (v22[3])
  {
    sub_1C1F23804(0, (unint64_t *)&qword_1EBF0C2F0);
    int v13 = swift_dynamicCast();
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v7, v13 ^ 1u, 1, v8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) != 1)
    {
      sub_1C1FAA598((uint64_t)v7, (uint64_t)v11, type metadata accessor for MedicationsCategoryTipItem);
      sub_1C1FA4018((uint64_t)v11);
      return sub_1C1FAA600((uint64_t)v11, type metadata accessor for MedicationsCategoryTipItem);
    }
  }
  else
  {
    sub_1C1FAA600((uint64_t)v22, (uint64_t (*)(void))sub_1C1F24488);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
  }
  sub_1C1FAA528((uint64_t)v7, (unint64_t *)&unk_1EA2C4560, type metadata accessor for MedicationsCategoryTipItem);
  sub_1C21497A0();
  int v15 = sub_1C21497E0();
  os_log_type_t v16 = sub_1C214ABD0();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = (uint8_t *)swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    v22[0] = v18;
    *(_DWORD *)uint64_t v17 = 136315138;
    uint64_t v19 = sub_1C214BC10();
    v21[1] = sub_1C1F6FD54(v19, v20, v22);
    sub_1C214B530();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C1F0B000, v15, v16, "[%s] Incorrect view model for MedicationsCategoryTipCell", v17, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C8754730](v18, -1, -1);
    MEMORY[0x1C8754730](v17, -1, -1);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

uint64_t sub_1C1FA3DC8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI25MedicationCategoryTipCell_item;
  swift_beginAccess();
  return sub_1C1FAA660(v3, a1, (uint64_t (*)(void))sub_1C1F24488);
}

uint64_t sub_1C1FA3E30(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI25MedicationCategoryTipCell_item;
  swift_beginAccess();
  sub_1C1F32DDC(a1, v3);
  swift_endAccess();
  sub_1C1FA3994();
  return sub_1C1FAA600(a1, (uint64_t (*)(void))sub_1C1F24488);
}

uint64_t (*sub_1C1FA3EB4(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1C1FA3F14;
}

uint64_t sub_1C1FA3F14(uint64_t a1, char a2)
{
  uint64_t result = swift_endAccess();
  if ((a2 & 1) == 0) {
    return sub_1C1FA3994();
  }
  return result;
}

void sub_1C1FA4018(uint64_t a1)
{
  uint64_t v2 = v1;
  sub_1C1FA7E4C(0, (unint64_t *)&qword_1EBF0B690, MEMORY[0x1E4F66C80], MEMORY[0x1E4FBB718]);
  uint64_t v5 = MEMORY[0x1F4188790](v4 - 8);
  uint64_t v67 = (uint64_t)&v67 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v68 = (uint64_t)&v67 - v7;
  uint64_t v75 = type metadata accessor for TipImage(0);
  uint64_t v8 = MEMORY[0x1F4188790](v75);
  uint64_t v10 = (char *)&v67 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v67 - v11;
  int v13 = *(void **)(a1 + 32);
  uint64_t v14 = type metadata accessor for MedicationsCategoryTipItem(0);
  uint64_t v15 = *(void *)(a1 + *(int *)(v14 + 52));
  uint64_t v16 = *(int *)(v14 + 40);
  uint64_t v17 = v14;
  uint64_t v72 = v14;
  id v73 = type metadata accessor for TipImage;
  uint64_t v74 = a1 + v16;
  sub_1C1FAA660(a1 + v16, (uint64_t)v12, type metadata accessor for TipImage);
  uint64_t v18 = (uint64_t *)(a1 + *(int *)(v17 + 44));
  uint64_t v19 = *v18;
  uint64_t v20 = v18[1];
  id v21 = objc_allocWithZone((Class)type metadata accessor for MedicationsCategoryRoomTipView(0));
  uint64_t v22 = v13;
  id v71 = v13;
  id v23 = v13;
  id v70 = v23;
  swift_bridgeObjectRetain();
  sub_1C1F1325C(v19);
  uint64_t v24 = sub_1C1FA9B64(v22, v15, (uint64_t)v12, v19, v20);
  sub_1C1F31118(v19);

  objc_msgSend(v24, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  id v25 = objc_msgSend(v2, sel_contentView);
  objc_msgSend(v25, sel_addSubview_, v24);

  id v69 = self;
  sub_1C1F13C84(0, (unint64_t *)&qword_1EBF0CA10);
  uint64_t v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = xmmword_1C21510C0;
  id v27 = objc_msgSend(v24, sel_topAnchor);
  id v28 = objc_msgSend(v2, sel_contentView);
  id v29 = objc_msgSend(v28, sel_topAnchor);

  id v30 = objc_msgSend(v27, sel_constraintEqualToAnchor_, v29);
  *(void *)(v26 + 32) = v30;
  id v31 = objc_msgSend(v24, sel_bottomAnchor);
  id v32 = objc_msgSend(v2, sel_contentView);
  id v33 = objc_msgSend(v32, sel_bottomAnchor);

  id v34 = objc_msgSend(v31, sel_constraintEqualToAnchor_, v33);
  *(void *)(v26 + 40) = v34;
  id v35 = objc_msgSend(v24, sel_leadingAnchor);
  id v36 = objc_msgSend(v2, sel_contentView);
  id v37 = objc_msgSend(v36, sel_leadingAnchor);

  id v38 = objc_msgSend(v35, sel_constraintEqualToAnchor_, v37);
  *(void *)(v26 + 48) = v38;
  id v39 = objc_msgSend(v24, sel_trailingAnchor);
  id v40 = objc_msgSend(v2, sel_contentView);
  id v41 = objc_msgSend(v40, sel_trailingAnchor);

  id v42 = objc_msgSend(v39, sel_constraintEqualToAnchor_, v41);
  *(void *)(v26 + 56) = v42;
  uint64_t v76 = v26;
  sub_1C214A7A0();
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C810);
  uint64_t v43 = (void *)sub_1C214A770();
  swift_bridgeObjectRelease();
  objc_msgSend(v69, sel_activateConstraints_, v43);

  uint64_t v44 = *(void **)&v24[OBJC_IVAR____TtC19HealthMedicationsUI30MedicationsCategoryRoomTipView_headerView];
  *(void *)&v24[OBJC_IVAR____TtC19HealthMedicationsUI30MedicationsCategoryRoomTipView_headerView] = v71;
  id v45 = v70;

  id v46 = sub_1C1FA4CEC();
  uint64_t v47 = (void *)sub_1C214A5B0();
  objc_msgSend(v46, sel_setText_, v47);

  id v48 = sub_1C1FA4F88();
  id v49 = (void *)sub_1C214A5B0();
  objc_msgSend(v48, sel_setText_, v49);

  id v50 = sub_1C1FA4F88();
  objc_msgSend(v50, sel_setNumberOfLines_, *(void *)(a1 + 72));

  id v51 = (uint64_t *)(a1 + *(int *)(v72 + 48));
  uint64_t v53 = *v51;
  uint64_t v52 = v51[1];
  int v54 = &v24[OBJC_IVAR____TtC19HealthMedicationsUI30MedicationsCategoryRoomTipView_baseIdentifier];
  *(void *)int v54 = v53;
  *((void *)v54 + 1) = v52;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_1C1FAA660(v74, (uint64_t)v10, v73);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v56 = v68;
      sub_1C1F4DB28((uint64_t)v10, v68);
      id v57 = sub_1C1FA4B54();
      sub_1C1F64A60(v56, v67);
      sub_1C2148ED0();

      sub_1C1FAA528(v56, (unint64_t *)&qword_1EBF0B690, MEMORY[0x1E4F66C80]);
      return;
    }
    uint64_t v65 = *(void **)v10;
    id v66 = sub_1C1FA496C();
    objc_msgSend(v66, sel_setImage_, v65);
  }
  else
  {
    uint64_t v58 = (void *)*((void *)v10 + 2);
    id v59 = objc_msgSend(self, sel_configurationWithPointSize_weight_, 5, *((double *)v10 + 3));
    uint64_t v60 = (void *)sub_1C214A5B0();
    swift_bridgeObjectRelease();
    id v61 = objc_msgSend(self, sel_systemImageNamed_withConfiguration_, v60, v59);

    id v62 = sub_1C1FA496C();
    objc_msgSend(v62, sel_setImage_, v61);

    id v63 = sub_1C1FA496C();
    id v64 = v58;
    objc_msgSend(v63, sel_setTintColor_, v64);
  }
}

id MedicationCategoryTipCell.__deallocating_deinit(uint64_t a1)
{
  return sub_1C1FA7540(a1, type metadata accessor for MedicationCategoryTipCell);
}

uint64_t sub_1C1FA4860(uint64_t a1)
{
  uint64_t v2 = *(void *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI30MedicationsCategoryRoomTipView_currentConstraints];
  *(void *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI30MedicationsCategoryRoomTipView_currentConstraints] = a1;
  unint64_t v3 = swift_bridgeObjectRetain();
  unsigned __int8 v4 = sub_1C1FC1B4C(v3, v2);
  swift_bridgeObjectRelease();
  if ((v4 & 1) == 0)
  {
    uint64_t v5 = self;
    sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C810);
    uint64_t v6 = (void *)sub_1C214A770();
    objc_msgSend(v5, sel_deactivateConstraints_, v6);

    swift_bridgeObjectRetain();
    uint64_t v7 = (void *)sub_1C214A770();
    swift_bridgeObjectRelease();
    objc_msgSend(v5, sel_activateConstraints_, v7);

    objc_msgSend(v1, sel_setNeedsLayout);
  }

  return swift_bridgeObjectRelease();
}

id sub_1C1FA496C()
{
  return sub_1C1FA5284(&OBJC_IVAR____TtC19HealthMedicationsUI30MedicationsCategoryRoomTipView____lazy_storage___iconImageView, (uint64_t (*)(uint64_t))sub_1C1FA498C);
}

id sub_1C1FA498C()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1838]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v0, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v0, sel_setContentMode_, 1);
  id v1 = objc_msgSend(self, sel_systemGrayColor);
  objc_msgSend(v0, sel_setTintColor_, v1);

  uint64_t v2 = sub_1C214A5F0();
  uint64_t v4 = v3;
  id v5 = v0;
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  uint64_t v8 = v2;
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  uint64_t v6 = (void *)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  objc_msgSend(v5, sel_setAccessibilityIdentifier_, v6, v8, v4);

  return v5;
}

id sub_1C1FA4B54()
{
  return sub_1C1FA5284(&OBJC_IVAR____TtC19HealthMedicationsUI30MedicationsCategoryRoomTipView____lazy_storage___medicationView, (uint64_t (*)(uint64_t))sub_1C1FA4B74);
}

id sub_1C1FA4B74()
{
  id v0 = objc_msgSend(objc_allocWithZone((Class)sub_1C2148EF0()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v0, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  uint64_t v1 = sub_1C214A5F0();
  uint64_t v3 = v2;
  id v4 = v0;
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  uint64_t v7 = v1;
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  id v5 = (void *)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_setAccessibilityIdentifier_, v5, v7, v3);

  return v4;
}

id sub_1C1FA4CEC()
{
  return sub_1C1FA5284(&OBJC_IVAR____TtC19HealthMedicationsUI30MedicationsCategoryRoomTipView____lazy_storage___titleLabel, (uint64_t (*)(uint64_t))sub_1C1FA4D0C);
}

id sub_1C1FA4D0C(void *a1)
{
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
  uint64_t v3 = sub_1C214A5F0();
  uint64_t v5 = v4;
  id v6 = v2;
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  uint64_t v14 = v3;
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  uint64_t v7 = (void *)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  objc_msgSend(v6, sel_setAccessibilityIdentifier_, v7, v14, v5);

  objc_msgSend(v6, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v6, sel_setNumberOfLines_, 0);
  id v8 = objc_msgSend(self, sel__preferredFontForTextStyle_variant_, *MEMORY[0x1E4FB28C8], 1024);
  objc_msgSend(v6, sel_setFont_, v8);

  objc_msgSend(v6, sel_setAdjustsFontForContentSizeCategory_, 1);
  id v9 = objc_msgSend(self, sel_labelColor);
  objc_msgSend(v6, sel_setTextColor_, v9);

  id v10 = v6;
  id v11 = objc_msgSend(a1, sel_backgroundColor);
  objc_msgSend(v10, sel_setBackgroundColor_, v11);

  LODWORD(v12) = 1132068864;
  objc_msgSend(v10, sel_setContentHuggingPriority_forAxis_, 0, v12);
  return v10;
}

id sub_1C1FA4F88()
{
  return sub_1C1FA5284(&OBJC_IVAR____TtC19HealthMedicationsUI30MedicationsCategoryRoomTipView____lazy_storage___detailLabel, (uint64_t (*)(uint64_t))sub_1C1FA4FA8);
}

id sub_1C1FA4FA8(void *a1)
{
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
  uint64_t v3 = sub_1C214A5F0();
  uint64_t v5 = v4;
  id v6 = v2;
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  uint64_t v14 = v3;
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  uint64_t v7 = (void *)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  objc_msgSend(v6, sel_setAccessibilityIdentifier_, v7, v14, v5);

  objc_msgSend(v6, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v6, sel_setNumberOfLines_, 0);
  id v8 = objc_msgSend(self, sel_preferredFontForTextStyle_, *MEMORY[0x1E4FB2950]);
  objc_msgSend(v6, sel_setFont_, v8);

  objc_msgSend(v6, sel_setAdjustsFontForContentSizeCategory_, 1);
  id v9 = objc_msgSend(self, sel_secondaryLabelColor);
  objc_msgSend(v6, sel_setTextColor_, v9);

  id v10 = v6;
  id v11 = objc_msgSend(a1, sel_backgroundColor);
  objc_msgSend(v10, sel_setBackgroundColor_, v11);

  LODWORD(v12) = 1132068864;
  objc_msgSend(v10, sel_setContentHuggingPriority_forAxis_, 0, v12);
  return v10;
}

id sub_1C1FA5264()
{
  return sub_1C1FA5284(&OBJC_IVAR____TtC19HealthMedicationsUI30MedicationsCategoryRoomTipView____lazy_storage___dismissButton, (uint64_t (*)(uint64_t))sub_1C1FA5330);
}

id sub_1C1FA5284(uint64_t *a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(void **)(v2 + *a1);
  if (v4)
  {
    id v5 = *(id *)(v2 + *a1);
  }
  else
  {
    id v6 = (void *)a2(v2);
    uint64_t v7 = *(void **)(v2 + v3);
    *(void *)(v2 + v3) = v6;
    id v5 = v6;

    uint64_t v4 = 0;
  }
  id v8 = v4;
  return v5;
}

id sub_1C1FA5330(uint64_t a1)
{
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB14D0]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v2, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v2, sel_addTarget_action_forControlEvents_, a1, sel_didTapDismiss, 64);
  uint64_t v3 = sub_1C214A5F0();
  uint64_t v5 = v4;
  id v6 = v2;
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  uint64_t v9 = v3;
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  uint64_t v7 = (void *)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  objc_msgSend(v6, sel_setAccessibilityIdentifier_, v7, v9, v5);

  return v6;
}

id sub_1C1FA54C8()
{
  uint64_t v1 = OBJC_IVAR____TtC19HealthMedicationsUI30MedicationsCategoryRoomTipView____lazy_storage___dismissImageView;
  id v2 = *(void **)(v0
                + OBJC_IVAR____TtC19HealthMedicationsUI30MedicationsCategoryRoomTipView____lazy_storage___dismissImageView);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC19HealthMedicationsUI30MedicationsCategoryRoomTipView____lazy_storage___dismissImageView);
  }
  else
  {
    uint64_t v4 = v0;
    sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8E0);
    uint64_t v5 = (void *)sub_1C214B0A0();
    id v6 = objc_msgSend(self, sel_configurationWithFont_, v5);

    id v7 = v6;
    id v8 = (void *)sub_1C214A5B0();
    id v9 = objc_msgSend(self, sel_systemImageNamed_withConfiguration_, v8, v7);

    id v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1838]), sel_init);
    objc_msgSend(v10, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    objc_msgSend(v10, sel_setPreferredSymbolConfiguration_, v7);
    objc_msgSend(v10, sel_setContentMode_, 1);
    if (v9)
    {
      id v11 = self;
      id v12 = v9;
      id v13 = objc_msgSend(v11, sel_quaternaryLabelColor);
      id v14 = objc_msgSend(v12, sel_imageWithTintColor_renderingMode_, v13, 1);
    }
    else
    {
      id v14 = 0;
    }
    objc_msgSend(v10, sel_setImage_, v14);

    uint64_t v15 = *(void **)(v4 + v1);
    *(void *)(v4 + v1) = v10;
    id v3 = v10;

    id v2 = 0;
  }
  id v16 = v2;
  return v3;
}

id sub_1C1FA56E8()
{
  uint64_t v1 = OBJC_IVAR____TtC19HealthMedicationsUI30MedicationsCategoryRoomTipView____lazy_storage___actionButtonsStackView;
  id v2 = *(void **)(v0
                + OBJC_IVAR____TtC19HealthMedicationsUI30MedicationsCategoryRoomTipView____lazy_storage___actionButtonsStackView);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC19HealthMedicationsUI30MedicationsCategoryRoomTipView____lazy_storage___actionButtonsStackView);
  }
  else
  {
    id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1C60]), sel_init);
    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    objc_msgSend(v4, sel_setAxis_, 1);
    objc_msgSend(v4, sel_setAlignment_, 0);
    objc_msgSend(v4, sel_setDistribution_, 0);
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    id v2 = 0;
  }
  id v6 = v2;
  return v3;
}

void sub_1C1FA57AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a3 + 16;
  swift_beginAccess();
  id v4 = (unsigned __int8 *)MEMORY[0x1C8754850](v3);
  if (v4)
  {
    uint64_t v5 = v4;
    id v6 = objc_msgSend(v4, sel_traitCollection);
    id v7 = objc_msgSend(v6, sel_preferredContentSizeCategory);
    int v8 = sub_1C214AE80() & 1;

    if (v8 != v5[OBJC_IVAR____TtC19HealthMedicationsUI30MedicationsCategoryRoomTipView_isUsingVerticalLayout])
    {
      sub_1C1FA5FCC(v8);
      objc_msgSend(v5, sel_invalidateIntrinsicContentSize);
      v9.receiver = v5;
      v9.super_class = (Class)type metadata accessor for MedicationsCategoryRoomTipView(0);
      objc_msgSendSuper2(&v9, sel_layoutSubviews);
    }
  }
}

id sub_1C1FA58B4()
{
  uint64_t v0 = sub_1C2147B20();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F67C08]), sel_init);
  HKUIOnePixel();
  objc_msgSend(v4, sel_setSeparatorThickness_);
  id v5 = objc_msgSend(self, sel_separatorColor);
  objc_msgSend(v4, sel_setColor_, v5);

  uint64_t v6 = sub_1C214A5F0();
  unint64_t v8 = v7;
  uint64_t v14 = 46;
  unint64_t v15 = 0xE100000000000000;
  id v9 = v4;
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  uint64_t v14 = v6;
  unint64_t v15 = v8;
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  uint64_t v11 = v14;
  unint64_t v10 = v15;
  uint64_t v14 = 46;
  unint64_t v15 = 0xE100000000000000;
  sub_1C2147B10();
  sub_1C2147AD0();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  uint64_t v14 = v11;
  unint64_t v15 = v10;
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v12 = (void *)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  objc_msgSend(v9, sel_setAccessibilityIdentifier_, v12);

  return v9;
}

id sub_1C1FA5B58(long long *a1)
{
  uint64_t v2 = v1;
  long long v3 = a1[1];
  long long v26 = *a1;
  long long v27 = v3;
  long long v28 = a1[2];
  id v4 = objc_msgSend(self, sel_buttonWithType_, 1);
  objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  sub_1C214A5F0();
  id v5 = v4;
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v6 = (void *)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  objc_msgSend(v5, sel_setAccessibilityIdentifier_, v6);

  sub_1C1F12718(0, &qword_1EA2C3198);
  unint64_t v7 = (_OWORD *)swift_allocObject();
  long long v8 = v27;
  v7[1] = v26;
  uint64_t v7[2] = v8;
  v7[3] = v28;
  sub_1C1FA9B18((uint64_t)&v26);
  id v9 = (void *)sub_1C214B250();
  objc_msgSend(v5, sel_addAction_forControlEvents_, v9, 64, 0, 0, 0, sub_1C1FA9AF0, v7);

  id v10 = v5;
  id v11 = objc_msgSend(v2, sel_backgroundColor);
  objc_msgSend(v10, sel_setBackgroundColor_, v11);

  id v12 = objc_msgSend(v10, sel_titleLabel);
  if (v12)
  {
    id v13 = v12;
    sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8E0);
    uint64_t v14 = (void *)sub_1C214B0A0();
    objc_msgSend(v13, sel_setFont_, v14);
  }
  id v15 = objc_msgSend(v10, sel_titleLabel);
  if (v15)
  {
    id v16 = v15;
    objc_msgSend(v15, sel_setAdjustsFontForContentSizeCategory_, 1);
  }
  id v17 = objc_msgSend(v10, sel_titleLabel);
  if (v17)
  {
    uint64_t v18 = v17;
    objc_msgSend(v17, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  }
  id v19 = objc_msgSend(v10, sel_titleLabel);
  if (v19)
  {
    uint64_t v20 = v19;
    objc_msgSend(v19, sel_setNumberOfLines_, 0);
  }
  id v21 = objc_msgSend(v10, sel_titleLabel);
  if (v21)
  {
    uint64_t v22 = v21;
    id v23 = objc_msgSend(self, sel_systemBlueColor);
    objc_msgSend(v22, sel_setTextColor_, v23);
  }
  uint64_t v24 = (void *)sub_1C214A5B0();
  objc_msgSend(v10, sel_setTitle_forState_, v24, 0);

  objc_msgSend(v10, sel_setContentHorizontalAlignment_, 4);
  return v10;
}

void sub_1C1FA5FCC(int a1)
{
  uint64_t v2 = v1;
  swift_getObjectType();
  id v4 = (void *)sub_1C21497F0();
  id v5 = (__objc2_prot **)*(v4 - 1);
  MEMORY[0x1F4188790](v4);
  unint64_t v7 = (char *)&v119 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = sub_1C1FA54C8();
  id v9 = objc_msgSend(v8, sel_image);

  if (!v9) {
    goto LABEL_14;
  }
  int v120 = a1;
  id v119 = v9;
  objc_msgSend(v9, sel_size);
  double v11 = v10;
  double v13 = v12;
  objc_msgSend(v2, sel_setLayoutMargins_, 11.0, 13.0, 11.0, 13.0);
  sub_1C1F13C84(0, (unint64_t *)&qword_1EBF0CA10);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1C21532C0;
  id v15 = sub_1C1FA5264();
  id v16 = objc_msgSend(v15, sel_topAnchor);

  id v17 = objc_msgSend(v2, sel_topAnchor);
  id v18 = objc_msgSend(v16, sel_constraintEqualToAnchor_, v17);

  *(void *)(v14 + 32) = v18;
  id v19 = sub_1C1FA5264();
  id v20 = objc_msgSend(v19, sel_trailingAnchor);

  id v21 = objc_msgSend(v2, sel_trailingAnchor);
  id v22 = objc_msgSend(v20, (SEL)&selRef_leadingAnchor + 6, v21);

  *(void *)(v14 + 40) = v22;
  id v23 = sub_1C1FA5264();
  id v24 = objc_msgSend(v23, sel_widthAnchor);

  id v25 = objc_msgSend(v24, sel_constraintEqualToConstant_, v11 + 26.0);
  *(void *)(v14 + 48) = v25;
  id v26 = sub_1C1FA5264();
  id v27 = objc_msgSend(v26, sel_heightAnchor);

  id v28 = objc_msgSend(v27, sel_constraintEqualToConstant_, v13 + 22.0);
  *(void *)(v14 + 56) = v28;
  id v29 = sub_1C1FA54C8();
  id v30 = objc_msgSend(v29, sel_topAnchor);

  id v31 = objc_msgSend(v2, sel_topAnchor);
  id v32 = objc_msgSend(v30, sel_constraintEqualToAnchor_constant_, v31, 11.0);

  *(void *)(v14 + 64) = v32;
  id v33 = sub_1C1FA54C8();
  id v34 = objc_msgSend(v33, sel_trailingAnchor);

  id v35 = objc_msgSend(v2, sel_trailingAnchor);
  id v36 = objc_msgSend(v34, sel_constraintEqualToAnchor_constant_, v35, -13.0);

  *(void *)(v14 + 72) = v36;
  id v37 = sub_1C1FA54C8();
  id v38 = objc_msgSend(v37, sel_widthAnchor);

  id v39 = objc_msgSend(v38, sel_constraintGreaterThanOrEqualToConstant_, v11);
  *(void *)(v14 + 80) = v39;
  id v40 = sub_1C1FA4F88();
  id v41 = objc_msgSend(v40, sel_topAnchor);

  id v42 = sub_1C1FA4CEC();
  id v5 = &off_1E6447000;
  id v43 = objc_msgSend(v42, sel_bottomAnchor);

  id v44 = objc_msgSend(v41, sel_constraintEqualToAnchor_constant_, v43, 4.0);
  *(void *)(v14 + 88) = v44;
  id v45 = sub_1C1FA4F88();
  id v46 = objc_msgSend(v45, sel_leadingAnchor);

  id v47 = sub_1C1FA4CEC();
  id v48 = objc_msgSend(v47, sel_leadingAnchor);

  id v49 = objc_msgSend(v46, sel_constraintEqualToAnchor_, v48);
  *(void *)(v14 + 96) = v49;
  id v50 = sub_1C1FA4F88();
  id v51 = objc_msgSend(v50, sel_trailingAnchor);

  id v52 = objc_msgSend(v2, sel_trailingAnchor);
  id v53 = objc_msgSend(v51, sel_constraintEqualToAnchor_constant_, v52, -13.0);

  *(void *)(v14 + 104) = v53;
  id v54 = sub_1C1FA4F88();
  id v55 = objc_msgSend(v54, sel_bottomAnchor);

  id v56 = sub_1C1FA56E8();
  id v57 = objc_msgSend(v56, sel_topAnchor);

  id v58 = objc_msgSend(v55, sel_constraintEqualToAnchor_constant_, v57, -11.0);
  *(void *)(v14 + 112) = v58;
  id v59 = sub_1C1FA56E8();
  id v60 = objc_msgSend(v59, sel_topAnchor);

  id v61 = sub_1C1FA4F88();
  id v62 = objc_msgSend(v61, sel_bottomAnchor);

  id v63 = objc_msgSend(v60, sel_constraintEqualToAnchor_constant_, v62, 11.0);
  *(void *)(v14 + 120) = v63;
  id v64 = sub_1C1FA56E8();
  id v65 = objc_msgSend(v64, sel_trailingAnchor);

  id v66 = objc_msgSend(v2, sel_trailingAnchor);
  id v67 = objc_msgSend(v65, sel_constraintEqualToAnchor_, v66);

  *(void *)(v14 + 128) = v67;
  id v68 = sub_1C1FA56E8();
  id v69 = objc_msgSend(v68, sel_bottomAnchor);

  id v70 = objc_msgSend(v2, sel_bottomAnchor);
  id v71 = objc_msgSend(v69, sel_constraintEqualToAnchor_, v70);

  *(void *)(v14 + 136) = v71;
  unint64_t v122 = v14;
  sub_1C214A7A0();
  unint64_t v72 = v122;
  uint64_t v73 = OBJC_IVAR____TtC19HealthMedicationsUI30MedicationsCategoryRoomTipView_headerView;
  uint64_t v74 = *(void **)&v2[OBJC_IVAR____TtC19HealthMedicationsUI30MedicationsCategoryRoomTipView_headerView];
  if (v74)
  {
    id v75 = v74;
    id v76 = objc_msgSend(v75, sel_topAnchor);
    id v77 = objc_msgSend(v2, sel_topAnchor);
    id v78 = objc_msgSend(v76, sel_constraintEqualToAnchor_constant_, v77, 11.0);

    id v79 = objc_msgSend(v75, sel_trailingAnchor);
    id v80 = sub_1C1FA54C8();
    id v5 = (__objc2_prot **)objc_msgSend(v80, sel_leadingAnchor);

    id v81 = objc_msgSend(v79, sel_constraintLessThanOrEqualToAnchor_constant_, v5, 11.0);
    if (v72 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v116 = sub_1C214B930();
      swift_bridgeObjectRelease();
      uint64_t v83 = v116 + 2;
      if (!__OFADD__(v116, 2))
      {
LABEL_5:
        sub_1C1FCDE1C(v83, 1);
        sub_1C214A7A0();
        unint64_t v72 = (unint64_t)v78;
        MEMORY[0x1C87528E0]();
        if (*(void *)((v122 & 0xFFFFFFFFFFFFFF8) + 0x10) < *(void *)((v122 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        {
LABEL_6:
          sub_1C214A820();
          sub_1C214A7A0();
          id v84 = v81;
          MEMORY[0x1C87528E0]();
          if (*(void *)((v122 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v122 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_1C214A7D0();
          }
          sub_1C214A820();
          sub_1C214A7A0();

          goto LABEL_9;
        }
LABEL_32:
        sub_1C214A7D0();
        goto LABEL_6;
      }
    }
    else
    {
      uint64_t v82 = *(void *)((v72 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t v83 = v82 + 2;
      if (!__OFADD__(v82, 2)) {
        goto LABEL_5;
      }
    }
    __break(1u);
    goto LABEL_32;
  }
LABEL_9:
  id v85 = sub_1C1FA4CEC();
  id v86 = v85;
  char v87 = v120;
  if ((v120 & 1) == 0)
  {
    id v101 = objc_msgSend(v85, sel_topAnchor);

    uint64_t v102 = *(void *)&v2[v73];
    BOOL v103 = v102 == 0;
    if (v102) {
      uint64_t v104 = *(void **)&v2[v73];
    }
    else {
      uint64_t v104 = v2;
    }
    uint64_t v105 = &selRef_bottomAnchor;
    if (v103) {
      uint64_t v105 = &selRef_topAnchor;
    }
    id v106 = [v104 *v105];
    id v4 = objc_msgSend(v101, sel_constraintEqualToAnchor_constant_, v106, 11.0);

    id v107 = sub_1C1FA4CEC();
    id v108 = objc_msgSend(v107, sel_trailingAnchor);

    id v109 = sub_1C1FA54C8();
    id v110 = objc_msgSend(v109, sel_leadingAnchor);

    unint64_t v7 = (char *)objc_msgSend(v108, sel_constraintEqualToAnchor_constant_, v110, -10.0);
    if (v122 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v118 = sub_1C214B930();
      swift_bridgeObjectRelease();
      uint64_t v94 = v118 + 2;
      if (!__OFADD__(v118, 2)) {
        goto LABEL_24;
      }
    }
    else
    {
      uint64_t v111 = *(void *)((v122 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t v94 = v111 + 2;
      if (!__OFADD__(v111, 2))
      {
LABEL_24:
        sub_1C1FCDE1C(v94, 1);
        sub_1C214A7A0();
        uint64_t v112 = v4;
        MEMORY[0x1C87528E0]();
        if (*(void *)((v122 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v122 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1C214A7D0();
        }
        sub_1C214A820();
        sub_1C214A7A0();
        uint64_t v113 = v7;
        MEMORY[0x1C87528E0]();
        if (*(void *)((v122 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v122 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1C214A7D0();
        }
        sub_1C214A820();
        sub_1C214A7A0();

        unint64_t v114 = v122;
        unint64_t v115 = sub_1C1FA6D48(v87 & 1);
        uint64_t v121 = v114;
        sub_1C1F7D590(v115);
        sub_1C1FA4860(v121);

        v2[OBJC_IVAR____TtC19HealthMedicationsUI30MedicationsCategoryRoomTipView_isUsingVerticalLayout] = v87 & 1;
        return;
      }
    }
    __break(1u);
    return;
  }
  id v88 = objc_msgSend(v85, sel_trailingAnchor);

  id v89 = objc_msgSend(v2, sel_trailingAnchor);
  id v4 = objc_msgSend(v88, sel_constraintEqualToAnchor_constant_, v89, -13.0);

  id v90 = sub_1C1FA56E8();
  id v91 = objc_msgSend(v90, sel_leadingAnchor);

  id v92 = objc_msgSend(v2, sel_leadingAnchor);
  unint64_t v7 = (char *)objc_msgSend(v91, sel_constraintEqualToAnchor_constant_, v92, 13.0);

  if (v122 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v117 = sub_1C214B930();
    swift_bridgeObjectRelease();
    uint64_t v94 = v117 + 2;
    if (!__OFADD__(v117, 2)) {
      goto LABEL_24;
    }
  }
  else
  {
    uint64_t v93 = *(void *)((v122 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v94 = v93 + 2;
    if (!__OFADD__(v93, 2)) {
      goto LABEL_24;
    }
  }
  __break(1u);
LABEL_14:
  sub_1C21497A0();
  uint64_t v95 = sub_1C21497E0();
  os_log_type_t v96 = sub_1C214ABD0();
  if (os_log_type_enabled(v95, v96))
  {
    unint64_t v97 = (uint8_t *)swift_slowAlloc();
    uint64_t v98 = swift_slowAlloc();
    unint64_t v122 = v98;
    *(_DWORD *)unint64_t v97 = 136315138;
    uint64_t v99 = sub_1C214BC10();
    uint64_t v121 = sub_1C1F6FD54(v99, v100, (uint64_t *)&v122);
    sub_1C214B530();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C1F0B000, v95, v96, "[%s] Dismiss button image is nil.", v97, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C8754730](v98, -1, -1);
    MEMORY[0x1C8754730](v97, -1, -1);
  }

  ((void (*)(char *, id))v5[1])(v7, v4);
}

uint64_t sub_1C1FA6D48(char a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for TipImage(0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (id *)((char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C1FAA660((uint64_t)&v1[OBJC_IVAR____TtC19HealthMedicationsUI30MedicationsCategoryRoomTipView_tipImage], (uint64_t)v6, type metadata accessor for TipImage);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      id v8 = sub_1C1FA4B54();
      sub_1C1FAA600((uint64_t)v6, type metadata accessor for TipImage);
      goto LABEL_7;
    }
  }
  else
  {

    swift_bridgeObjectRelease();
  }
  id v8 = sub_1C1FA496C();
LABEL_7:
  sub_1C1F13C84(0, (unint64_t *)&qword_1EBF0CA10);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1C21510C0;
  id v10 = objc_msgSend(v8, sel_topAnchor);
  uint64_t v11 = OBJC_IVAR____TtC19HealthMedicationsUI30MedicationsCategoryRoomTipView_headerView;
  uint64_t v12 = *(void *)&v2[OBJC_IVAR____TtC19HealthMedicationsUI30MedicationsCategoryRoomTipView_headerView];
  BOOL v13 = v12 == 0;
  if (v12) {
    uint64_t v14 = *(void **)&v2[OBJC_IVAR____TtC19HealthMedicationsUI30MedicationsCategoryRoomTipView_headerView];
  }
  else {
    uint64_t v14 = v2;
  }
  id v15 = &selRef_bottomAnchor;
  if (v13) {
    id v15 = &selRef_topAnchor;
  }
  id v16 = [v14 *v15];
  id v17 = objc_msgSend(v10, sel_constraintEqualToAnchor_constant_, v16, 11.0);

  *(void *)(v9 + 32) = v17;
  id v18 = objc_msgSend(v8, sel_leadingAnchor);
  id v19 = objc_msgSend(v2, sel_leadingAnchor);
  id v20 = objc_msgSend(v18, sel_constraintEqualToAnchor_constant_, v19, 13.0);

  *(void *)(v9 + 40) = v20;
  id v21 = objc_msgSend(v8, sel_widthAnchor);
  id v22 = objc_msgSend(v21, sel_constraintEqualToConstant_, 45.0);

  *(void *)(v9 + 48) = v22;
  id v23 = objc_msgSend(v8, sel_heightAnchor);
  id v24 = objc_msgSend(v23, sel_constraintEqualToConstant_, 45.0);

  *(void *)(v9 + 56) = v24;
  unint64_t v53 = v9;
  sub_1C214A7A0();
  id v25 = *(void **)&v2[v11];
  if (v25)
  {
    id v26 = v25;
    id v27 = objc_msgSend(v26, sel_leadingAnchor);
    id v28 = objc_msgSend(v8, sel_leadingAnchor);
    id v29 = objc_msgSend(v27, sel_constraintEqualToAnchor_, v28);

    id v30 = v29;
    MEMORY[0x1C87528E0]();
    if (*(void *)((v53 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v53 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C214A7D0();
    }
    sub_1C214A820();
    sub_1C214A7A0();
  }
  id v31 = sub_1C1FA4CEC();
  id v32 = v31;
  if (a1)
  {
    id v33 = objc_msgSend(v31, sel_topAnchor);

    id v34 = objc_msgSend(v8, sel_bottomAnchor);
    id v35 = objc_msgSend(v33, sel_constraintEqualToAnchor_constant_, v34, 4.0);

    id v36 = sub_1C1FA4CEC();
    id v37 = objc_msgSend(v36, sel_leadingAnchor);

    id v38 = objc_msgSend(v8, sel_leadingAnchor);
    id v39 = objc_msgSend(v37, sel_constraintEqualToAnchor_, v38);

    id v32 = (void *)v53;
    if (v53 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v50 = sub_1C214B930();
      swift_bridgeObjectRelease();
      uint64_t result = v50 + 2;
      if (!__OFADD__(v50, 2)) {
        goto LABEL_23;
      }
    }
    else
    {
      uint64_t v40 = *(void *)((v53 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t result = v40 + 2;
      if (!__OFADD__(v40, 2)) {
        goto LABEL_23;
      }
    }
    __break(1u);
  }
  id v42 = objc_msgSend(v32, sel_leadingAnchor);

  id v43 = objc_msgSend(v8, sel_trailingAnchor);
  id v35 = objc_msgSend(v42, sel_constraintEqualToAnchor_constant_, v43, 11.0);

  id v44 = sub_1C1FA56E8();
  id v45 = objc_msgSend(v44, sel_leadingAnchor);

  id v46 = objc_msgSend(v8, sel_trailingAnchor);
  id v39 = objc_msgSend(v45, sel_constraintEqualToAnchor_constant_, v46, 11.0);

  if (v53 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v51 = sub_1C214B930();
    swift_bridgeObjectRelease();
    uint64_t result = v51 + 2;
    if (!__OFADD__(v51, 2)) {
      goto LABEL_23;
    }
LABEL_33:
    __break(1u);
    return result;
  }
  uint64_t v47 = *(void *)((v53 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = v47 + 2;
  if (__OFADD__(v47, 2)) {
    goto LABEL_33;
  }
LABEL_23:
  sub_1C1FCDE1C(result, 1);
  sub_1C214A7A0();
  id v48 = v35;
  MEMORY[0x1C87528E0]();
  if (*(void *)((v53 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v53 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1C214A7D0();
  }
  sub_1C214A820();
  sub_1C214A7A0();
  id v49 = v39;
  MEMORY[0x1C87528E0]();
  if (*(void *)((v53 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v53 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1C214A7D0();
  }
  sub_1C214A820();
  sub_1C214A7A0();

  return v53;
}

id MedicationsCategoryRoomTipView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  id v9 = objc_allocWithZone(v4);

  return objc_msgSend(v9, sel_initWithFrame_, a1, a2, a3, a4);
}

void MedicationsCategoryRoomTipView.init(frame:)()
{
}

id MedicationsCategoryRoomTipView.__deallocating_deinit()
{
  return sub_1C1FA7540(0, (uint64_t (*)(void))type metadata accessor for MedicationsCategoryRoomTipView);
}

id sub_1C1FA7540(uint64_t a1, uint64_t (*a2)(void))
{
  v4.receiver = v2;
  v4.super_class = (Class)a2();
  return objc_msgSendSuper2(&v4, sel_dealloc);
}

uint64_t _s19HealthMedicationsUI0B15CategoryTipItemV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MedicationsCategoryTipItem(0);
  uint64_t v5 = MEMORY[0x1F4188790](v4);
  unint64_t v7 = (uint64_t *)((char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = MEMORY[0x1F4188790](v5);
  id v10 = (uint64_t *)((char *)&v22 - v9);
  uint64_t v11 = MEMORY[0x1F4188790](v8);
  BOOL v13 = (char *)&v22 - v12;
  MEMORY[0x1F4188790](v11);
  id v15 = (char *)&v22 - v14;
  if (*(void *)(a1 + 16) == *(void *)(a2 + 16) && *(void *)(a1 + 24) == *(void *)(a2 + 24))
  {
    sub_1C1FAA660(a1, (uint64_t)&v22 - v14, type metadata accessor for MedicationsCategoryTipItem);
    sub_1C1FAA660(a2, (uint64_t)v13, type metadata accessor for MedicationsCategoryTipItem);
  }
  else
  {
    char v17 = sub_1C214BA80();
    sub_1C1FAA660(a1, (uint64_t)v15, type metadata accessor for MedicationsCategoryTipItem);
    sub_1C1FAA660(a2, (uint64_t)v13, type metadata accessor for MedicationsCategoryTipItem);
    if ((v17 & 1) == 0)
    {
      sub_1C1FAA600((uint64_t)v15, type metadata accessor for MedicationsCategoryTipItem);
      sub_1C1FAA600((uint64_t)v13, type metadata accessor for MedicationsCategoryTipItem);
      sub_1C1FAA660(a2, (uint64_t)v10, type metadata accessor for MedicationsCategoryTipItem);
      sub_1C1FAA660(a1, (uint64_t)v7, type metadata accessor for MedicationsCategoryTipItem);
LABEL_14:
      char v20 = 0;
      goto LABEL_16;
    }
  }
  char v18 = sub_1C1FC1880(*(void *)&v15[*(int *)(v4 + 52)], *(void *)&v13[*(int *)(v4 + 52)]);
  sub_1C1FAA600((uint64_t)v15, type metadata accessor for MedicationsCategoryTipItem);
  sub_1C1FAA600((uint64_t)v13, type metadata accessor for MedicationsCategoryTipItem);
  sub_1C1FAA660(a2, (uint64_t)v10, type metadata accessor for MedicationsCategoryTipItem);
  sub_1C1FAA660(a1, (uint64_t)v7, type metadata accessor for MedicationsCategoryTipItem);
  if ((v18 & 1) == 0) {
    goto LABEL_14;
  }
  if (*v10 == *v7 && v10[1] == v7[1]) {
    char v20 = 1;
  }
  else {
    char v20 = sub_1C214BA80();
  }
LABEL_16:
  sub_1C1FAA600((uint64_t)v10, type metadata accessor for MedicationsCategoryTipItem);
  sub_1C1FAA600((uint64_t)v7, type metadata accessor for MedicationsCategoryTipItem);
  return v20 & 1;
}

uint64_t type metadata accessor for MedicationsCategoryRoomTipView(uint64_t a1)
{
  return sub_1C1F20D10(a1, (uint64_t *)&unk_1EBF0B5D0);
}

unint64_t sub_1C1FA7948()
{
  unint64_t result = qword_1EA2C4508;
  if (!qword_1EA2C4508)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C4508);
  }
  return result;
}

uint64_t sub_1C1FA799C()
{
  return sub_1C1FA79E8((unint64_t *)&unk_1EA2C4510, 255, (void (*)(uint64_t))type metadata accessor for MedicationsCategoryTipItem);
}

uint64_t sub_1C1FA79E8(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C1FA7A30@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC19HealthMedicationsUI25MedicationCategoryTipCell_item;
  swift_beginAccess();
  return sub_1C1FAA660(v3, a2, (uint64_t (*)(void))sub_1C1F24488);
}

uint64_t destroy for TipAction()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t initializeWithCopy for TipAction(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

void *assignWithCopy for TipAction(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = a2[5];
  a1[4] = a2[4];
  a1[5] = v4;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for TipAction(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = v5;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for TipAction()
{
  return &type metadata for TipAction;
}

char *initializeBufferWithCopyOfBuffer for TipImage(char *a1, char **a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    id v10 = *a2;
    *(void *)a1 = *a2;
    a1 = &v10[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v11 = *a2;
      *(void *)a1 = *a2;
      uint64_t v12 = v11;
    }
    else if (EnumCaseMultiPayload == 1)
    {
      uint64_t v7 = sub_1C21492D0();
      uint64_t v8 = *(void *)(v7 - 8);
      if ((*(unsigned int (**)(char **, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
      {
        sub_1C1FA7E4C(0, (unint64_t *)&qword_1EBF0B690, MEMORY[0x1E4F66C80], MEMORY[0x1E4FBB718]);
        memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char **, uint64_t))(v8 + 16))(a1, a2, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
      }
    }
    else
    {
      BOOL v13 = a2[1];
      *(void *)a1 = *a2;
      *((void *)a1 + 1) = v13;
      id v15 = a2[2];
      uint64_t v14 = a2[3];
      *((void *)a1 + 2) = v15;
      *((void *)a1 + 3) = v14;
      swift_bridgeObjectRetain();
      id v16 = v15;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void sub_1C1FA7E4C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void destroy for TipImage(uint64_t a1)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v3 = *(void **)a1;
LABEL_6:

    return;
  }
  if (EnumCaseMultiPayload != 1)
  {
    if (EnumCaseMultiPayload) {
      return;
    }
    swift_bridgeObjectRelease();
    uint64_t v3 = *(void **)(a1 + 16);
    goto LABEL_6;
  }
  uint64_t v4 = sub_1C21492D0();
  uint64_t v6 = *(void *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v4))
  {
    int v5 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
    v5(a1, v4);
  }
}

void **initializeWithCopy for TipImage(void **a1, void **a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    unint64_t v8 = *a2;
    *a1 = *a2;
    id v9 = v8;
  }
  else if (EnumCaseMultiPayload == 1)
  {
    uint64_t v5 = sub_1C21492D0();
    uint64_t v6 = *(void *)(v5 - 8);
    if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
    {
      sub_1C1FA7E4C(0, (unint64_t *)&qword_1EBF0B690, MEMORY[0x1E4F66C80], MEMORY[0x1E4FBB718]);
      memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
    }
    else
    {
      (*(void (**)(void **, void **, uint64_t))(v6 + 16))(a1, a2, v5);
      (*(void (**)(void **, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
    }
  }
  else
  {
    id v10 = a2[1];
    *a1 = *a2;
    a1[1] = v10;
    uint64_t v12 = a2[2];
    uint64_t v11 = a2[3];
    a1[2] = v12;
    a1[3] = v11;
    swift_bridgeObjectRetain();
    id v13 = v12;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void **assignWithCopy for TipImage(void **a1, void **a2)
{
  if (a1 != a2)
  {
    sub_1C1FAA600((uint64_t)a1, type metadata accessor for TipImage);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      unint64_t v8 = *a2;
      *a1 = *a2;
      id v9 = v8;
    }
    else if (EnumCaseMultiPayload == 1)
    {
      uint64_t v5 = sub_1C21492D0();
      uint64_t v6 = *(void *)(v5 - 8);
      if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
      {
        sub_1C1FA7E4C(0, (unint64_t *)&qword_1EBF0B690, MEMORY[0x1E4F66C80], MEMORY[0x1E4FBB718]);
        memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
      }
      else
      {
        (*(void (**)(void **, void **, uint64_t))(v6 + 16))(a1, a2, v5);
        (*(void (**)(void **, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
      }
    }
    else
    {
      *a1 = *a2;
      a1[1] = a2[1];
      id v10 = a2[2];
      a1[2] = v10;
      a1[3] = a2[3];
      swift_bridgeObjectRetain();
      id v11 = v10;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *initializeWithTake for TipImage(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_1C21492D0();
    uint64_t v7 = *(void *)(v6 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
    {
      sub_1C1FA7E4C(0, (unint64_t *)&qword_1EBF0B690, MEMORY[0x1E4F66C80], MEMORY[0x1E4FBB718]);
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *assignWithTake for TipImage(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1C1FAA600((uint64_t)a1, type metadata accessor for TipImage);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_1C21492D0();
      uint64_t v7 = *(void *)(v6 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
      {
        sub_1C1FA7E4C(0, (unint64_t *)&qword_1EBF0B690, MEMORY[0x1E4F66C80], MEMORY[0x1E4FBB718]);
        memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(a1, a2, v6);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for MedicationSearchItem.Source(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(void *)(a3 - 8) + 48))();
}

uint64_t storeEnumTagSinglePayload for MedicationSearchItem.Source(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(void *)(a4 - 8) + 56))();
}

uint64_t sub_1C1FA8708()
{
  return swift_storeEnumTagMultiPayload();
}

void sub_1C1FA8718()
{
  sub_1C1FA7E4C(319, (unint64_t *)&qword_1EBF0B690, MEMORY[0x1E4F66C80], MEMORY[0x1E4FBB718]);
  if (v0 <= 0x3F) {
    swift_initEnumMetadataMultiPayload();
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for MedicationsCategoryTipItem(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v21 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[2];
    uint64_t v9 = a2[3];
    id v11 = (void *)a2[4];
    uint64_t v10 = a2[5];
    a1[4] = (uint64_t)v11;
    a1[5] = v10;
    uint64_t v12 = a2[7];
    a1[6] = a2[6];
    a1[7] = v12;
    uint64_t v13 = a2[9];
    a1[8] = a2[8];
    a1[9] = v13;
    uint64_t v14 = a3[10];
    id v38 = (void **)((char *)a1 + v14);
    id v15 = (void **)((char *)a2 + v14);
    a1[2] = v8;
    a1[3] = v9;
    type metadata accessor for TipImage(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v16 = v11;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v22 = *v15;
      *id v38 = *v15;
      id v23 = v22;
    }
    else if (EnumCaseMultiPayload == 1)
    {
      uint64_t v18 = sub_1C21492D0();
      uint64_t v19 = *(void *)(v18 - 8);
      if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v19 + 48))(v15, 1, v18))
      {
        sub_1C1FA7E4C(0, (unint64_t *)&qword_1EBF0B690, MEMORY[0x1E4F66C80], MEMORY[0x1E4FBB718]);
        memcpy(v38, v15, *(void *)(*(void *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(void **, void **, uint64_t))(v19 + 16))(v38, v15, v18);
        (*(void (**)(void **, void, uint64_t, uint64_t))(v19 + 56))(v38, 0, 1, v18);
      }
    }
    else
    {
      id v24 = v15[1];
      *id v38 = *v15;
      v38[1] = v24;
      id v26 = v15[2];
      id v25 = v15[3];
      v38[2] = v26;
      v38[3] = v25;
      swift_bridgeObjectRetain();
      id v27 = v26;
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v28 = a3[11];
    id v29 = (uint64_t *)((char *)v4 + v28);
    id v30 = (uint64_t *)((char *)a2 + v28);
    if (*v30)
    {
      uint64_t v31 = v30[1];
      *id v29 = *v30;
      v29[1] = v31;
      swift_retain();
    }
    else
    {
      *(_OWORD *)id v29 = *(_OWORD *)v30;
    }
    uint64_t v32 = a3[12];
    uint64_t v33 = a3[13];
    id v34 = (uint64_t *)((char *)v4 + v32);
    id v35 = (uint64_t *)((char *)a2 + v32);
    uint64_t v36 = v35[1];
    *id v34 = *v35;
    v34[1] = v36;
    *(uint64_t *)((char *)v4 + v33) = *(uint64_t *)((char *)a2 + v33);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for MedicationsCategoryTipItem(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 40);
  type metadata accessor for TipImage(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v6 = *(void **)v4;
LABEL_6:

    goto LABEL_9;
  }
  if (EnumCaseMultiPayload != 1)
  {
    if (EnumCaseMultiPayload) {
      goto LABEL_9;
    }
    swift_bridgeObjectRelease();
    uint64_t v6 = *(void **)(v4 + 16);
    goto LABEL_6;
  }
  uint64_t v7 = sub_1C21492D0();
  uint64_t v8 = *(void *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v4, 1, v7)) {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v4, v7);
  }
LABEL_9:
  if (*(void *)(a1 + *(int *)(a2 + 44))) {
    swift_release();
  }
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for MedicationsCategoryTipItem(void *a1, void *a2, int *a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  uint64_t v6 = a2[2];
  uint64_t v7 = a2[3];
  uint64_t v9 = (void *)a2[4];
  uint64_t v8 = a2[5];
  a1[4] = v9;
  a1[5] = v8;
  uint64_t v10 = a2[7];
  a1[6] = a2[6];
  a1[7] = v10;
  uint64_t v11 = a2[9];
  a1[8] = a2[8];
  a1[9] = v11;
  uint64_t v12 = a3[10];
  uint64_t v13 = (void **)((char *)a1 + v12);
  uint64_t v14 = (void **)((char *)a2 + v12);
  a1[2] = v6;
  a1[3] = v7;
  type metadata accessor for TipImage(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v15 = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v21 = *v14;
    *uint64_t v13 = *v14;
    id v22 = v21;
    uint64_t v19 = a3;
  }
  else if (EnumCaseMultiPayload == 1)
  {
    uint64_t v17 = sub_1C21492D0();
    uint64_t v18 = *(void *)(v17 - 8);
    uint64_t v19 = a3;
    if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v18 + 48))(v14, 1, v17))
    {
      sub_1C1FA7E4C(0, (unint64_t *)&qword_1EBF0B690, MEMORY[0x1E4F66C80], MEMORY[0x1E4FBB718]);
      memcpy(v13, v14, *(void *)(*(void *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(void **, void **, uint64_t))(v18 + 16))(v13, v14, v17);
      (*(void (**)(void **, void, uint64_t, uint64_t))(v18 + 56))(v13, 0, 1, v17);
    }
  }
  else
  {
    uint64_t v19 = a3;
    id v23 = v14[1];
    *uint64_t v13 = *v14;
    v13[1] = v23;
    id v25 = v14[2];
    id v24 = v14[3];
    void v13[2] = v25;
    v13[3] = v24;
    swift_bridgeObjectRetain();
    id v26 = v25;
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v27 = v19[11];
  uint64_t v28 = (void *)((char *)a1 + v27);
  id v29 = (void *)((char *)a2 + v27);
  if (*v29)
  {
    uint64_t v30 = v29[1];
    *uint64_t v28 = *v29;
    v28[1] = v30;
    swift_retain();
  }
  else
  {
    *(_OWORD *)uint64_t v28 = *(_OWORD *)v29;
  }
  uint64_t v31 = v19[12];
  uint64_t v32 = v19[13];
  uint64_t v33 = (void *)((char *)a1 + v31);
  id v34 = (void *)((char *)a2 + v31);
  uint64_t v35 = v34[1];
  *uint64_t v33 = *v34;
  v33[1] = v35;
  *(void *)((char *)a1 + v32) = *(void *)((char *)a2 + v32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for MedicationsCategoryTipItem(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = (void *)a1[4];
  uint64_t v7 = (void *)a2[4];
  a1[4] = v7;
  id v8 = v7;

  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[9] = a2[9];
  if (a1 != a2)
  {
    uint64_t v9 = a3[10];
    uint64_t v10 = (void **)((char *)a1 + v9);
    uint64_t v11 = (void **)((char *)a2 + v9);
    sub_1C1FAA600((uint64_t)a1 + v9, type metadata accessor for TipImage);
    type metadata accessor for TipImage(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      id v16 = *v11;
      *uint64_t v10 = *v11;
      id v17 = v16;
    }
    else if (EnumCaseMultiPayload == 1)
    {
      uint64_t v13 = sub_1C21492D0();
      uint64_t v14 = *(void *)(v13 - 8);
      if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v14 + 48))(v11, 1, v13))
      {
        sub_1C1FA7E4C(0, (unint64_t *)&qword_1EBF0B690, MEMORY[0x1E4F66C80], MEMORY[0x1E4FBB718]);
        memcpy(v10, v11, *(void *)(*(void *)(v15 - 8) + 64));
      }
      else
      {
        (*(void (**)(void **, void **, uint64_t))(v14 + 16))(v10, v11, v13);
        (*(void (**)(void **, void, uint64_t, uint64_t))(v14 + 56))(v10, 0, 1, v13);
      }
    }
    else
    {
      *uint64_t v10 = *v11;
      v10[1] = v11[1];
      uint64_t v18 = v11[2];
      v10[2] = v18;
      v10[3] = v11[3];
      swift_bridgeObjectRetain();
      id v19 = v18;
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v20 = a3[11];
  uint64_t v21 = (void *)((char *)a1 + v20);
  id v22 = (char *)a2 + v20;
  uint64_t v23 = *(void *)((char *)a1 + v20);
  uint64_t v24 = *(void *)((char *)a2 + v20);
  if (!v23)
  {
    if (v24)
    {
      uint64_t v26 = *((void *)v22 + 1);
      *uint64_t v21 = v24;
      v21[1] = v26;
      swift_retain();
      goto LABEL_17;
    }
LABEL_16:
    *(_OWORD *)uint64_t v21 = *(_OWORD *)v22;
    goto LABEL_17;
  }
  if (!v24)
  {
    swift_release();
    goto LABEL_16;
  }
  uint64_t v25 = *((void *)v22 + 1);
  *uint64_t v21 = v24;
  v21[1] = v25;
  swift_retain();
  swift_release();
LABEL_17:
  uint64_t v27 = a3[12];
  uint64_t v28 = (void *)((char *)a1 + v27);
  id v29 = (void *)((char *)a2 + v27);
  *uint64_t v28 = *v29;
  v28[1] = v29[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[13]) = *(void *)((char *)a2 + a3[13]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for MedicationsCategoryTipItem(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  long long v7 = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  uint64_t v8 = a3[10];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (const void *)(a2 + v8);
  *(_OWORD *)(a1 + 56) = v7;
  uint64_t v11 = type metadata accessor for TipImage(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = sub_1C21492D0();
    uint64_t v13 = *(void *)(v12 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v12))
    {
      sub_1C1FA7E4C(0, (unint64_t *)&qword_1EBF0B690, MEMORY[0x1E4F66C80], MEMORY[0x1E4FBB718]);
      memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v13 + 32))(v9, v10, v12);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v9, 0, 1, v12);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
  }
  uint64_t v15 = a3[11];
  id v16 = (void *)(a1 + v15);
  id v17 = (uint64_t *)(a2 + v15);
  uint64_t v18 = *v17;
  if (*v17)
  {
    uint64_t v19 = v17[1];
    *id v16 = v18;
    v16[1] = v19;
  }
  else
  {
    *(_OWORD *)id v16 = *(_OWORD *)v17;
  }
  uint64_t v20 = a3[13];
  *(_OWORD *)(a1 + a3[12]) = *(_OWORD *)(a2 + a3[12]);
  *(void *)(a1 + v20) = *(void *)(a2 + v20);
  return a1;
}

void *assignWithTake for MedicationsCategoryTipItem(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = (void *)a1[4];
  a1[4] = a2[4];

  uint64_t v9 = a2[6];
  a1[5] = a2[5];
  a1[6] = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = a2[8];
  a1[7] = a2[7];
  a1[8] = v10;
  swift_bridgeObjectRelease();
  a1[9] = a2[9];
  if (a1 != a2)
  {
    uint64_t v11 = a3[10];
    uint64_t v12 = (char *)a1 + v11;
    uint64_t v13 = (char *)a2 + v11;
    sub_1C1FAA600((uint64_t)a1 + v11, type metadata accessor for TipImage);
    uint64_t v14 = type metadata accessor for TipImage(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v15 = sub_1C21492D0();
      uint64_t v16 = *(void *)(v15 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v13, 1, v15))
      {
        sub_1C1FA7E4C(0, (unint64_t *)&qword_1EBF0B690, MEMORY[0x1E4F66C80], MEMORY[0x1E4FBB718]);
        memcpy(v12, v13, *(void *)(*(void *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v12, v13, v15);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v12, 0, 1, v15);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v12, v13, *(void *)(*(void *)(v14 - 8) + 64));
    }
  }
  uint64_t v18 = a3[11];
  uint64_t v19 = (void *)((char *)a1 + v18);
  uint64_t v20 = (char *)a2 + v18;
  uint64_t v21 = *(void *)((char *)a1 + v18);
  uint64_t v22 = *(void *)((char *)a2 + v18);
  if (!v21)
  {
    if (v22)
    {
      uint64_t v24 = *((void *)v20 + 1);
      *uint64_t v19 = v22;
      v19[1] = v24;
      goto LABEL_15;
    }
LABEL_14:
    *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
    goto LABEL_15;
  }
  if (!v22)
  {
    swift_release();
    goto LABEL_14;
  }
  uint64_t v23 = *((void *)v20 + 1);
  *uint64_t v19 = v22;
  v19[1] = v23;
  swift_release();
LABEL_15:
  uint64_t v25 = a3[12];
  uint64_t v26 = (void *)((char *)a1 + v25);
  uint64_t v27 = (void *)((char *)a2 + v25);
  uint64_t v29 = *v27;
  uint64_t v28 = v27[1];
  *uint64_t v26 = v29;
  v26[1] = v28;
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[13]) = *(void *)((char *)a2 + a3[13]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MedicationsCategoryTipItem(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C1FA96C4);
}

uint64_t sub_1C1FA96C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for TipImage(0);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 40);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for MedicationsCategoryTipItem(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C1FA9788);
}

uint64_t sub_1C1FA9788(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for TipImage(0);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 40);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1C1FA9830()
{
  uint64_t result = type metadata accessor for TipImage(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t method lookup function for MedicationCategoryTipCell(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MedicationCategoryTipCell);
}

uint64_t dispatch thunk of MedicationCategoryTipCell.item.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x60))();
}

uint64_t dispatch thunk of MedicationCategoryTipCell.item.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of MedicationCategoryTipCell.item.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x70))();
}

uint64_t sub_1C1FA99B0()
{
  return type metadata accessor for MedicationsCategoryRoomTipView(0);
}

uint64_t sub_1C1FA99B8()
{
  uint64_t result = type metadata accessor for TipImage(319);
  if (v1 <= 0x3F) {
    return swift_updateClassMetadata2();
  }
  return result;
}

uint64_t method lookup function for MedicationsCategoryRoomTipView(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MedicationsCategoryRoomTipView);
}

uint64_t sub_1C1FA9AA8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return MEMORY[0x1F4186498](v0, 64, 7);
}

uint64_t sub_1C1FA9AF0()
{
  return (*(uint64_t (**)(void))(v0 + 48))();
}

uint64_t sub_1C1FA9B18(uint64_t a1)
{
  return a1;
}

char *sub_1C1FA9B64(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)&long long v79 = type metadata accessor for TipImage(0);
  MEMORY[0x1F4188790](v79);
  id v80 = (id *)((char *)&v75 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = OBJC_IVAR____TtC19HealthMedicationsUI30MedicationsCategoryRoomTipView_actions;
  uint64_t v13 = MEMORY[0x1E4FBC860];
  *(void *)&v5[OBJC_IVAR____TtC19HealthMedicationsUI30MedicationsCategoryRoomTipView_actions] = MEMORY[0x1E4FBC860];
  uint64_t v14 = OBJC_IVAR____TtC19HealthMedicationsUI30MedicationsCategoryRoomTipView_headerView;
  *(void *)&v5[OBJC_IVAR____TtC19HealthMedicationsUI30MedicationsCategoryRoomTipView_headerView] = 0;
  uint64_t v15 = (uint64_t *)&v5[OBJC_IVAR____TtC19HealthMedicationsUI30MedicationsCategoryRoomTipView_onDismiss];
  *uint64_t v15 = 0;
  v15[1] = 0;
  uint64_t v16 = &v5[OBJC_IVAR____TtC19HealthMedicationsUI30MedicationsCategoryRoomTipView_baseIdentifier];
  *uint64_t v16 = 0;
  v16[1] = 0xE000000000000000;
  v5[OBJC_IVAR____TtC19HealthMedicationsUI30MedicationsCategoryRoomTipView_isUsingVerticalLayout] = 0;
  *(void *)&v5[OBJC_IVAR____TtC19HealthMedicationsUI30MedicationsCategoryRoomTipView_currentConstraints] = v13;
  *(void *)&v5[OBJC_IVAR____TtC19HealthMedicationsUI30MedicationsCategoryRoomTipView____lazy_storage___iconImageView] = 0;
  *(void *)&v5[OBJC_IVAR____TtC19HealthMedicationsUI30MedicationsCategoryRoomTipView____lazy_storage___medicationView] = 0;
  *(void *)&v5[OBJC_IVAR____TtC19HealthMedicationsUI30MedicationsCategoryRoomTipView____lazy_storage___titleLabel] = 0;
  *(void *)&v5[OBJC_IVAR____TtC19HealthMedicationsUI30MedicationsCategoryRoomTipView____lazy_storage___detailLabel] = 0;
  *(void *)&v5[OBJC_IVAR____TtC19HealthMedicationsUI30MedicationsCategoryRoomTipView____lazy_storage___dismissButton] = 0;
  *(void *)&v5[OBJC_IVAR____TtC19HealthMedicationsUI30MedicationsCategoryRoomTipView____lazy_storage___dismissImageView] = 0;
  *(void *)&v5[OBJC_IVAR____TtC19HealthMedicationsUI30MedicationsCategoryRoomTipView____lazy_storage___actionButtonsStackView] = 0;
  uint64_t v17 = *(void **)&v5[v14];
  *(void *)&v5[v14] = a1;
  uint64_t v18 = v5;
  id v75 = a1;

  *(void *)&v5[v12] = a2;
  swift_bridgeObjectRelease();
  uint64_t v19 = *v15;
  *uint64_t v15 = a4;
  v15[1] = a5;
  uint64_t v76 = a4;
  uint64_t v77 = a5;
  sub_1C1F1325C(a4);
  sub_1C1F31118(v19);
  uint64_t v78 = a3;
  sub_1C1FAA660(a3, (uint64_t)&v18[OBJC_IVAR____TtC19HealthMedicationsUI30MedicationsCategoryRoomTipView_tipImage], type metadata accessor for TipImage);

  uint64_t v20 = (objc_class *)type metadata accessor for MedicationsCategoryRoomTipView(0);
  v85.receiver = v18;
  v85.super_class = v20;
  id v21 = objc_msgSendSuper2(&v85, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v22 = self;
  id v23 = v21;
  id v24 = objc_msgSend(v22, sel_secondarySystemBackgroundColor);
  objc_msgSend(v23, sel_setBackgroundColor_, v24);

  id v25 = v23;
  sub_1C2147DE0();
  id v26 = (id)*MEMORY[0x1E4F39EA8];
  sub_1C214B0D0();

  if (a1)
  {
    uint64_t v27 = v75;
    objc_msgSend(v27, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    objc_msgSend(v25, sel_addSubview_, v27);
  }
  id v28 = v25;
  id v29 = sub_1C1FA54C8();
  objc_msgSend(v28, sel_addSubview_, v29);

  id v30 = v28;
  id v31 = sub_1C1FA5264();
  objc_msgSend(v30, sel_addSubview_, v31);

  id v32 = v30;
  id v33 = sub_1C1FA4CEC();
  objc_msgSend(v32, sel_addSubview_, v33);

  id v34 = v32;
  id v35 = sub_1C1FA4F88();
  objc_msgSend(v34, sel_addSubview_, v35);

  uint64_t v36 = (char *)v34;
  id v37 = sub_1C1FA56E8();
  objc_msgSend(v36, sel_addSubview_, v37);

  id v38 = v80;
  sub_1C1FAA660(v78, (uint64_t)v80, type metadata accessor for TipImage);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v40 = v36;
      id v41 = sub_1C1FA4B54();
      objc_msgSend(v40, sel_addSubview_, v41);

      sub_1C1FAA600((uint64_t)v38, type metadata accessor for TipImage);
      goto LABEL_9;
    }
  }
  else
  {

    swift_bridgeObjectRelease();
  }
  id v42 = v36;
  id v43 = sub_1C1FA496C();
  objc_msgSend(v42, sel_addSubview_, v43);

LABEL_9:
  uint64_t v44 = OBJC_IVAR____TtC19HealthMedicationsUI30MedicationsCategoryRoomTipView_actions;
  uint64_t v45 = *(void *)(*(void *)&v36[OBJC_IVAR____TtC19HealthMedicationsUI30MedicationsCategoryRoomTipView_actions] + 16);
  if (v45)
  {
    id v75 = (char *)swift_bridgeObjectRetain();
    id v46 = v75 + 40;
    uint64_t v47 = v36;
    do
    {
      uint64_t v48 = *((void *)v46 - 1);
      uint64_t v49 = *(void *)v46;
      uint64_t v50 = v44;
      uint64_t v51 = *((void *)v46 + 1);
      uint64_t v52 = *((void *)v46 + 4);
      swift_bridgeObjectRetain();
      long long v79 = *((_OWORD *)v46 + 1);
      id v80 = (id *)v79;
      swift_bridgeObjectRetain();
      swift_retain();
      id v53 = sub_1C1FA56E8();
      id v54 = sub_1C1FA58B4();
      objc_msgSend(v53, sel_addArrangedSubview_, v54, v75);

      *(void *)&long long v81 = v48;
      *((void *)&v81 + 1) = v49;
      uint64_t v82 = v51;
      uint64_t v44 = v50;
      long long v83 = v79;
      uint64_t v84 = v52;
      id v55 = sub_1C1FA5B58(&v81);
      id v56 = sub_1C1FA56E8();
      objc_msgSend(v56, sel_addArrangedSubview_, v55);

      id v57 = objc_msgSend(v55, sel_heightAnchor);
      id v58 = objc_msgSend(v57, sel_constraintGreaterThanOrEqualToConstant_, 44.0);

      objc_msgSend(v58, sel_setActive_, 1);
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      v46 += 48;
      --v45;
    }
    while (v45);
    swift_bridgeObjectRelease();
    uint64_t v36 = v47;
  }
  id v59 = sub_1C1FA54C8();
  uint64_t v60 = v76;
  if (v76)
  {
    uint64_t v61 = swift_allocObject();
    uint64_t v62 = v77;
    *(void *)(v61 + 16) = v60;
    *(void *)(v61 + 24) = v62;
    id v63 = sub_1C1FAA6CC;
  }
  else
  {
    id v63 = 0;
    uint64_t v62 = v77;
  }
  sub_1C1F1325C(v60);
  sub_1C1F31118((uint64_t)v63);
  objc_msgSend(v59, sel_setHidden_, v60 == 0);

  id v64 = sub_1C1FA5264();
  if (v60)
  {
    uint64_t v65 = swift_allocObject();
    *(void *)(v65 + 16) = v60;
    *(void *)(v65 + 24) = v62;
    id v66 = sub_1C1FAA520;
  }
  else
  {
    id v66 = 0;
  }
  sub_1C1F1325C(v60);
  sub_1C1F31118((uint64_t)v66);
  objc_msgSend(v64, sel_setHidden_, v60 == 0);

  id v67 = objc_msgSend(v36, sel_traitCollection);
  id v68 = objc_msgSend(v67, sel_preferredContentSizeCategory);
  char v69 = sub_1C214AE80();

  sub_1C1FA5FCC(v69 & 1);
  sub_1C1FA7E4C(0, (unint64_t *)&qword_1EA2C3D80, (uint64_t (*)(uint64_t))sub_1C1F7C864, MEMORY[0x1E4FBBE00]);
  uint64_t v70 = swift_allocObject();
  *(_OWORD *)(v70 + 16) = xmmword_1C214FCD0;
  uint64_t v71 = sub_1C2149C70();
  uint64_t v72 = MEMORY[0x1E4FB1138];
  *(void *)(v70 + 32) = v71;
  *(void *)(v70 + 40) = v72;
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1C1F7C8F0();
  uint64_t v73 = v36;
  sub_1C214B120();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  sub_1C1FAA600(v78, type metadata accessor for TipImage);
  return v73;
}

void sub_1C1FAA398()
{
  uint64_t v1 = MEMORY[0x1E4FBC860];
  *(void *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI30MedicationsCategoryRoomTipView_actions] = MEMORY[0x1E4FBC860];
  *(void *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI30MedicationsCategoryRoomTipView_headerView] = 0;
  uint64_t v2 = &v0[OBJC_IVAR____TtC19HealthMedicationsUI30MedicationsCategoryRoomTipView_onDismiss];
  *uint64_t v2 = 0;
  v2[1] = 0;
  uint64_t v3 = &v0[OBJC_IVAR____TtC19HealthMedicationsUI30MedicationsCategoryRoomTipView_baseIdentifier];
  *uint64_t v3 = 0;
  v3[1] = 0xE000000000000000;
  v0[OBJC_IVAR____TtC19HealthMedicationsUI30MedicationsCategoryRoomTipView_isUsingVerticalLayout] = 0;
  *(void *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI30MedicationsCategoryRoomTipView_currentConstraints] = v1;
  *(void *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI30MedicationsCategoryRoomTipView____lazy_storage___iconImageView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI30MedicationsCategoryRoomTipView____lazy_storage___medicationView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI30MedicationsCategoryRoomTipView____lazy_storage___titleLabel] = 0;
  *(void *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI30MedicationsCategoryRoomTipView____lazy_storage___detailLabel] = 0;
  *(void *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI30MedicationsCategoryRoomTipView____lazy_storage___dismissButton] = 0;
  *(void *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI30MedicationsCategoryRoomTipView____lazy_storage___dismissImageView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI30MedicationsCategoryRoomTipView____lazy_storage___actionButtonsStackView] = 0;

  sub_1C214B910();
  __break(1u);
}

uint64_t sub_1C1FAA4A8()
{
  swift_unknownObjectWeakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

void sub_1C1FAA4E0(uint64_t a1, uint64_t a2)
{
  sub_1C1FA57AC(a1, a2, v2);
}

uint64_t sub_1C1FAA4E8()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C1FAA520()
{
  return sub_1C1FC8374(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_1C1FAA528(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1C1FA7E4C(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1C1FAA598(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C1FAA600(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C1FAA660(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t Array<A>.groupByCritical(for:)(char *a1, uint64_t a2)
{
  char v3 = *a1;
  swift_getKeyPath();
  if (a2 < 0 || (a2 & 0x4000000000000000) != 0)
  {
    swift_retain();
    unint64_t v11 = swift_bridgeObjectRetain();
    uint64_t v4 = (uint64_t)sub_1C1F7F700(v11);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v4 = a2 & 0xFFFFFFFFFFFFFF8;
    swift_retain();
    swift_bridgeObjectRetain();
  }
  uint64_t v15 = v4;
  sub_1C1FAEAD0(&v15);
  swift_release();
  swift_release();
  uint64_t v5 = v15;
  uint64_t v15 = MEMORY[0x1E4FBC860];
  uint64_t v13 = MEMORY[0x1E4FBC860];
  uint64_t v14 = MEMORY[0x1E4FBC860];
  if ((v5 & 0x8000000000000000) == 0 && (v5 & 0x4000000000000000) == 0)
  {
    uint64_t v6 = *(void *)(v5 + 16);
    swift_retain();
    if (v6) {
      goto LABEL_7;
    }
LABEL_16:
    swift_release_n();
    return MEMORY[0x1E4FBC860];
  }
  swift_retain();
  uint64_t v6 = sub_1C214B930();
  if (!v6) {
    goto LABEL_16;
  }
LABEL_7:
  if (v6 < 1)
  {
    __break(1u);
    uint64_t result = swift_release();
    __break(1u);
  }
  else
  {
    uint64_t v7 = 0;
    do
    {
      if ((v5 & 0xC000000000000001) != 0) {
        id v8 = (id)MEMORY[0x1C8753960](v7, v5);
      }
      else {
        id v8 = *(id *)(v5 + 8 * v7 + 32);
      }
      uint64_t v9 = v8;
      ++v7;
      uint64_t v12 = v8;
      sub_1C1FAA8D0(&v12, v3, &v15, &v14, &v13);
    }
    while (v6 != v7);
    swift_release_n();
    return v15;
  }
  return result;
}

uint64_t sub_1C1FAA874@<X0>(uint64_t *a1@<X8>)
{
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8C0);
  uint64_t result = sub_1C21494A0();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1C1FAA8D0(void **a1, char a2, void *a3, void *a4, void *a5)
{
  id v28 = a5;
  sub_1C1F0E310(0, &qword_1EBF0B7A0, MEMORY[0x1E4F66CD8], MEMORY[0x1E4FBB718]);
  uint64_t v10 = MEMORY[0x1F4188790](v9 - 8);
  uint64_t v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v27 - v13;
  uint64_t v15 = *a1;
  sub_1C214AFE0();
  sub_1C1FAEF2C((uint64_t)v14, (uint64_t)v12);
  uint64_t v16 = sub_1C21494D0();
  uint64_t v17 = *(void *)(v16 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v12, 1, v16) == 1)
  {
    sub_1C1FAEB7C((uint64_t)v12);
    goto LABEL_10;
  }
  if (a2 == 1) {
    char v18 = sub_1C21494B0();
  }
  else {
    char v18 = sub_1C21494C0();
  }
  char v19 = v18;
  (*(void (**)(char *, uint64_t))(v17 + 8))(v12, v16);
  if ((v19 & 1) == 0)
  {
LABEL_10:
    id v21 = v15;
    sub_1C203B8A4(v21, a2);
    uint64_t v23 = v22;

    swift_bridgeObjectRelease();
    id v24 = v21;
    if (v23)
    {
      MEMORY[0x1C87528E0](v24);
      if (*(void *)((*a4 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*a4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_1C214A7D0();
      }
    }
    else
    {
      id v25 = v28;
      MEMORY[0x1C87528E0](v24);
      if (*(void *)((*v25 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v25 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_1C214A7D0();
      }
    }
    goto LABEL_16;
  }
  id v20 = v15;
  MEMORY[0x1C87528E0]();
  if (*(void *)((*a3 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*a3 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1C214A7D0();
  }
LABEL_16:
  sub_1C214A820();
  sub_1C214A7A0();
  return sub_1C1FAEB7C((uint64_t)v14);
}

uint64_t Array<A>.cellContent(for:)(unsigned __int8 *a1, unint64_t a2)
{
  sub_1C1F0E310(0, &qword_1EBF0B7A0, MEMORY[0x1E4F66CD8], MEMORY[0x1E4FBB718]);
  uint64_t v5 = MEMORY[0x1F4188790](v4 - 8);
  uint64_t v7 = (uint64_t)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (__objc2_prot **)((char *)&v36 - v8);
  int v10 = *a1;
  uint64_t v41 = MEMORY[0x1E4FBC860];
  if (a2 >> 62) {
    goto LABEL_42;
  }
  uint64_t v11 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v11)
  {
LABEL_43:
    swift_bridgeObjectRelease();
    uint64_t v31 = MEMORY[0x1E4FBC860];
    uint64_t v32 = MEMORY[0x1E4FBC860];
    if ((MEMORY[0x1E4FBC860] & 0x8000000000000000) == 0)
    {
LABEL_44:
      if ((v32 & 0x4000000000000000) == 0)
      {
        uint64_t v33 = *(void *)(v32 + 16);
        goto LABEL_46;
      }
    }
LABEL_53:
    swift_bridgeObjectRetain();
    uint64_t v33 = sub_1C214B930();
    swift_release();
LABEL_46:
    swift_release();
    if (v33 <= 0)
    {
      if (v31 < 0) {
        goto LABEL_54;
      }
    }
    else
    {
      sub_1C20DB224(v33, 1);
      if (v31 < 0) {
        goto LABEL_54;
      }
    }
    if ((v31 & 0x4000000000000000) == 0)
    {
      uint64_t v34 = *(void *)(v31 + 16);
LABEL_52:
      swift_release();
      return v34;
    }
LABEL_54:
    swift_bridgeObjectRetain();
    uint64_t v34 = sub_1C214B930();
    swift_release();
    goto LABEL_52;
  }
LABEL_3:
  unint64_t v38 = a2;
  unint64_t v39 = a2 & 0xC000000000000001;
  uint64_t v12 = 4;
  while (1)
  {
    if (v39) {
      id v14 = (id)MEMORY[0x1C8753960](v12 - 4, a2);
    }
    else {
      id v14 = *(id *)(a2 + 8 * v12);
    }
    a2 = (unint64_t)v14;
    uint64_t v15 = v12 - 3;
    if (__OFADD__(v12 - 4, 1))
    {
      __break(1u);
LABEL_41:
      __break(1u);
LABEL_42:
      swift_bridgeObjectRetain();
      uint64_t v11 = sub_1C214B930();
      if (!v11) {
        goto LABEL_43;
      }
      goto LABEL_3;
    }
    if (v10 == 1)
    {
      sub_1C214AFE0();
      uint64_t v16 = sub_1C21494D0();
      uint64_t v17 = *(void *)(v16 - 8);
      if ((*(unsigned int (**)(__objc2_prot **, uint64_t, uint64_t))(v17 + 48))(v9, 1, v16) == 1)
      {
        uint64_t v13 = (uint64_t)v9;
LABEL_5:
        sub_1C1FAEB7C(v13);
        goto LABEL_6;
      }
      char v18 = sub_1C21494B0();
      (*(void (**)(__objc2_prot **, uint64_t))(v17 + 8))(v9, v16);
      goto LABEL_19;
    }
    if (v10 != 2) {
      break;
    }
    sub_1C214AFE0();
    uint64_t v19 = sub_1C21494D0();
    uint64_t v20 = *(void *)(v19 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v7, 1, v19) == 1)
    {
      uint64_t v13 = v7;
      goto LABEL_5;
    }
    char v18 = sub_1C21494C0();
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v7, v19);
LABEL_19:
    if (v18)
    {
      sub_1C214B820();
      sub_1C214B860();
      sub_1C214B870();
      sub_1C214B830();
      goto LABEL_7;
    }
LABEL_6:

LABEL_7:
    a2 = v38;
    ++v12;
    if (v15 == v11)
    {
      swift_bridgeObjectRelease();
      uint64_t v37 = v41;
      uint64_t v41 = MEMORY[0x1E4FBC860];
      swift_bridgeObjectRetain();
      uint64_t v7 = 4;
      uint64_t v9 = &off_1E6447000;
      while (1)
      {
        if (v39) {
          id v22 = (id)MEMORY[0x1C8753960](v7 - 4, a2);
        }
        else {
          id v22 = *(id *)(a2 + 8 * v7);
        }
        uint64_t v23 = v22;
        a2 = v7 - 3;
        if (__OFADD__(v7 - 4, 1)) {
          goto LABEL_41;
        }
        id v24 = objc_msgSend(v22, sel_localizedOntologyEducationContent);
        id v25 = v24;
        if (v10 == 1)
        {
          if (!v24) {
            goto LABEL_22;
          }
          id v40 = v24;
          sub_1C1F12718(0, (unint64_t *)&unk_1EA2C4680);
          uint64_t v26 = sub_1C21480C0();
        }
        else
        {
          if (!v24) {
            goto LABEL_22;
          }
          id v40 = v24;
          sub_1C1F12718(0, (unint64_t *)&unk_1EA2C4680);
          uint64_t v26 = sub_1C21480B0();
        }
        uint64_t v28 = v26;
        unint64_t v29 = v27;

        if (v29)
        {
          swift_bridgeObjectRelease();
          uint64_t v30 = HIBYTE(v29) & 0xF;
          if ((v29 & 0x2000000000000000) == 0) {
            uint64_t v30 = v28 & 0xFFFFFFFFFFFFLL;
          }
          if (v30)
          {
            sub_1C214B820();
            sub_1C214B860();
            sub_1C214B870();
            sub_1C214B830();
            goto LABEL_23;
          }
        }
LABEL_22:

LABEL_23:
        ++v7;
        BOOL v21 = a2 == v11;
        a2 = v38;
        if (v21)
        {
          swift_bridgeObjectRelease();
          uint64_t v31 = v41;
          uint64_t v32 = v37;
          if ((v37 & 0x8000000000000000) == 0) {
            goto LABEL_44;
          }
          goto LABEL_53;
        }
      }
    }
  }
  uint64_t result = sub_1C214B910();
  __break(1u);
  return result;
}

uint64_t Array<A>.countBySeverityLevel.getter(unint64_t a1)
{
  if (a1 >> 62)
  {
LABEL_24:
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1C214B930();
    if (v2) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v2)
    {
LABEL_3:
      uint64_t v3 = (void *)MEMORY[0x1E4FBC868];
      uint64_t v4 = 4;
      while (1)
      {
        if ((a1 & 0xC000000000000001) != 0) {
          id v5 = (id)MEMORY[0x1C8753960](v4 - 4, a1);
        }
        else {
          id v5 = *(id *)(a1 + 8 * v4);
        }
        uint64_t v6 = v5;
        uint64_t v7 = v4 - 3;
        if (__OFADD__(v4 - 4, 1))
        {
          __break(1u);
LABEL_21:
          __break(1u);
LABEL_22:
          __break(1u);
LABEL_23:
          __break(1u);
          goto LABEL_24;
        }
        id v8 = objc_msgSend(v5, sel_severityLevel);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        unint64_t v11 = sub_1C1F4B548((uint64_t)v8);
        uint64_t v12 = v3[2];
        BOOL v13 = (v10 & 1) == 0;
        uint64_t v14 = v12 + v13;
        if (__OFADD__(v12, v13)) {
          goto LABEL_21;
        }
        char v15 = v10;
        if (v3[3] >= v14)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
            sub_1C1FACF5C();
          }
        }
        else
        {
          sub_1C1FAC264(v14, isUniquelyReferenced_nonNull_native);
          unint64_t v16 = sub_1C1F4B548((uint64_t)v8);
          if ((v15 & 1) != (v17 & 1))
          {
            type metadata accessor for HKDrugInteractionSeverityLevel(0);
            uint64_t result = sub_1C214BAB0();
            __break(1u);
            return result;
          }
          unint64_t v11 = v16;
        }
        swift_bridgeObjectRelease();
        if ((v15 & 1) == 0)
        {
          v3[(v11 >> 6) + 8] |= 1 << v11;
          uint64_t v18 = 8 * v11;
          *(void *)(v3[6] + v18) = v8;
          *(void *)(v3[7] + v18) = 0;
          uint64_t v19 = v3[2];
          BOOL v20 = __OFADD__(v19, 1);
          uint64_t v21 = v19 + 1;
          if (v20) {
            goto LABEL_23;
          }
          v3[2] = v21;
        }
        uint64_t v22 = v3[7];
        uint64_t v23 = *(void *)(v22 + 8 * v11);
        BOOL v20 = __OFADD__(v23, 1);
        uint64_t v24 = v23 + 1;
        if (v20) {
          goto LABEL_22;
        }
        *(void *)(v22 + 8 * v11) = v24;

        ++v4;
        if (v7 == v2) {
          goto LABEL_26;
        }
      }
    }
  }
  uint64_t v3 = (void *)MEMORY[0x1E4FBC868];
LABEL_26:
  swift_bridgeObjectRelease();
  return (uint64_t)v3;
}

id Array<A>.count.getter(unint64_t a1)
{
  sub_1C2148E10();
  sub_1C2148E00();
  sub_1C2148DB0();
  swift_release();
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C7C8);
  sub_1C214AC00();
  sub_1C2148D70();
  swift_allocObject();
  sub_1C2148C90();
  sub_1C1F0E310(0, (unint64_t *)&qword_1EA2C3288, (uint64_t (*)(uint64_t))type metadata accessor for HKDrugInteractionSeverityLevel, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C2150000;
  *(_OWORD *)(inited + 32) = xmmword_1C214FCD0;
  *(void *)(inited + 48) = 3;
  if (sub_1C2148CC0())
  {
    id result = objc_msgSend(self, sel_sharedBehavior);
    if (!result)
    {
      __break(1u);
      return result;
    }
    uint64_t v4 = result;
    unsigned int v5 = objc_msgSend(result, sel_isAppleInternalInstall);

    if (v5)
    {
      uint64_t inited = (uint64_t)sub_1C1F3B978((void *)1, 4, 1, (void *)inited);
      *(void *)(inited + 16) = 4;
      *(void *)(inited + 56) = 4;
    }
  }
  uint64_t v6 = *(void *)(inited + 16);
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = 0;
    uint64_t v8 = 0;
    do
    {
      uint64_t v9 = *(void *)(inited + 8 * v7 + 32);
      uint64_t v10 = Array<A>.countBySeverityLevel.getter(a1);
      if (*(void *)(v10 + 16) && (unint64_t v11 = sub_1C1F4B548(v9), (v12 & 1) != 0)) {
        uint64_t v13 = *(void *)(*(void *)(v10 + 56) + 8 * v11);
      }
      else {
        uint64_t v13 = 0;
      }
      swift_bridgeObjectRelease();
      BOOL v14 = __OFADD__(v8, v13);
      v8 += v13;
      if (v14) {
        __break(1u);
      }
      ++v7;
    }
    while (v6 != v7);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v8 = 0;
  }
  swift_release();
  swift_bridgeObjectRelease();
  return (id)v8;
}

id Array<A>.interactionSummaryTitle()(unint64_t a1)
{
  uint64_t v1 = Array<A>.countBySeverityLevel.getter(a1);
  sub_1C2148E10();
  sub_1C2148E00();
  sub_1C2148DB0();
  swift_release();
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C7C8);
  sub_1C214AC00();
  sub_1C2148D70();
  swift_allocObject();
  sub_1C2148C90();
  sub_1C1F0E310(0, (unint64_t *)&qword_1EA2C3288, (uint64_t (*)(uint64_t))type metadata accessor for HKDrugInteractionSeverityLevel, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C2150000;
  *(_OWORD *)(inited + 32) = xmmword_1C214FCD0;
  *(void *)(inited + 48) = 3;
  if ((sub_1C2148CC0() & 1) == 0) {
    goto LABEL_5;
  }
  id result = objc_msgSend(self, sel_sharedBehavior);
  if (result)
  {
    uint64_t v4 = result;
    unsigned int v5 = objc_msgSend(result, sel_isAppleInternalInstall);

    if (v5)
    {
      uint64_t v6 = sub_1C1F3B978((void *)1, 4, 1, (void *)inited);
      long long v6[2] = 4;
      v6[7] = 4;
    }
LABEL_5:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v7 = swift_bridgeObjectRetain();
    sub_1C1FAD884(v7, v1);
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    uint64_t v8 = self;
    uint64_t v9 = (void *)sub_1C214A770();
    swift_bridgeObjectRelease();
    id v10 = objc_msgSend(v8, sel_localizedStringByJoiningStrings_, v9);

    uint64_t v11 = sub_1C214A5F0();
    swift_release();
    return (id)v11;
  }
  __break(1u);
  return result;
}

id Array<A>.interactionSummaryTitleColor()(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v1 = sub_1C214B930();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v1 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v2 = self;
  uint64_t v3 = &selRef_secondaryLabelColor;
  if (v1) {
    uint64_t v3 = &selRef_labelColor;
  }
  id v4 = [v2 *v3];

  return v4;
}

uint64_t sub_1C1FAB860(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = sub_1C21496A0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  sub_1C1FAEC08();
  int v46 = a2;
  uint64_t v10 = sub_1C214B950();
  uint64_t v11 = v9;
  uint64_t v12 = v10;
  if (!*(void *)(v11 + 16)) {
    goto LABEL_41;
  }
  uint64_t v13 = 1 << *(unsigned char *)(v11 + 32);
  uint64_t v14 = *(void *)(v11 + 64);
  id v42 = (void *)(v11 + 64);
  if (v13 < 64) {
    uint64_t v15 = ~(-1 << v13);
  }
  else {
    uint64_t v15 = -1;
  }
  unint64_t v16 = v15 & v14;
  id v40 = v3;
  int64_t v41 = (unint64_t)(v13 + 63) >> 6;
  id v43 = (void (**)(char *, unint64_t, uint64_t))(v6 + 16);
  uint64_t v45 = v6;
  char v17 = (void (**)(char *, unint64_t, uint64_t))(v6 + 32);
  uint64_t v18 = v10 + 64;
  uint64_t result = swift_retain();
  int64_t v20 = 0;
  for (i = v11; ; uint64_t v11 = i)
  {
    if (v16)
    {
      unint64_t v22 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v23 = v22 | (v20 << 6);
      goto LABEL_22;
    }
    int64_t v24 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v24 >= v41) {
      break;
    }
    id v25 = v42;
    unint64_t v26 = v42[v24];
    ++v20;
    if (!v26)
    {
      int64_t v20 = v24 + 1;
      if (v24 + 1 >= v41) {
        goto LABEL_34;
      }
      unint64_t v26 = v42[v20];
      if (!v26)
      {
        int64_t v27 = v24 + 2;
        if (v27 >= v41)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v40;
          if ((v46 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v26 = v42[v27];
        if (!v26)
        {
          while (1)
          {
            int64_t v20 = v27 + 1;
            if (__OFADD__(v27, 1)) {
              goto LABEL_43;
            }
            if (v20 >= v41) {
              goto LABEL_34;
            }
            unint64_t v26 = v42[v20];
            ++v27;
            if (v26) {
              goto LABEL_21;
            }
          }
        }
        int64_t v20 = v27;
      }
    }
LABEL_21:
    unint64_t v16 = (v26 - 1) & v26;
    unint64_t v23 = __clz(__rbit64(v26)) + (v20 << 6);
LABEL_22:
    uint64_t v28 = *(void *)(v45 + 72);
    unint64_t v29 = *(void *)(v11 + 48) + v28 * v23;
    if (v46)
    {
      (*v17)(v8, v29, v5);
      uint64_t v30 = *(void *)(*(void *)(v11 + 56) + 8 * v23);
    }
    else
    {
      (*v43)(v8, v29, v5);
      uint64_t v30 = *(void *)(*(void *)(v11 + 56) + 8 * v23);
      swift_bridgeObjectRetain();
    }
    sub_1C1F1587C(&qword_1EA2C3688, MEMORY[0x1E4F66D28]);
    uint64_t result = sub_1C214A550();
    uint64_t v31 = -1 << *(unsigned char *)(v12 + 32);
    unint64_t v32 = result & ~v31;
    unint64_t v33 = v32 >> 6;
    if (((-1 << v32) & ~*(void *)(v18 + 8 * (v32 >> 6))) != 0)
    {
      unint64_t v21 = __clz(__rbit64((-1 << v32) & ~*(void *)(v18 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v34 = 0;
      unint64_t v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v36 = v33 == v35;
        if (v33 == v35) {
          unint64_t v33 = 0;
        }
        v34 |= v36;
        uint64_t v37 = *(void *)(v18 + 8 * v33);
      }
      while (v37 == -1);
      unint64_t v21 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(void *)(v18 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v17)(*(void *)(v12 + 48) + v28 * v21, v8, v5);
    *(void *)(*(void *)(v12 + 56) + 8 * v21) = v30;
    ++*(void *)(v12 + 16);
  }
  swift_release();
  uint64_t v3 = v40;
  id v25 = v42;
  if ((v46 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v38 = 1 << *(unsigned char *)(v11 + 32);
  if (v38 >= 64) {
    bzero(v25, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *id v25 = -1 << v38;
  }
  *(void *)(v11 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v12;
  return result;
}

uint64_t sub_1C1FABC80(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1C1F4CD0C();
  uint64_t v6 = sub_1C214B950();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  BOOL v36 = v2;
  uint64_t v37 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v11) {
      break;
    }
    unint64_t v23 = (void *)(v5 + 64);
    unint64_t v24 = *(void *)(v37 + 8 * v22);
    ++v14;
    if (!v24)
    {
      int64_t v14 = v22 + 1;
      if (v22 + 1 >= v11) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v37 + 8 * v14);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v11)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v36;
          if ((a2 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v37 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v14 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v11) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v37 + 8 * v14);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v25;
      }
    }
LABEL_30:
    unint64_t v10 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    uint64_t v30 = 8 * v21;
    uint64_t v31 = *(void **)(*(void *)(v5 + 48) + v30);
    unint64_t v32 = *(void **)(*(void *)(v5 + 56) + v30);
    if ((a2 & 1) == 0)
    {
      id v33 = v31;
      id v34 = v32;
    }
    uint64_t result = sub_1C214B210();
    uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v17 == v27;
        if (v17 == v27) {
          unint64_t v17 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    uint64_t v19 = 8 * v18;
    *(void *)(*(void *)(v7 + 48) + v19) = v31;
    *(void *)(*(void *)(v7 + 56) + v19) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v36;
  unint64_t v23 = (void *)(v5 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v35 = 1 << *(unsigned char *)(v5 + 32);
  if (v35 >= 64) {
    bzero(v23, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v23 = -1 << v35;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1C1FABF50(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1C1FAECE4();
  char v36 = a2;
  uint64_t v6 = sub_1C214B950();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v35 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v34 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v34) {
      break;
    }
    int64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v35 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v34) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v35 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v34)
        {
LABEL_33:
          swift_release();
          if ((v36 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v35 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v34) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v35 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    uint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
    if ((v36 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_1C214BB30();
    sub_1C214A690();
    uint64_t result = sub_1C214BB80();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    unint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    void *v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  int64_t v22 = (void *)(v5 + 64);
  if ((v36 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1C1FAC264(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1C1FAEE90();
  uint64_t result = sub_1C214B950();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    char v32 = a2;
    int64_t v8 = 0;
    uint64_t v33 = (void *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v12 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v13 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v16 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v17 = v16 | (v8 << 6);
      }
      else
      {
        int64_t v18 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v18 >= v12) {
          goto LABEL_31;
        }
        unint64_t v19 = v33[v18];
        ++v8;
        if (!v19)
        {
          int64_t v8 = v18 + 1;
          if (v18 + 1 >= v12) {
            goto LABEL_31;
          }
          unint64_t v19 = v33[v8];
          if (!v19)
          {
            int64_t v20 = v18 + 2;
            if (v20 >= v12)
            {
LABEL_31:
              if ((v32 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v2;
                goto LABEL_38;
              }
              uint64_t v31 = 1 << *(unsigned char *)(v5 + 32);
              if (v31 >= 64) {
                bzero(v33, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *uint64_t v33 = -1 << v31;
              }
              uint64_t v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v19 = v33[v20];
            if (!v19)
            {
              while (1)
              {
                int64_t v8 = v20 + 1;
                if (__OFADD__(v20, 1)) {
                  goto LABEL_40;
                }
                if (v8 >= v12) {
                  goto LABEL_31;
                }
                unint64_t v19 = v33[v8];
                ++v20;
                if (v19) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v8 = v20;
          }
        }
LABEL_21:
        unint64_t v11 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v8 << 6);
      }
      uint64_t v21 = 8 * v17;
      uint64_t v22 = *(void *)(*(void *)(v5 + 48) + v21);
      uint64_t v23 = *(void *)(*(void *)(v5 + 56) + v21);
      sub_1C214BB30();
      sub_1C214BB40();
      uint64_t result = sub_1C214BB80();
      uint64_t v24 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v25 = result & ~v24;
      unint64_t v26 = v25 >> 6;
      if (((-1 << v25) & ~*(void *)(v13 + 8 * (v25 >> 6))) != 0)
      {
        unint64_t v14 = __clz(__rbit64((-1 << v25) & ~*(void *)(v13 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v27 = 0;
        unint64_t v28 = (unint64_t)(63 - v24) >> 6;
        do
        {
          if (++v26 == v28 && (v27 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v29 = v26 == v28;
          if (v26 == v28) {
            unint64_t v26 = 0;
          }
          v27 |= v29;
          uint64_t v30 = *(void *)(v13 + 8 * v26);
        }
        while (v30 == -1);
        unint64_t v14 = __clz(__rbit64(~v30)) + (v26 << 6);
      }
      *(void *)(v13 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      uint64_t v15 = 8 * v14;
      *(void *)(*(void *)(v7 + 48) + v15) = v22;
      *(void *)(*(void *)(v7 + 56) + v15) = v23;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_38:
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1C1FAC530(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1C1FAED7C(0, &qword_1EA2C4580, (void (*)(uint64_t))sub_1C1FAEDE0);
  char v36 = a2;
  uint64_t v6 = sub_1C214B950();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v35 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v34 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v34) {
      break;
    }
    uint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v35 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v34) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v35 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v34)
        {
LABEL_33:
          swift_release();
          if ((v36 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v35 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v34) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v35 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    BOOL v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
    if ((v36 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_1C214BB30();
    sub_1C214A690();
    uint64_t result = sub_1C214BB80();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    int64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    void *v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v22 = (void *)(v5 + 64);
  if ((v36 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1C1FAC860(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for Dosage();
  uint64_t v42 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  sub_1C1FAED7C(0, (unint64_t *)&qword_1EA2C3698, (void (*)(uint64_t))type metadata accessor for Dosage);
  int v43 = a2;
  uint64_t v9 = sub_1C214B950();
  uint64_t v10 = v9;
  if (!*(void *)(v8 + 16)) {
    goto LABEL_41;
  }
  uint64_t v11 = 1 << *(unsigned char *)(v8 + 32);
  uint64_t v12 = *(void *)(v8 + 64);
  int64_t v41 = (void *)(v8 + 64);
  if (v11 < 64) {
    uint64_t v13 = ~(-1 << v11);
  }
  else {
    uint64_t v13 = -1;
  }
  unint64_t v14 = v13 & v12;
  uint64_t v39 = v2;
  int64_t v40 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v15 = v9 + 64;
  uint64_t result = swift_retain();
  int64_t v17 = 0;
  while (1)
  {
    if (v14)
    {
      unint64_t v20 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v21 = v20 | (v17 << 6);
      goto LABEL_22;
    }
    int64_t v22 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v22 >= v40) {
      break;
    }
    unint64_t v23 = v41;
    unint64_t v24 = v41[v22];
    ++v17;
    if (!v24)
    {
      int64_t v17 = v22 + 1;
      if (v22 + 1 >= v40) {
        goto LABEL_34;
      }
      unint64_t v24 = v41[v17];
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v40)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v39;
          if ((v43 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v24 = v41[v25];
        if (!v24)
        {
          while (1)
          {
            int64_t v17 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_43;
            }
            if (v17 >= v40) {
              goto LABEL_34;
            }
            unint64_t v24 = v41[v17];
            ++v25;
            if (v24) {
              goto LABEL_21;
            }
          }
        }
        int64_t v17 = v25;
      }
    }
LABEL_21:
    unint64_t v14 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v17 << 6);
LABEL_22:
    unint64_t v26 = (uint64_t *)(*(void *)(v8 + 48) + 16 * v21);
    uint64_t v28 = *v26;
    uint64_t v27 = v26[1];
    uint64_t v29 = *(void *)(v42 + 72);
    uint64_t v30 = *(void *)(v8 + 56) + v29 * v21;
    if (v43)
    {
      sub_1C1F4C924(v30, (uint64_t)v7);
    }
    else
    {
      sub_1C1F84AD8(v30, (uint64_t)v7);
      swift_bridgeObjectRetain();
    }
    sub_1C214BB30();
    sub_1C214A690();
    uint64_t result = sub_1C214BB80();
    uint64_t v31 = -1 << *(unsigned char *)(v10 + 32);
    unint64_t v32 = result & ~v31;
    unint64_t v33 = v32 >> 6;
    if (((-1 << v32) & ~*(void *)(v15 + 8 * (v32 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v32) & ~*(void *)(v15 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v34 = 0;
      unint64_t v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v36 = v33 == v35;
        if (v33 == v35) {
          unint64_t v33 = 0;
        }
        v34 |= v36;
        uint64_t v37 = *(void *)(v15 + 8 * v33);
      }
      while (v37 == -1);
      unint64_t v18 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(void *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    unint64_t v19 = (void *)(*(void *)(v10 + 48) + 16 * v18);
    *unint64_t v19 = v28;
    v19[1] = v27;
    uint64_t result = sub_1C1F4C924((uint64_t)v7, *(void *)(v10 + 56) + v29 * v18);
    ++*(void *)(v10 + 16);
  }
  swift_release();
  uint64_t v3 = v39;
  unint64_t v23 = v41;
  if ((v43 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v38 = 1 << *(unsigned char *)(v8 + 32);
  if (v38 >= 64) {
    bzero(v23, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v23 = -1 << v38;
  }
  *(void *)(v8 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v10;
  return result;
}

id sub_1C1FACC1C()
{
  uint64_t v1 = v0;
  sub_1C1F4CD0C();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C214B940();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_24:
    id result = (id)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    if (__OFADD__(v9++, 1)) {
      goto LABEL_26;
    }
    if (v9 >= v13) {
      goto LABEL_24;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    if (!v21) {
      break;
    }
LABEL_23:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    int64_t v17 = *(void **)(*(void *)(v2 + 48) + v16);
    unint64_t v18 = *(void **)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    *(void *)(*(void *)(v4 + 56) + v16) = v18;
    id v19 = v17;
    id result = v18;
  }
  int64_t v22 = v9 + 1;
  if (v9 + 1 >= v13) {
    goto LABEL_24;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    ++v9;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_24;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_23;
    }
  }
  __break(1u);
LABEL_26:
  __break(1u);
  return result;
}

void *sub_1C1FACDA8()
{
  uint64_t v1 = v0;
  sub_1C1FAECE4();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C214B940();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    int64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    uint64_t v20 = *(void *)(*(void *)(v2 + 56) + v19);
    unint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *unint64_t v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1C1FACF5C()
{
  uint64_t v1 = v0;
  sub_1C1FAEE90();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C214B940();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19) {
        break;
      }
    }
LABEL_25:
    unint64_t v21 = __clz(__rbit64(v19));
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = v21 + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = *(void *)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 56) + v16) = v17;
  }
  int64_t v20 = v18 + 2;
  if (v20 >= v13) {
    goto LABEL_26;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1C1FAD0E8()
{
  uint64_t v1 = v0;
  sub_1C1FAED7C(0, &qword_1EA2C4580, (void (*)(uint64_t))sub_1C1FAEDE0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C214B940();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    uint64_t v20 = *(void *)(*(void *)(v2 + 56) + v19);
    unint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *unint64_t v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1C1FAD2B8()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Dosage();
  uint64_t v29 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1FAED7C(0, (unint64_t *)&qword_1EA2C3698, (void (*)(uint64_t))type metadata accessor for Dosage);
  uint64_t v5 = *v0;
  uint64_t v6 = sub_1C214B940();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
    id result = (void *)swift_release();
LABEL_25:
    uint64_t *v1 = v7;
    return result;
  }
  uint64_t v27 = v1;
  id result = (void *)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    id result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  uint64_t v28 = v5 + 64;
  int64_t v10 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v5 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_9;
    }
    int64_t v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v23 >= v14) {
      goto LABEL_23;
    }
    unint64_t v24 = *(void *)(v28 + 8 * v23);
    ++v10;
    if (!v24)
    {
      int64_t v10 = v23 + 1;
      if (v23 + 1 >= v14) {
        goto LABEL_23;
      }
      unint64_t v24 = *(void *)(v28 + 8 * v10);
      if (!v24) {
        break;
      }
    }
LABEL_22:
    unint64_t v13 = (v24 - 1) & v24;
    unint64_t v16 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_9:
    uint64_t v17 = 16 * v16;
    uint64_t v18 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v16);
    uint64_t v19 = *v18;
    uint64_t v20 = v18[1];
    unint64_t v21 = *(void *)(v29 + 72) * v16;
    sub_1C1F84AD8(*(void *)(v5 + 56) + v21, (uint64_t)v4);
    int64_t v22 = (void *)(*(void *)(v7 + 48) + v17);
    *int64_t v22 = v19;
    v22[1] = v20;
    sub_1C1F4C924((uint64_t)v4, *(void *)(v7 + 56) + v21);
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v14)
  {
LABEL_23:
    id result = (void *)swift_release();
    uint64_t v1 = v27;
    goto LABEL_25;
  }
  unint64_t v24 = *(void *)(v28 + 8 * v25);
  if (v24)
  {
    int64_t v10 = v25;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_23;
    }
    unint64_t v24 = *(void *)(v28 + 8 * v10);
    ++v25;
    if (v24) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_1C1FAD53C()
{
  uint64_t v39 = sub_1C21475B0();
  uint64_t v1 = *(void *)(v39 - 8);
  MEMORY[0x1F4188790](v39);
  uint64_t v38 = (char *)&v32 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1F158C4();
  unint64_t v33 = v0;
  uint64_t v3 = *v0;
  uint64_t v4 = sub_1C214B940();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
    id result = (void *)swift_release();
    uint64_t v31 = v33;
LABEL_28:
    *uint64_t v31 = v5;
    return result;
  }
  id result = (void *)(v4 + 64);
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v3 + 64), 8 * v7);
  }
  uint64_t v34 = v3 + 64;
  int64_t v9 = 0;
  uint64_t v10 = *(void *)(v3 + 16);
  uint64_t v40 = v5;
  uint64_t v41 = v3;
  *(void *)(v5 + 16) = v10;
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  uint64_t v37 = v1 + 16;
  int64_t v35 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v36 = v1 + 32;
  unint64_t v15 = v38;
  uint64_t v14 = v39;
  uint64_t v16 = v40;
  while (1)
  {
    if (v13)
    {
      unint64_t v17 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v18 = v17 | (v9 << 6);
      uint64_t v19 = v41;
      goto LABEL_12;
    }
    int64_t v28 = v9 + 1;
    uint64_t v19 = v41;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v28 >= v35) {
      goto LABEL_26;
    }
    unint64_t v29 = *(void *)(v34 + 8 * v28);
    ++v9;
    if (!v29)
    {
      int64_t v9 = v28 + 1;
      if (v28 + 1 >= v35) {
        goto LABEL_26;
      }
      unint64_t v29 = *(void *)(v34 + 8 * v9);
      if (!v29) {
        break;
      }
    }
LABEL_25:
    unint64_t v13 = (v29 - 1) & v29;
    unint64_t v18 = __clz(__rbit64(v29)) + (v9 << 6);
LABEL_12:
    unint64_t v20 = *(void *)(v1 + 72) * v18;
    (*(void (**)(char *, unint64_t, uint64_t))(v1 + 16))(v15, *(void *)(v19 + 48) + v20, v14);
    uint64_t v21 = 32 * v18;
    int64_t v22 = (uint64_t *)(*(void *)(v19 + 56) + v21);
    uint64_t v23 = *v22;
    uint64_t v24 = v22[1];
    uint64_t v25 = v22[2];
    uint64_t v26 = v22[3];
    id result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v1 + 32))(*(void *)(v16 + 48) + v20, v15, v14);
    uint64_t v27 = (void *)(*(void *)(v16 + 56) + v21);
    void *v27 = v23;
    v27[1] = v24;
    v27[2] = v25;
    v27[3] = v26;
  }
  int64_t v30 = v28 + 2;
  if (v30 >= v35)
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t v31 = v33;
    uint64_t v5 = v40;
    goto LABEL_28;
  }
  unint64_t v29 = *(void *)(v34 + 8 * v30);
  if (v29)
  {
    int64_t v9 = v30;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v30 + 1;
    if (__OFADD__(v30, 1)) {
      break;
    }
    if (v9 >= v35) {
      goto LABEL_26;
    }
    unint64_t v29 = *(void *)(v34 + 8 * v9);
    ++v30;
    if (v29) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1C1FAD81C()
{
  return MEMORY[0x1E4F66D60];
}

uint64_t sub_1C1FAD828@<X0>(uint64_t *a1@<X8>)
{
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8C0);
  uint64_t result = sub_1C21494A0();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void *sub_1C1FAD884(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  uint64_t v4 = a1;
  uint64_t v5 = swift_bridgeObjectRetain();
  uint64_t v6 = 0;
  unint64_t v7 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v24 = v2;
  uint64_t v25 = v5;
  do
  {
    if (*(void *)(a2 + 16))
    {
      uint64_t v9 = *(void *)(v4 + 8 * v6 + 32);
      unint64_t v10 = sub_1C1F4B548(v9);
      if (v11)
      {
        uint64_t v12 = *(void *)(*(void *)(a2 + 56) + 8 * v10);
        if (v12)
        {
          switch(v9)
          {
            case 1:
            case 2:
            case 3:
            case 4:
              sub_1C214A6C0();
              swift_bridgeObjectRelease();
              if (qword_1EBF0CA00 != -1) {
                swift_once();
              }
              unint64_t v13 = (void *)qword_1EBF0CA18;
              sub_1C1F0E310(0, qword_1EBF0B8A0, (uint64_t (*)(uint64_t))sub_1C1FAEE38, MEMORY[0x1E4FBBE00]);
              uint64_t v14 = swift_allocObject();
              *(_OWORD *)(v14 + 16) = xmmword_1C214FCD0;
              *(void *)(v14 + 56) = MEMORY[0x1E4FBB550];
              *(void *)(v14 + 64) = MEMORY[0x1E4FBB5C8];
              *(void *)(v14 + 32) = v12;
              id v15 = v13;
              swift_bridgeObjectRetain();
              uint64_t v16 = sub_1C2147730();
              uint64_t v18 = v17;
              if (*(void *)(v14 + 16))
              {
                uint64_t v16 = sub_1C214A5C0();
                uint64_t v20 = v19;
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                uint64_t v18 = v20;
              }
              else
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
              }
              swift_bridgeObjectRelease();

              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                unint64_t v7 = sub_1C1F3AAE0(0, v7[2] + 1, 1, v7);
              }
              uint64_t v2 = v24;
              uint64_t v4 = v25;
              unint64_t v22 = v7[2];
              unint64_t v21 = v7[3];
              if (v22 >= v21 >> 1) {
                unint64_t v7 = sub_1C1F3AAE0((void *)(v21 > 1), v22 + 1, 1, v7);
              }
              uint64_t v7[2] = v22 + 1;
              uint64_t v8 = &v7[2 * v22];
              v8[4] = v16;
              v8[5] = v18;
              break;
            default:
              sub_1C214B910();
              __break(1u);
              JUMPOUT(0x1C1FADC20);
          }
        }
      }
    }
    ++v6;
  }
  while (v2 != v6);
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_1C1FADC30(id *a1, id *__src, id *a3, char *__dst)
{
  uint64_t v5 = a3;
  uint64_t v6 = __src;
  uint64_t v7 = (char *)__src - (char *)a1;
  uint64_t v8 = (char *)__src - (char *)a1 + 7;
  if ((char *)__src - (char *)a1 >= 0) {
    uint64_t v8 = (char *)__src - (char *)a1;
  }
  uint64_t v9 = v8 >> 3;
  uint64_t v10 = (char *)a3 - (char *)__src;
  uint64_t v11 = (char *)a3 - (char *)__src + 7;
  if ((char *)a3 - (char *)__src >= 0) {
    uint64_t v11 = (char *)a3 - (char *)__src;
  }
  uint64_t v12 = v11 >> 3;
  uint64_t v41 = a1;
  uint64_t v40 = (void **)__dst;
  if (v9 >= v11 >> 3)
  {
    if (v10 < -7) {
      goto LABEL_54;
    }
    if (__dst != (char *)__src || &__src[v12] <= (id *)__dst) {
      memmove(__dst, __src, 8 * v12);
    }
    uint64_t v31 = __dst;
    unint64_t v22 = (id *)&__dst[8 * v12];
    uint64_t v39 = (char *)v22;
    uint64_t v41 = v6;
    if (a1 >= v6 || v10 < 8)
    {
LABEL_53:
      sub_1C20FAFD8(&v41, &v40, &v39);
      return 1;
    }
    uint64_t v23 = v6;
    while (1)
    {
      uint64_t v34 = v5;
      uint64_t v24 = *--v23;
      id v25 = *(v22 - 1);
      id v26 = v24;
      swift_getAtKeyPath();
      swift_getAtKeyPath();
      if (v37 == v35 && v38 == v36) {
        break;
      }
      char v28 = sub_1C214BA80();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v29 = (char *)v34;
      uint64_t v5 = v34 - 1;
      if ((v28 & 1) == 0) {
        goto LABEL_46;
      }
      if (v34 != v6 || v5 >= v6) {
        *uint64_t v5 = *v23;
      }
      uint64_t v41 = v23;
LABEL_51:
      if (v23 > a1)
      {
        uint64_t v6 = v23;
        if (v22 > (id *)v31) {
          continue;
        }
      }
      goto LABEL_53;
    }

    swift_bridgeObjectRelease_n();
    unint64_t v29 = (char *)v34;
    uint64_t v5 = v34 - 1;
LABEL_46:
    uint64_t v39 = (char *)(v22 - 1);
    if (v29 < (char *)v22 || v5 >= v22 || v29 != (char *)v22) {
      *uint64_t v5 = *(v22 - 1);
    }
    uint64_t v23 = v6;
    --v22;
    goto LABEL_51;
  }
  if (v7 >= -7)
  {
    if (__dst != (char *)a1 || &a1[v9] <= (id *)__dst) {
      memmove(__dst, a1, 8 * v9);
    }
    unint64_t v33 = (void **)&__dst[8 * v9];
    uint64_t v39 = (char *)v33;
    if (v6 < v5 && v7 >= 8)
    {
      unint64_t v13 = (void **)__dst;
      uint64_t v14 = a1;
      while (1)
      {
        id v15 = v5;
        uint64_t v16 = *v13;
        id v17 = *v6;
        id v18 = v16;
        swift_getAtKeyPath();
        swift_getAtKeyPath();
        if (v37 == v35 && v38 == v36) {
          break;
        }
        char v20 = sub_1C214BA80();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v20 & 1) == 0) {
          goto LABEL_23;
        }
        unint64_t v21 = v6 + 1;
        uint64_t v5 = v15;
        if (v14 < v6 || v14 >= v21 || v14 != v6) {
          *uint64_t v14 = *v6;
        }
LABEL_26:
        ++v14;
        if (v13 < v33)
        {
          uint64_t v6 = v21;
          if (v21 < v5) {
            continue;
          }
        }
        uint64_t v41 = v14;
        goto LABEL_53;
      }

      swift_bridgeObjectRelease_n();
LABEL_23:
      uint64_t v5 = v15;
      if (v14 != v13) {
        *uint64_t v14 = *v13;
      }
      uint64_t v40 = ++v13;
      unint64_t v21 = v6;
      goto LABEL_26;
    }
    goto LABEL_53;
  }
LABEL_54:
  swift_release();
  uint64_t result = sub_1C214B990();
  __break(1u);
  return result;
}

uint64_t sub_1C1FADFF0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v15 = result;
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v17 = *a4;
    uint64_t v5 = *a4 + 8 * a3 - 8;
LABEL_6:
    uint64_t v6 = *(void **)(v17 + 8 * v4);
    uint64_t v7 = v15;
    uint64_t v16 = v5;
    while (1)
    {
      uint64_t v8 = *(void **)v5;
      id v9 = v6;
      id v10 = v8;
      swift_getAtKeyPath();
      swift_getAtKeyPath();
      if (v20 == v18 && v21 == v19)
      {

        uint64_t result = swift_bridgeObjectRelease_n();
LABEL_5:
        ++v4;
        uint64_t v5 = v16 + 8;
        if (v4 == a2) {
          return result;
        }
        goto LABEL_6;
      }
      char v12 = sub_1C214BA80();

      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      if ((v12 & 1) == 0) {
        goto LABEL_5;
      }
      if (!v17) {
        break;
      }
      unint64_t v13 = *(void **)v5;
      uint64_t v6 = *(void **)(v5 + 8);
      *(void *)uint64_t v5 = v6;
      *(void *)(v5 + 8) = v13;
      v5 -= 8;
      if (v4 == ++v7) {
        goto LABEL_5;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1C1FAE144(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  swift_retain_n();
  uint64_t v4 = sub_1C214BA30();
  if (v4 >= v3)
  {
    if (v3 < 0) {
      goto LABEL_154;
    }
    if (v3)
    {
      swift_retain();
      sub_1C1FADFF0(0, v3, 1, a1);
    }
    return swift_release_n();
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_162;
  }
  uint64_t v110 = v4;
  uint64_t v113 = v3;
  uint64_t v119 = v1;
  id v107 = a1;
  if (v3 < 2)
  {
    id v9 = (char *)MEMORY[0x1E4FBC860];
    uint64_t v126 = MEMORY[0x1E4FBC860];
    __dst = (char *)((MEMORY[0x1E4FBC860] & 0xFFFFFFFFFFFFFF8) + 32);
    if (v3 != 1)
    {
      unint64_t v13 = *(void *)(MEMORY[0x1E4FBC860] + 16);
LABEL_119:
      if (v13 >= 2)
      {
        uint64_t v96 = *v107;
        uint64_t v121 = *v107;
        do
        {
          unint64_t v97 = v13 - 2;
          if (v13 < 2) {
            goto LABEL_149;
          }
          if (!v96) {
            goto LABEL_161;
          }
          uint64_t v98 = v9;
          uint64_t v99 = v9 + 32;
          uint64_t v100 = *(void *)&v9[16 * v97 + 32];
          uint64_t v101 = *(void *)&v9[16 * v13 + 24];
          uint64_t v102 = (id *)(v96 + 8 * v100);
          BOOL v103 = (id *)(v96 + 8 * *(void *)&v99[16 * v13 - 16]);
          uint64_t v104 = (id *)(v96 + 8 * v101);
          swift_retain();
          sub_1C1FADC30(v102, v103, v104, __dst);
          if (v119) {
            goto LABEL_116;
          }
          swift_release();
          if (v101 < v100) {
            goto LABEL_150;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v98 = sub_1C20FB150((uint64_t)v98);
          }
          if (v97 >= *((void *)v98 + 2)) {
            goto LABEL_151;
          }
          uint64_t v105 = &v98[16 * v97 + 32];
          *(void *)uint64_t v105 = v100;
          *((void *)v105 + 1) = v101;
          unint64_t v106 = *((void *)v98 + 2);
          if (v13 > v106) {
            goto LABEL_152;
          }
          id v9 = v98;
          memmove(&v98[16 * v13 + 16], &v98[16 * v13 + 32], 16 * (v106 - v13));
          *((void *)v98 + 2) = v106 - 1;
          unint64_t v13 = v106 - 1;
          uint64_t v96 = v121;
        }
        while (v106 > 2);
      }
      swift_bridgeObjectRelease();
LABEL_131:
      *(void *)((v126 & 0xFFFFFFFFFFFFFF8) + 0x10) = 0;
      sub_1C214A7A0();
      swift_release_n();
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8C0);
    uint64_t v7 = sub_1C214A810();
    *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10) = v6;
    __dst = (char *)((v7 & 0xFFFFFFFFFFFFFF8) + 32);
    uint64_t v126 = v7;
  }
  uint64_t v10 = 0;
  uint64_t v11 = *a1;
  uint64_t v108 = *a1 + 16;
  uint64_t v109 = *a1 - 8;
  id v9 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v12 = v113;
  uint64_t v120 = *a1;
  while (2)
  {
    uint64_t v14 = v10;
    uint64_t v15 = v10 + 1;
    uint64_t v114 = v10;
    if (v10 + 1 >= v12) {
      goto LABEL_46;
    }
    uint64_t v16 = *(void **)(v11 + 8 * v10);
    id v17 = *(id *)(v11 + 8 * v15);
    id v18 = v16;
    swift_getAtKeyPath();
    swift_getAtKeyPath();
    if (v124 == v122 && v125 == v123) {
      unsigned __int8 v116 = 0;
    }
    else {
      unsigned __int8 v116 = sub_1C214BA80();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    uint64_t v15 = v14 + 2;
    if (v14 + 2 >= v113) {
      goto LABEL_37;
    }
    uint64_t v20 = v14;
    uint64_t v21 = v14 + 2;
    unint64_t v22 = (id *)(v108 + 8 * v20);
    while (1)
    {
      uint64_t v24 = *(v22 - 1);
      id v25 = *v22;
      id v26 = v24;
      swift_getAtKeyPath();
      swift_getAtKeyPath();
      if (v124 == v122 && v125 == v123)
      {

        swift_bridgeObjectRelease_n();
        if (v116)
        {
          uint64_t v11 = v120;
          uint64_t v15 = v21;
          uint64_t v14 = v114;
          goto LABEL_38;
        }
        goto LABEL_26;
      }
      unsigned __int8 v23 = sub_1C214BA80();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v116 ^ v23)) {
        break;
      }
LABEL_26:
      ++v22;
      if (v113 == ++v21)
      {
        uint64_t v15 = v113;
        goto LABEL_36;
      }
    }
    uint64_t v15 = v21;
LABEL_36:
    uint64_t v14 = v114;
LABEL_37:
    uint64_t v11 = v120;
    if (v116)
    {
LABEL_38:
      if (v15 < v14) {
        goto LABEL_155;
      }
      if (v14 < v15)
      {
        char v28 = (uint64_t *)(v109 + 8 * v15);
        uint64_t v29 = v15;
        uint64_t v30 = v14;
        uint64_t v31 = (uint64_t *)(v11 + 8 * v14);
        do
        {
          if (v30 != --v29)
          {
            if (!v11) {
              goto LABEL_160;
            }
            uint64_t v32 = *v31;
            *uint64_t v31 = *v28;
            *char v28 = v32;
          }
          ++v30;
          --v28;
          ++v31;
        }
        while (v30 < v29);
      }
    }
LABEL_46:
    if (v15 >= v113) {
      goto LABEL_69;
    }
    if (__OFSUB__(v15, v14)) {
      goto LABEL_153;
    }
    if (v15 - v14 >= v110)
    {
LABEL_69:
      if (v15 < v14) {
        goto LABEL_148;
      }
      uint64_t v112 = v15;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        id v9 = sub_1C20FADDC(0, *((void *)v9 + 2) + 1, 1, v9);
      }
      unint64_t v44 = *((void *)v9 + 2);
      unint64_t v43 = *((void *)v9 + 3);
      unint64_t v13 = v44 + 1;
      uint64_t v11 = v120;
      if (v44 >= v43 >> 1)
      {
        uint64_t v95 = sub_1C20FADDC((char *)(v43 > 1), v44 + 1, 1, v9);
        uint64_t v11 = v120;
        id v9 = v95;
      }
      *((void *)v9 + 2) = v13;
      uint64_t v45 = v9 + 32;
      int v46 = &v9[16 * v44 + 32];
      *(void *)int v46 = v14;
      *((void *)v46 + 1) = v15;
      if (!v44)
      {
        unint64_t v13 = 1;
LABEL_15:
        uint64_t v10 = v112;
        uint64_t v12 = v113;
        if (v112 >= v113) {
          goto LABEL_119;
        }
        continue;
      }
      while (1)
      {
        unint64_t v47 = v13 - 1;
        if (v13 >= 4)
        {
          uint64_t v52 = &v45[16 * v13];
          uint64_t v53 = *((void *)v52 - 8);
          uint64_t v54 = *((void *)v52 - 7);
          BOOL v58 = __OFSUB__(v54, v53);
          uint64_t v55 = v54 - v53;
          if (v58) {
            goto LABEL_137;
          }
          uint64_t v57 = *((void *)v52 - 6);
          uint64_t v56 = *((void *)v52 - 5);
          BOOL v58 = __OFSUB__(v56, v57);
          uint64_t v50 = v56 - v57;
          char v51 = v58;
          if (v58) {
            goto LABEL_138;
          }
          unint64_t v59 = v13 - 2;
          uint64_t v60 = &v45[16 * v13 - 32];
          uint64_t v62 = *(void *)v60;
          uint64_t v61 = *((void *)v60 + 1);
          BOOL v58 = __OFSUB__(v61, v62);
          uint64_t v63 = v61 - v62;
          if (v58) {
            goto LABEL_140;
          }
          BOOL v58 = __OFADD__(v50, v63);
          uint64_t v64 = v50 + v63;
          if (v58) {
            goto LABEL_143;
          }
          if (v64 >= v55)
          {
            uint64_t v82 = &v45[16 * v47];
            uint64_t v84 = *(void *)v82;
            uint64_t v83 = *((void *)v82 + 1);
            BOOL v58 = __OFSUB__(v83, v84);
            uint64_t v85 = v83 - v84;
            if (v58) {
              goto LABEL_147;
            }
            BOOL v75 = v50 < v85;
            goto LABEL_106;
          }
        }
        else
        {
          if (v13 != 3)
          {
            uint64_t v76 = *((void *)v9 + 4);
            uint64_t v77 = *((void *)v9 + 5);
            BOOL v58 = __OFSUB__(v77, v76);
            uint64_t v69 = v77 - v76;
            char v70 = v58;
            goto LABEL_100;
          }
          uint64_t v49 = *((void *)v9 + 4);
          uint64_t v48 = *((void *)v9 + 5);
          BOOL v58 = __OFSUB__(v48, v49);
          uint64_t v50 = v48 - v49;
          char v51 = v58;
        }
        if (v51) {
          goto LABEL_139;
        }
        unint64_t v59 = v13 - 2;
        uint64_t v65 = &v45[16 * v13 - 32];
        uint64_t v67 = *(void *)v65;
        uint64_t v66 = *((void *)v65 + 1);
        BOOL v68 = __OFSUB__(v66, v67);
        uint64_t v69 = v66 - v67;
        char v70 = v68;
        if (v68) {
          goto LABEL_142;
        }
        uint64_t v71 = &v45[16 * v47];
        uint64_t v73 = *(void *)v71;
        uint64_t v72 = *((void *)v71 + 1);
        BOOL v58 = __OFSUB__(v72, v73);
        uint64_t v74 = v72 - v73;
        if (v58) {
          goto LABEL_145;
        }
        if (__OFADD__(v69, v74)) {
          goto LABEL_146;
        }
        if (v69 + v74 >= v50)
        {
          BOOL v75 = v50 < v74;
LABEL_106:
          if (v75) {
            unint64_t v47 = v59;
          }
          goto LABEL_108;
        }
LABEL_100:
        if (v70) {
          goto LABEL_141;
        }
        uint64_t v78 = &v45[16 * v47];
        uint64_t v80 = *(void *)v78;
        uint64_t v79 = *((void *)v78 + 1);
        BOOL v58 = __OFSUB__(v79, v80);
        uint64_t v81 = v79 - v80;
        if (v58) {
          goto LABEL_144;
        }
        if (v81 < v69) {
          goto LABEL_15;
        }
LABEL_108:
        unint64_t v86 = v47 - 1;
        if (v47 - 1 >= v13)
        {
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
LABEL_154:
          __break(1u);
LABEL_155:
          __break(1u);
LABEL_156:
          __break(1u);
          goto LABEL_157;
        }
        if (!v11) {
          goto LABEL_159;
        }
        char v87 = &v45[16 * v86];
        uint64_t v88 = *(void *)v87;
        unint64_t v89 = v47;
        id v90 = &v45[16 * v47];
        uint64_t v91 = *((void *)v90 + 1);
        id v92 = (id *)(v11 + 8 * *(void *)v87);
        uint64_t v118 = (id *)(v11 + 8 * *(void *)v90);
        uint64_t v93 = (id *)(v11 + 8 * v91);
        swift_retain();
        sub_1C1FADC30(v92, v118, v93, __dst);
        if (v119)
        {
LABEL_116:
          swift_bridgeObjectRelease();
          swift_release();
          goto LABEL_131;
        }
        swift_release();
        if (v91 < v88) {
          goto LABEL_134;
        }
        if (v89 > *((void *)v9 + 2)) {
          goto LABEL_135;
        }
        *(void *)char v87 = v88;
        uint64_t v45 = v9 + 32;
        *(void *)&v9[16 * v86 + 40] = v91;
        unint64_t v94 = *((void *)v9 + 2);
        if (v89 >= v94) {
          goto LABEL_136;
        }
        unint64_t v13 = v94 - 1;
        memmove(v90, v90 + 16, 16 * (v94 - 1 - v89));
        *((void *)v9 + 2) = v94 - 1;
        uint64_t v11 = v120;
        if (v94 <= 2) {
          goto LABEL_15;
        }
      }
    }
    break;
  }
  if (__OFADD__(v14, v110)) {
    goto LABEL_156;
  }
  uint64_t v33 = v113;
  if (v14 + v110 < v113) {
    uint64_t v33 = v14 + v110;
  }
  if (v33 >= v14)
  {
    if (v15 != v33)
    {
      uint64_t v34 = v109 + 8 * v15;
      uint64_t v111 = v33;
      do
      {
        uint64_t v35 = *(void **)(v11 + 8 * v15);
        uint64_t v36 = v14;
        uint64_t v117 = v34;
        while (1)
        {
          uint64_t v37 = *(void **)v34;
          id v38 = v35;
          id v39 = v37;
          swift_getAtKeyPath();
          swift_getAtKeyPath();
          if (v124 == v122 && v125 == v123) {
            break;
          }
          char v41 = sub_1C214BA80();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v41 & 1) == 0) {
            goto LABEL_56;
          }
          uint64_t v11 = v120;
          if (!v120) {
            goto LABEL_158;
          }
          uint64_t v42 = *(void **)v34;
          uint64_t v35 = *(void **)(v34 + 8);
          *(void *)uint64_t v34 = v35;
          *(void *)(v34 + 8) = v42;
          v34 -= 8;
          if (v15 == ++v36) {
            goto LABEL_57;
          }
        }

        swift_bridgeObjectRelease_n();
LABEL_56:
        uint64_t v11 = v120;
LABEL_57:
        ++v15;
        uint64_t v34 = v117 + 8;
        uint64_t v14 = v114;
      }
      while (v15 != v111);
      uint64_t v15 = v111;
    }
    goto LABEL_69;
  }
LABEL_157:
  __break(1u);
LABEL_158:
  swift_release_n();
  __break(1u);
LABEL_159:
  swift_release_n();
  __break(1u);
LABEL_160:
  swift_release_n();
  __break(1u);
LABEL_161:
  swift_release_n();
  __break(1u);
LABEL_162:
  swift_release_n();
  uint64_t result = sub_1C214B900();
  __break(1u);
  return result;
}

uint64_t sub_1C1FAEAD0(uint64_t *a1)
{
  uint64_t v2 = *a1;
  swift_retain_n();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    sub_1C20FC698();
  }
  uint64_t v4 = *(void *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  swift_retain();
  sub_1C1FAE144(v6);
  swift_release();
  sub_1C214B830();
  return swift_release_n();
}

uint64_t sub_1C1FAEB7C(uint64_t a1)
{
  sub_1C1F0E310(0, &qword_1EBF0B7A0, MEMORY[0x1E4F66CD8], MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1C1FAEC08()
{
  if (!qword_1EA2C4570)
  {
    sub_1C21496A0();
    sub_1C1F0E310(255, &qword_1EA2C3920, type metadata accessor for ScheduleDataSource.DoseItem, MEMORY[0x1E4FBB320]);
    sub_1C1F1587C(&qword_1EA2C3688, MEMORY[0x1E4F66D28]);
    unint64_t v0 = sub_1C214B980();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C4570);
    }
  }
}

void sub_1C1FAECE4()
{
  if (!qword_1EA2C4578)
  {
    sub_1C1F0E310(255, &qword_1EA2C3260, MEMORY[0x1E4F66C28], MEMORY[0x1E4FBB320]);
    unint64_t v0 = sub_1C214B980();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C4578);
    }
  }
}

void sub_1C1FAED7C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C214B980();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1C1FAEDE0()
{
  if (!qword_1EA2C3278)
  {
    unint64_t v0 = sub_1C214A830();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C3278);
    }
  }
}

unint64_t sub_1C1FAEE38()
{
  unint64_t result = qword_1EBF0C9F0;
  if (!qword_1EBF0C9F0)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBF0C9F0);
  }
  return result;
}

void sub_1C1FAEE90()
{
  if (!qword_1EA2C4588)
  {
    type metadata accessor for HKDrugInteractionSeverityLevel(255);
    sub_1C1F1587C(&qword_1EA2C4590, type metadata accessor for HKDrugInteractionSeverityLevel);
    unint64_t v0 = sub_1C214B980();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C4588);
    }
  }
}

uint64_t sub_1C1FAEF2C(uint64_t a1, uint64_t a2)
{
  sub_1C1F0E310(0, &qword_1EBF0B7A0, MEMORY[0x1E4F66CD8], MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

double MedicationSearchOptionsFieldItem.init()@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1C2147B20();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2147B10();
  uint64_t v6 = sub_1C2147AD0();
  uint64_t v8 = v7;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  type metadata accessor for MedicationSearchOptionsFieldCell();
  sub_1C1FAF0E4();
  uint64_t v9 = sub_1C21481D0();
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v8;
  double result = 0.0;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(void *)(a1 + 48) = v9;
  *(void *)(a1 + 56) = v11;
  return result;
}

uint64_t type metadata accessor for MedicationSearchOptionsFieldCell()
{
  return self;
}

unint64_t sub_1C1FAF0E4()
{
  unint64_t result = qword_1EA2C3010;
  if (!qword_1EA2C3010)
  {
    type metadata accessor for MedicationSearchOptionsFieldCell();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C3010);
  }
  return result;
}

uint64_t MedicationSearchOptionsFieldItem.uniqueIdentifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1C1FAF168@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  if (v3)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = sub_1C1FB20D4;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  *a2 = v6;
  a2[1] = v5;

  return sub_1C1F1325C(v3);
}

uint64_t sub_1C1FAF1E8(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = sub_1C1FB209C;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v7 = *(void *)(a2 + 16);
  sub_1C1F1325C(v3);
  uint64_t result = sub_1C1F31118(v7);
  *(void *)(a2 + 16) = v6;
  *(void *)(a2 + 24) = v5;
  return result;
}

uint64_t MedicationSearchOptionsFieldItem.onScanTapped.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_1C1F1325C(v1);
  return v1;
}

uint64_t MedicationSearchOptionsFieldItem.onScanTapped.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1C1F31118(*(void *)(v2 + 16));
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*MedicationSearchOptionsFieldItem.onScanTapped.modify())()
{
  return nullsub_1;
}

uint64_t sub_1C1FAF310@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v4 = *(void *)(a1 + 40);
  if (v3)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = sub_1C1FB206C;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  *a2 = v6;
  a2[1] = v5;

  return sub_1C1F1325C(v3);
}

uint64_t sub_1C1FAF390(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = sub_1C1FB2030;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v7 = *(void *)(a2 + 32);
  sub_1C1F1325C(v3);
  uint64_t result = sub_1C1F31118(v7);
  *(void *)(a2 + 32) = v6;
  *(void *)(a2 + 40) = v5;
  return result;
}

uint64_t MedicationSearchOptionsFieldItem.onSearchTapped.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  sub_1C1F1325C(v1);
  return v1;
}

uint64_t MedicationSearchOptionsFieldItem.onSearchTapped.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1C1F31118(*(void *)(v2 + 32));
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = a2;
  return result;
}

uint64_t (*MedicationSearchOptionsFieldItem.onSearchTapped.modify())()
{
  return nullsub_1;
}

uint64_t MedicationSearchOptionsFieldItem.reuseIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t static MedicationSearchOptionsFieldItem.== infix(_:_:)(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return 1;
  }
  else {
    return sub_1C214BA80();
  }
}

uint64_t MedicationSearchOptionsFieldItem.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_1C214A690();

  return swift_bridgeObjectRelease();
}

uint64_t MedicationSearchOptionsFieldItem.hashValue.getter()
{
  return sub_1C214BB80();
}

uint64_t sub_1C1FAF5BC(uint64_t a1, void *a2)
{
  sub_1C1FB1E18(a1, (uint64_t)v5, (unint64_t *)&qword_1EBF0C300, (void (*)(uint64_t))sub_1C1F1CB5C);
  uint64_t v3 = *a2 + OBJC_IVAR____TtC19HealthMedicationsUI32MedicationSearchOptionsFieldCell_item;
  swift_beginAccess();
  sub_1C1F1CADC((uint64_t)v5, v3);
  return swift_endAccess();
}

uint64_t sub_1C1FAF640@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI32MedicationSearchOptionsFieldCell_item;
  swift_beginAccess();
  return sub_1C1FB1E18(v3, a1, (unint64_t *)&qword_1EBF0C300, (void (*)(uint64_t))sub_1C1F1CB5C);
}

uint64_t sub_1C1FAF6B0(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI32MedicationSearchOptionsFieldCell_item;
  swift_beginAccess();
  sub_1C1F1CADC(a1, v3);
  return swift_endAccess();
}

uint64_t (*sub_1C1FAF70C())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1C1FAF768(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  uint64_t v4 = (void *)(*a2 + OBJC_IVAR____TtC19HealthMedicationsUI32MedicationSearchOptionsFieldCell_baseIdentifier);
  swift_beginAccess();
  *uint64_t v4 = v3;
  v4[1] = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C1FAF7D4()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI32MedicationSearchOptionsFieldCell_baseIdentifier);
  swift_beginAccess();
  uint64_t v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1C1FAF82C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + OBJC_IVAR____TtC19HealthMedicationsUI32MedicationSearchOptionsFieldCell_baseIdentifier);
  swift_beginAccess();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1C1FAF88C())()
{
  return j_j__swift_endAccess;
}

id sub_1C1FAF8E8()
{
  return sub_1C1FAFFE8(&OBJC_IVAR____TtC19HealthMedicationsUI32MedicationSearchOptionsFieldCell____lazy_storage___stackView, (uint64_t (*)(uint64_t))sub_1C1FAF908);
}

id sub_1C1FAF908()
{
  sub_1C1F0ED28();
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1C2151E40;
  *(void *)(v0 + 32) = sub_1C1FAF9FC();
  *(void *)(v0 + 40) = sub_1C1FB052C();
  *(void *)(v0 + 48) = sub_1C1FAFFC8();
  sub_1C214A7A0();
  id v1 = objc_allocWithZone(MEMORY[0x1E4FB1C60]);
  sub_1C1F32E5C();
  uint64_t v2 = (void *)sub_1C214A770();
  swift_bridgeObjectRelease();
  id v3 = objc_msgSend(v1, sel_initWithArrangedSubviews_, v2);

  objc_msgSend(v3, sel_setAxis_, 0);
  objc_msgSend(v3, sel_setDistribution_, 0);
  return v3;
}

id sub_1C1FAF9FC()
{
  return sub_1C1FAFFE8(&OBJC_IVAR____TtC19HealthMedicationsUI32MedicationSearchOptionsFieldCell____lazy_storage___searchButton, (uint64_t (*)(uint64_t))sub_1C1FAFA1C);
}

id sub_1C1FAFA1C(uint64_t a1)
{
  uint64_t v28 = a1;
  sub_1C1FB2100(0, &qword_1EBF0C920, MEMORY[0x1E4FB1290]);
  MEMORY[0x1F4188790](v1 - 8);
  id v26 = (char *)&v26 - v2;
  sub_1C1FB2100(0, &qword_1EA2C45D0, MEMORY[0x1E4FB1040]);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v26 - v4;
  uint64_t v6 = sub_1C214B280();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_1C214B3D0();
  uint64_t v27 = *(void *)(v29 - 8);
  MEMORY[0x1F4188790](v29);
  uint64_t v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v12 = objc_msgSend(self, sel_buttonWithType_, 1);
  sub_1C214B3C0();
  if (qword_1EBF0CA00 != -1) {
    swift_once();
  }
  id v13 = (id)qword_1EBF0CA18;
  swift_bridgeObjectRetain();
  sub_1C2147730();
  swift_bridgeObjectRelease();

  sub_1C214B390();
  id v14 = objc_msgSend(self, sel_secondaryLabelColor);
  sub_1C214B320();
  sub_1C214B2A0();
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E4FB11F8], v6);
  sub_1C214B290();
  id v15 = objc_msgSend(self, sel_configurationWithScale_, 1);
  uint64_t v16 = (void *)sub_1C214A5B0();
  id v17 = objc_msgSend(self, sel_systemImageNamed_withConfiguration_, v16, v15);

  id v18 = v17;
  sub_1C214B370();
  sub_1C2149C50();
  uint64_t v19 = sub_1C2149C40();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v5, 0, 1, v19);
  sub_1C214B330();
  uint64_t v20 = v26;
  uint64_t v21 = v27;
  uint64_t v22 = v29;
  (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v26, v11, v29);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v20, 0, 1, v22);
  sub_1C214B400();
  objc_msgSend(v12, sel_setContentHorizontalAlignment_, 4);
  objc_msgSend(v12, sel_addTarget_action_forControlEvents_, v28, sel_onSearch, 64);
  objc_msgSend(v12, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  id v23 = objc_msgSend(v12, sel_heightAnchor);
  id v24 = objc_msgSend(v23, sel_constraintEqualToConstant_, 44.0);

  objc_msgSend(v24, sel_setActive_, 1);
  objc_msgSend(v12, sel_setMaximumContentSizeCategory_, *MEMORY[0x1E4FB2788]);

  (*(void (**)(char *, uint64_t))(v21 + 8))(v11, v22);
  return v12;
}

id sub_1C1FAFF88()
{
  id v0 = objc_msgSend(self, sel_secondaryLabelColor);

  return v0;
}

id sub_1C1FAFFC8()
{
  return sub_1C1FAFFE8(&OBJC_IVAR____TtC19HealthMedicationsUI32MedicationSearchOptionsFieldCell____lazy_storage___scanButton, (uint64_t (*)(uint64_t))sub_1C1FB004C);
}

id sub_1C1FAFFE8(uint64_t *a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(void **)(v2 + *a1);
  if (v4)
  {
    id v5 = *(id *)(v2 + *a1);
  }
  else
  {
    uint64_t v6 = (void *)a2(v2);
    uint64_t v7 = *(void **)(v2 + v3);
    *(void *)(v2 + v3) = v6;
    id v5 = v6;

    uint64_t v4 = 0;
  }
  id v8 = v4;
  return v5;
}

id sub_1C1FB004C(uint64_t a1)
{
  sub_1C1FB2100(0, &qword_1EBF0C920, MEMORY[0x1E4FB1290]);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v27 - v3;
  uint64_t v5 = sub_1C214B280();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  id v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1C214B3D0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  id v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v13 = objc_msgSend(self, sel_buttonWithType_, 1);
  sub_1C214B3C0();
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E4FB11F8], v5);
  sub_1C214B290();
  type metadata accessor for MedicationSearchOptionsFieldCell();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v15 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v16 = (void *)sub_1C214A5B0();
  id v17 = objc_msgSend(self, sel_systemImageNamed_, v16);

  sub_1C214B370();
  uint64_t v18 = sub_1C214B360();
  if (v18)
  {
    uint64_t v19 = (void *)v18;
    id v27 = v15;
    uint64_t v28 = a1;
    if (qword_1EBF0CA00 != -1) {
      swift_once();
    }
    id v20 = (id)qword_1EBF0CA18;
    swift_bridgeObjectRetain();
    sub_1C2147730();
    swift_bridgeObjectRelease();

    uint64_t v21 = (void *)sub_1C214A5B0();
    swift_bridgeObjectRelease();
    objc_msgSend(v19, sel_setAccessibilityLabel_, v21);

    id v15 = v27;
    a1 = v28;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v4, v12, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v4, 0, 1, v9);
  sub_1C214B400();
  objc_msgSend(v13, sel_addTarget_action_forControlEvents_, a1, sel_onScan, 64);
  objc_msgSend(v13, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  id v22 = objc_msgSend(v13, sel_widthAnchor);
  id v23 = objc_msgSend(v22, sel_constraintEqualToConstant_, 64.0);

  objc_msgSend(v23, sel_setActive_, 1);
  id v24 = objc_msgSend(v13, sel_heightAnchor);
  id v25 = objc_msgSend(v24, sel_constraintEqualToConstant_, 44.0);

  objc_msgSend(v25, sel_setActive_, 1);
  objc_msgSend(v13, sel_setMaximumContentSizeCategory_, *MEMORY[0x1E4FB2798]);

  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return v13;
}

id sub_1C1FB052C()
{
  uint64_t v1 = OBJC_IVAR____TtC19HealthMedicationsUI32MedicationSearchOptionsFieldCell____lazy_storage___fixedSpace;
  uint64_t v2 = *(void **)(v0
                + OBJC_IVAR____TtC19HealthMedicationsUI32MedicationSearchOptionsFieldCell____lazy_storage___fixedSpace);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC19HealthMedicationsUI32MedicationSearchOptionsFieldCell____lazy_storage___fixedSpace);
  }
  else
  {
    id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1EB0]), sel_init);
    id v5 = objc_msgSend(v4, sel_widthAnchor);
    id v6 = objc_msgSend(v5, sel_constraintEqualToConstant_, 8.0);

    objc_msgSend(v6, sel_setActive_, 1);
    uint64_t v7 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v8 = v2;
  return v3;
}

char *sub_1C1FB05FC(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = &v4[OBJC_IVAR____TtC19HealthMedicationsUI32MedicationSearchOptionsFieldCell_item];
  *(_OWORD *)uint64_t v9 = 0u;
  *((_OWORD *)v9 + 1) = 0u;
  *((void *)v9 + 4) = 0;
  uint64_t v10 = (uint64_t *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI32MedicationSearchOptionsFieldCell_baseIdentifier];
  uint64_t v26 = sub_1C214A5F0();
  uint64_t v27 = v11;
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  id v12 = v4;
  swift_bridgeObjectRelease();
  *uint64_t v10 = v26;
  v10[1] = v27;
  *(void *)&v12[OBJC_IVAR____TtC19HealthMedicationsUI32MedicationSearchOptionsFieldCell____lazy_storage___stackView] = 0;
  *(void *)&v12[OBJC_IVAR____TtC19HealthMedicationsUI32MedicationSearchOptionsFieldCell____lazy_storage___searchButton] = 0;
  *(void *)&v12[OBJC_IVAR____TtC19HealthMedicationsUI32MedicationSearchOptionsFieldCell____lazy_storage___scanButton] = 0;
  *(void *)&v12[OBJC_IVAR____TtC19HealthMedicationsUI32MedicationSearchOptionsFieldCell____lazy_storage___fixedSpace] = 0;

  v28.receiver = v12;
  v28.super_class = (Class)type metadata accessor for MedicationSearchOptionsFieldCell();
  id v13 = (char *)objc_msgSendSuper2(&v28, sel_initWithFrame_, a1, a2, a3, a4);
  id v14 = (uint64_t *)&v13[OBJC_IVAR____TtC19HealthMedicationsUI32MedicationSearchOptionsFieldCell_baseIdentifier];
  swift_beginAccess();
  uint64_t v15 = *v14;
  uint64_t v16 = v14[1];
  swift_bridgeObjectRetain();
  id v17 = v13;
  sub_1C1FB10DC(v15, v16);
  swift_bridgeObjectRelease();
  objc_msgSend(v17, sel_setAutomaticallyUpdatesBackgroundConfiguration_, 0);
  id v18 = objc_msgSend(v17, sel_contentView);
  id v19 = objc_msgSend(v18, sel_heightAnchor);

  id v20 = objc_msgSend(v19, sel_constraintEqualToConstant_, 54.0);
  objc_msgSend(v20, sel_setActive_, 1);

  id v21 = objc_msgSend(v17, sel_contentView);
  id v22 = sub_1C1FAF8E8();
  objc_msgSend(v21, sel_addSubview_, v22);

  id v23 = sub_1C1FAF8E8();
  objc_msgSend(v17, sel_bounds);
  double Width = CGRectGetWidth(v29);
  objc_msgSend(v17, sel_bounds);
  objc_msgSend(v23, sel_setFrame_, 0.0, 0.0, Width, CGRectGetHeight(v30) + -10.0);

  return v17;
}

uint64_t sub_1C1FB09A0()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC19HealthMedicationsUI32MedicationSearchOptionsFieldCell_item;
  swift_beginAccess();
  sub_1C1FB1E18(v1, (uint64_t)v14, (unint64_t *)&qword_1EBF0C300, (void (*)(uint64_t))sub_1C1F1CB5C);
  if (!v15) {
    return sub_1C1FB1E84((uint64_t)v14, (unint64_t *)&qword_1EBF0C300, (void (*)(uint64_t))sub_1C1F1CB5C);
  }
  sub_1C1F1CB5C();
  uint64_t result = swift_dynamicCast();
  if (result)
  {
    uint64_t v3 = (uint64_t)v10;
    id v4 = v12;
    id v5 = self;
    uint64_t v6 = swift_allocObject();
    swift_unknownObjectWeakInit();
    id v12 = sub_1C1FB1E10;
    uint64_t v13 = v6;
    v9[0] = MEMORY[0x1E4F143A8];
    v9[1] = 1107296256;
    uint64_t v10 = sub_1C1F0E42C;
    uint64_t v11 = &block_descriptor_11;
    uint64_t v7 = _Block_copy(v9);
    swift_release();
    objc_msgSend(v5, sel_animateWithDuration_animations_, v7, 0.4);
    _Block_release(v7);
    if (v4)
    {
      id v8 = sub_1C1FAF9FC();
      ((void (*)(uint64_t, id))v4)(v0, v8);
      swift_bridgeObjectRelease();
      sub_1C1F31118(v3);
      sub_1C1F31118((uint64_t)v4);
    }
    else
    {
      swift_bridgeObjectRelease();
      sub_1C1F31118(v3);
      sub_1C1F31118(0);
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1C1FB0BC8(uint64_t a1)
{
  sub_1C1FB2100(0, &qword_1EBF0C920, MEMORY[0x1E4FB1290]);
  uint64_t v3 = MEMORY[0x1F4188790](v2 - 8);
  id v5 = &v28[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = MEMORY[0x1F4188790](v3);
  id v8 = &v28[-v7];
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = &v28[-v9];
  uint64_t v11 = a1 + 16;
  swift_beginAccess();
  uint64_t v12 = MEMORY[0x1C8754850](a1 + 16);
  if (v12)
  {
    uint64_t v13 = (void *)v12;
    id v14 = sub_1C1FAFFC8();

    objc_msgSend(v14, sel_setAlpha_, 0.0);
  }
  swift_beginAccess();
  uint64_t v15 = MEMORY[0x1C8754850](v11);
  if (v15)
  {
    uint64_t v16 = (void *)v15;
    id v17 = sub_1C1FB052C();

    objc_msgSend(v17, sel_setAlpha_, 0.0);
  }
  swift_beginAccess();
  uint64_t v18 = MEMORY[0x1C8754850](v11);
  if (v18)
  {
    id v19 = (void *)v18;
    id v20 = sub_1C1FAF9FC();

    sub_1C214B3F0();
    uint64_t v21 = sub_1C214B3D0();
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 48))(v10, 1, v21))
    {
      id v22 = (void (*)(uint64_t))MEMORY[0x1E4FB1290];
      sub_1C1FB1E18((uint64_t)v10, (uint64_t)v8, &qword_1EBF0C920, MEMORY[0x1E4FB1290]);
      sub_1C214B400();

      sub_1C1FB1E84((uint64_t)v10, &qword_1EBF0C920, v22);
    }
    else
    {
      sub_1C214B390();
      sub_1C214B400();
    }
  }
  swift_beginAccess();
  uint64_t v23 = MEMORY[0x1C8754850](v11);
  if (v23)
  {
    id v24 = (void *)v23;
    id v25 = sub_1C1FAF9FC();

    sub_1C214B3F0();
    uint64_t v26 = sub_1C214B3D0();
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v26 - 8) + 48))(v5, 1, v26))
    {
      uint64_t v27 = (void (*)(uint64_t))MEMORY[0x1E4FB1290];
      sub_1C1FB1E18((uint64_t)v5, (uint64_t)v8, &qword_1EBF0C920, MEMORY[0x1E4FB1290]);
      sub_1C214B400();

      sub_1C1FB1E84((uint64_t)v5, &qword_1EBF0C920, v27);
    }
    else
    {
      sub_1C214B370();
      sub_1C214B400();
    }
  }
}

uint64_t sub_1C1FB0F5C()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC19HealthMedicationsUI32MedicationSearchOptionsFieldCell_item;
  swift_beginAccess();
  sub_1C1FB1E18(v1, (uint64_t)v6, (unint64_t *)&qword_1EBF0C300, (void (*)(uint64_t))sub_1C1F1CB5C);
  if (!v7) {
    return sub_1C1FB1E84((uint64_t)v6, (unint64_t *)&qword_1EBF0C300, (void (*)(uint64_t))sub_1C1F1CB5C);
  }
  sub_1C1F1CB5C();
  uint64_t result = swift_dynamicCast();
  if (result)
  {
    if (v4)
    {
      v4(v0);
      swift_bridgeObjectRelease();
      uint64_t v3 = (uint64_t)v4;
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v3 = 0;
    }
    sub_1C1F31118(v3);
    sub_1C1F31118(v5);
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1C1FB10DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C21497F0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    id v8 = sub_1C1FAF9FC();
    uint64_t v26 = a1;
    uint64_t v27 = a2;
    swift_bridgeObjectRetain();
    sub_1C214A6C0();
    uint64_t v9 = (void *)sub_1C214A5B0();
    swift_bridgeObjectRelease();
    objc_msgSend(v8, sel_setAccessibilityIdentifier_, v9);

    id v10 = sub_1C1FAF9FC();
    id v11 = objc_msgSend(v10, sel_titleLabel);

    if (v11)
    {
      uint64_t v26 = a1;
      uint64_t v27 = a2;
      swift_bridgeObjectRetain();
      sub_1C214A6C0();
      uint64_t v12 = (void *)sub_1C214A5B0();
      swift_bridgeObjectRelease();
      objc_msgSend(v11, sel_setAccessibilityIdentifier_, v12);
    }
    id v13 = sub_1C1FAF9FC();
    id v14 = objc_msgSend(v13, sel_imageView);

    if (v14)
    {
      uint64_t v26 = a1;
      uint64_t v27 = a2;
      swift_bridgeObjectRetain();
      sub_1C214A6C0();
      uint64_t v15 = (void *)sub_1C214A5B0();
      swift_bridgeObjectRelease();
      objc_msgSend(v14, sel_setAccessibilityIdentifier_, v15);
    }
    id v16 = sub_1C1FAFFC8();
    uint64_t v26 = a1;
    uint64_t v27 = a2;
    swift_bridgeObjectRetain();
    sub_1C214A6C0();
    id v17 = (void *)sub_1C214A5B0();
    swift_bridgeObjectRelease();
    objc_msgSend(v16, sel_setAccessibilityIdentifier_, v17);

    id v18 = sub_1C1FAFFC8();
    id v19 = objc_msgSend(v18, sel_imageView);

    if (v19)
    {
      uint64_t v26 = a1;
      uint64_t v27 = a2;
      swift_bridgeObjectRetain();
      sub_1C214A6C0();
      uint64_t v25 = sub_1C214A5B0();
      swift_bridgeObjectRelease();
      objc_msgSend(v19, sel_setAccessibilityIdentifier_, v25);

      id v20 = (void *)v25;
    }
  }
  else
  {
    sub_1C21497A0();
    uint64_t v21 = sub_1C21497E0();
    os_log_type_t v22 = sub_1C214ABD0();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v23 = 0;
      _os_log_impl(&dword_1C1F0B000, v21, v22, "Cannot assign automation IDs as there is no base Identifier.", v23, 2u);
      MEMORY[0x1C8754730](v23, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
}

id MedicationSearchOptionsFieldCell.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MedicationSearchOptionsFieldCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t (*sub_1C1FB15B8())()
{
  return j__swift_endAccess;
}

void sub_1C1FB1614(uint64_t a1, uint64_t a2)
{
}

uint64_t sub_1C1FB1638()
{
  uint64_t v1 = (uint64_t *)(*v0 + OBJC_IVAR____TtC19HealthMedicationsUI32MedicationSearchOptionsFieldCell_baseIdentifier);
  swift_beginAccess();
  uint64_t v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1C1FB1694(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(*v2 + OBJC_IVAR____TtC19HealthMedicationsUI32MedicationSearchOptionsFieldCell_baseIdentifier);
  swift_beginAccess();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1C1FB16F8())()
{
  return j_j__swift_endAccess;
}

unint64_t sub_1C1FB175C()
{
  unint64_t result = qword_1EA2C45A8;
  if (!qword_1EA2C45A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C45A8);
  }
  return result;
}

uint64_t sub_1C1FB17C0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC19HealthMedicationsUI32MedicationSearchOptionsFieldCell_item;
  swift_beginAccess();
  return sub_1C1FB1E18(v3, a2, (unint64_t *)&qword_1EBF0C300, (void (*)(uint64_t))sub_1C1F1CB5C);
}

uint64_t sub_1C1FB1838@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (void *)(*a1 + OBJC_IVAR____TtC19HealthMedicationsUI32MedicationSearchOptionsFieldCell_baseIdentifier);
  swift_beginAccess();
  uint64_t v4 = v3[1];
  *a2 = *v3;
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t destroy for MedicationSearchOptionsFieldItem(uint64_t a1)
{
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 16)) {
    swift_release();
  }
  if (*(void *)(a1 + 32)) {
    swift_release();
  }

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for MedicationSearchOptionsFieldItem(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v6 = a2 + 2;
  uint64_t v5 = a2[2];
  swift_bridgeObjectRetain();
  if (v5)
  {
    uint64_t v7 = a2[3];
    a1[2] = v5;
    a1[3] = v7;
    swift_retain();
  }
  else
  {
    *((_OWORD *)a1 + 1) = *v6;
  }
  uint64_t v8 = a2[4];
  if (v8)
  {
    uint64_t v9 = a2[5];
    a1[4] = v8;
    a1[5] = v9;
    swift_retain();
  }
  else
  {
    *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
  }
  uint64_t v10 = a2[7];
  a1[6] = a2[6];
  a1[7] = v10;
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for MedicationSearchOptionsFieldItem(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = a2[2];
  if (a1[2])
  {
    if (v4)
    {
      uint64_t v5 = a2[3];
      a1[2] = v4;
      a1[3] = v5;
      swift_retain();
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v4)
  {
    uint64_t v6 = a2[3];
    a1[2] = v4;
    a1[3] = v6;
    swift_retain();
    goto LABEL_8;
  }
  *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
LABEL_8:
  uint64_t v7 = a2[4];
  if (!a1[4])
  {
    if (v7)
    {
      uint64_t v9 = a2[5];
      a1[4] = v7;
      a1[5] = v9;
      swift_retain();
      goto LABEL_15;
    }
LABEL_14:
    *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
    goto LABEL_15;
  }
  if (!v7)
  {
    swift_release();
    goto LABEL_14;
  }
  uint64_t v8 = a2[5];
  a1[4] = v7;
  a1[5] = v8;
  swift_retain();
  swift_release();
LABEL_15:
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy64_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

void *assignWithTake for MedicationSearchOptionsFieldItem(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[2];
  if (a1[2])
  {
    if (v5)
    {
      uint64_t v6 = a2[3];
      a1[2] = v5;
      a1[3] = v6;
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v5)
  {
    uint64_t v7 = a2[3];
    a1[2] = v5;
    a1[3] = v7;
    goto LABEL_8;
  }
  *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
LABEL_8:
  uint64_t v8 = a2[4];
  if (!a1[4])
  {
    if (v8)
    {
      uint64_t v10 = a2[5];
      a1[4] = v8;
      a1[5] = v10;
      goto LABEL_15;
    }
LABEL_14:
    *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
    goto LABEL_15;
  }
  if (!v8)
  {
    swift_release();
    goto LABEL_14;
  }
  uint64_t v9 = a2[5];
  a1[4] = v8;
  a1[5] = v9;
  swift_release();
LABEL_15:
  uint64_t v11 = a2[7];
  a1[6] = a2[6];
  a1[7] = v11;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MedicationSearchOptionsFieldItem(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 64)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MedicationSearchOptionsFieldItem(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MedicationSearchOptionsFieldItem()
{
  return &type metadata for MedicationSearchOptionsFieldItem;
}

uint64_t method lookup function for MedicationSearchOptionsFieldCell(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MedicationSearchOptionsFieldCell);
}

uint64_t dispatch thunk of MedicationSearchOptionsFieldCell.item.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of MedicationSearchOptionsFieldCell.item.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of MedicationSearchOptionsFieldCell.item.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of MedicationSearchOptionsFieldCell.baseIdentifier.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of MedicationSearchOptionsFieldCell.baseIdentifier.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of MedicationSearchOptionsFieldCell.baseIdentifier.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of MedicationSearchOptionsFieldCell.updateAutomationIdentifiers(with:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x128))();
}

uint64_t sub_1C1FB1DD8()
{
  swift_unknownObjectWeakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

void sub_1C1FB1E10()
{
  sub_1C1FB0BC8(v0);
}

uint64_t sub_1C1FB1E18(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_1C1FB2100(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_1C1FB1E84(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1C1FB2100(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

void sub_1C1FB1EE0()
{
  uint64_t v1 = &v0[OBJC_IVAR____TtC19HealthMedicationsUI32MedicationSearchOptionsFieldCell_item];
  *(_OWORD *)uint64_t v1 = 0u;
  *((_OWORD *)v1 + 1) = 0u;
  *((void *)v1 + 4) = 0;
  unint64_t v2 = (uint64_t *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI32MedicationSearchOptionsFieldCell_baseIdentifier];
  uint64_t v4 = sub_1C214A5F0();
  uint64_t v5 = v3;
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  *unint64_t v2 = v4;
  v2[1] = v5;
  *(void *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI32MedicationSearchOptionsFieldCell____lazy_storage___stackView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI32MedicationSearchOptionsFieldCell____lazy_storage___searchButton] = 0;
  *(void *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI32MedicationSearchOptionsFieldCell____lazy_storage___scanButton] = 0;
  *(void *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI32MedicationSearchOptionsFieldCell____lazy_storage___fixedSpace] = 0;

  sub_1C214B910();
  __break(1u);
}

uint64_t sub_1C1FB1FF8()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C1FB2030(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(uint64_t (**)(uint64_t *, uint64_t *))(v2 + 16);
  uint64_t v5 = a2;
  uint64_t v6 = a1;
  return v3(&v6, &v5);
}

uint64_t sub_1C1FB206C(void *a1, void *a2)
{
  return (*(uint64_t (**)(void, void))(v2 + 16))(*a1, *a2);
}

uint64_t sub_1C1FB209C(uint64_t a1)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t *))(v1 + 16);
  uint64_t v4 = a1;
  return v2(&v4);
}

uint64_t sub_1C1FB20D4(void *a1)
{
  return (*(uint64_t (**)(void))(v1 + 16))(*a1);
}

void sub_1C1FB2100(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C214B4F0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1C1FB2160()
{
  return swift_deallocClassInstance();
}

id sub_1C1FB2170()
{
  _s30HealthMedicationsUIBundleClassCMa();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id result = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  qword_1EBF0CA30 = (uint64_t)result;
  return result;
}

id static NSBundle.healthMedicationsUI.getter()
{
  if (qword_1EBF0CA38 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_1EBF0CA30;

  return v0;
}

uint64_t _s30HealthMedicationsUIBundleClassCMa()
{
  return self;
}

uint64_t sub_1C1FB2248(uint64_t a1, void *a2)
{
  sub_1C1F2116C(a1, (uint64_t)v5);
  uint64_t v3 = *a2 + OBJC_IVAR____TtC19HealthMedicationsUI28InteractionSeparatorLineCell_item;
  swift_beginAccess();
  sub_1C1F1CADC((uint64_t)v5, v3);
  return swift_endAccess();
}

uint64_t sub_1C1FB22B0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI28InteractionSeparatorLineCell_item;
  swift_beginAccess();
  return sub_1C1F2116C(v3, a1);
}

uint64_t sub_1C1FB2304(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI28InteractionSeparatorLineCell_item;
  swift_beginAccess();
  sub_1C1F1CADC(a1, v3);
  return swift_endAccess();
}

uint64_t (*sub_1C1FB2360())()
{
  return j_j__swift_endAccess;
}

id sub_1C1FB23BC()
{
  uint64_t v1 = OBJC_IVAR____TtC19HealthMedicationsUI28InteractionSeparatorLineCell____lazy_storage___separatorView;
  uint64_t v2 = *(void **)(v0
                + OBJC_IVAR____TtC19HealthMedicationsUI28InteractionSeparatorLineCell____lazy_storage___separatorView);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI28InteractionSeparatorLineCell____lazy_storage___separatorView);
  }
  else
  {
    id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F67C08]), sel_init);
    HKUIOnePixel();
    objc_msgSend(v4, sel_setSeparatorThickness_);
    id v5 = objc_msgSend(self, sel_opaqueSeparatorColor);
    objc_msgSend(v4, sel_setColor_, v5);

    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    uint64_t v6 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v7 = v2;
  return v3;
}

uint64_t type metadata accessor for InteractionSeparatorLineCell()
{
  return self;
}

void sub_1C1FB2628()
{
  id v1 = objc_msgSend(v0, sel_contentView);
  id v2 = sub_1C1FB23BC();
  objc_msgSend(v1, sel_addSubview_, v2);

  id v3 = self;
  sub_1C1F0ED28();
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1C21510C0;
  id v5 = sub_1C1FB23BC();
  id v6 = objc_msgSend(v5, sel_leadingAnchor);

  id v7 = objc_msgSend(v0, sel_contentView);
  id v8 = objc_msgSend(v7, sel_leadingAnchor);

  id v9 = objc_msgSend(v6, sel_constraintEqualToAnchor_, v8);
  *(void *)(v4 + 32) = v9;
  id v10 = sub_1C1FB23BC();
  id v11 = objc_msgSend(v10, sel_topAnchor);

  id v12 = objc_msgSend(v0, sel_contentView);
  id v13 = objc_msgSend(v12, sel_topAnchor);

  id v14 = objc_msgSend(v11, sel_constraintEqualToAnchor_, v13);
  *(void *)(v4 + 40) = v14;
  id v15 = sub_1C1FB23BC();
  id v16 = objc_msgSend(v15, sel_bottomAnchor);

  id v17 = objc_msgSend(v0, sel_contentView);
  id v18 = objc_msgSend(v17, sel_bottomAnchor);

  id v19 = objc_msgSend(v16, sel_constraintEqualToAnchor_, v18);
  *(void *)(v4 + 48) = v19;
  id v20 = sub_1C1FB23BC();
  id v21 = objc_msgSend(v20, sel_trailingAnchor);

  id v22 = objc_msgSend(v0, sel_contentView);
  id v23 = objc_msgSend(v22, sel_trailingAnchor);

  id v24 = objc_msgSend(v21, sel_constraintEqualToAnchor_, v23);
  *(void *)(v4 + 56) = v24;
  sub_1C214A7A0();
  sub_1C1F645D4();
  id v25 = (id)sub_1C214A770();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_activateConstraints_, v25);
}

id InteractionSeparatorLineCell.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for InteractionSeparatorLineCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t (*sub_1C1FB29A4())()
{
  return j__swift_endAccess;
}

uint64_t sub_1C1FB2A00@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC19HealthMedicationsUI28InteractionSeparatorLineCell_item;
  swift_beginAccess();
  return sub_1C1F2116C(v3, a2);
}

uint64_t method lookup function for InteractionSeparatorLineCell(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for InteractionSeparatorLineCell);
}

uint64_t dispatch thunk of InteractionSeparatorLineCell.item.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x60))();
}

uint64_t dispatch thunk of InteractionSeparatorLineCell.item.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of InteractionSeparatorLineCell.item.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x70))();
}

uint64_t sub_1C1FB2B10(uint64_t a1)
{
  unint64_t v2 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    uint64_t v3 = sub_1C214B670();
    uint64_t v5 = v4;
    uint64_t v6 = sub_1C214B720();
    char v8 = MEMORY[0x1C8753820](v3, v5, v6, v7);
    swift_bridgeObjectRelease();
    if (v8)
    {
LABEL_3:
      sub_1C1FB6928(v3, v5, v2 != 0);
      return 0;
    }
LABEL_7:
    sub_1C2091580(v3, v5, v2 != 0, a1);
    uint64_t v9 = v13;
    sub_1C1FB6928(v3, v5, v2 != 0);
    return v9;
  }
  uint64_t result = sub_1C2091B40(a1);
  if ((v12 & 1) == 0)
  {
    uint64_t v5 = v11;
    if (*(_DWORD *)(a1 + 36) == v11)
    {
      uint64_t v3 = result;
      if (result == 1 << *(unsigned char *)(a1 + 32)) {
        goto LABEL_3;
      }
      goto LABEL_7;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1C1FB2C20()
{
  id v1 = objc_msgSend(v0, sel_interactionType);
  id v2 = objc_msgSend(v0, sel_medication);
  id v3 = objc_msgSend(v2, sel_localizedOntologyEducationContent);
  uint64_t v4 = v3;
  if (v1 != (id)1)
  {
    if (v3)
    {
      sub_1C1F12718(0, (unint64_t *)&unk_1EA2C4680);
      uint64_t v5 = sub_1C21480B0();
      goto LABEL_6;
    }
LABEL_7:

    return 0;
  }
  if (!v3) {
    goto LABEL_7;
  }
  sub_1C1F12718(0, (unint64_t *)&unk_1EA2C4680);
  uint64_t v5 = sub_1C21480C0();
LABEL_6:
  uint64_t v6 = v5;

  return v6;
}

__n128 sub_1C1FB2D28()
{
  __asm { FMOV            V0.2D, #16.0 }
  xmmword_1EA2C7D40 = (__int128)result;
  unk_1EA2C7D50 = result;
  return result;
}

uint64_t sub_1C1FB2D3C(uint64_t a1, void *a2)
{
  sub_1C1F2116C(a1, (uint64_t)v5);
  uint64_t v3 = *a2 + OBJC_IVAR____TtC19HealthMedicationsUI46PregnancyLactationInteractionCriticalAlertCell_item;
  swift_beginAccess();
  sub_1C1F32DDC((uint64_t)v5, v3);
  swift_endAccess();
  sub_1C1FB597C();
  return sub_1C1F374E4((uint64_t)v5);
}

uint64_t sub_1C1FB2DB0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI46PregnancyLactationInteractionCriticalAlertCell_item;
  swift_beginAccess();
  return sub_1C1F2116C(v3, a1);
}

uint64_t sub_1C1FB2E04(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI46PregnancyLactationInteractionCriticalAlertCell_item;
  swift_beginAccess();
  sub_1C1F32DDC(a1, v3);
  swift_endAccess();
  sub_1C1FB597C();
  return sub_1C1F374E4(a1);
}

void (*sub_1C1FB2E74(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1C1FB2ED4;
}

void sub_1C1FB2ED4(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    sub_1C1FB597C();
  }
}

id sub_1C1FB2F08(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = &v4[OBJC_IVAR____TtC19HealthMedicationsUI46PregnancyLactationInteractionCriticalAlertCell_item];
  *(_OWORD *)uint64_t v9 = 0u;
  *((_OWORD *)v9 + 1) = 0u;
  *((void *)v9 + 4) = 0;
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI46PregnancyLactationInteractionCriticalAlertCell_activeConstraints] = MEMORY[0x1E4FBC860];
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI46PregnancyLactationInteractionCriticalAlertCell____lazy_storage___medmojiView] = 0;
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI46PregnancyLactationInteractionCriticalAlertCell____lazy_storage___dismissLabel] = 0;
  uint64_t v10 = OBJC_IVAR____TtC19HealthMedicationsUI46PregnancyLactationInteractionCriticalAlertCell_pregnancyTitleButton;
  uint64_t v11 = qword_1EA2C2710;
  char v12 = v4;
  if (v11 != -1) {
    swift_once();
  }
  id v13 = (id)qword_1EA2C5D90;
  swift_bridgeObjectRetain();
  uint64_t v14 = sub_1C2147730();
  uint64_t v16 = v15;
  swift_bridgeObjectRelease();

  _sSo8UIButtonC19HealthMedicationsUIE21makeExclamationButton5title29accessibilityIdentifierSuffixABSS_SStFZ_0(v14, v16, 0xD000000000000012, 0x80000001C2162BA0);
  uint64_t v18 = v17;
  swift_bridgeObjectRelease();
  *(void *)&v12[v10] = v18;
  uint64_t v19 = OBJC_IVAR____TtC19HealthMedicationsUI46PregnancyLactationInteractionCriticalAlertCell_lactationTitleButton;
  id v20 = (id)qword_1EA2C5D90;
  swift_bridgeObjectRetain();
  uint64_t v21 = sub_1C2147730();
  uint64_t v23 = v22;
  swift_bridgeObjectRelease();

  _sSo8UIButtonC19HealthMedicationsUIE21makeExclamationButton5title29accessibilityIdentifierSuffixABSS_SStFZ_0(v21, v23, 0xD000000000000012, 0x80000001C2162BF0);
  uint64_t v25 = v24;
  swift_bridgeObjectRelease();
  *(void *)&v12[v19] = v25;
  *(void *)&v12[OBJC_IVAR____TtC19HealthMedicationsUI46PregnancyLactationInteractionCriticalAlertCell____lazy_storage___titleLabel] = 0;
  *(void *)&v12[OBJC_IVAR____TtC19HealthMedicationsUI46PregnancyLactationInteractionCriticalAlertCell____lazy_storage___subtitleLabel] = 0;
  *(void *)&v12[OBJC_IVAR____TtC19HealthMedicationsUI46PregnancyLactationInteractionCriticalAlertCell____lazy_storage___separatorView] = 0;
  *(void *)&v12[OBJC_IVAR____TtC19HealthMedicationsUI46PregnancyLactationInteractionCriticalAlertCell____lazy_storage___learnMoreLabel] = 0;

  v31.receiver = v12;
  v31.super_class = (Class)type metadata accessor for PregnancyLactationInteractionCriticalAlertCell();
  id v26 = objc_msgSendSuper2(&v31, sel_initWithFrame_, a1, a2, a3, a4, 0xE000000000000000);
  sub_1C1FB46C4();
  sub_1C1FB4AC8();
  sub_1C1FB5F9C(0, (unint64_t *)&qword_1EA2C3D80, (uint64_t (*)(uint64_t))sub_1C1F7C864, MEMORY[0x1E4FBBE00]);
  uint64_t v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_1C214FCD0;
  uint64_t v28 = sub_1C2149C70();
  uint64_t v29 = MEMORY[0x1E4FB1138];
  *(void *)(v27 + 32) = v28;
  *(void *)(v27 + 40) = v29;
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1C1F7C8F0();
  sub_1C214B120();

  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return v26;
}

id sub_1C1FB32A4(void *a1)
{
  uint64_t v3 = &v1[OBJC_IVAR____TtC19HealthMedicationsUI46PregnancyLactationInteractionCriticalAlertCell_item];
  *(_OWORD *)uint64_t v3 = 0u;
  *((_OWORD *)v3 + 1) = 0u;
  *((void *)v3 + 4) = 0;
  *(void *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI46PregnancyLactationInteractionCriticalAlertCell_activeConstraints] = MEMORY[0x1E4FBC860];
  *(void *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI46PregnancyLactationInteractionCriticalAlertCell____lazy_storage___medmojiView] = 0;
  *(void *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI46PregnancyLactationInteractionCriticalAlertCell____lazy_storage___dismissLabel] = 0;
  uint64_t v4 = OBJC_IVAR____TtC19HealthMedicationsUI46PregnancyLactationInteractionCriticalAlertCell_pregnancyTitleButton;
  uint64_t v5 = qword_1EA2C2710;
  uint64_t v6 = v1;
  if (v5 != -1) {
    swift_once();
  }
  id v7 = (id)qword_1EA2C5D90;
  swift_bridgeObjectRetain();
  uint64_t v8 = sub_1C2147730();
  uint64_t v10 = v9;
  swift_bridgeObjectRelease();

  _sSo8UIButtonC19HealthMedicationsUIE21makeExclamationButton5title29accessibilityIdentifierSuffixABSS_SStFZ_0(v8, v10, 0xD000000000000012, 0x80000001C2162BA0);
  uint64_t v12 = v11;
  swift_bridgeObjectRelease();
  *(void *)&v6[v4] = v12;
  uint64_t v13 = OBJC_IVAR____TtC19HealthMedicationsUI46PregnancyLactationInteractionCriticalAlertCell_lactationTitleButton;
  id v14 = (id)qword_1EA2C5D90;
  swift_bridgeObjectRetain();
  uint64_t v15 = sub_1C2147730();
  uint64_t v17 = v16;
  swift_bridgeObjectRelease();

  _sSo8UIButtonC19HealthMedicationsUIE21makeExclamationButton5title29accessibilityIdentifierSuffixABSS_SStFZ_0(v15, v17, 0xD000000000000012, 0x80000001C2162BF0);
  uint64_t v19 = v18;
  swift_bridgeObjectRelease();
  *(void *)&v6[v13] = v19;
  *(void *)&v6[OBJC_IVAR____TtC19HealthMedicationsUI46PregnancyLactationInteractionCriticalAlertCell____lazy_storage___titleLabel] = 0;
  *(void *)&v6[OBJC_IVAR____TtC19HealthMedicationsUI46PregnancyLactationInteractionCriticalAlertCell____lazy_storage___subtitleLabel] = 0;
  *(void *)&v6[OBJC_IVAR____TtC19HealthMedicationsUI46PregnancyLactationInteractionCriticalAlertCell____lazy_storage___separatorView] = 0;
  *(void *)&v6[OBJC_IVAR____TtC19HealthMedicationsUI46PregnancyLactationInteractionCriticalAlertCell____lazy_storage___learnMoreLabel] = 0;

  v22.receiver = v6;
  v22.super_class = (Class)type metadata accessor for PregnancyLactationInteractionCriticalAlertCell();
  id v20 = objc_msgSendSuper2(&v22, sel_initWithCoder_, a1, 0xE000000000000000);

  return v20;
}

uint64_t sub_1C1FB353C()
{
  v5.receiver = v0;
  v5.super_class = (Class)type metadata accessor for PregnancyLactationInteractionCriticalAlertCell();
  objc_msgSendSuper2(&v5, sel_awakeFromNib);
  sub_1C1FB46C4();
  sub_1C1FB4AC8();
  sub_1C1FB5F9C(0, (unint64_t *)&qword_1EA2C3D80, (uint64_t (*)(uint64_t))sub_1C1F7C864, MEMORY[0x1E4FBBE00]);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1C214FCD0;
  uint64_t v2 = sub_1C2149C70();
  uint64_t v3 = MEMORY[0x1E4FB1138];
  *(void *)(v1 + 32) = v2;
  *(void *)(v1 + 40) = v3;
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1C1F7C8F0();
  sub_1C214B120();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  return swift_release();
}

void sub_1C1FB369C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a3 + 16;
  swift_beginAccess();
  uint64_t v4 = MEMORY[0x1C8754850](v3);
  if (v4)
  {
    objc_super v5 = (void *)v4;
    type metadata accessor for PregnancyLactationInteractionCriticalAlertCell();
    if ((sub_1C214AE10() & 1) == 0) {
      sub_1C1FB4AC8();
    }
  }
}

uint64_t sub_1C1FB3708()
{
  uint64_t v1 = v0;
  sub_1C1FB5F9C(0, &qword_1EBF0C620, MEMORY[0x1E4FB0F28], MEMORY[0x1E4FBB718]);
  uint64_t v3 = MEMORY[0x1F4188790](v2 - 8);
  objc_super v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x1F4188790](v3);
  uint64_t v8 = (char *)&v19 - v7;
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v19 - v9;
  uint64_t v11 = (void *)sub_1C2149950();
  uint64_t v12 = (objc_class *)type metadata accessor for PregnancyLactationInteractionCriticalAlertCell();
  v19.receiver = v1;
  v19.super_class = v12;
  objc_msgSendSuper2(&v19, sel__bridgedUpdateConfigurationUsingState_, v11);

  if (objc_msgSend(v1, sel_isHighlighted))
  {
    MEMORY[0x1C8752FE0]();
    uint64_t v13 = sub_1C21499D0();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48))(v10, 1, v13))
    {
      sub_1C1FB6040((uint64_t)v10, (uint64_t)v8);
      MEMORY[0x1C8752FF0](v8);
      uint64_t v14 = (uint64_t)v10;
      return sub_1C1FB60D4(v14);
    }
    sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C900);
    sub_1C214B170();
    sub_1C2149990();
    uint64_t v17 = v10;
  }
  else
  {
    MEMORY[0x1C8752FE0]();
    uint64_t v15 = sub_1C21499D0();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48))(v5, 1, v15))
    {
      sub_1C1FB6040((uint64_t)v5, (uint64_t)v8);
      MEMORY[0x1C8752FF0](v8);
      uint64_t v14 = (uint64_t)v5;
      return sub_1C1FB60D4(v14);
    }
    id v18 = objc_msgSend(self, sel_secondarySystemBackgroundColor);
    sub_1C2149990();
    uint64_t v17 = v5;
  }
  return MEMORY[0x1C8752FF0](v17);
}

id sub_1C1FB3A5C()
{
  uint64_t v1 = OBJC_IVAR____TtC19HealthMedicationsUI46PregnancyLactationInteractionCriticalAlertCell____lazy_storage___medmojiView;
  uint64_t v2 = *(void **)(v0
                + OBJC_IVAR____TtC19HealthMedicationsUI46PregnancyLactationInteractionCriticalAlertCell____lazy_storage___medmojiView);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC19HealthMedicationsUI46PregnancyLactationInteractionCriticalAlertCell____lazy_storage___medmojiView);
  }
  else
  {
    uint64_t v4 = v0;
    id v5 = objc_msgSend(objc_allocWithZone((Class)sub_1C2148EF0()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
    id v6 = (id)*MEMORY[0x1E4F39EA8];
    sub_1C214B0D0();

    objc_msgSend(v5, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    uint64_t v7 = *(void **)(v4 + v1);
    *(void *)(v4 + v1) = v5;
    id v3 = v5;

    uint64_t v2 = 0;
  }
  id v8 = v2;
  return v3;
}

id sub_1C1FB3B20()
{
  return sub_1C1FB43A0(&OBJC_IVAR____TtC19HealthMedicationsUI46PregnancyLactationInteractionCriticalAlertCell____lazy_storage___dismissLabel, (uint64_t (*)(void))sub_1C1FB3B40);
}

id sub_1C1FB3B40()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
  id v1 = objc_msgSend(self, sel_tertiaryLabelColor);
  objc_msgSend(v0, sel_setTextColor_, v1);

  objc_msgSend(v0, sel_setTextAlignment_, 1);
  uint64_t v14 = sub_1C214A5F0();
  uint64_t v15 = v2;
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  id v3 = v0;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  uint64_t v4 = (void *)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setAccessibilityIdentifier_, v4, v14, v15);

  objc_msgSend(v3, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v3, sel_setAdjustsFontSizeToFitWidth_, 1);
  LODWORD(v5) = 1148846080;
  objc_msgSend(v3, sel_setContentCompressionResistancePriority_forAxis_, 0, v5);
  LODWORD(v6) = 1148846080;
  objc_msgSend(v3, sel_setContentCompressionResistancePriority_forAxis_, 1, v6);
  LODWORD(v7) = 1148846080;
  objc_msgSend(v3, sel_setContentHuggingPriority_forAxis_, 0, v7);
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8E0);
  id v8 = (void *)sub_1C214B0A0();
  objc_msgSend(v3, sel_setFont_, v8);
  sub_1C1F12718(0, &qword_1EA2C4670);
  id result = (id)MEMORY[0x1C8753340](v8);
  if (result)
  {
    uint64_t v10 = result;
    id v11 = objc_msgSend(result, sel_imageWithRenderingMode_, 2);
    id v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB0870]), sel_init);
    objc_msgSend(v12, sel_setImage_, v11);
    sub_1C1F12718(0, &qword_1EA2C4678);
    id v13 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_attributedStringWithAttachment_, v12);
    objc_msgSend(v3, sel_setAttributedText_, v13);

    return v3;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1C1FB3E50()
{
  uint64_t v1 = OBJC_IVAR____TtC19HealthMedicationsUI46PregnancyLactationInteractionCriticalAlertCell____lazy_storage___titleLabel;
  uint64_t v2 = *(void **)(v0
                + OBJC_IVAR____TtC19HealthMedicationsUI46PregnancyLactationInteractionCriticalAlertCell____lazy_storage___titleLabel);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC19HealthMedicationsUI46PregnancyLactationInteractionCriticalAlertCell____lazy_storage___titleLabel);
  }
  else
  {
    uint64_t v4 = v0;
    id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
    sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8E0);
    double v6 = (void *)sub_1C214B0A0();
    objc_msgSend(v5, sel_setFont_, v6);

    uint64_t v14 = sub_1C214A5F0();
    uint64_t v15 = v7;
    swift_bridgeObjectRetain();
    sub_1C214A6C0();
    id v8 = v5;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_1C214A6C0();
    swift_bridgeObjectRelease();
    uint64_t v9 = (void *)sub_1C214A5B0();
    swift_bridgeObjectRelease();
    objc_msgSend(v8, sel_setAccessibilityIdentifier_, v9, v14, v15);

    id v10 = objc_msgSend(self, sel_labelColor);
    objc_msgSend(v8, sel_setTextColor_, v10);

    objc_msgSend(v8, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    objc_msgSend(v8, sel_setNumberOfLines_, 0);
    objc_msgSend(v8, sel_setAdjustsFontForContentSizeCategory_, 1);
    id v11 = *(void **)(v4 + v1);
    *(void *)(v4 + v1) = v8;
    id v3 = v8;

    uint64_t v2 = 0;
  }
  id v12 = v2;
  return v3;
}

id sub_1C1FB407C()
{
  uint64_t v1 = OBJC_IVAR____TtC19HealthMedicationsUI46PregnancyLactationInteractionCriticalAlertCell____lazy_storage___subtitleLabel;
  uint64_t v2 = *(void **)(v0
                + OBJC_IVAR____TtC19HealthMedicationsUI46PregnancyLactationInteractionCriticalAlertCell____lazy_storage___subtitleLabel);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC19HealthMedicationsUI46PregnancyLactationInteractionCriticalAlertCell____lazy_storage___subtitleLabel);
  }
  else
  {
    uint64_t v4 = v0;
    id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
    sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8E0);
    double v6 = (void *)sub_1C214B0A0();
    objc_msgSend(v5, sel_setFont_, v6);

    uint64_t v14 = sub_1C214A5F0();
    uint64_t v15 = v7;
    swift_bridgeObjectRetain();
    sub_1C214A6C0();
    id v8 = v5;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_1C214A6C0();
    swift_bridgeObjectRelease();
    uint64_t v9 = (void *)sub_1C214A5B0();
    swift_bridgeObjectRelease();
    objc_msgSend(v8, sel_setAccessibilityIdentifier_, v9, v14, v15);

    id v10 = objc_msgSend(self, sel_labelColor);
    objc_msgSend(v8, sel_setTextColor_, v10);

    objc_msgSend(v8, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    objc_msgSend(v8, sel_setNumberOfLines_, 3);
    objc_msgSend(v8, sel_setAdjustsFontForContentSizeCategory_, 1);
    id v11 = *(void **)(v4 + v1);
    *(void *)(v4 + v1) = v8;
    id v3 = v8;

    uint64_t v2 = 0;
  }
  id v12 = v2;
  return v3;
}

id sub_1C1FB42A4()
{
  uint64_t v1 = OBJC_IVAR____TtC19HealthMedicationsUI46PregnancyLactationInteractionCriticalAlertCell____lazy_storage___separatorView;
  uint64_t v2 = *(void **)(v0
                + OBJC_IVAR____TtC19HealthMedicationsUI46PregnancyLactationInteractionCriticalAlertCell____lazy_storage___separatorView);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC19HealthMedicationsUI46PregnancyLactationInteractionCriticalAlertCell____lazy_storage___separatorView);
  }
  else
  {
    id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F67C08]), sel_init);
    HKUIOnePixel();
    objc_msgSend(v4, sel_setSeparatorThickness_);
    id v5 = objc_msgSend(self, sel_separatorColor);
    objc_msgSend(v4, sel_setColor_, v5);

    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    double v6 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v7 = v2;
  return v3;
}

id sub_1C1FB4380()
{
  return sub_1C1FB43A0(&OBJC_IVAR____TtC19HealthMedicationsUI46PregnancyLactationInteractionCriticalAlertCell____lazy_storage___learnMoreLabel, (uint64_t (*)(void))sub_1C1FB4400);
}

id sub_1C1FB43A0(uint64_t *a1, uint64_t (*a2)(void))
{
  uint64_t v3 = *a1;
  id v4 = *(void **)(v2 + *a1);
  if (v4)
  {
    id v5 = *(id *)(v2 + *a1);
  }
  else
  {
    double v6 = (void *)a2();
    id v7 = *(void **)(v2 + v3);
    *(void *)(v2 + v3) = v6;
    id v5 = v6;

    id v4 = 0;
  }
  id v8 = v4;
  return v5;
}

id sub_1C1FB4400()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
  uint64_t v1 = qword_1EBF0CA00;
  id v2 = v0;
  if (v1 != -1) {
    swift_once();
  }
  id v3 = (id)qword_1EBF0CA18;
  swift_bridgeObjectRetain();
  sub_1C2147730();
  swift_bridgeObjectRelease();

  id v4 = (void *)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setText_, v4, 0xE000000000000000);

  sub_1C214A5F0();
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  id v5 = v2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  double v6 = (void *)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  objc_msgSend(v5, sel_setAccessibilityIdentifier_, v6);

  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8E0);
  id v7 = (void *)sub_1C214B0A0();
  objc_msgSend(v5, sel_setFont_, v7);

  id v8 = objc_msgSend(self, sel_systemBlueColor);
  objc_msgSend(v5, sel_setTextColor_, v8);

  objc_msgSend(v5, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v5, sel_setAdjustsFontForContentSizeCategory_, 1);

  return v5;
}

uint64_t sub_1C1FB46C4()
{
  sub_1C1FB5F9C(0, &qword_1EBF0C620, MEMORY[0x1E4FB0F28], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v1 - 8);
  id v3 = (char *)&v33 - v2;
  uint64_t v4 = sub_1C21499D0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  id v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v38 = v7;
  sub_1C21499A0();
  id v8 = objc_msgSend(self, sel_secondarySystemBackgroundColor);
  sub_1C2149990();
  uint64_t v36 = v4;
  uint64_t v37 = v5;
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v3, v7, v4);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v3, 0, 1, v4);
  MEMORY[0x1C8752FF0](v3);
  id v9 = sub_1C1FB3A5C();
  id v10 = sub_1C1FB3B20();
  id v11 = *(void **)&v0[OBJC_IVAR____TtC19HealthMedicationsUI46PregnancyLactationInteractionCriticalAlertCell_lactationTitleButton];
  id v12 = *(id *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI46PregnancyLactationInteractionCriticalAlertCell_pregnancyTitleButton];
  id v13 = v11;
  id v14 = sub_1C1FB3E50();
  id v15 = sub_1C1FB407C();
  id v33 = sub_1C1FB42A4();
  id v35 = sub_1C1FB4380();
  id v16 = v9;
  id v34 = v16;
  id v17 = objc_msgSend(v0, sel_contentView);
  objc_msgSend(v17, sel_addSubview_, v16);

  id v18 = v10;
  id v19 = objc_msgSend(v0, sel_contentView);
  objc_msgSend(v19, sel_addSubview_, v18);

  id v20 = v12;
  id v21 = objc_msgSend(v0, sel_contentView);
  objc_msgSend(v21, sel_addSubview_, v20);

  id v22 = v13;
  id v23 = objc_msgSend(v0, sel_contentView);
  objc_msgSend(v23, sel_addSubview_, v22);

  id v24 = v14;
  id v25 = objc_msgSend(v0, sel_contentView);
  objc_msgSend(v25, sel_addSubview_, v24);

  id v26 = v15;
  id v27 = objc_msgSend(v0, sel_contentView);
  objc_msgSend(v27, sel_addSubview_, v26);

  id v28 = v33;
  id v29 = objc_msgSend(v0, sel_contentView);
  objc_msgSend(v29, sel_addSubview_, v28);

  id v30 = v35;
  id v31 = objc_msgSend(v0, sel_contentView);
  objc_msgSend(v31, sel_addSubview_, v30);

  return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v38, v36);
}

void sub_1C1FB4AC8()
{
  uint64_t v1 = v0;
  uint64_t v2 = self;
  uint64_t v128 = OBJC_IVAR____TtC19HealthMedicationsUI46PregnancyLactationInteractionCriticalAlertCell_activeConstraints;
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C810);
  swift_bridgeObjectRetain();
  id v3 = (void *)sub_1C214A770();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_deactivateConstraints_, v3);

  sub_1C1F0ED28();
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1C2153830;
  id v5 = sub_1C1FB3A5C();
  id v6 = objc_msgSend(v5, sel_leadingAnchor);

  id v7 = objc_msgSend(v1, sel_contentView);
  id v8 = objc_msgSend(v7, sel_leadingAnchor);

  if (qword_1EA2C2680 != -1) {
    swift_once();
  }
  id v9 = objc_msgSend(v6, sel_constraintEqualToAnchor_constant_, v8, *((double *)&xmmword_1EA2C7D40 + 1));

  *(void *)(v4 + 32) = v9;
  id v10 = sub_1C1FB3A5C();
  id v11 = objc_msgSend(v10, sel_topAnchor);

  uint64_t v12 = OBJC_IVAR____TtC19HealthMedicationsUI46PregnancyLactationInteractionCriticalAlertCell_pregnancyTitleButton;
  id v13 = objc_msgSend(*(id *)((char *)v1+ OBJC_IVAR____TtC19HealthMedicationsUI46PregnancyLactationInteractionCriticalAlertCell_pregnancyTitleButton), sel_bottomAnchor);
  id v14 = objc_msgSend(v11, sel_constraintEqualToAnchor_constant_, v13, 12.0);

  *(void *)(v4 + 40) = v14;
  id v15 = sub_1C1FB3A5C();
  id v16 = objc_msgSend(v15, sel_topAnchor);

  char v129 = (char *)v12;
  id v17 = objc_msgSend(*(id *)((char *)v1 + v12), sel_bottomAnchor);
  id v18 = objc_msgSend(v16, sel_constraintEqualToAnchor_constant_, v17, 12.0);

  *(void *)(v4 + 48) = v18;
  id v19 = sub_1C1FB3A5C();
  id v20 = objc_msgSend(v19, sel_widthAnchor);

  id v21 = objc_msgSend(v20, sel_constraintEqualToConstant_, 36.0);
  *(void *)(v4 + 56) = v21;
  id v22 = sub_1C1FB3A5C();
  id v23 = objc_msgSend(v22, sel_heightAnchor);

  id v24 = objc_msgSend(v23, sel_constraintEqualToConstant_, 36.0);
  *(void *)(v4 + 64) = v24;
  id v25 = sub_1C1FB3B20();
  id v26 = objc_msgSend(v25, sel_trailingAnchor);

  id v27 = objc_msgSend(v1, sel_contentView);
  id v28 = objc_msgSend(v27, sel_trailingAnchor);

  if (qword_1EA2C26D8 != -1) {
    swift_once();
  }
  id v29 = objc_msgSend(v26, (SEL)&selRef_dealloc + 7, v28, -*(double *)&qword_1EA2C7F58);

  *(void *)(v4 + 72) = v29;
  id v30 = sub_1C1FB3B20();
  id v31 = objc_msgSend(v30, sel_topAnchor);

  id v32 = objc_msgSend(v1, sel_contentView);
  id v33 = objc_msgSend(v32, sel_topAnchor);

  id v34 = objc_msgSend(v31, (SEL)&selRef_dealloc + 7, v33, *(double *)&qword_1EA2C7D58);
  *(void *)(v4 + 80) = v34;
  id v35 = objc_msgSend(*(id *)((char *)v1 + v12), sel_leadingAnchor);
  id v36 = objc_msgSend(v1, sel_contentView);
  id v37 = objc_msgSend(v36, sel_leadingAnchor);

  id v38 = objc_msgSend(v35, (SEL)&selRef_dealloc + 7, v37, 16.0);
  *(void *)(v4 + 88) = v38;
  id v39 = objc_msgSend(*(id *)((char *)v1 + v12), sel_trailingAnchor);
  id v40 = objc_msgSend(v1, sel_contentView);
  id v41 = objc_msgSend(v40, sel_trailingAnchor);

  id v42 = objc_msgSend(v39, sel_constraintLessThanOrEqualToAnchor_constant_, v41, *(double *)&qword_1EA2C7D58);
  *(void *)(v4 + 96) = v42;
  id v43 = objc_msgSend(*(id *)((char *)v1 + v12), sel_topAnchor);
  id v44 = objc_msgSend(v1, sel_contentView);
  id v45 = objc_msgSend(v44, sel_topAnchor);

  id v46 = objc_msgSend(v43, sel_constraintEqualToAnchor_constant_, v45, *(double *)&xmmword_1EA2C7D40);
  *(void *)(v4 + 104) = v46;
  uint64_t v47 = OBJC_IVAR____TtC19HealthMedicationsUI46PregnancyLactationInteractionCriticalAlertCell_lactationTitleButton;
  id v48 = objc_msgSend(*(id *)((char *)v1+ OBJC_IVAR____TtC19HealthMedicationsUI46PregnancyLactationInteractionCriticalAlertCell_lactationTitleButton), sel_leadingAnchor);
  id v49 = objc_msgSend(v1, sel_contentView);
  id v50 = objc_msgSend(v49, sel_leadingAnchor);

  id v51 = objc_msgSend(v48, sel_constraintEqualToAnchor_constant_, v50, 16.0);
  *(void *)(v4 + 112) = v51;
  id v52 = objc_msgSend(*(id *)((char *)v1 + v47), sel_trailingAnchor);
  id v53 = objc_msgSend(v1, sel_contentView);
  id v54 = objc_msgSend(v53, sel_trailingAnchor);

  id v55 = objc_msgSend(v52, sel_constraintLessThanOrEqualToAnchor_constant_, v54, *(double *)&qword_1EA2C7D58);
  *(void *)(v4 + 120) = v55;
  id v56 = objc_msgSend(*(id *)((char *)v1 + v47), sel_topAnchor);
  id v57 = objc_msgSend(v1, sel_contentView);
  id v58 = objc_msgSend(v57, sel_topAnchor);

  id v59 = objc_msgSend(v56, sel_constraintEqualToAnchor_constant_, v58, *(double *)&xmmword_1EA2C7D40);
  *(void *)(v4 + 128) = v59;
  id v60 = sub_1C1FB3E50();
  id v61 = objc_msgSend(v60, sel_leadingAnchor);

  id v62 = sub_1C1FB3A5C();
  id v63 = objc_msgSend(v62, sel_trailingAnchor);

  id v64 = objc_msgSend(v61, sel_constraintEqualToAnchor_constant_, v63, *((double *)&xmmword_1EA2C7D40 + 1));
  *(void *)(v4 + 136) = v64;
  id v65 = sub_1C1FB3E50();
  id v66 = objc_msgSend(v65, sel_trailingAnchor);

  id v67 = objc_msgSend(v1, sel_contentView);
  id v68 = objc_msgSend(v67, sel_trailingAnchor);

  id v69 = objc_msgSend(v66, sel_constraintEqualToAnchor_constant_, v68, -*(double *)&qword_1EA2C7D58);
  *(void *)(v4 + 144) = v69;
  id v70 = sub_1C1FB3E50();
  id v71 = objc_msgSend(v70, sel_topAnchor);

  id v72 = objc_msgSend(*(id *)&v129[(void)v1], sel_bottomAnchor);
  id v73 = objc_msgSend(v71, (SEL)&selRef_dealloc + 7, v72, 12.0);

  *(void *)(v4 + 152) = v73;
  id v74 = sub_1C1FB3E50();
  id v75 = objc_msgSend(v74, sel_topAnchor);

  id v76 = objc_msgSend(*(id *)((char *)v1 + v47), sel_bottomAnchor);
  id v77 = objc_msgSend(v75, (SEL)&selRef_dealloc + 7, v76, 12.0);

  *(void *)(v4 + 160) = v77;
  id v78 = sub_1C1FB407C();
  id v79 = objc_msgSend(v78, sel_leadingAnchor);

  id v80 = sub_1C1FB3E50();
  id v81 = objc_msgSend(v80, sel_leadingAnchor);

  id v82 = objc_msgSend(v79, sel_constraintEqualToAnchor_, v81);
  *(void *)(v4 + 168) = v82;
  id v83 = sub_1C1FB407C();
  id v84 = objc_msgSend(v83, sel_trailingAnchor);

  id v85 = objc_msgSend(v1, sel_contentView);
  id v86 = objc_msgSend(v85, sel_trailingAnchor);

  id v87 = objc_msgSend(v84, (SEL)&selRef_dealloc + 7, v86, -*(double *)&qword_1EA2C7D58);
  *(void *)(v4 + 176) = v87;
  id v88 = sub_1C1FB407C();
  id v89 = objc_msgSend(v88, sel_topAnchor);

  id v90 = sub_1C1FB3E50();
  id v91 = objc_msgSend(v90, sel_bottomAnchor);

  id v92 = objc_msgSend(v89, (SEL)&selRef_dealloc + 7, v91, 6.0);
  *(void *)(v4 + 184) = v92;
  id v93 = sub_1C1FB42A4();
  id v94 = objc_msgSend(v93, sel_leadingAnchor);

  id v95 = sub_1C1FB407C();
  id v96 = objc_msgSend(v95, sel_leadingAnchor);

  id v97 = objc_msgSend(v94, sel_constraintEqualToAnchor_, v96);
  *(void *)(v4 + 192) = v97;
  id v98 = sub_1C1FB42A4();
  id v99 = objc_msgSend(v98, sel_trailingAnchor);

  id v100 = objc_msgSend(v1, sel_contentView);
  id v101 = objc_msgSend(v100, sel_trailingAnchor);

  id v102 = objc_msgSend(v99, sel_constraintEqualToAnchor_, v101);
  *(void *)(v4 + 200) = v102;
  id v103 = sub_1C1FB42A4();
  id v104 = objc_msgSend(v103, sel_topAnchor);

  id v105 = sub_1C1FB407C();
  id v106 = objc_msgSend(v105, sel_bottomAnchor);

  id v107 = objc_msgSend(v104, (SEL)&selRef_dealloc + 7, v106, 12.0);
  *(void *)(v4 + 208) = v107;
  id v108 = sub_1C1FB4380();
  id v109 = objc_msgSend(v108, sel_leadingAnchor);

  id v110 = sub_1C1FB407C();
  id v111 = objc_msgSend(v110, sel_leadingAnchor);

  id v112 = objc_msgSend(v109, sel_constraintEqualToAnchor_, v111);
  *(void *)(v4 + 216) = v112;
  id v113 = sub_1C1FB4380();
  id v114 = objc_msgSend(v113, sel_trailingAnchor);

  id v115 = objc_msgSend(v1, sel_contentView);
  id v116 = objc_msgSend(v115, sel_trailingAnchor);

  id v117 = objc_msgSend(v114, sel_constraintLessThanOrEqualToAnchor_, v116);
  *(void *)(v4 + 224) = v117;
  id v118 = sub_1C1FB4380();
  id v119 = objc_msgSend(v118, sel_centerYAnchor);

  id v120 = sub_1C1FB42A4();
  id v121 = objc_msgSend(v120, sel_bottomAnchor);

  id v122 = objc_msgSend(v119, sel_constraintEqualToAnchor_constant_, v121, 22.0);
  *(void *)(v4 + 232) = v122;
  id v123 = objc_msgSend(v1, sel_contentView);
  id v124 = objc_msgSend(v123, sel_bottomAnchor);

  id v125 = sub_1C1FB42A4();
  id v126 = objc_msgSend(v125, sel_bottomAnchor);

  id v127 = objc_msgSend(v124, sel_constraintEqualToAnchor_constant_, v126, 44.0);
  *(void *)(v4 + 240) = v127;
  sub_1C214A7A0();
  *(void *)((char *)v1 + v128) = v4;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  id v130 = (id)sub_1C214A770();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_activateConstraints_, v130);
}

void sub_1C1FB597C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1C21497F0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  id v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1FB5F9C(0, (unint64_t *)&qword_1EBF0B690, MEMORY[0x1E4F66C80], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v7 = (uint64_t)&v1[OBJC_IVAR____TtC19HealthMedicationsUI46PregnancyLactationInteractionCriticalAlertCell_item];
  swift_beginAccess();
  sub_1C1F2116C(v7, (uint64_t)v35);
  if (v35[3])
  {
    sub_1C1F23804(0, (unint64_t *)&qword_1EBF0C2F0);
    type metadata accessor for PregnancyLactationInteractionCriticalAlertItem();
    if (swift_dynamicCast())
    {
      uint64_t v8 = v34;
      id v9 = sub_1C1FB3A5C();
      id v10 = objc_msgSend(*(id *)(v8 + 16), sel_medication);
      _sSo29HKMedicationUserDomainConceptC19HealthMedicationsUIE7medmoji0eF10Experience29MedicationVisualizationConfigVSgvg_0();

      sub_1C2148ED0();
      id v11 = sub_1C1FB3E50();
      id v12 = objc_msgSend(*(id *)(v8 + 16), sel_medication);
      v35[0] = v12;
      sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8C0);
      sub_1C21494A0();

      id v13 = (void *)sub_1C214A5B0();
      swift_bridgeObjectRelease();
      objc_msgSend(v11, sel_setText_, v13);

      id v14 = sub_1C1FB407C();
      sub_1C1FB2C20();
      if (!v15)
      {
        if (qword_1EA2C2710 != -1) {
          swift_once();
        }
        id v23 = (id)qword_1EA2C5D90;
        swift_bridgeObjectRetain();
        sub_1C2147730();
        swift_bridgeObjectRelease();
      }
      id v24 = (void *)sub_1C214A5B0();
      swift_bridgeObjectRelease();
      objc_msgSend(v14, sel_setText_, v24);

      id v25 = sub_1C1FB407C();
      id v26 = *(id *)(v8 + 16);
      sub_1C1FB2C20();

      swift_bridgeObjectRelease();
      sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8E0);
      id v27 = (void *)sub_1C214B0A0();
      objc_msgSend(v25, sel_setFont_, v27);

      id v28 = *(void **)(v8 + 16);
      id v29 = *(id *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI46PregnancyLactationInteractionCriticalAlertCell_pregnancyTitleButton];
      objc_msgSend(v29, sel_setHidden_, objc_msgSend(v28, sel_interactionType) == (id)2);

      id v30 = *(void **)&v1[OBJC_IVAR____TtC19HealthMedicationsUI46PregnancyLactationInteractionCriticalAlertCell_lactationTitleButton];
      id v31 = *(void **)(v8 + 16);
      id v32 = v30;
      objc_msgSend(v32, sel_setHidden_, objc_msgSend(v31, sel_interactionType) == (id)1);
      swift_release();

      return;
    }
  }
  else
  {
    sub_1C1F374E4((uint64_t)v35);
  }
  if (HKShowSensitiveLogItems())
  {
    sub_1C21497A0();
    id v16 = v1;
    id v17 = sub_1C21497E0();
    os_log_type_t v18 = sub_1C214ABD0();
    if (os_log_type_enabled(v17, v18))
    {
      id v19 = (uint8_t *)swift_slowAlloc();
      uint64_t v20 = swift_slowAlloc();
      *(_DWORD *)id v19 = 136315138;
      id v33 = v19 + 4;
      uint64_t v34 = v20;
      sub_1C1F2116C(v7, (uint64_t)v35);
      sub_1C1F24488();
      uint64_t v21 = sub_1C214A630();
      v35[0] = sub_1C1F6FD54(v21, v22, &v34);
      sub_1C214B530();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C1F0B000, v17, v18, "Incorrect view model for PregnancyLactationInteractionCriticalAlertItem: %s", v19, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C8754730](v20, -1, -1);
      MEMORY[0x1C8754730](v19, -1, -1);
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
}