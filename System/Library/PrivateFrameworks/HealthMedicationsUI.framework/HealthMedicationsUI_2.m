void sub_1C206CE5C(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  void *v5;
  id v6;
  uint64_t vars8;

  v2 = qword_1EA2C6310;
  v3 = *(void **)(v1 + qword_1EA2C6310);
  *(void *)(v1 + qword_1EA2C6310) = a1;
  v6 = a1;
  if (v3) {
    objc_msgSend(v3, sel_unregisterObserver_, v1);
  }
  v4 = *(void **)(v1 + v2);
  if (v4)
  {
    objc_msgSend(v4, sel_registerObserver_, v1);
    v5 = *(void **)(v1 + v2);
    if (v5) {
      objc_msgSend(v5, sel_fetchSources);
    }
  }
}

uint64_t sub_1C206CEFC(void *a1, void *a2, void *a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_1C2147B20();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  v11 = (char *)v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(v4 + qword_1EA2C6310) = 0;
  *(void *)(v4 + qword_1EA2C6318) = MEMORY[0x1E4FBC870];
  swift_unknownObjectWeakInit();
  *(void *)(v4 + qword_1EA2C6300) = a1;
  *(void *)(v4 + qword_1EA2C6308) = a2;
  swift_unknownObjectWeakAssign();
  v16[0] = 0;
  v16[1] = 0xE000000000000000;
  id v12 = a1;
  id v13 = a2;
  sub_1C214B7C0();
  swift_bridgeObjectRelease();
  strcpy((char *)v16, "MutableArray<");
  HIWORD(v16[1]) = -4864;
  sub_1C2147B10();
  sub_1C2147AD0();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  sub_1C214A6C0();
  uint64_t v14 = sub_1C2148590();
  swift_retain();
  sub_1C206D234();
  swift_release();

  return v14;
}

uint64_t sub_1C206D0F8()
{
  swift_bridgeObjectRelease();

  return swift_unknownObjectWeakDestroy();
}

uint64_t sub_1C206D168()
{
  swift_beginAccess();
  uint64_t v0 = swift_bridgeObjectRetain();
  sub_1C206CBA0(v0);
  swift_bridgeObjectRelease();
  uint64_t v1 = sub_1C2148610();

  swift_bridgeObjectRelease();
  swift_unknownObjectWeakDestroy();
  return swift_deallocClassInstance();
}

uint64_t sub_1C206D234()
{
  uint64_t v1 = v0;
  sub_1C206F0A8(0, &qword_1EBF0C7E8, MEMORY[0x1E4FBCC28], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v2 - 8);
  v40 = (char *)&v33 - v3;
  sub_1C206F10C();
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C206F268();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v35 = v9;
  uint64_t v36 = v10;
  MEMORY[0x1F4188790](v9);
  id v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C206F3E8();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v38 = v13;
  uint64_t v39 = v14;
  MEMORY[0x1F4188790](v13);
  v34 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C206F4A4();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v41 = v16;
  uint64_t v42 = v17;
  MEMORY[0x1F4188790](v16);
  v37 = (char *)&v33 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = *(void **)(v1 + qword_1EA2C6300);
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = v19;
  *(void *)(v20 + 24) = v1;
  v21 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))MEMORY[0x1E4F1AC28];
  sub_1C206F31C(0, &qword_1EA2C63C0, MEMORY[0x1E4F1AC28]);
  sub_1C206F3A4(&qword_1EA2C63D0, &qword_1EA2C63C0, v21);
  id v22 = v19;
  swift_retain();
  sub_1C2149F20();
  sub_1C206F5F0(&qword_1EA2C6418, (void (*)(uint64_t))sub_1C206F10C);
  v23 = (void *)sub_1C2149FC0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  id v43 = v23;
  uint64_t v44 = MEMORY[0x1E4FBC870];
  v24 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))MEMORY[0x1E4F1AAE0];
  sub_1C206F31C(0, &qword_1EA2C63E0, MEMORY[0x1E4F1AAE0]);
  sub_1C206F3A4(&qword_1EA2C63E8, &qword_1EA2C63E0, v24);
  sub_1C2149FE0();
  swift_release();
  sub_1C1F12718(0, &qword_1EA2C63F8);
  sub_1C206F5F0(&qword_1EA2C6400, (void (*)(uint64_t))sub_1C206F268);
  swift_retain();
  v26 = v34;
  uint64_t v25 = v35;
  sub_1C214A020();
  swift_release();
  (*(void (**)(char *, uint64_t))(v36 + 8))(v12, v25);
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0CB10);
  id v43 = (id)sub_1C214AD80();
  uint64_t v27 = sub_1C214AD20();
  uint64_t v28 = (uint64_t)v40;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v40, 1, 1, v27);
  sub_1C206F5F0(&qword_1EA2C6410, (void (*)(uint64_t))sub_1C206F3E8);
  sub_1C1F2F9D0((unint64_t *)&qword_1EBF0C7F0, (unint64_t *)&qword_1EBF0CB10);
  v30 = v37;
  uint64_t v29 = v38;
  sub_1C214A0A0();
  sub_1C1F441C8(v28);

  (*(void (**)(char *, uint64_t))(v39 + 8))(v26, v29);
  sub_1C206F5F0(&qword_1EA2C6420, (void (*)(uint64_t))sub_1C206F4A4);
  swift_retain();
  uint64_t v31 = v41;
  sub_1C214A0F0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v42 + 8))(v30, v31);
  swift_beginAccess();
  sub_1C2149E20();
  swift_endAccess();
  return swift_release();
}

void sub_1C206D90C(uint64_t a1@<X1>, void *a2@<X8>)
{
  id v3 = *(id *)(a1 + qword_1EA2C6308);
  uint64_t v4 = swift_bridgeObjectRetain();
  sub_1C1F7F9EC(v4);
  swift_bridgeObjectRelease();
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0CB10);
  uint64_t v5 = (void *)sub_1C214AD80();
  id v6 = objc_allocWithZone(MEMORY[0x1E4F67C50]);
  sub_1C1F12718(0, &qword_1EA2C3DB8);
  uint64_t v7 = (void *)sub_1C214A770();
  swift_release();
  id v8 = objc_msgSend(v6, sel_initWithHealthStore_sources_queue_, v3, v7, v5);

  *a2 = v8;
}

uint64_t sub_1C206DA00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v7 = sub_1C2147B20();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C206F0A8(0, (unint64_t *)&qword_1EA2C2FE8, MEMORY[0x1E4F664F8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)v28 - v12;
  if (sub_1C214A5F0() == a1 && v14 == a2)
  {
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  char v16 = sub_1C214BA80();
  swift_bridgeObjectRelease();
  if (v16)
  {
LABEL_13:
    if (qword_1EBF0CA00 != -1) {
      swift_once();
    }
    id v21 = (id)qword_1EBF0CA18;
    swift_bridgeObjectRetain();
    sub_1C2147730();
    swift_bridgeObjectRelease();

    uint64_t v22 = sub_1C2148770();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v13, 1, 1, v22);
    a3[3] = sub_1C2148790();
    a3[4] = sub_1C206F5F0((unint64_t *)&qword_1EA2C3000, MEMORY[0x1E4F66500]);
    __swift_allocate_boxed_opaque_existential_1(a3);
    return sub_1C2148780();
  }
  if (sub_1C214A5F0() == a1 && v17 == a2)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v19 = sub_1C214BA80();
    swift_bridgeObjectRelease();
    if ((v19 & 1) == 0)
    {
      a3[3] = sub_1C2148220();
      a3[4] = sub_1C206F5F0(&qword_1EA2C2D28, MEMORY[0x1E4F66330]);
      __swift_allocate_boxed_opaque_existential_1(a3);
      return sub_1C2148210();
    }
  }
  if (qword_1EBF0CA00 != -1) {
    swift_once();
  }
  id v23 = (id)qword_1EBF0CA18;
  swift_bridgeObjectRetain();
  sub_1C2147730();
  swift_bridgeObjectRelease();

  sub_1C1F5FE64(0, qword_1EBF0B8A0, (unint64_t *)&qword_1EBF0C9F0);
  uint64_t v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_1C214FCD0;
  v28[0] = *(void *)(v3 + qword_1EA2C6300);
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8C0);
  uint64_t v25 = sub_1C2149490();
  uint64_t v27 = v26;
  *(void *)(v24 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v24 + 64) = sub_1C1F31298();
  *(void *)(v24 + 32) = v25;
  *(void *)(v24 + 40) = v27;
  sub_1C214A600();
  swift_bridgeObjectRelease();
  v28[0] = 0x74497265746F6F46;
  v28[1] = 0xEB000000005F6D65;
  sub_1C2147B10();
  sub_1C2147AD0();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  a3[3] = sub_1C2148960();
  a3[4] = sub_1C206F5F0(&qword_1EA2C2D38, MEMORY[0x1E4F665E8]);
  __swift_allocate_boxed_opaque_existential_1(a3);
  return sub_1C2148950();
}

uint64_t sub_1C206DFBC@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = a2;
  sub_1C206F31C(0, &qword_1EA2C63C0, MEMORY[0x1E4F1AC28]);
  swift_allocObject();
  id v7 = a1;
  swift_retain();
  uint64_t result = sub_1C2149F10();
  *a3 = result;
  return result;
}

void sub_1C206E074(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a1;
  *(void *)(v8 + 24) = a2;
  swift_retain();
  id v9 = objc_msgSend(a3, sel_semanticIdentifier);
  id v10 = objc_msgSend(v9, sel_stringValue);

  if (!v10)
  {
    sub_1C214A5F0();
    id v10 = (id)sub_1C214A5B0();
    swift_bridgeObjectRelease();
  }
  id v11 = objc_msgSend(self, sel_predicateForMedicationDoseEventWithMedicationIdentifier_, v10);

  id v12 = objc_msgSend(self, sel_medicationDoseEventType);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = sub_1C1F30CF8;
  *(void *)(v13 + 24) = v8;
  id v14 = objc_allocWithZone(MEMORY[0x1E4F2B570]);
  v17[4] = sub_1C206F6BC;
  v17[5] = v13;
  v17[0] = MEMORY[0x1E4F143A8];
  v17[1] = 1107296256;
  v17[2] = sub_1C206EB28;
  v17[3] = &block_descriptor_22;
  uint64_t v15 = _Block_copy(v17);
  id v16 = objc_msgSend(v14, sel_initWithSampleType_samplePredicate_completionHandler_, v12, v11, v15);

  _Block_release(v15);
  swift_release();
  objc_msgSend(*(id *)(a4 + qword_1EA2C6308), sel_executeQuery_, v16);
}

void sub_1C206E27C(int a1, void *a2, id a3, void (*a4)(id, uint64_t))
{
  if (a3)
  {
    id v6 = a3;
    a4(a3, 1);
  }
  else
  {
    if (a2) {
      id v7 = a2;
    }
    else {
      id v7 = (void *)MEMORY[0x1E4FBC870];
    }
    a4(v7, 0);
  }
}

void sub_1C206E30C()
{
}

uint64_t sub_1C206E33C()
{
  return type metadata accessor for MedicationSourceListDataSource();
}

uint64_t sub_1C206E344()
{
  uint64_t v0 = sub_1C2148710();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = MEMORY[0x1F4188790](v0);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v2);
  id v6 = (char *)&v10 - v5;
  sub_1C2148660();
  sub_1C2148650();
  id v7 = *(void (**)(char *, uint64_t))(v1 + 8);
  v7(v6, v0);
  uint64_t v8 = sub_1C2148700();
  v7(v4, v0);
  return v8;
}

uint64_t sub_1C206E460()
{
  return sub_1C214ACD0();
}

uint64_t sub_1C206E4E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1C206DA00(a1, a2, a3);
}

uint64_t sub_1C206E504()
{
  return sub_1C2148B80();
}

uint64_t sub_1C206E560(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1C2147B20();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  id v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = objc_msgSend(a1, sel_sources);
  if (v8)
  {
    id v9 = v8;
    id v10 = objc_msgSend(v8, sel_allSources);

    sub_1C1F12718(0, &qword_1EA2C63A0);
    sub_1C1F2F9D0(&qword_1EA2C63A8, &qword_1EA2C63A0);
    uint64_t v11 = sub_1C214AA60();

    swift_retain();
    unint64_t v12 = sub_1C206EC20(v11, v2);
    swift_bridgeObjectRelease();
    swift_release();
    if (v12 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v14 = sub_1C214B930();
      swift_bridgeObjectRelease();
      if (v14) {
        goto LABEL_4;
      }
    }
    else if (*(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_4:
      sub_1C206F0A8(0, (unint64_t *)&qword_1EA2C2DD0, MEMORY[0x1E4F66468], MEMORY[0x1E4FBBE00]);
      sub_1C2148540();
      *(_OWORD *)(swift_allocObject() + 16) = xmmword_1C214FCD0;
      sub_1C1F38E40(v12);
      swift_bridgeObjectRelease();
      sub_1C2147B10();
      sub_1C2147AD0();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      sub_1C2148520();
LABEL_10:
      sub_1C21485B0();
      return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    sub_1C206F0A8(0, (unint64_t *)&qword_1EA2C2DD0, MEMORY[0x1E4F66468], MEMORY[0x1E4FBBE00]);
    uint64_t v15 = *(void *)(sub_1C2148540() - 8);
    unint64_t v16 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
    uint64_t v17 = swift_allocObject();
    long long v27 = xmmword_1C214FCD0;
    *(_OWORD *)(v17 + 16) = xmmword_1C214FCD0;
    unint64_t v28 = v17 + v16;
    uint64_t v29 = v17;
    sub_1C1F5FE64(0, (unint64_t *)&qword_1EBF0C958, (unint64_t *)&qword_1EBF0C2F0);
    uint64_t v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = v27;
    uint64_t v19 = type metadata accessor for MedicationSourceListNoneItem();
    uint64_t v20 = v4;
    id v21 = (void *)swift_allocObject();
    type metadata accessor for MedicationSourceListNoneCell(0);
    v21[2] = sub_1C21481D0();
    v21[3] = v22;
    sub_1C2147B10();
    uint64_t v23 = sub_1C2147AD0();
    uint64_t v25 = v24;
    uint64_t v26 = *(void (**)(char *, uint64_t))(v5 + 8);
    v26(v7, v20);
    v21[4] = v23;
    v21[5] = v25;
    *(void *)(v18 + 56) = v19;
    *(void *)(v18 + 64) = sub_1C206F5F0(&qword_1EA2C63B0, (void (*)(uint64_t))type metadata accessor for MedicationSourceListNoneItem);
    *(void *)(v18 + 32) = v21;
    sub_1C2147B10();
    sub_1C2147AD0();
    v26(v7, v20);
    sub_1C2148520();
    goto LABEL_10;
  }

  return sub_1C21485B0();
}

uint64_t sub_1C206EA90(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = a3;
  swift_retain();
  sub_1C206E560(v3);

  return swift_release();
}

uint64_t sub_1C206EAE0()
{
  return sub_1C206F5F0(&qword_1EA2C6398, (void (*)(uint64_t))type metadata accessor for MedicationSourceListDataSource);
}

uint64_t sub_1C206EB28(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  uint64_t v5 = a3;
  id v7 = *(void (**)(id, uint64_t, void *))(a1 + 32);
  if (a3)
  {
    sub_1C1F12718(0, &qword_1EA2C3DB8);
    sub_1C1F2F9D0(&qword_1EA2C3DC0, &qword_1EA2C3DB8);
    uint64_t v5 = sub_1C214AA60();
  }
  swift_retain();
  id v8 = a2;
  id v9 = a4;
  v7(v8, v5, a4);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1C206EC20(uint64_t a1, uint64_t a2)
{
  uint64_t v41 = a2;
  uint64_t v40 = sub_1C2147B20();
  uint64_t v3 = *(void *)(v40 - 8);
  MEMORY[0x1F4188790](v40);
  uint64_t v39 = (char *)v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = MEMORY[0x1E4FBC860];
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1C214B680();
    sub_1C1F12718(0, &qword_1EA2C63A0);
    sub_1C1F2F9D0(&qword_1EA2C63A8, &qword_1EA2C63A0);
    uint64_t result = sub_1C214AAA0();
    a1 = v44;
    uint64_t v36 = v45;
    uint64_t v6 = v46;
    uint64_t v7 = v47;
    unint64_t v8 = v48;
  }
  else
  {
    uint64_t v9 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v10 = *(void *)(a1 + 56);
    uint64_t v36 = a1 + 56;
    uint64_t v11 = ~v9;
    uint64_t v12 = -v9;
    if (v12 < 64) {
      uint64_t v13 = ~(-1 << v12);
    }
    else {
      uint64_t v13 = -1;
    }
    unint64_t v8 = v13 & v10;
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v6 = v11;
    uint64_t v7 = 0;
  }
  v34[0] = v6;
  v34[3] = a1 & 0x7FFFFFFFFFFFFFFFLL;
  int64_t v35 = (unint64_t)(v6 + 64) >> 6;
  uint64_t v38 = (void (**)(char *, uint64_t))(v3 + 8);
  v34[2] = MEMORY[0x1E4FBC838] + 8;
  uint64_t v37 = a1;
  if (a1 < 0) {
    goto LABEL_10;
  }
  while (1)
  {
    if (v8)
    {
      uint64_t v14 = (v8 - 1) & v8;
      unint64_t v15 = __clz(__rbit64(v8)) | (v7 << 6);
      uint64_t v16 = v7;
      goto LABEL_29;
    }
    int64_t v19 = v7 + 1;
    if (__OFADD__(v7, 1)) {
      break;
    }
    if (v19 >= v35) {
      goto LABEL_34;
    }
    unint64_t v20 = *(void *)(v36 + 8 * v19);
    uint64_t v16 = v7 + 1;
    if (!v20)
    {
      uint64_t v16 = v7 + 2;
      if (v7 + 2 >= v35) {
        goto LABEL_34;
      }
      unint64_t v20 = *(void *)(v36 + 8 * v16);
      if (!v20)
      {
        uint64_t v16 = v7 + 3;
        if (v7 + 3 >= v35) {
          goto LABEL_34;
        }
        unint64_t v20 = *(void *)(v36 + 8 * v16);
        if (!v20)
        {
          uint64_t v16 = v7 + 4;
          if (v7 + 4 >= v35) {
            goto LABEL_34;
          }
          unint64_t v20 = *(void *)(v36 + 8 * v16);
          if (!v20)
          {
            uint64_t v16 = v7 + 5;
            if (v7 + 5 >= v35) {
              goto LABEL_34;
            }
            unint64_t v20 = *(void *)(v36 + 8 * v16);
            if (!v20)
            {
              uint64_t v21 = v7 + 6;
              while (v35 != v21)
              {
                unint64_t v20 = *(void *)(v36 + 8 * v21++);
                if (v20)
                {
                  uint64_t v16 = v21 - 1;
                  goto LABEL_28;
                }
              }
LABEL_34:
              sub_1C1F495B8();
              return v49;
            }
          }
        }
      }
    }
LABEL_28:
    uint64_t v14 = (v20 - 1) & v20;
    unint64_t v15 = __clz(__rbit64(v20)) + (v16 << 6);
LABEL_29:
    id v18 = *(id *)(*(void *)(a1 + 48) + 8 * v15);
    if (!v18) {
      goto LABEL_34;
    }
    while (1)
    {
      uint64_t v22 = *(void **)(v41 + qword_1EA2C6300);
      uint64_t v23 = *(void **)(v41 + qword_1EA2C6308);
      type metadata accessor for MedicationSourceListItem();
      uint64_t v24 = (void *)swift_allocObject();
      type metadata accessor for MedicationSourceListCell(0);
      id v25 = v22;
      id v26 = v18;
      id v27 = v23;
      v24[5] = sub_1C21481D0();
      v24[6] = v28;
      uint64_t v29 = v39;
      sub_1C2147B10();
      uint64_t v30 = sub_1C2147AD0();
      uint64_t v32 = v31;
      (*v38)(v29, v40);
      v24[7] = v30;
      v24[8] = v32;
      v24[2] = v25;
      v24[3] = v26;
      v24[4] = v27;

      MEMORY[0x1C87528E0](v33);
      if (*(void *)((v49 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v49 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_1C214A7D0();
      }
      sub_1C214A820();
      uint64_t result = sub_1C214A7A0();
      uint64_t v7 = v16;
      unint64_t v8 = v14;
      a1 = v37;
      if ((v37 & 0x8000000000000000) == 0) {
        break;
      }
LABEL_10:
      uint64_t v17 = sub_1C214B700();
      if (v17)
      {
        uint64_t v42 = v17;
        sub_1C1F12718(0, &qword_1EA2C63A0);
        swift_unknownObjectRetain();
        swift_dynamicCast();
        id v18 = v43;
        swift_unknownObjectRelease();
        uint64_t v16 = v7;
        uint64_t v14 = v8;
        if (v18) {
          continue;
        }
      }
      goto LABEL_34;
    }
  }
  __break(1u);
  return result;
}

void sub_1C206F0A8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1C206F10C()
{
  if (!qword_1EA2C63B8)
  {
    uint64_t v0 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))MEMORY[0x1E4F1AC28];
    sub_1C206F31C(255, &qword_1EA2C63C0, MEMORY[0x1E4F1AC28]);
    sub_1C206F3A4(&qword_1EA2C63D0, &qword_1EA2C63C0, v0);
    unint64_t v1 = sub_1C2149F30();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_1EA2C63B8);
    }
  }
}

void sub_1C206F1C0()
{
  if (!qword_1EA2C63C8)
  {
    sub_1C1F12718(255, &qword_1EA2C3DB8);
    sub_1C1F2F9D0(&qword_1EA2C3DC0, &qword_1EA2C3DB8);
    unint64_t v0 = sub_1C214AAB0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C63C8);
    }
  }
}

void sub_1C206F268()
{
  if (!qword_1EA2C63D8)
  {
    unint64_t v0 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))MEMORY[0x1E4F1AAE0];
    sub_1C206F31C(255, &qword_1EA2C63E0, MEMORY[0x1E4F1AAE0]);
    sub_1C206F3A4(&qword_1EA2C63E8, &qword_1EA2C63E0, v0);
    unint64_t v1 = sub_1C2149D20();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_1EA2C63D8);
    }
  }
}

void sub_1C206F31C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, void))
{
  if (!*a2)
  {
    sub_1C206F1C0();
    uint64_t v7 = v6;
    uint64_t v8 = sub_1C1F23804(255, (unint64_t *)&qword_1EBF0C9C0);
    unint64_t v9 = a3(a1, v7, v8, MEMORY[0x1E4FBC0F0]);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

uint64_t sub_1C206F3A4(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C206F31C(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C206F3E8()
{
  if (!qword_1EA2C63F0)
  {
    sub_1C206F268();
    sub_1C1F12718(255, &qword_1EA2C63F8);
    sub_1C206F5F0(&qword_1EA2C6400, (void (*)(uint64_t))sub_1C206F268);
    unint64_t v0 = sub_1C2149D60();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C63F0);
    }
  }
}

void sub_1C206F4A4()
{
  if (!qword_1EA2C6408)
  {
    sub_1C206F3E8();
    sub_1C1F12718(255, (unint64_t *)&qword_1EBF0CB10);
    sub_1C206F5F0(&qword_1EA2C6410, (void (*)(uint64_t))sub_1C206F3E8);
    sub_1C1F2F9D0((unint64_t *)&qword_1EBF0C7F0, (unint64_t *)&qword_1EBF0CB10);
    unint64_t v0 = sub_1C2149DF0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C6408);
    }
  }
}

uint64_t sub_1C206F5A8@<X0>(uint64_t *a1@<X8>)
{
  return sub_1C206DFBC(*(void **)(v1 + 16), *(void *)(v1 + 24), a1);
}

void sub_1C206F5B0(void *a1@<X8>)
{
  sub_1C206D90C(v1, a1);
}

void sub_1C206F5B8(id *a1)
{
  id v1 = *a1;
  id v2 = *a1;

  sub_1C206CE5C(v1);
}

uint64_t sub_1C206F5F0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t objectdestroyTm()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

void sub_1C206F67C(uint64_t a1, uint64_t a2)
{
  sub_1C206E074(a1, a2, *(void **)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_1C206F684()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

void sub_1C206F6BC(int a1, void *a2, void *a3)
{
  sub_1C206E27C(a1, a2, a3, *(void (**)(id, uint64_t))(v3 + 16));
}

char *sub_1C206F6C8()
{
  uint64_t v1 = OBJC_IVAR____TtC19HealthMedicationsUI30InteractionDetailEducationView____lazy_storage___severityLevelView;
  uint64_t v2 = *(void **)(v0
                + OBJC_IVAR____TtC19HealthMedicationsUI30InteractionDetailEducationView____lazy_storage___severityLevelView);
  if (v2)
  {
    uint64_t v3 = *(char **)(v0
                  + OBJC_IVAR____TtC19HealthMedicationsUI30InteractionDetailEducationView____lazy_storage___severityLevelView);
  }
  else
  {
    uint64_t v4 = sub_1C206F72C(v0);
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    uint64_t v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

char *sub_1C206F72C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + OBJC_IVAR____TtC19HealthMedicationsUI30InteractionDetailEducationView_severityLevel);
  uint64_t v2 = (objc_class *)type metadata accessor for DrugInteractionSeverityLevelView();
  uint64_t v3 = (char *)objc_allocWithZone(v2);
  *(void *)&v3[OBJC_IVAR____TtC19HealthMedicationsUI32DrugInteractionSeverityLevelView_subview] = 0;
  *(void *)&v3[OBJC_IVAR____TtC19HealthMedicationsUI32DrugInteractionSeverityLevelView____lazy_storage___severityLabel] = 0;
  *(void *)&v3[OBJC_IVAR____TtC19HealthMedicationsUI32DrugInteractionSeverityLevelView____lazy_storage___criticalSeverityButton] = 0;
  *(void *)&v3[OBJC_IVAR____TtC19HealthMedicationsUI32DrugInteractionSeverityLevelView_severityLevel] = v1;
  v8.receiver = v3;
  v8.super_class = v2;
  uint64_t v4 = (char *)objc_msgSendSuper2(&v8, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  sub_1C1F942CC();
  uint64_t v5 = *(void **)&v4[OBJC_IVAR____TtC19HealthMedicationsUI32DrugInteractionSeverityLevelView_subview];
  if (v5) {
    objc_msgSend(v5, sel_hk_alignConstraintsWithView_, v4);
  }
  objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  LODWORD(v6) = 1144750080;
  objc_msgSend(v4, sel_setContentCompressionResistancePriority_forAxis_, 0, v6);
  return v4;
}

id sub_1C206F828()
{
  uint64_t v1 = OBJC_IVAR____TtC19HealthMedicationsUI30InteractionDetailEducationView____lazy_storage___interactionContentLabel;
  uint64_t v2 = *(void **)(v0
                + OBJC_IVAR____TtC19HealthMedicationsUI30InteractionDetailEducationView____lazy_storage___interactionContentLabel);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC19HealthMedicationsUI30InteractionDetailEducationView____lazy_storage___interactionContentLabel);
  }
  else
  {
    uint64_t v4 = v0;
    id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
    sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8E0);
    double v6 = (void *)sub_1C214B0A0();
    objc_msgSend(v5, sel_setFont_, v6);

    uint64_t v13 = sub_1C214A5F0();
    uint64_t v14 = v7;
    swift_bridgeObjectRetain();
    sub_1C214A6C0();
    id v8 = v5;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_1C214A6C0();
    swift_bridgeObjectRelease();
    unint64_t v9 = (void *)sub_1C214A5B0();
    swift_bridgeObjectRelease();
    objc_msgSend(v8, sel_setAccessibilityIdentifier_, v9, v13, v14);

    objc_msgSend(v8, sel_setNumberOfLines_, 0);
    objc_msgSend(v8, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    uint64_t v10 = *(void **)(v4 + v1);
    *(void *)(v4 + v1) = v8;
    id v3 = v8;

    uint64_t v2 = 0;
  }
  id v11 = v2;
  return v3;
}

id sub_1C206F9FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)&v3[OBJC_IVAR____TtC19HealthMedicationsUI30InteractionDetailEducationView____lazy_storage___severityLevelView] = 0;
  *(void *)&v3[OBJC_IVAR____TtC19HealthMedicationsUI30InteractionDetailEducationView____lazy_storage___interactionContentLabel] = 0;
  *(void *)&v3[OBJC_IVAR____TtC19HealthMedicationsUI30InteractionDetailEducationView_severityLevel] = a1;
  uint64_t v4 = &v3[OBJC_IVAR____TtC19HealthMedicationsUI30InteractionDetailEducationView_interactionContent];
  *(void *)uint64_t v4 = a2;
  *((void *)v4 + 1) = a3;
  v11.receiver = v3;
  v11.super_class = (Class)type metadata accessor for InteractionDetailEducationView();
  id v5 = objc_msgSendSuper2(&v11, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  double v6 = sub_1C206F6C8();
  objc_msgSend(v5, sel_addSubview_, v6);

  id v7 = sub_1C206F828();
  objc_msgSend(v5, sel_addSubview_, v7);

  id v8 = sub_1C206F828();
  unint64_t v9 = (void *)sub_1C214A5B0();
  objc_msgSend(v8, sel_setText_, v9);

  sub_1C206FC4C();
  return v5;
}

id InteractionDetailEducationView.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void InteractionDetailEducationView.init(coder:)()
{
  *(void *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI30InteractionDetailEducationView____lazy_storage___severityLevelView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI30InteractionDetailEducationView____lazy_storage___interactionContentLabel] = 0;

  sub_1C214B910();
  __break(1u);
}

void sub_1C206FC4C()
{
  uint64_t v31 = self;
  sub_1C1F0ED28();
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1C21518E0;
  uint64_t v2 = sub_1C206F6C8();
  id v3 = objc_msgSend(v2, sel_topAnchor);

  id v4 = objc_msgSend(v0, sel_topAnchor);
  id v5 = objc_msgSend(v3, sel_constraintEqualToAnchor_, v4);

  *(void *)(v1 + 32) = v5;
  double v6 = sub_1C206F6C8();
  id v7 = objc_msgSend(v6, sel_leadingAnchor);

  id v8 = objc_msgSend(v0, sel_leadingAnchor);
  id v9 = objc_msgSend(v7, sel_constraintEqualToAnchor_, v8);

  *(void *)(v1 + 40) = v9;
  uint64_t v10 = sub_1C206F6C8();
  id v11 = objc_msgSend(v10, sel_trailingAnchor);

  id v12 = objc_msgSend(v0, sel_trailingAnchor);
  id v13 = objc_msgSend(v11, sel_constraintLessThanOrEqualToAnchor_, v12);

  *(void *)(v1 + 48) = v13;
  uint64_t v14 = sub_1C206F6C8();
  id v15 = objc_msgSend(v14, sel_bottomAnchor);

  id v16 = sub_1C206F828();
  id v17 = objc_msgSend(v16, sel_topAnchor);

  id v18 = objc_msgSend(v15, sel_constraintEqualToAnchor_constant_, v17, -8.0);
  *(void *)(v1 + 56) = v18;
  id v19 = sub_1C206F828();
  id v20 = objc_msgSend(v19, sel_leadingAnchor);

  id v21 = objc_msgSend(v0, sel_leadingAnchor);
  id v22 = objc_msgSend(v20, sel_constraintEqualToAnchor_, v21);

  *(void *)(v1 + 64) = v22;
  id v23 = sub_1C206F828();
  id v24 = objc_msgSend(v23, sel_trailingAnchor);

  id v25 = objc_msgSend(v0, sel_trailingAnchor);
  id v26 = objc_msgSend(v24, sel_constraintEqualToAnchor_, v25);

  *(void *)(v1 + 72) = v26;
  id v27 = sub_1C206F828();
  id v28 = objc_msgSend(v27, sel_bottomAnchor);

  id v29 = objc_msgSend(v0, sel_bottomAnchor);
  id v30 = objc_msgSend(v28, sel_constraintEqualToAnchor_, v29);

  *(void *)(v1 + 80) = v30;
  sub_1C214A7A0();
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C810);
  id v32 = (id)sub_1C214A770();
  swift_bridgeObjectRelease();
  objc_msgSend(v31, sel_activateConstraints_, v32);
}

id InteractionDetailEducationView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  id v9 = objc_allocWithZone(v4);

  return objc_msgSend(v9, sel_initWithFrame_, a1, a2, a3, a4);
}

void InteractionDetailEducationView.init(frame:)()
{
}

id InteractionDetailEducationView.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for InteractionDetailEducationView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for InteractionDetailEducationView()
{
  return self;
}

uint64_t method lookup function for InteractionDetailEducationView(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for InteractionDetailEducationView);
}

uint64_t type metadata accessor for MedicationStrengthsDataSource()
{
  uint64_t result = qword_1EA2C6450;
  if (!qword_1EA2C6450) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C20701D4()
{
  uint64_t result = sub_1C21491B0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1C2070274(unint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = sub_1C20720D8(a1, a2, a3);
  swift_release();
  return v3;
}

uint64_t sub_1C20702C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C2148710();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  id v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 == 1)
  {
    sub_1C2148690();
    id v9 = (void *)sub_1C2148700();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    objc_msgSend(v9, sel_contentInsets);
    objc_msgSend(v9, sel_setContentInsets_, 0.0);
    objc_msgSend(v9, sel_contentInsets);
    objc_msgSend(v9, sel_setContentInsets_);
    return (uint64_t)v9;
  }
  if (a1)
  {
    sub_1C2148690();
    id v9 = (void *)sub_1C2148700();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return (uint64_t)v9;
  }

  return sub_1C20F7278(0, a2);
}

void *sub_1C2070458(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  sub_1C2072310(0, (unint64_t *)&qword_1EA2C2CC8, type metadata accessor for MedicationSearchItem, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v27 - v9;
  id v11 = (uint64_t *)(v3 + qword_1EA2C8070);
  id v27 = (char *)sub_1C214A5F0();
  uint64_t v28 = v12;
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  uint64_t v13 = (uint64_t)v27;
  uint64_t v14 = v28;
  swift_retain();
  swift_bridgeObjectRelease();
  uint64_t *v11 = v13;
  v11[1] = v14;
  uint64_t v15 = v4 + qword_1EA2C6448;
  uint64_t v16 = sub_1C21491B0();
  uint64_t v17 = *(void *)(v16 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16))(v15, a3, v16);
  swift_release();
  sub_1C2072444(a1, (uint64_t)v10, type metadata accessor for MedicationSearchItem);
  uint64_t v18 = type metadata accessor for MedicationSearchItem(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v10, 0, 1, v18);
  swift_retain();
  id v19 = sub_1C20FBED0((uint64_t)v10, a2);
  swift_release();
  swift_retain();
  unint64_t v20 = sub_1C2070810();
  unint64_t v21 = v20;
  if (!(v20 >> 62))
  {
    if (*(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_3;
    }
LABEL_12:
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  if (!sub_1C214B930()) {
    goto LABEL_12;
  }
LABEL_3:
  if ((v21 & 0xC000000000000001) != 0)
  {
    id v22 = (char *)MEMORY[0x1C8753960](0, v21);
  }
  else
  {
    if (!*(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_17;
    }
    id v22 = (char *)*(id *)(v21 + 32);
  }
  uint64_t v10 = v22;
  swift_bridgeObjectRelease();
  unint64_t v23 = sub_1C2070810();
  if (!(v23 >> 62))
  {
    uint64_t v24 = *(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_8;
  }
LABEL_17:
  uint64_t v24 = sub_1C214B930();
LABEL_8:
  swift_bridgeObjectRelease();
  if (v24 != 1)
  {

    swift_release();
    swift_release();
LABEL_13:
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(a3, v16);
    sub_1C20724AC(a1, type metadata accessor for MedicationSearchItem);
    return v19;
  }
  uint64_t v28 = 0;
  id v29 = 0;
  id v27 = v10;
  unsigned __int8 v30 = 0;
  id v25 = v10;
  sub_1C2149E70();

  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(a3, v16);
  sub_1C20724AC(a1, type metadata accessor for MedicationSearchItem);
  sub_1C1F73780((uint64_t)v27, v28, v29, v30);
  return v19;
}

uint64_t sub_1C2070810()
{
  uint64_t v1 = sub_1C2149520();
  uint64_t v31 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v3 = (char *)&v28 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1C21490F0();
  uint64_t v29 = *(void *)(v4 - 8);
  uint64_t v30 = v4;
  uint64_t v5 = MEMORY[0x1F4188790](v4);
  id v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v28 - v8;
  sub_1C2072310(0, (unint64_t *)&qword_1EA2C2CC8, type metadata accessor for MedicationSearchItem, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v28 - v11;
  uint64_t v13 = type metadata accessor for MedicationSearchItem.Source(0);
  uint64_t v14 = MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x1F4188790](v14);
  id v19 = (char *)&v28 - v18;
  MEMORY[0x1F4188790](v17);
  unint64_t v21 = (char *)&v28 - v20;
  sub_1C1F246EC(v0 + qword_1EA2C7D70, (uint64_t)v12);
  uint64_t v22 = type metadata accessor for MedicationSearchItem(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v22 - 8) + 48))(v12, 1, v22) == 1)
  {
    sub_1C2043414((uint64_t)v12);
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v28 = v1;
  sub_1C2072444((uint64_t)v12, (uint64_t)v19, type metadata accessor for MedicationSearchItem.Source);
  sub_1C20724AC((uint64_t)v12, type metadata accessor for MedicationSearchItem);
  sub_1C207250C((uint64_t)v19, (uint64_t)v21);
  sub_1C2072444((uint64_t)v21, (uint64_t)v16, type metadata accessor for MedicationSearchItem.Source);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_1C20724AC((uint64_t)v16, type metadata accessor for MedicationSearchItem.Source);
    sub_1C20724AC((uint64_t)v21, type metadata accessor for MedicationSearchItem.Source);
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v23 = v29;
  uint64_t v24 = v16;
  uint64_t v25 = v30;
  (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v9, v24, v30);
  (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v7, v9, v25);
  sub_1C2149530();
  sub_1C2149500();
  swift_getKeyPath();
  uint64_t v26 = sub_1C214A7F0();
  swift_bridgeObjectRelease();
  swift_release();
  (*(void (**)(char *, uint64_t))(v31 + 8))(v3, v28);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v9, v25);
  sub_1C20724AC((uint64_t)v21, type metadata accessor for MedicationSearchItem.Source);
  return v26;
}

uint64_t sub_1C2070C68(unint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)sub_1C20F7278(a1, a2);
  uint64_t v5 = (uint64_t)v4;
  if (a1 >= 2)
  {
    if (a1 != 2)
    {
      id v6 = v4;
      uint64_t v5 = sub_1C20702C4(a1, a2);
LABEL_6:

      return v5;
    }
    if (v4)
    {
      id v6 = v4;
      objc_msgSend(v6, sel_contentInsets);
      objc_msgSend(v6, sel_setContentInsets_, 4.0);
      goto LABEL_6;
    }
  }
  return v5;
}

uint64_t sub_1C2070CF4()
{
  uint64_t v1 = *v0;
  unint64_t v2 = sub_1C2070810();
  swift_retain();
  uint64_t v3 = sub_1C2070274(v2, (uint64_t)v0, v1);
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_1C2070D80@<X0>(void **a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t *a4@<X8>)
{
  id v58 = a3;
  v75 = a4;
  uint64_t v6 = sub_1C2148A70();
  uint64_t v71 = *(void *)(v6 - 8);
  uint64_t v72 = v6;
  MEMORY[0x1F4188790](v6);
  v74 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C2072310(0, &qword_1EBF0C620, MEMORY[0x1E4FB0F28], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v9 - 8);
  v73 = (char *)&v55 - v10;
  uint64_t v11 = sub_1C2148620();
  uint64_t v66 = *(void *)(v11 - 8);
  uint64_t v67 = v11;
  MEMORY[0x1F4188790](v11);
  v70 = (char *)&v55 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1C2149860();
  uint64_t v64 = *(void *)(v13 - 8);
  uint64_t v65 = v13;
  MEMORY[0x1F4188790](v13);
  v63 = (char *)&v55 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2072310(0, &qword_1EBF0C610, MEMORY[0x1E4FB0E38], v8);
  MEMORY[0x1F4188790](v15 - 8);
  v59 = (char *)&v55 - v16;
  uint64_t v62 = sub_1C2149890();
  uint64_t v60 = *(void *)(v62 - 8);
  MEMORY[0x1F4188790](v62);
  uint64_t v18 = (char *)&v55 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = sub_1C2149BE0();
  uint64_t v68 = *(void *)(v82 - 8);
  MEMORY[0x1F4188790](v82);
  uint64_t v20 = (char *)&v55 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v21 = *a1;
  sub_1C2149B70();
  sub_1C214B470();
  sub_1C2149B90();
  id v61 = self;
  id v22 = objc_msgSend(v61, sel_labelColor);
  uint64_t v23 = v20;
  uint64_t v24 = (void (*)(id *, void))sub_1C2149AA0();
  sub_1C2149A60();
  v24(&v77, 0);
  uint64_t v69 = a2;
  sub_1C2149E90();
  unsigned __int8 v25 = v80;
  if (v80 != 255)
  {
    uint64_t v27 = (uint64_t)v77;
    uint64_t v26 = v78;
    uint64_t v28 = v79;
    if ((v80 & 1) == 0)
    {
      id v29 = objc_msgSend(v77, sel_identifier);
      sub_1C1F73780(v27, v26, v28, v25);
      goto LABEL_6;
    }
    sub_1C1F73780((uint64_t)v77, v78, v79, v80);
  }
  id v29 = 0;
LABEL_6:
  id v30 = objc_msgSend(v21, sel_identifier);
  uint64_t v31 = v30;
  if (v29)
  {
    if (v30)
    {
      sub_1C2072404();
      id v32 = v29;
      sub_1C214B220();
    }
    else
    {
    }
  }
  else if (v30)
  {
  }
  id v77 = (id)sub_1C214BC10();
  uint64_t v78 = v33;
  sub_1C214A6C0();
  sub_1C214B430();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  id v58 = v77;
  uint64_t v57 = v78;
  uint64_t v34 = v82;
  uint64_t v80 = v82;
  uint64_t v81 = MEMORY[0x1E4FB0F88];
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v77);
  uint64_t v36 = v68;
  uint64_t v37 = *(void (**)(uint64_t *, char *, uint64_t))(v68 + 16);
  v56 = v23;
  v37(boxed_opaque_existential_1, v23, v34);
  sub_1C2072310(0, (unint64_t *)&unk_1EBF0C990, MEMORY[0x1E4FB0E68], MEMORY[0x1E4FBBE00]);
  sub_1C2149930();
  uint64_t v55 = swift_allocObject();
  *(_OWORD *)(v55 + 16) = xmmword_1C214FCD0;
  uint64_t v38 = sub_1C2149870();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v59, 1, 1, v38);
  sub_1C2149880();
  uint64_t v40 = v63;
  uint64_t v39 = v64;
  uint64_t v41 = v65;
  (*(void (**)(char *, void, uint64_t))(v64 + 104))(v63, *MEMORY[0x1E4FB0E18], v65);
  sub_1C2149920();
  (*(void (**)(char *, uint64_t))(v39 + 8))(v40, v41);
  (*(void (**)(char *, uint64_t))(v60 + 8))(v18, v62);
  uint64_t v42 = swift_allocObject();
  uint64_t v43 = v69;
  swift_weakInit();
  uint64_t v44 = swift_allocObject();
  *(void *)(v44 + 16) = v42;
  *(void *)(v44 + 24) = v21;
  uint64_t v45 = v70;
  unsigned char *v70 = 1;
  (*(void (**)(unsigned char *, void, uint64_t))(v66 + 104))(v45, *MEMORY[0x1E4F66478], v67);
  swift_retain();
  id v46 = v21;
  uint64_t v47 = v73;
  sub_1C21499A0();
  id v48 = objc_msgSend(v61, sel_secondarySystemBackgroundColor);
  sub_1C2149990();
  uint64_t v49 = sub_1C21499D0();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v49 - 8) + 56))(v47, 0, 1, v49);
  uint64_t v51 = *(void *)(v43 + qword_1EA2C8070);
  uint64_t v50 = *(void *)(v43 + qword_1EA2C8070 + 8);
  v76[0] = 0;
  v76[1] = 0xE000000000000000;
  sub_1C214B7C0();
  swift_bridgeObjectRelease();
  strcpy((char *)v76, ".StrengthCell.");
  HIBYTE(v76[1]) = -18;
  sub_1C214B470();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  v76[0] = v51;
  v76[1] = v50;
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, void, uint64_t))(v71 + 104))(v74, *MEMORY[0x1E4F66678], v72);
  uint64_t v52 = sub_1C21487B0();
  v53 = v75;
  v75[3] = v52;
  v53[4] = sub_1C20723BC((unint64_t *)&qword_1EA2C2E68, MEMORY[0x1E4F66510]);
  __swift_allocate_boxed_opaque_existential_1(v53);
  sub_1C21487A0();
  (*(void (**)(char *, uint64_t))(v36 + 8))(v56, v82);
  return swift_release();
}

uint64_t sub_1C2071744(uint64_t a1, uint64_t a2, void *a3)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    swift_retain();
    swift_release();
    id v5 = a3;
    sub_1C2149E70();

    return swift_release();
  }
  return result;
}

uint64_t sub_1C20717E8()
{
  uint64_t v0 = sub_1C2147B20();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2149E90();
  unsigned __int8 v4 = v18;
  if (v18 == 255) {
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v5 = v15;
  uint64_t v6 = v16;
  uint64_t v7 = v17;
  if ((v18 & 1) != 0 || (uint64_t v8 = sub_1C214B450()) == 0)
  {
    uint64_t v10 = MEMORY[0x1E4FBC860];
  }
  else
  {
    uint64_t v9 = (void *)v8;
    sub_1C214B480();
    uint64_t v14 = v6;

    sub_1C2072310(0, (unint64_t *)&qword_1EBF0C958, (uint64_t (*)(uint64_t))sub_1C1F1CB5C, MEMORY[0x1E4FBBE00]);
    uint64_t v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_1C214FCD0;
    uint64_t v13 = (uint64_t *)(v10 + 32);
    v12[1] = sub_1C20FB628();
    swift_bridgeObjectRelease();
    uint64_t v15 = 0x74497265746F6F46;
    unint64_t v16 = 0xEB000000005F6D65;
    sub_1C2147B10();
    sub_1C2147AD0();
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    uint64_t v6 = v14;
    sub_1C214A6C0();
    swift_bridgeObjectRelease();
    *(void *)(v10 + 56) = sub_1C2148960();
    *(void *)(v10 + 64) = sub_1C20723BC(&qword_1EA2C2D38, MEMORY[0x1E4F665E8]);
    __swift_allocate_boxed_opaque_existential_1(v13);
    sub_1C2148940();
  }
  sub_1C1F73780(v5, v6, v7, v4);
  return v10;
}

uint64_t sub_1C2071A6C()
{
  return sub_1C214ACC0();
}

uint64_t sub_1C2071B44()
{
  sub_1C2072310(0, (unint64_t *)&qword_1EBF0C958, (uint64_t (*)(uint64_t))sub_1C1F1CB5C, MEMORY[0x1E4FBBE00]);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1C214FCD0;
  if (qword_1EBF0CA00 != -1) {
    swift_once();
  }
  id v1 = (id)qword_1EBF0CA18;
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_1C2147730();
  uint64_t v4 = v3;
  swift_bridgeObjectRelease();

  id v5 = (id)qword_1EBF0CA18;
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_1C2147730();
  uint64_t v8 = v7;
  swift_bridgeObjectRelease();

  uint64_t v9 = swift_allocObject();
  swift_weakInit();
  *(void *)(v0 + 56) = &type metadata for CustomStrengthOptionItem;
  *(void *)(v0 + 64) = sub_1C2072034();
  uint64_t v10 = (void *)swift_allocObject();
  *(void *)(v0 + 32) = v10;
  type metadata accessor for CustomStrengthOptionCell();
  sub_1C20723BC((unint64_t *)&qword_1EA2C6468, (void (*)(uint64_t))type metadata accessor for CustomStrengthOptionCell);
  swift_retain();
  uint64_t v11 = sub_1C21481D0();
  v10[2] = v2;
  v10[3] = v4;
  v10[4] = v6;
  v10[5] = v8;
  v10[6] = sub_1C207202C;
  v10[7] = v9;
  v10[8] = v11;
  v10[9] = v12;
  swift_release();
  return v0;
}

uint64_t sub_1C2071DBC()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    swift_retain();
    swift_release();
    sub_1C2149E70();
    return swift_release();
  }
  return result;
}

void sub_1C2071E48()
{
}

uint64_t sub_1C2071E78()
{
  uint64_t v1 = v0 + qword_1EA2C6448;
  uint64_t v2 = sub_1C21491B0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_bridgeObjectRelease();
}

uint64_t sub_1C2071EF8()
{
  uint64_t v0 = sub_1C2148610();
  swift_release();
  sub_1C2043414(v0 + qword_1EA2C7D70);
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + qword_1EA2C6448;
  uint64_t v2 = sub_1C21491B0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_1C2071FEC()
{
  return type metadata accessor for MedicationStrengthsDataSource();
}

uint64_t sub_1C2071FF4()
{
  swift_weakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C207202C()
{
  return sub_1C2071DBC();
}

unint64_t sub_1C2072034()
{
  unint64_t result = qword_1EA2C6460;
  if (!qword_1EA2C6460)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C6460);
  }
  return result;
}

uint64_t sub_1C2072088()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 80, 7);
}

uint64_t sub_1C20720D8(unint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = v3;
  uint64_t v22 = a2;
  uint64_t v23 = a3;
  if (a1 >> 62) {
    goto LABEL_18;
  }
  uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v7 = MEMORY[0x1E4FBC860];
    if (!v6) {
      return v7;
    }
    uint64_t v28 = MEMORY[0x1E4FBC860];
    uint64_t result = sub_1C1F704CC(0, v6 & ~(v6 >> 63), 0);
    if (v6 < 0) {
      break;
    }
    uint64_t v9 = 0;
    uint64_t v7 = v28;
    unint64_t v21 = a1 & 0xC000000000000001;
    while (v6 != v9)
    {
      if (v21) {
        id v10 = (id)MEMORY[0x1C8753960](v9, a1);
      }
      else {
        id v10 = *(id *)(a1 + 8 * v9 + 32);
      }
      uint64_t v11 = v10;
      uint64_t v24 = v10;
      sub_1C2070D80(&v24, v22, v23, v25);
      if (v4)
      {
        swift_release();

        return v7;
      }
      uint64_t v4 = 0;

      uint64_t v28 = v7;
      unint64_t v13 = *(void *)(v7 + 16);
      unint64_t v12 = *(void *)(v7 + 24);
      if (v13 >= v12 >> 1) {
        sub_1C1F704CC(v12 > 1, v13 + 1, 1);
      }
      ++v9;
      uint64_t v14 = v26;
      uint64_t v15 = v27;
      uint64_t v16 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v25, v26);
      MEMORY[0x1F4188790](v16);
      unsigned __int8 v18 = (char *)&v20 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v19 + 16))(v18);
      sub_1C20A09B8(v13, (uint64_t)v18, &v28, v14, v15);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v25);
      uint64_t v7 = v28;
      if (v6 == v9) {
        return v7;
      }
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_1C214B930();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

void sub_1C2072310(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C2072374()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C20723B4(uint64_t a1)
{
  return sub_1C2071744(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_1C20723BC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C2072404()
{
  unint64_t result = qword_1EA2C2FA0;
  if (!qword_1EA2C2FA0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA2C2FA0);
  }
  return result;
}

uint64_t sub_1C2072444(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C20724AC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C207250C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MedicationSearchItem.Source(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C2072570@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1C214B470();
  *a1 = result;
  a1[1] = v3;
  return result;
}

id sub_1C207259C()
{
  return sub_1C20725DC(&OBJC_IVAR____TtC19HealthMedicationsUI26MedicationLogDetailsHeader____lazy_storage___titleLabel, (uint64_t (*)(void))sub_1C2073F78);
}

id sub_1C20725BC()
{
  return sub_1C20725DC(&OBJC_IVAR____TtC19HealthMedicationsUI26MedicationLogDetailsHeader____lazy_storage___formStrengthLabel, (uint64_t (*)(void))sub_1C2074218);
}

id sub_1C20725DC(uint64_t *a1, uint64_t (*a2)(void))
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(void **)(v2 + *a1);
  if (v4)
  {
    id v5 = *(id *)(v2 + *a1);
  }
  else
  {
    uint64_t v6 = (void *)a2();
    uint64_t v7 = *(void **)(v2 + v3);
    *(void *)(v2 + v3) = v6;
    id v5 = v6;

    uint64_t v4 = 0;
  }
  id v8 = v4;
  return v5;
}

void sub_1C207263C()
{
  id v1 = sub_1C207259C();
  objc_msgSend(v0, sel_addSubview_, v1);

  id v2 = sub_1C20725BC();
  objc_msgSend(v0, sel_addSubview_, v2);

  id v3 = sub_1C207259C();
  objc_msgSend(v3, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);

  id v4 = sub_1C20725BC();
  objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);

  id v5 = sub_1C207259C();
  id v6 = objc_msgSend(v5, sel_topAnchor);

  id v7 = objc_msgSend(v0, sel_topAnchor);
  id v8 = objc_msgSend(v6, sel_constraintEqualToAnchor_constant_, v7, 30.0);

  objc_msgSend(v8, sel_setActive_, 1);
  id v9 = sub_1C207259C();
  id v10 = objc_msgSend(v9, sel_leadingAnchor);

  id v11 = objc_msgSend(v0, sel_leadingAnchor);
  id v12 = objc_msgSend(v10, sel_constraintEqualToAnchor_constant_, v11, 4.0);

  objc_msgSend(v12, sel_setActive_, 1);
  id v13 = sub_1C207259C();
  id v14 = objc_msgSend(v13, sel_trailingAnchor);

  id v15 = objc_msgSend(v0, sel_trailingAnchor);
  id v16 = objc_msgSend(v14, sel_constraintEqualToAnchor_, v15);

  objc_msgSend(v16, sel_setActive_, 1);
  id v17 = sub_1C20725BC();
  id v18 = objc_msgSend(v17, sel_topAnchor);

  id v19 = sub_1C207259C();
  id v20 = objc_msgSend(v19, sel_bottomAnchor);

  id v21 = objc_msgSend(v18, sel_constraintEqualToAnchor_constant_, v20, 4.0);
  objc_msgSend(v21, sel_setActive_, 1);

  id v22 = sub_1C20725BC();
  id v23 = objc_msgSend(v22, sel_leadingAnchor);

  id v24 = objc_msgSend(v0, sel_leadingAnchor);
  id v25 = objc_msgSend(v23, sel_constraintEqualToAnchor_constant_, v24, 4.0);

  objc_msgSend(v25, sel_setActive_, 1);
  id v26 = sub_1C20725BC();
  id v27 = objc_msgSend(v26, sel_trailingAnchor);

  id v28 = objc_msgSend(v0, sel_trailingAnchor);
  id v29 = objc_msgSend(v27, sel_constraintEqualToAnchor_, v28);

  objc_msgSend(v29, sel_setActive_, 1);
  id v30 = sub_1C20725BC();
  id v31 = objc_msgSend(v30, sel_bottomAnchor);

  id v32 = objc_msgSend(v0, sel_bottomAnchor);
  id v33 = objc_msgSend(v31, sel_constraintEqualToAnchor_constant_, v32, -20.0);

  objc_msgSend(v33, sel_setActive_, 1);
}

uint64_t sub_1C2072B98()
{
  uint64_t v1 = sub_1C21497F0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  id v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2073C50(0, &qword_1EA2C64B0, (void (*)(uint64_t))type metadata accessor for MedicationLogDetailsHeaderItem);
  MEMORY[0x1F4188790](v5 - 8);
  id v7 = (char *)&v26 - v6;
  uint64_t v8 = type metadata accessor for MedicationLogDetailsHeaderItem();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  id v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (uint64_t)v0 + OBJC_IVAR____TtC19HealthMedicationsUI26MedicationLogDetailsHeader_item;
  swift_beginAccess();
  sub_1C1F2116C(v12, (uint64_t)v28);
  if (v28[3])
  {
    sub_1C1F1CB5C();
    int v13 = swift_dynamicCast();
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v7, v13 ^ 1u, 1, v8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) != 1)
    {
      sub_1C2073D00((uint64_t)v7, (uint64_t)v11);
      id v14 = sub_1C207259C();
      swift_bridgeObjectRetain();
      id v15 = (void *)sub_1C214A5B0();
      swift_bridgeObjectRelease();
      objc_msgSend(v14, sel_setText_, v15);

      id v16 = sub_1C20725BC();
      swift_bridgeObjectRetain();
      id v17 = (void *)sub_1C214A5B0();
      swift_bridgeObjectRelease();
      objc_msgSend(v16, sel_setText_, v17);

      return sub_1C2073D64((uint64_t)v11);
    }
  }
  else
  {
    sub_1C2073CA4((uint64_t)v28, (unint64_t *)&qword_1EBF0C300, (void (*)(uint64_t))sub_1C1F1CB5C);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
  }
  sub_1C2073CA4((uint64_t)v7, &qword_1EA2C64B0, (void (*)(uint64_t))type metadata accessor for MedicationLogDetailsHeaderItem);
  sub_1C21497A0();
  id v19 = v0;
  id v20 = sub_1C21497E0();
  os_log_type_t v21 = sub_1C214ABD0();
  if (os_log_type_enabled(v20, v21))
  {
    id v22 = (uint8_t *)swift_slowAlloc();
    uint64_t v23 = swift_slowAlloc();
    uint64_t v26 = v1;
    uint64_t v27 = v23;
    *(_DWORD *)id v22 = 136315138;
    sub_1C1F2116C(v12, (uint64_t)v28);
    sub_1C2073C50(0, (unint64_t *)&qword_1EBF0C300, (void (*)(uint64_t))sub_1C1F1CB5C);
    uint64_t v24 = sub_1C214A630();
    v28[0] = sub_1C1F6FD54(v24, v25, &v27);
    sub_1C214B530();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C1F0B000, v20, v21, "Incorrect view model for MedicationLogDetailsHeaderItem: %s", v22, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C8754730](v23, -1, -1);
    MEMORY[0x1C8754730](v22, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v26);
  }
  else
  {

    return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
}

id sub_1C207305C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MedicationLogDetailsHeader();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for MedicationLogDetailsHeader()
{
  return self;
}

uint64_t *sub_1C2073120(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v20 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1C2147B20();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = (uint64_t *)((char *)a1 + v8);
    id v11 = (uint64_t *)((char *)a2 + v8);
    uint64_t v12 = v11[1];
    *uint64_t v10 = *v11;
    v10[1] = v12;
    int v13 = (uint64_t *)((char *)a1 + v9);
    id v14 = (uint64_t *)((char *)a2 + v9);
    uint64_t v15 = v14[1];
    *int v13 = *v14;
    v13[1] = v15;
    uint64_t v16 = a3[7];
    id v17 = (uint64_t *)((char *)a1 + v16);
    id v18 = (uint64_t *)((char *)a2 + v16);
    uint64_t v19 = v18[1];
    *id v17 = *v18;
    v17[1] = v19;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1C207322C(uint64_t a1)
{
  uint64_t v2 = sub_1C2147B20();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1C20732C4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1C2147B20();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)(a1 + v7);
  uint64_t v10 = (void *)(a2 + v7);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  uint64_t v12 = (void *)(a1 + v8);
  int v13 = (void *)(a2 + v8);
  uint64_t v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  uint64_t v15 = a3[7];
  uint64_t v16 = (void *)(a1 + v15);
  id v17 = (void *)(a2 + v15);
  uint64_t v18 = v17[1];
  *uint64_t v16 = *v17;
  v16[1] = v18;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1C2073380(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1C2147B20();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = a3[6];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  void *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v13 = a3[7];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (void *)(a2 + v13);
  *uint64_t v14 = *v15;
  v14[1] = v15[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C2073474(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1C2147B20();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_1C2073504(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1C2147B20();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[6];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (uint64_t *)(a2 + v12);
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  *uint64_t v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  uint64_t v17 = a3[7];
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (uint64_t *)(a2 + v17);
  uint64_t v21 = *v19;
  uint64_t v20 = v19[1];
  *uint64_t v18 = v21;
  v18[1] = v20;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C20735C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C20735DC);
}

uint64_t sub_1C20735DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C2147B20();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_1C20736A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C20736B4);
}

uint64_t sub_1C20736B4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1C2147B20();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for MedicationLogDetailsHeaderItem()
{
  uint64_t result = qword_1EA2C6498;
  if (!qword_1EA2C6498) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C20737C0()
{
  uint64_t result = sub_1C2147B20();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1C2073858@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC19HealthMedicationsUI26MedicationLogDetailsHeader_item;
  swift_beginAccess();
  return sub_1C1F2116C(v3, a1);
}

uint64_t sub_1C20738B0(uint64_t a1)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC19HealthMedicationsUI26MedicationLogDetailsHeader_item;
  swift_beginAccess();
  sub_1C1F32DDC(a1, v3);
  swift_endAccess();
  sub_1C2072B98();
  return sub_1C2073CA4(a1, (unint64_t *)&qword_1EBF0C300, (void (*)(uint64_t))sub_1C1F1CB5C);
}

uint64_t (*sub_1C2073940(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = *v1;
  swift_beginAccess();
  return sub_1C20739A4;
}

uint64_t sub_1C20739A4(uint64_t a1, char a2)
{
  uint64_t result = swift_endAccess();
  if ((a2 & 1) == 0) {
    return sub_1C2072B98();
  }
  return result;
}

uint64_t sub_1C20739D8()
{
  uint64_t v0 = qword_1EA2C6470;
  swift_bridgeObjectRetain();
  return v0;
}

unint64_t sub_1C2073A10()
{
  return 0xD000000000000015;
}

uint64_t sub_1C2073A90()
{
  return sub_1C214BB80();
}

uint64_t sub_1C2073B08()
{
  sub_1C214A690();
  sub_1C214A690();

  return sub_1C214A690();
}

uint64_t sub_1C2073B78()
{
  return sub_1C214BB80();
}

unint64_t sub_1C2073BF8()
{
  unint64_t result = qword_1EA2C64A8;
  if (!qword_1EA2C64A8)
  {
    type metadata accessor for MedicationLogDetailsHeaderItem();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C64A8);
  }
  return result;
}

void sub_1C2073C50(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C214B4F0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1C2073CA4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1C2073C50(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1C2073D00(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MedicationLogDetailsHeaderItem();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C2073D64(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MedicationLogDetailsHeaderItem();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C2073DC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MedicationLogDetailsHeaderItem();
  uint64_t v5 = MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x1F4188790](v5);
  unint64_t v10 = (char *)&v24 - v9;
  uint64_t v11 = *(int *)(v8 + 24);
  uint64_t v12 = *(void *)(a1 + v11);
  uint64_t v13 = *(void *)(a1 + v11 + 8);
  uint64_t v14 = (void *)(a2 + v11);
  if (v12 == *v14 && v13 == v14[1])
  {
    sub_1C2073F14(a1, (uint64_t)&v24 - v9);
    sub_1C2073F14(a2, (uint64_t)v7);
  }
  else
  {
    char v16 = sub_1C214BA80();
    sub_1C2073F14(a1, (uint64_t)v10);
    sub_1C2073F14(a2, (uint64_t)v7);
    char v17 = 0;
    if ((v16 & 1) == 0) {
      goto LABEL_14;
    }
  }
  uint64_t v18 = *(int *)(v4 + 28);
  uint64_t v19 = *(void *)&v10[v18];
  uint64_t v20 = *(void *)&v10[v18 + 8];
  uint64_t v21 = &v7[v18];
  if (v19 == *(void *)v21 && v20 == *((void *)v21 + 1)) {
    char v17 = 1;
  }
  else {
    char v17 = sub_1C214BA80();
  }
LABEL_14:
  sub_1C2073D64((uint64_t)v10);
  sub_1C2073D64((uint64_t)v7);
  return v17 & 1;
}

uint64_t sub_1C2073F14(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MedicationLogDetailsHeaderItem();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1C2073F78()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v0, sel_setNumberOfLines_, 0);
  id v1 = objc_msgSend(self, sel_labelColor);
  objc_msgSend(v0, sel_setTextColor_, v1);

  uint64_t v2 = sub_1C214A5F0();
  uint64_t v4 = v3;
  id v5 = v0;
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  uint64_t v13 = v2;
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  uint64_t v6 = (void *)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  objc_msgSend(v5, sel_setAccessibilityIdentifier_, v6, v13, v4);

  objc_msgSend(v5, sel_setTextAlignment_, 4);
  objc_msgSend(v5, sel_setAdjustsFontForContentSizeCategory_, 1);
  uint64_t v7 = self;
  id v8 = objc_msgSend(v7, sel_preferredFontForTextStyle_, *MEMORY[0x1E4FB2998]);
  id v9 = objc_msgSend(v8, sel_fontDescriptor);
  id v10 = objc_msgSend(v9, sel_fontDescriptorWithSymbolicTraits_, 2);

  if (v10)
  {
    id v11 = v10;
    objc_msgSend(v8, sel_pointSize);
    id v12 = objc_msgSend(v7, sel_fontWithDescriptor_size_, v11);

    objc_msgSend(v5, sel_setFont_, v12);
  }
  else
  {
    __break(1u);
  }
}

id sub_1C2074218()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v0, sel_setNumberOfLines_, 0);
  uint64_t v1 = sub_1C214A5F0();
  uint64_t v3 = v2;
  id v4 = v0;
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  uint64_t v9 = v1;
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  id v5 = (void *)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_setAccessibilityIdentifier_, v5, v9, v3);

  id v6 = objc_msgSend(self, sel_secondaryLabelColor);
  objc_msgSend(v4, sel_setTextColor_, v6);

  objc_msgSend(v4, sel_setTextAlignment_, 4);
  objc_msgSend(v4, sel_setAdjustsFontForContentSizeCategory_, 1);
  id v7 = objc_msgSend(self, sel_preferredFontForTextStyle_, *MEMORY[0x1E4FB28C8]);
  objc_msgSend(v4, sel_setFont_, v7);

  return v4;
}

id PregnancyLactationInteractionCriticalAlertItem.interaction.getter()
{
  return *(id *)(v0 + 16);
}

uint64_t PregnancyLactationInteractionCriticalAlertItem.reuseIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1C2074464()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = *(void **)(v0 + 16);
  id v3 = objc_msgSend(v2, sel_medication);
  id v4 = objc_msgSend(v3, sel_semanticIdentifier);

  id v5 = objc_msgSend(v4, sel_description);
  sub_1C214A5F0();

  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_interactionType);
  type metadata accessor for HKDismissedPregnancyLactationInteractionType(0);
  sub_1C214A610();
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t PregnancyLactationInteractionCriticalAlertItem.showMoreAction.getter()
{
  uint64_t v1 = *(void *)(v0 + 40);
  swift_retain();
  return v1;
}

uint64_t PregnancyLactationInteractionCriticalAlertItem.dismissAction.getter()
{
  uint64_t v1 = *(void *)(v0 + 56);
  swift_retain();
  return v1;
}

void *PregnancyLactationInteractionCriticalAlertItem.__allocating_init(interaction:showMoreAction:dismissAction:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v10 = (void *)swift_allocObject();
  type metadata accessor for PregnancyLactationInteractionCriticalAlertCell();
  sub_1C2074C5C(&qword_1EA2C64B8, 255, (void (*)(uint64_t))type metadata accessor for PregnancyLactationInteractionCriticalAlertCell);
  uint64_t v11 = sub_1C21481D0();
  v10[2] = a1;
  v10[3] = v11;
  v10[4] = v12;
  v10[5] = a2;
  v10[6] = a3;
  v10[7] = a4;
  v10[8] = a5;
  return v10;
}

void *PregnancyLactationInteractionCriticalAlertItem.init(interaction:showMoreAction:dismissAction:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  type metadata accessor for PregnancyLactationInteractionCriticalAlertCell();
  sub_1C2074C5C(&qword_1EA2C64B8, 255, (void (*)(uint64_t))type metadata accessor for PregnancyLactationInteractionCriticalAlertCell);
  uint64_t v11 = sub_1C21481D0();
  v5[2] = a1;
  v5[3] = v11;
  v5[4] = v12;
  v5[5] = a2;
  v5[6] = a3;
  v5[7] = a4;
  v5[8] = a5;
  return v5;
}

void sub_1C207476C()
{
  id v1 = *(id *)(v0 + 16);
  sub_1C214B230();
}

uint64_t PregnancyLactationInteractionCriticalAlertItem.deinit()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return v0;
}

uint64_t PregnancyLactationInteractionCriticalAlertItem.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_1C207484C()
{
  return sub_1C214BB80();
}

uint64_t sub_1C2074890()
{
  return sub_1C2074464();
}

BOOL sub_1C20748B4(uint64_t *a1, uint64_t *a2)
{
  return _s19HealthMedicationsUI46PregnancyLactationInteractionCriticalAlertItemC2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

uint64_t sub_1C20748C0()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 136))();
}

void sub_1C2074904()
{
  id v1 = *(id *)(*(void *)v0 + 16);
  sub_1C214B230();
}

uint64_t sub_1C2074960()
{
  sub_1C214BB30();
  id v1 = *(id *)(*(void *)v0 + 16);
  sub_1C214B230();

  return sub_1C214BB80();
}

Swift::Void __swiftcall PregnancyLactationInteractionCriticalAlertItem.didSelectCell(_:in:)(UIView *_, UIViewController *in)
{
  (*(void (**)(UIView *, UIViewController *))(v2 + 40))(_, in);
}

uint64_t PregnancyLactationInteractionCriticalAlertItem.deselectionBehavior(in:)()
{
  type metadata accessor for PregnancyLactationInteractionCriticalAlertItem();
  sub_1C2074C5C(&qword_1EA2C64C0, v0, (void (*)(uint64_t))type metadata accessor for PregnancyLactationInteractionCriticalAlertItem);
  return sub_1C21484D0();
}

uint64_t sub_1C2074A64()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 40))();
}

uint64_t sub_1C2074A90()
{
  return sub_1C21484D0();
}

BOOL _s19HealthMedicationsUI46PregnancyLactationInteractionCriticalAlertItemC2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  sub_1C1F45050();
  id v4 = *(void **)(a1 + 16);
  id v5 = objc_msgSend(v4, sel_medication);
  id v6 = objc_msgSend(v5, sel_semanticIdentifier);

  id v7 = *(void **)(a2 + 16);
  id v8 = objc_msgSend(v7, sel_medication);
  id v9 = objc_msgSend(v8, sel_semanticIdentifier);

  char v10 = sub_1C214B220();
  if ((v10 & 1) == 0) {
    return 0;
  }
  id v11 = objc_msgSend(v4, sel_interactionType);
  return v11 == objc_msgSend(v7, sel_interactionType);
}

uint64_t type metadata accessor for PregnancyLactationInteractionCriticalAlertItem()
{
  return self;
}

uint64_t sub_1C2074C14(uint64_t a1, uint64_t a2)
{
  return sub_1C2074C5C(&qword_1EA2C64C8, a2, (void (*)(uint64_t))type metadata accessor for PregnancyLactationInteractionCriticalAlertItem);
}

uint64_t sub_1C2074C5C(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t method lookup function for PregnancyLactationInteractionCriticalAlertItem(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for PregnancyLactationInteractionCriticalAlertItem);
}

uint64_t dispatch thunk of PregnancyLactationInteractionCriticalAlertItem.uniqueIdentifier.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of PregnancyLactationInteractionCriticalAlertItem.__allocating_init(interaction:showMoreAction:dismissAction:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of PregnancyLactationInteractionCriticalAlertItem.hash(into:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of PregnancyLactationInteractionCriticalAlertItem.hashValue.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

void *InteractionFactorsItem.__allocating_init(factors:analyticsManager:roomType:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v6 = (void *)swift_allocObject();
  type metadata accessor for InteractionFactorsCell();
  sub_1C207531C(&qword_1EA2C5398, 255, (void (*)(uint64_t))type metadata accessor for InteractionFactorsCell);
  uint64_t v7 = sub_1C21481D0();
  v6[2] = a1;
  v6[3] = v7;
  v6[4] = v8;
  v6[5] = a2;
  v6[6] = a3;
  return v6;
}

uint64_t InteractionFactorsItem.factors.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t InteractionFactorsItem.reuseIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t InteractionFactorsItem.analyticsManager.getter()
{
  return swift_retain();
}

void *InteractionFactorsItem.init(factors:analyticsManager:roomType:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for InteractionFactorsCell();
  sub_1C207531C(&qword_1EA2C5398, 255, (void (*)(uint64_t))type metadata accessor for InteractionFactorsCell);
  uint64_t v7 = sub_1C21481D0();
  v3[2] = a1;
  v3[3] = v7;
  v3[4] = v8;
  v3[5] = a2;
  v3[6] = a3;
  return v3;
}

BOOL static InteractionFactorsItem.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_1C1FC1264(*(void **)(a1 + 16), *(void **)(a2 + 16));
}

uint64_t sub_1C2074ED0()
{
  swift_bridgeObjectRetain();
  sub_1C214A690();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t result = sub_1C214BB40();
  uint64_t v3 = *(void *)(v1 + 16);
  if (v3)
  {
    uint64_t v4 = v1 + 32;
    do
    {
      v4 += 8;
      uint64_t result = sub_1C214BB40();
      --v3;
    }
    while (v3);
  }
  return result;
}

void sub_1C2074F48(uint64_t a1, void *a2)
{
}

uint64_t InteractionFactorsItem.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t InteractionFactorsItem.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_1C2074FC8()
{
  sub_1C214BB30();
  sub_1C214A690();
  uint64_t v1 = *(void *)(v0 + 16);
  sub_1C214BB40();
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = v1 + 32;
    do
    {
      v3 += 8;
      sub_1C214BB40();
      --v2;
    }
    while (v2);
  }
  return sub_1C214BB80();
}

BOOL sub_1C2075044(uint64_t a1, uint64_t a2)
{
  return sub_1C1FC1264(*(void **)(*(void *)a1 + 16), *(void **)(*(void *)a2 + 16));
}

uint64_t sub_1C2075058()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 144))();
}

uint64_t sub_1C207509C()
{
  uint64_t v1 = *v0;
  sub_1C214A690();
  uint64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = *(void *)(v2 + 16);
  uint64_t result = sub_1C214BB40();
  if (v3)
  {
    uint64_t v5 = v2 + 32;
    do
    {
      v5 += 8;
      uint64_t result = sub_1C214BB40();
      --v3;
    }
    while (v3);
  }
  return result;
}

uint64_t sub_1C20750FC()
{
  sub_1C214BB30();
  uint64_t v1 = *v0;
  sub_1C214A690();
  uint64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = *(void *)(v2 + 16);
  sub_1C214BB40();
  if (v3)
  {
    uint64_t v4 = v2 + 32;
    do
    {
      v4 += 8;
      sub_1C214BB40();
      --v3;
    }
    while (v3);
  }
  return sub_1C214BB80();
}

void sub_1C2075178(void *a1)
{
  uint64_t v2 = (objc_class *)type metadata accessor for InteractionFactorsViewController();
  uint64_t v3 = (char *)objc_allocWithZone(v2);
  uint64_t v4 = (uint64_t *)&v3[qword_1EA2C54C0];
  uint64_t v11 = sub_1C214A5F0();
  uint64_t v12 = v5;
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  uint64_t v6 = v12;
  uint64_t v7 = v3;
  swift_bridgeObjectRelease();
  *uint64_t v4 = v11;
  v4[1] = v6;

  v10.receiver = v7;
  v10.super_class = v2;
  id v8 = objc_msgSendSuper2(&v10, sel_initWithCollectionViewLayout_, 0);
  id v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F67B78]), sel_initWithRootViewController_, v8);
  objc_msgSend(v9, sel_setModalPresentationStyle_, 2);
  objc_msgSend(v9, sel_setModalInPresentation_, 1);
  objc_msgSend(a1, sel_presentViewController_animated_completion_, v9, 1, 0);

  sub_1C2149550();
}

uint64_t sub_1C20752D4(uint64_t a1, uint64_t a2)
{
  return sub_1C207531C((unint64_t *)&unk_1EA2C64D0, a2, (void (*)(uint64_t))type metadata accessor for InteractionFactorsItem);
}

uint64_t sub_1C207531C(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for InteractionFactorsItem()
{
  return self;
}

uint64_t method lookup function for InteractionFactorsItem(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for InteractionFactorsItem);
}

uint64_t dispatch thunk of InteractionFactorsItem.uniqueIdentifier.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of InteractionFactorsItem.__allocating_init(factors:analyticsManager:roomType:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of InteractionFactorsItem.hash(into:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of InteractionFactorsItem.didSelectCell(_:in:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of InteractionFactorsItem.hashValue.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

id sub_1C207544C()
{
  *(void *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI26MedicationsRecordAllButton_logDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI26MedicationsRecordAllButton_recordAllViewModel] = 0;
  v7.receiver = v0;
  v7.super_class = (Class)type metadata accessor for MedicationsRecordAllButton();
  id v1 = objc_msgSendSuper2(&v7, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  sub_1C20756E0();
  objc_msgSend(v1, sel_addTarget_action_forControlEvents_, v1, sel_didTapRecord_, 64);
  sub_1C2077A0C(0, (unint64_t *)&qword_1EA2C3D80, (uint64_t (*)(uint64_t))sub_1C1F7C864, MEMORY[0x1E4FBBE00]);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1C214FCD0;
  uint64_t v3 = sub_1C2149C70();
  uint64_t v4 = MEMORY[0x1E4FB1138];
  *(void *)(v2 + 32) = v3;
  *(void *)(v2 + 40) = v4;
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1C1F7C8F0();
  id v5 = v1;
  sub_1C214B120();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return v5;
}

void sub_1C20755D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a3 + 16;
  swift_beginAccess();
  uint64_t v4 = MEMORY[0x1C8754850](v3);
  if (v4)
  {
    id v5 = (void *)v4;
    sub_1C2075B74();
  }
}

uint64_t sub_1C20756E0()
{
  sub_1C2077A0C(0, &qword_1EBF0C920, MEMORY[0x1E4FB1290], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v2 = (char *)v26 - v1;
  uint64_t v3 = sub_1C214B350();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1C214B280();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  objc_super v10 = (char *)v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1C214B3D0();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C214B3A0();
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E4FB1218], v7);
  sub_1C214B290();
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E4FB1270], v3);
  sub_1C214B270();
  uint64_t v15 = self;
  id v16 = objc_msgSend(v15, sel_systemBlueColor);
  sub_1C214B320();
  id v17 = objc_msgSend(v15, sel_secondarySystemGroupedBackgroundColor);
  sub_1C214B310();
  if (qword_1EBF0CA00 != -1) {
    swift_once();
  }
  id v18 = (id)qword_1EBF0CA18;
  swift_bridgeObjectRetain();
  sub_1C2147730();
  swift_bridgeObjectRelease();

  sub_1C214B390();
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v2, v14, v11);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v2, 0, 1, v11);
  uint64_t v19 = (void *)v26[1];
  sub_1C214B400();
  objc_msgSend(v19, sel_setRole_, 1);
  id v20 = objc_msgSend(v19, sel_titleLabel);
  if (v20)
  {
    uint64_t v21 = v20;
    objc_msgSend(v20, sel_setTextAlignment_, 1);
  }
  id v22 = objc_msgSend(v19, sel_titleLabel);
  if (v22)
  {
    uint64_t v23 = v22;
    objc_msgSend(v22, sel_setAdjustsFontForContentSizeCategory_, 1);
  }
  objc_msgSend(v19, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  LODWORD(v24) = 1144750080;
  objc_msgSend(v19, sel_setContentHuggingPriority_forAxis_, 0, v24);
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
}

uint64_t sub_1C2075B74()
{
  uint64_t v1 = v0;
  sub_1C2077A0C(0, &qword_1EBF0C920, MEMORY[0x1E4FB1290], MEMORY[0x1E4FBB718]);
  uint64_t v3 = MEMORY[0x1F4188790](v2 - 8);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v16 - v6;
  sub_1C214B3F0();
  uint64_t v8 = *(void *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI26MedicationsRecordAllButton_recordAllViewModel];
  if (v8)
  {
    uint64_t v9 = sub_1C214B3D0();
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v7, 1, v9))
    {
      objc_super v10 = self;
      swift_retain();
      id v11 = objc_msgSend(v10, sel_systemBlueColor);
      uint64_t v12 = v11;
      double v13 = 0.5;
      if (*(unsigned char *)(v8 + 16)) {
        double v13 = 1.0;
      }
      id v14 = objc_msgSend(v11, sel_colorWithAlphaComponent_, v13);

      sub_1C214B320();
      swift_release();
    }
  }
  sub_1C2077A70((uint64_t)v7, (uint64_t)v5);
  sub_1C214B400();
  objc_msgSend(v1, sel_setNeedsUpdateConfiguration);
  return sub_1C2077B04((uint64_t)v7, &qword_1EBF0C920, MEMORY[0x1E4FB1290]);
}

void sub_1C2075D58()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI26MedicationsRecordAllButton_recordAllViewModel);
  if (v1
    && *(unsigned char *)(v1 + 16) == 1
    && MEMORY[0x1C8754850](v0 + OBJC_IVAR____TtC19HealthMedicationsUI26MedicationsRecordAllButton_logDelegate))
  {
    swift_retain();
    sub_1C2089CF8();
    swift_release();
    swift_unknownObjectRelease();
  }
}

id sub_1C2075E6C()
{
  return sub_1C2076BBC(type metadata accessor for MedicationsRecordAllButton);
}

uint64_t type metadata accessor for MedicationsRecordAllButton()
{
  return self;
}

id sub_1C2075EF4()
{
  uint64_t v1 = OBJC_IVAR____TtC19HealthMedicationsUI27MedicationDoseRecordAllCell____lazy_storage___recordAllButton;
  uint64_t v2 = *(void **)(v0
                + OBJC_IVAR____TtC19HealthMedicationsUI27MedicationDoseRecordAllCell____lazy_storage___recordAllButton);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC19HealthMedicationsUI27MedicationDoseRecordAllCell____lazy_storage___recordAllButton);
  }
  else
  {
    uint64_t v4 = v0;
    id v5 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for MedicationsRecordAllButton()), sel_init);
    sub_1C214B0D0();
    objc_msgSend(v5, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    uint64_t v6 = *(void **)(v4 + v1);
    *(void *)(v4 + v1) = v5;
    id v3 = v5;

    uint64_t v2 = 0;
  }
  id v7 = v2;
  return v3;
}

uint64_t sub_1C2075F98()
{
  uint64_t v1 = sub_1C21497F0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2077A0C(0, (unint64_t *)&unk_1EA2C6518, type metadata accessor for MedicationDoseRecordAllItem, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v5 - 8);
  id v7 = (char *)&v25 - v6;
  uint64_t v8 = type metadata accessor for MedicationDoseRecordAllItem(0);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  id v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (uint64_t)v0 + OBJC_IVAR____TtC19HealthMedicationsUI27MedicationDoseRecordAllCell_item;
  swift_beginAccess();
  sub_1C2077944(v12, (uint64_t)v27, (uint64_t (*)(void))sub_1C1F24488);
  if (v27[3])
  {
    sub_1C1F23804(0, (unint64_t *)&qword_1EBF0C2F0);
    int v13 = swift_dynamicCast();
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v7, v13 ^ 1u, 1, v8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) != 1)
    {
      sub_1C2077898((uint64_t)v7, (uint64_t)v11);
      id v14 = (char *)sub_1C2075EF4();
      uint64_t v15 = &v11[*(int *)(v8 + 28)];
      MEMORY[0x1C8754850](v15);
      *(void *)&v14[OBJC_IVAR____TtC19HealthMedicationsUI26MedicationsRecordAllButton_logDelegate + 8] = *((void *)v15 + 1);
      swift_unknownObjectWeakAssign();

      swift_unknownObjectRelease();
      uint64_t v16 = (char *)sub_1C2075EF4();
      *(void *)&v16[OBJC_IVAR____TtC19HealthMedicationsUI26MedicationsRecordAllButton_recordAllViewModel] = *(void *)&v11[*(int *)(v8 + 24)];
      swift_retain_n();
      swift_release();
      sub_1C2075B74();

      swift_release();
      return sub_1C20779AC((uint64_t)v11, type metadata accessor for MedicationDoseRecordAllItem);
    }
  }
  else
  {
    sub_1C20779AC((uint64_t)v27, (uint64_t (*)(void))sub_1C1F24488);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
  }
  sub_1C2077B04((uint64_t)v7, (unint64_t *)&unk_1EA2C6518, type metadata accessor for MedicationDoseRecordAllItem);
  sub_1C21497A0();
  id v18 = v0;
  uint64_t v19 = sub_1C21497E0();
  os_log_type_t v20 = sub_1C214ABD0();
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v21 = (uint8_t *)swift_slowAlloc();
    uint64_t v22 = swift_slowAlloc();
    uint64_t v25 = v1;
    uint64_t v26 = v22;
    *(_DWORD *)uint64_t v21 = 136315138;
    sub_1C2077944(v12, (uint64_t)v27, (uint64_t (*)(void))sub_1C1F24488);
    sub_1C1F24488();
    uint64_t v23 = sub_1C214A630();
    v27[0] = sub_1C1F6FD54(v23, v24, &v26);
    sub_1C214B530();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C1F0B000, v19, v20, "Incorrect view model for MedicationDoseRecordAllItem: %s", v21, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C8754730](v22, -1, -1);
    MEMORY[0x1C8754730](v21, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v25);
  }
  else
  {

    return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
}

id sub_1C2076484(double a1, double a2, double a3, double a4)
{
  sub_1C2077A0C(0, &qword_1EBF0C620, MEMORY[0x1E4FB0F28], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v9 - 8);
  id v11 = (char *)&v58 - v10;
  uint64_t v12 = sub_1C21499D0();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v58 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI27MedicationDoseRecordAllCell____lazy_storage___recordAllButton] = 0;
  uint64_t v16 = &v4[OBJC_IVAR____TtC19HealthMedicationsUI27MedicationDoseRecordAllCell_item];
  id v17 = (objc_class *)type metadata accessor for MedicationDoseRecordAllCell();
  *(_OWORD *)uint64_t v16 = 0u;
  *((_OWORD *)v16 + 1) = 0u;
  *((void *)v16 + 4) = 0;
  v60.receiver = v4;
  v60.super_class = v17;
  id v18 = objc_msgSendSuper2(&v60, sel_initWithFrame_, a1, a2, a3, a4);
  sub_1C21499C0();
  id v19 = objc_msgSend(self, sel_clearColor);
  id v20 = objc_msgSend(v19, sel_colorWithAlphaComponent_, 0.0);

  sub_1C2149990();
  uint64_t v21 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
  uint64_t v59 = v12;
  v21(v11, v15, v12);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v11, 0, 1, v12);
  id v22 = v18;
  MEMORY[0x1C8752FF0](v11);

  id v23 = objc_msgSend(v22, sel_contentView);
  id v24 = sub_1C2075EF4();
  objc_msgSend(v23, sel_addSubview_, v24);

  id v25 = sub_1C2075EF4();
  id v26 = objc_msgSend(v25, sel_topAnchor);

  id v27 = objc_msgSend(v22, sel_contentView);
  id v28 = objc_msgSend(v27, sel_topAnchor);

  id v29 = objc_msgSend(v26, sel_constraintEqualToAnchor_constant_, v28, 16.0);
  objc_msgSend(v29, sel_setActive_, 1);

  id v30 = sub_1C2075EF4();
  id v31 = objc_msgSend(v30, sel_heightAnchor);

  id v32 = objc_msgSend(v31, sel_constraintGreaterThanOrEqualToConstant_, 41.0);
  objc_msgSend(v32, sel_setActive_, 1);

  id v33 = sub_1C2075EF4();
  id v34 = objc_msgSend(v33, sel_widthAnchor);

  id v35 = objc_msgSend(v34, sel_constraintGreaterThanOrEqualToConstant_, 178.0);
  objc_msgSend(v35, sel_setActive_, 1);

  id v36 = sub_1C2075EF4();
  id v37 = objc_msgSend(v36, sel_leadingAnchor);

  id v38 = objc_msgSend(v22, sel_contentView);
  id v39 = objc_msgSend(v38, sel_leadingAnchor);

  id v40 = objc_msgSend(v37, sel_constraintGreaterThanOrEqualToAnchor_, v39);
  objc_msgSend(v40, sel_setActive_, 1);

  id v41 = sub_1C2075EF4();
  id v42 = objc_msgSend(v41, sel_trailingAnchor);

  id v43 = objc_msgSend(v22, sel_contentView);
  id v44 = objc_msgSend(v43, sel_trailingAnchor);

  id v45 = objc_msgSend(v42, sel_constraintLessThanOrEqualToAnchor_, v44);
  objc_msgSend(v45, sel_setActive_, 1);

  id v46 = sub_1C2075EF4();
  id v47 = objc_msgSend(v46, sel_bottomAnchor);

  id v48 = objc_msgSend(v22, sel_contentView);
  id v49 = objc_msgSend(v48, sel_bottomAnchor);

  id v50 = objc_msgSend(v47, sel_constraintEqualToAnchor_, v49);
  objc_msgSend(v50, sel_setActive_, 1);

  id v51 = sub_1C2075EF4();
  id v52 = objc_msgSend(v51, sel_centerXAnchor);

  id v53 = objc_msgSend(v22, sel_contentView);
  id v54 = objc_msgSend(v53, sel_safeAreaLayoutGuide);

  id v55 = objc_msgSend(v54, sel_centerXAnchor);
  id v56 = objc_msgSend(v52, sel_constraintEqualToAnchor_, v55);

  objc_msgSend(v56, sel_setActive_, 1);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v59);
  return v22;
}

id sub_1C2076BA4()
{
  return sub_1C2076BBC(type metadata accessor for MedicationDoseRecordAllCell);
}

id sub_1C2076BBC(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t type metadata accessor for MedicationDoseRecordAllCell()
{
  return self;
}

uint64_t type metadata accessor for MedicationsRecordAllDataSource(uint64_t a1)
{
  return sub_1C1F20D10(a1, (uint64_t *)&unk_1EBF0C460);
}

uint64_t sub_1C2076C8C()
{
  uint64_t result = type metadata accessor for MedicationsDoseLogHeaderItem(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1C2076D3C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI27MedicationDoseRecordAllCell_item;
  swift_beginAccess();
  return sub_1C2077944(v3, a1, (uint64_t (*)(void))sub_1C1F24488);
}

uint64_t sub_1C2076DA4(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI27MedicationDoseRecordAllCell_item;
  swift_beginAccess();
  sub_1C1F32DDC(a1, v3);
  swift_endAccess();
  sub_1C2075F98();
  return sub_1C20779AC(a1, (uint64_t (*)(void))sub_1C1F24488);
}

uint64_t (*sub_1C2076E28(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1C2076E88;
}

uint64_t sub_1C2076E88(uint64_t a1, char a2)
{
  uint64_t result = swift_endAccess();
  if ((a2 & 1) == 0) {
    return sub_1C2075F98();
  }
  return result;
}

unint64_t sub_1C2076EBC()
{
  return 0xD000000000000012;
}

uint64_t sub_1C2076F40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C2147AC0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v10 = &v18[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = &v18[-v11];
  uint64_t v13 = *(void *)(a1 + *(int *)(a3 + 24))
      + OBJC_IVAR____TtC19HealthMedicationsUI32MedicationDoseRecordAllViewModel_logDate;
  swift_beginAccess();
  uint64_t v14 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v7 + 16);
  v14(v12, v13, v6);
  uint64_t v15 = *(void *)(a2 + *(int *)(a3 + 24))
      + OBJC_IVAR____TtC19HealthMedicationsUI32MedicationDoseRecordAllViewModel_logDate;
  swift_beginAccess();
  v14(v10, v15, v6);
  LOBYTE(v15) = sub_1C2147A50();
  uint64_t v16 = *(void (**)(unsigned char *, uint64_t))(v7 + 8);
  v16(v10, v6);
  v16(v12, v6);
  return v15 & 1;
}

uint64_t sub_1C20770F0()
{
  uint64_t v1 = sub_1C2147B20();
  uint64_t v23 = *(void *)(v1 - 8);
  uint64_t v24 = v1;
  MEMORY[0x1F4188790](v1);
  uint64_t v3 = (char *)&v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = (int *)type metadata accessor for MedicationDoseRecordAllItem(0);
  uint64_t v5 = *((void *)v4 - 1);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
  sub_1C2077A0C(0, (unint64_t *)&unk_1EBF0C980, type metadata accessor for MedicationDoseRecordAllItem, MEMORY[0x1E4FBBE00]);
  unint64_t v9 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v10 = swift_allocObject();
  long long v21 = xmmword_1C214FCD0;
  *(_OWORD *)(v10 + 16) = xmmword_1C214FCD0;
  uint64_t v20 = v10 + v9;
  uint64_t v22 = v0;
  uint64_t v11 = *(void *)(v0 + qword_1EBF0E9B8);
  uint64_t v12 = v0 + qword_1EBF0E9C8;
  MEMORY[0x1C8754850](v12);
  uint64_t v13 = *(void *)(v12 + 8);
  swift_retain();
  sub_1C2147B10();
  uint64_t v14 = (uint64_t *)&v7[v4[5]];
  type metadata accessor for MedicationDoseRecordAllCell();
  sub_1C20778FC(&qword_1EBF0C520, v15, (void (*)(uint64_t))type metadata accessor for MedicationDoseRecordAllCell);
  *uint64_t v14 = sub_1C21481D0();
  v14[1] = v16;
  *(void *)&v7[v4[7] + 8] = 0;
  uint64_t v17 = swift_unknownObjectWeakInit();
  *(void *)&v7[v4[6]] = v11;
  *(void *)(v17 + 8) = v13;
  swift_unknownObjectWeakAssign();
  swift_unknownObjectRelease();
  sub_1C2077898((uint64_t)v7, v20);
  sub_1C2077A0C(0, (unint64_t *)&qword_1EA2C2DD0, MEMORY[0x1E4F66468], v8);
  sub_1C2148540();
  *(_OWORD *)(swift_allocObject() + 16) = v21;
  sub_1C1F381C0(v10);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  sub_1C2147B10();
  sub_1C2147AD0();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v3, v24);
  sub_1C2148520();
  sub_1C21485B0();
  return swift_bridgeObjectRelease();
}

void sub_1C20774AC()
{
}

uint64_t sub_1C20774DC()
{
  sub_1C20779AC(v0 + qword_1EBF0E9C0, type metadata accessor for MedicationsDoseLogHeaderItem);
  swift_release();
  uint64_t v1 = v0 + qword_1EBF0E9C8;

  return sub_1C1F2E220(v1);
}

uint64_t sub_1C2077540()
{
  uint64_t v0 = sub_1C2148610();
  sub_1C20779AC(v0 + qword_1EBF0E9C0, type metadata accessor for MedicationsDoseLogHeaderItem);
  swift_release();
  sub_1C1F2E220(v0 + qword_1EBF0E9C8);

  return swift_deallocClassInstance();
}

uint64_t sub_1C20775E8()
{
  return type metadata accessor for MedicationsRecordAllDataSource(0);
}

uint64_t sub_1C20775F0()
{
  uint64_t v0 = sub_1C2148710();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2148660();
  uint64_t v4 = sub_1C2148700();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

uint64_t sub_1C20776C4()
{
  type metadata accessor for MedicationDoseRecordAllCell();
  sub_1C20778FC(&qword_1EBF0C520, v0, (void (*)(uint64_t))type metadata accessor for MedicationDoseRecordAllCell);
  return sub_1C214ACC0();
}

uint64_t sub_1C2077730@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = *v1 + qword_1EBF0E9C0;
  a1[3] = type metadata accessor for MedicationsDoseLogHeaderItem(0);
  a1[4] = sub_1C20778FC(&qword_1EBF0C398, 255, (void (*)(uint64_t))type metadata accessor for MedicationsDoseLogHeaderItem);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a1);
  return sub_1C2077944(v3, (uint64_t)boxed_opaque_existential_1, type metadata accessor for MedicationsDoseLogHeaderItem);
}

uint64_t sub_1C20777D0()
{
  return sub_1C2148B80();
}

uint64_t sub_1C207782C()
{
  return sub_1C20778FC(&qword_1EA2C6510, 255, (void (*)(uint64_t))type metadata accessor for MedicationsRecordAllDataSource);
}

uint64_t type metadata accessor for MedicationDoseRecordAllItem(uint64_t a1)
{
  return sub_1C1F20D10(a1, (uint64_t *)&unk_1EA2C6528);
}

uint64_t sub_1C2077898(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MedicationDoseRecordAllItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C20778FC(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C2077944(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C20779AC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_1C2077A0C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C2077A70(uint64_t a1, uint64_t a2)
{
  sub_1C2077A0C(0, &qword_1EBF0C920, MEMORY[0x1E4FB1290], MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C2077B04(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1C2077A0C(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1C2077B74()
{
  swift_unknownObjectWeakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

void sub_1C2077BAC(uint64_t a1, uint64_t a2)
{
  sub_1C20755D4(a1, a2, v2);
}

uint64_t sub_1C2077BB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v26 = a4;
  uint64_t v27 = a3;
  uint64_t v31 = a2;
  uint64_t v7 = sub_1C2147B20();
  uint64_t v28 = *(void *)(v7 - 8);
  uint64_t v29 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (int *)type metadata accessor for MedicationDoseRecordAllItem(0);
  uint64_t v11 = *((void *)v10 - 1);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(v4 + qword_1EBF0E9C8 + 8) = 0;
  swift_unknownObjectWeakInit();
  uint64_t v30 = v4;
  sub_1C2077944(a2, v4 + qword_1EBF0E9C0, type metadata accessor for MedicationsDoseLogHeaderItem);
  *(void *)(v4 + qword_1EBF0E9B8) = a1;
  uint64_t v14 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
  sub_1C2077A0C(0, (unint64_t *)&unk_1EBF0C980, type metadata accessor for MedicationDoseRecordAllItem, MEMORY[0x1E4FBBE00]);
  unint64_t v15 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v16 = swift_allocObject();
  long long v25 = xmmword_1C214FCD0;
  *(_OWORD *)(v16 + 16) = xmmword_1C214FCD0;
  swift_retain_n();
  sub_1C2147B10();
  uint64_t v17 = (uint64_t *)&v13[v10[5]];
  type metadata accessor for MedicationDoseRecordAllCell();
  sub_1C20778FC(&qword_1EBF0C520, v18, (void (*)(uint64_t))type metadata accessor for MedicationDoseRecordAllCell);
  *uint64_t v17 = sub_1C21481D0();
  v17[1] = v19;
  *(void *)&v13[v10[7] + 8] = 0;
  uint64_t v20 = swift_unknownObjectWeakInit();
  *(void *)&v13[v10[6]] = a1;
  *(void *)(v20 + 8) = v26;
  swift_unknownObjectWeakAssign();
  sub_1C2077898((uint64_t)v13, v16 + v15);
  sub_1C2077A0C(0, (unint64_t *)&qword_1EA2C2DD0, MEMORY[0x1E4F66468], v14);
  sub_1C2148540();
  *(_OWORD *)(swift_allocObject() + 16) = v25;
  sub_1C1F381C0(v16);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  sub_1C2147B10();
  sub_1C2147AD0();
  uint64_t v21 = v29;
  uint64_t v22 = *(void (**)(char *, uint64_t))(v28 + 8);
  v22(v9, v29);
  sub_1C2148520();
  v32[0] = 0;
  v32[1] = 0xE000000000000000;
  sub_1C214B7C0();
  swift_bridgeObjectRelease();
  strcpy((char *)v32, "MutableArray<");
  HIWORD(v32[1]) = -4864;
  sub_1C2147B10();
  sub_1C2147AD0();
  v22(v9, v21);
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  sub_1C214A6C0();
  uint64_t v23 = sub_1C2148590();
  sub_1C20779AC(v31, type metadata accessor for MedicationsDoseLogHeaderItem);
  return v23;
}

uint64_t *sub_1C207804C(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1C2147B20();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = (uint64_t *)((char *)a1 + v8);
    uint64_t v11 = (uint64_t *)((char *)a2 + v8);
    uint64_t v12 = v11[1];
    uint64_t v13 = *(uint64_t *)((char *)a2 + v9);
    *uint64_t v10 = *v11;
    v10[1] = v12;
    *(uint64_t *)((char *)a1 + v9) = v13;
    uint64_t v14 = a3[7];
    unint64_t v15 = (char *)a1 + v14;
    uint64_t v16 = (char *)a2 + v14;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_unknownObjectWeakCopyInit();
    *((void *)v15 + 1) = *((void *)v16 + 1);
  }
  return a1;
}

uint64_t sub_1C2078154(uint64_t a1)
{
  uint64_t v2 = sub_1C2147B20();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_release();

  return swift_unknownObjectWeakDestroy();
}

uint64_t sub_1C20781E4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1C2147B20();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)(a1 + v7);
  uint64_t v10 = (void *)(a2 + v7);
  uint64_t v11 = v10[1];
  uint64_t v12 = *(void *)(a2 + v8);
  *uint64_t v9 = *v10;
  v9[1] = v11;
  *(void *)(a1 + v8) = v12;
  uint64_t v13 = a3[7];
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_unknownObjectWeakCopyInit();
  *(void *)(v14 + 8) = *(void *)(v15 + 8);
  return a1;
}

uint64_t sub_1C207829C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1C2147B20();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  swift_retain();
  swift_release();
  uint64_t v10 = a2 + a3[7];
  *(void *)(swift_unknownObjectWeakCopyAssign() + 8) = *(void *)(v10 + 8);
  return a1;
}

uint64_t sub_1C2078370(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1C2147B20();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  uint64_t v8 = a2 + a3[7];
  *(void *)(swift_unknownObjectWeakTakeInit() + 8) = *(void *)(v8 + 8);
  return a1;
}

uint64_t sub_1C2078410(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1C2147B20();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  swift_release();
  uint64_t v12 = a2 + a3[7];
  *(void *)(swift_unknownObjectWeakTakeAssign() + 8) = *(void *)(v12 + 8);
  return a1;
}

uint64_t sub_1C20784CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C20784E0);
}

uint64_t sub_1C20784E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C2147B20();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_1C20785A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C20785B8);
}

uint64_t sub_1C20785B8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1C2147B20();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t sub_1C2078678()
{
  uint64_t result = sub_1C2147B20();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1C2078724()
{
  return sub_1C20778FC(&qword_1EBF0C538, 255, (void (*)(uint64_t))type metadata accessor for MedicationDoseRecordAllItem);
}

uint64_t type metadata accessor for MedicationLogDetailsViewController()
{
  uint64_t result = qword_1EA2C6570;
  if (!qword_1EA2C6570) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C20787BC()
{
  return swift_initClassMetadata2();
}

void sub_1C207883C(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = a3;
  sub_1C207BCCC();
}

void sub_1C2078864()
{
  id v1 = objc_msgSend(v0, sel_view);
  if (v1)
  {
    uint64_t v2 = v1;
    id v3 = sub_1C207B5F8(0);
    objc_msgSend(v2, sel_addGestureRecognizer_, v3);

    id v4 = objc_msgSend(v0, sel_navigationController);
    if (v4)
    {
      int v5 = v4;
      id v6 = objc_msgSend(v4, sel_navigationBar);

      id v7 = sub_1C207B5F8(1);
      objc_msgSend(v6, sel_addGestureRecognizer_, v7);
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_1C2078960(void *a1)
{
  id v1 = a1;
  sub_1C20789EC();
  v4.receiver = v1;
  v4.super_class = (Class)type metadata accessor for MedicationLogDetailsViewController();
  objc_msgSendSuper2(&v4, sel_viewDidLoad);
  id v2 = objc_msgSend(v1, sel_collectionView);
  if (v2)
  {
    id v3 = v2;
    objc_msgSend(v2, sel_setPreservesSuperviewLayoutMargins_, 1);

    sub_1C2078864();
  }
  else
  {
    __break(1u);
  }
}

void sub_1C20789EC()
{
  id v1 = objc_msgSend(v0, sel_navigationItem);
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB14A8]), sel_initWithBarButtonSystemItem_target_action_, 1, v0, sel_didTapCancel);
  objc_msgSend(v1, sel_setLeftBarButtonItem_, v2);

  id v3 = objc_msgSend(v0, sel_navigationItem);
  id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB14A8]), sel_initWithBarButtonSystemItem_target_action_, 0, v0, sel_didTapDone);
  objc_msgSend(v3, sel_setRightBarButtonItem_, v4);
}

id sub_1C2078AF4()
{
  uint64_t v1 = qword_1EA2C6568;
  id v2 = *(void **)(v0 + qword_1EA2C6568);
  if (v2)
  {
    id v3 = *(id *)(v0 + qword_1EA2C6568);
  }
  else
  {
    id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28C10]), sel_init);
    objc_msgSend(v4, sel_setTimeStyle_, 1);
    objc_msgSend(v4, sel_setDateStyle_, 0);
    int v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    id v2 = 0;
  }
  id v6 = v2;
  return v3;
}

void sub_1C2078B90()
{
}

void sub_1C2078BC0(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = a3;
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_1C2078BF4()
{
  swift_release();
  sub_1C1F2E220(v0 + qword_1EA2C6548);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(void **)(v0 + qword_1EA2C6568);
}

id sub_1C2078C74()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MedicationLogDetailsViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1C2078CAC(uint64_t a1)
{
  swift_release();
  sub_1C1F2E220(a1 + qword_1EA2C6548);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  objc_super v2 = *(void **)(a1 + qword_1EA2C6568);
}

uint64_t sub_1C2078D38()
{
  return type metadata accessor for MedicationLogDetailsViewController();
}

void sub_1C2078D40(void *a1)
{
  uint64_t v2 = v1;
  id v4 = (void *)sub_1C2147D40();
  objc_msgSend(a1, sel_deselectItemAtIndexPath_animated_, v4, 0);

  unint64_t v5 = sub_1C2147D80();
  if ((v5 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v6 = qword_1EA2C6560;
  uint64_t v7 = *(void *)(v2 + qword_1EA2C6560);
  if (v5 >= *(void *)(v7 + 16))
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  if (*(unsigned char *)(v7 + v5 + 32))
  {
    unint64_t v8 = sub_1C2147D80();
    if ((v8 & 0x8000000000000000) == 0)
    {
      uint64_t v9 = *(void *)(v2 + v6);
      if (v8 < *(void *)(v9 + 16))
      {
        if (*(unsigned char *)(v9 + v8 + 32) == 1 && sub_1C2078F70() == 1)
        {
          unint64_t v10 = (uint64_t *)(v2 + qword_1EA2C6558);
          swift_beginAccess();
          if (!sub_1C20C00F8(2, *v10))
          {
            sub_1C2079390();
            return;
          }
          goto LABEL_19;
        }
        return;
      }
LABEL_24:
      __break(1u);
      return;
    }
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (!sub_1C2078F70())
  {
    uint64_t v11 = (void *)sub_1C2147D40();
    id v12 = objc_msgSend(a1, sel_cellForItemAtIndexPath_, v11);

    if (v12)
    {
      type metadata accessor for MedicationLogDetailsUnitCell();
      if (swift_dynamicCastClass())
      {
        id v13 = sub_1C1FC5180();
        id v14 = sub_1C1FC6234();
        unsigned int v15 = objc_msgSend(v14, sel_isFirstResponder);

        if (v15)
        {
          objc_msgSend(v13, sel_endEditing_, 1);
        }
        else
        {
          id v16 = sub_1C1FC6234();
          objc_msgSend(v16, sel_becomeFirstResponder);

          id v12 = v13;
          id v13 = v16;
        }

        id v12 = v13;
      }
    }
    uint64_t v17 = (uint64_t *)(v2 + qword_1EA2C6558);
    swift_beginAccess();
    if (sub_1C20C00F8(2, *v17)) {
LABEL_19:
    }
      sub_1C2079048();
  }
}

unint64_t sub_1C2078F70()
{
  uint64_t v1 = v0;
  unint64_t result = sub_1C2147D80();
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v3 = *(void *)(v0 + qword_1EA2C6560);
  if (result >= *(void *)(v3 + 16))
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  char v4 = *(unsigned char *)(v3 + result + 32);
  unint64_t result = sub_1C2147D70();
  unint64_t v5 = result;
  if ((v4 & 1) == 0) {
    goto LABEL_7;
  }
  uint64_t v6 = (uint64_t *)(v0 + qword_1EA2C6558);
  unint64_t result = swift_beginAccess();
  if ((v5 & 0x8000000000000000) != 0)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v7 = *v6;
  if (v5 < *(void *)(*v6 + 16)) {
    return *(unsigned __int8 *)(v7 + v5 + 32);
  }
  __break(1u);
LABEL_7:
  if ((v5 & 0x8000000000000000) != 0)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v7 = *(void *)(v1 + qword_1EA2C6550);
  if (v5 < *(void *)(v7 + 16)) {
    return *(unsigned __int8 *)(v7 + v5 + 32);
  }
LABEL_14:
  __break(1u);
  return result;
}

void sub_1C2079048()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1C2147D90();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  unint64_t v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = &v1[qword_1EA2C6558];
  swift_beginAccess();
  uint64_t v7 = *(void *)v6;
  uint64_t v8 = *(void *)(*(void *)v6 + 16);
  if (v8)
  {
    if (*(unsigned char *)(v7 + 32) == 2)
    {
      unint64_t v9 = 0;
LABEL_7:
      id v13 = objc_msgSend(v1, sel_collectionView);
      if (v13)
      {
        id v14 = v13;
        MEMORY[0x1C874FEE0](v9, 1);
        unsigned int v15 = (void *)sub_1C2147D40();
        (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
        id v16 = objc_msgSend(v14, sel_cellForItemAtIndexPath_, v15);

        if (v16)
        {
          type metadata accessor for MedicationLogDetailsTimePickerCell();
          uint64_t v17 = swift_dynamicCastClass();
          if (v17)
          {
            uint64_t v18 = v17;
            swift_beginAccess();
            sub_1C205AC74(v9);
            swift_endAccess();
            uint64_t v19 = self;
            uint64_t v20 = (void *)swift_allocObject();
            v20[2] = v18;
            v20[3] = v1;
            v20[4] = v9;
            id v32 = sub_1C207BC70;
            id v33 = v20;
            uint64_t aBlock = MEMORY[0x1E4F143A8];
            uint64_t v29 = 1107296256;
            uint64_t v30 = sub_1C1F0E42C;
            uint64_t v31 = &block_descriptor_17;
            uint64_t v21 = _Block_copy(&aBlock);
            id v22 = v16;
            uint64_t v23 = v1;
            swift_release();
            uint64_t v24 = swift_allocObject();
            *(void *)(v24 + 16) = v18;
            id v32 = sub_1C207BC7C;
            id v33 = (void *)v24;
            uint64_t aBlock = MEMORY[0x1E4F143A8];
            uint64_t v29 = 1107296256;
            uint64_t v30 = sub_1C20B07EC;
            uint64_t v31 = &block_descriptor_23_0;
            long long v25 = _Block_copy(&aBlock);
            id v26 = v22;
            swift_release();
            objc_msgSend(v19, sel_animateWithDuration_animations_completion_, v21, v25, 0.4);
            _Block_release(v25);
            _Block_release(v21);
          }
        }
      }
      else
      {
        __break(1u);
      }
    }
    else
    {
      unint64_t v9 = 0;
      uint64_t v10 = v8 - 1;
      uint64_t v11 = v7 + 33;
      while (v10 != v9)
      {
        int v12 = *(unsigned __int8 *)(v11 + v9++);
        if (v12 == 2) {
          goto LABEL_7;
        }
      }
    }
  }
}

uint64_t sub_1C2079390()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1C2147D90();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  unint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = (int *)type metadata accessor for MedicationLogDetailsTimePickerItem();
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v9 = &v0[qword_1EA2C6558];
  uint64_t result = swift_beginAccess();
  uint64_t v11 = *(void *)v9;
  uint64_t v12 = *(void *)(*(void *)v9 + 16);
  if (v12)
  {
    if (*(unsigned char *)(v11 + 32) == 1)
    {
      unint64_t v13 = 0;
LABEL_7:
      uint64_t result = swift_beginAccess();
      if (*(void *)(*(void *)v9 + 16) <= v13)
      {
        __break(1u);
      }
      else
      {
        uint64_t v26 = v2;
        unint64_t v17 = v13 + 1;
        sub_1C1F8188C(v13 + 1, v13 + 1, 2);
        swift_endAccess();
        uint64_t v25 = *(void *)&v1[qword_1EA2C6538];
        uint64_t v18 = *(void *)(v25 + qword_1EA2C8380);
        v27[3] = (uint64_t)v6;
        v27[4] = sub_1C207BC84(&qword_1EA2C6588, (void (*)(uint64_t))type metadata accessor for MedicationLogDetailsTimePickerItem);
        boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v27);
        swift_retain();
        uint64_t v19 = v1;
        sub_1C2147B10();
        uint64_t v20 = &v8[v6[6]];
        *((void *)v20 + 1) = 0;
        swift_unknownObjectWeakInit();
        uint64_t v21 = (uint64_t *)&v8[v6[7]];
        type metadata accessor for MedicationLogDetailsTimePickerCell();
        sub_1C207BC84(&qword_1EA2C6590, (void (*)(uint64_t))type metadata accessor for MedicationLogDetailsTimePickerCell);
        *uint64_t v21 = sub_1C21481D0();
        v21[1] = v22;
        *(void *)&v8[v6[5]] = v18;
        *((void *)v20 + 1) = &off_1F1D78A50;
        swift_unknownObjectWeakAssign();

        sub_1C1F32D1C((uint64_t)v8, (uint64_t)boxed_opaque_existential_1);
        MEMORY[0x1C874FEE0](v17, 1);
        sub_1C21485E0();
        (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v26);
        return __swift_destroy_boxed_opaque_existential_0((uint64_t)v27);
      }
    }
    else
    {
      unint64_t v13 = 0;
      uint64_t v14 = v12 - 1;
      uint64_t v15 = v11 + 33;
      while (v14 != v13)
      {
        int v16 = *(unsigned __int8 *)(v15 + v13++);
        if (v16 == 1) {
          goto LABEL_7;
        }
      }
    }
  }
  return result;
}

uint64_t sub_1C20796A8(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5 = sub_1C2147D90();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2147D50();
  id v9 = a3;
  id v10 = a1;
  sub_1C2078D40(v9);

  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1C20797A4@<X0>(unsigned __int8 a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(v2 + qword_1EA2C6560);
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5)
  {
LABEL_17:
    uint64_t v24 = sub_1C2147D90();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(a2, 1, 1, v24);
  }
  int v6 = a1;
  uint64_t v7 = (uint64_t *)(v2 + qword_1EA2C6558);
  uint64_t v8 = qword_1EA2C6550;
  uint64_t v9 = v4 + 32;
  swift_beginAccess();
  uint64_t v10 = 0;
  while ((*(unsigned char *)(v9 + v10) & 1) != 0)
  {
    uint64_t v11 = *v7;
    uint64_t v12 = *(void *)(*v7 + 16);
    if (v12)
    {
      if (*(unsigned __int8 *)(v11 + 32) == v6) {
        goto LABEL_19;
      }
      uint64_t v13 = 0;
      uint64_t v14 = v11 + 33;
      uint64_t v15 = v12 - 1;
      while (v15 != v13)
      {
        int v16 = *(unsigned __int8 *)(v14 + v13++);
        if (v16 == v6) {
          goto LABEL_16;
        }
      }
    }
LABEL_3:
    if (++v10 == v5) {
      goto LABEL_17;
    }
  }
  uint64_t v17 = *(void *)(v2 + v8);
  uint64_t v18 = *(void *)(v17 + 16);
  if (!v18) {
    goto LABEL_3;
  }
  if (*(unsigned __int8 *)(v17 + 32) != v6)
  {
    uint64_t v13 = 0;
    uint64_t v19 = v17 + 33;
    uint64_t v20 = v18 - 1;
    while (v20 != v13)
    {
      int v21 = *(unsigned __int8 *)(v19 + v13++);
      if (v21 == v6) {
        goto LABEL_16;
      }
    }
    goto LABEL_3;
  }
LABEL_19:
  uint64_t v13 = 0;
LABEL_16:
  MEMORY[0x1C874FEE0](v13);
  uint64_t v22 = sub_1C2147D90();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(a2, 0, 1, v22);
}

id sub_1C2079944()
{
  ObjectType = (char *)swift_getObjectType();
  uint64_t v134 = sub_1C2147CF0();
  uint64_t v133 = *(void *)(v134 - 8);
  MEMORY[0x1F4188790](v134);
  v132 = (char *)&v126 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C207BAA8(0, &qword_1EBF0B1F0, MEMORY[0x1E4F27928]);
  uint64_t v3 = MEMORY[0x1F4188790](v2 - 8);
  uint64_t v131 = (uint64_t)&v126 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  v140 = (char *)&v126 - v5;
  uint64_t v6 = sub_1C2147AC0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  v135 = (char *)&v126 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  v137 = (char *)&v126 - v11;
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  v139 = (char *)&v126 - v13;
  MEMORY[0x1F4188790](v12);
  v136 = (char *)&v126 - v14;
  uint64_t v15 = sub_1C21497F0();
  v145 = *(void (***)(char *, uint64_t))(v15 - 8);
  uint64_t v146 = v15;
  uint64_t v16 = MEMORY[0x1F4188790](v15);
  v142 = (char *)&v126 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)&v126 - v18;
  sub_1C207BAA8(0, &qword_1EA2C6580, MEMORY[0x1E4F27DE8]);
  uint64_t v21 = MEMORY[0x1F4188790](v20 - 8);
  v143 = (char *)&v126 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v21);
  uint64_t v24 = (char *)&v126 - v23;
  uint64_t v25 = sub_1C2147D90();
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v27 = MEMORY[0x1F4188790](v25);
  v141 = (char *)&v126 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v27);
  uint64_t v30 = (char *)&v126 - v29;
  uint64_t v147 = swift_allocBox();
  v138 = v31;
  sub_1C20797A4(0, (uint64_t)v24);
  id v32 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48);
  if (v32(v24, 1, v25) == 1)
  {
    sub_1C207BAFC((uint64_t)v24, &qword_1EA2C6580, MEMORY[0x1E4F27DE8]);
LABEL_12:
    sub_1C21497D0();
    id v46 = sub_1C21497E0();
    os_log_type_t v47 = sub_1C214ABD0();
    if (os_log_type_enabled(v46, v47))
    {
      id v48 = (uint8_t *)swift_slowAlloc();
      uint64_t v49 = swift_slowAlloc();
      uint64_t aBlock = v49;
      *(_DWORD *)id v48 = 136315138;
      uint64_t v50 = sub_1C214BC10();
      uint64_t v155 = sub_1C1F6FD54(v50, v51, &aBlock);
      sub_1C214B530();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C1F0B000, v46, v47, "[%s] Couldn't reference unit value", v48, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C8754730](v49, -1, -1);
      MEMORY[0x1C8754730](v48, -1, -1);
    }

    v145[1](v19, v146);
    return (id)swift_deallocBox();
  }
  uint64_t v129 = v7;
  uint64_t v127 = v6;
  v128 = *(void (**)(char *, char *, uint64_t))(v26 + 32);
  v128(v30, v24, v25);
  v130 = v0;
  id result = objc_msgSend(v0, sel_collectionView);
  if (!result)
  {
    __break(1u);
LABEL_39:
    __break(1u);
    return result;
  }
  id v34 = result;
  id v35 = (void *)sub_1C2147D40();
  id v36 = objc_msgSend(v34, sel_cellForItemAtIndexPath_, v35);

  if (!v36)
  {
LABEL_11:
    (*(void (**)(char *, uint64_t))(v26 + 8))(v30, v25);
    goto LABEL_12;
  }
  type metadata accessor for MedicationLogDetailsUnitCell();
  if (!swift_dynamicCastClass())
  {

    goto LABEL_11;
  }
  id v37 = sub_1C1FC5180();
  uint64_t v126 = sub_1C1FC6DE8();
  char v39 = v38;

  id v40 = *(void (**)(char *, uint64_t))(v26 + 8);
  v40(v30, v25);
  if (v39) {
    goto LABEL_12;
  }
  uint64_t v41 = (uint64_t)v143;
  id v42 = v130;
  sub_1C20797A4(1u, (uint64_t)v143);
  if (v32((char *)v41, 1, v25) == 1)
  {
    id v43 = &qword_1EA2C6580;
    id v44 = (void (*)(uint64_t))MEMORY[0x1E4F27DE8];
    uint64_t v45 = v41;
LABEL_9:
    sub_1C207BAFC(v45, v43, v44);
LABEL_23:
    v63 = v142;
    sub_1C21497D0();
    uint64_t v64 = sub_1C21497E0();
    os_log_type_t v65 = sub_1C214ABD0();
    if (os_log_type_enabled(v64, v65))
    {
      uint64_t v66 = (uint8_t *)swift_slowAlloc();
      uint64_t v67 = swift_slowAlloc();
      uint64_t aBlock = v67;
      *(_DWORD *)uint64_t v66 = 136315138;
      uint64_t v68 = sub_1C214BC10();
      uint64_t v154 = sub_1C1F6FD54(v68, v69, &aBlock);
      sub_1C214B530();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C1F0B000, v64, v65, "[%s] Couldn't reference date value", v66, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C8754730](v67, -1, -1);
      MEMORY[0x1C8754730](v66, -1, -1);
    }

    v145[1](v63, v146);
    return (id)swift_deallocBox();
  }
  id v52 = v141;
  v128(v141, (char *)v41, v25);
  id result = objc_msgSend(v42, sel_collectionView);
  if (!result) {
    goto LABEL_39;
  }
  id v53 = result;
  id v54 = (void *)sub_1C2147D40();
  id v55 = objc_msgSend(v53, sel_cellForItemAtIndexPath_, v54);

  uint64_t v56 = v129;
  if (!v55)
  {
LABEL_22:
    v40(v52, v25);
    goto LABEL_23;
  }
  type metadata accessor for MedicationLogDetailsTimeCell();
  if (!swift_dynamicCastClass())
  {

    goto LABEL_22;
  }
  uint64_t v57 = (char *)sub_1C201402C();

  v40(v52, v25);
  uint64_t v58 = &v57[OBJC_IVAR____TtC19HealthMedicationsUI28MedicationLogDetailsTimeView_logDate];
  swift_beginAccess();
  uint64_t v59 = (uint64_t)v58;
  objc_super v60 = v140;
  sub_1C1FE0174(v59, (uint64_t)v140);

  id v61 = *(void (***)(char *, uint64_t))(v56 + 48);
  uint64_t v62 = v127;
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v61)(v60, 1, v127) == 1)
  {
    id v43 = &qword_1EBF0B1F0;
    id v44 = (void (*)(uint64_t))MEMORY[0x1E4F27928];
    uint64_t v45 = (uint64_t)v60;
    goto LABEL_9;
  }
  v145 = v61;
  v70 = *(void (**)(char *, char *, uint64_t))(v56 + 32);
  uint64_t v71 = v136;
  v70(v136, v60, v62);
  uint64_t v72 = v138;
  v142 = (char *)(v56 + 32);
  v141 = (char *)v70;
  v70(v138, v71, v62);
  uint64_t v146 = swift_allocObject();
  *(void *)(v146 + 16) = v42;
  ObjectType = *(char **)&v42[qword_1EA2C6538];
  v143 = (char *)qword_1EA2C8380;
  uint64_t v73 = *(void *)&ObjectType[qword_1EA2C8380]
      + OBJC_IVAR____TtC19HealthMedicationsUI27MedicationsDoseLogViewModel_logDate;
  swift_beginAccess();
  uint64_t v74 = v56;
  v75 = *(void (**)(char *, uint64_t, uint64_t))(v56 + 16);
  v76 = v139;
  v75(v139, v73, v62);
  id v77 = v137;
  uint64_t v78 = v72;
  v79 = v75;
  v75(v137, (uint64_t)v78, v62);
  sub_1C207BC84(&qword_1EA2C5070, MEMORY[0x1E4F27928]);
  uint64_t v80 = v42;
  LOBYTE(v73) = sub_1C214A5A0();
  uint64_t v81 = *(void (**)(char *, uint64_t))(v74 + 8);
  v81(v77, v62);
  uint64_t v129 = v74 + 8;
  v81(v76, v62);
  if ((v73 & 1) != 0 || v80[qword_1EA2C6540] != 1)
  {
    double v88 = *(double *)&v126;
    uint64_t v89 = (uint64_t)v139;
    uint64_t v90 = v127;
    v79(v139, (uint64_t)v138, v127);
    sub_1C207AD5C(v89, 0, v80, v88);
    swift_release();
    v81((char *)v89, v90);
  }
  else
  {
    v140 = v80;
    uint64_t v82 = ObjectType;
    v83 = v143;
    swift_retain();
    uint64_t v84 = v131;
    sub_1C20B754C(v131);
    swift_release();
    uint64_t v85 = v127;
    int v86 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v145)(v84, 1, v127);
    v136 = (char *)v81;
    if (v86 == 1)
    {
      uint64_t v87 = *(void *)&v83[(void)v82] + OBJC_IVAR____TtC19HealthMedicationsUI27MedicationsDoseLogViewModel_logDate;
      swift_beginAccess();
      v79(v135, v87, v85);
      sub_1C207BAFC(v84, &qword_1EBF0B1F0, MEMORY[0x1E4F27928]);
    }
    else
    {
      ((void (*)(char *, uint64_t, uint64_t))v141)(v135, v84, v85);
    }
    uint64_t v91 = v134;
    uint64_t v92 = v133;
    v93 = v132;
    sub_1C2147CB0();
    sub_1C2147BD0();
    (*(void (**)(char *, uint64_t))(v92 + 8))(v93, v91);
    id v94 = sub_1C2078AF4();
    v95 = (void *)sub_1C214A5B0();
    swift_bridgeObjectRelease();
    v96 = (void *)sub_1C2147A00();
    id v97 = objc_msgSend(v94, sel_hm_localizableTimeStringKeyWithPrefix_date_, v95, v96);

    v145 = (void (**)(char *, uint64_t))sub_1C214A5F0();
    if (qword_1EBF0CA00 != -1) {
      swift_once();
    }
    v98 = (void *)qword_1EBF0CA18;
    sub_1C1F72888(0, qword_1EBF0B8A0, (unint64_t *)&qword_1EBF0C9F0);
    uint64_t v99 = swift_allocObject();
    *(_OWORD *)(v99 + 16) = xmmword_1C214FCD0;
    id v100 = v98;
    swift_bridgeObjectRetain();
    id v101 = sub_1C2078AF4();
    v102 = (void *)sub_1C2147A00();
    id v103 = objc_msgSend(v101, sel_stringFromDate_, v102);

    uint64_t v104 = sub_1C214A5F0();
    uint64_t v106 = v105;

    *(void *)(v99 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v99 + 64) = sub_1C1F31298();
    *(void *)(v99 + 32) = v104;
    *(void *)(v99 + 40) = v106;
    sub_1C2147730();
    if (*(void *)(v99 + 16))
    {
      sub_1C214A5C0();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    v107 = (void *)sub_1C214A5B0();
    swift_bridgeObjectRelease();
    v145 = (void (**)(char *, uint64_t))objc_msgSend(self, sel_alertControllerWithTitle_message_preferredStyle_, 0, v107, 0);

    id v108 = (id)qword_1EBF0CA18;
    swift_bridgeObjectRetain();
    sub_1C2147730();
    swift_bridgeObjectRelease();

    v109 = (void *)sub_1C214A5B0();
    swift_bridgeObjectRelease();
    v110 = (char *)self;
    v142 = v110;
    ObjectType = (char *)objc_msgSend(v110, sel_actionWithTitle_style_handler_, v109, 1, 0);

    id v111 = (id)qword_1EBF0CA18;
    swift_bridgeObjectRetain();
    sub_1C2147730();
    swift_bridgeObjectRelease();

    v112 = (void *)swift_allocObject();
    uint64_t v113 = v146;
    uint64_t v114 = v147;
    v112[2] = sub_1C207BB90;
    v112[3] = v113;
    uint64_t v115 = v126;
    v112[4] = v126;
    v112[5] = v114;
    swift_retain();
    swift_retain();
    v116 = (void *)sub_1C214A5B0();
    swift_bridgeObjectRelease();
    v152 = sub_1C207BB9C;
    v153 = v112;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v149 = 1107296256;
    v150 = sub_1C203D9F8;
    v151 = &block_descriptor_23;
    v117 = _Block_copy(&aBlock);
    swift_release();
    v143 = (char *)objc_msgSend(v110, sel_actionWithTitle_style_handler_, v116, 0, v117);
    _Block_release(v117);

    id v118 = (id)qword_1EBF0CA18;
    swift_bridgeObjectRetain();
    sub_1C2147730();
    swift_bridgeObjectRelease();

    v119 = (void *)swift_allocObject();
    v119[2] = sub_1C207BB90;
    v119[3] = v113;
    v119[4] = v115;
    v119[5] = v114;
    swift_retain();
    swift_retain();
    v120 = (void *)sub_1C214A5B0();
    swift_bridgeObjectRelease();
    v152 = sub_1C207BC08;
    v153 = v119;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v149 = 1107296256;
    v150 = sub_1C203D9F8;
    v151 = &block_descriptor_11;
    v121 = _Block_copy(&aBlock);
    swift_release();
    id v122 = objc_msgSend(v142, sel_actionWithTitle_style_handler_, v120, 0, v121);
    _Block_release(v121);

    v124 = ObjectType;
    v123 = v145;
    objc_msgSend(v145, sel_addAction_, ObjectType);
    objc_msgSend(v123, sel_addAction_, v122);
    v125 = v143;
    objc_msgSend(v123, sel_addAction_, v143);
    objc_msgSend(v140, sel_presentViewController_animated_completion_, v123, 1, 0);
    swift_release();

    ((void (*)(char *, uint64_t))v136)(v135, v127);
  }
  return (id)swift_release();
}

uint64_t sub_1C207AD5C(uint64_t a1, char a2, char *a3, double a4)
{
  uint64_t v8 = sub_1C2147AC0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_msgSend(a3, sel_dismissViewControllerAnimated_completion_, 1, 0);
  uint64_t v12 = *(void *)(*(void *)&a3[qword_1EA2C6538] + qword_1EA2C8380);
  *(double *)(v12 + 40) = a4;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  uint64_t v13 = v12 + OBJC_IVAR____TtC19HealthMedicationsUI27MedicationsDoseLogViewModel_logDate;
  swift_beginAccess();
  uint64_t v14 = *(void (**)(uint64_t, char *, uint64_t))(v9 + 40);
  swift_retain();
  v14(v13, v11, v8);
  swift_endAccess();
  swift_release();
  uint64_t result = MEMORY[0x1C8754850](&a3[qword_1EA2C6548]);
  if (result)
  {
    uint64_t v16 = swift_retain();
    sub_1C2088814(v16, a2 & 1);
    swift_release();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1C207AF1C(double a1, uint64_t a2, void (*a3)(char *, uint64_t, double), uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9 = sub_1C2147AC0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = swift_projectBox();
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v13, v9);
  a3(v12, a6, a1);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

void sub_1C207B058(void *a1)
{
  id v1 = a1;
  sub_1C2079944();
}

id sub_1C207B0A0(void *a1)
{
  return objc_msgSend(a1, sel_dismissViewControllerAnimated_completion_, 1, 0);
}

uint64_t sub_1C207B0B4(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_1C2147D90();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v9 = sub_1C1F31634();
  objc_msgSend(v9, sel_setAlpha_, 0.0);

  id v10 = objc_msgSend(self, sel_clearColor);
  objc_msgSend(a1, sel_setBackgroundColor_, v10);

  MEMORY[0x1C874FEE0](a3, 1);
  sub_1C2148560();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void sub_1C207B204(char a1, void *a2)
{
  if (a1)
  {
    id v3 = sub_1C1F31634();
    objc_msgSend(v3, sel_setAlpha_, 1.0);

    id v4 = objc_msgSend(self, sel_systemBackgroundColor);
    objc_msgSend(a2, sel_setBackgroundColor_, v4);
  }
}

id sub_1C207B29C(uint64_t a1)
{
  sub_1C207BAA8(0, &qword_1EBF0B1F0, MEMORY[0x1E4F27928]);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v21 - v4;
  sub_1C207BAA8(0, &qword_1EA2C6580, MEMORY[0x1E4F27DE8]);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v21 - v7;
  uint64_t v9 = sub_1C2147D90();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C20797A4(1u, (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
    return (id)sub_1C207BAFC((uint64_t)v8, &qword_1EA2C6580, MEMORY[0x1E4F27DE8]);
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
  id result = objc_msgSend(v1, sel_collectionView);
  if (result)
  {
    uint64_t v14 = result;
    uint64_t v15 = (void *)sub_1C2147D40();
    id v16 = objc_msgSend(v14, sel_cellForItemAtIndexPath_, v15);

    if (v16)
    {
      type metadata accessor for MedicationLogDetailsTimeCell();
      if (swift_dynamicCastClass())
      {
        id v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28C10]), sel_init);
        objc_msgSend(v17, sel_setDateStyle_, 0);
        objc_msgSend(v17, sel_setTimeStyle_, 1);
        id v18 = sub_1C201402C();
        uint64_t v19 = sub_1C2147AC0();
        uint64_t v20 = *(void *)(v19 - 8);
        (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v5, a1, v19);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v5, 0, 1, v19);
        sub_1C2014B84((uint64_t)v5);
      }
      else
      {
      }
    }
    return (id)(*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1C207B5F8(char a1)
{
  id v3 = objc_msgSend(v1, sel_view);
  if (v3)
  {
    uint64_t v7 = v3;
    sub_1C1F32E5C();
    uint64_t v4 = sub_1C214BA70();
  }
  else
  {
    uint64_t v4 = 0;
  }
  id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1D38]), sel_initWithTarget_action_, v4, sel_endEditing_);
  swift_unknownObjectRelease();
  objc_msgSend(v5, sel_setCancelsTouchesInView_, a1 & 1);
  return v5;
}

id sub_1C207B6C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v38 = a8;
  uint64_t v42 = a7;
  uint64_t v43 = a6;
  uint64_t v39 = a2;
  uint64_t v40 = a4;
  uint64_t v41 = a1;
  uint64_t v11 = (int *)type metadata accessor for MedicationLogDetailsHeaderItem();
  uint64_t v12 = MEMORY[0x1F4188790](v11);
  uint64_t v14 = &v37[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v12);
  id v16 = &v37[-v15];
  id v17 = &v8[qword_1EA2C6548];
  *(void *)&v8[qword_1EA2C6548 + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v8[qword_1EA2C6550] = &unk_1F1D73CA0;
  *(void *)&v8[qword_1EA2C6558] = &unk_1F1D73CC8;
  uint64_t v18 = qword_1EA2C6560;
  uint64_t v19 = qword_1EA2C2760;
  uint64_t v20 = v8;
  if (v19 != -1) {
    swift_once();
  }
  *(void *)&v8[v18] = qword_1EA2C8370;
  *(void *)&v20[qword_1EA2C6568] = 0;
  v20[qword_1EA2C6540] = v38 & 1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C2147B10();
  uint64_t v21 = &v16[v11[5]];
  uint64_t v22 = off_1EA2C6478;
  *uint64_t v21 = qword_1EA2C6470;
  v21[1] = v22;
  uint64_t v23 = &v16[v11[6]];
  void *v23 = v39;
  v23[1] = a3;
  uint64_t v24 = &v16[v11[7]];
  *uint64_t v24 = v40;
  v24[1] = a5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C2073F14((uint64_t)v16, (uint64_t)v14);
  type metadata accessor for MedicationLogDetailsDataSource();
  swift_allocObject();
  uint64_t v25 = swift_retain();
  uint64_t v26 = sub_1C210F014(v25, (uint64_t)v14);
  swift_release();
  uint64_t v27 = qword_1EA2C6538;
  *(void *)&v20[qword_1EA2C6538] = v26;
  *((void *)v17 + 1) = v42;
  swift_unknownObjectWeakAssign();

  sub_1C2148820();
  sub_1C1F72888(0, (unint64_t *)&qword_1EA2C69F0, (unint64_t *)&qword_1EA2C2CE0);
  uint64_t v28 = swift_allocObject();
  *(_OWORD *)(v28 + 16) = xmmword_1C214FCD0;
  uint64_t v29 = MEMORY[0x1E4F66470];
  *(void *)(v28 + 32) = *(void *)&v20[v27];
  *(void *)(v28 + 40) = v29;
  swift_retain();
  sub_1C2148850();
  uint64_t v30 = (void *)sub_1C2148AC0();
  id v31 = v30;
  swift_retain();
  sub_1C210F5CC((uint64_t)v30, (uint64_t)&off_1F1D78A50);
  swift_release();

  uint64_t v32 = qword_1EBF0CA00;
  id v33 = v31;
  if (v32 != -1) {
    swift_once();
  }
  id v34 = (id)qword_1EBF0CA18;
  swift_bridgeObjectRetain();
  sub_1C2147730();
  swift_bridgeObjectRelease();

  id v35 = (void *)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  objc_msgSend(v33, sel_setTitle_, v35);

  sub_1C2073D64((uint64_t)v16);
  return v33;
}

void sub_1C207BAA8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C214B4F0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1C207BAFC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1C207BAA8(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1C207BB58()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C207BB90(uint64_t a1, char a2, double a3)
{
  return sub_1C207AD5C(a1, a2, *(char **)(v3 + 16), a3);
}

uint64_t sub_1C207BB9C(uint64_t a1)
{
  return sub_1C207AF1C(*(double *)(v1 + 32), a1, *(void (**)(char *, uint64_t, double))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 40), 1);
}

uint64_t objectdestroy_4Tm()
{
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1C207BC08(uint64_t a1)
{
  return sub_1C207AF1C(*(double *)(v1 + 32), a1, *(void (**)(char *, uint64_t, double))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 40), 0);
}

uint64_t sub_1C207BC30()
{
  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1C207BC70()
{
  return sub_1C207B0B4(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

void sub_1C207BC7C(char a1)
{
  sub_1C207B204(a1, *(void **)(v1 + 16));
}

uint64_t sub_1C207BC84(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C207BCCC()
{
  *(void *)&v0[qword_1EA2C6548 + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v0[qword_1EA2C6550] = &unk_1F1D73F10;
  *(void *)&v0[qword_1EA2C6558] = &unk_1F1D73F38;
  uint64_t v1 = qword_1EA2C6560;
  if (qword_1EA2C2760 != -1) {
    swift_once();
  }
  *(void *)&v0[v1] = qword_1EA2C8370;
  *(void *)&v0[qword_1EA2C6568] = 0;
  swift_bridgeObjectRetain();

  sub_1C214B910();
  __break(1u);
}

unint64_t sub_1C207BDDC()
{
  return 0xD000000000000014;
}

uint64_t sub_1C207BE64()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC19HealthMedicationsUI30MedicationsDayHistoryEmptyItem_identifier;
  uint64_t v2 = sub_1C2147B20();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_1C207BF2C()
{
  return type metadata accessor for MedicationsDayHistoryEmptyItem();
}

uint64_t type metadata accessor for MedicationsDayHistoryEmptyItem()
{
  uint64_t result = qword_1EA2C6598;
  if (!qword_1EA2C6598) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C207BF80()
{
  uint64_t result = sub_1C2147B20();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1C207C01C()
{
  return sub_1C214BB80();
}

uint64_t sub_1C207C070()
{
  swift_bridgeObjectRetain();
  sub_1C214A690();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1C207C0D8()
{
  return sub_1C214BB80();
}

uint64_t sub_1C207C140()
{
  uint64_t v1 = *(void *)(*v0 + OBJC_IVAR____TtC19HealthMedicationsUI30MedicationsDayHistoryEmptyItem_reuseIdentifier);
  swift_bridgeObjectRetain();
  return v1;
}

unint64_t sub_1C207C180()
{
  return sub_1C207BDDC();
}

uint64_t sub_1C207C1A4(void *a1, void *a2)
{
  uint64_t v2 = (void *)(*a1 + OBJC_IVAR____TtC19HealthMedicationsUI30MedicationsDayHistoryEmptyItem_bodyText);
  if (*v2 == *(void *)(*a2 + OBJC_IVAR____TtC19HealthMedicationsUI30MedicationsDayHistoryEmptyItem_bodyText)
    && v2[1] == *(void *)(*a2 + OBJC_IVAR____TtC19HealthMedicationsUI30MedicationsDayHistoryEmptyItem_bodyText + 8))
  {
    return 1;
  }
  else
  {
    return sub_1C214BA80();
  }
}

unint64_t sub_1C207C1E4()
{
  unint64_t result = qword_1EA2C65A8;
  if (!qword_1EA2C65A8)
  {
    type metadata accessor for MedicationsDayHistoryEmptyItem();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C65A8);
  }
  return result;
}

uint64_t sub_1C207C23C(uint64_t a1)
{
  uint64_t v12 = MEMORY[0x1E4FBC860];
  sub_1C1F70524(0, 0, 0);
  uint64_t v2 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  if (v2)
  {
    uint64_t v3 = 0;
    do
    {
      uint64_t v4 = *(void *)(a1 + 32 + 8 * v3);
      unint64_t v5 = 0xE000000000000000;
      switch(v4)
      {
        case 0:
          break;
        case 1:
        case 2:
        case 3:
          sub_1C214B7C0();
          swift_bridgeObjectRelease();
          sub_1C214A6C0();
          swift_bridgeObjectRelease();
          sub_1C214A6C0();
          sub_1C214A6C0();
          swift_bridgeObjectRelease();
          if (qword_1EBF0CA00 != -1) {
            swift_once();
          }
          id v6 = (id)qword_1EBF0CA18;
          swift_bridgeObjectRetain();
          uint64_t v4 = sub_1C2147730();
          unint64_t v5 = v7;
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease();
          break;
        default:
          sub_1C214B910();
          __break(1u);
          JUMPOUT(0x1C207C554);
      }
      unint64_t v9 = *(void *)(v12 + 16);
      unint64_t v8 = *(void *)(v12 + 24);
      if (v9 >= v8 >> 1) {
        sub_1C1F70524(v8 > 1, v9 + 1, 1);
      }
      ++v3;
      *(void *)(v12 + 16) = v9 + 1;
      uint64_t v10 = v12 + 16 * v9;
      *(void *)(v10 + 32) = v4;
      *(void *)(v10 + 40) = v5;
    }
    while (v2 != v3);
  }
  swift_bridgeObjectRelease();
  return v12;
}

__n128 sub_1C207C564()
{
  __asm { FMOV            V0.2D, #16.0 }
  *(__n128 *)&qword_1EA2C80B0 = result;
  *(__n128 *)&qword_1EA2C80C0 = result;
  return result;
}

uint64_t sub_1C207C578(uint64_t a1, void *a2)
{
  sub_1C1F2116C(a1, (uint64_t)v5);
  uint64_t v3 = *a2 + OBJC_IVAR____TtC19HealthMedicationsUI22InteractionFactorsCell_item;
  swift_beginAccess();
  sub_1C1F32DDC((uint64_t)v5, v3);
  swift_endAccess();
  sub_1C207EBC4();
  return sub_1C1F374E4((uint64_t)v5);
}

uint64_t sub_1C207C5EC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI22InteractionFactorsCell_item;
  swift_beginAccess();
  return sub_1C1F2116C(v3, a1);
}

uint64_t sub_1C207C640(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI22InteractionFactorsCell_item;
  swift_beginAccess();
  sub_1C1F32DDC(a1, v3);
  swift_endAccess();
  sub_1C207EBC4();
  return sub_1C1F374E4(a1);
}

uint64_t (*sub_1C207C6B0(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1C207C710;
}

uint64_t sub_1C207C710(uint64_t a1, char a2)
{
  uint64_t result = swift_endAccess();
  if ((a2 & 1) == 0) {
    return sub_1C207EBC4();
  }
  return result;
}

id sub_1C207C744()
{
  uint64_t v1 = OBJC_IVAR____TtC19HealthMedicationsUI22InteractionFactorsCell____lazy_storage___titleLabel;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI22InteractionFactorsCell____lazy_storage___titleLabel);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI22InteractionFactorsCell____lazy_storage___titleLabel);
  }
  else
  {
    id v4 = sub_1C207C7A4();
    unint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_1C207C7A4()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8E0);
  uint64_t v1 = (void *)sub_1C214B0A0();
  objc_msgSend(v0, sel_setFont_, v1);

  id v2 = objc_msgSend(self, sel_labelColor);
  objc_msgSend(v0, sel_setTextColor_, v2);

  uint64_t v7 = sub_1C214A5F0();
  uint64_t v8 = v3;
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  id v4 = v0;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  unint64_t v5 = (void *)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_setAccessibilityIdentifier_, v5, v7, v8);

  objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v4, sel_setNumberOfLines_, 0);
  objc_msgSend(v4, sel_setAdjustsFontForContentSizeCategory_, 1);
  return v4;
}

id sub_1C207C988()
{
  uint64_t v1 = OBJC_IVAR____TtC19HealthMedicationsUI22InteractionFactorsCell____lazy_storage___subtitleLabel;
  id v2 = *(void **)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI22InteractionFactorsCell____lazy_storage___subtitleLabel);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI22InteractionFactorsCell____lazy_storage___subtitleLabel);
  }
  else
  {
    uint64_t v4 = v0;
    id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
    sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8E0);
    id v6 = (void *)sub_1C214B0A0();
    objc_msgSend(v5, sel_setFont_, v6);

    id v7 = objc_msgSend(self, sel_secondaryLabelColor);
    objc_msgSend(v5, sel_setTextColor_, v7);

    uint64_t v14 = sub_1C214A5F0();
    uint64_t v15 = v8;
    swift_bridgeObjectRetain();
    sub_1C214A6C0();
    id v9 = v5;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_1C214A6C0();
    swift_bridgeObjectRelease();
    uint64_t v10 = (void *)sub_1C214A5B0();
    swift_bridgeObjectRelease();
    objc_msgSend(v9, sel_setAccessibilityIdentifier_, v10, v14, v15);

    objc_msgSend(v9, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    objc_msgSend(v9, sel_setNumberOfLines_, 0);
    objc_msgSend(v9, sel_setAdjustsFontForContentSizeCategory_, 1);
    uint64_t v11 = *(void **)(v4 + v1);
    *(void *)(v4 + v1) = v9;
    id v3 = v9;

    id v2 = 0;
  }
  id v12 = v2;
  return v3;
}

id sub_1C207CBB0()
{
  uint64_t v1 = OBJC_IVAR____TtC19HealthMedicationsUI22InteractionFactorsCell____lazy_storage___editButton;
  id v2 = *(void **)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI22InteractionFactorsCell____lazy_storage___editButton);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI22InteractionFactorsCell____lazy_storage___editButton);
  }
  else
  {
    id v4 = sub_1C207CC14(v0);
    id v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    id v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_1C207CC14(uint64_t a1)
{
  sub_1C207F10C(0, &qword_1EBF0C920, MEMORY[0x1E4FB1290], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v2 - 8);
  id v4 = (char *)&v18 - v3;
  uint64_t v5 = sub_1C214B3D0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB14D0]), sel_init);
  uint64_t v18 = sub_1C214A5F0();
  uint64_t v19 = v10;
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  uint64_t v11 = v18;
  uint64_t v12 = v19;
  id v13 = v9;
  swift_bridgeObjectRelease();
  uint64_t v18 = v11;
  uint64_t v19 = v12;
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  uint64_t v14 = (void *)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  objc_msgSend(v13, sel_setAccessibilityIdentifier_, v14);

  objc_msgSend(v13, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  LODWORD(v15) = 1148846080;
  objc_msgSend(v13, sel_setContentCompressionResistancePriority_forAxis_, 0, v15);
  objc_msgSend(v13, sel_addTarget_action_forControlEvents_, a1, sel_editButtonTapped_, 64);
  objc_msgSend(v13, sel_setContentHorizontalAlignment_, 4);
  sub_1C214B380();
  if (qword_1EBF0CA00 != -1) {
    swift_once();
  }
  id v16 = (id)qword_1EBF0CA18;
  swift_bridgeObjectRetain();
  sub_1C2147730();
  swift_bridgeObjectRelease();

  sub_1C214B390();
  sub_1C214B2B0();
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v4, v8, v5);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
  sub_1C214B400();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return v13;
}

void sub_1C207CFC4(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC19HealthMedicationsUI22InteractionFactorsCell_currentConstraints);
  *(void *)(v1 + OBJC_IVAR____TtC19HealthMedicationsUI22InteractionFactorsCell_currentConstraints) = a1;
  unint64_t v3 = swift_bridgeObjectRetain();
  unsigned __int8 v4 = sub_1C1FC1B4C(v3, v2);
  swift_bridgeObjectRelease();
  if (v4)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v5 = self;
    sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C810);
    uint64_t v6 = (void *)sub_1C214A770();
    objc_msgSend(v5, sel_deactivateConstraints_, v6);

    swift_bridgeObjectRetain();
    id v7 = (id)sub_1C214A770();
    swift_bridgeObjectRelease();
    objc_msgSend(v5, sel_activateConstraints_, v7);
    swift_bridgeObjectRelease();
  }
}

id sub_1C207D0F8(double a1, double a2, double a3, double a4)
{
  id v9 = &v4[OBJC_IVAR____TtC19HealthMedicationsUI22InteractionFactorsCell_item];
  *(_OWORD *)id v9 = 0u;
  *((_OWORD *)v9 + 1) = 0u;
  *((void *)v9 + 4) = 0;
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI22InteractionFactorsCell____lazy_storage___titleLabel] = 0;
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI22InteractionFactorsCell____lazy_storage___subtitleLabel] = 0;
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI22InteractionFactorsCell____lazy_storage___editButton] = 0;
  v4[OBJC_IVAR____TtC19HealthMedicationsUI22InteractionFactorsCell_isUsingVerticalLayout] = 0;
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI22InteractionFactorsCell_currentConstraints] = MEMORY[0x1E4FBC860];
  v12.receiver = v4;
  v12.super_class = (Class)type metadata accessor for InteractionFactorsCell();
  id v10 = objc_msgSendSuper2(&v12, sel_initWithFrame_, a1, a2, a3, a4);
  sub_1C207D324();

  return v10;
}

id sub_1C207D1F8(void *a1)
{
  unint64_t v3 = &v1[OBJC_IVAR____TtC19HealthMedicationsUI22InteractionFactorsCell_item];
  *(_OWORD *)unint64_t v3 = 0u;
  *((_OWORD *)v3 + 1) = 0u;
  *((void *)v3 + 4) = 0;
  *(void *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI22InteractionFactorsCell____lazy_storage___titleLabel] = 0;
  *(void *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI22InteractionFactorsCell____lazy_storage___subtitleLabel] = 0;
  *(void *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI22InteractionFactorsCell____lazy_storage___editButton] = 0;
  v1[OBJC_IVAR____TtC19HealthMedicationsUI22InteractionFactorsCell_isUsingVerticalLayout] = 0;
  *(void *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI22InteractionFactorsCell_currentConstraints] = MEMORY[0x1E4FBC860];
  v6.receiver = v1;
  v6.super_class = (Class)type metadata accessor for InteractionFactorsCell();
  id v4 = objc_msgSendSuper2(&v6, sel_initWithCoder_, a1);

  return v4;
}

uint64_t sub_1C207D324()
{
  uint64_t ObjectType = swift_getObjectType();
  id v2 = objc_msgSend(v0, sel_contentView);
  id v3 = sub_1C207C744();
  objc_msgSend(v2, sel_addSubview_, v3);

  id v4 = objc_msgSend(v0, sel_contentView);
  id v5 = sub_1C207C988();
  objc_msgSend(v4, sel_addSubview_, v5);

  id v6 = objc_msgSend(v0, sel_contentView);
  id v7 = sub_1C207CBB0();
  objc_msgSend(v6, sel_addSubview_, v7);

  sub_1C207E070(*((unsigned char *)v0 + OBJC_IVAR____TtC19HealthMedicationsUI22InteractionFactorsCell_isUsingVerticalLayout));
  sub_1C207F10C(0, (unint64_t *)&qword_1EA2C3D80, (uint64_t (*)(uint64_t))sub_1C1F7C864, MEMORY[0x1E4FBBE00]);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1C214FCC0;
  uint64_t v9 = sub_1C2149BF0();
  uint64_t v10 = MEMORY[0x1E4FB0FA8];
  *(void *)(v8 + 32) = v9;
  *(void *)(v8 + 40) = v10;
  uint64_t v11 = sub_1C2149C70();
  uint64_t v12 = MEMORY[0x1E4FB1138];
  *(void *)(v8 + 48) = v11;
  *(void *)(v8 + 56) = v12;
  uint64_t v13 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = v13;
  *(void *)(v14 + 24) = ObjectType;
  sub_1C1F7C8F0();
  sub_1C214B120();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  return swift_release();
}

void sub_1C207D524(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = sub_1C21497F0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  id v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v8 = MEMORY[0x1C8754850](a3 + 16);
  if (v8)
  {
    uint64_t v9 = (void *)v8;
    sub_1C21497A0();
    uint64_t v10 = sub_1C21497E0();
    os_log_type_t v11 = sub_1C214ABC0();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      uint64_t v13 = swift_slowAlloc();
      uint64_t v17 = v13;
      *(_DWORD *)uint64_t v12 = 136446210;
      v16[0] = v12 + 4;
      uint64_t v14 = sub_1C214BC10();
      v16[1] = sub_1C1F6FD54(v14, v15, &v17);
      sub_1C214B530();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C1F0B000, v10, v11, "[%{public}s] traitCollectionDidChange", v12, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C8754730](v13, -1, -1);
      MEMORY[0x1C8754730](v12, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    objc_msgSend(v9, sel_invalidateIntrinsicContentSize);
    objc_msgSend(v9, sel_setNeedsLayout);
  }
}

uint64_t sub_1C207D750()
{
  uint64_t v1 = v0;
  sub_1C207F10C(0, &qword_1EBF0C620, MEMORY[0x1E4FB0F28], MEMORY[0x1E4FBB718]);
  uint64_t v3 = MEMORY[0x1F4188790](v2 - 8);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  id v7 = (char *)&v15 - v6;
  uint64_t v8 = (void *)sub_1C2149950();
  uint64_t v9 = (objc_class *)type metadata accessor for InteractionFactorsCell();
  v15.receiver = v1;
  v15.super_class = v9;
  objc_msgSendSuper2(&v15, sel__bridgedUpdateConfigurationUsingState_, v8);

  MEMORY[0x1C8752FE0]();
  uint64_t v10 = sub_1C21499D0();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v7, 1, v10))
  {
    sub_1C1FB6040((uint64_t)v7, (uint64_t)v5);
    MEMORY[0x1C8752FF0](v5);
    return sub_1C1FB60D4((uint64_t)v7);
  }
  else
  {
    sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C900);
    uint64_t v12 = self;
    id v13 = objc_msgSend(v12, sel_systemBackgroundColor);
    id v14 = objc_msgSend(v12, sel_secondarySystemBackgroundColor);
    sub_1C214B150();

    sub_1C2149990();
    return MEMORY[0x1C8752FF0](v7);
  }
}

id sub_1C207DA34()
{
  uint64_t v1 = v0;
  swift_getObjectType();
  uint64_t v2 = sub_1C21497F0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C21497A0();
  uint64_t v6 = sub_1C21497E0();
  os_log_type_t v7 = sub_1C214ABC0();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = swift_slowAlloc();
    uint64_t v16 = v2;
    uint64_t v9 = (uint8_t *)v8;
    uint64_t v10 = swift_slowAlloc();
    uint64_t v18 = v10;
    *(_DWORD *)uint64_t v9 = 136446210;
    uint64_t v11 = sub_1C214BC10();
    uint64_t v17 = sub_1C1F6FD54(v11, v12, &v18);
    sub_1C214B530();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C1F0B000, v6, v7, "[%{public}s] layoutSubviews", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C8754730](v10, -1, -1);
    MEMORY[0x1C8754730](v9, -1, -1);

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v16);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  id v13 = (objc_class *)type metadata accessor for InteractionFactorsCell();
  v19.receiver = v1;
  v19.super_class = v13;
  objc_msgSendSuper2(&v19, sel_layoutSubviews);
  return sub_1C207DC98();
}

id sub_1C207DC98()
{
  swift_getObjectType();
  uint64_t v1 = sub_1C21497F0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_msgSend(v0, sel_bounds);
  CGRectGetWidth(v22);
  LODWORD(v5) = sub_1C207DF68();
  sub_1C21497A0();
  uint64_t v6 = v0;
  os_log_type_t v7 = sub_1C21497E0();
  os_log_type_t v8 = sub_1C214ABC0();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = swift_slowAlloc();
    int v18 = v5;
    uint64_t v5 = v9;
    uint64_t v10 = swift_slowAlloc();
    uint64_t v20 = v10;
    *(_DWORD *)uint64_t v5 = 136446722;
    uint64_t v11 = sub_1C214BC10();
    uint64_t v19 = sub_1C1F6FD54(v11, v12, &v20);
    uint64_t v17 = v1;
    sub_1C214B530();
    swift_bridgeObjectRelease();
    *(_WORD *)(v5 + 12) = 1024;
    LODWORD(v19) = v18 & 1;
    sub_1C214B530();
    *(_WORD *)(v5 + 18) = 1024;
    int v13 = v6[OBJC_IVAR____TtC19HealthMedicationsUI22InteractionFactorsCell_isUsingVerticalLayout];

    LODWORD(v19) = v13;
    sub_1C214B530();

    _os_log_impl(&dword_1C1F0B000, v7, v8, "[%{public}s] shouldUseVerticalLayout: %{BOOL}d, isUsingVerticalLayout: %{BOOL}d", (uint8_t *)v5, 0x18u);
    swift_arrayDestroy();
    MEMORY[0x1C8754730](v10, -1, -1);
    uint64_t v14 = v5;
    LOBYTE(v5) = v18;
    MEMORY[0x1C8754730](v14, -1, -1);

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v17);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  id result = (id)(v5 & 1);
  if (result != v6[OBJC_IVAR____TtC19HealthMedicationsUI22InteractionFactorsCell_isUsingVerticalLayout])
  {
    sub_1C207E070(v5 & 1);
    objc_msgSend(v6, sel_invalidateIntrinsicContentSize);
    uint64_t v16 = (objc_class *)type metadata accessor for InteractionFactorsCell();
    v21.receiver = v6;
    v21.super_class = v16;
    return objc_msgSendSuper2(&v21, sel_layoutSubviews);
  }
  return result;
}

BOOL sub_1C207DF68()
{
  id v0 = sub_1C207CBB0();
  id v1 = objc_msgSend(v0, sel_titleLabel);

  if (v1)
  {
    sub_1C214B0C0();
  }
  if (qword_1EA2C2728 != -1) {
    swift_once();
  }
  id v2 = sub_1C207C744();
  sub_1C214B0C0();
  double v4 = v3;

  id v5 = sub_1C207C744();
  sub_1C214B0C0();
  double v7 = v6;

  return v4 < v7;
}

void sub_1C207E070(char a1)
{
  id v2 = v1;
  if (a1)
  {
    *((unsigned char *)v1 + OBJC_IVAR____TtC19HealthMedicationsUI22InteractionFactorsCell_isUsingVerticalLayout) = 1;
    sub_1C1F0ED28();
    uint64_t v3 = swift_allocObject();
    *(_OWORD *)(v3 + 16) = xmmword_1C2151820;
    id v4 = sub_1C207C744();
    id v5 = objc_msgSend(v4, sel_leadingAnchor);

    id v6 = objc_msgSend(v2, sel_contentView);
    id v7 = objc_msgSend(v6, sel_layoutMarginsGuide);

    id v8 = objc_msgSend(v7, sel_leadingAnchor);
    id v9 = objc_msgSend(v5, sel_constraintEqualToAnchor_, v8);

    *(void *)(v3 + 32) = v9;
    id v10 = sub_1C207C744();
    id v11 = objc_msgSend(v10, sel_topAnchor);

    id v12 = objc_msgSend(v2, sel_contentView);
    id v13 = objc_msgSend(v12, sel_topAnchor);

    if (qword_1EA2C2728 != -1) {
      swift_once();
    }
    id v14 = objc_msgSend(v11, sel_constraintEqualToAnchor_constant_, v13, *(double *)&qword_1EA2C80B0);

    *(void *)(v3 + 40) = v14;
    id v15 = sub_1C207C744();
    id v16 = objc_msgSend(v15, sel_trailingAnchor);

    id v17 = objc_msgSend(v2, sel_contentView);
    id v18 = objc_msgSend(v17, sel_layoutMarginsGuide);

    id v19 = objc_msgSend(v18, sel_trailingAnchor);
    id v20 = objc_msgSend(v16, sel_constraintEqualToAnchor_, v19);

    *(void *)(v3 + 48) = v20;
    id v21 = sub_1C207C988();
    id v22 = objc_msgSend(v21, sel_leadingAnchor);

    id v23 = sub_1C207C744();
    id v24 = objc_msgSend(v23, sel_leadingAnchor);

    id v25 = objc_msgSend(v22, sel_constraintEqualToAnchor_, v24);
    *(void *)(v3 + 56) = v25;
    id v26 = sub_1C207C988();
    id v27 = objc_msgSend(v26, sel_topAnchor);

    id v28 = sub_1C207C744();
    id v29 = objc_msgSend(v28, sel_bottomAnchor);

    id v30 = objc_msgSend(v27, sel_constraintEqualToAnchor_, v29);
    *(void *)(v3 + 64) = v30;
    id v31 = sub_1C207C988();
    id v32 = objc_msgSend(v31, sel_trailingAnchor);

    id v33 = objc_msgSend(v2, sel_contentView);
    id v34 = objc_msgSend(v33, sel_layoutMarginsGuide);

    id v35 = objc_msgSend(v34, sel_trailingAnchor);
    id v36 = objc_msgSend(v32, sel_constraintEqualToAnchor_, v35);

    *(void *)(v3 + 72) = v36;
    id v37 = sub_1C207CBB0();
    id v38 = objc_msgSend(v37, sel_leadingAnchor);

    id v39 = objc_msgSend(v2, sel_contentView);
    id v40 = objc_msgSend(v39, sel_layoutMarginsGuide);

    id v41 = objc_msgSend(v40, sel_leadingAnchor);
    id v42 = objc_msgSend(v38, sel_constraintEqualToAnchor_, v41);

    *(void *)(v3 + 80) = v42;
    id v43 = sub_1C207CBB0();
    id v44 = objc_msgSend(v43, sel_topAnchor);

    id v45 = sub_1C207C988();
    id v46 = objc_msgSend(v45, sel_bottomAnchor);

    id v47 = objc_msgSend(v44, sel_constraintEqualToAnchor_, v46);
    *(void *)(v3 + 88) = v47;
    id v48 = sub_1C207CBB0();
    id v49 = objc_msgSend(v48, sel_trailingAnchor);

    id v50 = objc_msgSend(v2, sel_contentView);
    id v51 = objc_msgSend(v50, sel_layoutMarginsGuide);

    id v52 = objc_msgSend(v51, sel_trailingAnchor);
    id v53 = objc_msgSend(v49, sel_constraintEqualToAnchor_, v52);

    *(void *)(v3 + 96) = v53;
    id v54 = sub_1C207CBB0();
    id v55 = objc_msgSend(v54, sel_bottomAnchor);

    id v56 = objc_msgSend(v2, sel_contentView);
    id v57 = objc_msgSend(v56, sel_bottomAnchor);

    id v58 = objc_msgSend(v55, sel_constraintEqualToAnchor_constant_, v57, -*(double *)&qword_1EA2C80C0);
    *(void *)(v3 + 104) = v58;
  }
  else
  {
    *((unsigned char *)v1 + OBJC_IVAR____TtC19HealthMedicationsUI22InteractionFactorsCell_isUsingVerticalLayout) = 0;
    sub_1C1F0ED28();
    uint64_t v3 = swift_allocObject();
    *(_OWORD *)(v3 + 16) = xmmword_1C21594A0;
    id v59 = sub_1C207C744();
    id v60 = objc_msgSend(v59, sel_leadingAnchor);

    id v61 = objc_msgSend(v2, sel_contentView);
    id v62 = objc_msgSend(v61, sel_layoutMarginsGuide);

    id v63 = objc_msgSend(v62, sel_leadingAnchor);
    id v64 = objc_msgSend(v60, sel_constraintEqualToAnchor_, v63);

    *(void *)(v3 + 32) = v64;
    id v65 = sub_1C207C744();
    id v66 = objc_msgSend(v65, sel_topAnchor);

    id v67 = objc_msgSend(v2, sel_contentView);
    id v68 = objc_msgSend(v67, sel_topAnchor);

    if (qword_1EA2C2728 != -1) {
      swift_once();
    }
    id v69 = objc_msgSend(v66, sel_constraintEqualToAnchor_constant_, v68, *(double *)&qword_1EA2C80B0);

    *(void *)(v3 + 40) = v69;
    id v70 = sub_1C207CBB0();
    id v71 = objc_msgSend(v70, sel_leadingAnchor);

    id v72 = sub_1C207C744();
    id v73 = objc_msgSend(v72, sel_trailingAnchor);

    id v74 = objc_msgSend(v71, sel_constraintGreaterThanOrEqualToAnchor_constant_, v73, *(double *)&qword_1EA2C80B8);
    *(void *)(v3 + 48) = v74;
    id v75 = sub_1C207CBB0();
    id v76 = objc_msgSend(v75, sel_firstBaselineAnchor);

    id v77 = sub_1C207C744();
    id v78 = objc_msgSend(v77, sel_firstBaselineAnchor);

    id v79 = objc_msgSend(v76, (SEL)&selRef_leadingAnchor + 6, v78);
    *(void *)(v3 + 56) = v79;
    id v80 = sub_1C207CBB0();
    id v81 = objc_msgSend(v80, sel_trailingAnchor);

    id v82 = objc_msgSend(v2, sel_contentView);
    id v83 = objc_msgSend(v82, sel_trailingAnchor);

    id v84 = objc_msgSend(v81, sel_constraintEqualToAnchor_constant_, v83, -*(double *)&qword_1EA2C80B0);
    *(void *)(v3 + 64) = v84;
    id v85 = sub_1C207C988();
    id v86 = objc_msgSend(v85, sel_leadingAnchor);

    id v87 = sub_1C207C744();
    id v88 = objc_msgSend(v87, sel_leadingAnchor);

    id v89 = objc_msgSend(v86, (SEL)&selRef_leadingAnchor + 6, v88);
    *(void *)(v3 + 72) = v89;
    id v90 = sub_1C207C988();
    id v91 = objc_msgSend(v90, sel_topAnchor);

    id v92 = sub_1C207C744();
    id v93 = objc_msgSend(v92, sel_bottomAnchor);

    id v94 = objc_msgSend(v91, (SEL)&selRef_leadingAnchor + 6, v93);
    *(void *)(v3 + 80) = v94;
    id v95 = sub_1C207C988();
    id v96 = objc_msgSend(v95, sel_trailingAnchor);

    id v97 = sub_1C207C744();
    id v98 = objc_msgSend(v97, sel_trailingAnchor);

    id v99 = objc_msgSend(v96, (SEL)&selRef_leadingAnchor + 6, v98);
    *(void *)(v3 + 88) = v99;
    id v100 = sub_1C207C988();
    id v101 = objc_msgSend(v100, sel_bottomAnchor);

    id v102 = objc_msgSend(v2, sel_contentView);
    id v103 = objc_msgSend(v102, sel_bottomAnchor);

    id v104 = objc_msgSend(v101, sel_constraintEqualToAnchor_constant_, v103, -*(double *)&qword_1EA2C80C0);
    *(void *)(v3 + 96) = v104;
  }
  sub_1C214A7A0();

  sub_1C207CFC4(v3);
}

uint64_t sub_1C207EBC4()
{
  uint64_t v1 = sub_1C21497F0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  id v4 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = (uint64_t)v0 + OBJC_IVAR____TtC19HealthMedicationsUI22InteractionFactorsCell_item;
  swift_beginAccess();
  sub_1C1F2116C(v5, (uint64_t)v31);
  if (!v31[3])
  {
    sub_1C1F374E4((uint64_t)v31);
LABEL_9:
    sub_1C21497A0();
    id v17 = v0;
    id v18 = sub_1C21497E0();
    os_log_type_t v19 = sub_1C214ABD0();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = swift_slowAlloc();
      uint64_t v29 = v1;
      id v21 = (uint8_t *)v20;
      uint64_t v22 = swift_slowAlloc();
      uint64_t v30 = v22;
      *(_DWORD *)id v21 = 136446210;
      sub_1C1F2116C(v5, (uint64_t)v31);
      sub_1C1F24488();
      uint64_t v23 = sub_1C214A630();
      v31[0] = sub_1C1F6FD54(v23, v24, &v30);
      sub_1C214B530();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C1F0B000, v18, v19, "Incorrect view model for InteractionFactorsItem: %{public}s", v21, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C8754730](v22, -1, -1);
      MEMORY[0x1C8754730](v21, -1, -1);

      return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v29);
    }
    else
    {

      return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    }
  }
  sub_1C1F23804(0, (unint64_t *)&qword_1EBF0C2F0);
  type metadata accessor for InteractionFactorsItem();
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_9;
  }
  uint64_t v6 = v30;
  id v7 = sub_1C207C744();
  if (qword_1EBF0CA00 != -1) {
    swift_once();
  }
  id v8 = (id)qword_1EBF0CA18;
  swift_bridgeObjectRetain();
  sub_1C2147730();
  swift_bridgeObjectRelease();

  id v9 = (void *)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  id v10 = &off_1E6447000;
  objc_msgSend(v7, sel_setText_, v9);

  id v11 = sub_1C207C988();
  if (*(void *)(*(void *)(v6 + 16) + 16))
  {
    uint64_t v12 = swift_bridgeObjectRetain();
    uint64_t v13 = sub_1C207C23C(v12);
    id v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28DF8]), sel_init);
    sub_1C1F38E88(v13);
    swift_bridgeObjectRelease();
    id v15 = (void *)sub_1C214A770();
    swift_bridgeObjectRelease();
    id v16 = objc_msgSend(v14, sel_stringFromItems_, v15);

    if (v16)
    {
      sub_1C214A5F0();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    id v26 = (void *)qword_1EBF0CA18;
    swift_bridgeObjectRetain();
    id v27 = v26;
    swift_bridgeObjectRetain();
    sub_1C2147730();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    id v10 = &off_1E6447000;
  }
  id v28 = (void *)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  objc_msgSend(v11, (SEL)v10[78], v28);

  sub_1C207DC98();
  return swift_release();
}

uint64_t type metadata accessor for InteractionFactorsCell()
{
  return self;
}

void sub_1C207F10C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t Array<A>.displayString()(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    uint64_t v1 = swift_bridgeObjectRetain();
    uint64_t v2 = sub_1C207C23C(v1);
    swift_bridgeObjectRelease();
    id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28DF8]), sel_init);
    sub_1C1F38E88(v2);
    swift_bridgeObjectRelease();
    id v4 = (void *)sub_1C214A770();
    swift_bridgeObjectRelease();
    id v5 = objc_msgSend(v3, sel_stringFromItems_, v4);

    if (v5)
    {
      uint64_t v6 = sub_1C214A5F0();
    }
    else
    {

      return 0;
    }
  }
  else
  {
    if (qword_1EBF0CA00 != -1) {
      swift_once();
    }
    id v7 = (id)qword_1EBF0CA18;
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_1C2147730();
    swift_bridgeObjectRelease();
  }
  return v6;
}

void sub_1C207F320()
{
  uint64_t v1 = sub_1C21497F0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  id v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = (uint64_t)v0 + OBJC_IVAR____TtC19HealthMedicationsUI22InteractionFactorsCell_item;
  swift_beginAccess();
  sub_1C1F2116C(v5, (uint64_t)v18);
  if (v18[3])
  {
    sub_1C1F23804(0, (unint64_t *)&qword_1EBF0C2F0);
    type metadata accessor for InteractionFactorsItem();
    if (swift_dynamicCast())
    {
      id v6 = objc_msgSend(v0, sel_viewController);
      if (v6)
      {
        id v7 = v6;
        sub_1C2075178(v6);
        swift_release();

        return;
      }
      swift_release();
    }
  }
  else
  {
    sub_1C1F374E4((uint64_t)v18);
  }
  sub_1C21497A0();
  id v8 = v0;
  uint64_t v9 = sub_1C21497E0();
  os_log_type_t v10 = sub_1C214ABD0();
  if (os_log_type_enabled(v9, v10))
  {
    id v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    uint64_t v16 = v1;
    uint64_t v17 = v12;
    uint64_t v13 = v12;
    *(_DWORD *)id v11 = 136446210;
    sub_1C1F2116C(v5, (uint64_t)v18);
    sub_1C1F24488();
    uint64_t v14 = sub_1C214A630();
    v18[0] = sub_1C1F6FD54(v14, v15, &v17);
    sub_1C214B530();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C1F0B000, v9, v10, "Incorrect view model for InteractionFactorsItem: %{public}s", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C8754730](v13, -1, -1);
    MEMORY[0x1C8754730](v11, -1, -1);

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v16);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
}

id InteractionFactorsCell.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for InteractionFactorsCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1C207F710@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC19HealthMedicationsUI22InteractionFactorsCell_item;
  swift_beginAccess();
  return sub_1C1F2116C(v3, a2);
}

uint64_t method lookup function for InteractionFactorsCell(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for InteractionFactorsCell);
}

uint64_t dispatch thunk of InteractionFactorsCell.item.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of InteractionFactorsCell.item.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of InteractionFactorsCell.item.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x90))();
}

uint64_t sub_1C207F820()
{
  swift_unknownObjectWeakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C207F858()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

void sub_1C207F890(uint64_t a1, uint64_t a2)
{
  sub_1C207D524(a1, a2, *(void *)(v2 + 16));
}

unint64_t sub_1C207F898()
{
  return 0xD000000000000015;
}

id sub_1C207F980()
{
  uint64_t v1 = OBJC_IVAR____TtC19HealthMedicationsUI20ScheduleIntervalCell____lazy_storage___frequencyTitleLabel;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI20ScheduleIntervalCell____lazy_storage___frequencyTitleLabel);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI20ScheduleIntervalCell____lazy_storage___frequencyTitleLabel);
  }
  else
  {
    uint64_t v4 = v0;
    id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
    objc_msgSend(v5, sel_setNumberOfLines_, 0);
    objc_msgSend(v5, sel_setTextAlignment_, 4);
    objc_msgSend(v5, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    id v6 = objc_msgSend(self, sel_labelColor);
    objc_msgSend(v5, sel_setTextColor_, v6);

    objc_msgSend(v5, sel_setAdjustsFontForContentSizeCategory_, 1);
    sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8E0);
    id v7 = (void *)sub_1C214B0A0();
    objc_msgSend(v5, sel_setFont_, v7);

    id v8 = *(void **)(v4 + v1);
    *(void *)(v4 + v1) = v5;
    id v3 = v5;

    uint64_t v2 = 0;
  }
  id v9 = v2;
  return v3;
}

id sub_1C207FAEC()
{
  return sub_1C207FB0C(&OBJC_IVAR____TtC19HealthMedicationsUI20ScheduleIntervalCell____lazy_storage___timesStackView, 4);
}

id sub_1C207FAFC()
{
  return sub_1C207FB0C(&OBJC_IVAR____TtC19HealthMedicationsUI20ScheduleIntervalCell____lazy_storage___dosesStackView, 1);
}

id sub_1C207FB0C(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(void **)(v2 + *a1);
  if (v4)
  {
    id v5 = *(id *)(v2 + *a1);
  }
  else
  {
    id v7 = objc_allocWithZone(MEMORY[0x1E4FB1C60]);
    sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8F0);
    id v8 = (void *)sub_1C214A770();
    id v9 = objc_msgSend(v7, sel_initWithArrangedSubviews_, v8);

    objc_msgSend(v9, sel_setAxis_, 1);
    objc_msgSend(v9, sel_setAlignment_, a2);
    objc_msgSend(v9, sel_setDistribution_, 3);
    objc_msgSend(v9, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    objc_msgSend(v9, sel_setSpacing_, 2.0);
    os_log_type_t v10 = *(void **)(v2 + v3);
    *(void *)(v2 + v3) = v9;
    id v5 = v9;

    uint64_t v4 = 0;
  }
  id v11 = v4;
  return v5;
}

id sub_1C207FC2C()
{
  uint64_t v1 = OBJC_IVAR____TtC19HealthMedicationsUI20ScheduleIntervalCell____lazy_storage___containerStackView;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI20ScheduleIntervalCell____lazy_storage___containerStackView);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI20ScheduleIntervalCell____lazy_storage___containerStackView);
  }
  else
  {
    id v4 = sub_1C207FC90();
    id v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_1C207FC90()
{
  sub_1C1F0ED28();
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1C214FCB0;
  *(void *)(v0 + 32) = sub_1C207FAEC();
  *(void *)(v0 + 40) = sub_1C207FAFC();
  sub_1C214A7A0();
  id v1 = objc_allocWithZone(MEMORY[0x1E4FB1C60]);
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8F0);
  uint64_t v2 = (void *)sub_1C214A770();
  swift_bridgeObjectRelease();
  id v3 = objc_msgSend(v1, sel_initWithArrangedSubviews_, v2);

  objc_msgSend(v3, sel_setAxis_, 0);
  objc_msgSend(v3, sel_setAlignment_, 1);
  objc_msgSend(v3, sel_setDistribution_, 3);
  objc_msgSend(v3, sel_setSpacing_, 8.0);
  objc_msgSend(v3, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1EB0]), sel_init);
  objc_msgSend(v3, sel_addArrangedSubview_, v4);

  return v3;
}

void sub_1C207FF7C()
{
  id v1 = objc_msgSend(v0, sel_contentView);
  id v2 = sub_1C207F980();
  objc_msgSend(v1, sel_addSubview_, v2);

  id v3 = objc_msgSend(v0, sel_contentView);
  id v4 = sub_1C207FC2C();
  objc_msgSend(v3, sel_addSubview_, v4);

  id v50 = self;
  sub_1C1F0ED28();
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1C2150CA0;
  id v6 = sub_1C207F980();
  id v7 = objc_msgSend(v6, sel_topAnchor);

  id v8 = objc_msgSend(v0, sel_contentView);
  id v9 = objc_msgSend(v8, sel_topAnchor);

  id v10 = objc_msgSend(v7, sel_constraintEqualToAnchor_constant_, v9, 12.0);
  *(void *)(v5 + 32) = v10;
  id v11 = sub_1C207F980();
  id v12 = objc_msgSend(v11, sel_leadingAnchor);

  id v13 = objc_msgSend(v0, sel_contentView);
  id v14 = objc_msgSend(v13, sel_layoutMarginsGuide);

  id v15 = objc_msgSend(v14, (SEL)&selRef_setTranslatesAutoresizingMaskIntoConstraints_ + 2);
  id v16 = objc_msgSend(v12, sel_constraintEqualToAnchor_, v15);

  *(void *)(v5 + 40) = v16;
  id v17 = sub_1C207F980();
  id v18 = objc_msgSend(v17, sel_trailingAnchor);

  id v19 = objc_msgSend(v0, sel_contentView);
  id v20 = objc_msgSend(v19, (SEL)&selRef_didTapDoneWithSender_ + 1);

  id v21 = objc_msgSend(v20, sel_trailingAnchor);
  id v22 = objc_msgSend(v18, (SEL)&selRef_leadingAnchor + 6, v21);

  *(void *)(v5 + 48) = v22;
  id v23 = sub_1C207FC2C();
  id v24 = objc_msgSend(v23, sel_topAnchor);

  id v25 = sub_1C207F980();
  id v26 = objc_msgSend(v25, sel_bottomAnchor);

  id v27 = objc_msgSend(v24, sel_constraintEqualToAnchor_constant_, v26, 12.0);
  *(void *)(v5 + 56) = v27;
  id v28 = sub_1C207FC2C();
  id v29 = objc_msgSend(v28, sel_bottomAnchor);

  id v30 = objc_msgSend(v0, sel_contentView);
  id v31 = objc_msgSend(v30, sel_bottomAnchor);

  id v32 = objc_msgSend(v29, sel_constraintEqualToAnchor_constant_, v31, -12.0);
  *(void *)(v5 + 64) = v32;
  id v33 = sub_1C207FC2C();
  id v34 = objc_msgSend(v33, sel_leadingAnchor);

  id v35 = objc_msgSend(v0, sel_contentView);
  id v36 = objc_msgSend(v35, sel_layoutMarginsGuide);

  id v37 = objc_msgSend(v36, sel_leadingAnchor);
  id v38 = objc_msgSend(v34, sel_constraintEqualToAnchor_, v37);

  *(void *)(v5 + 72) = v38;
  id v39 = sub_1C207FC2C();
  id v40 = objc_msgSend(v39, sel_trailingAnchor);

  id v41 = objc_msgSend(v0, sel_contentView);
  id v42 = objc_msgSend(v41, sel_layoutMarginsGuide);

  id v43 = objc_msgSend(v42, sel_trailingAnchor);
  id v44 = objc_msgSend(v40, sel_constraintEqualToAnchor_constant_, v43, 8.0);

  *(void *)(v5 + 80) = v44;
  id v45 = sub_1C207FAEC();
  id v46 = objc_msgSend(v45, sel_trailingAnchor);

  id v47 = sub_1C207FAFC();
  id v48 = objc_msgSend(v47, sel_leadingAnchor);

  id v49 = objc_msgSend(v46, sel_constraintEqualToAnchor_constant_, v48, -8.0);
  *(void *)(v5 + 88) = v49;
  sub_1C214A7A0();
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C810);
  id v51 = (id)sub_1C214A770();
  swift_bridgeObjectRelease();
  objc_msgSend(v50, sel_activateConstraints_, v51);
}

uint64_t sub_1C2080530()
{
  id v1 = v0;
  uint64_t ObjectType = swift_getObjectType();
  id v74 = (void *)sub_1C21497F0();
  uint64_t v2 = *(v74 - 1);
  MEMORY[0x1F4188790](v74);
  id v4 = (char *)&v59 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C20812A0(0, &qword_1EBF0C620, MEMORY[0x1E4FB0F28], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v6 - 8);
  id v8 = (char *)&v59 - v7;
  uint64_t v9 = sub_1C21478D0();
  id v67 = *(void (***)(char *, uint64_t))(v9 - 8);
  MEMORY[0x1F4188790](v9);
  id v73 = (char *)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = sub_1C21478F0();
  id v66 = *(void (***)(char *, uint64_t))(v72 - 8);
  MEMORY[0x1F4188790](v72);
  id v70 = (char *)&v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = type metadata accessor for ScheduleDataSource.DoseItem(0);
  uint64_t v12 = *(void *)(v71 - 8);
  MEMORY[0x1F4188790](v71);
  id v75 = (char *)&v59 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C20812A0(0, &qword_1EA2C6608, (uint64_t (*)(uint64_t))type metadata accessor for ScheduleIntervalItem, v5);
  MEMORY[0x1F4188790](v14 - 8);
  id v16 = (char *)&v59 - v15;
  uint64_t v17 = type metadata accessor for ScheduleIntervalItem();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v62 = (uint64_t)&v59 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = (uint64_t)v1 + OBJC_IVAR____TtC19HealthMedicationsUI20ScheduleIntervalCell_item;
  swift_beginAccess();
  sub_1C1F2116C(v20, (uint64_t)v78);
  if (!v78[3])
  {
    sub_1C2081350((uint64_t)v78, (unint64_t *)&qword_1EBF0C300, (uint64_t (*)(uint64_t))sub_1C1F1CB5C);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56))(v16, 1, 1, v17);
    goto LABEL_9;
  }
  sub_1C1F1CB5C();
  int v21 = swift_dynamicCast();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v16, v21 ^ 1u, 1, v17);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
  {
LABEL_9:
    sub_1C2081350((uint64_t)v16, &qword_1EA2C6608, (uint64_t (*)(uint64_t))type metadata accessor for ScheduleIntervalItem);
    sub_1C21497A0();
    id v50 = v1;
    id v51 = sub_1C21497E0();
    os_log_type_t v52 = sub_1C214ABD0();
    if (os_log_type_enabled(v51, v52))
    {
      uint64_t v53 = swift_slowAlloc();
      uint64_t v54 = swift_slowAlloc();
      uint64_t v77 = v54;
      *(_DWORD *)uint64_t v53 = 136446466;
      uint64_t v55 = sub_1C214BC10();
      v78[0] = sub_1C1F6FD54(v55, v56, &v77);
      sub_1C214B530();
      swift_bridgeObjectRelease();
      *(_WORD *)(v53 + 12) = 2080;
      sub_1C1F2116C(v20, (uint64_t)v78);
      sub_1C20812A0(0, (unint64_t *)&qword_1EBF0C300, (uint64_t (*)(uint64_t))sub_1C1F1CB5C, MEMORY[0x1E4FBB718]);
      uint64_t v57 = sub_1C214A630();
      v78[0] = sub_1C1F6FD54(v57, v58, &v77);
      sub_1C214B530();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C1F0B000, v51, v52, "%{public}s Incorrect view model for %s Expecting ScheduleIntervalItem", (uint8_t *)v53, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C8754730](v54, -1, -1);
      MEMORY[0x1C8754730](v53, -1, -1);
    }
    else
    {
    }
    return (*(uint64_t (**)(char *, void *))(v2 + 8))(v4, v74);
  }
  uint64_t v61 = v17;
  uint64_t v22 = v9;
  uint64_t v23 = v62;
  sub_1C20813C0((uint64_t)v16, v62);
  id v24 = sub_1C207F980();
  swift_bridgeObjectRetain();
  id v25 = (void *)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  objc_msgSend(v24, sel_setText_, v25);

  id v26 = sub_1C207FAEC();
  sub_1C214B0E0();

  id v27 = sub_1C207FAFC();
  sub_1C214B0E0();

  uint64_t v28 = *(void *)(v23 + 40);
  uint64_t v29 = *(void *)(v28 + 16);
  if (v29)
  {
    id v60 = v8;
    uint64_t v30 = v28 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
    type metadata accessor for UILayoutPriority(0);
    uint64_t v68 = *(void *)(v12 + 72);
    uint64_t ObjectType = v31;
    ++v67;
    ++v66;
    uint64_t v65 = *MEMORY[0x1E4FB2790];
    uint64_t v59 = v28;
    swift_bridgeObjectRetain();
    uint64_t v63 = v22;
    uint64_t v32 = (uint64_t)v75;
    id v64 = v1;
    do
    {
      sub_1C2081860(v30, v32);
      id v33 = v70;
      sub_1C21478E0();
      id v34 = v73;
      sub_1C21478C0();
      sub_1C2147A80();
      (*v67)(v34, v63);
      (*v66)(v33, v72);
      id v35 = sub_1C2081424();
      id v74 = v35;
      swift_bridgeObjectRelease();
      id v36 = sub_1C2081424();
      id v37 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
      objc_msgSend(v37, sel_setAttributedText_, v35);
      int v76 = 1065353216;
      LODWORD(v77) = 1132068864;
      sub_1C2081A88(&qword_1EBF0C7D8, type metadata accessor for UILayoutPriority);
      sub_1C2149800();
      LODWORD(v38) = v78[0];
      objc_msgSend(v37, sel_setContentHuggingPriority_forAxis_, 0, v38);
      objc_msgSend(v37, sel_setAdjustsFontForContentSizeCategory_, 1);
      objc_msgSend(v37, sel_setNumberOfLines_, 1);
      uint64_t v39 = v65;
      objc_msgSend(v37, sel_setMaximumContentSizeCategory_, v65);
      id v40 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
      objc_msgSend(v40, sel_setAttributedText_, v36);
      LODWORD(v41) = 1144750080;
      objc_msgSend(v40, sel_setContentHuggingPriority_forAxis_, 0, v41);
      objc_msgSend(v40, sel_setAdjustsFontForContentSizeCategory_, 1);
      objc_msgSend(v40, sel_setNumberOfLines_, 1);
      objc_msgSend(v40, sel_setMaximumContentSizeCategory_, v39);

      id v42 = sub_1C207FAEC();
      objc_msgSend(v42, sel_addArrangedSubview_, v37);

      id v43 = sub_1C207FAFC();
      uint64_t v32 = (uint64_t)v75;
      id v44 = v43;
      objc_msgSend(v43, sel_addArrangedSubview_, v40);

      sub_1C20818C4(v32, type metadata accessor for ScheduleDataSource.DoseItem);
      v30 += v68;
      --v29;
    }
    while (v29);
    swift_bridgeObjectRelease();
    id v8 = v60;
  }
  uint64_t v45 = v62;
  uint64_t v46 = v62 + *(int *)(v61 + 32);
  uint64_t v47 = sub_1C21499D0();
  uint64_t v48 = *(void *)(v47 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v48 + 16))(v8, v46, v47);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(v8, 0, 1, v47);
  MEMORY[0x1C8752FF0](v8);
  return sub_1C20818C4(v45, (uint64_t (*)(void))type metadata accessor for ScheduleIntervalItem);
}

id sub_1C2081048()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ScheduleIntervalCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for ScheduleIntervalCell()
{
  return self;
}

uint64_t sub_1C208112C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI20ScheduleIntervalCell_item;
  swift_beginAccess();
  return sub_1C1F2116C(v3, a1);
}

uint64_t sub_1C2081180(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI20ScheduleIntervalCell_item;
  swift_beginAccess();
  sub_1C1F32DDC(a1, v3);
  swift_endAccess();
  sub_1C2080530();
  return sub_1C2081350(a1, (unint64_t *)&qword_1EBF0C300, (uint64_t (*)(uint64_t))sub_1C1F1CB5C);
}

uint64_t (*sub_1C208120C(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1C208126C;
}

uint64_t sub_1C208126C(uint64_t a1, char a2)
{
  uint64_t result = swift_endAccess();
  if ((a2 & 1) == 0) {
    return sub_1C2080530();
  }
  return result;
}

void sub_1C20812A0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t type metadata accessor for ScheduleIntervalItem()
{
  uint64_t result = qword_1EA2C6640;
  if (!qword_1EA2C6640) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C2081350(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1C20812A0(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1C20813C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ScheduleIntervalItem();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

id sub_1C2081424()
{
  uint64_t v25 = sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8E0);
  uint64_t v0 = (void *)sub_1C214B0A0();
  id v1 = objc_msgSend(v0, sel_fontDescriptor);
  sub_1C2081924(0, &qword_1EA2C6610, &qword_1EA2C3660, type metadata accessor for AttributeName);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C214FCD0;
  uint64_t v3 = (void *)*MEMORY[0x1E4FB0910];
  *(void *)(inited + 32) = *MEMORY[0x1E4FB0910];
  sub_1C20812A0(0, &qword_1EA2C6618, (uint64_t (*)(uint64_t))sub_1C2081980, MEMORY[0x1E4FBBE00]);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1C214FCD0;
  sub_1C2081924(0, &qword_1EA2C6628, &qword_1EA2C6630, type metadata accessor for FeatureKey);
  uint64_t v5 = swift_initStackObject();
  *(_OWORD *)(v5 + 16) = xmmword_1C214FCC0;
  uint64_t v6 = (void *)*MEMORY[0x1E4FB28A0];
  *(void *)(v5 + 32) = *MEMORY[0x1E4FB28A0];
  *(void *)(v5 + 40) = 6;
  uint64_t v7 = (void *)*MEMORY[0x1E4FB2890];
  *(void *)(v5 + 48) = *MEMORY[0x1E4FB2890];
  *(void *)(v5 + 56) = 0;
  id v8 = v3;
  id v9 = v6;
  id v10 = v7;
  *(void *)(v4 + 32) = sub_1C1F4A288(v5);
  sub_1C20812A0(0, &qword_1EA2C6638, (uint64_t (*)(uint64_t))sub_1C2081980, MEMORY[0x1E4FBB320]);
  *(void *)(inited + 64) = v11;
  *(void *)(inited + 40) = v4;
  sub_1C1F4A384(inited);
  type metadata accessor for AttributeName(0);
  sub_1C2081A88(&qword_1EA2C2AB8, type metadata accessor for AttributeName);
  uint64_t v12 = (void *)sub_1C214A500();
  swift_bridgeObjectRelease();
  id v13 = objc_msgSend(v1, sel_fontDescriptorByAddingAttributes_, v12);

  objc_msgSend(v0, sel_pointSize);
  id v15 = objc_msgSend(self, sel_fontWithDescriptor_size_, v13, v14);

  sub_1C2081924(0, (unint64_t *)&unk_1EBF0C9A0, (unint64_t *)&qword_1EBF0C870, type metadata accessor for Key);
  uint64_t v16 = swift_initStackObject();
  *(_OWORD *)(v16 + 16) = xmmword_1C214FCD0;
  uint64_t v17 = (void *)*MEMORY[0x1E4FB06F8];
  *(void *)(v16 + 64) = v25;
  *(void *)(v16 + 32) = v17;
  *(void *)(v16 + 40) = v15;
  swift_bridgeObjectRetain();
  id v18 = v17;
  id v19 = v15;
  sub_1C1F49F18(v16);
  id v20 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
  int v21 = (void *)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1C2081A88((unint64_t *)&qword_1EBF0C850, type metadata accessor for Key);
  uint64_t v22 = (void *)sub_1C214A500();
  swift_bridgeObjectRelease();
  id v23 = objc_msgSend(v20, sel_initWithString_attributes_, v21, v22);

  return v23;
}

uint64_t sub_1C2081860(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ScheduleDataSource.DoseItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C20818C4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_1C2081924(uint64_t a1, unint64_t *a2, unint64_t *a3, void (*a4)(uint64_t))
{
  if (!*a2)
  {
    sub_1C2081A1C(255, a3, a4);
    unint64_t v5 = sub_1C214BA50();
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1C2081980()
{
  if (!qword_1EA2C6620)
  {
    type metadata accessor for FeatureKey(255);
    sub_1C2081A88(&qword_1EA2C2AA8, type metadata accessor for FeatureKey);
    unint64_t v0 = sub_1C214A530();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C6620);
    }
  }
}

void sub_1C2081A1C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v5) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

uint64_t sub_1C2081A88(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *sub_1C2081AD0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v13 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    uint64_t v7 = a2[5];
    uint64_t v8 = *(int *)(a3 + 32);
    id v9 = (char *)a2 + v8;
    id v10 = (char *)a1 + v8;
    a1[4] = a2[4];
    a1[5] = v7;
    uint64_t v11 = sub_1C21499D0();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12(v10, v9, v11);
  }
  return v3;
}

uint64_t sub_1C2081BE0(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 32);
  uint64_t v5 = sub_1C21499D0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

void *sub_1C2081C68(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  uint64_t v6 = a2[5];
  uint64_t v7 = *(int *)(a3 + 32);
  uint64_t v8 = (char *)a2 + v7;
  id v9 = (char *)a1 + v7;
  a1[4] = a2[4];
  a1[5] = v6;
  uint64_t v10 = sub_1C21499D0();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11(v9, v8, v10);
  return a1;
}

void *sub_1C2081D28(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 32);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1C21499D0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_OWORD *sub_1C2081E04(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  a1[2] = a2[2];
  uint64_t v5 = *(int *)(a3 + 32);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_1C21499D0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

void *sub_1C2081E88(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(int *)(a3 + 32);
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = sub_1C21499D0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 40))(v10, v11, v12);
  return a1;
}

uint64_t sub_1C2081F34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C2081F48);
}

uint64_t sub_1C2081F48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1C21499D0();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 32);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1C2081FF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C208200C);
}

uint64_t sub_1C208200C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1C21499D0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 32);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1C20820B4()
{
  uint64_t result = sub_1C21499D0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1C2082168()
{
  return sub_1C214A610();
}

uint64_t sub_1C208219C()
{
  swift_getObjectType();
  uint64_t v1 = sub_1C21497F0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  unint64_t v4 = (char *)v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = v0 + OBJC_IVAR____TtC19HealthMedicationsUI41MedicationSummaryCollectionViewHeaderCell_item;
  swift_beginAccess();
  sub_1C1F2116C(v5, (uint64_t)v14);
  if (v14[3])
  {
    sub_1C1F1CB5C();
    if (swift_dynamicCast())
    {
      sub_1C2082550(v13[0], v13[1], v13[2], v13[3]);
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    sub_1C1F374E4((uint64_t)v14);
  }
  sub_1C21497A0();
  uint64_t v7 = sub_1C21497E0();
  os_log_type_t v8 = sub_1C214ABD0();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    v14[0] = v10;
    *(_DWORD *)uint64_t v9 = 136315138;
    uint64_t v11 = sub_1C214BC10();
    v13[0] = sub_1C1F6FD54(v11, v12, v14);
    sub_1C214B530();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C1F0B000, v7, v8, "[%s]: Unexpected view model.", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C8754730](v10, -1, -1);
    MEMORY[0x1C8754730](v9, -1, -1);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

void sub_1C2082550(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v6 = (uint64_t *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI41MedicationSummaryCollectionViewHeaderCell_medicationSummary];
  uint64_t v7 = *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI41MedicationSummaryCollectionViewHeaderCell_medicationSummary];
  uint64_t v8 = *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI41MedicationSummaryCollectionViewHeaderCell_medicationSummary
                    + 8];
  *uint64_t v6 = a1;
  v6[1] = a2;
  v6[2] = a3;
  v6[3] = a4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C20215D4(v7, v8);
  uint64_t v9 = *v6;
  uint64_t v10 = v6[1];
  uint64_t v18 = *v6;
  uint64_t v19 = v10;
  uint64_t v20 = v6[2];
  uint64_t v21 = v6[3];
  sub_1C2082E84();
  objc_allocWithZone(v11);
  sub_1C2021590(v9, v10);
  unint64_t v12 = (void *)sub_1C214A260();
  id v13 = objc_msgSend(v12, sel_view, v18, v19, v20, v21);
  if (v13)
  {
    double v14 = v13;
    id v15 = objc_msgSend(self, sel_clearColor);
    objc_msgSend(v14, sel_setBackgroundColor_, v15);

    id v16 = objc_msgSend(v5, sel_contentView);
    objc_msgSend(v16, sel_addSubview_, v14);

    uint64_t v17 = *(void **)&v5[OBJC_IVAR____TtC19HealthMedicationsUI41MedicationSummaryCollectionViewHeaderCell_medicationSummaryView];
    *(void *)&v5[OBJC_IVAR____TtC19HealthMedicationsUI41MedicationSummaryCollectionViewHeaderCell_medicationSummaryView] = v14;
  }
  sub_1C20826C0();
}

void sub_1C20826C0()
{
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC19HealthMedicationsUI41MedicationSummaryCollectionViewHeaderCell_medicationSummaryView];
  if (v1)
  {
    id v2 = v1;
    objc_msgSend(v2, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    uint64_t v3 = self;
    sub_1C1F13DB0(0, (unint64_t *)&qword_1EBF0CA10, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
    uint64_t v4 = swift_allocObject();
    *(_OWORD *)(v4 + 16) = xmmword_1C21544C0;
    id v5 = objc_msgSend(v0, sel_separatorLayoutGuide);
    id v6 = objc_msgSend(v5, sel_leadingAnchor);

    id v7 = objc_msgSend(v0, sel_contentView);
    id v8 = objc_msgSend(v7, sel_leadingAnchor);

    id v9 = objc_msgSend(v6, sel_constraintEqualToAnchor_, v8);
    *(void *)(v4 + 32) = v9;
    id v10 = objc_msgSend(v2, sel_leadingAnchor);
    id v11 = objc_msgSend(v0, sel_contentView);
    id v12 = objc_msgSend(v11, sel_leadingAnchor);

    id v13 = objc_msgSend(v10, sel_constraintEqualToAnchor_constant_, v12, 8.0);
    *(void *)(v4 + 40) = v13;
    id v14 = objc_msgSend(v2, sel_trailingAnchor);
    id v15 = objc_msgSend(v0, sel_contentView);
    id v16 = objc_msgSend(v15, sel_trailingAnchor);

    id v17 = objc_msgSend(v14, sel_constraintEqualToAnchor_constant_, v16, -8.0);
    *(void *)(v4 + 48) = v17;
    id v18 = objc_msgSend(v2, sel_topAnchor);
    id v19 = objc_msgSend(v0, sel_contentView);
    id v20 = objc_msgSend(v19, sel_topAnchor);

    id v21 = objc_msgSend(v18, sel_constraintEqualToAnchor_constant_, v20, 12.0);
    *(void *)(v4 + 56) = v21;
    id v22 = objc_msgSend(v2, sel_bottomAnchor);
    id v23 = objc_msgSend(v0, sel_contentView);
    id v24 = objc_msgSend(v23, sel_bottomAnchor);

    id v25 = objc_msgSend(v22, sel_constraintEqualToAnchor_constant_, v24, -12.0);
    *(void *)(v4 + 64) = v25;
    sub_1C214A7A0();
    sub_1C1F645D4();
    id v26 = (id)sub_1C214A770();
    swift_bridgeObjectRelease();
    objc_msgSend(v3, sel_activateConstraints_, v26);
  }
}

id sub_1C2082A7C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MedicationSummaryCollectionViewHeaderCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for MedicationSummaryCollectionViewHeaderCell()
{
  return self;
}

ValueMetadata *type metadata accessor for MedicationSummaryItem()
{
  return &type metadata for MedicationSummaryItem;
}

uint64_t sub_1C2082B48@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI41MedicationSummaryCollectionViewHeaderCell_item;
  swift_beginAccess();
  return sub_1C1F2116C(v3, a1);
}

uint64_t sub_1C2082B9C(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI41MedicationSummaryCollectionViewHeaderCell_item;
  swift_beginAccess();
  sub_1C1F32DDC(a1, v3);
  swift_endAccess();
  sub_1C208219C();
  return sub_1C1F374E4(a1);
}

uint64_t (*sub_1C2082C0C(uint64_t a1))()
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1C2082C6C;
}

uint64_t sub_1C2082C70@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC19HealthMedicationsUI41MedicationSummaryCollectionViewHeaderCell_item;
  swift_beginAccess();
  return sub_1C1F2116C(v3, a1);
}

uint64_t sub_1C2082CC8(uint64_t a1)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC19HealthMedicationsUI41MedicationSummaryCollectionViewHeaderCell_item;
  swift_beginAccess();
  sub_1C1F32DDC(a1, v3);
  swift_endAccess();
  sub_1C208219C();
  return sub_1C1F374E4(a1);
}

uint64_t (*sub_1C2082D3C(uint64_t a1))()
{
  *(void *)(a1 + 24) = *v1;
  swift_beginAccess();
  return sub_1C2082C6C;
}

uint64_t sub_1C2082DA0(uint64_t a1, char a2)
{
  uint64_t result = swift_endAccess();
  if ((a2 & 1) == 0) {
    return sub_1C208219C();
  }
  return result;
}

uint64_t sub_1C2082DD4()
{
  return sub_1C2148480();
}

unint64_t sub_1C2082E48()
{
  unint64_t result = qword_1EA2C6668;
  if (!qword_1EA2C6668)
  {
    unint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA2C6668);
  }
  return result;
}

void sub_1C2082E84()
{
  if (!qword_1EA2C6670)
  {
    sub_1C1F13DB0(255, &qword_1EA2C6678, (uint64_t)&type metadata for MedicationSummaryView, MEMORY[0x1E4FBB718]);
    sub_1C2082F0C();
    unint64_t v0 = sub_1C214A270();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C6670);
    }
  }
}

unint64_t sub_1C2082F0C()
{
  unint64_t result = qword_1EA2C6680;
  if (!qword_1EA2C6680)
  {
    sub_1C1F13DB0(255, &qword_1EA2C6678, (uint64_t)&type metadata for MedicationSummaryView, MEMORY[0x1E4FBB718]);
    sub_1C2082FA0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C6680);
  }
  return result;
}

unint64_t sub_1C2082FA0()
{
  unint64_t result = qword_1EA2C6688;
  if (!qword_1EA2C6688)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C6688);
  }
  return result;
}

uint64_t CycleData.localizedDescription.getter()
{
  uint64_t v1 = sub_1C21497F0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  Swift::Int active = CycleData.calculateTotalActiveDays()();
  id v6 = *v0;
  id v7 = objc_msgSend(*v0, sel_scheduleType);
  if (v7 == (id)7)
  {
    char v8 = 1;
  }
  else
  {
    if (v7 != (id)8) {
      goto LABEL_20;
    }
    char v8 = 0;
    active /= 7;
  }
  Swift::Int v9 = CycleData.calculateTotalPauseDays()();
  id v10 = objc_msgSend(v6, sel_scheduleType);
  if (v10 == (id)7)
  {
    if (v8)
    {
      if (qword_1EBF0CA00 != -1) {
        swift_once();
      }
      id v11 = (id)qword_1EBF0CA18;
      swift_bridgeObjectRetain();
      sub_1C2147730();
      swift_bridgeObjectRelease();

      sub_1C2084C18(0, qword_1EBF0B8A0, (uint64_t (*)(uint64_t))sub_1C1FAEE38, MEMORY[0x1E4FBBE00]);
      uint64_t v12 = swift_allocObject();
      *(_OWORD *)(v12 + 16) = xmmword_1C214FCC0;
      uint64_t v13 = MEMORY[0x1E4FBB550];
      uint64_t v14 = MEMORY[0x1E4FBB5C8];
      *(void *)(v12 + 56) = MEMORY[0x1E4FBB550];
      *(void *)(v12 + 64) = v14;
      *(void *)(v12 + 32) = active;
      *(void *)(v12 + 96) = v13;
      *(void *)(v12 + 104) = v14;
      *(void *)(v12 + 72) = v9;
      uint64_t v15 = sub_1C214A5C0();
      swift_bridgeObjectRelease();
LABEL_18:
      swift_bridgeObjectRelease();
      return v15;
    }
    goto LABEL_12;
  }
  if (v10 == (id)8)
  {
    if ((v8 & 1) == 0)
    {
      if (qword_1EBF0CA00 != -1) {
        swift_once();
      }
      id v19 = (id)qword_1EBF0CA18;
      swift_bridgeObjectRetain();
      sub_1C2147730();
      swift_bridgeObjectRelease();

      sub_1C2084C18(0, qword_1EBF0B8A0, (uint64_t (*)(uint64_t))sub_1C1FAEE38, MEMORY[0x1E4FBBE00]);
      uint64_t v20 = swift_allocObject();
      *(_OWORD *)(v20 + 16) = xmmword_1C214FCC0;
      uint64_t v21 = MEMORY[0x1E4FBB550];
      uint64_t v22 = MEMORY[0x1E4FBB5C8];
      *(void *)(v20 + 56) = MEMORY[0x1E4FBB550];
      *(void *)(v20 + 64) = v22;
      *(void *)(v20 + 32) = active;
      *(void *)(v20 + 96) = v21;
      *(void *)(v20 + 104) = v22;
      *(void *)(v20 + 72) = v9 / 7;
      uint64_t v15 = sub_1C214A5C0();
      swift_bridgeObjectRelease();
      goto LABEL_18;
    }
LABEL_12:
    sub_1C21497A0();
    id v16 = sub_1C21497E0();
    os_log_type_t v17 = sub_1C214ABD0();
    if (os_log_type_enabled(v16, v17))
    {
      id v18 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v18 = 0;
      _os_log_impl(&dword_1C1F0B000, v16, v17, "Attempted to display mismatched units for localizeDescription of CycleData", v18, 2u);
      MEMORY[0x1C8754730](v18, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    return 0;
  }
LABEL_20:
  uint64_t result = sub_1C214B910();
  __break(1u);
  return result;
}

uint64_t CycleData.localizedNextPhaseDateChangeDescription.getter()
{
  sub_1C2084C18(0, &qword_1EBF0B1F0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v2 = &v14[-v1 - 8];
  uint64_t v3 = sub_1C2147AC0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  id v6 = &v14[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  CycleData.nextCycleChangeDate.getter((uint64_t)v2);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
  {
    sub_1C1F394F8((uint64_t)v2);
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v2, v3);
  CycleData.currentPhase.getter((uint64_t)v14);
  if (v16 == 255)
  {
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    return 0;
  }
  if (v15)
  {
    if (v16)
    {
      if (qword_1EBF0CA00 != -1) {
        swift_once();
      }
    }
    else if (qword_1EBF0CA00 != -1)
    {
      swift_once();
    }
    id v8 = (id)qword_1EBF0CA18;
    swift_bridgeObjectRetain();
    sub_1C2147730();
    swift_bridgeObjectRelease();

    sub_1C2084C18(0, qword_1EBF0B8A0, (uint64_t (*)(uint64_t))sub_1C1FAEE38, MEMORY[0x1E4FBBE00]);
    uint64_t v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_1C214FCD0;
    Swift::String v10 = Date.formattedWithYearIfDifferent()();
    *(void *)(v9 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v9 + 64) = sub_1C1F31298();
    *(Swift::String *)(v9 + 32) = v10;
    uint64_t v7 = sub_1C214A5C0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    if (v16)
    {
      if (qword_1EBF0CA00 != -1) {
        swift_once();
      }
    }
    else if (qword_1EBF0CA00 != -1)
    {
      swift_once();
    }
    id v11 = (id)qword_1EBF0CA18;
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1C2147730();
    swift_bridgeObjectRelease();
  }
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return v7;
}

void CycleData.currentPhase.getter(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1C2147AC0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  id v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2147AB0();
  uint64_t v7 = *v1;
  id v8 = (void *)sub_1C2147A00();
  type metadata accessor for CycleData();
  uint64_t v9 = (void *)sub_1C2147C40();
  id v10 = objc_msgSend(v7, sel_dayInCycleFor_calendar_, v8, v9);

  if (!v10)
  {
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    *(void *)a1 = 0;
    *(void *)(a1 + 8) = 0;
    char v16 = -1;
    goto LABEL_8;
  }
  id v11 = v10;
  uint64_t v12 = (char *)objc_msgSend(v11, sel_daysIntoCycle);
  if (objc_msgSend(v11, sel_isInPauseInterval))
  {
    Swift::Int v13 = CycleData.calculateTotalPauseDays()();

    BOOL v14 = __OFSUB__(v12, v13);
    uint64_t v15 = (uint64_t)&v12[-v13];
    if (!v14)
    {
      if ((v15 & 0x8000000000000000) == 0 || (BOOL v14 = __OFSUB__(0, v15), v15 = -v15, !v14))
      {
        (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
        *(void *)a1 = v12;
        *(void *)(a1 + 8) = v15;
        char v16 = 1;
LABEL_8:
        *(unsigned char *)(a1 + 16) = v16;
        return;
      }
      goto LABEL_16;
    }
    __break(1u);
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
    return;
  }
  Swift::Int active = CycleData.calculateTotalActiveDays()();

  BOOL v14 = __OFSUB__(v12, active);
  uint64_t v18 = (uint64_t)&v12[-active];
  if (v14) {
    goto LABEL_15;
  }
  if (v18 < 0)
  {
    BOOL v14 = __OFSUB__(0, v18);
    uint64_t v18 = -v18;
    if (v14) {
      goto LABEL_17;
    }
  }
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  *(void *)a1 = v12;
  *(void *)(a1 + 8) = v18;
  *(unsigned char *)(a1 + 16) = 0;
}

uint64_t CycleData.nextCycleChangeDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1C2147AC0();
  uint64_t v12 = *(void *)(v2 - 8);
  uint64_t v3 = MEMORY[0x1F4188790](v2);
  uint64_t v5 = &v13[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = &v13[-v6 - 8];
  CycleData.currentPhase.getter((uint64_t)v13);
  if (v15 == 255)
  {
    id v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56);
    return v11(a1, 1, 1, v2);
  }
  else
  {
    uint64_t v8 = v14;
    sub_1C2147AB0();
    sub_1C2147A40();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t))(v12 + 8);
    uint64_t result = v9(v5, v2);
    if (__OFADD__(v8, 1))
    {
      __break(1u);
    }
    else
    {
      sub_1C21479D0();
      v9(v7, v2);
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v2);
    }
  }
  return result;
}

uint64_t CycleData.localizeCurrentPhaseDescription.getter()
{
  uint64_t v1 = type metadata accessor for CycleData();
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (id *)((char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  CycleData.currentPhase.getter((uint64_t)&v18);
  if (v20 == 255) {
    return 0;
  }
  unint64_t v5 = v19;
  if (!v19)
  {
    if (v20)
    {
      if (qword_1EBF0CA00 != -1) {
        swift_once();
      }
    }
    else if (qword_1EBF0CA00 != -1)
    {
      swift_once();
    }
    id v13 = (id)qword_1EBF0CA18;
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_1C2147730();
    swift_bridgeObjectRelease();

    return v4;
  }
  if (v20) {
    return CycleData.localizedNextPhaseDateChangeDescription.getter();
  }
  id v6 = *v0;
  if (objc_msgSend(*v0, sel_scheduleType) == (id)7)
  {
    if (qword_1EBF0CA00 != -1) {
      swift_once();
    }
    id v7 = (id)qword_1EBF0CA18;
    swift_bridgeObjectRetain();
    sub_1C2147730();
    swift_bridgeObjectRelease();

    sub_1C2084C18(0, qword_1EBF0B8A0, (uint64_t (*)(uint64_t))sub_1C1FAEE38, MEMORY[0x1E4FBBE00]);
    uint64_t v8 = swift_allocObject();
    uint64_t v9 = MEMORY[0x1E4FBB550];
    *(_OWORD *)(v8 + 16) = xmmword_1C214FCC0;
    uint64_t v10 = MEMORY[0x1E4FBB5C8];
    *(void *)(v8 + 56) = v9;
    *(void *)(v8 + 64) = v10;
    *(void *)(v8 + 32) = v5;
    Swift::Int v11 = CycleData.calculateTotalPauseDays()();
    id v12 = objc_msgSend(v6, sel_scheduleType);
    if (v12 == (id)7) {
      goto LABEL_25;
    }
    if (v12 == (id)8)
    {
      Swift::Int v11 = 7 * (v11 / 7);
LABEL_25:
      *(void *)(v8 + 96) = v9;
      *(void *)(v8 + 104) = v10;
      *(void *)(v8 + 72) = v11;
      uint64_t v4 = sub_1C214A5C0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v4;
    }
  }
  else if (objc_msgSend(v6, sel_scheduleType) == (id)8)
  {
    if (qword_1EBF0CA00 != -1) {
      swift_once();
    }
    id v14 = (id)qword_1EBF0CA18;
    swift_bridgeObjectRetain();
    sub_1C2147730();
    swift_bridgeObjectRelease();

    sub_1C2084C18(0, qword_1EBF0B8A0, (uint64_t (*)(uint64_t))sub_1C1FAEE38, MEMORY[0x1E4FBBE00]);
    uint64_t v8 = swift_allocObject();
    uint64_t v9 = MEMORY[0x1E4FBB550];
    *(_OWORD *)(v8 + 16) = xmmword_1C214FCC0;
    uint64_t v10 = MEMORY[0x1E4FBB5C8];
    *(void *)(v8 + 56) = v9;
    *(void *)(v8 + 64) = v10;
    *(void *)(v8 + 32) = v5;
    Swift::Int v11 = CycleData.calculateTotalPauseDays()();
    id v15 = objc_msgSend(v6, sel_scheduleType);
    if (v15 == (id)7) {
      goto LABEL_25;
    }
    if (v15 == (id)8)
    {
      v11 /= 7;
      goto LABEL_25;
    }
  }
  else
  {
    sub_1C2084CC8((uint64_t)v0, (uint64_t)v3);
    uint64_t v18 = 0;
    unint64_t v19 = 0xE000000000000000;
    sub_1C214B7C0();
    sub_1C214A6C0();
    id v17 = objc_msgSend(*v3, sel_scheduleType);
    sub_1C214BA40();
    sub_1C214A6C0();
    swift_bridgeObjectRelease();
  }
  uint64_t result = sub_1C214B910();
  __break(1u);
  return result;
}

uint64_t sub_1C2084348@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_1C21497F0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for CycleData();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  id v13 = (uint64_t *)((char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  if ((char *)objc_msgSend(a1, sel_scheduleType) - 7 > (char *)1)
  {
    sub_1C21497A0();
    unsigned __int8 v20 = sub_1C21497E0();
    os_log_type_t v21 = sub_1C214ABD0();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = (uint8_t *)swift_slowAlloc();
      uint64_t v29 = a2;
      uint64_t v23 = a3;
      uint64_t v24 = v22;
      *(_WORD *)uint64_t v22 = 0;
      id v25 = v24;
      a3 = v23;
      a2 = v29;
      MEMORY[0x1C8754730](v25, -1, -1);
    }

    uint64_t v26 = sub_1C2147CF0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v26 - 8) + 8))(a2, v26);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    uint64_t v19 = 1;
  }
  else
  {
    *id v13 = a1;
    id v14 = (char *)v13 + *(int *)(v10 + 24);
    uint64_t v15 = sub_1C2147CF0();
    uint64_t v16 = *(void *)(v15 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v14, a2, v15);
    id v17 = a1;
    v13[1] = _s19HealthMedicationsUI9CycleDataV22calculateTakeIntervals8scheduleSaySo028HKMedicationScheduleIntervalE0CGSo0jK0C_tFZ_0(v17);
    unint64_t IntervalIndex8scheduleSiSo20HKMedicationScheduleC_tFZ_0 = _s19HealthMedicationsUI9CycleDataV26calculateLastIntervalIndex8scheduleSiSo20HKMedicationScheduleC_tFZ_0(v17);

    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(a2, v15);
    *(void *)((char *)v13 + *(int *)(v10 + 28)) = IntervalIndex8scheduleSiSo20HKMedicationScheduleC_tFZ_0;
    sub_1C1FDF358((uint64_t)v13, a3);
    uint64_t v19 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56))(a3, v19, 1, v10);
}

Swift::Int __swiftcall CycleData.calculateTotalActiveDays()()
{
  Swift::Int result = type metadata accessor for CycleData();
  unint64_t v2 = *(unint64_t *)((char *)v0 + *(int *)(result + 28));
  if ((v2 & 0x8000000000000000) != 0) {
    goto LABEL_29;
  }
  Swift::Int v3 = 0;
  if (!v2) {
    return v3;
  }
  uint64_t v4 = 0;
  unint64_t v17 = *(unint64_t *)((char *)v0 + *(int *)(result + 28));
  id v18 = *v0;
  while (v4 != (char *)v2)
  {
    id v5 = objc_msgSend(v18, sel_timeIntervals);
    sub_1C1F85EA8();
    unint64_t v6 = sub_1C214A780();

    if (v6 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v7 = sub_1C214B930();
      if (v7)
      {
LABEL_7:
        Swift::Int v19 = v3;
        uint64_t v8 = 4;
        while (1)
        {
          if ((v6 & 0xC000000000000001) != 0) {
            Swift::Int result = MEMORY[0x1C8753960](v8 - 4, v6);
          }
          else {
            Swift::Int result = (Swift::Int)*(id *)(v6 + 8 * v8);
          }
          uint64_t v9 = (void *)result;
          uint64_t v10 = v8 - 3;
          if (__OFADD__(v8 - 4, 1))
          {
            __break(1u);
            goto LABEL_27;
          }
          id v11 = objc_msgSend((id)result, sel_cycleIndex);
          if (v11)
          {
            uint64_t v12 = v11;
            id v13 = (char *)objc_msgSend(v11, sel_integerValue);

            if (v13 == v4) {
              break;
            }
          }

          ++v8;
          if (v10 == v7)
          {
            Swift::Int result = swift_bridgeObjectRelease_n();
            goto LABEL_18;
          }
        }
        swift_bridgeObjectRelease_n();
        id v14 = objc_msgSend(v9, sel_cycleIntervalDays);

        if (v14)
        {
          id v15 = objc_msgSend(v14, sel_integerValue);

          goto LABEL_19;
        }
LABEL_18:
        id v15 = 0;
LABEL_19:
        unint64_t v2 = v17;
        Swift::Int v3 = (Swift::Int)v15 + v19;
        if (__OFADD__(v19, v15)) {
          goto LABEL_28;
        }
        goto LABEL_24;
      }
    }
    else
    {
      uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v7) {
        goto LABEL_7;
      }
    }
    Swift::Int result = swift_bridgeObjectRelease_n();
    BOOL v16 = __OFADD__(v3, v7);
    v3 += v7;
    if (v16) {
      goto LABEL_28;
    }
LABEL_24:
    if (++v4 == (char *)v2) {
      return v3;
    }
  }
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

Swift::Int __swiftcall CycleData.calculateTotalPauseDays()()
{
  uint64_t v1 = sub_1C21497F0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = (uint64_t)*v0;
  id v6 = objc_msgSend(*v0, sel_timeIntervals);
  sub_1C1F85EA8();
  unint64_t v7 = sub_1C214A780();

  if (v7 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_1C214B930();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  unint64_t v9 = v8 - 1;
  if (__OFSUB__(v8, 1))
  {
    __break(1u);
  }
  else
  {
    id v10 = objc_msgSend((id)v5, sel_timeIntervals);
    uint64_t v5 = sub_1C214A780();

    if ((v5 & 0xC000000000000001) == 0)
    {
      if ((v9 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if (v9 < *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        id v12 = *(id *)(v5 + 8 * v9 + 32);
        goto LABEL_8;
      }
      __break(1u);
      return result;
    }
  }
  id v12 = (id)MEMORY[0x1C8753960](v8 - 1, v5);
LABEL_8:
  id v13 = v12;
  swift_bridgeObjectRelease();
  id v14 = objc_msgSend(v13, sel_cycleIntervalDays);

  if (v14)
  {
    id v15 = objc_msgSend(v14, sel_integerValue);

    return (Swift::Int)v15;
  }
  else
  {
    sub_1C21497A0();
    BOOL v16 = sub_1C21497E0();
    os_log_type_t v17 = sub_1C214ABD0();
    if (os_log_type_enabled(v16, v17))
    {
      id v18 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v18 = 0;
      _os_log_impl(&dword_1C1F0B000, v16, v17, "Failed to get the cycle Interval days for the last time interval on the schedule during CycleData calculation.", v18, 2u);
      MEMORY[0x1C8754730](v18, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    return 0;
  }
}

id CycleData.takePhaseLength.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C2084B40(CycleData.calculateTotalActiveDays(), a1);
}

id CycleData.pausePhaseLength.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C2084B40(CycleData.calculateTotalPauseDays(), a1);
}

id sub_1C2084B40@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = a1();
  id result = objc_msgSend(*v2, sel_scheduleType);
  if (result == (id)7)
  {
    char v6 = 1;
LABEL_5:
    *(void *)a2 = v4;
    *(unsigned char *)(a2 + 8) = v6;
    return result;
  }
  if (result == (id)8)
  {
    char v6 = 0;
    v4 /= 7;
    goto LABEL_5;
  }
  id result = (id)sub_1C214B910();
  __break(1u);
  return result;
}

void sub_1C2084C18(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t type metadata accessor for CycleData()
{
  uint64_t result = qword_1EA2C6690;
  if (!qword_1EA2C6690) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C2084CC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CycleData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t _s19HealthMedicationsUI9CycleDataV22calculateTakeIntervals8scheduleSaySo028HKMedicationScheduleIntervalE0CGSo0jK0C_tFZ_0(void *a1)
{
  uint64_t v2 = sub_1C21497F0();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  char v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  id v36 = (char *)&v34 - v7;
  id v8 = objc_msgSend(a1, sel_scheduleType);
  id v9 = objc_msgSend(a1, sel_timeIntervals);
  sub_1C1F85EA8();
  unint64_t v10 = sub_1C214A780();

  unint64_t v11 = v10 >> 62;
  if (v8 == (id)7)
  {
    uint64_t v34 = v3;
    uint64_t v35 = v2;
    if (v11) {
      goto LABEL_25;
    }
    uint64_t v12 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    for (; v12; uint64_t v12 = sub_1C214B930())
    {
      uint64_t v13 = 4;
      while (1)
      {
        id v14 = (v10 & 0xC000000000000001) != 0
            ? (id)MEMORY[0x1C8753960](v13 - 4, v10)
            : *(id *)(v10 + 8 * v13);
        id v15 = v14;
        uint64_t v16 = v13 - 3;
        if (__OFADD__(v13 - 4, 1)) {
          break;
        }
        id v17 = objc_msgSend(v14, sel_dose);
        if (!v17 || (id v18 = v17, v19 = objc_msgSend(v17, sel_integerValue), v18, v19))
        {
          swift_bridgeObjectRelease_n();
          sub_1C1F0ED28();
          uint64_t v30 = swift_allocObject();
          *(_OWORD *)(v30 + 16) = xmmword_1C214E170;
          *(void *)(v30 + 32) = v15;
          uint64_t v37 = v30;
          sub_1C214A7A0();
          return v37;
        }

        ++v13;
        if (v16 == v12) {
          goto LABEL_12;
        }
      }
      __break(1u);
LABEL_25:
      swift_bridgeObjectRetain();
    }
LABEL_12:
    swift_bridgeObjectRelease_n();
    unsigned __int8 v20 = v36;
    sub_1C21497A0();
    os_log_type_t v21 = sub_1C21497E0();
    os_log_type_t v22 = sub_1C214ABD0();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v23 = 0;
      MEMORY[0x1C8754730](v23, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v34 + 8))(v20, v35);
    return MEMORY[0x1E4FBC860];
  }
  if (!v11)
  {
    uint64_t v24 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v24) {
      goto LABEL_17;
    }
LABEL_28:
    swift_bridgeObjectRelease();
    sub_1C21497A0();
    uint64_t v31 = sub_1C21497E0();
    os_log_type_t v32 = sub_1C214ABD0();
    if (os_log_type_enabled(v31, v32))
    {
      id v33 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v33 = 0;
      MEMORY[0x1C8754730](v33, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
    return MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRetain();
  uint64_t v24 = sub_1C214B930();
  swift_bridgeObjectRelease();
  if (!v24) {
    goto LABEL_28;
  }
LABEL_17:
  unint64_t result = v24 - 1;
  if (__OFSUB__(v24, 1))
  {
    __break(1u);
    goto LABEL_34;
  }
  if ((v10 & 0xC000000000000001) != 0)
  {
LABEL_34:
    id v26 = (id)MEMORY[0x1C8753960](result, v10);
    goto LABEL_22;
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (result < *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v26 = *(id *)(v10 + 8 * result + 32);
LABEL_22:
    id v27 = v26;
    swift_bridgeObjectRelease();
    id v28 = objc_msgSend(a1, sel_timeIntervals);
    sub_1C214A780();

    uint64_t v37 = (uint64_t)v27;
    sub_1C2085A80();
    uint64_t v29 = sub_1C214A7B0();

    swift_bridgeObjectRelease();
    return v29;
  }
  __break(1u);
  return result;
}

unint64_t _s19HealthMedicationsUI9CycleDataV26calculateLastIntervalIndex8scheduleSiSo20HKMedicationScheduleC_tFZ_0(void *a1)
{
  uint64_t v2 = sub_1C21497F0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = objc_msgSend(a1, sel_timeIntervals);
  sub_1C1F85EA8();
  unint64_t v7 = sub_1C214A780();

  if (v7 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_1C214B930();
    swift_bridgeObjectRelease();
    if (v8)
    {
LABEL_3:
      unint64_t result = v8 - 1;
      if (__OFSUB__(v8, 1))
      {
        __break(1u);
      }
      else if ((v7 & 0xC000000000000001) == 0)
      {
        if ((result & 0x8000000000000000) != 0)
        {
          __break(1u);
        }
        else if (result < *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          id v10 = *(id *)(v7 + 8 * result + 32);
          goto LABEL_8;
        }
        __break(1u);
        return result;
      }
      id v10 = (id)MEMORY[0x1C8753960](result, v7);
LABEL_8:
      unint64_t v11 = v10;
      swift_bridgeObjectRelease();
      id v12 = objc_msgSend(v11, sel_cycleIndex);

      if (v12)
      {
        id v13 = objc_msgSend(v12, sel_integerValue);

        return (unint64_t)v13;
      }
      goto LABEL_12;
    }
  }
  else
  {
    uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v8) {
      goto LABEL_3;
    }
  }
  swift_bridgeObjectRelease();
LABEL_12:
  sub_1C21497A0();
  id v14 = sub_1C21497E0();
  os_log_type_t v15 = sub_1C214ABD0();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v16 = 0;
    MEMORY[0x1C8754730](v16, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return 0;
}

ValueMetadata *type metadata accessor for CyclePhase()
{
  return &type metadata for CyclePhase;
}

char *initializeBufferWithCopyOfBuffer for CycleData(char *a1, char **a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    unint64_t v7 = &v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    unint64_t v7 = a1;
    *((void *)a1 + 1) = a2[1];
    uint64_t v8 = *(int *)(a3 + 24);
    id v9 = &a1[v8];
    uint64_t v10 = (uint64_t)a2 + v8;
    uint64_t v11 = sub_1C2147CF0();
    id v12 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
    id v13 = v4;
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    *(void *)&v7[*(int *)(a3 + 28)] = *(char **)((char *)a2 + *(int *)(a3 + 28));
  }
  return v7;
}

uint64_t destroy for CycleData(id *a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = (char *)a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_1C2147CF0();
  id v6 = *(uint64_t (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

void *initializeWithCopy for CycleData(void *a1, uint64_t a2, uint64_t a3)
{
  unint64_t v7 = *(void **)a2;
  uint64_t v6 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v6;
  uint64_t v8 = *(int *)(a3 + 24);
  id v9 = (char *)a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_1C2147CF0();
  id v12 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
  id v13 = v7;
  swift_bridgeObjectRetain();
  v12(v9, v10, v11);
  *(void *)((char *)a1 + *(int *)(a3 + 28)) = *(void *)(a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t assignWithCopy for CycleData(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void **)a2;
  unint64_t v7 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v8 = v6;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v9 = *(int *)(a3 + 24);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = sub_1C2147CF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 24))(v10, v11, v12);
  *(void *)(a1 + *(int *)(a3 + 28)) = *(void *)(a2 + *(int *)(a3 + 28));
  return a1;
}

void *initializeWithTake for CycleData(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = *(int *)(a3 + 24);
  id v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1C2147CF0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  *(void *)((char *)a1 + *(int *)(a3 + 28)) = *(void *)((char *)a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t assignWithTake for CycleData(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6 = *(void **)a1;
  *(void *)a1 = *a2;

  *(void *)(a1 + 8) = a2[1];
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1C2147CF0();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  *(void *)(a1 + *(int *)(a3 + 28)) = *(void *)((char *)a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t getEnumTagSinglePayload for CycleData(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C2085860);
}

uint64_t sub_1C2085860(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1C2147CF0();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for CycleData(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C2085924);
}

void *sub_1C2085924(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *unint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1C2147CF0();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 24);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1C20859CC()
{
  uint64_t result = sub_1C2147CF0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_1C2085A80()
{
  unint64_t result = qword_1EA2C66A0;
  if (!qword_1EA2C66A0)
  {
    sub_1C1F85EA8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1EA2C66A0);
  }
  return result;
}

uint64_t sub_1C2085AD8(uint64_t a1)
{
  uint64_t v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1C214B680();
    type metadata accessor for MedicationsDoseLogViewModel(0);
    sub_1C20921B4(&qword_1EA2C66C0, (void (*)(uint64_t))type metadata accessor for MedicationsDoseLogViewModel);
    uint64_t result = sub_1C214AAA0();
    uint64_t v1 = v18;
    uint64_t v17 = v19;
    uint64_t v3 = v20;
    uint64_t v4 = v21;
    unint64_t v5 = v22;
  }
  else
  {
    uint64_t v6 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v17 = a1 + 56;
    uint64_t v3 = ~v6;
    uint64_t v7 = -v6;
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v5 = v8 & *(void *)(a1 + 56);
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v4 = 0;
  }
  int64_t v9 = (unint64_t)(v3 + 64) >> 6;
  if (v1 < 0) {
    goto LABEL_10;
  }
LABEL_8:
  if (v5)
  {
    uint64_t v10 = (v5 - 1) & v5;
    unint64_t v11 = __clz(__rbit64(v5)) | (v4 << 6);
    uint64_t v12 = v4;
    goto LABEL_29;
  }
  int64_t v14 = v4 + 1;
  if (!__OFADD__(v4, 1))
  {
    if (v14 < v9)
    {
      unint64_t v15 = *(void *)(v17 + 8 * v14);
      uint64_t v12 = v4 + 1;
      if (v15) {
        goto LABEL_28;
      }
      uint64_t v12 = v4 + 2;
      if (v4 + 2 < v9)
      {
        unint64_t v15 = *(void *)(v17 + 8 * v12);
        if (v15) {
          goto LABEL_28;
        }
        uint64_t v12 = v4 + 3;
        if (v4 + 3 < v9)
        {
          unint64_t v15 = *(void *)(v17 + 8 * v12);
          if (v15) {
            goto LABEL_28;
          }
          uint64_t v12 = v4 + 4;
          if (v4 + 4 < v9)
          {
            unint64_t v15 = *(void *)(v17 + 8 * v12);
            if (v15) {
              goto LABEL_28;
            }
            uint64_t v12 = v4 + 5;
            if (v4 + 5 < v9)
            {
              unint64_t v15 = *(void *)(v17 + 8 * v12);
              if (!v15)
              {
                uint64_t v16 = v4 + 6;
                while (v9 != v16)
                {
                  unint64_t v15 = *(void *)(v17 + 8 * v16++);
                  if (v15)
                  {
                    uint64_t v12 = v16 - 1;
                    goto LABEL_28;
                  }
                }
                goto LABEL_33;
              }
LABEL_28:
              uint64_t v10 = (v15 - 1) & v15;
              unint64_t v11 = __clz(__rbit64(v15)) + (v12 << 6);
LABEL_29:
              uint64_t v13 = *(void *)(*(void *)(v1 + 48) + 8 * v11);
              swift_retain();
              if (v13)
              {
                do
                {
                  if (*(void *)(v13 + 48) == 5) {
                    break;
                  }
                  uint64_t result = swift_release();
                  uint64_t v4 = v12;
                  unint64_t v5 = v10;
                  if ((v1 & 0x8000000000000000) == 0) {
                    goto LABEL_8;
                  }
LABEL_10:
                  if (!sub_1C214B700()) {
                    goto LABEL_33;
                  }
                  type metadata accessor for MedicationsDoseLogViewModel(0);
                  swift_unknownObjectRetain();
                  swift_dynamicCast();
                  uint64_t v13 = v23;
                  swift_unknownObjectRelease();
                  uint64_t v12 = v4;
                  uint64_t v10 = v5;
                }
                while (v23);
              }
              goto LABEL_34;
            }
          }
        }
      }
    }
LABEL_33:
    uint64_t v13 = 0;
LABEL_34:
    sub_1C1F495B8();
    return v13;
  }
  __break(1u);
  return result;
}

uint64_t MedicationsLogViewController.__allocating_init(medicationDoseLogList:asNeededMedicationDoseLogList:healthStore:showRecordAll:provenance:context:)(uint64_t a1, uint64_t a2, void *a3, int a4, uint64_t a5, char a6, uint64_t a7, char a8)
{
  char v15 = a6 & 1;
  char v16 = a8 & 1;
  id v17 = objc_allocWithZone(v8);
  return MedicationsLogViewController.init(medicationDoseLogList:asNeededMedicationDoseLogList:healthStore:showRecordAll:provenance:context:)(a1, a2, a3, a4, a5, v15, a7, v16);
}

uint64_t sub_1C2085E2C(uint64_t a1)
{
  uint64_t v50 = sub_1C2147AC0();
  uint64_t v2 = *(void *)(v50 - 8);
  uint64_t v3 = MEMORY[0x1F4188790](v50);
  os_log_type_t v52 = (char *)v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  id v51 = (char *)v43 - v5;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1C214B680();
    type metadata accessor for MedicationsDoseLogViewModel(0);
    sub_1C20921B4(&qword_1EA2C66C0, (void (*)(uint64_t))type metadata accessor for MedicationsDoseLogViewModel);
    uint64_t result = sub_1C214AAA0();
    a1 = v56;
    uint64_t v47 = v57;
    uint64_t v7 = v58;
    uint64_t v8 = v59;
    unint64_t v9 = v60;
  }
  else
  {
    uint64_t v10 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v11 = *(void *)(a1 + 56);
    uint64_t v47 = a1 + 56;
    uint64_t v7 = ~v10;
    uint64_t v12 = -v10;
    if (v12 < 64) {
      uint64_t v13 = ~(-1 << v12);
    }
    else {
      uint64_t v13 = -1;
    }
    unint64_t v9 = v13 & v11;
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v8 = 0;
  }
  v43[4] = a1 & 0x7FFFFFFFFFFFFFFFLL;
  v43[2] = v7;
  int64_t v44 = (unint64_t)(v7 + 64) >> 6;
  uint64_t v48 = (void (**)(char *, uint64_t))(v2 + 8);
  id v49 = (void (**)(char *, uint64_t, uint64_t))(v2 + 16);
  v43[3] = MEMORY[0x1E4FBC838] + 8;
  while (1)
  {
    unint64_t v16 = v9;
    uint64_t v17 = v8;
    if (a1 < 0)
    {
      uint64_t v20 = sub_1C214B700();
      if (!v20) {
        goto LABEL_40;
      }
      uint64_t v54 = v20;
      type metadata accessor for MedicationsDoseLogViewModel(0);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      uint64_t v21 = v55;
      swift_unknownObjectRelease();
      if (!v21) {
        goto LABEL_40;
      }
      goto LABEL_32;
    }
    if (!v9) {
      break;
    }
    unint64_t v18 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    unint64_t v19 = v18 | (v8 << 6);
LABEL_31:
    uint64_t v21 = *(void *)(*(void *)(a1 + 48) + 8 * v19);
    swift_retain();
    if (!v21) {
      goto LABEL_40;
    }
LABEL_32:
    id v25 = *(void **)(v21 + 24);
    if (v25)
    {
      id v26 = v25;
      if (objc_msgSend(v26, sel_status) != *(id *)(v21 + 48)
        || (id v27 = objc_msgSend(v26, sel_doseQuantity)) == 0
        || (id v28 = v27, objc_msgSend(v27, sel_doubleValue), v30 = v29, v28, v30 != *(double *)(v21 + 40)))
      {
        swift_release();

LABEL_39:
        uint64_t v42 = 0;
        goto LABEL_41;
      }
      uint64_t v45 = v17;
      unint64_t v46 = v16;
      id v31 = objc_msgSend(v26, sel_startDate);
      os_log_type_t v32 = v51;
      sub_1C2147A60();

      uint64_t v33 = v21 + OBJC_IVAR____TtC19HealthMedicationsUI27MedicationsDoseLogViewModel_logDate;
      swift_beginAccess();
      uint64_t v34 = *v49;
      uint64_t v53 = v8;
      uint64_t v35 = a1;
      id v36 = v52;
      uint64_t v37 = v33;
      uint64_t v38 = v50;
      v34(v52, v37, v50);
      sub_1C20921B4(&qword_1EA2C5070, MEMORY[0x1E4F27928]);
      char v39 = sub_1C214A5A0();

      id v40 = *v48;
      double v41 = v36;
      a1 = v35;
      uint64_t v8 = v53;
      (*v48)(v41, v38);
      v40(v32, v38);
      uint64_t result = swift_release();
      if ((v39 & 1) == 0)
      {
        uint64_t v42 = 0;
        goto LABEL_41;
      }
    }
    else
    {
      uint64_t v14 = *(void *)(v21 + 48);
      uint64_t v15 = *(void *)(v21 + OBJC_IVAR____TtC19HealthMedicationsUI27MedicationsDoseLogViewModel_initialStatus);
      uint64_t result = swift_release();
      if (v14 != v15) {
        goto LABEL_39;
      }
    }
  }
  int64_t v22 = v8 + 1;
  if (!__OFADD__(v8, 1))
  {
    if (v22 >= v44) {
      goto LABEL_40;
    }
    unint64_t v23 = *(void *)(v47 + 8 * v22);
    ++v8;
    if (!v23)
    {
      uint64_t v8 = v17 + 2;
      if (v17 + 2 >= v44) {
        goto LABEL_40;
      }
      unint64_t v23 = *(void *)(v47 + 8 * v8);
      if (!v23)
      {
        uint64_t v8 = v17 + 3;
        if (v17 + 3 >= v44) {
          goto LABEL_40;
        }
        unint64_t v23 = *(void *)(v47 + 8 * v8);
        if (!v23)
        {
          uint64_t v8 = v17 + 4;
          if (v17 + 4 >= v44) {
            goto LABEL_40;
          }
          unint64_t v23 = *(void *)(v47 + 8 * v8);
          if (!v23)
          {
            uint64_t v8 = v17 + 5;
            if (v17 + 5 >= v44) {
              goto LABEL_40;
            }
            unint64_t v23 = *(void *)(v47 + 8 * v8);
            if (!v23)
            {
              uint64_t v24 = v17 + 6;
              while (v44 != v24)
              {
                unint64_t v23 = *(void *)(v47 + 8 * v24++);
                if (v23)
                {
                  uint64_t v8 = v24 - 1;
                  goto LABEL_30;
                }
              }
LABEL_40:
              uint64_t v42 = 1;
LABEL_41:
              sub_1C1F495B8();
              return v42;
            }
          }
        }
      }
    }
LABEL_30:
    unint64_t v9 = (v23 - 1) & v23;
    unint64_t v19 = __clz(__rbit64(v23)) + (v8 << 6);
    goto LABEL_31;
  }
  __break(1u);
  return result;
}

uint64_t MedicationsLogViewController.init(medicationDoseLogList:asNeededMedicationDoseLogList:healthStore:showRecordAll:provenance:context:)(uint64_t a1, uint64_t a2, void *a3, int a4, uint64_t a5, char a6, uint64_t a7, char a8)
{
  unint64_t v9 = v8;
  int v118 = a4;
  uint64_t v119 = type metadata accessor for MedicationsDoseLogHeaderItem(0);
  uint64_t v17 = MEMORY[0x1F4188790](v119);
  unint64_t v19 = (char *)&v112 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  v120 = (char *)&v112 - v20;
  uint64_t v21 = sub_1C2147AC0();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v128 = v21;
  uint64_t v129 = v22;
  uint64_t v23 = MEMORY[0x1F4188790](v21);
  uint64_t result = MEMORY[0x1F4188790](v23);
  uint64_t v127 = (char *)&v112 - v26;
  *(void *)&v9[qword_1EBF0C3E8] = MEMORY[0x1E4FBC870];
  id v27 = &v9[qword_1EBF0C420];
  *(int64x2_t *)id v27 = vdupq_n_s64(0x4040000000000000uLL);
  *((_OWORD *)v27 + 1) = xmmword_1C21597C0;
  *(void *)&v9[qword_1EBF0C408] = 0x4049000000000000;
  p_info = _TtC19HealthMedicationsUI30MedicationDoseLogListViewModel.info;
  uint64_t v121 = qword_1EBF0C3C8;
  *(void *)&v9[qword_1EBF0C3C8] = 0;
  uint64_t v124 = qword_1EBF0C3B8;
  *(void *)&v9[qword_1EBF0C3B8] = 0;
  uint64_t v29 = qword_1EBF0C418;
  *(void *)&v9[qword_1EBF0C418] = 0;
  uint64_t v30 = qword_1EBF0C3F0;
  *(void *)&v9[qword_1EBF0C3F0] = 0;
  *(void *)&v9[qword_1EBF0C430] = 0;
  *(void *)&v9[qword_1EBF0C428] = 0;
  *(void *)&v9[qword_1EBF0C3E0] = 0;
  *(void *)&v9[qword_1EBF0C3D8] = 0;
  *(void *)&v9[qword_1EBF0C3C0] = a1;
  *(void *)&v9[qword_1EBF0C3D0] = a2;
  if (a6)
  {
    __break(1u);
    goto LABEL_66;
  }
  uint64_t v114 = v29;
  uint64_t v115 = v30;
  uint64_t v116 = v25;
  v117 = v19;
  *(void *)&v9[qword_1EBF0C3F8] = a5;
  if (a8)
  {
LABEL_66:
    __break(1u);
    goto LABEL_67;
  }
  *(void *)&v9[qword_1EBF0C438] = a7;
  sub_1C2149170();
  swift_allocObject();
  swift_retain();
  id v31 = v9;
  swift_retain();
  *(void *)&v31[qword_1EBF0C410] = sub_1C2149160();
  *(void *)&v31[qword_1EBF0C400] = a3;
  uint64_t v122 = a2;
  id v123 = a3;
  uint64_t v32 = v128;
  uint64_t v125 = a1;
  if (a1)
  {
    unint64_t v33 = *(void *)(a1 + 16);
    if (v33 >> 62)
    {
      id v57 = a3;
      swift_bridgeObjectRetain();
      uint64_t v58 = sub_1C214B930();
      swift_bridgeObjectRelease();
      unint64_t v36 = (unint64_t)v127;
      if (v58)
      {
LABEL_6:
        sub_1C2147AB0();
        if (!a2)
        {
          uint64_t v37 = 0;
          uint64_t v38 = 0;
          uint64_t v126 = 0;
          goto LABEL_25;
        }
LABEL_13:
        unint64_t v41 = *(void *)(a2 + 16);
        if (v41 >> 62)
        {
          swift_retain();
          swift_bridgeObjectRetain();
          uint64_t v37 = sub_1C214B930();
          swift_bridgeObjectRelease();
          if (v37) {
            goto LABEL_15;
          }
        }
        else
        {
          uint64_t v37 = *(void *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x10);
          swift_retain();
          if (v37)
          {
LABEL_15:
            uint64_t v113 = v31;
            unint64_t v42 = *(void *)(a2 + 16);
            uint64_t v43 = qword_1EBF0CA00;
            swift_bridgeObjectRetain();
            uint64_t v44 = a2;
            if (v43 != -1) {
              swift_once();
            }
            id v45 = (id)qword_1EBF0CA18;
            swift_bridgeObjectRetain();
            uint64_t v46 = sub_1C2147730();
            uint64_t v48 = v47;
            swift_bridgeObjectRelease();

            type metadata accessor for MedicationsLogDataSource();
            swift_allocObject();
            uint64_t v49 = sub_1C20DAB24(v42, v46, v48, 0, 0);
            *(void *)&v9[v121] = v49;
            swift_release();
            id v50 = (id)qword_1EBF0CA18;
            swift_bridgeObjectRetain();
            uint64_t v38 = sub_1C2147730();
            uint64_t v37 = v51;
            swift_bridgeObjectRelease();

            unint64_t v52 = *(void *)(v44 + 16);
            uint64_t v53 = v44;
            if (v52 >> 62)
            {
              swift_bridgeObjectRetain();
              uint64_t v53 = v44;
              uint64_t v126 = sub_1C214B930();
              swift_bridgeObjectRelease();
            }
            else
            {
              uint64_t v126 = *(void *)((v52 & 0xFFFFFFFFFFFFFF8) + 0x10);
            }
            uint64_t v54 = v128;
            uint64_t v55 = v129;
            unint64_t v36 = (unint64_t)v127;
            (*(void (**)(char *, uint64_t))(v129 + 8))(v127, v128);
            p_info = *(__objc2_class_ro ***)(v53
                                           + OBJC_IVAR____TtC19HealthMedicationsUI30MedicationDoseLogListViewModel_title);
            unint64_t v56 = *(void *)(v53 + OBJC_IVAR____TtC19HealthMedicationsUI30MedicationDoseLogListViewModel_title + 8);
            uint64_t v32 = v54;
            (*(void (**)(unint64_t, uint64_t, uint64_t))(v55 + 16))(v36, v53 + OBJC_IVAR____TtC19HealthMedicationsUI30MedicationDoseLogListViewModel_date, v54);
            swift_bridgeObjectRetain();
            id v31 = v113;
            a1 = v125;
LABEL_24:
            swift_release();
            if (!a1)
            {
              swift_bridgeObjectRelease();
              uint64_t v63 = v129;
              unint64_t v64 = (unint64_t)v120;
              goto LABEL_30;
            }
LABEL_25:
            swift_retain();
            swift_bridgeObjectRelease();
            type metadata accessor for MedicationsLogDataSource();
            swift_allocObject();
            unint64_t v59 = swift_bridgeObjectRetain();
            uint64_t v60 = sub_1C20DAB24(v59, v38, v37, 0, 0);
            *(void *)&v9[v124] = v60;
            swift_release();
            uint64_t v61 = *(void *)(a1 + 16);
            if ((unint64_t)v61 >> 62)
            {
              if (v61 < 0) {
                uint64_t v37 = *(void *)(a1 + 16);
              }
              else {
                uint64_t v37 = v61 & 0xFFFFFFFFFFFFFF8;
              }
              swift_bridgeObjectRetain();
              uint64_t v62 = sub_1C214B930();
              swift_bridgeObjectRelease();
            }
            else
            {
              uint64_t v62 = *(void *)((v61 & 0xFFFFFFFFFFFFFF8) + 0x10);
            }
            uint64_t v63 = v129;
            unint64_t v64 = (unint64_t)v120;
            (*(void (**)(unint64_t, uint64_t))(v129 + 8))(v36, v32);
            if (__OFADD__(v126, v62))
            {
              __break(1u);
              goto LABEL_52;
            }
            v126 += v62;
            p_info = *(__objc2_class_ro ***)(v125
                                           + OBJC_IVAR____TtC19HealthMedicationsUI30MedicationDoseLogListViewModel_title);
            unint64_t v56 = *(void *)(v125 + OBJC_IVAR____TtC19HealthMedicationsUI30MedicationDoseLogListViewModel_title + 8);
            (*(void (**)(unint64_t, uint64_t, uint64_t))(v63 + 16))(v36, v125 + OBJC_IVAR____TtC19HealthMedicationsUI30MedicationDoseLogListViewModel_date, v32);
            swift_bridgeObjectRetain();
            swift_release();
LABEL_30:
            uint64_t v65 = v32;
            uint64_t v66 = (uint64_t)v117;
            if ((v118 & 1) == 0)
            {
              uint64_t v113 = v31;
              id v80 = *(void (**)(uint64_t, unint64_t, uint64_t))(v63 + 16);
              unint64_t v81 = v116;
              v80(v116, v36, v65);
              type metadata accessor for MedicationsDoseLogHeaderDataSource(0);
              uint64_t v82 = v65;
              uint64_t v83 = swift_allocObject();
              id v84 = (int *)v119;
              v80(v66 + *(int *)(v119 + 28), v81, v82);
              swift_retain();
              sub_1C2147B10();
              id v85 = (void *)(v66 + v84[5]);
              id v86 = off_1EA2C3820;
              *id v85 = qword_1EA2C3818;
              v85[1] = v86;
              id v87 = (__objc2_class_ro ***)(v66 + v84[6]);
              *id v87 = p_info;
              v87[1] = (__objc2_class_ro **)v56;
              *(void *)(v66 + v84[8]) = v126;
              sub_1C2092298(v66, v83 + qword_1EA2C7C30, type metadata accessor for MedicationsDoseLogHeaderItem);
              swift_bridgeObjectRetain();
              swift_release();
              sub_1C2091F94(0, (unint64_t *)&qword_1EA2C2DD0, MEMORY[0x1E4F66468], MEMORY[0x1E4FBBE00]);
              sub_1C2148540();
              *(_OWORD *)(swift_allocObject() + 16) = xmmword_1C214FCD0;
              id v88 = (void *)MEMORY[0x1E4FBC860];
              sub_1C2148500();
              uint64_t v89 = sub_1C21489B0();
              (*(void (**)(unint64_t, uint64_t))(v129 + 8))(v81, v82);
              swift_retain();
              uint64_t v62 = (uint64_t)sub_1C1F3B234(0, 1, 1, v88);
              unint64_t v91 = *(void *)(v62 + 16);
              unint64_t v90 = *(void *)(v62 + 24);
              if (v91 >= v90 >> 1) {
                uint64_t v62 = (uint64_t)sub_1C1F3B234((void *)(v90 > 1), v91 + 1, 1, (void *)v62);
              }
              p_info = (__objc2_class_ro **)(_TtC19HealthMedicationsUI30MedicationDoseLogListViewModel + 32);
              *(void *)(v62 + 16) = v91 + 1;
              uint64_t v92 = v62 + 16 * v91;
              *(void *)(v92 + 32) = v89;
              *(void *)(v92 + 40) = MEMORY[0x1E4F66470];
              swift_release();
              uint64_t v63 = v129;
              id v31 = v113;
              uint64_t v32 = v126;
LABEL_39:
              uint64_t v61 = *(void *)&v9[v121];
              if (!v61)
              {
LABEL_42:
                uint64_t v94 = *(void *)&v9[v124];
                if (v94)
                {
                  unint64_t v95 = *(void *)(v62 + 16);
                  unint64_t v96 = *(void *)(v62 + 24);
                  swift_retain_n();
                  if (v95 >= v96 >> 1) {
                    uint64_t v62 = (uint64_t)sub_1C1F3B234((void *)(v96 > 1), v95 + 1, 1, (void *)v62);
                  }
                  *(void *)(v62 + 16) = v95 + 1;
                  uint64_t v97 = v62 + 16 * v95;
                  *(void *)(v97 + 32) = v94;
                  *(void *)(v97 + 40) = MEMORY[0x1E4F66470];
                  swift_release();
                }
                (*(void (**)(char *, uint64_t))(v63 + 8))(v127, v128);
                goto LABEL_55;
              }
              unint64_t v36 = *(void *)(v62 + 16);
              unint64_t v64 = *(void *)(v62 + 24);
              uint64_t v37 = v36 + 1;
              swift_retain_n();
              if (v36 < v64 >> 1)
              {
LABEL_41:
                uint64_t v63 = v129;
                *(void *)(v62 + 16) = v37;
                uint64_t v93 = v62 + 16 * v36;
                *(void *)(v93 + 32) = v61;
                *(void *)(v93 + 40) = MEMORY[0x1E4F66470];
                swift_release();
                goto LABEL_42;
              }
LABEL_52:
              uint64_t v62 = (uint64_t)sub_1C1F3B234((void *)(v64 > 1), v37, 1, (void *)v62);
              goto LABEL_41;
            }
            id v67 = (int *)v119;
            (*(void (**)(unint64_t, unint64_t, uint64_t))(v63 + 16))(v64 + *(int *)(v119 + 28), v36, v65);
            sub_1C2147B10();
            uint64_t v68 = (void *)(v64 + v67[5]);
            id v69 = off_1EA2C3820;
            *uint64_t v68 = qword_1EA2C3818;
            v68[1] = v69;
            id v70 = (__objc2_class_ro ***)(v64 + v67[6]);
            char *v70 = p_info;
            v70[1] = (__objc2_class_ro **)v56;
            *(void *)(v64 + v67[8]) = v126;
            type metadata accessor for MedicationDoseRecordAllViewModel(0);
            uint64_t v71 = swift_allocObject();
            *(_WORD *)(v71 + 16) = 1;
            swift_bridgeObjectRetain();
            sub_1C2147AB0();
            uint64_t v72 = v115;
            *(void *)&v9[v115] = v71;
            uint64_t result = swift_release();
            if (*(void *)&v9[v72])
            {
              sub_1C1F524E0(v64, v66);
              type metadata accessor for MedicationsRecordAllDataSource(0);
              swift_allocObject();
              uint64_t v73 = swift_retain();
              uint64_t v74 = sub_1C2077BB4(v73, v66, 0, 0);
              swift_release();
              uint64_t v75 = v114;
              *(void *)&v9[v114] = v74;
              uint64_t result = swift_release();
              uint64_t v76 = *(void *)&v9[v75];
              p_info = (__objc2_class_ro **)(_TtC19HealthMedicationsUI30MedicationDoseLogListViewModel + 32);
              if (v76)
              {
                swift_retain();
                uint64_t v62 = (uint64_t)sub_1C1F3B234(0, 1, 1, MEMORY[0x1E4FBC860]);
                unint64_t v78 = *(void *)(v62 + 16);
                unint64_t v77 = *(void *)(v62 + 24);
                uint64_t v32 = v126;
                if (v78 >= v77 >> 1) {
                  uint64_t v62 = (uint64_t)sub_1C1F3B234((void *)(v77 > 1), v78 + 1, 1, (void *)v62);
                }
                *(void *)(v62 + 16) = v78 + 1;
                uint64_t v79 = v62 + 16 * v78;
                *(void *)(v79 + 32) = v76;
                *(void *)(v79 + 40) = MEMORY[0x1E4F66470];
                sub_1C2091E48(v64, type metadata accessor for MedicationsDoseLogHeaderItem);
                goto LABEL_39;
              }
LABEL_68:
              __break(1u);
              return result;
            }
LABEL_67:
            __break(1u);
            goto LABEL_68;
          }
        }
        uint64_t v126 = 0;
        uint64_t v38 = 0;
        p_info = 0;
        unint64_t v56 = 0xE000000000000000;
        goto LABEL_24;
      }
    }
    else
    {
      uint64_t v34 = *(void *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x10);
      id v35 = a3;
      unint64_t v36 = (unint64_t)v127;
      if (v34) {
        goto LABEL_6;
      }
    }
  }
  else
  {
    id v39 = a3;
    unint64_t v36 = (unint64_t)v127;
  }
  if (a2)
  {
    unint64_t v40 = *(void *)(a2 + 16);
    if (v40 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v98 = sub_1C214B930();
      swift_bridgeObjectRelease();
      if (v98) {
        goto LABEL_12;
      }
    }
    else if (*(void *)((v40 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_12:
      sub_1C2147AB0();
      goto LABEL_13;
    }
  }
  uint64_t v32 = 0;
LABEL_55:
  *(void *)&v31[qword_1EBF0C440] = v32;

  sub_1C2148820();
  swift_allocObject();
  sub_1C2148840();
  id v99 = (char *)sub_1C2148AC0();
  id v100 = v99;
  uint64_t v101 = *(void *)&v99[qword_1EBF0C418];
  if (v101)
  {
    *(void *)(v101 + qword_1EBF0E9C8 + 8) = &off_1F1D78D30;
    swift_unknownObjectWeakAssign();
    id v102 = v100;
    swift_retain();
    sub_1C20770F0();
    swift_release();
  }
  else
  {
    id v103 = v99;
  }
  unint64_t v104 = *(void *)((char *)&p_info[121]->flags + (void)v100);
  if (v104)
  {
    *(void *)(v104 + qword_1EBF0C328 + 8) = &off_1F1D78D30;
    swift_unknownObjectWeakAssign();
    uint64_t v105 = v100;
    swift_retain();
    unint64_t v106 = swift_bridgeObjectRetain();
    uint64_t v107 = sub_1C2091BCC(v106, v104);
    swift_bridgeObjectRelease();
    sub_1C1F380A0(v107);
    swift_bridgeObjectRelease();
    sub_1C21485C0();
    swift_release();

    swift_bridgeObjectRelease();
  }
  unint64_t v108 = *(void *)&v100[qword_1EBF0C3B8];
  if (v108)
  {
    *(void *)(v108 + qword_1EBF0C328 + 8) = &off_1F1D78D30;
    swift_unknownObjectWeakAssign();
    v109 = v100;
    swift_retain();
    unint64_t v110 = swift_bridgeObjectRetain();
    uint64_t v111 = sub_1C2091BCC(v110, v108);
    swift_bridgeObjectRelease();
    sub_1C1F380A0(v111);
    swift_bridgeObjectRelease();
    sub_1C21485C0();
    swift_release();
    swift_release();
    swift_release();

    swift_bridgeObjectRelease();
  }
  else
  {

    swift_release();
    swift_release();
  }
  return (uint64_t)v100;
}

id sub_1C2087260()
{
  uint64_t v1 = qword_1EBF0C428;
  uint64_t v2 = *(void **)(v0 + qword_1EBF0C428);
  if (v2)
  {
    id v3 = *(id *)(v0 + qword_1EBF0C428);
  }
  else
  {
    id v4 = sub_1C20872C0();
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_1C20872C0()
{
  id v0 = objc_msgSend(self, sel_boldButton);
  if (qword_1EBF0CA00 != -1) {
    swift_once();
  }
  id v1 = (id)qword_1EBF0CA18;
  swift_bridgeObjectRetain();
  sub_1C2147730();
  swift_bridgeObjectRelease();

  uint64_t v2 = (void *)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_setTitle_forState_, v2, 0, 0xE000000000000000);

  return v0;
}

id sub_1C20873F0()
{
  uint64_t v1 = qword_1EBF0C3E0;
  uint64_t v2 = *(void **)(v0 + qword_1EBF0C3E0);
  if (v2)
  {
    id v3 = *(id *)(v0 + qword_1EBF0C3E0);
  }
  else
  {
    id v4 = objc_msgSend(self, sel_effectWithStyle_, 7);
    id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1F00]), sel_initWithEffect_, v4);

    id v6 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v5;
    id v3 = v5;

    uint64_t v2 = 0;
  }
  id v7 = v2;
  return v3;
}

id sub_1C20874A0()
{
  uint64_t v1 = qword_1EBF0C3D8;
  uint64_t v2 = *(void **)(v0 + qword_1EBF0C3D8);
  if (v2)
  {
    id v3 = *(id *)(v0 + qword_1EBF0C3D8);
  }
  else
  {
    id v4 = sub_1C2087504();
    id v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_1C2087504()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1EB0]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  id v1 = objc_msgSend(self, sel_clearColor);
  objc_msgSend(v0, sel_setBackgroundColor_, v1);

  id v2 = sub_1C20873F0();
  objc_msgSend(v2, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);

  id v3 = sub_1C20873F0();
  objc_msgSend(v0, sel_addSubview_, v3);

  id v4 = sub_1C20873F0();
  objc_msgSend(v4, sel_hk_alignConstraintsWithView_insets_, v0, *MEMORY[0x1E4FB12A8], *(double *)(MEMORY[0x1E4FB12A8] + 8), *(double *)(MEMORY[0x1E4FB12A8] + 16), *(double *)(MEMORY[0x1E4FB12A8] + 24));

  id v5 = sub_1C2087260();
  objc_msgSend(v0, sel_addSubview_, v5);

  id v6 = sub_1C2087260();
  objc_msgSend(v6, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);

  id v7 = sub_1C2087260();
  id v8 = objc_msgSend(v7, sel_leftAnchor);

  id v9 = objc_msgSend(v0, sel_leftAnchor);
  id v10 = objc_msgSend(v8, sel_constraintEqualToAnchor_constant_, v9, 32.0);

  objc_msgSend(v10, sel_setActive_, 1);
  id v11 = sub_1C2087260();
  id v12 = objc_msgSend(v11, sel_rightAnchor);

  id v13 = objc_msgSend(v0, sel_rightAnchor);
  id v14 = objc_msgSend(v12, sel_constraintEqualToAnchor_constant_, v13, -32.0);

  objc_msgSend(v14, sel_setActive_, 1);
  id v15 = sub_1C2087260();
  id v16 = objc_msgSend(v15, sel_topAnchor);

  id v17 = objc_msgSend(v0, sel_topAnchor);
  id v18 = objc_msgSend(v16, sel_constraintEqualToAnchor_constant_, v17, 32.0);

  objc_msgSend(v18, sel_setActive_, 1);
  id v19 = sub_1C2087260();
  id v20 = objc_msgSend(v19, sel_bottomAnchor);

  id v21 = objc_msgSend(v0, sel_bottomAnchor);
  id v22 = objc_msgSend(v20, sel_constraintEqualToAnchor_constant_, v21, -48.0);

  objc_msgSend(v22, sel_setActive_, 1);
  id v23 = sub_1C2087260();
  id v24 = objc_msgSend(v23, sel_heightAnchor);

  id v25 = objc_msgSend(v24, sel_constraintEqualToConstant_, 50.0);
  objc_msgSend(v25, sel_setActive_, 1);

  return v0;
}

void sub_1C20878A4()
{
  id v1 = objc_msgSend(v0, sel_collectionView);
  if (!v1)
  {
    __break(1u);
    goto LABEL_12;
  }
  id v2 = v1;
  id v3 = sub_1C20874A0();
  objc_msgSend(v3, sel_bounds);
  double v5 = v4;
  double v7 = v6;
  double v9 = v8;
  double v11 = v10;

  id v12 = sub_1C20874A0();
  objc_msgSend(v2, sel_convertRect_fromCoordinateSpace_, v12, v5, v7, v9, v11);
  CGFloat v14 = v13;
  CGFloat v16 = v15;
  CGFloat v18 = v17;
  CGFloat v20 = v19;

  v31.origin.x = v14;
  v31.origin.y = v16;
  v31.size.width = v18;
  v31.size.height = v20;
  double MinY = CGRectGetMinY(v31);
  id v22 = objc_msgSend(v0, sel_collectionView);
  if (!v22)
  {
LABEL_12:
    __break(1u);
    return;
  }
  id v23 = v22;
  objc_msgSend(v22, sel_contentSize);
  double v25 = v24;

  id v26 = sub_1C20873F0();
  id v29 = v26;
  double v27 = 0.0;
  if (MinY < v25 && v25 > 0.0) {
    double v27 = 1.0;
  }
  objc_msgSend(v26, sel_setAlpha_, v27);
}

void sub_1C20879F8()
{
  id v1 = sub_1C2087260();
  objc_msgSend(v1, sel_addTarget_action_forControlEvents_, v0, sel_didTapDone, 64);

  id v2 = sub_1C2087260();
  objc_msgSend(v2, sel_setEnabled_, 0);

  id v3 = objc_msgSend(v0, sel_view);
  if (!v3)
  {
    __break(1u);
    goto LABEL_9;
  }
  double v4 = v3;
  id v5 = sub_1C20874A0();
  objc_msgSend(v4, sel_addSubview_, v5);

  id v6 = sub_1C20874A0();
  objc_msgSend(v6, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);

  id v7 = sub_1C20874A0();
  id v8 = objc_msgSend(v7, sel_leftAnchor);

  id v9 = objc_msgSend(v0, sel_view);
  if (!v9)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  double v10 = v9;
  id v11 = objc_msgSend(v9, sel_leftAnchor);

  id v12 = objc_msgSend(v8, sel_constraintEqualToAnchor_, v11);
  objc_msgSend(v12, sel_setActive_, 1);

  id v13 = sub_1C20874A0();
  id v14 = objc_msgSend(v13, sel_rightAnchor);

  id v15 = objc_msgSend(v0, sel_view);
  if (!v15)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  CGFloat v16 = v15;
  id v17 = objc_msgSend(v15, sel_rightAnchor);

  id v18 = objc_msgSend(v14, sel_constraintEqualToAnchor_, v17);
  objc_msgSend(v18, sel_setActive_, 1);

  id v19 = sub_1C20874A0();
  id v20 = objc_msgSend(v19, sel_bottomAnchor);

  id v21 = objc_msgSend(v0, sel_view);
  if (!v21)
  {
LABEL_11:
    __break(1u);
    return;
  }
  id v22 = v21;
  id v23 = objc_msgSend(v21, sel_bottomAnchor);

  id v24 = objc_msgSend(v20, sel_constraintEqualToAnchor_, v23);
  objc_msgSend(v24, sel_setActive_, 1);
}

void sub_1C2087CB0(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = a3;
  sub_1C20920B0();
}

void sub_1C2087CD8()
{
  sub_1C2148B10();
  id v1 = (void (*)(void))sub_1C2148B20();
  v1();
  id v2 = objc_msgSend(v0, sel_collectionView);
  if (v2)
  {
    type metadata accessor for MedicationDoseLogHeaderView();
    sub_1C20921B4(&qword_1EBF0C518, (void (*)(uint64_t))type metadata accessor for MedicationDoseLogHeaderView);
    sub_1C214ACE0();
  }
  else
  {
    __break(1u);
  }
}

void sub_1C2087DB0(void *a1)
{
  v2.receiver = a1;
  v2.super_class = (Class)type metadata accessor for MedicationsLogViewController();
  id v1 = v2.receiver;
  objc_msgSendSuper2(&v2, sel_viewDidLayoutSubviews);
  sub_1C20878A4();
}

void sub_1C2087E0C()
{
  v13.receiver = v0;
  v13.super_class = (Class)type metadata accessor for MedicationsLogViewController();
  objc_msgSendSuper2(&v13, sel_viewDidLoad);
  sub_1C20879F8();
  id v1 = objc_msgSend(v0, sel_collectionView);
  if (v1)
  {
    objc_super v2 = v1;
    objc_msgSend(v1, sel_contentInset);
    double v4 = v3;
    double v6 = v5;
    double v8 = v7;

    id v9 = objc_msgSend(v0, sel_collectionView);
    if (v9)
    {
      double v10 = v9;
      objc_msgSend(v9, sel_setContentInset_, v4, v6, 130.0, v8);

      id v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB14A8]), sel_initWithBarButtonSystemItem_target_action_, 1, v0, sel_didTapCancel);
      id v12 = objc_msgSend(v0, sel_navigationItem);
      objc_msgSend(v12, sel_setRightBarButtonItem_, v11);

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_1C2087F54(void *a1)
{
  id v1 = a1;
  sub_1C2087E0C();
}

uint64_t sub_1C2087F9C()
{
  v0[2] = sub_1C214A890();
  v0[3] = sub_1C214A880();
  id v1 = (void *)swift_task_alloc();
  v0[4] = v1;
  *id v1 = v0;
  v1[1] = sub_1C2088048;
  return sub_1C208ADF8();
}

uint64_t sub_1C2088048()
{
  swift_task_dealloc();
  uint64_t v1 = sub_1C214A840();
  return MEMORY[0x1F4188298](sub_1C2088184, v1, v0);
}

uint64_t sub_1C2088184()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_1C20881E4(void *a1)
{
  sub_1C2091F94(0, (unint64_t *)&qword_1EA2C32D8, MEMORY[0x1E4FBCFE8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v2 - 8);
  double v4 = (char *)&v10 - v3;
  uint64_t v5 = sub_1C214A8C0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
  sub_1C214A890();
  id v6 = a1;
  uint64_t v7 = sub_1C214A880();
  double v8 = (void *)swift_allocObject();
  uint64_t v9 = MEMORY[0x1E4FBCFD8];
  v8[2] = v7;
  v8[3] = v9;
  v8[4] = v6;
  sub_1C1F86288((uint64_t)v4, (uint64_t)&unk_1EA2C66B8, (uint64_t)v8);
  swift_release();
  sub_1C208C308(1);
  objc_msgSend(v6, sel_dismissViewControllerAnimated_completion_, 1, 0);
}

void sub_1C2088354(void *a1)
{
  id v1 = a1;
  sub_1C208C308(4);
  objc_msgSend(v1, sel_dismissViewControllerAnimated_completion_, 1, 0);
}

void sub_1C20883BC(char a1, char a2)
{
  v14.receiver = v2;
  v14.super_class = (Class)type metadata accessor for MedicationsLogViewController();
  objc_msgSendSuper2(&v14, sel_setEditing_animated_, a1 & 1, a2 & 1);
  id v5 = objc_msgSend(v2, sel_collectionView);
  if (!v5)
  {
    __break(1u);
    goto LABEL_7;
  }
  id v6 = v5;
  objc_msgSend(v5, sel_setEditing_, a1 & 1);

  id v7 = objc_msgSend(v2, sel_collectionView);
  if (!v7)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  double v8 = v7;
  objc_msgSend(v7, sel_setAllowsSelection_, 1);

  id v9 = objc_msgSend(v2, sel_collectionView);
  if (!v9)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v10 = v9;
  uint64_t v11 = a1 & 1;
  objc_msgSend(v9, sel_setAllowsMultipleSelection_, v11);

  id v12 = objc_msgSend(v2, sel_collectionView);
  if (v12)
  {
    objc_super v13 = v12;
    objc_msgSend(v12, sel_setAllowsMultipleSelectionDuringEditing_, v11);

    return;
  }
LABEL_9:
  __break(1u);
}

void sub_1C20884F8(void *a1, uint64_t a2, char a3, char a4)
{
  id v6 = a1;
  sub_1C20883BC(a3, a4);
}

void sub_1C2088554(void *a1)
{
  uint64_t v2 = (void *)sub_1C2147D40();
  objc_msgSend(a1, sel_deselectItemAtIndexPath_animated_, v2, 1);

  uint64_t v3 = (void *)sub_1C2147D40();
  id v4 = objc_msgSend(a1, sel_cellForItemAtIndexPath_, v3);

  if (v4)
  {
    id v8 = v4;
    sub_1C1F12718(0, (unint64_t *)&qword_1EA2C6A00);
    sub_1C1F23804(0, &qword_1EA2C37A0);
    id v5 = v4;
    if (swift_dynamicCast())
    {
      sub_1C1F31280(v6, (uint64_t)v9);
      __swift_project_boxed_opaque_existential_0(v9, v9[3]);
      sub_1C2148470();

      __swift_destroy_boxed_opaque_existential_0((uint64_t)v9);
    }
    else
    {
      uint64_t v7 = 0;
      memset(v6, 0, sizeof(v6));

      sub_1C2091E48((uint64_t)v6, (uint64_t (*)(void))sub_1C1F9845C);
    }
  }
}

uint64_t sub_1C20886B8(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5 = sub_1C2147D90();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  id v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2147D50();
  id v9 = a3;
  id v10 = a1;
  sub_1C2088554(v9);

  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void sub_1C20887B4(void *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = a1;
  sub_1C20878A4();
}

uint64_t sub_1C2088814(uint64_t a1, int a2)
{
  uint64_t v4 = v2;
  uint64_t v95 = sub_1C2147B20();
  uint64_t v94 = *(void *)(v95 - 8);
  MEMORY[0x1F4188790](v95);
  uint64_t v93 = (char *)&v88 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v92 = type metadata accessor for MedicationDoseRecordAllItem(0);
  uint64_t v90 = *(void *)(v92 - 8);
  MEMORY[0x1F4188790](v92);
  unint64_t v91 = (char *)&v88 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2091F94(0, &qword_1EBF0B1F0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v9 - 8);
  *(void *)&long long v102 = (char *)&v88 - v10;
  uint64_t v11 = sub_1C2147AC0();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  id v99 = (char *)&v88 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  unint64_t v96 = (char *)&v88 - v16;
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  unint64_t v104 = (char *)&v88 - v18;
  MEMORY[0x1F4188790](v17);
  id v20 = (char *)&v88 - v19;
  uint64_t v21 = v2 + qword_1EBF0C3E8;
  swift_beginAccess();
  swift_retain();
  uint64_t v97 = a1;
  uint64_t v105 = v21;
  sub_1C208D880(&v107, a1);
  swift_endAccess();
  swift_release();
  p_info = _TtC19HealthMedicationsUI30MedicationDoseLogListViewModel.info;
  id v23 = (__objc2_class_ro **)(_TtC19HealthMedicationsUI30MedicationDoseLogListViewModel + 32);
  uint64_t v106 = v11;
  uint64_t v100 = v12;
  int v89 = a2;
  if (a2)
  {
    unint64_t v24 = *(void *)(v4 + qword_1EBF0C3C0);
    uint64_t v98 = v4;
    if (!v24) {
      goto LABEL_13;
    }
    unint64_t v25 = *(void *)(v24 + 16);
    unint64_t v101 = v24;
    if (v25 >> 62)
    {
      swift_retain();
      swift_bridgeObjectRetain();
      uint64_t v12 = sub_1C214B930();
      if (v12) {
        goto LABEL_5;
      }
    }
    else
    {
      uint64_t v12 = *(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_retain();
      swift_bridgeObjectRetain();
      if (v12)
      {
LABEL_5:
        if (v12 < 1)
        {
LABEL_73:
          __break(1u);
          goto LABEL_74;
        }
        uint64_t v26 = v97 + OBJC_IVAR____TtC19HealthMedicationsUI27MedicationsDoseLogViewModel_logDate;
        unint64_t v103 = v25 & 0xC000000000000001;
        swift_beginAccess();
        uint64_t v3 = 0;
        double v27 = (void (**)(char *, uint64_t, uint64_t))(v100 + 16);
        id v28 = (void (**)(uint64_t, char *, uint64_t))(v100 + 40);
        unint64_t v29 = v25;
        uint64_t v30 = v106;
        do
        {
          if (v103)
          {
            uint64_t v31 = MEMORY[0x1C8753960](v3, v25);
          }
          else
          {
            uint64_t v31 = *(void *)(v25 + 8 * (void)v3 + 32);
            swift_retain();
          }
          ++v3;
          (*v27)(v20, v26, v30);
          uint64_t v32 = v31 + OBJC_IVAR____TtC19HealthMedicationsUI27MedicationsDoseLogViewModel_logDate;
          swift_beginAccess();
          (*v28)(v32, v20, v30);
          swift_endAccess();
          swift_beginAccess();
          swift_retain();
          sub_1C208D880(&v107, v31);
          swift_endAccess();
          swift_release();
          swift_release();
          unint64_t v25 = v29;
        }
        while ((char *)v12 != v3);
      }
    }
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v4 = v98;
    uint64_t v11 = v106;
    uint64_t v12 = v100;
    id v23 = _TtC19HealthMedicationsUI30MedicationDoseLogListViewModel.info;
    p_info = (__objc2_class_ro **)(_TtC19HealthMedicationsUI30MedicationDoseLogListViewModel + 32);
LABEL_13:
    uint64_t v33 = *(void *)((char *)&v23[122]->flags + v4);
    if (!v33) {
      goto LABEL_24;
    }
    unint64_t v25 = *(void *)(v33 + 16);
    unint64_t v101 = *(void *)((char *)&v23[122]->flags + v4);
    if (v25 >> 62)
    {
      swift_retain();
      swift_bridgeObjectRetain();
      uint64_t v12 = sub_1C214B930();
      if (v12) {
        goto LABEL_16;
      }
    }
    else
    {
      uint64_t v12 = *(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_retain();
      swift_bridgeObjectRetain();
      if (v12)
      {
LABEL_16:
        if (v12 < 1)
        {
LABEL_74:
          __break(1u);
          goto LABEL_75;
        }
        uint64_t v34 = v97 + OBJC_IVAR____TtC19HealthMedicationsUI27MedicationsDoseLogViewModel_logDate;
        unint64_t v103 = v25 & 0xC000000000000001;
        swift_beginAccess();
        uint64_t v3 = 0;
        id v35 = (void (**)(char *, uint64_t, uint64_t))(v100 + 16);
        unint64_t v36 = (void (**)(uint64_t, char *, uint64_t))(v100 + 40);
        unint64_t v37 = v25;
        uint64_t v38 = v106;
        do
        {
          if (v103)
          {
            uint64_t v39 = MEMORY[0x1C8753960](v3, v25);
          }
          else
          {
            uint64_t v39 = *(void *)(v25 + 8 * (void)v3 + 32);
            swift_retain();
          }
          ++v3;
          (*v35)(v20, v34, v38);
          uint64_t v40 = v39 + OBJC_IVAR____TtC19HealthMedicationsUI27MedicationsDoseLogViewModel_logDate;
          swift_beginAccess();
          (*v36)(v40, v20, v38);
          swift_endAccess();
          swift_beginAccess();
          swift_retain();
          sub_1C208D880(&v107, v39);
          swift_endAccess();
          swift_release();
          swift_release();
          unint64_t v25 = v37;
        }
        while ((char *)v12 != v3);
      }
    }
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v4 = v98;
    uint64_t v11 = v106;
    uint64_t v12 = v100;
    id v23 = _TtC19HealthMedicationsUI30MedicationDoseLogListViewModel.info;
    p_info = _TtC19HealthMedicationsUI30MedicationDoseLogListViewModel.info;
  }
LABEL_24:
  sub_1C2147AB0();
  uint64_t v41 = *(void *)((char *)&p_info[120]->flags + v4);
  if (!v41)
  {
    LOBYTE(v52) = 0;
    goto LABEL_51;
  }
  unint64_t v25 = *(void *)(v41 + 16);
  if (v25 >> 62) {
    goto LABEL_70;
  }
  uint64_t v42 = *(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_retain();
  swift_bridgeObjectRetain();
LABEL_27:
  uint64_t v43 = v102;
  if (!v42)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56))(v43, 1, 1, v11);
    goto LABEL_46;
  }
  if ((v25 & 0xC000000000000001) == 0)
  {
    if (*(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      uint64_t v44 = *(void *)(v25 + 32);
      swift_retain();
      goto LABEL_31;
    }
    __break(1u);
    goto LABEL_73;
  }
  uint64_t v44 = MEMORY[0x1C8753960](0, v25);
LABEL_31:
  swift_bridgeObjectRelease();
  uint64_t v45 = v44 + OBJC_IVAR____TtC19HealthMedicationsUI27MedicationsDoseLogViewModel_logDate;
  swift_beginAccess();
  uint64_t v11 = v12 + 16;
  uint64_t v3 = *(char **)(v12 + 16);
  uint64_t v46 = v45;
  uint64_t v47 = v106;
  ((void (*)(uint64_t, uint64_t, uint64_t))v3)(v43, v46, v106);
  swift_release();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v12 + 56))(v43, 0, 1, v47);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v43, 1, v47) != 1)
  {
    uint64_t v98 = v4;
    uint64_t v48 = *(void (**)(char *, uint64_t))(v12 + 8);
    uint64_t v49 = v104;
    uint64_t v50 = v106;
    unint64_t v103 = v12 + 8;
    *(void *)&long long v102 = v48;
    v48(v104, v106);
    uint64_t v51 = v96;
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 32))(v96, v43, v50);
    ((void (*)(char *, char *, uint64_t))v3)(v49, v51, v50);
    uint64_t v88 = v41;
    unint64_t v25 = *(void *)(v41 + 16);
    if (!(v25 >> 62))
    {
      uint64_t v52 = *(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
LABEL_34:
      uint64_t v4 = v98;
      if (v52)
      {
        uint64_t v41 = v11;
        unint64_t v53 = v25;
        unint64_t v101 = v25 & 0xC000000000000001;
        uint64_t v4 = 4;
        while (1)
        {
          id v23 = (__objc2_class_ro **)v52;
          unint64_t v25 = v4 - 4;
          if (v101)
          {
            uint64_t v54 = MEMORY[0x1C8753960](v4 - 4, v53);
            uint64_t v12 = v4 - 3;
            if (__OFADD__(v25, 1)) {
              goto LABEL_69;
            }
          }
          else
          {
            uint64_t v54 = *(void *)(v53 + 8 * v4);
            swift_retain();
            uint64_t v12 = v4 - 3;
            if (__OFADD__(v25, 1))
            {
LABEL_69:
              __break(1u);
LABEL_70:
              swift_retain();
              swift_bridgeObjectRetain();
              uint64_t v42 = sub_1C214B930();
              goto LABEL_27;
            }
          }
          uint64_t v55 = v54 + OBJC_IVAR____TtC19HealthMedicationsUI27MedicationsDoseLogViewModel_logDate;
          swift_beginAccess();
          uint64_t v56 = v55;
          uint64_t v57 = v106;
          ((void (*)(char *, uint64_t, uint64_t))v3)(v20, v56, v106);
          sub_1C20921B4(&qword_1EA2C5070, MEMORY[0x1E4F27928]);
          uint64_t v11 = sub_1C214A5A0();
          swift_release();
          ((void (*)(char *, uint64_t))v102)(v20, v57);
          if (v11)
          {
            uint64_t v52 = (uint64_t)v23;
            ++v4;
            if ((__objc2_class_ro **)v12 != v23) {
              continue;
            }
          }
          LOBYTE(v52) = v11 ^ 1;
          uint64_t v4 = v98;
          uint64_t v11 = v106;
          uint64_t v12 = v100;
          id v23 = (__objc2_class_ro **)(_TtC19HealthMedicationsUI30MedicationDoseLogListViewModel + 32);
          goto LABEL_48;
        }
      }
      uint64_t v11 = v106;
LABEL_48:
      swift_bridgeObjectRelease();
      uint64_t v41 = v88;
      swift_release();
      ((void (*)(char *, uint64_t))v102)(v96, v11);
      goto LABEL_49;
    }
LABEL_75:
    swift_bridgeObjectRetain();
    uint64_t v52 = sub_1C214B930();
    goto LABEL_34;
  }
LABEL_46:
  swift_release();
  sub_1C1F394F8(v43);
  LOBYTE(v52) = 0;
  uint64_t v11 = v106;
LABEL_49:
  unint64_t v58 = *(void *)(v4 + qword_1EBF0C3B8);
  if (v58)
  {
    *(void *)(v58 + qword_1EBF0C330) = *(void *)(v41 + 16);
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_retain();
    unint64_t v59 = swift_bridgeObjectRetain();
    uint64_t v60 = sub_1C2091BCC(v59, v58);
    swift_bridgeObjectRelease();
    swift_release();
    sub_1C1F380A0(v60);
    swift_bridgeObjectRelease();
    sub_1C21485C0();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
  }
LABEL_51:
  uint64_t v61 = *(void *)((char *)&v23[122]->flags + v4);
  if (v61 && (unint64_t v62 = *(void *)(v4 + qword_1EBF0C3C8)) != 0)
  {
    uint64_t v63 = v11;
    *(void *)(v62 + qword_1EBF0C330) = *(void *)(v61 + 16);
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_retain();
    unint64_t v64 = swift_bridgeObjectRetain();
    uint64_t v65 = sub_1C2091BCC(v64, v62);
    unint64_t v103 = 0;
    swift_bridgeObjectRelease();
    swift_release();
    sub_1C1F380A0(v65);
    uint64_t v11 = v63;
    uint64_t v12 = v100;
    swift_bridgeObjectRelease();
    sub_1C21485C0();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v103 = 0;
  }
  uint64_t v66 = v99;
  if (*(void *)(v4 + qword_1EBF0C418))
  {
    uint64_t v67 = *(void *)(v4 + qword_1EBF0C3F0);
    if (v67)
    {
      if ((v52 & 1) != *(unsigned char *)(v67 + 17))
      {
        char v68 = ~(_BYTE)v89;
        *(unsigned char *)(v67 + 17) = v52 & ~(_BYTE)v89 & 1;
        if (v68)
        {
          if (v52)
          {
            swift_retain();
            swift_retain();
            sub_1C2147AB0();
LABEL_64:
            uint64_t v70 = v67 + OBJC_IVAR____TtC19HealthMedicationsUI32MedicationDoseRecordAllViewModel_logDate;
            swift_beginAccess();
            (*(void (**)(uint64_t, char *, uint64_t))(v12 + 40))(v70, v66, v11);
            swift_endAccess();
            uint64_t v71 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
            sub_1C2091F94(0, (unint64_t *)&unk_1EBF0C980, type metadata accessor for MedicationDoseRecordAllItem, MEMORY[0x1E4FBBE00]);
            unint64_t v72 = (*(unsigned __int8 *)(v90 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v90 + 80);
            uint64_t v73 = swift_allocObject();
            long long v102 = xmmword_1C214FCD0;
            *(_OWORD *)(v73 + 16) = xmmword_1C214FCD0;
            unint64_t v101 = v73 + v72;
            swift_retain();
            id v74 = (id)v4;
            uint64_t v75 = (uint64_t)v91;
            sub_1C2147B10();
            uint64_t v76 = v92;
            unint64_t v77 = (uint64_t *)(v75 + *(int *)(v92 + 20));
            type metadata accessor for MedicationDoseRecordAllCell();
            sub_1C20921B4(&qword_1EBF0C520, (void (*)(uint64_t))type metadata accessor for MedicationDoseRecordAllCell);
            *unint64_t v77 = sub_1C21481D0();
            v77[1] = v78;
            *(void *)(v75 + *(int *)(v76 + 28) + 8) = 0;
            uint64_t v79 = swift_unknownObjectWeakInit();
            *(void *)(v75 + *(int *)(v76 + 24)) = v67;
            *(void *)(v79 + 8) = &off_1F1D78D30;
            swift_unknownObjectWeakAssign();

            sub_1C2092298(v75, v101, type metadata accessor for MedicationDoseRecordAllItem);
            sub_1C2091F94(0, (unint64_t *)&qword_1EA2C2DD0, MEMORY[0x1E4F66468], v71);
            sub_1C2148540();
            *(_OWORD *)(swift_allocObject() + 16) = v102;
            sub_1C1F381C0(v73);
            swift_setDeallocating();
            swift_arrayDestroy();
            swift_deallocClassInstance();
            id v80 = v93;
            sub_1C2147B10();
            sub_1C2147AD0();
            (*(void (**)(char *, uint64_t))(v94 + 8))(v80, v95);
            uint64_t v81 = v106;
            sub_1C2148520();
            sub_1C21485B0();
            swift_release();
            swift_release();
            uint64_t v11 = v81;
            uint64_t v12 = v100;
            swift_bridgeObjectRelease();
            goto LABEL_65;
          }
          (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v66, v104, v11);
        }
        else
        {
          uint64_t v69 = v97 + OBJC_IVAR____TtC19HealthMedicationsUI27MedicationsDoseLogViewModel_logDate;
          swift_beginAccess();
          (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v66, v69, v11);
        }
        swift_retain();
        swift_retain();
        goto LABEL_64;
      }
    }
  }
LABEL_65:
  id v82 = sub_1C2087260();
  uint64_t v83 = swift_bridgeObjectRetain();
  char v84 = sub_1C208A070(v83);
  swift_bridgeObjectRelease();
  if (v84)
  {
    char v85 = 1;
  }
  else
  {
    uint64_t v86 = swift_bridgeObjectRetain();
    char v85 = sub_1C2085E2C(v86);
    swift_bridgeObjectRelease();
  }
  objc_msgSend(v82, sel_setEnabled_, v85 & 1, v88);

  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v104, v11);
}

void sub_1C20899C0(uint64_t a1)
{
  uint64_t v2 = v1;
  swift_getObjectType();
  uint64_t v4 = sub_1C21497F0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    uint64_t v8 = swift_retain_n();
    uint64_t v9 = sub_1C1F7AD48(v8);
    uint64_t v11 = v10;
    uint64_t v13 = v12;
    uint64_t v15 = v14;
    int v16 = *(void *)&v2[qword_1EBF0C438] == 1 && *(void *)&v2[qword_1EBF0C440] > 1;
    objc_allocWithZone((Class)type metadata accessor for MedicationLogDetailsViewController());
    swift_retain();
    id v23 = v2;
    id v24 = sub_1C207B6C4(a1, v9, v11, v13, v15, (uint64_t)v2, (uint64_t)&off_1F1D78D30, v16);
    swift_release();

    id v27 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F67B78]), sel_initWithRootViewController_, v24);
    objc_msgSend(v27, sel_setModalPresentationStyle_, 2);
    objc_msgSend(v27, sel_setModalInPresentation_, 1);
    objc_msgSend(v23, sel_presentViewController_animated_completion_, v27, 1, 0);
    swift_release();

    id v25 = v27;
  }
  else
  {
    sub_1C21497D0();
    uint64_t v17 = sub_1C21497E0();
    os_log_type_t v18 = sub_1C214ABD0();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = (uint8_t *)swift_slowAlloc();
      uint64_t v20 = swift_slowAlloc();
      uint64_t v29 = v20;
      *(_DWORD *)uint64_t v19 = 136315138;
      uint64_t v21 = sub_1C214BC10();
      uint64_t v28 = sub_1C1F6FD54(v21, v22, &v29);
      sub_1C214B530();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C1F0B000, v17, v18, "[%s] Couldn't load view model", v19, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C8754730](v20, -1, -1);
      MEMORY[0x1C8754730](v19, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
}

uint64_t sub_1C2089CF8()
{
  sub_1C2091F94(0, (unint64_t *)&qword_1EA2C32D8, MEMORY[0x1E4FBCFE8], MEMORY[0x1E4FBB718]);
  uint64_t result = MEMORY[0x1F4188790](v1 - 8);
  uint64_t v4 = (char *)&v19 - v3;
  uint64_t v5 = *(void *)&v0[qword_1EBF0C3C0];
  if (!v5) {
    return result;
  }
  unint64_t v6 = *(void *)&v0[qword_1EBF0C3B8];
  if (!v6) {
    return result;
  }
  unint64_t v7 = *(void *)(v5 + 16);
  if (v7 >> 62)
  {
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    uint64_t result = sub_1C214B930();
    uint64_t v8 = result;
    if (result) {
      goto LABEL_5;
    }
  }
  else
  {
    uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_retain();
    swift_retain();
    uint64_t result = swift_bridgeObjectRetain();
    if (v8)
    {
LABEL_5:
      if (v8 < 1)
      {
        __break(1u);
        return result;
      }
      uint64_t v19 = v4;
      uint64_t v20 = v5;
      uint64_t v9 = 0;
      do
      {
        if ((v7 & 0xC000000000000001) != 0)
        {
          uint64_t v10 = MEMORY[0x1C8753960](v9, v7);
        }
        else
        {
          uint64_t v10 = *(void *)(v7 + 8 * v9 + 32);
          swift_retain();
        }
        ++v9;
        *(void *)(v10 + 48) = 4;
        swift_beginAccess();
        swift_retain();
        sub_1C208D880(&v21, v10);
        swift_endAccess();
        swift_release();
        swift_release();
      }
      while (v8 != v9);
      swift_bridgeObjectRelease();
      uint64_t v4 = v19;
      uint64_t v5 = v20;
      goto LABEL_14;
    }
  }
  swift_bridgeObjectRelease();
LABEL_14:
  *(void *)(v6 + qword_1EBF0C330) = *(void *)(v5 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_retain();
  unint64_t v11 = swift_bridgeObjectRetain();
  uint64_t v12 = sub_1C2091BCC(v11, v6);
  swift_bridgeObjectRelease();
  swift_release();
  sub_1C1F380A0(v12);
  swift_bridgeObjectRelease();
  sub_1C21485C0();
  swift_bridgeObjectRelease();
  uint64_t v13 = *(void *)&v0[qword_1EBF0C430];
  if ((v13 & 0x20) == 0) {
    *(void *)&v0[qword_1EBF0C430] = v13 | 0x20;
  }
  uint64_t v14 = sub_1C214A8C0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v4, 1, 1, v14);
  sub_1C214A890();
  uint64_t v15 = v0;
  uint64_t v16 = sub_1C214A880();
  uint64_t v17 = (void *)swift_allocObject();
  uint64_t v18 = MEMORY[0x1E4FBCFD8];
  v17[2] = v16;
  v17[3] = v18;
  v17[4] = v15;
  sub_1C1F86288((uint64_t)v4, (uint64_t)&unk_1EA2C66D8, (uint64_t)v17);
  swift_release();
  sub_1C208C308(1);
  objc_msgSend(v15, sel_dismissViewControllerAnimated_completion_, 1, 0);
  swift_release();
  return swift_release();
}

uint64_t sub_1C208A070(uint64_t a1)
{
  uint64_t v42 = sub_1C2147AC0();
  uint64_t v2 = *(void *)(v42 - 8);
  MEMORY[0x1F4188790](v42);
  uint64_t v41 = (char *)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1C214B680();
    type metadata accessor for MedicationsDoseLogViewModel(0);
    sub_1C20921B4(&qword_1EA2C66C0, (void (*)(uint64_t))type metadata accessor for MedicationsDoseLogViewModel);
    uint64_t result = sub_1C214AAA0();
    a1 = v49;
    uint64_t v5 = v50;
    uint64_t v6 = v51;
    uint64_t v7 = v52;
    unint64_t v8 = v53;
  }
  else
  {
    uint64_t v9 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v5 = a1 + 56;
    uint64_t v6 = ~v9;
    uint64_t v10 = -v9;
    if (v10 < 64) {
      uint64_t v11 = ~(-1 << v10);
    }
    else {
      uint64_t v11 = -1;
    }
    unint64_t v8 = v11 & *(void *)(a1 + 56);
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v7 = 0;
  }
  uint64_t v44 = a1 & 0x7FFFFFFFFFFFFFFFLL;
  int64_t v45 = (unint64_t)(v6 + 64) >> 6;
  uint64_t v40 = (void (**)(char *, uint64_t, uint64_t))(v2 + 16);
  uint64_t v38 = v6;
  uint64_t v39 = (void (**)(char *, uint64_t))(v2 + 8);
  p_info = _TtC19HealthMedicationsUI30MedicationDoseLogListViewModel.info;
  uint64_t v43 = MEMORY[0x1E4FBC838] + 8;
  unint64_t v13 = v8;
  while (1)
  {
    uint64_t v14 = v7;
    if ((a1 & 0x8000000000000000) == 0) {
      break;
    }
    uint64_t v17 = sub_1C214B700();
    uint64_t v18 = v17;
    if (!v17) {
      goto LABEL_43;
    }
    uint64_t v47 = v17;
    type metadata accessor for MedicationsDoseLogViewModel(0);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    uint64_t v19 = v48;
    swift_unknownObjectRelease();
    if (!v19) {
      goto LABEL_42;
    }
LABEL_32:
    uint64_t v23 = *(void *)(v19 + 48);
    if (v23 != *(void *)((char *)&p_info[112]->flags + v19))
    {
      swift_release();
LABEL_41:
      uint64_t v18 = 1;
      goto LABEL_43;
    }
    id v24 = *(void **)(v19 + 24);
    if (v24 && (v23 & 0xFFFFFFFFFFFFFFFELL) == 4)
    {
      unint64_t v46 = v13;
      id v25 = v24;
      id v26 = objc_msgSend(v25, sel_doseQuantity, v38);
      if (!v26
        || (id v27 = v26, objc_msgSend(v26, sel_doubleValue), v29 = v28, v27, v29 != *(double *)(v19 + 40)))
      {
        swift_release();

        goto LABEL_41;
      }
      uint64_t v30 = v5;
      uint64_t v31 = v19 + OBJC_IVAR____TtC19HealthMedicationsUI27MedicationsDoseLogViewModel_logDate;
      swift_beginAccess();
      uint64_t v32 = a1;
      uint64_t v33 = v41;
      uint64_t v34 = v31;
      uint64_t v5 = v30;
      uint64_t v35 = v42;
      (*v40)(v41, v34, v42);
      sub_1C20921B4(&qword_1EA2C5070, MEMORY[0x1E4F27928]);
      char v36 = sub_1C214A5A0();

      unint64_t v37 = v33;
      a1 = v32;
      p_info = (__objc2_class_ro **)(_TtC19HealthMedicationsUI30MedicationDoseLogListViewModel + 32);
      (*v39)(v37, v35);
      uint64_t result = swift_release();
      unint64_t v13 = v46;
      if ((v36 & 1) == 0)
      {
        uint64_t v18 = 1;
        goto LABEL_43;
      }
    }
    else
    {
      uint64_t result = swift_release();
    }
  }
  if (v13)
  {
    unint64_t v15 = __clz(__rbit64(v13));
    v13 &= v13 - 1;
    unint64_t v16 = v15 | (v7 << 6);
LABEL_31:
    uint64_t v19 = *(void *)(*(void *)(a1 + 48) + 8 * v16);
    swift_retain();
    if (!v19) {
      goto LABEL_42;
    }
    goto LABEL_32;
  }
  int64_t v20 = v7 + 1;
  if (!__OFADD__(v7, 1))
  {
    if (v20 >= v45) {
      goto LABEL_42;
    }
    unint64_t v21 = *(void *)(v5 + 8 * v20);
    ++v7;
    if (!v21)
    {
      uint64_t v7 = v14 + 2;
      if (v14 + 2 >= v45) {
        goto LABEL_42;
      }
      unint64_t v21 = *(void *)(v5 + 8 * v7);
      if (!v21)
      {
        uint64_t v7 = v14 + 3;
        if (v14 + 3 >= v45) {
          goto LABEL_42;
        }
        unint64_t v21 = *(void *)(v5 + 8 * v7);
        if (!v21)
        {
          uint64_t v7 = v14 + 4;
          if (v14 + 4 >= v45) {
            goto LABEL_42;
          }
          unint64_t v21 = *(void *)(v5 + 8 * v7);
          if (!v21)
          {
            uint64_t v7 = v14 + 5;
            if (v14 + 5 >= v45) {
              goto LABEL_42;
            }
            unint64_t v21 = *(void *)(v5 + 8 * v7);
            if (!v21)
            {
              uint64_t v22 = v14 + 6;
              while (v45 != v22)
              {
                unint64_t v21 = *(void *)(v5 + 8 * v22++);
                if (v21)
                {
                  uint64_t v7 = v22 - 1;
                  goto LABEL_30;
                }
              }
LABEL_42:
              uint64_t v18 = 0;
LABEL_43:
              sub_1C1F495B8();
              return v18;
            }
          }
        }
      }
    }
LABEL_30:
    unint64_t v13 = (v21 - 1) & v21;
    unint64_t v16 = __clz(__rbit64(v21)) + (v7 << 6);
    goto LABEL_31;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C208A548()
{
  uint64_t v1 = (int *)type metadata accessor for MedicationDoseRecordAllItem(0);
  uint64_t v2 = *((void *)v1 - 1);
  uint64_t result = MEMORY[0x1F4188790](v1);
  uint64_t v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)&v0[qword_1EBF0C418])
  {
    uint64_t v6 = *(void *)&v0[qword_1EBF0C3F0];
    if (v6)
    {
      uint64_t v7 = *(void *)&v0[qword_1EBF0C3C0];
      if (v7)
      {
        unint64_t v8 = *(void *)(v7 + 16);
        v22[1] = *(void *)&v0[qword_1EBF0C3C0];
        if (v8 >> 62)
        {
          swift_retain();
          swift_retain();
          swift_retain();
          swift_bridgeObjectRetain();
          uint64_t v9 = sub_1C214B930();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v9 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
          swift_retain();
          swift_retain();
          swift_retain();
        }
        uint64_t v10 = &v0[qword_1EBF0C3E8];
        swift_beginAccess();
        if ((*(void *)v10 & 0xC000000000000001) != 0)
        {
          swift_bridgeObjectRetain();
          uint64_t v11 = sub_1C214B6D0();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v11 = *(void *)(*(void *)v10 + 16);
        }
        if (v11 >= v9)
        {
          if ((*(unsigned char *)(v6 + 16) & 1) == 0)
          {
LABEL_15:
            swift_release();
            swift_release();
            return swift_release();
          }
          LOBYTE(v14) = 0;
        }
        else
        {
          uint64_t v12 = swift_bridgeObjectRetain();
          uint64_t v13 = sub_1C2085AD8(v12);
          swift_bridgeObjectRelease();
          swift_release();
          int v14 = v13 == 0;
          if (v14 == *(unsigned __int8 *)(v6 + 16)) {
            goto LABEL_15;
          }
        }
        *(unsigned char *)(v6 + 16) = v14;
        sub_1C2091F94(0, (unint64_t *)&unk_1EBF0C980, type metadata accessor for MedicationDoseRecordAllItem, MEMORY[0x1E4FBBE00]);
        unint64_t v15 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
        uint64_t v16 = swift_allocObject();
        *(_OWORD *)(v16 + 16) = xmmword_1C214FCD0;
        uint64_t v17 = v16 + v15;
        swift_retain();
        uint64_t v18 = v0;
        sub_1C2147B10();
        uint64_t v19 = (uint64_t *)&v5[v1[5]];
        type metadata accessor for MedicationDoseRecordAllCell();
        sub_1C20921B4(&qword_1EBF0C520, (void (*)(uint64_t))type metadata accessor for MedicationDoseRecordAllCell);
        uint64_t *v19 = sub_1C21481D0();
        v19[1] = v20;
        *(void *)&v5[v1[7] + 8] = 0;
        uint64_t v21 = swift_unknownObjectWeakInit();
        *(void *)&v5[v1[6]] = v6;
        *(void *)(v21 + 8) = &off_1F1D78D30;
        swift_unknownObjectWeakAssign();

        sub_1C2092298((uint64_t)v5, v17, type metadata accessor for MedicationDoseRecordAllItem);
        sub_1C1F381C0(v16);
        swift_setDeallocating();
        swift_arrayDestroy();
        swift_deallocClassInstance();
        sub_1C21485C0();
        swift_bridgeObjectRelease();
        goto LABEL_15;
      }
    }
  }
  return result;
}

uint64_t sub_1C208A8F4(uint64_t a1)
{
  uint64_t v2 = v1;
  if (*(void *)(a1 + 48) == 1)
  {
    uint64_t v4 = (uint64_t *)(v2 + qword_1EBF0C3E8);
    swift_beginAccess();
    uint64_t v5 = *v4;
    swift_bridgeObjectRetain();
    char v6 = sub_1C208AA84(a1, v5);
    swift_bridgeObjectRelease();
    if ((v6 & 1) == 0) {
      goto LABEL_6;
    }
    swift_beginAccess();
    sub_1C2090D68();
  }
  else
  {
    swift_beginAccess();
    swift_retain();
    sub_1C208D880(v13, a1);
  }
  swift_endAccess();
  swift_release();
LABEL_6:
  id v7 = sub_1C2087260();
  swift_beginAccess();
  uint64_t v8 = swift_bridgeObjectRetain();
  char v9 = sub_1C208A070(v8);
  swift_bridgeObjectRelease();
  if (v9)
  {
    char v10 = 1;
  }
  else
  {
    uint64_t v11 = swift_bridgeObjectRetain();
    char v10 = sub_1C2085E2C(v11);
    swift_bridgeObjectRelease();
  }
  objc_msgSend(v7, sel_setEnabled_, v10 & 1);

  return sub_1C208A548();
}

uint64_t sub_1C208AA84(uint64_t a1, uint64_t a2)
{
  if ((a2 & 0xC000000000000001) == 0)
  {
    if (*(void *)(a2 + 16))
    {
      sub_1C214BB30();
      sub_1C20B7378();
      sub_1C214A690();
      swift_bridgeObjectRelease();
      uint64_t v4 = sub_1C214BB80();
      uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
      unint64_t v6 = v4 & ~v5;
      uint64_t v7 = a2 + 56;
      if ((*(void *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
      {
        swift_retain();
        uint64_t v8 = sub_1C20B7378();
        uint64_t v10 = v9;
        if (v8 == sub_1C20B7378() && v10 == v11)
        {
LABEL_19:
          swift_release();
          swift_bridgeObjectRelease_n();
          goto LABEL_20;
        }
        char v13 = sub_1C214BA80();
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v13)
        {
LABEL_20:
          char v3 = 1;
          return v3 & 1;
        }
        uint64_t v14 = ~v5;
        unint64_t v15 = (v6 + 1) & v14;
        if ((*(void *)(v7 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15))
        {
          while (1)
          {
            swift_retain();
            uint64_t v16 = sub_1C20B7378();
            uint64_t v18 = v17;
            if (v16 == sub_1C20B7378() && v18 == v19) {
              break;
            }
            char v3 = sub_1C214BA80();
            swift_release();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v3 & 1) == 0)
            {
              unint64_t v15 = (v15 + 1) & v14;
              if ((*(void *)(v7 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15)) {
                continue;
              }
            }
            return v3 & 1;
          }
          goto LABEL_19;
        }
      }
    }
    char v3 = 0;
    return v3 & 1;
  }
  swift_retain();
  char v3 = sub_1C214B710();
  swift_release();
  return v3 & 1;
}

uint64_t sub_1C208ACB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (!*(void *)(a5 + 16)) {
    return 0;
  }
  sub_1C214BB30();
  sub_1C214A690();
  sub_1C214A690();
  uint64_t v10 = sub_1C214BB80();
  uint64_t v11 = -1 << *(unsigned char *)(a5 + 32);
  unint64_t v12 = v10 & ~v11;
  uint64_t v13 = a5 + 56;
  if (((*(void *)(a5 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0) {
    return 0;
  }
  uint64_t v14 = ~v11;
  uint64_t v15 = *(void *)(a5 + 48);
  while (1)
  {
    uint64_t v16 = (void *)(v15 + 32 * v12);
    uint64_t v17 = v16[2];
    uint64_t v18 = v16[3];
    BOOL v19 = *v16 == a1 && v16[1] == a2;
    if (v19 || (sub_1C214BA80() & 1) != 0)
    {
      BOOL v20 = v17 == a3 && v18 == a4;
      if (v20 || (sub_1C214BA80() & 1) != 0) {
        break;
      }
    }
    unint64_t v12 = (v12 + 1) & v14;
    if (((*(void *)(v13 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0) {
      return 0;
    }
  }
  return 1;
}

uint64_t sub_1C208ADF8()
{
  v1[18] = v0;
  v1[19] = swift_getObjectType();
  uint64_t v2 = sub_1C21497F0();
  v1[20] = v2;
  v1[21] = *(void *)(v2 - 8);
  v1[22] = swift_task_alloc();
  uint64_t v3 = sub_1C21492E0();
  v1[23] = v3;
  v1[24] = *(void *)(v3 - 8);
  v1[25] = swift_task_alloc();
  uint64_t v4 = sub_1C2147AC0();
  v1[26] = v4;
  v1[27] = *(void *)(v4 - 8);
  v1[28] = swift_task_alloc();
  v1[29] = swift_task_alloc();
  sub_1C214A890();
  v1[30] = sub_1C214A880();
  uint64_t v6 = sub_1C214A840();
  v1[31] = v6;
  v1[32] = v5;
  return MEMORY[0x1F4188298](sub_1C208AFC0, v6, v5);
}

uint64_t sub_1C208AFC0()
{
  uint64_t v1 = (uint64_t *)(*(void *)(v0 + 144) + qword_1EBF0C3E8);
  swift_beginAccess();
  uint64_t v2 = *v1;
  if ((*v1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1C214B680();
    type metadata accessor for MedicationsDoseLogViewModel(0);
    sub_1C20921B4(&qword_1EA2C66C0, (void (*)(uint64_t))type metadata accessor for MedicationsDoseLogViewModel);
    uint64_t v3 = sub_1C214AAA0();
    uint64_t v2 = *(void *)(v0 + 16);
    uint64_t v42 = *(void *)(v0 + 24);
    uint64_t v4 = *(void *)(v0 + 32);
    uint64_t v5 = *(void *)(v0 + 40);
    unint64_t v6 = *(void *)(v0 + 48);
  }
  else
  {
    uint64_t v7 = -1 << *(unsigned char *)(v2 + 32);
    uint64_t v42 = v2 + 56;
    uint64_t v4 = ~v7;
    uint64_t v8 = -v7;
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v6 = v9 & *(void *)(v2 + 56);
    uint64_t v3 = swift_bridgeObjectRetain();
    uint64_t v5 = 0;
  }
  uint64_t v10 = *(void *)(v0 + 216);
  int64_t v41 = (unint64_t)(v4 + 64) >> 6;
  uint64_t v43 = (void (**)(uint64_t, uint64_t))(v10 + 8);
  uint64_t v44 = (void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16);
  uint64_t v39 = *(void *)(v0 + 192);
  unint64_t v11 = MEMORY[0x1E4FBC860];
LABEL_8:
  unint64_t v40 = v11;
  *(void *)(v0 + 264) = v11;
  while (1)
  {
    uint64_t v12 = v5;
    if ((v2 & 0x8000000000000000) == 0) {
      break;
    }
    uint64_t v15 = sub_1C214B700();
    if (!v15) {
      goto LABEL_44;
    }
    *(void *)(v0 + 136) = v15;
    type metadata accessor for MedicationsDoseLogViewModel(0);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    uint64_t v16 = *(void *)(v0 + 128);
    swift_unknownObjectRelease();
    if (!v16) {
      goto LABEL_44;
    }
LABEL_32:
    BOOL v20 = *(void **)(v16 + 24);
    if (v20)
    {
      id v21 = v20;
      if (objc_msgSend(v21, sel_status) != *(id *)(v16 + 48)
        || (id v22 = objc_msgSend(v21, sel_doseQuantity)) == 0
        || (v23 = v22, objc_msgSend(v22, sel_doubleValue), double v25 = v24, v23, v25 != *(double *)(v16 + 40)))
      {

LABEL_39:
        sub_1C20B7730(*(uint64_t **)(v0 + 200));
        unint64_t v11 = v40;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v11 = sub_1C1F3BCE8(0, *(void *)(v40 + 16) + 1, 1, v40);
        }
        unint64_t v33 = *(void *)(v11 + 16);
        unint64_t v32 = *(void *)(v11 + 24);
        if (v33 >= v32 >> 1) {
          unint64_t v11 = sub_1C1F3BCE8(v32 > 1, v33 + 1, 1, v11);
        }
        uint64_t v34 = *(void *)(v0 + 200);
        uint64_t v35 = *(void *)(v0 + 184);
        *(void *)(v11 + 16) = v33 + 1;
        (*(void (**)(unint64_t, uint64_t, uint64_t))(v39 + 32))(v11+ ((*(unsigned __int8 *)(v39 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80))+ *(void *)(v39 + 72) * v33, v34, v35);
        uint64_t v3 = swift_release();
        goto LABEL_8;
      }
      uint64_t v26 = *(void *)(v0 + 224);
      uint64_t v27 = *(void *)(v0 + 232);
      uint64_t v28 = *(void *)(v0 + 208);
      id v29 = objc_msgSend(v21, sel_startDate);
      sub_1C2147A60();

      uint64_t v30 = v16 + OBJC_IVAR____TtC19HealthMedicationsUI27MedicationsDoseLogViewModel_logDate;
      swift_beginAccess();
      (*v44)(v26, v30, v28);
      sub_1C20921B4(&qword_1EA2C5070, MEMORY[0x1E4F27928]);
      LOBYTE(v30) = sub_1C214A5A0();

      uint64_t v31 = *v43;
      (*v43)(v26, v28);
      v31(v27, v28);
      if ((v30 & 1) == 0) {
        goto LABEL_39;
      }
    }
    else if (*(void *)(v16 + 48) != *(void *)(v16 {
                                                 + OBJC_IVAR____TtC19HealthMedicationsUI27MedicationsDoseLogViewModel_initialStatus))
    }
    {
      goto LABEL_39;
    }
    uint64_t v3 = swift_release();
  }
  if (v6)
  {
    unint64_t v13 = __clz(__rbit64(v6));
    v6 &= v6 - 1;
    unint64_t v14 = v13 | (v5 << 6);
    goto LABEL_31;
  }
  int64_t v17 = v5 + 1;
  if (__OFADD__(v5, 1))
  {
    __break(1u);
    return MEMORY[0x1F411F650](v3);
  }
  if (v17 >= v41) {
    goto LABEL_44;
  }
  unint64_t v18 = *(void *)(v42 + 8 * v17);
  ++v5;
  if (v18) {
    goto LABEL_30;
  }
  uint64_t v5 = v12 + 2;
  if (v12 + 2 >= v41) {
    goto LABEL_44;
  }
  unint64_t v18 = *(void *)(v42 + 8 * v5);
  if (v18) {
    goto LABEL_30;
  }
  uint64_t v5 = v12 + 3;
  if (v12 + 3 >= v41) {
    goto LABEL_44;
  }
  unint64_t v18 = *(void *)(v42 + 8 * v5);
  if (v18) {
    goto LABEL_30;
  }
  uint64_t v5 = v12 + 4;
  if (v12 + 4 >= v41) {
    goto LABEL_44;
  }
  unint64_t v18 = *(void *)(v42 + 8 * v5);
  if (v18)
  {
LABEL_30:
    unint64_t v6 = (v18 - 1) & v18;
    unint64_t v14 = __clz(__rbit64(v18)) + (v5 << 6);
LABEL_31:
    uint64_t v16 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
    swift_retain();
    if (!v16) {
      goto LABEL_44;
    }
    goto LABEL_32;
  }
  uint64_t v19 = v12 + 5;
  while (v41 != v19)
  {
    unint64_t v18 = *(void *)(v42 + 8 * v19++);
    if (v18)
    {
      uint64_t v5 = v19 - 1;
      goto LABEL_30;
    }
  }
LABEL_44:
  sub_1C1F495B8();
  if (*(void *)(v40 + 16))
  {
    char v36 = (void *)swift_task_alloc();
    *(void *)(v0 + 272) = v36;
    *char v36 = v0;
    v36[1] = sub_1C208B644;
    uint64_t v3 = v40;
    return MEMORY[0x1F411F650](v3);
  }
  swift_bridgeObjectRelease();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v37 = *(uint64_t (**)(void))(v0 + 8);
  return v37();
}

uint64_t sub_1C208B644()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 280) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 248);
    uint64_t v4 = *(void *)(v2 + 256);
    uint64_t v5 = sub_1C208B808;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v3 = *(void *)(v2 + 248);
    uint64_t v4 = *(void *)(v2 + 256);
    uint64_t v5 = sub_1C208B778;
  }
  return MEMORY[0x1F4188298](v5, v3, v4);
}

uint64_t sub_1C208B778()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C208B808()
{
  double v24 = v0;
  uint64_t v1 = (void *)v0[35];
  swift_release();
  swift_bridgeObjectRelease();
  sub_1C21497D0();
  id v2 = v1;
  id v3 = v1;
  uint64_t v4 = sub_1C21497E0();
  os_log_type_t v5 = sub_1C214ABD0();
  if (os_log_type_enabled(v4, v5))
  {
    unint64_t v6 = (void *)v0[35];
    uint64_t v7 = v0[21];
    uint64_t v21 = v0[20];
    uint64_t v22 = v0[22];
    uint64_t v8 = swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    uint64_t v23 = v9;
    *(_DWORD *)uint64_t v8 = 136315394;
    uint64_t v10 = sub_1C214BC10();
    v0[15] = sub_1C1F6FD54(v10, v11, &v23);
    sub_1C214B530();
    swift_bridgeObjectRelease();
    *(_WORD *)(v8 + 12) = 2080;
    v0[13] = v6;
    id v12 = v6;
    sub_1C1F23804(0, (unint64_t *)&qword_1EBF0C9C0);
    uint64_t v13 = sub_1C214A610();
    v0[14] = sub_1C1F6FD54(v13, v14, &v23);
    sub_1C214B530();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1C1F0B000, v4, v5, "[%s] Error saving medication dose event samples %s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C8754730](v9, -1, -1);
    MEMORY[0x1C8754730](v8, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v22, v21);
  }
  else
  {
    uint64_t v15 = (void *)v0[35];
    uint64_t v17 = v0[21];
    uint64_t v16 = v0[22];
    uint64_t v18 = v0[20];

    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v19 = (uint64_t (*)(void))v0[1];
  return v19();
}

uint64_t sub_1C208BAC0()
{
  uint64_t v52 = sub_1C2147AC0();
  uint64_t v1 = *(void *)(v52 - 8);
  MEMORY[0x1F4188790](v52);
  uint64_t v51 = (char *)&v43 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v3 = (uint64_t *)(v0 + qword_1EBF0C3E8);
  swift_beginAccess();
  uint64_t v4 = *v3;
  BOOL v35 = (*v3 & 0xC000000000000001) == 0;
  uint64_t v44 = v0;
  if (v35)
  {
    uint64_t v10 = -1 << *(unsigned char *)(v4 + 32);
    uint64_t v11 = *(void *)(v4 + 56);
    uint64_t v48 = v4 + 56;
    uint64_t v7 = ~v10;
    uint64_t v12 = -v10;
    if (v12 < 64) {
      uint64_t v13 = ~(-1 << v12);
    }
    else {
      uint64_t v13 = -1;
    }
    unint64_t v9 = v13 & v11;
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v8 = 0;
    uint64_t v6 = result;
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_1C214B680();
    type metadata accessor for MedicationsDoseLogViewModel(0);
    sub_1C20921B4(&qword_1EA2C66C0, (void (*)(uint64_t))type metadata accessor for MedicationsDoseLogViewModel);
    uint64_t result = sub_1C214AAA0();
    uint64_t v6 = v57;
    uint64_t v48 = v58;
    uint64_t v7 = v59;
    uint64_t v8 = v60;
    unint64_t v9 = v61;
  }
  uint64_t v43 = v7;
  BOOL v14 = 0;
  uint64_t v54 = 0;
  BOOL v15 = 0;
  char v16 = 0;
  BOOL v17 = 0;
  uint64_t v46 = v6 & 0x7FFFFFFFFFFFFFFFLL;
  int64_t v47 = (unint64_t)(v7 + 64) >> 6;
  uint64_t v49 = (void (**)(char *, uint64_t))(v1 + 8);
  uint64_t v50 = (void (**)(char *, uint64_t, uint64_t))(v1 + 16);
  uint64_t v45 = MEMORY[0x1E4FBC838] + 8;
  uint64_t v53 = v6;
  while (v6 < 0)
  {
    uint64_t v22 = sub_1C214B700();
    if (!v22) {
      goto LABEL_95;
    }
    uint64_t v55 = v22;
    type metadata accessor for MedicationsDoseLogViewModel(0);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    uint64_t v23 = v56;
    swift_unknownObjectRelease();
    uint64_t v21 = v8;
    uint64_t v19 = v9;
    uint64_t v6 = v53;
    if (!v23) {
      goto LABEL_95;
    }
LABEL_33:
    if (v17)
    {
      if (v16)
      {
        if ((v54 & 0x100000000) != 0)
        {
          if (v15)
          {
            if (v54)
            {
              if (v14)
              {
                uint64_t result = swift_release();
                BOOL v14 = 1;
                uint64_t v54 = 0x100000001;
                BOOL v15 = 1;
                char v16 = 1;
                BOOL v17 = 1;
                goto LABEL_11;
              }
              uint64_t v54 = 0x100000001;
              BOOL v15 = 1;
              char v16 = 1;
              BOOL v17 = 1;
LABEL_10:
              uint64_t v18 = *(void *)(v23 + 48);
              uint64_t result = swift_release();
              BOOL v14 = v18 == 5;
              goto LABEL_11;
            }
            BOOL v15 = 1;
            HIDWORD(v54) = 1;
            char v16 = 1;
            BOOL v17 = 1;
            goto LABEL_83;
          }
          HIDWORD(v54) = 1;
          char v16 = 1;
          BOOL v17 = 1;
          goto LABEL_69;
        }
        char v16 = 1;
        BOOL v17 = 1;
LABEL_55:
        if (*(void *)(v23 + OBJC_IVAR____TtC19HealthMedicationsUI27MedicationsDoseLogViewModel_initialStatus) == 4)
        {
          HIDWORD(v54) = *(void *)(v23 + 48) == 5;
          if (!v15) {
            goto LABEL_69;
          }
          if ((v54 & 1) == 0)
          {
            BOOL v15 = 1;
            goto LABEL_83;
          }
          if (!v14) {
            goto LABEL_92;
          }
          uint64_t result = swift_release();
        }
        else
        {
          if (!v15)
          {
            HIDWORD(v54) = 0;
            goto LABEL_69;
          }
          if ((v54 & 1) == 0)
          {
            HIDWORD(v54) = 0;
            BOOL v15 = 1;
            goto LABEL_83;
          }
          if (!v14)
          {
            HIDWORD(v54) = 0;
LABEL_92:
            LODWORD(v54) = 1;
            BOOL v15 = 1;
            goto LABEL_10;
          }
          uint64_t result = swift_release();
          HIDWORD(v54) = 0;
        }
        BOOL v14 = 1;
        LODWORD(v54) = 1;
        BOOL v15 = 1;
        goto LABEL_11;
      }
      BOOL v17 = 1;
    }
    else
    {
      BOOL v17 = *(double *)(v23 + OBJC_IVAR____TtC19HealthMedicationsUI27MedicationsDoseLogViewModel_initialDoseAmount) != *(double *)(v23 + 40);
      if (v16)
      {
        if ((v54 & 0x100000000) != 0)
        {
          if (v15)
          {
            if (v54)
            {
              if (!v14)
              {
                uint64_t v54 = 0x100000001;
                BOOL v15 = 1;
                char v16 = 1;
                goto LABEL_10;
              }
              uint64_t result = swift_release();
              BOOL v14 = 1;
              uint64_t v54 = 0x100000001;
              BOOL v15 = 1;
              char v16 = 1;
              goto LABEL_11;
            }
            BOOL v15 = 1;
            HIDWORD(v54) = 1;
            char v16 = 1;
            goto LABEL_83;
          }
          HIDWORD(v54) = 1;
          char v16 = 1;
          goto LABEL_69;
        }
        char v16 = 1;
        goto LABEL_55;
      }
    }
    uint64_t v27 = v23 + OBJC_IVAR____TtC19HealthMedicationsUI27MedicationsDoseLogViewModel_logDate;
    swift_beginAccess();
    uint64_t v28 = v51;
    uint64_t v29 = v27;
    uint64_t v30 = v52;
    (*v50)(v51, v29, v52);
    sub_1C20921B4(&qword_1EA2C5070, MEMORY[0x1E4F27928]);
    char v31 = sub_1C214A5A0();
    (*v49)(v28, v30);
    char v16 = v31 ^ 1;
    if ((v54 & 0x100000000) == 0)
    {
      uint64_t v6 = v53;
      goto LABEL_55;
    }
    uint64_t v6 = v53;
    if (v15)
    {
      if (v54)
      {
        if (!v14)
        {
          uint64_t v54 = 0x100000001;
          BOOL v15 = 1;
          goto LABEL_10;
        }
        uint64_t result = swift_release();
        BOOL v14 = 1;
        uint64_t v54 = 0x100000001;
        BOOL v15 = 1;
        goto LABEL_11;
      }
      BOOL v15 = 1;
      HIDWORD(v54) = 1;
      goto LABEL_83;
    }
    HIDWORD(v54) = 1;
LABEL_69:
    if (*(void *)(v23 + OBJC_IVAR____TtC19HealthMedicationsUI27MedicationsDoseLogViewModel_initialStatus) == 5)
    {
      BOOL v15 = *(void *)(v23 + 48) == 4;
      if (v54)
      {
        if (!v14) {
          goto LABEL_9;
        }
        uint64_t result = swift_release();
LABEL_76:
        BOOL v14 = 1;
        LODWORD(v54) = 1;
        goto LABEL_11;
      }
    }
    else
    {
      if (v54)
      {
        if (!v14)
        {
          BOOL v15 = 0;
LABEL_9:
          LODWORD(v54) = 1;
          goto LABEL_10;
        }
        uint64_t result = swift_release();
        BOOL v15 = 0;
        goto LABEL_76;
      }
      BOOL v15 = 0;
    }
LABEL_83:
    if ((*(void *)(v23 + OBJC_IVAR____TtC19HealthMedicationsUI27MedicationsDoseLogViewModel_initialStatus) & 0xFFFFFFFFFFFFFFFELL) == 4)
    {
      LODWORD(v54) = *(void *)(v23 + 48) == 6;
      if (!v14) {
        goto LABEL_10;
      }
      uint64_t result = swift_release();
    }
    else
    {
      if (!v14)
      {
        LODWORD(v54) = 0;
        goto LABEL_10;
      }
      uint64_t result = swift_release();
      LODWORD(v54) = 0;
    }
    BOOL v14 = 1;
LABEL_11:
    uint64_t v8 = v21;
    unint64_t v9 = v19;
  }
  if (v9)
  {
    uint64_t v19 = (v9 - 1) & v9;
    unint64_t v20 = __clz(__rbit64(v9)) | (v8 << 6);
    uint64_t v21 = v8;
    goto LABEL_32;
  }
  int64_t v24 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    return result;
  }
  if (v24 >= v47) {
    goto LABEL_95;
  }
  unint64_t v25 = *(void *)(v48 + 8 * v24);
  uint64_t v21 = v8 + 1;
  if (v25) {
    goto LABEL_31;
  }
  uint64_t v21 = v8 + 2;
  if (v8 + 2 >= v47) {
    goto LABEL_95;
  }
  unint64_t v25 = *(void *)(v48 + 8 * v21);
  if (v25) {
    goto LABEL_31;
  }
  uint64_t v21 = v8 + 3;
  if (v8 + 3 >= v47) {
    goto LABEL_95;
  }
  unint64_t v25 = *(void *)(v48 + 8 * v21);
  if (v25) {
    goto LABEL_31;
  }
  uint64_t v21 = v8 + 4;
  if (v8 + 4 >= v47) {
    goto LABEL_95;
  }
  unint64_t v25 = *(void *)(v48 + 8 * v21);
  if (v25)
  {
LABEL_31:
    uint64_t v19 = (v25 - 1) & v25;
    unint64_t v20 = __clz(__rbit64(v25)) + (v21 << 6);
LABEL_32:
    uint64_t v23 = *(void *)(*(void *)(v6 + 48) + 8 * v20);
    swift_retain();
    if (!v23) {
      goto LABEL_95;
    }
    goto LABEL_33;
  }
  uint64_t v26 = v8 + 5;
  while (v47 != v26)
  {
    unint64_t v25 = *(void *)(v48 + 8 * v26++);
    if (v25)
    {
      uint64_t v21 = v26 - 1;
      goto LABEL_31;
    }
  }
LABEL_95:
  uint64_t result = sub_1C1F495B8();
  uint64_t v32 = v44;
  if (v17)
  {
    uint64_t v33 = qword_1EBF0C430;
    uint64_t v34 = *(void *)(v44 + qword_1EBF0C430);
    if ((v34 & 8) == 0)
    {
      v34 |= 8uLL;
      *(void *)(v44 + qword_1EBF0C430) = v34;
    }
    BOOL v35 = *(void *)(v32 + qword_1EBF0C438) == 3 && (v34 & 0x100) == 0;
    if (v35) {
      *(void *)(v32 + v33) = v34 | 0x100;
    }
  }
  if (v16)
  {
    uint64_t v36 = qword_1EBF0C430;
    uint64_t v37 = *(void *)(v32 + qword_1EBF0C430);
    if ((v37 & 0x10) == 0)
    {
      v37 |= 0x10uLL;
      *(void *)(v32 + qword_1EBF0C430) = v37;
    }
    if (*(void *)(v32 + qword_1EBF0C438) == 3 && (v37 & 0x80) == 0) {
      *(void *)(v32 + v36) = v37 | 0x80;
    }
  }
  if ((v54 & 0x100000000) != 0)
  {
    uint64_t v39 = *(void *)(v32 + qword_1EBF0C430);
    if ((v39 & 0x200) == 0) {
      *(void *)(v32 + qword_1EBF0C430) = v39 | 0x200;
    }
  }
  if (v15)
  {
    uint64_t v40 = *(void *)(v32 + qword_1EBF0C430);
    if ((v40 & 0x400) == 0) {
      *(void *)(v32 + qword_1EBF0C430) = v40 | 0x400;
    }
  }
  if (v54)
  {
    uint64_t v41 = *(void *)(v32 + qword_1EBF0C430);
    if ((v41 & 0x800) == 0) {
      *(void *)(v32 + qword_1EBF0C430) = v41 | 0x800;
    }
  }
  if (v14)
  {
    uint64_t v42 = *(void *)(v32 + qword_1EBF0C430);
    if ((v42 & 0x40) == 0) {
      *(void *)(v32 + qword_1EBF0C430) = v42 | 0x40;
    }
  }
  return result;
}

uint64_t sub_1C208C308(uint64_t a1)
{
  uint64_t v126 = sub_1C2147AC0();
  uint64_t v3 = *(void *)(v126 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v126);
  uint64_t v113 = (char *)&v112 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  uint64_t v124 = (char *)&v112 - v7;
  MEMORY[0x1F4188790](v6);
  uint64_t v127 = (char *)&v112 - v8;
  uint64_t v9 = qword_1EBF0C430;
  uint64_t v10 = *(void *)(v1 + qword_1EBF0C430);
  if ((a1 & ~v10) != 0) {
    *(void *)(v1 + qword_1EBF0C430) = v10 | a1;
  }
  sub_1C208BAC0();
  sub_1C2147A70();
  uint64_t v117 = v1;
  unint64_t v11 = v1 + qword_1EBF0C3E8;
  swift_beginAccess();
  uint64_t v12 = *(void *)v11;
  if ((*(void *)v11 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_1C214B6D0();
    swift_bridgeObjectRelease();
    uint64_t v12 = *(void *)v11;
  }
  else
  {
    uint64_t v13 = *(void *)(v12 + 16);
  }
  uint64_t v14 = v13 != 0;
  if ((v12 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v15 = sub_1C214B6D0();
    swift_bridgeObjectRelease();
    uint64_t v12 = *(void *)v11;
  }
  else
  {
    uint64_t v15 = *(void *)(v12 + 16);
  }
  if (v15) {
    uint64_t v16 = 0x7FFFFFFFFFFFFFFFLL;
  }
  else {
    uint64_t v16 = 0;
  }
  uint64_t v114 = v9;
  if ((v12 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v17 = sub_1C214B6D0();
    swift_bridgeObjectRelease();
    uint64_t v12 = *(void *)v11;
  }
  else
  {
    uint64_t v17 = *(void *)(v12 + 16);
  }
  uint64_t v18 = v17 != 0;
  if ((v12 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v19 = sub_1C214B6D0();
    swift_bridgeObjectRelease();
    uint64_t v12 = *(void *)v11;
  }
  else
  {
    uint64_t v19 = *(void *)(v12 + 16);
  }
  uint64_t v20 = 0x7FFFFFFFFFFFFFFFLL;
  if (!v19) {
    uint64_t v20 = 0;
  }
  uint64_t v130 = v20;
  id v132 = (id)v16;
  if ((v12 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v21 = sub_1C214B6D0();
    swift_bridgeObjectRelease();
    uint64_t v12 = *(void *)v11;
  }
  else
  {
    uint64_t v21 = *(void *)(v12 + 16);
  }
  uint64_t v22 = v21 != 0;
  unint64_t v116 = v11;
  if ((v12 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v23 = sub_1C214B6D0();
    swift_bridgeObjectRelease();
    uint64_t v12 = *(void *)v11;
  }
  else
  {
    uint64_t v23 = *(void *)(v12 + 16);
  }
  uint64_t v131 = v14 << 63;
  uint64_t v129 = v18 << 63;
  uint64_t v123 = v22 << 63;
  if (v23) {
    uint64_t v24 = 0x7FFFFFFFFFFFFFFFLL;
  }
  else {
    uint64_t v24 = 0;
  }
  if ((v12 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1C214B680();
    type metadata accessor for MedicationsDoseLogViewModel(0);
    sub_1C20921B4(&qword_1EA2C66C0, (void (*)(uint64_t))type metadata accessor for MedicationsDoseLogViewModel);
    sub_1C214AAA0();
    uint64_t v12 = v139;
    uint64_t v121 = v140;
    uint64_t v25 = v141;
    unint64_t v26 = v142;
    unint64_t v27 = v143;
  }
  else
  {
    uint64_t v28 = -1 << *(unsigned char *)(v12 + 32);
    uint64_t v29 = *(void *)(v12 + 56);
    uint64_t v121 = (void *)(v12 + 56);
    uint64_t v25 = ~v28;
    uint64_t v30 = -v28;
    if (v30 < 64) {
      uint64_t v31 = ~(-1 << v30);
    }
    else {
      uint64_t v31 = -1;
    }
    unint64_t v27 = v31 & v29;
    swift_bridgeObjectRetain();
    unint64_t v26 = 0;
  }
  uint64_t v133 = 0;
  uint64_t v119 = v12 & 0x7FFFFFFFFFFFFFFFLL;
  uint64_t v115 = v25;
  id v120 = (id)((unint64_t)(v25 + 64) >> 6);
  uint64_t v122 = (void (**)(char *, unint64_t, uint64_t))(v3 + 16);
  uint64_t v125 = (uint64_t (**)(char *, uint64_t))(v3 + 8);
  uint64_t v118 = MEMORY[0x1E4FBC838] + 8;
LABEL_36:
  unint64_t v32 = v27;
  if ((v12 & 0x8000000000000000) == 0)
  {
LABEL_37:
    if (v32)
    {
      uint64_t v33 = (v32 - 1) & v32;
      unint64_t v34 = __clz(__rbit64(v32)) | (v26 << 6);
      unint64_t v11 = v26;
      goto LABEL_56;
    }
    int64_t v37 = v26 + 1;
    if (__OFADD__(v26, 1))
    {
LABEL_104:
      __break(1u);
      goto LABEL_105;
    }
    if (v37 < (uint64_t)v120)
    {
      unint64_t v38 = v121[v37];
      unint64_t v11 = v26 + 1;
      if (v38) {
        goto LABEL_55;
      }
      unint64_t v11 = v26 + 2;
      if ((uint64_t)(v26 + 2) >= (uint64_t)v120) {
        goto LABEL_89;
      }
      unint64_t v38 = v121[v11];
      if (v38) {
        goto LABEL_55;
      }
      unint64_t v11 = v26 + 3;
      if ((uint64_t)(v26 + 3) >= (uint64_t)v120) {
        goto LABEL_89;
      }
      unint64_t v38 = v121[v11];
      if (v38) {
        goto LABEL_55;
      }
      unint64_t v11 = v26 + 4;
      if ((uint64_t)(v26 + 4) >= (uint64_t)v120) {
        goto LABEL_89;
      }
      unint64_t v38 = v121[v11];
      if (v38)
      {
LABEL_55:
        uint64_t v33 = (v38 - 1) & v38;
        unint64_t v34 = __clz(__rbit64(v38)) + (v11 << 6);
LABEL_56:
        uint64_t v36 = *(void *)(*(void *)(v12 + 48) + 8 * v34);
        swift_retain();
        if (v36) {
          goto LABEL_57;
        }
        goto LABEL_89;
      }
      unint64_t v39 = v26 + 5;
      while (v120 != (id)v39)
      {
        unint64_t v38 = v121[v39++];
        if (v38)
        {
          unint64_t v11 = v39 - 1;
          goto LABEL_55;
        }
      }
    }
LABEL_89:
    sub_1C1F495B8();
    unint64_t v26 = 0x1E4F28000uLL;
    id v68 = objc_allocWithZone(NSNumber);
    id v128 = objc_msgSend(v68, sel_initWithInteger_, v131);
    id v69 = objc_allocWithZone(NSNumber);
    uint64_t v124 = (char *)objc_msgSend(v69, sel_initWithInteger_, v132);
    uint64_t v70 = v117;
    unint64_t v32 = *(void *)(v117 + qword_1EBF0C438);
    if (v32 == 1)
    {
      id v71 = objc_allocWithZone(NSNumber);
      uint64_t v129 = (uint64_t)objc_msgSend(v71, sel_initWithInteger_, v129);
      id v72 = objc_allocWithZone(NSNumber);
      uint64_t v122 = (void (**)(char *, unint64_t, uint64_t))objc_msgSend(v72, sel_initWithInteger_, v130);
      id v73 = objc_allocWithZone(NSNumber);
      uint64_t v123 = (uint64_t)objc_msgSend(v73, sel_initWithInteger_, v123);
      id v74 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, v24);
      uint64_t v70 = v117;
    }
    else
    {
      id v74 = 0;
      uint64_t v123 = 0;
      uint64_t v122 = 0;
      uint64_t v129 = 0;
    }
    unint64_t v11 = v116;
    uint64_t v75 = *(void *)(v70 + qword_1EBF0C3C0);
    uint64_t v121 = v74;
    if (!v75)
    {
      id v120 = 0;
      goto LABEL_108;
    }
    unint64_t v76 = *(void *)(v75 + 16);
    if (!(v76 >> 62))
    {
      uint64_t v77 = *(void *)((v76 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_retain();
      if (v32 == 1)
      {
LABEL_95:
        id v120 = objc_msgSend(objc_allocWithZone(*(Class *)(v26 + 3792)), sel_initWithBool_, v77 != v133);
LABEL_107:
        swift_release();
LABEL_108:
        uint64_t v130 = v32;
        uint64_t v78 = *(void *)v11;
        id v132 = (id)(*(void *)v11 & 0xC000000000000001);
        if (v132)
        {
          swift_bridgeObjectRetain();
          uint64_t v79 = sub_1C214B6D0();
          if (v79)
          {
LABEL_110:
            uint64_t v138 = MEMORY[0x1E4FBC860];
            sub_1C1F70524(0, v79 & ~(v79 >> 63), 0);
            if (v132)
            {
              uint64_t result = sub_1C214B670();
              char v81 = 1;
            }
            else
            {
              uint64_t result = sub_1C2091B44(v78);
              char v81 = v82 & 1;
            }
            uint64_t v135 = result;
            uint64_t v136 = v80;
            char v137 = v81;
            if ((v79 & 0x8000000000000000) == 0)
            {
              uint64_t v83 = v78 & 0xFFFFFFFFFFFFFF8;
              if (v78 < 0) {
                uint64_t v83 = v78;
              }
              uint64_t v131 = v83;
              do
              {
                while (1)
                {
                  int64_t v90 = v135;
                  uint64_t v89 = v136;
                  char v91 = v137;
                  id v92 = objc_msgSend(*(id *)(sub_1C2091594(v135, v136, v137, v78) + 16), sel_semanticIdentifier);
                  id v93 = objc_msgSend(v92, sel_stringValue);

                  uint64_t v94 = sub_1C214A5F0();
                  uint64_t v96 = v95;
                  swift_release();

                  uint64_t v97 = v138;
                  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
                  if ((result & 1) == 0)
                  {
                    uint64_t result = sub_1C1F70524(0, *(void *)(v97 + 16) + 1, 1);
                    uint64_t v97 = v138;
                  }
                  unint64_t v99 = *(void *)(v97 + 16);
                  unint64_t v98 = *(void *)(v97 + 24);
                  if (v99 >= v98 >> 1)
                  {
                    uint64_t result = sub_1C1F70524(v98 > 1, v99 + 1, 1);
                    uint64_t v97 = v138;
                  }
                  *(void *)(v97 + 16) = v99 + 1;
                  uint64_t v100 = v97 + 16 * v99;
                  *(void *)(v100 + 32) = v94;
                  *(void *)(v100 + 40) = v96;
                  if (v132) {
                    break;
                  }
                  int64_t v84 = sub_1C209149C(v90, v89, v91, v78);
                  uint64_t v86 = v85;
                  char v88 = v87;
                  sub_1C1FB6928(v90, v89, v91);
                  uint64_t v135 = v84;
                  uint64_t v136 = v86;
                  char v137 = v88 & 1;
                  if (!--v79) {
                    goto LABEL_129;
                  }
                }
                if ((v91 & 1) == 0) {
                  goto LABEL_135;
                }
                if (sub_1C214B690()) {
                  swift_isUniquelyReferenced_nonNull_native();
                }
                sub_1C20921FC(0, &qword_1EA2C66C8, MEMORY[0x1E4FBB4E0]);
                unint64_t v101 = (void (*)(uint64_t *, void))sub_1C214AA80();
                sub_1C214B730();
                v101(v134, 0);
                --v79;
              }
              while (v79);
LABEL_129:
              sub_1C1FB6928(v135, v136, v137);
              swift_bridgeObjectRelease();
              goto LABEL_130;
            }
            __break(1u);
LABEL_132:
            __break(1u);
LABEL_133:
            __break(1u);
            goto LABEL_134;
          }
        }
        else
        {
          uint64_t v79 = *(void *)(v78 + 16);
          swift_bridgeObjectRetain();
          if (v79) {
            goto LABEL_110;
          }
        }
        swift_bridgeObjectRelease();
LABEL_130:
        id v132 = self;
        uint64_t v102 = *(void *)(v117 + qword_1EBF0C400);
        uint64_t v131 = *(void *)(v117 + v114);
        uint64_t v103 = *(void *)(v117 + qword_1EBF0C3F8);
        unint64_t v104 = (void *)sub_1C214A770();
        swift_bridgeObjectRelease();
        uint64_t v105 = v120;
        uint64_t v106 = v121;
        uint64_t v107 = (void *)v123;
        unint64_t v108 = v122;
        v109 = (void *)v129;
        unint64_t v110 = v124;
        uint64_t v111 = v128;
        objc_msgSend(v132, sel_submitLogMetricWithHealthStore_actions_provenance_context_medicationIdentifiers_loggingMultipleMeds_hoursAgoLoggedForMax_hoursAgoLoggedForMin_hoursFromScheduledTimeLoggedMax_hoursFromScheduledTimeLoggedMin_hoursFromScheduledToTakenOrSkippedMax_hoursFromScheduledToTakenOrSkippedMin_isPartiallyLoggingScheduledMeds_dataSource_, v102, v131, v103, v130, v104, v133 > 1, v128, v124, v129, v122, v123, v121, v120, v102);

        return (*v125)(v127, v126);
      }
LABEL_106:
      id v120 = 0;
      goto LABEL_107;
    }
LABEL_105:
    swift_retain();
    swift_bridgeObjectRetain();
    uint64_t v77 = sub_1C214B930();
    swift_bridgeObjectRelease();
    if (v32 == 1) {
      goto LABEL_95;
    }
    goto LABEL_106;
  }
  while (1)
  {
    uint64_t v35 = sub_1C214B700();
    if (!v35) {
      goto LABEL_89;
    }
    uint64_t v135 = v35;
    type metadata accessor for MedicationsDoseLogViewModel(0);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    uint64_t v36 = v134[0];
    swift_unknownObjectRelease();
    unint64_t v11 = v26;
    uint64_t v33 = v32;
    if (!v36) {
      goto LABEL_89;
    }
LABEL_57:
    char v40 = sub_1C20B7AF4();
    BOOL v41 = __OFADD__(v133, v40 & 1);
    v133 += v40 & 1;
    if (v41)
    {
      __break(1u);
LABEL_98:
      __break(1u);
LABEL_99:
      __break(1u);
LABEL_100:
      __break(1u);
LABEL_101:
      __break(1u);
LABEL_102:
      __break(1u);
LABEL_103:
      __break(1u);
      goto LABEL_104;
    }
    id v128 = (id)v33;
    uint64_t v42 = v12;
    unint64_t v26 = v36 + OBJC_IVAR____TtC19HealthMedicationsUI27MedicationsDoseLogViewModel_logDate;
    swift_beginAccess();
    uint64_t v43 = *v122;
    uint64_t v44 = v124;
    unint64_t v32 = v126;
    (*v122)(v124, v26, v126);
    sub_1C21479E0();
    double v46 = v45;
    int64_t v47 = *v125;
    (*v125)(v44, v32);
    double v48 = v46 / 3600.0;
    if ((~COERCE__INT64(v46 / 3600.0) & 0x7FF0000000000000) == 0) {
      goto LABEL_98;
    }
    if (v48 <= -9.22337204e18) {
      goto LABEL_99;
    }
    if (v48 >= 9.22337204e18) {
      goto LABEL_100;
    }
    uint64_t v49 = v131;
    if (v131 <= (uint64_t)v48) {
      uint64_t v49 = (uint64_t)v48;
    }
    uint64_t v131 = v49;
    id v50 = v132;
    if ((uint64_t)v132 >= (uint64_t)v48) {
      id v50 = (id)(uint64_t)v48;
    }
    id v132 = v50;
    unint64_t v32 = *(void *)(v36 + 32);
    if (!v32)
    {
      v130 &= v130 >> 63;
      v129 &= ~(v129 >> 63);
      goto LABEL_76;
    }
    swift_retain();
    uint64_t v51 = v124;
    sub_1C2148EA0();
    sub_1C21479E0();
    double v53 = v52;
    swift_release();
    v47(v51, v126);
    double v54 = v53 / 3600.0;
    if ((~COERCE__INT64(v53 / 3600.0) & 0x7FF0000000000000) == 0) {
      goto LABEL_101;
    }
    if (v54 <= -9.22337204e18) {
      goto LABEL_102;
    }
    if (v54 >= 9.22337204e18) {
      goto LABEL_103;
    }
    uint64_t v55 = v129;
    if (v129 <= (uint64_t)v54) {
      uint64_t v55 = (uint64_t)v54;
    }
    uint64_t v56 = *(void *)(v36 + 32);
    uint64_t v57 = v130;
    if ((uint64_t)v54 < v130) {
      uint64_t v57 = (uint64_t)v54;
    }
    uint64_t v130 = v57;
    uint64_t v129 = v55;
    if (v56) {
      break;
    }
LABEL_76:
    swift_release();
    uint64_t v12 = v42;
    if (v123 < 0)
    {
      uint64_t v123 = 0;
      uint64_t v58 = 0;
LABEL_86:
      unint64_t v26 = v11;
      unint64_t v27 = (unint64_t)v128;
      if (v58 < v24) {
        uint64_t v24 = v58;
      }
      goto LABEL_36;
    }
    v24 &= v24 >> 63;
    unint64_t v26 = v11;
    unint64_t v32 = (unint64_t)v128;
    if ((v42 & 0x8000000000000000) == 0) {
      goto LABEL_37;
    }
  }
  uint64_t v59 = v124;
  unint64_t v60 = v26;
  uint64_t v61 = v126;
  v43(v124, v60, v126);
  swift_retain();
  unint64_t v62 = v113;
  sub_1C2148EA0();
  sub_1C21479E0();
  double v64 = v63;
  swift_release();
  v47(v62, v61);
  v47(v59, v61);
  uint64_t result = swift_release();
  double v66 = v64 / 3600.0;
  if ((~COERCE__INT64(v64 / 3600.0) & 0x7FF0000000000000) == 0) {
    goto LABEL_132;
  }
  if (v66 <= -9.22337204e18) {
    goto LABEL_133;
  }
  if (v66 < 9.22337204e18)
  {
    uint64_t v12 = v42;
    uint64_t v58 = (uint64_t)v66;
    uint64_t v67 = v123;
    if (v123 <= (uint64_t)v66) {
      uint64_t v67 = (uint64_t)v66;
    }
    uint64_t v123 = v67;
    goto LABEL_86;
  }
LABEL_134:
  __break(1u);
LABEL_135:
  __break(1u);
  return result;
}

void MedicationsLogViewController.__allocating_init(dataSource:)()
{
}

void MedicationsLogViewController.init(dataSource:)()
{
}

id MedicationsLogViewController.__allocating_init(collectionViewLayout:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCollectionViewLayout_, a1);

  return v3;
}

void MedicationsLogViewController.init(collectionViewLayout:)()
{
}

void sub_1C208D3A8(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = a3;
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_1C208D3DC()
{
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  swift_release();
  swift_release();
  swift_release();
  swift_release();

  uint64_t v1 = *(void **)(v0 + qword_1EBF0C3D8);
}

id MedicationsLogViewController.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MedicationsLogViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1C208D4F4(uint64_t a1)
{
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  swift_release();
  swift_release();
  swift_release();
  swift_release();

  objc_super v2 = *(void **)(a1 + qword_1EBF0C3D8);
}

uint64_t sub_1C208D5E0(void *a1, void *a2)
{
  id v3 = v2;
  uint64_t v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0) {
      uint64_t v7 = *v2;
    }
    else {
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    id v8 = a2;
    uint64_t v9 = sub_1C214B6E0();

    if (v9)
    {
      swift_bridgeObjectRelease();

      sub_1C1F12718(0, &qword_1EBF0C908);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      swift_unknownObjectRelease();
      uint64_t result = 0;
      *a1 = v26;
      return result;
    }
    uint64_t result = sub_1C214B6D0();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    uint64_t v21 = sub_1C208E0D0(v7, result + 1);
    uint64_t v27 = v21;
    if (*(void *)(v21 + 24) <= *(void *)(v21 + 16))
    {
      id v25 = v8;
      sub_1C208E764();
      uint64_t v22 = v27;
    }
    else
    {
      uint64_t v22 = v21;
      id v23 = v8;
    }
    sub_1C208F3B8((uint64_t)v8, v22);
    *id v3 = v22;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_1C214B210();
    uint64_t v12 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v13 = v11 & ~v12;
    if ((*(void *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
    {
      sub_1C1F12718(0, &qword_1EBF0C908);
      id v14 = *(id *)(*(void *)(v6 + 48) + 8 * v13);
      char v15 = sub_1C214B220();

      if (v15)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        uint64_t v19 = *(void **)(*(void *)(*v2 + 48) + 8 * v13);
        *a1 = v19;
        id v20 = v19;
        return 0;
      }
      uint64_t v16 = ~v12;
      while (1)
      {
        unint64_t v13 = (v13 + 1) & v16;
        if (((*(void *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0) {
          break;
        }
        id v17 = *(id *)(*(void *)(v6 + 48) + 8 * v13);
        char v18 = sub_1C214B220();

        if (v18) {
          goto LABEL_12;
        }
      }
    }
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v28 = *v2;
    *objc_super v2 = 0x8000000000000000;
    id v8 = a2;
    sub_1C208F43C((uint64_t)v8, v13, isUniquelyReferenced_nonNull_native);
    *objc_super v2 = v28;
  }
  swift_bridgeObjectRelease();
  *a1 = v8;
  return 1;
}

uint64_t sub_1C208D880(uint64_t *a1, uint64_t a2)
{
  id v3 = v2;
  uint64_t v6 = *v2;
  if ((*v2 & 0xC000000000000001) == 0)
  {
    sub_1C214BB30();
    swift_bridgeObjectRetain();
    sub_1C20B7378();
    sub_1C214A690();
    swift_bridgeObjectRelease();
    uint64_t v9 = sub_1C214BB80();
    uint64_t v10 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v11 = v9 & ~v10;
    if ((*(void *)(v6 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11))
    {
      swift_retain();
      uint64_t v12 = sub_1C20B7378();
      uint64_t v14 = v13;
      if (v12 == sub_1C20B7378() && v14 == v15)
      {
LABEL_29:
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease_n();
        goto LABEL_30;
      }
      char v17 = sub_1C214BA80();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v17)
      {
LABEL_13:
        swift_release();
        swift_bridgeObjectRelease();
LABEL_30:
        *a1 = *(void *)(*(void *)(*v2 + 48) + 8 * v11);
        swift_retain();
        return 0;
      }
      uint64_t v21 = ~v10;
      while (1)
      {
        unint64_t v11 = (v11 + 1) & v21;
        if (((*(void *)(v6 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
          break;
        }
        swift_retain();
        uint64_t v22 = sub_1C20B7378();
        uint64_t v24 = v23;
        if (v22 == sub_1C20B7378() && v24 == v25) {
          goto LABEL_29;
        }
        char v27 = sub_1C214BA80();
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v27) {
          goto LABEL_13;
        }
      }
    }
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v33 = *v2;
    *objc_super v2 = 0x8000000000000000;
    uint64_t v29 = swift_retain();
    sub_1C208F5C4(v29, v11, isUniquelyReferenced_nonNull_native);
    *objc_super v2 = v33;
    swift_bridgeObjectRelease();
    *a1 = a2;
    return 1;
  }
  if (v6 < 0) {
    uint64_t v7 = *v2;
  }
  else {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFF8;
  }
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v8 = sub_1C214B6E0();
  swift_release();
  if (!v8)
  {
    uint64_t result = sub_1C214B6D0();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    uint64_t v19 = sub_1C208E2E4(v7, result + 1);
    uint64_t v32 = v19;
    if (*(void *)(v19 + 24) <= *(void *)(v19 + 16))
    {
      swift_retain();
      sub_1C208EA0C();
      uint64_t v20 = v32;
    }
    else
    {
      uint64_t v20 = v19;
      swift_retain();
    }
    sub_1C208F2F8(a2, v20);
    *id v3 = v20;
    swift_bridgeObjectRelease();
    *a1 = a2;
    return 1;
  }
  swift_bridgeObjectRelease();
  swift_release();
  type metadata accessor for MedicationsDoseLogViewModel(0);
  swift_unknownObjectRetain();
  swift_dynamicCast();
  *a1 = v31;
  swift_unknownObjectRelease();
  return 0;
}

uint64_t sub_1C208DC08(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = *v5;
  sub_1C214BB30();
  swift_bridgeObjectRetain();
  sub_1C214A690();
  sub_1C214A690();
  uint64_t v11 = sub_1C214BB80();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  uint64_t v14 = v10 + 56;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    uint64_t v15 = ~v12;
    uint64_t v16 = *(void *)(v10 + 48);
    while (1)
    {
      char v17 = (void *)(v16 + 32 * v13);
      uint64_t v18 = v17[2];
      uint64_t v19 = v17[3];
      BOOL v20 = *v17 == a2 && v17[1] == a3;
      if (v20 || (sub_1C214BA80() & 1) != 0)
      {
        BOOL v21 = v18 == a4 && v19 == a5;
        if (v21 || (sub_1C214BA80() & 1) != 0) {
          break;
        }
      }
      unint64_t v13 = (v13 + 1) & v15;
      if (((*(void *)(v14 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0) {
        goto LABEL_15;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v22 = (uint64_t *)(*(void *)(*v28 + 48) + 32 * v13);
    uint64_t v23 = v22[1];
    uint64_t v24 = v22[2];
    uint64_t v25 = v22[3];
    *a1 = *v22;
    a1[1] = v23;
    a1[2] = v24;
    a1[3] = v25;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return 0;
  }
  else
  {
LABEL_15:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v30 = *v28;
    *uint64_t v28 = 0x8000000000000000;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C208F824(a2, a3, a4, a5, v13, isUniquelyReferenced_nonNull_native);
    *uint64_t v28 = v30;
    swift_bridgeObjectRelease();
    *a1 = a2;
    a1[1] = a3;
    uint64_t result = 1;
    a1[2] = a4;
    a1[3] = a5;
  }
  return result;
}

uint64_t sub_1C208DE10(void *a1, void *a2)
{
  id v3 = v2;
  uint64_t v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0) {
      uint64_t v7 = *v2;
    }
    else {
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    id v8 = a2;
    uint64_t v9 = sub_1C214B6E0();

    if (v9)
    {
      swift_bridgeObjectRelease();

      sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8C0);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v28;
      swift_unknownObjectRelease();
      return 0;
    }
    uint64_t result = sub_1C214B6D0();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    uint64_t v21 = sub_1C208E520(v7, result + 1);
    uint64_t v29 = v21;
    unint64_t v22 = *(void *)(v21 + 16);
    if (*(void *)(v21 + 24) <= v22)
    {
      uint64_t v26 = v22 + 1;
      id v27 = v8;
      sub_1C208F038(v26, &qword_1EA2C66E8, (unint64_t *)&qword_1EBF0C8C0, 0x1E4F66B80, (unint64_t *)&qword_1EBF0C8C8);
      uint64_t v23 = v29;
    }
    else
    {
      uint64_t v23 = v21;
      id v24 = v8;
    }
    sub_1C208F3B8((uint64_t)v8, v23);
    *id v3 = v23;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_1C214B210();
    uint64_t v12 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v13 = v11 & ~v12;
    if ((*(void *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
    {
      sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8C0);
      id v14 = *(id *)(*(void *)(v6 + 48) + 8 * v13);
      char v15 = sub_1C214B220();

      if (v15)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        uint64_t v19 = *(void **)(*(void *)(*v2 + 48) + 8 * v13);
        *a1 = v19;
        id v20 = v19;
        return 0;
      }
      uint64_t v16 = ~v12;
      while (1)
      {
        unint64_t v13 = (v13 + 1) & v16;
        if (((*(void *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0) {
          break;
        }
        id v17 = *(id *)(*(void *)(v6 + 48) + 8 * v13);
        char v18 = sub_1C214B220();

        if (v18) {
          goto LABEL_12;
        }
      }
    }
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v30 = *v2;
    *objc_super v2 = 0x8000000000000000;
    id v8 = a2;
    sub_1C208F9EC((uint64_t)v8, v13, isUniquelyReferenced_nonNull_native);
    *objc_super v2 = v30;
  }
  swift_bridgeObjectRelease();
  *a1 = v8;
  return 1;
}

uint64_t sub_1C208E0D0(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    sub_1C20923F8(0, &qword_1EA2C66E0, &qword_1EBF0C908, 0x1E4F28ED0, (unint64_t *)&qword_1EBF0C910);
    uint64_t v2 = sub_1C214B790();
    uint64_t v14 = v2;
    sub_1C214B680();
    if (sub_1C214B700())
    {
      sub_1C1F12718(0, &qword_1EBF0C908);
      do
      {
        swift_dynamicCast();
        uint64_t v2 = v14;
        if (*(void *)(v14 + 24) <= *(void *)(v14 + 16))
        {
          sub_1C208E764();
          uint64_t v2 = v14;
        }
        uint64_t result = sub_1C214B210();
        uint64_t v4 = v2 + 56;
        uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
        unint64_t v6 = result & ~v5;
        unint64_t v7 = v6 >> 6;
        if (((-1 << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6))) != 0)
        {
          unint64_t v8 = __clz(__rbit64((-1 << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6)))) | v6 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v9 = 0;
          unint64_t v10 = (unint64_t)(63 - v5) >> 6;
          do
          {
            if (++v7 == v10 && (v9 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v11 = v7 == v10;
            if (v7 == v10) {
              unint64_t v7 = 0;
            }
            v9 |= v11;
            uint64_t v12 = *(void *)(v4 + 8 * v7);
          }
          while (v12 == -1);
          unint64_t v8 = __clz(__rbit64(~v12)) + (v7 << 6);
        }
        *(void *)(v4 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v8;
        *(void *)(*(void *)(v2 + 48) + 8 * v8) = v13;
        ++*(void *)(v2 + 16);
      }
      while (sub_1C214B700());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x1E4FBC870];
  }
  return v2;
}

uint64_t sub_1C208E2E4(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    sub_1C20921FC(0, &qword_1EA2C66D0, MEMORY[0x1E4FBB9A8]);
    uint64_t v2 = sub_1C214B790();
    uint64_t v14 = v2;
    sub_1C214B680();
    if (sub_1C214B700())
    {
      type metadata accessor for MedicationsDoseLogViewModel(0);
      do
      {
        swift_dynamicCast();
        uint64_t v2 = v14;
        if (*(void *)(v14 + 24) <= *(void *)(v14 + 16))
        {
          sub_1C208EA0C();
          uint64_t v2 = v14;
        }
        sub_1C214BB30();
        sub_1C20B7378();
        sub_1C214A690();
        swift_bridgeObjectRelease();
        uint64_t result = sub_1C214BB80();
        uint64_t v4 = v2 + 56;
        uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
        unint64_t v6 = result & ~v5;
        unint64_t v7 = v6 >> 6;
        if (((-1 << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6))) != 0)
        {
          unint64_t v8 = __clz(__rbit64((-1 << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6)))) | v6 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v9 = 0;
          unint64_t v10 = (unint64_t)(63 - v5) >> 6;
          do
          {
            if (++v7 == v10 && (v9 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v11 = v7 == v10;
            if (v7 == v10) {
              unint64_t v7 = 0;
            }
            v9 |= v11;
            uint64_t v12 = *(void *)(v4 + 8 * v7);
          }
          while (v12 == -1);
          unint64_t v8 = __clz(__rbit64(~v12)) + (v7 << 6);
        }
        *(void *)(v4 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v8;
        *(void *)(*(void *)(v2 + 48) + 8 * v8) = v13;
        ++*(void *)(v2 + 16);
      }
      while (sub_1C214B700());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x1E4FBC870];
  }
  return v2;
}

uint64_t sub_1C208E520(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    sub_1C20923F8(0, &qword_1EA2C66E8, (unint64_t *)&qword_1EBF0C8C0, 0x1E4F66B80, (unint64_t *)&qword_1EBF0C8C8);
    uint64_t v2 = sub_1C214B790();
    uint64_t v15 = v2;
    sub_1C214B680();
    if (sub_1C214B700())
    {
      sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8C0);
      do
      {
        swift_dynamicCast();
        uint64_t v2 = v15;
        unint64_t v9 = *(void *)(v15 + 16);
        if (*(void *)(v15 + 24) <= v9)
        {
          sub_1C208F038(v9 + 1, &qword_1EA2C66E8, (unint64_t *)&qword_1EBF0C8C0, 0x1E4F66B80, (unint64_t *)&qword_1EBF0C8C8);
          uint64_t v2 = v15;
        }
        uint64_t result = sub_1C214B210();
        uint64_t v4 = v2 + 56;
        uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
        unint64_t v6 = result & ~v5;
        unint64_t v7 = v6 >> 6;
        if (((-1 << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6))) != 0)
        {
          unint64_t v8 = __clz(__rbit64((-1 << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6)))) | v6 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v10 = 0;
          unint64_t v11 = (unint64_t)(63 - v5) >> 6;
          do
          {
            if (++v7 == v11 && (v10 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v12 = v7 == v11;
            if (v7 == v11) {
              unint64_t v7 = 0;
            }
            v10 |= v12;
            uint64_t v13 = *(void *)(v4 + 8 * v7);
          }
          while (v13 == -1);
          unint64_t v8 = __clz(__rbit64(~v13)) + (v7 << 6);
        }
        *(void *)(v4 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v8;
        *(void *)(*(void *)(v2 + 48) + 8 * v8) = v14;
        ++*(void *)(v2 + 16);
      }
      while (sub_1C214B700());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x1E4FBC870];
  }
  return v2;
}

uint64_t sub_1C208E764()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1C20923F8(0, &qword_1EA2C66E0, &qword_1EBF0C908, 0x1E4F28ED0, (unint64_t *)&qword_1EBF0C910);
  uint64_t v3 = sub_1C214B780();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v28 = v0;
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    unint64_t v6 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v7 = ~(-1 << v5);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & *(void *)(v2 + 56);
    int64_t v9 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v10 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v12 = 0;
    while (1)
    {
      if (v8)
      {
        unint64_t v14 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        unint64_t v15 = v14 | (v12 << 6);
      }
      else
      {
        int64_t v16 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_36:
          __break(1u);
LABEL_37:
          __break(1u);
          return result;
        }
        if (v16 >= v9) {
          goto LABEL_31;
        }
        unint64_t v17 = v6[v16];
        ++v12;
        if (!v17)
        {
          int64_t v12 = v16 + 1;
          if (v16 + 1 >= v9) {
            goto LABEL_31;
          }
          unint64_t v17 = v6[v12];
          if (!v17)
          {
            int64_t v18 = v16 + 2;
            if (v18 >= v9)
            {
LABEL_31:
              swift_release();
              uint64_t v1 = v28;
              uint64_t v27 = 1 << *(unsigned char *)(v2 + 32);
              if (v27 > 63) {
                bzero((void *)(v2 + 56), ((unint64_t)(v27 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *unint64_t v6 = -1 << v27;
              }
              *(void *)(v2 + 16) = 0;
              break;
            }
            unint64_t v17 = v6[v18];
            if (!v17)
            {
              while (1)
              {
                int64_t v12 = v18 + 1;
                if (__OFADD__(v18, 1)) {
                  goto LABEL_37;
                }
                if (v12 >= v9) {
                  goto LABEL_31;
                }
                unint64_t v17 = v6[v12];
                ++v18;
                if (v17) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v12 = v18;
          }
        }
LABEL_21:
        unint64_t v8 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
      }
      uint64_t v19 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
      uint64_t result = sub_1C214B210();
      uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v21 = result & ~v20;
      unint64_t v22 = v21 >> 6;
      if (((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6))) != 0)
      {
        unint64_t v13 = __clz(__rbit64((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v20) >> 6;
        do
        {
          if (++v22 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_36;
          }
          BOOL v25 = v22 == v24;
          if (v22 == v24) {
            unint64_t v22 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v10 + 8 * v22);
        }
        while (v26 == -1);
        unint64_t v13 = __clz(__rbit64(~v26)) + (v22 << 6);
      }
      *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      *(void *)(*(void *)(v4 + 48) + 8 * v13) = v19;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1C208EA0C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1C20921FC(0, &qword_1EA2C66D0, MEMORY[0x1E4FBB9A8]);
  uint64_t v3 = sub_1C214B780();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    unint64_t v6 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v7 = ~(-1 << v5);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & *(void *)(v2 + 56);
    int64_t v9 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v10 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v12 = 0;
    while (1)
    {
      if (v8)
      {
        unint64_t v14 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        unint64_t v15 = v14 | (v12 << 6);
      }
      else
      {
        int64_t v16 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v9) {
          goto LABEL_33;
        }
        unint64_t v17 = v6[v16];
        ++v12;
        if (!v17)
        {
          int64_t v12 = v16 + 1;
          if (v16 + 1 >= v9) {
            goto LABEL_33;
          }
          unint64_t v17 = v6[v12];
          if (!v17)
          {
            int64_t v12 = v16 + 2;
            if (v16 + 2 >= v9) {
              goto LABEL_33;
            }
            unint64_t v17 = v6[v12];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v9)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v27 = 1 << *(unsigned char *)(v2 + 32);
                if (v27 > 63) {
                  bzero((void *)(v2 + 56), ((unint64_t)(v27 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *unint64_t v6 = -1 << v27;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v6[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v12 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v12 >= v9) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v6[v12];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v12 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v8 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
      }
      uint64_t v19 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
      sub_1C214BB30();
      sub_1C20B7378();
      sub_1C214A690();
      swift_bridgeObjectRelease();
      uint64_t result = sub_1C214BB80();
      uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v21 = result & ~v20;
      unint64_t v22 = v21 >> 6;
      if (((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6))) != 0)
      {
        unint64_t v13 = __clz(__rbit64((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v20) >> 6;
        do
        {
          if (++v22 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v25 = v22 == v24;
          if (v22 == v24) {
            unint64_t v22 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v10 + 8 * v22);
        }
        while (v26 == -1);
        unint64_t v13 = __clz(__rbit64(~v26)) + (v22 << 6);
      }
      *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      *(void *)(*(void *)(v4 + 48) + 8 * v13) = v19;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1C208ECFC()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1C205947C();
  uint64_t v3 = sub_1C214B780();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v33 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v32 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v8 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v10 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v13 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v14 = v13 | (v10 << 6);
      }
      else
      {
        int64_t v15 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v32) {
          goto LABEL_33;
        }
        unint64_t v16 = v33[v15];
        ++v10;
        if (!v16)
        {
          int64_t v10 = v15 + 1;
          if (v15 + 1 >= v32) {
            goto LABEL_33;
          }
          unint64_t v16 = v33[v10];
          if (!v16)
          {
            int64_t v10 = v15 + 2;
            if (v15 + 2 >= v32) {
              goto LABEL_33;
            }
            unint64_t v16 = v33[v10];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v32)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v31 = 1 << *(unsigned char *)(v2 + 32);
                if (v31 > 63) {
                  bzero(v33, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v33 = -1 << v31;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v33[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v10 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_39;
                  }
                  if (v10 >= v32) {
                    goto LABEL_33;
                  }
                  unint64_t v16 = v33[v10];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v10 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v10 << 6);
      }
      uint64_t v18 = v2;
      uint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 32 * v14);
      uint64_t v20 = *v19;
      uint64_t v21 = v19[1];
      uint64_t v22 = v19[2];
      uint64_t v23 = v19[3];
      sub_1C214BB30();
      sub_1C214A690();
      sub_1C214A690();
      uint64_t result = sub_1C214BB80();
      uint64_t v24 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v25 = result & ~v24;
      unint64_t v26 = v25 >> 6;
      if (((-1 << v25) & ~*(void *)(v8 + 8 * (v25 >> 6))) != 0)
      {
        unint64_t v11 = __clz(__rbit64((-1 << v25) & ~*(void *)(v8 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v27 = 0;
        unint64_t v28 = (unint64_t)(63 - v24) >> 6;
        do
        {
          if (++v26 == v28 && (v27 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v29 = v26 == v28;
          if (v26 == v28) {
            unint64_t v26 = 0;
          }
          v27 |= v29;
          uint64_t v30 = *(void *)(v8 + 8 * v26);
        }
        while (v30 == -1);
        unint64_t v11 = __clz(__rbit64(~v30)) + (v26 << 6);
      }
      *(void *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      int64_t v12 = (void *)(*(void *)(v4 + 48) + 32 * v11);
      *int64_t v12 = v20;
      v12[1] = v21;
      void v12[2] = v22;
      v12[3] = v23;
      ++*(void *)(v4 + 16);
      uint64_t v2 = v18;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1C208F014(uint64_t a1)
{
  return sub_1C208F038(a1, (unint64_t *)&qword_1EBF0C948, (unint64_t *)&qword_1EBF0C8A8, 0x1E4F66B08, (unint64_t *)&unk_1EBF0C8B0);
}

uint64_t sub_1C208F038(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, unint64_t *a5)
{
  uint64_t v6 = v5;
  uint64_t v7 = *v5;
  sub_1C20923F8(0, a2, a3, a4, a5);
  uint64_t v8 = sub_1C214B780();
  uint64_t v9 = v8;
  if (*(void *)(v7 + 16))
  {
    uint64_t v33 = v5;
    uint64_t v10 = 1 << *(unsigned char *)(v7 + 32);
    unint64_t v11 = (void *)(v7 + 56);
    if (v10 < 64) {
      uint64_t v12 = ~(-1 << v10);
    }
    else {
      uint64_t v12 = -1;
    }
    unint64_t v13 = v12 & *(void *)(v7 + 56);
    int64_t v14 = (unint64_t)(v10 + 63) >> 6;
    uint64_t v15 = v8 + 56;
    uint64_t result = swift_retain();
    int64_t v17 = 0;
    while (1)
    {
      if (v13)
      {
        unint64_t v19 = __clz(__rbit64(v13));
        v13 &= v13 - 1;
        unint64_t v20 = v19 | (v17 << 6);
      }
      else
      {
        int64_t v21 = v17 + 1;
        if (__OFADD__(v17, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v21 >= v14) {
          goto LABEL_33;
        }
        unint64_t v22 = v11[v21];
        ++v17;
        if (!v22)
        {
          int64_t v17 = v21 + 1;
          if (v21 + 1 >= v14) {
            goto LABEL_33;
          }
          unint64_t v22 = v11[v17];
          if (!v22)
          {
            int64_t v17 = v21 + 2;
            if (v21 + 2 >= v14) {
              goto LABEL_33;
            }
            unint64_t v22 = v11[v17];
            if (!v22)
            {
              int64_t v23 = v21 + 3;
              if (v23 >= v14)
              {
LABEL_33:
                swift_release();
                uint64_t v6 = v33;
                uint64_t v32 = 1 << *(unsigned char *)(v7 + 32);
                if (v32 > 63) {
                  bzero((void *)(v7 + 56), ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v11 = -1 << v32;
                }
                *(void *)(v7 + 16) = 0;
                break;
              }
              unint64_t v22 = v11[v23];
              if (!v22)
              {
                while (1)
                {
                  int64_t v17 = v23 + 1;
                  if (__OFADD__(v23, 1)) {
                    goto LABEL_39;
                  }
                  if (v17 >= v14) {
                    goto LABEL_33;
                  }
                  unint64_t v22 = v11[v17];
                  ++v23;
                  if (v22) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v17 = v23;
            }
          }
        }
LABEL_23:
        unint64_t v13 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v17 << 6);
      }
      uint64_t v24 = *(void *)(*(void *)(v7 + 48) + 8 * v20);
      uint64_t result = sub_1C214B210();
      uint64_t v25 = -1 << *(unsigned char *)(v9 + 32);
      unint64_t v26 = result & ~v25;
      unint64_t v27 = v26 >> 6;
      if (((-1 << v26) & ~*(void *)(v15 + 8 * (v26 >> 6))) != 0)
      {
        unint64_t v18 = __clz(__rbit64((-1 << v26) & ~*(void *)(v15 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v28 = 0;
        unint64_t v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v30 = v27 == v29;
          if (v27 == v29) {
            unint64_t v27 = 0;
          }
          v28 |= v30;
          uint64_t v31 = *(void *)(v15 + 8 * v27);
        }
        while (v31 == -1);
        unint64_t v18 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(void *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      *(void *)(*(void *)(v9 + 48) + 8 * v18) = v24;
      ++*(void *)(v9 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v6 = v9;
  return result;
}

uint64_t sub_1C208F2D4(uint64_t a1)
{
  return sub_1C208F038(a1, &qword_1EA2C5F70, (unint64_t *)&qword_1EBF0C880, 0x1E4F66AC8, (unint64_t *)&unk_1EBF0C888);
}

unint64_t sub_1C208F2F8(uint64_t a1, uint64_t a2)
{
  sub_1C214BB30();
  sub_1C20B7378();
  sub_1C214A690();
  swift_bridgeObjectRelease();
  sub_1C214BB80();
  unint64_t result = sub_1C214B660();
  *(void *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(void *)(*(void *)(a2 + 48) + 8 * result) = a1;
  ++*(void *)(a2 + 16);
  return result;
}

unint64_t sub_1C208F3B8(uint64_t a1, uint64_t a2)
{
  sub_1C214B210();
  unint64_t result = sub_1C214B660();
  *(void *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(void *)(*(void *)(a2 + 48) + 8 * result) = a1;
  ++*(void *)(a2 + 16);
  return result;
}

void sub_1C208F43C(uint64_t a1, unint64_t a2, char a3)
{
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_1C208E764();
  }
  else
  {
    if (v7 > v6)
    {
      sub_1C208FB98();
      goto LABEL_14;
    }
    sub_1C20902A0();
  }
  uint64_t v8 = *v3;
  uint64_t v9 = sub_1C214B210();
  uint64_t v10 = -1 << *(unsigned char *)(v8 + 32);
  a2 = v9 & ~v10;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    sub_1C1F12718(0, &qword_1EBF0C908);
    id v11 = *(id *)(*(void *)(v8 + 48) + 8 * a2);
    char v12 = sub_1C214B220();

    if (v12)
    {
LABEL_13:
      sub_1C214BAA0();
      __break(1u);
    }
    else
    {
      uint64_t v13 = ~v10;
      while (1)
      {
        a2 = (a2 + 1) & v13;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        id v14 = *(id *)(*(void *)(v8 + 48) + 8 * a2);
        char v15 = sub_1C214B220();

        if (v15) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v16 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v16 + 48) + 8 * a2) = a1;
  uint64_t v17 = *(void *)(v16 + 16);
  BOOL v18 = __OFADD__(v17, 1);
  uint64_t v19 = v17 + 1;
  if (v18) {
    __break(1u);
  }
  else {
    *(void *)(v16 + 16) = v19;
  }
}

uint64_t sub_1C208F5C4(uint64_t result, unint64_t a2, char a3)
{
  uint64_t v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_22;
  }
  if (a3)
  {
    sub_1C208EA0C();
  }
  else
  {
    if (v7 > v6)
    {
      unint64_t result = (uint64_t)sub_1C208FD50();
LABEL_22:
      uint64_t v23 = *v3;
      *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
      *(void *)(*(void *)(v23 + 48) + 8 * a2) = v5;
      uint64_t v24 = *(void *)(v23 + 16);
      BOOL v25 = __OFADD__(v24, 1);
      uint64_t v26 = v24 + 1;
      if (!v25)
      {
        *(void *)(v23 + 16) = v26;
        return result;
      }
      __break(1u);
      goto LABEL_25;
    }
    sub_1C2090524();
  }
  uint64_t v8 = *v3;
  sub_1C214BB30();
  sub_1C20B7378();
  sub_1C214A690();
  swift_bridgeObjectRelease();
  unint64_t result = sub_1C214BB80();
  uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
  a2 = result & ~v9;
  if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
    goto LABEL_22;
  }
  type metadata accessor for MedicationsDoseLogViewModel(0);
  swift_retain();
  uint64_t v10 = sub_1C20B7378();
  uint64_t v12 = v11;
  if (v10 == sub_1C20B7378() && v12 == v13)
  {
LABEL_25:
    swift_release();
    swift_bridgeObjectRelease_n();
    goto LABEL_26;
  }
  char v15 = sub_1C214BA80();
  swift_release();
  swift_bridgeObjectRelease();
  unint64_t result = swift_bridgeObjectRelease();
  if ((v15 & 1) == 0)
  {
    uint64_t v16 = ~v9;
    do
    {
      a2 = (a2 + 1) & v16;
      if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
        goto LABEL_22;
      }
      swift_retain();
      uint64_t v17 = sub_1C20B7378();
      uint64_t v19 = v18;
      if (v17 == sub_1C20B7378() && v19 == v20) {
        goto LABEL_25;
      }
      char v22 = sub_1C214BA80();
      swift_release();
      swift_bridgeObjectRelease();
      unint64_t result = swift_bridgeObjectRelease();
    }
    while ((v22 & 1) == 0);
  }
LABEL_26:
  unint64_t result = sub_1C214BAA0();
  __break(1u);
  return result;
}

uint64_t sub_1C208F824(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, char a6)
{
  uint64_t v11 = result;
  unint64_t v12 = *(void *)(*v6 + 16);
  unint64_t v13 = *(void *)(*v6 + 24);
  if (v13 > v12 && (a6 & 1) != 0) {
    goto LABEL_22;
  }
  if (a6)
  {
    sub_1C208ECFC();
  }
  else
  {
    if (v13 > v12)
    {
      unint64_t result = (uint64_t)sub_1C208FF14();
      goto LABEL_22;
    }
    sub_1C20907E8();
  }
  uint64_t v14 = *v6;
  sub_1C214BB30();
  sub_1C214A690();
  sub_1C214A690();
  unint64_t result = sub_1C214BB80();
  uint64_t v15 = -1 << *(unsigned char *)(v14 + 32);
  a5 = result & ~v15;
  uint64_t v16 = v14 + 56;
  if ((*(void *)(v14 + 56 + ((a5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a5))
  {
    uint64_t v17 = ~v15;
    uint64_t v18 = *(void *)(v14 + 48);
    while (1)
    {
      uint64_t v19 = (void *)(v18 + 32 * a5);
      uint64_t v20 = v19[2];
      uint64_t v21 = v19[3];
      BOOL v22 = *v19 == v11 && v19[1] == a2;
      if (v22 || (unint64_t result = sub_1C214BA80(), (result & 1) != 0))
      {
        if (v20 == a3 && v21 == a4) {
          break;
        }
        unint64_t result = sub_1C214BA80();
        if (result) {
          break;
        }
      }
      a5 = (a5 + 1) & v17;
      if (((*(void *)(v16 + ((a5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a5) & 1) == 0) {
        goto LABEL_22;
      }
    }
    unint64_t result = sub_1C214BAA0();
    __break(1u);
  }
LABEL_22:
  uint64_t v24 = *v29;
  *(void *)(*v29 + 8 * (a5 >> 6) + 56) |= 1 << a5;
  BOOL v25 = (uint64_t *)(*(void *)(v24 + 48) + 32 * a5);
  *BOOL v25 = v11;
  v25[1] = a2;
  v25[2] = a3;
  uint64_t v25[3] = a4;
  uint64_t v26 = *(void *)(v24 + 16);
  BOOL v27 = __OFADD__(v26, 1);
  uint64_t v28 = v26 + 1;
  if (v27) {
    __break(1u);
  }
  else {
    *(void *)(v24 + 16) = v28;
  }
  return result;
}

void sub_1C208F9EC(uint64_t a1, unint64_t a2, char a3)
{
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_1C208F038(v6 + 1, &qword_1EA2C66E8, (unint64_t *)&qword_1EBF0C8C0, 0x1E4F66B80, (unint64_t *)&qword_1EBF0C8C8);
  }
  else
  {
    if (v7 > v6)
    {
      sub_1C20900D4();
      goto LABEL_14;
    }
    sub_1C2090AD0();
  }
  uint64_t v8 = *v3;
  uint64_t v9 = sub_1C214B210();
  uint64_t v10 = -1 << *(unsigned char *)(v8 + 32);
  a2 = v9 & ~v10;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8C0);
    id v11 = *(id *)(*(void *)(v8 + 48) + 8 * a2);
    char v12 = sub_1C214B220();

    if (v12)
    {
LABEL_13:
      sub_1C214BAA0();
      __break(1u);
    }
    else
    {
      uint64_t v13 = ~v10;
      while (1)
      {
        a2 = (a2 + 1) & v13;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        id v14 = *(id *)(*(void *)(v8 + 48) + 8 * a2);
        char v15 = sub_1C214B220();

        if (v15) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v16 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v16 + 48) + 8 * a2) = a1;
  uint64_t v17 = *(void *)(v16 + 16);
  BOOL v18 = __OFADD__(v17, 1);
  uint64_t v19 = v17 + 1;
  if (v18) {
    __break(1u);
  }
  else {
    *(void *)(v16 + 16) = v19;
  }
}

id sub_1C208FB98()
{
  uint64_t v1 = v0;
  sub_1C20923F8(0, &qword_1EA2C66E0, &qword_1EBF0C908, 0x1E4F28ED0, (unint64_t *)&qword_1EBF0C910);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C214B770();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_23:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v6 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v8 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v9 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & *(void *)(v2 + 56);
  int64_t v12 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    if (v11)
    {
      unint64_t v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v14 = v13 | (v8 << 6);
      goto LABEL_9;
    }
    int64_t v17 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v17 >= v12) {
      goto LABEL_23;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v8;
    if (!v18)
    {
      int64_t v8 = v17 + 1;
      if (v17 + 1 >= v12) {
        goto LABEL_23;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v8);
      if (!v18) {
        break;
      }
    }
LABEL_22:
    unint64_t v11 = (v18 - 1) & v18;
    unint64_t v14 = __clz(__rbit64(v18)) + (v8 << 6);
LABEL_9:
    uint64_t v15 = 8 * v14;
    uint64_t v16 = *(void **)(*(void *)(v2 + 48) + v15);
    *(void *)(*(void *)(v4 + 48) + v15) = v16;
    id result = v16;
  }
  int64_t v19 = v17 + 2;
  if (v19 >= v12) {
    goto LABEL_23;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v8 = v19;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v8 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v8 >= v12) {
      goto LABEL_23;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v8);
    ++v19;
    if (v18) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

void *sub_1C208FD50()
{
  uint64_t v1 = v0;
  sub_1C20921FC(0, &qword_1EA2C66D0, MEMORY[0x1E4FBB9A8]);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C214B770();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(void *)(*(void *)(v4 + 48) + 8 * v15) = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    id result = (void *)swift_retain();
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1C208FF14()
{
  uint64_t v1 = v0;
  sub_1C205947C();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C214B770();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13) {
      goto LABEL_28;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23)
      {
        int64_t v9 = v22 + 2;
        if (v22 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v23 = *(void *)(v6 + 8 * v9);
        if (!v23) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 32 * v15;
    unint64_t v17 = (void *)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = v17[1];
    uint64_t v19 = v17[2];
    uint64_t v20 = v17[3];
    uint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v21 = *v17;
    v21[1] = v18;
    v21[2] = v19;
    v21[3] = v20;
    swift_bridgeObjectRetain();
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 3;
  if (v24 >= v13) {
    goto LABEL_28;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_1C20900D4()
{
  uint64_t v1 = v0;
  sub_1C20923F8(0, &qword_1EA2C66E8, (unint64_t *)&qword_1EBF0C8C0, 0x1E4F66B80, (unint64_t *)&qword_1EBF0C8C8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C214B770();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_25:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v6 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v8 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v9 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & *(void *)(v2 + 56);
  int64_t v12 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    if (v11)
    {
      unint64_t v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v14 = v13 | (v8 << 6);
      goto LABEL_9;
    }
    int64_t v17 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v17 >= v12) {
      goto LABEL_25;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v8;
    if (!v18)
    {
      int64_t v8 = v17 + 1;
      if (v17 + 1 >= v12) {
        goto LABEL_25;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v8);
      if (!v18)
      {
        int64_t v8 = v17 + 2;
        if (v17 + 2 >= v12) {
          goto LABEL_25;
        }
        unint64_t v18 = *(void *)(v6 + 8 * v8);
        if (!v18) {
          break;
        }
      }
    }
LABEL_24:
    unint64_t v11 = (v18 - 1) & v18;
    unint64_t v14 = __clz(__rbit64(v18)) + (v8 << 6);
LABEL_9:
    uint64_t v15 = 8 * v14;
    uint64_t v16 = *(void **)(*(void *)(v2 + 48) + v15);
    *(void *)(*(void *)(v4 + 48) + v15) = v16;
    id result = v16;
  }
  int64_t v19 = v17 + 3;
  if (v19 >= v12) {
    goto LABEL_25;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v8 = v19;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v8 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v8 >= v12) {
      goto LABEL_25;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v8);
    ++v19;
    if (v18) {
      goto LABEL_24;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1C20902A0()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1C20923F8(0, &qword_1EA2C66E0, &qword_1EBF0C908, 0x1E4F28ED0, (unint64_t *)&qword_1EBF0C910);
  uint64_t v3 = sub_1C214B780();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_32:
    *uint64_t v1 = v4;
    return result;
  }
  BOOL v27 = v0;
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v9 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v10 = v3 + 56;
  uint64_t result = swift_retain_n();
  int64_t v12 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v12 << 6);
      goto LABEL_21;
    }
    int64_t v16 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }
    if (v16 >= v9) {
      goto LABEL_30;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v12;
    if (!v17)
    {
      int64_t v12 = v16 + 1;
      if (v16 + 1 >= v9) {
        goto LABEL_30;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v12);
      if (!v17)
      {
        int64_t v18 = v16 + 2;
        if (v18 >= v9)
        {
LABEL_30:
          uint64_t result = swift_release_n();
          uint64_t v1 = v27;
          goto LABEL_32;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v18);
        int64_t v12 = v18;
        if (!v17) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_21:
    id v19 = *(id *)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t result = sub_1C214B210();
    uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v13 = __clz(__rbit64((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_33;
        }
        BOOL v25 = v22 == v24;
        if (v22 == v24) {
          unint64_t v22 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v10 + 8 * v22);
      }
      while (v26 == -1);
      unint64_t v13 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    *(void *)(*(void *)(v4 + 48) + 8 * v13) = v19;
    ++*(void *)(v4 + 16);
  }
  while (1)
  {
    int64_t v12 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v12 >= v9) {
      goto LABEL_30;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v12);
    ++v18;
    if (v17) {
      goto LABEL_20;
    }
  }
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_1C2090524()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1C20921FC(0, &qword_1EA2C66D0, MEMORY[0x1E4FBB9A8]);
  uint64_t v3 = sub_1C214B780();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v9 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v10 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v12 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v12 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v9) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v12;
    if (!v17)
    {
      int64_t v12 = v16 + 1;
      if (v16 + 1 >= v9) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v12);
      if (!v17)
      {
        int64_t v12 = v16 + 2;
        if (v16 + 2 >= v9) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v12);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_24:
    uint64_t v19 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    sub_1C214BB30();
    swift_retain();
    sub_1C20B7378();
    sub_1C214A690();
    swift_bridgeObjectRelease();
    uint64_t result = sub_1C214BB80();
    uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v13 = __clz(__rbit64((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v25 = v22 == v24;
        if (v22 == v24) {
          unint64_t v22 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v10 + 8 * v22);
      }
      while (v26 == -1);
      unint64_t v13 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    *(void *)(*(void *)(v4 + 48) + 8 * v13) = v19;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v9)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v12 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v12 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v12 >= v9) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v12);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1C20907E8()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1C205947C();
  uint64_t v3 = sub_1C214B780();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v30 = v2 + 56;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(v2 + 56);
  int64_t v31 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v8 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v10 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v13 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v14 = v13 | (v10 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v31) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v30 + 8 * v15);
    ++v10;
    if (!v16)
    {
      int64_t v10 = v15 + 1;
      if (v15 + 1 >= v31) {
        goto LABEL_33;
      }
      unint64_t v16 = *(void *)(v30 + 8 * v10);
      if (!v16)
      {
        int64_t v10 = v15 + 2;
        if (v15 + 2 >= v31) {
          goto LABEL_33;
        }
        unint64_t v16 = *(void *)(v30 + 8 * v10);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v7 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v10 << 6);
LABEL_24:
    int64_t v18 = (uint64_t *)(*(void *)(v2 + 48) + 32 * v14);
    uint64_t v19 = *v18;
    uint64_t v20 = v18[1];
    uint64_t v21 = v18[2];
    uint64_t v22 = v18[3];
    sub_1C214BB30();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C214A690();
    sub_1C214A690();
    uint64_t result = sub_1C214BB80();
    uint64_t v23 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v24 = result & ~v23;
    unint64_t v25 = v24 >> 6;
    if (((-1 << v24) & ~*(void *)(v8 + 8 * (v24 >> 6))) != 0)
    {
      unint64_t v11 = __clz(__rbit64((-1 << v24) & ~*(void *)(v8 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v28 = v25 == v27;
        if (v25 == v27) {
          unint64_t v25 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v8 + 8 * v25);
      }
      while (v29 == -1);
      unint64_t v11 = __clz(__rbit64(~v29)) + (v25 << 6);
    }
    *(void *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    int64_t v12 = (void *)(*(void *)(v4 + 48) + 32 * v11);
    *int64_t v12 = v19;
    v12[1] = v20;
    void v12[2] = v21;
    v12[3] = v22;
    ++*(void *)(v4 + 16);
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v31)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v16 = *(void *)(v30 + 8 * v17);
  if (v16)
  {
    int64_t v10 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v10 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v10 >= v31) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v30 + 8 * v10);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1C2090AD0()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1C20923F8(0, &qword_1EA2C66E8, (unint64_t *)&qword_1EBF0C8C0, 0x1E4F66B80, (unint64_t *)&qword_1EBF0C8C8);
  uint64_t v3 = sub_1C214B780();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  unint64_t v27 = v0;
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v9 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v10 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v12 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v12 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v9) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v12;
    if (!v17)
    {
      int64_t v12 = v16 + 1;
      if (v16 + 1 >= v9) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v12);
      if (!v17)
      {
        int64_t v12 = v16 + 2;
        if (v16 + 2 >= v9) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v12);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_24:
    id v19 = *(id *)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t result = sub_1C214B210();
    uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v13 = __clz(__rbit64((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v25 = v22 == v24;
        if (v22 == v24) {
          unint64_t v22 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v10 + 8 * v22);
      }
      while (v26 == -1);
      unint64_t v13 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    *(void *)(*(void *)(v4 + 48) + 8 * v13) = v19;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v9)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v27;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v12 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v12 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v12 >= v9) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v12);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1C2090D68()
{
  uint64_t v1 = *v0;
  if ((*v0 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    swift_retain();
    char v2 = sub_1C214B710();
    swift_release();
    if (v2)
    {
      uint64_t v3 = sub_1C209100C();
LABEL_24:
      swift_bridgeObjectRelease();
      return v3;
    }
  }
  else
  {
    sub_1C214BB30();
    swift_bridgeObjectRetain();
    sub_1C20B7378();
    sub_1C214A690();
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_1C214BB80();
    uint64_t v5 = -1 << *(unsigned char *)(v1 + 32);
    unint64_t v6 = v4 & ~v5;
    if ((*(void *)(v1 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
    {
      swift_retain();
      uint64_t v7 = sub_1C20B7378();
      uint64_t v9 = v8;
      if (v7 == sub_1C20B7378() && v9 == v10)
      {
LABEL_20:
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v12 = sub_1C214BA80();
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v12 & 1) == 0)
        {
          uint64_t v13 = ~v5;
          do
          {
            unint64_t v6 = (v6 + 1) & v13;
            if (((*(void *)(v1 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
              goto LABEL_19;
            }
            swift_retain();
            uint64_t v14 = sub_1C20B7378();
            uint64_t v16 = v15;
            if (v14 == sub_1C20B7378() && v16 == v17) {
              goto LABEL_20;
            }
            char v19 = sub_1C214BA80();
            swift_release();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          while ((v19 & 1) == 0);
        }
        swift_bridgeObjectRelease();
      }
      int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v21 = *v0;
      uint64_t v23 = *v0;
      *uint64_t v0 = 0x8000000000000000;
      if (!isUniquelyReferenced_nonNull_native)
      {
        sub_1C208FD50();
        uint64_t v21 = v23;
      }
      uint64_t v3 = *(void *)(*(void *)(v21 + 48) + 8 * v6);
      sub_1C20912BC(v6);
      *uint64_t v0 = v23;
      goto LABEL_24;
    }
  }
LABEL_19:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1C209100C()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = sub_1C214B6D0();
  uint64_t v2 = swift_unknownObjectRetain();
  uint64_t v3 = sub_1C208E2E4(v2, v1);
  uint64_t v28 = v3;
  sub_1C214BB30();
  swift_retain();
  sub_1C20B7378();
  sub_1C214A690();
  swift_bridgeObjectRelease();
  uint64_t v4 = sub_1C214BB80();
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = v4 & ~v5;
  if ((*(void *)(v3 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    swift_retain();
    uint64_t v7 = sub_1C20B7378();
    uint64_t v9 = v8;
    if (v7 == sub_1C20B7378() && v9 == v10)
    {
LABEL_15:
      swift_release();
      swift_release();
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v12 = sub_1C214BA80();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v12 & 1) == 0)
      {
        uint64_t v13 = ~v5;
        while (1)
        {
          unint64_t v6 = (v6 + 1) & v13;
          if (((*(void *)(v3 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
            break;
          }
          swift_retain();
          uint64_t v14 = sub_1C20B7378();
          uint64_t v16 = v15;
          if (v14 == sub_1C20B7378() && v16 == v17) {
            goto LABEL_15;
          }
          char v19 = sub_1C214BA80();
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v19) {
            goto LABEL_14;
          }
        }
        swift_release();
        __break(1u);
        goto LABEL_25;
      }
LABEL_14:
      swift_release();
    }
    uint64_t v20 = *(void *)(*(void *)(v3 + 48) + 8 * v6);
    sub_1C20912BC(v6);
    uint64_t v21 = sub_1C20B7378();
    uint64_t v23 = v22;
    if (v21 != sub_1C20B7378() || v23 != v24)
    {
      char v26 = sub_1C214BA80();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v26)
      {
LABEL_23:
        *uint64_t v0 = v28;
        return v20;
      }
      __break(1u);
    }
    swift_bridgeObjectRelease_n();
    goto LABEL_23;
  }
LABEL_25:
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

unint64_t sub_1C20912BC(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = sub_1C214B650();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        sub_1C214BB30();
        swift_retain();
        sub_1C20B7378();
        sub_1C214A690();
        swift_bridgeObjectRelease();
        uint64_t v10 = sub_1C214BB80();
        swift_release();
        unint64_t v11 = v10 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v11 < v9) {
            goto LABEL_5;
          }
        }
        else if (v11 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v11)
        {
LABEL_11:
          uint64_t v12 = *(void *)(v3 + 48);
          uint64_t v13 = (void *)(v12 + 8 * v2);
          uint64_t v14 = (void *)(v12 + 8 * v6);
          if (v2 != v6 || (int64_t v2 = v6, v13 >= v14 + 1))
          {
            *uint64_t v13 = *v14;
            int64_t v2 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v15 = *(void *)(v3 + 16);
  BOOL v16 = __OFSUB__(v15, 1);
  uint64_t v17 = v15 - 1;
  if (v16)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v17;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

int64_t sub_1C209149C(int64_t result, int a2, char a3, uint64_t a4)
{
  if (a3) {
    goto LABEL_20;
  }
  unint64_t v4 = result;
  if (result < 0 || (uint64_t result = 1 << *(unsigned char *)(a4 + 32), result <= (uint64_t)v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  unint64_t v5 = v4 >> 6;
  uint64_t v6 = a4 + 56;
  unint64_t v7 = *(void *)(a4 + 56 + 8 * (v4 >> 6));
  if (((v7 >> v4) & 1) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
  unint64_t v8 = v7 & (-2 << (v4 & 0x3F));
  if (v8) {
    return __clz(__rbit64(v8)) | v4 & 0xFFFFFFFFFFFFFFC0;
  }
  unint64_t v9 = v5 + 1;
  unint64_t v10 = (unint64_t)(result + 63) >> 6;
  if (v5 + 1 < v10)
  {
    unint64_t v11 = *(void *)(v6 + 8 * v9);
    if (v11) {
      return __clz(__rbit64(v11)) + (v9 << 6);
    }
    unint64_t v9 = v5 + 2;
    if (v5 + 2 < v10)
    {
      unint64_t v11 = *(void *)(v6 + 8 * v9);
      if (v11) {
        return __clz(__rbit64(v11)) + (v9 << 6);
      }
      while (v10 - 3 != v5)
      {
        unint64_t v11 = *(void *)(a4 + 80 + 8 * v5++);
        if (v11)
        {
          unint64_t v9 = v5 + 2;
          return __clz(__rbit64(v11)) + (v9 << 6);
        }
      }
    }
  }
  return result;
}

void sub_1C2091580(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
}

uint64_t sub_1C2091594(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  unint64_t v5 = result;
  if ((a4 & 0xC000000000000001) == 0)
  {
    if (a3) {
      goto LABEL_13;
    }
    if (result < 0 || 1 << *(unsigned char *)(a4 + 32) <= result)
    {
      __break(1u);
    }
    else if ((*(void *)(a4 + 8 * ((unint64_t)result >> 6) + 56) >> result))
    {
      if (*(_DWORD *)(a4 + 36) == a2) {
        goto LABEL_29;
      }
      __break(1u);
LABEL_13:
      if (sub_1C214B6B0() == *(_DWORD *)(a4 + 36))
      {
        sub_1C214B6C0();
        type metadata accessor for MedicationsDoseLogViewModel(0);
        swift_unknownObjectRetain();
        swift_dynamicCast();
        swift_unknownObjectRelease();
        sub_1C214BB30();
        sub_1C20B7378();
        sub_1C214A690();
        swift_bridgeObjectRelease();
        uint64_t v8 = sub_1C214BB80();
        uint64_t v9 = -1 << *(unsigned char *)(a4 + 32);
        unint64_t v5 = v8 & ~v9;
        if ((*(void *)(a4 + 56 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
        {
          swift_retain();
          uint64_t v10 = sub_1C20B7378();
          uint64_t v12 = v11;
          if (v10 == sub_1C20B7378() && v12 == v13)
          {
LABEL_28:
            swift_release();
            swift_release();
            swift_bridgeObjectRelease_n();
          }
          else
          {
            char v15 = sub_1C214BA80();
            swift_release();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v15 & 1) == 0)
            {
              uint64_t v16 = ~v9;
              do
              {
                unint64_t v5 = (v5 + 1) & v16;
                if (((*(void *)(a4 + 56 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5) & 1) == 0) {
                  goto LABEL_34;
                }
                swift_retain();
                uint64_t v17 = sub_1C20B7378();
                uint64_t v19 = v18;
                if (v17 == sub_1C20B7378() && v19 == v20) {
                  goto LABEL_28;
                }
                char v22 = sub_1C214BA80();
                swift_release();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
              }
              while ((v22 & 1) == 0);
            }
            swift_release();
          }
LABEL_29:
          uint64_t v7 = *(void *)(*(void *)(a4 + 48) + 8 * v5);
          swift_retain();
          return v7;
        }
LABEL_34:
        uint64_t result = swift_release();
        __break(1u);
        goto LABEL_35;
      }
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }
    __break(1u);
    goto LABEL_33;
  }
  if (a3)
  {
    if (a4 < 0) {
      uint64_t v6 = a4;
    }
    else {
      uint64_t v6 = a4 & 0xFFFFFFFFFFFFFF8;
    }
    MEMORY[0x1C8753870](result, a2, v6);
    type metadata accessor for MedicationsDoseLogViewModel(0);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    uint64_t v7 = v23;
    swift_unknownObjectRelease();
    return v7;
  }
LABEL_35:
  __break(1u);
  return result;
}

void sub_1C20918BC(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
}

void sub_1C20918D0(uint64_t a1, uint64_t a2, char a3, uint64_t a4, unint64_t *a5)
{
  unint64_t v7 = a1;
  if ((a4 & 0xC000000000000001) != 0)
  {
    if (a3)
    {
      if (a4 < 0) {
        uint64_t v8 = a4;
      }
      else {
        uint64_t v8 = a4 & 0xFFFFFFFFFFFFFF8;
      }
      MEMORY[0x1C8753870](a1, a2, v8);
      sub_1C1F12718(0, a5);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      swift_unknownObjectRelease();
      return;
    }
LABEL_27:
    __break(1u);
    return;
  }
  if (a3) {
    goto LABEL_13;
  }
  if (a1 < 0 || 1 << *(unsigned char *)(a4 + 32) <= a1)
  {
    __break(1u);
    goto LABEL_24;
  }
  if (((*(void *)(a4 + 8 * ((unint64_t)a1 >> 6) + 56) >> a1) & 1) == 0)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  if (*(_DWORD *)(a4 + 36) == a2) {
    goto LABEL_20;
  }
  __break(1u);
LABEL_13:
  if (sub_1C214B6B0() != *(_DWORD *)(a4 + 36))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  sub_1C214B6C0();
  sub_1C1F12718(0, a5);
  swift_unknownObjectRetain();
  swift_dynamicCast();
  a5 = v18;
  swift_unknownObjectRelease();
  uint64_t v9 = sub_1C214B210();
  uint64_t v10 = -1 << *(unsigned char *)(a4 + 32);
  unint64_t v7 = v9 & ~v10;
  if (((*(void *)(a4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
  {
LABEL_26:

    __break(1u);
    goto LABEL_27;
  }
  id v11 = *(id *)(*(void *)(a4 + 48) + 8 * v7);
  char v12 = sub_1C214B220();

  if ((v12 & 1) == 0)
  {
    uint64_t v13 = ~v10;
    do
    {
      unint64_t v7 = (v7 + 1) & v13;
      if (((*(void *)(a4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
        goto LABEL_26;
      }
      id v14 = *(id *)(*(void *)(a4 + 48) + 8 * v7);
      char v15 = sub_1C214B220();
    }
    while ((v15 & 1) == 0);
  }

LABEL_20:
  uint64_t v16 = *(void **)(*(void *)(a4 + 48) + 8 * v7);

  id v17 = v16;
}

uint64_t sub_1C2091B44(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 56);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2) {
    unint64_t v7 = 2;
  }
  unint64_t v8 = v7 - 2;
  uint64_t v9 = (unint64_t *)(a1 + 72);
  uint64_t v2 = 64;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

uint64_t sub_1C2091BCC(unint64_t a1, unint64_t a2)
{
  unint64_t v3 = a1;
  if (a1 >> 62) {
    goto LABEL_15;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v5 = MEMORY[0x1E4FBC860];
    if (!v4) {
      return v5;
    }
    uint64_t v19 = MEMORY[0x1E4FBC860];
    uint64_t v16 = v4;
    uint64_t result = sub_1C1F7072C(0, v4 & ~(v4 >> 63), 0);
    if (v4 < 0) {
      break;
    }
    uint64_t v5 = v19;
    unint64_t v14 = v3 & 0xC000000000000001;
    type metadata accessor for MedicationDoseLogMedicationCell();
    uint64_t v7 = 0;
    unint64_t v8 = a2 + qword_1EBF0C328;
    unint64_t v15 = v3;
    while (v4 != v7)
    {
      if (v14)
      {
        uint64_t v9 = MEMORY[0x1C8753960](v7, v3);
      }
      else
      {
        uint64_t v9 = *(void *)(v3 + 8 * v7 + 32);
        swift_retain();
      }
      MEMORY[0x1C8754850](v8);
      uint64_t v10 = *(void *)(v8 + 8);
      sub_1C20921B4(&qword_1EBF0C308, (void (*)(uint64_t))type metadata accessor for MedicationDoseLogMedicationCell);
      swift_retain();
      v17[0] = sub_1C21481D0();
      v17[1] = v11;
      uint64_t v18 = 0;
      swift_unknownObjectWeakInit();
      v17[2] = v9;
      uint64_t v18 = v10;
      swift_unknownObjectWeakAssign();
      swift_release();
      swift_unknownObjectRelease();
      uint64_t v19 = v5;
      unint64_t v13 = *(void *)(v5 + 16);
      unint64_t v12 = *(void *)(v5 + 24);
      a2 = v13 + 1;
      if (v13 >= v12 >> 1)
      {
        sub_1C1F7072C(v12 > 1, v13 + 1, 1);
        uint64_t v5 = v19;
      }
      ++v7;
      *(void *)(v5 + 16) = a2;
      sub_1C1F7ABDC((uint64_t)v17, v5 + 40 * v13 + 32);
      unint64_t v3 = v15;
      uint64_t v4 = v16;
      if (v16 == v7) {
        return v5;
      }
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_1C214B930();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for MedicationsLogViewController()
{
  uint64_t result = qword_1EBF0C448;
  if (!qword_1EBF0C448) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C2091E48(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C2091EA8()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for MedicationsLogViewController(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MedicationsLogViewController);
}

uint64_t dispatch thunk of MedicationsLogViewController.__allocating_init(medicationDoseLogList:asNeededMedicationDoseLogList:healthStore:showRecordAll:provenance:context:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, char a8)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, void))(class metadata base offset for MedicationsLogViewController + v8 + 288))(a1, a2, a3, a4, a5, a6 & 1, a7, a8 & 1);
}

uint64_t sub_1C2091F8C()
{
  return type metadata accessor for MedicationsLogViewController();
}

void sub_1C2091F94(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C2091FFC()
{
  unint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *unint64_t v1 = v0;
  v1[1] = sub_1C1F405A0;
  return sub_1C2087F9C();
}

void sub_1C20920B0()
{
  *(void *)&v0[qword_1EBF0C3E8] = MEMORY[0x1E4FBC870];
  unint64_t v1 = &v0[qword_1EBF0C420];
  *(int64x2_t *)unint64_t v1 = vdupq_n_s64(0x4040000000000000uLL);
  *((_OWORD *)v1 + 1) = xmmword_1C21597C0;
  *(void *)&v0[qword_1EBF0C408] = 0x4049000000000000;
  *(void *)&v0[qword_1EBF0C3C8] = 0;
  *(void *)&v0[qword_1EBF0C3B8] = 0;
  *(void *)&v0[qword_1EBF0C418] = 0;
  *(void *)&v0[qword_1EBF0C3F0] = 0;
  *(void *)&v0[qword_1EBF0C430] = 0;
  *(void *)&v0[qword_1EBF0C428] = 0;
  *(void *)&v0[qword_1EBF0C3E0] = 0;
  *(void *)&v0[qword_1EBF0C3D8] = 0;

  sub_1C214B910();
  __break(1u);
}

uint64_t sub_1C20921B4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C20921FC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = type metadata accessor for MedicationsDoseLogViewModel(255);
    uint64_t v7 = sub_1C20921B4(&qword_1EA2C66C0, (void (*)(uint64_t))type metadata accessor for MedicationsDoseLogViewModel);
    unint64_t v8 = a3(a1, v6, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C2092298(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t objectdestroyTm_0()
{
  swift_unknownObjectRelease();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1C2092344()
{
  unint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *unint64_t v1 = v0;
  v1[1] = sub_1C1F40400;
  return sub_1C2087F9C();
}

void sub_1C20923F8(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, unint64_t *a5)
{
  if (!*a2)
  {
    sub_1C1F12718(255, a3);
    sub_1C1F4CDC8(a5, a3);
    unint64_t v8 = sub_1C214B7B0();
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C2092484@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v160 = a1;
  sub_1C1F96FA4();
  uint64_t v163 = v3;
  uint64_t v4 = MEMORY[0x1F4188790](v3);
  v140 = (BOOL *)&v133 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  uint64_t v135 = (BOOL *)&v133 - v7;
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v139 = (char *)&v133 - v9;
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  unint64_t v142 = (char *)&v133 - v11;
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  v144 = (char *)&v133 - v13;
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  uint64_t v147 = (char *)&v133 - v15;
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  uint64_t v149 = (BOOL *)&v133 - v17;
  uint64_t v18 = MEMORY[0x1F4188790](v16);
  v157 = (BOOL *)&v133 - v19;
  MEMORY[0x1F4188790](v18);
  v152 = (BOOL *)&v133 - v20;
  sub_1C1F96EF0();
  MEMORY[0x1F4188790](v21 - 8);
  uint64_t v23 = (char *)&v133 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_1C21496A0();
  BOOL v25 = *(void **)(v24 - 8);
  uint64_t v26 = MEMORY[0x1F4188790](v24);
  uint64_t v138 = (char *)&v133 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = MEMORY[0x1F4188790](v26);
  char v137 = (char *)&v133 - v29;
  uint64_t v30 = MEMORY[0x1F4188790](v28);
  uint64_t v134 = (char *)&v133 - v31;
  uint64_t v32 = MEMORY[0x1F4188790](v30);
  uint64_t v136 = (char *)&v133 - v33;
  uint64_t v34 = MEMORY[0x1F4188790](v32);
  uint64_t v141 = (char *)&v133 - v35;
  uint64_t v36 = MEMORY[0x1F4188790](v34);
  unint64_t v143 = (char *)&v133 - v37;
  uint64_t v38 = MEMORY[0x1F4188790](v36);
  uint64_t v146 = (char *)&v133 - v39;
  uint64_t v40 = MEMORY[0x1F4188790](v38);
  v148 = (char *)&v133 - v41;
  uint64_t v42 = MEMORY[0x1F4188790](v40);
  v151 = (char *)&v133 - v43;
  uint64_t v44 = MEMORY[0x1F4188790](v42);
  double v46 = (char *)&v133 - v45;
  uint64_t v47 = MEMORY[0x1F4188790](v44);
  v168 = (char *)&v133 - v48;
  MEMORY[0x1F4188790](v47);
  id v50 = (char *)&v133 - v49;
  sub_1C2093654();
  uint64_t v52 = v51;
  uint64_t v145 = *(void *)(v51 - 8);
  MEMORY[0x1F4188790](v51);
  double v54 = (char *)&v133 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v169 = 0;
  sub_1C1F85E08(&qword_1EBF0C5F0);
  v159 = a2;
  sub_1C214BC00();
  sub_1C2149630();
  sub_1C214BBF0();
  uint64_t v55 = (void (*)(char *, uint64_t))v25[1];
  v55(v50, v24);
  v164 = v54;
  uint64_t v165 = v52;
  sub_1C214A430();
  v161 = (uint64_t (*)(char *, uint64_t, uint64_t))v25[6];
  v162 = v25 + 6;
  if (v161(v23, 1, v24) != 1)
  {
    uint64_t v57 = (void (*)(void, void, void))v25[4];
    uint64_t v58 = (void (**)(char *, char *, uint64_t))(v25 + 2);
    uint64_t v154 = v23;
    uint64_t v155 = v25 + 4;
    v156 = v25 + 1;
    v158 = v55;
    v150 = v46;
    v166 = (void (*)(BOOL *, BOOL *, uint64_t))v57;
    v167 = (void (**)(char *, char *, uint64_t))(v25 + 2);
    while (1)
    {
      double v64 = v168;
      v57(v168, v23, v24);
      uint64_t v65 = *v58;
      (*v58)(v46, v64, v24);
      sub_1C2149610();
      sub_1C1F85E08(&qword_1EBF0C5E8);
      char v66 = sub_1C214A5A0();
      v55(v50, v24);
      if (v66) {
        break;
      }
      sub_1C2149600();
      char v75 = sub_1C214A5A0();
      v55(v50, v24);
      if (v75)
      {
        v55(v46, v24);
        if ((v160 & 1) == 0) {
          goto LABEL_8;
        }
        unint64_t v76 = v65;
        v65(v50, v159, v24);
        uint64_t v77 = sub_1C1F85E08(&qword_1EA2C3B98);
        uint64_t v78 = v148;
        uint64_t v153 = v77;
        sub_1C214B5C0();
        char v79 = sub_1C214A5A0();
        char v80 = ~v79;
        uint64_t v81 = *(int *)(v163 + 48);
        char v82 = v149;
        goto LABEL_23;
      }
      sub_1C2149620();
      char v83 = sub_1C214A5A0();
      v55(v50, v24);
      if (v83)
      {
        v55(v46, v24);
        if ((v160 & 2) == 0) {
          goto LABEL_8;
        }
        unint64_t v76 = v65;
        v65(v50, v159, v24);
        uint64_t v84 = sub_1C1F85E08(&qword_1EA2C3B98);
        uint64_t v78 = v146;
        uint64_t v153 = v84;
        sub_1C214B5C0();
        char v79 = sub_1C214A5A0();
        char v80 = ~v79;
        uint64_t v81 = *(int *)(v163 + 48);
        uint64_t v85 = &v173;
LABEL_22:
        char v82 = (BOOL *)*(v85 - 32);
LABEL_23:
        id v72 = &v82[v81];
        BOOL v73 = (v79 & 1) == 0;
        *char v82 = v73;
        if ((v80 & 1) == 0)
        {
          char v88 = v166;
          v166(v72, (BOOL *)v78, v24);
          uint64_t v59 = v88;
          uint64_t v23 = v154;
          goto LABEL_6;
        }
        v158(v78, v24);
        uint64_t v89 = v168;
        v76((char *)v72, v168, v24);
        v76(v50, v89, v24);
        sub_1C214B610();
        uint64_t v23 = v154;
LABEL_5:
        uint64_t v59 = v166;
        goto LABEL_6;
      }
      sub_1C2149690();
      char v86 = sub_1C214A5A0();
      v55(v50, v24);
      if (v86)
      {
        v55(v46, v24);
        if ((v160 & 4) == 0) {
          goto LABEL_8;
        }
        unint64_t v76 = v65;
        v65(v50, v159, v24);
        uint64_t v87 = sub_1C1F85E08(&qword_1EA2C3B98);
        uint64_t v78 = v143;
        uint64_t v153 = v87;
        sub_1C214B5C0();
        char v79 = sub_1C214A5A0();
        char v80 = ~v79;
        uint64_t v81 = *(int *)(v163 + 48);
        uint64_t v85 = &v172;
        goto LABEL_22;
      }
      sub_1C2149660();
      char v90 = sub_1C214A5A0();
      v55(v50, v24);
      if (v90)
      {
        v55(v46, v24);
        if ((v160 & 8) == 0) {
          goto LABEL_8;
        }
        v65(v50, v159, v24);
        uint64_t v91 = sub_1C1F85E08(&qword_1EA2C3B98);
        id v92 = v141;
        uint64_t v153 = v91;
        sub_1C214B5C0();
        char v93 = sub_1C214A5A0();
        char v94 = ~v93;
        uint64_t v95 = *(int *)(v163 + 48);
        uint64_t v96 = &v171;
        goto LABEL_32;
      }
      sub_1C21495F0();
      char v97 = sub_1C214A5A0();
      v55(v50, v24);
      if (v97)
      {
        v55(v46, v24);
        if ((v160 & 0x10) == 0) {
          goto LABEL_8;
        }
        v65(v50, v159, v24);
        uint64_t v98 = sub_1C1F85E08(&qword_1EA2C3B98);
        id v92 = v136;
        uint64_t v153 = v98;
        sub_1C214B5C0();
        char v93 = sub_1C214A5A0();
        char v94 = ~v93;
        uint64_t v95 = *(int *)(v163 + 48);
        uint64_t v96 = &v170;
LABEL_32:
        unint64_t v99 = (BOOL *)*(v96 - 32);
        uint64_t v100 = &v99[v95];
        BOOL v101 = (v93 & 1) == 0;
        *unint64_t v99 = v101;
        if (v94)
        {
          v158(v92, v24);
          uint64_t v112 = v168;
          v65((char *)v100, v168, v24);
          v65(v50, v112, v24);
          sub_1C214B610();
          uint64_t v103 = v166;
        }
        else
        {
          uint64_t v102 = v166;
          v166(v100, (BOOL *)v92, v24);
          uint64_t v103 = v102;
        }
        uint64_t v113 = *(int *)(v163 + 48);
        uint64_t v114 = v157;
        unint64_t v62 = &v157[v113];
        BOOL *v157 = v101;
        v103(&v114[v113], v100, v24);
        goto LABEL_40;
      }
      sub_1C2149650();
      char v104 = sub_1C214A5A0();
      v55(v50, v24);
      v55(v46, v24);
      if ((v104 & 1) == 0)
      {
        uint64_t v115 = v137;
        sub_1C21495E0();
        v65(v50, v159, v24);
        uint64_t v116 = sub_1C1F85E08(&qword_1EA2C3B98);
        uint64_t v117 = v138;
        uint64_t v133 = v116;
        sub_1C214B5C0();
        char v118 = sub_1C214A5A0();
        uint64_t v119 = &v140[*(int *)(v163 + 48)];
        BOOL v120 = (v118 & 1) == 0;
        BOOL *v140 = v120;
        uint64_t v153 = (uint64_t)v119;
        if (v118)
        {
          uint64_t v121 = v119;
          uint64_t v122 = (void (*)(BOOL *, uint64_t, uint64_t))v166;
          v166(v121, (BOOL *)v117, v24);
          uint64_t v123 = v122;
          uint64_t v124 = (void (*)(BOOL *, uint64_t))v158;
        }
        else
        {
          uint64_t v125 = v117;
          uint64_t v126 = (void (*)(BOOL *, uint64_t))v158;
          v158(v125, v24);
          v65((char *)v119, v115, v24);
          v65(v50, v115, v24);
          uint64_t v124 = v126;
          sub_1C214B610();
          uint64_t v123 = (void (*)(BOOL *, uint64_t, uint64_t))v166;
        }
        uint64_t v127 = *(int *)(v163 + 48);
        id v128 = v157;
        uint64_t v129 = &v157[v127];
        BOOL *v157 = v120;
        v123(&v128[v127], v153, v24);
        v124(v129, v24);
        uint64_t v55 = (void (*)(char *, uint64_t))v124;
        v124((BOOL *)v115, v24);
        goto LABEL_8;
      }
      uint64_t v55 = v158;
      if ((v160 & 0x20) != 0)
      {
        v65(v50, v159, v24);
        uint64_t v105 = sub_1C1F85E08(&qword_1EA2C3B98);
        uint64_t v106 = v134;
        uint64_t v153 = v105;
        sub_1C214B5C0();
        char v107 = sub_1C214A5A0();
        unint64_t v108 = &v135[*(int *)(v163 + 48)];
        BOOL v109 = (v107 & 1) == 0;
        BOOL *v135 = v109;
        if (v107)
        {
          unint64_t v110 = v106;
          uint64_t v111 = v166;
          v166(v108, (BOOL *)v110, v24);
        }
        else
        {
          v158(v106, v24);
          uint64_t v130 = v168;
          v65((char *)v108, v168, v24);
          v65(v50, v130, v24);
          sub_1C214B610();
          uint64_t v111 = v166;
        }
        uint64_t v131 = *(int *)(v163 + 48);
        id v132 = v157;
        unint64_t v62 = &v157[v131];
        BOOL *v157 = v109;
        v111(&v132[v131], v108, v24);
LABEL_40:
        uint64_t v23 = v154;
LABEL_7:
        uint64_t v55 = v158;
        v158((char *)v62, v24);
      }
LABEL_8:
      v55(v168, v24);
      sub_1C214A430();
      int v63 = v161(v23, 1, v24);
      uint64_t v57 = (void (*)(void, void, void))v166;
      uint64_t v58 = v167;
      if (v63 == 1) {
        return (*(uint64_t (**)(char *, uint64_t))(v145 + 8))(v164, v165);
      }
    }
    v55(v46, v24);
    if ((v160 & 0x40) == 0) {
      goto LABEL_8;
    }
    uint64_t v67 = v168;
    id v68 = v65;
    v65(v50, v159, v24);
    uint64_t v69 = sub_1C1F85E08(&qword_1EA2C3B98);
    uint64_t v70 = v151;
    uint64_t v153 = v69;
    sub_1C214B5C0();
    char v71 = sub_1C214A5A0();
    id v72 = &v152[*(int *)(v163 + 48)];
    BOOL v73 = (v71 & 1) == 0;
    BOOL *v152 = v73;
    if ((v71 & 1) == 0)
    {
      v158(v70, v24);
      v68((char *)v72, v67, v24);
      v68(v50, v67, v24);
      sub_1C214B610();
      uint64_t v23 = v154;
      double v46 = v150;
      goto LABEL_5;
    }
    id v74 = v166;
    v166(v72, (BOOL *)v70, v24);
    uint64_t v59 = v74;
    uint64_t v23 = v154;
    double v46 = v150;
LABEL_6:
    uint64_t v60 = *(int *)(v163 + 48);
    uint64_t v61 = v157;
    unint64_t v62 = &v157[v60];
    BOOL *v157 = v73;
    v59(&v61[v60], v72, v24);
    goto LABEL_7;
  }
  return (*(uint64_t (**)(char *, uint64_t))(v145 + 8))(v164, v165);
}

void sub_1C2093654()
{
  if (!qword_1EA2C66F0)
  {
    sub_1C21496A0();
    sub_1C1F85E08(&qword_1EBF0C5F0);
    unint64_t v0 = sub_1C214A440();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C66F0);
    }
  }
}

id MedicationsRecordDoseDataSource.healthStore.getter()
{
  return *(id *)(v0 + qword_1EBF0C470);
}

void MedicationsRecordDoseDataSource.context.getter(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

uint64_t MedicationsRecordDoseDataSource.__allocating_init(healthStore:listManager:medication:incompatibilityCache:didTapRecordDoseHandler:)(void *a1, uint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t a6)
{
  return MedicationsRecordDoseDataSource.init(healthStore:listManager:medication:incompatibilityCache:didTapRecordDoseHandler:)(a1, a2, a3, a4, a5, a6);
}

uint64_t MedicationsRecordDoseDataSource.init(healthStore:listManager:medication:incompatibilityCache:didTapRecordDoseHandler:)(void *a1, uint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = v6;
  uint64_t v34 = a6;
  uint64_t v38 = sub_1C2147B20();
  uint64_t v13 = *(void *)(v38 - 8);
  MEMORY[0x1F4188790](v38);
  uint64_t v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(v7 + qword_1EA2C66F8) = 0;
  *(void *)(v7 + qword_1EA2C6700) = 0;
  *(void *)(v7 + qword_1EA2C6708) = 0;
  uint64_t v16 = (uint64_t *)(v7 + qword_1EA2C6710);
  *uint64_t v16 = 0;
  v16[1] = 0;
  *(void *)(v7 + qword_1EA2C6718) = 0;
  *(void *)(v7 + qword_1EA2C6720) = 0;
  *(void *)(v7 + qword_1EBF0C470) = a1;
  *(void *)(v7 + qword_1EA2C6728) = a3;
  uint64_t v37 = a2;
  *(void *)(v7 + qword_1EA2C6730) = a2;
  *(void *)(v7 + qword_1EA2C6738) = a4;
  sub_1C2148E10();
  swift_retain();
  id v17 = a1;
  id v18 = a3;
  swift_retain();
  id v36 = a4;
  sub_1C2148E00();
  uint64_t v19 = sub_1C2148DE0();
  swift_release();
  *(void *)(v7 + qword_1EA2C6740) = v19;
  id v20 = objc_allocWithZone((Class)type metadata accessor for MedicationScheduleObserver());
  id v21 = v17;
  id v22 = sub_1C1F3F0A0(v21);

  *(void *)(v7 + qword_1EA2C6748) = v22;
  type metadata accessor for MedicationDoseEventDataSource();
  uint64_t v23 = swift_allocObject();
  id v24 = v21;
  id v35 = v18;
  swift_defaultActor_initialize();
  *(void *)(v23 + 112) = v24;
  *(void *)(v23 + 120) = v18;
  *(void *)(v7 + qword_1EA2C6750) = v23;
  uint64_t v25 = *v16;
  uint64_t v26 = v34;
  *uint64_t v16 = a5;
  v16[1] = v26;
  sub_1C1F1325C(a5);
  sub_1C1F31118(v25);
  uint64_t v27 = (void *)(v7 + qword_1EA2C6758);
  uint64_t v28 = (char *)v27 + *(int *)(type metadata accessor for DayScheduleProvider() + 24);
  uint64_t v29 = sub_1C2148F20();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v28, 1, 1, v29);
  uint64_t v30 = MEMORY[0x1E4FBC860];
  *uint64_t v27 = MEMORY[0x1E4FBC860];
  v27[1] = v30;
  swift_release();
  sub_1C209B70C(0, (unint64_t *)&qword_1EA2C2DD0, MEMORY[0x1E4F66468], MEMORY[0x1E4FBBE00]);
  sub_1C2148540();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1C214FCC0;
  sub_1C2148520();
  sub_1C2148520();
  v39[0] = 0;
  v39[1] = 0xE000000000000000;
  sub_1C214B7C0();
  swift_bridgeObjectRelease();
  strcpy((char *)v39, "MutableArray<");
  HIWORD(v39[1]) = -4864;
  sub_1C2147B10();
  sub_1C2147AD0();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v38);
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  sub_1C214A6C0();
  uint64_t v31 = sub_1C2148590();
  swift_retain();
  sub_1C2093C10();
  sub_1C2093DE0();
  sub_1C1F31118(a5);

  swift_release();
  swift_release();
  return v31;
}

uint64_t sub_1C2093C10()
{
  uint64_t v1 = *v0;
  sub_1C209B70C(0, (unint64_t *)&qword_1EA2C32D8, MEMORY[0x1E4FBCFE8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v10 - v3;
  uint64_t v5 = qword_1EA2C6708;
  if (*(uint64_t *)((char *)v0 + qword_1EA2C6708))
  {
    sub_1C1F23804(0, (unint64_t *)&qword_1EBF0C9C0);
    swift_retain();
    sub_1C214A920();
    swift_release();
  }
  uint64_t v6 = sub_1C214A8C0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v4, 1, 1, v6);
  uint64_t v7 = swift_allocObject();
  swift_weakInit();
  uint64_t v8 = (void *)swift_allocObject();
  v8[2] = 0;
  v8[3] = 0;
  v8[4] = v7;
  v8[5] = v1;
  *(uint64_t *)((char *)v0 + v5) = sub_1C1F3E744((uint64_t)v4, (uint64_t)&unk_1EA2C67B8, (uint64_t)v8);
  return swift_release();
}

uint64_t sub_1C2093DE0()
{
  uint64_t v1 = v0;
  id v20 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FBCC28];
  sub_1C209B70C(0, &qword_1EBF0C7E8, MEMORY[0x1E4FBCC28], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v20 - v3;
  uint64_t v5 = sub_1C214AE20();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C209ADC8();
  uint64_t v10 = v9;
  uint64_t v11 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v14 = objc_msgSend(self, sel_defaultCenter);
  sub_1C214AE30();

  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0CB10);
  id v21 = (id)sub_1C214AD80();
  uint64_t v15 = sub_1C214AD20();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v4, 1, 1, v15);
  sub_1C209B488((unint64_t *)&qword_1EA2C6798, MEMORY[0x1E4F27FC8]);
  sub_1C1F43FD4();
  sub_1C214A0A0();
  sub_1C209AE94((uint64_t)v4, &qword_1EBF0C7E8, v20);

  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_allocObject();
  swift_weakInit();
  sub_1C209B488(&qword_1EA2C67A0, (void (*)(uint64_t))sub_1C209ADC8);
  uint64_t v16 = sub_1C214A0F0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  *(void *)(v1 + qword_1EA2C6718) = v16;
  swift_release();
  swift_retain();
  id v17 = (void *)sub_1C21197B4();
  swift_release();
  id v21 = v17;
  swift_allocObject();
  swift_weakInit();
  sub_1C209AF4C();
  sub_1C209B488((unint64_t *)&qword_1EA2C39B8, (void (*)(uint64_t))sub_1C209AF4C);
  uint64_t v18 = sub_1C214A0F0();
  swift_release();
  swift_release();
  *(void *)(v1 + qword_1EA2C6720) = v18;
  return swift_release();
}

uint64_t sub_1C2094250()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1C2093C10();
    return swift_release();
  }
  return result;
}

uint64_t sub_1C20942A8()
{
  swift_release();
  swift_release();

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_1C1F31118(*(void *)(v0 + qword_1EA2C6710));
  sub_1C209C0F0(v0 + qword_1EA2C6758, (uint64_t (*)(void))type metadata accessor for DayScheduleProvider);
  swift_release();

  return swift_release();
}

uint64_t MedicationsRecordDoseDataSource.deinit()
{
  if (*(void *)(v0 + qword_1EA2C66F8))
  {
    sub_1C1F23804(0, (unint64_t *)&qword_1EBF0C9C0);
    swift_retain();
    sub_1C214A920();
    swift_release();
  }
  if (*(void *)(v0 + qword_1EA2C6700))
  {
    sub_1C1F23804(0, (unint64_t *)&qword_1EBF0C9C0);
    swift_retain();
    sub_1C214A920();
    swift_release();
  }
  if (*(void *)(v0 + qword_1EA2C6708))
  {
    sub_1C1F23804(0, (unint64_t *)&qword_1EBF0C9C0);
    swift_retain();
    sub_1C214A920();
    swift_release();
  }
  uint64_t v1 = sub_1C2148610();

  swift_release();
  swift_release();

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_1C1F31118(*(void *)(v1 + qword_1EA2C6710));
  sub_1C209C0F0(v1 + qword_1EA2C6758, (uint64_t (*)(void))type metadata accessor for DayScheduleProvider);
  swift_release();
  swift_release();
  return v1;
}

uint64_t MedicationsRecordDoseDataSource.__deallocating_deinit()
{
  MedicationsRecordDoseDataSource.deinit();

  return swift_deallocClassInstance();
}

uint64_t sub_1C2094638(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[25] = a4;
  v5[26] = a5;
  uint64_t v6 = sub_1C21497F0();
  v5[27] = v6;
  v5[28] = *(void *)(v6 - 8);
  v5[29] = swift_task_alloc();
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C209B70C(0, (unint64_t *)&qword_1EA2C32D8, MEMORY[0x1E4FBCFE8], MEMORY[0x1E4FBB718]);
  v5[30] = swift_task_alloc();
  v5[31] = type metadata accessor for DayScheduleProvider();
  v5[32] = swift_task_alloc();
  v5[33] = swift_task_alloc();
  sub_1C209B68C(0, &qword_1EA2C67C0, MEMORY[0x1E4FBD158]);
  v5[34] = v8;
  v5[35] = *(void *)(v8 - 8);
  v5[36] = swift_task_alloc();
  sub_1C209B68C(0, &qword_1EA2C67C8, MEMORY[0x1E4FBD148]);
  v5[37] = v9;
  v5[38] = *(void *)(v9 - 8);
  v5[39] = swift_task_alloc();
  sub_1C209B70C(0, &qword_1EA2C67D0, MEMORY[0x1E4F66BF8], v7);
  unsigned char v5[40] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C20948D4, 0, 0);
}

uint64_t sub_1C20948D4()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  v0[41] = Strong;
  if (Strong)
  {
    v0[42] = *(void *)(Strong + qword_1EA2C6740);
    swift_retain();
    uint64_t v2 = (void *)swift_task_alloc();
    v0[43] = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_1C2094A44;
    uint64_t v3 = v0[40];
    return MEMORY[0x1F411F3E8](v3);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = (uint64_t (*)(void))v0[1];
    return v4();
  }
}

uint64_t sub_1C2094A44()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 352) = v3;
  *uint64_t v3 = v2;
  v3[1] = sub_1C2094BC0;
  uint64_t v4 = *(void *)(v1 + 288);
  return sub_1C2095B6C(v4);
}

uint64_t sub_1C2094BC0()
{
  *(void *)(*(void *)v1 + 360) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1C209539C;
  }
  else {
    uint64_t v2 = sub_1C2094CD4;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C2094CD4()
{
  uint64_t v2 = v0[35];
  uint64_t v1 = v0[36];
  uint64_t v3 = v0[34];
  sub_1C214A8F0();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v0[46] = qword_1EA2C6758;
  swift_beginAccess();
  uint64_t v4 = (void *)swift_task_alloc();
  v0[47] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1C2094DF4;
  uint64_t v5 = v0[37];
  return MEMORY[0x1F4187ED8](v0 + 18, 0, 0, v5, v0 + 21);
}

uint64_t sub_1C2094DF4()
{
  swift_task_dealloc();
  if (v0) {
    uint64_t v1 = sub_1C2095778;
  }
  else {
    uint64_t v1 = sub_1C2094F04;
  }
  return MEMORY[0x1F4188298](v1, 0, 0);
}

uint64_t sub_1C2094F04()
{
  uint64_t v1 = *(void *)(v0 + 144);
  int v2 = *(unsigned __int8 *)(v0 + 152);
  if (v2 == 255)
  {
    uint64_t v3 = *(void *)(v0 + 320);
    uint64_t v5 = *(void *)(v0 + 304);
    uint64_t v4 = *(void *)(v0 + 312);
    uint64_t v6 = *(void *)(v0 + 296);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
    sub_1C209AE94(v3, &qword_1EA2C67D0, MEMORY[0x1E4F66BF8]);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
    return v7();
  }
  uint64_t v9 = *(void *)(v0 + 256);
  uint64_t v10 = *(void *)(v0 + 248);
  sub_1C209AFB4(*(void *)(v0 + 328) + *(void *)(v0 + 368), *(void *)(v0 + 264));
  uint64_t v11 = v9 + *(int *)(v10 + 24);
  uint64_t v12 = *(void *)(v0 + 320);
  id v14 = *(void **)(v0 + 256);
  uint64_t v13 = *(uint64_t **)(v0 + 264);
  uint64_t v15 = *(void *)(v0 + 328) + *(void *)(v0 + 368);
  if (v2)
  {
    uint64_t v17 = *v13;
    sub_1C209B778(v12, v11);
    *id v14 = v17;
    v14[1] = v1;
  }
  else
  {
    uint64_t v16 = v13[1];
    sub_1C209B778(v12, v11);
    *id v14 = v1;
    v14[1] = v16;
  }
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_1C209B80C((uint64_t)v14, v15);
  swift_endAccess();
  uint64_t v18 = *(void *)(v0 + 240);
  uint64_t v19 = sub_1C214A8C0();
  uint64_t v20 = *(void *)(v19 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56))(v18, 1, 1, v19);
  uint64_t v21 = swift_allocObject();
  swift_weakInit();
  sub_1C214A890();
  swift_retain();
  uint64_t v22 = sub_1C214A880();
  uint64_t v23 = (void *)swift_allocObject();
  uint64_t v24 = MEMORY[0x1E4FBCFD8];
  v23[2] = v22;
  v23[3] = v24;
  v23[4] = v21;
  swift_release();
  int v25 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19);
  uint64_t v26 = *(void *)(v0 + 240);
  if (v25 != 1)
  {
    sub_1C214A8B0();
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v26, v19);
    if (v23[2]) {
      goto LABEL_10;
    }
LABEL_12:
    uint64_t v27 = 0;
    uint64_t v29 = 0;
    goto LABEL_13;
  }
  sub_1C209AE94(*(void *)(v0 + 240), (unint64_t *)&qword_1EA2C32D8, MEMORY[0x1E4FBCFE8]);
  if (!v22) {
    goto LABEL_12;
  }
LABEL_10:
  swift_getObjectType();
  swift_unknownObjectRetain();
  uint64_t v27 = sub_1C214A840();
  uint64_t v29 = v28;
  swift_unknownObjectRelease();
LABEL_13:
  uint64_t v30 = swift_allocObject();
  *(void *)(v30 + 16) = &unk_1EA2C67E8;
  *(void *)(v30 + 24) = v23;
  sub_1C1F13DB0(0, &qword_1EA2C6800, MEMORY[0x1E4FBC848] + 8, MEMORY[0x1E4FBB718]);
  if (v29 | v27)
  {
    *(void *)(v0 + 16) = 0;
    *(void *)(v0 + 24) = 0;
    *(void *)(v0 + 32) = v27;
    *(void *)(v0 + 40) = v29;
  }
  uint64_t v31 = *(void *)(v0 + 264);
  swift_task_create();
  swift_release();
  sub_1C209C0F0(v31, (uint64_t (*)(void))type metadata accessor for DayScheduleProvider);
  uint64_t v32 = (void *)swift_task_alloc();
  *(void *)(v0 + 376) = v32;
  *uint64_t v32 = v0;
  v32[1] = sub_1C2094DF4;
  uint64_t v33 = *(void *)(v0 + 296);
  return MEMORY[0x1F4187ED8](v0 + 144, 0, 0, v33, v0 + 168);
}

uint64_t sub_1C209539C()
{
  uint64_t v24 = v0;
  sub_1C209AE94(*(void *)(v0 + 320), &qword_1EA2C67D0, MEMORY[0x1E4F66BF8]);
  *(void *)(v0 + 160) = *(void *)(v0 + 360);
  sub_1C1F23804(0, (unint64_t *)&qword_1EBF0C9C0);
  sub_1C1F12718(0, &qword_1EA2C52C0);
  uint64_t result = swift_dynamicCast();
  if (result)
  {
    int v2 = *(void **)(v0 + 192);
    sub_1C21497D0();
    id v3 = v2;
    uint64_t v4 = sub_1C21497E0();
    os_log_type_t v5 = sub_1C214ABD0();
    BOOL v6 = os_log_type_enabled(v4, v5);
    uint64_t v7 = *(void *)(v0 + 224);
    uint64_t v8 = *(void *)(v0 + 232);
    uint64_t v9 = *(void *)(v0 + 216);
    if (v6)
    {
      uint64_t v22 = *(void *)(v0 + 232);
      uint64_t v10 = swift_slowAlloc();
      uint64_t v20 = swift_slowAlloc();
      uint64_t v23 = v20;
      *(_DWORD *)uint64_t v10 = 136315394;
      uint64_t v21 = v9;
      uint64_t v11 = sub_1C214BC10();
      *(void *)(v0 + 184) = sub_1C1F6FD54(v11, v12, &v23);
      sub_1C214B530();
      swift_bridgeObjectRelease();
      *(_WORD *)(v10 + 12) = 2080;
      id v13 = v3;
      id v14 = objc_msgSend(v13, sel_description);
      uint64_t v15 = sub_1C214A5F0();
      id v16 = v3;
      unint64_t v18 = v17;

      *(void *)(v0 + 176) = sub_1C1F6FD54(v15, v18, &v23);
      sub_1C214B530();

      id v3 = v16;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C1F0B000, v4, v5, "[%s] Error fetching dose events and schedule items %s", (uint8_t *)v10, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C8754730](v20, -1, -1);
      MEMORY[0x1C8754730](v10, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v22, v21);
    }
    else
    {

      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v8, v9);
    }
    if (objc_msgSend(v3, sel_hk_isDatabaseAccessibilityError))
    {
      sub_1C2147EA0();
      sub_1C2147E90();
      swift_allocObject();
      swift_weakInit();
      swift_retain();
      sub_1C2147E80();
      swift_release();
      swift_release_n();
    }
    swift_release();

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v19 = *(uint64_t (**)(void))(v0 + 8);
    return v19();
  }
  return result;
}

uint64_t sub_1C2095778()
{
  uint64_t v25 = v0;
  uint64_t v1 = *(void *)(v0 + 320);
  (*(void (**)(void, void))(*(void *)(v0 + 304) + 8))(*(void *)(v0 + 312), *(void *)(v0 + 296));
  sub_1C209AE94(v1, &qword_1EA2C67D0, MEMORY[0x1E4F66BF8]);
  *(void *)(v0 + 160) = *(void *)(v0 + 168);
  sub_1C1F23804(0, (unint64_t *)&qword_1EBF0C9C0);
  sub_1C1F12718(0, &qword_1EA2C52C0);
  uint64_t result = swift_dynamicCast();
  if (result)
  {
    id v3 = *(void **)(v0 + 192);
    sub_1C21497D0();
    id v4 = v3;
    os_log_type_t v5 = sub_1C21497E0();
    os_log_type_t v6 = sub_1C214ABD0();
    BOOL v7 = os_log_type_enabled(v5, v6);
    uint64_t v8 = *(void *)(v0 + 224);
    uint64_t v9 = *(void *)(v0 + 232);
    uint64_t v10 = *(void *)(v0 + 216);
    if (v7)
    {
      uint64_t v23 = *(void *)(v0 + 232);
      uint64_t v11 = swift_slowAlloc();
      uint64_t v21 = swift_slowAlloc();
      uint64_t v24 = v21;
      *(_DWORD *)uint64_t v11 = 136315394;
      uint64_t v22 = v10;
      uint64_t v12 = sub_1C214BC10();
      *(void *)(v0 + 184) = sub_1C1F6FD54(v12, v13, &v24);
      sub_1C214B530();
      swift_bridgeObjectRelease();
      *(_WORD *)(v11 + 12) = 2080;
      id v14 = v4;
      id v15 = objc_msgSend(v14, sel_description);
      uint64_t v16 = sub_1C214A5F0();
      id v17 = v4;
      unint64_t v19 = v18;

      *(void *)(v0 + 176) = sub_1C1F6FD54(v16, v19, &v24);
      sub_1C214B530();

      id v4 = v17;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C1F0B000, v5, v6, "[%s] Error fetching dose events and schedule items %s", (uint8_t *)v11, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C8754730](v21, -1, -1);
      MEMORY[0x1C8754730](v11, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v23, v22);
    }
    else
    {

      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v9, v10);
    }
    if (objc_msgSend(v4, sel_hk_isDatabaseAccessibilityError))
    {
      sub_1C2147EA0();
      sub_1C2147E90();
      swift_allocObject();
      swift_weakInit();
      swift_retain();
      sub_1C2147E80();
      swift_release();
      swift_release_n();
    }
    swift_release();

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v20 = *(uint64_t (**)(void))(v0 + 8);
    return v20();
  }
  return result;
}

uint64_t sub_1C2095B6C(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  sub_1C209B68C(0, &qword_1EA2C6808, MEMORY[0x1E4FBD128]);
  v2[4] = v3;
  v2[5] = *(void *)(v3 - 8);
  v2[6] = swift_task_alloc();
  uint64_t v4 = sub_1C21475B0();
  v2[7] = v4;
  v2[8] = *(void *)(v4 - 8);
  v2[9] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C2095CA4, 0, 0);
}

uint64_t sub_1C2095CA4()
{
  uint64_t v1 = v0[3];
  if (*(void *)(v1 + qword_1EA2C6700))
  {
    sub_1C1F23804(0, (unint64_t *)&qword_1EBF0C9C0);
    swift_retain();
    sub_1C214A920();
    swift_release();
    uint64_t v1 = v0[3];
  }
  if (*(void *)(v1 + qword_1EA2C66F8))
  {
    sub_1C1F23804(0, (unint64_t *)&qword_1EBF0C9C0);
    swift_retain();
    sub_1C214A920();
    swift_release();
  }
  uint64_t v3 = v0[8];
  uint64_t v2 = v0[9];
  uint64_t v4 = v0[6];
  uint64_t v5 = v0[7];
  uint64_t v6 = v0[4];
  uint64_t v7 = v0[5];
  sub_1C2147540();
  uint64_t v8 = swift_allocObject();
  swift_weakInit();
  uint64_t v9 = swift_task_alloc();
  *(void *)(v9 + 16) = v8;
  *(void *)(v9 + 24) = v2;
  (*(void (**)(uint64_t, void, uint64_t))(v7 + 104))(v4, *MEMORY[0x1E4FBD120], v6);
  sub_1C214A990();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v5);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_1C2095EAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[5] = a1;
  v4[6] = a4;
  sub_1C214A890();
  v4[7] = sub_1C214A880();
  uint64_t v6 = sub_1C214A840();
  return MEMORY[0x1F4188298](sub_1C2095F44, v6, v5);
}

uint64_t sub_1C2095F44()
{
  swift_release();
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    sub_1C2095FF0(1);
    swift_release();
  }
  **(unsigned char **)(v0 + 40) = Strong == 0;
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1C2095FF0(char a1)
{
  uint64_t v2 = v1;
  v82[8] = *MEMORY[0x1E4F143B8];
  uint64_t v4 = sub_1C2148A70();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  char v79 = (char *)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = sub_1C2148620();
  uint64_t v76 = *(void *)(v77 - 8);
  MEMORY[0x1F4188790](v77);
  uint64_t v78 = (char *)&v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C209B70C(0, &qword_1EBF0C620, MEMORY[0x1E4FB0F28], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v9 - 8);
  char v75 = (char *)&v59 - v10;
  sub_1C209B70C(0, &qword_1EBF0C610, MEMORY[0x1E4FB0E38], v8);
  MEMORY[0x1F4188790](v11 - 8);
  unint64_t v13 = (char *)&v59 - v12;
  uint64_t v70 = sub_1C2149910();
  uint64_t v69 = *(void *)(v70 - 8);
  MEMORY[0x1F4188790](v70);
  char v71 = (char *)&v59 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = sub_1C21498C0();
  uint64_t v73 = *(void *)(v74 - 8);
  MEMORY[0x1F4188790](v74);
  id v72 = (char *)&v59 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1C21487B0();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  unint64_t v19 = (char *)&v59 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = sub_1C2147D30();
  uint64_t v20 = *(void *)(v68 - 8);
  MEMORY[0x1F4188790](v68);
  uint64_t v22 = (char *)&v59 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = type metadata accessor for DayScheduleProvider();
  MEMORY[0x1F4188790](v23 - 8);
  if (a1)
  {
    uint64_t v61 = v13;
    uint64_t v63 = v5;
    uint64_t v64 = v4;
    uint64_t v65 = v19;
    uint64_t v66 = v17;
    uint64_t v67 = v16;
    uint64_t v25 = v2 + qword_1EA2C6758;
    uint64_t v26 = (char *)&v59 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
    swift_beginAccess();
    uint64_t v62 = v25;
    sub_1C209AFB4(v25, (uint64_t)v26);
    sub_1C2147D20();
    unint64_t v27 = swift_bridgeObjectRetain();
    uint64_t v28 = sub_1C209D304(v27);
    swift_bridgeObjectRelease();
    unint64_t v29 = swift_bridgeObjectRetain();
    unint64_t v30 = sub_1C209D180(v29);
    uint64_t v31 = sub_1C209D6FC(v30);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v32 = sub_1C209E170(v22);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v33 = swift_bridgeObjectRetain();
    uint64_t v34 = sub_1C20A26C8(v33, v31, v32, v28);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v35 = sub_1C209D904(v28);
    swift_bridgeObjectRelease();
    v82[0] = v35;
    sub_1C1F7D9C4(v34);
    uint64_t v36 = v82[0];
    (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v68);
    sub_1C209C0F0((uint64_t)v26, (uint64_t (*)(void))type metadata accessor for DayScheduleProvider);
    swift_retain();
    uint64_t v68 = sub_1C209B018(v36);
    swift_release();
    swift_bridgeObjectRelease();
    v82[3] = sub_1C2149BE0();
    v82[4] = MEMORY[0x1E4FB0F88];
    __swift_allocate_boxed_opaque_existential_1(v82);
    sub_1C2149BD0();
    if (qword_1EBF0CA00 != -1) {
      swift_once();
    }
    id v37 = (id)qword_1EBF0CA18;
    swift_bridgeObjectRetain();
    sub_1C2147730();

    swift_bridgeObjectRelease();
    sub_1C2149B90();
    uint64_t v60 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
    sub_1C209B70C(0, (unint64_t *)&unk_1EBF0C990, MEMORY[0x1E4FB0E68], MEMORY[0x1E4FBBE00]);
    sub_1C2149930();
    uint64_t v38 = swift_allocObject();
    long long v59 = xmmword_1C214FCD0;
    *(_OWORD *)(v38 + 16) = xmmword_1C214FCD0;
    sub_1C1F12718(0, &qword_1EA2C3198);
    _sSo7UIImageC19HealthMedicationsUIE26collectionViewCellPlusSignABvgZ_0();
    uint64_t v39 = (void *)sub_1C214B250();
    sub_1C1F12718(0, &qword_1EBF0C928);
    id v40 = v39;
    uint64_t v41 = (void *)sub_1C214B410();
    objc_msgSend(v41, sel_setUserInteractionEnabled_, 0);
    sub_1C1FBE24C();
    uint64_t v43 = v71;
    uint64_t v44 = (uint64_t (**)())&v71[*(int *)(v42 + 48)];
    uint64_t v45 = *MEMORY[0x1E4FB0E18];
    uint64_t v46 = sub_1C2149860();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v46 - 8) + 104))(v43, v45, v46);
    *uint64_t v44 = sub_1C1F52D30;
    v44[1] = 0;
    (*(void (**)(char *, void, uint64_t))(v69 + 104))(v43, *MEMORY[0x1E4FB0E60], v70);
    uint64_t v47 = sub_1C2149870();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 56))(v61, 1, 1, v47);
    id v48 = v41;
    uint64_t v49 = v72;
    sub_1C21498B0();

    sub_1C2149810();
    (*(void (**)(char *, uint64_t))(v73 + 8))(v49, v74);
    swift_allocObject();
    swift_weakInit();
    uint64_t v50 = sub_1C21499D0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 56))(v75, 1, 1, v50);
    uint64_t v80 = sub_1C214A5F0();
    uint64_t v81 = v51;
    swift_bridgeObjectRetain();
    sub_1C214A6C0();
    swift_retain();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, void, uint64_t))(v76 + 104))(v78, *MEMORY[0x1E4F66480], v77);
    (*(void (**)(char *, void, uint64_t))(v63 + 104))(v79, *MEMORY[0x1E4F66678], v64);
    uint64_t v52 = v65;
    sub_1C21487A0();
    swift_release();
    sub_1C1F5FE64(0, (unint64_t *)&qword_1EBF0C958, (unint64_t *)&qword_1EBF0C2F0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = v59;
    uint64_t v54 = v67;
    *(void *)(inited + 56) = v67;
    *(void *)(inited + 64) = sub_1C209B488((unint64_t *)&qword_1EA2C2E68, MEMORY[0x1E4F66510]);
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(inited + 32));
    uint64_t v56 = v66;
    (*(void (**)(uint64_t *, char *, uint64_t))(v66 + 16))(boxed_opaque_existential_1, v52, v54);
    v82[0] = v68;
    sub_1C1F7D1D0(inited);
    sub_1C209AFB4(v62, (uint64_t)v26);
    uint64_t v57 = DayScheduleProvider.makeHistoryItems(ungrouped:)(1);
    sub_1C209C0F0((uint64_t)v26, (uint64_t (*)(void))type metadata accessor for DayScheduleProvider);
    sub_1C20F2914(v57);
    swift_bridgeObjectRelease();
    sub_1C209B70C(0, (unint64_t *)&qword_1EA2C2DD0, MEMORY[0x1E4F66468], v60);
    sub_1C2148540();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1C214FCC0;
    sub_1C2148520();
    sub_1C2148520();
    sub_1C21485B0();
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v56 + 8))(v52, v54);
  }
  else
  {
    return sub_1C21485B0();
  }
}

uint64_t sub_1C2096E30()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1C2093C10();
    return swift_release();
  }
  return result;
}

uint64_t sub_1C2096E88(void *a1)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1C2096EE8(a1);
    return swift_release();
  }
  return result;
}

void sub_1C2096EE8(void *a1)
{
  uint64_t v2 = v1;
  id v25 = a1;
  uint64_t v3 = sub_1C2147AC0();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v25 - v8;
  sub_1C2147A70();
  uint64_t v26 = *(void **)(v1 + qword_1EA2C6728);
  uint64_t v10 = v26;
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8C0);
  uint64_t v11 = sub_1C2149490();
  uint64_t v13 = v12;
  sub_1C1F13DB0(0, (unint64_t *)&qword_1EBF0CA10, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1C214E170;
  id v15 = v10;
  sub_1C2147A70();
  type metadata accessor for MedicationsDoseLogViewModel(0);
  swift_allocObject();
  *(void *)(v14 + 32) = MedicationsDoseLogViewModel.init(medication:doseEvent:scheduleItem:logDate:dosage:index:)(v15, 0, 0, v7, 0, 1.0);
  uint64_t v26 = (void *)v14;
  sub_1C214A7A0();
  uint64_t v16 = v26;
  type metadata accessor for MedicationDoseLogListViewModel(0);
  uint64_t v17 = swift_allocObject();
  (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))(v17 + OBJC_IVAR____TtC19HealthMedicationsUI30MedicationDoseLogListViewModel_date, v9, v3);
  uint64_t v18 = (uint64_t *)(v17 + OBJC_IVAR____TtC19HealthMedicationsUI30MedicationDoseLogListViewModel_title);
  *uint64_t v18 = v11;
  v18[1] = v13;
  *(void *)(v17 + 16) = v16;
  unint64_t v19 = *(void **)(v2 + qword_1EBF0C470);
  id v20 = objc_allocWithZone((Class)type metadata accessor for MedicationsLogViewController());
  swift_retain();
  uint64_t v21 = (void *)MedicationsLogViewController.init(medicationDoseLogList:asNeededMedicationDoseLogList:healthStore:showRecordAll:provenance:context:)(v17, 0, v19, 0, 3, 0, 2, 0);
  id v22 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F67B78]), sel_initWithRootViewController_, v21);
  objc_msgSend(v22, sel_setModalPresentationStyle_, 2);
  objc_msgSend(v22, sel_setModalInPresentation_, 1);
  objc_msgSend(v25, sel_presentViewController_animated_completion_, v22, 1, 0);

  uint64_t v23 = *(void (**)(uint64_t))(v2 + qword_1EA2C6710);
  if (v23)
  {
    uint64_t v24 = swift_retain();
    v23(v24);
    swift_release();
    sub_1C1F31118((uint64_t)v23);
  }
  else
  {

    swift_release();
  }
}

uint64_t sub_1C2097218(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    v10[0] = a3;
    v10[1] = a4;
    char v11 = a5 & 1;
    sub_1C20972A8((uint64_t)v10, a1);
    return swift_release();
  }
  return result;
}

void sub_1C20972A8(uint64_t a1, void *a2)
{
  id v26 = a2;
  uint64_t v4 = sub_1C2147AC0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  LOBYTE(a1) = *(unsigned char *)(a1 + 16);
  sub_1C2147A70();
  uint64_t v27 = *(void *)(v2 + qword_1EA2C6728);
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8C0);
  uint64_t v10 = sub_1C2149490();
  uint64_t v12 = v11;
  sub_1C1F13DB0(0, (unint64_t *)&qword_1EBF0CA10, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1C214E170;
  uint64_t v27 = v9;
  uint64_t v28 = v8;
  char v29 = a1;
  *(void *)(v13 + 32) = LoggableDose.makeLoggingViewModel(index:)(0);
  uint64_t v27 = v13;
  sub_1C214A7A0();
  uint64_t v14 = v27;
  type metadata accessor for MedicationDoseLogListViewModel(0);
  uint64_t v15 = swift_allocObject();
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v15 + OBJC_IVAR____TtC19HealthMedicationsUI30MedicationDoseLogListViewModel_date, v7, v4);
  uint64_t v16 = (uint64_t *)(v15 + OBJC_IVAR____TtC19HealthMedicationsUI30MedicationDoseLogListViewModel_title);
  *uint64_t v16 = v10;
  v16[1] = v12;
  *(void *)(v15 + 16) = v14;
  uint64_t v17 = v25;
  uint64_t v18 = *(void **)(v25 + qword_1EBF0C470);
  id v19 = objc_allocWithZone((Class)type metadata accessor for MedicationsLogViewController());
  swift_retain();
  id v20 = (void *)MedicationsLogViewController.init(medicationDoseLogList:asNeededMedicationDoseLogList:healthStore:showRecordAll:provenance:context:)(v15, 0, v18, 0, 3, 0, 1, 0);
  id v21 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F67B78]), sel_initWithRootViewController_, v20);
  objc_msgSend(v21, sel_setModalPresentationStyle_, 2);
  objc_msgSend(v21, sel_setModalInPresentation_, 1);
  objc_msgSend(v26, sel_presentViewController_animated_completion_, v21, 1, 0);

  id v22 = *(void (**)(uint64_t))(v17 + qword_1EA2C6710);
  if (v22)
  {
    uint64_t v23 = swift_retain();
    v22(v23);
    swift_release();
    sub_1C1F31118((uint64_t)v22);
  }
  else
  {

    swift_release();
  }
}

uint64_t sub_1C2097588(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v51 = a3;
  sub_1C209B68C(0, &qword_1EA2C6810, MEMORY[0x1E4FBD130]);
  uint64_t v5 = v4;
  uint64_t v46 = *(void *)(v4 - 8);
  uint64_t v47 = *(void *)(v46 + 64);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v41 - v6;
  uint64_t v48 = sub_1C21475B0();
  uint64_t v8 = *(void *)(v48 - 8);
  MEMORY[0x1F4188790](v48);
  uint64_t v45 = v9;
  uint64_t v50 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C209B70C(0, (unint64_t *)&qword_1EA2C32D8, MEMORY[0x1E4FBCFE8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v41 - v11;
  swift_allocObject();
  swift_beginAccess();
  swift_weakLoadStrong();
  swift_weakInit();
  swift_release();
  uint64_t v44 = v5;
  uint64_t v49 = a1;
  sub_1C214A940();
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  uint64_t v52 = v12;
  if (Strong)
  {
    uint64_t v43 = Strong;
    uint64_t v14 = sub_1C214A8C0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v12, 1, 1, v14);
    uint64_t v42 = swift_allocObject();
    swift_beginAccess();
    swift_weakLoadStrong();
    swift_weakInit();
    swift_release();
    uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
    uint64_t v16 = v50;
    uint64_t v17 = v8;
    uint64_t v18 = v48;
    v15(v50, v51, v48);
    uint64_t v19 = v46;
    uint64_t v20 = v44;
    (*(void (**)(char *, uint64_t, uint64_t))(v46 + 16))(v7, v49, v44);
    unint64_t v21 = (*(unsigned __int8 *)(v17 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
    id v22 = v7;
    unint64_t v23 = (v45 + *(unsigned __int8 *)(v19 + 80) + v21) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
    uint64_t v24 = (char *)swift_allocObject();
    *((void *)v24 + 2) = 0;
    *((void *)v24 + 3) = 0;
    *((void *)v24 + 4) = v42;
    uint64_t v25 = v18;
    uint64_t v8 = v17;
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(&v24[v21], v16, v25);
    id v26 = &v24[v23];
    uint64_t v7 = v22;
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v26, v22, v20);
    uint64_t v27 = sub_1C1F3E744((uint64_t)v52, (uint64_t)&unk_1EA2C6820, (uint64_t)v24);
    *(void *)(v43 + qword_1EA2C6700) = v27;
    swift_release();
    swift_release();
  }
  uint64_t v28 = v50;
  uint64_t v29 = v51;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v31 = result;
    uint64_t v32 = sub_1C214A8C0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v52, 1, 1, v32);
    uint64_t v43 = swift_allocObject();
    swift_beginAccess();
    swift_weakLoadStrong();
    swift_weakInit();
    swift_release();
    uint64_t v33 = v29;
    uint64_t v34 = v48;
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v28, v33, v48);
    uint64_t v35 = v46;
    uint64_t v36 = v44;
    (*(void (**)(char *, uint64_t, uint64_t))(v46 + 16))(v7, v49, v44);
    unint64_t v37 = (*(unsigned __int8 *)(v8 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    uint64_t v38 = v7;
    unint64_t v39 = (v45 + *(unsigned __int8 *)(v35 + 80) + v37) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80);
    id v40 = (char *)swift_allocObject();
    *((void *)v40 + 2) = 0;
    *((void *)v40 + 3) = 0;
    *((void *)v40 + 4) = v43;
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(&v40[v37], v28, v34);
    (*(void (**)(char *, char *, uint64_t))(v35 + 32))(&v40[v39], v38, v36);
    *(void *)(v31 + qword_1EA2C66F8) = sub_1C1F3E744((uint64_t)v52, (uint64_t)&unk_1EA2C6830, (uint64_t)v40);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1C2097BC4()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    if (*(void *)(Strong + qword_1EA2C6700))
    {
      swift_retain();
      swift_release();
      sub_1C1F23804(0, (unint64_t *)&qword_1EBF0C9C0);
      sub_1C214A920();
    }
    swift_release();
  }
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    if (*(void *)(result + qword_1EA2C66F8))
    {
      swift_retain();
      swift_release();
      sub_1C1F23804(0, (unint64_t *)&qword_1EBF0C9C0);
      sub_1C214A920();
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_1C2097D04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[13] = a5;
  v6[14] = a6;
  v6[12] = a4;
  sub_1C209B68C(0, &qword_1EA2C6838, MEMORY[0x1E4FBD110]);
  v6[15] = v7;
  v6[16] = *(void *)(v7 - 8);
  v6[17] = swift_task_alloc();
  sub_1C209BFE8();
  v6[18] = swift_task_alloc();
  sub_1C209BEF4(0, &qword_1EA2C6868, &qword_1EA2C6290, 0x1E4F2B420, MEMORY[0x1E4F29578]);
  v6[19] = v8;
  v6[20] = *(void *)(v8 - 8);
  v6[21] = swift_task_alloc();
  sub_1C209BEF4(0, &qword_1EA2C6870, &qword_1EA2C6290, 0x1E4F2B420, MEMORY[0x1E4F29568]);
  v6[22] = v9;
  v6[23] = *(void *)(v9 - 8);
  v6[24] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C2097F20, 0, 0);
}

uint64_t sub_1C2097F20()
{
  if ((sub_1C214A930() & 1) == 0)
  {
    swift_beginAccess();
    uint64_t Strong = swift_weakLoadStrong();
    if (Strong)
    {
      v0[25] = *(void *)(Strong + qword_1EA2C6750);
      swift_retain();
      swift_release();
      swift_beginAccess();
      uint64_t v2 = swift_weakLoadStrong();
      if (v2)
      {
        uint64_t v3 = *(void **)(v2 + qword_1EA2C6728);
        v0[26] = v3;
        id v4 = v3;
        swift_release();
        uint64_t v5 = (void *)swift_task_alloc();
        v0[27] = v5;
        *uint64_t v5 = v0;
        v5[1] = sub_1C20980C8;
        uint64_t v6 = v0[21];
        uint64_t v7 = v0[13];
        return sub_1C206AB38(v6, v7);
      }
      swift_release();
    }
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_1C20980C8()
{
  *(void *)(*(void *)v1 + 224) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1C2098AA8;
  }
  else {
    uint64_t v2 = sub_1C20981DC;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C20981DC()
{
  uint64_t v2 = v0[20];
  uint64_t v1 = v0[21];
  uint64_t v3 = v0[19];
  sub_1C214A4D0();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  unint64_t v4 = sub_1C209C06C();
  uint64_t v5 = (void *)swift_task_alloc();
  v0[29] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_1C20982BC;
  uint64_t v6 = v0[22];
  uint64_t v7 = v0[18];
  return MEMORY[0x1F4187C78](v7, v6, v4);
}

uint64_t sub_1C20982BC()
{
  *(void *)(*(void *)v1 + 240) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1C209856C;
  }
  else {
    uint64_t v2 = sub_1C20983D0;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C20983D0()
{
  uint64_t v1 = v0[18];
  sub_1C209BEF4(0, &qword_1EA2C6860, &qword_1EA2C6290, 0x1E4F2B420, MEMORY[0x1E4F29560]);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(v1, 1, v2) == 1)
  {
    uint64_t v3 = (void *)v0[26];
    (*(void (**)(void, void))(v0[23] + 8))(v0[24], v0[22]);
    swift_release();

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = (uint64_t (*)(void))v0[1];
    return v4();
  }
  else
  {
    uint64_t v6 = (void *)swift_task_alloc();
    v0[31] = v6;
    *uint64_t v6 = v0;
    v6[1] = sub_1C20986BC;
    uint64_t v7 = v0[13];
    return sub_1C206A008(v7);
  }
}

uint64_t sub_1C209856C()
{
  *(void *)(v0 + 80) = *(void *)(v0 + 240);
  sub_1C1F23804(0, (unint64_t *)&qword_1EBF0C9C0);
  swift_willThrowTypedImpl();
  return MEMORY[0x1F4188298](sub_1C2098604, 0, 0);
}

uint64_t sub_1C2098604()
{
  uint64_t v1 = (void *)v0[26];
  uint64_t v3 = v0[23];
  uint64_t v2 = v0[24];
  uint64_t v4 = v0[22];
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_1C20986BC(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 256) = a1;
  *(void *)(v3 + 264) = v1;
  swift_task_dealloc();
  if (v1) {
    uint64_t v4 = sub_1C2098B44;
  }
  else {
    uint64_t v4 = sub_1C20987D0;
  }
  return MEMORY[0x1F4188298](v4, 0, 0);
}

uint64_t sub_1C20987D0()
{
  unint64_t v1 = *(void *)(v0 + 256);
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1C214B930();
    swift_bridgeObjectRelease();
    if (v2) {
      goto LABEL_3;
    }
LABEL_12:
    swift_bridgeObjectRelease();
    uint64_t v15 = MEMORY[0x1E4FBC860];
    goto LABEL_13;
  }
  uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v2) {
    goto LABEL_12;
  }
LABEL_3:
  *(void *)(v0 + 88) = MEMORY[0x1E4FBC860];
  uint64_t v3 = sub_1C214B850();
  if (v2 < 0)
  {
    __break(1u);
    return MEMORY[0x1F4187C78](v3, v4, v5);
  }
  if ((v1 & 0xC000000000000001) != 0)
  {
    uint64_t v6 = 0;
    do
    {
      uint64_t v7 = *(void **)(v0 + 208);
      uint64_t v8 = v6 + 1;
      MEMORY[0x1C8753960]();
      sub_1C2148FB0();
      swift_allocObject();
      id v9 = v7;
      sub_1C2148FC0();
      sub_1C214B820();
      sub_1C214B860();
      sub_1C214B870();
      sub_1C214B830();
      uint64_t v6 = v8;
    }
    while (v2 != v8);
  }
  else
  {
    uint64_t v10 = (void **)(*(void *)(v0 + 256) + 32);
    sub_1C2148FB0();
    do
    {
      uint64_t v11 = *(void **)(v0 + 208);
      uint64_t v12 = *v10++;
      swift_allocObject();
      id v13 = v11;
      id v14 = v12;
      sub_1C2148FC0();
      sub_1C214B820();
      sub_1C214B860();
      sub_1C214B870();
      sub_1C214B830();
      --v2;
    }
    while (v2);
  }
  uint64_t v15 = *(void *)(v0 + 88);
  swift_bridgeObjectRelease();
LABEL_13:
  uint64_t v17 = *(void *)(v0 + 136);
  uint64_t v16 = *(void *)(v0 + 144);
  uint64_t v18 = *(void *)(v0 + 120);
  uint64_t v19 = *(void *)(v0 + 128);
  *(void *)(v0 + 64) = v15;
  *(unsigned char *)(v0 + 72) = 0;
  sub_1C209B68C(0, &qword_1EA2C6810, MEMORY[0x1E4FBD130]);
  sub_1C214A950();
  (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v17, v18);
  sub_1C209C0F0(v16, (uint64_t (*)(void))sub_1C209BFE8);
  unint64_t v20 = sub_1C209C06C();
  unint64_t v21 = (void *)swift_task_alloc();
  *(void *)(v0 + 232) = v21;
  *unint64_t v21 = v0;
  v21[1] = sub_1C20982BC;
  uint64_t v4 = *(void *)(v0 + 176);
  uint64_t v3 = *(void *)(v0 + 144);
  unint64_t v5 = v20;
  return MEMORY[0x1F4187C78](v3, v4, v5);
}

uint64_t sub_1C2098AA8()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C2098B44()
{
  unint64_t v1 = (void *)v0[26];
  uint64_t v3 = v0[23];
  uint64_t v2 = v0[24];
  uint64_t v4 = v0[22];
  uint64_t v5 = v0[18];
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  sub_1C209C0F0(v5, (uint64_t (*)(void))sub_1C209BFE8);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_1C2098C24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[15] = a5;
  v6[16] = a6;
  v6[14] = a4;
  sub_1C209B68C(0, &qword_1EA2C6838, MEMORY[0x1E4FBD110]);
  v6[17] = v7;
  v6[18] = *(void *)(v7 - 8);
  v6[19] = swift_task_alloc();
  sub_1C209BF5C(0, &qword_1EA2C6840, MEMORY[0x1E4FBD060]);
  v6[20] = v8;
  v6[21] = *(void *)(v8 - 8);
  v6[22] = swift_task_alloc();
  sub_1C209BF5C(0, &qword_1EA2C6848, MEMORY[0x1E4FBD050]);
  v6[23] = v9;
  v6[24] = *(void *)(v9 - 8);
  v6[25] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C2098DF4, 0, 0);
}

uint64_t sub_1C2098DF4()
{
  if ((sub_1C214A930() & 1) != 0 || (swift_beginAccess(), (uint64_t Strong = swift_weakLoadStrong()) == 0))
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v7 = (uint64_t (*)(void))v0[1];
    return v7();
  }
  else
  {
    uint64_t v2 = *(void **)(Strong + qword_1EA2C6748);
    v0[26] = v2;
    v2;
    swift_release();
    uint64_t v3 = (void *)swift_task_alloc();
    v0[27] = v3;
    *uint64_t v3 = v0;
    v3[1] = sub_1C2098F38;
    uint64_t v4 = v0[22];
    uint64_t v5 = v0[15];
    return sub_1C1F3D764(v4, v5);
  }
}

uint64_t sub_1C2098F38()
{
  *(void *)(*(void *)v1 + 224) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1C20996B0;
  }
  else {
    uint64_t v2 = sub_1C209904C;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C209904C()
{
  uint64_t v2 = v0[21];
  uint64_t v1 = v0[22];
  uint64_t v3 = v0[20];
  sub_1C214A8F0();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_beginAccess();
  v0[29] = v0[28];
  uint64_t v4 = (void *)swift_task_alloc();
  v0[30] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1C209915C;
  uint64_t v5 = v0[23];
  return MEMORY[0x1F4187D58](v0 + 13, 0, 0, v5);
}

uint64_t sub_1C209915C()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1C2099258, 0, 0);
}

uint64_t sub_1C2099258()
{
  unint64_t v1 = v0[13];
  if (!v1)
  {
    id v22 = (void *)v0[26];
    (*(void (**)(void, void))(v0[24] + 8))(v0[25], v0[23]);
LABEL_22:

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v25 = (uint64_t (*)(void))v0[1];
    return v25();
  }
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    id v22 = (void *)v0[26];
    (*(void (**)(void, void))(v0[24] + 8))(v0[25], v0[23]);
    swift_bridgeObjectRelease();
    goto LABEL_22;
  }
  uint64_t v3 = Strong;
  uint64_t v4 = *(void **)(Strong + qword_1EA2C6728);
  uint64_t v5 = v0 + 11;
  v0[11] = MEMORY[0x1E4FBC860];
  uint64_t v35 = v4;
  if (v1 >> 62)
  {
    id v27 = v4;
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_1C214B930();
    uint64_t v6 = v8;
    uint64_t v34 = v0 + 13;
    if (v8) {
      goto LABEL_5;
    }
LABEL_26:
    swift_bridgeObjectRelease();
    uint64_t v24 = v0;
    uint64_t v13 = v0[29];
    uint64_t v23 = MEMORY[0x1E4FBC860];
    goto LABEL_27;
  }
  uint64_t v6 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  id v7 = v4;
  uint64_t v8 = swift_bridgeObjectRetain();
  uint64_t v34 = v0 + 13;
  if (!v6) {
    goto LABEL_26;
  }
LABEL_5:
  if (v6 < 1)
  {
    __break(1u);
    return MEMORY[0x1F4187D58](v8, v9, v10, v11);
  }
  uint64_t v32 = v3;
  uint64_t v33 = v0;
  uint64_t v12 = 0;
  uint64_t v13 = v0[29];
  do
  {
    if ((v1 & 0xC000000000000001) != 0) {
      id v14 = (id)MEMORY[0x1C8753960](v12, v1);
    }
    else {
      id v14 = *(id *)(v1 + 8 * v12 + 32);
    }
    uint64_t v15 = v14;
    id v16 = objc_msgSend(v14, sel_doses, v32, v33);
    sub_1C1F12718(0, (unint64_t *)&qword_1EA2C6850);
    unint64_t v17 = sub_1C214A780();

    id v18 = v35;
    unint64_t v19 = sub_1C209AA0C(v17, v18);
    swift_bridgeObjectRelease();

    if (v19 >> 62)
    {
      if (!sub_1C214B930())
      {
LABEL_7:

        swift_bridgeObjectRelease();
        goto LABEL_8;
      }
    }
    else if (!*(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_7;
    }
    id v20 = v18;
    id v21 = v15;
    sub_1C209B220(v19, v21, v20);
    swift_bridgeObjectRelease();

    sub_1C2149080();
    swift_allocObject();
    sub_1C2149090();

    MEMORY[0x1C87528E0]();
    if (*(void *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C214A7D0();
    }
    sub_1C214A820();
    sub_1C214A7A0();
LABEL_8:
    ++v12;
  }
  while (v6 != v12);
  swift_bridgeObjectRelease();
  uint64_t v23 = *v5;
  uint64_t v24 = v33;
LABEL_27:
  uint64_t v29 = v24[18];
  uint64_t v28 = v24[19];
  uint64_t v30 = v24[17];
  swift_bridgeObjectRelease();
  v24[8] = v23;
  *((unsigned char *)v24 + 72) = 1;
  sub_1C209B68C(0, &qword_1EA2C6810, MEMORY[0x1E4FBD130]);
  sub_1C214A950();
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v28, v30);
  v24[29] = v13;
  uint64_t v31 = (void *)swift_task_alloc();
  v24[30] = v31;
  *uint64_t v31 = v24;
  v31[1] = sub_1C209915C;
  uint64_t v11 = v24[23];
  uint64_t v8 = (uint64_t)v34;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  return MEMORY[0x1F4187D58](v8, v9, v10, v11);
}

uint64_t sub_1C20996B0()
{
  unint64_t v1 = (void *)v0[26];
  v0[10] = v0[28];
  sub_1C209B68C(0, &qword_1EA2C6810, MEMORY[0x1E4FBD130]);
  sub_1C214A960();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

void MedicationsRecordDoseDataSource.__allocating_init(arrangedSections:identifier:)()
{
}

void MedicationsRecordDoseDataSource.init(arrangedSections:identifier:)()
{
}

id sub_1C20997DC()
{
  return *(id *)(v0 + qword_1EBF0C470);
}

Swift::Void __swiftcall MedicationsRecordDoseDataSource.registerCells(for:)(UICollectionView *a1)
{
}

uint64_t sub_1C2099944()
{
  return sub_1C214ACC0();
}

uint64_t MedicationsRecordDoseDataSource.layout(for:environment:)(unint64_t a1)
{
  uint64_t v2 = sub_1C2148710();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v17 - v7;
  uint64_t result = sub_1C2148360();
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)(result + 16) > a1)
  {
    uint64_t v10 = result + 16 * a1;
    uint64_t v12 = *(void *)(v10 + 32);
    uint64_t v11 = *(void *)(v10 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    if (v12 == 0x656C756465686373 && v11 == 0xE900000000000064)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v14 = sub_1C214BA80();
      swift_bridgeObjectRelease();
      if ((v14 & 1) == 0)
      {
        sub_1C2148690();
        uint64_t v8 = v6;
LABEL_14:
        uint64_t v16 = sub_1C2148700();
        (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
        return v16;
      }
    }
    uint64_t v15 = (void *)sub_1C2148D80();
    if (v15)
    {

      sub_1C2148660();
      sub_1C2148650();
      (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
    }
    else
    {
      sub_1C2148660();
    }
    sub_1C21486B0();
    goto LABEL_14;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C2099CFC(unint64_t a1)
{
  return MedicationsRecordDoseDataSource.layout(for:environment:)(a1);
}

uint64_t sub_1C2099D20()
{
  return sub_1C2148B80();
}

void MedicationsRecordDoseDataSource.supplementaryItem(ofKind:at:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = sub_1C2148A70();
  uint64_t v65 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C209B70C(0, &qword_1EA2C6770, MEMORY[0x1E4F662D0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)v59 - v10;
  uint64_t v12 = sub_1C2149BE0();
  MEMORY[0x1F4188790](v12 - 8);
  if (sub_1C214A5F0() == a1 && v13 == a2)
  {
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  uint64_t v64 = v11;
  char v15 = sub_1C214BA80();
  swift_bridgeObjectRelease();
  if (v15)
  {
LABEL_13:
    if (qword_1EBF0CA00 != -1) {
      swift_once();
    }
    id v19 = (id)qword_1EBF0CA18;
    swift_bridgeObjectRetain();
    sub_1C2147730();
    swift_bridgeObjectRelease();

    sub_1C2149B50();
    uint64_t v20 = sub_1C2148180();
    swift_allocObject();
    uint64_t v21 = sub_1C2148170();
    a3[3] = v20;
    a3[4] = sub_1C209B488((unint64_t *)&qword_1EA2C3550, MEMORY[0x1E4F66208]);
    *a3 = v21;
    return;
  }
  if (sub_1C214A5F0() == a1 && v16 == a2)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v18 = sub_1C214BA80();
    swift_bridgeObjectRelease();
    if ((v18 & 1) == 0) {
      goto LABEL_30;
    }
  }
  id v22 = (void *)sub_1C2148D80();
  if (!v22)
  {
LABEL_30:
    a3[3] = sub_1C2148220();
    a3[4] = sub_1C209B488(&qword_1EA2C2D28, MEMORY[0x1E4F66330]);
    __swift_allocate_boxed_opaque_existential_1(a3);
    sub_1C2148210();
    return;
  }
  id v60 = v22;
  id v23 = objc_msgSend(v22, sel_incompatibleDevices);
  sub_1C1F12718(0, &qword_1EA2C3510);
  unint64_t v24 = sub_1C214A780();

  if (v24 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v25 = sub_1C214B930();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v25 = *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v62 = v8;
  uint64_t v63 = a3;
  uint64_t v61 = v6;
  if (v25)
  {
    uint64_t v66 = MEMORY[0x1E4FBC860];
    sub_1C1F70524(0, v25 & ~(v25 >> 63), 0);
    if (v25 < 0)
    {
      __break(1u);
      return;
    }
    uint64_t v26 = 0;
    uint64_t v27 = v66;
    do
    {
      if ((v24 & 0xC000000000000001) != 0) {
        id v28 = (id)MEMORY[0x1C8753960](v26, v24);
      }
      else {
        id v28 = *(id *)(v24 + 8 * v26 + 32);
      }
      uint64_t v29 = v28;
      id v30 = objc_msgSend(v28, sel_deviceName);
      uint64_t v31 = sub_1C214A5F0();
      uint64_t v33 = v32;

      uint64_t v34 = sub_1C20663EC(v31, v33);
      uint64_t v36 = v35;

      swift_bridgeObjectRelease();
      uint64_t v66 = v27;
      unint64_t v38 = *(void *)(v27 + 16);
      unint64_t v37 = *(void *)(v27 + 24);
      if (v38 >= v37 >> 1)
      {
        sub_1C1F70524(v37 > 1, v38 + 1, 1);
        uint64_t v27 = v66;
      }
      ++v26;
      *(void *)(v27 + 16) = v38 + 1;
      unint64_t v39 = v27 + 16 * v38;
      *(void *)(v39 + 32) = v34;
      *(void *)(v39 + 40) = v36;
    }
    while (v25 != v26);
  }
  swift_bridgeObjectRelease();
  id v40 = self;
  uint64_t v41 = MEMORY[0x1E4FBB1A0];
  uint64_t v42 = (void *)sub_1C214A770();
  swift_bridgeObjectRelease();
  id v43 = objc_msgSend(v40, sel_localizedStringByJoiningStrings_, v42);

  uint64_t v44 = sub_1C214A5F0();
  uint64_t v46 = v45;

  if (qword_1EBF0CA00 != -1) {
    swift_once();
  }
  id v47 = (id)qword_1EBF0CA18;
  swift_bridgeObjectRetain();
  v59[1] = sub_1C2147730();
  swift_bridgeObjectRelease();

  uint64_t v48 = (void *)qword_1EBF0CA18;
  sub_1C1F5FE64(0, qword_1EBF0B8A0, (unint64_t *)&qword_1EBF0C9F0);
  uint64_t v49 = swift_allocObject();
  *(_OWORD *)(v49 + 16) = xmmword_1C214FCD0;
  *(void *)(v49 + 56) = v41;
  *(void *)(v49 + 64) = sub_1C1F31298();
  *(void *)(v49 + 32) = v44;
  *(void *)(v49 + 40) = v46;
  id v50 = v48;
  swift_bridgeObjectRetain();
  sub_1C2147730();
  sub_1C214A5C0();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v51 = (id)qword_1EBF0CA18;
  swift_bridgeObjectRetain();
  sub_1C2147730();
  swift_bridgeObjectRelease();

  uint64_t v66 = 9011426;
  unint64_t v67 = 0xA300000000000000;
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  sub_1C214A6C0();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  sub_1C214A6C0();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  sub_1C214A6C0();
  sub_1C1F13DB0(0, (unint64_t *)&qword_1EBF0CA10, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
  uint64_t v52 = swift_allocObject();
  *(_OWORD *)(v52 + 16) = xmmword_1C214E170;
  *(void *)(v52 + 32) = objc_msgSend(self, sel_systemGrayColor);
  uint64_t v66 = v52;
  sub_1C214A7A0();
  uint64_t v53 = v64;
  *uint64_t v64 = 0xC000000000000000;
  uint64_t v54 = *MEMORY[0x1E4F662C8];
  uint64_t v55 = sub_1C21481F0();
  uint64_t v56 = *(void *)(v55 - 8);
  (*(void (**)(void *, uint64_t, uint64_t))(v56 + 104))(v53, v54, v55);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v56 + 56))(v53, 0, 1, v55);
  (*(void (**)(char *, void, uint64_t))(v65 + 104))(v62, *MEMORY[0x1E4F66678], v61);
  uint64_t v57 = sub_1C2148200();
  uint64_t v58 = v63;
  v63[3] = v57;
  v58[4] = sub_1C209B488(&qword_1EA2C6778, MEMORY[0x1E4F662D8]);
  __swift_allocate_boxed_opaque_existential_1(v58);
  sub_1C21481E0();
}

void sub_1C209A794(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
}

uint64_t sub_1C209A7B8(char *a1)
{
  char v1 = *a1;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1C2095FF0(v1);
    return swift_release();
  }
  return result;
}

uint64_t sub_1C209A818(uint64_t a1, int *a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v3;
  *uint64_t v3 = v2;
  v3[1] = sub_1C209A8F8;
  return v5(v2 + 32);
}

uint64_t sub_1C209A8F8()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(unsigned char **)(*v0 + 16);
  uint64_t v5 = *v0;
  swift_task_dealloc();
  *uint64_t v2 = *(unsigned char *)(v1 + 32);
  uint64_t v3 = *(uint64_t (**)(void))(v5 + 8);
  return v3();
}

uint64_t sub_1C209AA0C(unint64_t a1, void *a2)
{
  uint64_t v22 = MEMORY[0x1E4FBC860];
  if (a1 >> 62) {
    goto LABEL_22;
  }
  uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v3)
  {
    while (1)
    {
      uint64_t v20 = v3;
      unint64_t v4 = 0;
      while ((a1 & 0xC000000000000001) != 0)
      {
        id v5 = (id)MEMORY[0x1C8753960](v4, a1);
LABEL_9:
        uint64_t v6 = v5;
        unint64_t v7 = v4 + 1;
        if (__OFADD__(v4, 1)) {
          goto LABEL_21;
        }
        id v8 = objc_msgSend(v5, sel_medicationIdentifier);
        uint64_t v9 = sub_1C214A5F0();
        uint64_t v11 = v10;

        id v12 = objc_msgSend(a2, sel_semanticIdentifier);
        id v13 = objc_msgSend(v12, sel_stringValue);

        uint64_t v14 = sub_1C214A5F0();
        uint64_t v16 = v15;

        if (v9 == v14 && v11 == v16)
        {
          swift_bridgeObjectRelease_n();
LABEL_17:
          sub_1C214B820();
          sub_1C214B860();
          sub_1C214B870();
          sub_1C214B830();
          goto LABEL_5;
        }
        char v18 = sub_1C214BA80();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v18) {
          goto LABEL_17;
        }

LABEL_5:
        ++v4;
        if (v7 == v20) {
          return v22;
        }
      }
      if (v4 < *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        break;
      }
      __break(1u);
LABEL_21:
      __break(1u);
LABEL_22:
      uint64_t v3 = sub_1C214B930();
      if (!v3) {
        return MEMORY[0x1E4FBC860];
      }
    }
    id v5 = *(id *)(a1 + 8 * v4 + 32);
    goto LABEL_9;
  }
  return MEMORY[0x1E4FBC860];
}

uint64_t sub_1C209AC18()
{
  return sub_1C209B488(&qword_1EA2C6780, (void (*)(uint64_t))type metadata accessor for MedicationsRecordDoseDataSource);
}

uint64_t type metadata accessor for MedicationsRecordDoseDataSource()
{
  uint64_t result = qword_1EBF0C478;
  if (!qword_1EBF0C478) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C209ACAC()
{
  uint64_t result = type metadata accessor for DayScheduleProvider();
  if (v1 <= 0x3F) {
    return swift_initClassMetadata2();
  }
  return result;
}

uint64_t method lookup function for MedicationsRecordDoseDataSource(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MedicationsRecordDoseDataSource);
}

uint64_t dispatch thunk of MedicationsRecordDoseDataSource.__allocating_init(healthStore:listManager:medication:incompatibilityCache:didTapRecordDoseHandler:)()
{
  return (*(uint64_t (**)(void))(class metadata base offset for MedicationsRecordDoseDataSource + v0 + 112))();
}

uint64_t sub_1C209ADC0()
{
  return type metadata accessor for MedicationsRecordDoseDataSource();
}

void sub_1C209ADC8()
{
  if (!qword_1EA2C6790)
  {
    sub_1C214AE20();
    sub_1C1F12718(255, (unint64_t *)&qword_1EBF0CB10);
    sub_1C209B488((unint64_t *)&qword_1EA2C6798, MEMORY[0x1E4F27FC8]);
    sub_1C1F43FD4();
    unint64_t v0 = sub_1C2149DF0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C6790);
    }
  }
}

uint64_t sub_1C209AE94(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1C209B70C(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1C209AF04()
{
  swift_weakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C209AF3C()
{
  return sub_1C2094250();
}

uint64_t sub_1C209AF44(char *a1)
{
  return sub_1C209A7B8(a1);
}

void sub_1C209AF4C()
{
  if (!qword_1EA2C39B0)
  {
    unint64_t v0 = sub_1C2149E10();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C39B0);
    }
  }
}

uint64_t sub_1C209AFB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DayScheduleProvider();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C209B018(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v21 = MEMORY[0x1E4FBC860];
    sub_1C1F704CC(0, v1, 0);
    uint64_t v2 = v21;
    type metadata accessor for ScheduledDetailItemCell();
    uint64_t v4 = (char *)(a1 + 48);
    do
    {
      id v5 = (void *)*((void *)v4 - 2);
      uint64_t v6 = (void *)*((void *)v4 - 1);
      char v7 = *v4;
      uint64_t v8 = swift_allocObject();
      swift_weakInit();
      uint64_t v9 = swift_allocObject();
      *(void *)(v9 + 16) = v8;
      *(void *)(v9 + 24) = v5;
      *(void *)(v9 + 32) = v6;
      *(unsigned char *)(v9 + 40) = v7;
      sub_1C1F3AFEC(v5, v6, v7);
      sub_1C1F3AFEC(v5, v6, v7);
      sub_1C209B488(&qword_1EA2C6760, (void (*)(uint64_t))type metadata accessor for ScheduledDetailItemCell);
      uint64_t v10 = sub_1C21481D0();
      uint64_t v21 = v2;
      unint64_t v12 = *(void *)(v2 + 16);
      unint64_t v11 = *(void *)(v2 + 24);
      uint64_t v16 = v13;
      int64_t v17 = v12 + 1;
      if (v12 >= v11 >> 1)
      {
        sub_1C1F704CC(v11 > 1, v17, 1);
        uint64_t v2 = v21;
      }
      v4 += 24;
      id v19 = &type metadata for ScheduledDetailItem;
      unint64_t v20 = sub_1C209B524();
      uint64_t v14 = swift_allocObject();
      *(void *)&long long v18 = v14;
      *(void *)(v14 + 16) = v5;
      *(void *)(v14 + 24) = v6;
      *(unsigned char *)(v14 + 32) = v7;
      *(void *)(v14 + 40) = sub_1C209B514;
      *(void *)(v14 + 48) = v9;
      *(void *)(v14 + 56) = v10;
      *(void *)(v14 + 64) = v16;
      *(void *)(v2 + 16) = v17;
      sub_1C1F31280(&v18, v2 + 40 * v12 + 32);
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1C209B220(unint64_t a1, void *a2, void *a3)
{
  uint64_t v4 = v3;
  id v22 = a2;
  id v23 = a3;
  uint64_t v21 = sub_1C2149200();
  uint64_t v6 = *(void *)(v21 - 8);
  MEMORY[0x1F4188790](v21);
  uint64_t v8 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62) {
    goto LABEL_15;
  }
  uint64_t v9 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v10 = MEMORY[0x1E4FBC860];
    if (!v9) {
      return v10;
    }
    uint64_t v24 = MEMORY[0x1E4FBC860];
    uint64_t result = sub_1C1F708CC(0, v9 & ~(v9 >> 63), 0);
    if (v9 < 0) {
      break;
    }
    v18[1] = v4;
    uint64_t v4 = 0;
    uint64_t v10 = v24;
    v18[2] = v6 + 32;
    unint64_t v19 = a1 & 0xC000000000000001;
    unint64_t v20 = a1;
    while (v9 != v4)
    {
      if (v19) {
        id v12 = (id)MEMORY[0x1C8753960](v4, a1);
      }
      else {
        id v12 = *(id *)(a1 + 8 * v4 + 32);
      }
      id v13 = v12;
      id v14 = objc_msgSend(v22, sel_identifier);
      sub_1C214A5F0();

      id v15 = v23;
      sub_1C2149210();

      uint64_t v24 = v10;
      unint64_t v17 = *(void *)(v10 + 16);
      unint64_t v16 = *(void *)(v10 + 24);
      if (v17 >= v16 >> 1)
      {
        sub_1C1F708CC(v16 > 1, v17 + 1, 1);
        uint64_t v10 = v24;
      }
      ++v4;
      *(void *)(v10 + 16) = v17 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v10+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(void *)(v6 + 72) * v17, v8, v21);
      a1 = v20;
      if (v9 == v4) {
        return v10;
      }
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_1C214B930();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_1C209B480(void *a1)
{
  return sub_1C2096E88(a1);
}

uint64_t sub_1C209B488(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C209B4D0()
{
  swift_release();
  sub_1C1F3B040(*(void **)(v0 + 24), *(void **)(v0 + 32), *(unsigned char *)(v0 + 40));

  return MEMORY[0x1F4186498](v0, 41, 7);
}

uint64_t sub_1C209B514(void *a1)
{
  return sub_1C2097218(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(unsigned char *)(v1 + 40));
}

unint64_t sub_1C209B524()
{
  unint64_t result = qword_1EA2C67A8;
  if (!qword_1EA2C67A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1EA2C67A8);
  }
  return result;
}

uint64_t sub_1C209B578()
{
  sub_1C1F3B040(*(void **)(v0 + 16), *(void **)(v0 + 24), *(unsigned char *)(v0 + 32));
  swift_release();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 72, 7);
}

uint64_t sub_1C209B5C4()
{
  return objectdestroy_19Tm(48);
}

uint64_t sub_1C209B5CC(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_1C1F40400;
  return sub_1C2094638(a1, v4, v5, v7, v6);
}

void sub_1C209B68C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, uint64_t, void))
{
  if (!*a2)
  {
    uint64_t v6 = sub_1C1F23804(255, (unint64_t *)&qword_1EBF0C9C0);
    unint64_t v7 = a3(a1, &type metadata for MedicationsRecordDoseDataSource.UpdateOperationResult, v6, MEMORY[0x1E4FBC0F0]);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

void sub_1C209B70C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C209B770()
{
  return sub_1C2096E30();
}

uint64_t sub_1C209B778(uint64_t a1, uint64_t a2)
{
  sub_1C209B70C(0, &qword_1EA2C67D0, MEMORY[0x1E4F66BF8], MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C209B80C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DayScheduleProvider();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C209B870()
{
  return objectdestroy_19Tm(40);
}

uint64_t objectdestroy_19Tm(uint64_t a1)
{
  swift_unknownObjectRelease();
  swift_release();

  return MEMORY[0x1F4186498](v1, a1, 7);
}

uint64_t sub_1C209B8C4(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_1C1F40400;
  return sub_1C2095EAC(a1, v4, v5, v6);
}

uint64_t sub_1C209B978()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C209B9B0(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1C1F405A0;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1EA2C67F0 + dword_1EA2C67F0);
  return v6(a1, v4);
}

uint64_t sub_1C209BA68(uint64_t a1)
{
  return sub_1C2097588(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1C209BA70()
{
  return sub_1C2097BC4();
}

uint64_t sub_1C209BA7C(uint64_t a1)
{
  uint64_t v3 = v2;
  uint64_t v5 = *(void *)(sub_1C21475B0() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = v6 + *(void *)(v5 + 64);
  sub_1C209B68C(0, &qword_1EA2C6810, MEMORY[0x1E4FBD130]);
  unint64_t v9 = (v7 + *(unsigned __int8 *)(*(void *)(v8 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v8 - 8) + 80);
  uint64_t v10 = v1[2];
  uint64_t v11 = v1[3];
  uint64_t v12 = v1[4];
  uint64_t v13 = (uint64_t)v1 + v6;
  uint64_t v14 = (uint64_t)v1 + v9;
  id v15 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v15;
  *id v15 = v3;
  v15[1] = sub_1C1F405A0;
  return sub_1C2097D04(a1, v10, v11, v12, v13, v14);
}

uint64_t objectdestroy_40Tm()
{
  uint64_t v1 = sub_1C21475B0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  sub_1C209B68C(0, &qword_1EA2C6810, MEMORY[0x1E4FBD130]);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = (v5 + v9) & ~v9;
  uint64_t v11 = v10 + *(void *)(v8 + 64);
  uint64_t v12 = v3 | v9 | 7;
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v0 + v10, v7);

  return MEMORY[0x1F4186498](v0, v11, v12);
}

uint64_t sub_1C209BD78(uint64_t a1)
{
  uint64_t v3 = v2;
  uint64_t v5 = *(void *)(sub_1C21475B0() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = v6 + *(void *)(v5 + 64);
  sub_1C209B68C(0, &qword_1EA2C6810, MEMORY[0x1E4FBD130]);
  unint64_t v9 = (v7 + *(unsigned __int8 *)(*(void *)(v8 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v8 - 8) + 80);
  uint64_t v10 = v1[2];
  uint64_t v11 = v1[3];
  uint64_t v12 = v1[4];
  uint64_t v13 = (uint64_t)v1 + v6;
  uint64_t v14 = (uint64_t)v1 + v9;
  id v15 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v15;
  *id v15 = v3;
  v15[1] = sub_1C1F405A0;
  return sub_1C2098C24(a1, v10, v11, v12, v13, v14);
}

void sub_1C209BEF4(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = sub_1C1F12718(255, a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

void sub_1C209BF5C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    sub_1C209BEF4(255, (unint64_t *)&qword_1EA2C3318, &qword_1EA2C3320, 0x1E4F66B50, MEMORY[0x1E4FBB320]);
    unint64_t v7 = a3(a1, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

void sub_1C209BFE8()
{
  if (!qword_1EA2C6858)
  {
    sub_1C209BEF4(255, &qword_1EA2C6860, &qword_1EA2C6290, 0x1E4F2B420, MEMORY[0x1E4F29560]);
    unint64_t v0 = sub_1C214B4F0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C6858);
    }
  }
}

unint64_t sub_1C209C06C()
{
  unint64_t result = qword_1EA2C6878;
  if (!qword_1EA2C6878)
  {
    sub_1C209BEF4(255, &qword_1EA2C6870, &qword_1EA2C6290, 0x1E4F2B420, MEMORY[0x1E4F29568]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C6878);
  }
  return result;
}

uint64_t sub_1C209C0F0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t initializeBufferWithCopyOfBuffer for MedicationsRecordDoseDataSource.UpdateOperationResult(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for MedicationsRecordDoseDataSource.UpdateOperationResult()
{
  return swift_bridgeObjectRelease();
}

uint64_t assignWithCopy for MedicationsRecordDoseDataSource.UpdateOperationResult(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for MedicationsRecordDoseDataSource.UpdateOperationResult(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for MedicationsRecordDoseDataSource.UpdateOperationResult()
{
  return &type metadata for MedicationsRecordDoseDataSource.UpdateOperationResult;
}

uint64_t sub_1C209C228(uint64_t a1, uint64_t a2, uint64_t (*a3)(BOOL, unint64_t, uint64_t), uint64_t (*a4)(uint64_t))
{
  unint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = MEMORY[0x1E4FBC860];
  if (!v4) {
    return v5;
  }
  uint64_t v28 = MEMORY[0x1E4FBC860];
  a3(0, v4, 0);
  uint64_t v5 = v28;
  uint64_t result = a4(a1);
  uint64_t v10 = result;
  uint64_t v11 = 0;
  uint64_t v12 = a1 + 64;
  unint64_t v25 = v4;
  int v26 = v9;
  uint64_t v27 = a1 + 64;
  while ((v10 & 0x8000000000000000) == 0 && v10 < 1 << *(unsigned char *)(a1 + 32))
  {
    unint64_t v15 = (unint64_t)v10 >> 6;
    if ((*(void *)(v12 + 8 * ((unint64_t)v10 >> 6)) & (1 << v10)) == 0) {
      goto LABEL_23;
    }
    if (*(_DWORD *)(a1 + 36) != v9) {
      goto LABEL_24;
    }
    uint64_t v16 = *(void *)(*(void *)(a1 + 56) + 8 * v10);
    unint64_t v17 = *(void *)(v28 + 16);
    unint64_t v18 = *(void *)(v28 + 24);
    uint64_t result = swift_bridgeObjectRetain();
    if (v17 >= v18 >> 1) {
      uint64_t result = a3(v18 > 1, v17 + 1, 1);
    }
    *(void *)(v28 + 16) = v17 + 1;
    *(void *)(v28 + 8 * v17 + 32) = v16;
    int64_t v13 = 1 << *(unsigned char *)(a1 + 32);
    if (v10 >= v13) {
      goto LABEL_25;
    }
    uint64_t v12 = a1 + 64;
    uint64_t v19 = *(void *)(v27 + 8 * v15);
    if ((v19 & (1 << v10)) == 0) {
      goto LABEL_26;
    }
    int v9 = v26;
    if (*(_DWORD *)(a1 + 36) != v26) {
      goto LABEL_27;
    }
    unint64_t v20 = v19 & (-2 << (v10 & 0x3F));
    if (v20)
    {
      int64_t v13 = __clz(__rbit64(v20)) | v10 & 0xFFFFFFFFFFFFFFC0;
      unint64_t v14 = v25;
    }
    else
    {
      unint64_t v21 = v15 + 1;
      unint64_t v22 = (unint64_t)(v13 + 63) >> 6;
      unint64_t v14 = v25;
      if (v15 + 1 < v22)
      {
        unint64_t v23 = *(void *)(v27 + 8 * v21);
        if (v23)
        {
LABEL_20:
          int64_t v13 = __clz(__rbit64(v23)) + (v21 << 6);
        }
        else
        {
          while (v22 - 2 != v15)
          {
            unint64_t v23 = *(void *)(a1 + 80 + 8 * v15++);
            if (v23)
            {
              unint64_t v21 = v15 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    ++v11;
    uint64_t v10 = v13;
    if (v11 == v14) {
      return v5;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1C209C440(void (*a1)(void *__return_ptr, uint64_t *), uint64_t a2, unint64_t isUniquelyReferenced_nonNull_native, uint64_t a4, unint64_t a5)
{
  uint64_t v5 = a5;
  uint64_t v51 = MEMORY[0x1E4FBC868];
  if (a5 >> 62)
  {
LABEL_32:
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_1C214B930();
    if (v8) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v8 = *(void *)((a5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v8)
    {
LABEL_3:
      unint64_t v42 = isUniquelyReferenced_nonNull_native;
      uint64_t v43 = a4;
      uint64_t v44 = v5;
      unint64_t v45 = v5 & 0xC000000000000001;
      uint64_t v9 = 4;
      while (1)
      {
        uint64_t v10 = v9 - 4;
        if (v45)
        {
          uint64_t v11 = MEMORY[0x1C8753960](v9 - 4, v5);
          uint64_t v12 = v9 - 3;
          if (__OFADD__(v10, 1)) {
            goto LABEL_29;
          }
        }
        else
        {
          uint64_t v11 = *(void *)(v5 + 8 * v9);
          swift_retain();
          uint64_t v12 = v9 - 3;
          if (__OFADD__(v10, 1))
          {
LABEL_29:
            __break(1u);
LABEL_30:
            __break(1u);
LABEL_31:
            __break(1u);
            goto LABEL_32;
          }
        }
        uint64_t v50 = v11;
        a1(v49, &v50);
        uint64_t v5 = v51;
        uint64_t v14 = v49[0];
        uint64_t v13 = v49[1];
        if (!*(void *)(v51 + 16)) {
          break;
        }
        swift_bridgeObjectRetain();
        sub_1C1F4B4D0(v14, v13);
        char v16 = v15;
        swift_bridgeObjectRelease();
        if ((v16 & 1) == 0) {
          break;
        }
LABEL_25:
        swift_bridgeObjectRetain();
        uint64_t v29 = sub_1C209CDC8(v48, v14, v13);
        if (*v28)
        {
          id v30 = v28;
          a4 = v50;
          uint64_t v31 = swift_retain();
          MEMORY[0x1C87528E0](v31);
          int isUniquelyReferenced_nonNull_native = *(void *)((*v30 & 0xFFFFFFFFFFFFFF8) + 0x10);
          if (isUniquelyReferenced_nonNull_native >= *(void *)((*v30 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_1C214A7D0();
          }
          sub_1C214A820();
          sub_1C214A7A0();
        }
        ((void (*)(uint64_t *, void))v29)(v48, 0);
        uint64_t v5 = v44;
        swift_bridgeObjectRelease_n();
        swift_release();
        ++v9;
        if (v12 == v8)
        {
          swift_bridgeObjectRelease();
          int isUniquelyReferenced_nonNull_native = v42;
          a4 = v43;
          goto LABEL_34;
        }
      }
      swift_bridgeObjectRetain();
      int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v48[0] = v5;
      unint64_t v18 = sub_1C1F4B4D0(v14, v13);
      uint64_t v19 = *(void *)(v5 + 16);
      BOOL v20 = (v17 & 1) == 0;
      uint64_t v21 = v19 + v20;
      if (__OFADD__(v19, v20)) {
        goto LABEL_30;
      }
      a4 = v17;
      if (*(void *)(v5 + 24) < v21)
      {
        sub_1C1FABF50(v21, isUniquelyReferenced_nonNull_native);
        unint64_t v22 = sub_1C1F4B4D0(v14, v13);
        if ((a4 & 1) != (v23 & 1))
        {
          sub_1C214BAB0();
          __break(1u);
          uint64_t result = swift_release();
          __break(1u);
          return result;
        }
        unint64_t v18 = v22;
        uint64_t v5 = v48[0];
        if ((a4 & 1) == 0) {
          goto LABEL_22;
        }
LABEL_20:
        a4 = *(void *)(v5 + 56);
        swift_bridgeObjectRelease();
        *(void *)(a4 + 8 * v18) = MEMORY[0x1E4FBC860];
LABEL_24:
        uint64_t v51 = v5;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_25;
      }
      if (isUniquelyReferenced_nonNull_native)
      {
        uint64_t v5 = v48[0];
        if (v17) {
          goto LABEL_20;
        }
      }
      else
      {
        sub_1C1FACDA8();
        uint64_t v5 = v48[0];
        if (a4) {
          goto LABEL_20;
        }
      }
LABEL_22:
      *(void *)(v5 + 8 * (v18 >> 6) + 64) |= 1 << v18;
      uint64_t v24 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v18);
      *uint64_t v24 = v14;
      v24[1] = v13;
      *(void *)(*(void *)(v5 + 56) + 8 * v18) = MEMORY[0x1E4FBC860];
      uint64_t v25 = *(void *)(v5 + 16);
      BOOL v26 = __OFADD__(v25, 1);
      uint64_t v27 = v25 + 1;
      if (v26) {
        goto LABEL_31;
      }
      *(void *)(v5 + 16) = v27;
      swift_bridgeObjectRetain();
      goto LABEL_24;
    }
  }
  swift_bridgeObjectRelease();
LABEL_34:
  uint64_t v32 = swift_bridgeObjectRetain();
  uint64_t v33 = sub_1C209C228(v32, (uint64_t)v47, (uint64_t (*)(BOOL, unint64_t, uint64_t))sub_1C1F7076C, sub_1C2110938);
  swift_bridgeObjectRelease();
  v48[0] = v33;
  swift_bridgeObjectRetain();
  sub_1C20A262C(v48, isUniquelyReferenced_nonNull_native, a4, (uint64_t (*)(uint64_t))sub_1C20FB238, (uint64_t (*)(void *, uint64_t, uint64_t))sub_1C20A0F50);
  swift_bridgeObjectRelease();
  uint64_t v34 = v48[0];
  uint64_t v35 = *(void *)(v48[0] + 16);
  if (v35)
  {
    swift_retain();
    uint64_t v36 = sub_1C1F3B83C(0, 1, 1, MEMORY[0x1E4FBC860]);
    for (uint64_t i = 0; i != v35; ++i)
    {
      uint64_t v38 = *(void *)(v34 + 8 * i + 32);
      unint64_t v39 = v36[2];
      unint64_t v40 = v36[3];
      swift_bridgeObjectRetain();
      if (v39 >= v40 >> 1) {
        uint64_t v36 = sub_1C1F3B83C((void *)(v40 > 1), v39 + 1, 1, v36);
      }
      v36[2] = v39 + 1;
      v36[v39 + 4] = v38;
    }
    swift_release_n();
  }
  else
  {
    swift_release();
    uint64_t v36 = (void *)MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v36;
}

uint64_t sub_1C209C8FC(void (*a1)(void *__return_ptr, void **), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = a4;
  uint64_t v6 = a3;
  uint64_t v7 = *(void *)(a5 + 16);
  uint64_t v66 = (void *)MEMORY[0x1E4FBC868];
  if (!v7)
  {
LABEL_26:
    uint64_t v44 = swift_bridgeObjectRetain();
    uint64_t v45 = sub_1C209C228(v44, (uint64_t)v60, (uint64_t (*)(BOOL, unint64_t, uint64_t))sub_1C1F70854, sub_1C2110938);
    swift_bridgeObjectRelease();
    v61[0] = v45;
    swift_bridgeObjectRetain();
    sub_1C20A262C(v61, v6, v5, (uint64_t (*)(uint64_t))sub_1C20FB24C, (uint64_t (*)(void *, uint64_t, uint64_t))sub_1C20A1D80);
    swift_bridgeObjectRelease();
    uint64_t v46 = v61[0];
    uint64_t v47 = *(void *)(v61[0] + 16);
    if (v47)
    {
      swift_retain();
      uint64_t v48 = sub_1C1F3BAC0(0, 1, 1, MEMORY[0x1E4FBC860]);
      for (uint64_t i = 0; i != v47; ++i)
      {
        uint64_t v50 = *(void *)(v46 + 8 * i + 32);
        unint64_t v51 = v48[2];
        unint64_t v52 = v48[3];
        swift_bridgeObjectRetain();
        if (v51 >= v52 >> 1) {
          uint64_t v48 = sub_1C1F3BAC0((void *)(v52 > 1), v51 + 1, 1, v48);
        }
        v48[2] = v51 + 1;
        v48[v51 + 4] = v50;
      }
      swift_release_n();
    }
    else
    {
      swift_release();
      uint64_t v48 = (void *)MEMORY[0x1E4FBC860];
    }
    swift_bridgeObjectRelease();
    return (uint64_t)v48;
  }
  swift_bridgeObjectRetain();
  uint64_t v9 = (char *)(a5 + 48);
  while (1)
  {
    uint64_t v11 = (void *)*((void *)v9 - 2);
    uint64_t v10 = (void *)*((void *)v9 - 1);
    char v12 = *v9;
    uint64_t v63 = v11;
    uint64_t v64 = v10;
    char v65 = v12;
    char v59 = v12;
    sub_1C1F3AFEC(v11, v10, v12);
    a1(v62, &v63);
    uint64_t v13 = (uint64_t)v66;
    uint64_t v14 = v62[0];
    uint64_t v15 = v62[1];
    if (v66[2])
    {
      swift_bridgeObjectRetain();
      sub_1C1F4B4D0(v14, v15);
      char v17 = v16;
      swift_bridgeObjectRelease();
      if (v17) {
        goto LABEL_19;
      }
    }
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v61[0] = v13;
    unint64_t v20 = sub_1C1F4B4D0(v14, v15);
    uint64_t v21 = *(void *)(v13 + 16);
    BOOL v22 = (v19 & 1) == 0;
    uint64_t v23 = v21 + v22;
    if (__OFADD__(v21, v22)) {
      break;
    }
    char v24 = v19;
    if (*(void *)(v13 + 24) >= v23)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        uint64_t v27 = (void *)v61[0];
        if ((v19 & 1) == 0) {
          goto LABEL_16;
        }
      }
      else
      {
        sub_1C1FAD0E8();
        uint64_t v27 = (void *)v61[0];
        if ((v24 & 1) == 0) {
          goto LABEL_16;
        }
      }
    }
    else
    {
      sub_1C1FAC530(v23, isUniquelyReferenced_nonNull_native);
      unint64_t v25 = sub_1C1F4B4D0(v14, v15);
      if ((v24 & 1) != (v26 & 1)) {
        goto LABEL_36;
      }
      unint64_t v20 = v25;
      uint64_t v27 = (void *)v61[0];
      if ((v24 & 1) == 0)
      {
LABEL_16:
        v27[(v20 >> 6) + 8] |= 1 << v20;
        uint64_t v29 = (uint64_t *)(v27[6] + 16 * v20);
        *uint64_t v29 = v14;
        v29[1] = v15;
        *(void *)(v27[7] + 8 * v20) = MEMORY[0x1E4FBC860];
        uint64_t v30 = v27[2];
        BOOL v31 = __OFADD__(v30, 1);
        uint64_t v32 = v30 + 1;
        if (v31) {
          goto LABEL_35;
        }
        v27[2] = v32;
        swift_bridgeObjectRetain();
        goto LABEL_18;
      }
    }
    uint64_t v28 = v27[7];
    swift_bridgeObjectRelease();
    *(void *)(v28 + 8 * v20) = MEMORY[0x1E4FBC860];
LABEL_18:
    uint64_t v66 = v27;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_19:
    uint64_t v58 = v10;
    swift_bridgeObjectRetain();
    uint64_t v34 = sub_1C209CE4C(v61, v14, v15);
    uint64_t v35 = *v33;
    if (*v33)
    {
      uint64_t v36 = v33;
      uint64_t v57 = v11;
      unint64_t v37 = v63;
      uint64_t v38 = v64;
      char v39 = v65;
      sub_1C1F3AFEC(v63, v64, v65);
      char v40 = swift_isUniquelyReferenced_nonNull_native();
      *uint64_t v36 = v35;
      if ((v40 & 1) == 0)
      {
        uint64_t v35 = sub_1C1F3B6DC(0, v35[2] + 1, 1, v35);
        *uint64_t v36 = v35;
      }
      unint64_t v42 = v35[2];
      unint64_t v41 = v35[3];
      if (v42 >= v41 >> 1)
      {
        uint64_t v35 = sub_1C1F3B6DC((void *)(v41 > 1), v42 + 1, 1, v35);
        *uint64_t v36 = v35;
      }
      uint64_t v10 = v58;
      v35[2] = v42 + 1;
      uint64_t v43 = &v35[3 * v42];
      v43[4] = v37;
      void v43[5] = v38;
      *((unsigned char *)v43 + 48) = v39;
      ((void (*)(uint64_t *, void))v34)(v61, 0);
      uint64_t v11 = v57;
    }
    else
    {
      ((void (*)(uint64_t *, void))v34)(v61, 0);
    }
    v9 += 24;
    swift_bridgeObjectRelease_n();
    sub_1C1F3B040(v11, v10, v59);
    if (!--v7)
    {
      swift_bridgeObjectRelease();
      uint64_t v6 = a3;
      uint64_t v5 = a4;
      goto LABEL_26;
    }
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  sub_1C214BAB0();
  __break(1u);
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t (*sub_1C209CDC8(void *a1, uint64_t a2, uint64_t a3))()
{
  uint64_t v6 = malloc(0x30uLL);
  *a1 = v6;
  v6[4] = a3;
  swift_bridgeObjectRetain();
  v6[5] = sub_1C209F978(v6, a2, a3);
  return sub_1C209CE48;
}

uint64_t (*sub_1C209CE4C(void *a1, uint64_t a2, uint64_t a3))()
{
  uint64_t v6 = malloc(0x30uLL);
  *a1 = v6;
  v6[4] = a3;
  swift_bridgeObjectRetain();
  v6[5] = sub_1C209FA28(v6, a2, a3);
  return sub_1C209CE48;
}

void sub_1C209CECC(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void, void))(*a1 + 40))(*a1, 0);
  swift_bridgeObjectRelease();

  free(v1);
}

uint64_t sub_1C209CF20(unint64_t a1, unint64_t a2, uint64_t (*a3)(uint64_t *, uint64_t *))
{
  if (!(a1 >> 62))
  {
    uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v6) {
      goto LABEL_3;
    }
LABEL_13:
    swift_bridgeObjectRelease();
    __break(1u);
    goto LABEL_14;
  }
  swift_bridgeObjectRetain();
  if (!sub_1C214B930()) {
    goto LABEL_13;
  }
LABEL_3:
  if ((a1 & 0xC000000000000001) != 0)
  {
LABEL_14:
    uint64_t v7 = MEMORY[0x1C8753960](0, a1);
    goto LABEL_6;
  }
  if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v7 = *(void *)(a1 + 32);
  swift_retain();
LABEL_6:
  swift_bridgeObjectRelease();
  uint64_t v13 = v7;
  if (!(a2 >> 62))
  {
    uint64_t v8 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v8) {
      goto LABEL_8;
    }
LABEL_17:
    swift_bridgeObjectRelease();
    __break(1u);
    goto LABEL_18;
  }
LABEL_16:
  swift_bridgeObjectRetain();
  uint64_t result = sub_1C214B930();
  if (!result) {
    goto LABEL_17;
  }
LABEL_8:
  if ((a2 & 0xC000000000000001) != 0)
  {
LABEL_18:
    uint64_t v10 = MEMORY[0x1C8753960](0, a2);
    goto LABEL_11;
  }
  if (*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    uint64_t v10 = *(void *)(a2 + 32);
    swift_retain();
LABEL_11:
    swift_bridgeObjectRelease();
    uint64_t v12 = v10;
    char v11 = a3(&v13, &v12);
    swift_release();
    swift_release();
    return v11 & 1;
  }
  __break(1u);
  return result;
}

id sub_1C209D0B4(id result, uint64_t a2, uint64_t (*a3)(void **, void **))
{
  if (!*((void *)result + 2)
    || (uint64_t v5 = (void *)*((void *)result + 5),
        char v6 = *((unsigned char *)result + 48),
        uint64_t v13 = (void *)*((void *)result + 4),
        uint64_t v14 = v5,
        unsigned __int8 v15 = v6,
        uint64_t result = sub_1C1F3AFEC(v13, v5, v6),
        v15 == 255))
  {
    __break(1u);
  }
  else if (*(void *)(a2 + 16))
  {
    uint64_t v7 = *(void **)(a2 + 40);
    char v8 = *(unsigned char *)(a2 + 48);
    uint64_t v10 = *(void **)(a2 + 32);
    char v11 = v7;
    unsigned __int8 v12 = v8;
    uint64_t result = sub_1C1F3AFEC(v10, v7, v8);
    if (v12 != 255)
    {
      char v9 = a3(&v13, &v10);
      sub_1C1F3B040(v10, v11, v12);
      sub_1C1F3B040(v13, v14, v15);
      return (id)(v9 & 1);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1C209D180(unint64_t a1)
{
  uint64_t v9 = MEMORY[0x1E4FBC860];
  if (!(a1 >> 62))
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v2) {
      goto LABEL_3;
    }
LABEL_15:
    swift_bridgeObjectRelease();
    return MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_1C214B930();
  uint64_t v2 = result;
  if (!result) {
    goto LABEL_15;
  }
LABEL_3:
  if (v2 < 1)
  {
    __break(1u);
  }
  else
  {
    for (uint64_t i = 0; i != v2; ++i)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        MEMORY[0x1C8753960](i, a1);
      }
      else {
        swift_retain();
      }
      uint64_t v5 = (void *)sub_1C2148F90();
      id v6 = objc_msgSend(v5, sel_status);

      if (v6 == (id)4
        || (v7 = (void *)sub_1C2148F90(), id v8 = objc_msgSend(v7, sel_status), v7, v8 == (id)5))
      {
        sub_1C214B820();
        sub_1C214B860();
        sub_1C214B870();
        sub_1C214B830();
      }
      else
      {
        swift_release();
      }
    }
    swift_bridgeObjectRelease();
    return v9;
  }
  return result;
}

uint64_t sub_1C209D304(unint64_t a1)
{
  uint64_t v23 = sub_1C2147AC0();
  uint64_t v2 = *(uint64_t **)(v23 - 8);
  MEMORY[0x1F4188790](v23);
  uint64_t v21 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C20A356C(0, &qword_1EBF0B1F0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v4 - 8);
  id v6 = (char *)&v19 - v5;
  uint64_t v26 = MEMORY[0x1E4FBC860];
  if (a1 >> 62)
  {
LABEL_24:
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1C214B930();
    if (v7) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v7)
    {
LABEL_3:
      unint64_t v8 = 0;
      uint64_t v24 = a1 & 0xFFFFFFFFFFFFFF8;
      unint64_t v25 = a1 & 0xC000000000000001;
      BOOL v22 = (void (**)(char *, uint64_t, uint64_t, uint64_t *))(v2 + 7);
      char v19 = (unsigned int (**)(char *, uint64_t, uint64_t *))(v2 + 6);
      unint64_t v20 = (void (**)(char *, char *, uint64_t))(v2 + 4);
      while (1)
      {
        if (v25)
        {
          unint64_t v9 = a1;
          MEMORY[0x1C8753960](v8, a1);
          unint64_t v10 = v8 + 1;
          if (__OFADD__(v8, 1))
          {
LABEL_21:
            __break(1u);
LABEL_22:
            uint64_t v17 = v26;
            goto LABEL_26;
          }
        }
        else
        {
          if (v8 >= *(void *)(v24 + 16))
          {
            __break(1u);
            goto LABEL_24;
          }
          unint64_t v9 = a1;
          swift_retain();
          unint64_t v10 = v8 + 1;
          if (__OFADD__(v8, 1)) {
            goto LABEL_21;
          }
        }
        char v11 = (void *)sub_1C2148F90();
        uint64_t v2 = (uint64_t *)objc_msgSend(v11, sel_scheduleItemIdentifier);

        if (!v2) {
          goto LABEL_15;
        }

        unsigned __int8 v12 = (void *)sub_1C2148F90();
        uint64_t v2 = (uint64_t *)objc_msgSend(v12, sel_scheduledDate);

        if (!v2) {
          break;
        }
        uint64_t v13 = v21;
        sub_1C2147A60();

        uint64_t v2 = (uint64_t *)v23;
        (*v20)(v6, v13, v23);
        (*v22)(v6, 0, 1, v2);
        if ((*v19)(v6, 1, v2) == 1) {
          goto LABEL_14;
        }
        sub_1C1F13B54((uint64_t)v6, &qword_1EBF0B1F0, MEMORY[0x1E4F27928]);
        uint64_t v2 = (uint64_t *)sub_1C2148F90();
        id v14 = objc_msgSend(v2, sel_status);

        if (v14 == (id)4) {
          goto LABEL_15;
        }
        uint64_t v2 = (uint64_t *)sub_1C2148F90();
        id v15 = objc_msgSend(v2, (SEL)&selRef_setAccessibilityLabel_);

        if (v15 == (id)5) {
          goto LABEL_15;
        }
        uint64_t v2 = &v26;
        sub_1C214B820();
        sub_1C214B860();
        sub_1C214B870();
        sub_1C214B830();
LABEL_16:
        ++v8;
        BOOL v16 = v10 == v7;
        a1 = v9;
        if (v16) {
          goto LABEL_22;
        }
      }
      (*v22)(v6, 1, 1, (uint64_t *)v23);
LABEL_14:
      sub_1C1F13B54((uint64_t)v6, &qword_1EBF0B1F0, MEMORY[0x1E4F27928]);
LABEL_15:
      swift_release();
      goto LABEL_16;
    }
  }
  uint64_t v17 = MEMORY[0x1E4FBC860];
LABEL_26:
  swift_bridgeObjectRelease();
  return v17;
}

uint64_t sub_1C209D6FC(unint64_t a1)
{
  unint64_t v1 = a1;
  if (!(a1 >> 62))
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v2) {
      goto LABEL_3;
    }
LABEL_17:
    uint64_t v5 = (void *)MEMORY[0x1E4FBC860];
LABEL_18:
    swift_bridgeObjectRelease();
    uint64_t v20 = sub_1C2037660((uint64_t)v5);
    swift_bridgeObjectRelease();
    return v20;
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_1C214B930();
  uint64_t v2 = result;
  if (!result) {
    goto LABEL_17;
  }
LABEL_3:
  if (v2 >= 1)
  {
    uint64_t v4 = 0;
    unint64_t v22 = v1 & 0xC000000000000001;
    uint64_t v5 = (void *)MEMORY[0x1E4FBC860];
    unint64_t v21 = v1;
    do
    {
      if (v22) {
        MEMORY[0x1C8753960](v4, v1);
      }
      else {
        swift_retain();
      }
      id v6 = (void *)sub_1C2148F90();
      id v7 = objc_msgSend(v6, sel_scheduleItemIdentifier);
      if (v7)
      {
        unint64_t v8 = v7;
        uint64_t v9 = v2;
        uint64_t v10 = sub_1C214A5F0();
        uint64_t v12 = v11;

        id v13 = objc_msgSend(v6, sel_medicationIdentifier);
        uint64_t v14 = sub_1C214A5F0();
        uint64_t v16 = v15;
        swift_release();

        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v5 = sub_1C1F3B5AC(0, v5[2] + 1, 1, v5);
        }
        unint64_t v18 = v5[2];
        unint64_t v17 = v5[3];
        if (v18 >= v17 >> 1) {
          uint64_t v5 = sub_1C1F3B5AC((void *)(v17 > 1), v18 + 1, 1, v5);
        }
        v5[2] = v18 + 1;
        char v19 = &v5[4 * v18];
        v19[4] = v14;
        v19[5] = v16;
        v19[6] = v10;
        v19[7] = v12;
        uint64_t v2 = v9;
        unint64_t v1 = v21;
      }
      else
      {
        swift_release();
      }
      ++v4;
    }
    while (v2 != v4);
    goto LABEL_18;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C209D904(unint64_t a1)
{
  if (!(a1 >> 62))
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v2) {
      goto LABEL_3;
    }
LABEL_17:
    uint64_t v5 = (void *)MEMORY[0x1E4FBC860];
LABEL_18:
    swift_bridgeObjectRelease();
    return (uint64_t)v5;
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_1C214B930();
  uint64_t v2 = result;
  if (!result) {
    goto LABEL_17;
  }
LABEL_3:
  if (v2 >= 1)
  {
    uint64_t v4 = 0;
    uint64_t v5 = (void *)MEMORY[0x1E4FBC860];
    do
    {
      if ((a1 & 0xC000000000000001) != 0) {
        MEMORY[0x1C8753960](v4, a1);
      }
      else {
        swift_retain();
      }
      uint64_t v6 = sub_1C2148FA0();
      if (v6)
      {
        uint64_t v7 = v6;
        uint64_t v8 = sub_1C2148F90();
        swift_release();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v5 = sub_1C1F3B6DC(0, v5[2] + 1, 1, v5);
        }
        unint64_t v10 = v5[2];
        unint64_t v9 = v5[3];
        if (v10 >= v9 >> 1) {
          uint64_t v5 = sub_1C1F3B6DC((void *)(v9 > 1), v10 + 1, 1, v5);
        }
        v5[2] = v10 + 1;
        uint64_t v11 = &v5[3 * v10];
        v11[4] = v8;
        v11[5] = v7;
        *((unsigned char *)v11 + 48) = 1;
      }
      else
      {
        swift_release();
      }
      ++v4;
    }
    while (v2 != v4);
    goto LABEL_18;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C209DA90(unint64_t a1)
{
  uint64_t v12 = MEMORY[0x1E4FBC860];
  if (a1 >> 62)
  {
LABEL_12:
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1C214B930();
    if (v2) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v2)
    {
LABEL_3:
      uint64_t v3 = 4;
      while (1)
      {
        uint64_t v4 = v3 - 4;
        if ((a1 & 0xC000000000000001) != 0)
        {
          uint64_t v5 = MEMORY[0x1C8753960](v3 - 4, a1);
          BOOL v6 = __OFADD__(v4, 1);
          uint64_t v7 = v3 - 3;
          if (v6) {
            goto LABEL_11;
          }
        }
        else
        {
          uint64_t v5 = *(void *)(a1 + 8 * v3);
          swift_retain();
          BOOL v6 = __OFADD__(v4, 1);
          uint64_t v7 = v3 - 3;
          if (v6)
          {
LABEL_11:
            __break(1u);
            goto LABEL_12;
          }
        }
        v11[1] = v5;
        sub_1C2013A90(v11);
        swift_release();
        sub_1C1F7DB38(v11[0]);
        ++v3;
        if (v7 == v2)
        {
          swift_bridgeObjectRelease();
          uint64_t v8 = v12;
          goto LABEL_14;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v8 = MEMORY[0x1E4FBC860];
LABEL_14:
  uint64_t v9 = sub_1C2037660(v8);
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t DayScheduleProvider.init(doseEvents:scheduleItems:timeZoneChange:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  *a4 = a1;
  a4[1] = a2;
  uint64_t v5 = (uint64_t)a4 + *(int *)(type metadata accessor for DayScheduleProvider() + 24);

  return sub_1C209DC84(a3, v5);
}

uint64_t type metadata accessor for DayScheduleProvider()
{
  uint64_t result = qword_1EA2C6880;
  if (!qword_1EA2C6880) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C209DC84(uint64_t a1, uint64_t a2)
{
  sub_1C20A356C(0, &qword_1EA2C67D0, MEMORY[0x1E4F66BF8], MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t DayScheduleProvider.makeLoggableItems(timeZone:)(void *a1)
{
  unint64_t v2 = swift_bridgeObjectRetain();
  uint64_t v3 = sub_1C209D304(v2);
  swift_bridgeObjectRelease();
  unint64_t v4 = swift_bridgeObjectRetain();
  unint64_t v5 = sub_1C209D180(v4);
  uint64_t v6 = sub_1C209D6FC(v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v7 = sub_1C209E170(a1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v8 = swift_bridgeObjectRetain();
  uint64_t v9 = sub_1C20A26C8(v8, v6, v7, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  uint64_t v10 = sub_1C209D904(v3);
  swift_bridgeObjectRelease();
  sub_1C1F7D9C4(v9);
  return v10;
}

uint64_t DayScheduleProvider.makeHistoryItems(ungrouped:)(char a1)
{
  unint64_t v2 = swift_bridgeObjectRetain();
  unint64_t v3 = sub_1C209D180(v2);
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0)
  {
    uint64_t v22 = sub_1C209C440((void (*)(void *__return_ptr, uint64_t *))sub_1C1FED1E8, 0, (unint64_t)sub_1C1FED44C, 0, v3);
    swift_bridgeObjectRelease();
    uint64_t v23 = sub_1C1F385A8(v22);
    swift_bridgeObjectRelease();
    return v23;
  }
  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_1C214B930();
    swift_bridgeObjectRelease();
    if (v4) {
      goto LABEL_4;
    }
LABEL_16:
    swift_bridgeObjectRelease();
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v4) {
    goto LABEL_16;
  }
LABEL_4:
  uint64_t v29 = MEMORY[0x1E4FBC860];
  uint64_t result = sub_1C1F7078C(0, v4 & ~(v4 >> 63), 0);
  if (v4 < 0)
  {
    __break(1u);
    return result;
  }
  uint64_t v6 = 0;
  uint64_t v7 = v29;
  unint64_t v25 = v3 & 0xC000000000000001;
  uint64_t v8 = MEMORY[0x1E4FBC838] + 8;
  long long v24 = xmmword_1C214E170;
  do
  {
    if (v25)
    {
      uint64_t v9 = MEMORY[0x1C8753960](v6, v3);
    }
    else
    {
      uint64_t v9 = *(void *)(v3 + 8 * v6 + 32);
      swift_retain();
    }
    sub_1C1F13CCC(0, (unint64_t *)&qword_1EBF0CA10, v8, MEMORY[0x1E4FBBE00]);
    uint64_t v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = v24;
    *(void *)(v10 + 32) = v9;
    v26[0] = v10;
    sub_1C214A7A0();
    uint64_t v11 = v26[0];
    sub_1C20A356C(0, &qword_1EA2C3260, MEMORY[0x1E4F66C28], MEMORY[0x1E4FBB320]);
    uint64_t v27 = v12;
    uint64_t v28 = &protocol witness table for <A> [A];
    v26[0] = v11;
    uint64_t v29 = v7;
    unint64_t v14 = *(void *)(v7 + 16);
    unint64_t v13 = *(void *)(v7 + 24);
    if (v14 >= v13 >> 1)
    {
      unint64_t v16 = v3;
      sub_1C1F7078C(v13 > 1, v14 + 1, 1);
      uint64_t v15 = v27;
      unint64_t v17 = v28;
    }
    else
    {
      uint64_t v15 = v12;
      unint64_t v16 = v3;
      unint64_t v17 = &protocol witness table for <A> [A];
    }
    ++v6;
    uint64_t v18 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v26, v15);
    MEMORY[0x1F4188790](v18);
    uint64_t v20 = (char *)&v24 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v21 + 16))(v20);
    sub_1C20A09B8(v14, (uint64_t)v20, &v29, v15, (uint64_t)v17);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v26);
    uint64_t v7 = v29;
    unint64_t v3 = v16;
  }
  while (v4 != v6);
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_1C209E170(void *a1)
{
  id v102 = a1;
  unint64_t v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C20A356C(0, &qword_1EBF0B1F0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v3 - 8);
  unint64_t v5 = (char *)&v86 - v4;
  uint64_t v6 = sub_1C2147AC0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v98 = v6;
  uint64_t v99 = v7;
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  char v97 = (char *)&v86 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  uint64_t v96 = (char *)&v86 - v11;
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  BOOL v101 = (char *)&v86 - v13;
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v86 - v14;
  sub_1C20A356C(0, &qword_1EA2C67D0, MEMORY[0x1E4F66BF8], v2);
  uint64_t v17 = MEMORY[0x1F4188790](v16 - 8);
  uint64_t v19 = (char *)&v86 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v21 = (char *)&v86 - v20;
  uint64_t v22 = *(int *)(type metadata accessor for DayScheduleProvider() + 24);
  unint64_t v100 = v1;
  uint64_t v23 = v1 + v22;
  sub_1C209B778(v1 + v22, (uint64_t)v21);
  uint64_t v24 = sub_1C2148F20();
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48);
  if (v26(v21, 1, v24) == 1)
  {
    uint64_t v27 = &qword_1EA2C67D0;
    uint64_t v28 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F66BF8];
    uint64_t v29 = (uint64_t)v21;
LABEL_8:
    sub_1C1F13B54(v29, v27, v28);
    return MEMORY[0x1E4FBC870];
  }
  id v92 = v15;
  id v102 = (id)sub_1C2148F10();
  char v31 = v30;
  uint64_t v32 = *(void (**)(char *, uint64_t))(v25 + 8);
  v32(v21, v24);
  if (v31) {
    return MEMORY[0x1E4FBC870];
  }
  sub_1C209B778(v23, (uint64_t)v19);
  if (v26(v19, 1, v24) == 1)
  {
    sub_1C1F13B54((uint64_t)v19, &qword_1EA2C67D0, MEMORY[0x1E4F66BF8]);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v99 + 56))(v5, 1, 1, v98);
LABEL_7:
    uint64_t v27 = &qword_1EBF0B1F0;
    uint64_t v28 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27928];
    uint64_t v29 = (uint64_t)v5;
    goto LABEL_8;
  }
  sub_1C2148F00();
  v32(v19, v24);
  uint64_t v34 = v98;
  uint64_t v33 = v99;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v99 + 48))(v5, 1, v98) == 1) {
    goto LABEL_7;
  }
  unint64_t v37 = v92;
  (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v92, v5, v34);
  uint64_t v38 = v101;
  sub_1C2147AB0();
  sub_1C20A35D0();
  char v39 = sub_1C214A590();
  char v40 = *(void (**)(char *, uint64_t))(v33 + 8);
  v40(v38, v34);
  uint64_t v41 = v33 + 8;
  if (v39)
  {
    v40(v37, v34);
    return MEMORY[0x1E4FBC870];
  }
  uint64_t v91 = v40;
  unint64_t v42 = *(void *)(v100 + 8);
  uint64_t v105 = MEMORY[0x1E4FBC860];
  unint64_t v87 = v42;
  if (v42 >> 62) {
    goto LABEL_45;
  }
  uint64_t v43 = *(void *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n();
  uint64_t v44 = v92;
  if (v43)
  {
LABEL_15:
    uint64_t v45 = 0;
    BOOL v46 = (uint64_t)v102 < 0;
    if (!__OFSUB__(0, v102)) {
      BOOL v46 = 0;
    }
    BOOL v89 = v46;
    unint64_t v90 = v87 & 0xC000000000000001;
    unint64_t v86 = v87 + 32;
    uint64_t v99 = v41;
    uint64_t v88 = v43;
    while (1)
    {
      if (v90)
      {
        uint64_t v47 = MEMORY[0x1C8753960](v45, v87);
      }
      else
      {
        uint64_t v47 = *(void *)(v86 + 8 * v45);
        swift_retain();
      }
      uint64_t v48 = v97;
      BOOL v49 = __OFADD__(v45, 1);
      uint64_t v50 = v45 + 1;
      if (v49)
      {
        __break(1u);
LABEL_43:
        __break(1u);
LABEL_44:
        __break(1u);
LABEL_45:
        swift_bridgeObjectRetain_n();
        uint64_t v43 = sub_1C214B930();
        uint64_t v44 = v92;
        if (!v43) {
          break;
        }
        goto LABEL_15;
      }
      unint64_t v51 = (void *)sub_1C2149060();
      id v52 = objc_msgSend(v51, sel_scheduledDateTime);
      sub_1C2147A60();

      if (v89) {
        goto LABEL_44;
      }
      uint64_t v94 = v47;
      uint64_t v95 = v50;
      uint64_t v53 = v96;
      sub_1C21479F0();
      uint64_t v54 = v91;
      v91(v48, v34);
      id v55 = objc_msgSend(v51, sel_notificationSent);
      id v93 = v51;
      id v56 = objc_msgSend(v51, sel_doses);
      sub_1C20A3628();
      sub_1C214A780();

      id v57 = objc_allocWithZone(MEMORY[0x1E4F66B50]);
      uint64_t v58 = (void *)sub_1C2147A00();
      char v59 = (void *)sub_1C214A770();
      swift_bridgeObjectRelease();
      id v60 = objc_msgSend(v57, sel_initWithScheduledDateTime_notificationSent_doses_, v58, v55, v59);

      v54(v53, v34);
      id v102 = v60;
      id v61 = objc_msgSend(v60, sel_doses);
      unint64_t v62 = sub_1C214A780();

      if (v62 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v63 = sub_1C214B930();
        swift_bridgeObjectRelease();
        if (!v63)
        {
LABEL_36:
          swift_bridgeObjectRelease();
          uint64_t v65 = MEMORY[0x1E4FBC860];
          goto LABEL_37;
        }
      }
      else
      {
        uint64_t v63 = *(void *)((v62 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (!v63) {
          goto LABEL_36;
        }
      }
      uint64_t v103 = MEMORY[0x1E4FBC860];
      sub_1C1F7074C(0, v63 & ~(v63 >> 63), 0);
      if (v63 < 0) {
        goto LABEL_43;
      }
      uint64_t v64 = 0;
      uint64_t v65 = v103;
      unint64_t v100 = v62 & 0xC000000000000001;
      BOOL v101 = (char *)v62;
      do
      {
        if (v100) {
          id v66 = (id)MEMORY[0x1C8753960](v64, v62);
        }
        else {
          id v66 = *(id *)(v62 + 8 * v64 + 32);
        }
        id v67 = v66;
        id v68 = objc_msgSend(v102, sel_identifier);
        uint64_t v69 = sub_1C214A5F0();
        uint64_t v71 = v70;

        id v72 = objc_msgSend(v67, sel_medicationIdentifier);
        uint64_t v73 = sub_1C214A5F0();
        uint64_t v75 = v74;

        uint64_t v103 = v65;
        unint64_t v77 = *(void *)(v65 + 16);
        unint64_t v76 = *(void *)(v65 + 24);
        if (v77 >= v76 >> 1)
        {
          sub_1C1F7074C(v76 > 1, v77 + 1, 1);
          uint64_t v65 = v103;
        }
        ++v64;
        *(void *)(v65 + 16) = v77 + 1;
        uint64_t v78 = (void *)(v65 + 32 * v77);
        v78[4] = v73;
        v78[5] = v75;
        void v78[6] = v69;
        v78[7] = v71;
        unint64_t v62 = (unint64_t)v101;
      }
      while (v63 != v64);
      swift_bridgeObjectRelease();
LABEL_37:
      sub_1C2038198();
      uint64_t v104 = sub_1C214AA70();
      uint64_t v79 = *(void *)(v65 + 16);
      if (v79)
      {
        uint64_t v80 = (uint64_t *)(v65 + 56);
        do
        {
          uint64_t v81 = *(v80 - 3);
          uint64_t v82 = *(v80 - 2);
          uint64_t v83 = *(v80 - 1);
          uint64_t v84 = *v80;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1C208DC08(&v103, v81, v82, v83, v84);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v80 += 4;
          --v79;
        }
        while (v79);
      }

      swift_bridgeObjectRelease();
      swift_release();

      sub_1C1F7D5A8(v104);
      uint64_t v45 = v95;
      uint64_t v34 = v98;
      uint64_t v41 = v99;
      uint64_t v44 = v92;
      if (v95 == v88)
      {
        swift_bridgeObjectRelease_n();
        uint64_t v85 = v105;
        goto LABEL_47;
      }
    }
  }
  swift_bridgeObjectRelease_n();
  uint64_t v85 = MEMORY[0x1E4FBC860];
LABEL_47:
  uint64_t v35 = sub_1C2037660(v85);
  swift_bridgeObjectRelease();
  v91(v44, v34);
  return v35;
}

uint64_t DayScheduleProvider.isDoneForToday.getter()
{
  uint64_t v1 = type metadata accessor for DayScheduleProvider();
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (uint64_t *)((char *)&v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v4 = *(void *)(v0 + 8);
  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_1C214B930();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  sub_1C209AFB4(v0, (uint64_t)v3);
  if (v5)
  {
    if (*v3 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v6 = sub_1C214B930();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v6 = *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    sub_1C20A29A0((uint64_t)v3);
    if (!v6)
    {
      char v7 = 0;
      return v7 & 1;
    }
  }
  else
  {
    sub_1C20A29A0((uint64_t)v3);
  }
  unint64_t v8 = swift_bridgeObjectRetain();
  uint64_t v9 = sub_1C209DA90(v8);
  swift_bridgeObjectRelease();
  unint64_t v10 = swift_bridgeObjectRetain();
  unint64_t v11 = sub_1C209D180(v10);
  uint64_t v12 = sub_1C209D6FC(v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v13 = swift_bridgeObjectRetain();
  unint64_t v14 = sub_1C209D304(v13);
  uint64_t v15 = sub_1C209D6FC(v14);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v12 + 16) && !*(void *)(v15 + 16))
  {
    uint64_t v16 = sub_1C209ECE4(v15, v12);
    char v7 = sub_1C209FF64(v16, v9);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v7 = 0;
  }
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1C209ECE4(uint64_t result, uint64_t a2)
{
  uint64_t v2 = result;
  int64_t v3 = 0;
  uint64_t v20 = a2;
  uint64_t v4 = result + 56;
  uint64_t v5 = 1 << *(unsigned char *)(result + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(result + 56);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      unint64_t v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    int64_t v16 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v16 >= v8) {
      goto LABEL_23;
    }
    unint64_t v17 = *(void *)(v4 + 8 * v16);
    ++v3;
    if (!v17)
    {
      int64_t v3 = v16 + 1;
      if (v16 + 1 >= v8) {
        goto LABEL_23;
      }
      unint64_t v17 = *(void *)(v4 + 8 * v3);
      if (!v17)
      {
        int64_t v3 = v16 + 2;
        if (v16 + 2 >= v8) {
          goto LABEL_23;
        }
        unint64_t v17 = *(void *)(v4 + 8 * v3);
        if (!v17)
        {
          int64_t v3 = v16 + 3;
          if (v16 + 3 >= v8) {
            goto LABEL_23;
          }
          unint64_t v17 = *(void *)(v4 + 8 * v3);
          if (!v17) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v7 = (v17 - 1) & v17;
    unint64_t v10 = __clz(__rbit64(v17)) + (v3 << 6);
LABEL_5:
    unint64_t v11 = (uint64_t *)(*(void *)(v2 + 48) + 32 * v10);
    uint64_t v12 = *v11;
    uint64_t v13 = v11[1];
    uint64_t v14 = v11[2];
    uint64_t v15 = v11[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C208DC08(&v19, v12, v13, v14, v15);
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v18 = v16 + 4;
  if (v18 >= v8)
  {
LABEL_23:
    swift_release();
    return v20;
  }
  unint64_t v17 = *(void *)(v4 + 8 * v18);
  if (v17)
  {
    int64_t v3 = v18;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v3 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v3 >= v8) {
      goto LABEL_23;
    }
    unint64_t v17 = *(void *)(v4 + 8 * v3);
    ++v18;
    if (v17) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1C209EE88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v44 = a3;
  v43[3] = a5;
  v43[4] = a4;
  uint64_t v45 = a2;
  uint64_t v8 = sub_1C2147AC0();
  MEMORY[0x1F4188790](v8 - 8);
  unint64_t v10 = (char *)v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1C2149200();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  v43[2] = a1;
  v15(v14, a1, v11);
  int64_t v16 = (void *)sub_1C21491F0();
  id v17 = objc_msgSend(v16, sel_semanticIdentifier);

  id v18 = objc_msgSend(v17, sel_stringValue);
  uint64_t v19 = sub_1C214A5F0();
  uint64_t v21 = v20;

  uint64_t v22 = sub_1C21491D0();
  uint64_t v24 = v23;
  uint64_t v25 = v11;
  uint64_t v26 = v45;
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v25);
  if (sub_1C208ACB4(v19, v21, v22, v24, v26))
  {
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)a6 = 0;
    *(void *)(a6 + 8) = 0;
    *(unsigned char *)(a6 + 16) = -1;
    return result;
  }
  v43[1] = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v28 = swift_bridgeObjectRetain();
  uint64_t v29 = sub_1C20A0C10(v28, v19, v21);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v30 = *(void *)(sub_1C20A0280(v44, v29) + 16);
  swift_release();
  if (v30)
  {
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
LABEL_6:
    *(void *)a6 = 0;
    *(void *)(a6 + 8) = 0;
    *(unsigned char *)(a6 + 16) = -1;
    return result;
  }
  unint64_t v31 = swift_bridgeObjectRetain();
  unint64_t v32 = sub_1C209D304(v31);
  uint64_t v33 = sub_1C209D6FC(v32);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v34 = sub_1C208ACB4(v19, v21, v22, v24, v33);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (v34) {
    goto LABEL_6;
  }
  uint64_t v45 = sub_1C21491D0();
  uint64_t v35 = (void *)sub_1C2149060();
  id v36 = objc_msgSend(v35, sel_scheduledDateTime);

  sub_1C2147A60();
  unint64_t v37 = (void *)sub_1C21491E0();
  id v38 = objc_msgSend(v37, sel_medicationIdentifier);

  sub_1C214A5F0();
  char v39 = (void *)sub_1C21491E0();
  id v40 = objc_msgSend(v39, sel_dose);

  sub_1C214A9A0();
  uint64_t v41 = (void *)sub_1C21491E0();
  objc_msgSend(v41, sel_isLastScheduledDose);

  sub_1C2148EB0();
  swift_allocObject();
  uint64_t v42 = sub_1C2148E80();
  uint64_t result = sub_1C21491F0();
  *(void *)a6 = v42;
  *(void *)(a6 + 8) = result;
  *(unsigned char *)(a6 + 16) = 0;
  return result;
}

void sub_1C209F2A8(unint64_t a1, uint64_t a2)
{
  int64_t v3 = a1;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (a1 + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t v8 = sub_1C214B650();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        id v10 = *(id *)(*(void *)(a2 + 48) + 8 * v6);
        uint64_t v11 = sub_1C214B210();

        unint64_t v12 = v11 & v7;
        if (v3 >= (uint64_t)v9)
        {
          if (v12 >= v9 && v3 >= (uint64_t)v12)
          {
LABEL_16:
            uint64_t v15 = *(void *)(a2 + 48);
            int64_t v16 = (void *)(v15 + 8 * v3);
            id v17 = (void *)(v15 + 8 * v6);
            if (v3 != v6 || v16 >= v17 + 1) {
              *int64_t v16 = *v17;
            }
            uint64_t v18 = *(void *)(a2 + 56);
            uint64_t v19 = (void *)(v18 + 8 * v3);
            uint64_t v20 = (void *)(v18 + 8 * v6);
            if (v3 != v6 || (int64_t v3 = v6, v19 >= v20 + 1))
            {
              void *v19 = *v20;
              int64_t v3 = v6;
            }
          }
        }
        else if (v12 >= v9 || v3 >= (uint64_t)v12)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v21 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v22 = *v21;
    uint64_t v23 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v21 = (uint64_t *)(v4 + 8 * (a1 >> 6));
    uint64_t v23 = *v21;
    uint64_t v22 = (-1 << a1) - 1;
  }
  *uint64_t v21 = v23 & v22;
  uint64_t v24 = *(void *)(a2 + 16);
  BOOL v25 = __OFSUB__(v24, 1);
  uint64_t v26 = v24 - 1;
  if (v25)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v26;
    ++*(_DWORD *)(a2 + 36);
  }
}

unint64_t sub_1C209F45C(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_1C214B650();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_1C214BB30();
        swift_bridgeObjectRetain();
        sub_1C214A690();
        uint64_t v9 = sub_1C214BB80();
        uint64_t result = swift_bridgeObjectRelease();
        unint64_t v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(a2 + 48);
          unint64_t v12 = (_OWORD *)(v11 + 16 * v3);
          uint64_t v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1) {
            *unint64_t v12 = *v13;
          }
          uint64_t v14 = *(void *)(a2 + 56);
          uint64_t v15 = (void *)(v14 + 8 * v3);
          int64_t v16 = (void *)(v14 + 8 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v15 >= v16 + 1))
          {
            *uint64_t v15 = *v16;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    id v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v18 = *v17;
    uint64_t v19 = (-1 << v3) - 1;
  }
  else
  {
    id v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v19 = *v17;
    uint64_t v18 = (-1 << result) - 1;
  }
  *id v17 = v19 & v18;
  uint64_t v20 = *(void *)(a2 + 16);
  BOOL v21 = __OFSUB__(v20, 1);
  uint64_t v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

uint64_t sub_1C209F634(unint64_t *__src, unint64_t *a2, unint64_t a3, unint64_t *__dst, uint64_t (*a5)(uint64_t *, uint64_t *))
{
  uint64_t v7 = a2;
  unint64_t v8 = __src;
  int64_t v9 = (char *)a2 - (char *)__src;
  int64_t v10 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0) {
    int64_t v10 = (char *)a2 - (char *)__src;
  }
  uint64_t v11 = v10 >> 3;
  uint64_t v12 = a3 - (void)a2;
  uint64_t v13 = a3 - (void)a2 + 7;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v13 = a3 - (void)a2;
  }
  uint64_t v14 = v13 >> 3;
  id v40 = __src;
  char v39 = __dst;
  id v36 = __dst;
  if (v11 >= v13 >> 3)
  {
    if (v12 >= -7)
    {
      uint64_t v22 = v5;
      if (__dst != a2 || &a2[v14] <= __dst)
      {
        memmove(__dst, a2, 8 * v14);
        __dst = v36;
      }
      uint64_t v23 = &__dst[v14];
      id v38 = v23;
      id v40 = v7;
      if (v8 >= v7 || v12 < 8) {
        goto LABEL_47;
      }
      uint64_t v24 = (unint64_t *)(a3 - 8);
      BOOL v25 = v7;
      uint64_t v35 = v8;
      while (1)
      {
        uint64_t v26 = v23;
        unint64_t v28 = *--v23;
        unint64_t v27 = v28;
        unint64_t v29 = *--v25;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        char v30 = sub_1C209CF20(v27, v29, a5);
        if (v22) {
          goto LABEL_46;
        }
        char v31 = v30;
        unint64_t v32 = v24 + 1;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v31)
        {
          uint64_t v33 = v36;
          if (v32 != v7 || v24 >= v7) {
            *uint64_t v24 = *v25;
          }
          id v40 = v25;
          uint64_t v22 = 0;
          uint64_t v23 = v26;
        }
        else
        {
          id v38 = v23;
          uint64_t v33 = v36;
          if (v32 < v26 || v24 >= v26 || v32 != v26) {
            *uint64_t v24 = *v23;
          }
          BOOL v25 = v7;
          uint64_t v22 = 0;
        }
        if (v25 > v35)
        {
          --v24;
          uint64_t v7 = v25;
          if (v23 > v33) {
            continue;
          }
        }
        goto LABEL_47;
      }
    }
  }
  else if (v9 >= -7)
  {
    if (__dst != __src || &__src[v11] <= __dst)
    {
      memmove(__dst, __src, 8 * v11);
      __dst = v36;
    }
    uint64_t v15 = &__dst[v11];
    id v38 = v15;
    if ((unint64_t)v7 >= a3 || v9 < 8) {
      goto LABEL_47;
    }
    while (1)
    {
      unint64_t v16 = *v7;
      id v17 = __dst;
      unint64_t v18 = *__dst;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      char v19 = sub_1C209CF20(v16, v18, a5);
      if (v5) {
        break;
      }
      char v20 = v19;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v20)
      {
        BOOL v21 = v7 + 1;
        if (v8 < v7 || v8 >= v21 || v8 != v7) {
          *unint64_t v8 = *v7;
        }
        __dst = v17;
      }
      else
      {
        if (v8 != v17) {
          *unint64_t v8 = *v17;
        }
        __dst = v17 + 1;
        char v39 = v17 + 1;
        BOOL v21 = v7;
      }
      id v40 = ++v8;
      if (__dst < v15)
      {
        uint64_t v7 = v21;
        if ((unint64_t)v21 < a3) {
          continue;
        }
      }
      goto LABEL_47;
    }
LABEL_46:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_47:
    sub_1C20FAFD8(&v40, &v39, &v38);
    return 1;
  }
  uint64_t result = sub_1C214B990();
  __break(1u);
  return result;
}

uint64_t (*sub_1C209F978(void *a1, uint64_t a2, uint64_t a3))()
{
  unint64_t v6 = malloc(0x58uLL);
  *a1 = v6;
  v6[8] = a3;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  swift_bridgeObjectRetain();
  v6[9] = sub_1C209FE48(v6);
  v6[10] = sub_1C209FB48(v6 + 4, a2, a3, isUniquelyReferenced_nonNull_native);
  return sub_1C209FA24;
}

uint64_t (*sub_1C209FA28(void *a1, uint64_t a2, uint64_t a3))()
{
  unint64_t v6 = malloc(0x58uLL);
  *a1 = v6;
  v6[8] = a3;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  swift_bridgeObjectRetain();
  v6[9] = sub_1C209FE78(v6);
  v6[10] = sub_1C209FCA8(v6 + 4, a2, a3, isUniquelyReferenced_nonNull_native);
  return sub_1C209FA24;
}

void sub_1C209FAD4(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  uint64_t v2 = *(void (**)(void *, void))(*(void *)a1 + 72);
  (*(void (**)(void))(*(void *)a1 + 80))();
  swift_bridgeObjectRelease();
  v2(v1, 0);

  free(v1);
}

void (*sub_1C209FB48(void *a1, uint64_t a2, uint64_t a3, char a4))(void *a1, uint64_t a2)
{
  uint64_t v5 = v4;
  int64_t v10 = malloc(0x30uLL);
  *a1 = v10;
  void v10[2] = a3;
  v10[3] = v4;
  v10[1] = a2;
  uint64_t v11 = *v4;
  unint64_t v13 = sub_1C1F4B4D0(a2, a3);
  *((unsigned char *)v10 + 40) = v12 & 1;
  uint64_t v14 = *(void *)(v11 + 16);
  BOOL v15 = (v12 & 1) == 0;
  uint64_t v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
  }
  else
  {
    char v17 = v12;
    uint64_t v18 = *(void *)(v11 + 24);
    if (v18 >= v16 && (a4 & 1) != 0)
    {
LABEL_7:
      v10[4] = v13;
      if (v17)
      {
LABEL_8:
        uint64_t v19 = *(void *)(*(void *)(*v5 + 56) + 8 * v13);
LABEL_12:
        *int64_t v10 = v19;
        return sub_1C209FC90;
      }
LABEL_11:
      uint64_t v19 = 0;
      goto LABEL_12;
    }
    if (v18 >= v16 && (a4 & 1) == 0)
    {
      sub_1C1FACDA8();
      goto LABEL_7;
    }
    sub_1C1FABF50(v16, a4 & 1);
    unint64_t v20 = sub_1C1F4B4D0(a2, a3);
    if ((v17 & 1) == (v21 & 1))
    {
      unint64_t v13 = v20;
      v10[4] = v20;
      if (v17) {
        goto LABEL_8;
      }
      goto LABEL_11;
    }
  }
  uint64_t result = (void (*)(void *, uint64_t))sub_1C214BAB0();
  __break(1u);
  return result;
}

void sub_1C209FC90(void *a1, uint64_t a2)
{
}

void (*sub_1C209FCA8(void *a1, uint64_t a2, uint64_t a3, char a4))(void *a1, uint64_t a2)
{
  uint64_t v5 = v4;
  int64_t v10 = malloc(0x30uLL);
  *a1 = v10;
  void v10[2] = a3;
  v10[3] = v4;
  v10[1] = a2;
  uint64_t v11 = *v4;
  unint64_t v13 = sub_1C1F4B4D0(a2, a3);
  *((unsigned char *)v10 + 40) = v12 & 1;
  uint64_t v14 = *(void *)(v11 + 16);
  BOOL v15 = (v12 & 1) == 0;
  uint64_t v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
  }
  else
  {
    char v17 = v12;
    uint64_t v18 = *(void *)(v11 + 24);
    if (v18 >= v16 && (a4 & 1) != 0)
    {
LABEL_7:
      v10[4] = v13;
      if (v17)
      {
LABEL_8:
        uint64_t v19 = *(void *)(*(void *)(*v5 + 56) + 8 * v13);
LABEL_12:
        *int64_t v10 = v19;
        return sub_1C209FC90;
      }
LABEL_11:
      uint64_t v19 = 0;
      goto LABEL_12;
    }
    if (v18 >= v16 && (a4 & 1) == 0)
    {
      sub_1C1FAD0E8();
      goto LABEL_7;
    }
    sub_1C1FAC530(v16, a4 & 1);
    unint64_t v20 = sub_1C1F4B4D0(a2, a3);
    if ((v17 & 1) == (v21 & 1))
    {
      unint64_t v13 = v20;
      v10[4] = v20;
      if (v17) {
        goto LABEL_8;
      }
      goto LABEL_11;
    }
  }
  uint64_t result = (void (*)(void *, uint64_t))sub_1C214BAB0();
  __break(1u);
  return result;
}

void sub_1C209FDF0(void *a1, uint64_t a2, void (*a3)(void, void, void, void, void, void))
{
  int64_t v3 = (void *)*a1;
  a3(*a1, *(unsigned __int8 *)(*a1 + 40), *(void *)(*a1 + 24), *(void *)(*a1 + 32), *(void *)(*a1 + 8), *(void *)(*a1 + 16));
  swift_bridgeObjectRelease();

  free(v3);
}

uint64_t (*sub_1C209FE48(void *a1))()
{
  *a1 = *v1;
  a1[1] = v1;
  *uint64_t v1 = 0x8000000000000000;
  return sub_1C20A3668;
}

uint64_t (*sub_1C209FE78(void *a1))(uint64_t result)
{
  *a1 = *v1;
  a1[1] = v1;
  *uint64_t v1 = 0x8000000000000000;
  return sub_1C209FEA8;
}

uint64_t sub_1C209FEA8(uint64_t result)
{
  **(void **)(result + 8) = *(void *)result;
  return result;
}

uint64_t sub_1C209FEB4(uint64_t *a1, char a2, uint64_t *a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8 = *a1;
  if (*a1)
  {
    if (a2)
    {
      *(void *)(*(void *)(*a3 + 56) + 8 * a4) = v8;
    }
    else
    {
      sub_1C201F27C(a4, a5, a6, v8, *a3);
      swift_bridgeObjectRetain();
    }
  }
  else if (a2)
  {
    swift_arrayDestroy();
    sub_1C209F45C(a4, *a3);
  }

  return swift_bridgeObjectRetain();
}

uint64_t sub_1C209FF64(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 16) < *(void *)(a2 + 16)) {
    return 0;
  }
  uint64_t v3 = a2;
  uint64_t v4 = a1;
  uint64_t v36 = a2 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  if (-v5 < 64) {
    uint64_t v6 = ~(-1 << -(char)v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(a2 + 56);
  int64_t v32 = (unint64_t)(63 - v5) >> 6;
  uint64_t v8 = a1 + 56;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v10 = 0;
  uint64_t v33 = v3;
  uint64_t v37 = v4;
  if (!v7) {
    goto LABEL_9;
  }
LABEL_7:
  uint64_t v11 = (v7 - 1) & v7;
  unint64_t v12 = __clz(__rbit64(v7)) | (v10 << 6);
  int64_t v13 = v10;
  if (!*(void *)(v4 + 16))
  {
LABEL_41:
    uint64_t v2 = 0;
LABEL_39:
    sub_1C1F495B8();
    return v2;
  }
  while (1)
  {
    unint64_t v34 = v11;
    int64_t v35 = v13;
    char v17 = (uint64_t *)(*(void *)(v3 + 48) + 32 * v12);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = v17[2];
    uint64_t v21 = v17[3];
    sub_1C214BB30();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C214A690();
    sub_1C214A690();
    uint64_t v22 = sub_1C214BB80();
    uint64_t v23 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v24 = v22 & ~v23;
    if (((*(void *)(v8 + ((v24 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v24) & 1) == 0)
    {
LABEL_38:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v2 = 0;
      goto LABEL_39;
    }
    uint64_t v25 = ~v23;
    uint64_t v26 = *(void *)(v37 + 48);
    while (1)
    {
      unint64_t v27 = (void *)(v26 + 32 * v24);
      uint64_t v28 = v27[2];
      uint64_t v29 = v27[3];
      BOOL v30 = *v27 == v19 && v27[1] == v18;
      if (v30 || (sub_1C214BA80() & 1) != 0)
      {
        BOOL v31 = v28 == v20 && v29 == v21;
        if (v31 || (sub_1C214BA80() & 1) != 0) {
          break;
        }
      }
      unint64_t v24 = (v24 + 1) & v25;
      if (((*(void *)(v8 + ((v24 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v24) & 1) == 0) {
        goto LABEL_38;
      }
    }
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    unint64_t v7 = v34;
    int64_t v10 = v35;
    uint64_t v3 = v33;
    uint64_t v4 = v37;
    if (v34) {
      goto LABEL_7;
    }
LABEL_9:
    int64_t v14 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_44;
    }
    if (v14 >= v32) {
      goto LABEL_42;
    }
    unint64_t v15 = *(void *)(v36 + 8 * v14);
    int64_t v13 = v10 + 1;
    if (!v15)
    {
      int64_t v13 = v10 + 2;
      if (v10 + 2 >= v32) {
        goto LABEL_42;
      }
      unint64_t v15 = *(void *)(v36 + 8 * v13);
      if (!v15)
      {
        int64_t v13 = v10 + 3;
        if (v10 + 3 >= v32) {
          goto LABEL_42;
        }
        unint64_t v15 = *(void *)(v36 + 8 * v13);
        if (!v15) {
          break;
        }
      }
    }
LABEL_22:
    uint64_t v11 = (v15 - 1) & v15;
    unint64_t v12 = __clz(__rbit64(v15)) + (v13 << 6);
    if (!*(void *)(v4 + 16)) {
      goto LABEL_41;
    }
  }
  int64_t v16 = v10 + 4;
  if (v10 + 4 >= v32)
  {
LABEL_42:
    uint64_t v2 = 1;
    goto LABEL_39;
  }
  unint64_t v15 = *(void *)(v36 + 8 * v16);
  if (v15)
  {
    int64_t v13 = v10 + 4;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v13 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v13 >= v32) {
      goto LABEL_42;
    }
    unint64_t v15 = *(void *)(v36 + 8 * v13);
    ++v16;
    if (v15) {
      goto LABEL_22;
    }
  }
LABEL_44:
  __break(1u);
  return result;
}

uint64_t sub_1C20A0280(uint64_t isStackAllocationSafe, uint64_t a2)
{
  uint64_t v3 = isStackAllocationSafe;
  v10[1] = *MEMORY[0x1E4F143B8];
  char v4 = *(unsigned char *)(a2 + 32);
  unint64_t v5 = (unint64_t)((1 << v4) + 63) >> 6;
  size_t v6 = 8 * v5;
  if ((v4 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1F4188790](isStackAllocationSafe);
    bzero((char *)v10 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0), v6);
    uint64_t v7 = sub_1C20A0408((uint64_t)v10 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0), v5, a2, v3);
    swift_release();
  }
  else
  {
    uint64_t v8 = (void *)swift_slowAlloc();
    bzero(v8, v6);
    uint64_t v7 = sub_1C20A0408((uint64_t)v8, v5, a2, v3);
    swift_release();
    MEMORY[0x1C8754730](v8, -1, -1);
  }
  return v7;
}

uint64_t sub_1C20A0408(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  uint64_t v5 = a3;
  char v59 = (unint64_t *)result;
  if (*(void *)(a4 + 16) < *(void *)(a3 + 16))
  {
    int64_t v6 = 0;
    uint64_t v57 = a4 + 56;
    uint64_t v7 = 1 << *(unsigned char *)(a4 + 32);
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & *(void *)(a4 + 56);
    int64_t v60 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v62 = 0;
    uint64_t v69 = a3 + 56;
    do
    {
      while (1)
      {
        if (v9)
        {
          uint64_t v63 = (v9 - 1) & v9;
          int64_t v65 = v6;
          unint64_t v10 = __clz(__rbit64(v9)) | (v6 << 6);
        }
        else
        {
          int64_t v11 = v6 + 1;
          if (__OFADD__(v6, 1))
          {
            __break(1u);
LABEL_78:
            __break(1u);
            goto LABEL_79;
          }
          if (v11 >= v60) {
            goto LABEL_76;
          }
          unint64_t v12 = *(void *)(v57 + 8 * v11);
          int64_t v13 = v6 + 1;
          if (!v12)
          {
            int64_t v13 = v6 + 2;
            if (v6 + 2 >= v60) {
              goto LABEL_76;
            }
            unint64_t v12 = *(void *)(v57 + 8 * v13);
            if (!v12)
            {
              int64_t v13 = v6 + 3;
              if (v6 + 3 >= v60) {
                goto LABEL_76;
              }
              unint64_t v12 = *(void *)(v57 + 8 * v13);
              if (!v12)
              {
                uint64_t v14 = v6 + 4;
                if (v6 + 4 >= v60)
                {
LABEL_76:
                  swift_retain();
                  return sub_1C2058B98(v59, a2, v62, v5);
                }
                unint64_t v12 = *(void *)(v57 + 8 * v14);
                if (!v12)
                {
                  while (1)
                  {
                    int64_t v13 = v14 + 1;
                    if (__OFADD__(v14, 1)) {
                      break;
                    }
                    if (v13 >= v60) {
                      goto LABEL_76;
                    }
                    unint64_t v12 = *(void *)(v57 + 8 * v13);
                    ++v14;
                    if (v12) {
                      goto LABEL_22;
                    }
                  }
LABEL_79:
                  __break(1u);
                  goto LABEL_80;
                }
                int64_t v13 = v6 + 4;
              }
            }
          }
LABEL_22:
          uint64_t v63 = (v12 - 1) & v12;
          int64_t v65 = v13;
          unint64_t v10 = __clz(__rbit64(v12)) + (v13 << 6);
        }
        unint64_t v15 = (uint64_t *)(*(void *)(v4 + 48) + 32 * v10);
        uint64_t v16 = *v15;
        uint64_t v17 = v15[1];
        uint64_t v18 = v15[2];
        uint64_t v19 = v15[3];
        sub_1C214BB30();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1C214A690();
        sub_1C214A690();
        uint64_t v20 = sub_1C214BB80();
        uint64_t v21 = -1 << *(unsigned char *)(v5 + 32);
        unint64_t v22 = v20 & ~v21;
        if ((*(void *)(v69 + ((v22 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v22)) {
          break;
        }
LABEL_6:
        swift_bridgeObjectRelease();
        uint64_t result = swift_bridgeObjectRelease();
        uint64_t v4 = a4;
        uint64_t v5 = a3;
        unint64_t v9 = v63;
        int64_t v6 = v65;
      }
      uint64_t v23 = ~v21;
      uint64_t v24 = *(void *)(a3 + 48);
      while (1)
      {
        uint64_t v25 = (void *)(v24 + 32 * v22);
        uint64_t v26 = v25[2];
        uint64_t v27 = v25[3];
        BOOL v28 = *v25 == v16 && v25[1] == v17;
        if (v28 || (sub_1C214BA80() & 1) != 0)
        {
          BOOL v29 = v26 == v18 && v27 == v19;
          if (v29 || (sub_1C214BA80() & 1) != 0) {
            break;
          }
        }
        unint64_t v22 = (v22 + 1) & v23;
        if (((*(void *)(v69 + ((v22 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v22) & 1) == 0) {
          goto LABEL_6;
        }
      }
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      *(unint64_t *)((char *)v59 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
      unint64_t v9 = v63;
      BOOL v30 = __OFADD__(v62++, 1);
      uint64_t v4 = a4;
      uint64_t v5 = a3;
      int64_t v6 = v65;
    }
    while (!v30);
    __break(1u);
  }
  uint64_t v62 = 0;
  int64_t v31 = 0;
  uint64_t v56 = v5 + 56;
  uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
  if (v32 < 64) {
    uint64_t v33 = ~(-1 << v32);
  }
  else {
    uint64_t v33 = -1;
  }
  unint64_t v34 = v33 & *(void *)(v5 + 56);
  int64_t v58 = (unint64_t)(v32 + 63) >> 6;
  uint64_t v70 = v4 + 56;
  while (v34)
  {
    uint64_t v64 = (v34 - 1) & v34;
    int64_t v66 = v31;
    unint64_t v35 = __clz(__rbit64(v34)) | (v31 << 6);
LABEL_60:
    unint64_t v61 = v35;
    id v40 = (uint64_t *)(*(void *)(v5 + 48) + 32 * v35);
    uint64_t v41 = *v40;
    uint64_t v42 = v40[1];
    uint64_t v43 = v40[2];
    uint64_t v44 = v40[3];
    sub_1C214BB30();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C214A690();
    sub_1C214A690();
    uint64_t v45 = sub_1C214BB80();
    uint64_t v46 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v47 = v45 & ~v46;
    if ((*(void *)(v70 + ((v47 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v47))
    {
      uint64_t v48 = ~v46;
      uint64_t v49 = *(void *)(a4 + 48);
      while (1)
      {
        uint64_t v50 = (void *)(v49 + 32 * v47);
        uint64_t v51 = v50[2];
        uint64_t v52 = v50[3];
        BOOL v53 = *v50 == v41 && v50[1] == v42;
        if (v53 || (sub_1C214BA80() & 1) != 0)
        {
          BOOL v54 = v51 == v43 && v52 == v44;
          if (v54 || (sub_1C214BA80() & 1) != 0) {
            break;
          }
        }
        unint64_t v47 = (v47 + 1) & v48;
        if (((*(void *)(v70 + ((v47 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v47) & 1) == 0) {
          goto LABEL_43;
        }
      }
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      *(unint64_t *)((char *)v59 + ((v61 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v61;
      unint64_t v34 = v64;
      BOOL v30 = __OFADD__(v62++, 1);
      uint64_t v4 = a4;
      uint64_t v5 = a3;
      int64_t v31 = v66;
      if (v30)
      {
        __break(1u);
        goto LABEL_76;
      }
    }
    else
    {
LABEL_43:
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v4 = a4;
      uint64_t v5 = a3;
      unint64_t v34 = v64;
      int64_t v31 = v66;
    }
  }
  int64_t v36 = v31 + 1;
  if (__OFADD__(v31, 1)) {
    goto LABEL_78;
  }
  if (v36 >= v58) {
    goto LABEL_76;
  }
  unint64_t v37 = *(void *)(v56 + 8 * v36);
  int64_t v38 = v31 + 1;
  if (v37) {
    goto LABEL_59;
  }
  int64_t v38 = v31 + 2;
  if (v31 + 2 >= v58) {
    goto LABEL_76;
  }
  unint64_t v37 = *(void *)(v56 + 8 * v38);
  if (v37) {
    goto LABEL_59;
  }
  int64_t v38 = v31 + 3;
  if (v31 + 3 >= v58) {
    goto LABEL_76;
  }
  unint64_t v37 = *(void *)(v56 + 8 * v38);
  if (v37)
  {
LABEL_59:
    uint64_t v64 = (v37 - 1) & v37;
    int64_t v66 = v38;
    unint64_t v35 = __clz(__rbit64(v37)) + (v38 << 6);
    goto LABEL_60;
  }
  uint64_t v39 = v31 + 4;
  if (v31 + 4 >= v58) {
    goto LABEL_76;
  }
  unint64_t v37 = *(void *)(v56 + 8 * v39);
  if (v37)
  {
    int64_t v38 = v31 + 4;
    goto LABEL_59;
  }
  while (1)
  {
    int64_t v38 = v39 + 1;
    if (__OFADD__(v39, 1)) {
      break;
    }
    if (v38 >= v58) {
      goto LABEL_76;
    }
    unint64_t v37 = *(void *)(v56 + 8 * v38);
    ++v39;
    if (v37) {
      goto LABEL_59;
    }
  }
LABEL_80:
  __break(1u);
  return result;
}

uint64_t sub_1C20A09B8(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v13 = a4;
  uint64_t v14 = a5;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v12);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(boxed_opaque_existential_1, a2, a4);
  uint64_t v10 = *a3;
  *(void *)(v10 + 16) = a1 + 1;
  return sub_1C1F31280(&v12, v10 + 40 * a1 + 32);
}

uint64_t sub_1C20A0A50(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v24 = (unint64_t *)result;
  uint64_t v8 = 0;
  int64_t v9 = 0;
  uint64_t v10 = a3 + 56;
  uint64_t v11 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(a3 + 56);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (v13)
  {
    unint64_t v16 = __clz(__rbit64(v13));
    v13 &= v13 - 1;
    unint64_t v17 = v16 | (v9 << 6);
LABEL_21:
    uint64_t v21 = (uint64_t *)(*(void *)(a3 + 48) + 32 * v17);
    uint64_t result = *v21;
    if (*v21 != a4 || v21[1] != a5)
    {
      uint64_t result = sub_1C214BA80();
      if ((result & 1) == 0) {
        continue;
      }
    }
    *(unint64_t *)((char *)v24 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    if (__OFADD__(v8++, 1)) {
      goto LABEL_30;
    }
  }
  int64_t v18 = v9 + 1;
  if (__OFADD__(v9, 1))
  {
    __break(1u);
    goto LABEL_29;
  }
  if (v18 >= v14) {
    goto LABEL_27;
  }
  unint64_t v19 = *(void *)(v10 + 8 * v18);
  ++v9;
  if (v19) {
    goto LABEL_20;
  }
  int64_t v9 = v18 + 1;
  if (v18 + 1 >= v14) {
    goto LABEL_27;
  }
  unint64_t v19 = *(void *)(v10 + 8 * v9);
  if (v19) {
    goto LABEL_20;
  }
  int64_t v9 = v18 + 2;
  if (v18 + 2 >= v14) {
    goto LABEL_27;
  }
  unint64_t v19 = *(void *)(v10 + 8 * v9);
  if (v19)
  {
LABEL_20:
    unint64_t v13 = (v19 - 1) & v19;
    unint64_t v17 = __clz(__rbit64(v19)) + (v9 << 6);
    goto LABEL_21;
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v14)
  {
LABEL_27:
    swift_retain();
    return sub_1C2058B98(v24, a2, v8, a3);
  }
  unint64_t v19 = *(void *)(v10 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v14) {
      goto LABEL_27;
    }
    unint64_t v19 = *(void *)(v10 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_20;
    }
  }
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1C20A0C10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v15[1] = *MEMORY[0x1E4F143B8];
  char v7 = *(unsigned char *)(a1 + 32);
  unsigned int v8 = v7 & 0x3F;
  unint64_t v9 = (unint64_t)((1 << v7) + 63) >> 6;
  size_t v10 = 8 * v9;
  swift_bridgeObjectRetain_n();
  uint64_t isStackAllocationSafe = swift_bridgeObjectRetain_n();
  if (v8 <= 0xD || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1F4188790](isStackAllocationSafe);
    bzero((char *)v15 - ((v10 + 15) & 0x3FFFFFFFFFFFFFF0), v10);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_1C20A0A50((uint64_t)v15 - ((v10 + 15) & 0x3FFFFFFFFFFFFFF0), v9, a1, a2, a3);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v3) {
      swift_willThrow();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v13 = (void *)swift_slowAlloc();
    bzero(v13, v10);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_1C20A0A50((uint64_t)v13, v9, a1, a2, a3);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    MEMORY[0x1C8754730](v13, -1, -1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_1C20A0E50(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t (*a5)(uint64_t *, uint64_t *))
{
  if (a3 != a2)
  {
    uint64_t v7 = a3;
    uint64_t v8 = result;
    uint64_t v9 = *a4;
    size_t v10 = (unint64_t *)(*a4 + 8 * a3 - 8);
    uint64_t v15 = result;
LABEL_4:
    unint64_t v11 = *(void *)(v9 + 8 * v7);
    unint64_t v17 = v10;
    while (1)
    {
      unint64_t v12 = *v10;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      char v13 = sub_1C209CF20(v11, v12, a5);
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      if (v5) {
        break;
      }
      if (v13)
      {
        if (!v9)
        {
          __break(1u);
          return result;
        }
        unint64_t v14 = *v10;
        unint64_t v11 = v10[1];
        *size_t v10 = v11;
        v10[1] = v14;
        --v10;
        if (v7 != ++v8) {
          continue;
        }
      }
      ++v7;
      size_t v10 = v17 + 1;
      uint64_t v8 = v15;
      if (v7 != a2) {
        goto LABEL_4;
      }
      return result;
    }
  }
  return result;
}

uint64_t sub_1C20A0F50(uint64_t *a1, uint64_t (*a2)(uint64_t *, uint64_t *))
{
  uint64_t v3 = v2;
  uint64_t v5 = a1[1];
  uint64_t result = sub_1C214BA30();
  if (result >= v5)
  {
    if (v5 < 0) {
      goto LABEL_154;
    }
    if (v5) {
      return sub_1C20A0E50(0, v5, 1, a1, a2);
    }
  }
  else
  {
    if (v5 >= 0) {
      uint64_t v7 = v5;
    }
    else {
      uint64_t v7 = v5 + 1;
    }
    if (v5 < -1)
    {
LABEL_165:
      uint64_t result = sub_1C214B900();
      __break(1u);
      return result;
    }
    uint64_t v105 = v5;
    uint64_t v101 = result;
    uint64_t v98 = a1;
    if (v5 >= 2)
    {
      uint64_t v8 = v7 >> 1;
      sub_1C20A356C(0, &qword_1EA2C3260, MEMORY[0x1E4F66C28], MEMORY[0x1E4FBB320]);
      uint64_t v9 = sub_1C214A810();
      *(void *)(v9 + 16) = v8;
      uint64_t v102 = v9;
      __dst = (unint64_t *)(v9 + 32);
LABEL_12:
      uint64_t v11 = 0;
      uint64_t v12 = *a1;
      uint64_t v99 = *a1 - 8;
      uint64_t v100 = *a1 + 16;
      size_t v10 = (char *)MEMORY[0x1E4FBC860];
      uint64_t v13 = v5;
      uint64_t v109 = *a1;
      while (1)
      {
        uint64_t v14 = v11++;
        uint64_t v104 = v14;
        if (v11 < v13)
        {
          unint64_t v15 = *(void *)(v12 + 8 * v11);
          unint64_t v16 = *(void *)(v12 + 8 * v14);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          int v17 = sub_1C209CF20(v15, v16, a2);
          if (v3)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            goto LABEL_129;
          }
          int v18 = v17;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v11 = v14 + 2;
          if (v14 + 2 < v105)
          {
            unint64_t v19 = (unint64_t *)(v100 + 8 * v14);
            while (1)
            {
              unint64_t v20 = *(v19 - 1);
              unint64_t v21 = *v19;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              int v22 = sub_1C209CF20(v21, v20, a2);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if ((v18 ^ v22)) {
                break;
              }
              ++v11;
              ++v19;
              if (v105 == v11)
              {
                uint64_t v11 = v105;
                break;
              }
            }
            uint64_t v14 = v104;
          }
          uint64_t v12 = v109;
          if (v18)
          {
            if (v11 < v14) {
              goto LABEL_158;
            }
            uint64_t v13 = v105;
            if (v14 < v11)
            {
              uint64_t v23 = (uint64_t *)(v99 + 8 * v11);
              uint64_t v24 = v11;
              uint64_t v25 = v14;
              uint64_t v26 = (uint64_t *)(v109 + 8 * v14);
              do
              {
                if (v25 != --v24)
                {
                  if (!v109) {
                    goto LABEL_163;
                  }
                  uint64_t v27 = *v26;
                  uint64_t *v26 = *v23;
                  uint64_t *v23 = v27;
                }
                ++v25;
                --v23;
                ++v26;
              }
              while (v25 < v24);
            }
          }
          else
          {
            uint64_t v13 = v105;
          }
        }
        if (v11 >= v13) {
          goto LABEL_64;
        }
        if (__OFSUB__(v11, v14)) {
          goto LABEL_155;
        }
        if (v11 - v14 >= v101) {
          goto LABEL_64;
        }
        if (__OFADD__(v14, v101)) {
          goto LABEL_156;
        }
        if (v14 + v101 >= v13) {
          uint64_t v28 = v13;
        }
        else {
          uint64_t v28 = v14 + v101;
        }
        if (v28 < v14) {
          goto LABEL_157;
        }
        if (v11 == v28) {
          goto LABEL_64;
        }
        char v97 = v10;
        uint64_t v107 = v3;
        BOOL v29 = (unint64_t *)(v99 + 8 * v11);
        uint64_t v103 = v28;
        while (2)
        {
          unint64_t v30 = *(void *)(v12 + 8 * v11);
          int64_t v31 = v29;
          while (1)
          {
            unint64_t v32 = *v29;
            if (v30 >> 62)
            {
              swift_bridgeObjectRetain_n();
              swift_bridgeObjectRetain();
              if (!sub_1C214B930()) {
                goto LABEL_159;
              }
            }
            else
            {
              uint64_t v33 = *(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10);
              swift_bridgeObjectRetain_n();
              swift_bridgeObjectRetain();
              if (!v33) {
                goto LABEL_159;
              }
            }
            if ((v30 & 0xC000000000000001) != 0)
            {
              uint64_t v34 = MEMORY[0x1C8753960](0, v30);
            }
            else
            {
              if (!*(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10))
              {
                __break(1u);
LABEL_133:
                __break(1u);
LABEL_134:
                __break(1u);
LABEL_135:
                __break(1u);
LABEL_136:
                __break(1u);
LABEL_137:
                __break(1u);
LABEL_138:
                __break(1u);
LABEL_139:
                __break(1u);
LABEL_140:
                __break(1u);
LABEL_141:
                __break(1u);
LABEL_142:
                __break(1u);
LABEL_143:
                __break(1u);
LABEL_144:
                __break(1u);
LABEL_145:
                __break(1u);
LABEL_146:
                __break(1u);
LABEL_147:
                __break(1u);
LABEL_148:
                __break(1u);
                goto LABEL_149;
              }
              uint64_t v34 = *(void *)(v30 + 32);
              swift_retain();
            }
            swift_bridgeObjectRelease();
            uint64_t v112 = v34;
            if (v32 >> 62)
            {
              swift_bridgeObjectRetain();
              if (!sub_1C214B930()) {
                goto LABEL_160;
              }
            }
            else
            {
              uint64_t v35 = *(void *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x10);
              swift_bridgeObjectRetain();
              if (!v35) {
                goto LABEL_160;
              }
            }
            if ((v32 & 0xC000000000000001) != 0)
            {
              uint64_t v36 = MEMORY[0x1C8753960](0, v32);
            }
            else
            {
              if (!*(void *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
                goto LABEL_133;
              }
              uint64_t v36 = *(void *)(v32 + 32);
              swift_retain();
            }
            swift_bridgeObjectRelease();
            uint64_t v111 = v36;
            char v37 = a2(&v112, &v111);
            swift_release();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_release();
            if ((v37 & 1) == 0) {
              break;
            }
            uint64_t v12 = v109;
            if (!v109) {
              goto LABEL_161;
            }
            unint64_t v38 = *v29;
            unint64_t v30 = v29[1];
            *BOOL v29 = v30;
            v29[1] = v38;
            --v29;
            if (v11 == ++v14) {
              goto LABEL_41;
            }
          }
          uint64_t v12 = v109;
LABEL_41:
          ++v11;
          BOOL v29 = v31 + 1;
          uint64_t v14 = v104;
          if (v11 != v103) {
            continue;
          }
          break;
        }
        uint64_t v11 = v103;
        uint64_t v3 = v107;
        size_t v10 = v97;
LABEL_64:
        if (v11 < v14) {
          goto LABEL_153;
        }
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          size_t v10 = sub_1C20FADDC(0, *((void *)v10 + 2) + 1, 1, v10);
        }
        unint64_t v40 = *((void *)v10 + 2);
        unint64_t v39 = *((void *)v10 + 3);
        unint64_t v41 = v40 + 1;
        uint64_t v12 = v109;
        uint64_t v108 = v3;
        if (v40 >= v39 >> 1)
        {
          unint64_t v90 = sub_1C20FADDC((char *)(v39 > 1), v40 + 1, 1, v10);
          uint64_t v12 = v109;
          size_t v10 = v90;
        }
        *((void *)v10 + 2) = v41;
        uint64_t v42 = v10 + 32;
        uint64_t v43 = &v10[16 * v40 + 32];
        *(void *)uint64_t v43 = v104;
        *((void *)v43 + 1) = v11;
        if (v40)
        {
          while (1)
          {
            unint64_t v44 = v41 - 1;
            if (v41 >= 4)
            {
              uint64_t v49 = &v42[16 * v41];
              uint64_t v50 = *((void *)v49 - 8);
              uint64_t v51 = *((void *)v49 - 7);
              BOOL v55 = __OFSUB__(v51, v50);
              uint64_t v52 = v51 - v50;
              if (v55) {
                goto LABEL_138;
              }
              uint64_t v54 = *((void *)v49 - 6);
              uint64_t v53 = *((void *)v49 - 5);
              BOOL v55 = __OFSUB__(v53, v54);
              uint64_t v47 = v53 - v54;
              char v48 = v55;
              if (v55) {
                goto LABEL_139;
              }
              unint64_t v56 = v41 - 2;
              uint64_t v57 = &v42[16 * v41 - 32];
              uint64_t v59 = *(void *)v57;
              uint64_t v58 = *((void *)v57 + 1);
              BOOL v55 = __OFSUB__(v58, v59);
              uint64_t v60 = v58 - v59;
              if (v55) {
                goto LABEL_141;
              }
              BOOL v55 = __OFADD__(v47, v60);
              uint64_t v61 = v47 + v60;
              if (v55) {
                goto LABEL_144;
              }
              if (v61 >= v52)
              {
                uint64_t v79 = &v42[16 * v44];
                uint64_t v81 = *(void *)v79;
                uint64_t v80 = *((void *)v79 + 1);
                BOOL v55 = __OFSUB__(v80, v81);
                uint64_t v82 = v80 - v81;
                if (v55) {
                  goto LABEL_148;
                }
                BOOL v72 = v47 < v82;
                goto LABEL_101;
              }
            }
            else
            {
              if (v41 != 3)
              {
                uint64_t v73 = *((void *)v10 + 4);
                uint64_t v74 = *((void *)v10 + 5);
                BOOL v55 = __OFSUB__(v74, v73);
                uint64_t v66 = v74 - v73;
                char v67 = v55;
                goto LABEL_95;
              }
              uint64_t v46 = *((void *)v10 + 4);
              uint64_t v45 = *((void *)v10 + 5);
              BOOL v55 = __OFSUB__(v45, v46);
              uint64_t v47 = v45 - v46;
              char v48 = v55;
            }
            if (v48) {
              goto LABEL_140;
            }
            unint64_t v56 = v41 - 2;
            uint64_t v62 = &v42[16 * v41 - 32];
            uint64_t v64 = *(void *)v62;
            uint64_t v63 = *((void *)v62 + 1);
            BOOL v65 = __OFSUB__(v63, v64);
            uint64_t v66 = v63 - v64;
            char v67 = v65;
            if (v65) {
              goto LABEL_143;
            }
            id v68 = &v42[16 * v44];
            uint64_t v70 = *(void *)v68;
            uint64_t v69 = *((void *)v68 + 1);
            BOOL v55 = __OFSUB__(v69, v70);
            uint64_t v71 = v69 - v70;
            if (v55) {
              goto LABEL_146;
            }
            if (__OFADD__(v66, v71)) {
              goto LABEL_147;
            }
            if (v66 + v71 >= v47)
            {
              BOOL v72 = v47 < v71;
LABEL_101:
              if (v72) {
                unint64_t v44 = v56;
              }
              goto LABEL_103;
            }
LABEL_95:
            if (v67) {
              goto LABEL_142;
            }
            uint64_t v75 = &v42[16 * v44];
            uint64_t v77 = *(void *)v75;
            uint64_t v76 = *((void *)v75 + 1);
            BOOL v55 = __OFSUB__(v76, v77);
            uint64_t v78 = v76 - v77;
            if (v55) {
              goto LABEL_145;
            }
            if (v78 < v66) {
              goto LABEL_112;
            }
LABEL_103:
            unint64_t v83 = v44 - 1;
            if (v44 - 1 >= v41) {
              goto LABEL_134;
            }
            if (!v12) {
              goto LABEL_162;
            }
            uint64_t v84 = v10;
            uint64_t v85 = &v42[16 * v83];
            uint64_t v86 = *(void *)v85;
            unint64_t v87 = &v42[16 * v44];
            uint64_t v88 = *((void *)v87 + 1);
            sub_1C209F634((unint64_t *)(v12 + 8 * *(void *)v85), (unint64_t *)(v12 + 8 * *(void *)v87), v12 + 8 * v88, __dst, a2);
            if (v108) {
              goto LABEL_129;
            }
            if (v88 < v86) {
              goto LABEL_135;
            }
            if (v44 > *((void *)v84 + 2)) {
              goto LABEL_136;
            }
            *(void *)uint64_t v85 = v86;
            *(void *)&v42[16 * v83 + 8] = v88;
            unint64_t v89 = *((void *)v84 + 2);
            if (v44 >= v89) {
              goto LABEL_137;
            }
            size_t v10 = v84;
            unint64_t v41 = v89 - 1;
            memmove(&v42[16 * v44], v87 + 16, 16 * (v89 - 1 - v44));
            *((void *)v84 + 2) = v89 - 1;
            uint64_t v12 = v109;
            if (v89 <= 2) {
              goto LABEL_112;
            }
          }
        }
        unint64_t v41 = 1;
LABEL_112:
        uint64_t v13 = v105;
        uint64_t v3 = v108;
        if (v11 >= v105) {
          goto LABEL_116;
        }
      }
    }
    size_t v10 = (char *)MEMORY[0x1E4FBC860];
    __dst = (unint64_t *)(MEMORY[0x1E4FBC860] + 32);
    uint64_t v102 = MEMORY[0x1E4FBC860];
    if (v5 == 1) {
      goto LABEL_12;
    }
    unint64_t v41 = *(void *)(MEMORY[0x1E4FBC860] + 16);
LABEL_116:
    if (v41 >= 2)
    {
      uint64_t v91 = *v98;
      while (1)
      {
        unint64_t v92 = v41 - 2;
        if (v41 < 2) {
          break;
        }
        if (!v91) {
          goto LABEL_164;
        }
        uint64_t v93 = *(void *)&v10[16 * v92 + 32];
        uint64_t v94 = *(void *)&v10[16 * v41 + 24];
        sub_1C209F634((unint64_t *)(v91 + 8 * v93), (unint64_t *)(v91 + 8 * *(void *)&v10[16 * v41 + 16]), v91 + 8 * v94, __dst, a2);
        if (v3) {
          goto LABEL_129;
        }
        if (v94 < v93) {
          goto LABEL_150;
        }
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          size_t v10 = sub_1C20FB150((uint64_t)v10);
        }
        if (v92 >= *((void *)v10 + 2)) {
          goto LABEL_151;
        }
        uint64_t v95 = &v10[16 * v92 + 32];
        *(void *)uint64_t v95 = v93;
        *((void *)v95 + 1) = v94;
        unint64_t v96 = *((void *)v10 + 2);
        if (v41 > v96) {
          goto LABEL_152;
        }
        memmove(&v10[16 * v41 + 16], &v10[16 * v41 + 32], 16 * (v96 - v41));
        *((void *)v10 + 2) = v96 - 1;
        unint64_t v41 = v96 - 1;
        uint64_t v3 = 0;
        if (v96 <= 2) {
          goto LABEL_129;
        }
      }
LABEL_149:
      __break(1u);
LABEL_150:
      __break(1u);
LABEL_151:
      __break(1u);
LABEL_152:
      __break(1u);
LABEL_153:
      __break(1u);
LABEL_154:
      __break(1u);
LABEL_155:
      __break(1u);
LABEL_156:
      __break(1u);
LABEL_157:
      __break(1u);
LABEL_158:
      __break(1u);
LABEL_159:
      swift_bridgeObjectRelease();
      __break(1u);
LABEL_160:
      swift_bridgeObjectRelease();
      __break(1u);
LABEL_161:
      __break(1u);
LABEL_162:
      __break(1u);
LABEL_163:
      __break(1u);
LABEL_164:
      __break(1u);
      goto LABEL_165;
    }
LABEL_129:
    swift_bridgeObjectRelease();
    *(void *)(v102 + 16) = 0;
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C20A182C(char *a1, char *__src, unint64_t a3, char *a4, uint64_t (*a5)(void **, void **))
{
  uint64_t v5 = __src;
  uint64_t v6 = __src - a1;
  uint64_t v7 = __src - a1 + 7;
  if (__src - a1 >= 0) {
    uint64_t v7 = __src - a1;
  }
  uint64_t v8 = v7 >> 3;
  uint64_t v10 = a3 - (void)__src;
  uint64_t v11 = a3 - (void)__src + 7;
  if ((uint64_t)(a3 - (void)__src) >= 0) {
    uint64_t v11 = a3 - (void)__src;
  }
  uint64_t v12 = v11 >> 3;
  uint64_t v52 = a1;
  uint64_t v51 = a4;
  if (v8 >= v11 >> 3)
  {
    if (v10 >= -7)
    {
      if (a4 != __src || &__src[8 * v12] <= a4) {
        memmove(a4, __src, 8 * v12);
      }
      uint64_t v25 = &a4[8 * v12];
      uint64_t v50 = v25;
      uint64_t v52 = v5;
      if (a1 < v5 && v10 >= 8)
      {
        uint64_t v26 = (char *)(a3 - 8);
        while (1)
        {
          uint64_t v27 = v25 - 8;
          uint64_t v28 = *((void *)v25 - 1);
          if (!*(void *)(v28 + 16)) {
            break;
          }
          BOOL v29 = v5 - 8;
          uint64_t v30 = *((void *)v5 - 1);
          int64_t v31 = *(void **)(v28 + 40);
          char v32 = *(unsigned char *)(v28 + 48);
          uint64_t v47 = *(void **)(v28 + 32);
          char v48 = v31;
          unsigned __int8 v49 = v32;
          sub_1C1F3AFEC(v47, v31, v32);
          if (v49 == 255) {
            break;
          }
          if (!*(void *)(v30 + 16)) {
            goto LABEL_53;
          }
          uint64_t v33 = v5;
          unint64_t v34 = (unint64_t)v25;
          uint64_t v35 = *(void **)(v30 + 40);
          char v36 = *(unsigned char *)(v30 + 48);
          unint64_t v44 = *(void **)(v30 + 32);
          uint64_t v45 = v35;
          unsigned __int8 v46 = v36;
          sub_1C1F3AFEC(v44, v35, v36);
          if (v46 == 255) {
            goto LABEL_53;
          }
          uint64_t v43 = v26 + 8;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          char v37 = a5(&v47, &v44);
          sub_1C1F3B040(v44, v45, v46);
          sub_1C1F3B040(v47, v48, v49);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v37)
          {
            if (v43 != v33 || v26 >= v33) {
              *(void *)uint64_t v26 = *(void *)v29;
            }
            uint64_t v52 = v29;
            unint64_t v38 = a4;
            uint64_t v25 = (char *)v34;
          }
          else
          {
            uint64_t v50 = v27;
            if ((unint64_t)v43 < v34 || (unint64_t)v26 >= v34 || v43 != (char *)v34) {
              *(void *)uint64_t v26 = *(void *)v27;
            }
            BOOL v29 = v33;
            uint64_t v25 = v27;
            unint64_t v38 = a4;
          }
          if (v29 > a1)
          {
            v26 -= 8;
            uint64_t v5 = v29;
            if (v25 > v38) {
              continue;
            }
          }
          goto LABEL_51;
        }
        __break(1u);
LABEL_53:
        __break(1u);
        goto LABEL_54;
      }
LABEL_51:
      sub_1C20FAFD8(&v52, &v51, &v50);
      return 1;
    }
  }
  else if (v6 >= -7)
  {
    uint64_t v13 = a4;
    if (a4 != a1 || &a1[8 * v8] <= a4) {
      memmove(a4, a1, 8 * v8);
    }
    unint64_t v15 = &a4[8 * v8];
    uint64_t v50 = v15;
    if ((unint64_t)v5 < a3 && v6 >= 8)
    {
      unint64_t v16 = a1;
      while (1)
      {
        uint64_t v17 = *(void *)v5;
        if (!*(void *)(*(void *)v5 + 16)) {
          break;
        }
        uint64_t v18 = *(void *)v13;
        unint64_t v19 = *(void **)(v17 + 40);
        char v20 = *(unsigned char *)(v17 + 48);
        uint64_t v47 = *(void **)(v17 + 32);
        char v48 = v19;
        unsigned __int8 v49 = v20;
        sub_1C1F3AFEC(v47, v19, v20);
        if (v49 == 255) {
          break;
        }
        if (!*(void *)(v18 + 16)) {
          goto LABEL_55;
        }
        unint64_t v21 = *(void **)(v18 + 40);
        char v22 = *(unsigned char *)(v18 + 48);
        unint64_t v44 = *(void **)(v18 + 32);
        uint64_t v45 = v21;
        unsigned __int8 v46 = v22;
        sub_1C1F3AFEC(v44, v21, v22);
        if (v46 == 255) {
          goto LABEL_55;
        }
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        char v23 = a5(&v47, &v44);
        sub_1C1F3B040(v44, v45, v46);
        sub_1C1F3B040(v47, v48, v49);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v23)
        {
          uint64_t v24 = v5 + 8;
          if (v16 < v5 || v16 >= v24 || v16 != v5) {
            *(void *)unint64_t v16 = *(void *)v5;
          }
        }
        else
        {
          if (v16 != v13) {
            *(void *)unint64_t v16 = *(void *)v13;
          }
          v13 += 8;
          uint64_t v51 = v13;
          uint64_t v24 = v5;
        }
        v16 += 8;
        if (v13 < v15)
        {
          uint64_t v5 = v24;
          if ((unint64_t)v24 < a3) {
            continue;
          }
        }
        uint64_t v52 = v16;
        goto LABEL_51;
      }
LABEL_54:
      __break(1u);
LABEL_55:
      __break(1u);
      goto LABEL_56;
    }
    goto LABEL_51;
  }
LABEL_56:
  uint64_t result = sub_1C214B990();
  __break(1u);
  return result;
}

uint64_t sub_1C20A1C1C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t (*a5)(void **, void **))
{
  uint64_t v19 = result;
  if (a3 != a2)
  {
    uint64_t v6 = a3;
    uint64_t v7 = *a4;
    uint64_t v8 = (void *)(*a4 + 8 * a3 - 8);
LABEL_5:
    uint64_t v9 = *(void *)(v7 + 8 * v6);
    uint64_t v10 = v19;
    uint64_t v26 = v8;
    while (*(void *)(v9 + 16))
    {
      uint64_t v11 = *v8;
      uint64_t v12 = *(void **)(v9 + 40);
      char v13 = *(unsigned char *)(v9 + 48);
      char v23 = *(void **)(v9 + 32);
      uint64_t v24 = v12;
      unsigned __int8 v25 = v13;
      uint64_t result = (uint64_t)sub_1C1F3AFEC(v23, v12, v13);
      if (v25 == 255) {
        break;
      }
      if (!*(void *)(v11 + 16)) {
        goto LABEL_15;
      }
      uint64_t v14 = *(void **)(v11 + 40);
      char v15 = *(unsigned char *)(v11 + 48);
      char v20 = *(void **)(v11 + 32);
      unint64_t v21 = v14;
      unsigned __int8 v22 = v15;
      uint64_t result = (uint64_t)sub_1C1F3AFEC(v20, v14, v15);
      if (v22 == 255) {
        goto LABEL_15;
      }
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      char v16 = a5(&v23, &v20);
      sub_1C1F3B040(v20, v21, v22);
      sub_1C1F3B040(v23, v24, v25);
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      if (v16)
      {
        if (!v7) {
          goto LABEL_16;
        }
        uint64_t v17 = *v8;
        uint64_t v9 = v8[1];
        *uint64_t v8 = v9;
        v8[1] = v17;
        --v8;
        if (v6 != ++v10) {
          continue;
        }
      }
      ++v6;
      uint64_t v8 = v26 + 1;
      if (v6 == a2) {
        return result;
      }
      goto LABEL_5;
    }
    __break(1u);
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
  }
  return result;
}

uint64_t sub_1C20A1D80(uint64_t *a1, uint64_t (*a2)(void **, void **))
{
  uint64_t v3 = v2;
  uint64_t v5 = a1[1];
  uint64_t result = sub_1C214BA30();
  if (result >= v5)
  {
    if (v5 < 0) {
      goto LABEL_146;
    }
    if (v5) {
      return sub_1C20A1C1C(0, v5, 1, a1, a2);
    }
    return result;
  }
  if (v5 >= 0) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = v5 + 1;
  }
  if (v5 < -1) {
    goto LABEL_158;
  }
  uint64_t v112 = result;
  uint64_t v108 = a1;
  if (v5 < 2)
  {
    uint64_t v10 = MEMORY[0x1E4FBC860];
    char v118 = (char *)(MEMORY[0x1E4FBC860] + 32);
    if (v5 != 1)
    {
      unint64_t v50 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      char v13 = (char *)MEMORY[0x1E4FBC860];
LABEL_111:
      uint64_t v100 = v13;
      uint64_t v111 = v10;
      if (v50 >= 2)
      {
        uint64_t v101 = *v108;
        do
        {
          unint64_t v102 = v50 - 2;
          if (v50 < 2) {
            goto LABEL_140;
          }
          if (!v101) {
            goto LABEL_157;
          }
          uint64_t v103 = *(void *)&v100[16 * v102 + 32];
          uint64_t v104 = *(void *)&v100[16 * v50 + 24];
          sub_1C20A182C((char *)(v101 + 8 * v103), (char *)(v101 + 8 * *(void *)&v100[16 * v50 + 16]), v101 + 8 * v104, v118, a2);
          if (v3) {
            break;
          }
          if (v104 < v103) {
            goto LABEL_142;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v100 = sub_1C20FB150((uint64_t)v100);
          }
          if (v102 >= *((void *)v100 + 2)) {
            goto LABEL_143;
          }
          uint64_t v105 = &v100[16 * v102 + 32];
          *(void *)uint64_t v105 = v103;
          *((void *)v105 + 1) = v104;
          unint64_t v106 = *((void *)v100 + 2);
          if (v50 > v106) {
            goto LABEL_144;
          }
          memmove(&v100[16 * v50 + 16], &v100[16 * v50 + 32], 16 * (v106 - v50));
          *((void *)v100 + 2) = v106 - 1;
          unint64_t v50 = v106 - 1;
        }
        while (v106 > 2);
      }
LABEL_122:
      swift_bridgeObjectRelease();
      *(void *)(v111 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v111 = MEMORY[0x1E4FBC860];
    uint64_t v119 = v2;
  }
  else
  {
    uint64_t v119 = v2;
    uint64_t v8 = v7 >> 1;
    sub_1C1F13CCC(0, (unint64_t *)&qword_1EA2C3278, (uint64_t)&type metadata for LoggableDose, MEMORY[0x1E4FBB320]);
    uint64_t v9 = sub_1C214A810();
    *(void *)(v9 + 16) = v8;
    uint64_t v111 = v9;
    char v118 = (char *)(v9 + 32);
  }
  uint64_t v11 = 0;
  uint64_t v12 = *a1;
  uint64_t v109 = *a1 + 16;
  uint64_t v110 = *a1 - 8;
  char v13 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v14 = a2;
  uint64_t v117 = v5;
  uint64_t v127 = *a1;
  while (1)
  {
    uint64_t v15 = v11;
    uint64_t v16 = v11 + 1;
    if (v11 + 1 >= v5) {
      goto LABEL_37;
    }
    uint64_t v17 = *(void **)(v12 + 8 * v16);
    uint64_t v18 = *(void *)(v12 + 8 * v11);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unsigned int v19 = sub_1C209D0B4(v17, v18, v14);
    if (v119)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_122;
    }
    unsigned int v20 = v19;
    uint64_t v119 = 0;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v16 = v15 + 2;
    uint64_t v5 = v117;
    if (v15 + 2 >= v117)
    {
      uint64_t v14 = a2;
      uint64_t v12 = v127;
      if ((v20 & 1) == 0) {
        goto LABEL_37;
      }
    }
    else
    {
      uint64_t v114 = v15;
      uint64_t v21 = v109 + 8 * v15;
      uint64_t v14 = a2;
      while (1)
      {
        uint64_t v22 = v16;
        uint64_t v23 = *(void *)v21;
        if (!*(void *)(*(void *)v21 + 16)) {
          goto LABEL_153;
        }
        uint64_t v24 = *(void *)(v21 - 8);
        unsigned __int8 v25 = *(void **)(v23 + 40);
        char v26 = *(unsigned char *)(v23 + 48);
        uint64_t v124 = *(void **)(v23 + 32);
        uint64_t v125 = v25;
        unsigned __int8 v126 = v26;
        sub_1C1F3AFEC(v124, v25, v26);
        if (v126 == 255) {
          goto LABEL_153;
        }
        if (!*(void *)(v24 + 16)) {
          goto LABEL_154;
        }
        uint64_t v27 = *(void **)(v24 + 40);
        char v28 = *(unsigned char *)(v24 + 48);
        uint64_t v121 = *(void **)(v24 + 32);
        uint64_t v122 = v27;
        unsigned __int8 v123 = v28;
        sub_1C1F3AFEC(v121, v27, v28);
        if (v123 == 255) {
          goto LABEL_154;
        }
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        int v29 = a2(&v124, &v121);
        sub_1C1F3B040(v121, v122, v123);
        sub_1C1F3B040(v124, v125, v126);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v20 ^ v29)) {
          break;
        }
        uint64_t v16 = v22 + 1;
        v21 += 8;
        uint64_t v5 = v117;
        if (v117 == v22 + 1)
        {
          uint64_t v16 = v117;
          goto LABEL_28;
        }
      }
      uint64_t v5 = v117;
      uint64_t v16 = v22;
LABEL_28:
      uint64_t v15 = v114;
      uint64_t v12 = v127;
      if ((v20 & 1) == 0) {
        goto LABEL_37;
      }
    }
    if (v16 < v15) {
      goto LABEL_151;
    }
    if (v15 < v16)
    {
      uint64_t v30 = (uint64_t *)(v110 + 8 * v16);
      uint64_t v31 = v16;
      uint64_t v32 = v15;
      uint64_t v33 = (uint64_t *)(v12 + 8 * v15);
      do
      {
        if (v32 != --v31)
        {
          if (!v12) {
            goto LABEL_156;
          }
          uint64_t v34 = *v33;
          *uint64_t v33 = *v30;
          uint64_t *v30 = v34;
        }
        ++v32;
        --v30;
        ++v33;
      }
      while (v32 < v31);
    }
LABEL_37:
    if (v16 < v5)
    {
      if (__OFSUB__(v16, v15)) {
        goto LABEL_145;
      }
      if (v16 - v15 < v112) {
        break;
      }
    }
LABEL_59:
    if (v16 < v15) {
      goto LABEL_141;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      char v13 = sub_1C20FADDC(0, *((void *)v13 + 2) + 1, 1, v13);
    }
    unint64_t v49 = *((void *)v13 + 2);
    unint64_t v48 = *((void *)v13 + 3);
    unint64_t v50 = v49 + 1;
    uint64_t v12 = v127;
    if (v49 >= v48 >> 1)
    {
      uint64_t v99 = sub_1C20FADDC((char *)(v48 > 1), v49 + 1, 1, v13);
      uint64_t v12 = v127;
      char v13 = v99;
    }
    *((void *)v13 + 2) = v50;
    uint64_t v51 = v13 + 32;
    uint64_t v52 = &v13[16 * v49 + 32];
    *(void *)uint64_t v52 = v15;
    *((void *)v52 + 1) = v16;
    uint64_t v116 = v16;
    if (v49)
    {
      while (1)
      {
        unint64_t v53 = v50 - 1;
        if (v50 >= 4)
        {
          uint64_t v58 = &v51[16 * v50];
          uint64_t v59 = *((void *)v58 - 8);
          uint64_t v60 = *((void *)v58 - 7);
          BOOL v64 = __OFSUB__(v60, v59);
          uint64_t v61 = v60 - v59;
          if (v64) {
            goto LABEL_129;
          }
          uint64_t v63 = *((void *)v58 - 6);
          uint64_t v62 = *((void *)v58 - 5);
          BOOL v64 = __OFSUB__(v62, v63);
          uint64_t v56 = v62 - v63;
          char v57 = v64;
          if (v64) {
            goto LABEL_130;
          }
          unint64_t v65 = v50 - 2;
          uint64_t v66 = &v51[16 * v50 - 32];
          uint64_t v68 = *(void *)v66;
          uint64_t v67 = *((void *)v66 + 1);
          BOOL v64 = __OFSUB__(v67, v68);
          uint64_t v69 = v67 - v68;
          if (v64) {
            goto LABEL_132;
          }
          BOOL v64 = __OFADD__(v56, v69);
          uint64_t v70 = v56 + v69;
          if (v64) {
            goto LABEL_135;
          }
          if (v70 >= v61)
          {
            uint64_t v88 = &v51[16 * v53];
            uint64_t v90 = *(void *)v88;
            uint64_t v89 = *((void *)v88 + 1);
            BOOL v64 = __OFSUB__(v89, v90);
            uint64_t v91 = v89 - v90;
            if (v64) {
              goto LABEL_139;
            }
            BOOL v81 = v56 < v91;
            goto LABEL_96;
          }
        }
        else
        {
          if (v50 != 3)
          {
            uint64_t v82 = *((void *)v13 + 4);
            uint64_t v83 = *((void *)v13 + 5);
            BOOL v64 = __OFSUB__(v83, v82);
            uint64_t v75 = v83 - v82;
            char v76 = v64;
            goto LABEL_90;
          }
          uint64_t v55 = *((void *)v13 + 4);
          uint64_t v54 = *((void *)v13 + 5);
          BOOL v64 = __OFSUB__(v54, v55);
          uint64_t v56 = v54 - v55;
          char v57 = v64;
        }
        if (v57) {
          goto LABEL_131;
        }
        unint64_t v65 = v50 - 2;
        uint64_t v71 = &v51[16 * v50 - 32];
        uint64_t v73 = *(void *)v71;
        uint64_t v72 = *((void *)v71 + 1);
        BOOL v74 = __OFSUB__(v72, v73);
        uint64_t v75 = v72 - v73;
        char v76 = v74;
        if (v74) {
          goto LABEL_134;
        }
        uint64_t v77 = &v51[16 * v53];
        uint64_t v79 = *(void *)v77;
        uint64_t v78 = *((void *)v77 + 1);
        BOOL v64 = __OFSUB__(v78, v79);
        uint64_t v80 = v78 - v79;
        if (v64) {
          goto LABEL_137;
        }
        if (__OFADD__(v75, v80)) {
          goto LABEL_138;
        }
        if (v75 + v80 >= v56)
        {
          BOOL v81 = v56 < v80;
LABEL_96:
          if (v81) {
            unint64_t v53 = v65;
          }
          goto LABEL_98;
        }
LABEL_90:
        if (v76) {
          goto LABEL_133;
        }
        uint64_t v84 = &v51[16 * v53];
        uint64_t v86 = *(void *)v84;
        uint64_t v85 = *((void *)v84 + 1);
        BOOL v64 = __OFSUB__(v85, v86);
        uint64_t v87 = v85 - v86;
        if (v64) {
          goto LABEL_136;
        }
        if (v87 < v75) {
          goto LABEL_107;
        }
LABEL_98:
        unint64_t v92 = v53 - 1;
        if (v53 - 1 >= v50)
        {
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
          goto LABEL_148;
        }
        if (!v12) {
          goto LABEL_155;
        }
        uint64_t v93 = v13;
        uint64_t v94 = &v51[16 * v92];
        uint64_t v95 = *(void *)v94;
        unint64_t v96 = &v51[16 * v53];
        uint64_t v97 = *((void *)v96 + 1);
        sub_1C20A182C((char *)(v12 + 8 * *(void *)v94), (char *)(v12 + 8 * *(void *)v96), v12 + 8 * v97, v118, a2);
        if (v119) {
          goto LABEL_122;
        }
        if (v97 < v95) {
          goto LABEL_126;
        }
        if (v53 > *((void *)v93 + 2)) {
          goto LABEL_127;
        }
        *(void *)uint64_t v94 = v95;
        *(void *)&v51[16 * v92 + 8] = v97;
        unint64_t v98 = *((void *)v93 + 2);
        if (v53 >= v98) {
          goto LABEL_128;
        }
        char v13 = v93;
        unint64_t v50 = v98 - 1;
        memmove(&v51[16 * v53], v96 + 16, 16 * (v98 - 1 - v53));
        *((void *)v93 + 2) = v98 - 1;
        uint64_t v14 = a2;
        uint64_t v12 = v127;
        if (v98 <= 2) {
          goto LABEL_107;
        }
      }
    }
    unint64_t v50 = 1;
LABEL_107:
    uint64_t v11 = v116;
    uint64_t v5 = v117;
    if (v116 >= v117)
    {
      uint64_t v3 = v119;
      uint64_t v10 = v111;
      goto LABEL_111;
    }
  }
  if (__OFADD__(v15, v112)) {
    goto LABEL_147;
  }
  if (v15 + v112 >= v5) {
    uint64_t v35 = v5;
  }
  else {
    uint64_t v35 = v15 + v112;
  }
  if (v35 >= v15)
  {
    if (v16 != v35)
    {
      uint64_t v113 = v35;
      uint64_t v115 = v15;
      uint64_t v107 = v13;
      char v36 = (uint64_t *)(v110 + 8 * v16);
      do
      {
        uint64_t v37 = v16;
        uint64_t v38 = *(void *)(v12 + 8 * v16);
        uint64_t v39 = v115;
        unint64_t v40 = v36;
        while (1)
        {
          if (!*(void *)(v38 + 16)) {
            goto LABEL_150;
          }
          uint64_t v41 = *v40;
          uint64_t v42 = *(void **)(v38 + 40);
          char v43 = *(unsigned char *)(v38 + 48);
          uint64_t v124 = *(void **)(v38 + 32);
          uint64_t v125 = v42;
          unsigned __int8 v126 = v43;
          sub_1C1F3AFEC(v124, v42, v43);
          if (v126 == 255) {
            goto LABEL_150;
          }
          if (!*(void *)(v41 + 16)) {
            goto LABEL_149;
          }
          unint64_t v44 = *(void **)(v41 + 40);
          char v45 = *(unsigned char *)(v41 + 48);
          uint64_t v121 = *(void **)(v41 + 32);
          uint64_t v122 = v44;
          unsigned __int8 v123 = v45;
          sub_1C1F3AFEC(v121, v44, v45);
          if (v123 == 255) {
            goto LABEL_149;
          }
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          char v46 = v14(&v124, &v121);
          sub_1C1F3B040(v121, v122, v123);
          sub_1C1F3B040(v124, v125, v126);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v46 & 1) == 0) {
            break;
          }
          uint64_t v12 = v127;
          if (!v127) {
            goto LABEL_152;
          }
          uint64_t v47 = *v40;
          uint64_t v38 = v40[1];
          uint64_t *v40 = v38;
          v40[1] = v47;
          --v40;
          if (v37 == ++v39) {
            goto LABEL_48;
          }
        }
        uint64_t v12 = v127;
LABEL_48:
        uint64_t v16 = v37 + 1;
        ++v36;
      }
      while (v37 + 1 != v113);
      uint64_t v16 = v113;
      char v13 = v107;
      uint64_t v15 = v115;
    }
    goto LABEL_59;
  }
LABEL_148:
  __break(1u);
LABEL_149:
  __break(1u);
LABEL_150:
  __break(1u);
LABEL_151:
  __break(1u);
LABEL_152:
  __break(1u);
LABEL_153:
  __break(1u);
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  uint64_t result = sub_1C214B900();
  __break(1u);
  return result;
}

uint64_t sub_1C20A262C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t), uint64_t (*a5)(void *, uint64_t, uint64_t))
{
  uint64_t v10 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v10 = a4(v10);
  }
  uint64_t v11 = *(void *)(v10 + 16);
  v13[0] = v10 + 32;
  v13[1] = v11;
  uint64_t result = a5(v13, a2, a3);
  *a1 = v10;
  return result;
}

uint64_t sub_1C20A26C8(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v6 = a1;
  uint64_t v34 = MEMORY[0x1E4FBC860];
  if (a1 >> 62)
  {
LABEL_23:
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1C214B930();
    if (v7) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v7)
    {
LABEL_3:
      uint64_t v8 = 0;
      unint64_t v25 = v6;
      unint64_t v26 = v6 & 0xC000000000000001;
      unint64_t v23 = v6 + 32;
      uint64_t v24 = v7;
      uint64_t v28 = a3;
      uint64_t v29 = a4;
      while (1)
      {
        if (v26)
        {
          uint64_t v9 = MEMORY[0x1C8753960](v8, v6);
          BOOL v10 = __OFADD__(v8++, 1);
          if (v10) {
            goto LABEL_22;
          }
        }
        else
        {
          uint64_t v9 = *(void *)(v23 + 8 * v8);
          swift_retain();
          BOOL v10 = __OFADD__(v8++, 1);
          if (v10)
          {
LABEL_22:
            __break(1u);
            goto LABEL_23;
          }
        }
        uint64_t v11 = sub_1C2149070();
        uint64_t v12 = *(void *)(v11 + 16);
        if (v12)
        {
          uint64_t v13 = v11;
          uint64_t v27 = v8;
          uint64_t v14 = *(void *)(sub_1C2149200() - 8);
          uint64_t v15 = v13 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
          uint64_t v16 = *(void *)(v14 + 72);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_retain();
          uint64_t v17 = (void *)MEMORY[0x1E4FBC860];
          do
          {
            sub_1C209EE88(v15, a2, a3, a4, v9, (uint64_t)&v32);
            unsigned __int8 v19 = v33;
            if (v33 != 255)
            {
              long long v30 = v32;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                uint64_t v17 = sub_1C1F3B6DC(0, v17[2] + 1, 1, v17);
              }
              unint64_t v21 = v17[2];
              unint64_t v20 = v17[3];
              if (v21 >= v20 >> 1) {
                uint64_t v17 = sub_1C1F3B6DC((void *)(v20 > 1), v21 + 1, 1, v17);
              }
              v17[2] = v21 + 1;
              uint64_t v18 = &v17[3 * v21];
              *((_OWORD *)v18 + 2) = v30;
              *((unsigned char *)v18 + 48) = v19 & 1;
              a3 = v28;
              a4 = v29;
            }
            v15 += v16;
            --v12;
          }
          while (v12);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release();
          uint64_t v7 = v24;
          unint64_t v6 = v25;
          uint64_t v8 = v27;
        }
        else
        {
          uint64_t v17 = (void *)MEMORY[0x1E4FBC860];
        }
        swift_release();
        swift_bridgeObjectRelease();
        sub_1C1F7D9C4((uint64_t)v17);
        if (v8 == v7)
        {
          swift_bridgeObjectRelease();
          return v34;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x1E4FBC860];
}

uint64_t sub_1C20A29A0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DayScheduleProvider();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t *initializeBufferWithCopyOfBuffer for DayScheduleProvider(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a1;
    a1[1] = a2[1];
    uint64_t v6 = *(int *)(a3 + 24);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = sub_1C2148F20();
    uint64_t v10 = *(void *)(v9 - 8);
    uint64_t v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v11(v8, 1, v9))
    {
      sub_1C20A356C(0, &qword_1EA2C67D0, MEMORY[0x1E4F66BF8], MEMORY[0x1E4FBB718]);
      memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
    }
  }
  return v5;
}

uint64_t destroy for DayScheduleProvider(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_1C2148F20();
  uint64_t v8 = *(void *)(v5 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v4, 1, v5);
  if (!result)
  {
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8);
    return v7(v4, v5);
  }
  return result;
}

void *initializeWithCopy for DayScheduleProvider(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 24);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_1C2148F20();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v10(v7, 1, v8))
  {
    sub_1C20A356C(0, &qword_1EA2C67D0, MEMORY[0x1E4F66BF8], MEMORY[0x1E4FBB718]);
    memcpy(v6, v7, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v6, v7, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  return a1;
}

void *assignWithCopy for DayScheduleProvider(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1C2148F20();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    sub_1C20A356C(0, &qword_1EA2C67D0, MEMORY[0x1E4F66BF8], MEMORY[0x1E4FBB718]);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

_OWORD *initializeWithTake for DayScheduleProvider(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_1C2148F20();
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    sub_1C20A356C(0, &qword_1EA2C67D0, MEMORY[0x1E4F66BF8], MEMORY[0x1E4FBB718]);
    memcpy(v5, v6, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v5, v6, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

void *assignWithTake for DayScheduleProvider(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1C2148F20();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    sub_1C20A356C(0, &qword_1EA2C67D0, MEMORY[0x1E4F66BF8], MEMORY[0x1E4FBB718]);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for DayScheduleProvider(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C20A32D4);
}

uint64_t sub_1C20A32D4(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    sub_1C20A356C(0, &qword_1EA2C67D0, MEMORY[0x1E4F66BF8], MEMORY[0x1E4FBB718]);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for DayScheduleProvider(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C20A33C8);
}

void *sub_1C20A33C8(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    sub_1C20A356C(0, &qword_1EA2C67D0, MEMORY[0x1E4F66BF8], MEMORY[0x1E4FBB718]);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 24);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_1C20A34A0()
{
  sub_1C20A356C(319, &qword_1EA2C67D0, MEMORY[0x1E4F66BF8], MEMORY[0x1E4FBB718]);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_1C20A356C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_1C20A35D0()
{
  unint64_t result = qword_1EBF0B7B0;
  if (!qword_1EBF0B7B0)
  {
    sub_1C2147AC0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBF0B7B0);
  }
  return result;
}

unint64_t sub_1C20A3628()
{
  unint64_t result = qword_1EA2C6850;
  if (!qword_1EA2C6850)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA2C6850);
  }
  return result;
}

void *sub_1C20A366C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_1C2148E10();
  sub_1C2148E00();
  sub_1C2148DB0();
  swift_release();
  sub_1C20434A0();
  sub_1C214AC00();
  sub_1C2148D70();
  swift_allocObject();
  uint64_t v11 = sub_1C2148C90();
  v5[2] = a1;
  v5[3] = a2;
  v5[4] = a3;
  v5[5] = a4;
  v5[6] = a5;
  v5[7] = v11;
  return v5;
}

uint64_t sub_1C20A372C()
{
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for InteractionSummaryOverviewDataSourceProvider()
{
  return self;
}

void *sub_1C20A37A8()
{
  return sub_1C20A39E4();
}

uint64_t sub_1C20A37CC(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x1E4FBC860];
  if (v3)
  {
    uint64_t v19 = MEMORY[0x1E4FBC860];
    sub_1C214B850();
    uint64_t v6 = (uint64_t *)(a1 + 32);
    uint64_t v7 = a2[3];
    uint64_t v8 = a2[5];
    uint64_t v17 = (void *)a2[4];
    uint64_t v18 = (void *)a2[2];
    uint64_t v16 = a2[6];
    type metadata accessor for InteractionSeverityDataSource();
    do
    {
      uint64_t v9 = *v6++;
      uint64_t v10 = swift_allocObject();
      *(void *)(v10 + qword_1EA2C5978) = 0;
      *(void *)(v10 + qword_1EA2C5980) = 0;
      uint64_t v11 = v10 + qword_1EA2C5988;
      *(_OWORD *)uint64_t v11 = 0u;
      *(_OWORD *)(v11 + 16) = 0u;
      *(void *)(v11 + 32) = 0;
      *(void *)(v10 + qword_1EA2C5990) = MEMORY[0x1E4FBC870];
      *(void *)(v10 + qword_1EA2C5998) = v9;
      *(void *)(v10 + qword_1EA2C5958) = v18;
      *(void *)(v10 + qword_1EA2C5960) = v7;
      *(void *)(v10 + qword_1EA2C5968) = v17;
      *(void *)(v10 + qword_1EA2C5970) = v8;
      *(void *)(v10 + qword_1EA2C59A8) = v16;
      id v12 = v18;
      swift_retain_n();
      id v13 = v17;
      swift_retain_n();
      id v14 = v12;
      id v15 = v13;
      sub_1C2147F50();
      swift_retain();
      sub_1C2032CA8();
      swift_release();

      swift_release();
      swift_release();
      sub_1C214B820();
      sub_1C214B860();
      sub_1C214B870();
      sub_1C214B830();
      --v3;
    }
    while (v3);
    return v19;
  }
  return result;
}

void *sub_1C20A39E4()
{
  uint64_t v1 = v0;
  sub_1C20A3C74();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C2150000;
  *(_OWORD *)(inited + 32) = xmmword_1C214FCD0;
  *(void *)(inited + 48) = 3;
  if (sub_1C2148CC0())
  {
    uint64_t result = objc_msgSend(self, sel_sharedBehavior);
    if (!result)
    {
      __break(1u);
      return result;
    }
    uint64_t v4 = result;
    unsigned int v5 = objc_msgSend(result, sel_isAppleInternalInstall);

    if (v5)
    {
      uint64_t v6 = sub_1C1F3B978((void *)1, 4, 1, (void *)inited);
      long long v6[2] = 4;
      v6[7] = 4;
    }
  }
  uint64_t v7 = v1[6];
  type metadata accessor for InteractionFactorsDataSource();
  swift_allocObject();
  uint64_t v8 = swift_retain();
  uint64_t v9 = sub_1C200D8AC(v8, v7);
  uint64_t v10 = sub_1C1F3B234(0, 1, 1, MEMORY[0x1E4FBC860]);
  unint64_t v12 = v10[2];
  unint64_t v11 = v10[3];
  if (v12 >= v11 >> 1) {
    uint64_t v10 = sub_1C1F3B234((void *)(v11 > 1), v12 + 1, 1, v10);
  }
  uint64_t v13 = sub_1C20A3CCC(&qword_1EA2C6890, (void (*)(uint64_t))type metadata accessor for InteractionFactorsDataSource);
  void v10[2] = v12 + 1;
  id v14 = &v10[2 * v12];
  v14[4] = v9;
  uint64_t v14[5] = v13;
  type metadata accessor for InteractionSeperatorLineDataSource();
  swift_allocObject();
  uint64_t v15 = InteractionSeperatorLineDataSource.init()();
  unint64_t v17 = v10[2];
  unint64_t v16 = v10[3];
  if (v17 >= v16 >> 1) {
    uint64_t v10 = sub_1C1F3B234((void *)(v16 > 1), v17 + 1, 1, v10);
  }
  uint64_t v18 = sub_1C20A3CCC(&qword_1EA2C6898, (void (*)(uint64_t))type metadata accessor for InteractionSeperatorLineDataSource);
  void v10[2] = v17 + 1;
  uint64_t v19 = &v10[2 * v17];
  v19[4] = v15;
  v19[5] = v18;
  swift_retain();
  uint64_t v20 = swift_bridgeObjectRetain();
  unint64_t v21 = sub_1C20A37CC(v20, v1);
  swift_bridgeObjectRelease_n();
  swift_release();
  uint64_t v22 = sub_1C1F38FB0(v21);
  swift_bridgeObjectRelease();
  sub_1C1F7DC8C(v22);
  return v10;
}

void sub_1C20A3C74()
{
  if (!qword_1EA2C3288)
  {
    type metadata accessor for HKDrugInteractionSeverityLevel(255);
    unint64_t v0 = sub_1C214BA50();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C3288);
    }
  }
}

uint64_t sub_1C20A3CCC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id MedmojiPickerViewController.__allocating_init(config:)(uint64_t a1)
{
  id v3 = objc_allocWithZone(v1);
  return MedmojiPickerViewController.init(config:)(a1);
}

id sub_1C20A3D54()
{
  uint64_t v1 = OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController____lazy_storage___medicationView;
  uint64_t v2 = *(void **)(v0
                + OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController____lazy_storage___medicationView);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController____lazy_storage___medicationView);
  }
  else
  {
    id v4 = objc_msgSend(objc_allocWithZone((Class)sub_1C2148EF0()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    unsigned int v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_1C20A3DEC()
{
  uint64_t v1 = OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController____lazy_storage___medmojiCategorySelectionView;
  uint64_t v2 = *(void **)(v0
                + OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController____lazy_storage___medmojiCategorySelectionView);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController____lazy_storage___medmojiCategorySelectionView);
  }
  else
  {
    id v4 = sub_1C20A7814(*(void **)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton), *(void **)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton));
    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    unsigned int v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_1C20A3E78()
{
  uint64_t v1 = OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController____lazy_storage___shapeSelectionViewController;
  uint64_t v2 = *(void **)(v0
                + OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController____lazy_storage___shapeSelectionViewController);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController____lazy_storage___shapeSelectionViewController);
  }
  else
  {
    id v4 = (void *)sub_1C20A3EDC(v0);
    unsigned int v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

uint64_t sub_1C20A3EDC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapePublisher);
  *(void *)((char *)objc_allocWithZone((Class)type metadata accessor for ShapeSelectionViewController())
            + qword_1EA2C4F38) = v1;
  sub_1C2148820();
  sub_1C20A8B34(0, (unint64_t *)&qword_1EA2C69F0, (uint64_t (*)(uint64_t))sub_1C1F41E50, MEMORY[0x1E4FBBE00]);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1C214FCD0;
  char v8 = 1;
  type metadata accessor for VisualizationShapeDataSource();
  swift_allocObject();
  uint64_t v3 = swift_retain_n();
  uint64_t v4 = sub_1C1F99470(v3, &v8);
  uint64_t v5 = MEMORY[0x1E4F66470];
  *(void *)(v2 + 32) = v4;
  *(void *)(v2 + 40) = v5;
  sub_1C2148850();
  uint64_t v6 = sub_1C2148AC0();
  swift_release();
  return v6;
}

id sub_1C20A3FFC()
{
  uint64_t v1 = v0;
  sub_1C20A8B34(0, (unint64_t *)&qword_1EBF0B690, MEMORY[0x1E4F66C80], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v14 - v3;
  uint64_t v5 = OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController____lazy_storage___colorSelectionViewController;
  uint64_t v6 = *(void **)(v1
                + OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController____lazy_storage___colorSelectionViewController);
  if (v6)
  {
    id v7 = *(id *)(v1
               + OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController____lazy_storage___colorSelectionViewController);
  }
  else
  {
    uint64_t v8 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_config;
    swift_beginAccess();
    sub_1C20A75D4(v8, (uint64_t)v4, (unint64_t *)&qword_1EBF0B690, MEMORY[0x1E4F66C80]);
    id v9 = objc_allocWithZone((Class)type metadata accessor for ColorSelectionViewController());
    uint64_t v10 = (void *)sub_1C1FB69E8((uint64_t)v4);
    unint64_t v11 = *(void **)(v1 + v5);
    *(void *)(v1 + v5) = v10;
    id v7 = v10;

    uint64_t v6 = 0;
  }
  id v12 = v6;
  return v7;
}

id MedmojiPickerViewController.init(config:)(uint64_t a1)
{
  uint64_t v84 = a1;
  uint64_t v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C20A8B34(0, (unint64_t *)&qword_1EBF0B690, MEMORY[0x1E4F66C80], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v83 = (uint64_t)&v61 - v4;
  sub_1C20A8B34(0, &qword_1EA2C2CA0, MEMORY[0x1E4F66C08], v2);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v85 = (char *)&v61 - v6;
  sub_1C20A8B34(0, (unint64_t *)&unk_1EBF0C2E0, MEMORY[0x1E4F273A8], v2);
  MEMORY[0x1F4188790](v7 - 8);
  BOOL v81 = (char *)&v61 - v8;
  uint64_t v9 = sub_1C2147750();
  uint64_t v89 = *(void *)(v9 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v9);
  uint64_t v87 = (char *)&v61 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v61 - v12;
  uint64_t v88 = sub_1C214B3D0();
  uint64_t v80 = *(void *)(v88 - 8);
  uint64_t v14 = MEMORY[0x1F4188790](v88);
  uint64_t v86 = (char *)&v61 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  unint64_t v17 = (char *)&v61 - v16;
  *(void *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController____lazy_storage___medicationView] = 0;
  uint64_t v78 = OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton;
  uint64_t v18 = qword_1EBF0CA00;
  uint64_t v79 = (uint64_t)v1;
  uint64_t v82 = v1;
  if (v18 != -1) {
    swift_once();
  }
  id v19 = (id)qword_1EBF0CA18;
  swift_bridgeObjectRetain();
  sub_1C2147730();
  uint64_t v21 = v20;
  swift_bridgeObjectRelease();

  sub_1C214B380();
  id v77 = self;
  id v22 = objc_msgSend(v77, sel_labelColor);
  sub_1C214B320();
  sub_1C214B2B0();
  sub_1C20A8B34(0, (unint64_t *)&unk_1EBF0C9A0, (uint64_t (*)(uint64_t))sub_1C1F7C7B0, MEMORY[0x1E4FBBE00]);
  uint64_t v76 = v23;
  uint64_t inited = swift_initStackObject();
  long long v75 = xmmword_1C214FCD0;
  *(_OWORD *)(inited + 16) = xmmword_1C214FCD0;
  unint64_t v25 = (void *)*MEMORY[0x1E4FB06F8];
  *(void *)(inited + 32) = *MEMORY[0x1E4FB06F8];
  uint64_t v26 = sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8E0);
  uint64_t v69 = v26;
  uint64_t v74 = *MEMORY[0x1E4FB28C8];
  uint64_t v73 = *MEMORY[0x1E4FB09E0];
  id v70 = v25;
  uint64_t v27 = sub_1C214B0A0();
  *(void *)(inited + 64) = v26;
  *(void *)(inited + 40) = v27;
  sub_1C1F49F18(inited);
  sub_1C2147760();
  uint64_t v28 = v89;
  uint64_t v29 = *(void (**)(char *, char *, uint64_t))(v89 + 16);
  uint64_t v71 = v89 + 16;
  uint64_t v72 = v29;
  v29(v87, v13, v9);
  uint64_t v61 = v21;
  swift_bridgeObjectRetain();
  long long v30 = v81;
  sub_1C2147720();
  uint64_t v67 = sub_1C2147710();
  uint64_t v31 = *(void *)(v67 - 8);
  uint64_t v66 = *(void (**)(char *, void, uint64_t, uint64_t))(v31 + 56);
  uint64_t v68 = v31 + 56;
  v66(v30, 0, 1, v67);
  sub_1C214B2F0();
  uint64_t v65 = sub_1C1F12718(0, &qword_1EBF0C928);
  uint64_t v32 = v9;
  uint64_t v62 = v9;
  uint64_t v33 = v80;
  BOOL v64 = *(void (**)(char *, char *, uint64_t))(v80 + 16);
  uint64_t v34 = v88;
  v64(v86, v17, v88);
  uint64_t v35 = (void *)sub_1C214B3E0();
  objc_msgSend(v35, sel_setContentHorizontalAlignment_, 4);
  objc_msgSend(v35, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  char v36 = *(void (**)(char *, uint64_t))(v28 + 8);
  uint64_t v89 = v28 + 8;
  uint64_t v63 = v36;
  v36(v13, v32);
  uint64_t v37 = *(void (**)(char *, uint64_t))(v33 + 8);
  v37(v17, v34);
  swift_bridgeObjectRelease();
  *(void *)(v79 + v78) = v35;
  uint64_t v80 = OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton;
  id v38 = (id)qword_1EBF0CA18;
  swift_bridgeObjectRetain();
  uint64_t v79 = sub_1C2147730();
  swift_bridgeObjectRelease();

  sub_1C214B380();
  id v39 = objc_msgSend(v77, sel_labelColor);
  sub_1C214B320();
  sub_1C214B2B0();
  uint64_t v40 = swift_initStackObject();
  *(_OWORD *)(v40 + 16) = v75;
  uint64_t v41 = v70;
  *(void *)(v40 + 32) = v70;
  id v42 = v41;
  uint64_t v43 = v69;
  uint64_t v44 = sub_1C214B0A0();
  *(void *)(v40 + 64) = v43;
  *(void *)(v40 + 40) = v44;
  sub_1C1F49F18(v40);
  sub_1C2147760();
  uint64_t v45 = v62;
  v72(v87, v13, v62);
  swift_bridgeObjectRetain();
  sub_1C2147720();
  v66(v30, 0, 1, v67);
  sub_1C214B2F0();
  uint64_t v46 = v88;
  v64(v86, v17, v88);
  uint64_t v47 = (void *)sub_1C214B3E0();
  objc_msgSend(v47, sel_setContentHorizontalAlignment_, 4);
  objc_msgSend(v47, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  v63(v13, v45);
  v37(v17, v46);
  swift_bridgeObjectRelease();
  unint64_t v48 = v82;
  *(void *)&v82[v80] = v47;
  *(void *)&v48[OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController____lazy_storage___medmojiCategorySelectionView] = 0;
  *(void *)&v48[OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController____lazy_storage___shapeSelectionViewController] = 0;
  *(void *)&v48[OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController____lazy_storage___colorSelectionViewController] = 0;
  *(void *)&v48[OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v48[OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_cancellables] = MEMORY[0x1E4FBC870];
  unint64_t v49 = &v48[OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_config];
  uint64_t v50 = sub_1C21492D0();
  uint64_t v51 = *(void *)(v50 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v51 + 56))(v49, 1, 1, v50);
  uint64_t v52 = v84;
  uint64_t v53 = v83;
  sub_1C20A75D4(v84, v83, (unint64_t *)&qword_1EBF0B690, MEMORY[0x1E4F66C80]);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v51 + 48))(v53, 1, v50) == 1)
  {
    sub_1C20A7654(v53, (unint64_t *)&qword_1EBF0B690, MEMORY[0x1E4F66C80]);
    uint64_t v54 = sub_1C2148F60();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v54 - 8) + 56))(v85, 1, 1, v54);
  }
  else
  {
    uint64_t v55 = v85;
    sub_1C21492C0();
    (*(void (**)(uint64_t, uint64_t))(v51 + 8))(v53, v50);
    uint64_t v56 = sub_1C2148F60();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v56 - 8) + 56))(v55, 0, 1, v56);
  }
  sub_1C20A76C4(0, (unint64_t *)&qword_1EA2C2CC0, &qword_1EA2C2CA0, MEMORY[0x1E4F66C08]);
  swift_allocObject();
  *(void *)&v48[OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapePublisher] = sub_1C2149EB0();

  char v57 = (objc_class *)type metadata accessor for MedmojiPickerViewController();
  v90.receiver = v48;
  v90.super_class = v57;
  id v58 = objc_msgSendSuper2(&v90, sel_initWithNibName_bundle_, 0, 0);
  uint64_t v59 = (uint64_t)v58 + OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_config;
  swift_beginAccess();
  sub_1C200700C(v52, v59);
  swift_endAccess();
  return v58;
}

uint64_t type metadata accessor for MedmojiPickerViewController()
{
  uint64_t result = qword_1EA2C68F0;
  if (!qword_1EA2C68F0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1C20A4DB0()
{
  v14.receiver = v0;
  v14.super_class = (Class)type metadata accessor for MedmojiPickerViewController();
  objc_msgSendSuper2(&v14, sel_viewDidLoad);
  id v1 = objc_msgSend(v0, sel_view);
  if (v1)
  {
    uint64_t v2 = v1;
    id v3 = objc_msgSend(self, sel_systemBackgroundColor);
    objc_msgSend(v2, sel_setBackgroundColor_, v3);

    id v4 = objc_msgSend(v0, sel_navigationItem);
    id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB14A8]), sel_initWithBarButtonSystemItem_target_action_, 0, v0, sel_doneButtonTappped_);
    objc_msgSend(v4, sel_setRightBarButtonItem_, v5);

    id v6 = objc_msgSend(v0, sel_navigationItem);
    id v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB14A8]), sel_initWithBarButtonSystemItem_target_action_, 1, v0, sel_cancelButtonTappped_);
    objc_msgSend(v6, sel_setLeftBarButtonItem_, v7);

    if (qword_1EBF0CA00 != -1) {
      swift_once();
    }
    id v8 = (id)qword_1EBF0CA18;
    swift_bridgeObjectRetain();
    sub_1C2147730();
    swift_bridgeObjectRelease();

    uint64_t v9 = (void *)sub_1C214A5B0();
    swift_bridgeObjectRelease();
    objc_msgSend(v0, sel_setTitle_, v9, 0xE000000000000000);

    objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton], sel_addTarget_action_forControlEvents_, v0, sel_shapeButtonTappped_, 64);
    objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton], sel_addTarget_action_forControlEvents_, v0, sel_colorButtonTappped_, 64);
    id v10 = sub_1C20A3E78();
    objc_msgSend(v0, sel_addChildViewController_, v10);

    id v11 = sub_1C20A3E78();
    objc_msgSend(v11, sel_didMoveToParentViewController_, v0);

    id v12 = sub_1C20A3E78();
    id v13 = objc_msgSend(v12, sel_collectionView);

    if (v13)
    {
      objc_msgSend(v13, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);

      sub_1C20A5DDC();
      sub_1C20A5120();
      sub_1C20A5254();
      sub_1C20A5714();
      sub_1C20A6F1C();
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_1C20A5120()
{
  id v1 = objc_msgSend(v0, sel_view);
  if (!v1)
  {
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v2 = v1;
  id v3 = sub_1C20A3D54();
  objc_msgSend(v2, sel_addSubview_, v3);

  id v4 = objc_msgSend(v0, sel_view);
  if (!v4)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  id v5 = v4;
  id v6 = sub_1C20A3DEC();
  objc_msgSend(v5, sel_addSubview_, v6);

  id v7 = objc_msgSend(v0, sel_view);
  if (!v7)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  id v8 = v7;
  id v9 = sub_1C20A3E78();
  id v10 = objc_msgSend(v9, sel_collectionView);

  if (!v10)
  {
LABEL_11:
    __break(1u);
    return;
  }
  objc_msgSend(v8, sel_addSubview_, v10);
}

void sub_1C20A5254()
{
  id v1 = v0;
  id v2 = sub_1C20A3FFC();
  objc_msgSend(v1, sel_addChildViewController_, v2);

  id v3 = sub_1C20A3FFC();
  objc_msgSend(v3, sel_didMoveToParentViewController_, v1);

  id v4 = sub_1C20A3FFC();
  id v5 = objc_msgSend(v4, sel_collectionView);

  if (!v5)
  {
    __break(1u);
    goto LABEL_16;
  }
  objc_msgSend(v5, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);

  id v6 = sub_1C20A3FFC();
  id v7 = objc_msgSend(v6, sel_collectionView);

  if (!v7)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  objc_msgSend(v7, sel_setHidden_, 1);

  id v8 = objc_msgSend(v1, sel_view);
  if (!v8)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  id v9 = v8;
  id v10 = sub_1C20A3FFC();
  id v11 = objc_msgSend(v10, sel_collectionView);

  if (!v11)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  objc_msgSend(v9, sel_addSubview_, v11);

  sub_1C1F0ED28();
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1C21510C0;
  id v13 = sub_1C20A3FFC();
  id v14 = objc_msgSend(v13, sel_collectionView);

  if (!v14)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  id v15 = objc_msgSend(v14, sel_topAnchor);

  id v16 = sub_1C20A3DEC();
  id v17 = objc_msgSend(v16, sel_bottomAnchor);

  id v18 = objc_msgSend(v15, sel_constraintEqualToAnchor_, v17);
  *(void *)(v12 + 32) = v18;
  id v19 = sub_1C20A3FFC();
  id v20 = objc_msgSend(v19, sel_collectionView);

  if (!v20)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  id v21 = objc_msgSend(v20, sel_leadingAnchor);

  id v22 = objc_msgSend(v1, sel_view);
  if (!v22)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v23 = v22;
  id v24 = objc_msgSend(v22, sel_leadingAnchor);

  id v25 = objc_msgSend(v21, sel_constraintEqualToAnchor_, v24);
  *(void *)(v12 + 40) = v25;
  id v26 = sub_1C20A3FFC();
  id v27 = objc_msgSend(v26, sel_collectionView);

  if (!v27)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  id v28 = objc_msgSend(v27, sel_trailingAnchor);

  id v29 = objc_msgSend(v1, sel_view);
  if (!v29)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  long long v30 = v29;
  id v31 = objc_msgSend(v29, sel_trailingAnchor);

  id v32 = objc_msgSend(v28, sel_constraintEqualToAnchor_, v31);
  *(void *)(v12 + 48) = v32;
  id v33 = sub_1C20A3FFC();
  id v34 = objc_msgSend(v33, sel_collectionView);

  if (!v34)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  id v35 = objc_msgSend(v34, sel_bottomAnchor);

  id v36 = objc_msgSend(v1, sel_view);
  if (!v36)
  {
LABEL_25:
    __break(1u);
    return;
  }
  uint64_t v37 = v36;
  id v38 = self;
  id v39 = objc_msgSend(v37, sel_bottomAnchor);

  id v40 = objc_msgSend(v35, sel_constraintEqualToAnchor_, v39);
  *(void *)(v12 + 56) = v40;
  sub_1C214A7A0();
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C810);
  uint64_t v41 = (void *)sub_1C214A770();
  swift_bridgeObjectRelease();
  objc_msgSend(v38, sel_activateConstraints_, v41);

  sub_1C20A65B0();
}

void sub_1C20A5714()
{
  sub_1C1F0ED28();
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1C214FCA0;
  id v2 = sub_1C20A3D54();
  id v3 = objc_msgSend(v2, sel_heightAnchor);

  id v4 = objc_msgSend(v3, sel_constraintEqualToConstant_, 104.0);
  *(void *)(v1 + 32) = v4;
  id v5 = sub_1C20A3D54();
  id v6 = objc_msgSend(v5, sel_widthAnchor);

  id v7 = objc_msgSend(v6, sel_constraintEqualToConstant_, 104.0);
  *(void *)(v1 + 40) = v7;
  id v8 = sub_1C20A3D54();
  id v9 = objc_msgSend(v8, sel_topAnchor);

  id v10 = objc_msgSend(v0, sel_view);
  if (!v10)
  {
    __break(1u);
    goto LABEL_16;
  }
  id v11 = v10;
  id v12 = objc_msgSend(v10, sel_safeAreaLayoutGuide);

  id v13 = objc_msgSend(v12, sel_topAnchor);
  id v14 = objc_msgSend(v9, sel_constraintEqualToAnchor_constant_, v13, 20.0);

  *(void *)(v1 + 48) = v14;
  id v15 = sub_1C20A3D54();
  id v16 = objc_msgSend(v15, sel_centerXAnchor);

  id v17 = objc_msgSend(v0, sel_view);
  if (!v17)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  id v18 = v17;
  id v19 = objc_msgSend(v17, sel_centerXAnchor);

  id v20 = objc_msgSend(v16, sel_constraintEqualToAnchor_, v19);
  *(void *)(v1 + 56) = v20;
  id v21 = sub_1C20A3DEC();
  id v22 = objc_msgSend(v21, sel_topAnchor);

  id v23 = sub_1C20A3D54();
  id v24 = objc_msgSend(v23, sel_bottomAnchor);

  id v25 = objc_msgSend(v22, sel_constraintEqualToAnchor_constant_, v24, 30.0);
  *(void *)(v1 + 64) = v25;
  id v26 = sub_1C20A3DEC();
  id v27 = objc_msgSend(v26, sel_leadingAnchor);

  id v28 = objc_msgSend(v0, sel_view);
  if (!v28)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  id v29 = v28;
  id v30 = objc_msgSend(v28, sel_leadingAnchor);

  id v31 = objc_msgSend(v27, sel_constraintEqualToAnchor_, v30);
  *(void *)(v1 + 72) = v31;
  id v32 = sub_1C20A3DEC();
  id v33 = objc_msgSend(v32, sel_trailingAnchor);

  id v34 = objc_msgSend(v0, (SEL)&selRef_supportsOntologyBackedMedications);
  if (!v34)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  id v35 = v34;
  id v36 = objc_msgSend(v34, sel_trailingAnchor);

  id v37 = objc_msgSend(v33, sel_constraintEqualToAnchor_, v36);
  *(void *)(v1 + 80) = v37;
  id v38 = sub_1C20A3E78();
  id v39 = objc_msgSend(v38, sel_collectionView);

  if (!v39)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  id v40 = objc_msgSend(v39, sel_topAnchor);

  id v41 = sub_1C20A3DEC();
  id v42 = objc_msgSend(v41, sel_bottomAnchor);

  id v43 = objc_msgSend(v40, sel_constraintEqualToAnchor_, v42);
  *(void *)(v1 + 88) = v43;
  id v44 = sub_1C20A3E78();
  id v45 = objc_msgSend(v44, sel_collectionView);

  if (!v45)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  id v46 = objc_msgSend(v45, sel_leadingAnchor);

  id v47 = objc_msgSend(v0, sel_view);
  if (!v47)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  unint64_t v48 = v47;
  id v49 = objc_msgSend(v47, sel_leadingAnchor);

  id v50 = objc_msgSend(v46, sel_constraintEqualToAnchor_, v49);
  *(void *)(v1 + 96) = v50;
  id v51 = sub_1C20A3E78();
  id v52 = objc_msgSend(v51, sel_collectionView);

  if (!v52)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  id v53 = objc_msgSend(v52, sel_trailingAnchor);

  id v54 = objc_msgSend(v0, sel_view);
  if (!v54)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v55 = v54;
  id v56 = objc_msgSend(v54, sel_trailingAnchor);

  id v57 = objc_msgSend(v53, sel_constraintEqualToAnchor_, v56);
  *(void *)(v1 + 104) = v57;
  id v58 = sub_1C20A3E78();
  id v59 = objc_msgSend(v58, sel_collectionView);

  if (!v59)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  id v60 = objc_msgSend(v59, sel_bottomAnchor);

  id v61 = objc_msgSend(v0, sel_view);
  if (!v61)
  {
LABEL_25:
    __break(1u);
    return;
  }
  uint64_t v62 = v61;
  uint64_t v63 = self;
  id v64 = objc_msgSend(v62, sel_bottomAnchor);

  id v65 = objc_msgSend(v60, sel_constraintEqualToAnchor_, v64);
  *(void *)(v1 + 112) = v65;
  sub_1C214A7A0();
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C810);
  id v66 = (id)sub_1C214A770();
  swift_bridgeObjectRelease();
  objc_msgSend(v63, sel_activateConstraints_, v66);
}

uint64_t sub_1C20A5DDC()
{
  uint64_t v1 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FBCC28];
  sub_1C20A8B34(0, &qword_1EBF0C7E8, MEMORY[0x1E4FBCC28], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v2 - 8);
  id v4 = (char *)v13 - v3;
  sub_1C1F9B6F4();
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  id v9 = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  void v13[2] = *(void *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapePublisher);
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0CB10);
  swift_retain();
  id v14 = (id)sub_1C214AD80();
  uint64_t v10 = sub_1C214AD20();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v4, 1, 1, v10);
  id v11 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F66C08];
  sub_1C20A76C4(0, (unint64_t *)&qword_1EA2C2CC0, &qword_1EA2C2CA0, MEMORY[0x1E4F66C08]);
  sub_1C20A8A88(&qword_1EA2C4390, (unint64_t *)&qword_1EA2C2CC0, &qword_1EA2C2CA0, v11);
  sub_1C1F43FD4();
  sub_1C214A0A0();
  sub_1C20A7654((uint64_t)v4, &qword_1EBF0C7E8, v1);

  swift_release();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1C20A8AE0(&qword_1EA2C4398, (void (*)(uint64_t))sub_1C1F9B6F4);
  sub_1C214A0F0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  swift_beginAccess();
  sub_1C2149E20();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1C20A6100(uint64_t a1, uint64_t a2)
{
  id v4 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C20A8B34(0, (unint64_t *)&qword_1EBF0B690, MEMORY[0x1E4F66C80], MEMORY[0x1E4FBB718]);
  uint64_t v6 = MEMORY[0x1F4188790](v5 - 8);
  uint64_t v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x1F4188790](v6);
  id v11 = (char *)&v33 - v10;
  MEMORY[0x1F4188790](v9);
  id v13 = (char *)&v33 - v12;
  sub_1C20A8B34(0, &qword_1EA2C2CA0, MEMORY[0x1E4F66C08], v4);
  MEMORY[0x1F4188790](v14 - 8);
  id v16 = (char *)&v33 - v15;
  uint64_t v17 = sub_1C2148F60();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  id v20 = (char *)&v33 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = MEMORY[0x1C8754850](a2 + 16);
  if (result)
  {
    id v22 = (void *)result;
    id v34 = v8;
    id v35 = v11;
    id v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48);
    objc_msgSend(*(id *)(result + OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton), sel_setEnabled_, v23(a1, 1, v17) != 1);
    sub_1C20A75D4(a1, (uint64_t)v16, &qword_1EA2C2CA0, MEMORY[0x1E4F66C08]);
    if (v23((uint64_t)v16, 1, v17) == 1)
    {

      return sub_1C20A7654((uint64_t)v16, &qword_1EA2C2CA0, MEMORY[0x1E4F66C08]);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v20, v16, v17);
      uint64_t v24 = (uint64_t)v22 + OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_config;
      swift_beginAccess();
      id v25 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F66C80];
      sub_1C20A75D4(v24, (uint64_t)v13, (unint64_t *)&qword_1EBF0B690, MEMORY[0x1E4F66C80]);
      uint64_t v26 = sub_1C21492D0();
      uint64_t v27 = *(void *)(v26 - 8);
      int v28 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v27 + 48))(v13, 1, v26);
      sub_1C20A7654((uint64_t)v13, (unint64_t *)&qword_1EBF0B690, v25);
      if (v28 == 1)
      {
        uint64_t v29 = (uint64_t)v35;
        MedicationShape.previewConfig.getter((uint64_t)v35);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v27 + 56))(v29, 0, 1, v26);
        swift_beginAccess();
        sub_1C20A7780(v29, v24);
        swift_endAccess();
        id v30 = sub_1C20A3D54();
        id v31 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F66C80];
        sub_1C20A75D4(v24, (uint64_t)v34, (unint64_t *)&qword_1EBF0B690, MEMORY[0x1E4F66C80]);
        sub_1C2148ED0();

        sub_1C20A7654(v29, (unint64_t *)&qword_1EBF0B690, v31);
      }
      id v32 = sub_1C20A3FFC();
      swift_retain();

      sub_1C2149E70();
      swift_release();
      return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v20, v17);
    }
  }
  return result;
}

uint64_t sub_1C20A65B0()
{
  uint64_t v0 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FBCC28];
  sub_1C20A8B34(0, &qword_1EBF0C7E8, MEMORY[0x1E4FBCC28], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)v14 - v2;
  sub_1C1FB90C4();
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (char *)sub_1C20A3FFC();
  uint64_t v10 = *(void *)&v9[qword_1EA2C4698];
  swift_retain();

  v14[2] = v10;
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0CB10);
  id v15 = (id)sub_1C214AD80();
  uint64_t v11 = sub_1C214AD20();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v3, 1, 1, v11);
  uint64_t v12 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F66C80];
  sub_1C20A76C4(0, &qword_1EA2C46F0, (unint64_t *)&qword_1EBF0B690, MEMORY[0x1E4F66C80]);
  sub_1C20A8A88((unint64_t *)&qword_1EA2C4700, &qword_1EA2C46F0, (unint64_t *)&qword_1EBF0B690, v12);
  sub_1C1F43FD4();
  sub_1C214A0A0();
  sub_1C20A7654((uint64_t)v3, &qword_1EBF0C7E8, v0);

  swift_release();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1C20A8AE0(&qword_1EA2C4708, (void (*)(uint64_t))sub_1C1FB90C4);
  sub_1C214A0F0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_beginAccess();
  sub_1C2149E20();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1C20A68E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C20A8B34(0, &qword_1EA2C2CA0, MEMORY[0x1E4F66C08], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = &v27[-v6];
  sub_1C20A8B34(0, (unint64_t *)&qword_1EBF0B690, MEMORY[0x1E4F66C80], v4);
  uint64_t v9 = MEMORY[0x1F4188790](v8 - 8);
  uint64_t v11 = &v27[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = MEMORY[0x1F4188790](v9);
  uint64_t v14 = &v27[-v13];
  MEMORY[0x1F4188790](v12);
  id v16 = &v27[-v15];
  uint64_t v17 = sub_1C21492D0();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  id v20 = &v27[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  uint64_t result = MEMORY[0x1C8754850](a2 + 16);
  if (result)
  {
    id v22 = (void *)result;
    sub_1C20A75D4(a1, (uint64_t)v16, (unint64_t *)&qword_1EBF0B690, MEMORY[0x1E4F66C80]);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
    {

      return sub_1C20A7654((uint64_t)v16, (unint64_t *)&qword_1EBF0B690, MEMORY[0x1E4F66C80]);
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v18 + 32))(v20, v16, v17);
      swift_retain();
      sub_1C2149E90();
      swift_release();
      uint64_t v23 = sub_1C2148F60();
      if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 48))(v7, 1, v23) == 1)
      {

        sub_1C20A7654((uint64_t)v7, &qword_1EA2C2CA0, MEMORY[0x1E4F66C08]);
      }
      else
      {
        sub_1C20A7654((uint64_t)v7, &qword_1EA2C2CA0, MEMORY[0x1E4F66C08]);
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v18 + 16))(v14, v20, v17);
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v18 + 56))(v14, 0, 1, v17);
        uint64_t v24 = (uint64_t)v22 + OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_config;
        swift_beginAccess();
        sub_1C20A7780((uint64_t)v14, v24);
        swift_endAccess();
        id v25 = sub_1C20A3D54();
        uint64_t v26 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F66C80];
        sub_1C20A75D4(v24, (uint64_t)v11, (unint64_t *)&qword_1EBF0B690, MEMORY[0x1E4F66C80]);
        sub_1C2148ED0();

        sub_1C20A7654((uint64_t)v14, (unint64_t *)&qword_1EBF0B690, v26);
      }
      return (*(uint64_t (**)(unsigned char *, uint64_t))(v18 + 8))(v20, v17);
    }
  }
  return result;
}

void sub_1C20A6F1C()
{
}

void sub_1C20A6F38()
{
}

void sub_1C20A6F54(uint64_t a1, uint64_t a2, int a3, int a4)
{
  int v24 = a4;
  int v25 = a3;
  sub_1C20A8B34(0, &qword_1EBF0C920, MEMORY[0x1E4FB1290], MEMORY[0x1E4FBB718]);
  uint64_t v6 = MEMORY[0x1F4188790](v5 - 8);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x1F4188790](v6);
  uint64_t v11 = (char *)&v24 - v10;
  MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v24 - v12;
  uint64_t v26 = v4;
  sub_1C214B3F0();
  uint64_t v14 = sub_1C214B3D0();
  uint64_t v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  if (v15(v13, 1, v14))
  {
    id v16 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FB1290];
    sub_1C20A75D4((uint64_t)v13, (uint64_t)v8, &qword_1EBF0C920, MEMORY[0x1E4FB1290]);
    sub_1C214B400();
    sub_1C20A7654((uint64_t)v13, &qword_1EBF0C920, v16);
  }
  else
  {
    id v17 = objc_msgSend(self, sel_systemBlueColor);
    sub_1C214B320();
    sub_1C214B400();
  }
  sub_1C214B3F0();
  if (v15(v11, 1, v14))
  {
    uint64_t v18 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FB1290];
    sub_1C20A75D4((uint64_t)v11, (uint64_t)v8, &qword_1EBF0C920, MEMORY[0x1E4FB1290]);
    sub_1C214B400();
    sub_1C20A7654((uint64_t)v11, &qword_1EBF0C920, v18);
  }
  else
  {
    id v19 = objc_msgSend(self, sel_labelColor);
    sub_1C214B320();
    sub_1C214B400();
  }
  id v20 = sub_1C20A3E78();
  id v21 = objc_msgSend(v20, sel_collectionView);

  if (v21)
  {
    objc_msgSend(v21, sel_setHidden_, v25 & 1);

    id v22 = sub_1C20A3FFC();
    id v23 = objc_msgSend(v22, sel_collectionView);

    if (v23)
    {
      objc_msgSend(v23, sel_setHidden_, v24 & 1);

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

id MedmojiPickerViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = v3;
  if (a2)
  {
    uint64_t v6 = (void *)sub_1C214A5B0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = 0;
  }
  id v7 = objc_msgSend(objc_allocWithZone(v4), sel_initWithNibName_bundle_, v6, a3);

  return v7;
}

void MedmojiPickerViewController.init(nibName:bundle:)()
{
}

id MedmojiPickerViewController.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MedmojiPickerViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t dispatch thunk of MedmojiPickerDelegate.didPickMedmojiWithConfig(config:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of MedmojiPickerDelegate.didCancelMemojiPicking()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_1C20A7498()
{
  return type metadata accessor for MedmojiPickerViewController();
}

void sub_1C20A74A0()
{
  sub_1C20A8B34(319, (unint64_t *)&qword_1EBF0B690, MEMORY[0x1E4F66C80], MEMORY[0x1E4FBB718]);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for MedmojiPickerViewController(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MedmojiPickerViewController);
}

uint64_t dispatch thunk of MedmojiPickerViewController.__allocating_init(config:)()
{
  return (*(uint64_t (**)(void))(v0 + 344))();
}

uint64_t sub_1C20A75D4(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_1C20A8B34(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_1C20A7654(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1C20A8B34(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

void sub_1C20A76C4(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  if (!*a2)
  {
    sub_1C20A8B34(255, a3, a4, MEMORY[0x1E4FBB718]);
    unint64_t v5 = sub_1C2149EA0();
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_1C20A7740()
{
  swift_unknownObjectWeakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C20A7778(uint64_t a1)
{
  return sub_1C20A68E4(a1, v1);
}

uint64_t sub_1C20A7780(uint64_t a1, uint64_t a2)
{
  sub_1C20A8B34(0, (unint64_t *)&qword_1EBF0B690, MEMORY[0x1E4F66C80], MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

id sub_1C20A7814(void *a1, void *a2)
{
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1EB0]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v3 = self;
  id v4 = objc_msgSend(v3, sel_secondarySystemBackgroundColor);
  objc_msgSend(v2, sel_setBackgroundColor_, v4);

  objc_msgSend(v2, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F67C08]), sel_init);
  HKUIOnePixel();
  objc_msgSend(v5, sel_setSeparatorThickness_);
  id v6 = objc_msgSend(v3, sel_separatorColor);
  objc_msgSend(v5, sel_setColor_, v6);

  objc_msgSend(v5, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  id v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F67C08]), sel_init);
  HKUIOnePixel();
  objc_msgSend(v7, sel_setSeparatorThickness_);
  id v8 = objc_msgSend(v3, sel_separatorColor);
  objc_msgSend(v7, sel_setColor_, v8);

  objc_msgSend(v7, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  sub_1C1F0ED28();
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1C214FCB0;
  *(void *)(v9 + 32) = a1;
  *(void *)(v9 + 4sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = a2;
  sub_1C214A7A0();
  id v10 = objc_allocWithZone(MEMORY[0x1E4FB1C60]);
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8F0);
  id v11 = a1;
  id v12 = a2;
  uint64_t v13 = (void *)sub_1C214A770();
  swift_bridgeObjectRelease();
  id v14 = objc_msgSend(v10, sel_initWithArrangedSubviews_, v13);

  objc_msgSend(v14, sel_setAxis_, 0);
  objc_msgSend(v14, sel_setAlignment_, 3);
  objc_msgSend(v14, sel_setDistribution_, 0);
  objc_msgSend(v14, sel_setSpacing_, 24.0);
  objc_msgSend(v14, (SEL)&selRef_tapToRadarButtonTappedWithSender_ + 7, 0);
  objc_msgSend(v2, sel_addSubview_, v5);
  objc_msgSend(v2, sel_addSubview_, v7);
  objc_msgSend(v2, sel_addSubview_, v14);
  id v47 = self;
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1C21594A0;
  id v16 = objc_msgSend(v5, sel_leadingAnchor);
  id v17 = objc_msgSend(v2, sel_leadingAnchor);
  id v18 = objc_msgSend(v16, sel_constraintEqualToAnchor_, v17);

  *(void *)(v15 + 32) = v18;
  id v19 = objc_msgSend(v5, sel_trailingAnchor);
  id v20 = objc_msgSend(v2, sel_trailingAnchor);
  id v21 = objc_msgSend(v19, sel_constraintEqualToAnchor_, v20);

  *(void *)(v15 + 4sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = v21;
  id v22 = objc_msgSend(v7, sel_leadingAnchor);
  id v23 = objc_msgSend(v2, sel_leadingAnchor);
  id v24 = objc_msgSend(v22, (SEL)&selRef_leadingAnchor + 6, v23);

  *(void *)(v15 + 48) = v24;
  id v25 = objc_msgSend(v7, sel_trailingAnchor);
  id v26 = objc_msgSend(v2, sel_trailingAnchor);
  id v27 = objc_msgSend(v25, (SEL)&selRef_leadingAnchor + 6, v26);

  *(void *)(v15 + 56) = v27;
  id v28 = objc_msgSend(v14, sel_centerXAnchor);
  id v29 = objc_msgSend(v2, sel_centerXAnchor);
  id v30 = objc_msgSend(v28, (SEL)&selRef_leadingAnchor + 6, v29);

  *(void *)(v15 + 64) = v30;
  id v31 = objc_msgSend(v5, sel_topAnchor);
  id v32 = objc_msgSend(v2, sel_topAnchor);
  id v33 = objc_msgSend(v31, (SEL)&selRef_leadingAnchor + 6, v32);

  *(void *)(v15 + 72) = v33;
  id v34 = objc_msgSend(v14, sel_topAnchor);
  id v35 = objc_msgSend(v5, sel_bottomAnchor);
  id v36 = objc_msgSend(v34, (SEL)&selRef_leadingAnchor + 6, v35);

  *(void *)(v15 + 8sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = v36;
  id v37 = objc_msgSend(v7, sel_topAnchor);
  id v38 = objc_msgSend(v14, sel_bottomAnchor);
  id v39 = objc_msgSend(v37, (SEL)&selRef_leadingAnchor + 6, v38);

  *(void *)(v15 + 88) = v39;
  id v40 = objc_msgSend(v7, sel_bottomAnchor);
  id v41 = objc_msgSend(v2, sel_bottomAnchor);
  id v42 = objc_msgSend(v40, (SEL)&selRef_leadingAnchor + 6, v41);

  *(void *)(v15 + 96) = v42;
  sub_1C214A7A0();
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C810);
  id v43 = (void *)sub_1C214A770();
  swift_bridgeObjectRelease();
  objc_msgSend(v47, sel_activateConstraints_, v43);

  return v2;
}

void sub_1C20A7ED4()
{
  sub_1C20A8B34(0, (unint64_t *)&unk_1EBF0C2E0, MEMORY[0x1E4F273A8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v1 - 8);
  id v70 = (char *)&v52 - v2;
  uint64_t v3 = sub_1C2147750();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v77 = v3;
  uint64_t v78 = v4;
  uint64_t v5 = MEMORY[0x1F4188790](v3);
  long long v75 = (char *)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v52 - v8;
  MEMORY[0x1F4188790](v7);
  id v11 = (char *)&v52 - v10;
  uint64_t v73 = sub_1C214B3D0();
  uint64_t v72 = *(void *)(v73 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v73);
  uint64_t v71 = (char *)&v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  uint64_t v76 = (char *)&v52 - v15;
  MEMORY[0x1F4188790](v14);
  id v17 = (char *)&v52 - v16;
  uint64_t v74 = v0;
  *(void *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController____lazy_storage___medicationView] = 0;
  uint64_t v69 = OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton;
  if (qword_1EBF0CA00 != -1) {
    swift_once();
  }
  id v18 = (id)qword_1EBF0CA18;
  swift_bridgeObjectRetain();
  sub_1C2147730();
  uint64_t v20 = v19;
  swift_bridgeObjectRelease();

  sub_1C214B380();
  id v68 = self;
  id v21 = objc_msgSend(v68, sel_labelColor);
  sub_1C214B320();
  sub_1C214B2B0();
  sub_1C20A8B34(0, (unint64_t *)&unk_1EBF0C9A0, (uint64_t (*)(uint64_t))sub_1C1F7C7B0, MEMORY[0x1E4FBBE00]);
  uint64_t v67 = v22;
  uint64_t inited = swift_initStackObject();
  long long v66 = xmmword_1C214FCD0;
  *(_OWORD *)(inited + 16) = xmmword_1C214FCD0;
  id v24 = (void *)*MEMORY[0x1E4FB06F8];
  *(void *)(inited + 32) = *MEMORY[0x1E4FB06F8];
  uint64_t v25 = sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8E0);
  uint64_t v65 = *MEMORY[0x1E4FB28C8];
  uint64_t v64 = *MEMORY[0x1E4FB09E0];
  id v61 = v24;
  uint64_t v54 = v25;
  uint64_t v26 = sub_1C214B0A0();
  *(void *)(inited + 64) = v25;
  *(void *)(inited + 4sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = v26;
  sub_1C1F49F18(inited);
  sub_1C2147760();
  uint64_t v27 = v78;
  id v28 = *(void (**)(char *, char *, uint64_t))(v78 + 16);
  uint64_t v62 = v78 + 16;
  uint64_t v63 = v28;
  id v57 = v9;
  uint64_t v29 = v77;
  v28(v9, v11, v77);
  uint64_t v52 = v20;
  swift_bridgeObjectRetain();
  id v30 = v70;
  sub_1C2147720();
  uint64_t v59 = sub_1C2147710();
  uint64_t v31 = *(void *)(v59 - 8);
  id v58 = *(void (**)(char *, void, uint64_t, uint64_t))(v31 + 56);
  uint64_t v60 = v31 + 56;
  v58(v30, 0, 1, v59);
  sub_1C214B2F0();
  uint64_t v56 = sub_1C1F12718(0, &qword_1EBF0C928);
  uint64_t v32 = v72;
  id v33 = v11;
  uint64_t v55 = *(void (**)(char *, char *, uint64_t))(v72 + 16);
  uint64_t v34 = v73;
  v55(v76, v17, v73);
  id v35 = (void *)sub_1C214B3E0();
  objc_msgSend(v35, sel_setContentHorizontalAlignment_, 4);
  objc_msgSend(v35, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  id v36 = *(void (**)(char *, uint64_t))(v27 + 8);
  uint64_t v78 = v27 + 8;
  id v53 = v36;
  v36(v33, v29);
  uint64_t v72 = *(void *)(v32 + 8);
  uint64_t v37 = v34;
  ((void (*)(char *, uint64_t))v72)(v17, v34);
  swift_bridgeObjectRelease();
  id v38 = v74;
  *(void *)&v74[v69] = v35;
  uint64_t v69 = OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton;
  id v39 = (id)qword_1EBF0CA18;
  swift_bridgeObjectRetain();
  uint64_t v52 = sub_1C2147730();
  swift_bridgeObjectRelease();

  id v40 = v71;
  sub_1C214B380();
  id v41 = objc_msgSend(v68, sel_labelColor);
  sub_1C214B320();
  sub_1C214B2B0();
  uint64_t v42 = swift_initStackObject();
  *(_OWORD *)(v42 + 16) = v66;
  id v43 = v61;
  *(void *)(v42 + 32) = v61;
  id v44 = v43;
  uint64_t v45 = v54;
  uint64_t v46 = sub_1C214B0A0();
  *(void *)(v42 + 64) = v45;
  *(void *)(v42 + 4sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = v46;
  sub_1C1F49F18(v42);
  id v47 = v75;
  sub_1C2147760();
  uint64_t v48 = v77;
  v63(v57, v47, v77);
  swift_bridgeObjectRetain();
  sub_1C2147720();
  v58(v30, 0, 1, v59);
  sub_1C214B2F0();
  v55(v76, v40, v37);
  id v49 = (void *)sub_1C214B3E0();
  objc_msgSend(v49, sel_setContentHorizontalAlignment_, 4);
  objc_msgSend(v49, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  v53(v47, v48);
  ((void (*)(char *, uint64_t))v72)(v40, v37);
  swift_bridgeObjectRelease();
  *(void *)&v38[v69] = v49;
  *(void *)&v38[OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController____lazy_storage___medmojiCategorySelectionView] = 0;
  *(void *)&v38[OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController____lazy_storage___shapeSelectionViewController] = 0;
  *(void *)&v38[OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController____lazy_storage___colorSelectionViewController] = 0;
  *(void *)&v38[OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v38[OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_cancellables] = MEMORY[0x1E4FBC870];
  id v50 = &v38[OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_config];
  uint64_t v51 = sub_1C21492D0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v51 - 8) + 56))(v50, 1, 1, v51);

  sub_1C214B910();
  __break(1u);
}

id sub_1C20A886C()
{
  uint64_t v1 = v0;
  sub_1C20A8B34(0, (unint64_t *)&qword_1EBF0B690, MEMORY[0x1E4F66C80], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v14 - v3;
  uint64_t v5 = sub_1C21492D0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v9 = sub_1C20A3D54();
  sub_1C2148EC0();

  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_1C20A7654((uint64_t)v4, (unint64_t *)&qword_1EBF0B690, MEMORY[0x1E4F66C80]);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
    uint64_t v10 = &v1[OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_delegate];
    if (MEMORY[0x1C8754850](&v1[OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_delegate]))
    {
      uint64_t v11 = *((void *)v10 + 1);
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(char *, uint64_t, uint64_t))(v11 + 8))(v8, ObjectType, v11);
      swift_unknownObjectRelease();
    }
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  return objc_msgSend(v1, sel_dismissViewControllerAnimated_completion_, 1, 0);
}

uint64_t sub_1C20A8A88(unint64_t *a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C20A76C4(255, a2, a3, a4);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C20A8AD8(uint64_t a1)
{
  return sub_1C20A6100(a1, v1);
}

uint64_t sub_1C20A8AE0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C20A8B34(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t SelectionEntryItem.identifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1C2147B20();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

BOOL static SelectionEntryItem.SwitchStyle.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t SelectionEntryItem.SwitchStyle.hash(into:)()
{
  return sub_1C214BB40();
}

uint64_t SelectionEntryItem.SwitchStyle.hashValue.getter()
{
  return sub_1C214BB80();
}

uint64_t SelectionEntryItem.listContentProvider.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SelectionEntryItem() + 20);

  return sub_1C1F236D8(v3, a1);
}

uint64_t type metadata accessor for SelectionEntryItem()
{
  uint64_t result = qword_1EA2C6940;
  if (!qword_1EA2C6940) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t SelectionEntryItem.isEnabled.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for SelectionEntryItem() + 24));
}

uint64_t SelectionEntryItem.isEnabled.setter(char a1)
{
  uint64_t result = type metadata accessor for SelectionEntryItem();
  *(unsigned char *)(v1 + *(int *)(result + 24)) = a1;
  return result;
}

uint64_t (*SelectionEntryItem.isEnabled.modify())()
{
  return nullsub_1;
}

void *SelectionEntryItem.leadingImage.getter()
{
  uint64_t v1 = *(void **)(v0 + *(int *)(type metadata accessor for SelectionEntryItem() + 28));
  id v2 = v1;
  return v1;
}

uint64_t SelectionEntryItem.switchStyle.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for SelectionEntryItem();
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 32));
  return result;
}

uint64_t SelectionEntryItem.selectionHandler.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for SelectionEntryItem() + 36));
  swift_retain();
  return v1;
}

uint64_t SelectionEntryItem.init(listContentProvider:leadingImage:switchStyle:isEnabled:selectionHandler:)@<X0>(long long *a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  char v13 = *a3;
  sub_1C2147B10();
  uint64_t v14 = (int *)type metadata accessor for SelectionEntryItem();
  uint64_t v15 = (uint64_t *)(a7 + v14[10]);
  type metadata accessor for SelectionOptionsCell();
  sub_1C20AC258(&qword_1EA2C5450, v16, (void (*)(uint64_t))type metadata accessor for SelectionOptionsCell);
  *uint64_t v15 = sub_1C21481D0();
  v15[1] = v17;
  uint64_t result = sub_1C1F31280(a1, a7 + v14[5]);
  *(void *)(a7 + v14[7]) = a2;
  *(unsigned char *)(a7 + v14[6]) = a4;
  *(unsigned char *)(a7 + v14[8]) = v13;
  uint64_t v19 = (void *)(a7 + v14[9]);
  void *v19 = a5;
  v19[1] = a6;
  return result;
}

uint64_t type metadata accessor for SelectionOptionsCell()
{
  return self;
}

uint64_t SelectionEntryItem.reuseIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for SelectionEntryItem() + 40));
  swift_bridgeObjectRetain();
  return v1;
}

unint64_t SelectionEntryItem.uniqueIdentifier.getter()
{
  return 0xD000000000000013;
}

uint64_t SelectionEntryItem.hash(into:)()
{
  uint64_t v1 = type metadata accessor for SelectionEntryItem();
  __swift_project_boxed_opaque_existential_0((void *)(v0 + *(int *)(v1 + 20)), *(void *)(v0 + *(int *)(v1 + 20) + 24));
  sub_1C214A560();
  return sub_1C214BB50();
}

uint64_t SelectionEntryItem.hashValue.getter()
{
  sub_1C214BB30();
  uint64_t v1 = type metadata accessor for SelectionEntryItem();
  __swift_project_boxed_opaque_existential_0((void *)(v0 + *(int *)(v1 + 20)), *(void *)(v0 + *(int *)(v1 + 20) + 24));
  sub_1C214A560();
  sub_1C214BB50();
  return sub_1C214BB80();
}

uint64_t sub_1C20A9140(uint64_t a1)
{
  sub_1C214BB30();
  __swift_project_boxed_opaque_existential_0((void *)(v1 + *(int *)(a1 + 20)), *(void *)(v1 + *(int *)(a1 + 20) + 24));
  sub_1C214A560();
  sub_1C214BB50();
  return sub_1C214BB80();
}

uint64_t sub_1C20A91C8(uint64_t a1, uint64_t a2)
{
  __swift_project_boxed_opaque_existential_0((void *)(v2 + *(int *)(a2 + 20)), *(void *)(v2 + *(int *)(a2 + 20) + 24));
  sub_1C214A560();
  return sub_1C214BB50();
}

uint64_t sub_1C20A9238(uint64_t a1, uint64_t a2)
{
  sub_1C214BB30();
  __swift_project_boxed_opaque_existential_0((void *)(v2 + *(int *)(a2 + 20)), *(void *)(v2 + *(int *)(a2 + 20) + 24));
  sub_1C214A560();
  sub_1C214BB50();
  return sub_1C214BB80();
}

uint64_t sub_1C20A92C0(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 40));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1C20A92FC(uint64_t a1, void *a2)
{
  sub_1C20AB3B0(a1, (uint64_t)v5, (unint64_t *)&qword_1EBF0C300, (uint64_t (*)(uint64_t))sub_1C1F1CB5C);
  uint64_t v3 = *a2 + OBJC_IVAR____TtC19HealthMedicationsUI20SelectionOptionsCell_item;
  swift_beginAccess();
  sub_1C1F32DDC((uint64_t)v5, v3);
  swift_endAccess();
  sub_1C20A979C();
  return sub_1C20AB430((uint64_t)v5, (unint64_t *)&qword_1EBF0C300, (uint64_t (*)(uint64_t))sub_1C1F1CB5C);
}

uint64_t sub_1C20A93A4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI20SelectionOptionsCell_item;
  swift_beginAccess();
  return sub_1C20AB3B0(v3, a1, (unint64_t *)&qword_1EBF0C300, (uint64_t (*)(uint64_t))sub_1C1F1CB5C);
}

uint64_t sub_1C20A9414(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI20SelectionOptionsCell_item;
  swift_beginAccess();
  sub_1C1F32DDC(a1, v3);
  swift_endAccess();
  sub_1C20A979C();
  return sub_1C20AB430(a1, (unint64_t *)&qword_1EBF0C300, (uint64_t (*)(uint64_t))sub_1C1F1CB5C);
}

uint64_t (*sub_1C20A94A0(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1C20A9500;
}

uint64_t sub_1C20A9500(uint64_t a1, char a2)
{
  uint64_t result = swift_endAccess();
  if ((a2 & 1) == 0) {
    return sub_1C20A979C();
  }
  return result;
}

id sub_1C20A9534()
{
  uint64_t v1 = OBJC_IVAR____TtC19HealthMedicationsUI20SelectionOptionsCell____lazy_storage___cellSwitch;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI20SelectionOptionsCell____lazy_storage___cellSwitch);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI20SelectionOptionsCell____lazy_storage___cellSwitch);
  }
  else
  {
    id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1CD0]), sel_init);
    objc_msgSend(v4, sel_addTarget_action_forControlEvents_, v0, sel_switchValueChanged_, 4096);
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + vsub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, 0, 1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

void sub_1C20A95C8()
{
}

void sub_1C20A95EC()
{
}

void sub_1C20A9608(uint64_t *a1)
{
  uint64_t v2 = *a1;
  id v3 = *(void **)(v1 + *a1);
  if (v3) {
    goto LABEL_4;
  }
  id v4 = objc_msgSend(self, sel_configurationWithTextStyle_, *MEMORY[0x1E4FB2988]);
  uint64_t v5 = (void *)sub_1C214A5B0();
  id v6 = objc_msgSend(self, sel_systemImageNamed_withConfiguration_, v5, v4);

  if (v6)
  {
    uint64_t v7 = *(void **)(v1 + v2);
    *(void *)(v1 + v2) = v6;
    v6;

    id v3 = 0;
LABEL_4:
    id v8 = v3;
    return;
  }
  __break(1u);
}

id sub_1C20A96F0()
{
  uint64_t v1 = OBJC_IVAR____TtC19HealthMedicationsUI20SelectionOptionsCell____lazy_storage___accessoryImageView;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI20SelectionOptionsCell____lazy_storage___accessoryImageView);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI20SelectionOptionsCell____lazy_storage___accessoryImageView);
  }
  else
  {
    sub_1C20A95EC();
    uint64_t v5 = v4;
    id v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1838]), sel_initWithImage_, v4);

    uint64_t v7 = *MEMORY[0x1E4FB2540];
    id v3 = v6;
    objc_msgSend(v3, sel_setAccessibilityTraits_, v7);
    id v8 = *(void **)(v0 + v1);
    *(void *)(v0 + vsub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, 0, 1) = v3;

    uint64_t v2 = 0;
  }
  id v9 = v2;
  return v3;
}

uint64_t sub_1C20A979C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1C21497F0();
  uint64_t v51 = *(void *)(v2 - 8);
  uint64_t v52 = v2;
  MEMORY[0x1F4188790](v2);
  id v4 = (char *)&v48 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1C2149BE0();
  uint64_t v49 = *(void *)(v5 - 8);
  id v50 = (uint8_t *)v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C20AC360(0, &qword_1EBF0C620, MEMORY[0x1E4FB0F28], MEMORY[0x1E4FBB718]);
  uint64_t v10 = MEMORY[0x1F4188790](v9 - 8);
  uint64_t v12 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v48 - v13;
  sub_1C20AC360(0, &qword_1EA2C6950, (uint64_t (*)(uint64_t))type metadata accessor for SelectionEntryItem, v8);
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v17 = (char *)&v48 - v16;
  id v18 = (int *)type metadata accessor for SelectionEntryItem();
  uint64_t v19 = *((void *)v18 - 1);
  MEMORY[0x1F4188790](v18);
  id v21 = (char *)&v48 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = (uint64_t)&v1[OBJC_IVAR____TtC19HealthMedicationsUI20SelectionOptionsCell_item];
  swift_beginAccess();
  sub_1C20AB3B0(v22, (uint64_t)v54, (unint64_t *)&qword_1EBF0C300, (uint64_t (*)(uint64_t))sub_1C1F1CB5C);
  if (v55)
  {
    sub_1C1F1CB5C();
    int v23 = swift_dynamicCast();
    (*(void (**)(char *, void, uint64_t, int *))(v19 + 56))(v17, v23 ^ 1u, 1, v18);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v19 + 48))(v17, 1, v18) != 1)
    {
      sub_1C20AC1F4((uint64_t)v17, (uint64_t)v21);
      sub_1C21499A0();
      uint64_t v24 = sub_1C21499D0();
      uint64_t v25 = *(void *)(v24 - 8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v14, 0, 1, v24);
      uint64_t v26 = MEMORY[0x1C8752FF0](v14);
      MEMORY[0x1C8752FE0](v26);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v12, 1, v24))
      {
        uint64_t v27 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FB0F28];
        sub_1C20AB3B0((uint64_t)v12, (uint64_t)v14, &qword_1EBF0C620, MEMORY[0x1E4FB0F28]);
        MEMORY[0x1C8752FF0](v14);
        sub_1C20AB430((uint64_t)v12, &qword_1EBF0C620, v27);
      }
      else
      {
        id v36 = *(id *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI20SelectionOptionsCell_defaultBackgroundColor];
        sub_1C2149990();
        MEMORY[0x1C8752FF0](v12);
      }
      uint64_t v37 = &v21[v18[5]];
      uint64_t v38 = *((void *)v37 + 3);
      uint64_t v39 = *((void *)v37 + 4);
      __swift_project_boxed_opaque_existential_0(v37, v38);
      (*(void (**)(uint64_t, uint64_t))(v39 + 16))(v38, v39);
      id v40 = *(id *)&v21[v18[7]];
      sub_1C2149BA0();
      sub_1C20AC360(0, (unint64_t *)&unk_1EBF0C990, MEMORY[0x1E4FB0E68], MEMORY[0x1E4FBBE00]);
      uint64_t v41 = *(void *)(sub_1C2149930() - 8);
      unint64_t v42 = (*(unsigned __int8 *)(v41 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80);
      uint64_t v43 = swift_allocObject();
      *(_OWORD *)(v43 + 16) = xmmword_1C214FCD0;
      uint64_t v44 = v43 + v42;
      LOBYTE(v54[0]) = v21[v18[8]];
      LOBYTE(v42) = v54[0];
      sub_1C20AA244(v54, v44);
      sub_1C214AEC0();
      uint64_t v45 = v50;
      uint64_t v55 = v50;
      uint64_t v56 = MEMORY[0x1E4FB0F88];
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v54);
      uint64_t v47 = v49;
      (*(void (**)(uint64_t *, char *, uint8_t *))(v49 + 16))(boxed_opaque_existential_1, v7, v45);
      MEMORY[0x1C8752FD0](v54);
      LOBYTE(v54[0]) = v42;
      sub_1C20AA51C((unsigned __int8 *)v54);
      (*(void (**)(char *, uint8_t *))(v47 + 8))(v7, v45);
      return sub_1C20AC304((uint64_t)v21);
    }
  }
  else
  {
    sub_1C20AB430((uint64_t)v54, (unint64_t *)&qword_1EBF0C300, (uint64_t (*)(uint64_t))sub_1C1F1CB5C);
    (*(void (**)(char *, uint64_t, uint64_t, int *))(v19 + 56))(v17, 1, 1, v18);
  }
  sub_1C20AB430((uint64_t)v17, &qword_1EA2C6950, (uint64_t (*)(uint64_t))type metadata accessor for SelectionEntryItem);
  sub_1C21497A0();
  id v28 = v1;
  uint64_t v29 = sub_1C21497E0();
  os_log_type_t v30 = sub_1C214ABD0();
  if (os_log_type_enabled(v29, v30))
  {
    uint64_t v31 = (uint8_t *)swift_slowAlloc();
    uint64_t v32 = swift_slowAlloc();
    uint64_t v53 = v32;
    *(_DWORD *)uint64_t v31 = 136446210;
    id v50 = v31 + 4;
    sub_1C20AB3B0(v22, (uint64_t)v54, (unint64_t *)&qword_1EBF0C300, (uint64_t (*)(uint64_t))sub_1C1F1CB5C);
    sub_1C20AC360(0, (unint64_t *)&qword_1EBF0C300, (uint64_t (*)(uint64_t))sub_1C1F1CB5C, MEMORY[0x1E4FBB718]);
    uint64_t v33 = sub_1C214A630();
    v54[0] = sub_1C1F6FD54(v33, v34, &v53);
    sub_1C214B530();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C1F0B000, v29, v30, "Incorrect view model for SelectionOptionsCell: %{public}s", v31, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C8754730](v32, -1, -1);
    MEMORY[0x1C8754730](v31, -1, -1);
  }
  else
  {
  }
  return (*(uint64_t (**)(char *, uint64_t))(v51 + 8))(v4, v52);
}

uint64_t sub_1C20A9FA0()
{
  uint64_t v1 = v0;
  sub_1C20AC360(0, &qword_1EBF0C620, MEMORY[0x1E4FB0F28], MEMORY[0x1E4FBB718]);
  uint64_t v3 = MEMORY[0x1F4188790](v2 - 8);
  uint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v14 - v6;
  id v8 = (void *)sub_1C2149950();
  uint64_t v9 = (objc_class *)type metadata accessor for SelectionOptionsCell();
  v14.receiver = v1;
  v14.super_class = v9;
  objc_msgSendSuper2(&v14, sel__bridgedUpdateConfigurationUsingState_, v8);

  MEMORY[0x1C8752FE0]();
  uint64_t v10 = sub_1C21499D0();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v7, 1, v10))
  {
    uint64_t v11 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FB0F28];
    sub_1C20AB3B0((uint64_t)v7, (uint64_t)v5, &qword_1EBF0C620, MEMORY[0x1E4FB0F28]);
    MEMORY[0x1C8752FF0](v5);
    return sub_1C20AB430((uint64_t)v7, &qword_1EBF0C620, v11);
  }
  else
  {
    id v13 = *(id *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI20SelectionOptionsCell_defaultBackgroundColor];
    sub_1C2149990();
    return MEMORY[0x1C8752FF0](v7);
  }
}

uint64_t sub_1C20AA244@<X0>(unsigned char *a1@<X0>, uint64_t a2@<X8>)
{
  v21[1] = a2;
  sub_1C20AC360(0, &qword_1EBF0C610, MEMORY[0x1E4FB0E38], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)v21 - v4;
  uint64_t v6 = sub_1C2149910();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1C21498C0();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  id v13 = (char *)v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*a1) {
    sub_1C20A96F0();
  }
  else {
    sub_1C20A9534();
  }
  sub_1C1FBE24C();
  int v15 = *(_DWORD *)(v14 + 48);
  uint64_t v16 = *MEMORY[0x1E4FB0E18];
  uint64_t v17 = sub_1C2149860();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 104))(v9, v16, v17);
  id v18 = (uint64_t (**)())&v9[v15];
  *id v18 = sub_1C1F52D30;
  v18[1] = 0;
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E4FB0E60], v6);
  uint64_t v19 = sub_1C2149870();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v5, 1, 1, v19);
  sub_1C21498B0();
  sub_1C2149810();
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
}

void sub_1C20AA51C(unsigned __int8 *a1)
{
  sub_1C20AC360(0, &qword_1EA2C6950, (uint64_t (*)(uint64_t))type metadata accessor for SelectionEntryItem, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = v21 - v4 + 22;
  int v6 = *a1;
  uint64_t v7 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI20SelectionOptionsCell_item;
  swift_beginAccess();
  sub_1C20AB3B0(v7, (uint64_t)v21, (unint64_t *)&qword_1EBF0C300, (uint64_t (*)(uint64_t))sub_1C1F1CB5C);
  if (!v22)
  {
    sub_1C20AB430((uint64_t)v21, (unint64_t *)&qword_1EBF0C300, (uint64_t (*)(uint64_t))sub_1C1F1CB5C);
    uint64_t v16 = type metadata accessor for SelectionEntryItem();
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v5, 1, 1, v16);
    goto LABEL_7;
  }
  sub_1C1F1CB5C();
  uint64_t v8 = type metadata accessor for SelectionEntryItem();
  int v9 = swift_dynamicCast();
  uint64_t v10 = *(void *)(v8 - 8);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v10 + 56))(v5, v9 ^ 1u, 1, v8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v10 + 48))(v5, 1, v8) == 1)
  {
LABEL_7:
    sub_1C20AB430((uint64_t)v5, &qword_1EA2C6950, (uint64_t (*)(uint64_t))type metadata accessor for SelectionEntryItem);
    if (v6)
    {
      id v12 = sub_1C20A96F0();
      goto LABEL_9;
    }
    uint64_t v11 = 0;
LABEL_12:
    id v19 = sub_1C20A9534();
    objc_msgSend(v19, sel_setOn_, v11);
    goto LABEL_13;
  }
  uint64_t v11 = v5[*(int *)(v8 + 24)];
  sub_1C20AC304((uint64_t)v5);
  if ((v6 & 1) == 0) {
    goto LABEL_12;
  }
  id v12 = sub_1C20A96F0();
  if (!v11)
  {
LABEL_9:
    sub_1C20A95EC();
    uint64_t v14 = v17;
    int v15 = &selRef_secondarySystemFillColor;
    goto LABEL_10;
  }
  sub_1C20A95C8();
  uint64_t v14 = v13;
  int v15 = &selRef_tintColor;
LABEL_10:
  objc_msgSend(v12, sel_setImage_, v14);

  id v18 = sub_1C20A96F0();
  id v19 = [self *v15];
  objc_msgSend(v18, sel_setTintColor_, v19);

LABEL_13:
}

uint64_t sub_1C20AA814()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1C21497F0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C20AC360(0, &qword_1EA2C6950, (uint64_t (*)(uint64_t))type metadata accessor for SelectionEntryItem, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v29 - v7;
  int v9 = (int *)type metadata accessor for SelectionEntryItem();
  uint64_t v10 = *((void *)v9 - 1);
  MEMORY[0x1F4188790](v9);
  id v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = (uint64_t)v1 + OBJC_IVAR____TtC19HealthMedicationsUI20SelectionOptionsCell_item;
  swift_beginAccess();
  sub_1C20AB3B0(v13, (uint64_t)v33, (unint64_t *)&qword_1EBF0C300, (uint64_t (*)(uint64_t))sub_1C1F1CB5C);
  if (v34)
  {
    sub_1C1F1CB5C();
    int v14 = swift_dynamicCast();
    (*(void (**)(char *, void, uint64_t, int *))(v10 + 56))(v8, v14 ^ 1u, 1, v9);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v10 + 48))(v8, 1, v9) != 1)
    {
      sub_1C20AC1F4((uint64_t)v8, (uint64_t)v12);
      int v15 = *(void (**)(char *, BOOL))&v12[v9[9]];
      uint64_t v16 = v9[6];
      uint64_t v17 = &v12[v9[5]];
      char v18 = v12[v16];
      swift_retain();
      BOOL v19 = (v18 & 1) == 0;
      v15(v17, v19);
      swift_release();
      v12[v16] = v19;
      unint64_t v34 = v9;
      uint64_t v35 = sub_1C20AC258(&qword_1EA2C6958, 255, (void (*)(uint64_t))type metadata accessor for SelectionEntryItem);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v33);
      sub_1C20AC2A0((uint64_t)v12, (uint64_t)boxed_opaque_existential_1);
      swift_beginAccess();
      sub_1C1F32DDC((uint64_t)v33, v13);
      swift_endAccess();
      sub_1C20A979C();
      sub_1C20AB430((uint64_t)v33, (unint64_t *)&qword_1EBF0C300, (uint64_t (*)(uint64_t))sub_1C1F1CB5C);
      return sub_1C20AC304((uint64_t)v12);
    }
  }
  else
  {
    sub_1C20AB430((uint64_t)v33, (unint64_t *)&qword_1EBF0C300, (uint64_t (*)(uint64_t))sub_1C1F1CB5C);
    (*(void (**)(char *, uint64_t, uint64_t, int *))(v10 + 56))(v8, 1, 1, v9);
  }
  sub_1C20AB430((uint64_t)v8, &qword_1EA2C6950, (uint64_t (*)(uint64_t))type metadata accessor for SelectionEntryItem);
  sub_1C21497A0();
  id v22 = v1;
  int v23 = sub_1C21497E0();
  os_log_type_t v24 = sub_1C214ABD0();
  if (os_log_type_enabled(v23, v24))
  {
    uint64_t v25 = (uint8_t *)swift_slowAlloc();
    uint64_t v26 = swift_slowAlloc();
    uint64_t v31 = v2;
    v32[0] = v26;
    *(_DWORD *)uint64_t v25 = 136446210;
    uint64_t v29 = v25 + 4;
    uint64_t v30 = v3;
    sub_1C20AB3B0(v13, (uint64_t)v33, (unint64_t *)&qword_1EBF0C300, (uint64_t (*)(uint64_t))sub_1C1F1CB5C);
    sub_1C20AC360(0, (unint64_t *)&qword_1EBF0C300, (uint64_t (*)(uint64_t))sub_1C1F1CB5C, MEMORY[0x1E4FBB718]);
    uint64_t v27 = sub_1C214A630();
    v33[0] = sub_1C1F6FD54(v27, v28, v32);
    sub_1C214B530();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C1F0B000, v23, v24, "Incorrect view model for SelectionOptionsCell: %{public}s", v25, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C8754730](v26, -1, -1);
    MEMORY[0x1C8754730](v25, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v5, v31);
  }
  else
  {

    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
}

id SelectionOptionsCell.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  id v9 = objc_allocWithZone(v4);

  return objc_msgSend(v9, sel_initWithFrame_, a1, a2, a3, a4);
}

id SelectionOptionsCell.init(frame:)(double a1, double a2, double a3, double a4)
{
  id v9 = &v4[OBJC_IVAR____TtC19HealthMedicationsUI20SelectionOptionsCell_item];
  *(_OWORD *)id v9 = 0u;
  *((_OWORD *)v9 + sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, 0, 1) = 0u;
  *((void *)v9 + 4) = 0;
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI20SelectionOptionsCell____lazy_storage___cellSwitch] = 0;
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI20SelectionOptionsCell____lazy_storage___selectedImage] = 0;
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI20SelectionOptionsCell____lazy_storage___notSelectedImage] = 0;
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI20SelectionOptionsCell____lazy_storage___accessoryImageView] = 0;
  uint64_t v10 = OBJC_IVAR____TtC19HealthMedicationsUI20SelectionOptionsCell_defaultBackgroundColor;
  uint64_t v11 = self;
  id v12 = v4;
  *(void *)&v4[v10] = objc_msgSend(v11, sel_tertiarySystemBackgroundColor);

  v14.receiver = v12;
  v14.super_class = (Class)type metadata accessor for SelectionOptionsCell();
  return objc_msgSendSuper2(&v14, sel_initWithFrame_, a1, a2, a3, a4);
}

id SelectionOptionsCell.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id SelectionOptionsCell.init(coder:)(void *a1)
{
  id v3 = &v1[OBJC_IVAR____TtC19HealthMedicationsUI20SelectionOptionsCell_item];
  *(_OWORD *)id v3 = 0u;
  *((_OWORD *)v3 + sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, 0, 1) = 0u;
  *((void *)v3 + 4) = 0;
  *(void *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI20SelectionOptionsCell____lazy_storage___cellSwitch] = 0;
  *(void *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI20SelectionOptionsCell____lazy_storage___selectedImage] = 0;
  *(void *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI20SelectionOptionsCell____lazy_storage___notSelectedImage] = 0;
  *(void *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI20SelectionOptionsCell____lazy_storage___accessoryImageView] = 0;
  uint64_t v4 = OBJC_IVAR____TtC19HealthMedicationsUI20SelectionOptionsCell_defaultBackgroundColor;
  uint64_t v5 = self;
  uint64_t v6 = v1;
  *(void *)&v1[v4] = objc_msgSend(v5, sel_tertiarySystemBackgroundColor);

  v9.receiver = v6;
  v9.super_class = (Class)type metadata accessor for SelectionOptionsCell();
  id v7 = objc_msgSendSuper2(&v9, sel_initWithCoder_, a1);

  return v7;
}

id SelectionOptionsCell.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SelectionOptionsCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t SelectionOptionsCell.deselectionBehavior.getter@<X0>(unsigned char *a1@<X8>)
{
  *a1 = 1;
  uint64_t v2 = *MEMORY[0x1E4F66478];
  uint64_t v3 = sub_1C2148620();
  uint64_t v4 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104);

  return v4(a1, v2, v3);
}

uint64_t sub_1C20AB224()
{
  return _s19HealthMedicationsUI20SelectionOptionsCellC09didSelectF0_2inySo6UIViewC_So0J10ControllerCtF_0();
}

uint64_t _s19HealthMedicationsUI18SelectionEntryItemV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SelectionEntryItem();
  uint64_t v5 = MEMORY[0x1F4188790](v4);
  id v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x1F4188790](v5);
  uint64_t v10 = (char *)&v17 - v9;
  __swift_project_boxed_opaque_existential_0((void *)(a1 + *(int *)(v8 + 20)), *(void *)(a1 + *(int *)(v8 + 20) + 24));
  uint64_t v11 = sub_1C214A570();
  __swift_project_boxed_opaque_existential_0((void *)(a2 + *(int *)(v4 + 20)), *(void *)(a2 + *(int *)(v4 + 20) + 24));
  uint64_t v12 = sub_1C214A570();
  sub_1C20AC2A0(a1, (uint64_t)v10);
  sub_1C20AC2A0(a2, (uint64_t)v7);
  if (v11 == v12)
  {
    char v13 = v10[*(int *)(v4 + 24)];
    sub_1C20AC304((uint64_t)v10);
    char v14 = v7[*(int *)(v4 + 24)];
    sub_1C20AC304((uint64_t)v7);
    char v15 = v13 ^ v14 ^ 1;
  }
  else
  {
    sub_1C20AC304((uint64_t)v7);
    sub_1C20AC304((uint64_t)v10);
    char v15 = 0;
  }
  return v15 & 1;
}

uint64_t sub_1C20AB3B0(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_1C20AC360(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_1C20AB430(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1C20AC360(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t _s19HealthMedicationsUI20SelectionOptionsCellC09didSelectF0_2inySo6UIViewC_So0J10ControllerCtF_0()
{
  sub_1C20AC360(0, &qword_1EA2C6950, (uint64_t (*)(uint64_t))type metadata accessor for SelectionEntryItem, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = v12 - v2 + 22;
  uint64_t v4 = v0 + OBJC_IVAR____TtC19HealthMedicationsUI20SelectionOptionsCell_item;
  swift_beginAccess();
  sub_1C20AB3B0(v4, (uint64_t)v12, (unint64_t *)&qword_1EBF0C300, (uint64_t (*)(uint64_t))sub_1C1F1CB5C);
  if (!v13)
  {
    sub_1C20AB430((uint64_t)v12, (unint64_t *)&qword_1EBF0C300, (uint64_t (*)(uint64_t))sub_1C1F1CB5C);
    uint64_t v10 = type metadata accessor for SelectionEntryItem();
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v3, 1, 1, v10);
    return sub_1C20AB430((uint64_t)v3, &qword_1EA2C6950, (uint64_t (*)(uint64_t))type metadata accessor for SelectionEntryItem);
  }
  sub_1C1F1CB5C();
  uint64_t v5 = type metadata accessor for SelectionEntryItem();
  int v6 = swift_dynamicCast();
  uint64_t v7 = *(void *)(v5 - 8);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v7 + 56))(v3, v6 ^ 1u, 1, v5);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v7 + 48))(v3, 1, v5) == 1) {
    return sub_1C20AB430((uint64_t)v3, &qword_1EA2C6950, (uint64_t (*)(uint64_t))type metadata accessor for SelectionEntryItem);
  }
  int v8 = v3[*(int *)(v5 + 32)];
  uint64_t result = sub_1C20AC304((uint64_t)v3);
  if (v8 == 1) {
    return sub_1C20AA814();
  }
  return result;
}

unint64_t sub_1C20AB6DC()
{
  unint64_t result = qword_1EA2C6930;
  if (!qword_1EA2C6930)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C6930);
  }
  return result;
}

uint64_t sub_1C20AB730()
{
  return sub_1C20AC258(&qword_1EA2C6938, 255, (void (*)(uint64_t))type metadata accessor for SelectionEntryItem);
}

uint64_t sub_1C20AB77C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC19HealthMedicationsUI20SelectionOptionsCell_item;
  swift_beginAccess();
  return sub_1C20AB3B0(v3, a2, (unint64_t *)&qword_1EBF0C300, (uint64_t (*)(uint64_t))sub_1C1F1CB5C);
}

void *initializeBufferWithCopyOfBuffer for SelectionEntryItem(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v21 = *a2;
    *a1 = *a2;
    a1 = (void *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1C2147B20();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    long long v9 = *(_OWORD *)((char *)a2 + v8 + 24);
    *(_OWORD *)((char *)a1 + v8 + 24) = v9;
    (**(void (***)(void))(v9 - 8))();
    uint64_t v10 = a3[7];
    *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
    uint64_t v11 = *(void **)((char *)a2 + v10);
    *(void *)((char *)a1 + v1sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = v11;
    uint64_t v12 = a3[9];
    *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
    uint64_t v13 = (void *)((char *)a1 + v12);
    char v14 = (void *)((char *)a2 + v12);
    uint64_t v15 = v14[1];
    *uint64_t v13 = *v14;
    v13[1] = v15;
    uint64_t v16 = a3[10];
    uint64_t v17 = (void *)((char *)a1 + v16);
    char v18 = (void *)((char *)a2 + v16);
    uint64_t v19 = v18[1];
    *uint64_t v17 = *v18;
    v17[1] = v19;
    id v20 = v11;
    swift_retain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for SelectionEntryItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C2147B20();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  __swift_destroy_boxed_opaque_existential_0(a1 + *(int *)(a2 + 20));

  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SelectionEntryItem(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1C2147B20();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  long long v8 = *(_OWORD *)(a2 + v7 + 24);
  *(_OWORD *)(a1 + v7 + 24) = v8;
  (**(void (***)(void))(v8 - 8))();
  uint64_t v9 = a3[7];
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  uint64_t v10 = *(void **)(a2 + v9);
  *(void *)(a1 + v9) = v10;
  uint64_t v11 = a3[9];
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  uint64_t v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  uint64_t v15 = a3[10];
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (void *)(a2 + v15);
  uint64_t v18 = v17[1];
  *uint64_t v16 = *v17;
  v16[1] = v18;
  id v19 = v10;
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SelectionEntryItem(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1C2147B20();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + a3[5]), (uint64_t *)(a2 + a3[5]));
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  uint64_t v7 = a3[7];
  long long v8 = *(void **)(a1 + v7);
  uint64_t v9 = *(void **)(a2 + v7);
  *(void *)(a1 + v7) = v9;
  id v10 = v9;

  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  uint64_t v11 = a3[9];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  uint64_t v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  swift_retain();
  swift_release();
  uint64_t v15 = a3[10];
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (void *)(a2 + v15);
  *uint64_t v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for SelectionEntryItem(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1C2147B20();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  long long v11 = *(_OWORD *)(v10 + 16);
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  *(_OWORD *)(v9 + 16) = v11;
  *(void *)(v9 + 32) = *(void *)(v10 + 32);
  *(unsigned char *)(a1 + v8) = *(unsigned char *)(a2 + v8);
  uint64_t v12 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(unsigned char *)(a1 + v12) = *(unsigned char *)(a2 + v12);
  uint64_t v13 = a3[10];
  *(_OWORD *)(a1 + a3[9]) = *(_OWORD *)(a2 + a3[9]);
  *(_OWORD *)(a1 + v13) = *(_OWORD *)(a2 + v13);
  return a1;
}

uint64_t assignWithTake for SelectionEntryItem(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1C2147B20();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  __swift_destroy_boxed_opaque_existential_0(a1 + v7);
  long long v10 = *(_OWORD *)(v9 + 16);
  *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  *(_OWORD *)(v8 + 16) = v10;
  *(void *)(v8 + 32) = *(void *)(v9 + 32);
  uint64_t v11 = a3[7];
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  uint64_t v12 = *(void **)(a1 + v11);
  *(void *)(a1 + v1sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, 0, 1) = *(void *)(a2 + v11);

  uint64_t v13 = a3[9];
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  *(_OWORD *)(a1 + v13) = *(_OWORD *)(a2 + v13);
  swift_release();
  uint64_t v14 = a3[10];
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (uint64_t *)(a2 + v14);
  uint64_t v18 = *v16;
  uint64_t v17 = v16[1];
  *uint64_t v15 = v18;
  v15[1] = v17;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SelectionEntryItem(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C20ABDE0);
}

uint64_t sub_1C20ABDE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C2147B20();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 24);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v1sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for SelectionEntryItem(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C20ABEB8);
}

uint64_t sub_1C20ABEB8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1C2147B20();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 24) = (a2 - 1);
  }
  return result;
}

uint64_t sub_1C20ABF78()
{
  uint64_t result = sub_1C2147B20();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SelectionEntryItem.SwitchStyle(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, 0, 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C20AC108);
      case 4:
        *(_DWORD *)(result + sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, 0, 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, 0, 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, 0, 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SelectionEntryItem.SwitchStyle()
{
  return &type metadata for SelectionEntryItem.SwitchStyle;
}

uint64_t method lookup function for SelectionOptionsCell(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SelectionOptionsCell);
}

uint64_t dispatch thunk of SelectionOptionsCell.item.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of SelectionOptionsCell.item.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of SelectionOptionsCell.item.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x90))();
}

uint64_t sub_1C20AC1F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SelectionEntryItem();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C20AC258(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C20AC2A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SelectionEntryItem();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C20AC304(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SelectionEntryItem();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1C20AC360(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t Set<>.severities(filtering:includeMinorInteractions:)(void *a1, char a2)
{
  id v4 = a1;
  uint64_t v5 = swift_bridgeObjectRetain();
  sub_1C20AD08C(v5, a1);
  unint64_t v7 = v6;

  unint64_t v8 = sub_1C20AC560(v7);
  uint64_t result = swift_release();
  uint64_t v13 = MEMORY[0x1E4FBC860];
  if (v8 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1C214B930();
    uint64_t result = swift_bridgeObjectRelease();
    if (v10) {
      goto LABEL_3;
    }
LABEL_15:
    swift_bridgeObjectRelease();
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v10 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v10) {
    goto LABEL_15;
  }
LABEL_3:
  if (v10 >= 1)
  {
    uint64_t v11 = 0;
    while (1)
    {
      if ((v8 & 0xC000000000000001) != 0)
      {
        id v12 = (id)MEMORY[0x1C8753960](v11, v8);
        if (a2) {
          goto LABEL_5;
        }
      }
      else
      {
        id v12 = *(id *)(v8 + 8 * v11 + 32);
        if (a2) {
          goto LABEL_5;
        }
      }
      if (objc_msgSend(v12, sel_severityLevel, v13) == (id)4)
      {

        goto LABEL_6;
      }
LABEL_5:
      sub_1C214B820();
      sub_1C214B860();
      sub_1C214B870();
      sub_1C214B830();
LABEL_6:
      if (v10 == ++v11)
      {
        swift_bridgeObjectRelease();
        return v13;
      }
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1C20AC560(unint64_t a1)
{
  uint64_t v2 = v1;
  unint64_t v3 = a1;
  uint64_t v23 = MEMORY[0x1E4FBC860];
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1C214B680();
    sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8A8);
    sub_1C1F4CDC8((unint64_t *)&unk_1EBF0C8B0, (unint64_t *)&qword_1EBF0C8A8);
    uint64_t result = sub_1C214AAA0();
    unint64_t v3 = (unint64_t)v22[1];
    id v20 = v22[2];
    uint64_t v5 = (uint64_t)v22[3];
    int64_t v6 = (int64_t)v22[4];
    unint64_t v7 = (unint64_t)v22[5];
  }
  else
  {
    uint64_t v8 = -1 << *(unsigned char *)(a1 + 32);
    id v20 = (void *)(a1 + 56);
    uint64_t v5 = ~v8;
    uint64_t v9 = -v8;
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v7 = v10 & *(void *)(a1 + 56);
    uint64_t result = swift_bridgeObjectRetain();
    int64_t v6 = 0;
  }
  int64_t v11 = (unint64_t)(v5 + 64) >> 6;
  if ((v3 & 0x8000000000000000) == 0) {
    goto LABEL_11;
  }
LABEL_8:
  uint64_t v12 = sub_1C214B700();
  if (!v12) {
    goto LABEL_35;
  }
  unint64_t v21 = v12;
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8A8);
  swift_unknownObjectRetain();
  swift_dynamicCast();
  id v13 = v22[0];
  swift_unknownObjectRelease();
  int64_t v14 = v6;
  uint64_t v15 = v7;
  if (!v13) {
    goto LABEL_35;
  }
  while (1)
  {
    v22[0] = v13;
    sub_1C20AC87C(v22, &v21);

    if (v2)
    {
      sub_1C1F495B8();
      return swift_bridgeObjectRelease();
    }
    uint64_t result = sub_1C1F7DB20(v21);
    int64_t v6 = v14;
    unint64_t v7 = v15;
    if ((v3 & 0x8000000000000000) != 0) {
      goto LABEL_8;
    }
LABEL_11:
    if (!v7) {
      break;
    }
    uint64_t v15 = (v7 - 1) & v7;
    unint64_t v16 = __clz(__rbit64(v7)) | (v6 << 6);
    int64_t v14 = v6;
LABEL_24:
    id v13 = *(id *)(*(void *)(v3 + 48) + 8 * v16);
    if (!v13) {
      goto LABEL_35;
    }
  }
  int64_t v14 = v6 + 1;
  if (__OFADD__(v6, 1))
  {
    __break(1u);
    return result;
  }
  if (v14 >= v11) {
    goto LABEL_35;
  }
  unint64_t v17 = v20[v14];
  if (v17)
  {
LABEL_23:
    uint64_t v15 = (v17 - 1) & v17;
    unint64_t v16 = __clz(__rbit64(v17)) + (v14 << 6);
    goto LABEL_24;
  }
  int64_t v18 = v6 + 2;
  if (v6 + 2 >= v11) {
    goto LABEL_35;
  }
  unint64_t v17 = v20[v18];
  if (v17) {
    goto LABEL_22;
  }
  int64_t v18 = v6 + 3;
  if (v6 + 3 >= v11) {
    goto LABEL_35;
  }
  unint64_t v17 = v20[v18];
  if (v17) {
    goto LABEL_22;
  }
  int64_t v18 = v6 + 4;
  if (v6 + 4 >= v11) {
    goto LABEL_35;
  }
  unint64_t v17 = v20[v18];
  if (v17)
  {
LABEL_22:
    int64_t v14 = v18;
    goto LABEL_23;
  }
  int64_t v14 = v6 + 5;
  if (v6 + 5 >= v11) {
    goto LABEL_35;
  }
  unint64_t v17 = v20[v14];
  if (v17) {
    goto LABEL_23;
  }
  id v19 = (char *)(v6 + 6);
  while ((char *)v11 != v19)
  {
    unint64_t v17 = v20[(void)v19++];
    if (v17)
    {
      int64_t v14 = (int64_t)(v19 - 1);
      goto LABEL_23;
    }
  }
LABEL_35:
  sub_1C1F495B8();
  return v23;
}

uint64_t sub_1C20AC87C@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id v2 = objc_msgSend(*a1, sel_interactions);
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C880);
  sub_1C1F4CDC8((unint64_t *)&unk_1EBF0C888, (unint64_t *)&qword_1EBF0C880);
  uint64_t v3 = sub_1C214AA60();

  if ((v3 & 0xC000000000000001) != 0)
  {
    uint64_t v4 = sub_1C214B6D0();
    if (!v4) {
      goto LABEL_15;
    }
    uint64_t v5 = v4;
    uint64_t v28 = MEMORY[0x1E4FBC860];
    sub_1C214B850();
    uint64_t v25 = sub_1C214B670();
    uint64_t v26 = v6;
    unsigned __int8 v27 = 1;
    if ((v5 & 0x8000000000000000) == 0) {
      goto LABEL_9;
    }
    __break(1u);
  }
  uint64_t v5 = *(void *)(v3 + 16);
  if (!v5)
  {
LABEL_15:
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v22 = MEMORY[0x1E4FBC860];
LABEL_16:
    *a2 = v22;
    return result;
  }
  uint64_t v28 = MEMORY[0x1E4FBC860];
  sub_1C214B850();
  uint64_t v25 = sub_1C2091B40(v3);
  uint64_t v26 = v7;
  unsigned __int8 v27 = v8 & 1;
  while (1)
  {
LABEL_9:
    while (1)
    {
      uint64_t v14 = v25;
      uint64_t v15 = v26;
      uint64_t v16 = v27;
      sub_1C20918BC(v25, v26, v27, v3);
      int64_t v18 = v17;
      id v19 = objc_msgSend(v17, sel_severity);

      sub_1C214B820();
      sub_1C214B860();
      sub_1C214B870();
      uint64_t result = sub_1C214B830();
      if ((v3 & 0xC000000000000001) != 0) {
        break;
      }
      uint64_t v9 = sub_1C2091498(v14, v15, v16, v3);
      uint64_t v11 = v10;
      char v13 = v12;
      sub_1C1FB6928(v14, v15, v16);
      uint64_t v25 = v9;
      uint64_t v26 = v11;
      unsigned __int8 v27 = v13 & 1;
      if (!--v5) {
        goto LABEL_14;
      }
    }
    if ((v16 & 1) == 0) {
      break;
    }
    if (sub_1C214B690()) {
      swift_isUniquelyReferenced_nonNull_native();
    }
    sub_1C20AD46C();
    unint64_t v21 = (void (*)(unsigned char *, void))sub_1C214AA80();
    sub_1C214B730();
    v21(v24, 0);
    if (!--v5)
    {
LABEL_14:
      sub_1C1FB6928(v25, v26, v27);
      uint64_t v22 = v28;
      uint64_t result = swift_bridgeObjectRelease();
      goto LABEL_16;
    }
  }
  __break(1u);
  return result;
}

void sub_1C20ACB28(unint64_t *a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v34 = a2;
  uint64_t v4 = a4;
  uint64_t v36 = 0;
  int64_t v5 = 0;
  uint64_t v8 = *(void *)(a3 + 56);
  uint64_t v6 = a3 + 56;
  uint64_t v7 = v8;
  uint64_t v9 = 1 << *(unsigned char *)(v6 - 24);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & v7;
  uint64_t v37 = v6;
  int64_t v38 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    while (v11)
    {
      unint64_t v12 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v13 = v12 | (v5 << 6);
      if (!v4) {
        goto LABEL_42;
      }
LABEL_22:
      id v17 = *(id *)(*(void *)(a3 + 48) + 8 * v13);
      id v18 = objc_msgSend(v4, sel_firstConceptIdentifier, v34);
      if (!v18)
      {
        id v19 = v17;
        goto LABEL_41;
      }
      id v19 = v18;
      id v20 = objc_msgSend(v17, sel_conceptIdentifiers);
      sub_1C1F12718(0, (unint64_t *)&qword_1EA2C2FA0);
      unint64_t v21 = sub_1C214A780();

      int64_t v43 = v5;
      unint64_t v41 = v13;
      unint64_t v42 = v11;
      if (v21 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v22 = sub_1C214B930();
        if (!v22) {
          goto LABEL_4;
        }
      }
      else
      {
        uint64_t v22 = *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (!v22) {
          goto LABEL_4;
        }
      }
      if ((v21 & 0xC000000000000001) != 0) {
        id v23 = (id)MEMORY[0x1C8753960](0, v21);
      }
      else {
        id v23 = *(id *)(v21 + 32);
      }
      os_log_type_t v24 = v23;
      char v25 = sub_1C214B220();

      if (v25)
      {
LABEL_40:
        swift_bridgeObjectRelease_n();

        uint64_t v4 = a4;
        int64_t v5 = v43;
        unint64_t v13 = v41;
        unint64_t v11 = v42;
LABEL_41:

        goto LABEL_42;
      }
      if (v22 != 1)
      {
        if ((v21 & 0xC000000000000001) != 0)
        {
          uint64_t v26 = 1;
          while (1)
          {
            MEMORY[0x1C8753960](v26, v21);
            uint64_t v27 = v26 + 1;
            if (__OFADD__(v26, 1)) {
              break;
            }
            char v28 = sub_1C214B220();
            swift_unknownObjectRelease();
            if (v28) {
              goto LABEL_40;
            }
            ++v26;
            if (v27 == v22) {
              goto LABEL_4;
            }
          }
          __break(1u);
        }
        else
        {
          uint64_t v29 = 5;
          while (1)
          {
            uint64_t v30 = v29 - 3;
            if (__OFADD__(v29 - 4, 1)) {
              break;
            }
            id v31 = *(id *)(v21 + 8 * v29);
            char v32 = sub_1C214B220();

            if (v32) {
              goto LABEL_40;
            }
            ++v29;
            if (v30 == v22) {
              goto LABEL_4;
            }
          }
        }
        __break(1u);
LABEL_52:
        __break(1u);
LABEL_53:
        __break(1u);
        goto LABEL_54;
      }
LABEL_4:
      swift_bridgeObjectRelease_n();

      uint64_t v4 = a4;
      int64_t v5 = v43;
      unint64_t v11 = v42;
    }
    int64_t v14 = v5 + 1;
    if (__OFADD__(v5, 1)) {
      goto LABEL_52;
    }
    if (v14 >= v38)
    {
LABEL_49:
      swift_retain();
      sub_1C20588E4(a1, v34, v36, a3);
      return;
    }
    unint64_t v15 = *(void *)(v37 + 8 * v14);
    ++v5;
    if (!v15)
    {
      int64_t v5 = v14 + 1;
      if (v14 + 1 >= v38) {
        goto LABEL_49;
      }
      unint64_t v15 = *(void *)(v37 + 8 * v5);
      if (!v15)
      {
        int64_t v5 = v14 + 2;
        if (v14 + 2 >= v38) {
          goto LABEL_49;
        }
        unint64_t v15 = *(void *)(v37 + 8 * v5);
        if (!v15) {
          break;
        }
      }
    }
LABEL_21:
    unint64_t v11 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v5 << 6);
    if (v4) {
      goto LABEL_22;
    }
LABEL_42:
    *(unint64_t *)((char *)a1 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    if (__OFADD__(v36++, 1)) {
      goto LABEL_53;
    }
  }
  int64_t v16 = v14 + 3;
  if (v16 >= v38) {
    goto LABEL_49;
  }
  unint64_t v15 = *(void *)(v37 + 8 * v16);
  if (v15)
  {
    int64_t v5 = v16;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v5 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v5 >= v38) {
      goto LABEL_49;
    }
    unint64_t v15 = *(void *)(v37 + 8 * v5);
    ++v16;
    if (v15) {
      goto LABEL_21;
    }
  }
LABEL_54:
  __break(1u);
}

uint64_t sub_1C20ACED4(uint64_t a1, void *a2)
{
  v18[1] = *MEMORY[0x1E4F143B8];
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  unint64_t v7 = (unint64_t)((1 << v5) + 63) >> 6;
  uint64_t isStackAllocationSafe = a2;
  uint64_t v9 = (void *)isStackAllocationSafe;
  if (v6 <= 0xD || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1F4188790](isStackAllocationSafe);
    uint64_t v10 = (char *)v18 - ((8 * v7 + 15) & 0x3FFFFFFFFFFFFFF0);
    bzero(v10, 8 * v7);
    id v11 = v9;
    sub_1C20ACB28((unint64_t *)v10, v7, a1, a2);
    uint64_t v13 = v12;
    swift_release();

    if (v2) {
      swift_willThrow();
    }
  }
  else
  {
    int64_t v14 = (void *)swift_slowAlloc();
    bzero(v14, 8 * v7);
    id v15 = v9;
    sub_1C20ACB28((unint64_t *)v14, v7, a1, a2);
    uint64_t v13 = v16;
    swift_release();

    MEMORY[0x1C8754730](v14, -1, -1);
  }
  return v13;
}

void sub_1C20AD08C(uint64_t a1, void *a2)
{
  uint64_t v2 = a2;
  if ((a1 & 0xC000000000000001) == 0)
  {
    sub_1C20ACED4(a1, a2);
    return;
  }
  uint64_t v33 = MEMORY[0x1E4FBC870];
  id v31 = a2;
  sub_1C214B680();
  if (!sub_1C214B700())
  {
LABEL_42:

    swift_release();
    return;
  }
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8A8);
  uint64_t v30 = v2;
  while (1)
  {
    swift_dynamicCast();
    if (!v2) {
      goto LABEL_16;
    }
    id v9 = objc_msgSend(v31, sel_firstConceptIdentifier);
    if (!v9) {
      goto LABEL_16;
    }
    uint64_t v10 = v9;
    id v11 = objc_msgSend(v32, sel_conceptIdentifiers);
    sub_1C1F12718(0, (unint64_t *)&qword_1EA2C2FA0);
    unint64_t v12 = sub_1C214A780();

    if (v12 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v13 = sub_1C214B930();
      if (!v13) {
        goto LABEL_37;
      }
    }
    else
    {
      uint64_t v13 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v13) {
        goto LABEL_37;
      }
    }
    if ((v12 & 0xC000000000000001) != 0) {
      id v14 = (id)MEMORY[0x1C8753960](0, v12);
    }
    else {
      id v14 = *(id *)(v12 + 32);
    }
    id v15 = v14;
    char v16 = sub_1C214B220();

    if (v16)
    {
LABEL_15:

      swift_bridgeObjectRelease_n();
      uint64_t v2 = v30;
LABEL_16:
      uint64_t v17 = v33;
      unint64_t v18 = *(void *)(v33 + 16);
      if (*(void *)(v33 + 24) <= v18)
      {
        sub_1C208F014(v18 + 1);
        uint64_t v17 = v33;
      }
      uint64_t v3 = sub_1C214B210();
      uint64_t v4 = v17 + 56;
      uint64_t v5 = -1 << *(unsigned char *)(v17 + 32);
      unint64_t v6 = v3 & ~v5;
      unint64_t v7 = v6 >> 6;
      if (((-1 << v6) & ~*(void *)(v17 + 56 + 8 * (v6 >> 6))) != 0)
      {
        unint64_t v8 = __clz(__rbit64((-1 << v6) & ~*(void *)(v17 + 56 + 8 * (v6 >> 6)))) | v6 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v19 = 0;
        unint64_t v20 = (unint64_t)(63 - v5) >> 6;
        do
        {
          if (++v7 == v20 && (v19 & 1) != 0)
          {
            __break(1u);
            goto LABEL_43;
          }
          BOOL v21 = v7 == v20;
          if (v7 == v20) {
            unint64_t v7 = 0;
          }
          v19 |= v21;
          uint64_t v22 = *(void *)(v4 + 8 * v7);
        }
        while (v22 == -1);
        unint64_t v8 = __clz(__rbit64(~v22)) + (v7 << 6);
      }
      *(void *)(v4 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v8;
      *(void *)(*(void *)(v17 + 48) + 8 * v8) = v32;
      ++*(void *)(v17 + 16);
      goto LABEL_7;
    }
    if (v13 != 1) {
      break;
    }
LABEL_37:

    swift_bridgeObjectRelease_n();
    uint64_t v2 = v30;
LABEL_7:
    if (!sub_1C214B700()) {
      goto LABEL_42;
    }
  }
  if ((v12 & 0xC000000000000001) != 0)
  {
    uint64_t v23 = 1;
    while (1)
    {
      MEMORY[0x1C8753960](v23, v12);
      uint64_t v24 = v23 + 1;
      if (__OFADD__(v23, 1)) {
        break;
      }
      char v25 = sub_1C214B220();
      swift_unknownObjectRelease();
      if (v25) {
        goto LABEL_15;
      }
      ++v23;
      if (v24 == v13) {
        goto LABEL_37;
      }
    }
LABEL_43:
    __break(1u);
  }
  else
  {
    uint64_t v26 = 5;
    while (1)
    {
      uint64_t v27 = v26 - 3;
      if (__OFADD__(v26 - 4, 1)) {
        break;
      }
      id v28 = *(id *)(v12 + 8 * v26);
      char v29 = sub_1C214B220();

      if (v29) {
        goto LABEL_15;
      }
      ++v26;
      if (v27 == v13) {
        goto LABEL_37;
      }
    }
  }
  __break(1u);
}

void sub_1C20AD46C()
{
  if (!qword_1EBF0C7B8)
  {
    sub_1C1F12718(255, (unint64_t *)&qword_1EBF0C880);
    sub_1C1F4CDC8((unint64_t *)&unk_1EBF0C888, (unint64_t *)&qword_1EBF0C880);
    unint64_t v0 = sub_1C214AA90();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBF0C7B8);
    }
  }
}

uint64_t static UIButton.makeCriticalInteractionButton()()
{
  if (qword_1EBF0CA00 != -1) {
    swift_once();
  }
  id v0 = (id)qword_1EBF0CA18;
  swift_bridgeObjectRetain();
  uint64_t v1 = sub_1C2147730();
  uint64_t v3 = v2;
  swift_bridgeObjectRelease();

  _sSo8UIButtonC19HealthMedicationsUIE21makeExclamationButton5title29accessibilityIdentifierSuffixABSS_SStFZ_0(v1, v3, 0xD000000000000014, 0x80000001C215DEA0);
  uint64_t v5 = v4;
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t static UIButton.makeCriticalPregnancyInteractionButton()()
{
  if (qword_1EA2C2710 != -1) {
    swift_once();
  }
  id v0 = (id)qword_1EA2C5D90;
  swift_bridgeObjectRetain();
  uint64_t v1 = sub_1C2147730();
  uint64_t v3 = v2;
  swift_bridgeObjectRelease();

  _sSo8UIButtonC19HealthMedicationsUIE21makeExclamationButton5title29accessibilityIdentifierSuffixABSS_SStFZ_0(v1, v3, 0xD000000000000012, 0x80000001C2162BA0);
  uint64_t v5 = v4;
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t static UIButton.makeCriticalLactationInteractionButton()()
{
  if (qword_1EA2C2710 != -1) {
    swift_once();
  }
  id v0 = (id)qword_1EA2C5D90;
  swift_bridgeObjectRetain();
  uint64_t v1 = sub_1C2147730();
  uint64_t v3 = v2;
  swift_bridgeObjectRelease();

  _sSo8UIButtonC19HealthMedicationsUIE21makeExclamationButton5title29accessibilityIdentifierSuffixABSS_SStFZ_0(v1, v3, 0xD000000000000012, 0x80000001C2162BF0);
  uint64_t v5 = v4;
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t static UIButton.makeCriticalButton()()
{
  if (qword_1EA2C2710 != -1) {
    swift_once();
  }
  id v0 = (id)qword_1EA2C5D90;
  swift_bridgeObjectRetain();
  uint64_t v1 = sub_1C2147730();
  uint64_t v3 = v2;
  swift_bridgeObjectRelease();

  _sSo8UIButtonC19HealthMedicationsUIE21makeExclamationButton5title29accessibilityIdentifierSuffixABSS_SStFZ_0(v1, v3, 0x616369746972432ELL, 0xE90000000000006CLL);
  uint64_t v5 = v4;
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1C20AD910@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1C2147750();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8E0);
  sub_1C214B0A0();
  sub_1C20AE19C();
  return sub_1C2147740();
}

uint64_t sub_1C20ADA0C()
{
  return sub_1C214A5A0() & 1;
}

void _sSo8UIButtonC19HealthMedicationsUIE21makeExclamationButton5title29accessibilityIdentifierSuffixABSS_SStFZ_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v49 = a3;
  uint64_t v50 = a4;
  sub_1C20AE124();
  MEMORY[0x1F4188790](v4 - 8);
  unint64_t v6 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1C214B350();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1C214B280();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  id v14 = (char *)&v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1C214B3D0();
  uint64_t v47 = *(void *)(v15 - 8);
  uint64_t v48 = v15;
  uint64_t v16 = MEMORY[0x1F4188790](v15);
  uint64_t v46 = (char *)&v45 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  char v19 = (char *)&v45 - v18;
  sub_1C214B3A0();
  (*(void (**)(char *, void, uint64_t))(v12 + 104))(v14, *MEMORY[0x1E4FB1218], v11);
  sub_1C214B290();
  unint64_t v20 = self;
  id v21 = objc_msgSend(v20, sel_hk_alertHeaderForegroundColor);
  sub_1C214B320();
  id v22 = objc_msgSend(v20, sel_hk_alertHeaderBackgroundColor);
  sub_1C214B310();
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E4FB1268], v7);
  sub_1C214B270();
  uint64_t v51 = 9011426;
  unint64_t v52 = 0xA300000000000000;
  sub_1C214A6C0();
  sub_1C214B390();
  sub_1C2149C90();
  uint64_t v23 = sub_1C2149C80();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v6, 0, 1, v23);
  sub_1C214B340();
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8E0);
  uint64_t v24 = (void *)sub_1C214B0A0();
  char v25 = self;
  id v26 = objc_msgSend(v25, sel_configurationWithFont_scale_, v24, 1);

  sub_1C1F0ED28();
  uint64_t v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_1C214FCB0;
  *(void *)(v27 + 32) = objc_msgSend(v20, sel_systemYellowColor);
  *(void *)(v27 + 4sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = objc_msgSend(v20, sel_systemBlackColor);
  uint64_t v51 = v27;
  sub_1C214A7A0();
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C900);
  id v28 = (void *)sub_1C214A770();
  swift_bridgeObjectRelease();
  id v29 = objc_msgSend(v25, sel_configurationWithPaletteColors_, v28);

  id v30 = v26;
  id v31 = (void *)sub_1C214A5B0();
  id v32 = objc_msgSend(self, sel_systemImageNamed_withConfiguration_, v31, v30);

  if (v32)
  {
    id v33 = objc_msgSend(v32, sel_imageByApplyingSymbolConfiguration_, v29);

    id v34 = v33;
    sub_1C214B370();
    sub_1C1F12718(0, &qword_1EBF0C928);
    uint64_t v35 = v47;
    uint64_t v36 = v48;
    (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v46, v19, v48);
    uint64_t v37 = (void *)sub_1C214B3E0();
    objc_msgSend(v37, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    id v38 = objc_msgSend(v37, sel_titleLabel);
    objc_msgSend(v38, sel_setAdjustsFontForContentSizeCategory_, 1);

    LODWORD(v39) = 1148846080;
    objc_msgSend(v37, sel_setContentHuggingPriority_forAxis_, 0, v39);
    objc_msgSend(v37, sel_setUserInteractionEnabled_, 0);
    uint64_t v51 = sub_1C214A5F0();
    unint64_t v52 = v40;
    swift_bridgeObjectRetain();
    sub_1C214A6C0();
    uint64_t v41 = v51;
    unint64_t v42 = v52;
    id v43 = v37;
    swift_bridgeObjectRelease();
    uint64_t v51 = v41;
    unint64_t v52 = v42;
    swift_bridgeObjectRetain();
    sub_1C214A6C0();
    swift_bridgeObjectRelease();
    uint64_t v44 = (void *)sub_1C214A5B0();
    swift_bridgeObjectRelease();
    objc_msgSend(v43, sel_setAccessibilityIdentifier_, v44);

    (*(void (**)(char *, uint64_t))(v35 + 8))(v19, v36);
  }
  else
  {
    __break(1u);
  }
}

void sub_1C20AE124()
{
  if (!qword_1EA2C6960)
  {
    sub_1C2149C80();
    unint64_t v0 = sub_1C214B4F0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C6960);
    }
  }
}

void sub_1C20AE17C()
{
}

unint64_t sub_1C20AE19C()
{
  unint64_t result = qword_1EA2C6968;
  if (!qword_1EA2C6968)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C6968);
  }
  return result;
}

void sub_1C20AE1F0()
{
}

uint64_t sub_1C20AE218()
{
  return 8;
}

uint64_t sub_1C20AE224()
{
  return swift_release();
}

uint64_t sub_1C20AE22C(void *a1, void *a2)
{
  *a2 = *a1;
  return swift_retain();
}

uint64_t sub_1C20AE23C()
{
  return sub_1C214A570();
}

void *sub_1C20AE280(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

void sub_1C20AE28C()
{
  if (!qword_1EA2C6970)
  {
    sub_1C2147700();
    unint64_t v0 = sub_1C214BBC0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C6970);
    }
  }
}

uint64_t type metadata accessor for ManaulFormsDataSource()
{
  uint64_t result = qword_1EA2C6978;
  if (!qword_1EA2C6978) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C20AE338()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1C20AE390(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1C20FB1FC(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  uint64_t result = sub_1C20AF4E4(v5);
  *a1 = v2;
  return result;
}

void *sub_1C20AE3FC(uint64_t a1, uint64_t a2)
{
  swift_allocObject();
  uint64_t v4 = sub_1C20B03C0(a1, a2);
  swift_release();
  return v4;
}

uint64_t sub_1C20AE458(uint64_t a1)
{
  if (a1 == 2)
  {
    if (qword_1EBF0CA00 == -1) {
      goto LABEL_6;
    }
LABEL_9:
    swift_once();
    goto LABEL_6;
  }
  if (a1) {
    return 0;
  }
  if (qword_1EBF0CA00 != -1) {
    goto LABEL_9;
  }
LABEL_6:
  id v1 = (id)qword_1EBF0CA18;
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_1C2147730();
  swift_bridgeObjectRelease();

  return v2;
}

uint64_t sub_1C20AE5BC()
{
  uint64_t v0 = sub_1C2148710();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2148660();
  uint64_t v4 = sub_1C20F270C();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

uint64_t sub_1C20AE694()
{
  swift_retain();
  uint64_t v1 = swift_bridgeObjectRetain();
  uint64_t v2 = sub_1C20B0200(v1, v0);
  swift_bridgeObjectRelease();
  swift_release();
  return v2;
}

uint64_t sub_1C20AE704@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v71 = a2;
  uint64_t v55 = *v2;
  uint64_t v4 = sub_1C2148A70();
  uint64_t v69 = *(void *)(v4 - 8);
  uint64_t v70 = v4;
  MEMORY[0x1F4188790](v4);
  id v68 = (char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C20B0604(0, &qword_1EBF0C620, MEMORY[0x1E4FB0F28], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v67 = (char *)&v53 - v8;
  uint64_t v57 = sub_1C2148620();
  uint64_t v56 = *(void *)(v57 - 8);
  MEMORY[0x1F4188790](v57);
  long long v66 = (char *)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1C2149860();
  uint64_t v63 = *(void *)(v10 - 8);
  uint64_t v64 = v10;
  MEMORY[0x1F4188790](v10);
  uint64_t v62 = (char *)&v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C20B0604(0, &qword_1EBF0C610, MEMORY[0x1E4FB0E38], v6);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v54 = (char *)&v53 - v13;
  uint64_t v61 = sub_1C2149890();
  uint64_t v60 = *(void *)(v61 - 8);
  MEMORY[0x1F4188790](v61);
  uint64_t v59 = (char *)&v53 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for FormStepResult();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  char v19 = (char *)&v53 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  id v21 = (char *)&v53 - v20;
  sub_1C20B0604(0, &qword_1EA2C4820, (uint64_t (*)(uint64_t))type metadata accessor for FormStepResult, v6);
  MEMORY[0x1F4188790](v22 - 8);
  uint64_t v24 = (char *)&v53 - v23;
  uint64_t v74 = sub_1C2149BE0();
  uint64_t v65 = *(void *)(v74 - 8);
  MEMORY[0x1F4188790](v74);
  id v26 = (char *)&v53 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2149B70();
  sub_1C214B030();
  sub_1C2149B90();
  id v58 = self;
  id v27 = objc_msgSend(v58, sel_labelColor);
  uint64_t v73 = v26;
  id v28 = (void (*)(uint64_t *, void))sub_1C2149AA0();
  sub_1C2149A60();
  v28(&v77, 0);
  sub_1C2149E90();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v24, 1, v15))
  {
    sub_1C20B0594((uint64_t)v24, &qword_1EA2C4820, (uint64_t (*)(uint64_t))type metadata accessor for FormStepResult);
    uint64_t v29 = a1;
    uint64_t v30 = v57;
    uint64_t v31 = v56;
    id v32 = v54;
  }
  else
  {
    sub_1C1FEA6BC((uint64_t)v24, (uint64_t)v21);
    sub_1C20B0594((uint64_t)v24, &qword_1EA2C4820, (uint64_t (*)(uint64_t))type metadata accessor for FormStepResult);
    sub_1C1FEA6BC((uint64_t)v21, (uint64_t)v19);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v29 = a1;
    uint64_t v30 = v57;
    uint64_t v31 = v56;
    id v32 = v54;
    if (EnumCaseMultiPayload != 1) {
      sub_1C20B06E0((uint64_t)v19);
    }
    sub_1C20B06E0((uint64_t)v21);
  }
  uint64_t v77 = sub_1C214BC10();
  uint64_t v78 = v34;
  sub_1C214A6C0();
  uint64_t v75 = v29;
  sub_1C214BA40();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  uint64_t v57 = v77;
  uint64_t v56 = v78;
  uint64_t v35 = v74;
  uint64_t v79 = v74;
  uint64_t v80 = MEMORY[0x1E4FB0F88];
  uint64_t v36 = __swift_allocate_boxed_opaque_existential_1(&v77);
  uint64_t v37 = v65;
  (*(void (**)(uint64_t *, char *, uint64_t))(v65 + 16))(v36, v73, v35);
  sub_1C20B0604(0, (unint64_t *)&unk_1EBF0C990, MEMORY[0x1E4FB0E68], MEMORY[0x1E4FBBE00]);
  sub_1C2149930();
  uint64_t v55 = swift_allocObject();
  *(_OWORD *)(v55 + 16) = xmmword_1C214FCD0;
  uint64_t v38 = sub_1C2149870();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v32, 1, 1, v38);
  double v39 = v59;
  sub_1C2149880();
  uint64_t v41 = v62;
  uint64_t v40 = v63;
  uint64_t v42 = v64;
  (*(void (**)(char *, void, uint64_t))(v63 + 104))(v62, *MEMORY[0x1E4FB0E18], v64);
  sub_1C2149920();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v41, v42);
  (*(void (**)(char *, uint64_t))(v60 + 8))(v39, v61);
  uint64_t v43 = swift_allocObject();
  uint64_t v44 = v72;
  swift_weakInit();
  uint64_t v45 = swift_allocObject();
  *(void *)(v45 + 16) = v43;
  *(void *)(v45 + 24) = v29;
  uint64_t v46 = v66;
  *long long v66 = 1;
  (*(void (**)(unsigned char *, void, uint64_t))(v31 + 104))(v46, *MEMORY[0x1E4F66478], v30);
  swift_retain();
  uint64_t v47 = v67;
  sub_1C21499A0();
  id v48 = objc_msgSend(v58, sel_secondarySystemBackgroundColor);
  sub_1C2149990();
  uint64_t v49 = sub_1C21499D0();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v49 - 8) + 56))(v47, 0, 1, v49);
  uint64_t v51 = *(void *)(v44 + qword_1EA2C80D8);
  unint64_t v50 = *(void *)(v44 + qword_1EA2C80D8 + 8);
  uint64_t v75 = 46;
  unint64_t v76 = 0xE100000000000000;
  sub_1C214B030();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  uint64_t v75 = v51;
  unint64_t v76 = v50;
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, void, uint64_t))(v69 + 104))(v68, *MEMORY[0x1E4F66678], v70);
  sub_1C21487A0();
  (*(void (**)(char *, uint64_t))(v37 + 8))(v73, v74);
  return swift_release();
}

uint64_t sub_1C20AF180()
{
  uint64_t v1 = MEMORY[0x1C87531D0]();
  swift_retain();
  uint64_t v2 = sub_1C20B00A4(v1, v0);
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v6 = v2;
  swift_bridgeObjectRetain();
  sub_1C20AE390(&v6);
  swift_bridgeObjectRelease();
  uint64_t v3 = v6;
  swift_retain();
  uint64_t v4 = sub_1C20B0200(v3, v0);
  swift_release();
  swift_release();
  return v4;
}

uint64_t sub_1C20AF240(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C20B0604(0, &qword_1EA2C4820, (uint64_t (*)(uint64_t))type metadata accessor for FormStepResult, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (uint64_t *)((char *)&v9 - v5);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    swift_retain();
    swift_release();
    *uint64_t v6 = a3;
    uint64_t v8 = type metadata accessor for FormStepResult();
    swift_storeEnumTagMultiPayload();
    (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v6, 0, 1, v8);
    sub_1C2149E70();
    swift_release();
    return sub_1C20B0594((uint64_t)v6, &qword_1EA2C4820, (uint64_t (*)(uint64_t))type metadata accessor for FormStepResult);
  }
  return result;
}

uint64_t sub_1C20AF3BC()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1C20AF400()
{
  uint64_t v0 = sub_1C2148610();
  swift_release();
  sub_1C20B0594(v0 + qword_1EA2C7D70, (unint64_t *)&qword_1EA2C2CC8, type metadata accessor for MedicationSearchItem);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_1C20AF4DC()
{
  return type metadata accessor for ManaulFormsDataSource();
}

uint64_t sub_1C20AF4E4(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = a1[1];
  uint64_t result = sub_1C214BA30();
  if (result >= v4)
  {
    if (v4 < 0) {
      goto LABEL_153;
    }
    if (v4) {
      return sub_1C20AFC6C(0, v4, 1, a1);
    }
    return result;
  }
  if (v4 >= 0) {
    uint64_t v6 = v4;
  }
  else {
    uint64_t v6 = v4 + 1;
  }
  if (v4 < -1) {
    goto LABEL_161;
  }
  uint64_t v105 = result;
  unint64_t v102 = a1;
  if (v4 < 2)
  {
    uint64_t v9 = (char *)MEMORY[0x1E4FBC860];
    uint64_t v110 = (char *)(MEMORY[0x1E4FBC860] + 32);
    uint64_t v104 = MEMORY[0x1E4FBC860];
    if (v4 != 1)
    {
      unint64_t v12 = *(void *)(MEMORY[0x1E4FBC860] + 16);
LABEL_119:
      uint64_t v93 = v9;
      if (v12 >= 2)
      {
        uint64_t v94 = *v102;
        do
        {
          unint64_t v95 = v12 - 2;
          if (v12 < 2) {
            goto LABEL_148;
          }
          if (!v94) {
            goto LABEL_160;
          }
          unint64_t v96 = v93;
          uint64_t v97 = *(void *)&v93[16 * v95 + 32];
          uint64_t v98 = *(void *)&v93[16 * v12 + 24];
          sub_1C20AFD74((char *)(v94 + 8 * v97), (char *)(v94 + 8 * *(void *)&v93[16 * v12 + 16]), v94 + 8 * v98, v110);
          if (v2) {
            break;
          }
          if (v98 < v97) {
            goto LABEL_149;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v96 = sub_1C20FB150((uint64_t)v96);
          }
          if (v95 >= *((void *)v96 + 2)) {
            goto LABEL_150;
          }
          uint64_t v99 = &v96[16 * v95 + 32];
          *(void *)uint64_t v99 = v97;
          *((void *)v99 + sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, 0, 1) = v98;
          unint64_t v100 = *((void *)v96 + 2);
          if (v12 > v100) {
            goto LABEL_151;
          }
          memmove(&v96[16 * v12 + 16], &v96[16 * v12 + 32], 16 * (v100 - v12));
          uint64_t v93 = v96;
          *((void *)v96 + 2) = v100 - 1;
          unint64_t v12 = v100 - 1;
        }
        while (v100 > 2);
      }
LABEL_116:
      swift_bridgeObjectRelease();
      *(void *)(v104 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v111 = v1;
  }
  else
  {
    uint64_t v111 = v1;
    uint64_t v7 = v6 >> 1;
    type metadata accessor for HKMedicationFreeTextFormTypeCode(0);
    uint64_t v8 = sub_1C214A810();
    *(void *)(v8 + 16) = v7;
    uint64_t v104 = v8;
    uint64_t v110 = (char *)(v8 + 32);
  }
  uint64_t v10 = 0;
  uint64_t v11 = *a1;
  uint64_t v103 = *a1 + 16;
  uint64_t v101 = *a1 - 8;
  uint64_t v9 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v107 = v4;
  while (1)
  {
    uint64_t v13 = v10++;
    uint64_t v108 = v13;
    if (v10 >= v4) {
      goto LABEL_46;
    }
    uint64_t v14 = sub_1C214B030();
    uint64_t v16 = v15;
    if (v14 == sub_1C214B030() && v16 == v17) {
      int v19 = 0;
    }
    else {
      int v19 = sub_1C214BA80();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v10 = v13 + 2;
    if (v13 + 2 >= v4) {
      goto LABEL_36;
    }
    uint64_t v20 = v103 + 8 * v13;
    while (1)
    {
      uint64_t v22 = sub_1C214B030();
      uint64_t v24 = v23;
      if (v22 == sub_1C214B030() && v24 == v25)
      {
        swift_bridgeObjectRelease_n();
        if (v19)
        {
          uint64_t v4 = v107;
          goto LABEL_37;
        }
        goto LABEL_26;
      }
      int v21 = sub_1C214BA80();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v19 ^ v21)) {
        break;
      }
LABEL_26:
      v20 += 8;
      if (v107 == ++v10)
      {
        uint64_t v4 = v107;
        uint64_t v10 = v107;
        goto LABEL_36;
      }
    }
    uint64_t v4 = v107;
LABEL_36:
    if (v19)
    {
LABEL_37:
      if (v10 < v13) {
        goto LABEL_154;
      }
      if (v13 < v10)
      {
        uint64_t v27 = v10 - 1;
        uint64_t v28 = v13;
        do
        {
          if (v28 != v27)
          {
            if (!v11) {
              goto LABEL_159;
            }
            uint64_t v29 = *(void *)(v11 + 8 * v28);
            *(void *)(v11 + 8 * v28) = *(void *)(v11 + 8 * v27);
            *(void *)(v11 + 8 * v27) = v29;
          }
          BOOL v72 = ++v28 < v27--;
        }
        while (v72);
      }
    }
LABEL_46:
    if (v10 < v4)
    {
      if (__OFSUB__(v10, v13)) {
        goto LABEL_152;
      }
      if (v10 - v13 < v105) {
        break;
      }
    }
LABEL_68:
    if (v10 < v13) {
      goto LABEL_147;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v9 = sub_1C20FADDC(0, *((void *)v9 + 2) + 1, 1, v9);
    }
    unint64_t v41 = *((void *)v9 + 2);
    unint64_t v40 = *((void *)v9 + 3);
    unint64_t v12 = v41 + 1;
    if (v41 >= v40 >> 1) {
      uint64_t v9 = sub_1C20FADDC((char *)(v40 > 1), v41 + 1, 1, v9);
    }
    *((void *)v9 + 2) = v12;
    uint64_t v42 = v9 + 32;
    uint64_t v43 = &v9[16 * v41 + 32];
    *(void *)uint64_t v43 = v13;
    *((void *)v43 + sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, 0, 1) = v10;
    if (v41)
    {
      uint64_t v109 = v10;
      while (1)
      {
        unint64_t v44 = v12 - 1;
        if (v12 >= 4)
        {
          uint64_t v49 = &v42[16 * v12];
          uint64_t v50 = *((void *)v49 - 8);
          uint64_t v51 = *((void *)v49 - 7);
          BOOL v55 = __OFSUB__(v51, v50);
          uint64_t v52 = v51 - v50;
          if (v55) {
            goto LABEL_136;
          }
          uint64_t v54 = *((void *)v49 - 6);
          uint64_t v53 = *((void *)v49 - 5);
          BOOL v55 = __OFSUB__(v53, v54);
          uint64_t v47 = v53 - v54;
          char v48 = v55;
          if (v55) {
            goto LABEL_137;
          }
          unint64_t v56 = v12 - 2;
          uint64_t v57 = &v42[16 * v12 - 32];
          uint64_t v59 = *(void *)v57;
          uint64_t v58 = *((void *)v57 + 1);
          BOOL v55 = __OFSUB__(v58, v59);
          uint64_t v60 = v58 - v59;
          if (v55) {
            goto LABEL_139;
          }
          BOOL v55 = __OFADD__(v47, v60);
          uint64_t v61 = v47 + v60;
          if (v55) {
            goto LABEL_142;
          }
          if (v61 >= v52)
          {
            uint64_t v79 = &v42[16 * v44];
            uint64_t v81 = *(void *)v79;
            uint64_t v80 = *((void *)v79 + 1);
            BOOL v55 = __OFSUB__(v80, v81);
            uint64_t v82 = v80 - v81;
            if (v55) {
              goto LABEL_146;
            }
            BOOL v72 = v47 < v82;
            goto LABEL_106;
          }
        }
        else
        {
          if (v12 != 3)
          {
            uint64_t v73 = *((void *)v9 + 4);
            uint64_t v74 = *((void *)v9 + 5);
            BOOL v55 = __OFSUB__(v74, v73);
            uint64_t v66 = v74 - v73;
            char v67 = v55;
            goto LABEL_100;
          }
          uint64_t v46 = *((void *)v9 + 4);
          uint64_t v45 = *((void *)v9 + 5);
          BOOL v55 = __OFSUB__(v45, v46);
          uint64_t v47 = v45 - v46;
          char v48 = v55;
        }
        if (v48) {
          goto LABEL_138;
        }
        unint64_t v56 = v12 - 2;
        uint64_t v62 = &v42[16 * v12 - 32];
        uint64_t v64 = *(void *)v62;
        uint64_t v63 = *((void *)v62 + 1);
        BOOL v65 = __OFSUB__(v63, v64);
        uint64_t v66 = v63 - v64;
        char v67 = v65;
        if (v65) {
          goto LABEL_141;
        }
        id v68 = &v42[16 * v44];
        uint64_t v70 = *(void *)v68;
        uint64_t v69 = *((void *)v68 + 1);
        BOOL v55 = __OFSUB__(v69, v70);
        uint64_t v71 = v69 - v70;
        if (v55) {
          goto LABEL_144;
        }
        if (__OFADD__(v66, v71)) {
          goto LABEL_145;
        }
        if (v66 + v71 >= v47)
        {
          BOOL v72 = v47 < v71;
LABEL_106:
          if (v72) {
            unint64_t v44 = v56;
          }
          goto LABEL_108;
        }
LABEL_100:
        if (v67) {
          goto LABEL_140;
        }
        uint64_t v75 = &v42[16 * v44];
        uint64_t v77 = *(void *)v75;
        uint64_t v76 = *((void *)v75 + 1);
        BOOL v55 = __OFSUB__(v76, v77);
        uint64_t v78 = v76 - v77;
        if (v55) {
          goto LABEL_143;
        }
        if (v78 < v66) {
          goto LABEL_15;
        }
LABEL_108:
        unint64_t v83 = v44 - 1;
        if (v44 - 1 >= v12)
        {
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
LABEL_154:
          __break(1u);
LABEL_155:
          __break(1u);
          goto LABEL_156;
        }
        uint64_t v84 = v11;
        if (!v11) {
          goto LABEL_158;
        }
        uint64_t v85 = v9;
        uint64_t v86 = &v42[16 * v83];
        uint64_t v87 = *(void *)v86;
        unint64_t v88 = v44;
        uint64_t v89 = &v42[16 * v44];
        uint64_t v90 = *((void *)v89 + 1);
        uint64_t v91 = v84;
        sub_1C20AFD74((char *)(v84 + 8 * *(void *)v86), (char *)(v84 + 8 * *(void *)v89), v84 + 8 * v90, v110);
        if (v111) {
          goto LABEL_116;
        }
        if (v90 < v87) {
          goto LABEL_133;
        }
        if (v88 > *((void *)v85 + 2)) {
          goto LABEL_134;
        }
        *(void *)uint64_t v86 = v87;
        *(void *)&v42[16 * v83 + 8] = v90;
        unint64_t v92 = *((void *)v85 + 2);
        if (v88 >= v92) {
          goto LABEL_135;
        }
        uint64_t v9 = v85;
        unint64_t v12 = v92 - 1;
        memmove(v89, v89 + 16, 16 * (v92 - 1 - v88));
        *((void *)v85 + 2) = v92 - 1;
        uint64_t v11 = v91;
        uint64_t v10 = v109;
        if (v92 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v12 = 1;
LABEL_15:
    uint64_t v4 = v107;
    if (v10 >= v107)
    {
      uint64_t v2 = v111;
      goto LABEL_119;
    }
  }
  if (__OFADD__(v13, v105)) {
    goto LABEL_155;
  }
  if (v13 + v105 >= v4) {
    uint64_t v30 = v4;
  }
  else {
    uint64_t v30 = v13 + v105;
  }
  if (v30 >= v13)
  {
    if (v10 != v30)
    {
      uint64_t v31 = (uint64_t *)(v101 + 8 * v10);
      uint64_t v106 = v30;
      do
      {
        id v32 = v31;
        while (1)
        {
          uint64_t v33 = sub_1C214B030();
          uint64_t v35 = v34;
          if (v33 == sub_1C214B030() && v35 == v36) {
            break;
          }
          char v38 = sub_1C214BA80();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v38 & 1) == 0) {
            goto LABEL_57;
          }
          if (!v11) {
            goto LABEL_157;
          }
          uint64_t v39 = *v32;
          *id v32 = v32[1];
          v32[1] = v39;
          --v32;
          if (v10 == ++v13) {
            goto LABEL_57;
          }
        }
        swift_bridgeObjectRelease_n();
LABEL_57:
        ++v10;
        ++v31;
        uint64_t v13 = v108;
      }
      while (v10 != v106);
      uint64_t v10 = v106;
    }
    goto LABEL_68;
  }
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  __break(1u);
LABEL_161:
  uint64_t result = sub_1C214B900();
  __break(1u);
  return result;
}

uint64_t sub_1C20AFC6C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v17 = result;
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v6 = *a4;
    uint64_t v7 = *a4 + 8 * a3 - 8;
LABEL_6:
    uint64_t v8 = v17;
    uint64_t v9 = (uint64_t *)v7;
    while (1)
    {
      uint64_t v10 = sub_1C214B030();
      uint64_t v12 = v11;
      if (v10 == sub_1C214B030() && v12 == v13)
      {
        uint64_t result = swift_bridgeObjectRelease_n();
LABEL_5:
        ++v4;
        v7 += 8;
        if (v4 == a2) {
          return result;
        }
        goto LABEL_6;
      }
      char v15 = sub_1C214BA80();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      if ((v15 & 1) == 0) {
        goto LABEL_5;
      }
      if (!v6) {
        break;
      }
      uint64_t v16 = *v9;
      uint64_t result = v9[1];
      *uint64_t v9 = result;
      v9[1] = v16;
      --v9;
      if (v4 == ++v8) {
        goto LABEL_5;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1C20AFD74(char *a1, char *__src, unint64_t a3, char *a4)
{
  uint64_t v36 = a1;
  uint64_t v5 = __src;
  uint64_t v6 = __src - a1;
  uint64_t v7 = __src - a1 + 7;
  if (__src - a1 >= 0) {
    uint64_t v7 = __src - a1;
  }
  uint64_t v8 = v7 >> 3;
  uint64_t v9 = a3 - (void)__src;
  uint64_t v10 = a3 - (void)__src + 7;
  if ((uint64_t)(a3 - (void)__src) >= 0) {
    uint64_t v10 = a3 - (void)__src;
  }
  uint64_t v11 = v10 >> 3;
  uint64_t v35 = a4;
  if (v8 >= v10 >> 3)
  {
    if (v9 < -7) {
      goto LABEL_54;
    }
    if (a4 != __src || &__src[8 * v11] <= a4) {
      memmove(a4, __src, 8 * v11);
    }
    int v21 = &a4[8 * v11];
    uint64_t v34 = v21;
    uint64_t v36 = v5;
    if (a1 >= v5 || v9 < 8)
    {
LABEL_53:
      sub_1C20FAF04((void **)&v36, (const void **)&v35, &v34);
      return 1;
    }
    uint64_t v22 = (char *)(a3 - 8);
    uint64_t v23 = v5;
    while (1)
    {
      uint64_t v24 = v22 + 8;
      v23 -= 8;
      uint64_t v25 = sub_1C214B030();
      uint64_t v27 = v26;
      if (v25 == sub_1C214B030() && v27 == v28) {
        break;
      }
      char v30 = sub_1C214BA80();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v30 & 1) == 0) {
        goto LABEL_46;
      }
      if (v24 != v5 || v22 >= v5) {
        *(void *)uint64_t v22 = *(void *)v23;
      }
      uint64_t v36 = v23;
LABEL_51:
      if (v23 > a1)
      {
        v22 -= 8;
        uint64_t v5 = v23;
        if (v21 > a4) {
          continue;
        }
      }
      goto LABEL_53;
    }
    swift_bridgeObjectRelease_n();
LABEL_46:
    uint64_t v34 = v21 - 8;
    if (v24 < v21 || v22 >= v21 || v24 != v21) {
      *(void *)uint64_t v22 = *((void *)v21 - 1);
    }
    uint64_t v23 = v5;
    v21 -= 8;
    goto LABEL_51;
  }
  if (v6 >= -7)
  {
    if (a4 != a1 || &a1[8 * v8] <= a4) {
      memmove(a4, a1, 8 * v8);
    }
    uint64_t v34 = &a4[8 * v8];
    if ((unint64_t)v5 < a3 && v6 >= 8)
    {
      uint64_t v12 = a4;
      uint64_t v13 = a1;
      while (1)
      {
        uint64_t v14 = sub_1C214B030();
        uint64_t v16 = v15;
        if (v14 == sub_1C214B030() && v16 == v17) {
          break;
        }
        char v19 = sub_1C214BA80();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v19 & 1) == 0) {
          goto LABEL_23;
        }
        uint64_t v20 = v5 + 8;
        if (v13 < v5 || v13 >= v20 || v13 != v5) {
          *(void *)uint64_t v13 = *(void *)v5;
        }
LABEL_26:
        v13 += 8;
        if (v12 < &a4[8 * v8])
        {
          uint64_t v5 = v20;
          if ((unint64_t)v20 < a3) {
            continue;
          }
        }
        uint64_t v36 = v13;
        goto LABEL_53;
      }
      swift_bridgeObjectRelease_n();
LABEL_23:
      if (v13 != v12) {
        *(void *)uint64_t v13 = *(void *)v12;
      }
      v12 += 8;
      uint64_t v35 = v12;
      uint64_t v20 = v5;
      goto LABEL_26;
    }
    goto LABEL_53;
  }
LABEL_54:
  uint64_t result = sub_1C214B990();
  __break(1u);
  return result;
}

uint64_t sub_1C20B00A4(uint64_t result, uint64_t a2)
{
  unint64_t v2 = *(void *)(result + 16);
  if (!v2) {
    return MEMORY[0x1E4FBC860];
  }
  unint64_t v4 = 0;
  uint64_t v5 = qword_1EA2C80D0;
  uint64_t v6 = result + 32;
  uint64_t v7 = MEMORY[0x1E4FBC860];
  do
  {
    if (v4 <= v2) {
      unint64_t v8 = v2;
    }
    else {
      unint64_t v8 = v4;
    }
    while (1)
    {
      if (v4 == v8) {
        goto LABEL_24;
      }
      uint64_t v9 = *(void *)(v6 + 8 * v4++);
      uint64_t v10 = *(void *)(a2 + v5);
      uint64_t v11 = *(void *)(v10 + 16);
      if (!v11) {
        goto LABEL_15;
      }
      if (*(void *)(v10 + 32) != v9) {
        break;
      }
LABEL_6:
      if (v4 == v2) {
        return v7;
      }
    }
    if (v11 != 1)
    {
      uint64_t v12 = 5;
      while (1)
      {
        uint64_t v13 = v12 - 3;
        if (__OFADD__(v12 - 4, 1)) {
          break;
        }
        if (*(void *)(v10 + 8 * v12) == v9) {
          goto LABEL_6;
        }
        ++v12;
        if (v13 == v11) {
          goto LABEL_15;
        }
      }
      __break(1u);
LABEL_24:
      __break(1u);
      return result;
    }
LABEL_15:
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0) {
      uint64_t result = sub_1C1F70544(0, *(void *)(v7 + 16) + 1, 1);
    }
    unint64_t v15 = *(void *)(v7 + 16);
    unint64_t v14 = *(void *)(v7 + 24);
    if (v15 >= v14 >> 1) {
      uint64_t result = sub_1C1F70544(v14 > 1, v15 + 1, 1);
    }
    *(void *)(v7 + 16) = v15 + 1;
    *(void *)(v7 + 8 * v15 + 32) = v9;
  }
  while (v4 != v2);
  return v7;
}

uint64_t sub_1C20B0200(uint64_t a1, uint64_t a2)
{
  v19[2] = a2;
  uint64_t v4 = sub_1C21487B0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v8 = *(void *)(a1 + 16);
  uint64_t v9 = MEMORY[0x1E4FBC860];
  if (v8)
  {
    v19[1] = v2;
    uint64_t v23 = MEMORY[0x1E4FBC860];
    sub_1C1F704CC(0, v8, 0);
    uint64_t v9 = v23;
    uint64_t v10 = (uint64_t *)(a1 + 32);
    uint64_t v11 = (void (**)(uint64_t *, char *, uint64_t))(v5 + 16);
    uint64_t v12 = (void (**)(char *, uint64_t))(v5 + 8);
    do
    {
      uint64_t v13 = *v10++;
      sub_1C20AE704(v13, (uint64_t)v7);
      uint64_t v23 = v9;
      unint64_t v15 = *(void *)(v9 + 16);
      unint64_t v14 = *(void *)(v9 + 24);
      if (v15 >= v14 >> 1) {
        sub_1C1F704CC(v14 > 1, v15 + 1, 1);
      }
      uint64_t v21 = v4;
      unint64_t v22 = sub_1C20B053C();
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v20);
      (*v11)(boxed_opaque_existential_1, v7, v4);
      uint64_t v17 = v23;
      *(void *)(v23 + 16) = v15 + 1;
      sub_1C1F31280(&v20, v17 + 40 * v15 + 32);
      (*v12)(v7, v4);
      uint64_t v9 = v23;
      --v8;
    }
    while (v8);
  }
  return v9;
}

void *sub_1C20B03C0(uint64_t a1, uint64_t a2)
{
  sub_1C20B0604(0, (unint64_t *)&qword_1EA2C2CC8, type metadata accessor for MedicationSearchItem, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v14 - v6;
  *(void *)(v2 + qword_1EA2C80Dsub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = &unk_1F1D73898;
  int64_t v8 = (uint64_t *)(v2 + qword_1EA2C80D8);
  uint64_t v14 = sub_1C214A5F0();
  uint64_t v15 = v9;
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  uint64_t v10 = v14;
  uint64_t v11 = v15;
  swift_retain();
  swift_bridgeObjectRelease();
  *int64_t v8 = v10;
  v8[1] = v11;
  swift_release();
  sub_1C1F246EC(a1, (uint64_t)v7);
  uint64_t v12 = sub_1C20FBEB8((uint64_t)v7, a2);
  sub_1C20B0594(a1, (unint64_t *)&qword_1EA2C2CC8, type metadata accessor for MedicationSearchItem);
  return v12;
}

unint64_t sub_1C20B053C()
{
  unint64_t result = qword_1EA2C2E68;
  if (!qword_1EA2C2E68)
  {
    sub_1C21487B0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C2E68);
  }
  return result;
}

uint64_t sub_1C20B0594(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1C20B0604(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

void sub_1C20B0604(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C20B0668()
{
  swift_weakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C20B06A0()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C20B06D8(uint64_t a1)
{
  return sub_1C20AF240(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1C20B06E0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FormStepResult();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C20B073C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a2)
  {
    return swift_continuation_throwingResume();
  }
  else
  {
    if (a3)
    {
      sub_1C1F248B4(0, (unint64_t *)&qword_1EBF0C9C0);
      uint64_t v6 = swift_allocError();
      *uint64_t v7 = a3;
      id v8 = a3;
      a1 = v3;
      a2 = v6;
    }
    else
    {
      __break(1u);
    }
    return MEMORY[0x1F4188208](a1, a2);
  }
}

uint64_t sub_1C20B07EC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);

  return swift_release();
}

id sub_1C20B0840()
{
  uint64_t v1 = qword_1EA2C69A8;
  uint64_t v2 = *(void **)(v0 + qword_1EA2C69A8);
  if (v2)
  {
    id v3 = *(id *)(v0 + qword_1EA2C69A8);
  }
  else
  {
    id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F2B300]), sel_initWithHealthStore_, *(void *)(v0 + qword_1EA2C69D8));
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + vsub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, 0, 1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

uint64_t NewMedicationOnboardingViewController.listManager.getter()
{
  return swift_retain();
}

uint64_t NewMedicationOnboardingViewController.analyticsContext.getter()
{
  return swift_retain();
}

uint64_t sub_1C20B08E4(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  id v4 = (void *)(*a2 + qword_1EA2C69A0);
  swift_beginAccess();
  *id v4 = v3;
  v4[1] = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C20B0950()
{
  uint64_t v1 = (uint64_t *)(v0 + qword_1EA2C69A0);
  swift_beginAccess();
  uint64_t v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1C20B09A8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + qword_1EA2C69A0);
  swift_beginAccess();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1C20B0A08())()
{
  return j_j__swift_endAccess;
}

id sub_1C20B0A64()
{
  uint64_t v1 = qword_1EA2C69B8;
  uint64_t v2 = *(void **)(v0 + qword_1EA2C69B8);
  if (v2)
  {
    id v3 = *(id *)(v0 + qword_1EA2C69B8);
  }
  else
  {
    id v4 = sub_1C20B0AC8(v0);
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + vsub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, 0, 1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_1C20B0AC8(uint64_t a1)
{
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1BF0]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v2, sel_setDelegate_, a1);
  if (qword_1EBF0CA00 != -1) {
    swift_once();
  }
  id v3 = (id)qword_1EBF0CA18;
  swift_bridgeObjectRetain();
  sub_1C2147730();
  swift_bridgeObjectRelease();

  id v4 = (void *)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setPlaceholder_, v4, 0xE000000000000000);

  objc_msgSend(v2, sel_setAutocorrectionType_, 1);
  objc_msgSend(v2, sel_setSpellCheckingType_, 1);
  return v2;
}

id sub_1C20B0C38()
{
  uint64_t v1 = qword_1EA2C69C0;
  id v2 = *(void **)(v0 + qword_1EA2C69C0);
  if (v2)
  {
    id v3 = *(id *)(v0 + qword_1EA2C69C0);
  }
  else
  {
    id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB14A8]), sel_initWithBarButtonSystemItem_target_action_, 1, v0, sel_cancelTapped_);
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + vsub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, 0, 1) = v4;
    id v3 = v4;

    id v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_1C20B0CC0()
{
  id v0 = objc_msgSend(self, sel_searchConfiguration);
  id v1 = sub_1C20B0A64();
  id v2 = objc_msgSend(v1, sel_text);

  if (v2)
  {
    uint64_t v3 = sub_1C214A5F0();
    uint64_t v5 = v4;

    uint64_t v6 = sub_1C20663EC(v3, v5);
    uint64_t v8 = v7;
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = sub_1C20663EC(0, 0xE000000000000000);
    uint64_t v8 = v9;
  }
  if (qword_1EBF0CA00 != -1) {
    swift_once();
  }
  uint64_t v10 = (void *)qword_1EBF0CA18;
  sub_1C1F72888(0, qword_1EBF0B8A0, (unint64_t *)&qword_1EBF0C9F0);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1C214FCD0;
  *(void *)(v11 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v32 = sub_1C1F31298();
  *(void *)(v11 + 64) = v32;
  *(void *)(v11 + 32) = v6;
  *(void *)(v11 + 4sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = v8;
  uint64_t v31 = v6;
  id v12 = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C2147730();
  sub_1C214A5C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  uint64_t v13 = (void *)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_setSecondaryText_, v13, 0xE000000000000000);

  id v14 = objc_msgSend(v0, sel_buttonProperties);
  id v15 = objc_msgSend(self, sel_tintedButtonConfiguration);
  objc_msgSend(v14, sel_setConfiguration_, v15);

  id v16 = objc_msgSend(v0, sel_buttonProperties);
  id v17 = objc_msgSend(v16, sel_configuration);

  objc_msgSend(v17, sel_setCornerStyle_, 4);
  id v18 = objc_msgSend(v0, sel_buttonProperties);
  id v19 = objc_msgSend(v18, sel_configuration);

  id v20 = objc_msgSend(self, sel_systemGrayColor);
  objc_msgSend(v19, sel_setBaseBackgroundColor_, v20);

  id v21 = objc_msgSend(v0, sel_buttonProperties);
  sub_1C1F12718(0, &qword_1EA2C3198);
  uint64_t v22 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v23 = (void *)sub_1C214B250();
  objc_msgSend(v21, sel_setPrimaryAction_, v23, 0, 0, 0, sub_1C20B6AD8, v22);

  id v24 = objc_msgSend(v0, sel_buttonProperties);
  id v25 = objc_msgSend(v24, sel_configuration);

  uint64_t v26 = (void *)qword_1EBF0CA18;
  uint64_t v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_1C214FCD0;
  *(void *)(v27 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v27 + 64) = v32;
  *(void *)(v27 + 32) = v31;
  *(void *)(v27 + 4sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = v8;
  id v28 = v26;
  swift_bridgeObjectRetain();
  sub_1C2147730();
  sub_1C214A5C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  uint64_t v29 = (void *)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  objc_msgSend(v25, sel_setTitle_, v29, 0xE000000000000000);

  return v0;
}

void sub_1C20B11EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 + 16;
  swift_beginAccess();
  uint64_t v3 = MEMORY[0x1C8754850](v2);
  if (v3)
  {
    uint64_t v4 = (void *)v3;
    sub_1C20B2838();
  }
}

char *NewMedicationOnboardingViewController.__allocating_init(healthStore:listManager:analyticsContext:)(void *a1, uint64_t a2, uint64_t a3)
{
  id v7 = objc_allocWithZone(v3);
  return NewMedicationOnboardingViewController.init(healthStore:listManager:analyticsContext:)(a1, a2, a3);
}

char *NewMedicationOnboardingViewController.init(healthStore:listManager:analyticsContext:)(void *a1, uint64_t a2, uint64_t a3)
{
  *(void *)&v3[qword_1EA2C69A8] = 0;
  id v7 = (uint64_t *)&v3[qword_1EA2C69A0];
  uint64_t v21 = sub_1C214A5F0();
  uint64_t v22 = v8;
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  uint64_t v9 = v3;
  swift_bridgeObjectRelease();
  *id v7 = v21;
  v7[1] = v22;
  *(void *)&v9[qword_1EA2C69B0] = 0x4046000000000000;
  *(void *)&v9[qword_1EA2C69B8] = 0;
  *(void *)&v9[qword_1EA2C69C0] = 0;
  *(void *)&v9[qword_1EA2C69C8] = 0;
  *(void *)&v9[qword_1EA2C69D0] = 0;
  *(void *)&v9[qword_1EA2C69D8] = a1;
  *(void *)&v9[qword_1EA2C6990] = a2;
  sub_1C2149410();
  swift_allocObject();
  id v10 = a1;
  swift_retain();
  uint64_t v11 = sub_1C2149400();
  *(void *)&v9[qword_1EA2C69E0] = v11;
  type metadata accessor for NewMedicationsOnboardingDataSource();
  uint64_t v12 = swift_allocObject();
  id v13 = v10;
  swift_retain();
  swift_retain();
  uint64_t v14 = sub_1C20B5904(a2, v11, v13, v12);

  swift_release();
  uint64_t v15 = qword_1EA2C69E8;
  *(void *)&v9[qword_1EA2C69E8] = v14;
  *(void *)&v9[qword_1EA2C6998] = a3;
  swift_retain();

  sub_1C2148820();
  sub_1C1F72888(0, (unint64_t *)&qword_1EA2C69F0, (unint64_t *)&qword_1EA2C2CE0);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1C214FCD0;
  uint64_t v17 = MEMORY[0x1E4F66470];
  *(void *)(v16 + 32) = *(void *)&v9[v15];
  *(void *)(v16 + 4sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = v17;
  swift_retain();
  sub_1C2148850();
  id v18 = (char *)sub_1C2148AC0();
  *(void *)(*(void *)&v18[qword_1EA2C69E8] + qword_1EA2C2D40 + 8) = &off_1F1D79168;
  swift_unknownObjectWeakAssign();
  id v19 = v18;
  sub_1C20B17D8();
  swift_release();
  swift_release();

  return v19;
}

void sub_1C20B152C(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = a3;
  sub_1C20B5FC0();
}

id sub_1C20B1554()
{
  uint64_t v1 = qword_1EA2C69D0;
  uint64_t v2 = *(void **)(v0 + qword_1EA2C69D0);
  if (v2)
  {
    id v3 = *(id *)(v0 + qword_1EA2C69D0);
  }
  else
  {
    id v4 = objc_allocWithZone(MEMORY[0x1E4F83AF8]);
    uint64_t v5 = (void *)sub_1C214A5B0();
    id v6 = objc_msgSend(v4, sel_initWithTitle_detailText_icon_, v5, 0, 0);

    id v7 = *(void **)(v0 + v1);
    *(void *)(v0 + vsub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, 0, 1) = v6;
    id v3 = v6;

    uint64_t v2 = 0;
  }
  id v8 = v2;
  return v3;
}

void sub_1C20B15F4()
{
  sub_1C20B1C34();
  v12.receiver = v0;
  v12.super_class = (Class)type metadata accessor for NewMedicationOnboardingViewController();
  objc_msgSendSuper2(&v12, sel_viewDidLoad);
  id v1 = sub_1C20B0A64();
  objc_msgSend(v1, sel_setHidden_, 1);

  id v2 = sub_1C20B0A64();
  objc_msgSend(v2, sel_setAlpha_, 0.0);

  id v3 = objc_msgSend(v0, sel_collectionView);
  if (!v3)
  {
    __break(1u);
    goto LABEL_8;
  }
  id v4 = v3;
  objc_msgSend(v3, sel_setPreservesSuperviewLayoutMargins_, 1);

  id v5 = objc_msgSend(v0, sel_collectionView);
  if (!v5)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  id v6 = v5;
  id v7 = objc_msgSend(self, sel_systemBackgroundColor);
  objc_msgSend(v6, sel_setBackgroundColor_, v7);

  id v8 = objc_msgSend(v0, sel_traitCollection);
  id v9 = objc_msgSend(v8, sel_horizontalSizeClass);

  if (v9 != (id)2) {
    return;
  }
  id v10 = objc_msgSend(v0, sel_collectionView);
  if (!v10)
  {
LABEL_9:
    __break(1u);
    return;
  }
  uint64_t v11 = v10;
  objc_msgSend(v10, sel_setDirectionalLayoutMargins_, 0.0, *(double *)&v0[qword_1EA2C69B0], 0.0, *(double *)&v0[qword_1EA2C69B0]);
}

void sub_1C20B1790(void *a1)
{
  id v1 = a1;
  sub_1C20B15F4();
}

uint64_t sub_1C20B17D8()
{
  uint64_t v1 = v0;
  sub_1C20B6978(0, &qword_1EBF0C7E8, MEMORY[0x1E4FBCC28], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v2 - 8);
  id v4 = (char *)&v19 - v3;
  uint64_t v5 = MEMORY[0x1E4FBB390];
  sub_1C20B6E20(0, &qword_1EBF0C740, MEMORY[0x1E4FBB390], MEMORY[0x1E4F1AC60]);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  id v10 = (char *)&v19 - v9;
  sub_1C20B6D10();
  uint64_t v12 = v11;
  uint64_t v13 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)&v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  sub_1C20B6E20(0, &qword_1EBF0C750, v5, MEMORY[0x1E4F1AC70]);
  sub_1C2149F50();
  swift_endAccess();
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0CB10);
  id v20 = (id)sub_1C214AD80();
  uint64_t v16 = sub_1C214AD20();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v4, 1, 1, v16);
  sub_1C20064D0();
  sub_1C1F43FD4();
  sub_1C214A0A0();
  sub_1C1F441C8((uint64_t)v4);

  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1C20B6DD8(&qword_1EA2C6A78, (void (*)(uint64_t))sub_1C20B6D10);
  uint64_t v17 = sub_1C214A0F0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  *(void *)(v1 + qword_1EA2C69C8) = v17;
  return swift_release();
}

void sub_1C20B1B80(unsigned __int8 *a1, uint64_t a2)
{
  int v2 = *a1;
  uint64_t v3 = a2 + 16;
  swift_beginAccess();
  uint64_t v4 = MEMORY[0x1C8754850](v3);
  if (v4)
  {
    uint64_t v5 = (void *)v4;
    if (v2 && (swift_beginAccess(), (uint64_t v6 = MEMORY[0x1C8754850](v3)) != 0))
    {
      uint64_t v7 = (void *)v6;
      id v8 = sub_1C20B0CC0();
    }
    else
    {
      id v8 = 0;
    }
    objc_msgSend(v5, sel__setContentUnavailableConfiguration_, v8);
  }
}

id sub_1C20B1C34()
{
  id v1 = objc_msgSend(v0, sel_navigationItem);
  id v2 = sub_1C20B0A64();
  objc_msgSend(v1, sel_setTitleView_, v2);

  id v3 = objc_msgSend(v0, sel_navigationItem);
  id v4 = sub_1C20B0C38();
  objc_msgSend(v3, sel_setRightBarButtonItem_, v4);

  objc_msgSend(v0, sel_setModalInPresentation_, 1);
  id v5 = sub_1C20B1554();
  objc_msgSend(v5, sel_preferredContentSize);
  double v7 = v6;
  double v9 = v8;

  return objc_msgSend(v0, sel_setPreferredContentSize_, v7, v9);
}

id sub_1C20B1D34(void *a1)
{
  return objc_msgSend(a1, sel_dismissViewControllerAnimated_completion_, 1, 0);
}

void sub_1C20B1D48(void *a1)
{
  id v2 = (void *)sub_1C2147D40();
  objc_msgSend(a1, sel_deselectItemAtIndexPath_animated_, v2, 1);

  id v3 = (void *)sub_1C2147D40();
  id v4 = objc_msgSend(a1, sel_cellForItemAtIndexPath_, v3);

  if (v4)
  {
    id v8 = v4;
    sub_1C1F12718(0, (unint64_t *)&qword_1EA2C6A00);
    sub_1C1F248B4(0, &qword_1EA2C37A0);
    id v5 = v4;
    if (swift_dynamicCast())
    {
      sub_1C1F31280(v6, (uint64_t)v9);
      __swift_project_boxed_opaque_existential_0(v9, v9[3]);
      sub_1C2148470();

      __swift_destroy_boxed_opaque_existential_0((uint64_t)v9);
    }
    else
    {
      uint64_t v7 = 0;
      memset(v6, 0, sizeof(v6));

      sub_1C20B5F28((uint64_t)v6, (uint64_t (*)(void))sub_1C1F9845C);
    }
  }
}

uint64_t sub_1C20B1EB0(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5 = sub_1C2147D90();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  id v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2147D50();
  id v9 = a3;
  id v10 = a1;
  sub_1C20B1D48(v9);

  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1C20B1FAC(uint64_t a1)
{
  id v2 = v1;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v59 = type metadata accessor for MedicationSearchItem(0);
  uint64_t v4 = MEMORY[0x1F4188790](v59);
  uint64_t v58 = (uint64_t)&v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v60 = (uint64_t)&v54 - v6;
  uint64_t v7 = sub_1C21497F0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v61 = v7;
  uint64_t v62 = v8;
  MEMORY[0x1F4188790](v7);
  id v10 = (char *)&v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for MedicationOnboardingFlowManager(0);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for MedicationSearchItem.Source(0);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (id *)((char *)&v54 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v17 = type metadata accessor for MedicationOnboardingFlowManager.EntryMode(0);
  uint64_t v18 = MEMORY[0x1F4188790](v17);
  id v20 = (char *)&v54 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  uint64_t v22 = (char *)&v54 - v21;
  sub_1C20B5EC0(a1, (uint64_t)v16, type metadata accessor for MedicationSearchItem.Source);
  LODWORD(v63) = swift_getEnumCaseMultiPayload();
  if (v63 == 1)
  {
    swift_beginAccess();
    sub_1C2149340();
    sub_1C20B5EC0(a1, (uint64_t)v22, type metadata accessor for MedicationSearchItem);
    swift_storeEnumTagMultiPayload();
    sub_1C20B5F28((uint64_t)v16, type metadata accessor for MedicationSearchItem.Source);
    uint64_t v23 = 4;
  }
  else
  {

    sub_1C1F30C40();
    id v25 = (char *)v16 + *(int *)(v24 + 48);
    sub_1C20B5EC0(a1, (uint64_t)v22, type metadata accessor for MedicationSearchItem);
    swift_storeEnumTagMultiPayload();
    id v26 = sub_1C20B0A64();
    objc_msgSend(v26, sel_setHidden_, 1);

    id v27 = sub_1C20B0A64();
    objc_msgSend(v27, sel_setAlpha_, 0.0);

    uint64_t v28 = sub_1C21491B0();
    (*(void (**)(char *, uint64_t))(*(void *)(v28 - 8) + 8))(v25, v28);
    uint64_t v23 = 0;
  }
  uint64_t v29 = sub_1C202ACC0();
  if (!v29)
  {
LABEL_8:
    sub_1C20B5EC0((uint64_t)v22, (uint64_t)v20, type metadata accessor for MedicationOnboardingFlowManager.EntryMode);
    uint64_t v35 = *(void *)&v2[qword_1EA2C6998];
    v64[0] = 64;
    swift_retain();
    MedicationOnboardingFlowManager.init(entryMode:currentStep:didShowLifeStyleFactors:analyticsContext:analyticsEntryMode:)((uint64_t)v20, v64, 0, v35, v23, (uint64_t)v13);
    uint64_t v36 = (UIViewController_optional *)v63;
    if (v63 != 1)
    {
      swift_beginAccess();
      uint64_t v37 = *(void **)&v2[qword_1EA2C69D8];
      sub_1C2149310();
      swift_allocObject();
      swift_retain();
      v37;
      sub_1C2149300();
      sub_1C21493E0();
      sub_1C21493D0();
      swift_release();
    }
    MedicationOnboardingFlowManager.makeNextViewControllerForStep()(v36);
    if (v38)
    {
      uint64_t v39 = v38;
      id v40 = objc_msgSend(v2, sel_navigationController);
      if (v40)
      {
        unint64_t v41 = v40;
        objc_msgSend(v40, sel_pushViewController_animated_, v39, 1);
      }
    }
    else
    {
      sub_1C21497A0();
      uint64_t v42 = v60;
      sub_1C20B5EC0(a1, v60, type metadata accessor for MedicationSearchItem);
      uint64_t v43 = sub_1C21497E0();
      unint64_t v44 = v10;
      os_log_type_t v45 = sub_1C214ABD0();
      if (os_log_type_enabled(v43, v45))
      {
        uint64_t v46 = swift_slowAlloc();
        uint64_t v47 = swift_slowAlloc();
        uint64_t v66 = v47;
        *(_DWORD *)uint64_t v46 = 136315394;
        uint64_t v63 = v13;
        uint64_t v48 = sub_1C214BC10();
        uint64_t v65 = sub_1C1F6FD54(v48, v49, &v66);
        sub_1C214B530();
        swift_bridgeObjectRelease();
        *(_WORD *)(v46 + 12) = 2080;
        sub_1C20B5EC0(v42, v58, type metadata accessor for MedicationSearchItem);
        uint64_t v50 = sub_1C214A610();
        uint64_t v65 = sub_1C1F6FD54(v50, v51, &v66);
        sub_1C214B530();
        swift_bridgeObjectRelease();
        sub_1C20B5F28(v42, type metadata accessor for MedicationSearchItem);
        _os_log_impl(&dword_1C1F0B000, v43, v45, "[%s] MedicationOnboardingFlowManager wasn't able to find next ViewController! Encountered unexpected medication concept type: %s", (uint8_t *)v46, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1C8754730](v47, -1, -1);
        MEMORY[0x1C8754730](v46, -1, -1);

        (*(void (**)(char *, uint64_t))(v62 + 8))(v44, v61);
        uint64_t v52 = (uint64_t)v63;
LABEL_18:
        sub_1C20B5F28(v52, type metadata accessor for MedicationOnboardingFlowManager);
        return sub_1C20B5F28((uint64_t)v22, type metadata accessor for MedicationOnboardingFlowManager.EntryMode);
      }

      sub_1C20B5F28(v42, type metadata accessor for MedicationSearchItem);
      (*(void (**)(char *, uint64_t))(v62 + 8))(v44, v61);
    }
    uint64_t v52 = (uint64_t)v13;
    goto LABEL_18;
  }
  char v30 = (void *)v29;
  uint64_t v55 = a1;
  unint64_t v56 = v10;
  uint64_t v31 = v13;
  uint64_t v32 = *(void *)&v2[qword_1EA2C6990];
  uint64_t v33 = swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_retain();
  id v34 = _sSo17UIAlertControllerC19HealthMedicationsUIE27makeAlertForExsitingConcept7concept11listManager11showHandlerABSgSo9HKConceptC_0C22RecordsConceptsSupport04ListjM0CySo022HKMedicationUserDomainJ0CctFZ_0((uint64_t)v30, v32, (uint64_t)sub_1C1F65CB0, v33);
  swift_release_n();
  if (!v34)
  {

    uint64_t v13 = v31;
    a1 = v55;
    id v10 = v56;
    goto LABEL_8;
  }
  objc_msgSend(v2, sel_presentViewController_animated_completion_, v34, 1, 0);

  return sub_1C20B5F28((uint64_t)v22, type metadata accessor for MedicationOnboardingFlowManager.EntryMode);
}

uint64_t sub_1C20B2838()
{
  id v1 = v0;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v2 = sub_1C21497F0();
  uint64_t v31 = *(void *)(v2 - 8);
  uint64_t v32 = v2;
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (char *)&ObjectType - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for MedicationOnboardingFlowManager.EntryMode(0);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (uint64_t *)((char *)&ObjectType - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = type metadata accessor for MedicationOnboardingFlowManager(0);
  MEMORY[0x1F4188790](v8 - 8);
  id v10 = (char *)&ObjectType - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v11 = *(void *)&v0[qword_1EA2C6998];
  uint64_t v12 = *(void **)&v0[qword_1EA2C69D8];
  sub_1C2149310();
  swift_allocObject();
  swift_retain();
  v12;
  sub_1C2149300();
  sub_1C21493E0();
  sub_1C21493D0();
  id v13 = sub_1C20B0A64();
  id v14 = objc_msgSend(v13, sel_text, ObjectType);

  if (v14)
  {
    uint64_t v15 = sub_1C214A5F0();
    uint64_t v17 = v16;
  }
  else
  {
    uint64_t v15 = 0;
    uint64_t v17 = 0;
  }
  *uint64_t v7 = v15;
  v7[1] = v17;
  swift_storeEnumTagMultiPayload();
  LOBYTE(v34) = 64;
  swift_retain();
  MedicationOnboardingFlowManager.init(entryMode:currentStep:didShowLifeStyleFactors:analyticsContext:analyticsEntryMode:)((uint64_t)v7, (unsigned __int8 *)&v34, 0, v11, 1, (uint64_t)v10);
  MedicationOnboardingFlowManager.makeNextViewControllerForStep()(v18);
  if (!v19)
  {
    sub_1C21497A0();
    uint64_t v23 = sub_1C21497E0();
    os_log_type_t v24 = sub_1C214ABD0();
    if (os_log_type_enabled(v23, v24))
    {
      id v25 = (uint8_t *)swift_slowAlloc();
      uint64_t v26 = swift_slowAlloc();
      uint64_t v34 = v26;
      *(_DWORD *)id v25 = 136315138;
      uint64_t v27 = sub_1C214BC10();
      uint64_t v33 = sub_1C1F6FD54(v27, v28, &v34);
      sub_1C214B530();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C1F0B000, v23, v24, "[%s] MedicationOnboardingFlowManager wasn't able to find next ViewController", v25, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C8754730](v26, -1, -1);
      MEMORY[0x1C8754730](v25, -1, -1);
    }
    swift_release();

    (*(void (**)(char *, uint64_t))(v31 + 8))(v4, v32);
    return sub_1C20B5F28((uint64_t)v10, type metadata accessor for MedicationOnboardingFlowManager);
  }
  id v20 = v19;
  id v21 = objc_msgSend(v1, sel_navigationController);
  if (v21)
  {
    uint64_t v22 = v21;
    objc_msgSend(v21, sel_pushViewController_animated_, v20, 1);
    swift_release();

    return sub_1C20B5F28((uint64_t)v10, type metadata accessor for MedicationOnboardingFlowManager);
  }
  sub_1C20B5F28((uint64_t)v10, type metadata accessor for MedicationOnboardingFlowManager);

  return swift_release();
}

uint64_t sub_1C20B2D54()
{
  swift_beginAccess();
  id v1 = *(void **)(v0 + qword_1EA2C69D8);
  sub_1C2149310();
  swift_allocObject();
  swift_retain();
  v1;
  sub_1C2149300();
  sub_1C21493E0();
  sub_1C21493D0();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_retain();
  sub_1C2148120();
  swift_release_n();
  return swift_release();
}

void sub_1C20B2EC8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a2 + 16;
  swift_beginAccess();
  uint64_t v4 = (char *)MEMORY[0x1C8754850](v3);
  if (v4)
  {
    uint64_t v5 = v4;
    if (a1 == 2)
    {
      uint64_t v8 = v4;
      sub_1C2148130();
    }
    else
    {
      if (a1 != 3)
      {
LABEL_7:

        return;
      }
      uint64_t v6 = *(void **)&v4[qword_1EA2C69D8];
      objc_allocWithZone((Class)sub_1C2148C70());
      id v7 = v6;
      swift_retain();
      uint64_t v8 = (char *)sub_1C2148C50();
      sub_1C20B6DD8(&qword_1EA2C6A58, (void (*)(uint64_t))type metadata accessor for NewMedicationOnboardingViewController);
      id v9 = v5;
      sub_1C2148C60();
      objc_msgSend(v9, sel_presentViewController_animated_completion_, v8, 1, 0);
    }

    goto LABEL_7;
  }
}

void sub_1C20B3000(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  swift_getObjectType();
  sub_1C20B6978(0, (unint64_t *)&qword_1EA2C32D8, MEMORY[0x1E4FBCFE8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v29 - v7;
  uint64_t v9 = sub_1C21497F0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C21497A0();
  id v13 = sub_1C21497E0();
  os_log_type_t v14 = sub_1C214ABD0();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v31 = a1;
    uint64_t v15 = swift_slowAlloc();
    uint64_t v32 = a2;
    uint64_t v16 = (uint8_t *)v15;
    uint64_t v17 = swift_slowAlloc();
    uint64_t v29 = v9;
    uint64_t v18 = v17;
    uint64_t v34 = v17;
    *(_DWORD *)uint64_t v16 = 136315138;
    char v30 = v3;
    uint64_t v19 = sub_1C214BC10();
    uint64_t v33 = sub_1C1F6FD54(v19, v20, &v34);
    uint64_t v3 = v30;
    sub_1C214B530();
    a1 = v31;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C1F0B000, v13, v14, "[%s] start search", v16, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C8754730](v18, -1, -1);
    id v21 = v16;
    a2 = v32;
    MEMORY[0x1C8754730](v21, -1, -1);

    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v29);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  id v22 = sub_1C20B0A64();
  objc_msgSend(v22, sel_setHidden_, 1);

  id v23 = sub_1C20B0A64();
  objc_msgSend(v23, sel_setAlpha_, 0.0);

  uint64_t v24 = sub_1C214A8C0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v8, 1, 1, v24);
  sub_1C214A890();
  id v25 = v3;
  uint64_t v26 = sub_1C214A880();
  uint64_t v27 = (void *)swift_allocObject();
  uint64_t v28 = MEMORY[0x1E4FBCFD8];
  v27[2] = v26;
  v27[3] = v28;
  v27[4] = v25;
  sub_1C1F86288((uint64_t)v8, (uint64_t)&unk_1EA2C6A48, (uint64_t)v27);
  swift_release();
  sub_1C20B3384(a1, a2);
}

void sub_1C20B3384(void *a1, uint64_t a2)
{
  id v54 = sub_1C20B0A64();
  id v5 = objc_msgSend(a1, sel_snapshotViewAfterScreenUpdates_, 1);
  if (v5)
  {
    id v55 = v5;
    id v6 = objc_msgSend(v2, sel_navigationItem);
    id v7 = objc_msgSend(v6, sel_titleView);

    if (v7)
    {
      id v8 = objc_msgSend(v2, sel_view);
      if (v8)
      {
        uint64_t v9 = v8;
        objc_msgSend(v55, sel_frame);
        objc_msgSend(v9, sel_convertRect_fromCoordinateSpace_, a2);
        double v11 = v10;
        double v13 = v12;
        double v15 = v14;
        double v17 = v16;

        objc_msgSend(v55, sel_setFrame_, v11, v13, v15, v17);
        objc_msgSend(a1, sel_setAlpha_, 0.0);
        id v18 = objc_msgSend(v2, sel_view);
        if (v18)
        {
          uint64_t v19 = v18;
          objc_msgSend(v18, sel_addSubview_, v55);

          id v20 = objc_msgSend(v2, sel_collectionView);
          if (v20)
          {
            id v21 = v20;
            id v22 = objc_msgSend(v20, sel_visibleCells);

            sub_1C1F12718(0, (unint64_t *)&qword_1EA2C6A00);
            uint64_t v23 = sub_1C214A780();

            id v24 = sub_1C20B0A64();
            id v25 = objc_msgSend(v24, sel_searchTextField);

            objc_msgSend(v25, sel_frame);
            double v27 = v26;
            double v29 = v28;
            double v31 = v30;
            double v33 = v32;

            id v34 = objc_msgSend(v2, sel_view);
            objc_msgSend(v7, sel_convertRect_toView_, v34, v27, v29, v31, v33);
            uint64_t v36 = v35;
            uint64_t v38 = v37;
            uint64_t v40 = v39;
            uint64_t v42 = v41;

            uint64_t v43 = self;
            uint64_t v44 = swift_allocObject();
            *(void *)(v44 + 16) = v23;
            uint64_t v60 = sub_1C20B6834;
            uint64_t v61 = (void *)v44;
            uint64_t aBlock = MEMORY[0x1E4F143A8];
            uint64_t v57 = 1107296256;
            uint64_t v58 = sub_1C1F0E42C;
            uint64_t v59 = &block_descriptor_24;
            os_log_type_t v45 = _Block_copy(&aBlock);
            swift_release();
            objc_msgSend(v43, sel_animateWithDuration_animations_, v45, 0.1);
            _Block_release(v45);
            uint64_t v46 = (void *)swift_allocObject();
            v46[2] = v55;
            v46[3] = v36;
            v46[4] = v38;
            v46[5] = v40;
            v46[6] = v42;
            uint64_t v60 = sub_1C20B6874;
            uint64_t v61 = v46;
            uint64_t aBlock = MEMORY[0x1E4F143A8];
            uint64_t v57 = 1107296256;
            uint64_t v58 = sub_1C1F0E42C;
            uint64_t v59 = &block_descriptor_16;
            uint64_t v47 = _Block_copy(&aBlock);
            id v48 = v55;
            swift_release();
            unint64_t v49 = (void *)swift_allocObject();
            void v49[2] = 0x3FD999999999999ALL;
            v49[3] = v54;
            v49[4] = v48;
            uint64_t v60 = sub_1C20B68CC;
            uint64_t v61 = v49;
            uint64_t aBlock = MEMORY[0x1E4F143A8];
            uint64_t v57 = 1107296256;
            uint64_t v58 = sub_1C20B07EC;
            uint64_t v59 = &block_descriptor_22_0;
            uint64_t v50 = _Block_copy(&aBlock);
            id v51 = v48;
            id v52 = v54;
            swift_release();
            objc_msgSend(v43, sel_animateWithDuration_animations_completion_, v47, v50, 0.36);
            _Block_release(v50);
            _Block_release(v47);

            return;
          }
          goto LABEL_14;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
LABEL_14:
      __break(1u);
      return;
    }

    uint64_t v53 = v55;
  }
  else
  {
    uint64_t v53 = v54;
  }
}

uint64_t sub_1C20B387C(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_1C214B930();
    uint64_t v2 = result;
    if (!result) {
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (!v2) {
      goto LABEL_10;
    }
  }
  if (v2 < 1)
  {
    __break(1u);
    return result;
  }
  for (uint64_t i = 0; i != v2; ++i)
  {
    if ((a1 & 0xC000000000000001) != 0) {
      id v5 = (id)MEMORY[0x1C8753960](i, a1);
    }
    else {
      id v5 = *(id *)(a1 + 8 * i + 32);
    }
    id v6 = v5;
    objc_msgSend(v5, sel_setAlpha_, 0.0);
  }
LABEL_10:

  return swift_bridgeObjectRelease();
}

void sub_1C20B395C(double a1, uint64_t a2, void *a3, void *a4)
{
  id v7 = self;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a3;
  *(void *)(v8 + 24) = a4;
  uint64_t v19 = sub_1C20B6918;
  uint64_t v20 = v8;
  uint64_t v15 = MEMORY[0x1E4F143A8];
  uint64_t v16 = 1107296256;
  double v17 = sub_1C1F0E42C;
  id v18 = &block_descriptor_28_0;
  uint64_t v9 = _Block_copy(&v15);
  id v10 = a3;
  id v11 = a4;
  swift_release();
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v11;
  uint64_t v19 = sub_1C20B6958;
  uint64_t v20 = v12;
  uint64_t v15 = MEMORY[0x1E4F143A8];
  uint64_t v16 = 1107296256;
  double v17 = sub_1C20B07EC;
  id v18 = &block_descriptor_34_0;
  double v13 = _Block_copy(&v15);
  id v14 = v11;
  swift_release();
  objc_msgSend(v7, sel_animateWithDuration_animations_completion_, v9, v13, a1 * 0.1);
  _Block_release(v13);
  _Block_release(v9);
}

uint64_t sub_1C20B3B04(void *a1, void *a2)
{
  uint64_t v4 = sub_1C214A3F0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  id v7 = (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1C214A420();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  id v11 = (char *)aBlock - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_msgSend(a1, sel_setHidden_, 0);
  objc_msgSend(a1, sel_setAlpha_, 1.0);
  objc_msgSend(a2, sel_setAlpha_, 0.1);
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0CB10);
  uint64_t v12 = (void *)sub_1C214AD80();
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a1;
  aBlock[4] = sub_1C20B6968;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C1F0E42C;
  aBlock[3] = &block_descriptor_40_0;
  id v14 = _Block_copy(aBlock);
  id v15 = a1;
  swift_release();
  sub_1C214A410();
  aBlock[0] = MEMORY[0x1E4FBC860];
  sub_1C20B6DD8((unint64_t *)&qword_1EBF0CAE0, MEMORY[0x1E4FBCB00]);
  sub_1C20B6978(0, (unint64_t *)&qword_1EBF0CAF0, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
  sub_1C1F12754();
  sub_1C214B640();
  MEMORY[0x1C8752F10](0, v11, v7, v14);
  _Block_release(v14);

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_1C20B3E2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[34] = a4;
  uint64_t v5 = sub_1C21497F0();
  v4[35] = v5;
  v4[36] = *(void *)(v5 - 8);
  v4[37] = swift_task_alloc();
  v4[38] = swift_task_alloc();
  sub_1C214A890();
  v4[39] = sub_1C214A880();
  uint64_t v7 = sub_1C214A840();
  v4[40] = v7;
  v4[41] = v6;
  return MEMORY[0x1F4188298](sub_1C20B3F30, v7, v6);
}

uint64_t sub_1C20B3F30()
{
  uint64_t v23 = v0;
  id v1 = (void *)v0[34];
  sub_1C21497A0();
  id v2 = v1;
  uint64_t v3 = sub_1C21497E0();
  os_log_type_t v4 = sub_1C214ABB0();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v19 = v0[36];
    uint64_t v5 = (void *)v0[34];
    uint64_t v20 = v0[35];
    uint64_t v21 = v0[38];
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v22 = v7;
    *(_DWORD *)uint64_t v6 = 136446210;
    v0[32] = v5;
    type metadata accessor for NewMedicationOnboardingViewController();
    id v8 = v5;
    uint64_t v9 = sub_1C214A630();
    v0[33] = sub_1C1F6FD54(v9, v10, &v22);
    sub_1C214B530();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C1F0B000, v3, v4, "[%{public}s] Marking medication education/interaction shards as required during add medication flow", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C8754730](v7, -1, -1);
    MEMORY[0x1C8754730](v6, -1, -1);

    id v11 = *(void (**)(uint64_t, uint64_t))(v19 + 8);
    v11(v21, v20);
  }
  else
  {
    uint64_t v12 = v0[38];
    uint64_t v13 = v0[35];
    uint64_t v14 = v0[36];
    id v15 = (void *)v0[34];

    id v11 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
    v11(v12, v13);
  }
  v0[42] = v11;
  id v16 = sub_1C20B0840();
  v0[43] = v16;
  v0[2] = v0;
  v0[3] = sub_1C20B41E4;
  uint64_t v17 = swift_continuation_init();
  v0[18] = MEMORY[0x1E4F143A8];
  v0[19] = 0x40000000;
  v0[20] = sub_1C20B073C;
  v0[21] = &block_descriptor_45;
  v0[22] = v17;
  objc_msgSend(v16, sel_markMedsEducationAsRequiredWithCompletion_, v0 + 18);
  return MEMORY[0x1F41881E8](v0 + 2);
}

uint64_t sub_1C20B41E4()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 48);
  *(void *)(*v0 + 352) = v2;
  uint64_t v3 = *(void *)(v1 + 328);
  uint64_t v4 = *(void *)(v1 + 320);
  if (v2) {
    uint64_t v5 = sub_1C20B45C4;
  }
  else {
    uint64_t v5 = sub_1C20B4314;
  }
  return MEMORY[0x1F4188298](v5, v4, v3);
}

uint64_t sub_1C20B4314()
{
  id v1 = sub_1C20B0840();
  *(void *)(v0 + 36sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = v1;
  *(void *)(v0 + 8sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = v0;
  *(void *)(v0 + 88) = sub_1C20B441C;
  uint64_t v2 = swift_continuation_init();
  *(void *)(v0 + 184) = MEMORY[0x1E4F143A8];
  *(void *)(v0 + 192) = 0x40000000;
  *(void *)(v0 + 20sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = sub_1C20B073C;
  *(void *)(v0 + 208) = &block_descriptor_46;
  *(void *)(v0 + 216) = v2;
  objc_msgSend(v1, sel_markInteractionsShardAsRequiredWithCompletion_, v0 + 184);
  return MEMORY[0x1F41881E8](v0 + 80);
}

uint64_t sub_1C20B441C()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 112);
  *(void *)(*v0 + 368) = v2;
  uint64_t v3 = *(void *)(v1 + 328);
  uint64_t v4 = *(void *)(v1 + 320);
  if (v2) {
    uint64_t v5 = sub_1C20B48B0;
  }
  else {
    uint64_t v5 = sub_1C20B454C;
  }
  return MEMORY[0x1F4188298](v5, v4, v3);
}

uint64_t sub_1C20B454C()
{
  uint64_t v1 = *(void **)(v0 + 360);
  swift_release();

  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1C20B45C4()
{
  uint64_t v28 = v0;
  swift_release();
  swift_willThrow();
  uint64_t v1 = *(void **)(v0 + 352);
  uint64_t v2 = *(void **)(v0 + 272);

  sub_1C21497A0();
  id v3 = v2;
  id v4 = v1;
  id v5 = v3;
  id v6 = v1;
  uint64_t v7 = sub_1C21497E0();
  os_log_type_t v8 = sub_1C214ABD0();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v25 = *(void *)(v0 + 296);
    double v26 = *(void (**)(uint64_t, uint64_t))(v0 + 336);
    uint64_t v9 = *(void **)(v0 + 272);
    uint64_t v24 = *(void *)(v0 + 280);
    uint64_t v10 = swift_slowAlloc();
    uint64_t v23 = swift_slowAlloc();
    v27[0] = v23;
    *(_DWORD *)uint64_t v10 = 136446466;
    *(void *)(v0 + 248) = v9;
    type metadata accessor for NewMedicationOnboardingViewController();
    id v11 = v9;
    uint64_t v12 = sub_1C214A630();
    *(void *)(v0 + 24sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = sub_1C1F6FD54(v12, v13, v27);
    sub_1C214B530();

    swift_bridgeObjectRelease();
    *(_WORD *)(v10 + 12) = 2082;
    *(void *)(v0 + 224) = v1;
    id v14 = v1;
    sub_1C1F248B4(0, (unint64_t *)&qword_1EBF0C9C0);
    uint64_t v15 = sub_1C214A610();
    *(void *)(v0 + 232) = sub_1C1F6FD54(v15, v16, v27);
    sub_1C214B530();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1C1F0B000, v7, v8, "[%{public}s] Could not mark medication education/interaction shards as required: %{public}s", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C8754730](v23, -1, -1);
    MEMORY[0x1C8754730](v10, -1, -1);

    v26(v25, v24);
  }
  else
  {
    uint64_t v17 = *(void (**)(uint64_t, uint64_t))(v0 + 336);
    uint64_t v18 = *(void *)(v0 + 296);
    uint64_t v20 = *(void **)(v0 + 272);
    uint64_t v19 = *(void *)(v0 + 280);

    v17(v18, v19);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v21 = *(uint64_t (**)(void))(v0 + 8);
  return v21();
}

uint64_t sub_1C20B48B0()
{
  uint64_t v28 = v0;
  swift_release();
  swift_willThrow();
  uint64_t v1 = *(void **)(v0 + 368);
  uint64_t v2 = *(void **)(v0 + 272);

  sub_1C21497A0();
  id v3 = v2;
  id v4 = v1;
  id v5 = v3;
  id v6 = v1;
  uint64_t v7 = sub_1C21497E0();
  os_log_type_t v8 = sub_1C214ABD0();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v25 = *(void *)(v0 + 296);
    double v26 = *(void (**)(uint64_t, uint64_t))(v0 + 336);
    uint64_t v9 = *(void **)(v0 + 272);
    uint64_t v24 = *(void *)(v0 + 280);
    uint64_t v10 = swift_slowAlloc();
    uint64_t v23 = swift_slowAlloc();
    v27[0] = v23;
    *(_DWORD *)uint64_t v10 = 136446466;
    *(void *)(v0 + 248) = v9;
    type metadata accessor for NewMedicationOnboardingViewController();
    id v11 = v9;
    uint64_t v12 = sub_1C214A630();
    *(void *)(v0 + 24sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = sub_1C1F6FD54(v12, v13, v27);
    sub_1C214B530();

    swift_bridgeObjectRelease();
    *(_WORD *)(v10 + 12) = 2082;
    *(void *)(v0 + 224) = v1;
    id v14 = v1;
    sub_1C1F248B4(0, (unint64_t *)&qword_1EBF0C9C0);
    uint64_t v15 = sub_1C214A610();
    *(void *)(v0 + 232) = sub_1C1F6FD54(v15, v16, v27);
    sub_1C214B530();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1C1F0B000, v7, v8, "[%{public}s] Could not mark medication education/interaction shards as required: %{public}s", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C8754730](v23, -1, -1);
    MEMORY[0x1C8754730](v10, -1, -1);

    v26(v25, v24);
  }
  else
  {
    uint64_t v17 = *(void (**)(uint64_t, uint64_t))(v0 + 336);
    uint64_t v18 = *(void *)(v0 + 296);
    uint64_t v20 = *(void **)(v0 + 272);
    uint64_t v19 = *(void *)(v0 + 280);

    v17(v18, v19);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v21 = *(uint64_t (**)(void))(v0 + 8);
  return v21();
}

void sub_1C20B4B9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C21497F0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    id v8 = sub_1C20B0A64();
    uint64_t v17 = a1;
    uint64_t v18 = a2;
    swift_bridgeObjectRetain();
    sub_1C214A6C0();
    uint64_t v9 = (void *)sub_1C214A5B0();
    swift_bridgeObjectRelease();
    objc_msgSend(v8, sel_setAccessibilityIdentifier_, v9);

    id v10 = sub_1C20B0C38();
    uint64_t v17 = a1;
    uint64_t v18 = a2;
    swift_bridgeObjectRetain();
    sub_1C214A6C0();
    uint64_t v16 = sub_1C214A5B0();
    swift_bridgeObjectRelease();
    objc_msgSend(v10, sel_setAccessibilityIdentifier_, v16);

    id v11 = (void *)v16;
  }
  else
  {
    sub_1C21497A0();
    uint64_t v12 = sub_1C21497E0();
    os_log_type_t v13 = sub_1C214ABD0();
    if (os_log_type_enabled(v12, v13))
    {
      id v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v14 = 0;
      _os_log_impl(&dword_1C1F0B000, v12, v13, "Unable to set automation identifiers as there is no base identifier.", v14, 2u);
      MEMORY[0x1C8754730](v14, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
}

void NewMedicationOnboardingViewController.__allocating_init(dataSource:)()
{
}

void NewMedicationOnboardingViewController.init(dataSource:)()
{
}

id NewMedicationOnboardingViewController.__allocating_init(collectionViewLayout:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCollectionViewLayout_, a1);

  return v3;
}

void NewMedicationOnboardingViewController.init(collectionViewLayout:)()
{
}

void sub_1C20B4EC8(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = a3;
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_1C20B4EFC()
{
  swift_release();
  swift_release();

  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  swift_release();
  uint64_t v1 = *(void **)(v0 + qword_1EA2C69D0);
}

id NewMedicationOnboardingViewController.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for NewMedicationOnboardingViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1C20B5008(uint64_t a1)
{
  swift_release();
  swift_release();

  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  swift_release();
  objc_super v2 = *(void **)(a1 + qword_1EA2C69D0);
}

void sub_1C20B50E8(uint64_t a1, uint64_t a2)
{
}

uint64_t sub_1C20B510C()
{
  uint64_t v1 = (uint64_t *)(*v0 + qword_1EA2C69A0);
  swift_beginAccess();
  uint64_t v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1C20B5168(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(*v2 + qword_1EA2C69A0);
  swift_beginAccess();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1C20B51CC())()
{
  return j__swift_endAccess;
}

uint64_t NewMedicationOnboardingViewController.medicationDataScanner(scanner:didRecognizeSingle:fromSession:analyticsContext:analyticsEntryMode:)(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1C20B60D8(a1, a2, a3, a5);
}

void sub_1C20B5234(void *a1, char *a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v41[1] = a6;
  uint64_t v43 = a4;
  uint64_t v44 = (char *)a5;
  uint64_t v9 = sub_1C21497F0();
  uint64_t v42 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  id v11 = (char *)v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for MedicationOnboardingFlowManager.EntryMode(0);
  MEMORY[0x1F4188790](v12);
  id v14 = (void *)((char *)v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = type metadata accessor for MedicationOnboardingFlowManager(0);
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v17 = (char *)v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = *(void *)&a2[qword_1EA2C6990];
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = a3;
  *(void *)(v19 + 24) = a2;
  id v20 = a3;
  uint64_t v21 = a2;
  id v45 = _sSo17UIAlertControllerC19HealthMedicationsUIE27makeAlertForExsitingConcept7concept11listManager11showHandlerABSgSo9HKConceptC_0C22RecordsConceptsSupport04ListjM0CySo022HKMedicationUserDomainJ0CctFZ_0((uint64_t)a1, v18, (uint64_t)sub_1C20B6C70, v19);
  swift_release();
  if (v45)
  {
    objc_msgSend(v20, sel_presentViewController_animated_completion_, v45, 1, 0);
    uint64_t v22 = v45;
  }
  else
  {
    id v45 = (id)v9;
    sub_1C20B6C78();
    uint64_t v24 = (char *)v14 + *(int *)(v23 + 48);
    *id v14 = a1;
    uint64_t v25 = sub_1C2147B20();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v25 - 8) + 16))(v24, v43, v25);
    swift_storeEnumTagMultiPayload();
    uint64_t v26 = *(void *)&v21[qword_1EA2C6998];
    LOBYTE(v47) = 64;
    id v27 = a1;
    swift_retain();
    MedicationOnboardingFlowManager.init(entryMode:currentStep:didShowLifeStyleFactors:analyticsContext:analyticsEntryMode:)((uint64_t)v14, (unsigned __int8 *)&v47, 0, v26, (uint64_t)v44, (uint64_t)v17);
    MedicationOnboardingFlowManager.makeNextViewControllerForStep()(v28);
    if (v29)
    {
      double v30 = v29;
      id v31 = objc_msgSend(v21, sel_navigationController);
      if (v31)
      {
        double v32 = v31;
        objc_msgSend(v31, sel_pushViewController_animated_, v30, 1);
      }
      else
      {
      }
    }
    else
    {
      sub_1C21497A0();
      double v33 = sub_1C21497E0();
      os_log_type_t v34 = sub_1C214ABD0();
      BOOL v35 = os_log_type_enabled(v33, v34);
      uint64_t v36 = v42;
      if (v35)
      {
        uint64_t v37 = (uint8_t *)swift_slowAlloc();
        uint64_t v38 = swift_slowAlloc();
        uint64_t v47 = v38;
        uint64_t v44 = v11;
        *(_DWORD *)uint64_t v37 = 136315138;
        uint64_t v39 = sub_1C214BC10();
        uint64_t v46 = sub_1C1F6FD54(v39, v40, &v47);
        sub_1C214B530();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1C1F0B000, v33, v34, "[%s] MedicationOnboardingFlowManager wasn't able to find next ViewController!", v37, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C8754730](v38, -1, -1);
        MEMORY[0x1C8754730](v37, -1, -1);

        (*(void (**)(char *, id))(v36 + 8))(v44, v45);
      }
      else
      {

        (*(void (**)(char *, id))(v36 + 8))(v11, v45);
      }
    }
    objc_msgSend(v20, sel_dismissViewControllerAnimated_completion_, 1, 0);
    sub_1C20B5F28((uint64_t)v17, type metadata accessor for MedicationOnboardingFlowManager);
  }
}

void sub_1C20B56B8(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = a3;
  v8[4] = sub_1C20B6CF8;
  v8[5] = v5;
  v8[0] = MEMORY[0x1E4F143A8];
  v8[1] = 1107296256;
  v8[2] = sub_1C1F0E42C;
  v8[3] = &block_descriptor_63;
  uint64_t v6 = _Block_copy(v8);
  id v7 = a3;
  swift_release();
  objc_msgSend(a2, sel_dismissViewControllerAnimated_completion_, 1, v6);
  _Block_release(v6);
}

id NewMedicationOnboardingViewController.medicationDataScannerDidFinishWithoutResult(scanner:)(void *a1)
{
  return objc_msgSend(a1, sel_dismissViewControllerAnimated_completion_, 1, 0);
}

uint64_t sub_1C20B57AC(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1C20B60D8(a1, a2, a3, a5);
}

Swift::Void __swiftcall NewMedicationOnboardingViewController.searchBar(_:textDidChange:)(UISearchBar *_, Swift::String textDidChange)
{
}

uint64_t sub_1C20B5844()
{
  return sub_1C2149F90();
}

Swift::Void __swiftcall NewMedicationOnboardingViewController.searchBarCancelButtonClicked(_:)(UISearchBar *a1)
{
  objc_msgSend(v1, sel_dismissViewControllerAnimated_completion_, 0, 0);
}

id sub_1C20B58F0(void *a1)
{
  return objc_msgSend(a1, sel_dismissViewControllerAnimated_completion_, 0, 0);
}

uint64_t sub_1C20B5904(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  id v31 = a3;
  uint64_t v32 = a1;
  uint64_t v6 = sub_1C2147B20();
  uint64_t v33 = *(void *)(v6 - 8);
  uint64_t v34 = v6;
  MEMORY[0x1F4188790](v6);
  id v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (uint64_t (*)(void, uint64_t))MEMORY[0x1E4F1AC70];
  sub_1C20B6E20(0, &qword_1EBF0C750, MEMORY[0x1E4FBB390], MEMORY[0x1E4F1AC70]);
  uint64_t v11 = v10;
  uint64_t v12 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  id v14 = (char *)&v30 - v13;
  sub_1C20B6E20(0, (unint64_t *)&unk_1EA2C6A80, MEMORY[0x1E4FBB1A0], v9);
  uint64_t v16 = v15;
  uint64_t v17 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v19 = (char *)&v30 - v18;
  v36[3] = sub_1C2149410();
  v36[4] = MEMORY[0x1E4F66CC8];
  v36[0] = a2;
  *(void *)(a4 + qword_1EA2C2D40 + 8) = 0;
  swift_unknownObjectWeakInit();
  *(void *)(a4 + qword_1EA2C2D58) = 0;
  *(void *)(a4 + qword_1EA2C2D6sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = 0;
  *(void *)(a4 + qword_1EA2C2D68) = 0;
  *(void *)(a4 + qword_1EA2C2D7sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = 0;
  *(void *)(a4 + qword_1EA2C2D78) = 0;
  *(void *)(a4 + qword_1EA2C2D8sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = 0;
  *(unsigned char *)(a4 + qword_1EA2C2DA8) = 1;
  uint64_t v20 = a4 + qword_1EA2C2D10;
  v35[0] = 0;
  v35[1] = 0xE000000000000000;
  swift_retain();
  sub_1C2149F40();
  (*(void (**)(uint64_t, char *, uint64_t))(v17 + 32))(v20, v19, v16);
  uint64_t v21 = a4 + qword_1EA2C2D20;
  LOBYTE(v35[0]) = 0;
  sub_1C2149F40();
  uint64_t v22 = *(void (**)(uint64_t, char *, uint64_t))(v12 + 32);
  v22(v21, v14, v11);
  uint64_t v23 = a4 + qword_1EA2C2D30;
  LOBYTE(v35[0]) = 0;
  sub_1C2149F40();
  v22(v23, v14, v11);
  *(void *)(a4 + qword_1EA2C2D9sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = MEMORY[0x1E4FBC870];
  *(unsigned char *)(a4 + qword_1EA2C2DBsub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = 0;
  uint64_t v24 = MEMORY[0x1E4FBC860];
  *(void *)(a4 + qword_1EA2C7B68) = MEMORY[0x1E4FBC860];
  *(void *)(a4 + qword_1EA2C2D98) = v24;
  uint64_t v25 = v31;
  *(void *)(a4 + qword_1EA2C2D88) = v31;
  sub_1C1F236D8((uint64_t)v36, a4 + qword_1EA2C2D48);
  *(void *)(a4 + qword_1EA2C2D5sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = v32;
  id v26 = v25;
  swift_retain();
  swift_release();
  v35[0] = 0;
  v35[1] = 0xE000000000000000;
  sub_1C214B7C0();
  swift_bridgeObjectRelease();
  strcpy((char *)v35, "MutableArray<");
  HIWORD(v35[1]) = -4864;
  sub_1C2147B10();
  sub_1C2147AD0();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v8, v34);
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  sub_1C214A6C0();
  uint64_t v27 = sub_1C2148590();
  swift_retain();
  sub_1C1F2597C();
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0CB10);
  swift_retain();
  uint64_t v28 = (void *)sub_1C214AD80();
  sub_1C214A140();
  swift_release();

  swift_allocObject();
  swift_weakInit();
  swift_retain();
  swift_retain();
  sub_1C1F1325C((uint64_t)sub_1C20B6EA4);
  sub_1C214A130();
  swift_release();
  swift_release();
  swift_release_n();
  sub_1C1F292C4();
  sub_1C1F2A5F8();
  sub_1C1F28B8C();
  swift_release();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v36);
  return v27;
}

uint64_t type metadata accessor for NewMedicationOnboardingViewController()
{
  uint64_t result = qword_1EA2C6A28;
  if (!qword_1EA2C6A28) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C20B5EC0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C20B5F28(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C20B5F88()
{
  swift_unknownObjectWeakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

void sub_1C20B5FC0()
{
  *(void *)&v0[qword_1EA2C69A8] = 0;
  uint64_t v1 = (uint64_t *)&v0[qword_1EA2C69A0];
  uint64_t v3 = sub_1C214A5F0();
  uint64_t v4 = v2;
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  *uint64_t v1 = v3;
  v1[1] = v4;
  *(void *)&v0[qword_1EA2C69B0] = 0x4046000000000000;
  *(void *)&v0[qword_1EA2C69B8] = 0;
  *(void *)&v0[qword_1EA2C69C0] = 0;
  *(void *)&v0[qword_1EA2C69C8] = 0;
  *(void *)&v0[qword_1EA2C69D0] = 0;

  sub_1C214B910();
  __break(1u);
}

uint64_t sub_1C20B60D8(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v31 = a4;
  uint64_t v28 = a1;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v34 = sub_1C214A3F0();
  uint64_t v37 = *(void *)(v34 - 8);
  MEMORY[0x1F4188790](v34);
  uint64_t v33 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1C214A420();
  uint64_t v35 = *(void *)(v9 - 8);
  uint64_t v36 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v29 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1C2147B20();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  MEMORY[0x1F4188790](v11);
  id v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0CB10);
  uint64_t v32 = sub_1C214AD80();
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, a3, v11);
  unint64_t v15 = (*(unsigned __int8 *)(v12 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  unint64_t v16 = (v13 + v15 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v17 = (char *)swift_allocObject();
  *((void *)v17 + 2) = a2;
  *((void *)v17 + 3) = v5;
  uint64_t v18 = v28;
  *((void *)v17 + 4) = v28;
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(&v17[v15], v14, v11);
  *(void *)&v17[v16] = v31;
  *(void *)&v17[(v16 + 15) & 0xFFFFFFFFFFFFFFF8] = ObjectType;
  aBlock[4] = sub_1C20B6BD0;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C1F0E42C;
  aBlock[3] = &block_descriptor_54_0;
  uint64_t v19 = _Block_copy(aBlock);
  id v20 = a2;
  id v21 = v5;
  id v22 = v18;
  swift_release();
  uint64_t v23 = v29;
  sub_1C214A410();
  aBlock[0] = MEMORY[0x1E4FBC860];
  sub_1C20B6DD8((unint64_t *)&qword_1EBF0CAE0, MEMORY[0x1E4FBCB00]);
  sub_1C20B6978(0, (unint64_t *)&qword_1EBF0CAF0, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
  sub_1C1F12754();
  uint64_t v25 = v33;
  uint64_t v24 = v34;
  sub_1C214B640();
  id v26 = (void *)v32;
  MEMORY[0x1C8752F10](0, v23, v25, v19);
  _Block_release(v19);

  (*(void (**)(char *, uint64_t))(v37 + 8))(v25, v24);
  return (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v23, v36);
}

uint64_t sub_1C20B64EC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (void *)(*a1 + qword_1EA2C69A0);
  swift_beginAccess();
  uint64_t v4 = v3[1];
  *a2 = *v3;
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C20B6548()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for NewMedicationOnboardingViewController(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for NewMedicationOnboardingViewController);
}

uint64_t dispatch thunk of NewMedicationOnboardingViewController.baseIdentifier.getter()
{
  return (*(uint64_t (**)(void))(class metadata base offset for NewMedicationOnboardingViewController
                              + (*MEMORY[0x1E4FBC8C8] & *v0)
                              + 120))();
}

uint64_t dispatch thunk of NewMedicationOnboardingViewController.baseIdentifier.setter()
{
  return (*(uint64_t (**)(void))(class metadata base offset for NewMedicationOnboardingViewController
                              + (*MEMORY[0x1E4FBC8C8] & *v0)
                              + 128))();
}

uint64_t dispatch thunk of NewMedicationOnboardingViewController.baseIdentifier.modify()
{
  return (*(uint64_t (**)(void))(class metadata base offset for NewMedicationOnboardingViewController
                              + (*MEMORY[0x1E4FBC8C8] & *v0)
                              + 136))();
}

uint64_t dispatch thunk of NewMedicationOnboardingViewController.__allocating_init(healthStore:listManager:analyticsContext:)()
{
  return (*(uint64_t (**)(void))(class metadata base offset for NewMedicationOnboardingViewController + v0 + 224))();
}

uint64_t dispatch thunk of NewMedicationOnboardingViewController.didSelectRootMedication(item:)()
{
  return (*(uint64_t (**)(void))(class metadata base offset for NewMedicationOnboardingViewController
                              + (*MEMORY[0x1E4FBC8C8] & *v0)
                              + 280))();
}

uint64_t dispatch thunk of NewMedicationOnboardingViewController.didStartManualEntry(hadSearchResults:)()
{
  return (*(uint64_t (**)(void))(class metadata base offset for NewMedicationOnboardingViewController
                              + (*MEMORY[0x1E4FBC8C8] & *v0)
                              + 288))();
}

uint64_t dispatch thunk of NewMedicationOnboardingViewController.updateAutomationIdentifiers(with:)()
{
  return (*(uint64_t (**)(void))(class metadata base offset for NewMedicationOnboardingViewController
                              + (*MEMORY[0x1E4FBC8C8] & *v0)
                              + 336))();
}

uint64_t sub_1C20B67F4()
{
  return type metadata accessor for NewMedicationOnboardingViewController();
}

uint64_t sub_1C20B67FC()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C20B6834()
{
  return sub_1C20B387C(*(void *)(v0 + 16));
}

uint64_t sub_1C20B683C()
{
  return MEMORY[0x1F4186498](v0, 56, 7);
}

id sub_1C20B6874()
{
  return objc_msgSend(*(id *)(v0 + 16), sel_setFrame_, *(double *)(v0 + 24), *(double *)(v0 + 32), *(double *)(v0 + 40), *(double *)(v0 + 48));
}

uint64_t sub_1C20B688C()
{
  return MEMORY[0x1F4186498](v0, 40, 7);
}

void sub_1C20B68CC(uint64_t a1)
{
  sub_1C20B395C(*(double *)(v1 + 16), a1, *(void **)(v1 + 24), *(void **)(v1 + 32));
}

uint64_t sub_1C20B68D8()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C20B6918()
{
  return sub_1C20B3B04(*(void **)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_1C20B6920()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

id sub_1C20B6958()
{
  return objc_msgSend(*(id *)(v0 + 16), sel_removeFromSuperview);
}

id sub_1C20B6968()
{
  return objc_msgSend(*(id *)(v0 + 16), sel_becomeFirstResponder);
}

void sub_1C20B6978(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C20B69DC()
{
  swift_unknownObjectRelease();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1C20B6A1C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_1C1F40400;
  return sub_1C20B3E2C(a1, v4, v5, v6);
}

void sub_1C20B6AD0(uint64_t a1)
{
  sub_1C20B2EC8(a1, v1);
}

void sub_1C20B6AD8(uint64_t a1)
{
  sub_1C20B11EC(a1, v1);
}

uint64_t sub_1C20B6AE0()
{
  uint64_t v1 = sub_1C2147B20();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;

  (*(void (**)(char *, uint64_t))(v2 + 8))((char *)v0 + v4, v1);

  return MEMORY[0x1F4186498](v0, v6, v5);
}

void sub_1C20B6BD0()
{
  uint64_t v1 = *(void *)(sub_1C2147B20() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v4 = (void *)v0[2];
  uint64_t v5 = (char *)v0[3];
  unint64_t v6 = (void *)v0[4];
  uint64_t v7 = *(void *)((char *)v0 + v3);
  uint64_t v8 = *(void *)((char *)v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8));

  sub_1C20B5234(v4, v5, v6, (uint64_t)v0 + v2, v7, v8);
}

void sub_1C20B6C70(uint64_t a1)
{
  sub_1C20B56B8(a1, *(void **)(v1 + 16), *(void **)(v1 + 24));
}

void sub_1C20B6C78()
{
  if (!qword_1EA2C6A60)
  {
    sub_1C1F12718(255, (unint64_t *)&qword_1EA2C6A20);
    sub_1C2147B20();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA2C6A60);
    }
  }
}

id sub_1C20B6CF8()
{
  return objc_msgSend(*(id *)(v0 + 16), sel_dismissViewControllerAnimated_completion_, 1, 0);
}

void sub_1C20B6D10()
{
  if (!qword_1EA2C6A68)
  {
    sub_1C20B6E20(255, &qword_1EBF0C740, MEMORY[0x1E4FBB390], MEMORY[0x1E4F1AC60]);
    sub_1C1F12718(255, (unint64_t *)&qword_1EBF0CB10);
    sub_1C20064D0();
    sub_1C1F43FD4();
    unint64_t v0 = sub_1C2149DF0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C6A68);
    }
  }
}

void sub_1C20B6DD0(unsigned __int8 *a1)
{
  sub_1C20B1B80(a1, v1);
}

uint64_t sub_1C20B6DD8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C20B6E20(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_1C20B6E6C()
{
  swift_weakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C20B6EA4()
{
  return sub_1C20BF5F8();
}

uint64_t MedicationsDoseLogViewModel.__allocating_init(medication:doseEvent:scheduleItem:logDate:dosage:index:)(void *a1, void *a2, uint64_t a3, char *a4, uint64_t a5, double a6)
{
  uint64_t v12 = swift_allocObject();
  MedicationsDoseLogViewModel.init(medication:doseEvent:scheduleItem:logDate:dosage:index:)(a1, a2, a3, a4, a5, a6);
  return v12;
}

uint64_t MedicationDoseLogListViewModel.__allocating_init(date:title:medicationDoses:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = swift_allocObject();
  uint64_t v9 = v8 + OBJC_IVAR____TtC19HealthMedicationsUI30MedicationDoseLogListViewModel_date;
  uint64_t v10 = sub_1C2147AC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v9, a1, v10);
  uint64_t v11 = (void *)(v8 + OBJC_IVAR____TtC19HealthMedicationsUI30MedicationDoseLogListViewModel_title);
  void *v11 = a2;
  v11[1] = a3;
  *(void *)(v8 + 16) = a4;
  return v8;
}

double *MedicationsDoseLogViewModel.init(medication:doseEvent:scheduleItem:logDate:dosage:index:)(void *a1, void *a2, uint64_t a3, char *a4, uint64_t a5, double a6)
{
  uint64_t v7 = v6;
  uint64_t v35 = a5;
  uint64_t v13 = sub_1C2147AC0();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  uint64_t v34 = (char *)v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v18 = (char *)v31 - v17;
  *((void *)v7 + 2) = a1;
  *((void *)v7 + 3) = a2;
  *((void *)v7 + 4) = a3;
  id v32 = a1;
  id v19 = a2;
  swift_retain();
  swift_release();
  if (a2
    && ((id v20 = objc_msgSend(v19, sel_doseQuantity)) != 0
     || (id v20 = objc_msgSend(v19, sel_scheduledDoseQuantity)) != 0))
  {
    objc_msgSend(v20, sel_doubleValue);
    uint64_t v22 = v21;

    *((void *)v7 + 5) = v22;
  }
  else
  {
    if (a3)
    {
      sub_1C2148E70();
      a6 = v23;
    }
    v7[5] = a6;
    if (!a2)
    {
      uint64_t v24 = 1;
      *((void *)v7 + 6) = 1;
      goto LABEL_9;
    }
  }
  *((void *)v7 + 6) = objc_msgSend(v19, sel_status);
  uint64_t v24 = (uint64_t)objc_msgSend(v19, sel_status);
LABEL_9:
  *(void *)((char *)v7 + OBJC_IVAR____TtC19HealthMedicationsUI27MedicationsDoseLogViewModel_initialStatus) = v24;
  char v25 = sub_1C20BFDA0(*((void *)v7 + 6), (uint64_t)&unk_1F1D73C08);
  uint64_t v33 = a4;
  v31[1] = a3;
  if (a2 && (v25 & 1) != 0)
  {
    id v26 = objc_msgSend(v19, sel_startDate);
    sub_1C2147A60();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v18, a4, v13);
  }
  uint64_t v27 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
  v27((char *)v7 + OBJC_IVAR____TtC19HealthMedicationsUI27MedicationsDoseLogViewModel_logDate, v18, v13);
  if ((sub_1C20BFDA0(*((void *)v7 + 6), (uint64_t)&unk_1F1D73C08) & 1) != 0 && a2)
  {
    id v28 = objc_msgSend(v19, (SEL)&selRef_setPreservesSuperviewLayoutMargins_);
    uint64_t v29 = v34;
    sub_1C2147A60();

    swift_release();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v33, v13);
  }
  else
  {

    swift_release();
    uint64_t v29 = v34;
    v27(v34, v33, v13);
  }
  v27((char *)v7 + OBJC_IVAR____TtC19HealthMedicationsUI27MedicationsDoseLogViewModel_initialLogDate, v29, v13);
  *(double *)((char *)v7 + OBJC_IVAR____TtC19HealthMedicationsUI27MedicationsDoseLogViewModel_initialDoseAmount) = v7[5];
  *(void *)((char *)v7 + OBJC_IVAR____TtC19HealthMedicationsUI27MedicationsDoseLogViewModel_index) = v35;
  return v7;
}

uint64_t sub_1C20B7378()
{
  uint64_t v1 = v0;
  unint64_t v2 = *(void **)(v0 + 24);
  if (!v2) {
    goto LABEL_11;
  }
  id v3 = v2;
  id v4 = objc_msgSend(v3, sel_metadata);
  if (!v4)
  {

    long long v16 = 0u;
    long long v17 = 0u;
    goto LABEL_10;
  }
  unint64_t v5 = v4;
  uint64_t v6 = sub_1C214A510();

  uint64_t v7 = sub_1C214A5F0();
  if (!*(void *)(v6 + 16) || (unint64_t v9 = sub_1C1F4B4D0(v7, v8), (v10 & 1) == 0))
  {
    long long v16 = 0u;
    long long v17 = 0u;
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  sub_1C1F72C14(*(void *)(v6 + 56) + 32 * v9, (uint64_t)&v16);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  if (!*((void *)&v17 + 1))
  {
LABEL_10:
    sub_1C1F4FC0C((uint64_t)&v16);
    goto LABEL_11;
  }
  if (!swift_dynamicCast())
  {
LABEL_11:
    id v12 = objc_msgSend(*(id *)(v1 + 16), sel_semanticIdentifier);
    id v13 = objc_msgSend(v12, sel_stringValue);

    uint64_t v11 = sub_1C214A5F0();
    return v11;
  }
  return v15;
}

BOOL sub_1C20B7508()
{
  uint64_t v1 = *(void **)(v0 + 24);
  if (v1) {
    return objc_msgSend(v1, sel_logOrigin) == (id)2;
  }
  else {
    return *(void *)(v0 + 32) != 0;
  }
}

uint64_t sub_1C20B754C@<X0>(uint64_t a1@<X8>)
{
  sub_1C1F30CC4(0);
  MEMORY[0x1F4188790](v3 - 8);
  unint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void **)(v1 + 24);
  if (v6)
  {
    id v7 = v6;
    id v8 = objc_msgSend(v7, sel_scheduledDate);
    if (v8)
    {
      unint64_t v9 = v8;
      sub_1C2147A60();

      uint64_t v10 = sub_1C2147AC0();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v5, 0, 1, v10);
    }
    else
    {

      uint64_t v16 = sub_1C2147AC0();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v5, 1, 1, v16);
    }
    return sub_1C1F90A80((uint64_t)v5, a1);
  }
  else
  {
    if (*(void *)(v1 + 32))
    {
      swift_retain();
      sub_1C2148EA0();
      swift_release();
      uint64_t v11 = sub_1C2147AC0();
      id v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
      uint64_t v13 = v11;
      uint64_t v14 = a1;
      uint64_t v15 = 0;
    }
    else
    {
      uint64_t v18 = sub_1C2147AC0();
      id v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
      uint64_t v13 = v18;
      uint64_t v14 = a1;
      uint64_t v15 = 1;
    }
    return v12(v14, v15, 1, v13);
  }
}

uint64_t sub_1C20B7730@<X0>(uint64_t *a1@<X8>)
{
  sub_1C1F30CC4(0);
  MEMORY[0x1F4188790](v3 - 8);
  unint64_t v5 = (char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void **)(v1 + 24);
  if (v6)
  {
    uint64_t v7 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI27MedicationsDoseLogViewModel_logDate;
    swift_beginAccess();
    uint64_t v8 = sub_1C2147AC0();
    uint64_t v9 = *(void *)(v8 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v5, v7, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v5, 0, 1, v8);
    id v10 = v6;
    sub_1C21492F0();
    uint64_t v11 = (unsigned int *)MEMORY[0x1E4F66C98];
  }
  else
  {
    uint64_t v12 = *(void *)(v1 + 32);
    if (v12)
    {
      sub_1C20B8980();
      uint64_t v14 = (char *)a1 + v13[16];
      uint64_t v15 = v13[20];
      uint64_t v16 = (char *)a1 + v13[24];
      long long v17 = *(void **)(v1 + 16);
      swift_retain();
      id v18 = objc_msgSend(v17, sel_semanticIdentifier);
      id v19 = objc_msgSend(v18, sel_stringValue);

      uint64_t v20 = sub_1C214A5F0();
      uint64_t v22 = v21;

      *a1 = v20;
      a1[1] = v22;
      a1[2] = v12;
      uint64_t v23 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI27MedicationsDoseLogViewModel_logDate;
      swift_beginAccess();
      uint64_t v24 = sub_1C2147AC0();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v24 - 8) + 16))(v14, v23, v24);
      uint64_t v25 = *(void *)(v1 + 40);
      *(uint64_t *)((char *)a1 + v15) = *(void *)(v1 + 48);
      *(void *)uint64_t v16 = v25;
      v16[8] = 0;
      id v26 = (unsigned int *)MEMORY[0x1E4F66C78];
    }
    else
    {
      sub_1C20B884C();
      id v28 = (char *)a1 + v27[12];
      uint64_t v29 = v27[16];
      uint64_t v30 = (char *)a1 + v27[20];
      id v31 = objc_msgSend(*(id *)(v1 + 16), sel_semanticIdentifier);
      id v32 = objc_msgSend(v31, sel_stringValue);

      uint64_t v33 = sub_1C214A5F0();
      uint64_t v35 = v34;

      *a1 = v33;
      a1[1] = v35;
      uint64_t v36 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI27MedicationsDoseLogViewModel_logDate;
      swift_beginAccess();
      uint64_t v37 = sub_1C2147AC0();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v37 - 8) + 16))(v28, v36, v37);
      uint64_t v38 = *(void *)(v1 + 40);
      *(uint64_t *)((char *)a1 + v29) = *(void *)(v1 + 48);
      *(void *)uint64_t v30 = v38;
      v30[8] = 0;
      id v26 = (unsigned int *)MEMORY[0x1E4F66C70];
    }
    uint64_t v39 = *v26;
    uint64_t v40 = sub_1C2149240();
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v40 - 8) + 104))(a1, v39, v40);
    uint64_t v11 = (unsigned int *)MEMORY[0x1E4F66C90];
  }
  uint64_t v41 = *v11;
  uint64_t v42 = sub_1C21492E0();
  return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v42 - 8) + 104))(a1, v41, v42);
}

uint64_t sub_1C20B7AF4()
{
  uint64_t v1 = sub_1C2147AC0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = MEMORY[0x1F4188790](v1);
  unint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v19 - v6;
  uint64_t v8 = *(void **)(v0 + 24);
  if (v8)
  {
    id v9 = v8;
    if (objc_msgSend(v9, sel_status) == *(id *)(v0 + 48)
      && (id v10 = objc_msgSend(v9, sel_doseQuantity)) != 0
      && (v11 = v10, objc_msgSend(v10, sel_doubleValue), double v13 = v12, v11, v13 == *(double *)(v0 + 40)))
    {
      id v14 = objc_msgSend(v9, sel_startDate);
      sub_1C2147A60();

      uint64_t v15 = v0 + OBJC_IVAR____TtC19HealthMedicationsUI27MedicationsDoseLogViewModel_logDate;
      swift_beginAccess();
      (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v5, v15, v1);
      sub_1C20B8804(&qword_1EA2C5070, MEMORY[0x1E4F27928]);
      LOBYTE(v15) = sub_1C214A5A0();

      uint64_t v16 = *(void (**)(char *, uint64_t))(v2 + 8);
      v16(v5, v1);
      v16(v7, v1);
      char v17 = v15 ^ 1;
    }
    else
    {

      char v17 = 1;
    }
  }
  else
  {
    char v17 = *(void *)(v0 + 48) != *(void *)(v0
                                            + OBJC_IVAR____TtC19HealthMedicationsUI27MedicationsDoseLogViewModel_initialStatus);
  }
  return v17 & 1;
}

uint64_t sub_1C20B7D50()
{
  sub_1C20B7378();
  sub_1C214A690();

  return swift_bridgeObjectRelease();
}

uint64_t static MedicationsDoseLogViewModel.== infix(_:_:)()
{
  uint64_t v0 = sub_1C20B7378();
  uint64_t v2 = v1;
  if (v0 == sub_1C20B7378() && v2 == v3) {
    char v4 = 1;
  }
  else {
    char v4 = sub_1C214BA80();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4 & 1;
}

uint64_t MedicationsDoseLogViewModel.deinit()
{
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC19HealthMedicationsUI27MedicationsDoseLogViewModel_logDate;
  uint64_t v2 = sub_1C2147AC0();
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  v3(v1, v2);
  v3(v0 + OBJC_IVAR____TtC19HealthMedicationsUI27MedicationsDoseLogViewModel_initialLogDate, v2);
  return v0;
}

uint64_t MedicationsDoseLogViewModel.__deallocating_deinit()
{
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC19HealthMedicationsUI27MedicationsDoseLogViewModel_logDate;
  uint64_t v2 = sub_1C2147AC0();
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  v3(v1, v2);
  v3(v0 + OBJC_IVAR____TtC19HealthMedicationsUI27MedicationsDoseLogViewModel_initialLogDate, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_1C20B7FC4()
{
  return sub_1C214BB80();
}

uint64_t sub_1C20B8020()
{
  return sub_1C214BB80();
}

uint64_t sub_1C20B8080()
{
  sub_1C20B7378();
  sub_1C214A690();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1C20B80D4()
{
  return sub_1C214BB80();
}

uint64_t sub_1C20B8130()
{
  uint64_t v0 = sub_1C20B7378();
  uint64_t v2 = v1;
  if (v0 == sub_1C20B7378() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = sub_1C214BA80();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t MedicationDoseLogListViewModel.init(date:title:medicationDoses:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = v4 + OBJC_IVAR____TtC19HealthMedicationsUI30MedicationDoseLogListViewModel_date;
  uint64_t v10 = sub_1C2147AC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v9, a1, v10);
  uint64_t v11 = (void *)(v4 + OBJC_IVAR____TtC19HealthMedicationsUI30MedicationDoseLogListViewModel_title);
  void *v11 = a2;
  v11[1] = a3;
  *(void *)(v4 + 16) = a4;
  return v4;
}

uint64_t MedicationDoseLogListViewModel.deinit()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC19HealthMedicationsUI30MedicationDoseLogListViewModel_date;
  uint64_t v2 = sub_1C2147AC0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t MedicationDoseLogListViewModel.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC19HealthMedicationsUI30MedicationDoseLogListViewModel_date;
  uint64_t v2 = sub_1C2147AC0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_1C20B8394()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC19HealthMedicationsUI32MedicationDoseRecordAllViewModel_logDate;
  uint64_t v2 = sub_1C2147AC0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_1C20B8434()
{
  return sub_1C20B8804(&qword_1EA2C6A90, (void (*)(uint64_t))type metadata accessor for MedicationsDoseLogViewModel);
}

uint64_t type metadata accessor for MedicationsDoseLogViewModel(uint64_t a1)
{
  return sub_1C1F20D10(a1, (uint64_t *)&unk_1EBF0C388);
}

uint64_t sub_1C20B849C()
{
  return type metadata accessor for MedicationsDoseLogViewModel(0);
}

uint64_t sub_1C20B84A4()
{
  uint64_t result = sub_1C2147AC0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for MedicationsDoseLogViewModel(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MedicationsDoseLogViewModel);
}

uint64_t dispatch thunk of MedicationsDoseLogViewModel.__allocating_init(medication:doseEvent:scheduleItem:logDate:dosage:index:)()
{
  return (*(uint64_t (**)(void))(v0 + 328))();
}

uint64_t dispatch thunk of MedicationsDoseLogViewModel.isScheduled.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 344))();
}

uint64_t dispatch thunk of MedicationsDoseLogViewModel.scheduleDate.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 352))();
}

uint64_t dispatch thunk of MedicationsDoseLogViewModel.hash(into:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 400))();
}

uint64_t dispatch thunk of MedicationsDoseLogViewModel.hashValue.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 472))();
}

uint64_t sub_1C20B8644()
{
  return type metadata accessor for MedicationDoseLogListViewModel(0);
}

uint64_t type metadata accessor for MedicationDoseLogListViewModel(uint64_t a1)
{
  return sub_1C1F20D10(a1, (uint64_t *)&unk_1EBF0C590);
}

uint64_t sub_1C20B866C()
{
  uint64_t result = sub_1C2147AC0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for MedicationDoseLogListViewModel(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MedicationDoseLogListViewModel);
}

uint64_t dispatch thunk of MedicationDoseLogListViewModel.__allocating_init(date:title:medicationDoses:)()
{
  return (*(uint64_t (**)(void))(v0 + 176))();
}

uint64_t sub_1C20B8740()
{
  return type metadata accessor for MedicationDoseRecordAllViewModel(0);
}

uint64_t type metadata accessor for MedicationDoseRecordAllViewModel(uint64_t a1)
{
  return sub_1C1F20D10(a1, (uint64_t *)&unk_1EBF0C5A0);
}

uint64_t sub_1C20B8768()
{
  uint64_t result = sub_1C2147AC0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1C20B8804(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C20B884C()
{
  if (!qword_1EA2C6A98)
  {
    MEMORY[0x1F4188790](0);
    sub_1C2147AC0();
    type metadata accessor for HKMedicationDoseEventStatus(255);
    sub_1C20B8AD0(255, &qword_1EA2C6AA0);
    unint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
    if (!v1) {
      atomic_store(TupleTypeMetadata, (unint64_t *)&qword_1EA2C6A98);
    }
  }
}

void sub_1C20B8980()
{
  if (!qword_1EA2C6AA8)
  {
    MEMORY[0x1F4188790](0);
    sub_1C2148EB0();
    sub_1C2147AC0();
    type metadata accessor for HKMedicationDoseEventStatus(255);
    sub_1C20B8AD0(255, &qword_1EA2C6AA0);
    unint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
    if (!v1) {
      atomic_store(TupleTypeMetadata, (unint64_t *)&qword_1EA2C6AA8);
    }
  }
}

void sub_1C20B8AD0(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t v3 = sub_1C214B4F0();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

uint64_t MedicationInfoItem.__allocating_init(medmoji:name:strength:ingredients:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = swift_allocObject();
  type metadata accessor for MedicationInfoItemCell();
  sub_1C20B8DA8();
  *(void *)(v12 + 16) = sub_1C21481D0();
  *(void *)(v12 + 24) = v13;
  sub_1C1F4DB28(a1, v12 + OBJC_IVAR____TtC19HealthMedicationsUI18MedicationInfoItem_medmoji);
  id v14 = (void *)(v12 + OBJC_IVAR____TtC19HealthMedicationsUI18MedicationInfoItem_name);
  *id v14 = a2;
  v14[1] = a3;
  uint64_t v15 = (void *)(v12 + OBJC_IVAR____TtC19HealthMedicationsUI18MedicationInfoItem_strength);
  *uint64_t v15 = a4;
  v15[1] = a5;
  *(void *)(v12 + OBJC_IVAR____TtC19HealthMedicationsUI18MedicationInfoItem_ingredients) = a6;
  return v12;
}

uint64_t MedicationInfoItem.reuseIdentifier.setter(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*MedicationInfoItem.reuseIdentifier.modify())()
{
  return j__swift_endAccess;
}

uint64_t _s19HealthMedicationsUI18MedicationInfoItemC15reuseIdentifierSSvg_0()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MedicationInfoItem.init(medmoji:name:strength:ingredients:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  type metadata accessor for MedicationInfoItemCell();
  sub_1C20B8DA8();
  *(void *)(v6 + 16) = sub_1C21481D0();
  *(void *)(v6 + 24) = v13;
  sub_1C1F4DB28(a1, v6 + OBJC_IVAR____TtC19HealthMedicationsUI18MedicationInfoItem_medmoji);
  id v14 = (void *)(v6 + OBJC_IVAR____TtC19HealthMedicationsUI18MedicationInfoItem_name);
  *id v14 = a2;
  v14[1] = a3;
  uint64_t v15 = (void *)(v6 + OBJC_IVAR____TtC19HealthMedicationsUI18MedicationInfoItem_strength);
  *uint64_t v15 = a4;
  v15[1] = a5;
  *(void *)(v6 + OBJC_IVAR____TtC19HealthMedicationsUI18MedicationInfoItem_ingredients) = a6;
  return v6;
}

uint64_t type metadata accessor for MedicationInfoItemCell()
{
  return self;
}

unint64_t sub_1C20B8DA8()
{
  unint64_t result = qword_1EA2C36F8;
  if (!qword_1EA2C36F8)
  {
    type metadata accessor for MedicationInfoItemCell();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C36F8);
  }
  return result;
}

uint64_t MedicationInfoItem.deinit()
{
  swift_bridgeObjectRelease();
  sub_1C20B96F8(v0 + OBJC_IVAR____TtC19HealthMedicationsUI18MedicationInfoItem_medmoji, (unint64_t *)&qword_1EBF0B690, MEMORY[0x1E4F66C80]);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t MedicationInfoItem.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  sub_1C20B96F8(v0 + OBJC_IVAR____TtC19HealthMedicationsUI18MedicationInfoItem_medmoji, (unint64_t *)&qword_1EBF0B690, MEMORY[0x1E4F66C80]);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_1C20B8F44()
{
  uint64_t v1 = *v0;
  swift_beginAccess();
  uint64_t v2 = *(void *)(v1 + 16);
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t MedicationInfoItemCell.item.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI22MedicationInfoItemCell_item;
  swift_beginAccess();
  return sub_1C20BA720(v3, a1, (unint64_t *)&qword_1EBF0C300, (void (*)(uint64_t))sub_1C1F1CB5C);
}

void sub_1C20B9004(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C214B4F0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1C20B9058(uint64_t a1, void *a2)
{
  sub_1C20BA720(a1, (uint64_t)v5, (unint64_t *)&qword_1EBF0C300, (void (*)(uint64_t))sub_1C1F1CB5C);
  uint64_t v3 = *a2 + OBJC_IVAR____TtC19HealthMedicationsUI22MedicationInfoItemCell_item;
  swift_beginAccess();
  sub_1C1F32DDC((uint64_t)v5, v3);
  swift_endAccess();
  sub_1C20B918C();
  return sub_1C20B96F8((uint64_t)v5, (unint64_t *)&qword_1EBF0C300, (void (*)(uint64_t))sub_1C1F1CB5C);
}

uint64_t MedicationInfoItemCell.item.setter(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI22MedicationInfoItemCell_item;
  swift_beginAccess();
  sub_1C1F32DDC(a1, v3);
  swift_endAccess();
  sub_1C20B918C();
  return sub_1C20B96F8(a1, (unint64_t *)&qword_1EBF0C300, (void (*)(uint64_t))sub_1C1F1CB5C);
}

void sub_1C20B918C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1C21497F0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C20B9004(0, (unint64_t *)&qword_1EBF0B690, MEMORY[0x1E4F66C80]);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v26 - v7;
  uint64_t v9 = (uint64_t)v1 + OBJC_IVAR____TtC19HealthMedicationsUI22MedicationInfoItemCell_item;
  swift_beginAccess();
  sub_1C20BA720(v9, (uint64_t)v30, (unint64_t *)&qword_1EBF0C300, (void (*)(uint64_t))sub_1C1F1CB5C);
  if (v30[3])
  {
    sub_1C1F1CB5C();
    type metadata accessor for MedicationInfoItem();
    if (swift_dynamicCast())
    {
      uint64_t v10 = v29;
      id v11 = sub_1C20B97E8();
      sub_1C20BA720(v10 + OBJC_IVAR____TtC19HealthMedicationsUI18MedicationInfoItem_medmoji, (uint64_t)v8, (unint64_t *)&qword_1EBF0B690, MEMORY[0x1E4F66C80]);
      sub_1C2148ED0();

      id v12 = sub_1C20B998C(&OBJC_IVAR____TtC19HealthMedicationsUI22MedicationInfoItemCell____lazy_storage___nameLabel, 2, (SEL *)&selRef_labelColor);
      swift_bridgeObjectRetain();
      uint64_t v13 = (void *)sub_1C214A5B0();
      swift_bridgeObjectRelease();
      objc_msgSend(v12, sel_setText_, v13);

      id v14 = sub_1C20B998C(&OBJC_IVAR____TtC19HealthMedicationsUI22MedicationInfoItemCell____lazy_storage___strengthLabel, 0, (SEL *)&selRef_labelColor);
      swift_bridgeObjectRetain();
      uint64_t v15 = (void *)sub_1C214A5B0();
      swift_bridgeObjectRelease();
      objc_msgSend(v14, sel_setText_, v15);

      id v16 = sub_1C20B998C(&OBJC_IVAR____TtC19HealthMedicationsUI22MedicationInfoItemCell____lazy_storage___ingredientsLabel, 0, (SEL *)&selRef_secondaryLabelColor);
      v30[0] = *(void *)(v10 + OBJC_IVAR____TtC19HealthMedicationsUI18MedicationInfoItem_ingredients);
      sub_1C1F13CCC(0, (unint64_t *)&qword_1EA2C3A40, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
      sub_1C1F64558();
      swift_bridgeObjectRetain();
      sub_1C214A580();
      swift_bridgeObjectRelease();
      char v17 = (void *)sub_1C214A5B0();
      swift_bridgeObjectRelease();
      objc_msgSend(v16, sel_setText_, v17);
      swift_release();

      return;
    }
  }
  else
  {
    sub_1C20B96F8((uint64_t)v30, (unint64_t *)&qword_1EBF0C300, (void (*)(uint64_t))sub_1C1F1CB5C);
  }
  sub_1C21497A0();
  id v18 = v1;
  uint64_t v19 = sub_1C21497E0();
  os_log_type_t v20 = sub_1C214ABD0();
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v28 = v2;
    uint64_t v21 = (uint8_t *)swift_slowAlloc();
    uint64_t v22 = swift_slowAlloc();
    uint64_t v27 = v3;
    uint64_t v23 = v22;
    uint64_t v29 = v22;
    *(_DWORD *)uint64_t v21 = 136446210;
    id v26 = v21 + 4;
    sub_1C20BA720(v9, (uint64_t)v30, (unint64_t *)&qword_1EBF0C300, (void (*)(uint64_t))sub_1C1F1CB5C);
    sub_1C20B9004(0, (unint64_t *)&qword_1EBF0C300, (void (*)(uint64_t))sub_1C1F1CB5C);
    uint64_t v24 = sub_1C214A630();
    v30[0] = sub_1C1F6FD54(v24, v25, &v29);
    sub_1C214B530();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C1F0B000, v19, v20, "Incorrect view model for MedicationInfoItem: %{public}s", v21, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C8754730](v23, -1, -1);
    MEMORY[0x1C8754730](v21, -1, -1);

    (*(void (**)(char *, uint64_t))(v27 + 8))(v5, v28);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
}

uint64_t sub_1C20B96F8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1C20B9004(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

void (*MedicationInfoItemCell.item.modify(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1C20B97B4;
}

void sub_1C20B97B4(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    sub_1C20B918C();
  }
}

id sub_1C20B97E8()
{
  uint64_t v1 = OBJC_IVAR____TtC19HealthMedicationsUI22MedicationInfoItemCell____lazy_storage___medmojiView;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI22MedicationInfoItemCell____lazy_storage___medmojiView);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI22MedicationInfoItemCell____lazy_storage___medmojiView);
  }
  else
  {
    uint64_t v4 = v0;
    id v5 = objc_msgSend(objc_allocWithZone((Class)sub_1C2148EF0()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
    id v6 = (id)*MEMORY[0x1E4F39EA8];
    sub_1C214B0D0();

    objc_msgSend(v5, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    uint64_t v7 = *(void **)(v4 + v1);
    *(void *)(v4 + vsub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, 0, 1) = v5;
    id v3 = v5;

    uint64_t v2 = 0;
  }
  id v8 = v2;
  return v3;
}

id sub_1C20B98B4()
{
  uint64_t v1 = OBJC_IVAR____TtC19HealthMedicationsUI22MedicationInfoItemCell____lazy_storage___stackView;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI22MedicationInfoItemCell____lazy_storage___stackView);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI22MedicationInfoItemCell____lazy_storage___stackView);
  }
  else
  {
    id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1C60]), sel_init);
    objc_msgSend(v4, sel_setAxis_, 1);
    objc_msgSend(v4, sel_setAlignment_, 1);
    objc_msgSend(v4, sel_setDistribution_, 0);
    objc_msgSend(v4, sel_setSpacing_, 4.0);
    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    id v5 = *(void **)(v0 + v1);
    *(void *)(v0 + vsub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, 0, 1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_1C20B998C(uint64_t *a1, uint64_t a2, SEL *a3)
{
  uint64_t v4 = *a1;
  id v5 = *(void **)(v3 + *a1);
  if (v5)
  {
    id v6 = *(id *)(v3 + *a1);
  }
  else
  {
    uint64_t v8 = v3;
    id v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
    sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8E0);
    uint64_t v10 = (void *)sub_1C214B0A0();
    objc_msgSend(v9, sel_setFont_, v10);

    objc_msgSend(v9, sel_setAdjustsFontForContentSizeCategory_, 1);
    id v11 = [self *a3];
    objc_msgSend(v9, sel_setTextColor_, v11);

    objc_msgSend(v9, sel_setNumberOfLines_, 0);
    objc_msgSend(v9, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    id v6 = v9;
    id v12 = (void *)sub_1C214A770();
    id v13 = (id)HKUIJoinStringsForAutomationIdentifier();

    objc_msgSend(v6, sel_setAccessibilityIdentifier_, v13);
    id v14 = *(void **)(v8 + v4);
    *(void *)(v8 + v4) = v6;

    id v5 = 0;
  }
  id v15 = v5;
  return v6;
}

id sub_1C20B9B34(double a1, double a2, double a3, double a4)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v10 = &v4[OBJC_IVAR____TtC19HealthMedicationsUI22MedicationInfoItemCell_item];
  *(_OWORD *)uint64_t v10 = 0u;
  *((_OWORD *)v10 + sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, 0, 1) = 0u;
  *((void *)v10 + 4) = 0;
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI22MedicationInfoItemCell____lazy_storage___medmojiView] = 0;
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI22MedicationInfoItemCell____lazy_storage___stackView] = 0;
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI22MedicationInfoItemCell____lazy_storage___nameLabel] = 0;
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI22MedicationInfoItemCell____lazy_storage___strengthLabel] = 0;
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI22MedicationInfoItemCell____lazy_storage___ingredientsLabel] = 0;
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI22MedicationInfoItemCell_width] = 0x4040800000000000;
  v62.receiver = v4;
  v62.super_class = ObjectType;
  id v11 = objc_msgSendSuper2(&v62, sel_initWithFrame_, a1, a2, a3, a4);
  objc_msgSend(v11, sel_setUserInteractionEnabled_, 0);
  id v12 = sub_1C20B98B4();
  id v13 = sub_1C20B998C(&OBJC_IVAR____TtC19HealthMedicationsUI22MedicationInfoItemCell____lazy_storage___nameLabel, 2, (SEL *)&selRef_labelColor);
  objc_msgSend(v12, sel_addArrangedSubview_, v13);

  id v14 = sub_1C20B98B4();
  id v15 = sub_1C20B998C(&OBJC_IVAR____TtC19HealthMedicationsUI22MedicationInfoItemCell____lazy_storage___strengthLabel, 0, (SEL *)&selRef_labelColor);
  objc_msgSend(v14, sel_addArrangedSubview_, v15);

  id v16 = sub_1C20B98B4();
  id v17 = sub_1C20B998C(&OBJC_IVAR____TtC19HealthMedicationsUI22MedicationInfoItemCell____lazy_storage___ingredientsLabel, 0, (SEL *)&selRef_secondaryLabelColor);
  objc_msgSend(v16, sel_addArrangedSubview_, v17);

  id v18 = objc_msgSend(v11, sel_contentView);
  id v19 = sub_1C20B97E8();
  objc_msgSend(v18, sel_addSubview_, v19);

  id v20 = objc_msgSend(v11, sel_contentView);
  id v21 = sub_1C20B98B4();
  objc_msgSend(v20, sel_addSubview_, v21);

  uint64_t v22 = self;
  sub_1C1F13CCC(0, (unint64_t *)&qword_1EBF0CA10, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_1C2150CA0;
  id v24 = sub_1C20B97E8();
  id v25 = objc_msgSend(v24, sel_topAnchor);

  id v26 = objc_msgSend(v11, sel_contentView);
  id v27 = objc_msgSend(v26, sel_topAnchor);

  id v28 = objc_msgSend(v25, sel_constraintEqualToAnchor_constant_, v27, 16.0);
  *(void *)(v23 + 32) = v28;
  id v29 = sub_1C20B97E8();
  id v30 = objc_msgSend(v29, sel_leadingAnchor);

  id v31 = objc_msgSend(v11, sel_contentView);
  id v32 = objc_msgSend(v31, sel_leadingAnchor);

  id v33 = objc_msgSend(v30, sel_constraintEqualToAnchor_constant_, v32, 16.0);
  *(void *)(v23 + 4sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = v33;
  id v34 = sub_1C20B97E8();
  id v35 = objc_msgSend(v34, sel_widthAnchor);

  id v36 = objc_msgSend(v35, sel_constraintEqualToConstant_, 33.0);
  *(void *)(v23 + 48) = v36;
  id v37 = sub_1C20B97E8();
  id v38 = objc_msgSend(v37, sel_heightAnchor);

  id v39 = objc_msgSend(v38, sel_constraintEqualToConstant_, 33.0);
  *(void *)(v23 + 56) = v39;
  id v40 = sub_1C20B98B4();
  id v41 = objc_msgSend(v40, sel_leadingAnchor);

  id v42 = sub_1C20B97E8();
  id v43 = objc_msgSend(v42, sel_trailingAnchor);

  id v44 = objc_msgSend(v41, sel_constraintEqualToAnchor_constant_, v43, 16.0);
  *(void *)(v23 + 64) = v44;
  id v45 = sub_1C20B98B4();
  id v46 = objc_msgSend(v45, sel_trailingAnchor);

  id v47 = objc_msgSend(v11, sel_contentView);
  id v48 = objc_msgSend(v47, sel_trailingAnchor);

  id v49 = objc_msgSend(v46, sel_constraintEqualToAnchor_constant_, v48, -16.0);
  *(void *)(v23 + 72) = v49;
  id v50 = sub_1C20B98B4();
  id v51 = objc_msgSend(v50, sel_topAnchor);

  id v52 = objc_msgSend(v11, sel_contentView);
  id v53 = objc_msgSend(v52, sel_topAnchor);

  id v54 = objc_msgSend(v51, sel_constraintEqualToAnchor_constant_, v53, 16.0);
  *(void *)(v23 + 8sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = v54;
  id v55 = sub_1C20B98B4();
  id v56 = objc_msgSend(v55, sel_bottomAnchor);

  id v57 = objc_msgSend(v11, sel_contentView);
  id v58 = objc_msgSend(v57, sel_bottomAnchor);

  id v59 = objc_msgSend(v56, sel_constraintEqualToAnchor_constant_, v58, -16.0);
  *(void *)(v23 + 88) = v59;
  sub_1C214A7A0();
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C810);
  uint64_t v60 = (void *)sub_1C214A770();
  swift_bridgeObjectRelease();
  objc_msgSend(v22, sel_activateConstraints_, v60);

  return v11;
}

id MedicationInfoItemCell.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1C20BA33C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI22MedicationInfoItemCell_item;
  swift_beginAccess();
  return sub_1C20BA720(v3, a1, (unint64_t *)&qword_1EBF0C300, (void (*)(uint64_t))sub_1C1F1CB5C);
}

uint64_t sub_1C20BA3AC(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI22MedicationInfoItemCell_item;
  swift_beginAccess();
  sub_1C1F32DDC(a1, v3);
  swift_endAccess();
  sub_1C20B918C();
  return sub_1C20B96F8(a1, (unint64_t *)&qword_1EBF0C300, (void (*)(uint64_t))sub_1C1F1CB5C);
}

void (*sub_1C20BA438(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1C20B97B4;
}

uint64_t sub_1C20BA498@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC19HealthMedicationsUI22MedicationInfoItemCell_item;
  swift_beginAccess();
  return sub_1C20BA720(v3, a2, (unint64_t *)&qword_1EBF0C300, (void (*)(uint64_t))sub_1C1F1CB5C);
}

uint64_t sub_1C20BA510()
{
  return type metadata accessor for MedicationInfoItem();
}

uint64_t type metadata accessor for MedicationInfoItem()
{
  uint64_t result = qword_1EA2C6AB8;
  if (!qword_1EA2C6AB8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1C20BA564()
{
  sub_1C20B9004(319, (unint64_t *)&qword_1EBF0B690, MEMORY[0x1E4F66C80]);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for MedicationInfoItem(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MedicationInfoItem);
}

uint64_t dispatch thunk of MedicationInfoItem.__allocating_init(medmoji:name:strength:ingredients:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

void sub_1C20BA658()
{
  uint64_t v1 = &v0[OBJC_IVAR____TtC19HealthMedicationsUI22MedicationInfoItemCell_item];
  *(_OWORD *)uint64_t v1 = 0u;
  *((_OWORD *)v1 + sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, 0, 1) = 0u;
  *((void *)v1 + 4) = 0;
  *(void *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI22MedicationInfoItemCell____lazy_storage___medmojiView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI22MedicationInfoItemCell____lazy_storage___stackView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI22MedicationInfoItemCell____lazy_storage___nameLabel] = 0;
  *(void *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI22MedicationInfoItemCell____lazy_storage___strengthLabel] = 0;
  *(void *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI22MedicationInfoItemCell____lazy_storage___ingredientsLabel] = 0;
  *(void *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI22MedicationInfoItemCell_width] = 0x4040800000000000;

  sub_1C214B910();
  __break(1u);
}

uint64_t sub_1C20BA720(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_1C20B9004(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_1C20BA78C(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x656C756465686373;
  unint64_t v3 = 0xE800000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x656C756465686373;
  switch(v4)
  {
    case 1:
      uint64_t v5 = 0x656863536174656DLL;
      unint64_t v3 = 0xEC000000656C7564;
      break;
    case 2:
      uint64_t v5 = 0x6874676E65727473;
      break;
    case 3:
      unint64_t v3 = 0xE400000000000000;
      uint64_t v5 = 1836216166;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE800000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xEC000000656C7564;
      if (v5 == 0x656863536174656DLL) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      uint64_t v2 = 0x6874676E65727473;
      goto LABEL_9;
    case 3:
      unint64_t v6 = 0xE400000000000000;
      if (v5 == 1836216166) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v2) {
        goto LABEL_14;
      }
LABEL_12:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_1C214BA80();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1C20BA914(int a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1C2147CF0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  char v7 = &v33[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1C20BE704(0, &qword_1EBF0B1F0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = &v33[-v9];
  uint64_t v11 = sub_1C2147AC0();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  id v15 = &v33[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v13);
  id v17 = &v33[-v16];
  id v18 = objc_msgSend(v2, sel_endDateTime);
  if (!v18)
  {
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, 1, 1, v11);
    goto LABEL_8;
  }
  id v19 = v18;
  int v34 = a1;
  sub_1C2147A60();

  id v20 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v12 + 32);
  v20(v10, v15, v11);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v12 + 56))(v10, 0, 1, v11);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
LABEL_8:
    sub_1C20BE814((uint64_t)v10, &qword_1EBF0B1F0, MEMORY[0x1E4F27928]);
    return 0;
  }
  v20(v17, v10, v11);
  sub_1C2147CB0();
  sub_1C2147A70();
  uint64_t v21 = sub_1C2147C30();
  uint64_t v22 = *(void (**)(unsigned char *, uint64_t))(v12 + 8);
  v22(v15, v11);
  (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
  if (v34)
  {
    if (v21 < 0)
    {
      uint64_t v23 = v22;
      sub_1C20BE704(0, qword_1EBF0B8A0, (uint64_t (*)(uint64_t))sub_1C1FAEE38, MEMORY[0x1E4FBBE00]);
      uint64_t v24 = swift_allocObject();
      *(_OWORD *)(v24 + 16) = xmmword_1C214FCD0;
      Swift::String v25 = Date.formattedWithYearIfDifferent()();
      *(void *)(v24 + 56) = MEMORY[0x1E4FBB1A0];
      *(void *)(v24 + 64) = sub_1C1F31298();
      *(Swift::String *)(v24 + 32) = v25;
      if (qword_1EBF0CA00 == -1) {
        goto LABEL_20;
      }
      goto LABEL_25;
    }
LABEL_12:
    uint64_t v23 = v22;
    if (v21 == 1)
    {
      if (qword_1EBF0CA00 == -1) {
        goto LABEL_18;
      }
    }
    else
    {
      if (v21)
      {
        sub_1C20BE704(0, qword_1EBF0B8A0, (uint64_t (*)(uint64_t))sub_1C1FAEE38, MEMORY[0x1E4FBBE00]);
        uint64_t v29 = swift_allocObject();
        *(_OWORD *)(v29 + 16) = xmmword_1C214FCD0;
        Swift::String v30 = Date.formattedWithYearIfDifferent()();
        *(void *)(v29 + 56) = MEMORY[0x1E4FBB1A0];
        *(void *)(v29 + 64) = sub_1C1F31298();
        *(Swift::String *)(v29 + 32) = v30;
        if (qword_1EBF0CA00 == -1)
        {
LABEL_20:
          id v31 = (id)qword_1EBF0CA18;
          swift_bridgeObjectRetain();
          sub_1C2147730();
          uint64_t v26 = sub_1C214A5C0();
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_21;
        }
LABEL_25:
        swift_once();
        goto LABEL_20;
      }
      if (qword_1EBF0CA00 == -1)
      {
LABEL_18:
        id v28 = (id)qword_1EBF0CA18;
        swift_bridgeObjectRetain();
        uint64_t v26 = sub_1C2147730();
        swift_bridgeObjectRelease();

LABEL_21:
        v23(v17, v11);
        return v26;
      }
    }
    swift_once();
    goto LABEL_18;
  }
  sub_1C21479C0();
  sub_1C20BD7E8((unint64_t *)&qword_1EBF0B7B0, 255, MEMORY[0x1E4F27928]);
  char v27 = sub_1C214A590();
  v22(v15, v11);
  if ((v27 & 1) == 0 && (v21 & 0x8000000000000000) == 0) {
    goto LABEL_12;
  }
  v22(v17, v11);
  return 0;
}

uint64_t MedicationListViewData.medmojiConfig.getter()
{
  return _sSo29HKMedicationUserDomainConceptC19HealthMedicationsUIE7medmoji0eF10Experience29MedicationVisualizationConfigVSgvg_0();
}

uint64_t MedicationListViewData.title.getter()
{
  return sub_1C2149490();
}

void *MedicationListViewData.items.getter()
{
  uint64_t v2 = *(void **)v0;
  uint64_t v1 = *(void **)(v0 + 8);
  sub_1C20BB588();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C214FCC0;
  id v68 = v1;
  id v4 = v1;
  id v5 = v2;
  uint64_t v6 = sub_1C214B000();
  uint64_t v8 = v7;

  if (v8)
  {
    id v9 = objc_msgSend(self, sel_labelColor);
    uint64_t v10 = 3;
  }
  else
  {
    uint64_t v10 = 0;
    id v9 = 0;
    uint64_t v6 = 0;
  }
  *(void *)(inited + 32) = v10;
  *(void *)(inited + 4sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = v9;
  *(void *)(inited + 48) = v6;
  *(void *)(inited + 56) = v8;
  *(_OWORD *)(inited + 64) = 0u;
  *(_OWORD *)(inited + 8sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = 0u;
  uint64_t v66 = (uint64_t)v5;
  uint64_t v11 = _sSo29HKMedicationUserDomainConceptC19HealthMedicationsUIE8strengthSSSgvg_0();
  uint64_t v13 = v12;
  if (v12)
  {
    uint64_t v14 = v11;
    id v15 = objc_msgSend(self, sel_labelColor);
    uint64_t v16 = 2;
  }
  else
  {
    uint64_t v16 = 0;
    id v15 = 0;
    uint64_t v14 = 0;
  }
  *(void *)(inited + 96) = v16;
  *(void *)(inited + 104) = v15;
  *(void *)(inited + 112) = v14;
  *(void *)(inited + 12sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = v13;
  long long v17 = 0uLL;
  *(_OWORD *)(inited + 128) = 0u;
  *(_OWORD *)(inited + 144) = 0u;
  id v18 = *(void **)(inited + 40);
  if (!v18)
  {
    uint64_t v30 = 0;
    uint64_t v29 = 0;
    Swift::String v25 = (void *)MEMORY[0x1E4FBC860];
    if (!v15) {
      goto LABEL_18;
    }
    goto LABEL_13;
  }
  uint64_t v19 = *(void *)(inited + 32);
  uint64_t v20 = *(void *)(inited + 56);
  uint64_t v21 = *(void *)(inited + 64);
  uint64_t v22 = *(void *)(inited + 88);
  uint64_t v23 = *(void *)(inited + 48);
  long long v63 = *(_OWORD *)(inited + 72);
  swift_bridgeObjectRetain();
  id v24 = v18;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  Swift::String v25 = sub_1C1F3A904(0, 1, 1, MEMORY[0x1E4FBC860]);
  unint64_t v27 = v25[2];
  unint64_t v26 = v25[3];
  if (v27 >= v26 >> 1) {
    Swift::String v25 = sub_1C1F3A904((void *)(v26 > 1), v27 + 1, 1, v25);
  }
  v25[2] = v27 + 1;
  id v28 = &v25[8 * v27];
  *((unsigned char *)v28 + 32) = v19;
  void v28[5] = v24;
  v28[6] = v23;
  v28[7] = v20;
  v28[8] = v21;
  *(_OWORD *)(v28 + 9) = v63;
  v28[11] = v22;
  uint64_t v16 = *(void *)(inited + 96);
  id v15 = *(id *)(inited + 104);
  uint64_t v14 = *(void *)(inited + 112);
  uint64_t v29 = *(void *)(inited + 128);
  long long v17 = *(_OWORD *)(inited + 136);
  uint64_t v30 = *(void *)(inited + 152);
  if (v15)
  {
LABEL_13:
    uint64_t v31 = *(void *)(inited + 120);
    long long v64 = v17;
    swift_bridgeObjectRetain();
    id v32 = v15;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      Swift::String v25 = sub_1C1F3A904(0, v25[2] + 1, 1, v25);
    }
    unint64_t v34 = v25[2];
    unint64_t v33 = v25[3];
    long long v35 = v64;
    if (v34 >= v33 >> 1)
    {
      uint64_t v61 = sub_1C1F3A904((void *)(v33 > 1), v34 + 1, 1, v25);
      long long v35 = v64;
      Swift::String v25 = v61;
    }
    v25[2] = v34 + 1;
    id v36 = &v25[8 * v34];
    *((unsigned char *)v36 + 32) = v16;
    void v36[5] = v32;
    v36[6] = v14;
    v36[7] = v31;
    v36[8] = v29;
    *(_OWORD *)(v36 + 9) = v35;
    v36[11] = v30;
  }
LABEL_18:
  swift_bridgeObjectRelease();
  uint64_t v78 = v25;
  uint64_t v70 = v66;
  uint64_t v71 = v68;
  uint64_t v37 = sub_1C20BC030();
  sub_1C1F7D050(v37);
  sub_1C20BC264((uint64_t)&v70);
  id v38 = v71;
  if (v71)
  {
    uint64_t v65 = v70;
    uint64_t v39 = v72;
    uint64_t v40 = v73;
    uint64_t v41 = v74;
    uint64_t v42 = v75;
    uint64_t v43 = v76;
    uint64_t v44 = v77;
    id v45 = v78;
    swift_bridgeObjectRetain();
    id v62 = v38;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      id v45 = sub_1C1F3A904(0, v45[2] + 1, 1, v45);
    }
    unint64_t v47 = v45[2];
    unint64_t v46 = v45[3];
    if (v47 >= v46 >> 1) {
      id v45 = sub_1C1F3A904((void *)(v46 > 1), v47 + 1, 1, v45);
    }
    v45[2] = v47 + 1;
    id v48 = &v45[8 * v47];
    *((unsigned char *)v48 + 32) = v65;
    v48[5] = v62;
    v48[6] = v39;
    v48[7] = v40;
    v48[8] = v41;
    v48[9] = v42;
    v48[10] = v43;
    v48[11] = v44;
    sub_1C20BD4E0(v65, v38);
    uint64_t v78 = v45;
  }
  sub_1C20BC404((uint64_t)&v70);
  id v49 = v71;
  if (!v71) {
    return v78;
  }
  uint64_t v69 = v70;
  uint64_t v50 = v72;
  uint64_t v51 = v73;
  uint64_t v52 = v74;
  uint64_t v53 = v75;
  uint64_t v54 = v76;
  uint64_t v55 = v77;
  id v56 = v78;
  swift_bridgeObjectRetain();
  id v67 = v49;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    id v56 = sub_1C1F3A904(0, v56[2] + 1, 1, v56);
  }
  unint64_t v58 = v56[2];
  unint64_t v57 = v56[3];
  if (v58 >= v57 >> 1) {
    id v56 = sub_1C1F3A904((void *)(v57 > 1), v58 + 1, 1, v56);
  }
  v56[2] = v58 + 1;
  id v59 = &v56[8 * v58];
  *((unsigned char *)v59 + 32) = v69;
  v59[5] = v67;
  v59[6] = v50;
  v59[7] = v51;
  v59[8] = v52;
  v59[9] = v53;
  v59[10] = v54;
  v59[11] = v55;
  sub_1C20BD4E0(v69, v49);
  return v56;
}

void sub_1C20BB588()
{
  if (!qword_1EBF0C978)
  {
    sub_1C20BE7C4(255, &qword_1EBF0C4A8, MEMORY[0x1E4FBB718]);
    unint64_t v0 = sub_1C214BA50();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBF0C978);
    }
  }
}

uint64_t sub_1C20BB5FC(unsigned __int8 a1)
{
  char v2 = 1;
  switch(a1)
  {
    case 3u:
      goto LABEL_5;
    default:
      char v3 = sub_1C214BA80();
      swift_bridgeObjectRelease();
      if ((v3 & 1) == 0)
      {
        if (a1 <= 1u) {
          char v2 = sub_1C214BA80();
        }
LABEL_5:
        swift_bridgeObjectRelease();
      }
      return v2 & 1;
  }
}

id MedicationListItem.concept.getter()
{
  return *(id *)(v0 + 16);
}

uint64_t sub_1C20BB750(unsigned __int8 *a1, char *a2)
{
  return sub_1C20BA78C(*a1, *a2);
}

uint64_t sub_1C20BB75C()
{
  return sub_1C214BB80();
}

uint64_t sub_1C20BB834()
{
  sub_1C214A690();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1C20BB8F4()
{
  return sub_1C214BB80();
}

uint64_t sub_1C20BB9C8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C20BE6B8();
  *a1 = result;
  return result;
}

void sub_1C20BB9F8(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE800000000000000;
  uint64_t v3 = 0x656C756465686373;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xEC000000656C7564;
      uint64_t v3 = 0x656863536174656DLL;
      goto LABEL_3;
    case 2:
      *a1 = 0x6874676E65727473;
      a1[1] = 0xE800000000000000;
      break;
    case 3:
      *a1 = 1836216166;
      a1[1] = 0xE400000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t MedicationCellItem.hash(into:)()
{
  uint64_t v1 = (void *)v0[1];
  uint64_t v2 = v0[5];
  uint64_t v3 = v0[7];
  sub_1C214A690();
  swift_bridgeObjectRelease();
  id v4 = v1;
  sub_1C214B230();

  swift_bridgeObjectRetain();
  sub_1C214A690();
  swift_bridgeObjectRelease();
  if (!v2)
  {
    sub_1C214BB50();
    if (v3) {
      goto LABEL_3;
    }
    return sub_1C214BB50();
  }
  sub_1C214BB50();
  swift_bridgeObjectRetain();
  sub_1C214A690();
  swift_bridgeObjectRelease();
  if (!v3) {
    return sub_1C214BB50();
  }
LABEL_3:
  sub_1C214BB50();
  swift_bridgeObjectRetain();
  sub_1C214A690();

  return swift_bridgeObjectRelease();
}

uint64_t MedicationCellItem.hashValue.getter()
{
  return sub_1C214BB80();
}

uint64_t sub_1C20BBCBC()
{
  return sub_1C214BB80();
}

uint64_t sub_1C20BBD24()
{
  return sub_1C214BB80();
}

id MedicationListViewData.medication.getter()
{
  return *v0;
}

void *MedicationListViewData.schedule.getter()
{
  uint64_t v1 = *(void **)(v0 + 8);
  id v2 = v1;
  return v1;
}

uint64_t MedicationListViewData.init(medication:schedule:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t MedicationListViewData.id.getter()
{
  uint64_t v1 = sub_1C2147B20();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  id v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void **)v0;
  id v5 = *(void **)(v0 + 8);
  uint64_t v13 = 0;
  unint64_t v14 = 0xE000000000000000;
  sub_1C214B7C0();
  swift_bridgeObjectRelease();
  uint64_t v13 = 0x3A747065636E6F63;
  unint64_t v14 = 0xE800000000000000;
  id v7 = objc_msgSend(v6, sel_UUID);
  sub_1C2147B00();

  sub_1C2147AD0();
  uint64_t v8 = *(void (**)(char *, uint64_t))(v2 + 8);
  v8(v4, v1);
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  sub_1C214A6C0();
  if (v5)
  {
    id v9 = objc_msgSend(v5, sel_UUID);
    sub_1C2147B00();

    sub_1C2147AD0();
    v8(v4, v1);
  }
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  sub_1C214A6C0();
  uint64_t v12 = (uint64_t)v5;
  sub_1C1F89100();
  sub_1C20BD6C8();
  uint64_t v12 = sub_1C214B500();
  sub_1C214BA40();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t MedicationListViewData.caption.getter()
{
  return sub_1C214B000();
}

uint64_t sub_1C20BC030()
{
  uint64_t v1 = *(void **)(v0 + 8);
  if (v1)
  {
    id v2 = v1;
    uint64_t v3 = HKMedicationSchedule.makeItems()();

    return v3;
  }
  else
  {
    if (qword_1EBF0CA00 != -1) {
      swift_once();
    }
    id v5 = (id)qword_1EBF0CA18;
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_1C2147730();
    uint64_t v8 = v7;
    swift_bridgeObjectRelease();

    sub_1C20BE7C4(0, &qword_1EBF0C970, MEMORY[0x1E4FBBE00]);
    uint64_t v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_1C214FCD0;
    id v10 = objc_msgSend(self, sel_secondaryLabelColor, 0xE000000000000000);
    id v11 = (id)qword_1EBF0CA18;
    swift_bridgeObjectRetain();
    sub_1C2147730();
    swift_bridgeObjectRelease();

    sub_1C214A6C0();
    swift_bridgeObjectRelease();
    sub_1C214A6C0();
    sub_1C214A6C0();
    *(unsigned char *)(v9 + 32) = 0;
    *(void *)(v9 + 4sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = v10;
    *(void *)(v9 + 48) = v6;
    *(void *)(v9 + 56) = v8;
    *(_OWORD *)(v9 + 64) = xmmword_1C215A270;
    *(void *)(v9 + 8sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = 0;
    *(void *)(v9 + 88) = 0xE000000000000000;
    return v9;
  }
}

double sub_1C20BC264@<D0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void **)(v1 + 8);
  if (!v3) {
    goto LABEL_7;
  }
  id v4 = v3;
  uint64_t v5 = sub_1C20BA914(0);
  if (!v6)
  {

LABEL_7:
    double result = 0.0;
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)(a1 + 48) = 0u;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    return result;
  }
  uint64_t v7 = v5;
  uint64_t v8 = v6;
  id v9 = objc_msgSend(self, sel_secondaryLabelColor);
  if (qword_1EBF0CA00 != -1) {
    swift_once();
  }
  id v10 = (id)qword_1EBF0CA18;
  swift_bridgeObjectRetain();
  sub_1C2147730();
  swift_bridgeObjectRelease();

  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  sub_1C214A6C0();
  sub_1C214A6C0();

  *(void *)a1 = 1;
  *(void *)(a1 + 8) = v9;
  *(void *)(a1 + 16) = v7;
  *(void *)(a1 + 24) = v8;
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 4sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = 0;
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0xE000000000000000;
  return result;
}

double sub_1C20BC404@<D0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1C21497F0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void **)(v1 + 8);
  if (!v7)
  {
    sub_1C21497A0();
    uint64_t v20 = sub_1C21497E0();
    os_log_type_t v21 = sub_1C214ABD0();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v22 = 0;
      _os_log_impl(&dword_1C1F0B000, v20, v21, "Schedule is nil in incompatibility check", v22, 2u);
      MEMORY[0x1C8754730](v22, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    goto LABEL_10;
  }
  sub_1C2148E10();
  id v8 = v7;
  sub_1C2148E00();
  id v9 = (void *)sub_1C2148DF0();
  swift_release();
  id v10 = (void *)sub_1C2148D90();

  if (!v10)
  {

LABEL_10:
    double result = 0.0;
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)(a1 + 48) = 0u;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    return result;
  }
  if (qword_1EBF0CA00 != -1) {
    swift_once();
  }
  id v11 = (id)qword_1EBF0CA18;
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_1C2147730();
  uint64_t v14 = v13;
  swift_bridgeObjectRelease();

  id v15 = objc_msgSend(self, sel_secondaryLabelColor);
  uint64_t v23 = 0;
  unint64_t v24 = 0xE000000000000000;
  id v16 = (id)qword_1EBF0CA18;
  swift_bridgeObjectRetain();
  sub_1C2147730();
  swift_bridgeObjectRelease();

  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  sub_1C214A6C0();
  sub_1C214A6C0();

  uint64_t v18 = v23;
  unint64_t v19 = v24;
  *(void *)a1 = 1;
  *(void *)(a1 + 8) = v15;
  *(void *)(a1 + 16) = v12;
  *(void *)(a1 + 24) = v14;
  *(void *)(a1 + 32) = 0xD00000000000001BLL;
  *(void *)(a1 + 4sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = 0x80000001C21605E0;
  *(void *)(a1 + 48) = v18;
  *(void *)(a1 + 56) = v19;
  return result;
}

void MedicationListViewData.hash(into:)()
{
  uint64_t v1 = *(void **)(v0 + 8);
  id v2 = *(id *)v0;
  sub_1C214B230();

  if (v1)
  {
    sub_1C214BB50();
    id v3 = v1;
    sub_1C214B230();
  }
  else
  {
    sub_1C214BB50();
  }
}

uint64_t MedicationListViewData.hashValue.getter()
{
  uint64_t v1 = *(void **)(v0 + 8);
  sub_1C214BB30();
  sub_1C214B230();
  sub_1C214BB50();
  if (v1)
  {
    id v2 = v1;
    sub_1C214B230();
  }
  return sub_1C214BB80();
}

uint64_t sub_1C20BC878()
{
  uint64_t v1 = *(void **)(v0 + 8);
  sub_1C214BB30();
  sub_1C214B230();
  sub_1C214BB50();
  if (v1)
  {
    id v2 = v1;
    sub_1C214B230();
  }
  return sub_1C214BB80();
}

void sub_1C20BC8F8()
{
  uint64_t v1 = *(void **)(v0 + 8);
  sub_1C214B230();
  if (v1)
  {
    sub_1C214BB50();
    id v2 = v1;
    sub_1C214B230();
  }
  else
  {
    sub_1C214BB50();
  }
}

uint64_t sub_1C20BC990()
{
  uint64_t v1 = *(void **)(v0 + 8);
  sub_1C214BB30();
  sub_1C214B230();
  sub_1C214BB50();
  if (v1)
  {
    id v2 = v1;
    sub_1C214B230();
  }
  return sub_1C214BB80();
}

id MedicationListItem.itemRepresentable.getter@<X0>(void *a1@<X8>)
{
  id v2 = *(void **)(v1 + 24);
  id v5 = *(id *)(v1 + 16);
  *a1 = v5;
  a1[1] = v2;
  id v3 = v2;

  return v5;
}

id MedicationListItem.healthStore.getter()
{
  swift_beginAccess();
  uint64_t v1 = *(void **)(v0 + 32);

  return v1;
}

void MedicationListItem.healthStore.setter(uint64_t a1)
{
  swift_beginAccess();
  id v3 = *(void **)(v1 + 32);
  *(void *)(v1 + 32) = a1;
}

uint64_t (*MedicationListItem.healthStore.modify())()
{
  return j__swift_endAccess;
}

id MedicationListItem.conceptStore.getter()
{
  swift_beginAccess();
  uint64_t v1 = *(void **)(v0 + 40);

  return v1;
}

void MedicationListItem.conceptStore.setter(uint64_t a1)
{
  swift_beginAccess();
  id v3 = *(void **)(v1 + 40);
  *(void *)(v1 + 4sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = a1;
}

uint64_t (*MedicationListItem.conceptStore.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t MedicationListItem.listManager.getter()
{
  return swift_retain();
}

uint64_t MedicationListItem.listManager.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 48) = a1;
  return swift_release();
}

uint64_t (*MedicationListItem.listManager.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t MedicationListItem.accessories.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t MedicationListItem.indexInList.getter()
{
  return *(void *)(v0 + 64);
}

uint64_t MedicationListItem.__allocating_init(viewData:healthStore:)(uint64_t *a1, void *a2)
{
  uint64_t v4 = swift_allocObject();
  MedicationListItem.init(viewData:healthStore:)(a1, a2);
  return v4;
}

void *MedicationListItem.init(viewData:healthStore:)(uint64_t *a1, void *a2)
{
  uint64_t v4 = *a1;
  uint64_t v5 = a1[1];
  type metadata accessor for MedicationListItemCell();
  sub_1C20BD7E8(&qword_1EBF0C4D8, 255, (void (*)(uint64_t))type metadata accessor for MedicationListItemCell);
  v2[9] = sub_1C21481D0();
  v2[10] = v6;
  v2[2] = v4;
  v2[3] = v5;
  v2[4] = a2;
  sub_1C2148E10();
  id v7 = a2;
  sub_1C2148E00();
  uint64_t v8 = sub_1C2148DA0();
  swift_release();
  v2[5] = v8;
  v2[7] = MEMORY[0x1E4FBC860];
  v2[8] = 0;
  sub_1C2148E00();
  uint64_t v9 = sub_1C2148DC0();
  swift_release();

  v2[6] = v9;
  return v2;
}

uint64_t MedicationListItem.__allocating_init(itemRepresentable:indexInList:accessories:healthStore:)(uint64_t *a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v8 = swift_allocObject();
  MedicationListItem.init(itemRepresentable:indexInList:accessories:healthStore:)(a1, a2, a3, a4);
  return v8;
}

void *MedicationListItem.init(itemRepresentable:indexInList:accessories:healthStore:)(uint64_t *a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v8 = *a1;
  uint64_t v9 = a1[1];
  type metadata accessor for MedicationListItemCell();
  sub_1C20BD7E8(&qword_1EBF0C4D8, 255, (void (*)(uint64_t))type metadata accessor for MedicationListItemCell);
  v4[9] = sub_1C21481D0();
  v4[10] = v10;
  v4[4] = a4;
  sub_1C2148E10();
  id v11 = a4;
  sub_1C2148E00();
  uint64_t v12 = sub_1C2148DA0();
  swift_release();
  v4[5] = v12;
  v4[2] = v8;
  v4[3] = v9;
  v4[7] = a3;
  v4[8] = a2;
  sub_1C2148E00();
  uint64_t v13 = sub_1C2148DC0();
  swift_release();

  v4[6] = v13;
  return v4;
}

uint64_t MedicationListItem.reuseIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 72);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MedicationListItem.uniqueIdentifier.getter()
{
  uint64_t v2 = *(void *)(v0 + 72);
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  MedicationListViewData.id.getter();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t MedicationListItem.deinit()
{
  uint64_t v1 = *(void **)(v0 + 24);

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t MedicationListItem.__deallocating_deinit()
{
  uint64_t v1 = *(void **)(v0 + 24);

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_1C20BD110()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 72);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1C20BD144()
{
  uint64_t v2 = *(void *)(*(void *)v0 + 72);
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  MedicationListViewData.id.getter();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  return v2;
}

id sub_1C20BD1B0@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void **)(*(void *)v1 + 24);
  id v5 = *(id *)(*(void *)v1 + 16);
  *a1 = v5;
  a1[1] = v2;
  id v3 = v2;

  return v5;
}

id sub_1C20BD1F4()
{
  uint64_t v1 = *v0;
  swift_beginAccess();
  uint64_t v2 = *(void **)(v1 + 32);

  return v2;
}

void *sub_1C20BD244@<X0>(uint64_t *a1@<X0>, void *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = swift_allocObject();
  double result = MedicationListItem.init(viewData:healthStore:)(a1, a2);
  *a3 = v6;
  return result;
}

uint64_t MedicationListItem.hash(into:)()
{
  MedicationListViewData.id.getter();
  sub_1C214A690();

  return swift_bridgeObjectRelease();
}

uint64_t MedicationListItem.hashValue.getter()
{
  return sub_1C214BB80();
}

uint64_t sub_1C20BD368()
{
  return sub_1C214BB80();
}

uint64_t sub_1C20BD3D4()
{
  MedicationListViewData.id.getter();
  sub_1C214A690();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1C20BD43C()
{
  return sub_1C214BB80();
}

uint64_t sub_1C20BD4A4(uint64_t *a1, uint64_t *a2)
{
  return _s19HealthMedicationsUI18MedicationListItemC2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

Swift::Void __swiftcall MedicationListItem.didSelectCell(_:in:)(UIView *_, UIViewController *in)
{
}

void sub_1C20BD4B8(uint64_t a1, void *a2)
{
}

uint64_t sub_1C20BD4E0(uint64_t a1, void *a2)
{
  if (a2)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s19HealthMedicationsUI18MedicationCellItemV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v15 = *(void *)(a1 + 24);
  uint64_t v16 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 40);
  uint64_t v3 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(a1 + 56);
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  uint64_t v8 = *(void *)(a2 + 32);
  uint64_t v9 = *(void *)(a2 + 40);
  uint64_t v10 = *(void *)(a2 + 48);
  uint64_t v11 = *(void *)(a2 + 56);
  if ((sub_1C20BA78C(*(unsigned char *)a1, *(unsigned char *)a2) & 1) == 0) {
    return 0;
  }
  sub_1C1F12718(0, (unint64_t *)&qword_1EA2C4AA0);
  if ((sub_1C214B220() & 1) == 0) {
    return 0;
  }
  if (v16 == v6 && v15 == v7 || (char v12 = sub_1C214BA80(), result = 0, (v12 & 1) != 0))
  {
    if (v4)
    {
      if (!v9) {
        return 0;
      }
      if (v2 != v8 || v4 != v9)
      {
        char v14 = sub_1C214BA80();
        uint64_t result = 0;
        if ((v14 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v9)
    {
      return 0;
    }
    if (v5)
    {
      if (v11 && (v3 == v10 && v5 == v11 || (sub_1C214BA80() & 1) != 0)) {
        return 1;
      }
    }
    else if (!v11)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

unint64_t sub_1C20BD6C8()
{
  unint64_t result = qword_1EBF0C838;
  if (!qword_1EBF0C838)
  {
    sub_1C1F12718(255, &qword_1EBF0C828);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBF0C838);
  }
  return result;
}

uint64_t _s19HealthMedicationsUI22MedicationListViewDataV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)(a1 + 8);
  uint64_t v3 = *(void **)(a2 + 8);
  sub_1C1F12718(0, (unint64_t *)&qword_1EA2C4AA0);
  if (sub_1C214B220())
  {
    if (v2)
    {
      if (v3)
      {
        sub_1C1F12718(0, &qword_1EBF0C828);
        id v4 = v3;
        id v5 = v2;
        char v6 = sub_1C214B220();

        if (v6) {
          return 1;
        }
      }
    }
    else if (!v3)
    {
      return 1;
    }
  }
  return 0;
}

uint64_t sub_1C20BD7E8(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t _s19HealthMedicationsUI18MedicationListItemC2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C21492D0();
  uint64_t v63 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v60 = &v57[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1C1FDC3C0();
  id v62 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v65 = &v57[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1C20BE704(0, (unint64_t *)&qword_1EBF0B690, MEMORY[0x1E4F66C80], MEMORY[0x1E4FBB718]);
  uint64_t v9 = MEMORY[0x1F4188790](v8 - 8);
  uint64_t v61 = &v57[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  uint64_t v13 = &v57[-v12];
  MEMORY[0x1F4188790](v11);
  uint64_t v15 = &v57[-v14];
  uint64_t v16 = *(void **)(a1 + 16);
  unint64_t v66 = *(void *)(a1 + 24);
  id v67 = v16;
  unint64_t v68 = v66;
  uint64_t v17 = MedicationListViewData.id.getter();
  uint64_t v19 = v18;
  uint64_t v20 = *(void **)(a2 + 16);
  unint64_t v21 = *(void *)(a2 + 24);
  id v67 = v20;
  unint64_t v68 = v21;
  uint64_t v22 = MedicationListViewData.id.getter();
  uint64_t v64 = v4;
  if (v17 == v22 && v19 == v23)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v24 = sub_1C214BA80();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v25 = 0;
    if ((v24 & 1) == 0) {
      return v25 & 1;
    }
  }
  id v67 = v16;
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8C0);
  uint64_t v26 = sub_1C2149490();
  uint64_t v28 = v27;
  id v67 = v20;
  if (v26 == sub_1C2149490() && v28 == v29)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v30 = sub_1C214BA80();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v25 = 0;
    if ((v30 & 1) == 0) {
      return v25 & 1;
    }
  }
  uint64_t v31 = (void *)v66;
  id v67 = v16;
  unint64_t v68 = v66;
  id v32 = MedicationListViewData.items.getter();
  id v67 = v20;
  unint64_t v68 = v21;
  unint64_t v33 = MedicationListViewData.items.getter();
  char v34 = sub_1C1FC12D0((uint64_t)v32, (uint64_t)v33);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v34 & 1) == 0) {
    goto LABEL_16;
  }
  long long v35 = v31;
  id v36 = v16;
  _sSo29HKMedicationUserDomainConceptC19HealthMedicationsUIE7medmoji0eF10Experience29MedicationVisualizationConfigVSgvg_0();

  id v37 = (id)v21;
  id v38 = v20;
  _sSo29HKMedicationUserDomainConceptC19HealthMedicationsUIE7medmoji0eF10Experience29MedicationVisualizationConfigVSgvg_0();
  id v59 = v37;

  uint64_t v39 = v65;
  uint64_t v40 = (uint64_t)&v65[v62[12]];
  sub_1C1F64A60((uint64_t)v15, (uint64_t)v65);
  sub_1C1F64A60((uint64_t)v13, v40);
  uint64_t v41 = v63;
  uint64_t v42 = v64;
  uint64_t v43 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v63 + 48);
  if (v43((uint64_t)v39, 1, v64) != 1)
  {
    id v62 = v35;
    unint64_t v47 = v61;
    sub_1C1F64A60((uint64_t)v39, (uint64_t)v61);
    if (v43(v40, 1, v42) == 1)
    {
      uint64_t v48 = v41;
      id v49 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F66C80];
      sub_1C20BE814((uint64_t)v13, (unint64_t *)&qword_1EBF0B690, MEMORY[0x1E4F66C80]);
      sub_1C20BE814((uint64_t)v15, (unint64_t *)&qword_1EBF0B690, v49);
      (*(void (**)(unsigned char *, uint64_t))(v48 + 8))(v47, v42);
      goto LABEL_15;
    }
    uint64_t v51 = v60;
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v41 + 32))(v60, v40, v42);
    sub_1C20BD7E8(&qword_1EA2C4BE8, 255, MEMORY[0x1E4F66C80]);
    int v58 = sub_1C214A5A0();
    uint64_t v52 = *(void (**)(unsigned char *, uint64_t))(v41 + 8);
    v52(v51, v42);
    uint64_t v53 = v42;
    uint64_t v54 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F66C80];
    sub_1C20BE814((uint64_t)v13, (unint64_t *)&qword_1EBF0B690, MEMORY[0x1E4F66C80]);
    sub_1C20BE814((uint64_t)v15, (unint64_t *)&qword_1EBF0B690, v54);
    v52(v47, v53);
    sub_1C20BE814((uint64_t)v39, (unint64_t *)&qword_1EBF0B690, v54);
    long long v35 = v62;
    if (v58) {
      goto LABEL_19;
    }
LABEL_16:
    char v25 = 0;
    return v25 & 1;
  }
  uint64_t v44 = v42;
  id v45 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F66C80];
  sub_1C20BE814((uint64_t)v13, (unint64_t *)&qword_1EBF0B690, MEMORY[0x1E4F66C80]);
  sub_1C20BE814((uint64_t)v15, (unint64_t *)&qword_1EBF0B690, v45);
  uint64_t v46 = v44;
  uint64_t v39 = v65;
  if (v43(v40, 1, v46) != 1)
  {
LABEL_15:
    sub_1C20BE768((uint64_t)v39);
    goto LABEL_16;
  }
  sub_1C20BE814((uint64_t)v39, (unint64_t *)&qword_1EBF0B690, MEMORY[0x1E4F66C80]);
LABEL_19:
  char v25 = (v66 | v21) == 0;
  if (v66 && v21)
  {
    sub_1C1F12718(0, &qword_1EBF0C828);
    id v55 = v59;
    id v56 = v35;
    char v25 = sub_1C214B220();
  }
  return v25 & 1;
}

void sub_1C20BDE8C(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = (void *)v1[2];
  swift_beginAccess();
  uint64_t v5 = (void *)v1[4];
  swift_beginAccess();
  uint64_t v6 = v1[6];
  objc_allocWithZone((Class)type metadata accessor for MedicationConceptDetailViewController());
  id v7 = v4;
  id v8 = v5;
  swift_retain();
  uint64_t v9 = MedicationConceptDetailViewController.init(medication:healthStore:listManager:provenance:)(v7, v8, v6);
  objc_msgSend(a1, sel_showViewController_sender_, v9, v2);
}

unint64_t sub_1C20BDF60()
{
  unint64_t result = qword_1EA2C6AF8;
  if (!qword_1EA2C6AF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C6AF8);
  }
  return result;
}

unint64_t sub_1C20BDFB8()
{
  unint64_t result = qword_1EA2C6B00;
  if (!qword_1EA2C6B00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C6B00);
  }
  return result;
}

uint64_t sub_1C20BE00C(uint64_t a1, uint64_t a2)
{
  return sub_1C20BD7E8(&qword_1EBF0C4B0, a2, (void (*)(uint64_t))type metadata accessor for MedicationListItem);
}

uint64_t type metadata accessor for MedicationListItem()
{
  return self;
}

uint64_t sub_1C20BE078(uint64_t a1, uint64_t a2)
{
  return sub_1C20BD7E8(&qword_1EBF0C4B8, a2, (void (*)(uint64_t))type metadata accessor for MedicationListItem);
}

uint64_t sub_1C20BE0C0(uint64_t a1, uint64_t a2)
{
  return sub_1C20BD7E8(&qword_1EBF0C4C0, a2, (void (*)(uint64_t))type metadata accessor for MedicationListItem);
}

uint64_t destroy for MedicationCellItem(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for MedicationCellItem(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void **)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 4sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  id v7 = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for MedicationCellItem(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  uint64_t v5 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v4;
  id v6 = v4;

  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 4sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for MedicationCellItem(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);

  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 4sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for MedicationCellItem()
{
  return &type metadata for MedicationCellItem;
}

void *initializeBufferWithCopyOfBuffer for MedicationListViewData(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  id v5 = v3;
  id v6 = v4;
  return a1;
}

void destroy for MedicationListViewData(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 8);
}

uint64_t assignWithCopy for MedicationListViewData(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  uint64_t v7 = *(void **)(a1 + 8);
  id v8 = *(void **)(a2 + 8);
  *(void *)(a1 + 8) = v8;
  id v9 = v8;

  return a1;
}

uint64_t assignWithTake for MedicationListViewData(uint64_t a1, _OWORD *a2)
{
  uint64_t v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *a2;

  return a1;
}

uint64_t getEnumTagSinglePayload for MedicationListViewData(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MedicationListViewData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MedicationListViewData()
{
  return &type metadata for MedicationListViewData;
}

uint64_t method lookup function for MedicationListItem(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MedicationListItem);
}

uint64_t dispatch thunk of MedicationListItem.__allocating_init(viewData:healthStore:)()
{
  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t dispatch thunk of MedicationListItem.__allocating_init(itemRepresentable:indexInList:accessories:healthStore:)()
{
  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t getEnumTagSinglePayload for MedicationCellItem.ItemKind(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for MedicationCellItem.ItemKind(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, 0, 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C20BE628);
      case 4:
        *(_DWORD *)(result + sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, 0, 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, 0, 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, 0, 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MedicationCellItem.ItemKind()
{
  return &type metadata for MedicationCellItem.ItemKind;
}

unint64_t sub_1C20BE664()
{
  unint64_t result = qword_1EA2C6B08;
  if (!qword_1EA2C6B08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C6B08);
  }
  return result;
}

uint64_t sub_1C20BE6B8()
{
  unint64_t v0 = sub_1C214B9B0();
  swift_bridgeObjectRelease();
  if (v0 >= 4) {
    return 4;
  }
  else {
    return v0;
  }
}

void sub_1C20BE704(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C20BE768(uint64_t a1)
{
  sub_1C1FDC3C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1C20BE7C4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void, ValueMetadata *))
{
  if (!*a2)
  {
    unint64_t v4 = a3(0, &type metadata for MedicationCellItem);
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1C20BE814(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1C20BE704(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

id InteractionFactorsInfoViewController.__allocating_init()()
{
  v2.receiver = objc_allocWithZone(v0);
  v2.super_class = v0;
  return objc_msgSendSuper2(&v2, sel_initWithCollectionViewLayout_, 0);
}

id InteractionFactorsInfoViewController.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for InteractionFactorsInfoViewController();
  return objc_msgSendSuper2(&v2, sel_initWithCollectionViewLayout_, 0);
}

uint64_t type metadata accessor for InteractionFactorsInfoViewController()
{
  uint64_t result = qword_1EA2C6B18;
  if (!qword_1EA2C6B18) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1C20BE954()
{
}

id sub_1C20BE9B0()
{
  uint64_t v1 = type metadata accessor for InteractionFactorsInfoDataSourceProvider();
  uint64_t v2 = swift_allocObject();
  uint64_t v10 = v1;
  unint64_t v11 = sub_1C20BEB6C();
  uint64_t v9 = v2;
  sub_1C2148AF0();
  if (qword_1EBF0CA00 != -1) {
    swift_once();
  }
  id v3 = (id)qword_1EBF0CA18;
  swift_bridgeObjectRetain();
  sub_1C2147730();
  swift_bridgeObjectRelease();

  uint64_t v4 = (void *)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_setTitle_, v4, 0xE000000000000000);

  id v5 = objc_msgSend(v0, sel_navigationItem);
  id v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB14A8]), sel_initWithBarButtonSystemItem_target_action_, 0, v0, sel_doneButtonTapped_);
  objc_msgSend(v5, sel_setRightBarButtonItem_, v6);

  v8.receiver = v0;
  v8.super_class = (Class)type metadata accessor for InteractionFactorsInfoViewController();
  return objc_msgSendSuper2(&v8, sel_viewDidLoad);
}

unint64_t sub_1C20BEB6C()
{
  unint64_t result = qword_1EA2C6B10;
  if (!qword_1EA2C6B10)
  {
    type metadata accessor for InteractionFactorsInfoDataSourceProvider();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C6B10);
  }
  return result;
}

void sub_1C20BEBC4(void *a1)
{
  id v1 = a1;
  sub_1C20BE9B0();
}

void sub_1C20BEC0C(void *a1)
{
  uint64_t v2 = (void *)sub_1C2147D40();
  objc_msgSend(a1, sel_deselectItemAtIndexPath_animated_, v2, 1);

  id v3 = (void *)sub_1C2147D40();
  id v4 = objc_msgSend(a1, sel_cellForItemAtIndexPath_, v3);

  if (v4)
  {
    sub_1C2148AB0();
    sub_1C2148820();
    sub_1C2148380();
    swift_release();
    sub_1C1F236D8((uint64_t)v11, (uint64_t)v8);
    sub_1C1F248B4(0, (unint64_t *)&qword_1EBF0C2F0);
    sub_1C1F248B4(0, &qword_1EA2C37A0);
    if (swift_dynamicCast())
    {
      id v5 = v6;
LABEL_6:
      sub_1C1F31280(v5, (uint64_t)v10);
      __swift_project_boxed_opaque_existential_0(v10, v10[3]);
      sub_1C2148470();

      __swift_destroy_boxed_opaque_existential_0((uint64_t)v11);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v10);
      return;
    }
    uint64_t v7 = 0;
    memset(v6, 0, sizeof(v6));
    sub_1C1F4FA9C((uint64_t)v6, (unint64_t *)&qword_1EA2C6A10, &qword_1EA2C37A0);
    *(void *)&v6[0] = v4;
    sub_1C1F983BC();
    id v4 = v4;
    if (swift_dynamicCast())
    {
      id v5 = v8;
      goto LABEL_6;
    }
    uint64_t v9 = 0;
    memset(v8, 0, sizeof(v8));

    __swift_destroy_boxed_opaque_existential_0((uint64_t)v11);
    sub_1C1F4FA9C((uint64_t)v8, (unint64_t *)&qword_1EA2C6A10, &qword_1EA2C37A0);
  }
}

uint64_t sub_1C20BEE30(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5 = sub_1C2147D90();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  objc_super v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2147D50();
  id v9 = a3;
  id v10 = a1;
  sub_1C20BEC0C(v9);

  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1C20BEF2C(void *a1)
{
  swift_unknownObjectRetain();
  id v2 = a1;
  sub_1C214B5A0();
  swift_unknownObjectRelease();
  objc_msgSend(v2, sel_dismissViewControllerAnimated_completion_, 1, 0);

  return __swift_destroy_boxed_opaque_existential_0((uint64_t)&v4);
}

void InteractionFactorsInfoViewController.__allocating_init(dataSource:)()
{
}

void InteractionFactorsInfoViewController.init(dataSource:)()
{
}

id InteractionFactorsInfoViewController.__allocating_init(collectionViewLayout:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCollectionViewLayout_, a1);

  return v3;
}

void InteractionFactorsInfoViewController.init(collectionViewLayout:)()
{
}

void sub_1C20BF074(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = a3;
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id InteractionFactorsInfoViewController.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for InteractionFactorsInfoViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1C20BF0E0()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for InteractionFactorsInfoViewController(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for InteractionFactorsInfoViewController);
}

uint64_t dispatch thunk of InteractionFactorsInfoViewController.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + class metadata base offset for InteractionFactorsInfoViewController))();
}

uint64_t sub_1C20BF154()
{
  return type metadata accessor for InteractionFactorsInfoViewController();
}

uint64_t NetworkStateObserver.$connectionState.getter()
{
  return swift_endAccess();
}

BOOL static NetworkStateObserver.ConnectionStatus.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t NetworkStateObserver.ConnectionStatus.hash(into:)()
{
  return sub_1C214BB40();
}

uint64_t NetworkStateObserver.ConnectionStatus.hashValue.getter()
{
  return sub_1C214BB80();
}

uint64_t NetworkStateObserver.connectionState.getter()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1C2149F80();
  swift_release();

  return swift_release();
}

uint64_t sub_1C20BF2D8@<X0>(unsigned char *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1C2149F80();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1C20BF35C()
{
  return sub_1C2149F90();
}

uint64_t sub_1C20BF3D4()
{
  return swift_endAccess();
}

uint64_t sub_1C20BF454(uint64_t a1)
{
  sub_1C20BFC04(0, &qword_1EA2C2EC8, MEMORY[0x1E4F1AC60]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](v2);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  id v9 = (char *)&v12 - v8;
  id v10 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v10((char *)&v12 - v8, a1, v3);
  v10(v7, (uint64_t)v9, v3);
  swift_beginAccess();
  sub_1C20BFC04(0, &qword_1EA2C2F00, MEMORY[0x1E4F1AC70]);
  sub_1C2149F60();
  swift_endAccess();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v9, v3);
}

uint64_t sub_1C20BF5F8()
{
  uint64_t v0 = sub_1C214A190();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = MEMORY[0x1F4188790](v0);
  uint64_t v4 = &v11[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v2);
  uint64_t v6 = &v11[-v5];
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1C214A1A0();
    (*(void (**)(unsigned char *, void, uint64_t))(v1 + 104))(v4, *MEMORY[0x1E4F38B20], v0);
    char v8 = sub_1C214A180();
    id v9 = *(void (**)(unsigned char *, uint64_t))(v1 + 8);
    v9(v6, v0);
    v9(v4, v0);
    if (v8) {
      char v10 = 1;
    }
    else {
      char v10 = 2;
    }
    swift_getKeyPath();
    swift_getKeyPath();
    v11[7] = v10;
    return sub_1C2149F90();
  }
  return result;
}

uint64_t NetworkStateObserver.deinit()
{
  uint64_t v1 = v0;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1C2149F90();
  swift_retain();
  sub_1C214A150();
  swift_release();
  uint64_t v2 = v0 + OBJC_IVAR____TtC19HealthMedicationsUI20NetworkStateObserver__connectionState;
  sub_1C20BFC04(0, &qword_1EA2C2F00, MEMORY[0x1E4F1AC70]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  swift_release();
  return v1;
}

uint64_t NetworkStateObserver.__deallocating_deinit()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1C2149F90();
  swift_retain();
  sub_1C214A150();
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC19HealthMedicationsUI20NetworkStateObserver__connectionState;
  sub_1C20BFC04(0, &qword_1EA2C2F00, MEMORY[0x1E4F1AC70]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1C20BF9DC()
{
  return type metadata accessor for NetworkStateObserver();
}

uint64_t type metadata accessor for NetworkStateObserver()
{
  uint64_t result = qword_1EA2C6B38;
  if (!qword_1EA2C6B38) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1C20BFA30()
{
  sub_1C20BFC04(319, &qword_1EA2C2F00, MEMORY[0x1E4F1AC70]);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for NetworkStateObserver(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for NetworkStateObserver);
}

unsigned char *storeEnumTagSinglePayload for NetworkStateObserver.ConnectionStatus(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, 0, 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C20BFBCCLL);
      case 4:
        *(_DWORD *)(result + sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, 0, 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, 0, 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, 0, 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NetworkStateObserver.ConnectionStatus()
{
  return &type metadata for NetworkStateObserver.ConnectionStatus;
}

void sub_1C20BFC04(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void, ValueMetadata *))
{
  if (!*a2)
  {
    unint64_t v4 = a3(0, &type metadata for NetworkStateObserver.ConnectionStatus);
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t dispatch thunk of ListContentConfigurationProvider.makeListContentConfiguration()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_1C20BFC68(int a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (v2)
  {
    int v3 = (unsigned __int8 *)(a2 + 32);
    while (1)
    {
      unsigned int v5 = *v3++;
      unsigned int v4 = v5;
      switch(v5 >> 5)
      {
        case 1u:
          BOOL v6 = (v4 & 1) == 0;
          if ((a1 & 0xE0) != 0x20) {
            goto LABEL_4;
          }
          goto LABEL_9;
        case 2u:
          if (v4 == 64)
          {
            if (a1 == 64) {
              return 1;
            }
          }
          else if (a1 == 65)
          {
            return 1;
          }
          goto LABEL_4;
        case 3u:
          if (v4 == 96)
          {
            if (a1 == 96) {
              return 1;
            }
          }
          else if (a1 == 97)
          {
            return 1;
          }
          goto LABEL_4;
        case 4u:
          if (v4 == 128)
          {
            if (a1 == 128) {
              return 1;
            }
          }
          else if (a1 == 129)
          {
            return 1;
          }
LABEL_4:
          if (!--v2) {
            return 0;
          }
          break;
        case 5u:
          if (a1 != 160) {
            goto LABEL_4;
          }
          return 1;
        default:
          BOOL v6 = (v4 & 1) == 0;
          if (a1 > 0x1Fu) {
            goto LABEL_4;
          }
LABEL_9:
          if ((a1 ^ v6)) {
            return 1;
          }
          goto LABEL_4;
      }
    }
  }
  return 0;
}

uint64_t sub_1C20BFD8C(uint64_t a1, unint64_t a2)
{
  return sub_1C20BFF70(a1, a2, (uint64_t)&qword_1EBF0C8F0);
}

uint64_t sub_1C20BFDA0(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 0;
  }
  if (*(void *)(a2 + 32) == result) {
    return 1;
  }
  if (v2 == 1) {
    return 0;
  }
  for (uint64_t i = 5; ; ++i)
  {
    uint64_t v4 = i - 3;
    if (__OFADD__(i - 4, 1)) {
      break;
    }
    BOOL v6 = *(void *)(a2 + 8 * i) == result;
    BOOL v5 = v6;
    BOOL v6 = v6 || v4 == v2;
    if (v6) {
      return v5;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1C20BFE04(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 0;
  }
  uint64_t v3 = sub_1C214A5F0();
  uint64_t v5 = v4;
  if (v3 == sub_1C214A5F0() && v5 == v6)
  {
LABEL_20:
    swift_bridgeObjectRelease_n();
    return 1;
  }
  char v8 = sub_1C214BA80();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (v8)
  {
LABEL_7:
    swift_bridgeObjectRelease();
    return 1;
  }
  if (v2 == 1)
  {
LABEL_17:
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v10 = 5;
  while (1)
  {
    uint64_t v11 = v10 - 3;
    if (__OFADD__(v10 - 4, 1)) {
      break;
    }
    uint64_t v12 = sub_1C214A5F0();
    uint64_t v14 = v13;
    if (v12 == sub_1C214A5F0() && v14 == v15)
    {
      swift_bridgeObjectRelease();
      goto LABEL_20;
    }
    char v17 = sub_1C214BA80();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    if (v17) {
      goto LABEL_7;
    }
    ++v10;
    if (v11 == v2) {
      goto LABEL_17;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1C20BFF5C(uint64_t a1, unint64_t a2)
{
  return sub_1C20BFF70(a1, a2, (uint64_t)&qword_1EA2C3DE0);
}

uint64_t sub_1C20BFF70(uint64_t a1, unint64_t a2, uint64_t a3)
{
  if (a2 >> 62) {
    goto LABEL_20;
  }
  uint64_t v5 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v5; uint64_t v5 = sub_1C214B930())
  {
    unint64_t v6 = a2 & 0xC000000000000001;
    if ((a2 & 0xC000000000000001) == 0)
    {
      id v7 = *(id *)(a2 + 32);
      goto LABEL_5;
    }
    while (1)
    {
      id v7 = (id)MEMORY[0x1C8753960](0, a2);
LABEL_5:
      char v8 = v7;
      sub_1C1F12718(0, (unint64_t *)a3);
      a3 = sub_1C214B220();

      if (a3)
      {
LABEL_6:
        swift_bridgeObjectRelease();
        return 1;
      }
      if (v5 == 1) {
        goto LABEL_18;
      }
      if (v6) {
        break;
      }
      unint64_t v6 = 5;
      while (1)
      {
        unint64_t v12 = v6 - 3;
        if (__OFADD__(v6 - 4, 1)) {
          break;
        }
        a3 = (uint64_t)*(id *)(a2 + 8 * v6);
        char v13 = sub_1C214B220();

        if (v13) {
          goto LABEL_6;
        }
        ++v6;
        if (v12 == v5) {
          goto LABEL_18;
        }
      }
      __break(1u);
    }
    a3 = 1;
    while (1)
    {
      MEMORY[0x1C8753960](a3, a2);
      uint64_t v10 = a3 + 1;
      if (__OFADD__(a3, 1)) {
        break;
      }
      char v11 = sub_1C214B220();
      swift_unknownObjectRelease();
      if (v11) {
        goto LABEL_6;
      }
      ++a3;
      if (v10 == v5) {
        goto LABEL_18;
      }
    }
    __break(1u);
LABEL_20:
    swift_bridgeObjectRetain();
  }
LABEL_18:
  swift_bridgeObjectRelease();
  return 0;
}

BOOL sub_1C20C00F8(BOOL result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 0;
  }
  int v3 = result;
  if (*(unsigned char *)(a2 + 32) == result) {
    return 1;
  }
  if (v2 == 1) {
    return 0;
  }
  for (uint64_t i = 33; ; ++i)
  {
    uint64_t v5 = i - 31;
    if (__OFADD__(i - 32, 1)) {
      break;
    }
    int v6 = *(unsigned __int8 *)(a2 + i);
    uint64_t result = v6 == v3;
    if (v6 == v3 || v5 == v2) {
      return result;
    }
  }
  __break(1u);
  return result;
}

void ListConceptManager.toggleMedicationPinState(for:onCommitHandler:)(void *a1)
{
  uint64_t v2 = v1;
  sub_1C2030CB4();
  MEMORY[0x1F4188790](v4 - 8);
  int v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2149700();
  unint64_t v7 = sub_1C2149740();
  char v8 = sub_1C20BFF70((uint64_t)a1, v7, (uint64_t)&unk_1EA2C3DE0);
  swift_bridgeObjectRelease();
  if ((v8 & 1) == 0)
  {
    uint64_t v9 = sub_1C214A8C0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v6, 1, 1, v9);
    uint64_t v10 = (void *)swift_allocObject();
    void v10[2] = 0;
    v10[3] = 0;
    void v10[4] = v2;
    v10[5] = a1;
    swift_retain();
    id v11 = a1;
    sub_1C1F86288((uint64_t)v6, (uint64_t)&unk_1EA2C6B50, (uint64_t)v10);
    swift_release();
    id v12 = objc_msgSend(self, sel_sharedInstance);
    objc_msgSend(v12, sel_removeMedication_, v11);
  }
}

uint64_t sub_1C20C02FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 16) = a5;
  return MEMORY[0x1F4188298](sub_1C20C031C, 0, 0);
}

uint64_t sub_1C20C031C()
{
  id v1 = objc_msgSend(*(id *)(v0 + 16), sel_semanticIdentifier);
  id v2 = objc_msgSend(v1, sel_stringValue);

  uint64_t v3 = sub_1C214A5F0();
  uint64_t v5 = v4;

  *(void *)(v0 + 24) = v5;
  int v6 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v6;
  *int v6 = v0;
  v6[1] = sub_1C20C0408;
  return sub_1C20C0BB0(v3, v5);
}

uint64_t sub_1C20C0408()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  id v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1C20C0518()
{
  swift_unknownObjectRelease();
  swift_release();

  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1C20C0560()
{
  uint64_t v2 = *(void *)(v0 + 40);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1C1F40400;
  v3[2] = v2;
  return MEMORY[0x1F4188298](sub_1C20C031C, 0, 0);
}

uint64_t ListConceptManager.toggleMedicationPinState(for:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return MEMORY[0x1F4188298](sub_1C20C0628, 0, 0);
}

uint64_t sub_1C20C0628()
{
  uint64_t v1 = (int8x16_t *)swift_task_alloc();
  v0[2].i64[0] = (uint64_t)v1;
  v1[1] = vextq_s8(v0[1], v0[1], 8uLL);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[2].i64[1] = (uint64_t)v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1C20C0720;
  uint64_t v3 = MEMORY[0x1E4FBB390];
  return MEMORY[0x1F41880D8](&v0[3], 0, 0, 0xD00000000000001ELL, 0x80000001C216A0A0, sub_1C20C0A38, v1, v3);
}

uint64_t sub_1C20C0720()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1C20C0838, 0, 0);
}

uint64_t sub_1C20C0838()
{
  return (*(uint64_t (**)(void))(v0 + 8))(*(unsigned __int8 *)(v0 + 48));
}

uint64_t sub_1C20C0850(uint64_t a1, uint64_t a2, void *a3)
{
  v16[1] = a2;
  sub_1C20C0A40();
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = sub_1C2149750();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  id v12 = (char *)v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6);
  unint64_t v13 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v14 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v14 + v13, (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  ListConceptManager.toggleMedicationPinState(for:onCommitHandler:)(a3);
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_1C20C0A38(uint64_t a1)
{
  return sub_1C20C0850(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

void sub_1C20C0A40()
{
  if (!qword_1EA2C6B60)
  {
    unint64_t v0 = sub_1C214A860();
    if (!v1) {
      atomic_store(v0, &qword_1EA2C6B60);
    }
  }
}

uint64_t sub_1C20C0AA8()
{
  sub_1C20C0A40();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x1F4186498](v0, v5, v6);
}

uint64_t sub_1C20C0B38()
{
  return sub_1C214A850();
}

uint64_t sub_1C20C0BB0(uint64_t a1, uint64_t a2)
{
  v2[32] = a1;
  v2[33] = a2;
  uint64_t v3 = sub_1C21497F0();
  v2[34] = v3;
  v2[35] = *(void *)(v3 - 8);
  v2[36] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C20C0C70, 0, 0);
}

uint64_t sub_1C20C0C70()
{
  id v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F2B0B8]), sel_init);
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F66B38]), sel_initWithHealthStore_, v1);
  v0[37] = v2;

  uint64_t v3 = sub_1C214A5B0();
  v0[38] = v3;
  v0[2] = v0;
  v0[7] = v0 + 28;
  v0[3] = sub_1C20C0DDC;
  uint64_t v4 = swift_continuation_init();
  v0[23] = MEMORY[0x1E4F143A8];
  v0[24] = 0x40000000;
  v0[25] = sub_1C1F54B18;
  v0[26] = &block_descriptor_1;
  v0[27] = v4;
  objc_msgSend(v2, sel_fetchScheduleWithMedicationIdentifier_completion_, v3, v0 + 23);
  return MEMORY[0x1F41881E8](v0 + 2);
}

uint64_t sub_1C20C0DDC()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 312) = v1;
  if (v1) {
    id v2 = sub_1C20C11C0;
  }
  else {
    id v2 = sub_1C20C0EEC;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C20C0EEC()
{
  uint64_t v1 = *(void *)(v0 + 224);
  id v2 = *(void **)(v0 + 304);
  *(void *)(v0 + 32sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = v1;

  if (v1)
  {
    uint64_t v3 = *(void **)(v0 + 296);
    *(void *)(v0 + 8sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = v0;
    *(void *)(v0 + 88) = sub_1C20C1040;
    uint64_t v4 = swift_continuation_init();
    *(void *)(v0 + 144) = MEMORY[0x1E4F143A8];
    *(void *)(v0 + 152) = 0x40000000;
    *(void *)(v0 + 16sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = sub_1C20B073C;
    *(void *)(v0 + 168) = &block_descriptor_7;
    *(void *)(v0 + 176) = v4;
    objc_msgSend(v3, sel_deleteSchedule_completion_, v1, v0 + 144);
    return MEMORY[0x1F41881E8](v0 + 80);
  }
  else
  {

    swift_task_dealloc();
    uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
    return v5();
  }
}

uint64_t sub_1C20C1040()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 112);
  *(void *)(*(void *)v0 + 328) = v1;
  if (v1) {
    id v2 = sub_1C20C147C;
  }
  else {
    id v2 = sub_1C20C1150;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C20C1150()
{
  uint64_t v1 = *(void **)(v0 + 320);

  swift_task_dealloc();
  id v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1C20C11C0()
{
  uint64_t v24 = v0;
  uint64_t v1 = *(void **)(v0 + 304);
  swift_willThrow();

  id v2 = *(void **)(v0 + 312);
  sub_1C21497A0();
  swift_bridgeObjectRetain();
  id v3 = v2;
  swift_bridgeObjectRetain();
  id v4 = v2;
  uint64_t v5 = sub_1C21497E0();
  os_log_type_t v6 = sub_1C214ABD0();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v19 = *(void **)(v0 + 296);
    uint64_t v20 = *(void *)(v0 + 280);
    unint64_t v7 = *(void *)(v0 + 264);
    uint64_t v21 = *(void *)(v0 + 272);
    uint64_t v22 = *(void *)(v0 + 288);
    uint64_t v8 = *(void *)(v0 + 256);
    uint64_t v9 = swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    v23[0] = v10;
    *(_DWORD *)uint64_t v9 = 136446466;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 24sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = sub_1C1F6FD54(v8, v7, v23);
    sub_1C214B530();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v9 + 12) = 2082;
    *(void *)(v0 + 248) = v2;
    id v11 = v2;
    sub_1C1F35A5C();
    uint64_t v12 = sub_1C214A630();
    *(void *)(v0 + 232) = sub_1C1F6FD54(v12, v13, v23);
    sub_1C214B530();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1C1F0B000, v5, v6, "Could not delete schedule after archiving medication %{public}s error %{public}s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C8754730](v10, -1, -1);
    MEMORY[0x1C8754730](v9, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v22, v21);
  }
  else
  {
    uint64_t v14 = *(void *)(v0 + 288);
    uint64_t v15 = *(void *)(v0 + 272);
    uint64_t v16 = *(void *)(v0 + 280);

    swift_bridgeObjectRelease_n();
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v14, v15);
  }
  swift_task_dealloc();
  char v17 = *(uint64_t (**)(void))(v0 + 8);
  return v17();
}

uint64_t sub_1C20C147C()
{
  uint64_t v24 = v0;
  uint64_t v1 = *(void **)(v0 + 320);
  swift_willThrow();

  id v2 = *(void **)(v0 + 328);
  sub_1C21497A0();
  swift_bridgeObjectRetain();
  id v3 = v2;
  swift_bridgeObjectRetain();
  id v4 = v2;
  uint64_t v5 = sub_1C21497E0();
  os_log_type_t v6 = sub_1C214ABD0();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v19 = *(void **)(v0 + 296);
    uint64_t v20 = *(void *)(v0 + 280);
    unint64_t v7 = *(void *)(v0 + 264);
    uint64_t v21 = *(void *)(v0 + 272);
    uint64_t v22 = *(void *)(v0 + 288);
    uint64_t v8 = *(void *)(v0 + 256);
    uint64_t v9 = swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    v23[0] = v10;
    *(_DWORD *)uint64_t v9 = 136446466;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 24sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = sub_1C1F6FD54(v8, v7, v23);
    sub_1C214B530();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v9 + 12) = 2082;
    *(void *)(v0 + 248) = v2;
    id v11 = v2;
    sub_1C1F35A5C();
    uint64_t v12 = sub_1C214A630();
    *(void *)(v0 + 232) = sub_1C1F6FD54(v12, v13, v23);
    sub_1C214B530();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1C1F0B000, v5, v6, "Could not delete schedule after archiving medication %{public}s error %{public}s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C8754730](v10, -1, -1);
    MEMORY[0x1C8754730](v9, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v22, v21);
  }
  else
  {
    uint64_t v14 = *(void *)(v0 + 288);
    uint64_t v15 = *(void *)(v0 + 272);
    uint64_t v16 = *(void *)(v0 + 280);

    swift_bridgeObjectRelease_n();
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v14, v15);
  }
  swift_task_dealloc();
  char v17 = *(uint64_t (**)(void))(v0 + 8);
  return v17();
}

id sub_1C20C1738()
{
  return sub_1C20C1760(&qword_1EA2C6B80, (Class *)0x1E4F2B688);
}

id sub_1C20C174C()
{
  return sub_1C20C1760(&qword_1EA2C6B88, (Class *)0x1E4F66AE8);
}

id sub_1C20C1760(uint64_t *a1, Class *a2)
{
  uint64_t v3 = *a1;
  id v4 = *(void **)(v2 + *a1);
  if (v4)
  {
    id v5 = *(id *)(v2 + *a1);
  }
  else
  {
    id v6 = objc_msgSend(objc_allocWithZone(*a2), sel_initWithHealthStore_, *(void *)(v2 + qword_1EA2C6BA8));
    unint64_t v7 = *(void **)(v2 + v3);
    *(void *)(v2 + v3) = v6;
    id v5 = v6;

    id v4 = 0;
  }
  id v8 = v4;
  return v5;
}

uint64_t OptionsDataSource.__allocating_init(with:listManager:healthStore:analyticsManager:)(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  return OptionsDataSource.init(with:listManager:healthStore:analyticsManager:)(a1, a2, a3, a4);
}

uint64_t OptionsDataSource.init(with:listManager:healthStore:analyticsManager:)(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  swift_retain();
  sub_1C21497A0();
  uint64_t v9 = (void *)(v4 + qword_1EA2C6B78);
  *uint64_t v9 = 0xD000000000000020;
  v9[1] = 0x80000001C216A0C0;
  *(void *)(v4 + qword_1EA2C6B8sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = 0;
  *(void *)(v4 + qword_1EA2C6B88) = 0;
  *(void *)(v4 + qword_1EA2C6B9sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = 0;
  *(void *)(v4 + qword_1EA2C6B98) = a2;
  *(void *)(v4 + qword_1EA2C6BAsub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = a1;
  *(void *)(v4 + qword_1EA2C6BA8) = a3;
  *(void *)(v4 + qword_1EA2C6BBsub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = a4;
  swift_retain();
  swift_retain();
  id v10 = a3;
  swift_retain();
  swift_release();
  sub_1C20C6810(0, (unint64_t *)&qword_1EA2C2DD0, MEMORY[0x1E4F66468], MEMORY[0x1E4FBBE00]);
  sub_1C2148540();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1C2150000;
  sub_1C2148520();
  sub_1C2148520();
  sub_1C2148520();
  uint64_t v11 = sub_1C2147F50();
  swift_retain();
  sub_1C20C1ACC();
  sub_1C20C1D2C();
  swift_release();
  swift_release();
  swift_release();

  swift_release();
  return v11;
}

uint64_t sub_1C20C1ACC()
{
  sub_1C2147F40();
  sub_1C21482F0();
  swift_release();
  uint64_t v0 = sub_1C20C264C();
  sub_1C1F37EA4(v0);
  swift_bridgeObjectRelease();
  sub_1C21485C0();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1C2147F40();
  sub_1C21482F0();
  swift_release();
  sub_1C20C669C(0, (unint64_t *)&qword_1EBF0C958, (unint64_t *)&qword_1EBF0C2F0, MEMORY[0x1E4F66028], MEMORY[0x1E4FBBE00]);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1C214FCD0;
  unint64_t v2 = sub_1C2149710();
  sub_1C2149E90();
  sub_1C20BFF5C((uint64_t)v9, v2);
  swift_bridgeObjectRelease();

  uint64_t v3 = sub_1C21487B0();
  *(void *)(v1 + 56) = v3;
  uint64_t v4 = sub_1C20C6FA0((unint64_t *)&qword_1EA2C2E68, MEMORY[0x1E4F66510]);
  *(void *)(v1 + 64) = v4;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v1 + 32));
  sub_1C20C350C((uint64_t)boxed_opaque_existential_1);
  sub_1C21485C0();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1C2147F40();
  sub_1C21482F0();
  swift_release();
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1C214FCD0;
  *(void *)(v6 + 56) = v3;
  *(void *)(v6 + 64) = v4;
  unint64_t v7 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v6 + 32));
  sub_1C20C3BC0((uint64_t)v7);
  sub_1C21485C0();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C20C1D2C()
{
  sub_1C20C6810(0, &qword_1EBF0C7E8, MEMORY[0x1E4FBCC28], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v1 - 8);
  id v45 = (char *)&v34 - v2;
  sub_1C20C69C4();
  uint64_t v35 = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C20C6C48();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v36 = v7;
  uint64_t v37 = v8;
  MEMORY[0x1F4188790](v7);
  id v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C20C6D9C();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v38 = v11;
  uint64_t v39 = v12;
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C20C6E38();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v41 = v15;
  uint64_t v42 = v16;
  MEMORY[0x1F4188790](v15);
  uint64_t v18 = (char *)&v34 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C20C6ECC();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v43 = v19;
  uint64_t v44 = v20;
  MEMORY[0x1F4188790](v19);
  uint64_t v40 = (char *)&v34 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v47 = *(id *)(v0 + qword_1EA2C6BA0);
  sub_1C1F0ED28();
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_1C214E170;
  swift_retain();
  sub_1C2149E90();
  uint64_t v46 = v22;
  sub_1C214A7A0();
  sub_1C1F4986C();
  sub_1C20C6FA0(&qword_1EA2C35A0, (void (*)(uint64_t))sub_1C1F4986C);
  sub_1C214A090();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v23 = v0;
  id v47 = (id)sub_1C2149730();
  sub_1C20C6D34();
  sub_1C20C6FA0(&qword_1EA2C6C00, (void (*)(uint64_t))sub_1C20C69C4);
  sub_1C20C6FA0((unint64_t *)&qword_1EBF0C688, (void (*)(uint64_t))sub_1C20C6D34);
  uint64_t v24 = v35;
  sub_1C214A010();
  swift_release();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v24);
  sub_1C20C6FA0(&qword_1EA2C6C10, (void (*)(uint64_t))sub_1C20C6C48);
  uint64_t v25 = v36;
  sub_1C214A020();
  (*(void (**)(char *, uint64_t))(v37 + 8))(v10, v25);
  sub_1C20C6FA0(&qword_1EA2C6C20, (void (*)(uint64_t))sub_1C20C6D9C);
  uint64_t v26 = v38;
  sub_1C214A0D0();
  (*(void (**)(char *, uint64_t))(v39 + 8))(v14, v26);
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0CB10);
  id v47 = (id)sub_1C214AD80();
  uint64_t v27 = sub_1C214AD20();
  uint64_t v28 = (uint64_t)v45;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v45, 1, 1, v27);
  sub_1C20C6FA0(&qword_1EA2C6C30, (void (*)(uint64_t))sub_1C20C6E38);
  sub_1C1F43FD4();
  char v30 = v40;
  uint64_t v29 = v41;
  sub_1C214A0A0();
  sub_1C1F441C8(v28);

  (*(void (**)(char *, uint64_t))(v42 + 8))(v18, v29);
  swift_allocObject();
  swift_weakInit();
  sub_1C20C6FA0(&qword_1EA2C6C38, (void (*)(uint64_t))sub_1C20C6ECC);
  uint64_t v31 = v43;
  uint64_t v32 = sub_1C214A0F0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v44 + 8))(v30, v31);
  *(void *)(v23 + qword_1EA2C6B9sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = v32;
  return swift_release();
}

uint64_t sub_1C20C2480@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  sub_1C20C6FE8();
  unint64_t v4 = sub_1C2149740();
  char v5 = sub_1C20BFF5C(v3, v4);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v5 & 1;
  return result;
}

uint64_t sub_1C20C24E8()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    swift_retain();
    sub_1C2147F40();
    swift_release();
    sub_1C21482F0();
    swift_release();
    sub_1C20C669C(0, (unint64_t *)&qword_1EBF0C958, (unint64_t *)&qword_1EBF0C2F0, MEMORY[0x1E4F66028], MEMORY[0x1E4FBBE00]);
    uint64_t v1 = swift_allocObject();
    *(_OWORD *)(v1 + 16) = xmmword_1C214FCD0;
    *(void *)(v1 + 56) = sub_1C21487B0();
    *(void *)(v1 + 64) = sub_1C20C6FA0((unint64_t *)&qword_1EA2C2E68, MEMORY[0x1E4F66510]);
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v1 + 32));
    sub_1C20C350C((uint64_t)boxed_opaque_existential_1);
    sub_1C21485C0();
    swift_release();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C20C264C()
{
  uint64_t v107 = sub_1C2148A70();
  uint64_t v98 = *(void *)(v107 - 8);
  MEMORY[0x1F4188790](v107);
  uint64_t v106 = (char *)&v61 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v1 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C20C6810(0, &qword_1EBF0C620, MEMORY[0x1E4FB0F28], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v2 - 8);
  unint64_t v92 = (char *)&v61 - v3;
  uint64_t v105 = sub_1C2148620();
  uint64_t v109 = *(void *)(v105 - 8);
  MEMORY[0x1F4188790](v105);
  uint64_t v94 = (char *)&v61 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C20C6810(0, &qword_1EBF0C610, MEMORY[0x1E4FB0E38], v1);
  MEMORY[0x1F4188790](v5 - 8);
  unint64_t v102 = (char *)&v61 - v6;
  uint64_t v103 = sub_1C21498E0();
  uint64_t v108 = *(void *)(v103 - 8);
  MEMORY[0x1F4188790](v103);
  uint64_t v93 = (char *)&v61 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v101 = sub_1C2149860();
  uint64_t v8 = *(void *)(v101 - 8);
  MEMORY[0x1F4188790](v101);
  id v10 = (char *)&v61 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1C21487B0();
  uint64_t v96 = *(void *)(v11 - 8);
  uint64_t v97 = v11;
  uint64_t v12 = MEMORY[0x1F4188790](v11);
  unint64_t v95 = (char *)&v61 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v104 = (char *)&v61 - v14;
  uint64_t v15 = sub_1C2149BE0();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v18 = (char *)&v61 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2149BD0();
  if (qword_1EBF0CA00 != -1) {
    swift_once();
  }
  id v19 = (id)qword_1EBF0CA18;
  swift_bridgeObjectRetain();
  sub_1C2147730();
  swift_bridgeObjectRelease();

  sub_1C2149B90();
  uint64_t v114 = v15;
  uint64_t v115 = MEMORY[0x1E4FB0F88];
  uint64_t v20 = __swift_allocate_boxed_opaque_existential_1(&v112);
  uint64_t v21 = *(void (**)(uint64_t *, char *, uint64_t))(v16 + 16);
  uint64_t v88 = v16 + 16;
  uint64_t v89 = v21;
  v21(v20, v18, v15);
  uint64_t v90 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
  sub_1C20C6810(0, (unint64_t *)&unk_1EBF0C990, MEMORY[0x1E4FB0E68], MEMORY[0x1E4FBBE00]);
  uint64_t v87 = v22;
  uint64_t v23 = *(void *)(sub_1C2149930() - 8);
  uint64_t v24 = *(unsigned __int8 *)(v23 + 80);
  uint64_t v86 = ((v24 + 32) & ~v24) + *(void *)(v23 + 72);
  uint64_t v84 = (v24 + 32) & ~v24;
  uint64_t v85 = v24 | 7;
  uint64_t v25 = swift_allocObject();
  uint64_t v99 = v15;
  long long v83 = xmmword_1C214FCD0;
  unint64_t v64 = v25;
  *(_OWORD *)(v25 + 16) = xmmword_1C214FCD0;
  unsigned int v82 = *MEMORY[0x1E4FB0E18];
  uint64_t v91 = v16;
  uint64_t v26 = *(void (**)(void))(v8 + 104);
  uint64_t v80 = v8 + 104;
  uint64_t v81 = (void (*)(char *, void, uint64_t))v26;
  uint64_t v27 = v101;
  v26(v10);
  uint64_t v78 = sub_1C2149870();
  uint64_t v28 = *(void *)(v78 - 8);
  uint64_t v77 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v28 + 56);
  uint64_t v79 = v28 + 56;
  v77(v102, 1, 1, v78);
  uint64_t v29 = v93;
  sub_1C21498D0();
  sub_1C21498A0();
  char v30 = *(void (**)(char *, uint64_t))(v108 + 8);
  v108 += 8;
  uint64_t v76 = v30;
  v30(v29, v103);
  uint64_t v31 = *(void (**)(char *, uint64_t))(v8 + 8);
  uint64_t v74 = v8 + 8;
  uint64_t v75 = v31;
  v31(v10, v27);
  uint64_t v32 = swift_allocObject();
  uint64_t v33 = v100;
  swift_weakInit();
  uint64_t v34 = *(void *)(v33 + qword_1EA2C6BA0);
  uint64_t v35 = swift_allocObject();
  *(void *)(v35 + 16) = v32;
  *(void *)(v35 + 24) = v34;
  uint64_t v65 = v34;
  uint64_t v36 = v94;
  *uint64_t v94 = 1;
  unsigned int v73 = *MEMORY[0x1E4F66478];
  id v62 = v18;
  uint64_t v37 = *(void (**)(void))(v109 + 104);
  v109 += 104;
  uint64_t v72 = (void (*)(unsigned char *, void, uint64_t))v37;
  v37(v36);
  uint64_t v70 = sub_1C21499D0();
  uint64_t v38 = *(void *)(v70 - 8);
  uint64_t v69 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v38 + 56);
  uint64_t v71 = v38 + 56;
  uint64_t v39 = v92;
  v69(v92, 1, 1, v70);
  uint64_t v40 = *(void *)(v33 + qword_1EA2C6B78 + 8);
  uint64_t v68 = *(void *)(v33 + qword_1EA2C6B78);
  uint64_t v66 = v40;
  uint64_t v110 = v68;
  uint64_t v111 = v40;
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  unsigned int v67 = *MEMORY[0x1E4F66678];
  uint64_t v98 = *(void *)(v98 + 104);
  ((void (*)(void))v98)();
  swift_retain();
  uint64_t v41 = v36;
  uint64_t v42 = v39;
  sub_1C21487A0();
  id v43 = (id)qword_1EBF0CA18;
  swift_bridgeObjectRetain();
  sub_1C2147730();
  swift_bridgeObjectRelease();

  uint64_t v44 = v62;
  sub_1C2149B90();
  uint64_t v112 = 0;
  unint64_t v113 = 0xE000000000000000;
  sub_1C214B7C0();
  swift_bridgeObjectRelease();
  uint64_t v112 = 0xD000000000000010;
  unint64_t v113 = 0x80000001C216A380;
  id v45 = v44;
  sub_1C2149B80();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  uint64_t v63 = v112;
  unint64_t v64 = v113;
  uint64_t v46 = v99;
  uint64_t v114 = v99;
  uint64_t v115 = MEMORY[0x1E4FB0F88];
  id v47 = __swift_allocate_boxed_opaque_existential_1(&v112);
  v89(v47, v44, v46);
  *(_OWORD *)(swift_allocObject() + 16) = v83;
  uint64_t v48 = v101;
  v81(v10, v82, v101);
  v77(v102, 1, 1, v78);
  sub_1C21498D0();
  sub_1C21498A0();
  v76(v29, v103);
  v75(v10, v48);
  uint64_t v49 = swift_allocObject();
  swift_weakInit();
  uint64_t v50 = swift_allocObject();
  uint64_t v51 = v65;
  *(void *)(v50 + 16) = v49;
  *(void *)(v50 + 24) = v51;
  *uint64_t v41 = 1;
  v72(v41, v73, v105);
  v69(v42, 1, 1, v70);
  uint64_t v110 = v68;
  uint64_t v111 = v66;
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  ((void (*)(char *, void, uint64_t))v98)(v106, v67, v107);
  swift_retain();
  uint64_t v52 = v95;
  sub_1C21487A0();
  sub_1C20C6810(0, &qword_1EA2C3BD8, MEMORY[0x1E4F66510], v90);
  uint64_t v53 = v96;
  uint64_t v54 = *(void *)(v96 + 72);
  unint64_t v55 = (*(unsigned __int8 *)(v96 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v96 + 80);
  uint64_t v56 = swift_allocObject();
  *(_OWORD *)(v56 + 16) = xmmword_1C214FCC0;
  unint64_t v57 = v56 + v55;
  int v58 = v104;
  uint64_t v59 = v97;
  (*(void (**)(unint64_t, char *, uint64_t))(v53 + 16))(v57, v104, v97);
  (*(void (**)(unint64_t, char *, uint64_t))(v53 + 32))(v57 + v54, v52, v59);
  (*(void (**)(char *, uint64_t))(v53 + 8))(v58, v59);
  (*(void (**)(char *, uint64_t))(v91 + 8))(v45, v99);
  return v56;
}

void sub_1C20C3438(void *a1)
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v3 = Strong;
    sub_1C2149E90();
    uint64_t v4 = *(void **)(v3 + qword_1EA2C6BA8);
    id v5 = objc_allocWithZone((Class)type metadata accessor for MedicationSourceListViewController());
    id v6 = v4;
    id v7 = v9;
    id v8 = sub_1C1FE4B1C(v6, v7);
    objc_msgSend(a1, sel_showAdaptively_sender_, v8, a1);

    swift_release();
  }
}

uint64_t sub_1C20C350C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v34 = a1;
  uint64_t v1 = sub_1C2148A70();
  uint64_t v31 = *(void *)(v1 - 8);
  uint64_t v32 = v1;
  MEMORY[0x1F4188790](v1);
  uint64_t v33 = (char *)&v26 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C20C6810(0, &qword_1EBF0C620, MEMORY[0x1E4FB0F28], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v29 = (char *)&v26 - v4;
  uint64_t v5 = sub_1C2148620();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v28 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1C2149BE0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2149BD0();
  id v12 = objc_msgSend(self, sel_tintColor);
  uint64_t v13 = (void (*)(uint64_t *, void))sub_1C2149AA0();
  sub_1C2149A60();
  v13(v37, 0);
  if (qword_1EBF0CA00 != -1) {
    swift_once();
  }
  id v14 = (id)qword_1EBF0CA18;
  swift_bridgeObjectRetain();
  sub_1C2147730();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  sub_1C2149B90();
  uint64_t v15 = v8;
  v37[3] = v8;
  unsigned char v37[4] = MEMORY[0x1E4FB0F88];
  uint64_t v27 = v8;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v37);
  uint64_t v17 = v9;
  (*(void (**)(uint64_t *, char *, uint64_t))(v9 + 16))(boxed_opaque_existential_1, v11, v15);
  uint64_t v18 = swift_allocObject();
  uint64_t v19 = v30;
  swift_weakInit();
  uint64_t v20 = *(void *)(v19 + qword_1EA2C6BA0);
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = v18;
  *(void *)(v21 + 24) = v20;
  uint64_t v22 = v28;
  *uint64_t v28 = 1;
  (*(void (**)(unsigned char *, void, uint64_t))(v6 + 104))(v22, *MEMORY[0x1E4F66478], v5);
  uint64_t v23 = sub_1C21499D0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v29, 1, 1, v23);
  uint64_t v24 = *(void *)(v19 + qword_1EA2C6B78 + 8);
  uint64_t v35 = *(void *)(v19 + qword_1EA2C6B78);
  uint64_t v36 = v24;
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  (*(void (**)(char *, void, uint64_t))(v31 + 104))(v33, *MEMORY[0x1E4F66678], v32);
  swift_retain();
  swift_retain();
  sub_1C21487A0();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v11, v27);
  return swift_release();
}

void sub_1C20C3A7C(void *a1)
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v3 = Strong;
    sub_1C2149E90();
    if (sub_1C2149720())
    {
      uint64_t v4 = *(void *)(v3 + qword_1EA2C6BB0);
      uint64_t v5 = (void *)swift_allocObject();
      uint64_t v5[2] = v4;
      v5[3] = v3;
      v5[4] = v8;
      swift_retain();
      swift_retain();
      id v6 = v8;
      id v7 = _sSo17UIAlertControllerC19HealthMedicationsUIE31makeAlertForArchivingMedication9onConfirm0K6CancelAByyc_yycSgtFZ_0((uint64_t)sub_1C20C68FC, (uint64_t)v5, 0, 0);
      swift_release();
      objc_msgSend(a1, sel_presentViewController_animated_completion_, v7, 1, 0);

      swift_release();
    }
    else
    {
      sub_1C20C5554(v8);

      swift_release();
    }
  }
}

uint64_t sub_1C20C3BC0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v30 = a1;
  uint64_t v1 = sub_1C2148A70();
  uint64_t v27 = *(void *)(v1 - 8);
  uint64_t v28 = v1;
  MEMORY[0x1F4188790](v1);
  uint64_t v29 = (char *)&v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C20C6810(0, &qword_1EBF0C620, MEMORY[0x1E4FB0F28], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v25 = (char *)&v24 - v4;
  uint64_t v5 = sub_1C2148620();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1C2149BE0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  id v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2149BD0();
  id v13 = objc_msgSend(self, sel_systemRedColor);
  id v14 = (void (*)(uint64_t *, void))sub_1C2149AA0();
  sub_1C2149A60();
  v14(v33, 0);
  if (qword_1EBF0CA00 != -1) {
    swift_once();
  }
  id v15 = (id)qword_1EBF0CA18;
  swift_bridgeObjectRetain();
  sub_1C2147730();
  swift_bridgeObjectRelease();

  sub_1C2149B90();
  uint64_t v33[3] = v9;
  v33[4] = MEMORY[0x1E4FB0F88];
  uint64_t v24 = v9;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v33);
  (*(void (**)(uint64_t *, char *, uint64_t))(v10 + 16))(boxed_opaque_existential_1, v12, v9);
  uint64_t v17 = swift_allocObject();
  uint64_t v18 = v26;
  swift_weakInit();
  uint64_t v19 = *(void *)(v18 + qword_1EA2C6BA0);
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = v17;
  *(void *)(v20 + 24) = v19;
  *uint64_t v8 = 1;
  (*(void (**)(unsigned char *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E4F66478], v5);
  uint64_t v21 = sub_1C21499D0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v25, 1, 1, v21);
  uint64_t v22 = *(void *)(v18 + qword_1EA2C6B78 + 8);
  uint64_t v31 = *(void *)(v18 + qword_1EA2C6B78);
  uint64_t v32 = v22;
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  (*(void (**)(char *, void, uint64_t))(v27 + 104))(v29, *MEMORY[0x1E4F66678], v28);
  swift_retain();
  swift_retain();
  sub_1C21487A0();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v24);
  return swift_release();
}

uint64_t sub_1C20C40F0(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void *, uint64_t))
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1C2149E90();
    a4(v7, a1);

    return swift_release();
  }
  return result;
}

uint64_t sub_1C20C4184(uint64_t a1)
{
  uint64_t v2 = sub_1C2148710();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  uint64_t v6 = &v14[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = &v14[-v7];
  if (a1) {
    sub_1C2148690();
  }
  else {
    sub_1C2148660();
  }
  uint64_t v9 = (void (*)(unsigned char *, void))sub_1C21486D0();
  *(void *)(v10 + 16) = 0x4024000000000000;
  v9(v14, 0);
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v3 + 16))(v6, v8, v2);
  uint64_t v11 = sub_1C2148700();
  id v12 = *(void (**)(unsigned char *, uint64_t))(v3 + 8);
  v12(v6, v2);
  v12(v8, v2);
  return v11;
}

void sub_1C20C4304(void *a1, void *a2)
{
  id v5 = objc_msgSend(self, sel_sharedInstanceForHealthStore_, *(void *)(v2 + qword_1EA2C6BA8));
  id v6 = objc_msgSend(v5, sel_profile);

  id v7 = objc_msgSend(v6, sel_displayTypeController);
  if (v7)
  {
    uint64_t v8 = v7;
    sub_1C1F12718(0, (unint64_t *)&qword_1EA2C6BD0);
    id v9 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_medicationDoseEventTypeForIdentifier_, *MEMORY[0x1E4F2A040]);
    id v10 = objc_msgSend(v8, sel_displayTypeForObjectType_, v9);

    if (v10)
    {
      uint64_t v11 = (objc_class *)type metadata accessor for MedicationListAllDataProvider();
      id v12 = (char *)objc_allocWithZone(v11);
      uint64_t v13 = OBJC_IVAR____TtC19HealthMedicationsUI29MedicationListAllDataProvider_predicate;
      *(void *)&v12[OBJC_IVAR____TtC19HealthMedicationsUI29MedicationListAllDataProvider_predicate] = 0;
      *(void *)&v12[OBJC_IVAR____TtC19HealthMedicationsUI29MedicationListAllDataProvider_medication] = a1;
      id v14 = *(void **)&v12[v13];
      *(void *)&v12[v13] = 0;
      id v15 = a1;
      id v16 = v10;
      id v17 = v6;

      v20.receiver = v12;
      v20.super_class = v11;
      id v18 = objc_msgSendSuper2(&v20, sel_initWithDisplayType_profile_, v16, v17);

      id v19 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F67890]), sel_initWithDisplayType_profile_dataProvider_usingInsetStyling_, v16, v17, v18, 1);
      objc_msgSend(a2, sel_showAdaptively_sender_, v19, a2);

      return;
    }
  }
  else
  {
    __break(1u);
  }
  sub_1C214B7C0();
  sub_1C214BC10();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  sub_1C214A6C0();
  sub_1C214B910();
  __break(1u);
}

void sub_1C20C45C4(void *a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v26 = *v2;
  if (qword_1EBF0CA00 != -1) {
    swift_once();
  }
  id v5 = (void *)qword_1EBF0CA18;
  sub_1C20C669C(0, qword_1EBF0B8A0, (unint64_t *)&qword_1EBF0C9F0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1C214FCD0;
  uint64_t aBlock = a1;
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8C0);
  id v7 = v5;
  swift_bridgeObjectRetain();
  uint64_t v8 = sub_1C2149490();
  uint64_t v10 = v9;
  *(void *)(v6 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v6 + 64) = sub_1C1F31298();
  *(void *)(v6 + 32) = v8;
  *(void *)(v6 + 4sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = v10;
  sub_1C2147730();
  if (*(void *)(v6 + 16))
  {
    sub_1C214A5C0();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  id v11 = (id)qword_1EBF0CA18;
  swift_bridgeObjectRetain();
  sub_1C2147730();
  swift_bridgeObjectRelease();

  id v12 = (void *)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  uint64_t v13 = (void *)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  id v14 = objc_msgSend(self, sel_alertControllerWithTitle_message_preferredStyle_, v12, v13, 1, 0xE000000000000000);

  id v15 = (id)qword_1EBF0CA18;
  swift_bridgeObjectRetain();
  sub_1C2147730();
  swift_bridgeObjectRelease();

  id v16 = (void *)swift_allocObject();
  void v16[2] = a1;
  v16[3] = v3;
  v16[4] = a2;
  v16[5] = v26;
  id v17 = a1;
  swift_retain();
  id v28 = a2;
  id v18 = (void *)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  uint64_t v33 = sub_1C20C674C;
  uint64_t v34 = v16;
  uint64_t aBlock = (void *)MEMORY[0x1E4F143A8];
  uint64_t v30 = 1107296256;
  uint64_t v31 = sub_1C203D9F8;
  uint64_t v32 = &block_descriptor_9_0;
  id v19 = _Block_copy(&aBlock);
  swift_release();
  objc_super v20 = self;
  id v21 = objc_msgSend(v20, sel_actionWithTitle_style_handler_, v18, 2, v19, 0xE000000000000000);
  _Block_release(v19);

  objc_msgSend(v14, sel_addAction_, v21);
  id v22 = (id)qword_1EBF0CA18;
  swift_bridgeObjectRetain();
  sub_1C2147730();
  swift_bridgeObjectRelease();

  uint64_t v23 = (void *)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  uint64_t v33 = (void (*)(uint64_t))nullsub_1;
  uint64_t v34 = 0;
  uint64_t aBlock = (void *)MEMORY[0x1E4F143A8];
  uint64_t v30 = 1107296256;
  uint64_t v31 = sub_1C203D9F8;
  uint64_t v32 = &block_descriptor_12_0;
  uint64_t v24 = _Block_copy(&aBlock);
  swift_release();
  id v25 = objc_msgSend(v20, sel_actionWithTitle_style_handler_, v23, 1, v24, 0xE000000000000000);
  _Block_release(v24);

  objc_msgSend(v14, sel_addAction_, v25);
  objc_msgSend(v28, sel_presentViewController_animated_completion_, v14, 1, 0);
}

void sub_1C20C4B6C(uint64_t a1, void *a2, uint64_t a3, void *a4, uint64_t a5)
{
  uint64_t v9 = sub_1C21497F0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  id v12 = (char *)v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C21497D0();
  id v13 = a2;
  id v14 = sub_1C21497E0();
  os_log_type_t v15 = sub_1C214ABD0();
  int v16 = v15;
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v17 = swift_slowAlloc();
    uint64_t v37 = v9;
    uint64_t v18 = v17;
    uint64_t v36 = swift_slowAlloc();
    aBlock[0] = v36;
    *(_DWORD *)uint64_t v18 = 136315394;
    uint64_t v38 = a3;
    uint64_t v19 = sub_1C214BC10();
    uint64_t v39 = a5;
    uint64_t v40 = sub_1C1F6FD54(v19, v20, aBlock);
    int v35 = v16;
    sub_1C214B530();
    swift_bridgeObjectRelease();
    *(_WORD *)(v18 + 12) = 2080;
    v34[1] = v18 + 14;
    id v21 = objc_msgSend(v13, sel_semanticIdentifier);
    id v22 = objc_msgSend(v21, sel_stringValue);

    uint64_t v23 = sub_1C214A5F0();
    unint64_t v25 = v24;

    uint64_t v26 = v23;
    a5 = v39;
    uint64_t v40 = sub_1C1F6FD54(v26, v25, aBlock);
    sub_1C214B530();

    a3 = v38;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C1F0B000, v14, (os_log_type_t)v35, "[%s] Attempting to delete medication with semantic identifier %s", (uint8_t *)v18, 0x16u);
    uint64_t v27 = v36;
    swift_arrayDestroy();
    MEMORY[0x1C8754730](v27, -1, -1);
    MEMORY[0x1C8754730](v18, -1, -1);

    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v37);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  id v28 = sub_1C20C1738();
  uint64_t v29 = *(void *)(a3 + qword_1EA2C6BB0);
  uint64_t v30 = (void *)swift_allocObject();
  v30[2] = v13;
  v30[3] = a4;
  v30[4] = v29;
  void v30[5] = a5;
  aBlock[4] = (uint64_t)sub_1C20C67A0;
  aBlock[5] = (uint64_t)v30;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1C20E218C;
  aBlock[3] = (uint64_t)&block_descriptor_18_0;
  uint64_t v31 = _Block_copy(aBlock);
  id v32 = v13;
  swift_retain();
  id v33 = a4;
  swift_release();
  objc_msgSend(v28, sel_deleteUserDomainConcept_completion_, v32, v31);
  _Block_release(v31);
}

uint64_t sub_1C20C4F00(char a1, void *a2, void *a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v24 = a6;
  uint64_t v11 = sub_1C214A3F0();
  uint64_t v27 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  id v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_1C214A420();
  uint64_t v14 = *(void *)(v26 - 8);
  MEMORY[0x1F4188790](v26);
  int v16 = (char *)&v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0CB10);
  uint64_t v25 = sub_1C214AD80();
  uint64_t v17 = swift_allocObject();
  *(unsigned char *)(v17 + 16) = a1;
  *(void *)(v17 + 24) = a3;
  *(void *)(v17 + 32) = a4;
  *(void *)(v17 + 4sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = a5;
  *(void *)(v17 + 48) = a2;
  *(void *)(v17 + 56) = v24;
  aBlock[4] = sub_1C20C67FC;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C1F0E42C;
  aBlock[3] = &block_descriptor_24_0;
  uint64_t v18 = _Block_copy(aBlock);
  id v19 = a3;
  id v20 = a4;
  swift_retain();
  id v21 = a2;
  swift_release();
  sub_1C214A410();
  aBlock[0] = MEMORY[0x1E4FBC860];
  sub_1C20C6FA0((unint64_t *)&qword_1EBF0CAE0, MEMORY[0x1E4FBCB00]);
  sub_1C20C6810(0, (unint64_t *)&qword_1EBF0CAF0, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
  sub_1C1F12754();
  sub_1C214B640();
  id v22 = (void *)v25;
  MEMORY[0x1C8752F10](0, v16, v13, v18);
  _Block_release(v18);

  (*(void (**)(char *, uint64_t))(v27 + 8))(v13, v11);
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v26);
}

uint64_t sub_1C20C5224(char a1, uint64_t a2, void *a3, uint64_t a4, void *a5)
{
  uint64_t v9 = sub_1C21497F0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    id v13 = objc_msgSend(self, sel_sharedInstance);
    objc_msgSend(v13, sel_removeMedication_, a2);

    id v14 = objc_msgSend(a3, sel_navigationController);
    if (v14)
    {
      uint64_t v15 = v14;
    }
    return sub_1C2149550();
  }
  else
  {
    sub_1C21497D0();
    id v17 = a5;
    id v18 = a5;
    id v19 = sub_1C21497E0();
    os_log_type_t v20 = sub_1C214ABD0();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v21 = swift_slowAlloc();
      uint64_t v22 = swift_slowAlloc();
      uint64_t v29 = v22;
      *(_DWORD *)uint64_t v21 = 136315394;
      uint64_t v23 = sub_1C214BC10();
      uint64_t v28 = sub_1C1F6FD54(v23, v24, &v29);
      sub_1C214B530();
      swift_bridgeObjectRelease();
      *(_WORD *)(v21 + 12) = 2080;
      uint64_t v28 = (uint64_t)a5;
      id v25 = a5;
      sub_1C20C669C(0, &qword_1EA2C2EC0, (unint64_t *)&qword_1EBF0C9C0, MEMORY[0x1E4FBC0E8], MEMORY[0x1E4FBB718]);
      uint64_t v26 = sub_1C214A610();
      uint64_t v28 = sub_1C1F6FD54(v26, v27, &v29);
      sub_1C214B530();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1C1F0B000, v19, v20, "[%s] Error deleting medication %s", (uint8_t *)v21, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C8754730](v22, -1, -1);
      MEMORY[0x1C8754730](v21, -1, -1);
    }
    else
    {
    }
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
}

void sub_1C20C5554(void *a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = sub_1C2149750();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  id v7 = (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v8 = sub_1C2149720();
  ListConceptManager.toggleMedicationPinState(for:onCommitHandler:)(a1);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  if (v8)
  {
    id v9 = objc_msgSend(a1, sel_firstOntologyCoding);
    if (v9)
    {

      id v10 = sub_1C20C174C();
      uint64_t v11 = swift_allocObject();
      swift_weakInit();
      uint64_t v12 = (void *)swift_allocObject();
      void v12[2] = v11;
      v12[3] = a1;
      v12[4] = v3;
      aBlock[4] = sub_1C20C6690;
      aBlock[5] = v12;
      aBlock[0] = MEMORY[0x1E4F143A8];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1C20E218C;
      aBlock[3] = &block_descriptor_25;
      id v13 = _Block_copy(aBlock);
      id v14 = a1;
      swift_release();
      objc_msgSend(v10, sel_deleteDismissedPregnancyLactationInteractionsForMedication_interactionTypes_completion_, v14, 0, v13);
      _Block_release(v13);
    }
  }
}

uint64_t sub_1C20C578C(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  uint64_t v6 = sub_1C21497F0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  id v10 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v43 - v11;
  if (a2)
  {
    swift_beginAccess();
    uint64_t result = swift_weakLoadStrong();
    if (result)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, result + qword_1EA2C6B70, v6);
      swift_release();
      id v14 = a4;
      id v15 = a2;
      id v16 = v14;
      id v17 = a2;
      id v18 = sub_1C21497E0();
      os_log_type_t v19 = sub_1C214ABD0();
      if (os_log_type_enabled(v18, v19))
      {
        uint64_t v20 = swift_slowAlloc();
        uint64_t v44 = (void *)swift_slowAlloc();
        uint64_t v45 = swift_slowAlloc();
        uint64_t v49 = v45;
        *(_DWORD *)uint64_t v20 = 136315906;
        uint64_t v21 = sub_1C214BC10();
        uint64_t v47 = sub_1C1F6FD54(v21, v22, &v49);
        sub_1C214B530();
        swift_bridgeObjectRelease();
        *(_WORD *)(v20 + 12) = 2080;
        uint64_t v47 = 0xD000000000000015;
        unint64_t v48 = 0x80000001C2163A10;
        uint64_t v46 = v6;
        uint64_t v23 = sub_1C214A650();
        uint64_t v47 = sub_1C1F6FD54(v23, v24, &v49);
        sub_1C214B530();
        swift_bridgeObjectRelease();
        *(_WORD *)(v20 + 22) = 2112;
        id v25 = objc_msgSend(v16, sel_semanticIdentifier);
        uint64_t v47 = (uint64_t)v25;
        sub_1C214B530();
        uint64_t v26 = v44;
        *uint64_t v44 = v25;

        *(_WORD *)(v20 + 32) = 2080;
        uint64_t v47 = (uint64_t)a2;
        sub_1C20C669C(0, &qword_1EA2C2EC0, (unint64_t *)&qword_1EBF0C9C0, MEMORY[0x1E4FBC0E8], MEMORY[0x1E4FBB718]);
        uint64_t v27 = sub_1C214B4D0();
        uint64_t v47 = sub_1C1F6FD54(v27, v28, &v49);
        sub_1C214B530();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_1C1F0B000, v18, v19, "%s] Unexpected error deleting dismissed %s interactions for medication: %@, error: %s", (uint8_t *)v20, 0x2Au);
        sub_1C20C6B5C(0, (unint64_t *)&qword_1EA2C3178, (unint64_t *)&qword_1EA2C4AA0, 0x1E4FBA8A8, MEMORY[0x1E4FBB718]);
        swift_arrayDestroy();
        MEMORY[0x1C8754730](v26, -1, -1);
        uint64_t v29 = v45;
        swift_arrayDestroy();
        MEMORY[0x1C8754730](v29, -1, -1);
        MEMORY[0x1C8754730](v20, -1, -1);

        return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v46);
      }
      else
      {

        return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
      }
    }
  }
  else
  {
    swift_beginAccess();
    uint64_t result = swift_weakLoadStrong();
    if (result)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v12, result + qword_1EA2C6B70, v6);
      swift_release();
      id v30 = a4;
      uint64_t v31 = sub_1C21497E0();
      uint64_t v32 = v6;
      os_log_type_t v33 = sub_1C214ABF0();
      if (os_log_type_enabled(v31, v33))
      {
        uint64_t v34 = swift_slowAlloc();
        uint64_t v46 = v32;
        uint64_t v35 = v34;
        uint64_t v36 = (void *)swift_slowAlloc();
        uint64_t v45 = swift_slowAlloc();
        uint64_t v49 = v45;
        *(_DWORD *)uint64_t v35 = 136315650;
        uint64_t v37 = sub_1C214BC10();
        uint64_t v47 = sub_1C1F6FD54(v37, v38, &v49);
        sub_1C214B530();
        swift_bridgeObjectRelease();
        *(_WORD *)(v35 + 12) = 2080;
        uint64_t v47 = 0xD000000000000015;
        unint64_t v48 = 0x80000001C2163A10;
        uint64_t v39 = sub_1C214A650();
        uint64_t v47 = sub_1C1F6FD54(v39, v40, &v49);
        sub_1C214B530();
        swift_bridgeObjectRelease();
        *(_WORD *)(v35 + 22) = 2112;
        id v41 = objc_msgSend(v30, sel_semanticIdentifier);
        uint64_t v47 = (uint64_t)v41;
        sub_1C214B530();
        *uint64_t v36 = v41;

        _os_log_impl(&dword_1C1F0B000, v31, v33, "%s] Successfully deleted dismissed %s interactions for medication: %@", (uint8_t *)v35, 0x20u);
        sub_1C20C6B5C(0, (unint64_t *)&qword_1EA2C3178, (unint64_t *)&qword_1EA2C4AA0, 0x1E4FBA8A8, MEMORY[0x1E4FBB718]);
        swift_arrayDestroy();
        MEMORY[0x1C8754730](v36, -1, -1);
        uint64_t v42 = v45;
        swift_arrayDestroy();
        MEMORY[0x1C8754730](v42, -1, -1);
        MEMORY[0x1C8754730](v35, -1, -1);

        return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v12, v46);
      }
      else
      {

        return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v12, v32);
      }
    }
  }
  return result;
}

void OptionsDataSource.__allocating_init(arrangedSections:isHidden:)()
{
}

void OptionsDataSource.init(arrangedSections:isHidden:)()
{
}

uint64_t sub_1C20C5ED8()
{
  uint64_t v1 = v0 + qword_1EA2C6B70;
  uint64_t v2 = sub_1C21497F0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  swift_release();

  swift_release();
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t OptionsDataSource.deinit()
{
  uint64_t v0 = _s19HealthMedicationsUI34InteractionSeperatorLineDataSourceCfd_0();
  uint64_t v1 = v0 + qword_1EA2C6B70;
  uint64_t v2 = sub_1C21497F0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  swift_release();

  swift_release();
  swift_bridgeObjectRelease();

  swift_release();
  return v0;
}

uint64_t OptionsDataSource.__deallocating_deinit()
{
  OptionsDataSource.deinit();

  return swift_deallocClassInstance();
}

uint64_t sub_1C20C610C()
{
  return sub_1C2148B80();
}

Swift::Void __swiftcall OptionsDataSource.registerCells(for:)(UICollectionView *a1)
{
}

uint64_t sub_1C20C61B8()
{
  return sub_1C214ACC0();
}

uint64_t OptionsDataSource.supplementaryItem(ofKind:at:)@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_1C2149BE0();
  MEMORY[0x1F4188790](v2 - 8);
  if (sub_1C2147D80())
  {
    a1[3] = sub_1C2148220();
    a1[4] = sub_1C20C6FA0(&qword_1EA2C2D28, MEMORY[0x1E4F66330]);
    __swift_allocate_boxed_opaque_existential_1(a1);
    return sub_1C2148210();
  }
  else
  {
    if (qword_1EBF0CA00 != -1) {
      swift_once();
    }
    id v4 = (id)qword_1EBF0CA18;
    swift_bridgeObjectRetain();
    sub_1C2147730();
    swift_bridgeObjectRelease();

    sub_1C2149B50();
    uint64_t v5 = sub_1C2148180();
    swift_allocObject();
    uint64_t v6 = sub_1C2148170();
    a1[3] = v5;
    uint64_t result = sub_1C20C6FA0((unint64_t *)&qword_1EA2C3550, MEMORY[0x1E4F66208]);
    a1[4] = result;
    *a1 = v6;
  }
  return result;
}

uint64_t sub_1C20C6420()
{
  return sub_1C20C6FA0(&qword_1EA2C6BB8, (void (*)(uint64_t))type metadata accessor for OptionsDataSource);
}

uint64_t type metadata accessor for OptionsDataSource()
{
  uint64_t result = qword_1EA2C6BC0;
  if (!qword_1EA2C6BC0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C20C64B4@<X0>(uint64_t *a1@<X8>)
{
  return OptionsDataSource.supplementaryItem(ofKind:at:)(a1);
}

uint64_t sub_1C20C64CC()
{
  uint64_t result = sub_1C21497F0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for OptionsDataSource(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for OptionsDataSource);
}

uint64_t dispatch thunk of OptionsDataSource.__allocating_init(with:listManager:healthStore:analyticsManager:)()
{
  return (*(uint64_t (**)(void))(class metadata base offset for OptionsDataSource + v0 + 144))();
}

uint64_t dispatch thunk of OptionsDataSource.layout(for:environment:)()
{
  return (*(uint64_t (**)(void))(class metadata base offset for OptionsDataSource + *v0 + 192))();
}

uint64_t sub_1C20C6610()
{
  return type metadata accessor for OptionsDataSource();
}

uint64_t sub_1C20C6618()
{
  swift_weakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C20C6650()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1C20C6690(uint64_t a1, void *a2)
{
  return sub_1C20C578C(a1, a2, *(void *)(v2 + 16), *(void **)(v2 + 24));
}

void sub_1C20C669C(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = sub_1C1F23804(255, a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

uint64_t sub_1C20C6704()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 48, 7);
}

void sub_1C20C674C(uint64_t a1)
{
  sub_1C20C4B6C(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_1C20C6758()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1C20C67A0(char a1, void *a2)
{
  return sub_1C20C4F00(a1, a2, *(void **)(v2 + 16), *(void **)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40));
}

uint64_t sub_1C20C67AC()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 64, 7);
}

uint64_t sub_1C20C67FC()
{
  return sub_1C20C5224(*(unsigned char *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32), *(void *)(v0 + 40), *(void **)(v0 + 48));
}

void sub_1C20C6810(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C20C6878(uint64_t a1)
{
  return sub_1C20C40F0(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), (void (*)(void *, uint64_t))sub_1C20C45C4);
}

void sub_1C20C68AC(void *a1)
{
}

uint64_t sub_1C20C68B4()
{
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

void sub_1C20C68FC()
{
  uint64_t v1 = *(void **)(v0 + 32);
  sub_1C2149550();
  sub_1C20C5554(v1);
}

uint64_t sub_1C20C6948(uint64_t a1)
{
  return sub_1C20C40F0(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), (void (*)(void *, uint64_t))sub_1C20C4304);
}

uint64_t objectdestroy_27Tm()
{
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

void sub_1C20C69BC(void *a1)
{
}

void sub_1C20C69C4()
{
  if (!qword_1EA2C6BD8)
  {
    sub_1C20C6AB0();
    sub_1C1F4986C();
    sub_1C20C6FA0(&qword_1EA2C6BF0, (void (*)(uint64_t))sub_1C20C6AB0);
    sub_1C20C6FA0(&qword_1EA2C35A0, (void (*)(uint64_t))sub_1C1F4986C);
    unint64_t v0 = sub_1C2149D10();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C6BD8);
    }
  }
}

void sub_1C20C6AB0()
{
  if (!qword_1EA2C6BE0)
  {
    sub_1C20C6B5C(255, (unint64_t *)&qword_1EBF0C790, (unint64_t *)&qword_1EBF0C8C0, 0x1E4F66B80, MEMORY[0x1E4FBB320]);
    sub_1C20C6BC4();
    unint64_t v0 = sub_1C2149DC0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C6BE0);
    }
  }
}

void sub_1C20C6B5C(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = sub_1C1F12718(255, a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

unint64_t sub_1C20C6BC4()
{
  unint64_t result = qword_1EA2C6BE8;
  if (!qword_1EA2C6BE8)
  {
    sub_1C20C6B5C(255, (unint64_t *)&qword_1EBF0C790, (unint64_t *)&qword_1EBF0C8C0, 0x1E4F66B80, MEMORY[0x1E4FBB320]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C6BE8);
  }
  return result;
}

void sub_1C20C6C48()
{
  if (!qword_1EA2C6BF8)
  {
    sub_1C20C69C4();
    sub_1C20C6D34();
    sub_1C20C6FA0(&qword_1EA2C6C00, (void (*)(uint64_t))sub_1C20C69C4);
    sub_1C20C6FA0((unint64_t *)&qword_1EBF0C688, (void (*)(uint64_t))sub_1C20C6D34);
    unint64_t v0 = sub_1C2149CA0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C6BF8);
    }
  }
}

void sub_1C20C6D34()
{
  if (!qword_1EBF0C690)
  {
    sub_1C2149750();
    unint64_t v0 = sub_1C2149E10();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBF0C690);
    }
  }
}

void sub_1C20C6D9C()
{
  if (!qword_1EA2C6C08)
  {
    sub_1C20C6C48();
    sub_1C20C6FA0(&qword_1EA2C6C10, (void (*)(uint64_t))sub_1C20C6C48);
    unint64_t v0 = sub_1C2149D60();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C6C08);
    }
  }
}

void sub_1C20C6E38()
{
  if (!qword_1EA2C6C18)
  {
    sub_1C20C6D9C();
    sub_1C20C6FA0(&qword_1EA2C6C20, (void (*)(uint64_t))sub_1C20C6D9C);
    unint64_t v0 = sub_1C2149D50();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C6C18);
    }
  }
}

void sub_1C20C6ECC()
{
  if (!qword_1EA2C6C28)
  {
    sub_1C20C6E38();
    sub_1C1F12718(255, (unint64_t *)&qword_1EBF0CB10);
    sub_1C20C6FA0(&qword_1EA2C6C30, (void (*)(uint64_t))sub_1C20C6E38);
    sub_1C1F43FD4();
    unint64_t v0 = sub_1C2149DF0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C6C28);
    }
  }
}

uint64_t sub_1C20C6F98()
{
  return sub_1C20C24E8();
}

uint64_t sub_1C20C6FA0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C20C6FE8()
{
  if (!qword_1EA2C6C40)
  {
    sub_1C1F12718(255, (unint64_t *)&qword_1EBF0C8C0);
    sub_1C2149750();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA2C6C40);
    }
  }
}

void sub_1C20C7088(uint64_t a1@<X8>)
{
  id v3 = objc_msgSend(v1, sel_timeIntervals);
  sub_1C1F85EA8();
  unint64_t v4 = sub_1C214A780();

  if (!(v4 >> 62))
  {
    uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v5) {
      goto LABEL_3;
    }
LABEL_12:
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_1C214B930();
  swift_bridgeObjectRelease();
  if (!v5) {
    goto LABEL_12;
  }
LABEL_3:
  unint64_t v6 = v5 - 1;
  if (__OFSUB__(v5, 1))
  {
    __break(1u);
  }
  else if ((v4 & 0xC000000000000001) == 0)
  {
    if ((v6 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v6 < *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      id v7 = *(id *)(v4 + 8 * v6 + 32);
      goto LABEL_8;
    }
    __break(1u);
    goto LABEL_19;
  }
  id v7 = (id)MEMORY[0x1C8753960](v6, v4);
LABEL_8:
  uint64_t v8 = v7;
  swift_bridgeObjectRelease();
  id v9 = objc_msgSend(v8, sel_cycleIntervalDays);

  if (!v9)
  {
LABEL_13:
    uint64_t v11 = 0;
    char v12 = 1;
    goto LABEL_14;
  }
  uint64_t v10 = (char *)objc_msgSend(v9, sel_integerValue);

  uint64_t v11 = v10 + 1;
  if (!__OFADD__(v10, 1))
  {
    char v12 = 0;
LABEL_14:
    *(void *)a1 = v11;
    *(unsigned char *)(a1 + 8) = v12;
    return;
  }
LABEL_19:
  __break(1u);
}

uint64_t sub_1C20C71E4(char a1)
{
  uint64_t v2 = *v1;
  if ((a1 & 1) == 0)
  {
    if (v2 != 2)
    {
      if (qword_1EBF0CA00 == -1) {
        goto LABEL_14;
      }
      goto LABEL_18;
    }
    if (qword_1EBF0CA00 == -1) {
      goto LABEL_12;
    }
LABEL_17:
    swift_once();
    goto LABEL_12;
  }
  if (v2 == 2)
  {
    if (qword_1EBF0CA00 == -1)
    {
LABEL_12:
      id v3 = (id)qword_1EBF0CA18;
      swift_bridgeObjectRetain();
      uint64_t v4 = sub_1C2147730();
      swift_bridgeObjectRelease();

      return v4;
    }
    goto LABEL_17;
  }
  if (v2 == 1)
  {
    if (qword_1EBF0CA00 == -1) {
      goto LABEL_12;
    }
    goto LABEL_17;
  }
  if (qword_1EBF0CA00 != -1) {
LABEL_18:
  }
    swift_once();
LABEL_14:
  id v6 = (id)qword_1EBF0CA18;
  swift_bridgeObjectRetain();
  sub_1C2147730();
  swift_bridgeObjectRelease();

  sub_1C1FF8EAC();
  uint64_t v7 = swift_allocObject();
  uint64_t v8 = MEMORY[0x1E4FBB550];
  *(_OWORD *)(v7 + 16) = xmmword_1C214FCD0;
  uint64_t v9 = MEMORY[0x1E4FBB5C8];
  *(void *)(v7 + 56) = v8;
  *(void *)(v7 + 64) = v9;
  *(void *)(v7 + 32) = v2;
  uint64_t v10 = sub_1C214A5C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v10;
}

void static FrequencyInterval.everyOtherDay.getter(void *a1@<X8>)
{
  *a1 = 2;
}

ValueMetadata *type metadata accessor for FrequencyInterval()
{
  return &type metadata for FrequencyInterval;
}

uint64_t sub_1C20C753C()
{
  uint64_t v4 = MEMORY[0x1E4FBC860];
  sub_1C1F70504(0, 98, 0);
  uint64_t v0 = 2;
  uint64_t result = v4;
  do
  {
    uint64_t v5 = result;
    unint64_t v3 = *(void *)(result + 16);
    unint64_t v2 = *(void *)(result + 24);
    if (v3 >= v2 >> 1)
    {
      sub_1C1F70504(v2 > 1, v3 + 1, 1);
      uint64_t result = v5;
    }
    *(void *)(result + 8 * v3 + 32) = v0;
    *(void *)(result + 16) = v3 + 1;
    ++v0;
  }
  while (v0 != 100);
  return result;
}

uint64_t InteractionSeparatorLineItem.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  sub_1C2147B10();
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI28InteractionSeparatorLineItem_reuseIdentifier);
  type metadata accessor for InteractionSeparatorLineCell();
  sub_1C20C7C90(&qword_1EA2C3478, (void (*)(uint64_t))type metadata accessor for InteractionSeparatorLineCell);
  *uint64_t v1 = sub_1C21481D0();
  v1[1] = v2;
  return v0;
}

uint64_t InteractionSeparatorLineItem.reuseIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI28InteractionSeparatorLineItem_reuseIdentifier);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1C20C76C8()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI28InteractionSeparatorLineItem_reuseIdentifier);
  sub_1C2147AD0();
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t InteractionSeparatorLineItem.init()()
{
  sub_1C2147B10();
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI28InteractionSeparatorLineItem_reuseIdentifier);
  type metadata accessor for InteractionSeparatorLineCell();
  sub_1C20C7C90(&qword_1EA2C3478, (void (*)(uint64_t))type metadata accessor for InteractionSeparatorLineCell);
  *uint64_t v1 = sub_1C21481D0();
  v1[1] = v2;
  return v0;
}

uint64_t static InteractionSeparatorLineItem.== infix(_:_:)()
{
  return sub_1C2147AF0();
}

uint64_t sub_1C20C77F8()
{
  return sub_1C214A560();
}

uint64_t InteractionSeparatorLineItem.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC19HealthMedicationsUI28InteractionSeparatorLineItem_uuid;
  uint64_t v2 = sub_1C2147B20();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t InteractionSeparatorLineItem.__deallocating_deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC19HealthMedicationsUI28InteractionSeparatorLineItem_uuid;
  uint64_t v2 = sub_1C2147B20();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_1C20C79D8()
{
  return sub_1C214BB80();
}

uint64_t sub_1C20C7A84()
{
  uint64_t v1 = *(void *)(*v0 + OBJC_IVAR____TtC19HealthMedicationsUI28InteractionSeparatorLineItem_reuseIdentifier);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1C20C7AC4()
{
  uint64_t v1 = *(void *)(*v0 + OBJC_IVAR____TtC19HealthMedicationsUI28InteractionSeparatorLineItem_reuseIdentifier);
  sub_1C2147AD0();
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1C20C7B4C()
{
  return sub_1C2147AF0();
}

uint64_t sub_1C20C7B68()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 120))();
}

uint64_t sub_1C20C7BAC()
{
  return sub_1C214A560();
}

uint64_t sub_1C20C7C48()
{
  return sub_1C20C7C90(&qword_1EA2C6C48, (void (*)(uint64_t))type metadata accessor for InteractionSeparatorLineItem);
}

uint64_t sub_1C20C7C90(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for InteractionSeparatorLineItem()
{
  uint64_t result = qword_1EA2C6C50;
  if (!qword_1EA2C6C50) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C20C7D24()
{
  return sub_1C214BB80();
}

uint64_t sub_1C20C7DD0()
{
  return type metadata accessor for InteractionSeparatorLineItem();
}

uint64_t sub_1C20C7DD8()
{
  uint64_t result = sub_1C2147B20();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for InteractionSeparatorLineItem(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for InteractionSeparatorLineItem);
}

uint64_t dispatch thunk of InteractionSeparatorLineItem.uniqueIdentifier.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 96))();
}

uint64_t dispatch thunk of InteractionSeparatorLineItem.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of InteractionSeparatorLineItem.hash(into:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of InteractionSeparatorLineItem.hashValue.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t DosageItem.init(uuid:isEditEnabled:medication:conceptBackedLoggingUnits:dataProvider:updateHandler:deletionHandler:validationHandler:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t *a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  type metadata accessor for DosageCollectionViewCell(0);
  sub_1C20D207C(&qword_1EA2C5638, (void (*)(uint64_t))type metadata accessor for DosageCollectionViewCell);
  *a9 = sub_1C21481D0();
  a9[1] = v19;
  a9[2] = 0;
  a9[3] = 0xE000000000000000;
  uint64_t v20 = (int *)type metadata accessor for DosageItem(0);
  a9[4] = 0;
  a9[5] = 0;
  uint64_t v21 = (uint64_t *)((char *)a9 + v20[11]);
  unint64_t v22 = (uint64_t *)((char *)a9 + v20[12]);
  uint64_t v23 = (uint64_t *)((char *)a9 + v20[13]);
  unint64_t v24 = (uint64_t *)((char *)a9 + v20[14]);
  id v25 = (char *)a9 + v20[7];
  uint64_t v26 = sub_1C2147B20();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v26 - 8) + 32))(v25, a1, v26);
  *((unsigned char *)a9 + v20[8]) = a2;
  *(uint64_t *)((char *)a9 + v20[9]) = a3;
  unint64_t v28 = (uint64_t *)((char *)a9 + v20[10]);
  *unint64_t v28 = a4;
  v28[1] = a5;
  void v28[2] = a6;
  v28[3] = a7;
  *uint64_t v21 = a8;
  v21[1] = a10;
  *unint64_t v22 = a11;
  v22[1] = a12;
  *unint64_t v24 = a13;
  v24[1] = a14;
  void *v23 = a15;
  v23[1] = a16;
  return result;
}

uint64_t type metadata accessor for DosageCollectionViewCell(uint64_t a1)
{
  return sub_1C1F20D10(a1, (uint64_t *)&unk_1EA2C6CE8);
}

uint64_t type metadata accessor for DosageItem(uint64_t a1)
{
  return sub_1C1F20D10(a1, (uint64_t *)&unk_1EA2C6CB0);
}

uint64_t DosageItem.reuseIdentifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DosageItem.reuseIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*DosageItem.reuseIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t DosageItem.uniqueIdentifier.getter()
{
  return 0x7449656761736F44;
}

uint64_t DosageItem.title.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DosageItem.title.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*DosageItem.title.modify())()
{
  return nullsub_1;
}

uint64_t DosageItem.placeholderText.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DosageItem.placeholderText.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 4sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = a2;
  return result;
}

uint64_t (*DosageItem.placeholderText.modify())()
{
  return nullsub_1;
}

uint64_t DosageItem.uuid.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for DosageItem(0) + 28);
  uint64_t v4 = sub_1C2147B20();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t DosageItem.isEditEnabled.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for DosageItem(0) + 32));
}

uint64_t DosageItem.isEditEnabled.setter(char a1)
{
  uint64_t result = type metadata accessor for DosageItem(0);
  *(unsigned char *)(v1 + *(int *)(result + 32)) = a1;
  return result;
}

uint64_t (*DosageItem.isEditEnabled.modify())()
{
  return nullsub_1;
}

id DosageItem.medication.getter()
{
  uint64_t v1 = *(void **)(v0 + *(int *)(type metadata accessor for DosageItem(0) + 36));

  return v1;
}

uint64_t DosageItem.conceptBackedLoggingUnits.getter()
{
  uint64_t v1 = (uint64_t *)(v0 + *(int *)(type metadata accessor for DosageItem(0) + 40));
  uint64_t v2 = *v1;
  sub_1C2021590(*v1, v1[1]);
  return v2;
}

uint64_t sub_1C20C84B4(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  if (*a1) {
    uint64_t v3 = a1[1];
  }
  else {
    uint64_t v3 = 0;
  }
  uint64_t v4 = (uint64_t *)(a2 + *(int *)(type metadata accessor for DosageItem(0) + 44));
  uint64_t v5 = *v4;
  sub_1C1F1325C(v2);
  uint64_t result = sub_1C1F31118(v5);
  *uint64_t v4 = v2;
  v4[1] = v3;
  return result;
}

uint64_t DosageItem.dataProvider.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for DosageItem(0) + 44));
  sub_1C1F1325C(v1);
  return v1;
}

uint64_t DosageItem.dataProvider.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (uint64_t *)(v2 + *(int *)(type metadata accessor for DosageItem(0) + 44));
  uint64_t result = sub_1C1F31118(*v5);
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*DosageItem.dataProvider.modify())()
{
  return nullsub_1;
}

uint64_t sub_1C20C85F4@<X0>(uint64_t a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v3 = (uint64_t *)(a1 + *(int *)(type metadata accessor for DosageItem(0) + 48));
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  if (*v3)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    *(void *)(v6 + 24) = v5;
    uint64_t v7 = sub_1C1FE4A6C;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;

  return sub_1C1F1325C(v4);
}

uint64_t sub_1C20C8688(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = sub_1C1FE4A10;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v7 = (uint64_t *)(a2 + *(int *)(type metadata accessor for DosageItem(0) + 48));
  uint64_t v8 = *v7;
  sub_1C1F1325C(v3);
  uint64_t result = sub_1C1F31118(v8);
  *uint64_t v7 = (uint64_t)v6;
  v7[1] = v5;
  return result;
}

uint64_t DosageItem.updateHandler.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for DosageItem(0) + 48));
  sub_1C1F1325C(v1);
  return v1;
}

uint64_t DosageItem.updateHandler.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (uint64_t *)(v2 + *(int *)(type metadata accessor for DosageItem(0) + 48));
  uint64_t result = sub_1C1F31118(*v5);
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*DosageItem.updateHandler.modify())()
{
  return nullsub_1;
}

uint64_t sub_1C20C8808@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (uint64_t *)(a1 + *(int *)(type metadata accessor for DosageItem(0) + 52));
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  if (*v3)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    *(void *)(v6 + 24) = v5;
    uint64_t v7 = sub_1C20D2008;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v6 = 0;
  }
  *a2 = v7;
  a2[1] = v6;

  return sub_1C1F1325C(v4);
}

uint64_t sub_1C20C889C(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = sub_1C20D1FC8;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v7 = (uint64_t *)(a2 + *(int *)(type metadata accessor for DosageItem(0) + 52));
  uint64_t v8 = *v7;
  sub_1C1F1325C(v3);
  uint64_t result = sub_1C1F31118(v8);
  *uint64_t v7 = (uint64_t)v6;
  v7[1] = v5;
  return result;
}

uint64_t DosageItem.validationHandler.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for DosageItem(0) + 52));
  sub_1C1F1325C(v1);
  return v1;
}

uint64_t DosageItem.validationHandler.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (uint64_t *)(v2 + *(int *)(type metadata accessor for DosageItem(0) + 52));
  uint64_t result = sub_1C1F31118(*v5);
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*DosageItem.validationHandler.modify())()
{
  return nullsub_1;
}

uint64_t sub_1C20C8A1C@<X0>(uint64_t a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v3 = (uint64_t *)(a1 + *(int *)(type metadata accessor for DosageItem(0) + 56));
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  if (*v3)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    *(void *)(v6 + 24) = v5;
    uint64_t v7 = sub_1C1FE4A38;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;

  return sub_1C1F1325C(v4);
}

uint64_t sub_1C20C8AB0(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = sub_1C1FE4A70;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v7 = (uint64_t *)(a2 + *(int *)(type metadata accessor for DosageItem(0) + 56));
  uint64_t v8 = *v7;
  sub_1C1F1325C(v3);
  uint64_t result = sub_1C1F31118(v8);
  *uint64_t v7 = (uint64_t)v6;
  v7[1] = v5;
  return result;
}

uint64_t DosageItem.deletionHandler.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for DosageItem(0) + 56));
  sub_1C1F1325C(v1);
  return v1;
}

uint64_t DosageItem.deletionHandler.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (uint64_t *)(v2 + *(int *)(type metadata accessor for DosageItem(0) + 56));
  uint64_t result = sub_1C1F31118(*v5);
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*DosageItem.deletionHandler.modify())()
{
  return nullsub_1;
}

uint64_t sub_1C20C8C30(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 48));
  sub_1C1F1325C(v2);
  return v2;
}

uint64_t sub_1C20C8C70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1) {
    uint64_t v5 = a2;
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = (uint64_t *)(v3 + *(int *)(a3 + 48));
  uint64_t result = sub_1C1F31118(*v6);
  *uint64_t v6 = a1;
  v6[1] = v5;
  return result;
}

uint64_t (*sub_1C20C8CB4(uint64_t a1, uint64_t a2))()
{
  uint64_t v3 = *(int *)(a2 + 48);
  *(_DWORD *)(a1 + 24) = v3;
  uint64_t v4 = (uint64_t *)(v2 + v3);
  uint64_t v6 = *v4;
  uint64_t v5 = v4[1];
  if (!v6) {
    uint64_t v5 = 0;
  }
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v2;
  return sub_1C1FE0734;
}

uint64_t sub_1C20C8CF8()
{
  return 0x7449656761736F44;
}

uint64_t sub_1C20C8D60(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  uint64_t v4 = (void *)(*a2 + OBJC_IVAR____TtC19HealthMedicationsUI24DosageCollectionViewCell_baseIdentifier);
  swift_beginAccess();
  *uint64_t v4 = v3;
  v4[1] = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C20C8DCC()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI24DosageCollectionViewCell_baseIdentifier);
  swift_beginAccess();
  uint64_t v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1C20C8E24(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + OBJC_IVAR____TtC19HealthMedicationsUI24DosageCollectionViewCell_baseIdentifier);
  swift_beginAccess();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1C20C8E84())()
{
  return j__swift_endAccess;
}

uint64_t sub_1C20C8EE0(uint64_t a1, void **a2)
{
  sub_1C20CF53C(a1, (uint64_t)v7, (uint64_t (*)(void))sub_1C1F24488);
  uint64_t v3 = *a2;
  uint64_t v4 = (uint64_t)*a2 + OBJC_IVAR____TtC19HealthMedicationsUI24DosageCollectionViewCell_item;
  swift_beginAccess();
  sub_1C1F32DDC((uint64_t)v7, v4);
  uint64_t v5 = swift_endAccess();
  (*(void (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & *v3) + 0x180))(v5);
  return sub_1C20D1348((uint64_t)v7, (uint64_t (*)(void))sub_1C1F24488);
}

uint64_t sub_1C20C8FC0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI24DosageCollectionViewCell_item;
  swift_beginAccess();
  return sub_1C20CF53C(v3, a1, (uint64_t (*)(void))sub_1C1F24488);
}

uint64_t sub_1C20C9028(uint64_t a1)
{
  uint64_t v3 = (uint64_t)v1 + OBJC_IVAR____TtC19HealthMedicationsUI24DosageCollectionViewCell_item;
  swift_beginAccess();
  sub_1C1F32DDC(a1, v3);
  uint64_t v4 = swift_endAccess();
  (*(void (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & *v1) + 0x180))(v4);
  return sub_1C20D1348(a1, (uint64_t (*)(void))sub_1C1F24488);
}

uint64_t (*sub_1C20C90F0(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1C20C9150;
}

uint64_t sub_1C20C9150(uint64_t a1, char a2)
{
  uint64_t result = swift_endAccess();
  if ((a2 & 1) == 0) {
    return (*(uint64_t (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & **(void **)(a1 + 24)) + 0x180))(result);
  }
  return result;
}

uint64_t sub_1C20C91BC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FB0E68];
  sub_1C1F17420(0, &qword_1EBF0C618, MEMORY[0x1E4FB0E68], MEMORY[0x1E4FBB718]);
  uint64_t v7 = MEMORY[0x1F4188790](v6 - 8);
  uint64_t v9 = &v17[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = &v17[-v10];
  uint64_t v12 = v2 + OBJC_IVAR____TtC19HealthMedicationsUI24DosageCollectionViewCell____lazy_storage___deleteAccessory;
  swift_beginAccess();
  sub_1C20D1E50(v12, (uint64_t)v11, &qword_1EBF0C618, v5);
  uint64_t v13 = sub_1C2149930();
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v14 + 48))(v11, 1, v13) != 1) {
    return (*(uint64_t (**)(uint64_t, unsigned char *, uint64_t))(v14 + 32))(a1, v11, v13);
  }
  id v15 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FB0E68];
  sub_1C20D20C4((uint64_t)v11, &qword_1EBF0C618, MEMORY[0x1E4FB0E68]);
  sub_1C20C9410(ObjectType, a1);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v14 + 16))(v9, a1, v13);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v14 + 56))(v9, 0, 1, v13);
  swift_beginAccess();
  sub_1C20D1ED0((uint64_t)v9, v12, &qword_1EBF0C618, v15);
  return swift_endAccess();
}

uint64_t sub_1C20C9410@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  v18[1] = a2;
  sub_1C1F17420(0, &qword_1EBF0C610, MEMORY[0x1E4FB0E38], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)v18 - v4;
  uint64_t v6 = sub_1C2149850();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1C2149860();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v11 + 104))(v13, *MEMORY[0x1E4FB0E18], v10);
  uint64_t v14 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v14;
  *(void *)(v15 + 24) = a1;
  uint64_t v16 = sub_1C2149870();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v5, 1, 1, v16);
  swift_retain();
  sub_1C2149840();
  sub_1C2149900();
  swift_release();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  return swift_release();
}

uint64_t sub_1C20C96F0(uint64_t a1, uint64_t a2)
{
  uint64_t v52 = a2;
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C1F17420(0, &qword_1EA2C5650, (uint64_t (*)(uint64_t))type metadata accessor for Dosage, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v48 - v5;
  uint64_t v7 = type metadata accessor for Dosage();
  uint64_t v51 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v50 = (uint64_t)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1C21497F0();
  uint64_t v53 = *(void *)(v9 - 8);
  uint64_t v54 = v9;
  uint64_t v10 = MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v48 - v13;
  sub_1C1F17420(0, &qword_1EA2C6C80, type metadata accessor for DosageItem, v3);
  MEMORY[0x1F4188790](v15 - 8);
  id v17 = (char *)&v48 - v16;
  uint64_t v18 = type metadata accessor for DosageItem(0);
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18);
  uint64_t v21 = (char *)&v48 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = a1 + 16;
  swift_beginAccess();
  uint64_t v23 = MEMORY[0x1C8754850](v22);
  if (!v23)
  {
    uint64_t v59 = 0;
    long long v57 = 0u;
    long long v58 = 0u;
    goto LABEL_10;
  }
  unint64_t v24 = (void *)v23;
  uint64_t v49 = v12;
  uint64_t v25 = v23 + OBJC_IVAR____TtC19HealthMedicationsUI24DosageCollectionViewCell_item;
  swift_beginAccess();
  sub_1C20CF53C(v25, (uint64_t)&v57, (uint64_t (*)(void))sub_1C1F24488);

  if (!*((void *)&v58 + 1))
  {
LABEL_10:
    sub_1C20D1348((uint64_t)&v57, (uint64_t (*)(void))sub_1C1F24488);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56))(v17, 1, 1, v18);
    goto LABEL_11;
  }
  sub_1C1F23804(0, (unint64_t *)&qword_1EBF0C2F0);
  int v26 = swift_dynamicCast();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v17, v26 ^ 1u, 1, v18);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18) != 1)
  {
    uint64_t v27 = (uint64_t)v21;
    sub_1C20CF4D4((uint64_t)v17, (uint64_t)v21, type metadata accessor for DosageItem);
    swift_beginAccess();
    uint64_t v28 = MEMORY[0x1C8754850](v22);
    if (v28)
    {
      uint64_t v29 = (void *)v28;
      uint64_t v30 = v28 + OBJC_IVAR____TtC19HealthMedicationsUI24DosageCollectionViewCell_currentDosage;
      swift_beginAccess();
      sub_1C20D1E50(v30, (uint64_t)v6, &qword_1EA2C5650, (uint64_t (*)(uint64_t))type metadata accessor for Dosage);

      int v31 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v51 + 48))(v6, 1, v7);
      uint64_t v32 = v49;
      if (v31 != 1)
      {
        uint64_t v33 = v50;
        sub_1C20CF4D4((uint64_t)v6, v50, (uint64_t (*)(void))type metadata accessor for Dosage);
        uint64_t v34 = *(void (**)(char *, uint64_t))&v21[*(int *)(v18 + 56)];
        if (v34)
        {
          swift_retain();
          v34(v21, v33);
          sub_1C1F31118((uint64_t)v34);
        }
        sub_1C20D1348(v33, (uint64_t (*)(void))type metadata accessor for Dosage);
        return sub_1C20D1348(v27, type metadata accessor for DosageItem);
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v51 + 56))(v6, 1, 1, v7);
      uint64_t v32 = v49;
    }
    sub_1C20D20C4((uint64_t)v6, &qword_1EA2C5650, (uint64_t (*)(uint64_t))type metadata accessor for Dosage);
    sub_1C21497B0();
    uint64_t v42 = sub_1C21497E0();
    os_log_type_t v43 = sub_1C214ABD0();
    if (os_log_type_enabled(v42, v43))
    {
      uint64_t v44 = (uint8_t *)swift_slowAlloc();
      uint64_t v45 = swift_slowAlloc();
      v56[0] = v45;
      *(_DWORD *)uint64_t v44 = 136315138;
      uint64_t v46 = sub_1C214BC10();
      uint64_t v55 = sub_1C1F6FD54(v46, v47, v56);
      sub_1C214B530();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C1F0B000, v42, v43, "[%s] Unable to continue with cell selection as Dosage is nil", v44, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C8754730](v45, -1, -1);
      MEMORY[0x1C8754730](v44, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v53 + 8))(v32, v54);
    return sub_1C20D1348(v27, type metadata accessor for DosageItem);
  }
LABEL_11:
  sub_1C20D20C4((uint64_t)v17, &qword_1EA2C6C80, type metadata accessor for DosageItem);
  sub_1C21497B0();
  uint64_t v35 = sub_1C21497E0();
  os_log_type_t v36 = sub_1C214ABD0();
  if (os_log_type_enabled(v35, v36))
  {
    uint64_t v37 = (uint8_t *)swift_slowAlloc();
    uint64_t v38 = swift_slowAlloc();
    *(void *)&long long v57 = v38;
    *(_DWORD *)uint64_t v37 = 136315138;
    uint64_t v39 = sub_1C214BC10();
    v56[1] = sub_1C1F6FD54(v39, v40, (uint64_t *)&v57);
    sub_1C214B530();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C1F0B000, v35, v36, "[%s] item is not a DatePickerItem", v37, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C8754730](v38, -1, -1);
    MEMORY[0x1C8754730](v37, -1, -1);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v53 + 8))(v14, v54);
}

id sub_1C20C9EE8()
{
  uint64_t v1 = OBJC_IVAR____TtC19HealthMedicationsUI24DosageCollectionViewCell____lazy_storage___toolbar;
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC19HealthMedicationsUI24DosageCollectionViewCell____lazy_storage___toolbar];
  if (v2)
  {
    id v3 = *(id *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI24DosageCollectionViewCell____lazy_storage___toolbar];
  }
  else
  {
    id v4 = sub_1C20C9F4C(v0);
    uint64_t v5 = *(void **)&v0[v1];
    *(void *)&v0[v1] = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_1C20C9F4C(void *a1)
{
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB14A8]), sel_initWithBarButtonSystemItem_target_action_, 5, 0, 0);
  if (qword_1EBF0CA00 != -1) {
    swift_once();
  }
  id v3 = (id)qword_1EBF0CA18;
  swift_bridgeObjectRetain();
  sub_1C2147730();

  swift_bridgeObjectRelease();
  uint64_t v4 = type metadata accessor for DosageCollectionViewCell(0);
  v20[3] = v4;
  v20[0] = a1;
  id v5 = a1;
  id v6 = (void *)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  if (v4)
  {
    uint64_t v7 = __swift_project_boxed_opaque_existential_0(v20, v4);
    uint64_t v8 = *(void *)(v4 - 8);
    MEMORY[0x1F4188790](v7);
    uint64_t v10 = (char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v8 + 16))(v10);
    uint64_t v11 = sub_1C214BA70();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v4);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v20);
  }
  else
  {
    uint64_t v11 = 0;
  }
  id v12 = objc_allocWithZone(MEMORY[0x1E4FB14A8]);
  id v13 = objc_msgSend(v12, sel_initWithTitle_style_target_action_, v6, 2, v11, sel_doneTapped, v20[0]);
  swift_unknownObjectRelease();

  id v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1DF0]), sel_init);
  objc_msgSend(v14, sel_setBarStyle_, 0);
  objc_msgSend(v14, sel_setTranslucent_, 1);
  sub_1C1F0ED28();
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1C214FCB0;
  *(void *)(v15 + 32) = v2;
  *(void *)(v15 + 4sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = v13;
  v20[0] = v15;
  sub_1C214A7A0();
  sub_1C1F12718(0, (unint64_t *)&qword_1EA2C3508);
  id v16 = v2;
  id v17 = v13;
  uint64_t v18 = (void *)sub_1C214A770();
  swift_bridgeObjectRelease();
  objc_msgSend(v14, sel_setItems_animated_, v18, 0);

  objc_msgSend(v14, sel_setUserInteractionEnabled_, 1);
  objc_msgSend(v14, sel_sizeToFit);

  return v14;
}

id sub_1C20CA2A8()
{
  uint64_t v1 = OBJC_IVAR____TtC19HealthMedicationsUI24DosageCollectionViewCell____lazy_storage___valueField;
  id v2 = *(void **)&v0[OBJC_IVAR____TtC19HealthMedicationsUI24DosageCollectionViewCell____lazy_storage___valueField];
  if (v2)
  {
    id v3 = *(id *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI24DosageCollectionViewCell____lazy_storage___valueField];
  }
  else
  {
    swift_getObjectType();
    id v4 = sub_1C20CA318(v0);
    id v5 = *(void **)&v0[v1];
    *(void *)&v0[v1] = v4;
    id v3 = v4;

    id v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_1C20CA318(void *a1)
{
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1D70]), sel_init);
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8E0);
  id v3 = (void *)sub_1C214B0A0();
  objc_msgSend(v2, sel_setFont_, v3);

  uint64_t v4 = sub_1C214A5F0();
  uint64_t v6 = v5;
  sub_1C20D207C(&qword_1EA2C5638, (void (*)(uint64_t))type metadata accessor for DosageCollectionViewCell);
  id v7 = v2;
  sub_1C21481D0();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  uint64_t v8 = (void *)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  objc_msgSend(v7, sel_setAccessibilityIdentifier_, v8, v4, v6);

  id v9 = objc_msgSend(self, sel_systemBlueColor);
  objc_msgSend(v7, sel_setTextColor_, v9);

  objc_msgSend(v7, sel_setAdjustsFontForContentSizeCategory_, 1);
  objc_msgSend(v7, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  id v10 = objc_msgSend(a1, sel_effectiveUserInterfaceLayoutDirection);
  id v11 = objc_msgSend(a1, sel_traitCollection);
  id v12 = objc_msgSend(v11, sel_preferredContentSizeCategory);

  char v13 = sub_1C214AE80();
  uint64_t v14 = 2;
  if (v13) {
    uint64_t v15 = 2;
  }
  else {
    uint64_t v15 = 0;
  }
  if (v13) {
    uint64_t v14 = 0;
  }
  if (v10 == (id)1) {
    uint64_t v16 = v15;
  }
  else {
    uint64_t v16 = v14;
  }
  objc_msgSend(v7, sel_setTextAlignment_, v16);
  return v7;
}

void sub_1C20CA5EC(uint64_t a1)
{
  id v2 = *(void **)(v1 + OBJC_IVAR____TtC19HealthMedicationsUI24DosageCollectionViewCell____lazy_storage___valueField);
  *(void *)(v1 + OBJC_IVAR____TtC19HealthMedicationsUI24DosageCollectionViewCell____lazy_storage___valueField) = a1;
}

void (*sub_1C20CA600(id *a1))(uint64_t *a1)
{
  a1[1] = v1;
  *a1 = sub_1C20CA2A8();
  return sub_1C20CA648;
}

void sub_1C20CA648(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v1 = a1[1];
  id v3 = *(void **)(v1 + OBJC_IVAR____TtC19HealthMedicationsUI24DosageCollectionViewCell____lazy_storage___valueField);
  *(void *)(v1 + OBJC_IVAR____TtC19HealthMedicationsUI24DosageCollectionViewCell____lazy_storage___valueField) = v2;
}

id sub_1C20CA660()
{
  uint64_t v1 = OBJC_IVAR____TtC19HealthMedicationsUI24DosageCollectionViewCell____lazy_storage___valueLabel;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI24DosageCollectionViewCell____lazy_storage___valueLabel);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI24DosageCollectionViewCell____lazy_storage___valueLabel);
  }
  else
  {
    swift_getObjectType();
    id v4 = sub_1C20CA6C8();
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + vsub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, 0, 1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_1C20CA6C8()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
  uint64_t v1 = sub_1C214A5F0();
  uint64_t v3 = v2;
  sub_1C20D207C(&qword_1EA2C5638, (void (*)(uint64_t))type metadata accessor for DosageCollectionViewCell);
  id v4 = v0;
  sub_1C21481D0();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  uint64_t v9 = v3;
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  uint64_t v5 = (void *)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_setAccessibilityIdentifier_, v5, v1, v9);

  objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8E0);
  id v6 = (void *)sub_1C214B0A0();
  objc_msgSend(v4, sel_setFont_, v6);

  objc_msgSend(v4, sel_setTextAlignment_, 4);
  objc_msgSend(v4, sel_setAdjustsFontForContentSizeCategory_, 1);
  id v7 = objc_msgSend(self, sel_systemBlueColor);
  objc_msgSend(v4, sel_setTextColor_, v7);

  objc_msgSend(v4, sel_setNumberOfLines_, 0);
  objc_msgSend(v4, sel_setUserInteractionEnabled_, 1);
  return v4;
}

id sub_1C20CA944(double a1, double a2, double a3, double a4)
{
  uint64_t v5 = v4;
  id v10 = &v4[OBJC_IVAR____TtC19HealthMedicationsUI24DosageCollectionViewCell_currentDosage];
  uint64_t v11 = type metadata accessor for Dosage();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v10, 1, 1, v11);
  id v12 = (uint64_t *)&v5[OBJC_IVAR____TtC19HealthMedicationsUI24DosageCollectionViewCell_baseIdentifier];
  uint64_t v29 = sub_1C214A5F0();
  uint64_t v30 = v13;
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  uint64_t v14 = v30;
  uint64_t v15 = v5;
  swift_bridgeObjectRelease();
  *id v12 = v29;
  v12[1] = v14;
  uint64_t v16 = &v15[OBJC_IVAR____TtC19HealthMedicationsUI24DosageCollectionViewCell_item];
  *(_OWORD *)uint64_t v16 = 0u;
  *((_OWORD *)v16 + sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, 0, 1) = 0u;
  *((void *)v16 + 4) = 0;
  id v17 = &v15[OBJC_IVAR____TtC19HealthMedicationsUI24DosageCollectionViewCell____lazy_storage___deleteAccessory];
  uint64_t v18 = sub_1C2149930();
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
  v19(v17, 1, 1, v18);
  uint64_t v20 = OBJC_IVAR____TtC19HealthMedicationsUI24DosageCollectionViewCell_timePicker;
  id v21 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB16B0]), sel_init);
  objc_msgSend(v21, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v21, sel_setPreferredDatePickerStyle_, 2);
  objc_msgSend(v21, sel_setDatePickerMode_, 0);
  objc_msgSend(v21, sel_setMinuteInterval_, 5);
  objc_msgSend(v21, sel_setContentHorizontalAlignment_, 4);
  objc_msgSend(v21, sel_setRoundsToMinuteInterval_, 1);
  *(void *)&v15[v20] = v21;
  *(void *)&v15[OBJC_IVAR____TtC19HealthMedicationsUI24DosageCollectionViewCell____lazy_storage___toolbar] = 0;
  *(void *)&v15[OBJC_IVAR____TtC19HealthMedicationsUI24DosageCollectionViewCell____lazy_storage___valueField] = 0;
  *(void *)&v15[OBJC_IVAR____TtC19HealthMedicationsUI24DosageCollectionViewCell____lazy_storage___valueLabel] = 0;
  v19(&v15[OBJC_IVAR____TtC19HealthMedicationsUI24DosageCollectionViewCell____lazy_storage___spacerAccessory], 1, 1, v18);
  *(void *)&v15[OBJC_IVAR____TtC19HealthMedicationsUI24DosageCollectionViewCell_currentLayoutConstraints] = MEMORY[0x1E4FBC860];

  v28.receiver = v15;
  v28.super_class = (Class)type metadata accessor for DosageCollectionViewCell(0);
  id v22 = objc_msgSendSuper2(&v28, sel_initWithFrame_, a1, a2, a3, a4);
  id v23 = objc_allocWithZone(MEMORY[0x1E4FB1EB0]);
  id v24 = v22;
  id v25 = objc_msgSend(v23, sel_init);
  objc_msgSend(v25, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C900);
  int v26 = (void *)sub_1C214B1A0();
  objc_msgSend(v25, sel_setBackgroundColor_, v26);

  objc_msgSend(v24, sel_setBackgroundView_, v25);
  sub_1C20CAD14();

  return v24;
}

id DosageCollectionViewCell.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void sub_1C20CAD14()
{
  sub_1C1F17420(0, (unint64_t *)&unk_1EBF0C990, MEMORY[0x1E4FB0E68], MEMORY[0x1E4FBBE00]);
  uint64_t v1 = *(void *)(sub_1C2149930() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1C214FCD0;
  sub_1C20C91BC(v3 + v2);
  sub_1C214AEC0();
  id v4 = *(void **)&v0[OBJC_IVAR____TtC19HealthMedicationsUI24DosageCollectionViewCell_timePicker];
  objc_msgSend(v4, sel_addTarget_action_forControlEvents_, v0, sel_timePickerChanged_, 4096);
  id v5 = sub_1C20CA2A8();
  objc_msgSend(v5, sel_setDelegate_, v0);

  id v6 = sub_1C20CA2A8();
  objc_msgSend(v6, sel_setKeyboardType_, 8);

  id v7 = sub_1C20CA2A8();
  id v8 = sub_1C20C9EE8();
  objc_msgSend(v7, sel_setInputAccessoryView_, v8);

  id v9 = sub_1C20CA2A8();
  objc_msgSend(v9, sel_addTarget_action_forControlEvents_, v0, sel_textFieldChanged_, 0x20000);

  id v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1D38]), sel_initWithTarget_action_, v0, sel_valueLabelTapped_);
  objc_msgSend(v10, sel_setNumberOfTapsRequired_, 1);
  id v11 = sub_1C20CA660();
  objc_msgSend(v11, sel_addGestureRecognizer_, v10);

  id v12 = objc_msgSend(v0, sel_contentView);
  objc_msgSend(v12, sel_addSubview_, v4);

  id v13 = objc_msgSend(v0, sel_contentView);
  id v14 = sub_1C20CA2A8();
  objc_msgSend(v13, sel_addSubview_, v14);

  id v15 = objc_msgSend(v0, sel_contentView);
  id v16 = sub_1C20CA660();
  objc_msgSend(v15, sel_addSubview_, v16);

  id v17 = self;
  uint64_t v18 = OBJC_IVAR____TtC19HealthMedicationsUI24DosageCollectionViewCell_currentLayoutConstraints;
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C810);
  swift_bridgeObjectRetain();
  uint64_t v19 = (void *)sub_1C214A770();
  swift_bridgeObjectRelease();
  objc_msgSend(v17, sel_deactivateConstraints_, v19);

  *(void *)&v0[v18] = MEMORY[0x1E4FBC860];
  swift_bridgeObjectRelease();
  id v20 = objc_msgSend(v0, sel_traitCollection);
  id v21 = objc_msgSend(v20, sel_preferredContentSizeCategory);

  LOBYTE(v2sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = sub_1C214AE80();
  if (v20) {
    sub_1C20CD4A8();
  }
  else {
    sub_1C20CDAE0();
  }
  objc_msgSend(v0, sel_setNeedsLayout, 1, 2);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_1C20CD310();
  swift_bridgeObjectRelease();
  sub_1C1F17420(0, (unint64_t *)&qword_1EA2C3D80, (uint64_t (*)(uint64_t))sub_1C1F7C864, MEMORY[0x1E4FBBE00]);
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = v25;
  uint64_t v23 = sub_1C2149C70();
  uint64_t v24 = MEMORY[0x1E4FB1138];
  *(void *)(v22 + 32) = v23;
  *(void *)(v22 + 4sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = v24;
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1C1F7C8F0();
  sub_1C214B120();
  swift_release();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
}

void sub_1C20CB1B4(void *a1, void *a2, uint64_t a3)
{
  id v5 = objc_msgSend(a1, sel_traitCollection);
  id v6 = objc_msgSend(v5, sel_preferredContentSizeCategory);

  LODWORD(v5) = sub_1C214AE80() & 1;
  id v7 = objc_msgSend(a2, sel_preferredContentSizeCategory);
  LODWORD(v6) = sub_1C214AE80() & 1;

  if (v5 != v6)
  {
    swift_beginAccess();
    uint64_t v8 = MEMORY[0x1C8754850](a3 + 16);
    if (v8)
    {
      id v9 = (char *)v8;
      id v10 = self;
      uint64_t v11 = OBJC_IVAR____TtC19HealthMedicationsUI24DosageCollectionViewCell_currentLayoutConstraints;
      sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C810);
      swift_bridgeObjectRetain();
      id v12 = (void *)sub_1C214A770();
      swift_bridgeObjectRelease();
      objc_msgSend(v10, sel_deactivateConstraints_, v12);

      *(void *)&v9[v11] = MEMORY[0x1E4FBC860];
      swift_bridgeObjectRelease();
      id v13 = objc_msgSend(v9, sel_traitCollection);
      id v14 = objc_msgSend(v13, sel_preferredContentSizeCategory);

      LOBYTE(v13) = sub_1C214AE80();
      if (v13) {
        sub_1C20CD4A8();
      }
      else {
        sub_1C20CDAE0();
      }
      objc_msgSend(v9, sel_setNeedsLayout);
    }
  }
}

uint64_t sub_1C20CB374()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v2 = sub_1C21497F0();
  uint64_t v50 = *(void *)(v2 - 8);
  uint64_t v51 = v2;
  MEMORY[0x1F4188790](v2);
  id v4 = (char *)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1C2147BB0();
  uint64_t v46 = *(void *)(v5 - 8);
  uint64_t v47 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v45 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C1F17420(0, &qword_1EA2C5650, (uint64_t (*)(uint64_t))type metadata accessor for Dosage, MEMORY[0x1E4FBB718]);
  uint64_t v9 = MEMORY[0x1F4188790](v8 - 8);
  uint64_t v11 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  id v13 = (char *)&v44 - v12;
  uint64_t v14 = type metadata accessor for Dosage();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v48 = (uint64_t)&v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1F17420(0, &qword_1EA2C6C80, type metadata accessor for DosageItem, v7);
  MEMORY[0x1F4188790](v17 - 8);
  uint64_t v19 = (char *)&v44 - v18;
  uint64_t v20 = type metadata accessor for DosageItem(0);
  uint64_t v21 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v20);
  uint64_t v52 = (uint64_t)&v44 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = (uint64_t)&v1[OBJC_IVAR____TtC19HealthMedicationsUI24DosageCollectionViewCell_item];
  swift_beginAccess();
  sub_1C20CF53C(v23, (uint64_t)v54, (uint64_t (*)(void))sub_1C1F24488);
  if (!v54[3])
  {
    sub_1C20D1348((uint64_t)v54, (uint64_t (*)(void))sub_1C1F24488);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56))(v19, 1, 1, v20);
    return sub_1C20D20C4((uint64_t)v19, &qword_1EA2C6C80, type metadata accessor for DosageItem);
  }
  sub_1C1F23804(0, (unint64_t *)&qword_1EBF0C2F0);
  int v24 = swift_dynamicCast();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v19, v24 ^ 1u, 1, v20);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20) == 1) {
    return sub_1C20D20C4((uint64_t)v19, &qword_1EA2C6C80, type metadata accessor for DosageItem);
  }
  uint64_t v25 = v52;
  sub_1C20CF4D4((uint64_t)v19, v52, type metadata accessor for DosageItem);
  int v26 = *(void (**)(uint64_t))(v25 + *(int *)(v20 + 44));
  if (v26)
  {
    swift_retain();
    v26(v25);
    sub_1C1F31118((uint64_t)v26);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) != 1)
    {
      uint64_t v27 = v48;
      sub_1C20CF4D4((uint64_t)v13, v48, (uint64_t (*)(void))type metadata accessor for Dosage);
      sub_1C20CF53C(v27, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for Dosage);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v11, 0, 1, v14);
      uint64_t v28 = (uint64_t)&v1[OBJC_IVAR____TtC19HealthMedicationsUI24DosageCollectionViewCell_currentDosage];
      swift_beginAccess();
      sub_1C20D1ED0((uint64_t)v11, v28, &qword_1EA2C5650, (uint64_t (*)(uint64_t))type metadata accessor for Dosage);
      swift_endAccess();
      objc_msgSend(v1, sel_setUserInteractionEnabled_, *(unsigned __int8 *)(v25 + *(int *)(v20 + 32)));
      uint64_t v29 = *(void **)&v1[OBJC_IVAR____TtC19HealthMedicationsUI24DosageCollectionViewCell_timePicker];
      uint64_t v30 = (void *)sub_1C2147A00();
      objc_msgSend(v29, sel_setDate_animated_, v30, 1);

      sub_1C20CE580();
      sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8C0);
      int v31 = v45;
      sub_1C2147BA0();
      sub_1C2149010();
      (*(void (**)(char *, uint64_t))(v46 + 8))(v31, v47);
      sub_1C20CBCC8();
      swift_bridgeObjectRelease();
      uint64_t v32 = self;
      uint64_t v33 = OBJC_IVAR____TtC19HealthMedicationsUI24DosageCollectionViewCell_currentLayoutConstraints;
      sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C810);
      swift_bridgeObjectRetain();
      uint64_t v34 = (void *)sub_1C214A770();
      swift_bridgeObjectRelease();
      objc_msgSend(v32, sel_deactivateConstraints_, v34);

      *(void *)&v1[v33] = MEMORY[0x1E4FBC860];
      swift_bridgeObjectRelease();
      id v35 = objc_msgSend(v1, sel_traitCollection);
      id v36 = objc_msgSend(v35, sel_preferredContentSizeCategory);

      LOBYTE(v35) = sub_1C214AE80();
      if (v35) {
        sub_1C20CD4A8();
      }
      else {
        sub_1C20CDAE0();
      }
      objc_msgSend(v1, sel_setNeedsLayout);
      sub_1C20D1348(v27, (uint64_t (*)(void))type metadata accessor for Dosage);
      return sub_1C20D1348(v52, type metadata accessor for DosageItem);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v13, 1, 1, v14);
  }
  sub_1C20D20C4((uint64_t)v13, &qword_1EA2C5650, (uint64_t (*)(uint64_t))type metadata accessor for Dosage);
  sub_1C21497B0();
  uint64_t v38 = sub_1C21497E0();
  os_log_type_t v39 = sub_1C214ABD0();
  if (os_log_type_enabled(v38, v39))
  {
    unint64_t v40 = (uint8_t *)swift_slowAlloc();
    uint64_t v41 = swift_slowAlloc();
    v54[0] = v41;
    *(_DWORD *)unint64_t v40 = 136315138;
    uint64_t v42 = sub_1C214BC10();
    uint64_t v53 = sub_1C1F6FD54(v42, v43, v54);
    sub_1C214B530();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C1F0B000, v38, v39, "[%s] Unable to continue with item update as Dosage is nil", v40, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C8754730](v41, -1, -1);
    MEMORY[0x1C8754730](v40, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v50 + 8))(v4, v51);
  return sub_1C20D1348(v25, type metadata accessor for DosageItem);
}

void sub_1C20CBCC8()
{
  uint64_t v0 = sub_1C2147BB0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8C0);
  sub_1C2147BA0();
  sub_1C2149020();
  double v5 = v4;
  uint64_t v6 = *(void (**)(char *, uint64_t))(v1 + 8);
  v6(v3, v0);
  sub_1C2147BA0();
  sub_1C2149010();
  v6(v3, v0);
  id v7 = sub_1C20CA2A8();
  uint64_t v8 = (void *)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  objc_msgSend(v7, sel_setText_, v8);

  id v9 = sub_1C20CA660();
  sub_1C20CBEB8(v5);
  uint64_t v10 = (void *)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  objc_msgSend(v9, sel_setText_, v10);
}

uint64_t sub_1C20CBEB8(double a1)
{
  uint64_t v2 = v1;
  swift_getObjectType();
  uint64_t v4 = sub_1C21497F0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  id v7 = (char *)v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1F17420(0, &qword_1EA2C6C80, type metadata accessor for DosageItem, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)v28 - v9;
  uint64_t v11 = type metadata accessor for DosageItem(0);
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = v2 + OBJC_IVAR____TtC19HealthMedicationsUI24DosageCollectionViewCell_item;
  swift_beginAccess();
  sub_1C20CF53C(v15, (uint64_t)v29, (uint64_t (*)(void))sub_1C1F24488);
  if (v29[3])
  {
    sub_1C1F23804(0, (unint64_t *)&qword_1EBF0C2F0);
    int v16 = swift_dynamicCast();
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v10, v16 ^ 1u, 1, v11);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) != 1)
    {
      sub_1C20CF4D4((uint64_t)v10, (uint64_t)v14, type metadata accessor for DosageItem);
      uint64_t v17 = (uint64_t *)&v14[*(int *)(v11 + 40)];
      if (v17[1])
      {
        uint64_t v18 = *v17;
        uint64_t v19 = v17[2];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1C20D1348((uint64_t)v14, type metadata accessor for DosageItem);
        swift_bridgeObjectRelease();
        if (a1 != 1.0) {
          return v19;
        }
      }
      else
      {
        id v27 = *(id *)&v14[*(int *)(v11 + 36)];
        uint64_t v18 = sub_1C214AFB0();

        sub_1C20D1348((uint64_t)v14, type metadata accessor for DosageItem);
      }
      return v18;
    }
  }
  else
  {
    sub_1C20D1348((uint64_t)v29, (uint64_t (*)(void))sub_1C1F24488);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, 1, 1, v11);
  }
  sub_1C20D20C4((uint64_t)v10, &qword_1EA2C6C80, type metadata accessor for DosageItem);
  sub_1C21497B0();
  uint64_t v20 = sub_1C21497E0();
  os_log_type_t v21 = sub_1C214ABD0();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v22 = (uint8_t *)swift_slowAlloc();
    uint64_t v23 = swift_slowAlloc();
    v29[0] = v23;
    *(_DWORD *)uint64_t v22 = 136315138;
    uint64_t v24 = sub_1C214BC10();
    v28[1] = sub_1C1F6FD54(v24, v25, v29);
    sub_1C214B530();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C1F0B000, v20, v21, "[%s] item is not a DosageItem", v22, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C8754730](v23, -1, -1);
    MEMORY[0x1C8754730](v22, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return 0;
}

uint64_t sub_1C20CC3F8(void *a1)
{
  uint64_t v2 = v1;
  id v95 = a1;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v99 = sub_1C21497F0();
  uint64_t v3 = *(void *)(v99 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v99);
  uint64_t v6 = (char *)&v83 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v83 - v7;
  uint64_t v86 = sub_1C2147AC0();
  uint64_t v85 = *(void *)(v86 - 8);
  MEMORY[0x1F4188790](v86);
  uint64_t v90 = (char *)&v83 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v89 = sub_1C2147B20();
  uint64_t v88 = *(void *)(v89 - 8);
  MEMORY[0x1F4188790](v89);
  uint64_t v87 = (char *)&v83 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v92 = sub_1C2147BB0();
  uint64_t v93 = *(void *)(v92 - 8);
  MEMORY[0x1F4188790](v92);
  uint64_t v91 = (char *)&v83 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C1F17420(0, &qword_1EA2C5650, (uint64_t (*)(uint64_t))type metadata accessor for Dosage, MEMORY[0x1E4FBB718]);
  uint64_t v14 = MEMORY[0x1F4188790](v13 - 8);
  uint64_t v83 = (uint64_t)&v83 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  uint64_t v84 = (char *)&v83 - v17;
  MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)&v83 - v18;
  uint64_t v20 = type metadata accessor for Dosage();
  uint64_t v96 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v20);
  uint64_t v94 = (uint64_t)&v83 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1F17420(0, &qword_1EA2C6C80, type metadata accessor for DosageItem, v12);
  MEMORY[0x1F4188790](v22 - 8);
  uint64_t v24 = (char *)&v83 - v23;
  uint64_t v25 = type metadata accessor for DosageItem(0);
  uint64_t v26 = *(void *)(v25 - 8);
  MEMORY[0x1F4188790](v25);
  uint64_t v97 = (uint64_t)&v83 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = v2 + OBJC_IVAR____TtC19HealthMedicationsUI24DosageCollectionViewCell_item;
  swift_beginAccess();
  sub_1C20CF53C(v28, (uint64_t)v101, (uint64_t (*)(void))sub_1C1F24488);
  if (v101[3])
  {
    sub_1C1F23804(0, (unint64_t *)&qword_1EBF0C2F0);
    int v29 = swift_dynamicCast();
    (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v24, v29 ^ 1u, 1, v25);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25) != 1)
    {
      uint64_t v30 = (uint64_t)v24;
      uint64_t v31 = v97;
      sub_1C20CF4D4(v30, v97, type metadata accessor for DosageItem);
      uint64_t v32 = v2 + OBJC_IVAR____TtC19HealthMedicationsUI24DosageCollectionViewCell_currentDosage;
      swift_beginAccess();
      sub_1C20D1E50(v32, (uint64_t)v19, &qword_1EA2C5650, (uint64_t (*)(uint64_t))type metadata accessor for Dosage);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v96 + 48))(v19, 1, v20) == 1)
      {
        sub_1C20D20C4((uint64_t)v19, &qword_1EA2C5650, (uint64_t (*)(uint64_t))type metadata accessor for Dosage);
        sub_1C21497B0();
        uint64_t v33 = sub_1C21497E0();
        os_log_type_t v34 = sub_1C214ABD0();
        if (os_log_type_enabled(v33, v34))
        {
          id v35 = (uint8_t *)swift_slowAlloc();
          uint64_t v36 = swift_slowAlloc();
          v100[0] = v36;
          *(_DWORD *)id v35 = 136315138;
          uint64_t v37 = sub_1C214BC10();
          v100[3] = sub_1C1F6FD54(v37, v38, v100);
          sub_1C214B530();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1C1F0B000, v33, v34, "[%s] CurrentDosage is nil", v35, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1C8754730](v36, -1, -1);
          MEMORY[0x1C8754730](v35, -1, -1);

          (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v99);
          uint64_t v39 = v31;
          return sub_1C20D1348(v39, type metadata accessor for DosageItem);
        }

        (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v99);
      }
      else
      {
        uint64_t v99 = v32;
        uint64_t v47 = v94;
        sub_1C20CF4D4((uint64_t)v19, v94, (uint64_t (*)(void))type metadata accessor for Dosage);
        id v48 = v95;
        id v49 = objc_msgSend(v95, sel_text);
        if (v49)
        {
          uint64_t v50 = v49;
          uint64_t v51 = sub_1C214A5F0();
          unint64_t v53 = v52;

          swift_bridgeObjectRelease();
          uint64_t v54 = HIBYTE(v53) & 0xF;
          if ((v53 & 0x2000000000000000) == 0) {
            uint64_t v54 = v51 & 0xFFFFFFFFFFFFLL;
          }
          if (v54)
          {
            id v55 = objc_msgSend(v48, sel_text);
            if (v55)
            {
              uint64_t v56 = v55;
              sub_1C214A5F0();
            }
            sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8C0);
            long long v57 = v91;
            sub_1C2147BA0();
            sub_1C2149020();
            double v59 = v58;
            uint64_t v60 = v57;
            swift_bridgeObjectRelease();
            uint64_t v61 = v93 + 8;
            id v62 = *(void (**)(char *, uint64_t))(v93 + 8);
            v62(v60, v92);
            if (v59 == *(double *)(v47 + *(int *)(v20 + 24)))
            {
              sub_1C20D1348(v47, (uint64_t (*)(void))type metadata accessor for Dosage);
              uint64_t v39 = v97;
            }
            else
            {
              uint64_t v93 = v61;
              id v63 = objc_msgSend(v48, sel_text);
              if (v63)
              {
                unint64_t v64 = v63;
                sub_1C214A5F0();
              }
              uint64_t v65 = v91;
              sub_1C2147BA0();
              sub_1C2149020();
              double v67 = v66;
              v62(v65, v92);
              id v68 = sub_1C20CA660();
              sub_1C20CBEB8(v67);
              uint64_t v69 = (void *)sub_1C214A5B0();
              swift_bridgeObjectRelease();
              objc_msgSend(v68, sel_setText_, v69);

              swift_bridgeObjectRelease();
              (*(void (**)(char *, uint64_t, uint64_t))(v88 + 16))(v87, v47, v89);
              uint64_t v70 = v47 + *(int *)(v20 + 20);
              uint64_t v71 = v85;
              uint64_t v72 = v86;
              (*(void (**)(char *, uint64_t, uint64_t))(v85 + 16))(v90, v70, v86);
              id v73 = objc_msgSend(v95, sel_text);
              if (v73)
              {
                uint64_t v74 = v73;
                sub_1C214A5F0();
              }
              uint64_t v75 = v99;
              uint64_t v76 = v91;
              sub_1C2147BA0();
              sub_1C2149020();
              uint64_t v78 = v77;
              swift_bridgeObjectRelease();
              v62(v76, v92);
              uint64_t v79 = (uint64_t)v84;
              (*(void (**)(char *, char *, uint64_t))(v88 + 32))(v84, v87, v89);
              (*(void (**)(uint64_t, char *, uint64_t))(v71 + 32))(v79 + *(int *)(v20 + 20), v90, v72);
              *(void *)(v79 + *(int *)(v20 + 24)) = v78;
              (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v96 + 56))(v79, 0, 1, v20);
              swift_beginAccess();
              sub_1C20D1ED0(v79, v75, &qword_1EA2C5650, (uint64_t (*)(uint64_t))type metadata accessor for Dosage);
              swift_endAccess();
              uint64_t v80 = v97;
              uint64_t v81 = *(void (**)(uint64_t, uint64_t))(v97 + *(int *)(v25 + 48));
              if (v81)
              {
                uint64_t v82 = v83;
                sub_1C20D1E50(v75, v83, &qword_1EA2C5650, (uint64_t (*)(uint64_t))type metadata accessor for Dosage);
                swift_retain();
                v81(v80, v82);
                sub_1C1F31118((uint64_t)v81);
                sub_1C20D20C4(v82, &qword_1EA2C5650, (uint64_t (*)(uint64_t))type metadata accessor for Dosage);
              }
              sub_1C20D1348(v94, (uint64_t (*)(void))type metadata accessor for Dosage);
              uint64_t v39 = v80;
            }
            return sub_1C20D1348(v39, type metadata accessor for DosageItem);
          }
        }
        sub_1C20D1348(v47, (uint64_t (*)(void))type metadata accessor for Dosage);
      }
      uint64_t v39 = v31;
      return sub_1C20D1348(v39, type metadata accessor for DosageItem);
    }
  }
  else
  {
    sub_1C20D1348((uint64_t)v101, (uint64_t (*)(void))sub_1C1F24488);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v26 + 56))(v24, 1, 1, v25);
  }
  sub_1C20D20C4((uint64_t)v24, &qword_1EA2C6C80, type metadata accessor for DosageItem);
  sub_1C21497B0();
  unint64_t v40 = sub_1C21497E0();
  os_log_type_t v41 = sub_1C214ABD0();
  if (os_log_type_enabled(v40, v41))
  {
    uint64_t v42 = (uint8_t *)swift_slowAlloc();
    uint64_t v43 = swift_slowAlloc();
    v101[0] = v43;
    *(_DWORD *)uint64_t v42 = 136315138;
    uint64_t v44 = sub_1C214BC10();
    v100[0] = sub_1C1F6FD54(v44, v45, v101);
    sub_1C214B530();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C1F0B000, v40, v41, "[%s] item is not a DatePickerItem", v42, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C8754730](v43, -1, -1);
    MEMORY[0x1C8754730](v42, -1, -1);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v99);
}

void sub_1C20CD310()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI24DosageCollectionViewCell_timePicker);
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  uint64_t v2 = (void *)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_setAccessibilityIdentifier_, v2);

  id v3 = sub_1C20C9EE8();
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  uint64_t v4 = (void *)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setAccessibilityIdentifier_, v4);

  id v6 = sub_1C20CA2A8();
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  uint64_t v5 = (void *)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  objc_msgSend(v6, sel_setAccessibilityIdentifier_, v5);
}

uint64_t sub_1C20CD4A8()
{
  uint64_t v1 = v0;
  sub_1C1F0ED28();
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1C2151820;
  id v3 = *(void **)&v0[OBJC_IVAR____TtC19HealthMedicationsUI24DosageCollectionViewCell_timePicker];
  id v4 = objc_msgSend(v3, sel_topAnchor);
  id v5 = objc_msgSend(v1, sel_contentView);
  id v6 = objc_msgSend(v5, sel_topAnchor);

  id v7 = objc_msgSend(v4, sel_constraintEqualToAnchor_constant_, v6, 6.0);
  *(void *)(v2 + 32) = v7;
  id v8 = objc_msgSend(v3, sel_leadingAnchor);
  id v9 = objc_msgSend(v1, sel_contentView);
  id v10 = objc_msgSend(v9, sel_leadingAnchor);

  if (qword_1EA2C2730 != -1) {
    swift_once();
  }
  id v11 = objc_msgSend(v8, sel_constraintEqualToAnchor_constant_, v10, *(double *)&qword_1EA2C6C60);

  *(void *)(v2 + 4sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = v11;
  id v12 = objc_msgSend(v3, sel_trailingAnchor);
  id v13 = objc_msgSend(v1, (SEL)&selRef_setContentHuggingPriority_forAxis_);
  id v14 = objc_msgSend(v13, sel_trailingAnchor);

  id v15 = objc_msgSend(v12, sel_constraintGreaterThanOrEqualToAnchor_constant_, v14, -*(double *)&qword_1EA2C6C60);
  *(void *)(v2 + 48) = v15;
  id v16 = sub_1C20CA2A8();
  id v17 = objc_msgSend(v16, sel_topAnchor);

  id v18 = objc_msgSend(v3, sel_bottomAnchor);
  id v19 = objc_msgSend(v17, sel_constraintEqualToAnchor_constant_, v18, 6.0);

  *(void *)(v2 + 56) = v19;
  id v20 = sub_1C20CA2A8();
  id v21 = objc_msgSend(v20, sel_leadingAnchor);

  id v22 = objc_msgSend(v1, (SEL)&selRef_setContentHuggingPriority_forAxis_);
  id v23 = objc_msgSend(v22, sel_leadingAnchor);

  id v24 = objc_msgSend(v21, sel_constraintEqualToAnchor_constant_, v23, *(double *)&qword_1EA2C6C60);
  *(void *)(v2 + 64) = v24;
  id v25 = sub_1C20CA2A8();
  id v26 = objc_msgSend(v25, sel_trailingAnchor);

  id v27 = objc_msgSend(v1, (SEL)&selRef_setContentHuggingPriority_forAxis_);
  id v28 = objc_msgSend(v27, sel_trailingAnchor);

  id v29 = objc_msgSend(v26, sel_constraintGreaterThanOrEqualToAnchor_constant_, v28, -*(double *)&qword_1EA2C6C60);
  *(void *)(v2 + 72) = v29;
  id v30 = sub_1C20CA660();
  id v31 = objc_msgSend(v30, sel_topAnchor);

  id v32 = sub_1C20CA2A8();
  id v33 = objc_msgSend(v32, sel_bottomAnchor);

  id v34 = objc_msgSend(v31, sel_constraintEqualToAnchor_constant_, v33, 6.0);
  *(void *)(v2 + 8sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = v34;
  id v35 = sub_1C20CA660();
  id v36 = objc_msgSend(v35, (SEL)&selRef_setTranslatesAutoresizingMaskIntoConstraints_ + 2);

  id v37 = objc_msgSend(v1, (SEL)&selRef_setContentHuggingPriority_forAxis_);
  id v38 = objc_msgSend(v37, (SEL)&selRef_setTranslatesAutoresizingMaskIntoConstraints_ + 2);

  id v39 = objc_msgSend(v36, sel_constraintEqualToAnchor_constant_, v38, *(double *)&qword_1EA2C6C60);
  *(void *)(v2 + 88) = v39;
  id v40 = sub_1C20CA660();
  id v41 = objc_msgSend(v40, sel_trailingAnchor);

  id v42 = objc_msgSend(v1, (SEL)&selRef_setContentHuggingPriority_forAxis_);
  id v43 = objc_msgSend(v42, sel_trailingAnchor);

  id v44 = objc_msgSend(v41, sel_constraintGreaterThanOrEqualToAnchor_constant_, v43, -*(double *)&qword_1EA2C6C60);
  *(void *)(v2 + 96) = v44;
  id v45 = sub_1C20CA660();
  id v46 = objc_msgSend(v45, sel_bottomAnchor);

  id v47 = objc_msgSend(v1, (SEL)&selRef_setContentHuggingPriority_forAxis_);
  id v48 = objc_msgSend(v47, sel_bottomAnchor);

  id v49 = objc_msgSend(v46, sel_constraintEqualToAnchor_constant_, v48, -6.0);
  *(void *)(v2 + 104) = v49;
  sub_1C214A7A0();
  uint64_t v50 = v2;
  uint64_t v51 = self;
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C810);
  unint64_t v52 = (void *)sub_1C214A770();
  objc_msgSend(v51, sel_activateConstraints_, v52);

  *(void *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI24DosageCollectionViewCell_currentLayoutConstraints] = v50;

  return swift_bridgeObjectRelease();
}

uint64_t sub_1C20CDAE0()
{
  uint64_t v1 = v0;
  sub_1C1F0ED28();
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1C2151820;
  id v3 = *(void **)&v0[OBJC_IVAR____TtC19HealthMedicationsUI24DosageCollectionViewCell_timePicker];
  id v4 = objc_msgSend(v3, sel_leadingAnchor);
  id v5 = objc_msgSend(v1, sel_contentView);
  id v6 = objc_msgSend(v5, sel_leadingAnchor);

  if (qword_1EA2C2730 != -1) {
    swift_once();
  }
  id v7 = objc_msgSend(v4, sel_constraintEqualToAnchor_constant_, v6, *(double *)&qword_1EA2C6C60);

  *(void *)(v2 + 32) = v7;
  id v8 = objc_msgSend(v3, sel_topAnchor);
  id v9 = objc_msgSend(v1, sel_contentView);
  id v10 = objc_msgSend(v9, sel_topAnchor);

  id v11 = objc_msgSend(v8, sel_constraintEqualToAnchor_constant_, v10, 6.0);
  *(void *)(v2 + 4sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = v11;
  id v12 = objc_msgSend(v3, sel_bottomAnchor);
  id v13 = objc_msgSend(v1, sel_contentView);
  id v14 = objc_msgSend(v13, sel_bottomAnchor);

  id v15 = objc_msgSend(v12, sel_constraintEqualToAnchor_constant_, v14, -6.0);
  *(void *)(v2 + 48) = v15;
  id v16 = sub_1C20CA2A8();
  id v17 = objc_msgSend(v16, sel_leadingAnchor);

  id v18 = objc_msgSend(v3, sel_trailingAnchor);
  id v19 = objc_msgSend(v17, sel_constraintGreaterThanOrEqualToAnchor_constant_, v18, *(double *)&qword_1EA2C6C60);

  *(void *)(v2 + 56) = v19;
  id v20 = sub_1C20CA2A8();
  id v21 = objc_msgSend(v20, sel_topAnchor);

  id v22 = objc_msgSend(v1, sel_contentView);
  id v23 = objc_msgSend(v22, sel_topAnchor);

  id v24 = objc_msgSend(v21, sel_constraintEqualToAnchor_constant_, v23, 6.0);
  *(void *)(v2 + 64) = v24;
  id v25 = sub_1C20CA2A8();
  id v26 = objc_msgSend(v25, sel_bottomAnchor);

  id v27 = objc_msgSend(v1, sel_contentView);
  id v28 = objc_msgSend(v27, sel_bottomAnchor);

  id v29 = objc_msgSend(v26, sel_constraintEqualToAnchor_constant_, v28, -6.0);
  *(void *)(v2 + 72) = v29;
  id v30 = sub_1C20CA660();
  id v31 = objc_msgSend(v30, sel_leadingAnchor);

  id v32 = sub_1C20CA2A8();
  id v33 = objc_msgSend(v32, sel_trailingAnchor);

  id v34 = objc_msgSend(v31, sel_constraintEqualToAnchor_constant_, v33, 5.0);
  *(void *)(v2 + 8sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = v34;
  id v35 = sub_1C20CA660();
  id v36 = objc_msgSend(v35, sel_trailingAnchor);

  id v37 = objc_msgSend(v1, sel_contentView);
  id v38 = objc_msgSend(v37, sel_trailingAnchor);

  id v39 = objc_msgSend(v36, sel_constraintEqualToAnchor_constant_, v38, -*(double *)&qword_1EA2C6C60);
  *(void *)(v2 + 88) = v39;
  id v40 = sub_1C20CA660();
  id v41 = objc_msgSend(v40, sel_topAnchor);

  id v42 = objc_msgSend(v1, sel_contentView);
  id v43 = objc_msgSend(v42, sel_topAnchor);

  id v44 = objc_msgSend(v41, sel_constraintEqualToAnchor_constant_, v43, 6.0);
  *(void *)(v2 + 96) = v44;
  id v45 = sub_1C20CA660();
  id v46 = objc_msgSend(v45, sel_bottomAnchor);

  id v47 = objc_msgSend(v1, sel_contentView);
  id v48 = objc_msgSend(v47, sel_bottomAnchor);

  id v49 = objc_msgSend(v46, sel_constraintEqualToAnchor_constant_, v48, -6.0);
  *(void *)(v2 + 104) = v49;
  sub_1C214A7A0();
  uint64_t v50 = v2;
  uint64_t v51 = self;
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C810);
  unint64_t v52 = (void *)sub_1C214A770();
  objc_msgSend(v51, sel_activateConstraints_, v52);

  *(void *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI24DosageCollectionViewCell_currentLayoutConstraints] = v50;

  return swift_bridgeObjectRelease();
}

id DosageCollectionViewCell.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DosageCollectionViewCell(0);
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t DosageCollectionViewCell.deselectionBehavior.getter@<X0>(unsigned char *a1@<X8>)
{
  *a1 = 1;
  uint64_t v2 = *MEMORY[0x1E4F66478];
  uint64_t v3 = sub_1C2148620();
  id v4 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104);

  return v4(a1, v2, v3);
}

uint64_t sub_1C20CE2E4()
{
  return sub_1C2148480();
}

Swift::Void __swiftcall DosageCollectionViewCell.textFieldShouldReturn(_:)(UITextField *a1)
{
  id v1 = sub_1C20CA2A8();
  objc_msgSend(v1, sel_resignFirstResponder);
}

Swift::Bool __swiftcall DosageCollectionViewCell.textFieldShouldEndEditing(_:)(UITextField *a1)
{
  return 1;
}

uint64_t sub_1C20CE54C()
{
  sub_1C2148990();
  uint64_t result = sub_1C2148980();
  qword_1EA2C6C60 = v1;
  return result;
}

uint64_t sub_1C20CE580()
{
  uint64_t v1 = v0;
  id ObjectType = (id)swift_getObjectType();
  uint64_t v2 = sub_1C21497F0();
  uint64_t v81 = *(void *)(v2 - 8);
  uint64_t v82 = (char *)v2;
  uint64_t v3 = MEMORY[0x1F4188790](v2);
  id v5 = (char *)v69 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  uint64_t v74 = (void *)((char *)v69 - v6);
  id v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C1F17420(0, &qword_1EBF0B1F0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v72 = (char *)v69 - v9;
  uint64_t v75 = sub_1C2147AC0();
  uint64_t v77 = *(void *)(v75 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v75);
  id v12 = (char *)v69 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v78 = (char *)v69 - v13;
  sub_1C1F17420(0, &qword_1EA2C5650, (uint64_t (*)(uint64_t))type metadata accessor for Dosage, v7);
  uint64_t v15 = MEMORY[0x1F4188790](v14 - 8);
  id v73 = (char *)v69 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  id v18 = (char *)v69 - v17;
  uint64_t v19 = type metadata accessor for Dosage();
  uint64_t v79 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19);
  uint64_t v76 = (uint64_t)v69 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1F17420(0, &qword_1EA2C6C80, type metadata accessor for DosageItem, v7);
  MEMORY[0x1F4188790](v21 - 8);
  id v23 = (char *)v69 - v22;
  uint64_t v24 = type metadata accessor for DosageItem(0);
  uint64_t v25 = *(void *)(v24 - 8);
  MEMORY[0x1F4188790](v24);
  id v27 = (char *)v69 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI24DosageCollectionViewCell_item;
  swift_beginAccess();
  sub_1C20CF53C(v28, (uint64_t)v84, (uint64_t (*)(void))sub_1C1F24488);
  if (!v84[3])
  {
    sub_1C20D1348((uint64_t)v84, (uint64_t (*)(void))sub_1C1F24488);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v25 + 56))(v23, 1, 1, v24);
    goto LABEL_8;
  }
  sub_1C1F23804(0, (unint64_t *)&qword_1EBF0C2F0);
  int v29 = swift_dynamicCast();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v23, v29 ^ 1u, 1, v24);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24) == 1)
  {
LABEL_8:
    sub_1C20D20C4((uint64_t)v23, &qword_1EA2C6C80, type metadata accessor for DosageItem);
    sub_1C21497B0();
    id v40 = sub_1C21497E0();
    os_log_type_t v41 = sub_1C214ABD0();
    if (os_log_type_enabled(v40, v41))
    {
      id v42 = (uint8_t *)swift_slowAlloc();
      uint64_t v43 = swift_slowAlloc();
      v84[0] = v43;
      *(_DWORD *)id v42 = 136315138;
      uint64_t v44 = sub_1C214BC10();
      v83[0] = sub_1C1F6FD54(v44, v45, v84);
      sub_1C214B530();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C1F0B000, v40, v41, "[%s] item is not a DatePickerItem", v42, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C8754730](v43, -1, -1);
      MEMORY[0x1C8754730](v42, -1, -1);
    }

    return (*(uint64_t (**)(char *, char *))(v81 + 8))(v5, v82);
  }
  uint64_t v30 = (uint64_t)v27;
  sub_1C20CF4D4((uint64_t)v23, (uint64_t)v27, type metadata accessor for DosageItem);
  uint64_t v31 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI24DosageCollectionViewCell_currentDosage;
  swift_beginAccess();
  sub_1C20D1E50(v31, (uint64_t)v18, &qword_1EA2C5650, (uint64_t (*)(uint64_t))type metadata accessor for Dosage);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v79 + 48))(v18, 1, v19) == 1)
  {
    sub_1C20D20C4((uint64_t)v18, &qword_1EA2C5650, (uint64_t (*)(uint64_t))type metadata accessor for Dosage);
    id v32 = (uint64_t (*)(void, void, void, void))v74;
    sub_1C21497B0();
    id v33 = sub_1C21497E0();
    os_log_type_t v34 = sub_1C214ABD0();
    if (os_log_type_enabled(v33, v34))
    {
      id v35 = (uint8_t *)swift_slowAlloc();
      uint64_t v36 = swift_slowAlloc();
      v83[0] = v36;
      *(_DWORD *)id v35 = 136315138;
      uint64_t v37 = sub_1C214BC10();
      v83[3] = sub_1C1F6FD54(v37, v38, v83);
      sub_1C214B530();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C1F0B000, v33, v34, "[%s] CurrentDosage is nil", v35, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C8754730](v36, -1, -1);
      MEMORY[0x1C8754730](v35, -1, -1);
    }

    (*(void (**)(uint64_t (*)(void, void, void, void), char *))(v81 + 8))(v32, v82);
    return sub_1C20D1348(v30, type metadata accessor for DosageItem);
  }
  else
  {
    uint64_t v81 = v31;
    uint64_t v82 = v27;
    uint64_t v46 = v76;
    sub_1C20CF4D4((uint64_t)v18, v76, (uint64_t (*)(void))type metadata accessor for Dosage);
    id ObjectType = *(id *)(v1 + OBJC_IVAR____TtC19HealthMedicationsUI24DosageCollectionViewCell_timePicker);
    id v47 = objc_msgSend(ObjectType, sel_date);
    sub_1C2147A60();

    id v48 = v78;
    sub_1C2147A30();
    uint64_t v50 = v77 + 8;
    id v49 = *(void (**)(char *, uint64_t))(v77 + 8);
    uint64_t v51 = v75;
    v49(v12, v75);
    sub_1C20D207C(&qword_1EA2C5070, MEMORY[0x1E4F27928]);
    if (sub_1C214A5A0())
    {
      v49(v48, v51);
      sub_1C20D1348(v46, (uint64_t (*)(void))type metadata accessor for Dosage);
      return sub_1C20D1348((uint64_t)v82, type metadata accessor for DosageItem);
    }
    uint64_t v71 = v50;
    uint64_t v52 = (uint64_t)v82;
    unint64_t v53 = &v82[*(int *)(v24 + 52)];
    uint64_t v54 = (uint64_t)v73;
    uint64_t v55 = v77;
    uint64_t v74 = *(void **)v53;
    uint64_t v70 = v49;
    if (v74)
    {
      uint64_t v56 = *((void *)v53 + 1);
      uint64_t v57 = (uint64_t)v72;
      (*(void (**)(char *, char *, uint64_t))(v77 + 16))(v72, v78, v51);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v55 + 56))(v57, 0, 1, v51);
      swift_retain();
      v69[1] = v56;
      LOBYTE(v56) = ((uint64_t (*)(uint64_t, uint64_t, void, void))v74)(v52, v57, 0, 0);
      sub_1C20D20C4(v57, &qword_1EBF0B1F0, MEMORY[0x1E4F27928]);
      if ((v56 & 1) == 0)
      {
        unint64_t v64 = v78;
        sub_1C21479D0();
        uint64_t v65 = v51;
        double v66 = (void *)sub_1C2147A00();
        uint64_t v67 = v52;
        id v68 = v70;
        v70(v12, v65);
        objc_msgSend(ObjectType, sel_setDate_animated_, v66, 1);

        sub_1C20CE580();
        sub_1C1F31118((uint64_t)v74);
        v68(v64, v65);
        sub_1C20D1348(v76, (uint64_t (*)(void))type metadata accessor for Dosage);
        return sub_1C20D1348(v67, type metadata accessor for DosageItem);
      }
      sub_1C1F31118((uint64_t)v74);
    }
    uint64_t v58 = sub_1C2147B20();
    uint64_t v59 = v76;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 16))(v54, v76, v58);
    uint64_t v60 = v78;
    (*(void (**)(uint64_t, char *, uint64_t))(v55 + 16))(v54 + *(int *)(v19 + 20), v78, v51);
    *(void *)(v54 + *(int *)(v19 + 24)) = *(void *)(v59 + *(int *)(v19 + 24));
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v79 + 56))(v54, 0, 1, v19);
    uint64_t v61 = v81;
    swift_beginAccess();
    sub_1C20D1ED0(v54, v61, &qword_1EA2C5650, (uint64_t (*)(uint64_t))type metadata accessor for Dosage);
    swift_endAccess();
    uint64_t v62 = v51;
    id v63 = *(void (**)(uint64_t, uint64_t))(v52 + *(int *)(v24 + 48));
    if (v63)
    {
      sub_1C20D1E50(v61, v54, &qword_1EA2C5650, (uint64_t (*)(uint64_t))type metadata accessor for Dosage);
      swift_retain();
      v63(v52, v54);
      sub_1C1F31118((uint64_t)v63);
      sub_1C20D20C4(v54, &qword_1EA2C5650, (uint64_t (*)(uint64_t))type metadata accessor for Dosage);
    }
    v70(v60, v62);
    sub_1C20D1348(v59, (uint64_t (*)(void))type metadata accessor for Dosage);
    return sub_1C20D1348(v52, type metadata accessor for DosageItem);
  }
}

void _s19HealthMedicationsUI24DosageCollectionViewCellC5coderACSgSo7NSCoderC_tcfc_0()
{
  uint64_t v1 = v0;
  uint64_t v2 = &v0[OBJC_IVAR____TtC19HealthMedicationsUI24DosageCollectionViewCell_currentDosage];
  uint64_t v3 = type metadata accessor for Dosage();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 1, v3);
  uint64_t v4 = (uint64_t *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI24DosageCollectionViewCell_baseIdentifier];
  uint64_t v12 = sub_1C214A5F0();
  uint64_t v13 = v5;
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  *uint64_t v4 = v12;
  v4[1] = v13;
  uint64_t v6 = &v1[OBJC_IVAR____TtC19HealthMedicationsUI24DosageCollectionViewCell_item];
  *(_OWORD *)uint64_t v6 = 0u;
  *((_OWORD *)v6 + sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, 0, 1) = 0u;
  *((void *)v6 + 4) = 0;
  id v7 = &v1[OBJC_IVAR____TtC19HealthMedicationsUI24DosageCollectionViewCell____lazy_storage___deleteAccessory];
  uint64_t v8 = sub_1C2149930();
  uint64_t v9 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56);
  v9(v7, 1, 1, v8);
  uint64_t v10 = OBJC_IVAR____TtC19HealthMedicationsUI24DosageCollectionViewCell_timePicker;
  id v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB16B0]), sel_init);
  objc_msgSend(v11, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v11, sel_setPreferredDatePickerStyle_, 2);
  objc_msgSend(v11, sel_setDatePickerMode_, 0);
  objc_msgSend(v11, sel_setMinuteInterval_, 5);
  objc_msgSend(v11, sel_setContentHorizontalAlignment_, 4);
  objc_msgSend(v11, sel_setRoundsToMinuteInterval_, 1);
  *(void *)&v1[v10] = v11;
  *(void *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI24DosageCollectionViewCell____lazy_storage___toolbar] = 0;
  *(void *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI24DosageCollectionViewCell____lazy_storage___valueField] = 0;
  *(void *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI24DosageCollectionViewCell____lazy_storage___valueLabel] = 0;
  v9(&v1[OBJC_IVAR____TtC19HealthMedicationsUI24DosageCollectionViewCell____lazy_storage___spacerAccessory], 1, 1, v8);
  *(void *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI24DosageCollectionViewCell_currentLayoutConstraints] = MEMORY[0x1E4FBC860];

  sub_1C214B910();
  __break(1u);
}

uint64_t sub_1C20CF4D4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C20CF53C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t _s19HealthMedicationsUI24DosageCollectionViewCellC27textFieldShouldBeginEditingySbSo06UITextI0CF_0()
{
  sub_1C1F17420(0, &qword_1EA2C6C80, type metadata accessor for DosageItem, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = &v12[-v2];
  uint64_t v4 = type metadata accessor for DosageItem(0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  id v7 = &v12[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = v0 + OBJC_IVAR____TtC19HealthMedicationsUI24DosageCollectionViewCell_item;
  swift_beginAccess();
  sub_1C20CF53C(v8, (uint64_t)v13, (uint64_t (*)(void))sub_1C1F24488);
  if (!v14)
  {
    sub_1C20D1348((uint64_t)v13, (uint64_t (*)(void))sub_1C1F24488);
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v3, 1, 1, v4);
    goto LABEL_5;
  }
  sub_1C1F23804(0, (unint64_t *)&qword_1EBF0C2F0);
  int v9 = swift_dynamicCast();
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v5 + 56))(v3, v9 ^ 1u, 1, v4);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
LABEL_5:
    sub_1C20D20C4((uint64_t)v3, &qword_1EA2C6C80, type metadata accessor for DosageItem);
    return 0;
  }
  sub_1C20CF4D4((uint64_t)v3, (uint64_t)v7, type metadata accessor for DosageItem);
  uint64_t v10 = v7[*(int *)(v4 + 32)];
  sub_1C20D1348((uint64_t)v7, type metadata accessor for DosageItem);
  return v10;
}

uint64_t _s19HealthMedicationsUI24DosageCollectionViewCellC24textFieldDidBeginEditingyySo06UITextI0CF_0(void *a1)
{
  uint64_t v2 = sub_1C214A3F0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1C214A420();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  int v9 = (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0CB10);
  uint64_t v10 = (void *)sub_1C214AD80();
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a1;
  aBlock[4] = sub_1C1FC7E3C;
  aBlock[5] = v11;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C1F0E42C;
  aBlock[3] = &block_descriptor_26;
  uint64_t v12 = _Block_copy(aBlock);
  id v13 = a1;
  swift_release();
  sub_1C214A410();
  aBlock[0] = MEMORY[0x1E4FBC860];
  sub_1C20D207C((unint64_t *)&qword_1EBF0CAE0, MEMORY[0x1E4FBCB00]);
  sub_1C1F17420(0, (unint64_t *)&qword_1EBF0CAF0, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
  sub_1C1F12754();
  sub_1C214B640();
  MEMORY[0x1C8752F10](0, v9, v5, v12);
  _Block_release(v12);

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t _s19HealthMedicationsUI24DosageCollectionViewCellC9textField_24shouldChangeCharactersIn17replacementStringSbSo06UITextI0C_So8_NSRangeVSStF_0(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C2147BB0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  int v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = objc_msgSend(a1, sel_text);
  if (v10)
  {
    uint64_t v11 = v10;
    uint64_t v12 = (void *)sub_1C214A5B0();
    id v13 = objc_msgSend(v11, sel_stringByReplacingCharactersInRange_withString_, a2, a3, v12);

    sub_1C214A5F0();
    sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8C0);
    sub_1C2147BA0();
    char v14 = sub_1C2149000();
    swift_bridgeObjectRelease();

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  else
  {
    char v14 = 0;
  }
  return v14 & 1;
}

uint64_t _s19HealthMedicationsUI24DosageCollectionViewCellC22textFieldDidEndEditingyySo06UITextI0CF_0()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v70 = sub_1C21497F0();
  uint64_t v69 = *(void *)(v70 - 8);
  MEMORY[0x1F4188790](v70);
  uint64_t v3 = (char *)&v64 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1C2147AC0();
  uint64_t v75 = *(void *)(v4 - 8);
  uint64_t v76 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v74 = (char *)&v64 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = sub_1C2147B20();
  uint64_t v72 = *(void *)(v73 - 8);
  MEMORY[0x1F4188790](v73);
  uint64_t v71 = (char *)&v64 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1C2147BB0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v77 = v7;
  uint64_t v78 = v8;
  MEMORY[0x1F4188790](v7);
  id v10 = (char *)&v64 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C1F17420(0, &qword_1EA2C5650, (uint64_t (*)(uint64_t))type metadata accessor for Dosage, MEMORY[0x1E4FBB718]);
  uint64_t v13 = MEMORY[0x1F4188790](v12 - 8);
  uint64_t v66 = (uint64_t)&v64 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  id v68 = (char *)&v64 - v16;
  MEMORY[0x1F4188790](v15);
  id v18 = (char *)&v64 - v17;
  uint64_t v19 = type metadata accessor for Dosage();
  uint64_t v79 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19);
  uint64_t v80 = (uint64_t)&v64 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1F17420(0, &qword_1EA2C6C80, type metadata accessor for DosageItem, v11);
  MEMORY[0x1F4188790](v21 - 8);
  id v23 = (char *)&v64 - v22;
  uint64_t v24 = type metadata accessor for DosageItem(0);
  uint64_t v25 = *(void *)(v24 - 8);
  MEMORY[0x1F4188790](v24);
  id v27 = (char *)&v64 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v28 = sub_1C20CA2A8();
  objc_msgSend(v28, sel_resignFirstResponder);

  uint64_t v29 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI24DosageCollectionViewCell_item;
  swift_beginAccess();
  sub_1C20CF53C(v29, (uint64_t)v82, (uint64_t (*)(void))sub_1C1F24488);
  if (!v83)
  {
    sub_1C20D1348((uint64_t)v82, (uint64_t (*)(void))sub_1C1F24488);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v25 + 56))(v23, 1, 1, v24);
    return sub_1C20D20C4((uint64_t)v23, &qword_1EA2C6C80, type metadata accessor for DosageItem);
  }
  sub_1C1F23804(0, (unint64_t *)&qword_1EBF0C2F0);
  int v30 = swift_dynamicCast();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v23, v30 ^ 1u, 1, v24);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24) == 1) {
    return sub_1C20D20C4((uint64_t)v23, &qword_1EA2C6C80, type metadata accessor for DosageItem);
  }
  uint64_t v31 = v27;
  sub_1C20CF4D4((uint64_t)v23, (uint64_t)v27, type metadata accessor for DosageItem);
  uint64_t v32 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI24DosageCollectionViewCell_currentDosage;
  swift_beginAccess();
  sub_1C20D1E50(v32, (uint64_t)v18, &qword_1EA2C5650, (uint64_t (*)(uint64_t))type metadata accessor for Dosage);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v79 + 48))(v18, 1, v19) != 1)
  {
    sub_1C20CF4D4((uint64_t)v18, v80, (uint64_t (*)(void))type metadata accessor for Dosage);
    id v41 = sub_1C20CA2A8();
    id v42 = objc_msgSend(v41, sel_text);

    if (v42)
    {
      sub_1C214A5F0();
    }
    sub_1C20CBCC8();
    swift_bridgeObjectRelease();
    id v43 = sub_1C20CA2A8();
    id v44 = objc_msgSend(v43, sel_text);

    uint64_t v65 = v32;
    if (v44)
    {
      sub_1C214A5F0();
    }
    sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8C0);
    sub_1C2147BA0();
    sub_1C2149020();
    double v46 = v45;
    swift_bridgeObjectRelease();
    id v47 = *(void (**)(char *, uint64_t))(v78 + 8);
    v78 += 8;
    v47(v10, v77);
    if (v46 != *(double *)(v80 + *(int *)(v19 + 24))) {
      goto LABEL_19;
    }
    id v48 = sub_1C20CA2A8();
    id v49 = objc_msgSend(v48, sel_text);

    if (v49)
    {
      uint64_t v50 = sub_1C214A5F0();
      uint64_t v52 = v51;

      if (!v50 && v52 == 0xE000000000000000)
      {
        swift_bridgeObjectRelease();
LABEL_19:
        uint64_t v54 = v80;
        (*(void (**)(char *, uint64_t, uint64_t))(v72 + 16))(v71, v80, v73);
        (*(void (**)(char *, uint64_t, uint64_t))(v75 + 16))(v74, v54 + *(int *)(v19 + 20), v76);
        id v55 = sub_1C20CA2A8();
        id v56 = objc_msgSend(v55, sel_text);

        if (v56)
        {
          sub_1C214A5F0();
        }
        sub_1C2147BA0();
        sub_1C2149020();
        uint64_t v58 = v57;
        swift_bridgeObjectRelease();
        v47(v10, v77);
        uint64_t v59 = (uint64_t)v68;
        (*(void (**)(char *, char *, uint64_t))(v72 + 32))(v68, v71, v73);
        (*(void (**)(uint64_t, char *, uint64_t))(v75 + 32))(v59 + *(int *)(v19 + 20), v74, v76);
        *(void *)(v59 + *(int *)(v19 + 24)) = v58;
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v79 + 56))(v59, 0, 1, v19);
        uint64_t v60 = v65;
        swift_beginAccess();
        sub_1C20D1ED0(v59, v60, &qword_1EA2C5650, (uint64_t (*)(uint64_t))type metadata accessor for Dosage);
        swift_endAccess();
        uint64_t v61 = *(void (**)(char *, uint64_t))&v31[*(int *)(v24 + 48)];
        if (v61)
        {
          uint64_t v62 = v60;
          uint64_t v63 = v66;
          sub_1C20D1E50(v62, v66, &qword_1EA2C5650, (uint64_t (*)(uint64_t))type metadata accessor for Dosage);
          swift_retain();
          v61(v31, v63);
          sub_1C1F31118((uint64_t)v61);
          sub_1C20D20C4(v63, &qword_1EA2C5650, (uint64_t (*)(uint64_t))type metadata accessor for Dosage);
        }
        goto LABEL_23;
      }
      char v53 = sub_1C214BA80();
      swift_bridgeObjectRelease();
      if (v53) {
        goto LABEL_19;
      }
    }
LABEL_23:
    sub_1C20D1348(v80, (uint64_t (*)(void))type metadata accessor for Dosage);
    goto LABEL_24;
  }
  sub_1C20D20C4((uint64_t)v18, &qword_1EA2C5650, (uint64_t (*)(uint64_t))type metadata accessor for Dosage);
  sub_1C21497B0();
  id v33 = sub_1C21497E0();
  os_log_type_t v34 = sub_1C214ABD0();
  if (!os_log_type_enabled(v33, v34))
  {

    (*(void (**)(char *, uint64_t))(v69 + 8))(v3, v70);
LABEL_24:
    uint64_t v39 = (uint64_t)v31;
    return sub_1C20D1348(v39, type metadata accessor for DosageItem);
  }
  id v35 = (uint8_t *)swift_slowAlloc();
  uint64_t v36 = swift_slowAlloc();
  v81[0] = v36;
  *(_DWORD *)id v35 = 136315138;
  uint64_t v37 = sub_1C214BC10();
  v81[3] = sub_1C1F6FD54(v37, v38, v81);
  sub_1C214B530();
  swift_bridgeObjectRelease();
  _os_log_impl(&dword_1C1F0B000, v33, v34, "[%s] CurrentDosage is nil", v35, 0xCu);
  swift_arrayDestroy();
  MEMORY[0x1C8754730](v36, -1, -1);
  MEMORY[0x1C8754730](v35, -1, -1);

  (*(void (**)(char *, uint64_t))(v69 + 8))(v3, v70);
  uint64_t v39 = (uint64_t)v31;
  return sub_1C20D1348(v39, type metadata accessor for DosageItem);
}

uint64_t sub_1C20D08E0()
{
  return sub_1C20D207C(&qword_1EA2C5640, (void (*)(uint64_t))type metadata accessor for DosageItem);
}

uint64_t sub_1C20D0928@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = (uint64_t *)(a1 + *(int *)(type metadata accessor for DosageItem(0) + 44));
  uint64_t v4 = *v3;
  if (*v3) {
    uint64_t v5 = v3[1];
  }
  else {
    uint64_t v5 = 0;
  }
  *a2 = v4;
  a2[1] = v5;

  return sub_1C1F1325C(v4);
}

uint64_t sub_1C20D0998@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (void *)(*a1 + OBJC_IVAR____TtC19HealthMedicationsUI24DosageCollectionViewCell_baseIdentifier);
  swift_beginAccess();
  uint64_t v4 = v3[1];
  *a2 = *v3;
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C20D09F4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC19HealthMedicationsUI24DosageCollectionViewCell_item;
  swift_beginAccess();
  return sub_1C20CF53C(v3, a2, (uint64_t (*)(void))sub_1C1F24488);
}

id sub_1C20D0A64@<X0>(void *a1@<X8>)
{
  id result = sub_1C20CA2A8();
  *a1 = result;
  return result;
}

void sub_1C20D0A90(void **a1, void *a2)
{
  uint64_t v2 = *a1;
  id v4 = *(id *)(*a2 + OBJC_IVAR____TtC19HealthMedicationsUI24DosageCollectionViewCell____lazy_storage___valueField);
  *(void *)(*a2 + OBJC_IVAR____TtC19HealthMedicationsUI24DosageCollectionViewCell____lazy_storage___valueField) = *a1;
  id v3 = v2;
}

void *initializeBufferWithCopyOfBuffer for DosageItem(void *a1, void *a2, int *a3)
{
  id v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v23 = *a2;
    *id v4 = *a2;
    id v4 = (void *)(v23 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    uint64_t v9 = a2[5];
    uint64_t v10 = a3[7];
    id v42 = (char *)a1 + v10;
    uint64_t v11 = (char *)a2 + v10;
    a1[4] = a2[4];
    a1[5] = v9;
    uint64_t v12 = sub_1C2147B20();
    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13(v42, v11, v12);
    uint64_t v14 = a3[9];
    *((unsigned char *)v4 + a3[8]) = *((unsigned char *)a2 + a3[8]);
    uint64_t v15 = *(void **)((char *)a2 + v14);
    *(void *)((char *)v4 + v14) = v15;
    uint64_t v16 = a3[10];
    uint64_t v17 = (void *)((char *)v4 + v16);
    id v18 = (void *)((char *)a2 + v16);
    uint64_t v19 = *(void *)((char *)a2 + v16 + 8);
    id v20 = v15;
    if (v19)
    {
      *uint64_t v17 = *v18;
      v17[1] = v19;
      uint64_t v21 = v18[2];
      uint64_t v22 = v18[3];
      v17[2] = v21;
      v17[3] = v22;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v24 = *((_OWORD *)v18 + 1);
      *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
      *((_OWORD *)v17 + sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, 0, 1) = v24;
    }
    uint64_t v25 = a3[11];
    uint64_t v26 = (void *)((char *)v4 + v25);
    id v27 = (void *)((char *)a2 + v25);
    if (*v27)
    {
      uint64_t v28 = v27[1];
      void *v26 = *v27;
      v26[1] = v28;
      swift_retain();
    }
    else
    {
      *(_OWORD *)uint64_t v26 = *(_OWORD *)v27;
    }
    uint64_t v29 = a3[12];
    int v30 = (void *)((char *)v4 + v29);
    uint64_t v31 = (void *)((char *)a2 + v29);
    if (*v31)
    {
      uint64_t v32 = v31[1];
      void *v30 = *v31;
      v30[1] = v32;
      swift_retain();
    }
    else
    {
      *(_OWORD *)int v30 = *(_OWORD *)v31;
    }
    uint64_t v33 = a3[13];
    os_log_type_t v34 = (void *)((char *)v4 + v33);
    id v35 = (void *)((char *)a2 + v33);
    if (*v35)
    {
      uint64_t v36 = v35[1];
      void *v34 = *v35;
      v34[1] = v36;
      swift_retain();
    }
    else
    {
      *(_OWORD *)os_log_type_t v34 = *(_OWORD *)v35;
    }
    uint64_t v37 = a3[14];
    unint64_t v38 = (void *)((char *)v4 + v37);
    uint64_t v39 = (void *)((char *)a2 + v37);
    if (*v39)
    {
      uint64_t v40 = v39[1];
      *unint64_t v38 = *v39;
      v38[1] = v40;
      swift_retain();
    }
    else
    {
      *(_OWORD *)unint64_t v38 = *(_OWORD *)v39;
    }
  }
  return v4;
}

uint64_t destroy for DosageItem(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[7];
  uint64_t v5 = sub_1C2147B20();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);

  uint64_t result = *(void *)(a1 + a2[10] + 8);
  if (result)
  {
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
  }
  if (*(void *)(a1 + a2[11])) {
    uint64_t result = swift_release();
  }
  if (*(void *)(a1 + a2[12])) {
    uint64_t result = swift_release();
  }
  if (*(void *)(a1 + a2[13])) {
    uint64_t result = swift_release();
  }
  if (*(void *)(a1 + a2[14]))
  {
    return swift_release();
  }
  return result;
}

void *initializeWithCopy for DosageItem(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  uint64_t v8 = a2[5];
  uint64_t v9 = a3[7];
  uint64_t v40 = (char *)a1 + v9;
  uint64_t v10 = (char *)a2 + v9;
  a1[4] = a2[4];
  a1[5] = v8;
  uint64_t v11 = sub_1C2147B20();
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12(v40, v10, v11);
  uint64_t v13 = a3[9];
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  uint64_t v14 = *(void **)((char *)a2 + v13);
  *(void *)((char *)a1 + v13) = v14;
  uint64_t v15 = a3[10];
  uint64_t v16 = (void *)((char *)a1 + v15);
  uint64_t v17 = (void *)((char *)a2 + v15);
  uint64_t v18 = *(void *)((char *)a2 + v15 + 8);
  id v19 = v14;
  if (v18)
  {
    *uint64_t v16 = *v17;
    v16[1] = v18;
    uint64_t v20 = v17[2];
    uint64_t v21 = v17[3];
    void v16[2] = v20;
    v16[3] = v21;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v22 = *((_OWORD *)v17 + 1);
    *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
    *((_OWORD *)v16 + sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, 0, 1) = v22;
  }
  uint64_t v23 = a3[11];
  long long v24 = (void *)((char *)a1 + v23);
  uint64_t v25 = (void *)((char *)a2 + v23);
  if (*v25)
  {
    uint64_t v26 = v25[1];
    *long long v24 = *v25;
    v24[1] = v26;
    swift_retain();
  }
  else
  {
    *(_OWORD *)long long v24 = *(_OWORD *)v25;
  }
  uint64_t v27 = a3[12];
  uint64_t v28 = (void *)((char *)a1 + v27);
  uint64_t v29 = (void *)((char *)a2 + v27);
  if (*v29)
  {
    uint64_t v30 = v29[1];
    *uint64_t v28 = *v29;
    v28[1] = v30;
    swift_retain();
  }
  else
  {
    *(_OWORD *)uint64_t v28 = *(_OWORD *)v29;
  }
  uint64_t v31 = a3[13];
  uint64_t v32 = (void *)((char *)a1 + v31);
  uint64_t v33 = (void *)((char *)a2 + v31);
  if (*v33)
  {
    uint64_t v34 = v33[1];
    *uint64_t v32 = *v33;
    v32[1] = v34;
    swift_retain();
  }
  else
  {
    *(_OWORD *)uint64_t v32 = *(_OWORD *)v33;
  }
  uint64_t v35 = a3[14];
  uint64_t v36 = (void *)((char *)a1 + v35);
  uint64_t v37 = (void *)((char *)a2 + v35);
  if (*v37)
  {
    uint64_t v38 = v37[1];
    *uint64_t v36 = *v37;
    v36[1] = v38;
    swift_retain();
  }
  else
  {
    *(_OWORD *)uint64_t v36 = *(_OWORD *)v37;
  }
  return a1;
}

void *assignWithCopy for DosageItem(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[7];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1C2147B20();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  uint64_t v10 = a3[9];
  uint64_t v11 = *(void **)((char *)a2 + v10);
  uint64_t v12 = *(void **)((char *)a1 + v10);
  *(void *)((char *)a1 + v1sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = v11;
  id v13 = v11;

  uint64_t v14 = a3[10];
  uint64_t v15 = (void *)((char *)a1 + v14);
  uint64_t v16 = (void *)((char *)a2 + v14);
  uint64_t v17 = *(void *)((char *)a1 + v14 + 8);
  uint64_t v18 = *(void *)((char *)a2 + v14 + 8);
  if (v17)
  {
    if (v18)
    {
      *uint64_t v15 = *v16;
      v15[1] = v16[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      void v15[2] = v16[2];
      v15[3] = v16[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1C20D1348((uint64_t)v15, (uint64_t (*)(void))sub_1C20D13A8);
      long long v19 = *((_OWORD *)v16 + 1);
      *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
      *((_OWORD *)v15 + sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, 0, 1) = v19;
    }
  }
  else if (v18)
  {
    *uint64_t v15 = *v16;
    v15[1] = v16[1];
    void v15[2] = v16[2];
    v15[3] = v16[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v20 = *((_OWORD *)v16 + 1);
    *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
    *((_OWORD *)v15 + sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, 0, 1) = v20;
  }
  uint64_t v21 = a3[11];
  long long v22 = (void *)((char *)a1 + v21);
  uint64_t v23 = (char *)a2 + v21;
  uint64_t v24 = *(void *)((char *)a1 + v21);
  uint64_t v25 = *(void *)((char *)a2 + v21);
  if (v24)
  {
    if (v25)
    {
      uint64_t v26 = *((void *)v23 + 1);
      *long long v22 = v25;
      v22[1] = v26;
      swift_retain();
      swift_release();
      goto LABEL_15;
    }
    swift_release();
  }
  else if (v25)
  {
    uint64_t v27 = *((void *)v23 + 1);
    *long long v22 = v25;
    v22[1] = v27;
    swift_retain();
    goto LABEL_15;
  }
  *(_OWORD *)long long v22 = *(_OWORD *)v23;
LABEL_15:
  uint64_t v28 = a3[12];
  uint64_t v29 = (void *)((char *)a1 + v28);
  uint64_t v30 = (char *)a2 + v28;
  uint64_t v31 = *(void *)((char *)a1 + v28);
  uint64_t v32 = *(void *)((char *)a2 + v28);
  if (v31)
  {
    if (v32)
    {
      uint64_t v33 = *((void *)v30 + 1);
      *uint64_t v29 = v32;
      v29[1] = v33;
      swift_retain();
      swift_release();
      goto LABEL_22;
    }
    swift_release();
  }
  else if (v32)
  {
    uint64_t v34 = *((void *)v30 + 1);
    *uint64_t v29 = v32;
    v29[1] = v34;
    swift_retain();
    goto LABEL_22;
  }
  *(_OWORD *)uint64_t v29 = *(_OWORD *)v30;
LABEL_22:
  uint64_t v35 = a3[13];
  uint64_t v36 = (void *)((char *)a1 + v35);
  uint64_t v37 = (char *)a2 + v35;
  uint64_t v38 = *(void *)((char *)a1 + v35);
  uint64_t v39 = *(void *)((char *)a2 + v35);
  if (v38)
  {
    if (v39)
    {
      uint64_t v40 = *((void *)v37 + 1);
      *uint64_t v36 = v39;
      v36[1] = v40;
      swift_retain();
      swift_release();
      goto LABEL_29;
    }
    swift_release();
  }
  else if (v39)
  {
    uint64_t v41 = *((void *)v37 + 1);
    *uint64_t v36 = v39;
    v36[1] = v41;
    swift_retain();
    goto LABEL_29;
  }
  *(_OWORD *)uint64_t v36 = *(_OWORD *)v37;
LABEL_29:
  uint64_t v42 = a3[14];
  id v43 = (void *)((char *)a1 + v42);
  id v44 = (void *)((char *)a2 + v42);
  uint64_t v45 = *(void *)((char *)a1 + v42);
  uint64_t v46 = *v44;
  if (!v45)
  {
    if (v46)
    {
      uint64_t v48 = v44[1];
      *id v43 = v46;
      v43[1] = v48;
      swift_retain();
      return a1;
    }
LABEL_35:
    *(_OWORD *)id v43 = *(_OWORD *)v44;
    return a1;
  }
  if (!v46)
  {
    swift_release();
    goto LABEL_35;
  }
  uint64_t v47 = v44[1];
  *id v43 = v46;
  v43[1] = v47;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1C20D1348(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_1C20D13A8()
{
  if (!qword_1EA2C6CA0)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA2C6CA0);
    }
  }
}

_OWORD *initializeWithTake for DosageItem(_OWORD *a1, _OWORD *a2, int *a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  uint64_t v7 = a3[7];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1C2147B20();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[9];
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  *(void *)((char *)a1 + v1sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, 0, 1) = *(void *)((char *)a2 + v11);
  uint64_t v12 = a3[10];
  uint64_t v13 = a3[11];
  uint64_t v14 = (_OWORD *)((char *)a1 + v12);
  uint64_t v15 = (_OWORD *)((char *)a2 + v12);
  long long v16 = v15[1];
  *uint64_t v14 = *v15;
  v14[1] = v16;
  uint64_t v17 = (void *)((char *)a1 + v13);
  uint64_t v18 = (uint64_t *)((char *)a2 + v13);
  uint64_t v19 = *v18;
  if (*v18)
  {
    uint64_t v20 = v18[1];
    *uint64_t v17 = v19;
    v17[1] = v20;
  }
  else
  {
    *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
  }
  uint64_t v21 = a3[12];
  long long v22 = (void *)((char *)a1 + v21);
  uint64_t v23 = (uint64_t *)((char *)a2 + v21);
  uint64_t v24 = *v23;
  if (*v23)
  {
    uint64_t v25 = v23[1];
    *long long v22 = v24;
    v22[1] = v25;
  }
  else
  {
    *(_OWORD *)long long v22 = *(_OWORD *)v23;
  }
  uint64_t v26 = a3[13];
  uint64_t v27 = (void *)((char *)a1 + v26);
  uint64_t v28 = (uint64_t *)((char *)a2 + v26);
  uint64_t v29 = *v28;
  if (*v28)
  {
    uint64_t v30 = v28[1];
    *uint64_t v27 = v29;
    v27[1] = v30;
  }
  else
  {
    *(_OWORD *)uint64_t v27 = *(_OWORD *)v28;
  }
  uint64_t v31 = a3[14];
  uint64_t v32 = (void *)((char *)a1 + v31);
  uint64_t v33 = (uint64_t *)((char *)a2 + v31);
  uint64_t v34 = *v33;
  if (*v33)
  {
    uint64_t v35 = v33[1];
    *uint64_t v32 = v34;
    v32[1] = v35;
  }
  else
  {
    *(_OWORD *)uint64_t v32 = *(_OWORD *)v33;
  }
  return a1;
}

void *assignWithTake for DosageItem(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = a3[7];
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = sub_1C2147B20();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 40))(v10, v11, v12);
  uint64_t v13 = a3[9];
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  uint64_t v14 = *(void **)((char *)a1 + v13);
  *(void *)((char *)a1 + v13) = *(void *)((char *)a2 + v13);

  uint64_t v15 = a3[10];
  long long v16 = (void *)((char *)a1 + v15);
  uint64_t v17 = (void *)((char *)a2 + v15);
  if (*(void *)((char *)a1 + v15 + 8))
  {
    uint64_t v18 = v17[1];
    if (v18)
    {
      *long long v16 = *v17;
      v16[1] = v18;
      swift_bridgeObjectRelease();
      uint64_t v19 = v17[3];
      void v16[2] = v17[2];
      v16[3] = v19;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_1C20D1348((uint64_t)v16, (uint64_t (*)(void))sub_1C20D13A8);
  }
  long long v20 = *((_OWORD *)v17 + 1);
  *(_OWORD *)long long v16 = *(_OWORD *)v17;
  *((_OWORD *)v16 + sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, 0, 1) = v20;
LABEL_6:
  uint64_t v21 = a3[11];
  long long v22 = (void *)((char *)a1 + v21);
  uint64_t v23 = (char *)a2 + v21;
  uint64_t v24 = *(void *)((char *)a1 + v21);
  uint64_t v25 = *(void *)((char *)a2 + v21);
  if (v24)
  {
    if (v25)
    {
      uint64_t v26 = *((void *)v23 + 1);
      *long long v22 = v25;
      v22[1] = v26;
      swift_release();
      goto LABEL_13;
    }
    swift_release();
  }
  else if (v25)
  {
    uint64_t v27 = *((void *)v23 + 1);
    *long long v22 = v25;
    v22[1] = v27;
    goto LABEL_13;
  }
  *(_OWORD *)long long v22 = *(_OWORD *)v23;
LABEL_13:
  uint64_t v28 = a3[12];
  uint64_t v29 = (void *)((char *)a1 + v28);
  uint64_t v30 = (char *)a2 + v28;
  uint64_t v31 = *(void *)((char *)a1 + v28);
  uint64_t v32 = *(void *)((char *)a2 + v28);
  if (v31)
  {
    if (v32)
    {
      uint64_t v33 = *((void *)v30 + 1);
      *uint64_t v29 = v32;
      v29[1] = v33;
      swift_release();
      goto LABEL_20;
    }
    swift_release();
  }
  else if (v32)
  {
    uint64_t v34 = *((void *)v30 + 1);
    *uint64_t v29 = v32;
    v29[1] = v34;
    goto LABEL_20;
  }
  *(_OWORD *)uint64_t v29 = *(_OWORD *)v30;
LABEL_20:
  uint64_t v35 = a3[13];
  uint64_t v36 = (void *)((char *)a1 + v35);
  uint64_t v37 = (char *)a2 + v35;
  uint64_t v38 = *(void *)((char *)a1 + v35);
  uint64_t v39 = *(void *)((char *)a2 + v35);
  if (v38)
  {
    if (v39)
    {
      uint64_t v40 = *((void *)v37 + 1);
      *uint64_t v36 = v39;
      v36[1] = v40;
      swift_release();
      goto LABEL_27;
    }
    swift_release();
  }
  else if (v39)
  {
    uint64_t v41 = *((void *)v37 + 1);
    *uint64_t v36 = v39;
    v36[1] = v41;
    goto LABEL_27;
  }
  *(_OWORD *)uint64_t v36 = *(_OWORD *)v37;
LABEL_27:
  uint64_t v42 = a3[14];
  id v43 = (void *)((char *)a1 + v42);
  id v44 = (void *)((char *)a2 + v42);
  uint64_t v45 = *(void *)((char *)a1 + v42);
  uint64_t v46 = *v44;
  if (!v45)
  {
    if (v46)
    {
      uint64_t v48 = v44[1];
      *id v43 = v46;
      v43[1] = v48;
      return a1;
    }
LABEL_33:
    *(_OWORD *)id v43 = *(_OWORD *)v44;
    return a1;
  }
  if (!v46)
  {
    swift_release();
    goto LABEL_33;
  }
  uint64_t v47 = v44[1];
  *id v43 = v46;
  v43[1] = v47;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for DosageItem(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C20D17EC);
}

uint64_t sub_1C20D17EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1C2147B20();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 28);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for DosageItem(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C20D18B0);
}

uint64_t sub_1C20D18B0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1C2147B20();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 28);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1C20D1958()
{
  uint64_t result = sub_1C2147B20();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1C20D1A24()
{
  return type metadata accessor for DosageCollectionViewCell(0);
}

void sub_1C20D1A2C()
{
  sub_1C1F17420(319, &qword_1EA2C5650, (uint64_t (*)(uint64_t))type metadata accessor for Dosage, MEMORY[0x1E4FBB718]);
  if (v0 <= 0x3F)
  {
    sub_1C1F17420(319, &qword_1EBF0C618, MEMORY[0x1E4FB0E68], MEMORY[0x1E4FBB718]);
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

uint64_t method lookup function for DosageCollectionViewCell(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for DosageCollectionViewCell);
}

uint64_t dispatch thunk of DosageCollectionViewCell.baseIdentifier.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of DosageCollectionViewCell.baseIdentifier.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of DosageCollectionViewCell.baseIdentifier.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of DosageCollectionViewCell.item.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of DosageCollectionViewCell.item.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of DosageCollectionViewCell.item.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xE0))();
}

uint64_t dispatch thunk of DosageCollectionViewCell.valueField.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x118))();
}

uint64_t dispatch thunk of DosageCollectionViewCell.valueField.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x120))();
}

uint64_t dispatch thunk of DosageCollectionViewCell.valueField.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x128))();
}

uint64_t dispatch thunk of DosageCollectionViewCell.itemUpdated()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x180))();
}

uint64_t dispatch thunk of DosageCollectionViewCell.updateAutomationIdentifiers(with:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x1C0))();
}

uint64_t sub_1C20D1E10()
{
  swift_unknownObjectWeakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

void sub_1C20D1E48(void *a1, void *a2)
{
  sub_1C20CB1B4(a1, a2, v2);
}

uint64_t sub_1C20D1E50(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_1C1F17420(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_1C20D1ED0(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_1C1F17420(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a2, a1, v6);
  return a2;
}

uint64_t sub_1C20D1F50()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C20D1F88()
{
  return sub_1C20C96F0(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1C20D1F90()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C20D1FC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void (*v5)(unsigned __int8 *__return_ptr, uint64_t, uint64_t, void *);
  unsigned __int8 v7;
  void v8[2];

  uint64_t v5 = *(void (**)(unsigned __int8 *__return_ptr, uint64_t, uint64_t, void *))(v4 + 16);
  v8[0] = a3;
  v8[1] = a4;
  v5(&v7, a1, a2, v8);
  return v7;
}

uint64_t sub_1C20D2008@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, unsigned char *a4@<X8>)
{
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, void, void))(v4 + 16))(a1, a2, *a3, a3[1]);
  *a4 = result & 1;
  return result;
}

uint64_t sub_1C20D2044()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C20D207C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C20D20C4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1C1F17420(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t ClinicalRecordsMedicationsProvider.__allocating_init(healthStore:)(uint64_t a1)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  return result;
}

uint64_t ClinicalRecordsMedicationsProvider.init(healthStore:)(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return v1;
}

uint64_t sub_1C20D218C(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  sub_1C20D2BC4();
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1F13C84(0, (unint64_t *)&qword_1EBF0CA10);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1C214E170;
  sub_1C214A5F0();
  id v11 = objc_allocWithZone(MEMORY[0x1E4F29008]);
  uint64_t v12 = (void *)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  id v13 = objc_msgSend(v11, sel_initWithKey_ascending_, v12, 0);

  *(void *)(v10 + 32) = v13;
  uint64_t v20 = v10;
  sub_1C214A7A0();
  uint64_t v14 = v20;
  uint64_t v15 = (void *)swift_allocObject();
  void v15[2] = a1;
  v15[3] = v14;
  v15[4] = v2;
  v15[5] = v4;
  sub_1C20D2C58();
  sub_1C20D2D40(&qword_1EA2C6D08, (void (*)(uint64_t))sub_1C20D2C58);
  id v16 = a1;
  swift_retain();
  sub_1C2149F20();
  sub_1C20D2D40(&qword_1EA2C6D10, (void (*)(uint64_t))sub_1C20D2BC4);
  uint64_t v17 = sub_1C2149FC0();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return v17;
}

uint64_t sub_1C20D2420@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v10 = (void *)swift_allocObject();
  void v10[2] = a1;
  v10[3] = a2;
  void v10[4] = a3;
  v10[5] = a4;
  sub_1C20D2C58();
  swift_allocObject();
  id v11 = a1;
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t result = sub_1C2149F10();
  *a5 = result;
  return result;
}

void sub_1C20D24D0(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = a2;
  swift_retain();
  _sSo17HKQueryDescriptorC19HealthMedicationsUIE22recordsMatchingConceptySayABGSo9HKConceptCFZ_0(a3);
  sub_1C1F13C84(0, (unint64_t *)&qword_1EA2C3298);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1C214FCD0;
  *(void *)(v12 + 32) = sub_1C214A5F0();
  *(void *)(v12 + 4sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = v13;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = sub_1C1F30CF8;
  *(void *)(v14 + 24) = v11;
  id v15 = objc_allocWithZone(MEMORY[0x1E4F2B430]);
  sub_1C1F12718(0, &qword_1EA2C6D18);
  swift_bridgeObjectRetain();
  id v16 = (void *)sub_1C214A770();
  swift_bridgeObjectRelease();
  sub_1C1F12718(0, (unint64_t *)&unk_1EBF0B4B8);
  uint64_t v17 = (void *)sub_1C214A770();
  swift_bridgeObjectRelease();
  uint64_t v18 = (void *)sub_1C214A770();
  swift_bridgeObjectRelease();
  aBlock[4] = sub_1C20D2E8C;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C20D29B4;
  aBlock[3] = &block_descriptor_27;
  uint64_t v19 = _Block_copy(aBlock);
  id v20 = objc_msgSend(v15, sel_initWithQueryDescriptors_sortDescriptors_followingAnchor_upToAndIncludingAnchor_distinctByKeyPaths_limit_resultsHandler_, v16, v17, 0, 0, v18, 0, v19);

  _Block_release(v19);
  swift_release();
  aBlock[0] = a6;
  swift_getMetatypeMetadata();
  id v21 = v20;
  sub_1C214A610();
  long long v22 = (void *)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  objc_msgSend(v21, sel_setDebugIdentifier_, v22);

  objc_msgSend(*(id *)(a5 + 16), sel_executeQuery_, v21);
}

void sub_1C20D2784(uint64_t a1, unint64_t a2, uint64_t a3, void *a4, void (*a5)(void *, void), uint64_t a6)
{
  if (a2 && (uint64_t v9 = sub_1C1F65218(a2)) != 0)
  {
    unint64_t v10 = v9;
  }
  else
  {
    swift_bridgeObjectRelease();
    unint64_t v10 = MEMORY[0x1E4FBC860];
  }
  uint64_t v17 = (void *)MEMORY[0x1E4FBC860];
  if (!(v10 >> 62))
  {
    uint64_t v11 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v11) {
      goto LABEL_7;
    }
LABEL_18:
    swift_bridgeObjectRelease();
    id v15 = a4;
    sub_1C20D2CC8();
    sub_1C214BB90();
    a5(v17, v18);
    sub_1C20D2E94(v17, v18);
    return;
  }
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_1C214B930();
  swift_bridgeObjectRelease();
  if (!v11) {
    goto LABEL_18;
  }
LABEL_7:
  if (v11 >= 1)
  {
    uint64_t v16 = a6;
    for (uint64_t i = 0; i != v11; ++i)
    {
      if ((v10 & 0xC000000000000001) != 0) {
        id v13 = (id)MEMORY[0x1C8753960](i, v10);
      }
      else {
        id v13 = *(id *)(v10 + 8 * i + 32);
      }
      uint64_t v14 = v13;
      if (objc_msgSend(v13, sel_isDisplayable, v16))
      {
        sub_1C214B820();
        sub_1C214B860();
        sub_1C214B870();
        sub_1C214B830();
      }
      else
      {
      }
    }
    goto LABEL_18;
  }
  __break(1u);
}

uint64_t ClinicalRecordsMedicationsProvider.deinit()
{
  return v0;
}

uint64_t ClinicalRecordsMedicationsProvider.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1C20D29B4(uint64_t a1, void *a2, uint64_t a3, void *a4, void *a5)
{
  uint64_t v7 = a3;
  uint64_t v9 = *(void (**)(id, uint64_t, void *, void *))(a1 + 32);
  if (a3)
  {
    sub_1C1F12718(0, &qword_1EA2C6290);
    uint64_t v7 = sub_1C214A780();
  }
  swift_retain();
  id v10 = a2;
  id v11 = a4;
  id v12 = a5;
  v9(v10, v7, a4, a5);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t _sSo17HKQueryDescriptorC19HealthMedicationsUIE22recordsMatchingConceptySayABGSo9HKConceptCFZ_0(void *a1)
{
  sub_1C1F13C84(0, (unint64_t *)&qword_1EBF0CA10);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1C214E170;
  id v3 = objc_msgSend(self, sel_medicationOrderType);
  sub_1C1F12718(0, &qword_1EA2C6D20);
  id v4 = objc_msgSend(a1, sel_identifier);
  objc_msgSend(v4, sel_rawIdentifier);

  uint64_t v5 = (void *)sub_1C214B140();
  id v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F2B3D0]), sel_initWithSampleType_predicate_, v3, v5);

  *(void *)(v2 + 32) = v6;
  sub_1C214A7A0();
  return v2;
}

void sub_1C20D2BC4()
{
  if (!qword_1EA2C6CF8)
  {
    sub_1C20D2C58();
    sub_1C20D2D40(&qword_1EA2C6D08, (void (*)(uint64_t))sub_1C20D2C58);
    unint64_t v0 = sub_1C2149F30();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C6CF8);
    }
  }
}

void sub_1C20D2C58()
{
  if (!qword_1EA2C6D00)
  {
    sub_1C20D2CC8();
    sub_1C1F35A5C();
    unint64_t v0 = sub_1C2149F00();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C6D00);
    }
  }
}

void sub_1C20D2CC8()
{
  if (!qword_1EA2C35D8)
  {
    sub_1C1F12718(255, &qword_1EA2C35E0);
    unint64_t v0 = sub_1C214A830();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C35D8);
    }
  }
}

uint64_t sub_1C20D2D34@<X0>(uint64_t *a1@<X8>)
{
  return sub_1C20D2420(*(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), a1);
}

uint64_t sub_1C20D2D40(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for ClinicalRecordsMedicationsProvider()
{
  return self;
}

uint64_t method lookup function for ClinicalRecordsMedicationsProvider(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ClinicalRecordsMedicationsProvider);
}

uint64_t dispatch thunk of ClinicalRecordsMedicationsProvider.__allocating_init(healthStore:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of ClinicalRecordsMedicationsProvider.makeRelatedCHRRecordsPublisher(concept:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 96))();
}

uint64_t objectdestroyTm_1()
{
  swift_bridgeObjectRelease();
  swift_release();

  return MEMORY[0x1F4186498](v0, 48, 7);
}

void sub_1C20D2E48(uint64_t a1, uint64_t a2)
{
  sub_1C20D24D0(a1, a2, *(void **)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40));
}

uint64_t sub_1C20D2E54()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

void sub_1C20D2E8C(uint64_t a1, unint64_t a2, uint64_t a3, void *a4)
{
  sub_1C20D2784(a1, a2, a3, a4, *(void (**)(void *, void))(v4 + 16), *(void *)(v4 + 24));
}

void sub_1C20D2E94(id a1, char a2)
{
  if (a2) {

  }
  else {
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1C20D2EA4()
{
  uint64_t v0 = sub_1C2147B20();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  id v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for InteractionFactorsHeaderItem();
  uint64_t v5 = swift_allocObject();
  type metadata accessor for InteractionFactorsHeaderCell();
  sub_1C20D354C(&qword_1EA2C4B60, (void (*)(uint64_t))type metadata accessor for InteractionFactorsHeaderCell);
  *(void *)(v5 + 16) = sub_1C21481D0();
  *(void *)(v5 + 24) = v6;
  sub_1C1F421FC(0, (unint64_t *)&qword_1EA2C2DD0, MEMORY[0x1E4F66468]);
  sub_1C2148540();
  uint64_t v7 = swift_allocObject();
  long long v11 = xmmword_1C214FCD0;
  *(_OWORD *)(v7 + 16) = xmmword_1C214FCD0;
  sub_1C1F421FC(0, (unint64_t *)&qword_1EBF0C958, (void (*)(uint64_t))sub_1C1F1CB5C);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = v11;
  *(void *)(v8 + 56) = v4;
  *(void *)(v8 + 64) = sub_1C20D354C(&qword_1EA2C6D40, (void (*)(uint64_t))type metadata accessor for InteractionFactorsHeaderItem);
  *(void *)(v8 + 32) = v5;
  swift_retain();
  sub_1C2147B10();
  sub_1C2147AD0();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  sub_1C2148520();
  uint64_t v9 = sub_1C2147F50();
  swift_release();
  return v9;
}

uint64_t sub_1C20D3164()
{
  uint64_t v0 = sub_1C2148710();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  id v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2148690();
  sub_1C214AEB0();
  sub_1C21486F0();
  uint64_t v4 = sub_1C2148700();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

void InteractionFactorsHeaderDataSource.__allocating_init(arrangedSections:isHidden:)()
{
}

void InteractionFactorsHeaderDataSource.init(arrangedSections:isHidden:)()
{
}

uint64_t InteractionFactorsHeaderDataSource.__deallocating_deinit()
{
  _s19HealthMedicationsUI34InteractionSeperatorLineDataSourceCfd_0();

  return swift_deallocClassInstance();
}

uint64_t sub_1C20D32DC()
{
  return sub_1C2148B80();
}

Swift::Void __swiftcall InteractionFactorsHeaderDataSource.registerCells(for:)(UICollectionView *a1)
{
}

uint64_t sub_1C20D33A8()
{
  return sub_1C20D354C(&qword_1EA2C6D28, (void (*)(uint64_t))type metadata accessor for InteractionFactorsHeaderDataSource);
}

uint64_t type metadata accessor for InteractionFactorsHeaderDataSource()
{
  uint64_t result = qword_1EA2C6D30;
  if (!qword_1EA2C6D30) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C20D343C()
{
  return sub_1C214ACC0();
}

uint64_t sub_1C20D34AC()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for InteractionFactorsHeaderDataSource(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for InteractionFactorsHeaderDataSource);
}

uint64_t dispatch thunk of InteractionFactorsHeaderDataSource.layout(for:environment:)()
{
  return (*(uint64_t (**)(void))(class metadata base offset for InteractionFactorsHeaderDataSource + *v0 + 8))();
}

uint64_t sub_1C20D3544()
{
  return type metadata accessor for InteractionFactorsHeaderDataSource();
}

uint64_t sub_1C20D354C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t CustomStrengthOptionItem.init(title:actionTitle:onActionTapped:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, void *a7@<X8>)
{
  type metadata accessor for CustomStrengthOptionCell();
  sub_1C20D3630();
  uint64_t result = sub_1C21481D0();
  *a7 = a1;
  a7[1] = a2;
  a7[2] = a3;
  a7[3] = a4;
  a7[4] = a5;
  a7[5] = a6;
  a7[6] = result;
  a7[7] = v15;
  return result;
}

uint64_t type metadata accessor for CustomStrengthOptionCell()
{
  return self;
}

unint64_t sub_1C20D3630()
{
  unint64_t result = qword_1EA2C6468;
  if (!qword_1EA2C6468)
  {
    type metadata accessor for CustomStrengthOptionCell();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C6468);
  }
  return result;
}

uint64_t CustomStrengthOptionItem.title.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CustomStrengthOptionItem.actionTitle.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CustomStrengthOptionItem.onActionTapped.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_retain();
  return v1;
}

uint64_t CustomStrengthOptionItem.reuseIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CustomStrengthOptionItem.uniqueIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 48);
  sub_1C214B7C0();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_1C214A6C0();
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  sub_1C214A6C0();
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t CustomStrengthOptionItem.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_1C214A690();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1C214A690();

  return swift_bridgeObjectRelease();
}

uint64_t CustomStrengthOptionItem.hashValue.getter()
{
  return sub_1C214BB80();
}

id sub_1C20D3938()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
  objc_msgSend(v0, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  id v1 = objc_msgSend(self, sel_preferredFontForTextStyle_, *MEMORY[0x1E4FB28C8]);
  objc_msgSend(v0, sel_setFont_, v1);

  objc_msgSend(v0, sel_setAdjustsFontForContentSizeCategory_, 1);
  id v2 = objc_msgSend(self, sel_labelColor);
  objc_msgSend(v0, sel_setTextColor_, v2);

  objc_msgSend(v0, sel_setNumberOfLines_, 0);
  return v0;
}

id sub_1C20D3A30()
{
  uint64_t v1 = OBJC_IVAR____TtC19HealthMedicationsUI24CustomStrengthOptionCell____lazy_storage___actionButton;
  id v2 = *(void **)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI24CustomStrengthOptionCell____lazy_storage___actionButton);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI24CustomStrengthOptionCell____lazy_storage___actionButton);
  }
  else
  {
    id v4 = objc_msgSend(self, sel_buttonWithType_, 1);
    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    objc_msgSend(v4, sel_setContentHorizontalAlignment_, 4);
    objc_msgSend(v4, sel_setContentVerticalAlignment_, 1);
    objc_msgSend(v4, sel_addTarget_action_forControlEvents_, v0, sel_actionButtonTapped, 64);
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + vsub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, 0, 1) = v4;
    id v3 = v4;

    id v2 = 0;
  }
  id v6 = v2;
  return v3;
}

char *sub_1C20D3B0C(double a1, double a2, double a3, double a4)
{
  sub_1C20D4B98(0, &qword_1EBF0C620, MEMORY[0x1E4FB0F28]);
  MEMORY[0x1F4188790](v9 - 8);
  long long v11 = (char *)v57 - v10;
  id v12 = &v4[OBJC_IVAR____TtC19HealthMedicationsUI24CustomStrengthOptionCell_item];
  *(_OWORD *)id v12 = 0u;
  *((_OWORD *)v12 + sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, 0, 1) = 0u;
  *((void *)v12 + 4) = 0;
  uint64_t v13 = OBJC_IVAR____TtC19HealthMedicationsUI24CustomStrengthOptionCell_titleLabel;
  uint64_t v14 = v4;
  *(void *)&v4[v13] = sub_1C20D3938();
  *(void *)&v14[OBJC_IVAR____TtC19HealthMedicationsUI24CustomStrengthOptionCell____lazy_storage___actionButton] = 0;

  uint64_t v15 = (objc_class *)type metadata accessor for CustomStrengthOptionCell();
  v58.receiver = v14;
  v58.super_class = v15;
  uint64_t v16 = (char *)objc_msgSendSuper2(&v58, sel_initWithFrame_, a1, a2, a3, a4);
  id v17 = objc_msgSend(v16, sel_contentView);
  uint64_t v18 = OBJC_IVAR____TtC19HealthMedicationsUI24CustomStrengthOptionCell_titleLabel;
  objc_msgSend(v17, sel_addSubview_, *(void *)&v16[OBJC_IVAR____TtC19HealthMedicationsUI24CustomStrengthOptionCell_titleLabel]);

  id v19 = objc_msgSend(v16, sel_contentView);
  id v20 = sub_1C20D3A30();
  objc_msgSend(v19, sel_addSubview_, v20);

  id v21 = v16;
  sub_1C21499B0();
  uint64_t v22 = sub_1C21499D0();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v11, 0, 1, v22);
  MEMORY[0x1C8752FF0](v11);

  v57[0] = self;
  sub_1C1F0ED28();
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_1C21518E0;
  id v24 = objc_msgSend(*(id *)&v16[v18], sel_leadingAnchor);
  id v25 = objc_msgSend(v21, sel_contentView);
  id v26 = objc_msgSend(v25, sel_layoutMarginsGuide);

  id v27 = objc_msgSend(v26, (SEL)&selRef_setTranslatesAutoresizingMaskIntoConstraints_ + 2);
  id v28 = objc_msgSend(v24, sel_constraintEqualToAnchor_, v27);

  *(void *)(v23 + 32) = v28;
  id v29 = objc_msgSend(*(id *)&v16[v18], sel_trailingAnchor);
  id v30 = objc_msgSend(v21, sel_contentView);
  id v31 = objc_msgSend(v30, sel_layoutMarginsGuide);

  id v32 = objc_msgSend(v31, sel_trailingAnchor);
  id v33 = objc_msgSend(v29, sel_constraintEqualToAnchor_, v32);

  *(void *)(v23 + 4sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = v33;
  id v34 = objc_msgSend(*(id *)&v16[v18], sel_topAnchor);
  id v35 = objc_msgSend(v21, sel_contentView);
  id v36 = objc_msgSend(v35, sel_topAnchor);

  id v37 = objc_msgSend(v34, sel_constraintEqualToAnchor_, v36);
  *(void *)(v23 + 48) = v37;
  id v38 = sub_1C20D3A30();
  id v39 = objc_msgSend(v38, sel_topAnchor);

  id v40 = objc_msgSend(*(id *)&v16[v18], sel_bottomAnchor);
  id v41 = objc_msgSend(v39, sel_constraintEqualToAnchor_constant_, v40, 6.0);

  *(void *)(v23 + 56) = v41;
  id v42 = sub_1C20D3A30();
  id v43 = objc_msgSend(v42, sel_leadingAnchor);

  id v44 = objc_msgSend(*(id *)&v16[v18], sel_leadingAnchor);
  id v45 = objc_msgSend(v43, sel_constraintEqualToAnchor_, v44);

  *(void *)(v23 + 64) = v45;
  id v46 = sub_1C20D3A30();
  id v47 = objc_msgSend(v46, sel_trailingAnchor);

  id v48 = objc_msgSend(*(id *)&v16[v18], sel_trailingAnchor);
  id v49 = objc_msgSend(v47, sel_constraintEqualToAnchor_, v48);

  *(void *)(v23 + 72) = v49;
  id v50 = sub_1C20D3A30();
  id v51 = objc_msgSend(v50, sel_bottomAnchor);

  id v52 = objc_msgSend(v21, sel_contentView);
  id v53 = objc_msgSend(v52, sel_bottomAnchor);

  id v54 = objc_msgSend(v51, sel_constraintEqualToAnchor_, v53);
  *(void *)(v23 + 8sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = v54;
  v57[1] = (id)v23;
  sub_1C214A7A0();
  sub_1C1F645D4();
  id v55 = (void *)sub_1C214A770();
  swift_bridgeObjectRelease();
  objc_msgSend(v57[0], sel_activateConstraints_, v55);

  return v21;
}

uint64_t sub_1C20D41B0()
{
  sub_1C20D4B98(0, &qword_1EBF0C920, MEMORY[0x1E4FB1290]);
  MEMORY[0x1F4188790](v1 - 8);
  id v3 = (char *)v19 - v2;
  uint64_t v4 = sub_1C214B2C0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1C214B3D0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  long long v11 = (char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = v0 + OBJC_IVAR____TtC19HealthMedicationsUI24CustomStrengthOptionCell_item;
  swift_beginAccess();
  sub_1C1F2116C(v12, (uint64_t)v27);
  if (!v28) {
    return sub_1C1F374E4((uint64_t)v27);
  }
  sub_1C1F1CB5C();
  uint64_t result = swift_dynamicCast();
  if (result)
  {
    uint64_t v20 = v4;
    v19[2] = v23;
    v19[1] = v24;
    uint64_t v21 = v26;
    uint64_t v22 = v25;
    id v14 = *(id *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI24CustomStrengthOptionCell_titleLabel);
    void v19[3] = v0;
    uint64_t v15 = v5;
    id v16 = v14;
    id v17 = (void *)sub_1C214A5B0();
    objc_msgSend(v16, sel_setText_, v17);

    sub_1C214B380();
    swift_bridgeObjectRetain();
    sub_1C214B390();
    sub_1C214B2B0();
    sub_1C214B300();
    (*(void (**)(char *, void, uint64_t))(v15 + 104))(v7, *MEMORY[0x1E4FB1240], v20);
    sub_1C214B2E0();
    id v18 = sub_1C20D3A30();
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v3, v11, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v3, 0, 1, v8);
    sub_1C214B400();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  return result;
}

uint64_t sub_1C20D451C()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC19HealthMedicationsUI24CustomStrengthOptionCell_item;
  swift_beginAccess();
  sub_1C1F2116C(v1, (uint64_t)v4);
  if (!v5) {
    return sub_1C1F374E4((uint64_t)v4);
  }
  sub_1C1F1CB5C();
  uint64_t result = swift_dynamicCast();
  if (result)
  {
    v3();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

id sub_1C20D4630()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CustomStrengthOptionCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1C20D46C0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI24CustomStrengthOptionCell_item;
  swift_beginAccess();
  return sub_1C1F2116C(v3, a1);
}

uint64_t sub_1C20D4714(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI24CustomStrengthOptionCell_item;
  swift_beginAccess();
  sub_1C1F32DDC(a1, v3);
  swift_endAccess();
  sub_1C20D41B0();
  return sub_1C1F374E4(a1);
}

uint64_t (*sub_1C20D4784(uint64_t a1))()
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1C20D47E4;
}

uint64_t sub_1C20D47E8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC19HealthMedicationsUI24CustomStrengthOptionCell_item;
  swift_beginAccess();
  return sub_1C1F2116C(v3, a1);
}

uint64_t sub_1C20D4840(uint64_t a1)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC19HealthMedicationsUI24CustomStrengthOptionCell_item;
  swift_beginAccess();
  sub_1C1F32DDC(a1, v3);
  swift_endAccess();
  sub_1C20D41B0();
  return sub_1C1F374E4(a1);
}

uint64_t (*sub_1C20D48B4(uint64_t a1))()
{
  *(void *)(a1 + 24) = *v1;
  swift_beginAccess();
  return sub_1C20D47E4;
}

uint64_t sub_1C20D4918(uint64_t a1, char a2)
{
  uint64_t result = swift_endAccess();
  if ((a2 & 1) == 0) {
    return sub_1C20D41B0();
  }
  return result;
}

unint64_t sub_1C20D4950()
{
  unint64_t result = qword_1EA2C6D48;
  if (!qword_1EA2C6D48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C6D48);
  }
  return result;
}

uint64_t destroy for CustomStrengthOptionItem()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for CustomStrengthOptionItem(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  uint64_t v4 = *(void *)(a2 + 48);
  *(void *)(a1 + 4sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v4;
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for CustomStrengthOptionItem(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = a2[5];
  a1[4] = a2[4];
  a1[5] = v4;
  swift_retain();
  swift_release();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for CustomStrengthOptionItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 4sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = v5;
  swift_release();
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for CustomStrengthOptionItem()
{
  return &type metadata for CustomStrengthOptionItem;
}

void sub_1C20D4B98(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C214B4F0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1C20D4BEC()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1C2149F80();
  swift_release();
  swift_release();
  return v1;
}

uint64_t PregnancyLactationInteractionCriticalAlertDataSource.__allocating_init(listManager:healthStore:viewController:analyticsManager:)(uint64_t a1, void *a2, void *a3, uint64_t a4)
{
  return PregnancyLactationInteractionCriticalAlertDataSource.init(listManager:healthStore:viewController:analyticsManager:)(a1, a2, a3, a4);
}

uint64_t PregnancyLactationInteractionCriticalAlertDataSource.init(listManager:healthStore:viewController:analyticsManager:)(uint64_t a1, void *a2, void *a3, uint64_t a4)
{
  uint64_t v22 = a4;
  sub_1C20D92D0(0, &qword_1EA2C6D68, MEMORY[0x1E4F1AC70]);
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v21 - v11;
  swift_unknownObjectWeakInit();
  uint64_t v13 = v4 + qword_1EA2C6D90;
  aBlock[0] = 0;
  sub_1C20D94E0(0, &qword_1EA2C6D70, &qword_1EA2C6D78, &qword_1EA2C6D80);
  swift_retain();
  sub_1C2149F40();
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v13, v12, v9);
  *(void *)(v4 + qword_1EA2C6D98) = 0;
  *(void *)(v4 + qword_1EA2C6DAsub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = 0;
  *(void *)(v4 + qword_1EA2C6DA8) = 0;
  *(void *)(v4 + qword_1EA2C6DBsub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = MEMORY[0x1E4FBC870];
  *(void *)(v4 + qword_1EA2C6DB8) = a1;
  *(void *)(v4 + qword_1EA2C6DCsub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = a2;
  swift_unknownObjectWeakAssign();
  *(void *)(v4 + qword_1EA2C6DC8) = v22;
  swift_retain();
  id v14 = a2;
  swift_retain();
  swift_release();
  uint64_t v15 = sub_1C2147F50();
  swift_retain();
  id v16 = sub_1C20D5110();
  uint64_t v17 = swift_allocObject();
  swift_weakInit();
  aBlock[4] = sub_1C20D58D4;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C20D59BC;
  aBlock[3] = &block_descriptor_28;
  id v18 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(v16, sel_allDismissedPregnancyLactationInteractionsWithCompletion_, v18);
  _Block_release(v18);

  sub_1C20D5B20();
  sub_1C2147F40();
  sub_1C21482F0();
  swift_release();
  id v19 = (void *)sub_1C2148580();
  swift_release();
  objc_msgSend(v19, sel_registerObserver_, v15);
  swift_release();
  swift_release();

  swift_release();
  return v15;
}

uint64_t sub_1C20D5004()
{
  uint64_t v0 = sub_1C2148710();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2148690();
  id v4 = objc_msgSend(self, sel_systemBackgroundColor);
  sub_1C21486A0();
  sub_1C21486F0();
  uint64_t v5 = sub_1C2148700();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v5;
}

id sub_1C20D5110()
{
  uint64_t v1 = qword_1EA2C6D98;
  uint64_t v2 = *(void **)(v0 + qword_1EA2C6D98);
  if (v2)
  {
    id v3 = *(id *)(v0 + qword_1EA2C6D98);
  }
  else
  {
    id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F66AE8]), sel_initWithHealthStore_, *(void *)(v0 + qword_1EA2C6DC0));
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + vsub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, 0, 1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

uint64_t sub_1C20D5194()
{
  swift_weakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C20D51CC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1C214AB80();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C20D902C();
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = qword_1EA2C6DA8;
  if (*(void *)(v1 + qword_1EA2C6DA8))
  {
    uint64_t v14 = *(void *)(v1 + qword_1EA2C6DA8);
  }
  else
  {
    sub_1C214AB90();
    uint64_t v15 = sub_1C20D8204(&qword_1EA2C6E00, MEMORY[0x1E4F668D0]);
    id v19 = a1;
    uint64_t v16 = v15;
    sub_1C2149FA0();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    uint64_t v20 = v4;
    uint64_t v21 = v16;
    a1 = v19;
    swift_getOpaqueTypeConformance2();
    uint64_t v14 = sub_1C2149FC0();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    *(void *)(v2 + v13) = v14;
    swift_retain();
    swift_release();
  }
  *a1 = v14;
  return swift_retain();
}

uint64_t sub_1C20D5420()
{
  sub_1C1FF8494();
  uint64_t result = sub_1C2149C00();
  if (result >= 1) {
    return sub_1C2149550();
  }
  return result;
}

uint64_t sub_1C20D5470()
{
  sub_1C1FF8494();
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2149C20();
  swift_retain();
  if (sub_1C2149C00() >= 1) {
    sub_1C2149550();
  }
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

uint64_t sub_1C20D5598(uint64_t a1, void *a2)
{
  uint64_t v4 = sub_1C214A3F0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1C214A420();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v13 = result;
    sub_1C1F12718(0, (unint64_t *)&qword_1EBF0CB10);
    uint64_t v21 = sub_1C214AD80();
    uint64_t v14 = (void *)swift_allocObject();
    v14[2] = a2;
    v14[3] = v13;
    v14[4] = a1;
    aBlock[4] = sub_1C20DA670;
    aBlock[5] = v14;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1C1F0E42C;
    aBlock[3] = &block_descriptor_33;
    uint64_t v15 = _Block_copy(aBlock);
    uint64_t v20 = v8;
    uint64_t v16 = v15;
    id v17 = a2;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_release();
    sub_1C214A410();
    aBlock[0] = MEMORY[0x1E4FBC860];
    sub_1C20D8204((unint64_t *)&qword_1EBF0CAE0, MEMORY[0x1E4FBCB00]);
    sub_1C1F18BB4(0, (unint64_t *)&qword_1EBF0CAF0, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
    sub_1C1F12754();
    sub_1C214B640();
    uint64_t v18 = (void *)v21;
    MEMORY[0x1C8752F10](0, v11, v7, v16);
    _Block_release(v16);
    swift_release();

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v20);
  }
  return result;
}

uint64_t sub_1C20D58D4(uint64_t a1, void *a2)
{
  return sub_1C20D5598(a1, a2);
}

uint64_t sub_1C20D58DC(uint64_t a1)
{
  if (a1)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
  }
  else
  {
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    swift_bridgeObjectRetain();
  }
  return sub_1C2149F90();
}

uint64_t sub_1C20D59BC(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = a2;
  uint64_t v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2)
  {
    sub_1C1F12718(0, &qword_1EA2C6D80);
    uint64_t v4 = sub_1C214A780();
  }
  swift_retain();
  id v6 = a3;
  v5(v4, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

void sub_1C20D5A60(uint64_t *a1@<X0>, BOOL *a2@<X8>)
{
  uint64_t v3 = *a1;
  sub_1C1F12718(0, &qword_1EA2C36A8);
  id v4 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_lactationType);
  if (v4)
  {
    uint64_t v5 = v4;
    if (*(void *)(v3 + 16) && (unint64_t v6 = sub_1C1F4BA44((uint64_t)v4), (v7 & 1) != 0))
    {
      uint64_t v8 = *(void *)(*(void *)(v3 + 56) + 8 * v6);

      BOOL v9 = v8 > 0;
    }
    else
    {

      BOOL v9 = 0;
    }
    *a2 = v9;
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1C20D5B00()
{
  return MEMORY[0x1F40D6B20](1, MEMORY[0x1E4FBB390], MEMORY[0x1E4FBC248], MEMORY[0x1E4FBC278]);
}

id sub_1C20D5B20()
{
  sub_1C1F18BB4(0, &qword_1EBF0C7E8, MEMORY[0x1E4FBCC28], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v93 = (char *)&v64 - v1;
  uint64_t v69 = sub_1C214AB60();
  uint64_t v68 = *(void *)(v69 - 8);
  MEMORY[0x1F4188790](v69);
  uint64_t v66 = (char *)&v64 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C20D90E8();
  uint64_t v77 = v3;
  uint64_t v75 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v71 = (char *)&v64 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C20D9184();
  uint64_t v80 = v5;
  uint64_t v78 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v72 = (char *)&v64 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1C2147AC0();
  uint64_t v99 = *(void *)(v7 - 8);
  uint64_t v100 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v98 = (char *)&v64 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C20D92D0(0, &qword_1EA2C6E38, MEMORY[0x1E4F1AC60]);
  uint64_t v84 = v9;
  uint64_t v83 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  id v95 = (char *)&v64 - v10;
  sub_1C20D953C(0, (unint64_t *)&qword_1EBF0C640, (unint64_t *)&qword_1EBF0C790, (unint64_t *)&qword_1EBF0C8C0);
  uint64_t v12 = v11;
  uint64_t v94 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v64 - v13;
  sub_1C20D9428();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v96 = v15;
  uint64_t v97 = v16;
  MEMORY[0x1F4188790](v15);
  uint64_t v18 = (char *)&v64 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C20D953C(0, &qword_1EA2C6E50, &qword_1EA2C3E18, &qword_1EA2C3E10);
  uint64_t v67 = v19;
  uint64_t v65 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19);
  uint64_t v101 = (char *)&v64 - v20;
  sub_1C20D95EC();
  uint64_t v76 = v21;
  uint64_t v73 = *(void *)(v21 - 8);
  MEMORY[0x1F4188790](v21);
  uint64_t v70 = (char *)&v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C20D98F0();
  uint64_t v81 = v23;
  uint64_t v79 = *(void *)(v23 - 8);
  MEMORY[0x1F4188790](v23);
  uint64_t v74 = (char *)&v64 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C20D9BCC();
  uint64_t v86 = v25;
  uint64_t v85 = *(void *)(v25 - 8);
  MEMORY[0x1F4188790](v25);
  uint64_t v82 = (char *)&v64 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C20D9C60();
  uint64_t v88 = *(void *)(v27 - 8);
  uint64_t v89 = v27;
  MEMORY[0x1F4188790](v27);
  uint64_t v87 = (char *)&v64 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C20D9D3C();
  uint64_t v91 = *(void *)(v29 - 8);
  uint64_t v92 = v29;
  MEMORY[0x1F4188790](v29);
  uint64_t v90 = (char *)&v64 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v102[0] = sub_1C2149730();
  sub_1C20D9350(0, (unint64_t *)&qword_1EBF0C690, MEMORY[0x1E4F677F0]);
  sub_1C1F30D40(0, (unint64_t *)&qword_1EBF0C790, (unint64_t *)&qword_1EBF0C8C0);
  sub_1C20D93B4();
  id v31 = v95;
  sub_1C2149FD0();
  swift_release();
  swift_allocObject();
  swift_weakInit();
  sub_1C20D94E0(0, &qword_1EA2C6E48, &qword_1EA2C3E18, &qword_1EA2C3E10);
  sub_1C2149CF0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v94 + 8))(v14, v12);
  sub_1C1F30D40(0, &qword_1EA2C3E18, &qword_1EA2C3E10);
  uint64_t v32 = v96;
  sub_1C2149CE0();
  (*(void (**)(char *, uint64_t))(v97 + 8))(v18, v32);
  swift_beginAccess();
  sub_1C20D92D0(0, &qword_1EA2C6D68, MEMORY[0x1E4F1AC70]);
  id v33 = v31;
  sub_1C2149F50();
  swift_endAccess();
  sub_1C20D51CC(v102);
  id v34 = self;
  id v35 = v98;
  sub_1C21479B0();
  id v36 = (void *)sub_1C2147A00();
  (*(void (**)(char *, uint64_t))(v99 + 8))(v35, v100);
  id v37 = objc_msgSend(v34, sel_predicateForSamplesWithStartDate_endDate_options_, 0, v36, 0);

  sub_1C203C458(0, (unint64_t *)&qword_1EBF0CA10, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
  uint64_t v38 = swift_allocObject();
  *(_OWORD *)(v38 + 16) = xmmword_1C214E170;
  sub_1C1F12718(0, &qword_1EA2C36A8);
  id result = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_lactationType);
  if (result)
  {
    *(void *)(v38 + 32) = result;
    uint64_t v104 = v38;
    sub_1C214A7A0();
    id v40 = v37;
    id v41 = v66;
    sub_1C214AB70();
    swift_bridgeObjectRelease();

    sub_1C20D8204(&qword_1EA2C6E10, MEMORY[0x1E4F668A8]);
    id v42 = v71;
    uint64_t v43 = v69;
    sub_1C214A020();
    (*(void (**)(char *, uint64_t))(v68 + 8))(v41, v43);
    sub_1C20D972C(0, &qword_1EA2C6E20, MEMORY[0x1E4F1AC18]);
    sub_1C20D8204(&qword_1EA2C6E28, (void (*)(uint64_t))sub_1C20D90E8);
    sub_1C20D925C();
    id v44 = v72;
    uint64_t v45 = v77;
    sub_1C214A040();
    (*(void (**)(char *, uint64_t))(v75 + 8))(v42, v45);
    sub_1C20D8204(&qword_1EA2C6EF0, (void (*)(uint64_t))sub_1C20D9184);
    uint64_t v46 = v80;
    uint64_t v47 = sub_1C2149FC0();

    (*(void (**)(char *, uint64_t))(v78 + 8))(v44, v46);
    uint64_t v104 = v47;
    sub_1C20D9350(0, &qword_1EA2C6DF0, type metadata accessor for HKMCPregnancyState);
    sub_1C20D972C(0, (unint64_t *)&qword_1EA2C39B0, MEMORY[0x1E4F1AAE0]);
    sub_1C20D9790();
    sub_1C20D9808();
    sub_1C20D987C();
    sub_1C1F60808();
    id v48 = v70;
    uint64_t v49 = v67;
    uint64_t v50 = v84;
    id v51 = v101;
    sub_1C214A000();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v83 + 8))(v33, v50);
    (*(void (**)(char *, uint64_t))(v65 + 8))(v51, v49);
    sub_1C2149E00();
    id v52 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))MEMORY[0x1E4F1AAE0];
    sub_1C20D9E54(0, &qword_1EA2C6E80, MEMORY[0x1E4F1AAE0]);
    sub_1C20D8204(&qword_1EA2C6EA0, (void (*)(uint64_t))sub_1C20D95EC);
    sub_1C20D9EE0(&qword_1EA2C6EA8, &qword_1EA2C6E80, v52);
    id v53 = v74;
    uint64_t v54 = v76;
    sub_1C214A120();
    (*(void (**)(char *, uint64_t))(v73 + 8))(v48, v54);
    memset(v102, 0, sizeof(v102));
    __int16 v103 = 1;
    sub_1C20D8204(&qword_1EA2C6EC0, (void (*)(uint64_t))sub_1C20D98F0);
    id v55 = v82;
    uint64_t v56 = v81;
    sub_1C2149FE0();
    (*(void (**)(char *, uint64_t))(v79 + 8))(v53, v56);
    sub_1C1F18BB4(0, &qword_1EA2C6ED0, (uint64_t (*)(uint64_t))type metadata accessor for PregnancyLactationInteractionCriticalAlertItem, MEMORY[0x1E4FBB320]);
    sub_1C20D8204(&qword_1EA2C6ED8, (void (*)(uint64_t))sub_1C20D9BCC);
    swift_retain();
    uint64_t v57 = v86;
    objc_super v58 = v87;
    sub_1C214A020();
    swift_release();
    (*(void (**)(char *, uint64_t))(v85 + 8))(v55, v57);
    sub_1C1F12718(0, (unint64_t *)&qword_1EBF0CB10);
    v102[0] = sub_1C214AD80();
    uint64_t v59 = sub_1C214AD20();
    uint64_t v60 = (uint64_t)v93;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v59 - 8) + 56))(v93, 1, 1, v59);
    sub_1C20D8204(&qword_1EA2C6EE8, (void (*)(uint64_t))sub_1C20D9C60);
    sub_1C1F43FD4();
    uint64_t v62 = v89;
    uint64_t v61 = v90;
    sub_1C214A0A0();
    sub_1C1F0E244(v60, &qword_1EBF0C7E8, MEMORY[0x1E4FBCC28]);

    (*(void (**)(char *, uint64_t))(v88 + 8))(v58, v62);
    swift_allocObject();
    swift_weakInit();
    sub_1C20D8204(&qword_1EA2C6EF8, (void (*)(uint64_t))sub_1C20D9D3C);
    uint64_t v63 = v92;
    sub_1C214A0F0();
    swift_release();
    (*(void (**)(char *, uint64_t))(v91 + 8))(v61, v63);
    swift_beginAccess();
    sub_1C2149E20();
    swift_endAccess();
    return (id)swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C20D6D4C@<X0>(unint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  unint64_t v3 = *a1;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v5 = sub_1C20D9F24(v3);
    uint64_t result = swift_release();
  }
  else
  {
    uint64_t v5 = 0;
  }
  *a2 = v5;
  return result;
}

uint64_t sub_1C20D6DC8(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v21 = a4;
  sub_1C1F18BB4(0, &qword_1EA2C6F08, (uint64_t (*)(uint64_t))sub_1C20D99FC, MEMORY[0x1E4F1AC08]);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = &v20[-v10];
  uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))MEMORY[0x1E4F1ACE0];
  sub_1C20D9E54(0, &qword_1EA2C6F10, MEMORY[0x1E4F1ACE0]);
  uint64_t v14 = v13;
  uint64_t v15 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v17 = &v20[-v16];
  uint64_t v22 = a1;
  uint64_t v23 = a2;
  uint64_t v24 = a3;
  char v25 = 0;
  char v26 = v21;
  sub_1C20D99FC();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C2149EE0();
  sub_1C1F248B4(0, (unint64_t *)&qword_1EBF0C9C0);
  sub_1C2149EC0();
  (*(void (**)(unsigned char *, uint64_t))(v9 + 8))(v11, v8);
  sub_1C20D9EE0(&qword_1EA2C6F18, &qword_1EA2C6F10, v12);
  uint64_t v18 = sub_1C2149FC0();
  (*(void (**)(unsigned char *, uint64_t))(v15 + 8))(v17, v14);
  return v18;
}

uint64_t sub_1C20D703C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1C20D6DC8(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned __int8 *)(a1 + 24));
  *a2 = result;
  return result;
}

uint64_t sub_1C20D7074(unint64_t *a1)
{
  uint64_t v26 = sub_1C2147B20();
  uint64_t v2 = *(void *)(v26 - 8);
  MEMORY[0x1F4188790](v26);
  uint64_t v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_1C2148540();
  uint64_t v5 = *(void *)(v25 - 8);
  MEMORY[0x1F4188790](v25);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v8 = *a1;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v10 = result;
    if (v8 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v11 = sub_1C214B930();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v11 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    if (v11)
    {
      uint64_t v27 = MEMORY[0x1E4FBC860];
      uint64_t result = sub_1C1F7098C(0, v11 & ~(v11 >> 63), 0);
      if (v11 < 0)
      {
        __break(1u);
        return result;
      }
      uint64_t v20 = v10;
      unint64_t v21 = v8;
      uint64_t v12 = 0;
      uint64_t v13 = (void (**)(char *, uint64_t))(v2 + 8);
      uint64_t v23 = v5 + 32;
      unint64_t v24 = v8 & 0xC000000000000001;
      long long v22 = xmmword_1C214FCD0;
      uint64_t v14 = v11;
      do
      {
        if (v24)
        {
          uint64_t v15 = MEMORY[0x1C8753960](v12, v21);
        }
        else
        {
          uint64_t v15 = *(void *)(v21 + 8 * v12 + 32);
          swift_retain();
        }
        sub_1C1F72888(0, (unint64_t *)&qword_1EBF0C958, (unint64_t *)&qword_1EBF0C2F0);
        uint64_t v16 = swift_allocObject();
        *(_OWORD *)(v16 + 16) = v22;
        *(void *)(v16 + 56) = type metadata accessor for PregnancyLactationInteractionCriticalAlertItem();
        *(void *)(v16 + 64) = sub_1C20D8204(&qword_1EA2C6F00, (void (*)(uint64_t))type metadata accessor for PregnancyLactationInteractionCriticalAlertItem);
        *(void *)(v16 + 32) = v15;
        swift_retain();
        sub_1C2147B10();
        sub_1C2147AD0();
        (*v13)(v4, v26);
        sub_1C2148520();
        swift_release();
        uint64_t v17 = v27;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1C1F7098C(0, *(void *)(v17 + 16) + 1, 1);
          uint64_t v17 = v27;
        }
        unint64_t v19 = *(void *)(v17 + 16);
        unint64_t v18 = *(void *)(v17 + 24);
        if (v19 >= v18 >> 1)
        {
          sub_1C1F7098C(v18 > 1, v19 + 1, 1);
          uint64_t v17 = v27;
        }
        ++v12;
        *(void *)(v17 + 16) = v19 + 1;
        (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v17+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(void *)(v5 + 72) * v19, v7, v25);
        uint64_t v27 = v17;
      }
      while (v14 != v12);
    }
    swift_retain();
    sub_1C2147F40();
    swift_release();
    sub_1C21482F0();
    swift_release();
    sub_1C21485B0();
    swift_release();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

uint64_t sub_1C20D7480(unint64_t a1, uint64_t a2, uint64_t a3, char a4, char a5)
{
  uint64_t result = MEMORY[0x1E4FBC860];
  uint64_t v40 = MEMORY[0x1E4FBC860];
  if (a1)
  {
    LOBYTE(v7) = a5;
    LOBYTE(v8) = a4;
    if (a1 >> 62) {
      goto LABEL_37;
    }
    uint64_t v10 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v10)
    {
      while (1)
      {
        if (v10 < 1)
        {
          __break(1u);
          return result;
        }
        uint64_t v11 = 0;
        unint64_t v12 = a1 & 0xC000000000000001;
        unint64_t v13 = a1 + 32;
        uint64_t v14 = a2 & 0xFFFFFFFFFFFFFF8;
        if (a2 < 0) {
          uint64_t v14 = a2;
        }
        uint64_t v30 = v14;
        uint64_t v31 = qword_1EA2C6DC8;
        char v37 = v8;
        char v38 = v7;
        unint64_t v35 = a1 & 0xC000000000000001;
        uint64_t v36 = v10;
        unint64_t v32 = a1;
        unint64_t v34 = a1 + 32;
        while (1)
        {
          id v15 = v12 ? (id)MEMORY[0x1C8753960](v11, a1) : *(id *)(v13 + 8 * v11);
          uint64_t v16 = v15;
          if ((objc_msgSend(v15, sel_interactionType, v30) != (id)1 || (v8 & 1) == 0 && a3 == 1)
            && (objc_msgSend(v16, sel_interactionType) != (id)2 || (v7 & 1) != 0)
            && a2)
          {
            break;
          }

LABEL_9:
          if (++v11 == v10)
          {
            swift_bridgeObjectRelease();
            return v40;
          }
        }
        if (!((unint64_t)a2 >> 62)) {
          break;
        }
        swift_bridgeObjectRetain();
        uint64_t v17 = sub_1C214B930();
        if (!v17) {
          goto LABEL_28;
        }
LABEL_21:
        uint64_t v7 = 4;
        while (1)
        {
          id v18 = (a2 & 0xC000000000000001) != 0
              ? (id)MEMORY[0x1C8753960](v7 - 4, a2)
              : *(id *)(a2 + 8 * v7);
          unint64_t v19 = v18;
          uint64_t v8 = v7 - 3;
          if (__OFADD__(v7 - 4, 1)) {
            break;
          }
          unsigned int v20 = objc_msgSend(v18, sel_isEquivalentToPregnancyLactationInteraction_, v16);

          if (v20)
          {

            swift_bridgeObjectRelease();
            goto LABEL_32;
          }
          ++v7;
          if (v8 == v17) {
            goto LABEL_28;
          }
        }
        __break(1u);
LABEL_37:
        swift_bridgeObjectRetain();
        uint64_t result = sub_1C214B930();
        uint64_t v10 = result;
        if (!result) {
          goto LABEL_38;
        }
      }
      uint64_t v17 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v17) {
        goto LABEL_21;
      }
LABEL_28:
      swift_bridgeObjectRelease();
      uint64_t v21 = swift_allocObject();
      *(void *)(v21 + 16) = v16;
      *(void *)(v21 + 24) = v33;
      uint64_t v22 = swift_allocObject();
      swift_weakInit();
      id v23 = v16;
      swift_retain();
      id v24 = sub_1C20D5110();
      uint64_t v25 = *(void *)(v33 + v31);
      uint64_t v26 = (void *)swift_allocObject();
      void v26[2] = v24;
      void v26[3] = v23;
      v26[4] = v22;
      v26[5] = v25;
      type metadata accessor for PregnancyLactationInteractionCriticalAlertItem();
      uint64_t v27 = (void *)swift_allocObject();
      type metadata accessor for PregnancyLactationInteractionCriticalAlertCell();
      sub_1C20D8204(&qword_1EA2C64B8, (void (*)(uint64_t))type metadata accessor for PregnancyLactationInteractionCriticalAlertCell);
      id v28 = v23;
      swift_retain();
      v27[3] = sub_1C21481D0();
      v27[4] = v29;
      uint64_t v27[2] = v28;
      uint64_t v27[5] = sub_1C20D86AC;
      v27[6] = v21;
      v27[7] = sub_1C20D8704;
      v27[8] = v26;
      MEMORY[0x1C87528E0]();
      if (*(void *)((v40 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v40 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_1C214A7D0();
      }
      sub_1C214A820();
      sub_1C214A7A0();

      a1 = v32;
LABEL_32:
      LOBYTE(v8) = v37;
      LOBYTE(v7) = v38;
      unint64_t v12 = v35;
      uint64_t v10 = v36;
      unint64_t v13 = v34;
      goto LABEL_9;
    }
LABEL_38:
    swift_bridgeObjectRelease();
    return MEMORY[0x1E4FBC860];
  }
  return result;
}

void sub_1C20D785C(void *a1, uint64_t a2)
{
  id v4 = objc_msgSend(a1, sel_interactionType);
  if (v4 == (id)1)
  {
    char v5 = 1;
  }
  else
  {
    if (v4 != (id)2)
    {
      sub_1C214B910();
      __break(1u);
      return;
    }
    char v5 = 2;
  }
  id v6 = objc_msgSend(a1, sel_medication);
  uint64_t v7 = sub_1C203B8A4(v6, v5);
  uint64_t v9 = v8;

  if (!v9)
  {
    uint64_t v7 = MedicationSecondaryEducationType.unavailableText.getter();
    uint64_t v9 = v10;
  }
  id v11 = objc_msgSend(a1, sel_medication);
  id v12 = objc_msgSend(v11, sel_localizedOntologyEducationContent);
  unint64_t v13 = v12;
  if (v12)
  {
    id v14 = objc_msgSend(v12, sel_primarySection);

    if (v14)
    {
      sub_1C214B060();

      sub_1C203C458(0, (unint64_t *)&qword_1EA2C3A40, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
      sub_1C1F64558();
      unint64_t v13 = (void *)sub_1C214A580();
      id v14 = v15;

      swift_bridgeObjectRelease();
    }
    else
    {

      unint64_t v13 = 0;
    }
  }
  else
  {

    id v14 = 0;
  }
  id v16 = objc_msgSend(a1, sel_medication);
  uint64_t v17 = objc_allocWithZone((Class)type metadata accessor for MedicationSecondaryEducationViewController());
  v17[qword_1EA2C47E0] = v5;
  type metadata accessor for MedicationSecondaryEducationCompoundDataSource(0);
  swift_allocObject();
  type metadata accessor for MedicationSecondaryEducationDataSource(0);
  uint64_t v18 = swift_allocObject();
  unint64_t v19 = v17;
  uint64_t v20 = sub_1C20D8758(v5, v16, v7, v9, (uint64_t)v13, (uint64_t)v14, v18);
  sub_1C1F72888(0, (unint64_t *)&qword_1EA2C69F0, (unint64_t *)&qword_1EA2C2CE0);
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_1C214FCD0;
  uint64_t v22 = sub_1C20D8204((unint64_t *)&qword_1EA2C47F8, (void (*)(uint64_t))type metadata accessor for MedicationSecondaryEducationDataSource);
  *(void *)(v21 + 32) = v20;
  *(void *)(v21 + 4sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = v22;
  sub_1C2148840();

  swift_retain();
  id v23 = (void *)sub_1C2148AC0();
  objc_msgSend(v23, sel_setModalPresentationStyle_, 2);

  swift_release();
  objc_msgSend(v23, sel_setModalPresentationStyle_, 2);
  id v24 = (void *)MEMORY[0x1C8754850](a2 + qword_1EA2C6D88);
  if (v24)
  {
    uint64_t v25 = v24;
    objc_msgSend(v24, sel_showAdaptively_sender_, v23, a2);
  }
}

void sub_1C20D7BC8(void *a1, id a2, uint64_t a3, uint64_t a4)
{
  id v8 = objc_msgSend(a2, sel_medication);
  id v9 = objc_msgSend(a2, sel_interactionType);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a3;
  *(void *)(v10 + 24) = a4;
  v12[4] = sub_1C20D8750;
  v12[5] = v10;
  v12[0] = MEMORY[0x1E4F143A8];
  v12[1] = 1107296256;
  void v12[2] = sub_1C20E218C;
  v12[3] = &block_descriptor_14;
  id v11 = _Block_copy(v12);
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_markPregnancyLactationInteractionForMedicationAsDismissed_interactionType_completion_, v8, v9, v11);
  _Block_release(v11);
}

uint64_t sub_1C20D7D04()
{
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    id v0 = sub_1C20D5110();
    uint64_t v1 = swift_allocObject();
    swift_weakInit();
    aBlock[4] = sub_1C20D58D4;
    aBlock[5] = v1;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1C20D59BC;
    aBlock[3] = &block_descriptor_19_0;
    uint64_t v2 = _Block_copy(aBlock);
    swift_release();
    objc_msgSend(v0, sel_allDismissedPregnancyLactationInteractionsWithCompletion_, v2);
    _Block_release(v2);
    swift_release();
  }
  return sub_1C2149550();
}

void PregnancyLactationInteractionCriticalAlertDataSource.__allocating_init(arrangedSections:isHidden:)()
{
}

void PregnancyLactationInteractionCriticalAlertDataSource.init(arrangedSections:isHidden:)()
{
}

uint64_t sub_1C20D7E8C()
{
  swift_unknownObjectWeakDestroy();
  swift_release();
  uint64_t v1 = v0 + qword_1EA2C6D90;
  sub_1C20D92D0(0, &qword_1EA2C6D68, MEMORY[0x1E4F1AC70]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();

  swift_release();
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t PregnancyLactationInteractionCriticalAlertDataSource.deinit()
{
  uint64_t v0 = _s19HealthMedicationsUI34InteractionSeperatorLineDataSourceCfd_0();
  swift_unknownObjectWeakDestroy();
  swift_release();
  uint64_t v1 = v0 + qword_1EA2C6D90;
  sub_1C20D92D0(0, &qword_1EA2C6D68, MEMORY[0x1E4F1AC70]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();

  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t PregnancyLactationInteractionCriticalAlertDataSource.__deallocating_deinit()
{
  PregnancyLactationInteractionCriticalAlertDataSource.deinit();

  return swift_deallocClassInstance();
}

uint64_t sub_1C20D80F0()
{
  return sub_1C2148B80();
}

Swift::Void __swiftcall PregnancyLactationInteractionCriticalAlertDataSource.registerCells(for:)(UICollectionView *a1)
{
}

uint64_t sub_1C20D81BC()
{
  return sub_1C20D8204(&qword_1EA2C6DD0, (void (*)(uint64_t))type metadata accessor for PregnancyLactationInteractionCriticalAlertDataSource);
}

uint64_t sub_1C20D8204(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for PregnancyLactationInteractionCriticalAlertDataSource()
{
  uint64_t result = qword_1EA2C6DD8;
  if (!qword_1EA2C6DD8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C20D8298()
{
  return sub_1C214ACC0();
}

void sub_1C20D8308()
{
  sub_1C20D92D0(319, &qword_1EA2C6D68, MEMORY[0x1E4F1AC70]);
  if (v0 <= 0x3F)
  {
    sub_1C20D84F4();
    if (v1 <= 0x3F) {
      swift_initClassMetadata2();
    }
  }
}

uint64_t method lookup function for PregnancyLactationInteractionCriticalAlertDataSource(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for PregnancyLactationInteractionCriticalAlertDataSource);
}

uint64_t dispatch thunk of PregnancyLactationInteractionCriticalAlertDataSource.__allocating_init(listManager:healthStore:viewController:analyticsManager:)()
{
  return (*(uint64_t (**)(void))(class metadata base offset for PregnancyLactationInteractionCriticalAlertDataSource
                              + v0
                              + 144))();
}

uint64_t dispatch thunk of PregnancyLactationInteractionCriticalAlertDataSource.layout(for:environment:)()
{
  return (*(uint64_t (**)(void))(class metadata base offset for PregnancyLactationInteractionCriticalAlertDataSource
                              + *v0
                              + 152))();
}

uint64_t dispatch thunk of PregnancyLactationInteractionCriticalAlertDataSource.snapshotDidChange(dataSourceID:snapshot:animated:)()
{
  return (*(uint64_t (**)(void))(class metadata base offset for PregnancyLactationInteractionCriticalAlertDataSource
                              + *v0
                              + 272))();
}

void sub_1C20D84F4()
{
  if (!qword_1EA2C6DE8)
  {
    sub_1C20D9350(255, &qword_1EA2C6DF0, type metadata accessor for HKMCPregnancyState);
    unint64_t v0 = sub_1C214B4F0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C6DE8);
    }
  }
}

uint64_t sub_1C20D8568()
{
  return type metadata accessor for PregnancyLactationInteractionCriticalAlertDataSource();
}

uint64_t sub_1C20D8570@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1C2149F80();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1C20D85F0()
{
  return sub_1C2149F90();
}

uint64_t sub_1C20D866C()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

void sub_1C20D86AC()
{
  sub_1C20D785C(*(void **)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1C20D86B4()
{
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 48, 7);
}

void sub_1C20D8704()
{
  sub_1C20D7BC8(*(void **)(v0 + 16), *(id *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_1C20D8710()
{
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C20D8750()
{
  return sub_1C20D7D04();
}

uint64_t sub_1C20D8758(char a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v76 = a4;
  *(void *)&long long v77 = a5;
  uint64_t v75 = a3;
  id v11 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C1F18BB4(0, &qword_1EBF0B7A0, MEMORY[0x1E4F66CD8], MEMORY[0x1E4FBB718]);
  uint64_t v13 = MEMORY[0x1F4188790](v12 - 8);
  id v15 = (char *)&v75 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v17 = (char *)&v75 - v16;
  uint64_t v18 = sub_1C2147B20();
  uint64_t v79 = *(void *)(v18 - 8);
  uint64_t v80 = v18;
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)&v75 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = sub_1C2148540();
  uint64_t v78 = *(void *)(v83 - 8);
  uint64_t v21 = MEMORY[0x1F4188790](v83);
  uint64_t v82 = (char *)&v75 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v21);
  uint64_t v81 = (char *)&v75 - v23;
  sub_1C1F18BB4(0, (unint64_t *)&qword_1EBF0B690, MEMORY[0x1E4F66C80], v11);
  MEMORY[0x1F4188790](v24 - 8);
  uint64_t v26 = (char *)&v75 - v25;
  uint64_t v84 = a7;
  *(unsigned char *)(a7 + qword_1EA2C36D8) = a1;
  if (!a1)
  {
    uint64_t v31 = type metadata accessor for MedicationSideEffectsItem();
    uint64_t v32 = swift_allocObject();
    type metadata accessor for MedicationSideEffectsItemCell();
    sub_1C20D8204(&qword_1EA2C2C30, (void (*)(uint64_t))type metadata accessor for MedicationSideEffectsItemCell);
    *(void *)(v32 + 16) = sub_1C21481D0();
    *(void *)(v32 + 24) = v33;
    uint64_t v34 = v76;
    *(void *)(v32 + 32) = v75;
    *(void *)(v32 + 4sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = v34;
    *(void *)(v32 + 48) = v77;
    *(void *)(v32 + 56) = a6;
    uint64_t v86 = v31;
    unint64_t v35 = (unint64_t *)&unk_1EA2C3720;
    uint64_t v36 = type metadata accessor for MedicationSideEffectsItem;
    goto LABEL_12;
  }
  if (a1 == 1)
  {
    sub_1C214AFE0();
    uint64_t v27 = sub_1C21494D0();
    uint64_t v28 = *(void *)(v27 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v17, 1, v27) != 1)
    {
      char v39 = sub_1C21494B0();
      (*(void (**)(char *, uint64_t))(v28 + 8))(v17, v27);
      goto LABEL_11;
    }
    uint64_t v29 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F66CD8];
    uint64_t v30 = (uint64_t)v17;
  }
  else
  {
    sub_1C214AFE0();
    uint64_t v37 = sub_1C21494D0();
    uint64_t v38 = *(void *)(v37 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v15, 1, v37) != 1)
    {
      char v39 = sub_1C21494C0();
      (*(void (**)(char *, uint64_t))(v38 + 8))(v15, v37);
      goto LABEL_11;
    }
    uint64_t v29 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F66CD8];
    uint64_t v30 = (uint64_t)v15;
  }
  sub_1C1F0E244(v30, &qword_1EBF0B7A0, v29);
  char v39 = 0;
LABEL_11:
  uint64_t v40 = type metadata accessor for MedicationMarkdownItem();
  uint64_t v32 = swift_allocObject();
  type metadata accessor for MedicationMarkdownItemCell();
  sub_1C20D8204(&qword_1EA2C3700, (void (*)(uint64_t))type metadata accessor for MedicationMarkdownItemCell);
  *(void *)(v32 + 16) = sub_1C21481D0();
  *(void *)(v32 + 24) = v41;
  uint64_t v42 = v76;
  *(void *)(v32 + 32) = v75;
  *(void *)(v32 + 4sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = v42;
  *(void *)(v32 + 48) = v77;
  *(void *)(v32 + 56) = a6;
  *(unsigned char *)(v32 + 64) = v39 & 1;
  uint64_t v86 = v40;
  unint64_t v35 = (unint64_t *)&unk_1EA2C3710;
  uint64_t v36 = type metadata accessor for MedicationMarkdownItem;
LABEL_12:
  uint64_t v87 = sub_1C20D8204(v35, (void (*)(uint64_t))v36);
  v85[0] = v32;
  _sSo29HKMedicationUserDomainConceptC19HealthMedicationsUIE7medmoji0eF10Experience29MedicationVisualizationConfigVSgvg_0();
  uint64_t v43 = _sSo29HKMedicationUserDomainConceptC19HealthMedicationsUIE5titleSSvg_0();
  uint64_t v45 = v44;
  id v46 = a2;
  uint64_t v47 = sub_1C20F38A0();
  unint64_t v49 = v48;

  if (v49) {
    uint64_t v50 = v47;
  }
  else {
    uint64_t v50 = 0;
  }
  if (v49) {
    unint64_t v51 = v49;
  }
  else {
    unint64_t v51 = 0xE000000000000000;
  }
  uint64_t v52 = _sSo29HKMedicationUserDomainConceptC19HealthMedicationsUIE20ingredientComponentsSaySSGSgvg_0();
  if (v52) {
    uint64_t v53 = v52;
  }
  else {
    uint64_t v53 = MEMORY[0x1E4FBC860];
  }
  uint64_t v54 = type metadata accessor for MedicationInfoItem();
  uint64_t v55 = swift_allocObject();
  type metadata accessor for MedicationInfoItemCell();
  sub_1C20D8204((unint64_t *)&qword_1EA2C36F8, (void (*)(uint64_t))type metadata accessor for MedicationInfoItemCell);
  *(void *)(v55 + 16) = sub_1C21481D0();
  *(void *)(v55 + 24) = v56;
  sub_1C1F4DB28((uint64_t)v26, v55 + OBJC_IVAR____TtC19HealthMedicationsUI18MedicationInfoItem_medmoji);
  uint64_t v57 = (uint64_t *)(v55 + OBJC_IVAR____TtC19HealthMedicationsUI18MedicationInfoItem_name);
  *uint64_t v57 = v43;
  v57[1] = v45;
  objc_super v58 = (uint64_t *)(v55 + OBJC_IVAR____TtC19HealthMedicationsUI18MedicationInfoItem_strength);
  *objc_super v58 = v50;
  v58[1] = v51;
  *(void *)(v55 + OBJC_IVAR____TtC19HealthMedicationsUI18MedicationInfoItem_ingredients) = v53;
  sub_1C1F72888(0, (unint64_t *)&qword_1EBF0C958, (unint64_t *)&qword_1EBF0C2F0);
  uint64_t v59 = swift_allocObject();
  long long v77 = xmmword_1C214FCD0;
  *(_OWORD *)(v59 + 16) = xmmword_1C214FCD0;
  *(void *)(v59 + 56) = v54;
  *(void *)(v59 + 64) = sub_1C20D8204(&qword_1EA2C3718, (void (*)(uint64_t))type metadata accessor for MedicationInfoItem);
  *(void *)(v59 + 32) = v55;
  swift_retain();
  sub_1C2147B10();
  sub_1C2147AD0();
  uint64_t v60 = v80;
  uint64_t v61 = *(void (**)(char *, uint64_t))(v79 + 8);
  v61(v20, v80);
  uint64_t v62 = v81;
  sub_1C2148520();
  uint64_t v63 = swift_allocObject();
  *(_OWORD *)(v63 + 16) = v77;
  sub_1C1F236D8((uint64_t)v85, v63 + 32);
  sub_1C2147B10();
  sub_1C2147AD0();
  v61(v20, v60);
  uint64_t v64 = v82;
  sub_1C2148520();
  sub_1C1F18BB4(0, (unint64_t *)&qword_1EA2C2DD0, MEMORY[0x1E4F66468], MEMORY[0x1E4FBBE00]);
  uint64_t v65 = v78;
  uint64_t v66 = *(void *)(v78 + 72);
  unint64_t v67 = (*(unsigned __int8 *)(v78 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v78 + 80);
  uint64_t v68 = swift_allocObject();
  *(_OWORD *)(v68 + 16) = xmmword_1C214FCC0;
  unint64_t v69 = v68 + v67;
  uint64_t v70 = *(void (**)(unint64_t, char *, uint64_t))(v65 + 16);
  uint64_t v71 = v83;
  v70(v68 + v67, v62, v83);
  v70(v69 + v66, v64, v71);
  uint64_t v72 = sub_1C2147F50();
  swift_release();
  uint64_t v73 = *(void (**)(char *, uint64_t))(v65 + 8);
  v73(v64, v71);
  v73(v62, v71);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v85);
  return v72;
}

void sub_1C20D902C()
{
  if (!qword_1EA2C6DF8)
  {
    sub_1C214AB80();
    sub_1C20D8204(&qword_1EA2C6E00, MEMORY[0x1E4F668D0]);
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_1EA2C6DF8);
    }
  }
}

void sub_1C20D90E8()
{
  if (!qword_1EA2C6E08)
  {
    sub_1C214AB60();
    sub_1C20D8204(&qword_1EA2C6E10, MEMORY[0x1E4F668A8]);
    unint64_t v0 = sub_1C2149D60();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C6E08);
    }
  }
}

void sub_1C20D9184()
{
  if (!qword_1EA2C6E18)
  {
    sub_1C20D90E8();
    sub_1C20D972C(255, &qword_1EA2C6E20, MEMORY[0x1E4F1AC18]);
    sub_1C20D8204(&qword_1EA2C6E28, (void (*)(uint64_t))sub_1C20D90E8);
    sub_1C20D925C();
    unint64_t v0 = sub_1C2149D70();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C6E18);
    }
  }
}

unint64_t sub_1C20D925C()
{
  unint64_t result = qword_1EA2C6E30;
  if (!qword_1EA2C6E30)
  {
    sub_1C20D972C(255, &qword_1EA2C6E20, MEMORY[0x1E4F1AC18]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C6E30);
  }
  return result;
}

void sub_1C20D92D0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    sub_1C20D94E0(255, &qword_1EA2C6D70, &qword_1EA2C6D78, &qword_1EA2C6D80);
    unint64_t v7 = a3(a1, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

void sub_1C20D9350(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C2149E10();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

unint64_t sub_1C20D93B4()
{
  unint64_t result = qword_1EBF0C688;
  if (!qword_1EBF0C688)
  {
    sub_1C20D9350(255, (unint64_t *)&qword_1EBF0C690, MEMORY[0x1E4F677F0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBF0C688);
  }
  return result;
}

void sub_1C20D9428()
{
  if (!qword_1EA2C6E40)
  {
    sub_1C20D9350(255, (unint64_t *)&qword_1EBF0C690, MEMORY[0x1E4F677F0]);
    sub_1C20D94E0(255, &qword_1EA2C6E48, &qword_1EA2C3E18, &qword_1EA2C3E10);
    sub_1C20D93B4();
    unint64_t v0 = sub_1C2149D00();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C6E40);
    }
  }
}

void sub_1C20D94E0(uint64_t a1, unint64_t *a2, unint64_t *a3, unint64_t *a4)
{
  if (!*a2)
  {
    sub_1C1F30D40(255, a3, a4);
    unint64_t v5 = sub_1C214B4F0();
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1C20D953C(uint64_t a1, unint64_t *a2, unint64_t *a3, unint64_t *a4)
{
  if (!*a2)
  {
    sub_1C20D9350(255, (unint64_t *)&qword_1EBF0C690, MEMORY[0x1E4F677F0]);
    sub_1C1F30D40(255, a3, a4);
    sub_1C20D93B4();
    unint64_t v7 = sub_1C2149D00();
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

void sub_1C20D95EC()
{
  if (!qword_1EA2C6E58)
  {
    sub_1C20D953C(255, &qword_1EA2C6E50, &qword_1EA2C3E18, &qword_1EA2C3E10);
    sub_1C20D92D0(255, &qword_1EA2C6E38, MEMORY[0x1E4F1AC60]);
    sub_1C20D9350(255, &qword_1EA2C6DF0, type metadata accessor for HKMCPregnancyState);
    sub_1C20D972C(255, (unint64_t *)&qword_1EA2C39B0, MEMORY[0x1E4F1AAE0]);
    sub_1C20D9790();
    sub_1C20D9808();
    sub_1C20D987C();
    sub_1C1F60808();
    unint64_t v0 = sub_1C2149CD0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C6E58);
    }
  }
}

void sub_1C20D972C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void, void, void, void))
{
  if (!*a2)
  {
    unint64_t v4 = a3(0, MEMORY[0x1E4FBB390], MEMORY[0x1E4FBC248], MEMORY[0x1E4FBC278]);
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

unint64_t sub_1C20D9790()
{
  unint64_t result = qword_1EA2C6E60;
  if (!qword_1EA2C6E60)
  {
    sub_1C20D953C(255, &qword_1EA2C6E50, &qword_1EA2C3E18, &qword_1EA2C3E10);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C6E60);
  }
  return result;
}

unint64_t sub_1C20D9808()
{
  unint64_t result = qword_1EA2C6E68;
  if (!qword_1EA2C6E68)
  {
    sub_1C20D92D0(255, &qword_1EA2C6E38, MEMORY[0x1E4F1AC60]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C6E68);
  }
  return result;
}

unint64_t sub_1C20D987C()
{
  unint64_t result = qword_1EA2C6E70;
  if (!qword_1EA2C6E70)
  {
    sub_1C20D9350(255, &qword_1EA2C6DF0, type metadata accessor for HKMCPregnancyState);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C6E70);
  }
  return result;
}

void sub_1C20D98F0()
{
  if (!qword_1EA2C6E78)
  {
    unint64_t v0 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))MEMORY[0x1E4F1AAE0];
    sub_1C20D9E54(255, &qword_1EA2C6E80, MEMORY[0x1E4F1AAE0]);
    sub_1C20D9AFC();
    sub_1C20D9EE0(&qword_1EA2C6EA8, &qword_1EA2C6E80, v0);
    sub_1C20D8204(&qword_1EA2C6EB0, (void (*)(uint64_t))sub_1C20D9AFC);
    unint64_t v1 = sub_1C2149DA0();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_1EA2C6E78);
    }
  }
}

void sub_1C20D99FC()
{
  if (!qword_1EA2C6E88)
  {
    sub_1C20D94E0(255, &qword_1EA2C6E48, &qword_1EA2C3E18, &qword_1EA2C3E10);
    sub_1C20D94E0(255, &qword_1EA2C6D70, &qword_1EA2C6D78, &qword_1EA2C6D80);
    sub_1C1F18BB4(255, &qword_1EA2C6E90, (uint64_t (*)(uint64_t))type metadata accessor for HKMCPregnancyState, MEMORY[0x1E4FBB718]);
    unint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
    if (!v1) {
      atomic_store(TupleTypeMetadata, (unint64_t *)&qword_1EA2C6E88);
    }
  }
}

void sub_1C20D9AFC()
{
  if (!qword_1EA2C6E98)
  {
    sub_1C20D95EC();
    sub_1C1F248B4(255, (unint64_t *)&qword_1EBF0C9C0);
    sub_1C20D8204(&qword_1EA2C6EA0, (void (*)(uint64_t))sub_1C20D95EC);
    unint64_t v0 = sub_1C2149D30();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C6E98);
    }
  }
}

void sub_1C20D9BCC()
{
  if (!qword_1EA2C6EB8)
  {
    sub_1C20D98F0();
    sub_1C20D8204(&qword_1EA2C6EC0, (void (*)(uint64_t))sub_1C20D98F0);
    unint64_t v0 = sub_1C2149D20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C6EB8);
    }
  }
}

void sub_1C20D9C60()
{
  if (!qword_1EA2C6EC8)
  {
    sub_1C20D9BCC();
    sub_1C1F18BB4(255, &qword_1EA2C6ED0, (uint64_t (*)(uint64_t))type metadata accessor for PregnancyLactationInteractionCriticalAlertItem, MEMORY[0x1E4FBB320]);
    sub_1C20D8204(&qword_1EA2C6ED8, (void (*)(uint64_t))sub_1C20D9BCC);
    unint64_t v0 = sub_1C2149D60();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C6EC8);
    }
  }
}

void sub_1C20D9D3C()
{
  if (!qword_1EA2C6EE0)
  {
    sub_1C20D9C60();
    sub_1C1F12718(255, (unint64_t *)&qword_1EBF0CB10);
    sub_1C20D8204(&qword_1EA2C6EE8, (void (*)(uint64_t))sub_1C20D9C60);
    sub_1C1F43FD4();
    unint64_t v0 = sub_1C2149DF0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C6EE0);
    }
  }
}

uint64_t sub_1C20D9E08@<X0>(unint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1C20D6D4C(a1, a2);
}

uint64_t sub_1C20D9E10@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1C20D7480(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned char *)(a1 + 24), *(unsigned char *)(a1 + 25));
  *a2 = result;
  return result;
}

uint64_t sub_1C20D9E4C(unint64_t *a1)
{
  return sub_1C20D7074(a1);
}

void sub_1C20D9E54(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, void))
{
  if (!*a2)
  {
    sub_1C20D99FC();
    uint64_t v7 = v6;
    uint64_t v8 = sub_1C1F248B4(255, (unint64_t *)&qword_1EBF0C9C0);
    unint64_t v9 = a3(a1, v7, v8, MEMORY[0x1E4FBC0F0]);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

uint64_t sub_1C20D9EE0(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C20D9E54(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C20D9F24(unint64_t a1)
{
  sub_1C1F18BB4(0, &qword_1EBF0B7A0, MEMORY[0x1E4F66CD8], MEMORY[0x1E4FBB718]);
  uint64_t v3 = MEMORY[0x1F4188790](v2 - 8);
  uint64_t v5 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v41 - v6;
  uint64_t v43 = MEMORY[0x1E4FBC860];
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_1C214B930();
    unint64_t v42 = a1;
    if (v8) {
      goto LABEL_3;
    }
LABEL_16:
    swift_bridgeObjectRelease();
    unint64_t v16 = MEMORY[0x1E4FBC860];
    goto LABEL_17;
  }
  uint64_t v8 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  unint64_t v42 = a1;
  if (!v8) {
    goto LABEL_16;
  }
LABEL_3:
  if (v8 < 1)
  {
    __break(1u);
LABEL_62:
    __break(1u);
    __break(1u);
LABEL_63:
    __break(1u);
    swift_release();
    uint64_t result = swift_release();
    __break(1u);
    return result;
  }
  uint64_t v9 = 0;
  unint64_t v10 = a1 & 0xC000000000000001;
  do
  {
    if (v10) {
      id v11 = (id)MEMORY[0x1C8753960](v9, a1);
    }
    else {
      id v11 = *(id *)(a1 + 8 * v9 + 32);
    }
    uint64_t v12 = v11;
    sub_1C214AFE0();
    uint64_t v13 = sub_1C21494D0();
    uint64_t v14 = *(void *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v7, 1, v13) == 1)
    {
      sub_1C1F0E244((uint64_t)v7, &qword_1EBF0B7A0, MEMORY[0x1E4F66CD8]);
LABEL_6:

      goto LABEL_7;
    }
    char v15 = sub_1C21494B0();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v7, v13);
    if ((v15 & 1) == 0) {
      goto LABEL_6;
    }
    sub_1C214B820();
    sub_1C214B860();
    sub_1C214B870();
    sub_1C214B830();
LABEL_7:
    a1 = v42;
    ++v9;
  }
  while (v8 != v9);
  swift_bridgeObjectRelease();
  unint64_t v16 = v43;
LABEL_17:
  swift_getKeyPath();
  swift_retain();
  swift_retain();
  if ((v16 & 0x8000000000000000) != 0 || (uint64_t v17 = (void *)v16, (v16 & 0x4000000000000000) != 0))
  {
    uint64_t v17 = sub_1C1F7F700(v16);
    swift_release();
  }
  uint64_t v43 = (uint64_t)v17;
  sub_1C1FAEAD0(&v43);
  swift_release();
  swift_release_n();
  uint64_t v18 = v43;
  if (v43 < 0 || (v43 & 0x4000000000000000) != 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v19 = sub_1C214B930();
    swift_release();
    if (!v19) {
      goto LABEL_31;
    }
LABEL_22:
    uint64_t v43 = MEMORY[0x1E4FBC860];
    sub_1C214B850();
    if ((v19 & 0x8000000000000000) == 0)
    {
      uint64_t v20 = 0;
      do
      {
        if ((v18 & 0xC000000000000001) != 0) {
          id v21 = (id)MEMORY[0x1C8753960](v20, v18);
        }
        else {
          id v21 = *(id *)(v18 + 8 * v20 + 32);
        }
        uint64_t v22 = v21;
        ++v20;
        objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F66B20]), sel_initWithMedication_interactionType_, v21, 1);

        sub_1C214B820();
        sub_1C214B860();
        sub_1C214B870();
        sub_1C214B830();
      }
      while (v19 != v20);
      uint64_t v23 = v43;
      swift_release();
      a1 = v42;
      goto LABEL_32;
    }
    goto LABEL_62;
  }
  uint64_t v19 = *(void *)(v43 + 16);
  if (v19) {
    goto LABEL_22;
  }
LABEL_31:
  swift_release();
  uint64_t v23 = MEMORY[0x1E4FBC860];
LABEL_32:
  uint64_t v24 = MEMORY[0x1E4FBC860];
  uint64_t v43 = MEMORY[0x1E4FBC860];
  if (!v8)
  {
    unint64_t v32 = MEMORY[0x1E4FBC860];
    goto LABEL_45;
  }
  uint64_t v41 = v23;
  unint64_t v25 = a1 & 0xC000000000000001;
  swift_bridgeObjectRetain();
  uint64_t v26 = 0;
  while (2)
  {
    if (v25) {
      id v27 = (id)MEMORY[0x1C8753960](v26, a1);
    }
    else {
      id v27 = *(id *)(a1 + 8 * v26 + 32);
    }
    uint64_t v28 = v27;
    sub_1C214AFE0();
    uint64_t v29 = sub_1C21494D0();
    uint64_t v30 = *(void *)(v29 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v5, 1, v29) == 1)
    {
      sub_1C1F0E244((uint64_t)v5, &qword_1EBF0B7A0, MEMORY[0x1E4F66CD8]);
LABEL_35:

      goto LABEL_36;
    }
    char v31 = sub_1C21494C0();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v5, v29);
    if ((v31 & 1) == 0) {
      goto LABEL_35;
    }
    sub_1C214B820();
    sub_1C214B860();
    sub_1C214B870();
    sub_1C214B830();
LABEL_36:
    a1 = v42;
    if (v8 != ++v26) {
      continue;
    }
    break;
  }
  swift_bridgeObjectRelease();
  unint64_t v32 = v43;
  uint64_t v24 = MEMORY[0x1E4FBC860];
  uint64_t v23 = v41;
LABEL_45:
  swift_getKeyPath();
  swift_retain();
  swift_retain();
  if ((v32 & 0x8000000000000000) != 0 || (uint64_t v33 = (void *)v32, (v32 & 0x4000000000000000) != 0))
  {
    uint64_t v33 = sub_1C1F7F700(v32);
    swift_release();
  }
  uint64_t v43 = (uint64_t)v33;
  sub_1C1FAEAD0(&v43);
  swift_release();
  swift_release_n();
  uint64_t v34 = v43;
  if (v43 < 0 || (v43 & 0x4000000000000000) != 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v35 = sub_1C214B930();
    swift_release();
    if (!v35) {
      goto LABEL_59;
    }
LABEL_50:
    uint64_t v43 = v24;
    sub_1C214B850();
    if ((v35 & 0x8000000000000000) == 0)
    {
      uint64_t v36 = 0;
      do
      {
        if ((v34 & 0xC000000000000001) != 0) {
          id v37 = (id)MEMORY[0x1C8753960](v36, v34);
        }
        else {
          id v37 = *(id *)(v34 + 8 * v36 + 32);
        }
        uint64_t v38 = v37;
        ++v36;
        objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F66B20]), sel_initWithMedication_interactionType_, v37, 2);

        sub_1C214B820();
        sub_1C214B860();
        sub_1C214B870();
        sub_1C214B830();
      }
      while (v35 != v36);
      unint64_t v39 = v43;
      swift_release();
      goto LABEL_60;
    }
    goto LABEL_63;
  }
  uint64_t v35 = *(void *)(v43 + 16);
  if (v35) {
    goto LABEL_50;
  }
LABEL_59:
  swift_release();
  unint64_t v39 = MEMORY[0x1E4FBC860];
LABEL_60:
  uint64_t v43 = v23;
  sub_1C1F7DE00(v39);
  return v43;
}

uint64_t sub_1C20DA618()
{
  return MEMORY[0x1E4F66D60];
}

uint64_t sub_1C20DA628()
{
  swift_release();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1C20DA670()
{
  return sub_1C20D58DC(*(void *)(v0 + 16));
}

uint64_t type metadata accessor for MedicationsLogDataSource()
{
  uint64_t result = qword_1EBF0C338;
  if (!qword_1EBF0C338) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C20DA6D8()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1C20DA73C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = sub_1C2149BE0();
  MEMORY[0x1F4188790](v3 - 8);
  if (*(void *)(v1 + qword_1EBF0C320 + 8))
  {
    swift_bridgeObjectRetain();
    sub_1C2149B50();
    uint64_t v4 = sub_1C2148180();
    swift_allocObject();
    uint64_t v5 = sub_1C2148170();
    a1[3] = v4;
    uint64_t result = sub_1C20DB1DC((unint64_t *)&qword_1EA2C3550, MEMORY[0x1E4F66208]);
    a1[4] = result;
    *a1 = v5;
  }
  else
  {
    a1[3] = sub_1C2148220();
    a1[4] = sub_1C20DB1DC(&qword_1EA2C2D28, MEMORY[0x1E4F66330]);
    __swift_allocate_boxed_opaque_existential_1(a1);
    return sub_1C2148210();
  }
  return result;
}

void sub_1C20DA8C4()
{
}

uint64_t sub_1C20DA8F4()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + qword_1EBF0C328;

  return sub_1C1F2E220(v1);
}

uint64_t sub_1C20DA948()
{
  uint64_t v0 = sub_1C2148610();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C1F2E220(v0 + qword_1EBF0C328);

  return swift_deallocClassInstance();
}

uint64_t sub_1C20DA9BC()
{
  return type metadata accessor for MedicationsLogDataSource();
}

uint64_t sub_1C20DA9C4(uint64_t a1, void *a2)
{
  return sub_1C20DAFD8(a2);
}

uint64_t sub_1C20DA9EC()
{
  return sub_1C214ACC0();
}

uint64_t sub_1C20DAA5C@<X0>(uint64_t *a1@<X8>)
{
  return sub_1C20DA73C(a1);
}

uint64_t sub_1C20DAA80()
{
  return sub_1C2148B80();
}

uint64_t sub_1C20DAADC()
{
  return sub_1C20DB1DC(&qword_1EA2C6F20, (void (*)(uint64_t))type metadata accessor for MedicationsLogDataSource);
}

uint64_t sub_1C20DAB24(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v28 = a5;
  uint64_t v10 = sub_1C2147B20();
  unint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = (void *)(v6 + qword_1EBF0C320);
  *uint64_t v14 = 0;
  v14[1] = 0;
  *(void *)(v6 + qword_1EBF0C328 + 8) = 0;
  swift_unknownObjectWeakInit();
  *(void *)(v6 + qword_1EBF0C33sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = a1;
  *uint64_t v14 = a2;
  v14[1] = a3;
  unint64_t v15 = a1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 >> 62) {
    goto LABEL_14;
  }
  uint64_t v16 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_unknownObjectRetain();
  unint64_t v25 = v13;
  unint64_t v26 = v11;
  if (v16)
  {
    while (1)
    {
      char v31 = (char *)MEMORY[0x1E4FBC860];
      uint64_t result = sub_1C1F7072C(0, v16 & ~(v16 >> 63), 0);
      if (v16 < 0) {
        break;
      }
      v24[0] = v10;
      v24[1] = v6;
      uint64_t v13 = v31;
      unint64_t v27 = v15 & 0xC000000000000001;
      uint64_t v10 = type metadata accessor for MedicationDoseLogMedicationCell();
      uint64_t v18 = 0;
      uint64_t v6 = v15;
      while (v16 != v18)
      {
        if (v27)
        {
          uint64_t v19 = MEMORY[0x1C8753960](v18, v15);
        }
        else
        {
          uint64_t v19 = *(void *)(v15 + 8 * v18 + 32);
          swift_retain();
        }
        sub_1C20DB1DC(&qword_1EBF0C308, (void (*)(uint64_t))type metadata accessor for MedicationDoseLogMedicationCell);
        swift_unknownObjectRetain();
        swift_retain();
        v29[0] = sub_1C21481D0();
        v29[1] = v20;
        uint64_t v30 = 0;
        swift_unknownObjectWeakInit();
        v29[2] = v19;
        uint64_t v30 = v28;
        swift_unknownObjectWeakAssign();
        swift_release();
        swift_unknownObjectRelease();
        char v31 = v13;
        unint64_t v11 = *((void *)v13 + 2);
        unint64_t v21 = *((void *)v13 + 3);
        if (v11 >= v21 >> 1)
        {
          sub_1C1F7072C(v21 > 1, v11 + 1, 1);
          uint64_t v13 = v31;
        }
        ++v18;
        *((void *)v13 + 2) = v11 + 1;
        sub_1C1F7ABDC((uint64_t)v29, (uint64_t)&v13[40 * v11 + 32]);
        unint64_t v15 = v6;
        if (v16 == v18)
        {
          swift_bridgeObjectRelease();
          swift_unknownObjectRelease();
          uint64_t v10 = v24[0];
          goto LABEL_16;
        }
      }
      __break(1u);
LABEL_14:
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v16 = sub_1C214B930();
      swift_bridgeObjectRelease();
      unint64_t v25 = v13;
      unint64_t v26 = v11;
      if (!v16) {
        goto LABEL_15;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_15:
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    uint64_t v13 = (char *)MEMORY[0x1E4FBC860];
LABEL_16:
    sub_1C1F65B7C();
    sub_1C2148540();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1C214FCD0;
    sub_1C1F380A0((uint64_t)v13);
    swift_bridgeObjectRelease();
    uint64_t v22 = v25;
    sub_1C2147B10();
    sub_1C2147AD0();
    uint64_t v23 = *(void (**)(char *, uint64_t))(v26 + 8);
    v23(v22, v10);
    sub_1C2148520();
    v29[0] = 0;
    v29[1] = 0xE000000000000000;
    sub_1C214B7C0();
    swift_bridgeObjectRelease();
    strcpy((char *)v29, "MutableArray<");
    HIWORD(v29[1]) = -4864;
    sub_1C2147B10();
    sub_1C2147AD0();
    v23(v22, v10);
    sub_1C214A6C0();
    swift_bridgeObjectRelease();
    sub_1C214A6C0();
    return sub_1C2148590();
  }
  return result;
}

uint64_t sub_1C20DAFD8(void *a1)
{
  uint64_t v3 = sub_1C2148710();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](v3);
  uint64_t v7 = &v20[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = &v20[-v8];
  id v10 = objc_msgSend(a1, sel_traitCollection);
  id v11 = objc_msgSend(v10, sel_horizontalSizeClass);

  if (*(void *)(v1 + qword_1EBF0C320 + 8)) {
    sub_1C2148660();
  }
  else {
    sub_1C2148690();
  }
  if (v11 == (id)2) {
    double v12 = 64.0;
  }
  else {
    double v12 = 8.0;
  }
  uint64_t v13 = (void (*)(unsigned char *, void))sub_1C21486D0();
  *(double *)(v14 + 8) = v12;
  v13(v20, 0);
  unint64_t v15 = (void (*)(unsigned char *, void))sub_1C21486D0();
  *(double *)(v16 + 24) = v12;
  v15(v20, 0);
  sub_1C21486B0();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v4 + 16))(v7, v9, v3);
  uint64_t v17 = sub_1C2148700();
  uint64_t v18 = *(void (**)(unsigned char *, uint64_t))(v4 + 8);
  v18(v7, v3);
  v18(v9, v3);
  return v17;
}

uint64_t sub_1C20DB1DC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C20DB224(uint64_t a1, uint64_t a2)
{
  sub_1C20DB3B0(0xD000000000000015, 0x80000001C2162710, a2);
  if (qword_1EBF0CA00 != -1) {
    swift_once();
  }
  uint64_t v3 = (void *)qword_1EBF0CA18;
  sub_1C1FF8EAC();
  uint64_t v4 = swift_allocObject();
  uint64_t v5 = MEMORY[0x1E4FBB550];
  *(_OWORD *)(v4 + 16) = xmmword_1C214FCD0;
  uint64_t v6 = MEMORY[0x1E4FBB5C8];
  *(void *)(v4 + 56) = v5;
  *(void *)(v4 + 64) = v6;
  *(void *)(v4 + 32) = a1;
  id v7 = v3;
  swift_bridgeObjectRetain();
  uint64_t v8 = sub_1C2147730();
  if (*(void *)(v4 + 16))
  {
    uint64_t v8 = sub_1C214A5C0();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return v8;
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> sub_1C20DB3B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  switch(a3)
  {
    case 1:
    case 2:
    case 3:
    case 4:
      swift_bridgeObjectRetain();
      sub_1C214A6C0();
      swift_bridgeObjectRelease();
      return;
    default:
      sub_1C214B910();
      __break(1u);
      JUMPOUT(0x1C20DB4CCLL);
  }
}

unint64_t sub_1C20DB4DC()
{
  uint64_t v1 = sub_1C2147AC0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)v0;
  uint64_t v5 = *(void **)(v0 + 8);
  char v7 = *(unsigned char *)(v0 + 16);
  uint64_t v13 = 0;
  unint64_t v14 = 0xE000000000000000;
  sub_1C214B7C0();
  swift_bridgeObjectRelease();
  unint64_t v16 = 0xD000000000000014;
  unint64_t v17 = 0x80000001C216AA20;
  id v8 = objc_msgSend(v5, sel_semanticIdentifier);
  id v9 = objc_msgSend(v8, sel_stringValue);

  sub_1C214A5F0();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  sub_1C214A6C0();
  uint64_t v13 = v6;
  unint64_t v14 = (unint64_t)v5;
  char v15 = v7;
  LoggableDose.scheduleDate.getter((uint64_t)v4);
  uint64_t v10 = sub_1C2147AA0();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  uint64_t v13 = v10;
  sub_1C214BA40();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  return v16;
}

uint64_t sub_1C20DB6B4()
{
  uint64_t v1 = sub_1C2147AC0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(void **)v0;
  uint64_t v6 = *(void **)(v0 + 8);
  char v7 = *(unsigned char *)(v0 + 16);
  id v8 = v6;
  sub_1C214B230();

  id v11 = v8;
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8C0);
  sub_1C2149490();
  sub_1C214A690();
  swift_bridgeObjectRelease();
  id v11 = v5;
  uint64_t v12 = v6;
  char v13 = v7;
  LoggableDose.scheduleDate.getter((uint64_t)v4);
  sub_1C20DEB08(&qword_1EA2C50D0, MEMORY[0x1E4F27928]);
  sub_1C214A560();
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

uint64_t sub_1C20DB848()
{
  uint64_t v1 = sub_1C2147AC0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  uint64_t v5 = (void *)v0[1];
  char v7 = *((unsigned char *)v0 + 16);
  sub_1C214BB30();
  id v8 = v5;
  sub_1C214B230();

  v10[0] = v8;
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8C0);
  sub_1C2149490();
  sub_1C214A690();
  swift_bridgeObjectRelease();
  v10[0] = v6;
  v10[1] = v5;
  char v11 = v7;
  LoggableDose.scheduleDate.getter((uint64_t)v4);
  sub_1C20DEB08(&qword_1EA2C50D0, MEMORY[0x1E4F27928]);
  sub_1C214A560();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return sub_1C214BB80();
}

uint64_t sub_1C20DB9F4()
{
  uint64_t v1 = sub_1C2147AC0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  uint64_t v5 = (void *)v0[1];
  char v7 = *((unsigned char *)v0 + 16);
  sub_1C214BB30();
  id v8 = v5;
  sub_1C214B230();

  v10[0] = v8;
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8C0);
  sub_1C2149490();
  sub_1C214A690();
  swift_bridgeObjectRelease();
  v10[0] = v6;
  v10[1] = v5;
  char v11 = v7;
  LoggableDose.scheduleDate.getter((uint64_t)v4);
  sub_1C20DEB08(&qword_1EA2C50D0, MEMORY[0x1E4F27928]);
  sub_1C214A560();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return sub_1C214BB80();
}

id sub_1C20DBBA4()
{
  uint64_t v1 = OBJC_IVAR____TtC19HealthMedicationsUI23ScheduledDetailItemCell____lazy_storage___medicationView;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI23ScheduledDetailItemCell____lazy_storage___medicationView);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI23ScheduledDetailItemCell____lazy_storage___medicationView);
  }
  else
  {
    id v4 = objc_msgSend(objc_allocWithZone((Class)sub_1C2148EF0()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + vsub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, 0, 1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_1C20DBC3C()
{
  uint64_t v1 = OBJC_IVAR____TtC19HealthMedicationsUI23ScheduledDetailItemCell____lazy_storage___timeLabel;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI23ScheduledDetailItemCell____lazy_storage___timeLabel);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI23ScheduledDetailItemCell____lazy_storage___timeLabel);
  }
  else
  {
    uint64_t v4 = v0;
    id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
    sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8E0);
    id v6 = (void *)sub_1C214B0A0();
    objc_msgSend(v5, sel_setFont_, v6);

    id v7 = objc_msgSend(self, sel_labelColor);
    objc_msgSend(v5, sel_setTextColor_, v7);

    objc_msgSend(v5, sel_setNumberOfLines_, 0);
    objc_msgSend(v5, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    id v8 = *(void **)(v4 + v1);
    *(void *)(v4 + vsub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, 0, 1) = v5;
    id v3 = v5;

    uint64_t v2 = 0;
  }
  id v9 = v2;
  return v3;
}

uint64_t sub_1C20DBD7C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = (void *)sub_1C21497F0();
  uint64_t v91 = (uint64_t (**)(void, void))*(v4 - 1);
  uint64_t v92 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v93 = (char *)v77 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C20DE6F4(0, &qword_1EBF0C610, MEMORY[0x1E4FB0E38], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v87 = (char *)v77 - v8;
  uint64_t v86 = sub_1C2149910();
  uint64_t v9 = *(void *)(v86 - 8);
  MEMORY[0x1F4188790](v86);
  uint64_t v85 = (char *)v77 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v90 = sub_1C21498C0();
  uint64_t v88 = *(void *)(v90 - 8);
  MEMORY[0x1F4188790](v90);
  uint64_t v84 = (char *)v77 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C20DE6F4(0, (unint64_t *)&qword_1EBF0B690, MEMORY[0x1E4F66C80], v6);
  MEMORY[0x1F4188790](v12 - 8);
  unint64_t v14 = (char *)v77 - v13;
  uint64_t v15 = sub_1C21478D0();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v18 = (char *)v77 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = (void *)sub_1C21478F0();
  uint64_t v20 = *(v19 - 1);
  MEMORY[0x1F4188790](v19);
  uint64_t v83 = (char *)v77 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_1C2147AC0();
  uint64_t v82 = *(void *)(v22 - 8);
  MEMORY[0x1F4188790](v22);
  uint64_t v81 = (uint64_t)v77 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C20DE758(a1, (uint64_t)v99, (unint64_t *)&qword_1EBF0C300, (uint64_t (*)(uint64_t))sub_1C1F1CB5C);
  uint64_t v89 = v9;
  if (v100)
  {
    sub_1C1F1CB5C();
    if (swift_dynamicCast())
    {
      uint64_t v24 = v94;
      unint64_t v25 = v95;
      uint64_t v79 = v16;
      uint64_t v26 = v15;
      char v27 = v96;
      uint64_t v78 = v97;
      uint64_t v80 = v22;
      sub_1C1F3AFEC(v94, v95, v96);
      sub_1C1F3B040(v24, v25, v27);
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t v28 = v20;
      uint64_t v29 = v19;
      id v30 = v25;
      sub_1C1F3B040(v24, v25, v27);
      id v31 = objc_msgSend(v30, sel_semanticIdentifier);

      id v32 = objc_msgSend(v31, sel_stringValue);
      sub_1C214A5F0();

      swift_retain();
      uint64_t v15 = v26;
      uint64_t v16 = v79;
      sub_1C2149110();
      uint64_t v19 = v29;
      uint64_t v20 = v28;
      uint64_t v22 = v80;
      swift_bridgeObjectRelease();
      swift_release();
    }
  }
  else
  {
    sub_1C20DE7D8((uint64_t)v99, (unint64_t *)&qword_1EBF0C300, (uint64_t (*)(uint64_t))sub_1C1F1CB5C);
  }
  uint64_t v33 = (uint64_t)v2 + OBJC_IVAR____TtC19HealthMedicationsUI23ScheduledDetailItemCell_item;
  swift_beginAccess();
  sub_1C20DE758(v33, (uint64_t)v99, (unint64_t *)&qword_1EBF0C300, (uint64_t (*)(uint64_t))sub_1C1F1CB5C);
  if (!v100)
  {
    sub_1C20DE7D8((uint64_t)v99, (unint64_t *)&qword_1EBF0C300, (uint64_t (*)(uint64_t))sub_1C1F1CB5C);
LABEL_11:
    unint64_t v69 = v93;
    sub_1C21497A0();
    id v70 = v2;
    uint64_t v71 = sub_1C21497E0();
    os_log_type_t v72 = sub_1C214ABD0();
    if (os_log_type_enabled(v71, v72))
    {
      uint64_t v73 = (uint8_t *)swift_slowAlloc();
      uint64_t v74 = swift_slowAlloc();
      v99[0] = v74;
      *(_DWORD *)uint64_t v73 = 136315138;
      sub_1C20DE758(v33, (uint64_t)&v94, (unint64_t *)&qword_1EBF0C300, (uint64_t (*)(uint64_t))sub_1C1F1CB5C);
      sub_1C20DE6F4(0, (unint64_t *)&qword_1EBF0C300, (uint64_t (*)(uint64_t))sub_1C1F1CB5C, MEMORY[0x1E4FBB718]);
      uint64_t v75 = sub_1C214A630();
      uint64_t v94 = (void *)sub_1C1F6FD54(v75, v76, v99);
      sub_1C214B530();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C1F0B000, v71, v72, "Incorrect view model for ScheduledDetailItem: %s", v73, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C8754730](v74, -1, -1);
      MEMORY[0x1C8754730](v73, -1, -1);

      return ((uint64_t (**)(char *, void *))v91)[1](v93, v92);
    }
    else
    {

      return ((uint64_t (**)(char *, void *))v91)[1](v69, v92);
    }
  }
  sub_1C1F1CB5C();
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_11;
  }
  v77[0] = v15;
  uint64_t v91 = (uint64_t (**)(void, void))v19;
  v77[1] = v14;
  uint64_t v34 = v94;
  uint64_t v35 = v95;
  uint64_t v80 = v22;
  int v36 = v96;
  uint64_t v93 = v97;
  uint64_t v78 = v98;
  id v37 = sub_1C20DBC3C();
  uint64_t v92 = v34;
  uint64_t v94 = v34;
  id v95 = v35;
  LODWORD(v79) = v36;
  unsigned __int8 v96 = v36;
  uint64_t v38 = v81;
  LoggableDose.scheduleDate.getter(v81);
  unint64_t v39 = v83;
  sub_1C21478E0();
  sub_1C21478C0();
  sub_1C2147A80();
  (*(void (**)(char *, void))(v16 + 8))(v18, v77[0]);
  (*(void (**)(char *, uint64_t (**)(void, void)))(v20 + 8))(v39, v91);
  (*(void (**)(uint64_t, uint64_t))(v82 + 8))(v38, v80);
  uint64_t v40 = (void *)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  objc_msgSend(v37, sel_setText_, v40);

  id v41 = sub_1C20DBBA4();
  uint64_t v91 = (uint64_t (**)(void, void))v35;
  id v42 = v35;
  uint64_t v43 = v85;
  uint64_t v44 = v84;
  id v45 = v42;
  _sSo29HKMedicationUserDomainConceptC19HealthMedicationsUIE7medmoji0eF10Experience29MedicationVisualizationConfigVSgvg_0();

  sub_1C2148ED0();
  swift_retain();
  id v46 = objc_msgSend(v45, sel_semanticIdentifier);
  id v47 = objc_msgSend(v46, sel_stringValue);

  sub_1C214A5F0();
  sub_1C2149100();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1C20DE6F4(0, (unint64_t *)&unk_1EBF0C990, MEMORY[0x1E4FB0E68], MEMORY[0x1E4FBBE00]);
  uint64_t v48 = *(void *)(sub_1C2149930() - 8);
  unint64_t v49 = (*(unsigned __int8 *)(v48 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80);
  uint64_t v50 = swift_allocObject();
  *(_OWORD *)(v50 + 16) = xmmword_1C214FCD0;
  uint64_t v83 = (char *)(v50 + v49);
  sub_1C1F12718(0, &qword_1EA2C3198);
  _sSo7UIImageC19HealthMedicationsUIE26collectionViewCellPlusSignABvgZ_0();
  unint64_t v51 = (void *)sub_1C214B250();
  sub_1C1F12718(0, &qword_1EBF0C928);
  uint64_t v52 = v88;
  id v53 = v51;
  uint64_t v54 = (void *)sub_1C214B410();
  objc_msgSend(v54, sel_setUserInteractionEnabled_, 0);
  sub_1C1FBE24C();
  uint64_t v56 = (uint64_t (**)())&v43[*(int *)(v55 + 48)];
  uint64_t v57 = *MEMORY[0x1E4FB0E18];
  uint64_t v58 = sub_1C2149860();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v58 - 8) + 104))(v43, v57, v58);
  void *v56 = sub_1C1F52D30;
  v56[1] = 0;
  (*(void (**)(char *, void, uint64_t))(v89 + 104))(v43, *MEMORY[0x1E4FB0E60], v86);
  uint64_t v59 = sub_1C2149870();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v59 - 8) + 56))(v87, 1, 1, v59);
  id v60 = v54;
  sub_1C21498B0();

  sub_1C2149810();
  (*(void (**)(char *, uint64_t))(v52 + 8))(v44, v90);
  sub_1C214AEC0();
  uint64_t v94 = (void *)sub_1C214A5F0();
  id v95 = v61;
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  uint64_t v63 = v94;
  uint64_t v62 = v95;
  id v64 = sub_1C20DBC3C();
  id v65 = objc_msgSend(v64, sel_text);

  if (!v65)
  {
    id v66 = sub_1C20DBC3C();
    id v65 = objc_msgSend(v66, sel_description);
  }
  sub_1C214A5F0();

  uint64_t v94 = v63;
  id v95 = v62;
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v67 = (void *)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setAccessibilityIdentifier_, v67);

  sub_1C1F3B040(v92, v91, v79);
  swift_bridgeObjectRelease();
  return swift_release();
}

void (*sub_1C20DCB70(void *a1))(uint64_t *a1, char a2)
{
  id v3 = malloc(0xB8uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC19HealthMedicationsUI23ScheduledDetailItemCell_item;
  v3[21] = v1;
  v3[22] = v4;
  uint64_t v5 = v1 + v4;
  swift_beginAccess();
  sub_1C20DE758(v5, (uint64_t)v3, (unint64_t *)&qword_1EBF0C300, (uint64_t (*)(uint64_t))sub_1C1F1CB5C);
  return sub_1C20DCC10;
}

void sub_1C20DCC10(uint64_t *a1, char a2)
{
  uint64_t v2 = (void *)*a1;
  uint64_t v3 = *a1 + 40;
  uint64_t v4 = *a1 + 80;
  if (a2)
  {
    uint64_t v5 = v2[21] + v2[22];
    sub_1C20DE758(*a1, v3, (unint64_t *)&qword_1EBF0C300, (uint64_t (*)(uint64_t))sub_1C1F1CB5C);
    sub_1C20DE758(v5, v4, (unint64_t *)&qword_1EBF0C300, (uint64_t (*)(uint64_t))sub_1C1F1CB5C);
    swift_beginAccess();
    sub_1C1F32DDC(v3, v5);
    swift_endAccess();
    sub_1C20DBD7C(v4);
    sub_1C20DE7D8(v3, (unint64_t *)&qword_1EBF0C300, (uint64_t (*)(uint64_t))sub_1C1F1CB5C);
    sub_1C20DE7D8(v4, (unint64_t *)&qword_1EBF0C300, (uint64_t (*)(uint64_t))sub_1C1F1CB5C);
    uint64_t v6 = (uint64_t)v2;
  }
  else
  {
    uint64_t v7 = v2[21] + v2[22];
    sub_1C20DE758(v7, v3, (unint64_t *)&qword_1EBF0C300, (uint64_t (*)(uint64_t))sub_1C1F1CB5C);
    swift_beginAccess();
    sub_1C1F32DDC((uint64_t)v2, v7);
    swift_endAccess();
    sub_1C20DBD7C(v3);
    sub_1C20DE7D8((uint64_t)v2, (unint64_t *)&qword_1EBF0C300, (uint64_t (*)(uint64_t))sub_1C1F1CB5C);
    uint64_t v6 = v3;
  }
  sub_1C20DE7D8(v6, (unint64_t *)&qword_1EBF0C300, (uint64_t (*)(uint64_t))sub_1C1F1CB5C);

  free(v2);
}

id sub_1C20DCDA0(double a1, double a2, double a3, double a4)
{
  uint64_t v83 = (void *)sub_1C2149BE0();
  uint64_t v9 = *(v83 - 1);
  MEMORY[0x1F4188790](v83);
  uint64_t v11 = (char *)&v80 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C20DE6F4(0, &qword_1EBF0C620, MEMORY[0x1E4FB0F28], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v12 - 8);
  unint64_t v14 = (char *)&v80 - v13;
  uint64_t v15 = sub_1C21499D0();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v18 = (char *)&v80 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI23ScheduledDetailItemCell____lazy_storage___medicationView] = 0;
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI23ScheduledDetailItemCell____lazy_storage___timeLabel] = 0;
  uint64_t v19 = OBJC_IVAR____TtC19HealthMedicationsUI23ScheduledDetailItemCell_detailProvider;
  sub_1C2149130();
  uint64_t v20 = v4;
  *(void *)&v4[v19] = sub_1C2149120();
  uint64_t v21 = &v20[OBJC_IVAR____TtC19HealthMedicationsUI23ScheduledDetailItemCell_item];
  *((void *)v21 + 4) = 0;
  *(_OWORD *)uint64_t v21 = 0u;
  *((_OWORD *)v21 + sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, 0, 1) = 0u;

  uint64_t v22 = (objc_class *)type metadata accessor for ScheduledDetailItemCell();
  v86.receiver = v20;
  v86.super_class = v22;
  id v23 = objc_msgSendSuper2(&v86, sel_initWithFrame_, a1, a2, a3, a4);
  uint64_t v84 = v18;
  sub_1C21499A0();
  id v24 = objc_msgSend(self, sel_tertiarySystemBackgroundColor);
  sub_1C2149990();
  uint64_t v81 = v15;
  uint64_t v82 = v16;
  (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v14, v18, v15);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v14, 0, 1, v15);
  id v25 = v23;
  MEMORY[0x1C8752FF0](v14);

  id v26 = objc_msgSend(v25, sel_contentView);
  id v27 = sub_1C20DBBA4();
  objc_msgSend(v26, sel_addSubview_, v27);

  id v28 = objc_msgSend(v25, sel_contentView);
  id v29 = sub_1C20DBC3C();
  objc_msgSend(v28, sel_addSubview_, v29);

  sub_1C2149B70();
  sub_1C2149B20();
  double v31 = v30;
  double v33 = v32;
  double v35 = v34;
  (*(void (**)(char *, void *))(v9 + 8))(v11, v83);
  uint64_t v83 = self;
  sub_1C1F0ED28();
  uint64_t v36 = swift_allocObject();
  *(_OWORD *)(v36 + 16) = xmmword_1C21594A0;
  id v37 = sub_1C20DBBA4();
  id v38 = objc_msgSend(v37, sel_leadingAnchor);

  id v39 = objc_msgSend(v25, sel_contentView);
  id v40 = objc_msgSend(v39, (SEL)&selRef_setTranslatesAutoresizingMaskIntoConstraints_ + 2);

  id v41 = objc_msgSend(v38, sel_constraintEqualToAnchor_constant_, v40, v33);
  *(void *)(v36 + 32) = v41;
  id v42 = sub_1C20DBBA4();
  id v43 = objc_msgSend(v42, sel_centerYAnchor);

  id v44 = objc_msgSend(v25, sel_contentView);
  id v45 = objc_msgSend(v44, sel_centerYAnchor);

  id v46 = objc_msgSend(v43, sel_constraintEqualToAnchor_, v45);
  *(void *)(v36 + 4sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = v46;
  id v47 = sub_1C20DBBA4();
  id v48 = objc_msgSend(v47, sel_topAnchor);

  id v49 = objc_msgSend(v25, sel_contentView);
  id v50 = objc_msgSend(v49, sel_topAnchor);

  id v51 = objc_msgSend(v48, sel_constraintEqualToAnchor_constant_, v50, v31);
  *(void *)(v36 + 48) = v51;
  id v52 = sub_1C20DBBA4();
  id v53 = objc_msgSend(v52, sel_bottomAnchor);

  id v54 = objc_msgSend(v25, sel_contentView);
  id v55 = objc_msgSend(v54, sel_bottomAnchor);

  id v56 = objc_msgSend(v53, sel_constraintEqualToAnchor_constant_, v55, -v35);
  *(void *)(v36 + 56) = v56;
  id v57 = sub_1C20DBBA4();
  id v58 = objc_msgSend(v57, sel_widthAnchor);

  id v59 = objc_msgSend(v58, sel_constraintEqualToConstant_, 36.0);
  *(void *)(v36 + 64) = v59;
  id v60 = sub_1C20DBBA4();
  id v61 = objc_msgSend(v60, sel_heightAnchor);

  id v62 = objc_msgSend(v61, sel_constraintEqualToConstant_, 36.0);
  *(void *)(v36 + 72) = v62;
  id v63 = sub_1C20DBC3C();
  id v64 = objc_msgSend(v63, sel_leadingAnchor);

  id v65 = sub_1C20DBBA4();
  id v66 = objc_msgSend(v65, sel_trailingAnchor);

  id v67 = objc_msgSend(v64, sel_constraintEqualToAnchor_constant_, v66, 8.0);
  *(void *)(v36 + 8sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = v67;
  id v68 = sub_1C20DBC3C();
  id v69 = objc_msgSend(v68, sel_centerYAnchor);

  id v70 = objc_msgSend(v25, sel_contentView);
  id v71 = objc_msgSend(v70, sel_centerYAnchor);

  id v72 = objc_msgSend(v69, sel_constraintEqualToAnchor_, v71);
  *(void *)(v36 + 88) = v72;
  id v73 = sub_1C20DBC3C();
  id v74 = objc_msgSend(v73, sel_trailingAnchor);

  id v75 = objc_msgSend(v25, sel_contentView);
  id v76 = objc_msgSend(v75, sel_trailingAnchor);

  id v77 = objc_msgSend(v74, sel_constraintEqualToAnchor_, v76);
  *(void *)(v36 + 96) = v77;
  uint64_t v85 = v36;
  sub_1C214A7A0();
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C810);
  uint64_t v78 = (void *)sub_1C214A770();
  swift_bridgeObjectRelease();
  objc_msgSend(v83, sel_activateConstraints_, v78);

  (*(void (**)(char *, uint64_t))(v82 + 8))(v84, v81);
  return v25;
}

uint64_t sub_1C20DD638()
{
  uint64_t v1 = v0;
  sub_1C20DE6F4(0, &qword_1EBF0C620, MEMORY[0x1E4FB0F28], MEMORY[0x1E4FBB718]);
  uint64_t v3 = MEMORY[0x1F4188790](v2 - 8);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x1F4188790](v3);
  uint64_t v8 = (char *)&v20 - v7;
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v20 - v9;
  uint64_t v11 = (void *)sub_1C2149950();
  uint64_t v12 = (objc_class *)type metadata accessor for ScheduledDetailItemCell();
  v20.receiver = v1;
  v20.super_class = v12;
  objc_msgSendSuper2(&v20, sel__bridgedUpdateConfigurationUsingState_, v11);

  if (objc_msgSend(v1, sel_isHighlighted))
  {
    MEMORY[0x1C8752FE0]();
    uint64_t v13 = sub_1C21499D0();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48))(v10, 1, v13))
    {
      unint64_t v14 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FB0F28];
      sub_1C20DE758((uint64_t)v10, (uint64_t)v8, &qword_1EBF0C620, MEMORY[0x1E4FB0F28]);
      MEMORY[0x1C8752FF0](v8);
      uint64_t v15 = (uint64_t)v10;
      return sub_1C20DE7D8(v15, &qword_1EBF0C620, v14);
    }
    sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C900);
    sub_1C214B170();
    sub_1C2149990();
    uint64_t v18 = v10;
  }
  else
  {
    MEMORY[0x1C8752FE0]();
    uint64_t v16 = sub_1C21499D0();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48))(v5, 1, v16))
    {
      unint64_t v14 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FB0F28];
      sub_1C20DE758((uint64_t)v5, (uint64_t)v8, &qword_1EBF0C620, MEMORY[0x1E4FB0F28]);
      MEMORY[0x1C8752FF0](v8);
      uint64_t v15 = (uint64_t)v5;
      return sub_1C20DE7D8(v15, &qword_1EBF0C620, v14);
    }
    id v19 = objc_msgSend(self, sel_tertiarySystemBackgroundColor);
    sub_1C2149990();
    uint64_t v18 = v5;
  }
  return MEMORY[0x1C8752FF0](v18);
}

id sub_1C20DDAA0()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ScheduledDetailItemCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for ScheduledDetailItemCell()
{
  return self;
}

uint64_t sub_1C20DDB74@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI23ScheduledDetailItemCell_item;
  swift_beginAccess();
  return sub_1C20DE758(v3, a1, (unint64_t *)&qword_1EBF0C300, (uint64_t (*)(uint64_t))sub_1C1F1CB5C);
}

uint64_t sub_1C20DDBE4(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI23ScheduledDetailItemCell_item;
  swift_beginAccess();
  sub_1C20DE758(v3, (uint64_t)v5, (unint64_t *)&qword_1EBF0C300, (uint64_t (*)(uint64_t))sub_1C1F1CB5C);
  swift_beginAccess();
  sub_1C1F32DDC(a1, v3);
  swift_endAccess();
  sub_1C20DBD7C((uint64_t)v5);
  sub_1C20DE7D8(a1, (unint64_t *)&qword_1EBF0C300, (uint64_t (*)(uint64_t))sub_1C1F1CB5C);
  return sub_1C20DE7D8((uint64_t)v5, (unint64_t *)&qword_1EBF0C300, (uint64_t (*)(uint64_t))sub_1C1F1CB5C);
}

void (*sub_1C20DDCBC(void *a1))(void *a1)
{
  objc_super v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1C20DCB70(v2);
  return sub_1C1F37460;
}

uint64_t sub_1C20DDD14(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v38 = a2;
  uint64_t v7 = sub_1C214A3F0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1C214A420();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  unint64_t v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = v4 + OBJC_IVAR____TtC19HealthMedicationsUI23ScheduledDetailItemCell_item;
  swift_beginAccess();
  sub_1C20DE758(v15, (uint64_t)v45, (unint64_t *)&qword_1EBF0C300, (uint64_t (*)(uint64_t))sub_1C1F1CB5C);
  if (!v46) {
    return sub_1C20DE7D8((uint64_t)v45, (unint64_t *)&qword_1EBF0C300, (uint64_t (*)(uint64_t))sub_1C1F1CB5C);
  }
  sub_1C1F1CB5C();
  uint64_t result = swift_dynamicCast();
  if ((result & 1) == 0) {
    return result;
  }
  double v34 = a1;
  uint64_t v35 = v12;
  uint64_t v36 = v11;
  uint64_t v37 = v8;
  uint64_t v17 = aBlock;
  uint64_t v18 = (void *)v40;
  char v19 = (char)v41;
  sub_1C1F3AFEC(aBlock, (void *)v40, (char)v41);
  sub_1C1F3B040(v17, v18, v19);
  swift_bridgeObjectRelease();
  swift_release();
  id v20 = v18;
  sub_1C1F3B040(v17, v18, v19);
  id v21 = objc_msgSend(v20, sel_semanticIdentifier);
  id v22 = objc_msgSend(v21, sel_stringValue);

  uint64_t v23 = sub_1C214A5F0();
  uint64_t v25 = v24;

  if (v23 == v38 && v25 == a3)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v26 = sub_1C214BA80();
    uint64_t result = swift_bridgeObjectRelease();
    if ((v26 & 1) == 0) {
      return result;
    }
  }
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0CB10);
  id v27 = (void *)sub_1C214AD80();
  id v28 = sub_1C20DBBA4();
  uint64_t v29 = swift_allocObject();
  double v30 = v34;
  *(void *)(v29 + 16) = v28;
  *(void *)(v29 + 24) = v30;
  id v43 = sub_1C20DE6EC;
  uint64_t v44 = v29;
  uint64_t aBlock = (void *)MEMORY[0x1E4F143A8];
  uint64_t v40 = 1107296256;
  id v41 = sub_1C1F0E42C;
  id v42 = &block_descriptor_29;
  double v31 = _Block_copy(&aBlock);
  id v32 = v30;
  swift_release();
  sub_1C214A410();
  uint64_t aBlock = (void *)MEMORY[0x1E4FBC860];
  sub_1C20DEB08((unint64_t *)&qword_1EBF0CAE0, MEMORY[0x1E4FBCB00]);
  sub_1C20DE6F4(0, (unint64_t *)&qword_1EBF0CAF0, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
  sub_1C1F12754();
  sub_1C214B640();
  MEMORY[0x1C8752F10](0, v14, v10, v31);
  _Block_release(v31);

  (*(void (**)(char *, uint64_t))(v37 + 8))(v10, v7);
  return (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v14, v36);
}

uint64_t sub_1C20DE1B0()
{
  sub_1C20DE6F4(0, (unint64_t *)&qword_1EBF0B690, MEMORY[0x1E4F66C80], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v0 - 8);
  _sSo29HKMedicationUserDomainConceptC19HealthMedicationsUIE7medmoji0eF10Experience29MedicationVisualizationConfigVSgvg_0();
  return sub_1C2148ED0();
}

uint64_t sub_1C20DE2DC(uint64_t a1, uint64_t a2)
{
  return sub_1C20DE57C(a2);
}

uint64_t sub_1C20DE304(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C2147AC0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v26 - v9;
  uint64_t v11 = *(void **)(a1 + 8);
  double v31 = *(void **)a1;
  int v30 = *(unsigned __int8 *)(a1 + 16);
  uint64_t v12 = *(void **)a2;
  uint64_t v13 = *(void **)(a2 + 8);
  int v32 = *(unsigned __int8 *)(a2 + 16);
  sub_1C1F12718(0, (unint64_t *)&qword_1EA2C4AA0);
  id v14 = v11;
  id v15 = v13;
  LOBYTE(a2) = sub_1C214B220();

  if (a2)
  {
    id v27 = v12;
    uint64_t v28 = v5;
    uint64_t v29 = v4;
    id v33 = v14;
    sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8C0);
    uint64_t v16 = sub_1C2149490();
    uint64_t v18 = v17;
    id v33 = v15;
    if (v16 == sub_1C2149490() && v18 == v19)
    {
      swift_bridgeObjectRelease_n();
LABEL_7:
      id v33 = v31;
      double v34 = v11;
      char v35 = v30;
      LoggableDose.scheduleDate.getter((uint64_t)v10);
      id v33 = v27;
      double v34 = v13;
      char v35 = v32;
      LoggableDose.scheduleDate.getter((uint64_t)v8);
      char v20 = sub_1C2147A50();
      id v22 = *(void (**)(char *, uint64_t))(v28 + 8);
      uint64_t v23 = v8;
      uint64_t v24 = v29;
      v22(v23, v29);
      v22(v10, v24);
      return v20 & 1;
    }
    char v21 = sub_1C214BA80();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v20 = 0;
    if (v21) {
      goto LABEL_7;
    }
  }
  else
  {
    char v20 = 0;
  }
  return v20 & 1;
}

uint64_t sub_1C20DE57C(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI23ScheduledDetailItemCell_item;
  swift_beginAccess();
  sub_1C20DE758(v3, (uint64_t)v9, (unint64_t *)&qword_1EBF0C300, (uint64_t (*)(uint64_t))sub_1C1F1CB5C);
  if (!v10) {
    return sub_1C20DE7D8((uint64_t)v9, (unint64_t *)&qword_1EBF0C300, (uint64_t (*)(uint64_t))sub_1C1F1CB5C);
  }
  sub_1C1F1CB5C();
  uint64_t result = swift_dynamicCast();
  if (result)
  {
    swift_retain();
    sub_1C1F3B040(v5, v6, v7);
    swift_bridgeObjectRelease();
    swift_release();
    v8(a1);
    return swift_release();
  }
  return result;
}

uint64_t sub_1C20DE6AC()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C20DE6EC()
{
  return sub_1C20DE1B0();
}

void sub_1C20DE6F4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C20DE758(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_1C20DE6F4(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_1C20DE7D8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1C20DE6F4(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t destroy for ScheduledDetailItem(uint64_t a1)
{
  sub_1C1F3B040(*(void **)a1, *(void **)(a1 + 8), *(unsigned char *)(a1 + 16));
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ScheduledDetailItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void **)(a2 + 8);
  char v6 = *(unsigned char *)(a2 + 16);
  sub_1C1F3AFEC(*(void **)a2, v5, v6);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = v6;
  uint64_t v7 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v7;
  uint64_t v8 = *(void *)(a2 + 40);
  uint64_t v9 = *(void *)(a2 + 48);
  *(void *)(a1 + 4sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = v8;
  *(void *)(a1 + 48) = v9;
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ScheduledDetailItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void **)(a2 + 8);
  char v6 = *(unsigned char *)(a2 + 16);
  sub_1C1F3AFEC(*(void **)a2, v5, v6);
  uint64_t v7 = *(void **)a1;
  uint64_t v8 = *(void **)(a1 + 8);
  char v9 = *(unsigned char *)(a1 + 16);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = v6;
  sub_1C1F3B040(v7, v8, v9);
  uint64_t v10 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v10;
  swift_retain();
  swift_release();
  *(void *)(a1 + 4sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ScheduledDetailItem(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 16);
  uint64_t v5 = *(void **)a1;
  char v6 = *(void **)(a1 + 8);
  char v7 = *(unsigned char *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v4;
  sub_1C1F3B040(v5, v6, v7);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  uint64_t v8 = *(void *)(a2 + 48);
  *(void *)(a1 + 4sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v8;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ScheduledDetailItem(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ScheduledDetailItem(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 4sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ScheduledDetailItem()
{
  return &type metadata for ScheduledDetailItem;
}

unint64_t sub_1C20DEAB4()
{
  unint64_t result = qword_1EA2C6F48;
  if (!qword_1EA2C6F48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C6F48);
  }
  return result;
}

uint64_t sub_1C20DEB08(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void UITextViewWithPlaceholder.text.setter(uint64_t a1, uint64_t a2)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  if (a2)
  {
    uint64_t v5 = (void *)sub_1C214A5B0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v5 = 0;
  }
  v9.receiver = v2;
  v9.super_class = ObjectType;
  objc_msgSendSuper2(&v9, sel_setText_, v5);

  v8.receiver = v2;
  v8.super_class = ObjectType;
  id v6 = objc_msgSendSuper2(&v8, sel_text);
  if (v6)
  {
    sub_1C214A5F0();

    id v6 = (id)sub_1C214A5B0();
    swift_bridgeObjectRelease();
  }
  v7.receiver = v2;
  v7.super_class = ObjectType;
  objc_msgSendSuper2(&v7, sel_setText_, v6);

  sub_1C20DF1D4();
}

void UITextViewWithPlaceholder.placeholder.setter(uint64_t a1, uint64_t a2)
{
  id v3 = sub_1C20DEE50();
  if (a2)
  {
    id v4 = (id)sub_1C214A5B0();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v4 = 0;
  }
  objc_msgSend(v3, sel_setText_, v4);
}

uint64_t UITextViewWithPlaceholder.placeholder.getter()
{
  id v0 = sub_1C20DEE50();
  id v1 = objc_msgSend(v0, sel_text);

  if (!v1) {
    return 0;
  }
  uint64_t v2 = sub_1C214A5F0();

  return v2;
}

void sub_1C20DED44(uint64_t *a1@<X8>)
{
  id v2 = sub_1C20DEE50();
  id v3 = objc_msgSend(v2, sel_text);

  if (v3)
  {
    uint64_t v4 = sub_1C214A5F0();
    uint64_t v6 = v5;
  }
  else
  {
    uint64_t v4 = 0;
    uint64_t v6 = 0;
  }
  *a1 = v4;
  a1[1] = v6;
}

void sub_1C20DEDBC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  swift_bridgeObjectRetain();
  id v2 = sub_1C20DEE50();
  if (v1)
  {
    id v3 = (id)sub_1C214A5B0();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v3 = 0;
  }
  objc_msgSend(v2, sel_setText_, v3);
}

id sub_1C20DEE50()
{
  uint64_t v1 = OBJC_IVAR____TtC19HealthMedicationsUI25UITextViewWithPlaceholder____lazy_storage___placeholderLabel;
  id v2 = *(void **)(v0
                + OBJC_IVAR____TtC19HealthMedicationsUI25UITextViewWithPlaceholder____lazy_storage___placeholderLabel);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI25UITextViewWithPlaceholder____lazy_storage___placeholderLabel);
  }
  else
  {
    id v4 = sub_1C20DF524();
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + vsub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, 0, 1) = v4;
    id v3 = v4;

    id v2 = 0;
  }
  id v6 = v2;
  return v3;
}

void (*UITextViewWithPlaceholder.placeholder.modify(uint64_t *a1))(uint64_t a1, char a2)
{
  a1[2] = v1;
  id v3 = sub_1C20DEE50();
  id v4 = objc_msgSend(v3, sel_text);

  if (v4)
  {
    uint64_t v5 = sub_1C214A5F0();
    uint64_t v7 = v6;
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v7 = 0;
  }
  *a1 = v5;
  a1[1] = v7;
  return sub_1C20DEF44;
}

void sub_1C20DEF44(uint64_t a1, char a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  if (a2)
  {
    swift_bridgeObjectRetain();
    id v3 = sub_1C20DEE50();
    id v6 = v3;
    if (v2)
    {
      id v4 = (void *)sub_1C214A5B0();
      swift_bridgeObjectRelease();
      id v3 = v6;
    }
    else
    {
      id v4 = 0;
    }
    objc_msgSend(v3, sel_setText_, v4);
    swift_bridgeObjectRelease();
  }
  else
  {
    id v5 = sub_1C20DEE50();
    id v6 = v5;
    if (v2)
    {
      id v4 = (void *)sub_1C214A5B0();
      swift_bridgeObjectRelease();
      id v5 = v6;
    }
    else
    {
      id v4 = 0;
    }
    objc_msgSend(v5, sel_setText_, v4);
  }
}

uint64_t UITextViewWithPlaceholder.text.getter()
{
  v5.receiver = v0;
  v5.super_class = (Class)swift_getObjectType();
  id v1 = objc_msgSendSuper2(&v5, sel_text);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  uint64_t v3 = sub_1C214A5F0();

  return v3;
}

void sub_1C20DF1D4()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  id v2 = sub_1C20DEE50();
  unsigned int v3 = objc_msgSend(v2, sel_isHidden);

  id v4 = sub_1C20DEE50();
  v14.receiver = v0;
  v14.super_class = ObjectType;
  id v5 = objc_msgSendSuper2(&v14, sel_text);
  if (v5)
  {
    id v6 = v5;
    uint64_t v7 = sub_1C214A5F0();
    unint64_t v9 = v8;

    swift_bridgeObjectRelease();
    uint64_t v10 = HIBYTE(v9) & 0xF;
    if ((v9 & 0x2000000000000000) == 0) {
      uint64_t v10 = v7 & 0xFFFFFFFFFFFFLL;
    }
    BOOL v11 = v10 != 0;
  }
  else
  {
    BOOL v11 = 0;
  }
  objc_msgSend(v4, sel_setHidden_, v11);

  if (v3)
  {
    id v12 = sub_1C20DEE50();
    unsigned __int8 v13 = objc_msgSend(v12, sel_isHidden);

    if ((v13 & 1) == 0) {
      objc_msgSend(v0, sel_setNeedsLayout);
    }
  }
}

void (*UITextViewWithPlaceholder.text.modify(objc_super **a1))(uint64_t *a1, char a2)
{
  id v2 = v1;
  id v4 = (objc_super *)malloc(0x70uLL);
  *a1 = v4;
  v4[6].receiver = v2;
  uint64_t ObjectType = swift_getObjectType();
  v4[6].super_class = (Class)ObjectType;
  v4[1].receiver = v2;
  v4[1].super_class = (Class)ObjectType;
  id v6 = objc_msgSendSuper2(v4 + 1, sel_text);
  if (v6)
  {
    uint64_t v7 = v6;
    uint64_t v8 = sub_1C214A5F0();
    uint64_t v10 = v9;
  }
  else
  {
    uint64_t v8 = 0;
    uint64_t v10 = 0;
  }
  v4->receiver = (id)v8;
  v4->super_class = v10;
  return sub_1C20DF39C;
}

void sub_1C20DF39C(uint64_t *a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *(void *)(*a1 + 8);
  if (a2)
  {
    if (v3)
    {
      swift_bridgeObjectRetain();
      id v4 = (void *)sub_1C214A5B0();
      swift_bridgeObjectRelease();
    }
    else
    {
      id v4 = 0;
    }
    *(_OWORD *)(v2 + 32) = *(_OWORD *)(v2 + 96);
    objc_msgSendSuper2((objc_super *)(v2 + 32), sel_setText_, v4);

    swift_bridgeObjectRelease();
  }
  else
  {
    if (v3)
    {
      id v5 = (void *)sub_1C214A5B0();
      swift_bridgeObjectRelease();
    }
    else
    {
      id v5 = 0;
    }
    uint64_t v7 = *(void *)(v2 + 96);
    uint64_t v6 = *(void *)(v2 + 104);
    *(void *)(v2 + 48) = v7;
    *(void *)(v2 + 56) = v6;
    objc_msgSendSuper2((objc_super *)(v2 + 48), sel_setText_, v5);

    *(void *)(v2 + 64) = v7;
    *(void *)(v2 + 72) = v6;
    id v8 = objc_msgSendSuper2((objc_super *)(v2 + 64), sel_text);
    if (v8)
    {
      sub_1C214A5F0();

      id v8 = (id)sub_1C214A5B0();
      swift_bridgeObjectRelease();
    }
    long long v9 = *(_OWORD *)(v2 + 96);
    *(_OWORD *)(v2 + 8sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = v9;
    objc_msgSendSuper2((objc_super *)(v2 + 80), sel_setText_, v8, v9);

    sub_1C20DF1D4();
  }

  free((void *)v2);
}

id sub_1C20DF524()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
  id v1 = objc_msgSend(self, sel_preferredFontForTextStyle_, *MEMORY[0x1E4FB28C8]);
  objc_msgSend(v0, sel_setFont_, v1);

  id v2 = objc_msgSend(self, sel_placeholderTextColor);
  objc_msgSend(v0, sel_setTextColor_, v2);

  objc_msgSend(v0, sel_setContentMode_, 5);
  objc_msgSend(v0, sel_setNumberOfLines_, 0);
  return v0;
}

id UITextViewWithPlaceholder.__allocating_init(frame:textContainer:)(void *a1, double a2, double a3, double a4, double a5)
{
  id v7 = objc_msgSend(objc_allocWithZone(v5), sel_initWithFrame_textContainer_, a1, a2, a3, a4, a5);

  return v7;
}

id UITextViewWithPlaceholder.init(frame:textContainer:)(void *a1, double a2, double a3, double a4, double a5)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v5[OBJC_IVAR____TtC19HealthMedicationsUI25UITextViewWithPlaceholder____lazy_storage___placeholderLabel] = 0;
  *(void *)&v5[OBJC_IVAR____TtC19HealthMedicationsUI25UITextViewWithPlaceholder_textDidChangeSubscription] = 0;
  v15.receiver = v5;
  v15.super_class = ObjectType;
  id v12 = objc_msgSendSuper2(&v15, sel_initWithFrame_textContainer_, a1, a2, a3, a4, a5);
  id v13 = sub_1C20DEE50();
  objc_msgSend(v12, sel_addSubview_, v13);

  sub_1C20DF758();
  return v12;
}

uint64_t sub_1C20DF758()
{
  id v1 = v0;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v3 = sub_1C214AE20();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1FEBB20();
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1C214FCD0;
  uint64_t v8 = sub_1C2149C70();
  uint64_t v9 = MEMORY[0x1E4FB1138];
  *(void *)(v7 + 32) = v8;
  *(void *)(v7 + 4sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = v9;
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1C1F7C8F0();
  sub_1C214B120();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  id v10 = objc_msgSend(self, sel_defaultCenter);
  sub_1C214AE30();

  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v1;
  *(void *)(v11 + 24) = ObjectType;
  sub_1C20E0058();
  id v12 = v1;
  uint64_t v13 = sub_1C214A0F0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  *(void *)&v12[OBJC_IVAR____TtC19HealthMedicationsUI25UITextViewWithPlaceholder_textDidChangeSubscription] = v13;
  return swift_release();
}

void sub_1C20DFA64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a3 + 16;
  id v4 = objc_msgSend(self, sel_preferredFontForTextStyle_, *MEMORY[0x1E4FB28C8]);
  swift_beginAccess();
  uint64_t v5 = (void *)MEMORY[0x1C8754850](v3);
  if (v5)
  {
    uint64_t v6 = v5;
    objc_msgSend(v5, sel_setFont_, v4);
  }
  swift_beginAccess();
  uint64_t v7 = MEMORY[0x1C8754850](v3);
  if (v7)
  {
    uint64_t v8 = (void *)v7;
    id v9 = sub_1C20DEE50();

    objc_msgSend(v9, sel_setFont_, v4);
  }
}

void sub_1C20DFB44(uint64_t a1, void *a2)
{
  sub_1C21475C0();
  if (v8)
  {
    if (swift_dynamicCast())
    {
      id v3 = a2;
      id v4 = v6;
      char v5 = sub_1C214B220();

      if (v5) {
        sub_1C20DF1D4();
      }
    }
  }
  else
  {
    sub_1C1F4FC0C((uint64_t)v7);
  }
}

id UITextViewWithPlaceholder.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void UITextViewWithPlaceholder.init(coder:)()
{
  *(void *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI25UITextViewWithPlaceholder____lazy_storage___placeholderLabel] = 0;
  *(void *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI25UITextViewWithPlaceholder_textDidChangeSubscription] = 0;

  sub_1C214B910();
  __break(1u);
}

Swift::Void __swiftcall UITextViewWithPlaceholder.layoutSubviews()()
{
  v27.receiver = v0;
  v27.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v27, sel_layoutSubviews);
  id v1 = sub_1C20DEE50();
  unsigned __int8 v2 = objc_msgSend(v1, sel_isHidden);

  if ((v2 & 1) == 0)
  {
    id v3 = sub_1C20DEE50();
    objc_msgSend(v0, sel_bringSubviewToFront_, v3);

    objc_msgSend(v0, sel_textContainerInset);
    double v5 = v4;
    double v7 = v6;
    id v8 = objc_msgSend(v0, sel_textContainer);
    objc_msgSend(v8, sel_lineFragmentPadding);
    double v10 = v9;

    id v11 = objc_msgSend(v0, sel_textContainer);
    objc_msgSend(v11, sel_lineFragmentPadding);

    objc_msgSend(v0, sel_bounds);
    double v16 = UIEdgeInsetsInsetRect(v12, v13, v14, v15, v5, v7 + v10);
    double v18 = v17;
    double v20 = v19;
    double v22 = v21;
    id v23 = sub_1C20DEE50();
    objc_msgSend(v23, sel_sizeThatFits_, v20, 0.0);
    double v25 = v24;

    if (v25 < v22) {
      double v22 = v25;
    }
    id v26 = sub_1C20DEE50();
    objc_msgSend(v26, sel_setFrame_, v16, v18, v20, v22);
  }
}

id UITextViewWithPlaceholder.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for UITextViewWithPlaceholder()
{
  return self;
}

uint64_t sub_1C20DFFD8()
{
  swift_unknownObjectWeakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

void sub_1C20E0010(uint64_t a1, uint64_t a2)
{
  sub_1C20DFA64(a1, a2, v2);
}

uint64_t sub_1C20E0018()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

void sub_1C20E0050(uint64_t a1)
{
  sub_1C20DFB44(a1, *(void **)(v1 + 16));
}

unint64_t sub_1C20E0058()
{
  unint64_t result = qword_1EA2C6798;
  if (!qword_1EA2C6798)
  {
    sub_1C214AE20();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C6798);
  }
  return result;
}

uint64_t initializeWithCopy for EducationDataSourceDisplayEvaluator(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v3;
  (**(void (***)(void))(v3 - 8))();
  return a1;
}

uint64_t *assignWithCopy for EducationDataSourceDisplayEvaluator(uint64_t *a1, uint64_t *a2)
{
  return a1;
}

uint64_t assignWithTake for EducationDataSourceDisplayEvaluator(uint64_t a1, uint64_t a2)
{
  __swift_destroy_boxed_opaque_existential_0(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for EducationDataSourceDisplayEvaluator(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for EducationDataSourceDisplayEvaluator(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 4sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 4sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EducationDataSourceDisplayEvaluator()
{
  return &type metadata for EducationDataSourceDisplayEvaluator;
}

uint64_t sub_1C20E0210@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1[3];
  uint64_t v4 = v1[4];
  __swift_project_boxed_opaque_existential_0(v1, v3);
  if (!(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 40))(v3, v4)) {
    goto LABEL_4;
  }
  swift_bridgeObjectRelease();
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  __swift_project_boxed_opaque_existential_0(v1, v5);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v6 + 48))(v16, v5, v6);
  if (v17)
  {
    __swift_project_boxed_opaque_existential_0(v16, v17);
    char v7 = sub_1C2147F90();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v16);
    if (v7)
    {
LABEL_4:
      uint64_t v8 = sub_1C2148540();
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(a1, 1, 1, v8);
    }
  }
  else
  {
    sub_1C1FE7798((uint64_t)v16, (unint64_t *)&qword_1EA2C4DB8, (unint64_t *)&qword_1EA2C4DC0, MEMORY[0x1E4F67820]);
  }
  sub_1C20E0B5C((uint64_t)v16);
  sub_1C1F2116C((uint64_t)v16, (uint64_t)&v14);
  if (v15)
  {
    sub_1C1F31280(&v14, (uint64_t)v13);
    sub_1C1FE7808(0, (unint64_t *)&qword_1EBF0C958, (unint64_t *)&qword_1EBF0C2F0, MEMORY[0x1E4F66028], MEMORY[0x1E4FBBE00]);
    uint64_t v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_1C214FCD0;
    sub_1C1F236D8((uint64_t)v13, v10 + 32);
    sub_1C2148500();
    uint64_t v11 = sub_1C2148540();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(a1, 0, 1, v11);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v13);
  }
  else
  {
    uint64_t v12 = sub_1C2148540();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(a1, 1, 1, v12);
  }
  return sub_1C1FE7798((uint64_t)v16, (unint64_t *)&qword_1EBF0C300, (unint64_t *)&qword_1EBF0C2F0, MEMORY[0x1E4F66028]);
}

uint64_t sub_1C20E0494@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  if (!result) {
    goto LABEL_23;
  }
  uint64_t v4 = v2;
  if (result == 1)
  {
    uint64_t v5 = v2[3];
    uint64_t v6 = v2[4];
    __swift_project_boxed_opaque_existential_0(v2, v5);
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v6 + 48))(&v46, v5, v6);
    if (!v47)
    {
LABEL_22:
      unint64_t result = sub_1C1FE7798((uint64_t)&v46, (unint64_t *)&qword_1EA2C4DB8, (unint64_t *)&qword_1EA2C4DC0, MEMORY[0x1E4F67820]);
      goto LABEL_23;
    }
    __swift_project_boxed_opaque_existential_0(&v46, v47);
    uint64_t v7 = sub_1C2147FC0();
    uint64_t v9 = v8;
    unint64_t result = __swift_destroy_boxed_opaque_existential_0((uint64_t)&v46);
    if (v9)
    {
      uint64_t v10 = v2[3];
      uint64_t v11 = v2[4];
      __swift_project_boxed_opaque_existential_0(v2, v10);
      (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v11 + 48))(&v46, v10, v11);
      if (v47)
      {
        __swift_project_boxed_opaque_existential_0(&v46, v47);
        uint64_t v12 = sub_1C2147FA0();
        uint64_t v14 = v13;
        __swift_destroy_boxed_opaque_existential_0((uint64_t)&v46);
        if (v14)
        {
          uint64_t v15 = type metadata accessor for MedicationEducationItem();
          uint64_t v16 = swift_allocObject();
          type metadata accessor for MedicationEducationItemCell();
          sub_1C20E208C(&qword_1EA2C5CD8, (void (*)(uint64_t))type metadata accessor for MedicationEducationItemCell);
          *(void *)(v16 + 56) = sub_1C21481D0();
          *(void *)(v16 + 64) = v17;
          sub_1C2147B10();
          *(void *)(v16 + 16) = v7;
          *(void *)(v16 + 24) = v9;
          *(void *)(v16 + 32) = v12;
          *(void *)(v16 + 4sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = v14;
          *(unsigned char *)(v16 + 48) = 0;
          *(void *)(a2 + 24) = v15;
          unint64_t result = sub_1C20E208C(&qword_1EA2C6F68, (void (*)(uint64_t))type metadata accessor for MedicationEducationItem);
          *(void *)(a2 + 32) = result;
          *(void *)a2 = v16;
          return result;
        }
        unint64_t result = swift_bridgeObjectRelease();
        goto LABEL_23;
      }
      swift_bridgeObjectRelease();
      goto LABEL_22;
    }
LABEL_23:
    *(void *)(a2 + 32) = 0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    return result;
  }
  if (result != 2)
  {
    sub_1C214B7C0();
    swift_bridgeObjectRelease();
    sub_1C214BA40();
    sub_1C214A6C0();
    swift_bridgeObjectRelease();
    unint64_t result = sub_1C214B910();
    __break(1u);
    return result;
  }
  uint64_t v18 = v2[3];
  uint64_t v19 = v2[4];
  __swift_project_boxed_opaque_existential_0(v2, v18);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v19 + 48))(&v46, v18, v19);
  if (v47)
  {
    __swift_project_boxed_opaque_existential_0(&v46, v47);
    char v20 = sub_1C2147F90();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)&v46);
    if (v20)
    {
      sub_1C20E1FC4((uint64_t)v4, (uint64_t)&v46);
      goto LABEL_14;
    }
  }
  else
  {
    sub_1C1FE7798((uint64_t)&v46, (unint64_t *)&qword_1EA2C4DB8, (unint64_t *)&qword_1EA2C4DC0, MEMORY[0x1E4F67820]);
  }
  unsigned __int8 v21 = objc_msgSend(self, sel_supportsOntologyBackedMedications);
  sub_1C20E1FC4((uint64_t)v4, (uint64_t)&v46);
  if ((v21 & 1) == 0)
  {
LABEL_20:
    unint64_t result = sub_1C1FE74B4((uint64_t)&v46);
    goto LABEL_23;
  }
LABEL_14:
  uint64_t v22 = v47;
  uint64_t v23 = v48;
  __swift_project_boxed_opaque_existential_0(&v46, v47);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v23 + 48))(v44, v22, v23);
  if (!v45)
  {
    sub_1C1FE7798((uint64_t)v44, (unint64_t *)&qword_1EA2C4DB8, (unint64_t *)&qword_1EA2C4DC0, MEMORY[0x1E4F67820]);
    goto LABEL_20;
  }
  __swift_project_boxed_opaque_existential_0(v44, v45);
  char v24 = sub_1C2147F90();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v44);
  unint64_t result = sub_1C1FE74B4((uint64_t)&v46);
  if ((v24 & 1) == 0) {
    goto LABEL_23;
  }
  uint64_t v25 = v4[3];
  uint64_t v26 = v4[4];
  __swift_project_boxed_opaque_existential_0(v4, v25);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v26 + 48))(v44, v25, v26);
  if (!v45)
  {
    sub_1C1FE7798((uint64_t)v44, (unint64_t *)&qword_1EA2C4DB8, (unint64_t *)&qword_1EA2C4DC0, MEMORY[0x1E4F67820]);
LABEL_26:
    swift_bridgeObjectRelease();
    uint64_t v27 = 0;
    unint64_t v29 = 0xE000000000000000;
    goto LABEL_27;
  }
  __swift_project_boxed_opaque_existential_0(v44, v45);
  uint64_t v27 = sub_1C2147FC0();
  unint64_t v29 = v28;
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v44);
  if (!v29) {
    goto LABEL_26;
  }
LABEL_27:
  uint64_t v30 = v4[3];
  uint64_t v31 = v4[4];
  __swift_project_boxed_opaque_existential_0(v4, v30);
  uint64_t v32 = (*(uint64_t (**)(uint64_t, uint64_t))(v31 + 24))(v30, v31);
  uint64_t v34 = v33;
  uint64_t v35 = v4[3];
  uint64_t v36 = v4[4];
  __swift_project_boxed_opaque_existential_0(v4, v35);
  uint64_t v37 = (*(uint64_t (**)(uint64_t, uint64_t))(v36 + 40))(v35, v36);
  if (v37) {
    uint64_t v38 = v37;
  }
  else {
    uint64_t v38 = MEMORY[0x1E4FBC860];
  }
  uint64_t v39 = v4[3];
  uint64_t v40 = v4[4];
  __swift_project_boxed_opaque_existential_0(v4, v39);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v40 + 48))(v44, v39, v40);
  char v41 = v45;
  if (v45)
  {
    __swift_project_boxed_opaque_existential_0(v44, v45);
    char v41 = sub_1C2147F90();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v44);
  }
  else
  {
    sub_1C1FE7798((uint64_t)v44, (unint64_t *)&qword_1EA2C4DB8, (unint64_t *)&qword_1EA2C4DC0, MEMORY[0x1E4F67820]);
  }
  *(void *)(a2 + 24) = type metadata accessor for MedicationEducationAndComponentsItem();
  *(void *)(a2 + 32) = sub_1C20E208C(&qword_1EA2C6F70, (void (*)(uint64_t))type metadata accessor for MedicationEducationAndComponentsItem);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a2);
  type metadata accessor for MedicationEducationAndComponentsItemCell();
  sub_1C20E208C(&qword_1EA2C3A00, (void (*)(uint64_t))type metadata accessor for MedicationEducationAndComponentsItemCell);
  boxed_opaque_existential_1[6] = sub_1C21481D0();
  boxed_opaque_existential_1[7] = v43;
  unint64_t result = sub_1C2147B10();
  boxed_opaque_existential_1[2] = v32;
  boxed_opaque_existential_1[3] = v34;
  uint64_t *boxed_opaque_existential_1 = v27;
  boxed_opaque_existential_1[1] = v29;
  boxed_opaque_existential_1[4] = v38;
  *((unsigned char *)boxed_opaque_existential_1 + 4sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = v41 & 1;
  return result;
}

uint64_t sub_1C20E0B5C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1[3];
  uint64_t v4 = v1[4];
  __swift_project_boxed_opaque_existential_0(v1, v3);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 40))(v3, v4);
  if (result
    && (swift_bridgeObjectRelease(),
        uint64_t v6 = v1[3],
        uint64_t v7 = v1[4],
        __swift_project_boxed_opaque_existential_0(v1, v6),
        (uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 40))(v6, v7)) != 0))
  {
    uint64_t v8 = result;
    uint64_t v9 = v1[3];
    uint64_t v10 = v1[4];
    __swift_project_boxed_opaque_existential_0(v1, v9);
    uint64_t v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 24))(v9, v10);
    uint64_t v13 = v12;
    uint64_t v14 = v1[3];
    uint64_t v15 = v1[4];
    __swift_project_boxed_opaque_existential_0(v1, v14);
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v15 + 48))(v20, v14, v15);
    char v16 = v21;
    if (v21)
    {
      __swift_project_boxed_opaque_existential_0(v20, v21);
      char v16 = sub_1C2147F90();
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v20);
    }
    else
    {
      sub_1C1FE7798((uint64_t)v20, (unint64_t *)&qword_1EA2C4DB8, (unint64_t *)&qword_1EA2C4DC0, MEMORY[0x1E4F67820]);
    }
    uint64_t v17 = type metadata accessor for MedicationComponentsItem();
    uint64_t v18 = swift_allocObject();
    type metadata accessor for MedicationComponentsItemCell();
    sub_1C20E208C(&qword_1EA2C4AC8, (void (*)(uint64_t))type metadata accessor for MedicationComponentsItemCell);
    *(void *)(v18 + 48) = sub_1C21481D0();
    *(void *)(v18 + 56) = v19;
    sub_1C2147B10();
    *(void *)(v18 + 16) = v11;
    *(void *)(v18 + 24) = v13;
    *(void *)(v18 + 32) = v8;
    *(unsigned char *)(v18 + 4sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = v16 & 1;
    *(void *)(a1 + 24) = v17;
    uint64_t result = sub_1C20E208C(&qword_1EA2C6F60, (void (*)(uint64_t))type metadata accessor for MedicationComponentsItem);
    *(void *)(a1 + 32) = result;
    *(void *)a1 = v18;
  }
  else
  {
    *(void *)(a1 + 32) = 0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  return result;
}

uint64_t sub_1C20E0DB0@<X0>(uint64_t *a1@<X8>)
{
  char v20 = a1;
  uint64_t v17 = sub_1C2148A70();
  uint64_t v1 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1C2148620();
  uint64_t v3 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C20E11C8(0, &qword_1EBF0C620, MEMORY[0x1E4FB0F28], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v16 - v6;
  sub_1C20E1A80(0, v23);
  uint64_t v8 = sub_1C21499D0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 1, 1, v8);
  uint64_t v21 = sub_1C214A5F0();
  uint64_t v22 = v9;
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  uint64_t v10 = v21;
  uint64_t v11 = v22;
  if (qword_1EBF0CA00 != -1) {
    swift_once();
  }
  id v12 = (id)qword_1EBF0CA18;
  swift_bridgeObjectRetain();
  sub_1C2147730();
  swift_bridgeObjectRelease();

  uint64_t v21 = v10;
  uint64_t v22 = v11;
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v18, *MEMORY[0x1E4F66480], v16);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v19, *MEMORY[0x1E4F66678], v17);
  uint64_t v13 = sub_1C21487B0();
  uint64_t v14 = v20;
  void v20[3] = v13;
  v14[4] = sub_1C20E208C((unint64_t *)&qword_1EA2C2E68, MEMORY[0x1E4F66510]);
  __swift_allocate_boxed_opaque_existential_1(v14);
  return sub_1C21487A0();
}

void sub_1C20E11C8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C20E122C@<X0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v56 = a2;
  uint64_t v7 = sub_1C2148A70();
  uint64_t v60 = *(void *)(v7 - 8);
  uint64_t v61 = v7;
  MEMORY[0x1F4188790](v7);
  id v63 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1C2148620();
  uint64_t v57 = *(void *)(v9 - 8);
  uint64_t v58 = v9;
  MEMORY[0x1F4188790](v9);
  id v62 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C20E11C8(0, &qword_1EBF0C620, MEMORY[0x1E4FB0F28], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v12 - 8);
  id v59 = (char *)&v47 - v13;
  sub_1C20E11C8(0, &qword_1EBF0C610, MEMORY[0x1E4FB0E38], v11);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v16 = (char *)&v47 - v15;
  uint64_t v55 = sub_1C21498E0();
  uint64_t v54 = *(void *)(v55 - 8);
  MEMORY[0x1F4188790](v55);
  uint64_t v18 = (char *)&v47 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1C2149860();
  uint64_t v20 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19);
  uint64_t v22 = (char *)&v47 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v23 = *a1;
  LOBYTE(v68[0]) = *a1;
  uint64_t v24 = v4[3];
  uint64_t v25 = v4[4];
  uint64_t v26 = __swift_project_boxed_opaque_existential_0(v4, v24);
  uint64_t result = sub_1C1FEC834((uint64_t)v26, v68, v24, v25);
  if (!v28)
  {
    *(void *)(a3 + 32) = 0;
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
    return result;
  }
  uint64_t v48 = v28;
  uint64_t v49 = result;
  id v52 = (uint64_t *)a3;
  uint64_t v29 = v4[3];
  uint64_t v30 = v4[4];
  __swift_project_boxed_opaque_existential_0(v4, v29);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v30 + 48))(v68, v29, v30);
  if (v69)
  {
    __swift_project_boxed_opaque_existential_0(v68, v69);
    uint64_t v53 = sub_1C2147FA0();
    uint64_t v32 = v31;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v68);
    if (v23) {
      goto LABEL_4;
    }
  }
  else
  {
    sub_1C1FE7798((uint64_t)v68, (unint64_t *)&qword_1EA2C4DB8, (unint64_t *)&qword_1EA2C4DC0, MEMORY[0x1E4F67820]);
    uint64_t v53 = 0;
    uint64_t v32 = 0;
    if (v23)
    {
LABEL_4:
      if (v23 == 1)
      {
        unint64_t v51 = 0xED00006D65744979;
        unint64_t v33 = 0x636E616E67657270;
        uint64_t v34 = &v70;
      }
      else
      {
        uint64_t v50 = 0x6F6974617463616CLL;
        unint64_t v33 = 0xED00006D6574496ELL;
        uint64_t v34 = &v71;
      }
      goto LABEL_10;
    }
  }
  unint64_t v51 = 0xEF6D657449737463;
  unint64_t v33 = 0x6566664565646973;
  uint64_t v34 = &v70;
LABEL_10:
  *(v34 - 32) = v33;
  sub_1C20E1CF4(v23, v68);
  sub_1C20E11C8(0, (unint64_t *)&unk_1EBF0C990, MEMORY[0x1E4FB0E68], MEMORY[0x1E4FBBE00]);
  sub_1C2149930();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1C214FCD0;
  (*(void (**)(char *, void, uint64_t))(v20 + 104))(v22, *MEMORY[0x1E4FB0E18], v19);
  uint64_t v35 = sub_1C2149870();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v16, 1, 1, v35);
  sub_1C21498D0();
  sub_1C21498A0();
  (*(void (**)(char *, uint64_t))(v54 + 8))(v18, v55);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
  sub_1C20E1FC4((uint64_t)v4, (uint64_t)v66);
  uint64_t v36 = swift_allocObject();
  *(unsigned char *)(v36 + 16) = v23;
  long long v37 = v66[1];
  *(_OWORD *)(v36 + 24) = v66[0];
  *(_OWORD *)(v36 + 4sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = v37;
  uint64_t v38 = v49;
  *(void *)(v36 + 56) = v67;
  *(void *)(v36 + 64) = v38;
  uint64_t v39 = v53;
  *(void *)(v36 + 72) = v48;
  *(void *)(v36 + 8sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = v39;
  uint64_t v40 = v56;
  *(void *)(v36 + 88) = v32;
  *(void *)(v36 + 96) = v40;
  uint64_t v41 = sub_1C21499D0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v59, 1, 1, v41);
  uint64_t v64 = sub_1C214A5F0();
  uint64_t v65 = v42;
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  uint64_t v44 = v64;
  uint64_t v43 = v65;
  swift_retain();
  swift_bridgeObjectRelease();
  LOBYTE(v64) = v23;
  MedicationSecondaryEducationType.title.getter();
  uint64_t v64 = v44;
  uint64_t v65 = v43;
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, void, uint64_t))(v57 + 104))(v62, *MEMORY[0x1E4F66480], v58);
  (*(void (**)(char *, void, uint64_t))(v60 + 104))(v63, *MEMORY[0x1E4F66678], v61);
  uint64_t v45 = sub_1C21487B0();
  uint64_t v46 = v52;
  v52[3] = v45;
  v46[4] = sub_1C20E208C((unint64_t *)&qword_1EA2C2E68, MEMORY[0x1E4F66510]);
  __swift_allocate_boxed_opaque_existential_1(v46);
  return sub_1C21487A0();
}

uint64_t sub_1C20E1A80@<X0>(char a1@<W0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_1C2149BE0();
  uint64_t v5 = MEMORY[0x1E4FB0F88];
  a2[3] = v4;
  a2[4] = v5;
  __swift_allocate_boxed_opaque_existential_1(a2);
  sub_1C2149BD0();
  if (a1)
  {
    if (a1 == 1)
    {
      if (qword_1EA2C2710 == -1)
      {
LABEL_9:
        uint64_t v6 = &qword_1EA2C5D90;
        goto LABEL_10;
      }
    }
    else if (qword_1EA2C2710 == -1)
    {
      goto LABEL_9;
    }
    swift_once();
    goto LABEL_9;
  }
  if (qword_1EBF0CA00 != -1) {
    swift_once();
  }
  uint64_t v6 = &qword_1EBF0CA18;
LABEL_10:
  id v7 = (id)*v6;
  swift_bridgeObjectRetain();
  sub_1C2147730();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  sub_1C2149B90();
  if (qword_1EA2C2710 != -1) {
    swift_once();
  }
  id v8 = (id)qword_1EA2C5D90;
  swift_bridgeObjectRetain();
  sub_1C2147730();
  swift_bridgeObjectRelease();

  return sub_1C2149A00();
}

uint64_t sub_1C20E1CF4@<X0>(char a1@<W0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_1C2149BE0();
  uint64_t v5 = MEMORY[0x1E4FB0F88];
  a2[3] = v4;
  a2[4] = v5;
  __swift_allocate_boxed_opaque_existential_1(a2);
  sub_1C2149B70();
  if (a1)
  {
    if (a1 == 1)
    {
      if (qword_1EA2C2710 == -1)
      {
LABEL_9:
        uint64_t v6 = &qword_1EA2C5D90;
        goto LABEL_10;
      }
    }
    else if (qword_1EA2C2710 == -1)
    {
      goto LABEL_9;
    }
    swift_once();
    goto LABEL_9;
  }
  if (qword_1EBF0CA00 != -1) {
    swift_once();
  }
  uint64_t v6 = &qword_1EBF0CA18;
LABEL_10:
  id v7 = (id)*v6;
  swift_bridgeObjectRetain();
  sub_1C2147730();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  return sub_1C2149B90();
}

void sub_1C20E1EB4(void *a1, char a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t), char *a6, uint64_t a7)
{
  uint64_t v14 = (objc_class *)type metadata accessor for MedicationSecondaryEducationViewController();
  char v22 = a2;
  sub_1C1F236D8(a3, (uint64_t)v19);
  uint64_t v16 = v20;
  uint64_t v15 = v21;
  uint64_t v17 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v19, v20);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v18 = sub_1C1FC3404((uint64_t)&v22, v17, a4, a5, a6, a7, v14, v16, v15);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v19);
  objc_msgSend(a1, sel_showAdaptively_sender_, v18, 0);
  sub_1C2149550();
}

uint64_t sub_1C20E1FC4(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_1C20E2024()
{
  __swift_destroy_boxed_opaque_existential_0(v0 + 24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return MEMORY[0x1F4186498](v0, 104, 7);
}

void sub_1C20E2074(void *a1)
{
  sub_1C20E1EB4(a1, *(unsigned char *)(v1 + 16), v1 + 24, *(void *)(v1 + 64), *(uint64_t (**)(uint64_t, uint64_t))(v1 + 72), *(char **)(v1 + 80), *(void *)(v1 + 88));
}

uint64_t sub_1C20E208C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for MedicationDetailEditViewController()
{
  uint64_t result = qword_1EA2C6FA0;
  if (!qword_1EA2C6FA0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C20E2120()
{
  return swift_initClassMetadata2();
}

void sub_1C20E218C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  swift_retain();
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

id sub_1C20E2204()
{
  uint64_t v1 = qword_1EA2C6F90;
  uint64_t v2 = *(void **)(v0 + qword_1EA2C6F90);
  if (v2)
  {
    id v3 = *(id *)(v0 + qword_1EA2C6F90);
  }
  else
  {
    id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F2B688]), sel_initWithHealthStore_, *(void *)(v0 + qword_1EA2C6F78));
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + vsub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, 0, 1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

void sub_1C20E2288(char *a1, uint64_t a2, void *a3)
{
  *(void *)&a1[qword_1EA2C6F90] = 0;
  uint64_t v5 = qword_1EA2C6F98;
  sub_1C20E3160();
  swift_allocObject();
  id v6 = a3;
  *(void *)&a1[v5] = sub_1C2149EB0();

  sub_1C214B910();
  __break(1u);
}

void sub_1C20E2344()
{
  sub_1C20E2470();
  v6.receiver = v0;
  v6.super_class = (Class)type metadata accessor for MedicationDetailEditViewController();
  objc_msgSendSuper2(&v6, sel_viewDidLoad);
  id v1 = objc_msgSend(v0, sel_collectionView);
  if (v1)
  {
    uint64_t v2 = v1;
    objc_msgSend(v1, sel_setPreservesSuperviewLayoutMargins_, 1);

    id v3 = objc_msgSend(v0, sel_collectionView);
    if (v3)
    {
      id v4 = v3;
      id v5 = objc_msgSend(self, sel_systemBackgroundColor);
      objc_msgSend(v4, sel_setBackgroundColor_, v5);

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_1C20E2428(void *a1)
{
  id v1 = a1;
  sub_1C20E2344();
}

void sub_1C20E2470()
{
  id v1 = objc_msgSend(v0, sel_navigationItem);
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB14A8]), sel_initWithBarButtonSystemItem_target_action_, 1, v0, sel_didTapCancel);
  objc_msgSend(v1, sel_setLeftBarButtonItem_, v2);

  id v3 = objc_msgSend(v0, sel_navigationItem);
  id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB14A8]), sel_initWithBarButtonSystemItem_target_action_, 0, v0, sel_didTapDone);
  objc_msgSend(v3, sel_setRightBarButtonItem_, v4);

  if (qword_1EBF0CA00 != -1) {
    swift_once();
  }
  id v5 = (id)qword_1EBF0CA18;
  swift_bridgeObjectRetain();
  sub_1C2147730();
  swift_bridgeObjectRelease();

  id v6 = (id)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_setTitle_, v6, 0xE000000000000000);
}

id sub_1C20E2648(void *a1)
{
  return objc_msgSend(a1, sel_dismissViewControllerAnimated_completion_, 1, 0);
}

void sub_1C20E265C()
{
  id v1 = v0;
  uint64_t v2 = sub_1C21492D0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  id v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C20E32A8(0, (unint64_t *)&qword_1EBF0B690, MEMORY[0x1E4F66C80], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v6 - 8);
  id v8 = (char *)&v25 - v7;
  id v25 = *(id *)&v0[qword_1EA2C6F80];
  swift_retain();
  sub_1C2149E90();
  swift_release();
  uint64_t v9 = v27;
  if (v27 == 1 || (uint64_t v10 = aBlock, swift_bridgeObjectRetain(), sub_1C204FA70(v10, v9), !v9)) {
    swift_bridgeObjectRelease();
  }
  uint64_t v11 = (void *)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  swift_retain();
  sub_1C2149E90();
  swift_release();
  uint64_t v12 = v27;
  if (v27 == 1 || (uint64_t v13 = v29, v14 = aBlock, swift_bridgeObjectRetain(), sub_1C204FA70(v14, v12), !v13)) {
    swift_bridgeObjectRelease();
  }
  uint64_t v15 = (void *)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  uint64_t v16 = *(void *)&v1[qword_1EA2C6F88] + qword_1EA2C83C0;
  swift_beginAccess();
  sub_1C1F64A60(v16, (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2))
  {
    sub_1C1F4CCB0((uint64_t)v8);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, v8, v2);
    sub_1C1F4CCB0((uint64_t)v8);
    sub_1C2149270();
    uint64_t v19 = v18;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    if (v19)
    {
      uint64_t v17 = (void *)sub_1C214A5B0();
      swift_bridgeObjectRelease();
      goto LABEL_12;
    }
  }
  uint64_t v17 = 0;
LABEL_12:
  id v20 = objc_msgSend(v25, sel_copyMedicationByUpdatingUserSpecifiedName_userSpecifiedNotes_userVisualizationConfigJSONString_, v11, v15, v17);

  id v21 = sub_1C20E2204();
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = v1;
  uint64_t v30 = sub_1C20E3258;
  uint64_t v31 = v22;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v27 = 1107296256;
  uint64_t v28 = sub_1C20E218C;
  uint64_t v29 = &block_descriptor_30;
  int v23 = _Block_copy(&aBlock);
  uint64_t v24 = v1;
  swift_release();
  objc_msgSend(v21, sel_saveOrUpdateUserDomainConcept_completion_, v20, v23);
  _Block_release(v23);
}

uint64_t sub_1C20E2A5C(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = sub_1C214A3F0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  id v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1C214A420();
  uint64_t v9 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19);
  uint64_t v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1FC0A6C();
  uint64_t v12 = (void *)sub_1C214AD80();
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a2;
  *(void *)(v13 + 24) = a3;
  aBlock[4] = sub_1C20E32A0;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C1F0E42C;
  aBlock[3] = &block_descriptor_6;
  uint64_t v14 = _Block_copy(aBlock);
  id v15 = a2;
  id v16 = a3;
  swift_release();
  sub_1C214A410();
  aBlock[0] = MEMORY[0x1E4FBC860];
  sub_1C204DD50();
  sub_1C20E32A8(0, (unint64_t *)&qword_1EBF0CAF0, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
  sub_1C1F12754();
  sub_1C214B640();
  MEMORY[0x1C8752F10](0, v11, v8, v14);
  _Block_release(v14);

  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v19);
}

id sub_1C20E2D10(void *a1, void *a2)
{
  uint64_t v4 = sub_1C21497F0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    id v8 = a1;
    sub_1C21497A0();
    id v9 = a1;
    id v10 = a1;
    uint64_t v11 = sub_1C21497E0();
    os_log_type_t v12 = sub_1C214ABD0();
    if (os_log_type_enabled(v11, v12))
    {
      id v20 = a2;
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      uint64_t v14 = swift_slowAlloc();
      uint64_t v21 = (uint64_t)a1;
      uint64_t v22 = v14;
      *(_DWORD *)uint64_t v13 = 136446210;
      uint64_t v19 = v13 + 4;
      id v15 = a1;
      sub_1C1F248B4(0, (unint64_t *)&qword_1EBF0C9C0);
      uint64_t v16 = sub_1C214A610();
      uint64_t v21 = sub_1C1F6FD54(v16, v17, &v22);
      sub_1C214B530();
      a2 = v20;
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1C1F0B000, v11, v12, "Failed to save medication: %{public}s", v13, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C8754730](v14, -1, -1);
      MEMORY[0x1C8754730](v13, -1, -1);
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  return objc_msgSend(a2, sel_dismissViewControllerAnimated_completion_, 1, 0);
}

void sub_1C20E2F88(void *a1)
{
  id v1 = a1;
  sub_1C20E265C();
}

void sub_1C20E2FD0()
{
}

void sub_1C20E3000(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = a3;
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1C20E3034()
{
  swift_release();

  return swift_release();
}

id sub_1C20E30A4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MedicationDetailEditViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1C20E30DC(uint64_t a1)
{
  swift_release();

  return swift_release();
}

uint64_t sub_1C20E3158()
{
  return type metadata accessor for MedicationDetailEditViewController();
}

void sub_1C20E3160()
{
  if (!qword_1EA2C6FB0)
  {
    sub_1C20E31C8();
    unint64_t v0 = sub_1C2149EA0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C6FB0);
    }
  }
}

void sub_1C20E31C8()
{
  if (!qword_1EA2C6FB8)
  {
    unint64_t v0 = sub_1C214B4F0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C6FB8);
    }
  }
}

uint64_t sub_1C20E3220()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C20E3258(uint64_t a1, void *a2)
{
  return sub_1C20E2A5C(a1, a2, *(void **)(v2 + 16));
}

uint64_t sub_1C20E3260()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

id sub_1C20E32A0()
{
  return sub_1C20E2D10(*(void **)(v0 + 16), *(void **)(v0 + 24));
}

void sub_1C20E32A8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C20E330C(void *a1, void *a2)
{
  *(void *)&v2[qword_1EA2C6F90] = 0;
  uint64_t v5 = qword_1EA2C6F98;
  long long v25 = xmmword_1C215B350;
  sub_1C20E3160();
  long long v26 = 0uLL;
  swift_allocObject();
  uint64_t v6 = v2;
  *(void *)&v2[v5] = sub_1C2149EB0();
  *(void *)&v6[qword_1EA2C6F78] = a1;
  *(void *)&v6[qword_1EA2C6F80] = a2;
  id v7 = a1;
  id v8 = a2;
  swift_retain();
  id v9 = objc_msgSend(v8, sel_userSpecifiedName, v25, v26);
  if (v9)
  {
    id v10 = v9;
    uint64_t v11 = sub_1C214A5F0();
    uint64_t v13 = v12;
  }
  else
  {
    uint64_t v11 = 0;
    uint64_t v13 = 0;
  }
  id v14 = objc_msgSend(v8, sel_userSpecifiedNotes);
  if (v14)
  {
    id v15 = v14;
    uint64_t v16 = sub_1C214A5F0();
    uint64_t v18 = v17;
  }
  else
  {
    uint64_t v16 = 0;
    uint64_t v18 = 0;
  }
  *(void *)&long long v25 = v11;
  *((void *)&v25 + sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, 0, 1) = v13;
  *(void *)&long long v26 = v16;
  *((void *)&v26 + sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, 0, 1) = v18;
  sub_1C2149E70();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  type metadata accessor for MedmojiPreviewDataSource();
  swift_allocObject();
  uint64_t v19 = sub_1C2117E38(v8);
  uint64_t v20 = qword_1EA2C6F88;
  *(void *)&v6[qword_1EA2C6F88] = v19;

  sub_1C2148820();
  sub_1C1F24848();
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_1C214FCC0;
  uint64_t v22 = MEMORY[0x1E4F66470];
  *(void *)(v21 + 32) = *(void *)&v6[v20];
  *(void *)(v21 + 4sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = v22;
  type metadata accessor for NicknameAndNotesDataSource();
  long long v25 = 0u;
  long long v26 = 0u;
  long long v27 = 0u;
  swift_allocObject();
  swift_retain();
  uint64_t v23 = swift_retain();
  *(void *)(v21 + 48) = sub_1C204DE9C(v23, &v25);
  *(void *)(v21 + 56) = v22;
  sub_1C2148850();
  return sub_1C2148AC0();
}

uint64_t MedicationScheduleDataSource.__allocating_init(schedulePublisher:medication:concept:presentationContext:)(uint64_t a1, void *a2, void *a3, uint64_t *a4)
{
  return MedicationScheduleDataSource.init(schedulePublisher:medication:concept:presentationContext:)(a1, a2, a3, a4);
}

uint64_t MedicationScheduleDataSource.currentValuePublisher.getter()
{
  return swift_retain();
}

uint64_t sub_1C20E35C4(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (!v1) {
    return v2;
  }
  uint64_t v27 = MEMORY[0x1E4FBC860];
  sub_1C1F70524(0, v1, 0);
  uint64_t v2 = v27;
  uint64_t result = sub_1C1F10628(a1);
  uint64_t v6 = result;
  uint64_t v7 = 0;
  uint64_t v8 = a1 + 64;
  int64_t v23 = v1;
  int v24 = v5;
  uint64_t v25 = a1 + 64;
  while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(unsigned char *)(a1 + 32))
  {
    unint64_t v11 = (unint64_t)v6 >> 6;
    if ((*(void *)(v8 + 8 * ((unint64_t)v6 >> 6)) & (1 << v6)) == 0) {
      goto LABEL_23;
    }
    if (*(_DWORD *)(a1 + 36) != v5) {
      goto LABEL_24;
    }
    uint64_t v26 = v7;
    swift_getObjectType();
    swift_unknownObjectRetain();
    uint64_t v12 = sub_1C2148300();
    uint64_t v14 = v13;
    uint64_t result = swift_unknownObjectRelease();
    unint64_t v15 = *(void *)(v27 + 16);
    unint64_t v16 = *(void *)(v27 + 24);
    if (v15 >= v16 >> 1) {
      uint64_t result = sub_1C1F70524(v16 > 1, v15 + 1, 1);
    }
    *(void *)(v27 + 16) = v15 + 1;
    uint64_t v17 = v27 + 16 * v15;
    *(void *)(v17 + 32) = v12;
    *(void *)(v17 + 4sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = v14;
    int64_t v9 = 1 << *(unsigned char *)(a1 + 32);
    if (v6 >= v9) {
      goto LABEL_25;
    }
    uint64_t v8 = a1 + 64;
    uint64_t v18 = *(void *)(v25 + 8 * v11);
    if ((v18 & (1 << v6)) == 0) {
      goto LABEL_26;
    }
    int v5 = v24;
    if (*(_DWORD *)(a1 + 36) != v24) {
      goto LABEL_27;
    }
    unint64_t v19 = v18 & (-2 << (v6 & 0x3F));
    if (v19)
    {
      int64_t v9 = __clz(__rbit64(v19)) | v6 & 0xFFFFFFFFFFFFFFC0;
      int64_t v10 = v23;
    }
    else
    {
      unint64_t v20 = v11 + 1;
      unint64_t v21 = (unint64_t)(v9 + 63) >> 6;
      int64_t v10 = v23;
      if (v11 + 1 < v21)
      {
        unint64_t v22 = *(void *)(v25 + 8 * v20);
        if (v22)
        {
LABEL_20:
          int64_t v9 = __clz(__rbit64(v22)) + (v20 << 6);
        }
        else
        {
          while (v21 - 2 != v11)
          {
            unint64_t v22 = *(void *)(a1 + 80 + 8 * v11++);
            if (v22)
            {
              unint64_t v20 = v11 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    uint64_t v7 = v26 + 1;
    uint64_t v6 = v9;
    if (v26 + 1 == v10) {
      return v2;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1C20E3814(uint64_t *a1, uint64_t (*a2)(void), uint64_t (*a3)(uint64_t), uint64_t (*a4)(void *))
{
  uint64_t v7 = *(void *)(a2(0) - 8);
  uint64_t v8 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v8 = a3(v8);
  }
  uint64_t v9 = *(void *)(v8 + 16);
  v11[0] = v8 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  v11[1] = v9;
  uint64_t result = a4(v11);
  *a1 = v8;
  return result;
}

uint64_t sub_1C20E38D8(uint64_t a1)
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong || (uint64_t v3 = Strong, swift_beginAccess(), v4 = *(void *)(v3 + 80), result = swift_release(), v4 != a1))
  {
    swift_beginAccess();
    uint64_t result = swift_weakLoadStrong();
    if (result)
    {
      uint64_t v6 = result;
      swift_beginAccess();
      *(void *)(v6 + 8sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = a1;
      sub_1C20E39F0();
      sub_1C20EEBDC();
      sub_1C20F051C(&qword_1EA2C7038, (void (*)(uint64_t))sub_1C20EEBDC);
      sub_1C2148320();
      return swift_release();
    }
  }
  return result;
}

void sub_1C20E39F0()
{
  int64_t v1 = v0;
  swift_beginAccess();
  swift_getObjectType();
  swift_unknownObjectRetain();
  uint64_t v2 = (void *)sub_1C2148310();
  swift_unknownObjectRelease();
  objc_msgSend(v2, sel_unregisterObserver_, v0);

  uint64_t v3 = v0[8];
  swift_beginAccess();
  if (*(void *)(v3 + 16) && (unint64_t v4 = sub_1C1F4B548(v1[10]), (v5 & 1) != 0))
  {
    uint64_t v6 = (uint64_t *)(*(void *)(v3 + 56) + 24 * v4);
    uint64_t v7 = v6 + 1;
    uint64_t v8 = v6 + 2;
  }
  else
  {
    uint64_t v6 = v1 + 5;
    uint64_t v7 = v1 + 6;
    uint64_t v8 = v1 + 7;
  }
  uint64_t v9 = *v7;
  uint64_t v10 = *v6;
  uint64_t v11 = *v8;
  v1[12] = v10;
  v1[13] = v9;
  v1[14] = v11;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  swift_getObjectType();
  swift_unknownObjectRetain();
  uint64_t v12 = (void *)sub_1C2148310();
  swift_unknownObjectRelease();
  objc_msgSend(v12, sel_registerObserver_, v1);
}

uint64_t sub_1C20E3B44(uint64_t *a1, void *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (void *)(*a2 + qword_1EA2C81A8);
  swift_beginAccess();
  *uint64_t v3 = v2;
  swift_retain();
  return swift_release();
}

uint64_t sub_1C20E3BB0()
{
  return swift_retain();
}

uint64_t sub_1C20E3BFC(uint64_t a1)
{
  uint64_t v3 = (void *)(v1 + qword_1EA2C81A8);
  swift_beginAccess();
  *uint64_t v3 = a1;
  return swift_release();
}

uint64_t (*sub_1C20E3C50())()
{
  return j__swift_endAccess;
}

uint64_t MedicationScheduleDataSource.init(schedulePublisher:medication:concept:presentationContext:)(uint64_t a1, void *a2, void *a3, uint64_t *a4)
{
  char v5 = v4;
  id v193 = (id)*v5;
  uint64_t v212 = sub_1C2148410();
  *(void *)&long long v210 = *(void *)(v212 - 8);
  MEMORY[0x1F4188790](v212);
  v209 = (char *)&v190 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1C2147CF0();
  MEMORY[0x1F4188790](v11 - 8);
  v218 = (uint64_t (*)())((char *)&v190 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C20EE8F0(0);
  uint64_t v14 = MEMORY[0x1F4188790](v13 - 8);
  v199 = (id *)((char *)&v190 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v14);
  v213 = (id *)((char *)&v190 - v16);
  sub_1C20EE924(0);
  MEMORY[0x1F4188790](v17 - 8);
  uint64_t v194 = (uint64_t)&v190 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1C21497F0();
  uint64_t v196 = *(void *)(v19 - 8);
  uint64_t v197 = v19;
  MEMORY[0x1F4188790](v19);
  v219 = (char *)&v190 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1F30CC4(0);
  uint64_t v22 = MEMORY[0x1F4188790](v21 - 8);
  uint64_t v202 = (uint64_t)&v190 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = MEMORY[0x1F4188790](v22);
  v198 = (char *)&v190 - v25;
  MEMORY[0x1F4188790](v24);
  uint64_t v215 = (uint64_t)&v190 - v26;
  uint64_t v216 = sub_1C2147AC0();
  uint64_t v214 = *(void *)(v216 - 8);
  uint64_t v27 = MEMORY[0x1F4188790](v216);
  v201 = (char *)&v190 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v27);
  uint64_t v30 = (char *)&v190 - v29;
  sub_1C20EE9BC(0);
  MEMORY[0x1F4188790](v31 - 8);
  unint64_t v33 = (char *)&v190 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = *a4;
  uint64_t v224 = a4[1];
  uint64_t v222 = a4[2];
  *(void *)&long long v223 = v34;
  uint64_t v221 = a4[3];
  uint64_t v35 = qword_1EA2C6FC8;
  *(void *)((char *)v5 + qword_1EA2C6FC8) = 0;
  *(void *)((char *)v5 + qword_1EA2C81Bsub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = 0;
  *(void *)((char *)v5 + qword_1EA2C81B8) = 0;
  *(void *)((char *)v5 + qword_1EA2C81Csub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = 0;
  *(void *)((char *)v5 + qword_1EA2C81C8) = 0;
  *(void *)((char *)v5 + qword_1EA2C81Dsub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = 0;
  *(void *)((char *)v5 + qword_1EA2C81D8) = 0;
  *(void *)((char *)v5 + qword_1EA2C81Esub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = 0;
  *(void *)((char *)v5 + qword_1EA2C81E8) = 0;
  *(void *)((char *)v5 + qword_1EA2C81Fsub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = 0;
  *(void *)((char *)v5 + qword_1EA2C81F8) = 0;
  uint64_t v36 = qword_1EA2C8200;
  id v37 = objc_allocWithZone(MEMORY[0x1E4F2AC98]);
  swift_retain();
  *(void *)((char *)v5 + v36) = objc_msgSend(v37, sel_init);
  uint64_t v211 = qword_1EA2C6FD0;
  *(void *)((char *)v5 + qword_1EA2C6FDsub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = a2;
  uint64_t v208 = qword_1EA2C6FD8;
  *(void *)((char *)v5 + qword_1EA2C6FD8) = a3;
  v206 = a3;
  id v205 = a3;
  id v204 = a2;
  sub_1C2149E90();
  uint64_t v38 = *(void **)((char *)v5 + v35);
  uint64_t v220 = v35;
  *(void *)((char *)v5 + v35) = v225;

  sub_1C2149E90();
  uint64_t v39 = (void *)v225;
  if ((void)v225)
  {
    id v40 = objc_msgSend((id)v225, sel_UUID);

    sub_1C2147B00();
    uint64_t v41 = sub_1C2147B20();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v33, 0, 1, v41);
  }
  else
  {
    uint64_t v42 = sub_1C2147B20();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56))(v33, 1, 1, v42);
  }
  sub_1C20F0478((uint64_t)v33, (uint64_t)v5 + qword_1EA2C8208, (uint64_t (*)(void))sub_1C20EE9BC);
  sub_1C2149E90();
  uint64_t v228 = v225;
  sub_1C20EEA6C(0, (unint64_t *)&qword_1EA2C3978, (void (*)(uint64_t))sub_1C1F89100);
  swift_allocObject();
  uint64_t v43 = sub_1C2149EB0();
  uint64_t v203 = qword_1EA2C81A0;
  *(void *)((char *)v5 + qword_1EA2C81Asub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = v43;
  uint64_t v44 = (void *)((char *)v5 + qword_1EA2C8210);
  uint64_t v46 = v222;
  uint64_t v45 = v223;
  uint64_t v47 = v224;
  *uint64_t v44 = v223;
  v44[1] = v47;
  uint64_t v48 = v221;
  v44[2] = v46;
  void v44[3] = v48;
  uint64_t v49 = v219;
  uint64_t v50 = *(uint64_t (**)(uint64_t, uint64_t))((char *)v5 + v220);
  uint64_t v207 = a1;
  v217 = v30;
  v200 = v50;
  if (!v50)
  {
    uint64_t v59 = 2;
    uint64_t v60 = 4;
    if (v47) {
      uint64_t v60 = 2;
    }
    v219 = (char *)v60;
    sub_1C2021590(v45, v47);
    sub_1C2147AB0();
    uint64_t v62 = v214;
    uint64_t v61 = v215;
    uint64_t v63 = v216;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v214 + 56))(v215, 1, 1, v216);
    uint64_t v197 = 0;
    id v193 = 0;
    uint64_t v64 = 0;
    LODWORD(v213) = 255;
    unint64_t v65 = MEMORY[0x1E4FBC860];
    v199 = (id *)MEMORY[0x1E4FBC860];
    char v66 = -1;
    goto LABEL_45;
  }
  sub_1C2021590(v45, v47);
  unint64_t v51 = v50;
  sub_1C21497A0();
  id v52 = sub_1C21497E0();
  os_log_type_t v53 = sub_1C214ABB0();
  if (os_log_type_enabled(v52, v53))
  {
    uint64_t v54 = (uint8_t *)swift_slowAlloc();
    uint64_t v55 = swift_slowAlloc();
    *(void *)&long long v225 = v55;
    *(_DWORD *)uint64_t v54 = 136315138;
    uint64_t v56 = sub_1C214BC10();
    uint64_t v228 = sub_1C1F6FD54(v56, v57, (uint64_t *)&v225);
    sub_1C214B530();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C1F0B000, v52, v53, "[%s] Previous schedule found. Parsing values to populate \"Edit Schedule\" UI.", v54, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C8754730](v55, -1, -1);
    uint64_t v58 = v216;
    MEMORY[0x1C8754730](v54, -1, -1);

    (*(void (**)(char *, uint64_t))(v196 + 8))(v219, v197);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v196 + 8))(v49, v197);
    uint64_t v58 = v216;
  }
  uint64_t v67 = v199;
  id v68 = objc_msgSend(v51, sel_scheduleType);
  uint64_t v69 = (char *)objc_msgSend(v51, sel_scheduleType);
  sub_1C20C7088((uint64_t)&v225);
  if (BYTE8(v225))
  {
    uint64_t v70 = 2;
  }
  else
  {
    uint64_t v71 = v225;
    id v72 = objc_msgSend(v51, sel_timeIntervals);
    sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8D8);
    unint64_t v73 = sub_1C214A780();

    if (v73 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v74 = sub_1C214B930();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v74 = *(void *)((v73 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    if (v74) {
      uint64_t v70 = v71;
    }
    else {
      uint64_t v70 = 2;
    }
  }
  unint64_t v75 = (unint64_t)objc_msgSend(v51, sel_scheduleType);
  unint64_t v76 = MEMORY[0x1E4FBC860];
  uint64_t v192 = v70;
  id v193 = v68;
  v219 = v69;
  if (v75 > 8) {
    goto LABEL_27;
  }
  if (((1 << v75) & 0x186) != 0)
  {
    unint64_t v77 = sub_1C1F6EFDC();
    uint64_t v78 = *(void *)(v77 + 16);
    uint64_t v79 = type metadata accessor for WeekdaysAndDosages(0);
    uint64_t v80 = *(void *)(v79 - 8);
    if (v78)
    {
      uint64_t v81 = v194;
      sub_1C20F05FC(v77+ ((*(unsigned __int8 *)(*(void *)(v79 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v79 - 8) + 80)), v194, type metadata accessor for WeekdaysAndDosages);
      uint64_t v82 = 0;
    }
    else
    {
      uint64_t v82 = 1;
      uint64_t v81 = v194;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v80 + 56))(v81, v82, 1, v79);
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v80 + 48))(v81, 1, v79) == 1)
    {
      sub_1C1F13BC4(v81, (uint64_t (*)(void))sub_1C20EE924);
      unint64_t v76 = MEMORY[0x1E4FBC860];
LABEL_27:
      unint64_t v83 = v76;
      goto LABEL_29;
    }
    uint64_t v84 = *(int *)(v79 + 24);
    uint64_t v85 = v81;
    unint64_t v83 = *(void *)(v81 + v84);
    swift_bridgeObjectRetain();
    sub_1C1F13BC4(v85, type metadata accessor for WeekdaysAndDosages);
    unint64_t v76 = MEMORY[0x1E4FBC860];
  }
  else
  {
    unint64_t v83 = MEMORY[0x1E4FBC860];
    if (((1 << v75) & 0x28) != 0)
    {
      unint64_t v76 = sub_1C1F6EFDC();
      unint64_t v83 = MEMORY[0x1E4FBC860];
    }
  }
LABEL_29:
  v199 = (id *)v76;
  objc_super v86 = v51;
  uint64_t v87 = v218;
  sub_1C2147C50();
  uint64_t v88 = (uint64_t)v87;
  uint64_t v89 = v213;
  sub_1C2084348(v86, v88, (uint64_t)v213);
  uint64_t v90 = type metadata accessor for CycleData();
  uint64_t v91 = *(uint64_t (**)(id *, uint64_t, uint64_t))(*(void *)(v90 - 8) + 48);
  int v92 = v91(v89, 1, v90);
  uint64_t v93 = (uint64_t (*)(void))sub_1C20EE8F0;
  if (v92 == 1)
  {
    uint64_t v196 = 0;
    LODWORD(v194) = 255;
  }
  else
  {
    Swift::Int active = CycleData.calculateTotalActiveDays()();
    uint64_t v89 = v213;
    uint64_t v196 = active;
    id v95 = objc_msgSend(*v213, sel_scheduleType);
    uint64_t v93 = (uint64_t (*)(void))type metadata accessor for CycleData;
    if (v95 == (id)7)
    {
      LODWORD(v194) = 1;
    }
    else
    {
      if (v95 != (id)8) {
        goto LABEL_50;
      }
      LODWORD(v194) = 0;
      v196 /= 7;
      uint64_t v93 = (uint64_t (*)(void))type metadata accessor for CycleData;
    }
  }
  sub_1C1F13BC4((uint64_t)v89, v93);
  unsigned __int8 v96 = v86;
  uint64_t v97 = (uint64_t)v218;
  sub_1C2147C50();
  sub_1C2084348(v96, v97, (uint64_t)v67);
  int v98 = v91(v67, 1, v90);
  uint64_t v99 = (uint64_t (*)(void))sub_1C20EE8F0;
  unint64_t v191 = v83;
  if (v98 != 1)
  {
    Swift::Int v103 = CycleData.calculateTotalPauseDays()();
    id v104 = objc_msgSend(*v67, sel_scheduleType);
    uint64_t v99 = (uint64_t (*)(void))type metadata accessor for CycleData;
    uint64_t v102 = (uint64_t)v198;
    if (v104 == (id)7)
    {
      uint64_t v100 = v103;
      int v101 = 1;
      goto LABEL_41;
    }
    if (v104 == (id)8)
    {
      int v101 = 0;
      uint64_t v100 = v103 / 7;
      uint64_t v99 = (uint64_t (*)(void))type metadata accessor for CycleData;
      goto LABEL_41;
    }
LABEL_50:
    uint64_t result = sub_1C214B910();
    __break(1u);
    return result;
  }
  uint64_t v100 = 0;
  int v101 = 255;
  uint64_t v102 = (uint64_t)v198;
LABEL_41:
  sub_1C1F13BC4((uint64_t)v67, v99);
  id v105 = objc_msgSend(v96, sel_startDateTime);
  sub_1C2147A60();

  uint64_t v106 = (uint64_t (*)(uint64_t, uint64_t))objc_msgSend(v96, sel_endDateTime);
  LODWORD(v213) = v101;
  if (v106)
  {
    uint64_t v107 = v106;
    sub_1C2147A60();

    uint64_t v108 = 0;
    unsigned __int8 v96 = v107;
  }
  else
  {
    uint64_t v108 = 1;
  }

  uint64_t v62 = v214;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v214 + 56))(v102, v108, 1, v58);
  uint64_t v61 = v215;
  sub_1C20F0478(v102, v215, (uint64_t (*)(void))sub_1C1F30CC4);
  uint64_t v63 = v58;
  uint64_t v30 = v217;
  char v66 = v194;
  uint64_t v64 = v196;
  uint64_t v197 = v100;
  unint64_t v65 = v191;
  uint64_t v59 = v192;
LABEL_45:
  *(void *)&long long v225 = v59;
  BYTE8(v225) = 0;
  sub_1C20EE9F0(0, &qword_1EA2C6FE0, &qword_1EA2C6FE8, (uint64_t)&type metadata for FrequencyInterval);
  swift_allocObject();
  uint64_t v109 = sub_1C2149EB0();
  v218 = (uint64_t (*)())qword_1EA2C8218;
  *(void *)((char *)v5 + qword_1EA2C8218) = v109;
  *(void *)&long long v225 = v65;
  sub_1C20EEA6C(0, &qword_1EA2C6FF0, sub_1C20EEAD0);
  swift_allocObject();
  uint64_t v110 = sub_1C2149EB0();
  uint64_t v194 = qword_1EA2C8220;
  *(void *)((char *)v5 + qword_1EA2C822sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = v110;
  (*(void (**)(char *, char *, uint64_t))(v62 + 16))(v201, v30, v63);
  sub_1C20EEA6C(0, (unint64_t *)&qword_1EA2C5088, MEMORY[0x1E4F27928]);
  swift_allocObject();
  uint64_t v111 = sub_1C2149EB0();
  uint64_t v196 = qword_1EA2C8228;
  *(void *)((char *)v5 + qword_1EA2C8228) = v111;
  sub_1C20F05FC(v61, v202, (uint64_t (*)(void))sub_1C1F30CC4);
  sub_1C20EEA6C(0, (unint64_t *)&qword_1EA2C5090, sub_1C1F30CC4);
  swift_allocObject();
  uint64_t v112 = sub_1C2149EB0();
  unint64_t v113 = v5;
  uint64_t v114 = qword_1EA2C8230;
  *(void *)((char *)v113 + qword_1EA2C823sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = v112;
  *(void *)&long long v225 = v64;
  BYTE8(v225) = v66;
  sub_1C20EE9F0(0, &qword_1EA2C7008, &qword_1EA2C7010, (uint64_t)&type metadata for PauseUsePeriod);
  swift_allocObject();
  uint64_t v115 = sub_1C2149EB0();
  v198 = (char *)qword_1EA2C8238;
  *(void *)((char *)v113 + qword_1EA2C8238) = v115;
  *(void *)&long long v225 = v197;
  BYTE8(v225) = (_BYTE)v213;
  swift_allocObject();
  uint64_t v116 = sub_1C2149EB0();
  uint64_t v197 = qword_1EA2C8240;
  *(void *)((char *)v113 + qword_1EA2C824sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = v116;
  LOBYTE(v225) = (v66 & 1) == 0;
  sub_1C20EE9F0(0, &qword_1EA2C4C90, (unint64_t *)&qword_1EA2C4C98, (uint64_t)&type metadata for DisplayUnit);
  swift_allocObject();
  uint64_t v117 = sub_1C2149EB0();
  uint64_t v118 = qword_1EA2C8248;
  *(void *)((char *)v113 + qword_1EA2C8248) = v117;
  *(void *)&long long v225 = v199;
  sub_1C20EEA6C(0, (unint64_t *)&qword_1EA2C6088, sub_1C20EEB38);
  swift_allocObject();
  uint64_t v119 = sub_1C2149EB0();
  v201 = (char *)qword_1EA2C8250;
  *(void *)((char *)v113 + qword_1EA2C825sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = v119;
  *(void *)&long long v225 = v219;
  sub_1C20EEA6C(0, (unint64_t *)&qword_1EA2C4C88, type metadata accessor for HKMedicationScheduleType);
  swift_allocObject();
  uint64_t v120 = sub_1C2149EB0();
  uint64_t v121 = (id *)qword_1EA2C8258;
  *(void *)((char *)v113 + qword_1EA2C8258) = v120;
  uint64_t v122 = v113;
  uint64_t v123 = *(void *)((char *)v113 + v220);
  BOOL v124 = v123 != 0;
  if (v200)
  {
    if (!v123) {
      BOOL v124 = v193 == (id)4;
    }
  }
  LOBYTE(v225) = v124;
  sub_1C1F20160();
  swift_allocObject();
  *(void *)((char *)v113 + qword_1EA2C81A8) = sub_1C2149EB0();
  uint64_t v125 = *(void **)((char *)v113 + v211);
  unsigned __int8 v126 = *(void **)((char *)v113 + v208);
  uint64_t v127 = *(void *)((char *)v113 + v194);
  type metadata accessor for DosagesPerDaySectionDataSource();
  swift_allocObject();
  id v128 = v126;
  swift_retain();
  uint64_t v129 = sub_1C201A694((void (**)(void))v125, v126, v127);
  v213 = v121;
  uint64_t v130 = *(uint64_t *)((char *)v121 + (void)v113);
  uint64_t v131 = *(void *)((char *)v218 + (void)v113);
  uint64_t v132 = *(void *)((char *)v113 + v118);
  *(void *)&long long v225 = v223;
  *((void *)&v225 + sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, 0, 1) = v224;
  uint64_t v226 = v222;
  uint64_t v227 = v221;
  type metadata accessor for FrequencyPickerDataSource();
  swift_allocObject();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v202 = FrequencyPickerDataSource.init(frequencyPublisher:frequencyIntervalPublisher:cycleUnitPublisher:context:)(v130, v131, v132, &v225);
  uint64_t v133 = *(void *)((char *)v122 + v196);
  uint64_t v134 = *(void *)((char *)v122 + v114);
  type metadata accessor for StartDateDataSource();
  swift_allocObject();
  swift_retain();
  swift_retain();
  uint64_t v221 = sub_1C2009AFC(v133, v134);
  sub_1C21489D0();
  uint64_t v135 = v209;
  sub_1C2148400();
  sub_1C21483A0();
  (*(void (**)(char *, uint64_t))(v210 + 8))(v135, v212);
  uint64_t v212 = sub_1C21489A0();
  v219 = (char *)sub_1C2148820();
  uint64_t v136 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
  v200 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
  sub_1C20EE958(0, (unint64_t *)&qword_1EA2C69F0, (uint64_t (*)(uint64_t))sub_1C1F41E50, MEMORY[0x1E4FBBE00]);
  uint64_t v220 = v137;
  uint64_t v138 = swift_allocObject();
  *(_OWORD *)(v138 + 16) = xmmword_1C2151E60;
  uint64_t v139 = MEMORY[0x1E4F66470];
  uint64_t v211 = v129;
  *(void *)(v138 + 32) = v129;
  *(void *)(v138 + 4sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = v139;
  uint64_t v140 = v139;
  v199 = (id *)type metadata accessor for NotificationFooterDataSource();
  *(unsigned char *)(swift_allocObject() + qword_1EA2C3C8sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = 0;
  sub_1C20EE958(0, (unint64_t *)&qword_1EA2C2DD0, MEMORY[0x1E4F66468], v136);
  v209 = v141;
  uint64_t v142 = *(void *)(sub_1C2148540() - 8);
  uint64_t v143 = *(unsigned __int8 *)(v142 + 80);
  uint64_t v208 = ((v143 + 32) & ~v143) + *(void *)(v142 + 72);
  uint64_t v224 = (v143 + 32) & ~v143;
  uint64_t v222 = v143 | 7;
  uint64_t v144 = swift_allocObject();
  long long v223 = xmmword_1C214FCD0;
  *(_OWORD *)(v144 + 16) = xmmword_1C214FCD0;
  swift_retain();
  sub_1C2148500();
  v218 = sub_1C1F7419C;
  *(void *)(v138 + 48) = sub_1C21489B0();
  *(void *)(v138 + 56) = v140;
  uint64_t v145 = v140;
  uint64_t v146 = v122;
  uint64_t v147 = *(void *)((char *)v122 + v118);
  uint64_t v148 = *(void *)&v198[(void)v122];
  uint64_t v149 = *(void *)((char *)v122 + v197);
  uint64_t v150 = *(uint64_t *)((char *)v213 + (void)v122);
  uint64_t v151 = (uint64_t)v146;
  type metadata accessor for PauseDataSource(0);
  swift_allocObject();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  *(void *)(v138 + 64) = sub_1C1FDC524(v147, v148, v149, v150);
  *(void *)(v138 + 72) = v145;
  uint64_t v195 = v151;
  type metadata accessor for NextPauseDataSource(0);
  swift_allocObject();
  v152 = (void *)swift_retain();
  uint64_t v153 = sub_1C1FDDD00(v152);
  swift_release();
  uint64_t v154 = sub_1C20F051C(&qword_1EA2C7018, (void (*)(uint64_t))type metadata accessor for NextPauseDataSource);
  *(void *)(v138 + 8sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = v153;
  *(void *)(v138 + 88) = v154;
  uint64_t v155 = v221;
  *(void *)(v138 + 96) = v221;
  *(void *)(v138 + 104) = v145;
  uint64_t v156 = v155;
  swift_retain();
  uint64_t v203 = sub_1C2148850();
  uint64_t v157 = swift_allocObject();
  long long v210 = xmmword_1C2150000;
  *(_OWORD *)(v157 + 16) = xmmword_1C2150000;
  uint64_t v158 = *(void *)&v201[v151];
  type metadata accessor for ListOfWeekdaysAndDosagesPickerDataSource(0);
  swift_allocObject();
  id v159 = v204;
  id v204 = v159;
  id v205 = v205;
  swift_retain();
  *(void *)(v157 + 32) = sub_1C205B528(v159, v206, v158);
  *(void *)(v157 + 4sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = v145;
  *(unsigned char *)(swift_allocObject() + qword_1EA2C3C8sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = 1;
  *(_OWORD *)(swift_allocObject() + 16) = v223;
  sub_1C2148500();
  *(void *)(v157 + 48) = sub_1C21489B0();
  uint64_t v160 = MEMORY[0x1E4F66470];
  *(void *)(v157 + 56) = MEMORY[0x1E4F66470];
  *(void *)(v157 + 64) = v156;
  *(void *)(v157 + 72) = v160;
  uint64_t v161 = v160;
  swift_retain();
  v201 = (char *)sub_1C2148850();
  sub_1C20EE958(0, &qword_1EA2C7020, (uint64_t (*)(uint64_t))sub_1C20EEB6C, v200);
  uint64_t inited = swift_initStackObject();
  *(void *)(inited + 32) = 4;
  v206 = (void *)(inited + 32);
  uint64_t v163 = MEMORY[0x1E4F66610];
  *(_OWORD *)(inited + 16) = xmmword_1C215B3A0;
  *(void *)(inited + 4sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = v212;
  *(void *)(inited + 48) = v163;
  uint64_t v164 = v161;
  *(void *)(inited + 56) = v161;
  *(void *)(inited + 64) = 2;
  uint64_t v165 = swift_allocObject();
  *(_OWORD *)(v165 + 16) = v210;
  uint64_t v166 = v211;
  *(void *)(v165 + 32) = v211;
  *(void *)(v165 + 4sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = v164;
  *(unsigned char *)(swift_allocObject() + qword_1EA2C3C8sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = 0;
  *(_OWORD *)(swift_allocObject() + 16) = v223;
  uint64_t v167 = v166;
  swift_retain();
  swift_retain();
  sub_1C2148500();
  *(void *)(v165 + 48) = sub_1C21489B0();
  uint64_t v168 = MEMORY[0x1E4F66470];
  uint64_t v169 = v221;
  *(void *)(v165 + 56) = MEMORY[0x1E4F66470];
  *(void *)(v165 + 64) = v169;
  *(void *)(v165 + 72) = v168;
  uint64_t v170 = v168;
  swift_retain();
  uint64_t v171 = sub_1C2148850();
  uint64_t v172 = MEMORY[0x1E4F66580];
  *(void *)(inited + 72) = v171;
  *(void *)(inited + 8sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = v172;
  uint64_t v173 = MEMORY[0x1E4F66578];
  *(void *)(inited + 88) = MEMORY[0x1E4F66578];
  *(void *)(inited + 96) = 3;
  v174 = v201;
  *(void *)(inited + 104) = v201;
  *(void *)(inited + 112) = v172;
  *(void *)(inited + 12sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = v173;
  *(void *)(inited + 128) = 5;
  *(void *)(inited + 136) = v174;
  *(void *)(inited + 144) = v172;
  *(void *)(inited + 152) = v173;
  *(void *)(inited + 16sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = 7;
  uint64_t v175 = v203;
  *(void *)(inited + 168) = v203;
  *(void *)(inited + 176) = v172;
  *(void *)(inited + 184) = v173;
  *(void *)(inited + 192) = 8;
  *(void *)(inited + 20sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = v175;
  *(void *)(inited + 208) = v172;
  *(void *)(inited + 216) = v173;
  *(void *)(inited + 224) = 1;
  uint64_t v176 = swift_allocObject();
  *(_OWORD *)(v176 + 16) = v210;
  *(void *)(v176 + 32) = v167;
  *(void *)(v176 + 4sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = v170;
  *(unsigned char *)(swift_allocObject() + qword_1EA2C3C8sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = 0;
  *(_OWORD *)(swift_allocObject() + 16) = v223;
  swift_retain_n();
  swift_retain_n();
  swift_retain();
  sub_1C2148500();
  *(void *)(v176 + 48) = sub_1C21489B0();
  uint64_t v177 = MEMORY[0x1E4F66470];
  uint64_t v178 = v221;
  *(void *)(v176 + 56) = MEMORY[0x1E4F66470];
  *(void *)(v176 + 64) = v178;
  *(void *)(v176 + 72) = v177;
  swift_retain();
  *(void *)(inited + 232) = sub_1C2148850();
  *(void *)(inited + 24sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = MEMORY[0x1E4F66580];
  *(void *)(inited + 248) = MEMORY[0x1E4F66578];
  unint64_t v179 = sub_1C1F4C208(inited);
  swift_setDeallocating();
  sub_1C20EEB6C();
  swift_arrayDestroy();
  uint64_t v180 = v195;
  uint64_t v181 = *(uint64_t *)((char *)v213 + v195);
  sub_1C20EEBDC();
  swift_allocObject();
  swift_retain();
  v182 = sub_1C20EEC70(v179, v181, 0, 0, 0);
  swift_release();
  uint64_t v183 = qword_1EA2C8260;
  *(void *)(v180 + qword_1EA2C826sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = v182;
  uint64_t v184 = v180;
  swift_release();
  uint64_t v185 = swift_allocObject();
  *(_OWORD *)(v185 + 16) = xmmword_1C214FCC0;
  *(void *)(v185 + 32) = v202;
  *(void *)(v185 + 4sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = v177;
  uint64_t v186 = *(void *)(v184 + v183);
  uint64_t v187 = sub_1C20F051C(&qword_1EA2C7038, (void (*)(uint64_t))sub_1C20EEBDC);
  *(void *)(v185 + 48) = v186;
  *(void *)(v185 + 56) = v187;
  swift_retain();
  swift_retain();
  uint64_t v188 = sub_1C2148840();
  swift_retain();
  sub_1C20E5804();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  swift_release();
  sub_1C1F13BC4(v215, (uint64_t (*)(void))sub_1C1F30CC4);
  (*(void (**)(char *, uint64_t))(v214 + 8))(v217, v216);
  return v188;
}

uint64_t sub_1C20E57B4()
{
  return swift_release();
}

uint64_t sub_1C20E5804()
{
  uint64_t v1 = v0;
  sub_1C20EF6E0();
  uint64_t v3 = v2;
  uint64_t v17 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  char v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = *(void *)(v0 + qword_1EA2C8258);
  swift_allocObject();
  swift_weakInit();
  sub_1C20EEA6C(0, (unint64_t *)&qword_1EA2C4C88, type metadata accessor for HKMedicationScheduleType);
  sub_1C20EF828();
  swift_retain();
  uint64_t v6 = sub_1C214A0F0();
  swift_release();
  swift_release();
  *(void *)(v1 + qword_1EA2C81F8) = v6;
  swift_release();
  uint64_t v19 = *(void *)(v1 + qword_1EA2C8218);
  swift_allocObject();
  swift_weakInit();
  sub_1C20EE9F0(0, &qword_1EA2C6FE0, &qword_1EA2C6FE8, (uint64_t)&type metadata for FrequencyInterval);
  sub_1C20EF798(&qword_1EA2C7068, &qword_1EA2C6FE0, &qword_1EA2C6FE8, (uint64_t)&type metadata for FrequencyInterval);
  swift_retain();
  uint64_t v7 = sub_1C214A0F0();
  swift_release();
  swift_release();
  *(void *)(v1 + qword_1EA2C81B8) = v7;
  swift_release();
  uint64_t v19 = *(void *)(v1 + qword_1EA2C8220);
  swift_allocObject();
  swift_weakInit();
  sub_1C20EEA6C(0, &qword_1EA2C6FF0, sub_1C20EEAD0);
  sub_1C20EF8C0();
  swift_retain();
  uint64_t v8 = sub_1C214A0F0();
  swift_release();
  swift_release();
  *(void *)(v1 + qword_1EA2C81C8) = v8;
  swift_release();
  uint64_t v19 = *(void *)(v1 + qword_1EA2C8250);
  swift_allocObject();
  swift_weakInit();
  sub_1C20EEA6C(0, (unint64_t *)&qword_1EA2C6088, sub_1C20EEB38);
  sub_1C20EF934();
  swift_retain();
  uint64_t v9 = sub_1C214A0F0();
  swift_release();
  swift_release();
  *(void *)(v1 + qword_1EA2C81Dsub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = v9;
  swift_release();
  uint64_t v19 = *(void *)(v1 + qword_1EA2C8228);
  swift_allocObject();
  swift_weakInit();
  sub_1C20EEA6C(0, (unint64_t *)&qword_1EA2C5088, MEMORY[0x1E4F27928]);
  sub_1C20EF9A8();
  swift_retain();
  uint64_t v10 = sub_1C214A0F0();
  swift_release();
  swift_release();
  *(void *)(v1 + qword_1EA2C81D8) = v10;
  swift_release();
  uint64_t v19 = *(void *)(v1 + qword_1EA2C8230);
  swift_allocObject();
  swift_weakInit();
  sub_1C20EEA6C(0, (unint64_t *)&qword_1EA2C5090, sub_1C1F30CC4);
  sub_1C20EFA1C();
  swift_retain();
  uint64_t v11 = sub_1C214A0F0();
  swift_release();
  swift_release();
  *(void *)(v1 + qword_1EA2C81Esub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = v11;
  swift_release();
  uint64_t v12 = *(void *)(v1 + qword_1EA2C8240);
  uint64_t v18 = *(void *)(v1 + qword_1EA2C8238);
  uint64_t v19 = v12;
  sub_1C20EE9F0(0, &qword_1EA2C7008, &qword_1EA2C7010, (uint64_t)&type metadata for PauseUsePeriod);
  sub_1C20EF798(&qword_1EA2C7060, &qword_1EA2C7008, &qword_1EA2C7010, (uint64_t)&type metadata for PauseUsePeriod);
  sub_1C214A010();
  swift_allocObject();
  swift_weakInit();
  sub_1C20F051C(&qword_1EA2C7078, (void (*)(uint64_t))sub_1C20EF6E0);
  uint64_t v13 = sub_1C214A0F0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v5, v3);
  *(void *)(v1 + qword_1EA2C81Fsub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = v13;
  swift_release();
  uint64_t v19 = *(void *)(v1 + qword_1EA2C81A0);
  swift_allocObject();
  swift_weakInit();
  sub_1C20EEA6C(0, (unint64_t *)&qword_1EA2C3978, (void (*)(uint64_t))sub_1C1F89100);
  sub_1C20EFAA0();
  swift_retain();
  uint64_t v14 = sub_1C214A0F0();
  swift_release();
  swift_release();
  *(void *)(v1 + qword_1EA2C81E8) = v14;
  return swift_release();
}

void sub_1C20E5F2C(void *a1)
{
  if (*a1 != 3)
  {
    swift_beginAccess();
    if (swift_weakLoadStrong())
    {
      swift_retain();
      swift_release();
      swift_beginAccess();
      if (swift_weakLoadStrong())
      {
        id v1 = sub_1C20E6000();
        swift_release();
      }
      else
      {
        id v1 = 0;
      }
      sub_1C2149E70();
      swift_release();
    }
  }
}

id sub_1C20E6000()
{
  id v1 = v0;
  uint64_t v258 = *v0;
  uint64_t v242 = sub_1C2147D30();
  uint64_t v243 = *(void *)(v242 - 8);
  MEMORY[0x1F4188790](v242);
  v241 = (char *)&v229 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v271 = type metadata accessor for Dosage();
  uint64_t v251 = *(void *)(v271 - 8);
  uint64_t v3 = MEMORY[0x1F4188790](v271);
  v244 = (char *)&v229 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v229 - v5;
  uint64_t v259 = sub_1C21497F0();
  uint64_t v260 = *(void *)(v259 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v259);
  v253 = (char *)&v229 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  v248 = (char *)&v229 - v10;
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  v236 = (char *)&v229 - v12;
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  v240 = (char *)&v229 - v14;
  MEMORY[0x1F4188790](v13);
  v252 = (char *)&v229 - v15;
  uint64_t v254 = type metadata accessor for WeekdaysAndDosages(0);
  uint64_t v256 = *(void *)(v254 - 8);
  uint64_t v16 = MEMORY[0x1F4188790](v254);
  uint64_t v249 = (uint64_t)&v229 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x1F4188790](v16);
  uint64_t v247 = (uint64_t)&v229 - v19;
  uint64_t v20 = MEMORY[0x1F4188790](v18);
  uint64_t v255 = (uint64_t)&v229 - v21;
  MEMORY[0x1F4188790](v20);
  uint64_t v23 = (char *)&v229 - v22;
  uint64_t v24 = sub_1C2147B20();
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = MEMORY[0x1F4188790](v24);
  v257 = (char *)&v229 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = MEMORY[0x1F4188790](v26);
  uint64_t v30 = (char *)&v229 - v29;
  MEMORY[0x1F4188790](v28);
  v270 = (char *)&v229 - v31;
  sub_1C1F30CC4(0);
  uint64_t v33 = MEMORY[0x1F4188790](v32 - 8);
  uint64_t v234 = (uint64_t)&v229 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = MEMORY[0x1F4188790](v33);
  uint64_t v233 = (uint64_t)&v229 - v36;
  uint64_t v37 = MEMORY[0x1F4188790](v35);
  uint64_t v235 = (uint64_t)&v229 - v38;
  uint64_t v39 = MEMORY[0x1F4188790](v37);
  uint64_t v232 = (uint64_t)&v229 - v40;
  uint64_t v41 = MEMORY[0x1F4188790](v39);
  uint64_t v230 = (uint64_t)&v229 - v42;
  uint64_t v43 = MEMORY[0x1F4188790](v41);
  uint64_t v229 = (uint64_t)&v229 - v44;
  uint64_t v45 = MEMORY[0x1F4188790](v43);
  uint64_t v231 = (uint64_t)&v229 - v46;
  MEMORY[0x1F4188790](v45);
  uint64_t v48 = (char *)&v229 - v47;
  uint64_t v49 = sub_1C2147AC0();
  uint64_t v50 = *(void *)(v49 - 8);
  uint64_t v263 = v49;
  uint64_t v264 = v50;
  MEMORY[0x1F4188790](v49);
  id v52 = (char *)&v229 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = sub_1C2147CF0();
  uint64_t v54 = *(void *)(v53 - 8);
  uint64_t v261 = v53;
  uint64_t v262 = v54;
  MEMORY[0x1F4188790](v53);
  uint64_t v56 = (char *)&v229 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v57 = objc_msgSend(*(id *)((char *)v0 + qword_1EA2C8200), sel_currentCalendar);
  v269 = v56;
  sub_1C2147C60();

  swift_retain();
  v266 = v52;
  sub_1C2149E90();
  swift_release();
  swift_retain();
  v265 = v48;
  sub_1C2149E90();
  swift_release();
  swift_retain();
  sub_1C2149E90();
  swift_release();
  uint64_t v58 = v274;
  if (!v274) {
    uint64_t v58 = MEMORY[0x1E4FBC860];
  }
  uint64_t v268 = v58;
  swift_retain();
  sub_1C2149E90();
  swift_release();
  uint64_t v59 = v274;
  swift_retain();
  sub_1C2149E90();
  swift_release();
  uint64_t v239 = v274;
  int v246 = v275;
  swift_retain();
  sub_1C2149E90();
  swift_release();
  uint64_t v238 = v274;
  int v245 = v275;
  uint64_t v237 = qword_1EA2C8250;
  swift_retain();
  sub_1C2149E90();
  swift_release();
  uint64_t v60 = v274;
  sub_1C2147B10();
  v250 = v1;
  uint64_t v61 = *(void **)((char *)v1 + qword_1EA2C6FC8);
  uint64_t v267 = v25;
  if (v61)
  {
    uint64_t v62 = v59;
    uint64_t v63 = v25;
    id v64 = v61;
    id v65 = objc_msgSend(v64, sel_UUID);
    uint64_t v66 = v60;
    uint64_t v67 = v257;
    sub_1C2147B00();

    (*(void (**)(char *, uint64_t))(v63 + 8))(v30, v24);
    uint64_t v68 = v63;
    uint64_t v59 = v62;
    uint64_t v69 = *(void (**)(char *, char *, uint64_t))(v68 + 32);
    uint64_t v70 = v67;
    uint64_t v60 = v66;
    v69(v30, v70, v24);
  }
  else
  {
    uint64_t v69 = *(void (**)(char *, char *, uint64_t))(v25 + 32);
  }
  uint64_t v71 = v270;
  v69(v270, v30, v24);
  if (v59 == 4)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    id v72 = v253;
    sub_1C21497A0();
    unint64_t v73 = sub_1C21497E0();
    os_log_type_t v74 = sub_1C214ABD0();
    BOOL v75 = os_log_type_enabled(v73, v74);
    uint64_t v76 = v267;
    if (v75)
    {
      unint64_t v77 = (uint8_t *)swift_slowAlloc();
      uint64_t v78 = swift_slowAlloc();
      uint64_t v274 = v78;
      *(_DWORD *)unint64_t v77 = 136315138;
      uint64_t v79 = sub_1C214BC10();
      uint64_t v272 = sub_1C1F6FD54(v79, v80, &v274);
      sub_1C214B530();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C1F0B000, v73, v74, "[%s] Frequency is nil or as needed. Unable to create schedule.", v77, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C8754730](v78, -1, -1);
      MEMORY[0x1C8754730](v77, -1, -1);

      (*(void (**)(char *, uint64_t))(v260 + 8))(v72, v259);
      (*(void (**)(char *, uint64_t))(v76 + 8))(v270, v24);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v260 + 8))(v72, v259);
      (*(void (**)(char *, uint64_t))(v76 + 8))(v71, v24);
    }
    goto LABEL_21;
  }
  uint64_t v81 = *(void *)(v60 + 16);
  v257 = (char *)v24;
  if (v81)
  {
    uint64_t v82 = v59;
    uint64_t v83 = v60 + ((*(unsigned __int8 *)(v256 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v256 + 80));
    uint64_t v84 = *(void *)(v256 + 72);
    swift_bridgeObjectRetain();
    uint64_t v85 = v81 - 1;
    uint64_t v86 = v254;
    do
    {
      sub_1C20F05FC(v83, (uint64_t)v23, type metadata accessor for WeekdaysAndDosages);
      uint64_t v87 = *(void *)(*(void *)&v23[*(int *)(v86 + 24)] + 16);
      sub_1C1F13BC4((uint64_t)v23, type metadata accessor for WeekdaysAndDosages);
      if (v87) {
        BOOL v88 = 1;
      }
      else {
        BOOL v88 = v85 == 0;
      }
      --v85;
      v83 += v84;
    }
    while (!v88);
    swift_bridgeObjectRelease();
    uint64_t v59 = v82;
    BOOL v88 = v82 == 3;
    uint64_t v24 = (uint64_t)v257;
    uint64_t v71 = v270;
    if (v88 || v59 == 5)
    {
      if (!v87) {
        goto LABEL_30;
      }
      goto LABEL_28;
    }
  }
  else
  {
    uint64_t v86 = v254;
    if (v59 == 3 || v59 == 5)
    {
LABEL_30:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v91 = v252;
      sub_1C21497A0();
      int v92 = sub_1C21497E0();
      os_log_type_t v93 = sub_1C214ABD0();
      BOOL v94 = os_log_type_enabled(v92, v93);
      uint64_t v95 = (uint64_t)v269;
      uint64_t v96 = v267;
      if (v94)
      {
        uint64_t v97 = (uint8_t *)swift_slowAlloc();
        uint64_t v98 = swift_slowAlloc();
        uint64_t v274 = v98;
        *(_DWORD *)uint64_t v97 = 136315138;
        uint64_t v99 = sub_1C214BC10();
        uint64_t v272 = sub_1C1F6FD54(v99, v100, &v274);
        sub_1C214B530();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1C1F0B000, v92, v93, "[%s] Dosages is nil. Unable to create schedule.", v97, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C8754730](v98, -1, -1);
        MEMORY[0x1C8754730](v97, -1, -1);

        (*(void (**)(char *, uint64_t))(v260 + 8))(v252, v259);
        (*(void (**)(char *, uint64_t))(v96 + 8))(v270, v24);
      }
      else
      {

        (*(void (**)(char *, uint64_t))(v260 + 8))(v91, v259);
        (*(void (**)(char *, uint64_t))(v96 + 8))(v71, v24);
      }
      sub_1C1F13BC4((uint64_t)v265, (uint64_t (*)(void))sub_1C1F30CC4);
      (*(void (**)(char *, uint64_t))(v264 + 8))(v266, v263);
      (*(void (**)(uint64_t, uint64_t))(v262 + 8))(v95, v261);
      return 0;
    }
  }
  if (!*(void *)(v268 + 16)) {
    goto LABEL_30;
  }
  if ((unint64_t)(v59 - 7) <= 1 && (v246 == 255 || v245 == 255))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v119 = v240;
    sub_1C21497A0();
    uint64_t v120 = sub_1C21497E0();
    os_log_type_t v121 = sub_1C214ABD0();
    if (!os_log_type_enabled(v120, v121))
    {

      (*(void (**)(char *, uint64_t))(v260 + 8))(v119, v259);
      (*(void (**)(char *, uint64_t))(v267 + 8))(v71, v24);
LABEL_21:
      sub_1C1F13BC4((uint64_t)v265, (uint64_t (*)(void))sub_1C1F30CC4);
      (*(void (**)(char *, uint64_t))(v264 + 8))(v266, v263);
      (*(void (**)(char *, uint64_t))(v262 + 8))(v269, v261);
      return 0;
    }
    uint64_t v122 = -1;
    uint64_t v123 = swift_slowAlloc();
    uint64_t v124 = swift_slowAlloc();
    uint64_t v274 = v124;
    *(_DWORD *)uint64_t v123 = 136315650;
    uint64_t v125 = sub_1C214BC10();
    uint64_t v272 = sub_1C1F6FD54(v125, v126, &v274);
    sub_1C214B530();
    swift_bridgeObjectRelease();
    *(_WORD *)(v123 + 12) = 2048;
    uint64_t v127 = v267;
    if (v246 == 255
      || (uint64_t v122 = v239, (v246 & 1) != 0)
      || (uint64_t v122 = 7 * v239, (unsigned __int128)(v239 * (__int128)7) >> 64 == (7 * v239) >> 63))
    {
      uint64_t v272 = v122;
      sub_1C214B530();
      *(_WORD *)(v123 + 22) = 2048;
      if (v245 == 255)
      {
        uint64_t v128 = -1;
        uint64_t v129 = (uint64_t)v269;
        uint64_t v131 = v263;
        uint64_t v130 = v264;
      }
      else
      {
        uint64_t v129 = (uint64_t)v269;
        uint64_t v131 = v263;
        uint64_t v130 = v264;
        uint64_t v128 = v238;
        if ((v245 & 1) == 0)
        {
          uint64_t v128 = 7 * v238;
          if ((unsigned __int128)(v238 * (__int128)7) >> 64 != (7 * v238) >> 63) {
            goto LABEL_161;
          }
        }
      }
      uint64_t v272 = v128;
      sub_1C214B530();
      _os_log_impl(&dword_1C1F0B000, v120, v121, "[%s] No take for value %ld or pause For Value %ld. Unable to create schedule.", (uint8_t *)v123, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x1C8754730](v124, -1, -1);
      MEMORY[0x1C8754730](v123, -1, -1);

      (*(void (**)(char *, uint64_t))(v260 + 8))(v119, v259);
      (*(void (**)(char *, char *))(v127 + 8))(v270, v257);
      sub_1C1F13BC4((uint64_t)v265, (uint64_t (*)(void))sub_1C1F30CC4);
      (*(void (**)(char *, uint64_t))(v130 + 8))(v266, v131);
      (*(void (**)(uint64_t, uint64_t))(v262 + 8))(v129, v261);
      return 0;
    }
LABEL_160:
    __break(1u);
LABEL_161:
    __break(1u);
LABEL_162:
    LODWORD(varssub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = 0;
    v276[1] = 1092;
    LOBYTE(v276[0]) = 2;
    sub_1C214B990();
    __break(1u);
    swift_release();
    __break(1u);
    JUMPOUT(0x1C20E896CLL);
  }
LABEL_28:
  if (!v81) {
    goto LABEL_54;
  }
  v252 = (char *)v59;
  uint64_t v254 = v60 + ((*(unsigned __int8 *)(v256 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v256 + 80));
  v253 = *(char **)(v256 + 72);
  swift_bridgeObjectRetain();
  uint64_t v89 = 0;
  uint64_t v90 = v255;
  while (2)
  {
    sub_1C20F05FC(v254 + (void)v253 * v89, v90, type metadata accessor for WeekdaysAndDosages);
    uint64_t v103 = *(void *)(v90 + *(int *)(v86 + 24));
    uint64_t v104 = *(void *)(v103 + 16);
    if (!v104) {
      goto LABEL_36;
    }
    uint64_t v105 = v251;
    uint64_t v106 = v103 + ((*(unsigned __int8 *)(v251 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v251 + 80));
    swift_bridgeObjectRetain();
    uint64_t v107 = *(void *)(v105 + 72);
    do
    {
      sub_1C20F05FC(v106, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for Dosage);
      double v108 = *(double *)&v6[*(int *)(v271 + 24)];
      sub_1C1F13BC4((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for Dosage);
      if (v108 <= 0.0)
      {
        swift_bridgeObjectRelease();
        sub_1C1F13BC4(v255, type metadata accessor for WeekdaysAndDosages);
        swift_bridgeObjectRelease();
        uint64_t v109 = v267;
        uint64_t v24 = (uint64_t)v257;
LABEL_43:
        swift_bridgeObjectRelease_n();
        uint64_t v110 = v248;
        sub_1C21497A0();
        uint64_t v111 = sub_1C21497E0();
        os_log_type_t v112 = sub_1C214ABD0();
        if (os_log_type_enabled(v111, v112))
        {
          unint64_t v113 = (uint8_t *)swift_slowAlloc();
          uint64_t v114 = swift_slowAlloc();
          uint64_t v274 = v114;
          *(_DWORD *)unint64_t v113 = 136315138;
          uint64_t v115 = sub_1C214BC10();
          uint64_t v116 = v24;
          uint64_t v272 = sub_1C1F6FD54(v115, v117, &v274);
          sub_1C214B530();
          swift_bridgeObjectRelease();
          uint64_t v118 = "[%s] Unable to create schedule with a dosage less than or equal to 0";
LABEL_45:
          _os_log_impl(&dword_1C1F0B000, v111, v112, v118, v113, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1C8754730](v114, -1, -1);
          MEMORY[0x1C8754730](v113, -1, -1);

          (*(void (**)(char *, uint64_t))(v260 + 8))(v110, v259);
          (*(void (**)(char *, uint64_t))(v109 + 8))(v270, v116);
        }
        else
        {
LABEL_86:

          (*(void (**)(char *, uint64_t))(v260 + 8))(v110, v259);
LABEL_87:
          (*(void (**)(char *, uint64_t))(v109 + 8))(v71, v24);
        }
        goto LABEL_21;
      }
      v106 += v107;
      --v104;
    }
    while (v104);
    swift_bridgeObjectRelease();
    uint64_t v24 = (uint64_t)v257;
LABEL_36:
    ++v89;
    uint64_t v90 = v255;
    sub_1C1F13BC4(v255, type metadata accessor for WeekdaysAndDosages);
    if (v89 != v81) {
      continue;
    }
    break;
  }
  swift_bridgeObjectRelease();
  uint64_t v59 = (uint64_t)v252;
LABEL_54:
  uint64_t v132 = swift_bridgeObjectRelease();
  uint64_t v109 = v267;
  uint64_t v133 = v268;
  uint64_t v134 = *(void *)(v268 + 16);
  uint64_t v135 = v258;
  if (v134)
  {
    v252 = (char *)v59;
    uint64_t v136 = v268 + ((*(unsigned __int8 *)(v251 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v251 + 80));
    uint64_t v137 = *(void *)(v251 + 72);
    swift_bridgeObjectRetain();
    uint64_t v138 = (uint64_t)v244;
    do
    {
      sub_1C20F05FC(v136, v138, (uint64_t (*)(void))type metadata accessor for Dosage);
      double v139 = *(double *)(v138 + *(int *)(v271 + 24));
      sub_1C1F13BC4(v138, (uint64_t (*)(void))type metadata accessor for Dosage);
      if (v139 <= 0.0) {
        goto LABEL_43;
      }
      v136 += v137;
      --v134;
    }
    while (v134);
    uint64_t v132 = swift_bridgeObjectRelease();
    uint64_t v59 = (uint64_t)v252;
  }
  switch(v59)
  {
    case 0:
      swift_bridgeObjectRelease();
      goto LABEL_87;
    case 1:
      uint64_t v274 = MEMORY[0x1E4FBC860];
      uint64_t v172 = *(void *)(v133 + 16);
      if (v172)
      {
        uint64_t v173 = v133 + ((*(unsigned __int8 *)(v251 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v251 + 80));
        uint64_t v174 = *(void *)(v251 + 72);
        swift_bridgeObjectRetain();
        uint64_t v175 = (char *)v250;
        do
        {
          sub_1C20E9F00(&v274, v173, v175, v133, v135, &v272);
          swift_bridgeObjectRelease();
          uint64_t v274 = v272;
          v173 += v174;
          --v172;
        }
        while (v172);
        swift_bridgeObjectRelease_n();
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v175 = (char *)v250;
      }
      v162 = (void *)sub_1C2147AE0();
      id v206 = objc_msgSend(*(id *)&v175[qword_1EA2C6FD0], sel_semanticIdentifier);
      id v164 = objc_msgSend(v206, sel_stringValue);

      if (!v164)
      {
        sub_1C214A5F0();
        id v164 = (id)sub_1C214A5B0();
        swift_bridgeObjectRelease();
      }
      uint64_t v207 = v241;
      sub_1C2147CC0();
      uint64_t v166 = (void *)sub_1C2147D00();
      (*(void (**)(char *, uint64_t))(v243 + 8))(v207, v242);
      uint64_t v167 = (void *)sub_1C2147A00();
      uint64_t v208 = v235;
      sub_1C20F05FC((uint64_t)v265, v235, (uint64_t (*)(void))sub_1C1F30CC4);
      uint64_t v170 = v263;
      uint64_t v209 = v264;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v264 + 48))(v208, 1, v263) == 1)
      {
        uint64_t v171 = 0;
      }
      else
      {
        uint64_t v171 = (void *)sub_1C2147A00();
        (*(void (**)(uint64_t, uint64_t))(v209 + 8))(v208, v170);
      }
      uint64_t v197 = v209;
      long long v210 = self;
      sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8D8);
      v199 = (void *)sub_1C214A770();
      swift_bridgeObjectRelease();
      id v200 = objc_msgSend(v210, sel_everyXDaysScheduleWithUUID_medicationIdentifier_createdUTCOffset_startDateTime_endDateTime_timeIntervals_cycleStartDateComponents_note_, v162, v164, v166, v167, v171, v199, 0, 0);
      goto LABEL_154;
    case 2:
      MEMORY[0x1F4188790](v132);
      uint64_t vars0 = (uint64_t)v269;
      sub_1C201A0A0((void (*)(uint64_t *__return_ptr, uint64_t))sub_1C20F0458, (uint64_t)v276, v133);
      swift_bridgeObjectRelease();
      v162 = (void *)sub_1C2147AE0();
      id v180 = objc_msgSend(*(id *)((char *)v250 + qword_1EA2C6FD0), sel_semanticIdentifier);
      id v164 = objc_msgSend(v180, sel_stringValue);

      if (!v164)
      {
        sub_1C214A5F0();
        id v164 = (id)sub_1C214A5B0();
        swift_bridgeObjectRelease();
      }
      uint64_t v181 = v241;
      sub_1C2147CC0();
      uint64_t v166 = (void *)sub_1C2147D00();
      (*(void (**)(char *, uint64_t))(v243 + 8))(v181, v242);
      uint64_t v167 = (void *)sub_1C2147A00();
      uint64_t v182 = v232;
      sub_1C20F05FC((uint64_t)v265, v232, (uint64_t (*)(void))sub_1C1F30CC4);
      uint64_t v170 = v263;
      uint64_t v183 = v264;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v264 + 48))(v182, 1, v263) == 1)
      {
        uint64_t v171 = 0;
      }
      else
      {
        uint64_t v171 = (void *)sub_1C2147A00();
        (*(void (**)(uint64_t, uint64_t))(v183 + 8))(v182, v170);
      }
      uint64_t v197 = v183;
      uint64_t v202 = self;
      sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8D8);
      v199 = (void *)sub_1C214A770();
      swift_bridgeObjectRelease();
      id v200 = objc_msgSend(v202, sel_dailyScheduleWithUUID_medicationIdentifier_createdUTCOffset_startDateTime_endDateTime_timeIntervals_note_, v162, v164, v166, v167, v171, v199, 0);
      goto LABEL_154;
    case 3:
    case 5:
      swift_bridgeObjectRelease();
      uint64_t v140 = v250;
      swift_retain();
      sub_1C2149E90();
      swift_release();
      char v141 = sub_1C20E9230(v274);
      swift_bridgeObjectRelease();
      if (v141)
      {
        swift_retain();
        sub_1C2149E90();
        swift_release();
        uint64_t v142 = *(void *)(v274 + 16);
        if (!v142)
        {
          uint64_t v145 = MEMORY[0x1E4FBC860];
LABEL_144:
          swift_bridgeObjectRelease();
          size_t v211 = sub_1C201E340(v145);
          swift_bridgeObjectRelease();
          uint64_t v274 = v211;
          swift_bridgeObjectRetain();
          sub_1C20E3814(&v274, (uint64_t (*)(void))type metadata accessor for Dosage, (uint64_t (*)(uint64_t))sub_1C20FB260, sub_1C20EB570);
          uint64_t v212 = v264;
          swift_bridgeObjectRelease();
          uint64_t v213 = v274;
          uint64_t v271 = sub_1C2147AE0();
          id v214 = objc_msgSend(*(id *)((char *)v140 + qword_1EA2C6FD0), sel_semanticIdentifier);
          id v215 = objc_msgSend(v214, sel_stringValue);

          if (!v215)
          {
            sub_1C214A5F0();
            id v215 = (id)sub_1C214A5B0();
            swift_bridgeObjectRelease();
          }
          uint64_t v216 = v241;
          sub_1C2147CC0();
          uint64_t v268 = sub_1C2147D00();
          (*(void (**)(char *, uint64_t))(v243 + 8))(v216, v242);
          v217 = (void *)sub_1C2147A00();
          uint64_t v218 = v231;
          sub_1C20F05FC((uint64_t)v265, v231, (uint64_t (*)(void))sub_1C1F30CC4);
          uint64_t v219 = v263;
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v212 + 48))(v218, 1, v263) == 1)
          {
            uint64_t v220 = 0;
          }
          else
          {
            uint64_t v220 = (void *)sub_1C2147A00();
            (*(void (**)(uint64_t, uint64_t))(v212 + 8))(v218, v219);
          }
          uint64_t v221 = self;
          MEMORY[0x1F4188790](v221);
          uint64_t v222 = (uint64_t)v269;
          sub_1C201A0A0((void (*)(uint64_t *__return_ptr, uint64_t))sub_1C20F0704, (uint64_t)v276, v213);
          swift_release();
          sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8D8);
          long long v223 = (void *)sub_1C214A770();
          swift_bridgeObjectRelease();
          uint64_t v224 = (void *)v221;
          long long v225 = (void *)v271;
          uint64_t v226 = (void *)v268;
          id v101 = objc_msgSend(v224, sel_dailyScheduleWithUUID_medicationIdentifier_createdUTCOffset_startDateTime_endDateTime_timeIntervals_note_, v271, v215, v268, v217, v220, v223, 0);

          (*(void (**)(char *, char *))(v267 + 8))(v270, v257);
          sub_1C1F13BC4((uint64_t)v265, (uint64_t (*)(void))sub_1C1F30CC4);
          (*(void (**)(char *, uint64_t))(v212 + 8))(v266, v219);
          (*(void (**)(uint64_t, uint64_t))(v262 + 8))(v222, v261);
          return v101;
        }
        uint64_t v143 = v274 + ((*(unsigned __int8 *)(v256 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v256 + 80));
        uint64_t v144 = *(void *)(v256 + 72);
        uint64_t v268 = v274;
        swift_bridgeObjectRetain();
        uint64_t v145 = MEMORY[0x1E4FBC860];
        while (1)
        {
          uint64_t v146 = *(void *)(v143 + *(int *)(v86 + 24));
          uint64_t v147 = *(void *)(v146 + 16);
          int64_t v148 = *(void *)(v145 + 16);
          int64_t v149 = v148 + v147;
          if (__OFADD__(v148, v147)) {
            goto LABEL_156;
          }
          swift_bridgeObjectRetain();
          int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          if (isUniquelyReferenced_nonNull_native && v149 <= *(void *)(v145 + 24) >> 1)
          {
            if (*(void *)(v146 + 16)) {
              goto LABEL_74;
            }
          }
          else
          {
            if (v148 <= v149) {
              int64_t v151 = v148 + v147;
            }
            else {
              int64_t v151 = v148;
            }
            uint64_t v145 = sub_1C1F3AA7C(isUniquelyReferenced_nonNull_native, v151, 1, v145);
            if (*(void *)(v146 + 16))
            {
LABEL_74:
              uint64_t v152 = *(void *)(v145 + 16);
              if ((*(void *)(v145 + 24) >> 1) - v152 < v147) {
                goto LABEL_158;
              }
              unint64_t v153 = (*(unsigned __int8 *)(v251 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v251 + 80);
              uint64_t v154 = *(void *)(v251 + 72);
              unint64_t v155 = v145 + v153 + v154 * v152;
              if (v146 + v153 < v155 + v154 * v147 && v155 < v146 + v153 + v154 * v147) {
                goto LABEL_162;
              }
              swift_arrayInitWithCopy();
              if (v147)
              {
                uint64_t v157 = *(void *)(v145 + 16);
                BOOL v158 = __OFADD__(v157, v147);
                uint64_t v159 = v157 + v147;
                if (v158) {
                  goto LABEL_159;
                }
                *(void *)(v145 + 16) = v159;
              }
              goto LABEL_64;
            }
          }
          if (v147) {
            goto LABEL_157;
          }
LABEL_64:
          swift_bridgeObjectRelease();
          v143 += v144;
          if (!--v142)
          {
            swift_bridgeObjectRelease();
            uint64_t v140 = v250;
            goto LABEL_144;
          }
        }
      }
      uint64_t v268 = sub_1C20E9708();
      swift_retain();
      sub_1C2149E90();
      swift_release();
      uint64_t v184 = v274;
      uint64_t v185 = MEMORY[0x1E4FBC860];
      uint64_t v272 = MEMORY[0x1E4FBC860];
      uint64_t v271 = *(void *)(v274 + 16);
      if (!v271) {
        goto LABEL_120;
      }
      unint64_t v186 = 0;
      break;
    case 7:
      uint64_t v274 = v238;
      unsigned __int8 v275 = v245;
      uint64_t v272 = v239;
      char v273 = v246;
      sub_1C20EFB14(v133, (uint64_t)v269, (uint64_t)&v274, &v272);
      swift_bridgeObjectRelease();
      v162 = (void *)sub_1C2147AE0();
      id v163 = objc_msgSend(*(id *)((char *)v250 + qword_1EA2C6FD0), sel_semanticIdentifier);
      id v164 = objc_msgSend(v163, sel_stringValue);

      if (!v164)
      {
        sub_1C214A5F0();
        id v164 = (id)sub_1C214A5B0();
        swift_bridgeObjectRelease();
      }
      uint64_t v165 = v241;
      sub_1C2147CC0();
      uint64_t v166 = (void *)sub_1C2147D00();
      (*(void (**)(char *, uint64_t))(v243 + 8))(v165, v242);
      uint64_t v167 = (void *)sub_1C2147A00();
      uint64_t v168 = v233;
      sub_1C20F05FC((uint64_t)v265, v233, (uint64_t (*)(void))sub_1C1F30CC4);
      uint64_t v170 = v263;
      uint64_t v169 = v264;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v264 + 48))(v168, 1, v263) == 1)
      {
        uint64_t v171 = 0;
      }
      else
      {
        uint64_t v171 = (void *)sub_1C2147A00();
        (*(void (**)(uint64_t, uint64_t))(v169 + 8))(v168, v170);
      }
      uint64_t v197 = v169;
      v198 = self;
      sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8D8);
      v199 = (void *)sub_1C214A770();
      swift_bridgeObjectRelease();
      id v200 = objc_msgSend(v198, sel_activeXDaysPauseYDaysWithUUID_medicationIdentifier_createdUTCOffset_startDateTime_endDateTime_timeIntervals_cycleStartDateComponents_note_, v162, v164, v166, v167, v171, v199, 0, 0);
      goto LABEL_154;
    case 8:
      uint64_t v274 = v238;
      unsigned __int8 v275 = v245;
      uint64_t v272 = v239;
      char v273 = v246;
      sub_1C20EFDEC(v133, (uint64_t)v269, (uint64_t)&v274, (uint64_t)&v272);
      swift_bridgeObjectRelease();
      v162 = (void *)sub_1C2147AE0();
      id v176 = objc_msgSend(*(id *)((char *)v250 + qword_1EA2C6FD0), sel_semanticIdentifier);
      id v164 = objc_msgSend(v176, sel_stringValue);

      if (!v164)
      {
        sub_1C214A5F0();
        id v164 = (id)sub_1C214A5B0();
        swift_bridgeObjectRelease();
      }
      uint64_t v177 = v241;
      sub_1C2147CC0();
      uint64_t v166 = (void *)sub_1C2147D00();
      (*(void (**)(char *, uint64_t))(v243 + 8))(v177, v242);
      uint64_t v167 = (void *)sub_1C2147A00();
      uint64_t v178 = v234;
      sub_1C20F05FC((uint64_t)v265, v234, (uint64_t (*)(void))sub_1C1F30CC4);
      uint64_t v170 = v263;
      uint64_t v179 = v264;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v264 + 48))(v178, 1, v263) == 1)
      {
        uint64_t v171 = 0;
      }
      else
      {
        uint64_t v171 = (void *)sub_1C2147A00();
        (*(void (**)(uint64_t, uint64_t))(v179 + 8))(v178, v170);
      }
      uint64_t v197 = v179;
      v201 = self;
      sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8D8);
      v199 = (void *)sub_1C214A770();
      swift_bridgeObjectRelease();
      id v200 = objc_msgSend(v201, sel_activeXWeeksPauseYWeeksWithUUID_medicationIdentifier_createdUTCOffset_startDateTime_endDateTime_timeIntervals_cycleStartDateComponents_note_, v162, v164, v166, v167, v171, v199, 0, 0);
      goto LABEL_154;
    default:
      swift_bridgeObjectRelease();
      uint64_t v110 = v236;
      sub_1C21497A0();
      uint64_t v111 = sub_1C21497E0();
      os_log_type_t v112 = sub_1C214ABD0();
      if (!os_log_type_enabled(v111, v112)) {
        goto LABEL_86;
      }
      unint64_t v113 = (uint8_t *)swift_slowAlloc();
      uint64_t v114 = swift_slowAlloc();
      uint64_t v274 = v114;
      *(_DWORD *)unint64_t v113 = 136315138;
      uint64_t v160 = sub_1C214BC10();
      uint64_t v116 = v24;
      uint64_t v272 = sub_1C1F6FD54(v160, v161, &v274);
      sub_1C214B530();
      swift_bridgeObjectRelease();
      uint64_t v118 = "%s encountered unsupported scheduleType when attempting to save schedule.";
      goto LABEL_45;
  }
  do
  {
    if (v186 >= *(void *)(v184 + 16))
    {
      __break(1u);
LABEL_156:
      __break(1u);
LABEL_157:
      __break(1u);
LABEL_158:
      __break(1u);
LABEL_159:
      __break(1u);
      goto LABEL_160;
    }
    unint64_t v187 = (*(unsigned __int8 *)(v256 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v256 + 80);
    uint64_t v188 = *(void *)(v256 + 72);
    uint64_t v189 = v247;
    sub_1C20F05FC(v184 + v187 + v188 * v186, v247, type metadata accessor for WeekdaysAndDosages);
    if (*(void *)(*(void *)(v189 + *(int *)(v86 + 24)) + 16))
    {
      sub_1C20F0478(v189, v249, type metadata accessor for WeekdaysAndDosages);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        sub_1C1F703EC(0, *(void *)(v185 + 16) + 1, 1);
      }
      uint64_t v185 = v272;
      unint64_t v191 = *(void *)(v272 + 16);
      unint64_t v190 = *(void *)(v272 + 24);
      if (v191 >= v190 >> 1)
      {
        sub_1C1F703EC(v190 > 1, v191 + 1, 1);
        uint64_t v185 = v272;
      }
      *(void *)(v185 + 16) = v191 + 1;
      sub_1C20F0478(v249, v185 + v187 + v191 * v188, type metadata accessor for WeekdaysAndDosages);
    }
    else
    {
      sub_1C1F13BC4(v189, type metadata accessor for WeekdaysAndDosages);
    }
    ++v186;
    uint64_t v140 = v250;
  }
  while (v271 != v186);
  uint64_t v185 = v272;
LABEL_120:
  swift_bridgeObjectRelease();
  unint64_t v192 = *(void *)(v185 + 16);
  swift_release();
  v162 = (void *)sub_1C2147AE0();
  id v193 = objc_msgSend(*(id *)((char *)v140 + qword_1EA2C6FD0), sel_semanticIdentifier);
  id v164 = objc_msgSend(v193, sel_stringValue);

  if (v192 <= 1)
  {
    if (!v164)
    {
      sub_1C214A5F0();
      id v164 = (id)sub_1C214A5B0();
      swift_bridgeObjectRelease();
    }
    uint64_t v203 = v241;
    sub_1C2147CC0();
    uint64_t v166 = (void *)sub_1C2147D00();
    (*(void (**)(char *, uint64_t))(v243 + 8))(v203, v242);
    uint64_t v167 = (void *)sub_1C2147A00();
    uint64_t v204 = v230;
    sub_1C20F05FC((uint64_t)v265, v230, (uint64_t (*)(void))sub_1C1F30CC4);
    uint64_t v170 = v263;
    uint64_t v205 = v264;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v264 + 48))(v204, 1, v263) == 1)
    {
      uint64_t v171 = 0;
    }
    else
    {
      uint64_t v171 = (void *)sub_1C2147A00();
      (*(void (**)(uint64_t, uint64_t))(v205 + 8))(v204, v170);
    }
    uint64_t v197 = v205;
    uint64_t v228 = self;
    sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8D8);
    v199 = (void *)sub_1C214A770();
    swift_bridgeObjectRelease();
    id v200 = objc_msgSend(v228, sel_daysOfWeekScheduleWithUUID_medicationIdentifier_createdUTCOffset_startDateTime_endDateTime_timeIntervals_note_, v162, v164, v166, v167, v171, v199, 0);
  }
  else
  {
    if (!v164)
    {
      sub_1C214A5F0();
      id v164 = (id)sub_1C214A5B0();
      swift_bridgeObjectRelease();
    }
    uint64_t v194 = v241;
    sub_1C2147CC0();
    uint64_t v166 = (void *)sub_1C2147D00();
    (*(void (**)(char *, uint64_t))(v243 + 8))(v194, v242);
    uint64_t v167 = (void *)sub_1C2147A00();
    uint64_t v195 = v229;
    sub_1C20F05FC((uint64_t)v265, v229, (uint64_t (*)(void))sub_1C1F30CC4);
    uint64_t v170 = v263;
    uint64_t v196 = v264;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v264 + 48))(v195, 1, v263) == 1)
    {
      uint64_t v171 = 0;
    }
    else
    {
      uint64_t v171 = (void *)sub_1C2147A00();
      (*(void (**)(uint64_t, uint64_t))(v196 + 8))(v195, v170);
    }
    uint64_t v197 = v196;
    uint64_t v227 = self;
    sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8D8);
    v199 = (void *)sub_1C214A770();
    swift_bridgeObjectRelease();
    id v200 = objc_msgSend(v227, sel_differentDosesDaysOfWeekScheduleWithUUID_medicationIdentifier_createdUTCOffset_startDateTime_endDateTime_timeIntervals_note_, v162, v164, v166, v167, v171, v199, 0);
  }
LABEL_154:
  id v101 = v200;

  (*(void (**)(char *, char *))(v267 + 8))(v270, v257);
  sub_1C1F13BC4((uint64_t)v265, (uint64_t (*)(void))sub_1C1F30CC4);
  (*(void (**)(char *, uint64_t))(v197 + 8))(v266, v170);
  (*(void (**)(char *, uint64_t))(v262 + 8))(v269, v261);
  return v101;
}

void sub_1C20E8990()
{
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    swift_retain();
    swift_release();
    swift_beginAccess();
    if (swift_weakLoadStrong())
    {
      id v0 = sub_1C20E6000();
      swift_release();
    }
    else
    {
      id v0 = 0;
    }
    sub_1C2149E70();
    swift_release();
  }
}

void sub_1C20E8A58()
{
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    if (sub_1C20E8C54())
    {
      swift_retain();
      id v0 = sub_1C20E6000();
      sub_1C2149E70();
      swift_release();
      swift_release();
    }
    else
    {
      swift_release();
    }
  }
}

uint64_t sub_1C20E8B08()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    swift_beginAccess();
    swift_retain();
    swift_release();
    swift_beginAccess();
    if (swift_weakLoadStrong())
    {
      swift_retain();
      sub_1C2149E90();
      swift_release();
      if (v1 == (void *)4)
      {
        swift_release();
      }
      else
      {
        swift_retain();
        sub_1C2149E90();
        swift_release();
        swift_release();
        if (v1) {
      }
        }
    }
    sub_1C2149E70();
    return swift_release();
  }
  return result;
}

BOOL sub_1C20E8C54()
{
  swift_retain();
  sub_1C2149E90();
  swift_release();
  swift_retain();
  sub_1C2149E90();
  swift_release();
  swift_retain();
  sub_1C2149E90();
  swift_release();
  BOOL result = 0;
  if (v2 != 255)
  {
    swift_retain();
    sub_1C2149E90();
    swift_release();
    if ((v2 & 1) == 0 && v1 == 8) {
      return 1;
    }
    if (v1 == 7 && (v2 & 1) != 0) {
      return 1;
    }
  }
  return result;
}

void MedicationScheduleDataSource.__allocating_init(_:)()
{
}

void MedicationScheduleDataSource.init(_:)()
{
}

void sub_1C20E8DCC()
{
  sub_1C1F13BC4(v0 + qword_1EA2C8208, (uint64_t (*)(void))sub_1C20EE9BC);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_1C20215D4(*(void *)(v0 + qword_1EA2C8210), *(void *)(v0 + qword_1EA2C8210 + 8));
  uint64_t v1 = *(void **)(v0 + qword_1EA2C8200);
}

uint64_t MedicationScheduleDataSource.deinit()
{
  uint64_t v0 = sub_1C2148830();

  sub_1C1F13BC4(v0 + qword_1EA2C8208, (uint64_t (*)(void))sub_1C20EE9BC);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_1C20215D4(*(void *)(v0 + qword_1EA2C8210), *(void *)(v0 + qword_1EA2C8210 + 8));

  return v0;
}

uint64_t MedicationScheduleDataSource.__deallocating_deinit()
{
  MedicationScheduleDataSource.deinit();

  return swift_deallocClassInstance();
}

uint64_t sub_1C20E9220()
{
  return swift_retain();
}

uint64_t sub_1C20E9230(uint64_t a1)
{
  uint64_t v42 = type metadata accessor for WeekdaysAndDosages(0);
  uint64_t v44 = *(void *)(v42 - 8);
  MEMORY[0x1F4188790](v42);
  uint64_t v3 = (char *)&v33 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1C21496A0();
  uint64_t v5 = *(void **)(v4 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  uint64_t v36 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v33 - v9;
  uint64_t v11 = MEMORY[0x1F4188790](v8);
  uint64_t v13 = (char *)&v33 - v12;
  uint64_t v14 = MEMORY[0x1F4188790](v11);
  uint64_t v16 = (char *)&v33 - v15;
  MEMORY[0x1F4188790](v14);
  uint64_t v18 = (char *)&v33 - v17;
  uint64_t v46 = 0;
  uint64_t v43 = sub_1C20F051C(&qword_1EBF0C5F0, MEMORY[0x1E4F66D28]);
  sub_1C214BC00();
  uint64_t v19 = (void (*)(char *, char *, uint64_t))v5[2];
  uint64_t v37 = v16;
  uint64_t v20 = v16;
  uint64_t v21 = v19;
  v19(v13, v20, v4);
  uint64_t v22 = *(void *)(a1 + 16);
  if (v22)
  {
    uint64_t v33 = v18;
    uint64_t v34 = v5;
    uint64_t v23 = v10;
    uint64_t v24 = a1 + ((*(unsigned __int8 *)(v44 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80));
    uint64_t v25 = *(void *)(v44 + 72);
    uint64_t v40 = (void (**)(char *, uint64_t))(v5 + 1);
    uint64_t v41 = v25;
    uint64_t v44 = (uint64_t)(v5 + 4);
    uint64_t v35 = a1;
    swift_bridgeObjectRetain();
    uint64_t v38 = v5 + 2;
    uint64_t v39 = v21;
    uint64_t v26 = v36;
    do
    {
      sub_1C20F05FC(v24, (uint64_t)v3, type metadata accessor for WeekdaysAndDosages);
      uint64_t v27 = &v3[*(int *)(v42 + 20)];
      uint64_t v28 = (void (*)(uint64_t))MEMORY[0x1E4F66D28];
      sub_1C20F051C(&qword_1EA2C3B90, MEMORY[0x1E4F66D28]);
      sub_1C214A750();
      sub_1C214BC00();
      v39(v26, v27, v4);
      sub_1C20F051C(&qword_1EA2C3B98, v28);
      sub_1C214B610();
      sub_1C1F13BC4((uint64_t)v3, type metadata accessor for WeekdaysAndDosages);
      (*v40)(v13, v4);
      uint64_t v29 = *(void (**)(char *, char *, uint64_t))v44;
      (*(void (**)(char *, char *, uint64_t))v44)(v13, v23, v4);
      v24 += v41;
      --v22;
    }
    while (v22);
    uint64_t v44 = v44 & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
    a1 = v35;
    swift_bridgeObjectRelease();
    uint64_t v10 = v23;
    uint64_t v18 = v33;
    uint64_t v5 = v34;
  }
  else
  {
    uint64_t v29 = (void (*)(char *, char *, uint64_t))v5[4];
    uint64_t v44 = (unint64_t)(v5 + 4) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
  }
  v29(v18, v13, v4);
  uint64_t v30 = (void (*)(char *, uint64_t))v5[1];
  v30(v37, v4);
  sub_1C2149630();
  sub_1C20F051C(&qword_1EA2C3B90, MEMORY[0x1E4F66D28]);
  sub_1C214A750();
  sub_1C214A750();
  BOOL v31 = v46 == v45;
  v30(v10, v4);
  v30(v18, v4);
  return v31 & sub_1C20EB408(a1);
}

uint64_t sub_1C20E9708()
{
  uint64_t v62 = sub_1C2147D30();
  uint64_t v1 = *(void *)(v62 - 8);
  MEMORY[0x1F4188790](v62);
  uint64_t v61 = (char *)&v42 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1C21476D0();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](v3);
  uint64_t v60 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v42 - v7;
  uint64_t v59 = type metadata accessor for Dosage();
  uint64_t v48 = *(void *)(v59 - 8);
  MEMORY[0x1F4188790](v59);
  uint64_t v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for WeekdaysAndDosages(0);
  uint64_t v51 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = sub_1C2147CF0();
  uint64_t v43 = *(void *)(v64 - 8);
  uint64_t v14 = MEMORY[0x1F4188790](v64);
  uint64_t v58 = (char *)&v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v42 - v16;
  id v18 = objc_msgSend(*(id *)(v0 + qword_1EA2C8200), sel_currentCalendar);
  uint64_t v63 = v17;
  sub_1C2147C60();

  uint64_t v71 = MEMORY[0x1E4FBC860];
  swift_retain();
  sub_1C2149E90();
  swift_release();
  uint64_t v69 = v70;
  swift_bridgeObjectRetain();
  sub_1C20E3814(&v69, type metadata accessor for WeekdaysAndDosages, (uint64_t (*)(uint64_t))sub_1C20FB274, sub_1C20EC100);
  swift_bridgeObjectRelease();
  uint64_t v19 = v69;
  uint64_t v50 = *(void *)(v69 + 16);
  if (v50)
  {
    unint64_t v20 = 0;
    uint64_t v49 = v69 + ((*(unsigned __int8 *)(v51 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80));
    uint64_t v56 = (uint64_t (**)(char *, char *, uint64_t))(v4 + 16);
    id v57 = (void (**)(char *, uint64_t))(v1 + 8);
    uint64_t v55 = (void (**)(char *, uint64_t))(v43 + 8);
    uint64_t v44 = (void (**)(char *, uint64_t))(v4 + 8);
    uint64_t v47 = v11;
    uint64_t v46 = v13;
    uint64_t v45 = v69;
    uint64_t v54 = v8;
    while (v20 < *(void *)(v19 + 16))
    {
      sub_1C20F05FC(v49 + *(void *)(v51 + 72) * v20, (uint64_t)v13, type metadata accessor for WeekdaysAndDosages);
      uint64_t v21 = *(void *)&v13[*(int *)(v11 + 24)];
      if (*(void *)(v21 + 16))
      {
        uint64_t v68 = *(void *)(v21 + 16);
        unint64_t v53 = v20;
        uint64_t v67 = &v13[*(int *)(v11 + 20)];
        id v66 = self;
        uint64_t v22 = v48;
        uint64_t v23 = v21 + ((*(unsigned __int8 *)(v48 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80));
        uint64_t v52 = v21;
        swift_bridgeObjectRetain();
        uint64_t v65 = *(void *)(v22 + 72);
        uint64_t v24 = v44;
        do
        {
          sub_1C20F05FC(v23, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for Dosage);
          uint64_t v25 = v61;
          sub_1C2147CC0();
          uint64_t v26 = v59;
          sub_1C2147BE0();
          (*v57)(v25, v62);
          uint64_t v27 = v60;
          uint64_t v28 = (*v56)(v60, v8, v3);
          uint64_t v70 = 0;
          MEMORY[0x1F4188790](v28);
          *(&v42 - 2) = (uint64_t)&v70;
          id v29 = objc_msgSend(v66, sel_hk_gregorianCalendar);
          uint64_t v30 = v58;
          sub_1C2147C60();

          sub_1C2149680();
          BOOL v31 = v30;
          uint64_t v32 = (uint64_t)v10;
          (*v55)(v31, v64);
          uint64_t v33 = v70;
          id v34 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, *(double *)&v10[*(int *)(v26 + 24)]);
          id v35 = objc_allocWithZone(MEMORY[0x1E4F66B48]);
          uint64_t v36 = (void *)sub_1C2147600();
          id v37 = objc_msgSend(v35, sel_initWithStartTimeComponent_daysOfWeek_cycleIndex_cycleIntervalDays_dose_, v36, v33, 0, 0, v34);

          uint64_t v38 = *v24;
          (*v24)(v27, v3);
          id v39 = v37;
          MEMORY[0x1C87528E0]();
          if (*(void *)((v71 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v71 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_1C214A7D0();
          }
          sub_1C214A820();
          sub_1C214A7A0();

          uint64_t v40 = v54;
          v38(v54, v3);
          sub_1C1F13BC4(v32, (uint64_t (*)(void))type metadata accessor for Dosage);
          v23 += v65;
          --v68;
          uint64_t v10 = (char *)v32;
          uint64_t v8 = v40;
        }
        while (v68);
        swift_bridgeObjectRelease();
        uint64_t v11 = v47;
        uint64_t v13 = v46;
        uint64_t v19 = v45;
        unint64_t v20 = v53;
      }
      ++v20;
      sub_1C1F13BC4((uint64_t)v13, type metadata accessor for WeekdaysAndDosages);
      if (v20 == v50) {
        goto LABEL_11;
      }
    }
    __break(1u);
    uint64_t result = swift_release();
    __break(1u);
  }
  else
  {
LABEL_11:
    swift_release();
    (*(void (**)(char *, uint64_t))(v43 + 8))(v63, v64);
    return v71;
  }
  return result;
}

uint64_t sub_1C20E9F00@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, void *a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, void *a6@<X8>)
{
  id v79 = a3;
  v65[1] = a5;
  uint64_t v70 = a4;
  uint64_t v78 = a6;
  uint64_t v8 = type metadata accessor for Dosage();
  uint64_t v72 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  v65[0] = (uint64_t)v65 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C20F0564();
  uint64_t v69 = v10;
  MEMORY[0x1F4188790](v10);
  unint64_t v73 = (char *)v65 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C20F05C8(0);
  uint64_t v13 = MEMORY[0x1F4188790](v12 - 8);
  uint64_t v66 = (uint64_t)v65 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  uint64_t v74 = (uint64_t)v65 - v16;
  MEMORY[0x1F4188790](v15);
  uint64_t v71 = (uint64_t)v65 - v17;
  uint64_t v18 = sub_1C21497F0();
  uint64_t v67 = *(void *)(v18 - 8);
  uint64_t v68 = v18;
  MEMORY[0x1F4188790](v18);
  unint64_t v20 = (char *)v65 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_1C2147D30();
  uint64_t v22 = *(void *)(v21 - 8);
  MEMORY[0x1F4188790](v21);
  uint64_t v24 = (char *)v65 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_1C21476D0();
  uint64_t v76 = *(void *)(v25 - 8);
  uint64_t v77 = v25;
  MEMORY[0x1F4188790](v25);
  uint64_t v27 = (char *)v65 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = *a1;
  uint64_t v29 = a2;
  uint64_t v83 = v28;
  swift_bridgeObjectRetain();
  sub_1C2147CC0();
  sub_1C2147BE0();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v21);
  swift_retain();
  sub_1C2149E90();
  swift_release();
  BOOL v75 = v27;
  if (v82 == 1)
  {
    sub_1C21497A0();
    uint64_t v30 = sub_1C21497E0();
    os_log_type_t v31 = sub_1C214ABD0();
    if (os_log_type_enabled(v30, v31))
    {
      uint64_t v32 = (uint8_t *)swift_slowAlloc();
      uint64_t v33 = swift_slowAlloc();
      uint64_t v81 = v33;
      *(_DWORD *)uint64_t v32 = 136315138;
      uint64_t v34 = sub_1C214BC10();
      uint64_t v80 = sub_1C1F6FD54(v34, v35, &v81);
      sub_1C214B530();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C1F0B000, v30, v31, "%s encountered HKMedicationScheduleIntervalData with nil frequencyInterval.", v32, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C8754730](v33, -1, -1);
      MEMORY[0x1C8754730](v32, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v67 + 8))(v20, v68);
    goto LABEL_21;
  }
  uint64_t v68 = v81;
  uint64_t v36 = sub_1C1F12718(0, &qword_1EBF0C908);
  id v37 = (void *)sub_1C214B200();
  uint64_t v67 = v36;
  uint64_t v38 = (void *)sub_1C214B200();
  id v39 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, *(double *)(v29 + *(int *)(v8 + 24)));
  uint64_t v40 = v29;
  id v41 = objc_allocWithZone(MEMORY[0x1E4F66B48]);
  uint64_t v42 = (void *)sub_1C2147600();
  id v43 = objc_msgSend(v41, sel_initWithStartTimeComponent_daysOfWeek_cycleIndex_cycleIntervalDays_dose_, v42, 0, v37, v38, v39);

  id v44 = v43;
  MEMORY[0x1C87528E0]();
  if (*(void *)((v83 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v83 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1C214A7D0();
  }
  id v79 = v44;
  sub_1C214A820();
  sub_1C214A7A0();
  uint64_t v45 = v71;
  sub_1C20F05FC(v40, v71, (uint64_t (*)(void))type metadata accessor for Dosage);
  uint64_t v46 = v72;
  uint64_t v47 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v72 + 56);
  uint64_t v48 = 1;
  v47(v45, 0, 1, v8);
  uint64_t v49 = *(void *)(v70 + 16);
  uint64_t v50 = (uint64_t)v73;
  uint64_t v51 = v74;
  if (v49)
  {
    sub_1C20F05FC(v70+ ((*(unsigned __int8 *)(v46 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80))+ *(void *)(v46 + 72) * (v49 - 1), v74, (uint64_t (*)(void))type metadata accessor for Dosage);
    uint64_t v48 = 0;
  }
  v47(v51, v48, 1, v8);
  uint64_t v52 = v50 + *(int *)(v69 + 48);
  sub_1C20F05FC(v45, v50, (uint64_t (*)(void))sub_1C20F05C8);
  sub_1C20F05FC(v51, v52, (uint64_t (*)(void))sub_1C20F05C8);
  unint64_t v53 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v46 + 48);
  if (v53(v50, 1, v8) == 1)
  {
    sub_1C1F13BC4(v51, (uint64_t (*)(void))sub_1C20F05C8);
    sub_1C1F13BC4(v45, (uint64_t (*)(void))sub_1C20F05C8);
    if (v53(v52, 1, v8) == 1)
    {
      sub_1C1F13BC4(v50, (uint64_t (*)(void))sub_1C20F05C8);
      uint64_t v54 = v68;
      goto LABEL_16;
    }
    goto LABEL_14;
  }
  uint64_t v55 = v66;
  sub_1C20F05FC(v50, v66, (uint64_t (*)(void))sub_1C20F05C8);
  if (v53(v52, 1, v8) == 1)
  {
    sub_1C1F13BC4(v74, (uint64_t (*)(void))sub_1C20F05C8);
    sub_1C1F13BC4(v45, (uint64_t (*)(void))sub_1C20F05C8);
    sub_1C1F13BC4(v55, (uint64_t (*)(void))type metadata accessor for Dosage);
LABEL_14:
    sub_1C1F13BC4(v50, (uint64_t (*)(void))sub_1C20F0564);
LABEL_20:

LABEL_21:
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v76 + 8))(v75, v77);
    goto LABEL_22;
  }
  unint64_t v53 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v65[0];
  sub_1C20F0478(v52, v65[0], (uint64_t (*)(void))type metadata accessor for Dosage);
  BOOL v56 = _s19HealthMedicationsUI6DosageV2eeoiySbAC_ACtFZ_0(v55, (uint64_t)v53);
  sub_1C1F13BC4((uint64_t)v53, (uint64_t (*)(void))type metadata accessor for Dosage);
  sub_1C1F13BC4(v74, (uint64_t (*)(void))sub_1C20F05C8);
  sub_1C1F13BC4(v45, (uint64_t (*)(void))sub_1C20F05C8);
  sub_1C1F13BC4(v55, (uint64_t (*)(void))type metadata accessor for Dosage);
  sub_1C1F13BC4(v50, (uint64_t (*)(void))sub_1C20F05C8);
  uint64_t v54 = v68;
  if (!v56) {
    goto LABEL_20;
  }
LABEL_16:
  if (v54 == 1) {
    goto LABEL_20;
  }
  uint64_t v57 = v54 - 1;
  if (__OFSUB__(v54, 1))
  {
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v58 = (void *)sub_1C214B200();
  id v59 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, v57);
  id v60 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, 0);
  id v61 = objc_allocWithZone(MEMORY[0x1E4F66B48]);
  uint64_t v40 = (uint64_t)v75;
  uint64_t v62 = (void *)sub_1C2147600();
  id v63 = objc_msgSend(v61, sel_initWithStartTimeComponent_daysOfWeek_cycleIndex_cycleIntervalDays_dose_, v62, 0, v58, v59, v60);

  unint64_t v53 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v63;
  MEMORY[0x1C87528E0]();
  if (*(void *)((v83 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v83 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
LABEL_24:
  }
    sub_1C214A7D0();
  sub_1C214A820();
  sub_1C214A7A0();

  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v76 + 8))(v40, v77);
LABEL_22:
  *uint64_t v78 = v83;
  return result;
}

uint64_t sub_1C20EA904@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v17 = a2;
  uint64_t v3 = sub_1C2147D30();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1C21476D0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2147CC0();
  uint64_t v11 = type metadata accessor for Dosage();
  sub_1C2147BE0();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  id v12 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, *(double *)(a1 + *(int *)(v11 + 24)));
  id v13 = objc_allocWithZone(MEMORY[0x1E4F66B48]);
  uint64_t v14 = (void *)sub_1C2147600();
  id v15 = objc_msgSend(v13, sel_initWithStartTimeComponent_daysOfWeek_cycleIndex_cycleIntervalDays_dose_, v14, 0, 0, 0, v12);

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  *uint64_t v17 = v15;
  return result;
}

uint64_t sub_1C20EAB20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, unsigned __int8 a3@<W3>, void *a4@<X8>)
{
  uint64_t v28 = a4;
  uint64_t v25 = a2;
  int v29 = a3;
  uint64_t v5 = sub_1C2147D30();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1C21476D0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  id v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  id v15 = (char *)&v25 - v14;
  sub_1C2147CC0();
  uint64_t v26 = type metadata accessor for Dosage();
  uint64_t v27 = a1;
  sub_1C2147BE0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v15, v9);
  sub_1C1F12718(0, &qword_1EBF0C908);
  uint64_t v16 = (void *)sub_1C214B200();
  uint64_t v17 = 0;
  if (v29 != 255)
  {
    if (v29)
    {
LABEL_5:
      uint64_t v17 = v25;
      goto LABEL_6;
    }
    uint64_t v17 = 7 * v25;
    if ((unsigned __int128)(v25 * (__int128)7) >> 64 != (7 * v25) >> 63)
    {
      __break(1u);
      goto LABEL_5;
    }
  }
LABEL_6:
  id v18 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, v17);
  id v19 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, *(double *)(v27 + *(int *)(v26 + 24)));
  id v20 = objc_allocWithZone(MEMORY[0x1E4F66B48]);
  uint64_t v21 = (void *)sub_1C2147600();
  id v22 = objc_msgSend(v20, sel_initWithStartTimeComponent_daysOfWeek_cycleIndex_cycleIntervalDays_dose_, v21, 0, v16, v18, v19);

  uint64_t v23 = *(void (**)(char *, uint64_t))(v10 + 8);
  v23(v13, v9);
  uint64_t result = ((uint64_t (*)(char *, uint64_t))v23)(v15, v9);
  *uint64_t v28 = v22;
  return result;
}

uint64_t sub_1C20EAE24@<X0>(uint64_t a1@<X0>, void *a2@<X2>, void *a3@<X8>)
{
  uint64_t v21 = a3;
  id v19 = a2;
  uint64_t v4 = sub_1C2147D30();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_1C21476D0();
  uint64_t v8 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v20);
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2147CC0();
  uint64_t v11 = type metadata accessor for Dosage();
  sub_1C2147BE0();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t v12 = (void *)sub_1C214AAC0();
  id v13 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, *(double *)(a1 + *(int *)(v11 + 24)));
  id v14 = objc_allocWithZone(MEMORY[0x1E4F66B48]);
  id v15 = v19;
  uint64_t v16 = (void *)sub_1C2147600();
  id v17 = objc_msgSend(v14, sel_initWithStartTimeComponent_daysOfWeek_cycleIndex_cycleIntervalDays_dose_, v16, 0, v15, v12, v13);

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v20);
  *uint64_t v21 = v17;
  return result;
}

BOOL sub_1C20EB068(uint64_t a1, uint64_t a2)
{
  uint64_t v28 = a2;
  uint64_t v2 = sub_1C2147CF0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C20F04E8(0);
  uint64_t v7 = MEMORY[0x1F4188790](v6 - 8);
  uint64_t v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v25 - v10;
  uint64_t v27 = type metadata accessor for WeekdaysAndDosages(0);
  sub_1C2147CB0();
  uint64_t v12 = sub_1C21495A0();
  id v13 = *(void (**)(char *, uint64_t))(v3 + 8);
  uint64_t v32 = v2;
  os_log_type_t v31 = v13;
  v13(v5, v2);
  uint64_t v14 = *(void *)(v12 + 16);
  uint64_t v15 = sub_1C21495D0();
  uint64_t v16 = *(void *)(v15 - 8);
  if (v14)
  {
    (*(void (**)(char *, unint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(v11, v12+ ((*(unsigned __int8 *)(*(void *)(v15 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v15 - 8) + 80)), v15);
    uint64_t v17 = 0;
  }
  else
  {
    uint64_t v17 = 1;
  }
  uint64_t v30 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56);
  v30(v11, v17, 1, v15);
  swift_bridgeObjectRelease();
  id v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
  unsigned int v19 = v18(v11, 1, v15);
  int v29 = v18;
  if (v19 == 1)
  {
    sub_1C1F13BC4((uint64_t)v11, (uint64_t (*)(void))sub_1C20F04E8);
    uint64_t v26 = 0;
  }
  else
  {
    uint64_t v26 = sub_1C21495C0();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v11, v15);
  }
  sub_1C2147CB0();
  uint64_t v20 = sub_1C21495A0();
  v31(v5, v32);
  if (*(void *)(v20 + 16))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v16 + 16))(v9, v20 + ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80)), v15);
    uint64_t v21 = 0;
  }
  else
  {
    uint64_t v21 = 1;
  }
  id v22 = v29;
  v30(v9, v21, 1, v15);
  swift_bridgeObjectRelease();
  if (v22(v9, 1, v15) == 1)
  {
    sub_1C1F13BC4((uint64_t)v9, (uint64_t (*)(void))sub_1C20F04E8);
    uint64_t v23 = 0;
  }
  else
  {
    uint64_t v23 = sub_1C21495C0();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v9, v15);
  }
  return v26 < v23;
}

uint64_t sub_1C20EB408(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    uint64_t v3 = type metadata accessor for WeekdaysAndDosages(0);
    uint64_t v4 = *(void *)(v3 - 8);
    unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
    uint64_t v6 = swift_bridgeObjectRetain();
    size_t v7 = sub_1C201E340(v6);
    swift_bridgeObjectRelease();
    uint64_t v8 = v1 - 1;
    if (!v8)
    {
LABEL_8:
      swift_bridgeObjectRelease();
      return 1;
    }
    uint64_t v9 = *(void *)(v4 + 72);
    swift_bridgeObjectRetain();
    unint64_t v10 = a1 + v9 + v5;
    while (*(void *)(*(void *)(v10 + *(int *)(v3 + 24)) + 16))
    {
      swift_bridgeObjectRetain();
      uint64_t v11 = swift_bridgeObjectRetain();
      sub_1C1F7D1A4(v11);
      size_t v12 = sub_1C201E340(v7);
      swift_bridgeObjectRelease();
      uint64_t v13 = *(void *)(v12 + 16);
      swift_bridgeObjectRelease();
      if (v13 != *(void *)(v7 + 16)) {
        break;
      }
      v10 += v9;
      if (!--v8)
      {
        swift_bridgeObjectRelease();
        goto LABEL_8;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return 0;
}

uint64_t sub_1C20EB570(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v138 = type metadata accessor for Dosage();
  uint64_t v132 = *(void *)(v138 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v138);
  uint64_t v129 = (uint64_t)&v123 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  uint64_t v139 = (uint64_t)&v123 - v7;
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v136 = (uint64_t)&v123 - v9;
  MEMORY[0x1F4188790](v8);
  uint64_t v135 = (uint64_t)&v123 - v10;
  uint64_t v11 = a1[1];
  uint64_t result = sub_1C214BA30();
  if (result >= v11)
  {
    if (v11 < 0) {
      goto LABEL_138;
    }
    if (v11) {
      return sub_1C20ED368(0, v11, 1, a1);
    }
    return result;
  }
  if (v11 >= 0) {
    uint64_t v13 = v11;
  }
  else {
    uint64_t v13 = v11 + 1;
  }
  if (v11 < -1) {
    goto LABEL_146;
  }
  uint64_t v126 = result;
  if (v11 < 2)
  {
    uint64_t v17 = (char *)MEMORY[0x1E4FBC860];
    unint64_t v131 = MEMORY[0x1E4FBC860]
         + ((*(unsigned __int8 *)(v132 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v132 + 80));
    uint64_t v125 = MEMORY[0x1E4FBC860];
    if (v11 != 1)
    {
      unint64_t v19 = *(void *)(MEMORY[0x1E4FBC860] + 16);
LABEL_104:
      if (v19 >= 2)
      {
        uint64_t v115 = *a1;
        do
        {
          unint64_t v116 = v19 - 2;
          if (v19 < 2) {
            goto LABEL_133;
          }
          if (!v115) {
            goto LABEL_145;
          }
          unint64_t v117 = v17;
          uint64_t v118 = v17 + 32;
          uint64_t v119 = *(void *)&v17[16 * v116 + 32];
          uint64_t v120 = *(void *)&v17[16 * v19 + 24];
          sub_1C20EDC8C(v115 + *(void *)(v132 + 72) * v119, v115 + *(void *)(v132 + 72) * *(void *)&v118[16 * v19 - 16], v115 + *(void *)(v132 + 72) * v120, v131);
          if (v2) {
            break;
          }
          if (v120 < v119) {
            goto LABEL_134;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v117 = sub_1C20FB150((uint64_t)v117);
          }
          if (v116 >= *((void *)v117 + 2)) {
            goto LABEL_135;
          }
          os_log_type_t v121 = &v117[16 * v116 + 32];
          *(void *)os_log_type_t v121 = v119;
          *((void *)v121 + sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, 0, 1) = v120;
          unint64_t v122 = *((void *)v117 + 2);
          if (v19 > v122) {
            goto LABEL_136;
          }
          uint64_t v17 = v117;
          memmove(&v117[16 * v19 + 16], &v117[16 * v19 + 32], 16 * (v122 - v19));
          *((void *)v117 + 2) = v122 - 1;
          unint64_t v19 = v122 - 1;
        }
        while (v122 > 2);
      }
LABEL_115:
      swift_bridgeObjectRelease();
      *(void *)(v125 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v14 = v13 >> 1;
    uint64_t v15 = sub_1C214A810();
    *(void *)(v15 + 16) = v14;
    uint64_t v16 = *(unsigned __int8 *)(v132 + 80);
    uint64_t v125 = v15;
    unint64_t v131 = v15 + ((v16 + 32) & ~v16);
  }
  uint64_t v18 = 0;
  uint64_t v17 = (char *)MEMORY[0x1E4FBC860];
  char v141 = a1;
  while (1)
  {
    uint64_t v20 = v18;
    uint64_t v21 = v18 + 1;
    uint64_t v130 = v18;
    if (v18 + 1 >= v11)
    {
      uint64_t v31 = v18 + 1;
      goto LABEL_24;
    }
    uint64_t v22 = *a1;
    uint64_t v23 = *a1 + *(void *)(v132 + 72) * v21;
    uint64_t v140 = *(void *)(v132 + 72);
    uint64_t v24 = v140;
    uint64_t v25 = v22;
    uint64_t v128 = v22;
    uint64_t v137 = v11;
    uint64_t v26 = v135;
    sub_1C20F05FC(v23, v135, (uint64_t (*)(void))type metadata accessor for Dosage);
    uint64_t v27 = v25 + v24 * v20;
    uint64_t v28 = v136;
    sub_1C20F05FC(v27, v136, (uint64_t (*)(void))type metadata accessor for Dosage);
    sub_1C2147AC0();
    uint64_t v134 = v28 + *(int *)(v138 + 20);
    uint64_t v133 = sub_1C20F051C((unint64_t *)&qword_1EBF0B7B0, MEMORY[0x1E4F27928]);
    LODWORD(v134) = sub_1C214A590();
    sub_1C1F13BC4(v28, (uint64_t (*)(void))type metadata accessor for Dosage);
    uint64_t v29 = v26;
    uint64_t v11 = v137;
    sub_1C1F13BC4(v29, (uint64_t (*)(void))type metadata accessor for Dosage);
    uint64_t v30 = v140;
    uint64_t v31 = v20 + 2;
    if (v20 + 2 >= v11)
    {
LABEL_21:
      if ((v134 & 1) == 0) {
        goto LABEL_24;
      }
LABEL_42:
      if (v31 < v20) {
        goto LABEL_139;
      }
      if (v20 < v31)
      {
        uint64_t v127 = v17;
        uint64_t v53 = 0;
        uint64_t v54 = v30 * (v31 - 1);
        uint64_t v55 = v31 * v30;
        uint64_t v56 = v20;
        uint64_t v57 = v20 * v30;
        do
        {
          if (v56 != v31 + v53 - 1)
          {
            uint64_t v59 = v31;
            uint64_t v60 = v128;
            if (!v128) {
              goto LABEL_144;
            }
            unint64_t v61 = v128 + v57;
            uint64_t v134 = v128 + v54;
            sub_1C20F0478(v128 + v57, v129, (uint64_t (*)(void))type metadata accessor for Dosage);
            if (v57 < v54 || v61 >= v60 + v55)
            {
              uint64_t v58 = v134;
              swift_arrayInitWithTakeFrontToBack();
            }
            else
            {
              uint64_t v58 = v134;
              if (v57 != v54) {
                swift_arrayInitWithTakeBackToFront();
              }
            }
            sub_1C20F0478(v129, v58, (uint64_t (*)(void))type metadata accessor for Dosage);
            uint64_t v31 = v59;
            uint64_t v30 = v140;
          }
          ++v56;
          --v53;
          v54 -= v30;
          v55 -= v30;
          v57 += v30;
        }
        while (v56 < v31 + v53);
        a1 = v141;
        uint64_t v17 = v127;
        uint64_t v20 = v130;
        uint64_t v11 = v137;
      }
      goto LABEL_24;
    }
    uint64_t v124 = v2;
    uint64_t v127 = v17;
    uint64_t v32 = v140 * v21;
    uint64_t v33 = v128;
    uint64_t v34 = v20 + 2;
    uint64_t v35 = v140 * v31;
    while (1)
    {
      uint64_t v36 = v135;
      sub_1C20F05FC(v33 + v35, v135, (uint64_t (*)(void))type metadata accessor for Dosage);
      uint64_t v37 = v136;
      sub_1C20F05FC(v33 + v32, v136, (uint64_t (*)(void))type metadata accessor for Dosage);
      int v38 = sub_1C214A590();
      sub_1C1F13BC4(v37, (uint64_t (*)(void))type metadata accessor for Dosage);
      sub_1C1F13BC4(v36, (uint64_t (*)(void))type metadata accessor for Dosage);
      if ((v134 ^ v38)) {
        break;
      }
      uint64_t v30 = v140;
      v33 += v140;
      ++v34;
      uint64_t v11 = v137;
      if (v137 == v34)
      {
        uint64_t v31 = v137;
        a1 = v141;
        uint64_t v17 = v127;
        uint64_t v2 = v124;
        uint64_t v20 = v130;
        goto LABEL_21;
      }
    }
    a1 = v141;
    uint64_t v17 = v127;
    uint64_t v31 = v34;
    uint64_t v2 = v124;
    uint64_t v20 = v130;
    uint64_t v11 = v137;
    uint64_t v30 = v140;
    if (v134) {
      goto LABEL_42;
    }
LABEL_24:
    if (v31 >= v11) {
      goto LABEL_56;
    }
    if (__OFSUB__(v31, v20)) {
      goto LABEL_137;
    }
    if (v31 - v20 >= v126) {
      goto LABEL_56;
    }
    if (__OFADD__(v20, v126)) {
      goto LABEL_140;
    }
    uint64_t v39 = v20 + v126 >= v11 ? v11 : v20 + v126;
    if (v39 < v20) {
      break;
    }
    if (v31 != v39)
    {
      uint64_t v127 = v17;
      uint64_t v124 = v2;
      sub_1C2147AC0();
      uint64_t v40 = *(void *)(v132 + 72);
      uint64_t v41 = v40 * (v31 - 1);
      uint64_t v137 = v31;
      uint64_t v133 = v40;
      uint64_t v42 = v31 * v40;
      uint64_t v128 = v39;
      do
      {
        uint64_t v43 = 0;
        uint64_t v134 = v42;
        while (1)
        {
          uint64_t v140 = v20;
          uint64_t v44 = *a1;
          uint64_t v45 = v42 + v43 + *a1;
          uint64_t v46 = v135;
          sub_1C20F05FC(v45, v135, (uint64_t (*)(void))type metadata accessor for Dosage);
          uint64_t v47 = v41;
          uint64_t v48 = v41 + v43 + v44;
          uint64_t v49 = v136;
          sub_1C20F05FC(v48, v136, (uint64_t (*)(void))type metadata accessor for Dosage);
          sub_1C20F051C((unint64_t *)&qword_1EBF0B7B0, MEMORY[0x1E4F27928]);
          char v50 = sub_1C214A590();
          sub_1C1F13BC4(v49, (uint64_t (*)(void))type metadata accessor for Dosage);
          sub_1C1F13BC4(v46, (uint64_t (*)(void))type metadata accessor for Dosage);
          if ((v50 & 1) == 0) {
            break;
          }
          uint64_t v51 = *v141;
          if (!*v141) {
            goto LABEL_142;
          }
          uint64_t v42 = v134;
          uint64_t v41 = v47;
          uint64_t v52 = v51 + v47 + v43;
          sub_1C20F0478(v51 + v134 + v43, v139, (uint64_t (*)(void))type metadata accessor for Dosage);
          swift_arrayInitWithTakeFrontToBack();
          sub_1C20F0478(v139, v52, (uint64_t (*)(void))type metadata accessor for Dosage);
          v43 -= v133;
          uint64_t v20 = v140 + 1;
          a1 = v141;
          if (v137 == v140 + 1) {
            goto LABEL_35;
          }
        }
        a1 = v141;
        uint64_t v41 = v47;
        uint64_t v42 = v134;
LABEL_35:
        v41 += v133;
        v42 += v133;
        ++v137;
        uint64_t v20 = v130;
      }
      while (v137 != v128);
      uint64_t v31 = v128;
      uint64_t v2 = v124;
      uint64_t v17 = v127;
    }
LABEL_56:
    if (v31 < v20) {
      goto LABEL_132;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v137 = v31;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      uint64_t v17 = sub_1C20FADDC(0, *((void *)v17 + 2) + 1, 1, v17);
    }
    unint64_t v64 = *((void *)v17 + 2);
    unint64_t v63 = *((void *)v17 + 3);
    unint64_t v19 = v64 + 1;
    if (v64 >= v63 >> 1) {
      uint64_t v17 = sub_1C20FADDC((char *)(v63 > 1), v64 + 1, 1, v17);
    }
    *((void *)v17 + 2) = v19;
    uint64_t v65 = v17 + 32;
    uint64_t v66 = &v17[16 * v64 + 32];
    uint64_t v67 = v137;
    *(void *)uint64_t v66 = v20;
    *((void *)v66 + sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, 0, 1) = v67;
    if (v64)
    {
      while (1)
      {
        unint64_t v68 = v19 - 1;
        if (v19 >= 4)
        {
          unint64_t v73 = &v65[16 * v19];
          uint64_t v74 = *((void *)v73 - 8);
          uint64_t v75 = *((void *)v73 - 7);
          BOOL v79 = __OFSUB__(v75, v74);
          uint64_t v76 = v75 - v74;
          if (v79) {
            goto LABEL_121;
          }
          uint64_t v78 = *((void *)v73 - 6);
          uint64_t v77 = *((void *)v73 - 5);
          BOOL v79 = __OFSUB__(v77, v78);
          uint64_t v71 = v77 - v78;
          char v72 = v79;
          if (v79) {
            goto LABEL_122;
          }
          unint64_t v80 = v19 - 2;
          uint64_t v81 = &v65[16 * v19 - 32];
          uint64_t v83 = *(void *)v81;
          uint64_t v82 = *((void *)v81 + 1);
          BOOL v79 = __OFSUB__(v82, v83);
          uint64_t v84 = v82 - v83;
          if (v79) {
            goto LABEL_124;
          }
          BOOL v79 = __OFADD__(v71, v84);
          uint64_t v85 = v71 + v84;
          if (v79) {
            goto LABEL_127;
          }
          if (v85 >= v76)
          {
            uint64_t v103 = &v65[16 * v68];
            uint64_t v105 = *(void *)v103;
            uint64_t v104 = *((void *)v103 + 1);
            BOOL v79 = __OFSUB__(v104, v105);
            uint64_t v106 = v104 - v105;
            if (v79) {
              goto LABEL_131;
            }
            BOOL v96 = v71 < v106;
            goto LABEL_93;
          }
        }
        else
        {
          if (v19 != 3)
          {
            uint64_t v97 = *((void *)v17 + 4);
            uint64_t v98 = *((void *)v17 + 5);
            BOOL v79 = __OFSUB__(v98, v97);
            uint64_t v90 = v98 - v97;
            char v91 = v79;
            goto LABEL_87;
          }
          uint64_t v70 = *((void *)v17 + 4);
          uint64_t v69 = *((void *)v17 + 5);
          BOOL v79 = __OFSUB__(v69, v70);
          uint64_t v71 = v69 - v70;
          char v72 = v79;
        }
        if (v72) {
          goto LABEL_123;
        }
        unint64_t v80 = v19 - 2;
        uint64_t v86 = &v65[16 * v19 - 32];
        uint64_t v88 = *(void *)v86;
        uint64_t v87 = *((void *)v86 + 1);
        BOOL v89 = __OFSUB__(v87, v88);
        uint64_t v90 = v87 - v88;
        char v91 = v89;
        if (v89) {
          goto LABEL_126;
        }
        int v92 = &v65[16 * v68];
        uint64_t v94 = *(void *)v92;
        uint64_t v93 = *((void *)v92 + 1);
        BOOL v79 = __OFSUB__(v93, v94);
        uint64_t v95 = v93 - v94;
        if (v79) {
          goto LABEL_129;
        }
        if (__OFADD__(v90, v95)) {
          goto LABEL_130;
        }
        if (v90 + v95 >= v71)
        {
          BOOL v96 = v71 < v95;
LABEL_93:
          if (v96) {
            unint64_t v68 = v80;
          }
          goto LABEL_95;
        }
LABEL_87:
        if (v91) {
          goto LABEL_125;
        }
        uint64_t v99 = &v65[16 * v68];
        uint64_t v101 = *(void *)v99;
        uint64_t v100 = *((void *)v99 + 1);
        BOOL v79 = __OFSUB__(v100, v101);
        uint64_t v102 = v100 - v101;
        if (v79) {
          goto LABEL_128;
        }
        if (v102 < v90) {
          goto LABEL_14;
        }
LABEL_95:
        unint64_t v107 = v68 - 1;
        if (v68 - 1 >= v19)
        {
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
          goto LABEL_141;
        }
        uint64_t v108 = *a1;
        if (!*a1) {
          goto LABEL_143;
        }
        uint64_t v109 = v17;
        uint64_t v110 = &v65[16 * v107];
        uint64_t v111 = *(void *)v110;
        os_log_type_t v112 = &v65[16 * v68];
        uint64_t v113 = *((void *)v112 + 1);
        sub_1C20EDC8C(v108 + *(void *)(v132 + 72) * *(void *)v110, v108 + *(void *)(v132 + 72) * *(void *)v112, v108 + *(void *)(v132 + 72) * v113, v131);
        if (v2) {
          goto LABEL_115;
        }
        if (v113 < v111) {
          goto LABEL_118;
        }
        if (v68 > *((void *)v109 + 2)) {
          goto LABEL_119;
        }
        *(void *)uint64_t v110 = v111;
        *(void *)&v65[16 * v107 + 8] = v113;
        unint64_t v114 = *((void *)v109 + 2);
        if (v68 >= v114) {
          goto LABEL_120;
        }
        uint64_t v17 = v109;
        unint64_t v19 = v114 - 1;
        memmove(&v65[16 * v68], v112 + 16, 16 * (v114 - 1 - v68));
        *((void *)v109 + 2) = v114 - 1;
        a1 = v141;
        if (v114 <= 2) {
          goto LABEL_14;
        }
      }
    }
    unint64_t v19 = 1;
LABEL_14:
    uint64_t v11 = a1[1];
    uint64_t v18 = v137;
    if (v137 >= v11) {
      goto LABEL_104;
    }
  }
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  uint64_t result = sub_1C214B900();
  __break(1u);
  return result;
}

uint64_t sub_1C20EC100(uint64_t *a1)
{
  uint64_t v193 = sub_1C2147CF0();
  uint64_t v2 = *(void *)(v193 - 8);
  MEMORY[0x1F4188790](v193);
  unint64_t v192 = (char *)&v162 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C20F04E8(0);
  uint64_t v5 = MEMORY[0x1F4188790](v4 - 8);
  uint64_t v7 = (char *)&v162 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x1F4188790](v5);
  uint64_t v182 = (char *)&v162 - v9;
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  uint64_t v168 = (char *)&v162 - v11;
  MEMORY[0x1F4188790](v10);
  uint64_t v169 = (char *)&v162 - v12;
  uint64_t v194 = type metadata accessor for WeekdaysAndDosages(0);
  uint64_t v174 = *(void *)(v194 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v194);
  uint64_t v167 = (uint64_t)&v162 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  uint64_t v184 = (uint64_t)&v162 - v16;
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  uint64_t v195 = (uint64_t)&v162 - v18;
  uint64_t v19 = MEMORY[0x1F4188790](v17);
  uint64_t v190 = (uint64_t)&v162 - v20;
  uint64_t v21 = MEMORY[0x1F4188790](v19);
  uint64_t v175 = (uint64_t)&v162 - v22;
  uint64_t v23 = MEMORY[0x1F4188790](v21);
  uint64_t v172 = (uint64_t)&v162 - v24;
  uint64_t v25 = MEMORY[0x1F4188790](v23);
  uint64_t v27 = (char *)&v162 - v26;
  MEMORY[0x1F4188790](v25);
  uint64_t v29 = (char *)&v162 - v28;
  uint64_t v30 = a1[1];
  uint64_t result = sub_1C214BA30();
  if (result >= v30)
  {
    if (v30 < 0) {
      goto LABEL_173;
    }
    if (v30) {
      return sub_1C20ED67C(0, v30, 1, a1);
    }
    return result;
  }
  if (v30 >= 0) {
    uint64_t v32 = v30;
  }
  else {
    uint64_t v32 = v30 + 1;
  }
  if (v30 < -1) {
    goto LABEL_181;
  }
  uint64_t v164 = result;
  if (v30 < 2)
  {
    unint64_t v173 = MEMORY[0x1E4FBC860]
         + ((*(unsigned __int8 *)(v174 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v174 + 80));
    uint64_t v162 = MEMORY[0x1E4FBC860];
    if (v30 != 1)
    {
      unint64_t v102 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      uint64_t v37 = (char *)MEMORY[0x1E4FBC860];
LABEL_135:
      if (v102 >= 2)
      {
        uint64_t v154 = *a1;
        uint64_t v153 = v162;
        while (1)
        {
          unint64_t v155 = v102 - 2;
          if (v102 < 2) {
            goto LABEL_167;
          }
          if (!v154) {
            goto LABEL_180;
          }
          uint64_t v156 = v37;
          uint64_t v157 = *(void *)&v37[16 * v155 + 32];
          uint64_t v158 = *(void *)&v37[16 * v102 + 24];
          uint64_t v159 = v176;
          sub_1C20EE244(v154 + *(void *)(v174 + 72) * v157, v154 + *(void *)(v174 + 72) * *(void *)&v37[16 * v102 + 16], v154 + *(void *)(v174 + 72) * v158, v173);
          uint64_t v176 = v159;
          if (v159) {
            goto LABEL_148;
          }
          if (v158 < v157) {
            goto LABEL_169;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v156 = sub_1C20FB150((uint64_t)v156);
          }
          if (v155 >= *((void *)v156 + 2)) {
            goto LABEL_170;
          }
          uint64_t v160 = &v156[16 * v155 + 32];
          *(void *)uint64_t v160 = v157;
          *((void *)v160 + sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, 0, 1) = v158;
          unint64_t v161 = *((void *)v156 + 2);
          if (v102 > v161) {
            goto LABEL_171;
          }
          memmove(&v156[16 * v102 + 16], &v156[16 * v102 + 32], 16 * (v161 - v102));
          uint64_t v37 = v156;
          *((void *)v156 + 2) = v161 - 1;
          unint64_t v102 = v161 - 1;
          if (v161 <= 2) {
            goto LABEL_148;
          }
        }
      }
      uint64_t v153 = v162;
LABEL_148:
      swift_bridgeObjectRelease();
LABEL_149:
      *(void *)(v153 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    id v163 = v27;
  }
  else
  {
    id v163 = v27;
    uint64_t v33 = v32 >> 1;
    uint64_t v34 = sub_1C214A810();
    *(void *)(v34 + 16) = v33;
    uint64_t v35 = *(unsigned __int8 *)(v174 + 80);
    uint64_t v162 = v34;
    unint64_t v173 = v34 + ((v35 + 32) & ~v35);
  }
  uint64_t v36 = 0;
  unint64_t v191 = (void (**)(char *, uint64_t))(v2 + 8);
  uint64_t v37 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v177 = v7;
  uint64_t v178 = a1;
  uint64_t v171 = v29;
  while (1)
  {
    uint64_t v38 = v36 + 1;
    uint64_t v166 = v37;
    uint64_t v170 = v36;
    if (v36 + 1 >= v30)
    {
      uint64_t v45 = (uint64_t)v182;
    }
    else
    {
      uint64_t v39 = *a1;
      uint64_t v40 = v36;
      uint64_t v41 = *(void *)(v174 + 72);
      sub_1C20F05FC(*a1 + v41 * v38, (uint64_t)v29, type metadata accessor for WeekdaysAndDosages);
      uint64_t v179 = v39;
      uint64_t v189 = v41;
      uint64_t v42 = v39 + v41 * v40;
      uint64_t v43 = (uint64_t)v163;
      sub_1C20F05FC(v42, (uint64_t)v163, type metadata accessor for WeekdaysAndDosages);
      uint64_t v44 = v176;
      LODWORD(v186) = sub_1C20EB068((uint64_t)v29, v43);
      uint64_t v176 = v44;
      uint64_t v45 = (uint64_t)v182;
      if (v44)
      {
        sub_1C1F13BC4(v43, type metadata accessor for WeekdaysAndDosages);
        sub_1C1F13BC4((uint64_t)v29, type metadata accessor for WeekdaysAndDosages);
LABEL_133:
        swift_bridgeObjectRelease();
        uint64_t v153 = v162;
        goto LABEL_149;
      }
      sub_1C1F13BC4(v43, type metadata accessor for WeekdaysAndDosages);
      sub_1C1F13BC4((uint64_t)v29, type metadata accessor for WeekdaysAndDosages);
      uint64_t v46 = v40 + 2;
      uint64_t v185 = v30;
      if (v40 + 2 >= v30)
      {
        uint64_t v38 = v40 + 2;
      }
      else
      {
        uint64_t v47 = v179;
        uint64_t v180 = v189 * v46;
        uint64_t v181 = v189 * v38;
        uint64_t v48 = (uint64_t)v169;
        while (1)
        {
          uint64_t v183 = v46;
          sub_1C20F05FC(v47 + v180, v172, type metadata accessor for WeekdaysAndDosages);
          sub_1C20F05FC(v47 + v181, v175, type metadata accessor for WeekdaysAndDosages);
          uint64_t v49 = v192;
          sub_1C2147CB0();
          uint64_t v50 = sub_1C21495A0();
          uint64_t v188 = *v191;
          v188(v49, v193);
          uint64_t v51 = *(void *)(v50 + 16);
          uint64_t v52 = sub_1C21495D0();
          uint64_t v53 = *(void *)(v52 - 8);
          if (v51)
          {
            (*(void (**)(uint64_t, unint64_t, uint64_t))(*(void *)(v52 - 8) + 16))(v48, v50+ ((*(unsigned __int8 *)(*(void *)(v52 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v52 - 8) + 80)), v52);
            uint64_t v54 = 0;
          }
          else
          {
            uint64_t v54 = 1;
          }
          uint64_t v55 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v53 + 56);
          v55(v48, v54, 1, v52);
          swift_bridgeObjectRelease();
          uint64_t v56 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v53 + 48);
          if (v56(v48, 1, v52) == 1)
          {
            sub_1C1F13BC4(v48, (uint64_t (*)(void))sub_1C20F04E8);
            uint64_t v187 = 0;
          }
          else
          {
            uint64_t v187 = sub_1C21495C0();
            (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v48, v52);
          }
          uint64_t v57 = v192;
          sub_1C2147CB0();
          uint64_t v58 = sub_1C21495A0();
          v188(v57, v193);
          if (*(void *)(v58 + 16))
          {
            uint64_t v59 = (uint64_t)v168;
            (*(void (**)(char *, unint64_t, uint64_t))(v53 + 16))(v168, v58 + ((*(unsigned __int8 *)(v53 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v53 + 80)), v52);
            uint64_t v60 = 0;
          }
          else
          {
            uint64_t v60 = 1;
            uint64_t v59 = (uint64_t)v168;
          }
          v55(v59, v60, 1, v52);
          swift_bridgeObjectRelease();
          if (v56(v59, 1, v52) == 1)
          {
            sub_1C1F13BC4(v59, (uint64_t (*)(void))sub_1C20F04E8);
            uint64_t v61 = 0;
          }
          else
          {
            uint64_t v61 = sub_1C21495C0();
            (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v59, v52);
          }
          uint64_t v45 = (uint64_t)v182;
          uint64_t v30 = v185;
          BOOL v62 = v187 >= v61;
          sub_1C1F13BC4(v175, type metadata accessor for WeekdaysAndDosages);
          sub_1C1F13BC4(v172, type metadata accessor for WeekdaysAndDosages);
          uint64_t v48 = (uint64_t)v169;
          if ((v186 & 1) == v62) {
            break;
          }
          uint64_t v46 = v183 + 1;
          v47 += v189;
          if (v30 == v183 + 1)
          {
            uint64_t v38 = v30;
            a1 = v178;
            uint64_t v29 = v171;
            goto LABEL_36;
          }
        }
        a1 = v178;
        uint64_t v29 = v171;
        uint64_t v38 = v183;
      }
LABEL_36:
      uint64_t v36 = v170;
      if (v186)
      {
        if (v38 < v170) {
          goto LABEL_176;
        }
        if (v170 < v38)
        {
          uint64_t v63 = 0;
          uint64_t v64 = v189 * (v38 - 1);
          uint64_t v65 = v38 * v189;
          uint64_t v66 = v170;
          uint64_t v67 = v170 * v189;
          do
          {
            if (v66 != v38 + v63 - 1)
            {
              uint64_t v69 = v179;
              if (!v179) {
                goto LABEL_179;
              }
              uint64_t v70 = v38;
              unint64_t v71 = v179 + v67;
              uint64_t v188 = (void (*)(char *, uint64_t))(v179 + v64);
              sub_1C20F0478(v179 + v67, v167, type metadata accessor for WeekdaysAndDosages);
              if (v67 < v64 || v71 >= v69 + v65)
              {
                uint64_t v68 = (uint64_t)v188;
                swift_arrayInitWithTakeFrontToBack();
              }
              else
              {
                uint64_t v68 = (uint64_t)v188;
                if (v67 != v64) {
                  swift_arrayInitWithTakeBackToFront();
                }
              }
              sub_1C20F0478(v167, v68, type metadata accessor for WeekdaysAndDosages);
              uint64_t v38 = v70;
            }
            ++v66;
            --v63;
            v64 -= v189;
            v65 -= v189;
            v67 += v189;
          }
          while (v66 < v38 + v63);
          uint64_t v45 = (uint64_t)v182;
          uint64_t v29 = v171;
          uint64_t v36 = v170;
          uint64_t v30 = v185;
        }
      }
    }
    if (v38 < v30) {
      break;
    }
LABEL_82:
    if (v38 < v36) {
      goto LABEL_168;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v183 = v38;
    if (isUniquelyReferenced_nonNull_native) {
      uint64_t v37 = v166;
    }
    else {
      uint64_t v37 = sub_1C20FADDC(0, *((void *)v166 + 2) + 1, 1, v166);
    }
    unint64_t v101 = *((void *)v37 + 2);
    unint64_t v100 = *((void *)v37 + 3);
    unint64_t v102 = v101 + 1;
    if (v101 >= v100 >> 1) {
      uint64_t v37 = sub_1C20FADDC((char *)(v100 > 1), v101 + 1, 1, v37);
    }
    *((void *)v37 + 2) = v102;
    uint64_t v103 = v37 + 32;
    uint64_t v104 = &v37[16 * v101 + 32];
    uint64_t v105 = v183;
    *(void *)uint64_t v104 = v170;
    *((void *)v104 + sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, 0, 1) = v105;
    if (v101)
    {
      while (1)
      {
        unint64_t v106 = v102 - 1;
        if (v102 >= 4)
        {
          uint64_t v111 = &v103[16 * v102];
          uint64_t v112 = *((void *)v111 - 8);
          uint64_t v113 = *((void *)v111 - 7);
          BOOL v117 = __OFSUB__(v113, v112);
          uint64_t v114 = v113 - v112;
          if (v117) {
            goto LABEL_156;
          }
          uint64_t v116 = *((void *)v111 - 6);
          uint64_t v115 = *((void *)v111 - 5);
          BOOL v117 = __OFSUB__(v115, v116);
          uint64_t v109 = v115 - v116;
          char v110 = v117;
          if (v117) {
            goto LABEL_157;
          }
          unint64_t v118 = v102 - 2;
          uint64_t v119 = &v103[16 * v102 - 32];
          uint64_t v121 = *(void *)v119;
          uint64_t v120 = *((void *)v119 + 1);
          BOOL v117 = __OFSUB__(v120, v121);
          uint64_t v122 = v120 - v121;
          if (v117) {
            goto LABEL_159;
          }
          BOOL v117 = __OFADD__(v109, v122);
          uint64_t v123 = v109 + v122;
          if (v117) {
            goto LABEL_162;
          }
          if (v123 >= v114)
          {
            char v141 = &v103[16 * v106];
            uint64_t v143 = *(void *)v141;
            uint64_t v142 = *((void *)v141 + 1);
            BOOL v117 = __OFSUB__(v142, v143);
            uint64_t v144 = v142 - v143;
            if (v117) {
              goto LABEL_166;
            }
            BOOL v134 = v109 < v144;
            goto LABEL_119;
          }
        }
        else
        {
          if (v102 != 3)
          {
            uint64_t v135 = *((void *)v37 + 4);
            uint64_t v136 = *((void *)v37 + 5);
            BOOL v117 = __OFSUB__(v136, v135);
            uint64_t v128 = v136 - v135;
            char v129 = v117;
            goto LABEL_113;
          }
          uint64_t v108 = *((void *)v37 + 4);
          uint64_t v107 = *((void *)v37 + 5);
          BOOL v117 = __OFSUB__(v107, v108);
          uint64_t v109 = v107 - v108;
          char v110 = v117;
        }
        if (v110) {
          goto LABEL_158;
        }
        unint64_t v118 = v102 - 2;
        uint64_t v124 = &v103[16 * v102 - 32];
        uint64_t v126 = *(void *)v124;
        uint64_t v125 = *((void *)v124 + 1);
        BOOL v127 = __OFSUB__(v125, v126);
        uint64_t v128 = v125 - v126;
        char v129 = v127;
        if (v127) {
          goto LABEL_161;
        }
        uint64_t v130 = &v103[16 * v106];
        uint64_t v132 = *(void *)v130;
        uint64_t v131 = *((void *)v130 + 1);
        BOOL v117 = __OFSUB__(v131, v132);
        uint64_t v133 = v131 - v132;
        if (v117) {
          goto LABEL_164;
        }
        if (__OFADD__(v128, v133)) {
          goto LABEL_165;
        }
        if (v128 + v133 >= v109)
        {
          BOOL v134 = v109 < v133;
LABEL_119:
          if (v134) {
            unint64_t v106 = v118;
          }
          goto LABEL_121;
        }
LABEL_113:
        if (v129) {
          goto LABEL_160;
        }
        uint64_t v137 = &v103[16 * v106];
        uint64_t v139 = *(void *)v137;
        uint64_t v138 = *((void *)v137 + 1);
        BOOL v117 = __OFSUB__(v138, v139);
        uint64_t v140 = v138 - v139;
        if (v117) {
          goto LABEL_163;
        }
        if (v140 < v128) {
          goto LABEL_130;
        }
LABEL_121:
        unint64_t v145 = v106 - 1;
        if (v106 - 1 >= v102)
        {
          __break(1u);
LABEL_153:
          __break(1u);
LABEL_154:
          __break(1u);
LABEL_155:
          __break(1u);
LABEL_156:
          __break(1u);
LABEL_157:
          __break(1u);
LABEL_158:
          __break(1u);
LABEL_159:
          __break(1u);
LABEL_160:
          __break(1u);
LABEL_161:
          __break(1u);
LABEL_162:
          __break(1u);
LABEL_163:
          __break(1u);
LABEL_164:
          __break(1u);
LABEL_165:
          __break(1u);
LABEL_166:
          __break(1u);
LABEL_167:
          __break(1u);
LABEL_168:
          __break(1u);
LABEL_169:
          __break(1u);
LABEL_170:
          __break(1u);
LABEL_171:
          __break(1u);
LABEL_172:
          __break(1u);
LABEL_173:
          __break(1u);
LABEL_174:
          __break(1u);
          goto LABEL_175;
        }
        if (!*a1) {
          goto LABEL_178;
        }
        uint64_t v146 = v37;
        uint64_t v147 = &v103[16 * v145];
        uint64_t v148 = *(void *)v147;
        int64_t v149 = &v103[16 * v106];
        uint64_t v150 = *((void *)v149 + 1);
        uint64_t v151 = v176;
        sub_1C20EE244(*a1 + *(void *)(v174 + 72) * *(void *)v147, *a1 + *(void *)(v174 + 72) * *(void *)v149, *a1 + *(void *)(v174 + 72) * v150, v173);
        uint64_t v176 = v151;
        if (v151) {
          goto LABEL_133;
        }
        if (v150 < v148) {
          goto LABEL_153;
        }
        if (v106 > *((void *)v146 + 2)) {
          goto LABEL_154;
        }
        *(void *)uint64_t v147 = v148;
        *(void *)&v103[16 * v145 + 8] = v150;
        unint64_t v152 = *((void *)v146 + 2);
        if (v106 >= v152) {
          goto LABEL_155;
        }
        unint64_t v102 = v152 - 1;
        memmove(&v103[16 * v106], v149 + 16, 16 * (v152 - 1 - v106));
        uint64_t v37 = v146;
        *((void *)v146 + 2) = v152 - 1;
        BOOL v134 = v152 > 2;
        uint64_t v29 = v171;
        if (!v134) {
          goto LABEL_130;
        }
      }
    }
    unint64_t v102 = 1;
LABEL_130:
    uint64_t v30 = a1[1];
    uint64_t v36 = v183;
    if (v183 >= v30) {
      goto LABEL_135;
    }
  }
  if (__OFSUB__(v38, v36)) {
    goto LABEL_172;
  }
  if (v38 - v36 >= v164)
  {
LABEL_81:
    uint64_t v36 = v170;
    goto LABEL_82;
  }
  if (__OFADD__(v170, v164)) {
    goto LABEL_174;
  }
  if (v170 + v164 >= v30) {
    uint64_t v72 = v30;
  }
  else {
    uint64_t v72 = v170 + v164;
  }
  if (v72 >= v170)
  {
    if (v38 == v72)
    {
      uint64_t v36 = v170;
      goto LABEL_82;
    }
    uint64_t v73 = *(void *)(v174 + 72);
    uint64_t v74 = v73 * (v38 - 1);
    uint64_t v179 = v73;
    uint64_t v75 = v38 * v73;
    uint64_t v165 = v72;
    do
    {
      uint64_t v77 = 0;
      uint64_t v78 = v170;
      uint64_t v180 = v75;
      uint64_t v181 = v74;
      uint64_t v183 = v38;
      while (1)
      {
        uint64_t v187 = v78;
        uint64_t v79 = *a1;
        uint64_t v80 = v75 + v77;
        sub_1C20F05FC(v75 + v77 + *a1, v190, type metadata accessor for WeekdaysAndDosages);
        uint64_t v81 = v74 + v77;
        sub_1C20F05FC(v74 + v77 + v79, v195, type metadata accessor for WeekdaysAndDosages);
        uint64_t v82 = v192;
        sub_1C2147CB0();
        uint64_t v83 = sub_1C21495A0();
        uint64_t v84 = *v191;
        (*v191)(v82, v193);
        uint64_t v85 = *(void *)(v83 + 16);
        uint64_t v86 = sub_1C21495D0();
        uint64_t v87 = *(void *)(v86 - 8);
        uint64_t v88 = v87;
        uint64_t v185 = v81;
        uint64_t v186 = v80;
        uint64_t v188 = v84;
        if (v85)
        {
          (*(void (**)(uint64_t, unint64_t, uint64_t))(v87 + 16))(v45, v83 + ((*(unsigned __int8 *)(v87 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v87 + 80)), v86);
          uint64_t v89 = 0;
        }
        else
        {
          uint64_t v89 = 1;
        }
        uint64_t v90 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v88 + 56);
        v90(v45, v89, 1, v86);
        swift_bridgeObjectRelease();
        char v91 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v88 + 48);
        if (v91(v45, 1, v86) == 1)
        {
          sub_1C1F13BC4(v45, (uint64_t (*)(void))sub_1C20F04E8);
          uint64_t v189 = 0;
        }
        else
        {
          uint64_t v189 = sub_1C21495C0();
          (*(void (**)(uint64_t, uint64_t))(v88 + 8))(v45, v86);
        }
        int v92 = v192;
        sub_1C2147CB0();
        uint64_t v93 = sub_1C21495A0();
        v188(v92, v193);
        if (*(void *)(v93 + 16))
        {
          uint64_t v94 = (uint64_t)v177;
          (*(void (**)(char *, unint64_t, uint64_t))(v88 + 16))(v177, v93 + ((*(unsigned __int8 *)(v88 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v88 + 80)), v86);
          uint64_t v95 = 0;
        }
        else
        {
          uint64_t v95 = 1;
          uint64_t v94 = (uint64_t)v177;
        }
        v90(v94, v95, 1, v86);
        swift_bridgeObjectRelease();
        if (v91(v94, 1, v86) == 1)
        {
          sub_1C1F13BC4(v94, (uint64_t (*)(void))sub_1C20F04E8);
          uint64_t v96 = 0;
        }
        else
        {
          uint64_t v96 = sub_1C21495C0();
          (*(void (**)(uint64_t, uint64_t))(v88 + 8))(v94, v86);
        }
        a1 = v178;
        uint64_t v75 = v180;
        uint64_t v74 = v181;
        sub_1C1F13BC4(v195, type metadata accessor for WeekdaysAndDosages);
        sub_1C1F13BC4(v190, type metadata accessor for WeekdaysAndDosages);
        uint64_t v45 = (uint64_t)v182;
        if (v189 >= v96) {
          break;
        }
        uint64_t v97 = *a1;
        if (!*a1) {
          goto LABEL_177;
        }
        uint64_t v98 = v97 + v74 + v77;
        sub_1C20F0478(v97 + v75 + v77, v184, type metadata accessor for WeekdaysAndDosages);
        swift_arrayInitWithTakeFrontToBack();
        sub_1C20F0478(v184, v98, type metadata accessor for WeekdaysAndDosages);
        v77 -= v179;
        uint64_t v78 = v187 + 1;
        uint64_t v76 = v183;
        if (v183 == v187 + 1) {
          goto LABEL_62;
        }
      }
      uint64_t v76 = v183;
LABEL_62:
      uint64_t v38 = v76 + 1;
      v74 += v179;
      v75 += v179;
    }
    while (v38 != v165);
    uint64_t v38 = v165;
    uint64_t v29 = v171;
    goto LABEL_81;
  }
LABEL_175:
  __break(1u);
LABEL_176:
  __break(1u);
LABEL_177:
  __break(1u);
LABEL_178:
  __break(1u);
LABEL_179:
  __break(1u);
LABEL_180:
  __break(1u);
LABEL_181:
  uint64_t result = sub_1C214B900();
  __break(1u);
  return result;
}

uint64_t sub_1C20ED368(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v34 = a4;
  uint64_t v30 = a1;
  uint64_t v38 = type metadata accessor for Dosage();
  uint64_t v6 = *(void *)(v38 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v38);
  uint64_t v39 = (uint64_t)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v32 = (uint64_t)&v28 - v10;
  uint64_t result = MEMORY[0x1F4188790](v9);
  uint64_t v31 = (uint64_t)&v28 - v12;
  uint64_t v37 = a3;
  uint64_t v29 = a2;
  if (a3 != a2)
  {
    sub_1C2147AC0();
    uint64_t v13 = *(void *)(v6 + 72);
    uint64_t v14 = v13 * (v37 - 1);
    uint64_t v33 = v13;
    uint64_t v15 = v13 * v37;
LABEL_5:
    uint64_t v16 = 0;
    uint64_t v40 = v30;
    uint64_t v17 = v34;
    uint64_t v35 = v15;
    uint64_t v36 = v14;
    while (1)
    {
      uint64_t v18 = *v17;
      uint64_t v19 = v15 + v16 + *v17;
      uint64_t v20 = v31;
      sub_1C20F05FC(v19, v31, (uint64_t (*)(void))type metadata accessor for Dosage);
      uint64_t v21 = v14 + v16 + v18;
      uint64_t v22 = v32;
      sub_1C20F05FC(v21, v32, (uint64_t (*)(void))type metadata accessor for Dosage);
      sub_1C20F051C((unint64_t *)&qword_1EBF0B7B0, MEMORY[0x1E4F27928]);
      char v23 = sub_1C214A590();
      uint64_t v24 = v22;
      uint64_t v14 = v36;
      sub_1C1F13BC4(v24, (uint64_t (*)(void))type metadata accessor for Dosage);
      uint64_t v25 = v20;
      uint64_t v15 = v35;
      uint64_t result = sub_1C1F13BC4(v25, (uint64_t (*)(void))type metadata accessor for Dosage);
      if ((v23 & 1) == 0)
      {
LABEL_4:
        v14 += v33;
        v15 += v33;
        if (++v37 == v29) {
          return result;
        }
        goto LABEL_5;
      }
      uint64_t v26 = *v17;
      if (!*v17) {
        break;
      }
      uint64_t v27 = v26 + v14 + v16;
      sub_1C20F0478(v26 + v15 + v16, v39, (uint64_t (*)(void))type metadata accessor for Dosage);
      swift_arrayInitWithTakeFrontToBack();
      uint64_t result = sub_1C20F0478(v39, v27, (uint64_t (*)(void))type metadata accessor for Dosage);
      uint64_t v17 = v34;
      v16 -= v33;
      if (v37 == ++v40) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1C20ED67C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v56 = a4;
  uint64_t v45 = a1;
  uint64_t v62 = sub_1C2147CF0();
  uint64_t v6 = *(void *)(v62 - 8);
  MEMORY[0x1F4188790](v62);
  uint64_t v61 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C20F04E8(0);
  uint64_t v9 = MEMORY[0x1F4188790](v8 - 8);
  uint64_t v11 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v43 - v12;
  uint64_t v63 = type metadata accessor for WeekdaysAndDosages(0);
  uint64_t v14 = MEMORY[0x1F4188790](v63);
  uint64_t v53 = (uint64_t)&v43 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  uint64_t v64 = (uint64_t)&v43 - v17;
  uint64_t result = MEMORY[0x1F4188790](v16);
  uint64_t v21 = (char *)&v43 - v20;
  uint64_t v52 = a3;
  uint64_t v44 = a2;
  if (a3 != a2)
  {
    uint64_t v22 = *(void *)(v19 + 72);
    uint64_t v60 = (void (**)(char *, uint64_t))(v6 + 8);
    uint64_t v23 = v22 * (v52 - 1);
    uint64_t v48 = v11;
    uint64_t v49 = v22;
    uint64_t v24 = v22 * v52;
    uint64_t v46 = (char *)&v43 - v20;
    uint64_t v47 = v13;
LABEL_5:
    uint64_t v25 = 0;
    uint64_t v57 = v45;
    uint64_t v50 = v24;
    uint64_t v51 = v23;
    while (1)
    {
      uint64_t v26 = *v56;
      uint64_t v55 = v24 + v25;
      sub_1C20F05FC(v24 + v25 + v26, (uint64_t)v21, type metadata accessor for WeekdaysAndDosages);
      uint64_t v54 = v23 + v25;
      sub_1C20F05FC(v23 + v25 + v26, v64, type metadata accessor for WeekdaysAndDosages);
      uint64_t v27 = v61;
      sub_1C2147CB0();
      uint64_t v28 = sub_1C21495A0();
      uint64_t v59 = *v60;
      v59(v27, v62);
      uint64_t v29 = *(void *)(v28 + 16);
      uint64_t v30 = sub_1C21495D0();
      uint64_t v31 = *(void *)(v30 - 8);
      if (v29)
      {
        (*(void (**)(char *, unint64_t, uint64_t))(*(void *)(v30 - 8) + 16))(v13, v28+ ((*(unsigned __int8 *)(*(void *)(v30 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v30 - 8) + 80)), v30);
        uint64_t v32 = 0;
      }
      else
      {
        uint64_t v32 = 1;
      }
      uint64_t v33 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v31 + 56);
      v33(v13, v32, 1, v30);
      swift_bridgeObjectRelease();
      uint64_t v34 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48);
      if (v34(v13, 1, v30) == 1)
      {
        sub_1C1F13BC4((uint64_t)v13, (uint64_t (*)(void))sub_1C20F04E8);
        uint64_t v58 = 0;
      }
      else
      {
        uint64_t v58 = sub_1C21495C0();
        (*(void (**)(char *, uint64_t))(v31 + 8))(v13, v30);
      }
      uint64_t v35 = v61;
      sub_1C2147CB0();
      uint64_t v36 = sub_1C21495A0();
      v59(v35, v62);
      if (*(void *)(v36 + 16))
      {
        uint64_t v37 = (uint64_t)v48;
        (*(void (**)(char *, unint64_t, uint64_t))(v31 + 16))(v48, v36 + ((*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80)), v30);
        uint64_t v38 = 0;
      }
      else
      {
        uint64_t v38 = 1;
        uint64_t v37 = (uint64_t)v48;
      }
      v33((char *)v37, v38, 1, v30);
      swift_bridgeObjectRelease();
      if (v34((char *)v37, 1, v30) == 1)
      {
        sub_1C1F13BC4(v37, (uint64_t (*)(void))sub_1C20F04E8);
        uint64_t v39 = 0;
      }
      else
      {
        uint64_t v39 = sub_1C21495C0();
        (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v37, v30);
      }
      uint64_t v21 = v46;
      uint64_t v24 = v50;
      uint64_t v23 = v51;
      uint64_t v40 = v58;
      sub_1C1F13BC4(v64, type metadata accessor for WeekdaysAndDosages);
      uint64_t result = sub_1C1F13BC4((uint64_t)v21, type metadata accessor for WeekdaysAndDosages);
      uint64_t v13 = v47;
      if (v40 >= v39)
      {
LABEL_4:
        v23 += v49;
        v24 += v49;
        if (++v52 == v44) {
          return result;
        }
        goto LABEL_5;
      }
      uint64_t v41 = *v56;
      if (!*v56) {
        break;
      }
      uint64_t v42 = v41 + v23 + v25;
      sub_1C20F0478(v41 + v24 + v25, v53, type metadata accessor for WeekdaysAndDosages);
      swift_arrayInitWithTakeFrontToBack();
      uint64_t result = sub_1C20F0478(v53, v42, type metadata accessor for WeekdaysAndDosages);
      v25 -= v49;
      if (v52 == ++v57) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1C20EDC8C(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v45 = type metadata accessor for Dosage();
  uint64_t v8 = MEMORY[0x1F4188790](v45);
  uint64_t v44 = (uint64_t)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v40 - v10;
  uint64_t v13 = *(void *)(v12 + 72);
  if (!v13)
  {
    __break(1u);
LABEL_62:
    __break(1u);
LABEL_63:
    __break(1u);
    goto LABEL_64;
  }
  if (a2 - a1 == 0x8000000000000000 && v13 == -1) {
    goto LABEL_62;
  }
  int64_t v14 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v13 == -1) {
    goto LABEL_63;
  }
  uint64_t v15 = (uint64_t)(a2 - a1) / v13;
  unint64_t v48 = a1;
  unint64_t v47 = a4;
  uint64_t v16 = v14 / v13;
  if (v15 >= v14 / v13)
  {
    if ((v16 & 0x8000000000000000) == 0)
    {
      uint64_t v18 = v16 * v13;
      if (a4 < a2 || a2 + v18 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v26 = a4 + v18;
      unint64_t v46 = a4 + v18;
      unint64_t v48 = a2;
      unint64_t v43 = a1;
      if (v18 >= 1 && a1 < a2)
      {
        uint64_t v28 = sub_1C2147AC0();
        unint64_t v41 = a4;
        uint64_t v42 = v28;
        do
        {
          unint64_t v29 = a3 - v13;
          sub_1C20F05FC(v26 - v13, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for Dosage);
          unint64_t v30 = a2 - v13;
          unint64_t v31 = a3;
          uint64_t v32 = (uint64_t)v11;
          uint64_t v33 = v44;
          sub_1C20F05FC(a2 - v13, v44, (uint64_t (*)(void))type metadata accessor for Dosage);
          sub_1C20F051C((unint64_t *)&qword_1EBF0B7B0, MEMORY[0x1E4F27928]);
          char v34 = sub_1C214A590();
          uint64_t v35 = v33;
          uint64_t v11 = (char *)v32;
          sub_1C1F13BC4(v35, (uint64_t (*)(void))type metadata accessor for Dosage);
          sub_1C1F13BC4(v32, (uint64_t (*)(void))type metadata accessor for Dosage);
          if (v34)
          {
            if (v31 < a2 || v29 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v37 = v41;
            }
            else
            {
              BOOL v36 = v31 == a2;
              unint64_t v37 = v41;
              if (!v36) {
                swift_arrayInitWithTakeBackToFront();
              }
            }
            v48 -= v13;
          }
          else
          {
            unint64_t v38 = v46;
            v46 -= v13;
            if (v31 < v38 || v29 >= v38)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v31 != v38)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            unint64_t v30 = a2;
            unint64_t v37 = v41;
          }
          unint64_t v26 = v46;
          if (v46 <= v37) {
            break;
          }
          a2 = v30;
          a3 = v29;
        }
        while (v30 > v43);
      }
      goto LABEL_60;
    }
  }
  else if ((v15 & 0x8000000000000000) == 0)
  {
    uint64_t v17 = v15 * v13;
    if (a4 < a1 || a1 + v17 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v19 = a4 + v17;
    unint64_t v46 = a4 + v17;
    if (v17 >= 1 && a2 < a3)
    {
      sub_1C2147AC0();
      do
      {
        sub_1C20F05FC(a2, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for Dosage);
        uint64_t v21 = v44;
        sub_1C20F05FC(a4, v44, (uint64_t (*)(void))type metadata accessor for Dosage);
        sub_1C20F051C((unint64_t *)&qword_1EBF0B7B0, MEMORY[0x1E4F27928]);
        char v22 = sub_1C214A590();
        sub_1C1F13BC4(v21, (uint64_t (*)(void))type metadata accessor for Dosage);
        sub_1C1F13BC4((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for Dosage);
        unint64_t v23 = v48;
        if (v22)
        {
          unint64_t v24 = a2 + v13;
          if (v48 < a2 || v48 >= v24)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v48 == a2)
          {
            unint64_t v23 = a2;
          }
          else
          {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        else
        {
          unint64_t v25 = v47 + v13;
          if (v48 < v47 || v48 >= v25)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v48 != v47)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          unint64_t v47 = v25;
          unint64_t v24 = a2;
        }
        unint64_t v48 = v23 + v13;
        a4 = v47;
        if (v47 >= v19) {
          break;
        }
        a2 = v24;
      }
      while (v24 < a3);
    }
LABEL_60:
    sub_1C20FAFDC(&v48, &v47, (uint64_t *)&v46);
    return 1;
  }
LABEL_64:
  uint64_t result = sub_1C214B990();
  __break(1u);
  return result;
}

uint64_t sub_1C20EE244(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v49 = type metadata accessor for WeekdaysAndDosages(0);
  uint64_t v8 = MEMORY[0x1F4188790](v49);
  uint64_t v9 = MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v45 - v10;
  uint64_t v12 = MEMORY[0x1F4188790](v9);
  int64_t v14 = (char *)&v45 - v13;
  MEMORY[0x1F4188790](v12);
  uint64_t v17 = (char *)&v45 - v16;
  uint64_t v19 = *(void *)(v18 + 72);
  if (!v19)
  {
    __break(1u);
LABEL_66:
    __break(1u);
LABEL_67:
    __break(1u);
    goto LABEL_68;
  }
  if (a2 - a1 == 0x8000000000000000 && v19 == -1) {
    goto LABEL_66;
  }
  int64_t v20 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v19 == -1) {
    goto LABEL_67;
  }
  uint64_t v21 = (uint64_t)(a2 - a1) / v19;
  unint64_t v53 = a1;
  unint64_t v52 = a4;
  uint64_t v22 = v20 / v19;
  if (v21 >= v20 / v19)
  {
    if ((v22 & 0x8000000000000000) == 0)
    {
      uint64_t v24 = v22 * v19;
      uint64_t v17 = v11;
      unint64_t v48 = v15;
      if (a4 < a2 || a2 + v24 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v34 = a4 + v24;
      unint64_t v51 = a4 + v24;
      unint64_t v53 = a2;
      if (v24 < 1 || a1 >= a2) {
        goto LABEL_64;
      }
      uint64_t v36 = -v19;
      unint64_t v46 = a4;
      unint64_t v47 = a1;
      int64_t v14 = v48;
      while (1)
      {
        sub_1C20F05FC(v34 + v36, (uint64_t)v17, type metadata accessor for WeekdaysAndDosages);
        unint64_t v37 = a2 + v36;
        sub_1C20F05FC(a2 + v36, (uint64_t)v14, type metadata accessor for WeekdaysAndDosages);
        uint64_t v38 = v50;
        BOOL v39 = sub_1C20EB068((uint64_t)v17, (uint64_t)v14);
        uint64_t v50 = v38;
        if (v38) {
          goto LABEL_63;
        }
        BOOL v40 = v39;
        unint64_t v41 = a3 + v36;
        sub_1C1F13BC4((uint64_t)v14, type metadata accessor for WeekdaysAndDosages);
        sub_1C1F13BC4((uint64_t)v17, type metadata accessor for WeekdaysAndDosages);
        if (v40)
        {
          if (a3 < a2 || v41 >= a2)
          {
            swift_arrayInitWithTakeFrontToBack();
            unint64_t v42 = v47;
          }
          else
          {
            unint64_t v42 = v47;
            if (a3 != a2) {
              swift_arrayInitWithTakeBackToFront();
            }
          }
          v53 += v36;
        }
        else
        {
          unint64_t v43 = v51;
          v51 += v36;
          if (a3 < v43 || v41 >= v43)
          {
            swift_arrayInitWithTakeFrontToBack();
            unint64_t v37 = a2;
            unint64_t v42 = v47;
          }
          else
          {
            unint64_t v42 = v47;
            if (a3 != v43) {
              swift_arrayInitWithTakeBackToFront();
            }
            unint64_t v37 = a2;
          }
        }
        unint64_t v34 = v51;
        if (v51 > v46)
        {
          a2 = v37;
          a3 += v36;
          if (v37 > v42) {
            continue;
          }
        }
        goto LABEL_64;
      }
    }
  }
  else if ((v21 & 0x8000000000000000) == 0)
  {
    uint64_t v23 = v21 * v19;
    if (a4 < a1 || a1 + v23 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v25 = a4 + v23;
    unint64_t v51 = a4 + v23;
    BOOL v26 = v23 < 1 || a2 >= a3;
    if (v26) {
      goto LABEL_64;
    }
    while (1)
    {
      sub_1C20F05FC(a2, (uint64_t)v17, type metadata accessor for WeekdaysAndDosages);
      sub_1C20F05FC(a4, (uint64_t)v14, type metadata accessor for WeekdaysAndDosages);
      uint64_t v27 = v50;
      BOOL v28 = sub_1C20EB068((uint64_t)v17, (uint64_t)v14);
      uint64_t v50 = v27;
      if (v27) {
        break;
      }
      BOOL v29 = v28;
      unint64_t v30 = a3;
      sub_1C1F13BC4((uint64_t)v14, type metadata accessor for WeekdaysAndDosages);
      sub_1C1F13BC4((uint64_t)v17, type metadata accessor for WeekdaysAndDosages);
      unint64_t v31 = v53;
      if (v29)
      {
        unint64_t v32 = a2 + v19;
        if (v53 < a2 || v53 >= v32)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v53 == a2)
        {
          unint64_t v31 = a2;
        }
        else
        {
          swift_arrayInitWithTakeBackToFront();
        }
      }
      else
      {
        unint64_t v33 = v52 + v19;
        if (v53 < v52 || v53 >= v33)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v53 != v52)
        {
          swift_arrayInitWithTakeBackToFront();
        }
        unint64_t v52 = v33;
        unint64_t v32 = a2;
      }
      unint64_t v53 = v31 + v19;
      a4 = v52;
      if (v52 < v25)
      {
        a2 = v32;
        BOOL v26 = v32 >= v30;
        a3 = v30;
        if (!v26) {
          continue;
        }
      }
      goto LABEL_64;
    }
LABEL_63:
    sub_1C1F13BC4((uint64_t)v14, type metadata accessor for WeekdaysAndDosages);
    sub_1C1F13BC4((uint64_t)v17, type metadata accessor for WeekdaysAndDosages);
LABEL_64:
    sub_1C20FAFF4(&v53, &v52, (uint64_t *)&v51);
    return 1;
  }
LABEL_68:
  uint64_t result = sub_1C214B990();
  __break(1u);
  return result;
}

uint64_t _s19HealthMedicationsUI28MedicationScheduleDataSourceC19PresentationContextO2eeoiySbAE_AEtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v5 = a1[3];
  uint64_t v6 = *a2;
  uint64_t v7 = a2[1];
  uint64_t v8 = a2[2];
  uint64_t v9 = a2[3];
  if (v3)
  {
    if (v7)
    {
      BOOL v10 = v2 == v6 && v3 == v7;
      if (v10 || (char v11 = 0, (sub_1C214BA80() & 1) != 0))
      {
        if (v4 == v8 && v5 == v9) {
          char v11 = 1;
        }
        else {
          char v11 = sub_1C214BA80();
        }
      }
      goto LABEL_16;
    }
  }
  else if (!v7)
  {
    uint64_t v3 = 0;
    char v11 = 1;
    goto LABEL_17;
  }
  char v11 = 0;
LABEL_16:
  sub_1C2021590(v6, v7);
  sub_1C2021590(v2, v3);
LABEL_17:
  sub_1C20215D4(v2, v3);
  sub_1C20215D4(v6, v7);
  return v11 & 1;
}

void sub_1C20EE8F0(uint64_t a1)
{
}

void sub_1C20EE924(uint64_t a1)
{
}

void sub_1C20EE958(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1C20EE9BC(uint64_t a1)
{
}

void sub_1C20EE9F0(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4)
{
  if (!*a2)
  {
    sub_1C20F06AC(255, a3, a4, MEMORY[0x1E4FBB718]);
    unint64_t v5 = sub_1C2149EA0();
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1C20EEA6C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C2149EA0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1C20EEAD0(uint64_t a1)
{
}

void sub_1C20EEB04(uint64_t a1)
{
}

void sub_1C20EEB38(uint64_t a1)
{
}

void sub_1C20EEB6C()
{
  if (!qword_1EA2C7028)
  {
    type metadata accessor for HKMedicationScheduleType(255);
    sub_1C1F4C4E4();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA2C7028);
    }
  }
}

void sub_1C20EEBDC()
{
  if (!qword_1EA2C7030)
  {
    type metadata accessor for HKMedicationScheduleType(255);
    sub_1C20F051C(&qword_1EA2C3680, type metadata accessor for HKMedicationScheduleType);
    unint64_t v0 = type metadata accessor for DynamicDataSource();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C7030);
    }
  }
}

void *sub_1C20EEC70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v27 = a3;
  uint64_t v11 = sub_1C2148410();
  uint64_t v25 = *(void *)(v11 - 8);
  uint64_t v26 = v11;
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1F12718(0, (unint64_t *)&qword_1EA2C6130);
  int64_t v14 = (void *)sub_1C214B4C0();
  id v15 = objc_allocWithZone(MEMORY[0x1E4F2B5F0]);
  uint64_t v16 = (void *)sub_1C214A5B0();
  id v17 = objc_msgSend(v15, sel_initWithName_loggingCategory_, v16, v14);

  _OWORD v6[2] = v17;
  v6[11] = 0;
  unint64_t v29 = 0;
  unint64_t v30 = 0xE000000000000000;
  sub_1C214B7C0();
  swift_bridgeObjectRelease();
  unint64_t v29 = 0xD000000000000012;
  unint64_t v30 = 0x80000001C2167BD0;
  uint64_t v18 = swift_bridgeObjectRetain();
  uint64_t v19 = sub_1C20E35C4(v18);
  swift_bridgeObjectRelease();
  uint64_t v28 = v19;
  sub_1C20F06AC(0, (unint64_t *)&qword_1EA2C3A40, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
  sub_1C1F64558();
  sub_1C214A580();
  swift_bridgeObjectRelease();
  sub_1C214A6C0();
  uint64_t v20 = v27;
  swift_bridgeObjectRelease();
  sub_1C214A6C0();
  unint64_t v21 = v30;
  v6[3] = v29;
  v6[4] = v21;
  v6[8] = a1;
  v6[9] = a2;
  swift_retain();
  sub_1C2149E90();
  v6[10] = v29;
  if (v20)
  {
    uint64_t v22 = v20;
  }
  else
  {
    sub_1C21489D0();
    sub_1C2148400();
    sub_1C21483A0();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v13, v26);
    uint64_t v22 = sub_1C21489A0();
    a5 = MEMORY[0x1E4F66470];
    a4 = MEMORY[0x1E4F66610];
  }
  v6[5] = v22;
  v6[6] = a4;
  v6[7] = a5;
  v6[12] = v22;
  v6[13] = a4;
  v6[14] = a5;
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  sub_1C20E39F0();
  sub_1C20EEBDC();
  sub_1C20F051C(&qword_1EA2C7038, (void (*)(uint64_t))sub_1C20EEBDC);
  sub_1C2148320();
  unint64_t v29 = v6[9];
  swift_allocObject();
  swift_weakInit();
  sub_1C20EEA6C(0, (unint64_t *)&qword_1EA2C4C88, type metadata accessor for HKMedicationScheduleType);
  sub_1C20EF828();
  swift_retain();
  swift_retain();
  uint64_t v23 = sub_1C214A0F0();
  swift_release();
  swift_release();
  swift_release();
  v6[11] = v23;
  swift_release();
  return v6;
}

unint64_t sub_1C20EF078()
{
  unint64_t result = qword_1EA2C7040;
  if (!qword_1EA2C7040)
  {
    sub_1C1F12718(255, &qword_1EBF0C828);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C7040);
  }
  return result;
}

uint64_t sub_1C20EF0E0@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (void *)(*a1 + qword_1EA2C81A8);
  swift_beginAccess();
  *a2 = *v3;
  return swift_retain();
}

uint64_t type metadata accessor for MedicationScheduleDataSource()
{
  uint64_t result = qword_1EA2C7048;
  if (!qword_1EA2C7048) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1C20EF188()
{
  sub_1C20EE9BC(319);
  if (v0 <= 0x3F) {
    swift_initClassMetadata2();
  }
}

uint64_t method lookup function for MedicationScheduleDataSource(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MedicationScheduleDataSource);
}

uint64_t dispatch thunk of MedicationScheduleDataSource.validUserSelectionPublisher.getter()
{
  return (*(uint64_t (**)(void))(class metadata base offset for MedicationScheduleDataSource + *v0 + 488))();
}

uint64_t dispatch thunk of MedicationScheduleDataSource.validUserSelectionPublisher.setter()
{
  return (*(uint64_t (**)(void))(class metadata base offset for MedicationScheduleDataSource + *v0 + 496))();
}

uint64_t dispatch thunk of MedicationScheduleDataSource.validUserSelectionPublisher.modify()
{
  return (*(uint64_t (**)(void))(class metadata base offset for MedicationScheduleDataSource + *v0 + 504))();
}

uint64_t dispatch thunk of MedicationScheduleDataSource.__allocating_init(schedulePublisher:medication:concept:presentationContext:)()
{
  return (*(uint64_t (**)(void))(class metadata base offset for MedicationScheduleDataSource + v0 + 776))();
}

uint64_t dispatch thunk of MedicationScheduleDataSource.triggerResetToDefault()()
{
  return (*(uint64_t (**)(void))(class metadata base offset for MedicationScheduleDataSource + *v0 + 784))();
}

uint64_t sub_1C20EF3D4()
{
  return type metadata accessor for MedicationScheduleDataSource();
}

unint64_t destroy for MedicationScheduleDataSource.PresentationContext(uint64_t a1)
{
  unint64_t result = *(void *)(a1 + 8);
  if (result >= 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for MedicationScheduleDataSource.PresentationContext(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if (v3 < 0xFFFFFFFF)
  {
    long long v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v3;
    uint64_t v4 = *(void *)(a2 + 24);
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(void *)(a1 + 24) = v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

void *assignWithCopy for MedicationScheduleDataSource.PresentationContext(void *a1, void *a2)
{
  unint64_t v4 = a2[1];
  if (a1[1] < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      a1[3] = a2[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    long long v5 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *((_OWORD *)a1 + sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, 0, 1) = v5;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for MedicationScheduleDataSource.PresentationContext(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 8) < 0xFFFFFFFFuLL) {
    goto LABEL_5;
  }
  unint64_t v4 = *(void *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_5:
    long long v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    return a1;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MedicationScheduleDataSource.PresentationContext(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) >= 2) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for MedicationScheduleDataSource.PresentationContext(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)unint64_t result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 32) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

uint64_t sub_1C20EF694(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(vsub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, 0, 1) = -1;
  }
  return (v1 + 1);
}

void *sub_1C20EF6AC(void *result, int a2)
{
  if (a2 < 0)
  {
    result[2] = 0;
    result[3] = 0;
    *unint64_t result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for MedicationScheduleDataSource.PresentationContext()
{
  return &type metadata for MedicationScheduleDataSource.PresentationContext;
}

void sub_1C20EF6E0()
{
  if (!qword_1EA2C7058)
  {
    sub_1C20EE9F0(255, &qword_1EA2C7008, &qword_1EA2C7010, (uint64_t)&type metadata for PauseUsePeriod);
    sub_1C20EF798(&qword_1EA2C7060, &qword_1EA2C7008, &qword_1EA2C7010, (uint64_t)&type metadata for PauseUsePeriod);
    unint64_t v0 = sub_1C2149CA0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C7058);
    }
  }
}

uint64_t sub_1C20EF798(unint64_t *a1, unint64_t *a2, unint64_t *a3, uint64_t a4)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C20EE9F0(255, a2, a3, a4);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C20EF7E8()
{
  swift_weakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

void sub_1C20EF820(void *a1)
{
}

unint64_t sub_1C20EF828()
{
  unint64_t result = qword_1EA2C4CA0;
  if (!qword_1EA2C4CA0)
  {
    sub_1C20EEA6C(255, (unint64_t *)&qword_1EA2C4C88, type metadata accessor for HKMedicationScheduleType);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C4CA0);
  }
  return result;
}

void sub_1C20EF89C()
{
}

void sub_1C20EF8A4()
{
}

unint64_t sub_1C20EF8C0()
{
  unint64_t result = qword_1EA2C7070;
  if (!qword_1EA2C7070)
  {
    sub_1C20EEA6C(255, &qword_1EA2C6FF0, sub_1C20EEAD0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C7070);
  }
  return result;
}

unint64_t sub_1C20EF934()
{
  unint64_t result = qword_1EA2C6098;
  if (!qword_1EA2C6098)
  {
    sub_1C20EEA6C(255, (unint64_t *)&qword_1EA2C6088, sub_1C20EEB38);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C6098);
  }
  return result;
}

unint64_t sub_1C20EF9A8()
{
  unint64_t result = qword_1EA2C5098;
  if (!qword_1EA2C5098)
  {
    sub_1C20EEA6C(255, (unint64_t *)&qword_1EA2C5088, MEMORY[0x1E4F27928]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C5098);
  }
  return result;
}

unint64_t sub_1C20EFA1C()
{
  unint64_t result = qword_1EA2C50A0;
  if (!qword_1EA2C50A0)
  {
    sub_1C20EEA6C(255, (unint64_t *)&qword_1EA2C5090, sub_1C1F30CC4);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C50A0);
  }
  return result;
}

void sub_1C20EFA90()
{
}

uint64_t sub_1C20EFA98()
{
  return sub_1C20E8B08();
}

unint64_t sub_1C20EFAA0()
{
  unint64_t result = qword_1EA2C3980;
  if (!qword_1EA2C3980)
  {
    sub_1C20EEA6C(255, (unint64_t *)&qword_1EA2C3978, (void (*)(uint64_t))sub_1C1F89100);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C3980);
  }
  return result;
}

uint64_t sub_1C20EFB14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v8 = sub_1C21476D0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = &v31[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = *(void *)a3;
  int v13 = *(unsigned __int8 *)(a3 + 8);
  uint64_t v14 = *a4;
  char v15 = *((unsigned char *)a4 + 8);
  uint64_t v32 = a2;
  uint64_t v33 = v14;
  char v34 = v15;
  id v16 = 0;
  uint64_t v17 = sub_1C201A0A0((void (*)(uint64_t *__return_ptr, uint64_t))sub_1C20F0664, (uint64_t)v31, a1);
  uint64_t v18 = v17;
  if ((v17 & 0xC000000000000001) != 0)
  {
    id v19 = (id)MEMORY[0x1C8753960](0, v17);
  }
  else
  {
    if (!*(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_11;
    }
    id v19 = *(id *)(v17 + 32);
  }
  uint64_t v20 = v19;
  id v21 = objc_msgSend(v19, sel_startTimeComponent);

  sub_1C2147620();
  sub_1C1F12718(0, &qword_1EBF0C908);
  uint64_t result = sub_1C214B200();
  uint64_t v23 = (void *)result;
  uint64_t v24 = 0;
  if (v13 == 255
    || (uint64_t v24 = v12, (v13 & 1) != 0)
    || (uint64_t v24 = 7 * v12, (unsigned __int128)(v12 * (__int128)7) >> 64 == (7 * v12) >> 63))
  {
    id v25 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, v24);
    id v26 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, 0);
    id v27 = objc_allocWithZone(MEMORY[0x1E4F66B48]);
    uint64_t v28 = (void *)sub_1C2147600();
    id v29 = objc_msgSend(v27, sel_initWithStartTimeComponent_daysOfWeek_cycleIndex_cycleIntervalDays_dose_, v28, 0, v23, v25, v26);

    (*(void (**)(unsigned char *, uint64_t))(v9 + 8))(v11, v8);
    uint64_t v35 = v18;
    swift_bridgeObjectRetain();
    id v16 = v29;
    MEMORY[0x1C87528E0]();
    if (*(void *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10) < *(void *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    {
LABEL_8:
      sub_1C214A820();
      sub_1C214A7A0();
      uint64_t v30 = v35;
      swift_bridgeObjectRelease();

      return v30;
    }
LABEL_11:
    sub_1C214A7D0();
    goto LABEL_8;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C20EFDEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v59 = a1;
  uint64_t v60 = a2;
  uint64_t v58 = sub_1C2147AC0();
  uint64_t v6 = *(void *)(v58 - 8);
  MEMORY[0x1F4188790](v58);
  uint64_t v57 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = sub_1C2147D30();
  uint64_t v8 = *(void *)(v56 - 8);
  MEMORY[0x1F4188790](v56);
  uint64_t v55 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = sub_1C21476D0();
  uint64_t v50 = *(void *)(v61 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v61);
  uint64_t v12 = (uint64_t)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x1F4188790](v10);
  char v15 = (char *)&v46 - v14;
  int v16 = *(unsigned __int8 *)(a4 + 8);
  if (v16 == 255) {
    goto LABEL_29;
  }
  uint64_t v17 = *(void *)a3;
  int v49 = *(unsigned __int8 *)(a3 + 8);
  uint64_t v18 = *(void *)a4;
  if ((v16 & 1) != 0 || (uint64_t v19 = (unsigned __int128)(v18 * (__int128)7) >> 64, v18 *= 7, v19 == v18 >> 63))
  {
    uint64_t v64 = MEMORY[0x1E4FBC860];
    if (v18 >= -6)
    {
      if ((unint64_t)(v18 + 6) < 0xD)
      {
        a4 = MEMORY[0x1E4FBC860];
LABEL_13:
        if ((a4 & 0xC000000000000001) == 0)
        {
          if (!*(void *)((a4 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            goto LABEL_26;
          }
          uint64_t v33 = *(void **)(a4 + 32);
          swift_bridgeObjectRetain();
          id v34 = v33;
          goto LABEL_16;
        }
LABEL_24:
        swift_bridgeObjectRetain();
        id v34 = (id)MEMORY[0x1C8753960](0, a4);
LABEL_16:
        uint64_t v35 = v34;
        id v36 = objc_msgSend(v34, sel_startTimeComponent);

        sub_1C2147620();
        uint64_t result = sub_1C214AAC0();
        unint64_t v37 = (void *)result;
        if (v49 == 255)
        {
          uint64_t v17 = 0;
          goto LABEL_20;
        }
        if ((v49 & 1) != 0 || (uint64_t v38 = (unsigned __int128)(v17 * (__int128)7) >> 64, v17 *= 7, v38 == v17 >> 63))
        {
LABEL_20:
          uint64_t v39 = v12;
          id v40 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, v17);
          id v41 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, 0);
          id v42 = objc_allocWithZone(MEMORY[0x1E4F66B48]);
          unint64_t v43 = (void *)sub_1C2147600();
          id v44 = objc_msgSend(v42, sel_initWithStartTimeComponent_daysOfWeek_cycleIndex_cycleIntervalDays_dose_, v43, 0, v37, v40, v41);

          (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v39, v61);
          uint64_t v63 = a4;
          swift_bridgeObjectRetain();
          uint64_t v6 = (uint64_t)v44;
          MEMORY[0x1C87528E0]();
          if (*(void *)((v63 & 0xFFFFFFFFFFFFFF8) + 0x10) < *(void *)((v63 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          {
LABEL_21:
            sub_1C214A820();
            sub_1C214A7A0();
            uint64_t v45 = v63;
            swift_bridgeObjectRelease();

            swift_bridgeObjectRelease();
            return v45;
          }
LABEL_26:
          sub_1C214A7D0();
          goto LABEL_21;
        }
        goto LABEL_28;
      }
      uint64_t v47 = v17;
      uint64_t v48 = v12;
      a4 = 0;
      unint64_t v52 = (uint64_t (**)(char *, uint64_t))(v8 + 8);
      unint64_t v53 = (void (**)(char *, uint64_t))(v6 + 8);
      unint64_t v51 = (void (**)(char *, uint64_t))(v50 + 8);
      uint64_t v17 = 0x4000000000000000;
      uint64_t v12 = v18 / 7;
      uint64_t v6 = 1;
      uint64_t v54 = v18 / 7;
      while (v17)
      {
        uint64_t v20 = (void *)sub_1C214AAC0();
        id v21 = (void *)sub_1C214AAC0();
        uint64_t v22 = v55;
        uint64_t v23 = v60;
        sub_1C2147CC0();
        uint64_t v24 = v57;
        sub_1C2147A70();
        sub_1C2147BE0();
        (*v53)(v24, v58);
        uint64_t v25 = (*v52)(v22, v56);
        MEMORY[0x1F4188790](v25);
        *(&v46 - 4) = v23;
        *(&v46 - 3) = (uint64_t)v20;
        id v62 = v20;
        *(&v46 - 2) = 1;
        unint64_t v26 = sub_1C201A0A0((void (*)(uint64_t *__return_ptr, uint64_t))sub_1C20F0688, (uint64_t)(&v46 - 6), v59);
        sub_1C1F7DE18(v26);
        id v27 = v21;
        uint64_t v28 = (void *)sub_1C214AAC0();
        id v29 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, 0);
        uint64_t v30 = v15;
        id v31 = objc_allocWithZone(MEMORY[0x1E4F66B48]);
        uint64_t v32 = (void *)sub_1C2147600();
        objc_msgSend(v31, sel_initWithStartTimeComponent_daysOfWeek_cycleIndex_cycleIntervalDays_dose_, v32, 0, v27, v28, v29);

        MEMORY[0x1C87528E0]();
        if (*(void *)((v64 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v64 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1C214A7D0();
        }
        sub_1C214A820();
        sub_1C214A7A0();

        (*v51)(v30, v61);
        --v17;
        v6 += 2;
        --v12;
        char v15 = v30;
        if (!v12)
        {
          a4 = v64;
          uint64_t v17 = v47;
          uint64_t v12 = v48;
          goto LABEL_13;
        }
      }
      __break(1u);
    }
    __break(1u);
    goto LABEL_24;
  }
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_1C20F0458@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_1C20EA904(a1, a2);
}

uint64_t sub_1C20F0478(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C20F04E0(uint64_t a1)
{
  return sub_1C1FC3BCC(a1, *(void **)(v1 + 16));
}

void sub_1C20F04E8(uint64_t a1)
{
}

uint64_t sub_1C20F051C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C20F0564()
{
  if (!qword_1EA2C7080)
  {
    sub_1C20F05C8(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA2C7080);
    }
  }
}

void sub_1C20F05C8(uint64_t a1)
{
}

uint64_t sub_1C20F05FC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C20F0664@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_1C20EAB20(a1, *(void *)(v2 + 24), *(unsigned char *)(v2 + 32), a2);
}

uint64_t sub_1C20F0688@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_1C20EAE24(a1, *(void **)(v2 + 24), a2);
}

void sub_1C20F06AC(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_1C20F06F8(uint64_t *a1)
{
  return sub_1C20E38D8(*a1);
}

uint64_t sub_1C20F0704@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_1C20F0458(a1, a2);
}

uint64_t type metadata accessor for MedicationSourceListCell(uint64_t a1)
{
  return sub_1C1F20D10(a1, (uint64_t *)&unk_1EA2C7088);
}

uint64_t sub_1C20F0740()
{
  return sub_1C1F20D54();
}

uint64_t sub_1C20F074C()
{
  uint64_t v0 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C20F21C8(0, &qword_1EBF0C610, MEMORY[0x1E4FB0E38], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v1 - 8);
  unint64_t v3 = (char *)&v23 - v2;
  uint64_t v24 = sub_1C21498E0();
  uint64_t v4 = *(void *)(v24 - 8);
  MEMORY[0x1F4188790](v24);
  uint64_t v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1C2149860();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C20F21C8(0, &qword_1EBF0C620, MEMORY[0x1E4FB0F28], v0);
  uint64_t v12 = MEMORY[0x1F4188790](v11 - 8);
  uint64_t v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  int v16 = (char *)&v23 - v15;
  sub_1C21482B0();
  uint64_t v17 = (uint64_t (*)(void))sub_1C21482C0();
  uint64_t v18 = v17();
  MEMORY[0x1C8752FE0](v18);
  uint64_t v19 = sub_1C21499D0();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 48))(v16, 1, v19))
  {
    sub_1C1FB6040((uint64_t)v16, (uint64_t)v14);
    MEMORY[0x1C8752FF0](v14);
    sub_1C20F222C((uint64_t)v16, (uint64_t)&qword_1EBF0C620, MEMORY[0x1E4FB0F28], MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C20F21C8);
  }
  else
  {
    id v20 = objc_msgSend(self, sel_tertiarySystemBackgroundColor);
    sub_1C2149990();
    MEMORY[0x1C8752FF0](v16);
  }
  sub_1C20F21C8(0, (unint64_t *)&unk_1EBF0C990, MEMORY[0x1E4FB0E68], MEMORY[0x1E4FBBE00]);
  sub_1C2149930();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1C214FCD0;
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E4FB0E18], v7);
  uint64_t v21 = sub_1C2149870();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v3, 1, 1, v21);
  sub_1C21498D0();
  sub_1C21498A0();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v24);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return sub_1C214AEC0();
}

void sub_1C20F0C08()
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v1 = sub_1C21497F0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v22[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C21482A0();
  if (v22[3])
  {
    sub_1C1F23804(0, (unint64_t *)&qword_1EBF0C2F0);
    type metadata accessor for MedicationSourceListItem();
    if (swift_dynamicCast())
    {
      uint64_t v5 = v21;
      id v6 = objc_msgSend(*(id *)(v21 + 24), sel_source);
      id v7 = objc_msgSend(v6, sel_name);

      sub_1C214A5F0();
      sub_1C21480F0();
      uint64_t v8 = (void *)sub_1C21480E0();
      sub_1C2148290();
      swift_bridgeObjectRelease();

      id v9 = objc_msgSend(self, sel_sharedImageManager);
      id v10 = objc_msgSend(*(id *)(v5 + 24), sel_source);
      id v11 = objc_msgSend(v9, sel_iconForSource_productType_, v10, 0);

      if (v11)
      {
        id v12 = objc_msgSend(*(id *)(v5 + 24), sel_source);
        id v13 = objc_msgSend(v12, sel_name);

        sub_1C214A5F0();
        id v14 = v11;
        sub_1C2148290();
        swift_release();
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_release();
      }
      return;
    }
  }
  else
  {
    sub_1C20F222C((uint64_t)v22, (uint64_t)&qword_1EBF0C300, (uint64_t)&qword_1EBF0C2F0, MEMORY[0x1E4F66028], (uint64_t (*)(void))sub_1C1F237AC);
  }
  sub_1C21497D0();
  uint64_t v15 = sub_1C21497E0();
  os_log_type_t v16 = sub_1C214ABE0();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = (uint8_t *)swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    uint64_t v21 = v18;
    v22[0] = ObjectType;
    *(_DWORD *)uint64_t v17 = 136446210;
    swift_getMetatypeMetadata();
    uint64_t v19 = sub_1C214A610();
    v22[0] = sub_1C1F6FD54(v19, v20, &v21);
    sub_1C214B530();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C1F0B000, v15, v16, "[%{public}s] item is not an MedicationSourceListItem", v17, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C8754730](v18, -1, -1);
    MEMORY[0x1C8754730](v17, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

id sub_1C20F0FF0(void *a1, uint64_t a2, double a3, double a4, double a5, double a6)
{
  return sub_1C20F1760(a1, a3, a4, a5, a6, a2, type metadata accessor for MedicationSourceListCell);
}

id sub_1C20F1008(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C20F17F0(a1, a2, a3, type metadata accessor for MedicationSourceListCell);
}

id sub_1C20F1020()
{
  return sub_1C20F1858(type metadata accessor for MedicationSourceListCell);
}

uint64_t sub_1C20F1038()
{
  return type metadata accessor for MedicationSourceListCell(0);
}

void sub_1C20F1040(uint64_t a1, void *a2)
{
}

uint64_t sub_1C20F1068()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MedicationSourceListItem()
{
  return self;
}

uint64_t type metadata accessor for MedicationSourceListNoneCell(uint64_t a1)
{
  return sub_1C1F20D10(a1, (uint64_t *)&unk_1EA2C7098);
}

uint64_t sub_1C20F1104()
{
  return sub_1C1F20D54();
}

uint64_t sub_1C20F1110()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

id sub_1C20F1144()
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v2 = sub_1C21497F0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v20[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C21482A0();
  if (v20[3])
  {
    sub_1C1F23804(0, (unint64_t *)&qword_1EBF0C2F0);
    type metadata accessor for MedicationSourceListNoneItem();
    if (swift_dynamicCast())
    {
      swift_release();
      if (qword_1EBF0CA00 != -1) {
        swift_once();
      }
      id v6 = (id)qword_1EBF0CA18;
      swift_bridgeObjectRetain();
      uint64_t v7 = sub_1C2147730();
      uint64_t v9 = v8;
      swift_bridgeObjectRelease();

      id v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1818]), sel_init);
      sub_1C21482B0();
      id v11 = (void (*)(uint64_t, uint64_t, void))sub_1C21482C0();
      v11(v7, v9, 0);
      swift_bridgeObjectRetain();
      sub_1C20F1EA4();

      swift_bridgeObjectRelease_n();
      return objc_msgSend(v0, sel_setUserInteractionEnabled_, 0);
    }
  }
  else
  {
    sub_1C20F222C((uint64_t)v20, (uint64_t)&qword_1EBF0C300, (uint64_t)&qword_1EBF0C2F0, MEMORY[0x1E4F66028], (uint64_t (*)(void))sub_1C1F237AC);
  }
  sub_1C21497D0();
  id v13 = sub_1C21497E0();
  os_log_type_t v14 = sub_1C214ABE0();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = (uint8_t *)swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    uint64_t v19 = v16;
    v20[0] = ObjectType;
    *(_DWORD *)uint64_t v15 = 136446210;
    swift_getMetatypeMetadata();
    uint64_t v17 = sub_1C214A610();
    v20[0] = sub_1C1F6FD54(v17, v18, &v19);
    sub_1C214B530();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C1F0B000, v13, v14, "[%{public}s] item is not an MedicationSourceListNoneItem", v15, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C8754730](v16, -1, -1);
    MEMORY[0x1C8754730](v15, -1, -1);
  }

  return (id)(*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_1C20F14EC()
{
  sub_1C20F21C8(0, &qword_1EBF0C620, MEMORY[0x1E4FB0F28], MEMORY[0x1E4FBB718]);
  uint64_t v1 = MEMORY[0x1F4188790](v0 - 8);
  uint64_t v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v1);
  uint64_t v5 = (char *)&v11 - v4;
  sub_1C21482B0();
  id v6 = (uint64_t (*)(void))sub_1C21482C0();
  uint64_t v7 = v6();
  MEMORY[0x1C8752FE0](v7);
  uint64_t v8 = sub_1C21499D0();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v5, 1, v8))
  {
    sub_1C1FB6040((uint64_t)v5, (uint64_t)v3);
    MEMORY[0x1C8752FF0](v3);
    return sub_1C20F222C((uint64_t)v5, (uint64_t)&qword_1EBF0C620, MEMORY[0x1E4FB0F28], MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C20F21C8);
  }
  else
  {
    id v10 = objc_msgSend(self, sel_tertiarySystemBackgroundColor);
    sub_1C2149990();
    return MEMORY[0x1C8752FF0](v5);
  }
}

uint64_t sub_1C20F16B8(uint64_t a1, uint64_t a2)
{
  sub_1C21482B0();
  uint64_t v4 = (void (*)(uint64_t, uint64_t, void))sub_1C21482C0();
  v4(a1, a2, 0);
  swift_bridgeObjectRetain();
  sub_1C20F1EA4();

  return swift_bridgeObjectRelease();
}

id sub_1C20F1748(void *a1, uint64_t a2, double a3, double a4, double a5, double a6)
{
  return sub_1C20F1760(a1, a3, a4, a5, a6, a2, type metadata accessor for MedicationSourceListNoneCell);
}

id sub_1C20F1760(void *a1, double a2, double a3, double a4, double a5, uint64_t a6, uint64_t (*a7)(void))
{
  v12.receiver = a1;
  v12.super_class = (Class)a7(0);
  return objc_msgSendSuper2(&v12, sel_initWithFrame_, a2, a3, a4, a5);
}

id sub_1C20F17D8(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C20F17F0(a1, a2, a3, type metadata accessor for MedicationSourceListNoneCell);
}

id sub_1C20F17F0(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  v6.receiver = a1;
  v6.super_class = (Class)a4(0);
  return objc_msgSendSuper2(&v6, sel_initWithCoder_, a3);
}

id sub_1C20F1840()
{
  return sub_1C20F1858(type metadata accessor for MedicationSourceListNoneCell);
}

id sub_1C20F1858(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1(0);
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t sub_1C20F1898()
{
  return type metadata accessor for MedicationSourceListNoneCell(0);
}

uint64_t sub_1C20F18A0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MedicationSourceListNoneItem()
{
  return self;
}

uint64_t sub_1C20F1904()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

void sub_1C20F1938(void *a1)
{
  uint64_t v2 = v1;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = sub_1C21497F0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C21482A0();
  if (!v40[3])
  {
    sub_1C20F222C((uint64_t)v40, (uint64_t)&qword_1EBF0C300, (uint64_t)&qword_1EBF0C2F0, MEMORY[0x1E4F66028], (uint64_t (*)(void))sub_1C1F237AC);
    goto LABEL_7;
  }
  sub_1C1F23804(0, (unint64_t *)&qword_1EBF0C2F0);
  type metadata accessor for MedicationSourceListItem();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_7:
    sub_1C21497D0();
    uint64_t v32 = sub_1C21497E0();
    os_log_type_t v33 = sub_1C214ABE0();
    if (os_log_type_enabled(v32, v33))
    {
      id v34 = (uint8_t *)swift_slowAlloc();
      uint64_t v35 = swift_slowAlloc();
      uint64_t v39 = v35;
      v40[0] = ObjectType;
      *(_DWORD *)id v34 = 136446210;
      swift_getMetatypeMetadata();
      uint64_t v36 = sub_1C214A610();
      v40[0] = sub_1C1F6FD54(v36, v37, &v39);
      sub_1C214B530();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C1F0B000, v32, v33, "[%{public}s] item is not an MedicationSourceListItem", v34, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C8754730](v35, -1, -1);
      MEMORY[0x1C8754730](v34, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    return;
  }
  uint64_t v9 = v39;
  id v10 = objc_msgSend(self, sel_sharedInstanceForHealthStore_, *(void *)(v39 + 32));
  id v11 = objc_msgSend(v10, sel_profile);

  id v12 = objc_msgSend(v11, sel_displayTypeController);
  if (v12)
  {
    id v13 = v12;
    sub_1C20F1E64();
    id v14 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_medicationDoseEventTypeForIdentifier_, *MEMORY[0x1E4F2A040]);
    id v15 = objc_msgSend(v13, sel_displayTypeForObjectType_, v14);

    if (v15)
    {
      uint64_t v16 = self;
      id v17 = objc_msgSend(*(id *)(v9 + 24), sel_source);
      id v18 = objc_msgSend(v16, sel_predicateForObjectsFromSource_, v17);

      uint64_t v19 = *(void **)(v9 + 16);
      unint64_t v20 = (objc_class *)type metadata accessor for MedicationListAllDataProvider();
      uint64_t v21 = (char *)objc_allocWithZone(v20);
      uint64_t v22 = OBJC_IVAR____TtC19HealthMedicationsUI29MedicationListAllDataProvider_predicate;
      *(void *)&v21[OBJC_IVAR____TtC19HealthMedicationsUI29MedicationListAllDataProvider_predicate] = 0;
      *(void *)&v21[OBJC_IVAR____TtC19HealthMedicationsUI29MedicationListAllDataProvider_medication] = v19;
      uint64_t v23 = *(void **)&v21[v22];
      *(void *)&v21[v22] = v18;
      id v24 = v19;
      id v25 = v18;
      id v26 = v24;
      id v27 = v25;
      id v28 = v15;
      id v29 = v11;

      v38.receiver = v21;
      v38.super_class = v20;
      id v30 = objc_msgSendSuper2(&v38, sel_initWithDisplayType_profile_, v28, v29);

      id v31 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F67890]), sel_initWithDisplayType_profile_dataProvider_usingInsetStyling_, v28, v29, v30, 1);
      objc_msgSend(a1, sel_showViewController_sender_, v31, v2);
      swift_release();

      return;
    }
  }
  else
  {
    __break(1u);
  }
  v40[0] = 0;
  v40[1] = 0xE000000000000000;
  sub_1C214B7C0();
  swift_getObjectType();
  sub_1C214BC10();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  sub_1C214A6C0();
  sub_1C214B910();
  __break(1u);
}

unint64_t sub_1C20F1E64()
{
  unint64_t result = qword_1EA2C6BD0;
  if (!qword_1EA2C6BD0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA2C6BD0);
  }
  return result;
}

uint64_t sub_1C20F1EA4()
{
  sub_1C20F21C8(0, &qword_1EA2C70A8, MEMORY[0x1E4FB0F90], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v2 = (char *)&v14[-1] - v1;
  uint64_t v3 = sub_1C2149BE0();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v14[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1C8752FC0](v14, v5);
  if (v15)
  {
    sub_1C1F23804(0, &qword_1EA2C70B8);
    int v8 = swift_dynamicCast();
    (*(void (**)(char *, void, uint64_t, uint64_t))(v4 + 56))(v2, v8 ^ 1u, 1, v3);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v7, v2, v3);
      id v9 = objc_msgSend(self, sel_secondaryLabelColor);
      id v10 = (void (*)(uint64_t *, void))sub_1C2149AA0();
      sub_1C2149A60();
      v10(v14, 0);
      uint64_t v15 = v3;
      uint64_t v16 = MEMORY[0x1E4FB0F88];
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v14);
      (*(void (**)(uint64_t *, char *, uint64_t))(v4 + 16))(boxed_opaque_existential_1, v7, v3);
      MEMORY[0x1C8752FD0](v14);
      return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
    }
  }
  else
  {
    sub_1C20F222C((uint64_t)v14, (uint64_t)&unk_1EA2C70B0, (uint64_t)&qword_1EA2C70B8, MEMORY[0x1E4FB0EC8], (uint64_t (*)(void))sub_1C1F237AC);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v2, 1, 1, v3);
  }
  return sub_1C20F222C((uint64_t)v2, (uint64_t)&qword_1EA2C70A8, MEMORY[0x1E4FB0F90], MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C20F21C8);
}

void sub_1C20F21C8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C20F222C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v6 = a5(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
  return a1;
}

uint64_t type metadata accessor for ScheduleStepViewController()
{
  uint64_t result = qword_1EA2C70C0;
  if (!qword_1EA2C70C0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C20F22D8()
{
  return swift_initClassMetadata2();
}

void sub_1C20F2318(unsigned char *a1@<X8>)
{
  *a1 = 96;
}

uint64_t sub_1C20F2324()
{
  return sub_1C2149FC0();
}

void sub_1C20F23D8()
{
}

void sub_1C20F2434()
{
}

id sub_1C20F2464()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ScheduleStepViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1C20F249C()
{
  return type metadata accessor for ScheduleStepViewController();
}

uint64_t sub_1C20F24A4(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5, _OWORD *a6)
{
  uint64_t v7 = v6;
  sub_1C1F73AC0();
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v16 = (char *)v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v17 = a6[1];
  v24[0] = *a6;
  v24[1] = v17;
  type metadata accessor for MedicationScheduleDataSource();
  swift_allocObject();
  id v18 = a5;
  swift_retain();
  uint64_t v19 = MedicationScheduleDataSource.init(schedulePublisher:medication:concept:presentationContext:)(a3, a4, a5, (uint64_t *)v24);
  sub_1C1F246EC(a1, (uint64_t)v16);
  sub_1C1F246EC((uint64_t)v16, v7 + qword_1EA2C7D08);
  sub_1C20F2630();
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = v19;
  uint64_t v21 = *(void *)(v19 + qword_1EA2C81A0);
  *(void *)(v7 + qword_1EA2C4208) = v20;
  *(void *)(v20 + 24) = v21;
  *(void *)(v7 + qword_1EA2C421sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = a2;
  swift_retain();
  swift_retain();
  uint64_t v22 = sub_1C2148AC0();
  sub_1C2043414((uint64_t)v16);
  sub_1C2043414(a1);
  return v22;
}

void sub_1C20F2630()
{
  if (!qword_1EA2C70D0)
  {
    type metadata accessor for MedicationScheduleDataSource();
    sub_1C20F26C4(&qword_1EA2C70D8, (void (*)(uint64_t))type metadata accessor for MedicationScheduleDataSource);
    unint64_t v0 = type metadata accessor for SpecificationStepViewController.MedicationOnboardingStepObservableDataSource();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C70D0);
    }
  }
}

uint64_t sub_1C20F26C4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C20F270C()
{
  unint64_t v0 = (void *)sub_1C2148700();
  objc_msgSend(v0, sel_setContentInsetsReference_, 1);
  objc_msgSend(v0, sel_setSupplementaryContentInsetsReference_, 1);
  id v1 = objc_msgSend(v0, sel_boundarySupplementaryItems);
  sub_1C20F28D4();
  unint64_t v2 = sub_1C214A780();

  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_1C214B930();
    uint64_t v3 = result;
  }
  else
  {
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
  }
  if (!v3)
  {
LABEL_10:
    swift_bridgeObjectRelease_n();
    sub_1C214AE90();
    objc_msgSend(v0, sel_contentInsets);
    objc_msgSend(v0, sel_setContentInsets_);
    sub_1C214AE90();
    objc_msgSend(v0, sel_contentInsets);
    objc_msgSend(v0, sel_setContentInsets_);
    return (uint64_t)v0;
  }
  if (v3 >= 1)
  {
    uint64_t v5 = 0;
    do
    {
      if ((v2 & 0xC000000000000001) != 0) {
        id v6 = (id)MEMORY[0x1C8753960](v5, v2);
      }
      else {
        id v6 = *(id *)(v2 + 8 * v5 + 32);
      }
      uint64_t v7 = v6;
      ++v5;
      objc_msgSend(v6, sel_contentInsets);
      objc_msgSend(v7, sel_setContentInsets_);
      objc_msgSend(v7, sel_contentInsets);
      objc_msgSend(v7, sel_setContentInsets_);
    }
    while (v3 != v5);
    goto LABEL_10;
  }
  __break(1u);
  return result;
}

unint64_t sub_1C20F28D4()
{
  unint64_t result = qword_1EA2C43A8;
  if (!qword_1EA2C43A8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA2C43A8);
  }
  return result;
}

uint64_t sub_1C20F2914(uint64_t a1)
{
  if (!*(void *)(a1 + 16)) {
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for MedicationsDayHistoryHeaderItem();
  uint64_t v5 = swift_allocObject();
  sub_1C2147B10();
  id v6 = (uint64_t *)(v5 + OBJC_IVAR____TtC19HealthMedicationsUI31MedicationsDayHistoryHeaderItem_reuseIdentifier);
  type metadata accessor for MedicationsDayHistoryHeaderCell();
  sub_1C20F3788(&qword_1EA2C2778, (void (*)(uint64_t))type metadata accessor for MedicationsDayHistoryHeaderCell);
  *id v6 = sub_1C21481D0();
  v6[1] = v7;
  *(unsigned char *)(v5 + OBJC_IVAR____TtC19HealthMedicationsUI31MedicationsDayHistoryHeaderItem_displayContext) = 0;
  unint64_t v8 = sub_1C1F3AAC4(0, 1, 1, MEMORY[0x1E4FBC860]);
  unint64_t v10 = v8[2];
  unint64_t v9 = v8[3];
  if (v10 >= v9 >> 1) {
    unint64_t v8 = sub_1C1F3AAC4((void *)(v9 > 1), v10 + 1, 1, v8);
  }
  uint64_t v14 = v4;
  uint64_t v15 = sub_1C20F3788(&qword_1EA2C70E0, (void (*)(uint64_t))type metadata accessor for MedicationsDayHistoryHeaderItem);
  *(void *)&long long v13 = v5;
  _OWORD v8[2] = v10 + 1;
  sub_1C1F31280(&v13, (uint64_t)&v8[5 * v10 + 4]);
  *(void *)&long long v13 = v8;
  uint64_t v11 = sub_1C20F3544(a1, (void (*)(uint64_t))sub_1C20F3728, v2);
  sub_1C1F7D1D0(v11);
  return v13;
}

uint64_t sub_1C20F2AE8(uint64_t a1)
{
  if (!*(void *)(a1 + 16)) {
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for MedicationsDayHistoryHeaderItem();
  uint64_t v5 = swift_allocObject();
  sub_1C2147B10();
  id v6 = (uint64_t *)(v5 + OBJC_IVAR____TtC19HealthMedicationsUI31MedicationsDayHistoryHeaderItem_reuseIdentifier);
  type metadata accessor for MedicationsDayHistoryHeaderCell();
  sub_1C20F3788(&qword_1EA2C2778, (void (*)(uint64_t))type metadata accessor for MedicationsDayHistoryHeaderCell);
  *id v6 = sub_1C21481D0();
  v6[1] = v7;
  *(unsigned char *)(v5 + OBJC_IVAR____TtC19HealthMedicationsUI31MedicationsDayHistoryHeaderItem_displayContext) = 1;
  unint64_t v8 = sub_1C1F3AAC4(0, 1, 1, MEMORY[0x1E4FBC860]);
  unint64_t v10 = v8[2];
  unint64_t v9 = v8[3];
  if (v10 >= v9 >> 1) {
    unint64_t v8 = sub_1C1F3AAC4((void *)(v9 > 1), v10 + 1, 1, v8);
  }
  uint64_t v14 = v4;
  uint64_t v15 = sub_1C20F3788(&qword_1EA2C70E0, (void (*)(uint64_t))type metadata accessor for MedicationsDayHistoryHeaderItem);
  *(void *)&long long v13 = v5;
  _OWORD v8[2] = v10 + 1;
  sub_1C1F31280(&v13, (uint64_t)&v8[5 * v10 + 4]);
  *(void *)&long long v13 = v8;
  uint64_t v11 = sub_1C20F3544(a1, (void (*)(uint64_t))sub_1C20F3784, v2);
  sub_1C1F7D1D0(v11);
  return v13;
}

uint64_t HistoryItemsProviderDataSource.makeHistoryItems(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!*(void *)(a1 + 16)) {
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v4 = v3;
  (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(a3 + 16))(&v20, a2, a3);
  char v8 = v20;
  uint64_t v9 = type metadata accessor for MedicationsDayHistoryHeaderItem();
  uint64_t v10 = swift_allocObject();
  sub_1C2147B10();
  uint64_t v11 = (uint64_t *)(v10 + OBJC_IVAR____TtC19HealthMedicationsUI31MedicationsDayHistoryHeaderItem_reuseIdentifier);
  type metadata accessor for MedicationsDayHistoryHeaderCell();
  sub_1C20F3788(&qword_1EA2C2778, (void (*)(uint64_t))type metadata accessor for MedicationsDayHistoryHeaderCell);
  uint64_t *v11 = sub_1C21481D0();
  v11[1] = v12;
  *(unsigned char *)(v10 + OBJC_IVAR____TtC19HealthMedicationsUI31MedicationsDayHistoryHeaderItem_displayContext) = v8;
  long long v13 = sub_1C1F3AAC4(0, 1, 1, MEMORY[0x1E4FBC860]);
  unint64_t v15 = v13[2];
  unint64_t v14 = v13[3];
  if (v15 >= v14 >> 1) {
    long long v13 = sub_1C1F3AAC4((void *)(v14 > 1), v15 + 1, 1, v13);
  }
  uint64_t v21 = v9;
  uint64_t v22 = sub_1C20F3788(&qword_1EA2C70E0, (void (*)(uint64_t))type metadata accessor for MedicationsDayHistoryHeaderItem);
  *(void *)&long long v20 = v10;
  void v13[2] = v15 + 1;
  uint64_t v16 = sub_1C1F31280(&v20, (uint64_t)&v13[5 * v15 + 4]);
  *(void *)&long long v20 = v13;
  MEMORY[0x1F4188790](v16);
  v19[2] = a2;
  void v19[3] = a3;
  void v19[4] = v4;
  uint64_t v17 = sub_1C20F3544(a1, (void (*)(uint64_t))sub_1C20F351C, (uint64_t)v19);
  sub_1C1F7D1D0(v17);
  return v20;
}

uint64_t sub_1C20F2EFC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1C1F236D8((uint64_t)a1, (uint64_t)v28);
  sub_1C20F372C();
  sub_1C1F3C9F0(0);
  int v5 = swift_dynamicCast();
  uint64_t v6 = v27;
  if (!v5) {
    uint64_t v6 = 0;
  }
  uint64_t v26 = v6;
  uint64_t v7 = a1[3];
  uint64_t v8 = a1[4];
  __swift_project_boxed_opaque_existential_0(a1, v7);
  uint64_t v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v7, v8);
  uint64_t v24 = v10;
  uint64_t v25 = v9;
  uint64_t v11 = a1[3];
  uint64_t v12 = a1[4];
  __swift_project_boxed_opaque_existential_0(a1, v11);
  uint64_t v13 = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 16))(v11, v12);
  unint64_t v14 = *(void **)(v2 + qword_1EBF0C470);
  uint64_t v16 = a1[3];
  uint64_t v15 = a1[4];
  __swift_project_boxed_opaque_existential_0(a1, v16);
  uint64_t v17 = *(void (**)(uint64_t, uint64_t))(v15 + 24);
  id v18 = (int *)type metadata accessor for MedicationsDayHistoryItem();
  id v19 = v14;
  v17(v16, v15);
  sub_1C2147B10();
  long long v20 = (uint64_t *)(a2 + v18[11]);
  type metadata accessor for MedicationsDayHistoryCell();
  sub_1C20F3788(&qword_1EA2C6768, (void (*)(uint64_t))type metadata accessor for MedicationsDayHistoryCell);
  uint64_t result = sub_1C21481D0();
  *long long v20 = result;
  v20[1] = v22;
  uint64_t v23 = (uint64_t *)(a2 + v18[5]);
  uint64_t *v23 = v25;
  v23[1] = v24;
  *(void *)(a2 + v18[6]) = v13;
  *(void *)(a2 + v18[7]) = v26;
  *(void *)(a2 + v18[8]) = v19;
  *(unsigned char *)(a2 + v18[10]) = 0;
  return result;
}

uint64_t sub_1C20F30F0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1C1F236D8((uint64_t)a1, (uint64_t)v28);
  sub_1C20F372C();
  sub_1C1F3C9F0(0);
  int v5 = swift_dynamicCast();
  uint64_t v6 = v27;
  if (!v5) {
    uint64_t v6 = 0;
  }
  uint64_t v26 = v6;
  uint64_t v7 = a1[3];
  uint64_t v8 = a1[4];
  __swift_project_boxed_opaque_existential_0(a1, v7);
  uint64_t v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v7, v8);
  uint64_t v24 = v10;
  uint64_t v25 = v9;
  uint64_t v11 = a1[3];
  uint64_t v12 = a1[4];
  __swift_project_boxed_opaque_existential_0(a1, v11);
  uint64_t v13 = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 16))(v11, v12);
  unint64_t v14 = *(void **)(v2 + qword_1EA2C7328);
  uint64_t v16 = a1[3];
  uint64_t v15 = a1[4];
  __swift_project_boxed_opaque_existential_0(a1, v16);
  uint64_t v17 = *(void (**)(uint64_t, uint64_t))(v15 + 24);
  id v18 = (int *)type metadata accessor for MedicationsDayHistoryItem();
  id v19 = v14;
  v17(v16, v15);
  sub_1C2147B10();
  long long v20 = (uint64_t *)(a2 + v18[11]);
  type metadata accessor for MedicationsDayHistoryCell();
  sub_1C20F3788(&qword_1EA2C6768, (void (*)(uint64_t))type metadata accessor for MedicationsDayHistoryCell);
  uint64_t result = sub_1C21481D0();
  *long long v20 = result;
  v20[1] = v22;
  uint64_t v23 = (uint64_t *)(a2 + v18[5]);
  uint64_t *v23 = v25;
  v23[1] = v24;
  *(void *)(a2 + v18[6]) = v13;
  *(void *)(a2 + v18[7]) = v26;
  *(void *)(a2 + v18[8]) = v19;
  *(unsigned char *)(a2 + v18[10]) = 1;
  return result;
}

uint64_t sub_1C20F32E8@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_1C1F236D8((uint64_t)a1, (uint64_t)v31);
  sub_1C20F372C();
  sub_1C1F3C9F0(0);
  int v8 = swift_dynamicCast();
  uint64_t v9 = v30;
  if (!v8) {
    uint64_t v9 = 0;
  }
  uint64_t v29 = v9;
  uint64_t v10 = a1[3];
  uint64_t v11 = a1[4];
  __swift_project_boxed_opaque_existential_0(a1, v10);
  uint64_t v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8))(v10, v11);
  uint64_t v27 = v13;
  uint64_t v28 = v12;
  uint64_t v14 = a1[3];
  uint64_t v15 = a1[4];
  __swift_project_boxed_opaque_existential_0(a1, v14);
  uint64_t v26 = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 16))(v14, v15);
  uint64_t v25 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 8))(a2, a3);
  uint64_t v16 = a1[3];
  uint64_t v17 = a1[4];
  __swift_project_boxed_opaque_existential_0(a1, v16);
  id v18 = *(void (**)(uint64_t, uint64_t))(v17 + 24);
  id v19 = (int *)type metadata accessor for MedicationsDayHistoryItem();
  v18(v16, v17);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(a3 + 16))(v31, a2, a3);
  char v20 = v31[0];
  sub_1C2147B10();
  uint64_t v21 = (uint64_t *)(a4 + v19[11]);
  type metadata accessor for MedicationsDayHistoryCell();
  sub_1C20F3788(&qword_1EA2C6768, (void (*)(uint64_t))type metadata accessor for MedicationsDayHistoryCell);
  uint64_t result = sub_1C21481D0();
  *uint64_t v21 = result;
  v21[1] = v23;
  uint64_t v24 = (uint64_t *)(a4 + v19[5]);
  *uint64_t v24 = v28;
  v24[1] = v27;
  *(void *)(a4 + v19[6]) = v26;
  *(void *)(a4 + v19[7]) = v29;
  *(void *)(a4 + v19[8]) = v25;
  *(unsigned char *)(a4 + v19[10]) = v20;
  return result;
}

uint64_t sub_1C20F351C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C20F32E8(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

uint64_t sub_1C20F3544(uint64_t a1, void (*a2)(uint64_t), uint64_t a3)
{
  void v16[2] = a3;
  uint64_t v6 = type metadata accessor for MedicationsDayHistoryItem();
  MEMORY[0x1F4188790](v6);
  int v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v9 = *(void *)(a1 + 16);
  uint64_t v10 = MEMORY[0x1E4FBC860];
  if (v9)
  {
    v16[1] = v3;
    uint64_t v20 = MEMORY[0x1E4FBC860];
    sub_1C1F704CC(0, v9, 0);
    uint64_t v10 = v20;
    uint64_t v11 = a1 + 32;
    do
    {
      a2(v11);
      uint64_t v20 = v10;
      unint64_t v13 = *(void *)(v10 + 16);
      unint64_t v12 = *(void *)(v10 + 24);
      if (v13 >= v12 >> 1)
      {
        sub_1C1F704CC(v12 > 1, v13 + 1, 1);
        uint64_t v10 = v20;
      }
      uint64_t v18 = v6;
      uint64_t v19 = sub_1C20F3788(&qword_1EA2C70E8, (void (*)(uint64_t))type metadata accessor for MedicationsDayHistoryItem);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v17);
      sub_1C1F92B8C((uint64_t)v8, (uint64_t)boxed_opaque_existential_1);
      *(void *)(v10 + 16) = v13 + 1;
      sub_1C1F31280(&v17, v10 + 40 * v13 + 32);
      sub_1C1F92BF0((uint64_t)v8);
      v11 += 40;
      --v9;
    }
    while (v9);
  }
  return v10;
}

uint64_t dispatch thunk of HistoryItemsProviderDataSource.healthStore.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of HistoryItemsProviderDataSource.context.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of HistoryItemsProviderDataSource.makeHistoryItems(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

unint64_t sub_1C20F372C()
{
  unint64_t result = qword_1EA2C3BA8;
  if (!qword_1EA2C3BA8)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA2C3BA8);
  }
  return result;
}

uint64_t sub_1C20F3788(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t HKMedicationUserDomainConcept.educationSideEffects.getter()
{
  return sub_1C20F3800(MEMORY[0x1E4F67828]);
}

uint64_t HKMedicationUserDomainConcept.educationPregnancyDescription.getter()
{
  return sub_1C20F3800(MEMORY[0x1E4F67838]);
}

uint64_t sub_1C20F3800(uint64_t (*a1)(uint64_t, void))
{
  id v3 = objc_msgSend(v1, sel_localizedOntologyEducationContent);
  if (!v3) {
    return 0;
  }
  uint64_t v4 = v3;
  uint64_t v5 = sub_1C1F12718(0, (unint64_t *)&unk_1EA2C4680);
  uint64_t v6 = a1(v5, MEMORY[0x1E4F67848]);

  return v6;
}

uint64_t sub_1C20F38A0()
{
  uint64_t v0 = _sSo29HKMedicationUserDomainConceptC19HealthMedicationsUIE8doseFormSSSgvg_0();
  if (v1)
  {
    uint64_t v2 = v0;
    uint64_t v3 = v1;
    uint64_t v4 = _sSo29HKMedicationUserDomainConceptC19HealthMedicationsUIE8strengthSSSgvg_0();
    if (v5)
    {
      uint64_t v6 = v4;
      uint64_t v7 = v5;
      if (qword_1EBF0CA00 != -1) {
        swift_once();
      }
      int v8 = (void *)qword_1EBF0CA18;
      sub_1C20F6888(0, qword_1EBF0B8A0, (unint64_t *)&qword_1EBF0C9F0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
      uint64_t v9 = swift_allocObject();
      *(_OWORD *)(v9 + 16) = xmmword_1C214FCC0;
      uint64_t v10 = MEMORY[0x1E4FBB1A0];
      *(void *)(v9 + 56) = MEMORY[0x1E4FBB1A0];
      unint64_t v11 = sub_1C1F31298();
      *(void *)(v9 + 32) = v2;
      *(void *)(v9 + 4sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = v3;
      *(void *)(v9 + 96) = v10;
      *(void *)(v9 + 104) = v11;
      *(void *)(v9 + 64) = v11;
      *(void *)(v9 + 72) = v6;
      *(void *)(v9 + 8sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = v7;
      id v12 = v8;
      swift_bridgeObjectRetain();
      sub_1C2147730();
      uint64_t v13 = sub_1C214A5C0();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v13;
    }
    swift_bridgeObjectRelease();
  }
  uint64_t v14 = _sSo29HKMedicationUserDomainConceptC19HealthMedicationsUIE8doseFormSSSgvg_0();
  if (!v15) {
    return _sSo29HKMedicationUserDomainConceptC19HealthMedicationsUIE8strengthSSSgvg_0();
  }
  return v14;
}

uint64_t HKMedicationUserDomainConcept.educationLactationDescription.getter()
{
  return sub_1C20F3800(MEMORY[0x1E4F67830]);
}

BOOL HKMedicationUserDomainConcept.isOntologyBacked.getter()
{
  id v1 = objc_msgSend(v0, sel_firstOntologyCoding);
  id v2 = v1;
  if (v1) {

  }
  return v2 != 0;
}

id HKMedicationUserDomainConcept.educationContentProviding.getter@<X0>(void *a1@<X8>)
{
  a1[3] = sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8C0);
  a1[4] = sub_1C1F2F9D0(&qword_1EA2C70F0, (unint64_t *)&qword_1EBF0C8C0);
  *a1 = v3;

  return v3;
}

uint64_t HKMedicationUserDomainConcept.hasEducation.getter()
{
  id v1 = objc_msgSend(v0, sel_localizedOntologyEducationContent);
  if (v1)
  {
    id v2 = v1;
    sub_1C1F12718(0, (unint64_t *)&unk_1EA2C4680);
    char v3 = sub_1C21480D0();
  }
  else
  {
    char v3 = 0;
  }
  return v3 & 1;
}

uint64_t HKMedicationUserDomainConcept.educationPrimaryContent.getter()
{
  return sub_1C20F3800(MEMORY[0x1E4F67840]);
}

uint64_t HKMedicationUserDomainConcept.educationTitle.getter()
{
  return sub_1C2149490();
}

void *HKMedicationUserDomainConcept.attributions.getter()
{
  id v1 = objc_msgSend(v0, sel_localizedOntologyEducationContent);
  id v2 = v1;
  if (v1)
  {
    id v3 = objc_msgSend(v1, sel_primarySection);

    if (v3)
    {
      sub_1C214B060();

      sub_1C1FE7550();
      sub_1C20F3D44((unint64_t *)&qword_1EA2C44D0, (void (*)(uint64_t))sub_1C1FE7550);
      id v2 = (void *)sub_1C214A580();
      swift_bridgeObjectRelease();
    }
    else
    {
      return 0;
    }
  }
  return v2;
}

uint64_t sub_1C20F3D44(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t HKMedicationUserDomainConcept.uniqueIdentifier.getter()
{
  uint64_t v0 = sub_1C2147B20();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  id v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2147B10();
  uint64_t v4 = sub_1C2147AD0();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

uint64_t sub_1C20F3E68()
{
  id v1 = objc_msgSend(*v0, sel_localizedOntologyEducationContent);
  if (v1)
  {
    uint64_t v2 = v1;
    sub_1C1F12718(0, (unint64_t *)&unk_1EA2C4680);
    char v3 = sub_1C21480D0();
  }
  else
  {
    char v3 = 0;
  }
  return v3 & 1;
}

uint64_t sub_1C20F3EEC(uint64_t a1, uint64_t a2)
{
  return sub_1C20F3F70(a1, a2, MEMORY[0x1E4F67840]);
}

uint64_t sub_1C20F3F04()
{
  return sub_1C2149490();
}

uint64_t sub_1C20F3F58(uint64_t a1, uint64_t a2)
{
  return sub_1C20F3F70(a1, a2, MEMORY[0x1E4F67828]);
}

uint64_t sub_1C20F3F70(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, void))
{
  id v5 = objc_msgSend(*v3, sel_localizedOntologyEducationContent);
  if (!v5) {
    return 0;
  }
  uint64_t v6 = v5;
  uint64_t v7 = sub_1C1F12718(0, (unint64_t *)&unk_1EA2C4680);
  uint64_t v8 = a3(v7, MEMORY[0x1E4F67848]);

  return v8;
}

uint64_t sub_1C20F4010(uint64_t a1, uint64_t a2)
{
  return sub_1C20F3F70(a1, a2, MEMORY[0x1E4F67838]);
}

uint64_t sub_1C20F4028()
{
  sub_1C1F0E3D8(0, &qword_1EBF0B7A0, MEMORY[0x1E4F66CD8]);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v2 = (char *)&v7 - v1;
  sub_1C214AFE0();
  uint64_t v3 = sub_1C21494D0();
  uint64_t v4 = *(void *)(v3 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
  {
    sub_1C1F0E2B4((uint64_t)v2, &qword_1EBF0B7A0, MEMORY[0x1E4F66CD8]);
    char v5 = 0;
  }
  else
  {
    char v5 = sub_1C21494B0();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v2, v3);
  }
  return v5 & 1;
}

uint64_t sub_1C20F416C(uint64_t a1, uint64_t a2)
{
  return sub_1C20F3F70(a1, a2, MEMORY[0x1E4F67830]);
}

uint64_t sub_1C20F4184()
{
  sub_1C1F0E3D8(0, &qword_1EBF0B7A0, MEMORY[0x1E4F66CD8]);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v2 = (char *)&v7 - v1;
  sub_1C214AFE0();
  uint64_t v3 = sub_1C21494D0();
  uint64_t v4 = *(void *)(v3 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
  {
    sub_1C1F0E2B4((uint64_t)v2, &qword_1EBF0B7A0, MEMORY[0x1E4F66CD8]);
    return 2;
  }
  else
  {
    char v6 = sub_1C21494C0();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v2, v3);
    return v6 & 1;
  }
}

void *sub_1C20F42C8()
{
  return HKMedicationUserDomainConcept.attributions.getter();
}

uint64_t sub_1C20F42EC()
{
  uint64_t v0 = sub_1C2147B20();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2147B10();
  uint64_t v4 = sub_1C2147AD0();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

uint64_t HKMedicationUserDomainConcept.doseFormStrength.getter()
{
  id v1 = v0;
  uint64_t v2 = sub_1C20F38A0();

  return v2;
}

BOOL sub_1C20F4410()
{
  id v1 = objc_msgSend(*v0, sel_firstOntologyCoding);
  id v2 = v1;
  if (v1) {

  }
  return v2 != 0;
}

uint64_t sub_1C20F4458()
{
  return _sSo29HKMedicationUserDomainConceptC19HealthMedicationsUIE7medmoji0eF10Experience29MedicationVisualizationConfigVSgvg_0();
}

uint64_t sub_1C20F447C()
{
  return _sSo29HKMedicationUserDomainConceptC19HealthMedicationsUIE5titleSSvg_0();
}

uint64_t sub_1C20F44A0()
{
  id v1 = *v0;
  uint64_t v2 = sub_1C20F38A0();

  return v2;
}

id sub_1C20F44E8@<X0>(void *a1@<X8>)
{
  id v4 = *v1;
  a1[3] = sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8C0);
  a1[4] = sub_1C1F2F9D0(&qword_1EA2C70F0, (unint64_t *)&qword_1EBF0C8C0);
  *a1 = v4;

  return v4;
}

uint64_t MedicationCompactEducationDataSource.__allocating_init(with:analyticsManager:)(uint64_t a1, uint64_t a2)
{
  return MedicationCompactEducationDataSource.init(with:analyticsManager:)(a1, a2);
}

uint64_t MedicationCompactEducationDataSource.init(with:analyticsManager:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = qword_1EA2C70F8;
  *(void *)(v2 + qword_1EA2C70F8) = 0;
  *(void *)(v2 + qword_1EA2C710sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = MEMORY[0x1E4FBC870];
  uint64_t v6 = qword_1EBF0CA00;
  swift_retain();
  if (v6 != -1) {
    swift_once();
  }
  id v7 = (id)qword_1EBF0CA18;
  swift_bridgeObjectRetain();
  uint64_t v8 = sub_1C2147730();
  uint64_t v10 = v9;
  swift_bridgeObjectRelease();

  unint64_t v11 = (uint64_t *)(v2 + qword_1EA2C7108);
  uint64_t *v11 = v8;
  v11[1] = v10;
  *(void *)(v2 + v5) = a1;
  swift_retain();
  swift_release();
  *(void *)(v2 + qword_1EA2C711sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = a2;
  swift_retain();
  swift_release();
  uint64_t v12 = sub_1C2147F50();
  swift_retain();
  sub_1C20F4814(a1);
  sub_1C2149E90();
  sub_1C20F5398(v14, v12);

  swift_release();
  swift_release();
  swift_release();
  return v12;
}

uint64_t MedicationCompactEducationDataSource.__allocating_init(with:analyticsManager:)(void *a1, uint64_t a2)
{
  swift_allocObject();
  uint64_t v4 = sub_1C20F6564(a1, a2);
  swift_release();
  return v4;
}

uint64_t MedicationCompactEducationDataSource.init(with:analyticsManager:)(void *a1, uint64_t a2)
{
  uint64_t v2 = sub_1C20F6564(a1, a2);
  swift_release();
  return v2;
}

uint64_t sub_1C20F4814(uint64_t a1)
{
  uint64_t v2 = (void (*)(uint64_t))MEMORY[0x1E4FBCC28];
  sub_1C1F0E3D8(0, &qword_1EBF0C7E8, MEMORY[0x1E4FBCC28]);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)v15 - v4;
  sub_1C1FE7870();
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  void v15[2] = a1;
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0CB10);
  id v16 = (id)sub_1C214AD80();
  uint64_t v11 = sub_1C214AD20();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v5, 1, 1, v11);
  sub_1C1F4986C();
  sub_1C20F3D44(&qword_1EA2C35A0, (void (*)(uint64_t))sub_1C1F4986C);
  sub_1C1F2F9D0((unint64_t *)&qword_1EBF0C7F0, (unint64_t *)&qword_1EBF0CB10);
  sub_1C214A0A0();
  sub_1C1F0E2B4((uint64_t)v5, &qword_1EBF0C7E8, v2);

  uint64_t v12 = swift_allocObject();
  swift_weakInit();
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = v12;
  *(void *)(v13 + 24) = a1;
  sub_1C20F3D44((unint64_t *)&unk_1EA2C4DF0, (void (*)(uint64_t))sub_1C1FE7870);
  swift_retain();
  sub_1C214A0F0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  swift_beginAccess();
  sub_1C2149E20();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1C20F4B60()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = result;
    sub_1C2149E90();
    sub_1C20F5398(v2, v1);

    return swift_release();
  }
  return result;
}

uint64_t sub_1C20F4BD4(uint64_t a1)
{
  uint64_t v2 = sub_1C2148710();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  uint64_t v6 = &v14[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = &v14[-v7];
  if (a1) {
    sub_1C2148690();
  }
  else {
    sub_1C2148660();
  }
  uint64_t v9 = (void (*)(unsigned char *, void))sub_1C21486D0();
  *(void *)(v10 + 16) = 0x4024000000000000;
  v9(v14, 0);
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v3 + 16))(v6, v8, v2);
  uint64_t v11 = sub_1C2148700();
  uint64_t v12 = *(void (**)(unsigned char *, uint64_t))(v3 + 8);
  v12(v6, v2);
  v12(v8, v2);
  return v11;
}

void MedicationCompactEducationDataSource.__allocating_init(arrangedSections:isHidden:)()
{
}

void MedicationCompactEducationDataSource.init(arrangedSections:isHidden:)()
{
}

uint64_t sub_1C20F4DB4()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t MedicationCompactEducationDataSource.deinit()
{
  uint64_t v0 = _s19HealthMedicationsUI34InteractionSeperatorLineDataSourceCfd_0();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t MedicationCompactEducationDataSource.__deallocating_deinit()
{
  _s19HealthMedicationsUI34InteractionSeperatorLineDataSourceCfd_0();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_1C20F4F08()
{
  return sub_1C2148B80();
}

Swift::Void __swiftcall MedicationCompactEducationDataSource.registerCells(for:)(UICollectionView *a1)
{
}

uint64_t sub_1C20F5054()
{
  return sub_1C214ACC0();
}

uint64_t MedicationCompactEducationDataSource.supplementaryItem(ofKind:at:)@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_1C2149BE0();
  MEMORY[0x1F4188790](v2 - 8);
  swift_bridgeObjectRetain();
  sub_1C2149B50();
  uint64_t v3 = sub_1C2148180();
  swift_allocObject();
  uint64_t v4 = sub_1C2148170();
  a1[3] = v3;
  uint64_t result = sub_1C20F3D44((unint64_t *)&qword_1EA2C3550, MEMORY[0x1E4F66208]);
  a1[4] = result;
  *a1 = v4;
  return result;
}

uint64_t sub_1C20F526C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_1C2149BE0();
  MEMORY[0x1F4188790](v2 - 8);
  swift_bridgeObjectRetain();
  sub_1C2149B50();
  uint64_t v3 = sub_1C2148180();
  swift_allocObject();
  uint64_t v4 = sub_1C2148170();
  a1[3] = v3;
  uint64_t result = sub_1C20F3D44((unint64_t *)&qword_1EA2C3550, MEMORY[0x1E4F66208]);
  a1[4] = result;
  *a1 = v4;
  return result;
}

uint64_t sub_1C20F5398(void *a1, uint64_t a2)
{
  uint64_t v54 = sub_1C2147B20();
  uint64_t v53 = *(void *)(v54 - 8);
  MEMORY[0x1F4188790](v54);
  unint64_t v52 = (char *)&v50 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1F0E3D8(0, &qword_1EA2C4DE0, MEMORY[0x1E4F66468]);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v50 - v6;
  uint64_t v8 = sub_1C2148540();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x1F4188790](v10);
  uint64_t v15 = (char *)&v50 - v14;
  MEMORY[0x1F4188790](v13);
  long long v17 = (char *)&v50 - v16;
  v65[3] = sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8C0);
  v65[4] = &protocol witness table for HKMedicationUserDomainConcept;
  v65[0] = a1;
  uint64_t v64 = (void *)MEMORY[0x1E4FBC860];
  sub_1C1F236D8((uint64_t)v65, (uint64_t)v61);
  id v18 = a1;
  sub_1C20E0210((uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_1C1F0E2B4((uint64_t)v7, &qword_1EA2C4DE0, MEMORY[0x1E4F66468]);
    unint64_t v19 = MEMORY[0x1E4FBC860];
  }
  else
  {
    unint64_t v51 = v12;
    uint64_t v20 = a2;
    uint64_t v21 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
    v21(v17, v7, v8);
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v15, v17, v8);
    unint64_t v19 = sub_1C1F3AD2C(0, 1, 1, MEMORY[0x1E4FBC860]);
    unint64_t v23 = *(void *)(v19 + 16);
    unint64_t v22 = *(void *)(v19 + 24);
    if (v23 >= v22 >> 1) {
      unint64_t v19 = sub_1C1F3AD2C(v22 > 1, v23 + 1, 1, v19);
    }
    *(void *)(v19 + 16) = v23 + 1;
    v21((char *)(v19+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(void *)(v9 + 72) * v23), v15, v8);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v17, v8);
    a2 = v20;
    uint64_t v12 = v51;
  }
  sub_1C20E0494(1, (uint64_t)&v57);
  if (v58)
  {
    sub_1C1F31280(&v57, (uint64_t)v60);
    sub_1C1F236D8((uint64_t)v60, (uint64_t)&v57);
    uint64_t v24 = v64;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v24 = sub_1C1F3AAC4(0, v24[2] + 1, 1, v24);
      uint64_t v64 = v24;
    }
    unint64_t v26 = v24[2];
    unint64_t v25 = v24[3];
    if (v26 >= v25 >> 1) {
      uint64_t v64 = sub_1C1F3AAC4((void *)(v25 > 1), v26 + 1, 1, v24);
    }
    uint64_t v27 = v58;
    uint64_t v28 = v59;
    uint64_t v29 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v57, v58);
    MEMORY[0x1F4188790](v29);
    id v31 = (char *)&v50 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v32 + 16))(v31);
    sub_1C20FB164(v26, (uint64_t)v31, (uint64_t *)&v64, v27, v28);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)&v57);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v60);
  }
  else
  {
    sub_1C20F68F0((uint64_t)&v57, (unint64_t *)&qword_1EBF0C300, (unint64_t *)&qword_1EBF0C2F0, MEMORY[0x1E4F66028]);
  }
  uint64_t v33 = *(void *)(a2 + qword_1EA2C7110);
  LOBYTE(v60[0]) = 0;
  sub_1C20E122C(v60, v33, (uint64_t)&v57);
  if (v58)
  {
    sub_1C1F31280(&v57, (uint64_t)v60);
  }
  else
  {
    sub_1C20F68F0((uint64_t)&v57, (unint64_t *)&qword_1EBF0C300, (unint64_t *)&qword_1EBF0C2F0, MEMORY[0x1E4F66028]);
    sub_1C20E0DB0(v60);
  }
  sub_1C1F236D8((uint64_t)v60, (uint64_t)&v57);
  id v34 = v64;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    id v34 = sub_1C1F3AAC4(0, v34[2] + 1, 1, v34);
    uint64_t v64 = v34;
  }
  unint64_t v36 = v34[2];
  unint64_t v35 = v34[3];
  if (v36 >= v35 >> 1) {
    uint64_t v64 = sub_1C1F3AAC4((void *)(v35 > 1), v36 + 1, 1, v34);
  }
  uint64_t v37 = v58;
  uint64_t v38 = v59;
  uint64_t v39 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v57, v58);
  MEMORY[0x1F4188790](v39);
  id v41 = (char *)&v50 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v42 + 16))(v41);
  sub_1C20FB164(v36, (uint64_t)v41, (uint64_t *)&v64, v37, v38);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)&v57);
  sub_1C20E0B5C((uint64_t)&v55);
  if (v56)
  {
    sub_1C1F31280(&v55, (uint64_t)&v57);
    uint64_t v43 = v62;
    uint64_t v44 = v63;
    __swift_project_boxed_opaque_existential_0(v61, v62);
    (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v44 + 48))(&v55, v43, v44);
    if (v56)
    {
      __swift_project_boxed_opaque_existential_0(&v55, v56);
      char v45 = sub_1C2147F90();
      __swift_destroy_boxed_opaque_existential_0((uint64_t)&v55);
      if (v45)
      {
        sub_1C1F236D8((uint64_t)&v57, (uint64_t)&v55);
        sub_1C1F819EC(0, 0, (uint64_t)&v55);
      }
    }
    else
    {
      sub_1C20F68F0((uint64_t)&v55, (unint64_t *)&qword_1EA2C4DB8, (unint64_t *)&qword_1EA2C4DC0, MEMORY[0x1E4F67820]);
    }
    __swift_destroy_boxed_opaque_existential_0((uint64_t)&v57);
  }
  else
  {
    sub_1C20F68F0((uint64_t)&v55, (unint64_t *)&qword_1EBF0C300, (unint64_t *)&qword_1EBF0C2F0, MEMORY[0x1E4F66028]);
  }
  uint64_t v46 = v52;
  sub_1C2147B10();
  sub_1C2147AD0();
  (*(void (**)(char *, uint64_t))(v53 + 8))(v46, v54);
  sub_1C2148520();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v19 = sub_1C1F3AD2C(0, *(void *)(v19 + 16) + 1, 1, v19);
  }
  unint64_t v48 = *(void *)(v19 + 16);
  unint64_t v47 = *(void *)(v19 + 24);
  if (v48 >= v47 >> 1) {
    unint64_t v19 = sub_1C1F3AD2C(v47 > 1, v48 + 1, 1, v19);
  }
  *(void *)(v19 + 16) = v48 + 1;
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v19+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(void *)(v9 + 72) * v48, v12, v8);
  sub_1C2147F40();
  sub_1C21482F0();
  swift_release();
  sub_1C21485B0();
  swift_release();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v60);
  sub_1C1FE74B4((uint64_t)v61);
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v65);
}

uint64_t sub_1C20F5C78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v57 = a2;
  uint64_t v56 = sub_1C2147B20();
  uint64_t v55 = *(void *)(v56 - 8);
  MEMORY[0x1F4188790](v56);
  uint64_t v54 = (char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1F0E3D8(0, &qword_1EA2C4DE0, MEMORY[0x1E4F66468]);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v53 - v9;
  uint64_t v11 = sub_1C2148540();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)&v53 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x1F4188790](v13);
  id v18 = (char *)&v53 - v17;
  MEMORY[0x1F4188790](v16);
  uint64_t v20 = (char *)&v53 - v19;
  uint64_t v68[3] = a3;
  v68[4] = a4;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v68);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 16))(boxed_opaque_existential_1, a1, a3);
  uint64_t v67 = (void *)MEMORY[0x1E4FBC860];
  sub_1C1F236D8((uint64_t)v68, (uint64_t)v64);
  sub_1C20E0210((uint64_t)v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_1C1F0E2B4((uint64_t)v10, &qword_1EA2C4DE0, MEMORY[0x1E4F66468]);
    unint64_t v22 = MEMORY[0x1E4FBC860];
  }
  else
  {
    unint64_t v23 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
    v23(v20, v10, v11);
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v18, v20, v11);
    unint64_t v22 = sub_1C1F3AD2C(0, 1, 1, MEMORY[0x1E4FBC860]);
    unint64_t v25 = *(void *)(v22 + 16);
    unint64_t v24 = *(void *)(v22 + 24);
    if (v25 >= v24 >> 1) {
      unint64_t v22 = sub_1C1F3AD2C(v24 > 1, v25 + 1, 1, v22);
    }
    *(void *)(v22 + 16) = v25 + 1;
    v23((char *)(v22+ ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))+ *(void *)(v12 + 72) * v25), v18, v11);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v20, v11);
  }
  sub_1C20E0494(1, (uint64_t)&v60);
  uint64_t v26 = v57;
  if (v61)
  {
    sub_1C1F31280(&v60, (uint64_t)v63);
    sub_1C1F236D8((uint64_t)v63, (uint64_t)&v60);
    uint64_t v27 = v67;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v27 = sub_1C1F3AAC4(0, v27[2] + 1, 1, v27);
      uint64_t v67 = v27;
    }
    unint64_t v29 = v27[2];
    unint64_t v28 = v27[3];
    if (v29 >= v28 >> 1) {
      uint64_t v67 = sub_1C1F3AAC4((void *)(v28 > 1), v29 + 1, 1, v27);
    }
    uint64_t v30 = v61;
    uint64_t v31 = v62;
    uint64_t v32 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v60, v61);
    MEMORY[0x1F4188790](v32);
    id v34 = (char *)&v53 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v35 + 16))(v34);
    sub_1C20FB164(v29, (uint64_t)v34, (uint64_t *)&v67, v30, v31);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)&v60);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v63);
  }
  else
  {
    sub_1C20F68F0((uint64_t)&v60, (unint64_t *)&qword_1EBF0C300, (unint64_t *)&qword_1EBF0C2F0, MEMORY[0x1E4F66028]);
  }
  uint64_t v36 = *(void *)(v26 + qword_1EA2C7110);
  LOBYTE(v63[0]) = 0;
  sub_1C20E122C(v63, v36, (uint64_t)&v60);
  if (v61)
  {
    sub_1C1F31280(&v60, (uint64_t)v63);
  }
  else
  {
    sub_1C20F68F0((uint64_t)&v60, (unint64_t *)&qword_1EBF0C300, (unint64_t *)&qword_1EBF0C2F0, MEMORY[0x1E4F66028]);
    sub_1C20E0DB0(v63);
  }
  sub_1C1F236D8((uint64_t)v63, (uint64_t)&v60);
  uint64_t v37 = v67;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    uint64_t v37 = sub_1C1F3AAC4(0, v37[2] + 1, 1, v37);
    uint64_t v67 = v37;
  }
  unint64_t v39 = v37[2];
  unint64_t v38 = v37[3];
  if (v39 >= v38 >> 1) {
    uint64_t v67 = sub_1C1F3AAC4((void *)(v38 > 1), v39 + 1, 1, v37);
  }
  uint64_t v40 = v61;
  uint64_t v41 = v62;
  uint64_t v42 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v60, v61);
  MEMORY[0x1F4188790](v42);
  uint64_t v44 = (char *)&v53 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v45 + 16))(v44);
  sub_1C20FB164(v39, (uint64_t)v44, (uint64_t *)&v67, v40, v41);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)&v60);
  sub_1C20E0B5C((uint64_t)&v58);
  if (v59)
  {
    sub_1C1F31280(&v58, (uint64_t)&v60);
    uint64_t v46 = v65;
    uint64_t v47 = v66;
    __swift_project_boxed_opaque_existential_0(v64, v65);
    (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v47 + 48))(&v58, v46, v47);
    if (v59)
    {
      __swift_project_boxed_opaque_existential_0(&v58, v59);
      char v48 = sub_1C2147F90();
      __swift_destroy_boxed_opaque_existential_0((uint64_t)&v58);
      if (v48)
      {
        sub_1C1F236D8((uint64_t)&v60, (uint64_t)&v58);
        sub_1C1F819EC(0, 0, (uint64_t)&v58);
      }
    }
    else
    {
      sub_1C20F68F0((uint64_t)&v58, (unint64_t *)&qword_1EA2C4DB8, (unint64_t *)&qword_1EA2C4DC0, MEMORY[0x1E4F67820]);
    }
    __swift_destroy_boxed_opaque_existential_0((uint64_t)&v60);
  }
  else
  {
    sub_1C20F68F0((uint64_t)&v58, (unint64_t *)&qword_1EBF0C300, (unint64_t *)&qword_1EBF0C2F0, MEMORY[0x1E4F66028]);
  }
  int v49 = v54;
  sub_1C2147B10();
  sub_1C2147AD0();
  (*(void (**)(char *, uint64_t))(v55 + 8))(v49, v56);
  sub_1C2148520();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v22 = sub_1C1F3AD2C(0, *(void *)(v22 + 16) + 1, 1, v22);
  }
  unint64_t v51 = *(void *)(v22 + 16);
  unint64_t v50 = *(void *)(v22 + 24);
  if (v51 >= v50 >> 1) {
    unint64_t v22 = sub_1C1F3AD2C(v50 > 1, v51 + 1, 1, v22);
  }
  *(void *)(v22 + 16) = v51 + 1;
  (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v22+ ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))+ *(void *)(v12 + 72) * v51, v15, v11);
  sub_1C2147F40();
  sub_1C21482F0();
  swift_release();
  sub_1C21485B0();
  swift_release();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v63);
  sub_1C1FE74B4((uint64_t)v64);
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v68);
}

uint64_t sub_1C20F6564(void *a1, uint64_t a2)
{
  *(void *)(v2 + qword_1EA2C70F8) = 0;
  *(void *)(v2 + qword_1EA2C710sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = MEMORY[0x1E4FBC870];
  *(void *)(v2 + qword_1EA2C711sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = a2;
  uint64_t v4 = qword_1EBF0CA00;
  swift_retain();
  swift_retain();
  if (v4 != -1) {
    swift_once();
  }
  id v5 = (id)qword_1EBF0CA18;
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_1C2147730();
  uint64_t v8 = v7;
  swift_bridgeObjectRelease();

  uint64_t v9 = (uint64_t *)(v2 + qword_1EA2C7108);
  *uint64_t v9 = v6;
  v9[1] = v8;
  swift_release();
  uint64_t v10 = sub_1C2147F50();
  uint64_t v11 = a1[3];
  uint64_t v12 = a1[4];
  uint64_t v13 = __swift_project_boxed_opaque_existential_0(a1, v11);
  swift_retain();
  sub_1C20F5C78((uint64_t)v13, v10, v11, v12);
  swift_release();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return v10;
}

uint64_t sub_1C20F66EC()
{
  return sub_1C20F3D44(&qword_1EA2C7118, (void (*)(uint64_t))type metadata accessor for MedicationCompactEducationDataSource);
}

uint64_t type metadata accessor for MedicationCompactEducationDataSource()
{
  uint64_t result = qword_1EA2C7120;
  if (!qword_1EA2C7120) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C20F6780()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for MedicationCompactEducationDataSource(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MedicationCompactEducationDataSource);
}

uint64_t dispatch thunk of MedicationCompactEducationDataSource.__allocating_init(with:analyticsManager:)()
{
  return (*(uint64_t (**)(void))(class metadata base offset for MedicationCompactEducationDataSource + v0 + 104))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(class metadata base offset for MedicationCompactEducationDataSource + v0 + 112))();
}

uint64_t dispatch thunk of MedicationCompactEducationDataSource.layout(for:environment:)()
{
  return (*(uint64_t (**)(void))(class metadata base offset for MedicationCompactEducationDataSource + *v0 + 128))();
}

uint64_t sub_1C20F6880()
{
  return type metadata accessor for MedicationCompactEducationDataSource();
}

void sub_1C20F6888(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = sub_1C1F23804(255, a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

uint64_t sub_1C20F68F0(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4)
{
  sub_1C20F6888(0, a2, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

uint64_t sub_1C20F6960()
{
  swift_weakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C20F6998()
{
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C20F69D8()
{
  return sub_1C20F4B60();
}

uint64_t type metadata accessor for MedicationFormsDataSource()
{
  uint64_t result = qword_1EA2C7148;
  if (!qword_1EA2C7148) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C20F6A2C()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1C20F6A94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = sub_1C20FBA5C(a1, a2, a3);
  swift_release();
  return v3;
}

uint64_t sub_1C20F6AE4()
{
  uint64_t v1 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FBCC28];
  sub_1C20FC534(0, &qword_1EBF0C7E8, MEMORY[0x1E4FBCC28], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v12 - v3;
  uint64_t v13 = sub_1C1FC3AD0;
  sub_1C20FC598(0, &qword_1EA2C7180, (void (*)(uint64_t))sub_1C1FC3AD0, (void (*)(void))sub_1C20FC4F8);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  unint64_t v9 = (char *)&v12 - v8;
  uint64_t v14 = *(void *)(v0 + qword_1EA2C4738);
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0CB10);
  swift_retain();
  id v15 = (id)sub_1C214AD80();
  uint64_t v10 = sub_1C214AD20();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v4, 1, 1, v10);
  sub_1C1FC3AD0();
  sub_1C20FC4F8();
  sub_1C1F43FD4();
  sub_1C214A0A0();
  sub_1C20FAC24((uint64_t)v4, &qword_1EBF0C7E8, v1);

  swift_release();
  swift_allocObject();
  swift_weakInit();
  sub_1C20FC648(&qword_1EA2C7190, &qword_1EA2C7180, (void (*)(uint64_t))v13, (void (*)(void))sub_1C20FC4F8);
  sub_1C214A0F0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  swift_beginAccess();
  sub_1C2149E20();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1C20F6DF8()
{
  uint64_t v1 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FBCC28];
  sub_1C20FC534(0, &qword_1EBF0C7E8, MEMORY[0x1E4FBCC28], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v12 - v3;
  uint64_t v13 = sub_1C1F73550;
  sub_1C20FC598(0, &qword_1EA2C7198, (void (*)(uint64_t))sub_1C1F73550, (void (*)(void))sub_1C1F73610);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  unint64_t v9 = (char *)&v12 - v8;
  uint64_t v14 = *(void *)(v0 + qword_1EA2C4738);
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0CB10);
  swift_retain();
  id v15 = (id)sub_1C214AD80();
  uint64_t v10 = sub_1C214AD20();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v4, 1, 1, v10);
  sub_1C1F73550();
  sub_1C1F73610();
  sub_1C1F43FD4();
  sub_1C214A0A0();
  sub_1C20FAC24((uint64_t)v4, &qword_1EBF0C7E8, v1);

  swift_release();
  swift_allocObject();
  swift_weakInit();
  sub_1C20FC648(&qword_1EA2C71A0, &qword_1EA2C7198, (void (*)(uint64_t))v13, (void (*)(void))sub_1C1F73610);
  sub_1C214A0F0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  swift_beginAccess();
  sub_1C2149E20();
  swift_endAccess();
  return swift_release();
}

void *sub_1C20F710C()
{
  swift_beginAccess();
  uint64_t result = (void *)swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = result;
    (*(void (**)(void))(class metadata base offset for MedicationOptionsDataSource + *result + 80))();
    sub_1C21485C0();
    uint64_t v2 = swift_bridgeObjectRelease();
    (*(void (**)(uint64_t))(class metadata base offset for MedicationOptionsDataSource + *v1 + 88))(v2);
    sub_1C21485C0();
    uint64_t v3 = swift_bridgeObjectRelease();
    (*(void (**)(uint64_t))(class metadata base offset for MedicationOptionsDataSource + *v1 + 96))(v3);
    sub_1C21485C0();
    swift_release();
    return (void *)swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C20F727C(uint64_t a1)
{
  uint64_t v3 = sub_1C2148710();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](v3);
  uint64_t v7 = &v23[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = MEMORY[0x1F4188790](v5);
  uint64_t v10 = &v23[-v9];
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = &v23[-v11];
  sub_1C2148690();
  (*(void (**)(uint64_t))(class metadata base offset for MedicationOptionsDataSource + *v1 + 104))(a1);
  uint64_t v14 = v13;
  swift_bridgeObjectRelease();
  if (v14)
  {
    sub_1C2148660();
    (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v12, v3);
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v4 + 32))(v12, v10, v3);
  }
  (*(void (**)(uint64_t))(class metadata base offset for MedicationOptionsDataSource + *v1 + 112))(a1);
  uint64_t v16 = v15;
  swift_bridgeObjectRelease();
  if (v16)
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v4 + 16))(v10, v12, v3);
    sub_1C2148650();
    uint64_t v17 = *(void (**)(unsigned char *, uint64_t))(v4 + 8);
    v17(v10, v3);
    v17(v12, v3);
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v4 + 32))(v12, v7, v3);
  }
  id v18 = (void (*)(unsigned char *, void))sub_1C21486D0();
  *(void *)(v19 + 16) = 0;
  v18(v23, 0);
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v4 + 16))(v10, v12, v3);
  uint64_t v20 = sub_1C20F270C();
  uint64_t v21 = *(void (**)(unsigned char *, uint64_t))(v4 + 8);
  v21(v10, v3);
  v21(v12, v3);
  return v20;
}

void *sub_1C20F757C(uint64_t a1, uint64_t a2)
{
  return sub_1C20F7BE4(a1, a2);
}

uint64_t sub_1C20F75C8()
{
  uint64_t v1 = qword_1EA2C7140;
  if (*(void *)(v0 + qword_1EA2C7140))
  {
    uint64_t v2 = *(void *)(v0 + qword_1EA2C7140);
  }
  else
  {
    uint64_t v2 = sub_1C20F7630(v0);
    *(void *)(v0 + vsub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, 0, 1) = v2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1C20F7630(uint64_t a1)
{
  uint64_t v2 = sub_1C2149520();
  uint64_t v29 = *(void *)(v2 - 8);
  uint64_t v30 = v2;
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1C21490F0();
  uint64_t v28 = *(void *)(v5 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v27 - v9;
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C20FC534(0, (unint64_t *)&qword_1EA2C2CC8, type metadata accessor for MedicationSearchItem, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = (char *)&v27 - v13;
  sub_1C20FC534(0, &qword_1EA2C7158, type metadata accessor for MedicationSearchItem.Source, v11);
  uint64_t v16 = MEMORY[0x1F4188790](v15 - 8);
  id v18 = (char *)&v27 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v20 = (char *)&v27 - v19;
  sub_1C20FAD5C(a1 + qword_1EA2C7D70, (uint64_t)v14, (unint64_t *)&qword_1EA2C2CC8, type metadata accessor for MedicationSearchItem);
  uint64_t v21 = type metadata accessor for MedicationSearchItem(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 48))(v14, 1, v21) == 1)
  {
    sub_1C20FAC24((uint64_t)v14, (unint64_t *)&qword_1EA2C2CC8, type metadata accessor for MedicationSearchItem);
    uint64_t v22 = type metadata accessor for MedicationSearchItem.Source(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v20, 1, 1, v22);
LABEL_6:
    uint64_t v25 = MEMORY[0x1E4FBC860];
    goto LABEL_7;
  }
  sub_1C20FAC94((uint64_t)v14, (uint64_t)v20, type metadata accessor for MedicationSearchItem.Source);
  sub_1C20FACFC((uint64_t)v14, type metadata accessor for MedicationSearchItem);
  uint64_t v23 = type metadata accessor for MedicationSearchItem.Source(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v20, 0, 1, v23);
  sub_1C20FAD5C((uint64_t)v20, (uint64_t)v18, &qword_1EA2C7158, type metadata accessor for MedicationSearchItem.Source);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_1C20FACFC((uint64_t)v18, type metadata accessor for MedicationSearchItem.Source);
    goto LABEL_6;
  }
  uint64_t v24 = v28;
  (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v10, v18, v5);
  (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v8, v10, v5);
  sub_1C2149530();
  uint64_t v31 = sub_1C21494F0();
  swift_getKeyPath();
  sub_1C20FC534(0, &qword_1EA2C7160, MEMORY[0x1E4F66C58], MEMORY[0x1E4FBB320]);
  sub_1C20FBC84();
  uint64_t v25 = sub_1C214A730();
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v4, v30);
  (*(void (**)(char *, uint64_t))(v24 + 8))(v10, v5);
LABEL_7:
  sub_1C20FAC24((uint64_t)v20, &qword_1EA2C7158, type metadata accessor for MedicationSearchItem.Source);
  return v25;
}

BOOL sub_1C20F7B7C()
{
  return sub_1C214B590() == -1;
}

void *sub_1C20F7BE4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v47 = a2;
  uint64_t v48 = a1;
  uint64_t v4 = sub_1C21491B0();
  uint64_t v41 = *(void *)(v4 - 8);
  uint64_t v42 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v40 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = type metadata accessor for FormStepResult();
  uint64_t v6 = *(void *)(v45 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v45);
  uint64_t v44 = (uint64_t)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v43 = (uint64_t)&v39 - v9;
  uint64_t v46 = type metadata accessor for FormStepResult;
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C20FC534(0, &qword_1EA2C4820, (uint64_t (*)(uint64_t))type metadata accessor for FormStepResult, MEMORY[0x1E4FBB718]);
  uint64_t v12 = MEMORY[0x1F4188790](v11 - 8);
  uint64_t v14 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&v39 - v15;
  sub_1C20FC534(0, (unint64_t *)&qword_1EA2C2CC8, type metadata accessor for MedicationSearchItem, v10);
  MEMORY[0x1F4188790](v17 - 8);
  uint64_t v19 = (char *)&v39 - v18;
  *(unsigned char *)(v3 + qword_1EA2C713sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = 0;
  uint64_t v20 = (void *)(v3 + qword_1EA2C7138);
  *uint64_t v20 = 0;
  v20[1] = 0;
  uint64_t v21 = (uint64_t *)(v3 + qword_1EA2C82B8);
  uint64_t v49 = sub_1C214A5F0();
  uint64_t v50 = v22;
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  uint64_t v23 = v49;
  uint64_t v24 = v50;
  swift_retain();
  uint64_t v25 = v47;
  swift_bridgeObjectRelease();
  *uint64_t v21 = v23;
  v21[1] = v24;
  uint64_t v26 = v48;
  *(void *)(v3 + qword_1EA2C714sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = 0;
  swift_release();
  uint64_t v27 = v45;
  sub_1C20FAD5C(v26, (uint64_t)v19, (unint64_t *)&qword_1EA2C2CC8, type metadata accessor for MedicationSearchItem);
  swift_retain();
  uint64_t v28 = sub_1C20FBEE8((uint64_t)v19, v25, (void (*)(uint64_t))sub_1C20F6AE4);
  swift_release();
  swift_retain();
  sub_1C2149E90();
  sub_1C20FAD5C((uint64_t)v16, (uint64_t)v14, &qword_1EA2C4820, (uint64_t (*)(uint64_t))v46);
  uint64_t v29 = 0;
  uint64_t v30 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v14, 1, v27) != 1)
  {
    uint64_t v31 = v43;
    sub_1C20FC494((uint64_t)v14, v43);
    uint64_t v32 = v44;
    sub_1C20FAC94(v31, v44, (uint64_t (*)(void))type metadata accessor for FormStepResult);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v29 = 0;
      uint64_t v30 = 0;
    }
    else
    {
      id v34 = v40;
      uint64_t v33 = v41;
      uint64_t v35 = v42;
      (*(void (**)(char *, uint64_t, uint64_t))(v41 + 32))(v40, v32, v42);
      uint64_t v29 = sub_1C2149190();
      uint64_t v30 = v36;
      (*(void (**)(char *, uint64_t))(v33 + 8))(v34, v35);
    }
    sub_1C20FACFC(v31, (uint64_t (*)(void))type metadata accessor for FormStepResult);
  }
  swift_release();
  swift_release();
  sub_1C20FAC24(v26, (unint64_t *)&qword_1EA2C2CC8, type metadata accessor for MedicationSearchItem);
  sub_1C20FAC24((uint64_t)v16, &qword_1EA2C4820, (uint64_t (*)(uint64_t))type metadata accessor for FormStepResult);
  uint64_t v37 = (void *)((char *)v28 + qword_1EA2C7138);
  uint64_t *v37 = v29;
  v37[1] = v30;
  swift_bridgeObjectRelease();
  return v28;
}

uint64_t sub_1C20F80C4(unint64_t a1)
{
  uint64_t v2 = sub_1C2148710();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 < 2) {
    return sub_1C20F727C(a1);
  }
  if (a1 == 2)
  {
    uint64_t v7 = (void *)sub_1C20F727C(2);
    uint64_t v6 = (uint64_t)v7;
    if (v7)
    {
      id v8 = v7;
      objc_msgSend(v8, sel_contentInsets);
      objc_msgSend(v8, sel_setContentInsets_, 16.0);
    }
  }
  else
  {
    sub_1C2148690();
    uint64_t v6 = sub_1C2148700();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return v6;
}

void *sub_1C20F820C()
{
  uint64_t v0 = sub_1C21491B0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1C20F75C8();
  swift_weakInit();
  uint64_t v29 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    uint64_t v7 = *(void (**)(char *, unint64_t, uint64_t))(v1 + 16);
    uint64_t v6 = v1 + 16;
    unint64_t v8 = v4 + ((*(unsigned __int8 *)(v6 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 64));
    uint64_t v9 = (void (**)(char *, uint64_t))(v6 - 8);
    uint64_t v23 = *(void *)(v6 + 56);
    uint64_t v24 = v7;
    v21[0] = v4;
    swift_bridgeObjectRetain();
    v21[1] = v6;
    uint64_t v22 = v0;
    do
    {
      v24(v3, v8, v0);
      sub_1C20F8548((uint64_t)v3, (uint64_t)&v25);
      (*v9)(v3, v0);
      if (v26)
      {
        sub_1C1F31280(&v25, (uint64_t)v28);
        sub_1C1F31280(v28, (uint64_t)&v25);
        uint64_t v10 = v29;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          uint64_t v10 = sub_1C1F3AAC4(0, v10[2] + 1, 1, v10);
          uint64_t v29 = v10;
        }
        unint64_t v12 = v10[2];
        unint64_t v11 = v10[3];
        if (v12 >= v11 >> 1) {
          uint64_t v29 = sub_1C1F3AAC4((void *)(v11 > 1), v12 + 1, 1, v10);
        }
        uint64_t v13 = v26;
        uint64_t v14 = v27;
        uint64_t v15 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v25, v26);
        MEMORY[0x1F4188790](v15);
        uint64_t v17 = (char *)v21 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *))(v18 + 16))(v17);
        sub_1C20FB164(v12, (uint64_t)v17, (uint64_t *)&v29, v13, v14);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)&v25);
        uint64_t v0 = v22;
      }
      else
      {
        sub_1C20FAC24((uint64_t)&v25, (unint64_t *)&qword_1EBF0C300, (uint64_t (*)(uint64_t))sub_1C1F1CB5C);
      }
      v8 += v23;
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease_n();
    uint64_t v19 = v29;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v19 = (void *)MEMORY[0x1E4FBC860];
  }
  swift_weakDestroy();
  return v19;
}

uint64_t sub_1C20F8548@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v72 = a1;
  uint64_t v4 = sub_1C2148A70();
  uint64_t v83 = *(void *)(v4 - 8);
  uint64_t v84 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v86 = (char *)v63 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C20FC534(0, &qword_1EBF0C620, MEMORY[0x1E4FB0F28], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v85 = (char *)v63 - v8;
  uint64_t v9 = sub_1C2148620();
  uint64_t v80 = *(void *)(v9 - 8);
  uint64_t v81 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v82 = (char *)v63 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1C21491B0();
  uint64_t v78 = *(void *)(v11 - 8);
  uint64_t v79 = v11;
  MEMORY[0x1F4188790](v11);
  uint64_t v76 = v12;
  uint64_t v77 = (char *)v63 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = sub_1C2149860();
  uint64_t v74 = *(void *)(v75 - 8);
  MEMORY[0x1F4188790](v75);
  uint64_t v14 = (char *)v63 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C20FC534(0, &qword_1EBF0C610, MEMORY[0x1E4FB0E38], v6);
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v17 = (char *)v63 - v16;
  uint64_t v18 = sub_1C2149890();
  uint64_t v73 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)v63 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v92 = sub_1C2149BE0();
  uint64_t v88 = *(void *)(v92 - 8);
  MEMORY[0x1F4188790](v92);
  uint64_t v22 = (char *)v63 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v24 = result;
    unint64_t v71 = v17;
    uint64_t v65 = v18;
    uint64_t v69 = (uint64_t *)a2;
    uint64_t v70 = v2;
    uint64_t v25 = v72;
    uint64_t v26 = sub_1C2149180();
    uint64_t v28 = v27;
    sub_1C2149B70();
    swift_bridgeObjectRetain();
    uint64_t v67 = v26;
    uint64_t v68 = v28;
    sub_1C2149B90();
    id v64 = self;
    id v29 = objc_msgSend(v64, sel_labelColor);
    uint64_t v30 = (void (*)(uint64_t *, void))sub_1C2149AA0();
    sub_1C2149A60();
    v30(v91, 0);
    uint64_t v31 = sub_1C2149190();
    uint64_t v33 = *(void *)(v24 + qword_1EA2C7138 + 8);
    uint64_t v34 = v24;
    uint64_t v87 = v31;
    uint64_t v35 = v22;
    if (v33)
    {
      if (v31 == *(void *)(v24 + qword_1EA2C7138) && v33 == v32)
      {
        uint64_t v36 = v32;
      }
      else
      {
        uint64_t v36 = v32;
        sub_1C214BA80();
      }
    }
    else
    {
      uint64_t v36 = v32;
    }
    uint64_t v37 = v25;
    unint64_t v38 = v71;
    uint64_t v39 = v92;
    v91[3] = v92;
    v91[4] = MEMORY[0x1E4FB0F88];
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v91);
    uint64_t v41 = *(void (**)(uint64_t *, char *, uint64_t))(v88 + 16);
    uint64_t v66 = v35;
    v41(boxed_opaque_existential_1, v35, v39);
    sub_1C20FC534(0, (unint64_t *)&unk_1EBF0C990, MEMORY[0x1E4FB0E68], MEMORY[0x1E4FBBE00]);
    sub_1C2149930();
    uint64_t v72 = swift_allocObject();
    *(_OWORD *)(v72 + 16) = xmmword_1C214FCD0;
    uint64_t v42 = sub_1C2149870();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56))(v38, 1, 1, v42);
    sub_1C2149880();
    uint64_t v43 = v74;
    uint64_t v44 = v75;
    (*(void (**)(char *, void, uint64_t))(v74 + 104))(v14, *MEMORY[0x1E4FB0E18], v75);
    sub_1C2149920();
    (*(void (**)(char *, uint64_t))(v43 + 8))(v14, v44);
    (*(void (**)(char *, uint64_t))(v73 + 8))(v20, v65);
    uint64_t v45 = swift_allocObject();
    swift_weakInit();
    uint64_t v47 = v78;
    uint64_t v46 = v79;
    uint64_t v48 = v77;
    (*(void (**)(char *, uint64_t, uint64_t))(v78 + 16))(v77, v37, v79);
    unint64_t v49 = (*(unsigned __int8 *)(v47 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80);
    uint64_t v50 = (char *)swift_allocObject();
    uint64_t v51 = v87;
    *((void *)v50 + 2) = v45;
    *((void *)v50 + 3) = v51;
    *((void *)v50 + 4) = v36;
    (*(void (**)(char *, char *, uint64_t))(v47 + 32))(&v50[v49], v48, v46);
    uint64_t v52 = v34;
    v63[1] = v34;
    uint64_t v53 = v81;
    uint64_t v54 = v82;
    *uint64_t v82 = 1;
    (*(void (**)(unsigned char *, void, uint64_t))(v80 + 104))(v54, *MEMORY[0x1E4F66478], v53);
    swift_retain();
    swift_bridgeObjectRetain();
    uint64_t v55 = v85;
    sub_1C21499A0();
    id v56 = objc_msgSend(v64, sel_secondarySystemBackgroundColor);
    sub_1C2149990();
    uint64_t v57 = sub_1C21499D0();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v57 - 8) + 56))(v55, 0, 1, v57);
    uint64_t v58 = v52 + qword_1EA2C82B8;
    uint64_t v59 = *(void *)(v52 + qword_1EA2C82B8);
    unint64_t v60 = *(void *)(v58 + 8);
    uint64_t v89 = 46;
    unint64_t v90 = 0xE100000000000000;
    swift_bridgeObjectRetain();
    sub_1C214A6C0();
    swift_bridgeObjectRelease();
    uint64_t v89 = v59;
    unint64_t v90 = v60;
    swift_bridgeObjectRetain();
    sub_1C214A6C0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, void, uint64_t))(v83 + 104))(v86, *MEMORY[0x1E4F66678], v84);
    uint64_t v61 = sub_1C21487B0();
    uint64_t v62 = v69;
    v69[3] = v61;
    v62[4] = sub_1C20FB9D4((unint64_t *)&qword_1EA2C2E68, MEMORY[0x1E4F66510]);
    __swift_allocate_boxed_opaque_existential_1(v62);
    sub_1C21487A0();
    swift_release();
    (*(void (**)(char *, uint64_t))(v88 + 8))(v66, v92);
    return swift_release();
  }
  else
  {
    *(void *)(a2 + 32) = 0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  return result;
}

uint64_t sub_1C20F8F78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_1C20FC534(0, &qword_1EA2C4820, (uint64_t (*)(uint64_t))type metadata accessor for FormStepResult, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = &v16[-v9];
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v12 = (void *)(Strong + qword_1EA2C7138);
    *uint64_t v12 = a3;
    v12[1] = a4;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    swift_release();
  }
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    swift_retain();
    swift_release();
    uint64_t v14 = sub_1C21491B0();
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v10, a5, v14);
    uint64_t v15 = type metadata accessor for FormStepResult();
    swift_storeEnumTagMultiPayload();
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v10, 0, 1, v15);
    sub_1C2149E70();
    swift_release();
    return sub_1C20FAC24((uint64_t)v10, &qword_1EA2C4820, (uint64_t (*)(uint64_t))type metadata accessor for FormStepResult);
  }
  return result;
}

uint64_t sub_1C20F9188()
{
  uint64_t v1 = (uint64_t)v0;
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C2148A70();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1C2148620();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C20FC534(0, &qword_1EBF0C620, MEMORY[0x1E4FB0F28], MEMORY[0x1E4FBB718]);
  uint64_t v12 = MEMORY[0x1F4188790](v11 - 8);
  uint64_t v14 = (char *)&v23 - v13;
  if (*(unsigned char *)(v1 + qword_1EA2C7130) == 1)
  {
    v28[0] = MEMORY[0x1C87531D0](v12);
    swift_bridgeObjectRetain();
    sub_1C20AE390(v28);
    swift_bridgeObjectRelease();
    uint64_t v15 = v28[0];
    swift_retain();
    uint64_t v16 = sub_1C20FB288(v15, v1);
    swift_release();
    swift_release();
    swift_retain();
    uint64_t v17 = sub_1C20F6A94(v16, v1, v2);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1C20FC534(0, (unint64_t *)&qword_1EBF0C958, (uint64_t (*)(uint64_t))sub_1C1F1CB5C, MEMORY[0x1E4FBBE00]);
    uint64_t v18 = swift_allocObject();
    uint64_t v24 = v3;
    uint64_t v17 = v18;
    *(_OWORD *)(v18 + 16) = xmmword_1C214FCD0;
    uint64_t v25 = (uint64_t *)(v18 + 32);
    sub_1C20F971C(v28);
    swift_allocObject();
    swift_weakInit();
    swift_retain();
    sub_1C21499A0();
    id v19 = objc_msgSend(self, sel_secondarySystemBackgroundColor);
    sub_1C2149990();
    uint64_t v20 = sub_1C21499D0();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v14, 0, 1, v20);
    uint64_t v21 = *(void *)(v1 + qword_1EA2C82B8 + 8);
    uint64_t v26 = *(void *)(v1 + qword_1EA2C82B8);
    uint64_t v27 = v21;
    swift_bridgeObjectRetain();
    sub_1C214A6C0();
    (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E4F66480], v7);
    (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E4F66678], v24);
    *(void *)(v17 + 56) = sub_1C21487B0();
    *(void *)(v17 + 64) = sub_1C20FB9D4((unint64_t *)&qword_1EA2C2E68, MEMORY[0x1E4F66510]);
    __swift_allocate_boxed_opaque_existential_1(v25);
    sub_1C21487A0();
    swift_release();
  }
  return v17;
}

uint64_t sub_1C20F9634()
{
  uint64_t v1 = *v0;
  uint64_t v6 = MEMORY[0x1C87531D0]();
  swift_bridgeObjectRetain();
  sub_1C20AE390(&v6);
  swift_bridgeObjectRelease();
  uint64_t v2 = v6;
  swift_retain();
  uint64_t v3 = sub_1C20FB288(v2, (uint64_t)v0);
  swift_release();
  swift_release();
  swift_retain();
  uint64_t v4 = sub_1C20F6A94(v3, (uint64_t)v0, v1);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1C20F971C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_1C2149BE0();
  uint64_t v3 = MEMORY[0x1E4FB0F88];
  a1[3] = v2;
  a1[4] = v3;
  __swift_allocate_boxed_opaque_existential_1(a1);
  sub_1C2149B70();
  if (qword_1EBF0CA00 != -1) {
    swift_once();
  }
  id v4 = (id)qword_1EBF0CA18;
  swift_bridgeObjectRetain();
  sub_1C2147730();
  swift_bridgeObjectRelease();

  sub_1C2149B90();
  id v5 = objc_msgSend(self, sel_tintColor, 0xE000000000000000);
  uint64_t v6 = (uint64_t (*)(unsigned char *, void))sub_1C2149AA0();
  sub_1C2149A60();
  return v6(v8, 0);
}

uint64_t sub_1C20F987C()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    *(unsigned char *)(Strong + qword_1EA2C713sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = 1;
    swift_release();
  }
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    swift_beginAccess();
    if (swift_weakLoadStrong())
    {
      sub_1C20F9634();
      swift_release();
    }
    sub_1C21485C0();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

uint64_t sub_1C20F9968@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v52 = a3;
  uint64_t v71 = a2;
  uint64_t v66 = a4;
  uint64_t v5 = sub_1C2148A70();
  uint64_t v62 = *(void *)(v5 - 8);
  uint64_t v63 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v65 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C20FC534(0, &qword_1EBF0C620, MEMORY[0x1E4FB0F28], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v8 - 8);
  id v64 = (char *)&v47 - v9;
  uint64_t v59 = sub_1C2148620();
  uint64_t v58 = *(void *)(v59 - 8);
  MEMORY[0x1F4188790](v59);
  uint64_t v61 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = sub_1C2149860();
  uint64_t v56 = *(void *)(v57 - 8);
  MEMORY[0x1F4188790](v57);
  uint64_t v12 = (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C20FC534(0, &qword_1EBF0C610, MEMORY[0x1E4FB0E38], v7);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v53 = (char *)&v47 - v14;
  uint64_t v55 = sub_1C2149890();
  uint64_t v54 = *(void *)(v55 - 8);
  MEMORY[0x1F4188790](v55);
  uint64_t v16 = (char *)&v47 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C20FC534(0, &qword_1EA2C4820, (uint64_t (*)(uint64_t))type metadata accessor for FormStepResult, v7);
  MEMORY[0x1F4188790](v17 - 8);
  id v19 = (char *)&v47 - v18;
  uint64_t v67 = sub_1C2149BE0();
  uint64_t v60 = *(void *)(v67 - 8);
  MEMORY[0x1F4188790](v67);
  uint64_t v21 = (char *)&v47 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = *a1;
  sub_1C2149B70();
  sub_1C214B030();
  sub_1C2149B90();
  id v51 = self;
  id v23 = objc_msgSend(v51, sel_labelColor);
  uint64_t v24 = v21;
  uint64_t v25 = (void (*)(uint64_t *, void))sub_1C2149AA0();
  sub_1C2149A60();
  v25(v70, 0);
  sub_1C2149E90();
  uint64_t v26 = type metadata accessor for FormStepResult();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v26 - 8) + 48))(v19, 1, v26) == 1)
  {
    sub_1C20FAC24((uint64_t)v19, &qword_1EA2C4820, (uint64_t (*)(uint64_t))type metadata accessor for FormStepResult);
  }
  else
  {
    sub_1C1FE9E70();
    sub_1C20FACFC((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for FormStepResult);
  }
  sub_1C214BB30();
  sub_1C214BB70();
  sub_1C214BB80();
  uint64_t v68 = sub_1C214BC10();
  unint64_t v69 = v27;
  sub_1C214A6C0();
  sub_1C214BB30();
  sub_1C214BB70();
  v70[0] = sub_1C214BB80();
  sub_1C214BA40();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  uint64_t v52 = v68;
  unint64_t v50 = v69;
  uint64_t v28 = v67;
  v70[3] = v67;
  v70[4] = MEMORY[0x1E4FB0F88];
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v70);
  uint64_t v30 = v60;
  uint64_t v31 = *(void (**)(uint64_t *, char *, uint64_t))(v60 + 16);
  unint64_t v49 = v24;
  v31(boxed_opaque_existential_1, v24, v28);
  sub_1C20FC534(0, (unint64_t *)&unk_1EBF0C990, MEMORY[0x1E4FB0E68], MEMORY[0x1E4FBBE00]);
  sub_1C2149930();
  uint64_t v48 = swift_allocObject();
  *(_OWORD *)(v48 + 16) = xmmword_1C214FCD0;
  uint64_t v32 = sub_1C2149870();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v53, 1, 1, v32);
  sub_1C2149880();
  uint64_t v33 = v56;
  uint64_t v34 = v57;
  (*(void (**)(char *, void, uint64_t))(v56 + 104))(v12, *MEMORY[0x1E4FB0E18], v57);
  sub_1C2149920();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v12, v34);
  (*(void (**)(char *, uint64_t))(v54 + 8))(v16, v55);
  uint64_t v35 = swift_allocObject();
  uint64_t v36 = v71;
  swift_weakInit();
  uint64_t v37 = swift_allocObject();
  *(void *)(v37 + 16) = v35;
  *(void *)(v37 + 24) = v22;
  unint64_t v38 = v61;
  *uint64_t v61 = 1;
  (*(void (**)(unsigned char *, void, uint64_t))(v58 + 104))(v38, *MEMORY[0x1E4F66478], v59);
  swift_retain();
  uint64_t v39 = v64;
  sub_1C21499A0();
  id v40 = objc_msgSend(v51, sel_secondarySystemBackgroundColor);
  sub_1C2149990();
  uint64_t v41 = sub_1C21499D0();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v39, 0, 1, v41);
  uint64_t v43 = *(void *)(v36 + qword_1EA2C82B8);
  unint64_t v42 = *(void *)(v36 + qword_1EA2C82B8 + 8);
  uint64_t v68 = 46;
  unint64_t v69 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  sub_1C214B030();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  uint64_t v68 = v43;
  unint64_t v69 = v42;
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, void, uint64_t))(v62 + 104))(v65, *MEMORY[0x1E4F66678], v63);
  uint64_t v44 = sub_1C21487B0();
  uint64_t v45 = v66;
  v66[3] = v44;
  v45[4] = sub_1C20FB9D4((unint64_t *)&qword_1EA2C2E68, MEMORY[0x1E4F66510]);
  __swift_allocate_boxed_opaque_existential_1(v45);
  sub_1C21487A0();
  (*(void (**)(char *, uint64_t))(v30 + 8))(v49, v67);
  return swift_release();
}

uint64_t sub_1C20FA388(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C20FC534(0, &qword_1EA2C4820, (uint64_t (*)(uint64_t))type metadata accessor for FormStepResult, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = &v11[-v5];
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v8 = (void *)(Strong + qword_1EA2C7138);
    *uint64_t v8 = 0;
    v8[1] = 0;
    swift_release();
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    swift_retain();
    swift_release();
    *uint64_t v6 = a3;
    uint64_t v10 = type metadata accessor for FormStepResult();
    swift_storeEnumTagMultiPayload();
    (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v6, 0, 1, v10);
    sub_1C2149E70();
    swift_release();
    return sub_1C20FAC24((uint64_t)v6, &qword_1EA2C4820, (uint64_t (*)(uint64_t))type metadata accessor for FormStepResult);
  }
  return result;
}

uint64_t sub_1C20FA544()
{
  uint64_t v1 = sub_1C2147B20();
  uint64_t v25 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v3 = (char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1C21490F0();
  uint64_t v26 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C20FC534(0, (unint64_t *)&qword_1EA2C2CC8, type metadata accessor for MedicationSearchItem, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v23 - v9;
  sub_1C20FC534(0, &qword_1EA2C7158, type metadata accessor for MedicationSearchItem.Source, v7);
  uint64_t v12 = MEMORY[0x1F4188790](v11 - 8);
  uint64_t v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&v23 - v15;
  sub_1C20FAD5C(v0 + qword_1EA2C7D70, (uint64_t)v10, (unint64_t *)&qword_1EA2C2CC8, type metadata accessor for MedicationSearchItem);
  uint64_t v17 = type metadata accessor for MedicationSearchItem(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48))(v10, 1, v17) == 1)
  {
    sub_1C20FAC24((uint64_t)v10, (unint64_t *)&qword_1EA2C2CC8, type metadata accessor for MedicationSearchItem);
    uint64_t v18 = type metadata accessor for MedicationSearchItem.Source(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v16, 1, 1, v18);
LABEL_6:
    uint64_t v21 = MEMORY[0x1E4FBC860];
    goto LABEL_7;
  }
  sub_1C20FAC94((uint64_t)v10, (uint64_t)v16, type metadata accessor for MedicationSearchItem.Source);
  sub_1C20FACFC((uint64_t)v10, type metadata accessor for MedicationSearchItem);
  uint64_t v19 = type metadata accessor for MedicationSearchItem.Source(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v16, 0, 1, v19);
  sub_1C20FAD5C((uint64_t)v16, (uint64_t)v14, &qword_1EA2C7158, type metadata accessor for MedicationSearchItem.Source);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_1C20FACFC((uint64_t)v14, type metadata accessor for MedicationSearchItem.Source);
    goto LABEL_6;
  }
  uint64_t v20 = v26;
  (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v6, v14, v4);
  sub_1C20FC534(0, (unint64_t *)&qword_1EBF0C958, (uint64_t (*)(uint64_t))sub_1C1F1CB5C, MEMORY[0x1E4FBBE00]);
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_1C214FCD0;
  uint64_t v24 = (uint64_t *)(v21 + 32);
  sub_1C21490D0();
  id v23 = sub_1C20FB628();
  swift_bridgeObjectRelease();
  uint64_t v27 = 0x74497265746F6F46;
  unint64_t v28 = 0xEB000000005F6D65;
  sub_1C2147B10();
  sub_1C2147AD0();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v3, v1);
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  *(void *)(v21 + 56) = sub_1C2148960();
  *(void *)(v21 + 64) = sub_1C20FB9D4(&qword_1EA2C2D38, MEMORY[0x1E4F665E8]);
  __swift_allocate_boxed_opaque_existential_1(v24);
  sub_1C2148940();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v6, v4);
LABEL_7:
  sub_1C20FAC24((uint64_t)v16, &qword_1EA2C7158, type metadata accessor for MedicationSearchItem.Source);
  return v21;
}

uint64_t sub_1C20FAAD4()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1C20FAB2C()
{
  uint64_t v0 = sub_1C2148610();
  swift_release();
  sub_1C20FAC24(v0 + qword_1EA2C7D70, (unint64_t *)&qword_1EA2C2CC8, type metadata accessor for MedicationSearchItem);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_1C20FAC1C()
{
  return type metadata accessor for MedicationFormsDataSource();
}

uint64_t sub_1C20FAC24(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1C20FC534(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1C20FAC94(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C20FACFC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C20FAD5C(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_1C20FC534(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

char *sub_1C20FADDC(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1C20FC534(0, &qword_1EA2C7170, (uint64_t (*)(uint64_t))sub_1C20FBD0C, MEMORY[0x1E4FBBE00]);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1C20FAF04(void **a1, const void **a2, void *a3)
{
  uint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  uint64_t v5 = v4 + 7;
  if (v4 >= 0) {
    uint64_t v5 = *a3 - (void)v3;
  }
  if (v4 <= -8)
  {
    uint64_t result = (char *)sub_1C214B990();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v7 = v5 >> 3;
    if (result != v3 || result >= &v3[8 * v7])
    {
      return (char *)memmove(result, v3, 8 * v7);
    }
  }
  return result;
}

uint64_t sub_1C20FAFC0(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_1C20FB00C(a1, a2, a3, (uint64_t (*)(void))sub_1C1F5FF8C);
}

uint64_t sub_1C20FAFDC(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_1C20FB00C(a1, a2, a3, (uint64_t (*)(void))type metadata accessor for Dosage);
}

uint64_t sub_1C20FAFF4(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_1C20FB00C(a1, a2, a3, type metadata accessor for WeekdaysAndDosages);
}

uint64_t sub_1C20FB00C(unint64_t *a1, unint64_t *a2, uint64_t *a3, uint64_t (*a4)(void))
{
  unint64_t v4 = *a1;
  unint64_t v5 = *a2;
  uint64_t v6 = *a3;
  uint64_t result = a4(0);
  uint64_t v8 = *(void *)(*(void *)(result - 8) + 72);
  if (!v8)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v9 = v6 - v5;
  if (v6 - v5 == 0x8000000000000000 && v8 == -1) {
    goto LABEL_18;
  }
  if (v9 / v8 < 0)
  {
LABEL_19:
    uint64_t result = sub_1C214B990();
    __break(1u);
    return result;
  }
  if (v4 < v5 || v4 >= v5 + v9 / v8 * v8)
  {
    return swift_arrayInitWithTakeFrontToBack();
  }
  else if (v4 != v5)
  {
    return swift_arrayInitWithTakeBackToFront();
  }
  return result;
}

char *sub_1C20FB150(uint64_t a1)
{
  return sub_1C20FADDC(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1C20FB164(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v13 = a4;
  uint64_t v14 = a5;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v12);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(boxed_opaque_existential_1, a2, a4);
  uint64_t v10 = *a3;
  *(void *)(v10 + 16) = a1 + 1;
  return sub_1C1F31280(&v12, v10 + 40 * a1 + 32);
}

uint64_t sub_1C20FB1FC(uint64_t a1)
{
  return sub_1C1F710B4(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1C20FB210(void *a1)
{
  return sub_1C1F71240(0, a1[2], 0, a1);
}

void sub_1C20FB224()
{
}

uint64_t sub_1C20FB238(void *a1)
{
  return sub_1C1F715C4(0, a1[2], 0, a1);
}

uint64_t sub_1C20FB24C(void *a1)
{
  return sub_1C1F71A74(0, a1[2], 0, a1);
}

uint64_t sub_1C20FB260(void *a1)
{
  return sub_1C1F71F78(0, a1[2], 0, a1);
}

uint64_t sub_1C20FB274(void *a1)
{
  return sub_1C1F70A4C(0, a1[2], 0, a1);
}

uint64_t sub_1C20FB288(uint64_t a1, uint64_t a2)
{
  uint64_t v44 = a2;
  uint64_t v52 = sub_1C21491B0();
  uint64_t result = MEMORY[0x1F4188790](v52);
  id v51 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = (void *)MEMORY[0x1E4FBC860];
  if (!v6) {
    return MEMORY[0x1E4FBC860];
  }
  unint64_t v8 = 0;
  unint64_t v42 = *(void *)(a1 + 16);
  uint64_t v43 = a1 + 32;
  uint64_t v40 = MEMORY[0x1E4FBC860];
  uint64_t v41 = v4;
  unint64_t v49 = (void (**)(char *, uint64_t))(v4 + 8);
  uint64_t v50 = v4 + 16;
  do
  {
    if (v8 <= v6) {
      unint64_t v9 = v6;
    }
    else {
      unint64_t v9 = v8;
    }
    unint64_t v45 = v9;
    while (1)
    {
      if (v8 == v45) {
        goto LABEL_42;
      }
      uint64_t v48 = *(void *)(v43 + 8 * v8);
      uint64_t v10 = sub_1C20F75C8();
      int64_t v11 = *(void *)(v10 + 16);
      if (v11)
      {
        unint64_t v47 = v8;
        uint64_t v53 = v7;
        sub_1C1F70524(0, v11, 0);
        uint64_t v12 = *(unsigned __int8 *)(v41 + 80);
        uint64_t v46 = v10;
        uint64_t v13 = v10 + ((v12 + 32) & ~v12);
        uint64_t v14 = *(void *)(v41 + 72);
        uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(v41 + 16);
        do
        {
          uint64_t v16 = v51;
          uint64_t v17 = v52;
          v15(v51, v13, v52);
          uint64_t v18 = sub_1C2149180();
          uint64_t v20 = v19;
          (*v49)(v16, v17);
          uint64_t v21 = v53;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1C1F70524(0, v21[2] + 1, 1);
            uint64_t v21 = v53;
          }
          unint64_t v23 = v21[2];
          unint64_t v22 = v21[3];
          if (v23 >= v22 >> 1)
          {
            sub_1C1F70524(v22 > 1, v23 + 1, 1);
            uint64_t v21 = v53;
          }
          void v21[2] = v23 + 1;
          uint64_t v24 = &v21[2 * v23];
          v24[4] = v18;
          v24[5] = v20;
          v13 += v14;
          --v11;
        }
        while (v11);
        swift_bridgeObjectRelease();
        uint64_t v7 = (void *)MEMORY[0x1E4FBC860];
        unint64_t v8 = v47;
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v21 = v7;
      }
      ++v8;
      uint64_t v25 = sub_1C214B020();
      uint64_t v27 = v26;
      uint64_t v28 = v21[2];
      if (!v28) {
        goto LABEL_33;
      }
      uint64_t v29 = v25;
      if (v21[4] != v25 || v21[5] != v26)
      {
        uint64_t result = sub_1C214BA80();
        if ((result & 1) == 0) {
          break;
        }
      }
LABEL_7:
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      if (v8 == v42) {
        return v40;
      }
    }
    if (v28 != 1)
    {
      uint64_t v31 = v21 + 7;
      uint64_t v32 = 1;
      while (1)
      {
        uint64_t v33 = v32 + 1;
        if (__OFADD__(v32, 1)) {
          break;
        }
        if (*(v31 - 1) == v29 && *v31 == v27) {
          goto LABEL_7;
        }
        uint64_t result = sub_1C214BA80();
        if (result) {
          goto LABEL_7;
        }
        v31 += 2;
        ++v32;
        if (v33 == v28) {
          goto LABEL_33;
        }
      }
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
LABEL_33:
    swift_bridgeObjectRelease();
    unint64_t v6 = v42;
    swift_bridgeObjectRelease();
    uint64_t v35 = v40;
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v54 = v35;
    if ((result & 1) == 0)
    {
      uint64_t result = sub_1C1F70544(0, *(void *)(v35 + 16) + 1, 1);
      uint64_t v35 = v54;
    }
    unint64_t v37 = *(void *)(v35 + 16);
    unint64_t v36 = *(void *)(v35 + 24);
    uint64_t v38 = v35;
    if (v37 >= v36 >> 1)
    {
      uint64_t result = sub_1C1F70544(v36 > 1, v37 + 1, 1);
      uint64_t v38 = v54;
    }
    *(void *)(v38 + 16) = v37 + 1;
    uint64_t v40 = v38;
    *(void *)(v38 + 8 * v37 + 32) = v48;
  }
  while (v8 != v6);
  return v40;
}

id sub_1C20FB628()
{
  uint64_t v0 = self;
  uint64_t v1 = *MEMORY[0x1E4FB28F0];
  id result = objc_msgSend(v0, sel__preferredFontForTextStyle_weight_, *MEMORY[0x1E4FB28F0], *MEMORY[0x1E4FB09E0]);
  if (!result)
  {
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v3 = result;
  id result = objc_msgSend(v0, sel__preferredFontForTextStyle_weight_, v1, *MEMORY[0x1E4FB09D8]);
  if (!result)
  {
LABEL_7:
    __break(1u);
    return result;
  }
  uint64_t v21 = result;
  if (qword_1EBF0CA00 != -1) {
    swift_once();
  }
  id v4 = (id)qword_1EBF0CA18;
  swift_bridgeObjectRetain();
  sub_1C2147730();
  swift_bridgeObjectRelease();

  sub_1C20FC534(0, (unint64_t *)&unk_1EBF0C9A0, (uint64_t (*)(uint64_t))sub_1C1F7C7B0, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C214FCD0;
  unint64_t v6 = (void *)*MEMORY[0x1E4FB06F8];
  *(void *)(inited + 32) = *MEMORY[0x1E4FB06F8];
  uint64_t v7 = sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8E0);
  *(void *)(inited + 64) = v7;
  *(void *)(inited + 4sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = v3;
  id v8 = v6;
  id v20 = v3;
  sub_1C1F49F18(inited);
  id v9 = objc_allocWithZone(MEMORY[0x1E4F28E48]);
  uint64_t v10 = (void *)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1C20FB9D4((unint64_t *)&qword_1EBF0C850, type metadata accessor for Key);
  int64_t v11 = (void *)sub_1C214A500();
  swift_bridgeObjectRelease();
  id v12 = objc_msgSend(v9, sel_initWithString_attributes_, v10, v11, 0xE000000000000000);

  uint64_t v13 = swift_initStackObject();
  *(_OWORD *)(v13 + 16) = xmmword_1C214FCD0;
  *(void *)(v13 + 64) = v7;
  *(void *)(v13 + 32) = v8;
  *(void *)(v13 + 4sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = v21;
  swift_bridgeObjectRetain();
  id v14 = v8;
  id v15 = v21;
  sub_1C1F49F18(v13);
  id v16 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
  uint64_t v17 = (void *)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  uint64_t v18 = (void *)sub_1C214A500();
  swift_bridgeObjectRelease();
  id v19 = objc_msgSend(v16, sel_initWithString_attributes_, v17, v18);

  objc_msgSend(v12, sel_appendAttributedString_, v19);
  return v12;
}

uint64_t sub_1C20FB9D4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C20FBA1C()
{
  swift_weakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C20FBA54()
{
  return sub_1C20F987C();
}

uint64_t sub_1C20FBA5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v21 = a3;
  int64_t v5 = *(void *)(a1 + 16);
  uint64_t v6 = MEMORY[0x1E4FBC860];
  if (v5)
  {
    uint64_t v26 = MEMORY[0x1E4FBC860];
    sub_1C1F704CC(0, v5, 0);
    uint64_t v6 = v26;
    id v9 = (uint64_t *)(a1 + 32);
    while (1)
    {
      uint64_t v10 = *v9++;
      uint64_t v22 = v10;
      sub_1C20F9968(&v22, a2, v21, v23);
      if (v4) {
        break;
      }
      uint64_t v4 = 0;
      uint64_t v26 = v6;
      unint64_t v12 = *(void *)(v6 + 16);
      unint64_t v11 = *(void *)(v6 + 24);
      if (v12 >= v11 >> 1) {
        sub_1C1F704CC(v11 > 1, v12 + 1, 1);
      }
      uint64_t v13 = v24;
      uint64_t v14 = v25;
      uint64_t v15 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v23, v24);
      MEMORY[0x1F4188790](v15);
      uint64_t v17 = (char *)&v20 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v18 + 16))(v17);
      sub_1C20A09B8(v12, (uint64_t)v17, &v26, v13, v14);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v23);
      uint64_t v6 = v26;
      if (!--v5) {
        return v6;
      }
    }
    swift_release();
  }
  return v6;
}

uint64_t sub_1C20FBC18()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C20FBC50(uint64_t a1)
{
  return sub_1C20FA388(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1C20FBC58@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1C2149180();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_1C20FBC84()
{
  unint64_t result = qword_1EA2C7168;
  if (!qword_1EA2C7168)
  {
    sub_1C20FC534(255, &qword_1EA2C7160, MEMORY[0x1E4F66C58], MEMORY[0x1E4FBB320]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C7168);
  }
  return result;
}

void sub_1C20FBD0C()
{
  if (!qword_1EA2C7178)
  {
    unint64_t v0 = sub_1C214AB30();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C7178);
    }
  }
}

uint64_t sub_1C20FBD6C()
{
  uint64_t v1 = sub_1C21491B0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x1F4186498](v0, v5, v6);
}

uint64_t sub_1C20FBE40(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_1C21491B0() - 8);
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (uint64_t)v1 + ((*(unsigned __int8 *)(v3 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_1C20F8F78(a1, v4, v5, v6, v7);
}

void *sub_1C20FBEB8(uint64_t a1, uint64_t a2)
{
  return sub_1C20FBEE8(a1, a2, (void (*)(uint64_t))sub_1C20F6AE4);
}

void *sub_1C20FBED0(uint64_t a1, uint64_t a2)
{
  return sub_1C20FBEE8(a1, a2, (void (*)(uint64_t))sub_1C20F6DF8);
}

void *sub_1C20FBEE8(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  id v19 = a3;
  uint64_t v4 = v3;
  uint64_t v7 = sub_1C2147B20();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(v4 + qword_1EA2C474sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = MEMORY[0x1E4FBC870];
  sub_1C20FAD5C(a1, v4 + qword_1EA2C7D70, (unint64_t *)&qword_1EA2C2CC8, type metadata accessor for MedicationSearchItem);
  *(void *)(v4 + qword_1EA2C4738) = a2;
  v20[0] = 0;
  v20[1] = 0xE000000000000000;
  swift_retain();
  sub_1C214B7C0();
  swift_bridgeObjectRelease();
  strcpy((char *)v20, "MutableArray<");
  HIWORD(v20[1]) = -4864;
  sub_1C2147B10();
  sub_1C2147AD0();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  sub_1C214A6C0();
  unint64_t v11 = (void *)sub_1C2148590();
  sub_1C20FC534(0, (unint64_t *)&qword_1EA2C2DD0, MEMORY[0x1E4F66468], MEMORY[0x1E4FBBE00]);
  sub_1C2148540();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1C2150000;
  unint64_t v12 = *(void (**)(uint64_t))(class metadata base offset for MedicationOptionsDataSource + *v11 + 80);
  uint64_t v13 = swift_retain_n();
  v12(v13);
  uint64_t v14 = sub_1C2148520();
  (*(void (**)(uint64_t))(class metadata base offset for MedicationOptionsDataSource + *v11 + 88))(v14);
  uint64_t v15 = sub_1C2148520();
  (*(void (**)(uint64_t))(class metadata base offset for MedicationOptionsDataSource + *v11 + 96))(v15);
  sub_1C2148520();
  sub_1C21485B0();
  swift_release();
  uint64_t v16 = swift_bridgeObjectRelease();
  v19(v16);
  swift_release();
  sub_1C20FAC24(a1, (unint64_t *)&qword_1EA2C2CC8, type metadata accessor for MedicationSearchItem);
  return v11;
}

void *sub_1C20FC328()
{
  swift_beginAccess();
  unint64_t result = (void *)swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = result;
    (*(void (**)(void))(class metadata base offset for MedicationOptionsDataSource + *result + 80))();
    sub_1C21485C0();
    uint64_t v2 = swift_bridgeObjectRelease();
    (*(void (**)(uint64_t))(class metadata base offset for MedicationOptionsDataSource + *v1 + 88))(v2);
    sub_1C21485C0();
    uint64_t v3 = swift_bridgeObjectRelease();
    (*(void (**)(uint64_t))(class metadata base offset for MedicationOptionsDataSource + *v1 + 96))(v3);
    sub_1C21485C0();
    swift_release();
    return (void *)swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C20FC494(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FormStepResult();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C20FC4F8()
{
  return sub_1C20FB9D4(&qword_1EA2C7188, (void (*)(uint64_t))sub_1C1FC3AD0);
}

void *sub_1C20FC52C()
{
  return sub_1C20F710C();
}

void sub_1C20FC534(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1C20FC598(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  if (!*a2)
  {
    a3(255);
    sub_1C1F12718(255, (unint64_t *)&qword_1EBF0CB10);
    a4();
    sub_1C1F43FD4();
    unint64_t v6 = sub_1C2149DF0();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void *sub_1C20FC640()
{
  return sub_1C20FC328();
}

uint64_t sub_1C20FC648(unint64_t *a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C20FC598(255, a2, a3, a4);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t InteractionFactorsInfoItem.reuseIdentifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t InteractionFactorsInfoItem.reuseIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*InteractionFactorsInfoItem.reuseIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t InteractionFactorsInfoItem.uniqueIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t InteractionFactorsInfoItem.uniqueIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*InteractionFactorsInfoItem.uniqueIdentifier.modify())()
{
  return nullsub_1;
}

__n128 sub_1C20FC7B4()
{
  __asm { FMOV            V0.2D, #16.0 }
  xmmword_1EA2C82D0 = (__int128)result;
  *(__n128 *)&qword_1EA2C82E0 = result;
  return result;
}

uint64_t sub_1C20FC7C8(uint64_t a1, void *a2)
{
  sub_1C1F2116C(a1, (uint64_t)v5);
  uint64_t v3 = *a2 + OBJC_IVAR____TtC19HealthMedicationsUI26InteractionFactorsInfoCell_item;
  swift_beginAccess();
  sub_1C1F1CADC((uint64_t)v5, v3);
  return swift_endAccess();
}

uint64_t sub_1C20FC830@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI26InteractionFactorsInfoCell_item;
  swift_beginAccess();
  return sub_1C1F2116C(v3, a1);
}

uint64_t sub_1C20FC884(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI26InteractionFactorsInfoCell_item;
  swift_beginAccess();
  sub_1C1F1CADC(a1, v3);
  return swift_endAccess();
}

uint64_t (*sub_1C20FC8E0())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1C20FC93C()
{
  uint64_t v1 = OBJC_IVAR____TtC19HealthMedicationsUI26InteractionFactorsInfoCell____lazy_storage___settingsManager;
  if (*(void *)(v0
                 + OBJC_IVAR____TtC19HealthMedicationsUI26InteractionFactorsInfoCell____lazy_storage___settingsManager))
  {
    uint64_t v2 = *(void *)(v0
                   + OBJC_IVAR____TtC19HealthMedicationsUI26InteractionFactorsInfoCell____lazy_storage___settingsManager);
  }
  else
  {
    uint64_t v3 = v0;
    sub_1C2148E10();
    sub_1C2148E00();
    sub_1C2148DB0();
    swift_release();
    sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C7C8);
    sub_1C214AC00();
    sub_1C2148D70();
    swift_allocObject();
    uint64_t v2 = sub_1C2148C90();
    *(void *)(v3 + vsub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, 0, 1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

id sub_1C20FCA10()
{
  return sub_1C20FD0EC(&OBJC_IVAR____TtC19HealthMedicationsUI26InteractionFactorsInfoCell____lazy_storage___criticalHeaderLabel, 1);
}

id sub_1C20FCA20()
{
  uint64_t v1 = OBJC_IVAR____TtC19HealthMedicationsUI26InteractionFactorsInfoCell____lazy_storage___criticalBodyLabel;
  uint64_t v2 = *(void **)(v0
                + OBJC_IVAR____TtC19HealthMedicationsUI26InteractionFactorsInfoCell____lazy_storage___criticalBodyLabel);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC19HealthMedicationsUI26InteractionFactorsInfoCell____lazy_storage___criticalBodyLabel);
  }
  else
  {
    uint64_t v4 = v0;
    id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
    sub_1C214A6C0();
    if (qword_1EBF0CA00 != -1) {
      swift_once();
    }
    id v6 = (id)qword_1EBF0CA18;
    swift_bridgeObjectRetain();
    sub_1C2147730();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    uint64_t v7 = (void *)sub_1C214A5B0();
    swift_bridgeObjectRelease();
    objc_msgSend(v5, sel_setText_, v7, 0xE000000000000000);

    sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8E0);
    unint64_t v8 = (void *)sub_1C214B0A0();
    objc_msgSend(v5, sel_setFont_, v8);

    objc_msgSend(v5, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    objc_msgSend(v5, sel_setNumberOfLines_, 0);
    objc_msgSend(v5, sel_setAdjustsFontForContentSizeCategory_, 1);
    uint64_t v9 = *(void **)(v4 + v1);
    *(void *)(v4 + vsub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, 0, 1) = v5;
    id v3 = v5;

    uint64_t v2 = 0;
  }
  id v10 = v2;
  return v3;
}

id sub_1C20FCC54()
{
  return sub_1C20FD0EC(&OBJC_IVAR____TtC19HealthMedicationsUI26InteractionFactorsInfoCell____lazy_storage___seriousHeaderLabel, 2);
}

id sub_1C20FCC64()
{
  uint64_t v1 = OBJC_IVAR____TtC19HealthMedicationsUI26InteractionFactorsInfoCell____lazy_storage___seriousBodyLabel;
  uint64_t v2 = *(void **)(v0
                + OBJC_IVAR____TtC19HealthMedicationsUI26InteractionFactorsInfoCell____lazy_storage___seriousBodyLabel);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC19HealthMedicationsUI26InteractionFactorsInfoCell____lazy_storage___seriousBodyLabel);
  }
  else
  {
    uint64_t v4 = v0;
    id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
    sub_1C214A6C0();
    if (qword_1EBF0CA00 != -1) {
      swift_once();
    }
    id v6 = (id)qword_1EBF0CA18;
    swift_bridgeObjectRetain();
    sub_1C2147730();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    uint64_t v7 = (void *)sub_1C214A5B0();
    swift_bridgeObjectRelease();
    objc_msgSend(v5, sel_setText_, v7, 0xE000000000000000);

    sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8E0);
    unint64_t v8 = (void *)sub_1C214B0A0();
    objc_msgSend(v5, sel_setFont_, v8);

    objc_msgSend(v5, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    objc_msgSend(v5, sel_setNumberOfLines_, 0);
    objc_msgSend(v5, sel_setAdjustsFontForContentSizeCategory_, 1);
    uint64_t v9 = *(void **)(v4 + v1);
    *(void *)(v4 + vsub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, 0, 1) = v5;
    id v3 = v5;

    uint64_t v2 = 0;
  }
  id v10 = v2;
  return v3;
}

id sub_1C20FCE98()
{
  return sub_1C20FD0EC(&OBJC_IVAR____TtC19HealthMedicationsUI26InteractionFactorsInfoCell____lazy_storage___moderateHeaderLabel, 3);
}

id sub_1C20FCEA8()
{
  uint64_t v1 = OBJC_IVAR____TtC19HealthMedicationsUI26InteractionFactorsInfoCell____lazy_storage___moderateBodyLabel;
  uint64_t v2 = *(void **)(v0
                + OBJC_IVAR____TtC19HealthMedicationsUI26InteractionFactorsInfoCell____lazy_storage___moderateBodyLabel);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC19HealthMedicationsUI26InteractionFactorsInfoCell____lazy_storage___moderateBodyLabel);
  }
  else
  {
    uint64_t v4 = v0;
    id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
    sub_1C214A6C0();
    if (qword_1EBF0CA00 != -1) {
      swift_once();
    }
    id v6 = (id)qword_1EBF0CA18;
    swift_bridgeObjectRetain();
    sub_1C2147730();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    uint64_t v7 = (void *)sub_1C214A5B0();
    swift_bridgeObjectRelease();
    objc_msgSend(v5, sel_setText_, v7, 0xE000000000000000);

    sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8E0);
    unint64_t v8 = (void *)sub_1C214B0A0();
    objc_msgSend(v5, sel_setFont_, v8);

    objc_msgSend(v5, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    objc_msgSend(v5, sel_setNumberOfLines_, 0);
    objc_msgSend(v5, sel_setAdjustsFontForContentSizeCategory_, 1);
    uint64_t v9 = *(void **)(v4 + v1);
    *(void *)(v4 + vsub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, 0, 1) = v5;
    id v3 = v5;

    uint64_t v2 = 0;
  }
  id v10 = v2;
  return v3;
}

id sub_1C20FD0DC()
{
  return sub_1C20FD0EC(&OBJC_IVAR____TtC19HealthMedicationsUI26InteractionFactorsInfoCell____lazy_storage___minorHeaderLabel, 4);
}

id sub_1C20FD0EC(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(void **)(v2 + *a1);
  if (v4)
  {
    id v5 = *(id *)(v2 + *a1);
  }
  else
  {
    id v6 = sub_1C20FEE10(a2);
    uint64_t v7 = *(void **)(v2 + v3);
    *(void *)(v2 + v3) = v6;
    id v5 = v6;

    uint64_t v4 = 0;
  }
  id v8 = v4;
  return v5;
}

id sub_1C20FD14C()
{
  uint64_t v1 = OBJC_IVAR____TtC19HealthMedicationsUI26InteractionFactorsInfoCell____lazy_storage___minorBodyLabel;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI26InteractionFactorsInfoCell____lazy_storage___minorBodyLabel);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI26InteractionFactorsInfoCell____lazy_storage___minorBodyLabel);
  }
  else
  {
    uint64_t v4 = v0;
    id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
    sub_1C214A6C0();
    if (qword_1EBF0CA00 != -1) {
      swift_once();
    }
    id v6 = (id)qword_1EBF0CA18;
    swift_bridgeObjectRetain();
    sub_1C2147730();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    uint64_t v7 = (void *)sub_1C214A5B0();
    swift_bridgeObjectRelease();
    objc_msgSend(v5, sel_setText_, v7, 0xE000000000000000);

    sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8E0);
    id v8 = (void *)sub_1C214B0A0();
    objc_msgSend(v5, sel_setFont_, v8);

    objc_msgSend(v5, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    objc_msgSend(v5, sel_setNumberOfLines_, 0);
    objc_msgSend(v5, sel_setAdjustsFontForContentSizeCategory_, 1);
    uint64_t v9 = *(void **)(v4 + v1);
    *(void *)(v4 + vsub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, 0, 1) = v5;
    id v3 = v5;

    uint64_t v2 = 0;
  }
  id v10 = v2;
  return v3;
}

id sub_1C20FD37C(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = &v4[OBJC_IVAR____TtC19HealthMedicationsUI26InteractionFactorsInfoCell_item];
  *(_OWORD *)uint64_t v9 = 0u;
  *((_OWORD *)v9 + sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, 0, 1) = 0u;
  *((void *)v9 + 4) = 0;
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI26InteractionFactorsInfoCell____lazy_storage___settingsManager] = 0;
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI26InteractionFactorsInfoCell____lazy_storage___criticalHeaderLabel] = 0;
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI26InteractionFactorsInfoCell____lazy_storage___criticalBodyLabel] = 0;
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI26InteractionFactorsInfoCell____lazy_storage___seriousHeaderLabel] = 0;
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI26InteractionFactorsInfoCell____lazy_storage___seriousBodyLabel] = 0;
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI26InteractionFactorsInfoCell____lazy_storage___moderateHeaderLabel] = 0;
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI26InteractionFactorsInfoCell____lazy_storage___moderateBodyLabel] = 0;
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI26InteractionFactorsInfoCell____lazy_storage___minorHeaderLabel] = 0;
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI26InteractionFactorsInfoCell____lazy_storage___minorBodyLabel] = 0;
  v12.receiver = v4;
  v12.super_class = (Class)type metadata accessor for InteractionFactorsInfoCell();
  id v10 = objc_msgSendSuper2(&v12, sel_initWithFrame_, a1, a2, a3, a4);
  sub_1C20FD68C();
  sub_1C20FD988();

  return v10;
}

id sub_1C20FD4A8(void *a1)
{
  id v3 = &v1[OBJC_IVAR____TtC19HealthMedicationsUI26InteractionFactorsInfoCell_item];
  *(_OWORD *)id v3 = 0u;
  *((_OWORD *)v3 + sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, 0, 1) = 0u;
  *((void *)v3 + 4) = 0;
  *(void *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI26InteractionFactorsInfoCell____lazy_storage___settingsManager] = 0;
  *(void *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI26InteractionFactorsInfoCell____lazy_storage___criticalHeaderLabel] = 0;
  *(void *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI26InteractionFactorsInfoCell____lazy_storage___criticalBodyLabel] = 0;
  *(void *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI26InteractionFactorsInfoCell____lazy_storage___seriousHeaderLabel] = 0;
  *(void *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI26InteractionFactorsInfoCell____lazy_storage___seriousBodyLabel] = 0;
  *(void *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI26InteractionFactorsInfoCell____lazy_storage___moderateHeaderLabel] = 0;
  *(void *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI26InteractionFactorsInfoCell____lazy_storage___moderateBodyLabel] = 0;
  *(void *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI26InteractionFactorsInfoCell____lazy_storage___minorHeaderLabel] = 0;
  *(void *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI26InteractionFactorsInfoCell____lazy_storage___minorBodyLabel] = 0;
  v6.receiver = v1;
  v6.super_class = (Class)type metadata accessor for InteractionFactorsInfoCell();
  id v4 = objc_msgSendSuper2(&v6, sel_initWithCoder_, a1);

  return v4;
}

uint64_t type metadata accessor for InteractionFactorsInfoCell()
{
  return self;
}

void sub_1C20FD68C()
{
  uint64_t v1 = v0;
  objc_msgSend(v0, sel_setUserInteractionEnabled_, 0);
  id v2 = sub_1C20FCA10();
  id v3 = sub_1C20FCA20();
  id v4 = sub_1C20FCC54();
  id v5 = sub_1C20FCC64();
  id v6 = sub_1C20FCE98();
  id v7 = sub_1C20FCEA8();
  id v8 = v2;
  id v9 = objc_msgSend(v1, sel_contentView);
  objc_msgSend(v9, sel_addSubview_, v8);

  id v10 = v3;
  id v11 = objc_msgSend(v1, sel_contentView);
  objc_msgSend(v11, sel_addSubview_, v10);

  id v12 = v4;
  id v13 = objc_msgSend(v1, sel_contentView);
  objc_msgSend(v13, sel_addSubview_, v12);

  id v14 = v5;
  id v15 = objc_msgSend(v1, sel_contentView);
  objc_msgSend(v15, sel_addSubview_, v14);

  id v16 = v6;
  id v17 = objc_msgSend(v1, sel_contentView);
  objc_msgSend(v17, sel_addSubview_, v16);

  id v18 = v7;
  id v19 = objc_msgSend(v1, sel_contentView);
  objc_msgSend(v19, sel_addSubview_, v18);

  sub_1C20FC93C();
  LOBYTE(v18) = sub_1C2148CC0();
  swift_release();
  if (v18)
  {
    id v20 = objc_msgSend(self, sel_sharedBehavior);
    if (v20)
    {
      uint64_t v21 = v20;
      unsigned int v22 = objc_msgSend(v20, sel_isAppleInternalInstall);

      if (v22)
      {
        id v23 = sub_1C20FD0DC();
        id v24 = sub_1C20FD14C();
        id v25 = v23;
        id v26 = objc_msgSend(v1, sel_contentView);
        objc_msgSend(v26, sel_addSubview_, v25);

        id v27 = v24;
        id v28 = objc_msgSend(v1, sel_contentView);
        objc_msgSend(v28, sel_addSubview_, v27);
      }
    }
    else
    {
      __break(1u);
    }
  }
}

void sub_1C20FD988()
{
  uint64_t v1 = v0;
  id v142 = self;
  sub_1C1F0ED28();
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1C2152310;
  id v3 = sub_1C20FCA10();
  id v4 = objc_msgSend(v3, sel_leadingAnchor);

  id v5 = objc_msgSend(v1, sel_contentView);
  id v6 = objc_msgSend(v5, sel_layoutMarginsGuide);

  id v7 = objc_msgSend(v6, sel_leadingAnchor);
  id v8 = objc_msgSend(v4, sel_constraintEqualToAnchor_, v7);

  *(void *)(v2 + 32) = v8;
  id v9 = sub_1C20FCA10();
  id v10 = objc_msgSend(v9, sel_trailingAnchor);

  id v11 = objc_msgSend(v1, sel_contentView);
  id v12 = objc_msgSend(v11, sel_layoutMarginsGuide);

  id v13 = objc_msgSend(v12, sel_trailingAnchor);
  id v14 = objc_msgSend(v10, sel_constraintEqualToAnchor_, v13);

  *(void *)(v2 + 4sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = v14;
  id v15 = sub_1C20FCA10();
  id v16 = objc_msgSend(v15, sel_topAnchor);

  id v17 = objc_msgSend(v1, sel_contentView);
  id v18 = objc_msgSend(v17, sel_topAnchor);

  if (qword_1EA2C2738 != -1) {
    swift_once();
  }
  id v19 = objc_msgSend(v16, sel_constraintEqualToAnchor_constant_, v18, *(double *)&xmmword_1EA2C82D0);

  *(void *)(v2 + 48) = v19;
  id v20 = sub_1C20FCA20();
  id v21 = objc_msgSend(v20, sel_leadingAnchor);

  id v22 = sub_1C20FCA10();
  id v23 = objc_msgSend(v22, sel_leadingAnchor);

  id v24 = objc_msgSend(v21, sel_constraintEqualToAnchor_, v23);
  *(void *)(v2 + 56) = v24;
  id v25 = sub_1C20FCA20();
  id v26 = objc_msgSend(v25, sel_trailingAnchor);

  id v27 = sub_1C20FCA10();
  id v28 = objc_msgSend(v27, sel_trailingAnchor);

  id v29 = objc_msgSend(v26, sel_constraintEqualToAnchor_, v28);
  *(void *)(v2 + 64) = v29;
  id v30 = sub_1C20FCA20();
  id v31 = objc_msgSend(v30, sel_topAnchor);

  id v32 = sub_1C20FCA10();
  id v33 = objc_msgSend(v32, sel_bottomAnchor);

  id v34 = objc_msgSend(v31, sel_constraintEqualToAnchor_constant_, v33, 8.0);
  *(void *)(v2 + 72) = v34;
  id v35 = sub_1C20FCC54();
  id v36 = objc_msgSend(v35, sel_leadingAnchor);

  id v37 = sub_1C20FCA10();
  id v38 = objc_msgSend(v37, sel_leadingAnchor);

  id v39 = objc_msgSend(v36, sel_constraintEqualToAnchor_, v38);
  *(void *)(v2 + 8sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = v39;
  id v40 = sub_1C20FCC54();
  id v41 = objc_msgSend(v40, sel_trailingAnchor);

  id v42 = sub_1C20FCA10();
  id v43 = objc_msgSend(v42, sel_trailingAnchor);

  id v44 = objc_msgSend(v41, sel_constraintEqualToAnchor_, v43);
  *(void *)(v2 + 88) = v44;
  id v45 = sub_1C20FCC54();
  id v46 = objc_msgSend(v45, sel_topAnchor);

  id v47 = sub_1C20FCA20();
  id v48 = objc_msgSend(v47, sel_bottomAnchor);

  id v49 = objc_msgSend(v46, sel_constraintEqualToAnchor_constant_, v48, 16.0);
  *(void *)(v2 + 96) = v49;
  id v50 = sub_1C20FCC64();
  id v51 = objc_msgSend(v50, sel_leadingAnchor);

  id v52 = sub_1C20FCA10();
  id v53 = objc_msgSend(v52, sel_leadingAnchor);

  id v54 = objc_msgSend(v51, sel_constraintEqualToAnchor_, v53);
  *(void *)(v2 + 104) = v54;
  id v55 = sub_1C20FCC64();
  id v56 = objc_msgSend(v55, sel_trailingAnchor);

  id v57 = sub_1C20FCA10();
  id v58 = objc_msgSend(v57, sel_trailingAnchor);

  id v59 = objc_msgSend(v56, sel_constraintEqualToAnchor_, v58);
  *(void *)(v2 + 112) = v59;
  id v60 = sub_1C20FCC64();
  id v61 = objc_msgSend(v60, sel_topAnchor);

  id v62 = sub_1C20FCC54();
  id v63 = objc_msgSend(v62, sel_bottomAnchor);

  id v64 = objc_msgSend(v61, sel_constraintEqualToAnchor_constant_, v63, 8.0);
  *(void *)(v2 + 12sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = v64;
  id v65 = sub_1C20FCE98();
  id v66 = objc_msgSend(v65, sel_leadingAnchor);

  id v67 = sub_1C20FCA10();
  id v68 = objc_msgSend(v67, sel_leadingAnchor);

  id v69 = objc_msgSend(v66, sel_constraintEqualToAnchor_, v68);
  *(void *)(v2 + 128) = v69;
  id v70 = sub_1C20FCE98();
  id v71 = objc_msgSend(v70, sel_trailingAnchor);

  id v72 = sub_1C20FCA10();
  id v73 = objc_msgSend(v72, sel_trailingAnchor);

  id v74 = objc_msgSend(v71, sel_constraintEqualToAnchor_, v73);
  *(void *)(v2 + 136) = v74;
  id v75 = sub_1C20FCE98();
  id v76 = objc_msgSend(v75, sel_topAnchor);

  id v77 = sub_1C20FCC64();
  id v78 = objc_msgSend(v77, sel_bottomAnchor);

  id v79 = objc_msgSend(v76, (SEL)&selRef_dealloc + 7, v78, 16.0);
  *(void *)(v2 + 144) = v79;
  id v80 = sub_1C20FCEA8();
  id v81 = objc_msgSend(v80, sel_leadingAnchor);

  id v82 = sub_1C20FCA10();
  id v83 = objc_msgSend(v82, sel_leadingAnchor);

  id v84 = objc_msgSend(v81, sel_constraintEqualToAnchor_, v83);
  *(void *)(v2 + 152) = v84;
  id v85 = sub_1C20FCEA8();
  id v86 = objc_msgSend(v85, sel_trailingAnchor);

  id v87 = sub_1C20FCA10();
  id v88 = objc_msgSend(v87, sel_trailingAnchor);

  id v89 = objc_msgSend(v86, sel_constraintEqualToAnchor_, v88);
  *(void *)(v2 + 16sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = v89;
  id v90 = sub_1C20FCEA8();
  id v91 = objc_msgSend(v90, sel_topAnchor);

  id v92 = sub_1C20FCE98();
  id v93 = objc_msgSend(v92, sel_bottomAnchor);

  id v94 = objc_msgSend(v91, sel_constraintEqualToAnchor_constant_, v93, 8.0);
  *(void *)(v2 + 168) = v94;
  sub_1C214A7A0();
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C810);
  uint64_t v95 = sub_1C214A770();
  swift_bridgeObjectRelease();
  uint64_t v96 = v142;
  objc_msgSend(v142, sel_activateConstraints_, v95);

  sub_1C20FC93C();
  LOBYTE(v95) = sub_1C2148CC0();
  swift_release();
  if ((v95 & 1) == 0) {
    goto LABEL_7;
  }
  id v97 = objc_msgSend(self, sel_sharedBehavior);
  if (!v97)
  {
    __break(1u);
    return;
  }
  uint64_t v98 = v97;
  unsigned int v99 = objc_msgSend(v97, sel_isAppleInternalInstall);

  if (v99)
  {
    uint64_t v100 = swift_allocObject();
    *(_OWORD *)(v100 + 16) = xmmword_1C21518E0;
    id v101 = sub_1C20FD0DC();
    id v102 = objc_msgSend(v101, sel_leadingAnchor);

    id v103 = sub_1C20FCA10();
    id v104 = objc_msgSend(v103, sel_leadingAnchor);

    id v105 = objc_msgSend(v102, sel_constraintEqualToAnchor_, v104);
    *(void *)(v100 + 32) = v105;
    id v106 = sub_1C20FD0DC();
    id v107 = objc_msgSend(v106, sel_trailingAnchor);

    id v108 = sub_1C20FCA10();
    id v109 = objc_msgSend(v108, sel_trailingAnchor);

    id v110 = objc_msgSend(v107, sel_constraintEqualToAnchor_, v109);
    *(void *)(v100 + 4sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = v110;
    id v111 = sub_1C20FD0DC();
    id v112 = objc_msgSend(v111, sel_topAnchor);

    id v113 = sub_1C20FCEA8();
    id v114 = objc_msgSend(v113, sel_bottomAnchor);

    id v115 = objc_msgSend(v112, sel_constraintEqualToAnchor_constant_, v114, 16.0);
    *(void *)(v100 + 48) = v115;
    id v116 = sub_1C20FD14C();
    id v117 = objc_msgSend(v116, sel_leadingAnchor);

    id v118 = sub_1C20FCA10();
    id v119 = objc_msgSend(v118, sel_leadingAnchor);

    id v120 = objc_msgSend(v117, sel_constraintEqualToAnchor_, v119);
    *(void *)(v100 + 56) = v120;
    id v121 = sub_1C20FD14C();
    id v122 = objc_msgSend(v121, sel_trailingAnchor);

    id v123 = sub_1C20FCA10();
    id v124 = objc_msgSend(v123, sel_trailingAnchor);

    id v125 = objc_msgSend(v122, sel_constraintEqualToAnchor_, v124);
    *(void *)(v100 + 64) = v125;
    id v126 = sub_1C20FD14C();
    id v127 = objc_msgSend(v126, sel_topAnchor);

    id v128 = sub_1C20FD0DC();
    id v129 = objc_msgSend(v128, sel_bottomAnchor);

    id v130 = objc_msgSend(v127, sel_constraintEqualToAnchor_constant_, v129, 8.0);
    uint64_t v96 = v142;
    *(void *)(v100 + 72) = v130;
    id v131 = objc_msgSend(v1, sel_contentView);
    id v132 = objc_msgSend(v131, sel_bottomAnchor);

    id v133 = sub_1C20FD14C();
    id v134 = objc_msgSend(v133, sel_bottomAnchor);

    id v135 = objc_msgSend(v132, sel_constraintEqualToAnchor_constant_, v134, *(double *)&qword_1EA2C82E0);
    *(void *)(v100 + 8sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = v135;
  }
  else
  {
LABEL_7:
    uint64_t v136 = swift_allocObject();
    *(_OWORD *)(v136 + 16) = xmmword_1C214E170;
    id v137 = objc_msgSend(v1, sel_contentView);
    id v138 = objc_msgSend(v137, sel_bottomAnchor);

    id v139 = sub_1C20FCEA8();
    id v140 = objc_msgSend(v139, sel_bottomAnchor);

    id v141 = objc_msgSend(v138, sel_constraintEqualToAnchor_constant_, v140, *(double *)&qword_1EA2C82E0);
    *(void *)(v136 + 32) = v141;
  }
  sub_1C214A7A0();
  id v143 = (id)sub_1C214A770();
  swift_bridgeObjectRelease();
  objc_msgSend(v96, sel_activateConstraints_, v143);
}

void sub_1C20FE814(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C21497F0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  id v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    id v8 = sub_1C20FCA20();
    uint64_t v21 = a1;
    uint64_t v22 = a2;
    swift_bridgeObjectRetain();
    sub_1C214A6C0();
    id v9 = (void *)sub_1C214A5B0();
    swift_bridgeObjectRelease();
    objc_msgSend(v8, sel_setAccessibilityIdentifier_, v9);

    id v10 = sub_1C20FCC64();
    uint64_t v21 = a1;
    uint64_t v22 = a2;
    swift_bridgeObjectRetain();
    sub_1C214A6C0();
    id v11 = (void *)sub_1C214A5B0();
    swift_bridgeObjectRelease();
    objc_msgSend(v10, sel_setAccessibilityIdentifier_, v11);

    id v12 = sub_1C20FCEA8();
    uint64_t v21 = a1;
    uint64_t v22 = a2;
    swift_bridgeObjectRetain();
    sub_1C214A6C0();
    id v13 = (void *)sub_1C214A5B0();
    swift_bridgeObjectRelease();
    objc_msgSend(v12, sel_setAccessibilityIdentifier_, v13);

    id v14 = sub_1C20FD14C();
    uint64_t v21 = a1;
    uint64_t v22 = a2;
    swift_bridgeObjectRetain();
    sub_1C214A6C0();
    uint64_t v20 = sub_1C214A5B0();
    swift_bridgeObjectRelease();
    objc_msgSend(v14, sel_setAccessibilityIdentifier_, v20);

    id v15 = (void *)v20;
  }
  else
  {
    sub_1C21497D0();
    id v16 = sub_1C21497E0();
    os_log_type_t v17 = sub_1C214ABF0();
    if (os_log_type_enabled(v16, v17))
    {
      id v18 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v18 = 0;
      _os_log_impl(&dword_1C1F0B000, v16, v17, "Could not set Interaction Factors Info Cell AXIDs because base ID was unexpectedly nil.", v18, 2u);
      MEMORY[0x1C8754730](v18, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
}

id InteractionFactorsInfoCell.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for InteractionFactorsInfoCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t (*sub_1C20FEC34())()
{
  return j__swift_endAccess;
}

void sub_1C20FEC90(uint64_t a1, uint64_t a2)
{
}

uint64_t sub_1C20FECB4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC19HealthMedicationsUI26InteractionFactorsInfoCell_item;
  swift_beginAccess();
  return sub_1C1F2116C(v3, a2);
}

ValueMetadata *type metadata accessor for InteractionFactorsInfoItem()
{
  return &type metadata for InteractionFactorsInfoItem;
}

uint64_t method lookup function for InteractionFactorsInfoCell(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for InteractionFactorsInfoCell);
}

uint64_t dispatch thunk of InteractionFactorsInfoCell.item.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of InteractionFactorsInfoCell.item.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of InteractionFactorsInfoCell.item.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of InteractionFactorsInfoCell.updateAutomationIdentifiers(with:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x1B0))();
}

id sub_1C20FEE10(uint64_t a1)
{
  sub_1C20FF270(0, (unint64_t *)&qword_1EA2C4AA8, MEMORY[0x1E4F67900]);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)v13 - v3;
  id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
  if (a1 == 1)
  {
    sub_1C1F12718(0, (unint64_t *)&unk_1EBF0C800);
    id v6 = objc_msgSend(self, sel_labelColor);
    uint64_t v7 = sub_1C214ADF0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v4, 1, 1, v7);
    v13[0] = 0xD000000000000015;
    v13[1] = 0x80000001C21665A0;
    sub_1C214A6C0();
    if (qword_1EBF0CA00 != -1) {
      swift_once();
    }
    id v8 = (id)qword_1EBF0CA18;
    swift_bridgeObjectRetain();
    sub_1C2147730();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8E0);
    sub_1C214B0A0();
    id v9 = (void *)sub_1C214ADD0();
    objc_msgSend(v5, sel_setAttributedText_, v9);
  }
  else
  {
    sub_1C20DB3B0(0xD000000000000015, 0x80000001C21665A0, a1);
    if (qword_1EBF0CA00 != -1) {
      swift_once();
    }
    id v10 = (id)qword_1EBF0CA18;
    swift_bridgeObjectRetain();
    sub_1C2147730();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    id v11 = (void *)sub_1C214A5B0();
    swift_bridgeObjectRelease();
    objc_msgSend(v5, sel_setText_, v11);

    sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8E0);
    id v9 = (void *)sub_1C214B0A0();
    objc_msgSend(v5, sel_setFont_, v9);
  }

  objc_msgSend(v5, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v5, sel_setNumberOfLines_, 0);
  objc_msgSend(v5, sel_setAdjustsFontForContentSizeCategory_, 1);
  return v5;
}

void sub_1C20FF270(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C214B4F0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1C20FF2C4(unint64_t a1)
{
  unint64_t v2 = v1;
  sub_1C1F728E8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62) {
    goto LABEL_15;
  }
  uint64_t v8 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v9 = MEMORY[0x1E4FBC860];
    if (!v8) {
      return v9;
    }
    uint64_t v19 = MEMORY[0x1E4FBC860];
    uint64_t result = sub_1C1F709FC(0, v8 & ~(v8 >> 63), 0);
    if (v8 < 0) {
      break;
    }
    v18[1] = v2;
    uint64_t v11 = 0;
    uint64_t v9 = v19;
    while (v8 != v11)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v12 = (id)MEMORY[0x1C8753960](v11, a1);
      }
      else {
        id v12 = *(id *)(a1 + 8 * v11 + 32);
      }
      id v13 = v12;
      sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C900);
      id v14 = v13;
      sub_1C214A480();
      sub_1C1F3BF0C();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v7, 0, 1, v15);

      uint64_t v19 = v9;
      unint64_t v17 = *(void *)(v9 + 16);
      unint64_t v16 = *(void *)(v9 + 24);
      unint64_t v2 = v17 + 1;
      if (v17 >= v16 >> 1)
      {
        sub_1C1F709FC(v16 > 1, v17 + 1, 1);
        uint64_t v9 = v19;
      }
      ++v11;
      *(void *)(v9 + 16) = v2;
      sub_1C2104238((uint64_t)v7, v9+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(void *)(v5 + 72) * v17, (uint64_t (*)(void))sub_1C1F728E8);
      if (v8 == v11) {
        return v9;
      }
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_1C214B930();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

BOOL static VisualizationDataSourceDisplayContext.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_1C20FF53C(uint64_t a1)
{
  uint64_t v2 = sub_1C2149390();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  id v26 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v21 - v6;
  uint64_t v8 = MEMORY[0x1E4FBC860];
  uint64_t v27 = MEMORY[0x1E4FBC860];
  uint64_t v9 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  if (v9)
  {
    id v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v10 = v3 + 16;
    uint64_t v11 = v12;
    uint64_t v13 = *(void *)(v10 + 56);
    unint64_t v23 = (*(unsigned __int8 *)(v10 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 64);
    id v24 = v12;
    uint64_t v14 = a1 + v23;
    v21[1] = a1;
    uint64_t v22 = (void (**)(char *, uint64_t))(v10 - 8);
    uint64_t v15 = (void (**)(char *, char *, uint64_t))(v10 + 16);
    uint64_t v25 = v10;
    v12(v7, a1 + v23, v2);
    while (1)
    {
      if (sub_1C2149380())
      {
        unint64_t v16 = *v15;
        (*v15)(v26, v7, v2);
        uint64_t v17 = v27;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1C1F707E4(0, *(void *)(v17 + 16) + 1, 1);
          uint64_t v17 = v27;
        }
        unint64_t v19 = *(void *)(v17 + 16);
        unint64_t v18 = *(void *)(v17 + 24);
        if (v19 >= v18 >> 1)
        {
          sub_1C1F707E4(v18 > 1, v19 + 1, 1);
          uint64_t v17 = v27;
        }
        *(void *)(v17 + 16) = v19 + 1;
        v16((char *)(v17 + v23 + v19 * v13), v26, v2);
        uint64_t v27 = v17;
        uint64_t v11 = v24;
      }
      else
      {
        (*v22)(v7, v2);
      }
      v14 += v13;
      if (!--v9) {
        break;
      }
      v11(v7, v14, v2);
    }
    uint64_t v8 = v27;
  }
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t VisualizationDataSourceDisplayContext.hash(into:)()
{
  return sub_1C214BB40();
}

uint64_t VisualizationDataSourceDisplayContext.hashValue.getter()
{
  return sub_1C214BB80();
}

uint64_t sub_1C20FF7E8()
{
  return swift_retain();
}

uint64_t sub_1C20FF834(uint64_t *a1, void *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (void *)(*a2 + qword_1EA2C71F8);
  swift_beginAccess();
  *uint64_t v3 = v2;
  swift_retain();
  return swift_release();
}

uint64_t sub_1C20FF8A0(uint64_t a1)
{
  uint64_t v3 = (void *)(v1 + qword_1EA2C71F8);
  swift_beginAccess();
  *uint64_t v3 = a1;
  return swift_release();
}

uint64_t (*sub_1C20FF8F4())()
{
  return j__swift_endAccess;
}

uint64_t sub_1C20FF950(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 *a5)
{
  uint64_t v6 = v5;
  uint64_t v12 = sub_1C2148F60();
  uint64_t v27 = *(void *)(v12 - 8);
  uint64_t v28 = v12;
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = &v25[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1C1F4CC58();
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v17 = &v25[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  int v26 = *a5;
  uint64_t v18 = qword_1EA2C71F8;
  uint64_t v19 = sub_1C21492D0();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v17, 1, 1, v19);
  sub_1C21046E8(0, &qword_1EA2C46F0, (void (*)(uint64_t))sub_1C1F4CC58);
  swift_allocObject();
  swift_retain();
  *(void *)(v6 + v18) = sub_1C2149EB0();
  *(void *)(v6 + qword_1EA2C722sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = MEMORY[0x1E4FBC870];
  *(void *)(v6 + qword_1EA2C720sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = a1;
  *(void *)(v6 + qword_1EA2C7208) = a2;
  *(void *)(v6 + qword_1EA2C721sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = a3;
  *(void *)(v6 + qword_1EA2C7218) = a4;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_release();
  sub_1C2149E90();
  sub_1C2149E90();
  uint64_t v20 = v31;
  sub_1C2149E90();
  uint64_t v21 = v30;
  sub_1C2149E90();
  uint64_t v22 = v29;
  sub_1C2103234((uint64_t)v14, v20, v21, v29);

  (*(void (**)(unsigned char *, uint64_t))(v27 + 8))(v14, v28);
  *(unsigned char *)(swift_allocObject() + 16) = v26;
  uint64_t v23 = sub_1C21489B0();
  swift_retain();
  sub_1C2100218();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v23;
}

uint64_t sub_1C20FFC60(uint64_t a1, void *a2, char a3)
{
  uint64_t v50 = a1;
  int v4 = a3 & 1;
  uint64_t v5 = sub_1C2148710();
  uint64_t v48 = *(void *)(v5 - 8);
  uint64_t v49 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v51 = a2;
  id v8 = objc_msgSend(a2, sel_traitCollection);
  uint64_t v9 = sub_1C214ADC0();

  if ((v4 & (v9 > 2)) != 0) {
    double v10 = 44.0;
  }
  else {
    double v10 = 4.0;
  }
  uint64_t v11 = self;
  id v12 = objc_msgSend(v11, sel_fractionalWidthDimension_, 0.166666667);
  id v13 = objc_msgSend(v11, sel_fractionalHeightDimension_, 1.0);
  uint64_t v14 = self;
  id v15 = objc_msgSend(v14, sel_sizeWithWidthDimension_heightDimension_, v12, v13);

  uint64_t v16 = self;
  id v47 = v15;
  id v17 = objc_msgSend(v16, sel_itemWithLayoutSize_, v15);
  sub_1C214AEB0();
  objc_msgSend(v17, sel_setContentInsets_);
  id v18 = objc_msgSend(v11, sel_fractionalWidthDimension_, 1.0);
  id v19 = objc_msgSend(v11, sel_fractionalWidthDimension_, 0.166666667);
  id v20 = objc_msgSend(v14, sel_sizeWithWidthDimension_heightDimension_, v18, v19);

  uint64_t v21 = self;
  sub_1C1F0ED28();
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_1C214E170;
  *(void *)(v22 + 32) = v17;
  uint64_t v52 = v22;
  sub_1C214A7A0();
  sub_1C1F12718(0, &qword_1EA2C43A0);
  id v45 = v17;
  uint64_t v23 = (void *)sub_1C214A770();
  swift_bridgeObjectRelease();
  id v46 = v20;
  id v24 = objc_msgSend(v21, sel_horizontalGroupWithLayoutSize_subitems_, v20, v23);

  sub_1C2148660();
  if (!v50 && v4)
  {
    uint64_t v25 = (void *)sub_1C2148670();
    if (v25)
    {
      int v26 = v25;
      objc_msgSend(v25, sel_dimension);
      double v28 = v27;
    }
    else
    {
      double v28 = 30.0;
    }
    id v29 = objc_msgSend(v11, sel_absoluteDimension_, v28);
    sub_1C2148680();
  }
  id v30 = (void *)sub_1C2148700();
  objc_msgSend(v30, sel_contentInsets);
  double v32 = v31;
  objc_msgSend(v30, sel_contentInsets);
  double v34 = v33;
  id v35 = self;
  id v51 = v24;
  id v36 = objc_msgSend(v35, sel_sectionWithGroup_, v24);
  objc_msgSend(v36, sel_setContentInsets_, v32, v10, v34, v10);
  id v37 = objc_msgSend(v30, sel_boundarySupplementaryItems);
  if (!v37)
  {
    sub_1C1F12718(0, (unint64_t *)&qword_1EA2C43A8);
    sub_1C214A780();
    id v37 = (id)sub_1C214A770();
    swift_bridgeObjectRelease();
  }
  objc_msgSend(v36, sel_setBoundarySupplementaryItems_, v37);

  objc_msgSend(v36, sel_setSupplementaryContentInsetsReference_, 3);
  id v38 = objc_msgSend(v36, sel_boundarySupplementaryItems);
  sub_1C1F12718(0, (unint64_t *)&qword_1EA2C43A8);
  unint64_t v39 = sub_1C214A780();

  if (!(v39 >> 62))
  {
    uint64_t v40 = *(void *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v40) {
      goto LABEL_14;
    }
LABEL_21:

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v48 + 8))(v7, v49);
    return (uint64_t)v36;
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_1C214B930();
  uint64_t v40 = result;
  if (!result) {
    goto LABEL_21;
  }
LABEL_14:
  if (v40 >= 1)
  {
    uint64_t v42 = 0;
    do
    {
      if ((v39 & 0xC000000000000001) != 0) {
        id v43 = (id)MEMORY[0x1C8753960](v42, v39);
      }
      else {
        id v43 = *(id *)(v39 + 8 * v42 + 32);
      }
      id v44 = v43;
      ++v42;
      objc_msgSend(v43, sel_contentInsets);
      objc_msgSend(v44, sel_setContentInsets_);
      objc_msgSend(v44, sel_contentInsets);
      objc_msgSend(v44, sel_setContentInsets_);
    }
    while (v40 != v42);
    goto LABEL_21;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C2100218()
{
  uint64_t v25 = *v0;
  sub_1C1F2F7C0(0);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)&v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2104308();
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  id v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2104418();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v23 = v9;
  uint64_t v24 = v10;
  MEMORY[0x1F4188790](v9);
  id v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2148F60();
  uint64_t v22 = swift_allocBox();
  uint64_t v13 = qword_1EA2C7200;
  swift_retain();
  sub_1C2149E90();
  swift_release();
  uint64_t v14 = *(uint64_t *)((char *)v0 + qword_1EA2C7208);
  id v26 = *(id *)((char *)v0 + v13);
  uint64_t v28 = *(uint64_t *)((char *)v0 + qword_1EA2C7210);
  uint64_t v29 = v14;
  uint64_t v27 = *(uint64_t *)((char *)v0 + qword_1EA2C7218);
  sub_1C21043F8(0);
  sub_1C1FB8E88();
  sub_1C2101C18(&qword_1EA2C7258, sub_1C21043F8);
  sub_1C2101C18(&qword_1EA2C7260, (void (*)(uint64_t))sub_1C1FB8E88);
  sub_1C214A000();
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0CB10);
  id v26 = (id)sub_1C214AD80();
  uint64_t v15 = sub_1C214AD20();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v3, 1, 1, v15);
  sub_1C2101C18(&qword_1EA2C7270, (void (*)(uint64_t))sub_1C2104308);
  sub_1C1F43FD4();
  sub_1C214A0A0();
  sub_1C21044E4((uint64_t)v3, (uint64_t (*)(void))sub_1C1F2F7C0);

  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v16 = swift_allocObject();
  swift_weakInit();
  id v17 = (void *)swift_allocObject();
  uint64_t v18 = v22;
  v17[2] = v16;
  v17[3] = v18;
  void v17[4] = v25;
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = sub_1C21045BC;
  *(void *)(v19 + 24) = v17;
  sub_1C2101C18(&qword_1EA2C7278, (void (*)(uint64_t))sub_1C2104418);
  swift_retain();
  uint64_t v20 = v23;
  sub_1C214A0F0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v12, v20);
  swift_beginAccess();
  sub_1C2149E20();
  swift_endAccess();
  swift_release();
  return swift_release();
}

uint64_t sub_1C210072C(uint64_t a1, void *a2, void *a3, void *a4)
{
  uint64_t v28 = a2;
  uint64_t v29 = a4;
  uint64_t v31 = a1;
  sub_1C1F4CC58();
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_1C21492D0();
  uint64_t v8 = *(void *)(v30 - 8);
  MEMORY[0x1F4188790](v30);
  uint64_t v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1C2148F60();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = swift_projectBox();
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v27 = v8;
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v15, v11);
    sub_1C2101C18(&qword_1EA2C4360, MEMORY[0x1E4F66C08]);
    char v17 = sub_1C214A5A0();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    if (v17)
    {
      uint64_t v19 = v28;
      uint64_t v18 = v29;
      sub_1C210131C(v31, v28, a3, (uint64_t)v29);
    }
    else
    {
      uint64_t v19 = v28;
      uint64_t v20 = a3;
      id v26 = a3;
      uint64_t v21 = v10;
      uint64_t v22 = v29;
      sub_1C2103234(v31, v28, v20, v29);
      sub_1C21485B0();
      uint64_t v18 = v22;
      uint64_t v10 = v21;
      a3 = v26;
      swift_bridgeObjectRelease();
    }
    swift_beginAccess();
    uint64_t v23 = v31;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 24))(v15, v31, v11);
    sub_1C2100B0C(v23, v19, a3, v18, (uint64_t)v10);
    swift_beginAccess();
    uint64_t v24 = v27;
    uint64_t v25 = v30;
    (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v7, v10, v30);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v7, 0, 1, v25);
    swift_retain();
    sub_1C2149E70();
    swift_release();
    swift_release();
    sub_1C21044E4((uint64_t)v7, (uint64_t (*)(void))sub_1C1F4CC58);
    return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v10, v25);
  }
  return result;
}

uint64_t sub_1C2100B0C@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, void *a4@<X3>, uint64_t a5@<X8>)
{
  id v40 = a2;
  uint64_t v41 = a5;
  uint64_t v39 = sub_1C2149540();
  uint64_t v37 = *(void *)(v39 - 8);
  MEMORY[0x1F4188790](v39);
  id v38 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1C2148F60();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)&v36 - v14;
  (*(void (**)(char *, void, uint64_t))(v10 + 104))((char *)&v36 - v14, *MEMORY[0x1E4F66C00], v9);
  sub_1C2101C18(&qword_1EA2C7248, MEMORY[0x1E4F66C08]);
  sub_1C214A750();
  sub_1C214A750();
  if (v44 == v42 && v45 == v43)
  {
    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
  }
  else
  {
    char v16 = sub_1C214BA80();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
    if ((v16 & 1) == 0)
    {
      uint64_t v25 = sub_1C2148F50();
      uint64_t v26 = sub_1C20FF53C(v25);
      swift_bridgeObjectRelease();
      sub_1C21041D4(0, &qword_1EA2C3B20, (uint64_t (*)(uint64_t))sub_1C1F728E8, MEMORY[0x1E4FBBE00]);
      sub_1C1F728E8();
      unint64_t v28 = (*(unsigned __int8 *)(*(void *)(v27 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v27 - 8) + 80);
      uint64_t v29 = swift_allocObject();
      *(_OWORD *)(v29 + 16) = xmmword_1C214FCD0;
      sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C900);
      id v30 = a3;
      sub_1C214A480();
      sub_1C1F3BF0C();
      (*(void (**)(unint64_t, void, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v29 + v28, 0, 1, v31);
      uint64_t v24 = sub_1C21023A4(v26, v29);
      swift_bridgeObjectRelease();
      swift_setDeallocating();
      swift_arrayDestroy();
      swift_deallocClassInstance();
      goto LABEL_7;
    }
  }
  uint64_t v17 = sub_1C2148F50();
  uint64_t v18 = sub_1C20FF53C(v17);
  swift_bridgeObjectRelease();
  sub_1C1F0ED28();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C214FCB0;
  *(void *)(inited + 32) = a3;
  *(void *)(inited + 4sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = a4;
  unint64_t v44 = inited;
  sub_1C214A7A0();
  unint64_t v20 = v44;
  id v21 = a3;
  id v22 = a4;
  uint64_t v23 = sub_1C20FF2C4(v20);
  swift_bridgeObjectRelease();
  uint64_t v24 = sub_1C21023A4(v18, v23);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_7:
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v13, a1, v9);
  uint64_t v32 = sub_1C2148F50();
  uint64_t v33 = sub_1C2101030(v32);
  swift_bridgeObjectRelease();
  unint64_t v44 = v24;
  sub_1C1F7E004(v33);
  (*(void (**)(char *, void, uint64_t))(v37 + 104))(v38, *MEMORY[0x1E4F66CE0], v39);
  id v34 = v40;
  return sub_1C21492A0();
}

uint64_t sub_1C2101030(uint64_t a1)
{
  uint64_t v2 = sub_1C2149390();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1F3BE6C();
  uint64_t v26 = *(void *)(v6 - 8);
  uint64_t v27 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1C2101C84(a1);
  int64_t v10 = *(void *)(v9 + 16);
  if (v10)
  {
    uint64_t v28 = MEMORY[0x1E4FBC860];
    sub_1C1F70564(0, v10, 0);
    uint64_t v13 = *(void (**)(char *, unint64_t, uint64_t))(v3 + 16);
    uint64_t v12 = v3 + 16;
    uint64_t v11 = v13;
    unint64_t v14 = v9 + ((*(unsigned __int8 *)(v12 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 64));
    uint64_t v15 = *(void *)(v12 + 56);
    uint64_t v23 = v9;
    uint64_t v24 = v15;
    char v16 = (void (**)(char *, uint64_t))(v12 - 8);
    uint64_t v25 = v12;
    do
    {
      v11(v5, v14, v2);
      uint64_t v17 = &v8[*(int *)(v27 + 48)];
      v11(v8, (unint64_t)v5, v2);
      sub_1C1F3BF0C();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v17, 1, 1, v18);
      (*v16)(v5, v2);
      uint64_t v19 = v28;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C1F70564(0, *(void *)(v19 + 16) + 1, 1);
        uint64_t v19 = v28;
      }
      unint64_t v21 = *(void *)(v19 + 16);
      unint64_t v20 = *(void *)(v19 + 24);
      if (v21 >= v20 >> 1)
      {
        sub_1C1F70564(v20 > 1, v21 + 1, 1);
        uint64_t v19 = v28;
      }
      *(void *)(v19 + 16) = v21 + 1;
      sub_1C2104238((uint64_t)v8, v19+ ((*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80))+ *(void *)(v26 + 72) * v21, (uint64_t (*)(void))sub_1C1F3BE6C);
      v14 += v24;
      --v10;
    }
    while (v10);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E4FBC860];
  }
  return v19;
}

uint64_t sub_1C210131C(uint64_t a1, void *a2, void *a3, uint64_t a4)
{
  id v19 = a2;
  uint64_t v6 = sub_1C2148F60();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1C2148E20();
  id v11 = a3;
  sub_1C2103A70(v10, (uint64_t)v11);
  swift_bridgeObjectRelease();

  sub_1C21485C0();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E4F66C00], v6);
  sub_1C2101C18(&qword_1EA2C7248, MEMORY[0x1E4F66C08]);
  sub_1C214A750();
  sub_1C214A750();
  if (v22 == v20 && v23 == v21)
  {
    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
LABEL_5:
    uint64_t v13 = sub_1C2148E20();
    uint64_t v14 = MEMORY[0x1F4188790](v13);
    *(&v18 - 2) = a4;
    sub_1C2103D08(v14, (void (*)(uint64_t))sub_1C21041CC, (uint64_t)(&v18 - 4));
    swift_bridgeObjectRelease();
    goto LABEL_6;
  }
  char v12 = sub_1C214BA80();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  if (v12) {
    goto LABEL_5;
  }
LABEL_6:
  sub_1C21485C0();
  swift_bridgeObjectRelease();
  uint64_t v15 = sub_1C2148E30();
  id v16 = v19;
  sub_1C2103F28(v15, (uint64_t)v16);
  swift_bridgeObjectRelease();

  sub_1C21485C0();
  return swift_bridgeObjectRelease();
}

void sub_1C2101618(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1C2148E60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  sub_1C1F12718(0, (unint64_t *)&qword_1EA2C4AA0);
  uint64_t v5 = (void *)sub_1C2148E50();
  char v6 = sub_1C214B220();

  sub_1C1F3C674();
  *(unsigned char *)(a2 + *(int *)(v7 + 36)) = v6 & 1;
  uint64_t v8 = (void *)(a2 + *(int *)(v7 + 40));
  *uint64_t v8 = 0xD000000000000012;
  v8[1] = 0x80000001C2161570;
}

void VisualizationModificationDataSource.__allocating_init(arrangedSections:collapseEmptySections:layoutConstructor:)()
{
}

void VisualizationModificationDataSource.init(arrangedSections:collapseEmptySections:layoutConstructor:)()
{
}

void VisualizationModificationDataSource.__allocating_init(arrangedSections:collapseEmptySections:layoutSectionProvider:)()
{
}

void sub_1C2101750()
{
}

void VisualizationModificationDataSource.init(arrangedSections:collapseEmptySections:layoutSectionProvider:)()
{
}

uint64_t sub_1C2101798()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t VisualizationModificationDataSource.deinit()
{
  uint64_t v0 = sub_1C21489E0();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t VisualizationModificationDataSource.__deallocating_deinit()
{
  sub_1C21489E0();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

unint64_t VisualizationModificationDataSource.supplementaryItem(ofKind:at:)@<X0>(uint64_t *a1@<X8>)
{
  sub_1C21041D4(0, (unint64_t *)&qword_1EA2C2FE8, MEMORY[0x1E4F664F8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v14 - v3;
  uint64_t v5 = sub_1C2148540();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1C21485A0();
  unint64_t result = sub_1C2147D80();
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  if (result >= *(void *)(v9 + 16))
  {
LABEL_8:
    __break(1u);
    return result;
  }
  (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v8, v9+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(void *)(v6 + 72) * result, v5);
  swift_bridgeObjectRelease();
  sub_1C2148530();
  uint64_t v12 = v11;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  if (v12)
  {
    uint64_t v13 = sub_1C2148770();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v4, 1, 1, v13);
    a1[3] = sub_1C2148790();
    a1[4] = sub_1C2101C18((unint64_t *)&qword_1EA2C3000, MEMORY[0x1E4F66500]);
    __swift_allocate_boxed_opaque_existential_1(a1);
    return sub_1C2148780();
  }
  else
  {
    a1[3] = sub_1C2148220();
    a1[4] = sub_1C2101C18(&qword_1EA2C2D28, MEMORY[0x1E4F66330]);
    __swift_allocate_boxed_opaque_existential_1(a1);
    return sub_1C2148210();
  }
}

uint64_t sub_1C2101C18(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C2101C60@<X0>(uint64_t *a1@<X8>)
{
  return VisualizationModificationDataSource.supplementaryItem(ofKind:at:)(a1);
}

uint64_t sub_1C2101C84(uint64_t a1)
{
  uint64_t v2 = sub_1C2149390();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)v24 - v7;
  uint64_t v9 = MEMORY[0x1E4FBC860];
  uint64_t v30 = MEMORY[0x1E4FBC860];
  uint64_t v10 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  if (v10)
  {
    uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    uint64_t v12 = v13;
    uint64_t v14 = *(unsigned __int8 *)(v11 + 64);
    uint64_t v15 = *(void *)(v11 + 56);
    v24[1] = a1;
    uint64_t v26 = (v14 + 32) & ~v14;
    uint64_t v27 = v13;
    uint64_t v16 = a1 + v26;
    uint64_t v17 = (void (**)(char *, char *, uint64_t))(v11 + 16);
    uint64_t v25 = (void (**)(char *, uint64_t))(v11 - 8);
    uint64_t v28 = v6;
    uint64_t v29 = v11;
    v13(v8, v16, v2);
    while (1)
    {
      if (sub_1C2149380())
      {
        (*v25)(v8, v2);
      }
      else
      {
        uint64_t v18 = *v17;
        (*v17)(v6, v8, v2);
        uint64_t v19 = v30;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1C1F707E4(0, *(void *)(v19 + 16) + 1, 1);
          uint64_t v19 = v30;
        }
        unint64_t v21 = *(void *)(v19 + 16);
        unint64_t v20 = *(void *)(v19 + 24);
        if (v21 >= v20 >> 1)
        {
          sub_1C1F707E4(v20 > 1, v21 + 1, 1);
          uint64_t v19 = v30;
        }
        *(void *)(v19 + 16) = v21 + 1;
        uint64_t v22 = v19 + v26 + v21 * v15;
        uint64_t v6 = v28;
        v18((char *)v22, v28, v2);
        uint64_t v30 = v19;
        uint64_t v12 = v27;
      }
      v16 += v15;
      if (!--v10) {
        break;
      }
      v12(v8, v16, v2);
    }
    uint64_t v9 = v30;
  }
  swift_bridgeObjectRelease();
  return v9;
}

Swift::Void __swiftcall VisualizationModificationDataSource.registerCells(for:)(UICollectionView *a1)
{
}

unint64_t sub_1C2101F50()
{
  unint64_t result = qword_1EA2C7230;
  if (!qword_1EA2C7230)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C7230);
  }
  return result;
}

uint64_t sub_1C2101FA4()
{
  return sub_1C2101C18(&qword_1EA2C4BE8, MEMORY[0x1E4F66C80]);
}

uint64_t sub_1C2101FEC()
{
  return sub_1C214ACE0();
}

uint64_t sub_1C2102074@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (void *)(*a1 + qword_1EA2C71F8);
  swift_beginAccess();
  *a2 = *v3;
  return swift_retain();
}

unsigned char *storeEnumTagSinglePayload for VisualizationDataSourceDisplayContext(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, 0, 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C210219CLL);
      case 4:
        *(_DWORD *)(result + sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, 0, 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, 0, 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, 0, 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VisualizationDataSourceDisplayContext()
{
  return &type metadata for VisualizationDataSourceDisplayContext;
}

uint64_t type metadata accessor for VisualizationModificationDataSource()
{
  uint64_t result = qword_1EA2C7238;
  if (!qword_1EA2C7238) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C2102220()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for VisualizationModificationDataSource(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for VisualizationModificationDataSource);
}

uint64_t dispatch thunk of VisualizationModificationDataSource.currentValuePublisher.getter()
{
  return (*(uint64_t (**)(void))(class metadata base offset for VisualizationModificationDataSource + *v0 + 48))();
}

uint64_t dispatch thunk of VisualizationModificationDataSource.medmojiPublisher.getter()
{
  return (*(uint64_t (**)(void))(class metadata base offset for VisualizationModificationDataSource + *v0 + 152))();
}

uint64_t dispatch thunk of VisualizationModificationDataSource.medmojiPublisher.setter()
{
  return (*(uint64_t (**)(void))(class metadata base offset for VisualizationModificationDataSource + *v0 + 160))();
}

uint64_t dispatch thunk of VisualizationModificationDataSource.medmojiPublisher.modify()
{
  return (*(uint64_t (**)(void))(class metadata base offset for VisualizationModificationDataSource + *v0 + 168))();
}

uint64_t sub_1C210239C()
{
  return type metadata accessor for VisualizationModificationDataSource();
}

uint64_t sub_1C21023A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C2149390();
  uint64_t v78 = *(void *)(v4 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v63 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  id v69 = (char *)&v63 - v8;
  sub_1C1F3BE6C();
  uint64_t v77 = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v63 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x1F4188790](v11);
  id v66 = (char *)&v63 - v15;
  MEMORY[0x1F4188790](v14);
  uint64_t v67 = v10;
  uint64_t v68 = (uint64_t)&v63 - v16;
  unint64_t v17 = *(void *)(a1 + 16);
  unint64_t v75 = *(void *)(a2 + 16);
  unint64_t v76 = v17;
  if (v75 >= v17) {
    uint64_t v18 = v17;
  }
  else {
    uint64_t v18 = v75;
  }
  uint64_t v73 = v4;
  uint64_t v74 = a1;
  if (v18)
  {
    sub_1C21041D4(0, &qword_1EA2C31C8, (uint64_t (*)(uint64_t))sub_1C1F3BE6C, MEMORY[0x1E4FBBE00]);
    uint64_t v19 = *(void *)(v10 + 72);
    unint64_t v20 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    uint64_t v64 = *(unsigned __int8 *)(v10 + 80);
    unint64_t v21 = (void *)swift_allocObject();
    uint64_t result = _swift_stdlib_malloc_size(v21);
    if (!v19)
    {
LABEL_60:
      __break(1u);
      goto LABEL_61;
    }
    if (result - v20 == 0x8000000000000000 && v19 == -1) {
      goto LABEL_62;
    }
    uint64_t v24 = 0;
    uint64_t v25 = (uint64_t)(result - v20) / v19;
    void v21[2] = v18;
    v21[3] = 2 * v25;
    uint64_t v65 = v20;
    id v70 = v21;
    uint64_t v26 = (uint64_t)v21 + v20;
    uint64_t v63 = v25 & 0x7FFFFFFFFFFFFFFFLL;
    unint64_t v71 = v78 + 16;
    uint64_t v72 = a2;
    uint64_t v27 = (void (**)(char *, char *, uint64_t))(v78 + 32);
    uint64_t v28 = v73;
    while (v76 != v24)
    {
      uint64_t result = (*(uint64_t (**)(char *, unint64_t, uint64_t))(v78 + 16))(v7, v74+ ((*(unsigned __int8 *)(v78 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v78 + 80))+ *(void *)(v78 + 72) * v24, v28);
      if (v75 == v24) {
        goto LABEL_53;
      }
      uint64_t v29 = v24 + 1;
      sub_1C1F728E8();
      uint64_t v31 = v72
          + ((*(unsigned __int8 *)(*(void *)(v30 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v30 - 8) + 80))
          + *(void *)(*(void *)(v30 - 8) + 72) * v24;
      uint64_t v32 = (uint64_t)&v13[*(int *)(v77 + 48)];
      (*v27)(v13, v7, v28);
      sub_1C21042A0(v31, v32, (uint64_t (*)(void))sub_1C1F728E8);
      uint64_t result = sub_1C2104238((uint64_t)v13, v26, (uint64_t (*)(void))sub_1C1F3BE6C);
      v26 += v19;
      uint64_t v24 = v29;
      if (v18 == v29)
      {
        a1 = v74;
        swift_bridgeObjectRetain();
        a2 = v72;
        uint64_t result = swift_bridgeObjectRetain();
        uint64_t v33 = v64;
        unint64_t v34 = v63 - v29;
        uint64_t v4 = v73;
        goto LABEL_16;
      }
    }
    __break(1u);
LABEL_53:
    __break(1u);
LABEL_54:
    __break(1u);
LABEL_55:
    __break(1u);
LABEL_56:
    __break(1u);
LABEL_57:
    __break(1u);
LABEL_58:
    __break(1u);
LABEL_59:
    __break(1u);
    goto LABEL_60;
  }
  uint64_t v33 = *(unsigned __int8 *)(v10 + 80);
  unint64_t v35 = *(void *)(MEMORY[0x1E4FBC860] + 24);
  uint64_t v65 = (v33 + 32) & ~v33;
  id v70 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v26 = MEMORY[0x1E4FBC860] + v65;
  unint64_t v34 = v35 >> 1;
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRetain();
LABEL_16:
  unint64_t v36 = v76;
  unint64_t v37 = v75;
  if (v76 > v75)
  {
    id v38 = (void (**)(char *, char *, uint64_t))(v78 + 32);
    uint64_t v64 = v33 | 7;
    if (v18 <= (uint64_t)v75) {
      unint64_t v39 = v75;
    }
    else {
      unint64_t v39 = v18;
    }
    unint64_t v71 = v39;
    uint64_t v72 = v78 + 16;
    while (v36 != v18)
    {
      uint64_t result = (*(uint64_t (**)(char *, unint64_t, uint64_t))(v78 + 16))(v69, a1+ ((*(unsigned __int8 *)(v78 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v78 + 80))+ *(void *)(v78 + 72) * v18, v4);
      if (v37 == v18)
      {
        (*(void (**)(char *, uint64_t))(v78 + 8))(v69, v4);
        goto LABEL_47;
      }
      if (v71 == v18) {
        goto LABEL_55;
      }
      sub_1C1F728E8();
      uint64_t v41 = a2
          + ((*(unsigned __int8 *)(*(void *)(v40 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v40 - 8) + 80))
          + *(void *)(*(void *)(v40 - 8) + 72) * v18;
      uint64_t v42 = (uint64_t)v66;
      uint64_t v43 = (uint64_t)&v66[*(int *)(v77 + 48)];
      (*v38)(v66, v69, v4);
      sub_1C21042A0(v41, v43, (uint64_t (*)(void))sub_1C1F728E8);
      uint64_t result = sub_1C2104238(v42, v68, (uint64_t (*)(void))sub_1C1F3BE6C);
      if (v34)
      {
        unint64_t v44 = v70;
        unint64_t v36 = v76;
      }
      else
      {
        unint64_t v45 = v70[3];
        if ((uint64_t)((v45 >> 1) + 0x4000000000000000) < 0) {
          goto LABEL_57;
        }
        uint64_t v46 = a2;
        int64_t v47 = v45 & 0xFFFFFFFFFFFFFFFELL;
        if (v47 <= 1) {
          uint64_t v48 = 1;
        }
        else {
          uint64_t v48 = v47;
        }
        sub_1C21041D4(0, &qword_1EA2C31C8, (uint64_t (*)(uint64_t))sub_1C1F3BE6C, MEMORY[0x1E4FBBE00]);
        uint64_t v49 = *(void *)(v67 + 72);
        uint64_t v50 = v65;
        unint64_t v44 = (void *)swift_allocObject();
        uint64_t result = _swift_stdlib_malloc_size(v44);
        if (!v49) {
          goto LABEL_58;
        }
        uint64_t v51 = result - v50;
        if (result - v50 == 0x8000000000000000 && v49 == -1) {
          goto LABEL_59;
        }
        uint64_t v53 = v51 / v49;
        v44[2] = v48;
        void v44[3] = 2 * (v51 / v49);
        id v54 = (char *)v44 + v50;
        uint64_t v55 = v70[3] >> 1;
        uint64_t v56 = v55 * v49;
        a2 = v46;
        unint64_t v36 = v76;
        if (v70[2])
        {
          id v57 = (char *)v70 + v50;
          id v58 = v70;
          if (v44 < v70 || v54 >= &v57[v56])
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v44 != v70)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          v58[2] = 0;
        }
        uint64_t v26 = (uint64_t)&v54[v56];
        unint64_t v34 = (v53 & 0x7FFFFFFFFFFFFFFFLL) - v55;
        uint64_t result = swift_release();
        uint64_t v4 = v73;
        a1 = v74;
      }
      BOOL v59 = __OFSUB__(v34--, 1);
      unint64_t v37 = v75;
      if (v59) {
        goto LABEL_56;
      }
      ++v18;
      uint64_t result = sub_1C2104238(v68, v26, (uint64_t (*)(void))sub_1C1F3BE6C);
      v26 += *(void *)(v67 + 72);
      id v70 = v44;
      if (v36 == v18) {
        goto LABEL_48;
      }
    }
    goto LABEL_54;
  }
LABEL_47:
  unint64_t v44 = v70;
LABEL_48:
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  unint64_t v60 = v44[3];
  if (v60 < 2) {
    return (uint64_t)v44;
  }
  unint64_t v61 = v60 >> 1;
  BOOL v59 = __OFSUB__(v61, v34);
  unint64_t v62 = v61 - v34;
  if (!v59)
  {
    v44[2] = v62;
    return (uint64_t)v44;
  }
LABEL_61:
  __break(1u);
LABEL_62:
  __break(1u);
  return result;
}

uint64_t sub_1C2102AEC(uint64_t a1, uint64_t a2)
{
  uint64_t v26 = a2;
  sub_1C1F3C674();
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v9 = *(void *)(a1 + 16);
  uint64_t v10 = MEMORY[0x1E4FBC860];
  if (v9)
  {
    v20[1] = v2;
    uint64_t v27 = MEMORY[0x1E4FBC860];
    sub_1C1F705B4(0, v9, 0);
    uint64_t v10 = v27;
    uint64_t v25 = sub_1C2148E60();
    uint64_t v11 = *(void *)(v25 - 8);
    uint64_t v12 = a1 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
    uint64_t v13 = sub_1C1F12718(0, (unint64_t *)&qword_1EA2C4AA0);
    uint64_t v22 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
    uint64_t v23 = v13;
    uint64_t v24 = v11 + 16;
    uint64_t v21 = *(void *)(v11 + 72);
    do
    {
      v22(v8, v12, v25);
      uint64_t v14 = (void *)sub_1C2148E50();
      char v15 = sub_1C214B220();

      v8[*(int *)(v5 + 36)] = v15 & 1;
      uint64_t v16 = &v8[*(int *)(v5 + 40)];
      *(void *)uint64_t v16 = 0x756F72676B636162;
      *((void *)v16 + sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, 0, 1) = 0xEF726F6C6F43646ELL;
      uint64_t v27 = v10;
      unint64_t v18 = *(void *)(v10 + 16);
      unint64_t v17 = *(void *)(v10 + 24);
      if (v18 >= v17 >> 1)
      {
        sub_1C1F705B4(v17 > 1, v18 + 1, 1);
        uint64_t v10 = v27;
      }
      *(void *)(v10 + 16) = v18 + 1;
      sub_1C2104238((uint64_t)v8, v10+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(void *)(v6 + 72) * v18, (uint64_t (*)(void))sub_1C1F3C674);
      v12 += v21;
      --v9;
    }
    while (v9);
  }
  return v10;
}

uint64_t sub_1C2102D5C(uint64_t a1, uint64_t a2)
{
  uint64_t v28 = a2;
  sub_1C1F3C674();
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v9 = *(void *)(a1 + 16);
  uint64_t v10 = MEMORY[0x1E4FBC860];
  if (v9)
  {
    uint64_t v21 = v2;
    uint64_t v29 = MEMORY[0x1E4FBC860];
    sub_1C1F705B4(0, v9, 0);
    uint64_t v10 = v29;
    uint64_t v27 = sub_1C2148E60();
    uint64_t v11 = *(void *)(v27 - 8);
    uint64_t v12 = a1 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
    uint64_t v13 = sub_1C1F12718(0, (unint64_t *)&qword_1EA2C4AA0);
    uint64_t v24 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
    uint64_t v25 = v13;
    uint64_t v26 = v11 + 16;
    uint64_t v14 = *(void *)(v11 + 72);
    unint64_t v22 = 0x80000001C2161550;
    uint64_t v23 = v14;
    do
    {
      v24(v8, v12, v27);
      char v15 = (void *)sub_1C2148E50();
      char v16 = sub_1C214B220();

      v8[*(int *)(v5 + 36)] = v16 & 1;
      unint64_t v17 = &v8[*(int *)(v5 + 40)];
      *(void *)unint64_t v17 = 0xD000000000000011;
      *((void *)v17 + sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, 0, 1) = v22;
      uint64_t v29 = v10;
      unint64_t v19 = *(void *)(v10 + 16);
      unint64_t v18 = *(void *)(v10 + 24);
      if (v19 >= v18 >> 1)
      {
        sub_1C1F705B4(v18 > 1, v19 + 1, 1);
        uint64_t v10 = v29;
      }
      *(void *)(v10 + 16) = v19 + 1;
      sub_1C2104238((uint64_t)v8, v10+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(void *)(v6 + 72) * v19, (uint64_t (*)(void))sub_1C1F3C674);
      v12 += v23;
      --v9;
    }
    while (v9);
  }
  return v10;
}

uint64_t sub_1C2102FC8(uint64_t a1, uint64_t a2)
{
  uint64_t v28 = a2;
  sub_1C1F3C674();
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v9 = *(void *)(a1 + 16);
  uint64_t v10 = MEMORY[0x1E4FBC860];
  if (v9)
  {
    uint64_t v21 = v2;
    uint64_t v29 = MEMORY[0x1E4FBC860];
    sub_1C1F705B4(0, v9, 0);
    uint64_t v10 = v29;
    uint64_t v27 = sub_1C2148E60();
    uint64_t v11 = *(void *)(v27 - 8);
    uint64_t v12 = a1 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
    uint64_t v13 = sub_1C1F12718(0, (unint64_t *)&qword_1EA2C4AA0);
    uint64_t v24 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
    uint64_t v25 = v13;
    uint64_t v26 = v11 + 16;
    uint64_t v14 = *(void *)(v11 + 72);
    unint64_t v22 = 0x80000001C2161570;
    uint64_t v23 = v14;
    do
    {
      v24(v8, v12, v27);
      char v15 = (void *)sub_1C2148E50();
      char v16 = sub_1C214B220();

      v8[*(int *)(v5 + 36)] = v16 & 1;
      unint64_t v17 = &v8[*(int *)(v5 + 40)];
      *(void *)unint64_t v17 = 0xD000000000000012;
      *((void *)v17 + sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, 0, 1) = v22;
      uint64_t v29 = v10;
      unint64_t v19 = *(void *)(v10 + 16);
      unint64_t v18 = *(void *)(v10 + 24);
      if (v19 >= v18 >> 1)
      {
        sub_1C1F705B4(v18 > 1, v19 + 1, 1);
        uint64_t v10 = v29;
      }
      *(void *)(v10 + 16) = v19 + 1;
      sub_1C2104238((uint64_t)v8, v10+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(void *)(v6 + 72) * v19, (uint64_t (*)(void))sub_1C1F3C674);
      v12 += v23;
      --v9;
    }
    while (v9);
  }
  return v10;
}

uint64_t sub_1C2103234(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v36 = a4;
  id v41 = a2;
  id v42 = a3;
  uint64_t v5 = sub_1C2148F60();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  uint64_t v46 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v36 - v10;
  MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v36 - v12;
  uint64_t v14 = *MEMORY[0x1E4F66C00];
  unint64_t v44 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 104);
  v44((char *)&v36 - v12, v14, v5);
  sub_1C2101C18(&qword_1EA2C7248, MEMORY[0x1E4F66C08]);
  uint64_t v45 = a1;
  sub_1C214A750();
  sub_1C214A750();
  if (v49 == v47 && v50 == v48) {
    char v15 = 1;
  }
  else {
    char v15 = sub_1C214BA80();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v43 = *(void (**)(char *, uint64_t))(v6 + 8);
  v43(v13, v5);
  if (v15)
  {
    if (qword_1EBF0CA00 != -1) {
      swift_once();
    }
  }
  else if (qword_1EBF0CA00 != -1)
  {
    swift_once();
  }
  id v16 = (id)qword_1EBF0CA18;
  swift_bridgeObjectRetain();
  uint64_t v17 = sub_1C2147730();
  uint64_t v39 = v18;
  uint64_t v40 = v17;
  swift_bridgeObjectRelease();

  v44(v11, v14, v5);
  sub_1C214A750();
  sub_1C214A750();
  if (v49 == v47 && v50 == v48)
  {
    swift_bridgeObjectRelease_n();
    v43(v11, v5);
  }
  else
  {
    char v19 = sub_1C214BA80();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v43(v11, v5);
    if ((v19 & 1) == 0)
    {
      unint64_t v37 = 0xE000000000000000;
      uint64_t v38 = 0;
      goto LABEL_19;
    }
  }
  if (qword_1EBF0CA00 != -1) {
    swift_once();
  }
  id v20 = (id)qword_1EBF0CA18;
  swift_bridgeObjectRetain();
  uint64_t v21 = sub_1C2147730();
  unint64_t v37 = v22;
  uint64_t v38 = v21;
  swift_bridgeObjectRelease();

LABEL_19:
  uint64_t v23 = sub_1C2148E30();
  id v24 = v41;
  uint64_t v25 = sub_1C2102AEC(v23, (uint64_t)v24);
  swift_bridgeObjectRelease();

  uint64_t v26 = sub_1C2148E20();
  id v27 = v42;
  uint64_t v28 = sub_1C2102D5C(v26, (uint64_t)v27);
  swift_bridgeObjectRelease();

  v44(v46, v14, v5);
  sub_1C214A750();
  sub_1C214A750();
  if (v49 == v47 && v50 == v48)
  {
    swift_bridgeObjectRelease_n();
    v43(v46, v5);
LABEL_23:
    uint64_t v30 = sub_1C2148E20();
    id v31 = v36;
    uint64_t v32 = sub_1C2102FC8(v30, (uint64_t)v31);
    swift_bridgeObjectRelease();

    goto LABEL_25;
  }
  char v29 = sub_1C214BA80();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v43(v46, v5);
  if (v29) {
    goto LABEL_23;
  }
  uint64_t v32 = MEMORY[0x1E4FBC860];
LABEL_25:
  sub_1C21041D4(0, (unint64_t *)&qword_1EA2C2DD0, MEMORY[0x1E4F66468], MEMORY[0x1E4FBBE00]);
  sub_1C2148540();
  uint64_t v33 = swift_allocObject();
  *(_OWORD *)(v33 + 16) = xmmword_1C2150000;
  sub_1C1F37774(v28);
  swift_bridgeObjectRelease();
  sub_1C2148520();
  sub_1C1F37774(v32);
  swift_bridgeObjectRelease();
  sub_1C2148520();
  if (qword_1EBF0CA00 != -1) {
    swift_once();
  }
  id v34 = (id)qword_1EBF0CA18;
  swift_bridgeObjectRetain();
  sub_1C2147730();
  swift_bridgeObjectRelease();

  sub_1C1F37774(v25);
  swift_bridgeObjectRelease();
  sub_1C2148520();
  return v33;
}

uint64_t sub_1C2103A70(uint64_t a1, uint64_t a2)
{
  uint64_t v26 = a2;
  sub_1C1F3C674();
  uint64_t v5 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v8 = *(void *)(a1 + 16);
  uint64_t v9 = MEMORY[0x1E4FBC860];
  if (v8)
  {
    uint64_t v20 = v2;
    uint64_t v30 = MEMORY[0x1E4FBC860];
    sub_1C1F704CC(0, v8, 0);
    uint64_t v9 = v30;
    uint64_t v25 = sub_1C2148E60();
    uint64_t v10 = *(void *)(v25 - 8);
    uint64_t v11 = a1 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
    uint64_t v12 = sub_1C1F12718(0, (unint64_t *)&qword_1EA2C4AA0);
    unint64_t v22 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
    uint64_t v23 = v12;
    uint64_t v24 = v10 + 16;
    uint64_t v21 = *(void *)(v10 + 72);
    do
    {
      v22(v7, v11, v25);
      uint64_t v13 = (void *)sub_1C2148E50();
      char v14 = sub_1C214B220();

      v7[*(int *)(v5 + 36)] = v14 & 1;
      char v15 = &v7[*(int *)(v5 + 40)];
      *(void *)char v15 = 0xD000000000000011;
      *((void *)v15 + sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, 0, 1) = 0x80000001C2161550;
      uint64_t v30 = v9;
      unint64_t v17 = *(void *)(v9 + 16);
      unint64_t v16 = *(void *)(v9 + 24);
      if (v17 >= v16 >> 1)
      {
        sub_1C1F704CC(v16 > 1, v17 + 1, 1);
        uint64_t v9 = v30;
      }
      uint64_t v28 = v5;
      uint64_t v29 = sub_1C2101C18(&qword_1EA2C31F8, (void (*)(uint64_t))sub_1C1F3C674);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v27);
      sub_1C21042A0((uint64_t)v7, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(void))sub_1C1F3C674);
      *(void *)(v9 + 16) = v17 + 1;
      sub_1C1F31280(&v27, v9 + 40 * v17 + 32);
      sub_1C21044E4((uint64_t)v7, (uint64_t (*)(void))sub_1C1F3C674);
      v11 += v21;
      --v8;
    }
    while (v8);
  }
  return v9;
}

uint64_t sub_1C2103D08(uint64_t a1, void (*a2)(uint64_t), uint64_t a3)
{
  char v19 = a2;
  uint64_t v20 = a3;
  sub_1C1F3C674();
  uint64_t v6 = v5;
  MEMORY[0x1F4188790](v5);
  int64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v9 = *(void *)(a1 + 16);
  uint64_t v10 = MEMORY[0x1E4FBC860];
  if (v9)
  {
    uint64_t v18 = v3;
    uint64_t v24 = MEMORY[0x1E4FBC860];
    sub_1C1F704CC(0, v9, 0);
    uint64_t v10 = v24;
    uint64_t v11 = *(void *)(sub_1C2148E60() - 8);
    uint64_t v12 = a1 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
    uint64_t v13 = *(void *)(v11 + 72);
    do
    {
      v19(v12);
      uint64_t v24 = v10;
      unint64_t v15 = *(void *)(v10 + 16);
      unint64_t v14 = *(void *)(v10 + 24);
      if (v15 >= v14 >> 1)
      {
        sub_1C1F704CC(v14 > 1, v15 + 1, 1);
        uint64_t v10 = v24;
      }
      uint64_t v22 = v6;
      uint64_t v23 = sub_1C2101C18(&qword_1EA2C31F8, (void (*)(uint64_t))sub_1C1F3C674);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v21);
      sub_1C21042A0((uint64_t)v8, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(void))sub_1C1F3C674);
      *(void *)(v10 + 16) = v15 + 1;
      sub_1C1F31280(&v21, v10 + 40 * v15 + 32);
      sub_1C21044E4((uint64_t)v8, (uint64_t (*)(void))sub_1C1F3C674);
      v12 += v13;
      --v9;
    }
    while (v9);
  }
  return v10;
}

uint64_t sub_1C2103F28(uint64_t a1, uint64_t a2)
{
  uint64_t v25 = a2;
  sub_1C1F3C674();
  uint64_t v5 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v8 = *(void *)(a1 + 16);
  uint64_t v9 = MEMORY[0x1E4FBC860];
  if (v8)
  {
    v20[1] = v2;
    uint64_t v29 = MEMORY[0x1E4FBC860];
    sub_1C1F704CC(0, v8, 0);
    uint64_t v9 = v29;
    uint64_t v24 = sub_1C2148E60();
    uint64_t v10 = *(void *)(v24 - 8);
    uint64_t v11 = a1 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
    uint64_t v12 = sub_1C1F12718(0, (unint64_t *)&qword_1EA2C4AA0);
    uint64_t v22 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
    uint64_t v23 = v12;
    uint64_t v21 = *(void *)(v10 + 72);
    do
    {
      v22(v7, v11, v24);
      uint64_t v13 = (void *)sub_1C2148E50();
      char v14 = sub_1C214B220();

      v7[*(int *)(v5 + 36)] = v14 & 1;
      unint64_t v15 = &v7[*(int *)(v5 + 40)];
      *(void *)unint64_t v15 = 0x756F72676B636162;
      *((void *)v15 + sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, 0, 1) = 0xEF726F6C6F43646ELL;
      uint64_t v29 = v9;
      unint64_t v17 = *(void *)(v9 + 16);
      unint64_t v16 = *(void *)(v9 + 24);
      if (v17 >= v16 >> 1)
      {
        sub_1C1F704CC(v16 > 1, v17 + 1, 1);
        uint64_t v9 = v29;
      }
      uint64_t v27 = v5;
      uint64_t v28 = sub_1C2101C18(&qword_1EA2C31F8, (void (*)(uint64_t))sub_1C1F3C674);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v26);
      sub_1C21042A0((uint64_t)v7, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(void))sub_1C1F3C674);
      *(void *)(v9 + 16) = v17 + 1;
      sub_1C1F31280(&v26, v9 + 40 * v17 + 32);
      sub_1C21044E4((uint64_t)v7, (uint64_t (*)(void))sub_1C1F3C674);
      v11 += v21;
      --v8;
    }
    while (v8);
  }
  return v9;
}

void sub_1C21041CC(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
}

void sub_1C21041D4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C2104238(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C21042A0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void sub_1C2104308()
{
  if (!qword_1EA2C7250)
  {
    sub_1C21043F8(255);
    sub_1C1FB8E88();
    sub_1C2101C18(&qword_1EA2C7258, sub_1C21043F8);
    sub_1C2101C18(&qword_1EA2C7260, (void (*)(uint64_t))sub_1C1FB8E88);
    unint64_t v0 = sub_1C2149CD0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C7250);
    }
  }
}

void sub_1C21043F8(uint64_t a1)
{
}

void sub_1C2104418()
{
  if (!qword_1EA2C7268)
  {
    sub_1C2104308();
    sub_1C1F12718(255, (unint64_t *)&qword_1EBF0CB10);
    sub_1C2101C18(&qword_1EA2C7270, (void (*)(uint64_t))sub_1C2104308);
    sub_1C1F43FD4();
    unint64_t v0 = sub_1C2149DF0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C7268);
    }
  }
}

uint64_t sub_1C21044E4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C2104544()
{
  swift_weakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C210457C()
{
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1C21045BC(uint64_t a1, void *a2, void *a3, void *a4)
{
  return sub_1C210072C(a1, a2, a3, a4);
}

uint64_t sub_1C21045C8()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C2104600(uint64_t a1)
{
  uint64_t v3 = *(uint64_t (**)(uint64_t, void, void, void))(v1 + 16);
  sub_1C2104658();
  return v3(a1, *(void *)(a1 + v4[12]), *(void *)(a1 + v4[16]), *(void *)(a1 + v4[20]));
}

void sub_1C2104658()
{
  if (!qword_1EA2C7280)
  {
    sub_1C2148F60();
    sub_1C1F12718(255, (unint64_t *)&qword_1EBF0C900);
    unint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
    if (!v1) {
      atomic_store(TupleTypeMetadata, (unint64_t *)&qword_1EA2C7280);
    }
  }
}

void sub_1C21046E8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C2149EA0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1C210474C()
{
  return MEMORY[0x1F4186498](v0, 17, 7);
}

uint64_t sub_1C210475C(uint64_t a1, void *a2)
{
  return sub_1C20FFC60(a1, a2, *(unsigned char *)(v2 + 16));
}

uint64_t sub_1C2104764()
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v2 = sub_1C21497F0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2105D38(0, &qword_1EA2C7298, (void (*)(uint64_t))type metadata accessor for DayPickerItem);
  MEMORY[0x1F4188790](v6 - 8);
  unint64_t v8 = (char *)&v22 - v7;
  uint64_t v9 = type metadata accessor for DayPickerItem();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = v0 + OBJC_IVAR____TtC19HealthMedicationsUI27DayPickerCollectionViewCell_item;
  swift_beginAccess();
  sub_1C2105D8C(v13, (uint64_t)v24, (unint64_t *)&qword_1EBF0C300, (void (*)(uint64_t))sub_1C1F1CB5C);
  if (v24[3])
  {
    sub_1C1F1CB5C();
    int v14 = swift_dynamicCast();
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v8, v14 ^ 1u, 1, v9);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) != 1)
    {
      sub_1C2105C78((uint64_t)v8, (uint64_t)v12);
      sub_1C21051A0((uint64_t)v12);
      return sub_1C2105CDC((uint64_t)v12);
    }
  }
  else
  {
    sub_1C2105C1C((uint64_t)v24, (unint64_t *)&qword_1EBF0C300, (void (*)(uint64_t))sub_1C1F1CB5C);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
  }
  sub_1C2105C1C((uint64_t)v8, &qword_1EA2C7298, (void (*)(uint64_t))type metadata accessor for DayPickerItem);
  sub_1C21497A0();
  unint64_t v16 = sub_1C21497E0();
  os_log_type_t v17 = sub_1C214ABD0();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = (uint8_t *)swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    uint64_t v23 = v19;
    *(_DWORD *)uint64_t v18 = 136446210;
    v24[0] = ObjectType;
    swift_getMetatypeMetadata();
    uint64_t v20 = sub_1C214A610();
    v24[0] = sub_1C1F6FD54(v20, v21, &v23);
    sub_1C214B530();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C1F0B000, v16, v17, "[%{public}s]: Unexpected view model.", v18, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C8754730](v19, -1, -1);
    MEMORY[0x1C8754730](v18, -1, -1);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

void sub_1C2104B68()
{
  sub_1C2105D38(0, &qword_1EA2C7298, (void (*)(uint64_t))type metadata accessor for DayPickerItem);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = &v23[-v2];
  sub_1C2105D38(0, &qword_1EBF0C620, MEMORY[0x1E4FB0F28]);
  uint64_t v5 = MEMORY[0x1F4188790](v4 - 8);
  uint64_t v7 = &v23[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = &v23[-v8];
  uint64_t v10 = sub_1C21499D0();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = &v23[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = (uint64_t)v0 + OBJC_IVAR____TtC19HealthMedicationsUI27DayPickerCollectionViewCell_item;
  swift_beginAccess();
  sub_1C2105D8C(v14, (uint64_t)v24, (unint64_t *)&qword_1EBF0C300, (void (*)(uint64_t))sub_1C1F1CB5C);
  if (!v25)
  {
    sub_1C2105C1C((uint64_t)v24, (unint64_t *)&qword_1EBF0C300, (void (*)(uint64_t))sub_1C1F1CB5C);
    uint64_t v18 = type metadata accessor for DayPickerItem();
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v3, 1, 1, v18);
    goto LABEL_6;
  }
  sub_1C1F1CB5C();
  uint64_t v15 = type metadata accessor for DayPickerItem();
  int v16 = swift_dynamicCast();
  uint64_t v17 = *(void *)(v15 - 8);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v17 + 56))(v3, v16 ^ 1u, 1, v15);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v17 + 48))(v3, 1, v15) == 1)
  {
LABEL_6:
    sub_1C2105C1C((uint64_t)v3, &qword_1EA2C7298, (void (*)(uint64_t))type metadata accessor for DayPickerItem);
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, 1, 1, v10);
    goto LABEL_7;
  }
  sub_1C2105D8C((uint64_t)&v3[*(int *)(v15 + 28)], (uint64_t)v9, &qword_1EBF0C620, MEMORY[0x1E4FB0F28]);
  sub_1C2105CDC((uint64_t)v3);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
LABEL_7:
    sub_1C2105C1C((uint64_t)v9, &qword_1EBF0C620, MEMORY[0x1E4FB0F28]);
    id v19 = objc_msgSend(v0, sel_contentView);
    id v20 = objc_msgSend(self, sel_systemBackgroundColor);
    objc_msgSend(v19, sel_setBackgroundColor_, v20);

    goto LABEL_8;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v11 + 32))(v13, v9, v10);
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v11 + 16))(v7, v13, v10);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v11 + 56))(v7, 0, 1, v10);
  MEMORY[0x1C8752FF0](v7);
  (*(void (**)(unsigned char *, uint64_t))(v11 + 8))(v13, v10);
LABEL_8:
  id v21 = objc_msgSend(v0, sel_contentView);
  objc_msgSend(v21, sel_setPreservesSuperviewLayoutMargins_, 0);

  id v22 = objc_msgSend(v0, sel_contentView);
  objc_msgSend(v22, sel_setLayoutMargins_, *MEMORY[0x1E4FB2848], *(double *)(MEMORY[0x1E4FB2848] + 8), *(double *)(MEMORY[0x1E4FB2848] + 16), *(double *)(MEMORY[0x1E4FB2848] + 24));
}

void sub_1C2105064()
{
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC19HealthMedicationsUI27DayPickerCollectionViewCell_dayPicker];
  if (v1)
  {
    id v2 = v1;
    id v3 = objc_msgSend(v0, sel_contentView);
    id v4 = objc_msgSend(v3, sel_layoutMarginsGuide);

    UIView.alignConstraints(to:)((UILayoutGuide)v4);
    sub_1C214A5F0();
    swift_bridgeObjectRetain();
    sub_1C214A6C0();
    id v5 = v2;
    swift_bridgeObjectRelease();
    id v6 = (id)sub_1C214A5B0();
    swift_bridgeObjectRelease();
    objc_msgSend(v5, sel_setAccessibilityIdentifier_, v6);
  }
}

void sub_1C21051A0(uint64_t a1)
{
  id v2 = v1;
  uint64_t v4 = sub_1C21496A0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v20 - v9;
  uint64_t v11 = type metadata accessor for DayPickerItem();
  uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v12(v10, a1 + *(int *)(v11 + 20), v4);
  v12(v8, a1 + *(int *)(v11 + 24), v4);
  uint64_t v13 = (objc_class *)type metadata accessor for DayPicker();
  uint64_t v14 = (char *)objc_allocWithZone(v13);
  *(void *)&v14[OBJC_IVAR____TtC19HealthMedicationsUI9DayPicker_dayViews] = MEMORY[0x1E4FBC860];
  v12(&v14[OBJC_IVAR____TtC19HealthMedicationsUI9DayPicker_selectedDays], (uint64_t)v10, v4);
  v12(&v14[OBJC_IVAR____TtC19HealthMedicationsUI9DayPicker_disabledDays], (uint64_t)v8, v4);
  v20.receiver = v14;
  v20.super_class = v13;
  id v15 = objc_msgSendSuper2(&v20, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  sub_1C1F95964();
  sub_1C1F95FE0();
  objc_msgSend(v15, sel_setLayoutMargins_, 5.0, 10.0, 5.0, 10.0);
  int v16 = *(void (**)(char *, uint64_t))(v5 + 8);
  v16(v8, v4);
  v16(v10, v4);
  objc_msgSend(v15, sel_addTarget_action_forControlEvents_, v2, sel_selectedDaysDidChange_, 4096);
  id v17 = objc_msgSend(v2, sel_contentView);
  objc_msgSend(v17, sel_addSubview_, v15);

  uint64_t v18 = *(void **)&v2[OBJC_IVAR____TtC19HealthMedicationsUI27DayPickerCollectionViewCell_dayPicker];
  *(void *)&v2[OBJC_IVAR____TtC19HealthMedicationsUI27DayPickerCollectionViewCell_dayPicker] = v15;
  id v19 = v15;
  if (v18)
  {
    objc_msgSend(v18, sel_removeFromSuperview);
  }
  sub_1C2104B68();
  sub_1C2105064();
}

uint64_t sub_1C2105454(uint64_t a1)
{
  uint64_t v3 = sub_1C21496A0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = &v19[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1C2105D38(0, &qword_1EA2C7298, (void (*)(uint64_t))type metadata accessor for DayPickerItem);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = &v19[-v8];
  uint64_t v10 = type metadata accessor for DayPickerItem();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = &v19[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI27DayPickerCollectionViewCell_item;
  swift_beginAccess();
  sub_1C2105D8C(v14, (uint64_t)v20, (unint64_t *)&qword_1EBF0C300, (void (*)(uint64_t))sub_1C1F1CB5C);
  if (v21)
  {
    sub_1C1F1CB5C();
    int v15 = swift_dynamicCast();
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v11 + 56))(v9, v15 ^ 1u, 1, v10);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) != 1)
    {
      sub_1C2105C78((uint64_t)v9, (uint64_t)v13);
      int v16 = *(void (**)(unsigned char *))&v13[*(int *)(v10 + 32)];
      uint64_t v17 = a1 + OBJC_IVAR____TtC19HealthMedicationsUI9DayPicker_selectedDays;
      swift_beginAccess();
      (*(void (**)(unsigned char *, uint64_t, uint64_t))(v4 + 16))(v6, v17, v3);
      swift_retain();
      v16(v6);
      swift_release();
      (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
      return sub_1C2105CDC((uint64_t)v13);
    }
  }
  else
  {
    sub_1C2105C1C((uint64_t)v20, (unint64_t *)&qword_1EBF0C300, (void (*)(uint64_t))sub_1C1F1CB5C);
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, 1, 1, v10);
  }
  return sub_1C2105C1C((uint64_t)v9, &qword_1EA2C7298, (void (*)(uint64_t))type metadata accessor for DayPickerItem);
}

id sub_1C210590C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DayPickerCollectionViewCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for DayPickerCollectionViewCell()
{
  return self;
}

uint64_t sub_1C21059CC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI27DayPickerCollectionViewCell_item;
  swift_beginAccess();
  return sub_1C2105D8C(v3, a1, (unint64_t *)&qword_1EBF0C300, (void (*)(uint64_t))sub_1C1F1CB5C);
}

uint64_t sub_1C2105A3C(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI27DayPickerCollectionViewCell_item;
  swift_beginAccess();
  sub_1C1F32DDC(a1, v3);
  swift_endAccess();
  sub_1C2104764();
  return sub_1C2105C1C(a1, (unint64_t *)&qword_1EBF0C300, (void (*)(uint64_t))sub_1C1F1CB5C);
}

uint64_t (*sub_1C2105AC8(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1C2105B28;
}

uint64_t sub_1C2105B28(uint64_t a1, char a2)
{
  uint64_t result = swift_endAccess();
  if ((a2 & 1) == 0) {
    return sub_1C2104764();
  }
  return result;
}

uint64_t sub_1C2105B5C()
{
  return sub_1C2148480();
}

uint64_t type metadata accessor for DayPickerItem()
{
  uint64_t result = qword_1EA2C72A0;
  if (!qword_1EA2C72A0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C2105C1C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1C2105D38(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1C2105C78(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DayPickerItem();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C2105CDC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DayPickerItem();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1C2105D38(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C214B4F0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1C2105D8C(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_1C2105D38(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

char *sub_1C2105DF8(uint64_t *a1, uint64_t *a2, int *a3)
{
  unint64_t v4 = (char *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v19 = *a2;
    *(void *)unint64_t v4 = *a2;
    unint64_t v4 = (char *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1C21496A0();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    v12(&v4[a3[6]], (char *)a2 + a3[6], v11);
    uint64_t v13 = a3[7];
    uint64_t v14 = &v4[v13];
    int v15 = (char *)a2 + v13;
    uint64_t v16 = sub_1C21499D0();
    uint64_t v17 = *(void *)(v16 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
    {
      sub_1C2105D38(0, &qword_1EBF0C620, MEMORY[0x1E4FB0F28]);
      memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v14, v15, v16);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
    }
    uint64_t v20 = a3[8];
    uint64_t v21 = a3[9];
    id v22 = &v4[v20];
    uint64_t v23 = (uint64_t *)((char *)a2 + v20);
    uint64_t v24 = v23[1];
    *(void *)id v22 = *v23;
    *((void *)v22 + sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, 0, 1) = v24;
    uint64_t v25 = &v4[v21];
    long long v26 = (uint64_t *)((char *)a2 + v21);
    uint64_t v27 = v26[1];
    *(void *)uint64_t v25 = *v26;
    *((void *)v25 + sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, 0, 1) = v27;
    swift_retain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_1C210602C(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = sub_1C21496A0();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v6(v4, v5);
  v6(a1 + a2[6], v5);
  uint64_t v7 = a1 + a2[7];
  uint64_t v8 = sub_1C21499D0();
  uint64_t v9 = *(void *)(v8 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8)) {
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  }
  swift_release();

  return swift_bridgeObjectRelease();
}

char *sub_1C210616C(char *a1, char *a2, int *a3)
{
  uint64_t v6 = *((void *)a2 + 1);
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, 0, 1) = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = &a1[v7];
  uint64_t v9 = &a2[v7];
  uint64_t v10 = sub_1C21496A0();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  v11(&a1[a3[6]], &a2[a3[6]], v10);
  uint64_t v12 = a3[7];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = sub_1C21499D0();
  uint64_t v16 = *(void *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    sub_1C2105D38(0, &qword_1EBF0C620, MEMORY[0x1E4FB0F28]);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  uint64_t v18 = a3[8];
  uint64_t v19 = a3[9];
  uint64_t v20 = &a1[v18];
  uint64_t v21 = &a2[v18];
  uint64_t v22 = *((void *)v21 + 1);
  *(void *)uint64_t v20 = *(void *)v21;
  *((void *)v20 + sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, 0, 1) = v22;
  uint64_t v23 = &a1[v19];
  uint64_t v24 = &a2[v19];
  uint64_t v25 = *((void *)v24 + 1);
  *(void *)uint64_t v23 = *(void *)v24;
  *((void *)v23 + sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, 0, 1) = v25;
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

char *sub_1C2106350(char *a1, char *a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, 0, 1) = *((void *)a2 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_1C21496A0();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24);
  v10(v7, v8, v9);
  v10(&a1[a3[6]], &a2[a3[6]], v9);
  uint64_t v11 = a3[7];
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  uint64_t v14 = sub_1C21499D0();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48);
  LODWORD(v1sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = v16(v12, 1, v14);
  int v17 = v16(v13, 1, v14);
  if (!v10)
  {
    if (!v17)
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 24))(v12, v13, v14);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v15 + 8))(v12, v14);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    sub_1C2105D38(0, &qword_1EBF0C620, MEMORY[0x1E4FB0F28]);
    memcpy(v12, v13, *(void *)(*(void *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v12, v13, v14);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
LABEL_7:
  uint64_t v19 = a3[8];
  uint64_t v20 = &a1[v19];
  uint64_t v21 = &a2[v19];
  uint64_t v22 = *((void *)v21 + 1);
  *(void *)uint64_t v20 = *(void *)v21;
  *((void *)v20 + sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, 0, 1) = v22;
  swift_retain();
  swift_release();
  uint64_t v23 = a3[9];
  uint64_t v24 = &a1[v23];
  uint64_t v25 = &a2[v23];
  *(void *)uint64_t v24 = *(void *)v25;
  *((void *)v24 + sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, 0, 1) = *((void *)v25 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

char *sub_1C21065C0(char *a1, char *a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_1C21496A0();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  v10(&a1[a3[6]], &a2[a3[6]], v9);
  uint64_t v11 = a3[7];
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  uint64_t v14 = sub_1C21499D0();
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    sub_1C2105D38(0, &qword_1EBF0C620, MEMORY[0x1E4FB0F28]);
    memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v12, v13, v14);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  uint64_t v17 = a3[9];
  *(_OWORD *)&a1[a3[8]] = *(_OWORD *)&a2[a3[8]];
  *(_OWORD *)&a1[v17] = *(_OWORD *)&a2[v17];
  return a1;
}

char *sub_1C2106778(char *a1, char *a2, int *a3)
{
  uint64_t v6 = *((void *)a2 + 1);
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, 0, 1) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[5];
  uint64_t v8 = &a1[v7];
  uint64_t v9 = &a2[v7];
  uint64_t v10 = sub_1C21496A0();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40);
  v11(v8, v9, v10);
  v11(&a1[a3[6]], &a2[a3[6]], v10);
  uint64_t v12 = a3[7];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = sub_1C21499D0();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  LODWORD(v1sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, 0, 1) = v17(v13, 1, v15);
  int v18 = v17(v14, 1, v15);
  if (!v11)
  {
    if (!v18)
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 40))(v13, v14, v15);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v16 + 8))(v13, v15);
    goto LABEL_6;
  }
  if (v18)
  {
LABEL_6:
    sub_1C2105D38(0, &qword_1EBF0C620, MEMORY[0x1E4FB0F28]);
    memcpy(v13, v14, *(void *)(*(void *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v13, v14, v15);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
LABEL_7:
  *(_OWORD *)&a1[a3[8]] = *(_OWORD *)&a2[a3[8]];
  swift_release();
  uint64_t v20 = a3[9];
  uint64_t v21 = &a1[v20];
  uint64_t v22 = (uint64_t *)&a2[v20];
  uint64_t v24 = *v22;
  uint64_t v23 = v22[1];
  *(void *)uint64_t v21 = v24;
  *((void *)v21 + sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, 0, 1) = v23;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C21069BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C21069D0);
}

uint64_t sub_1C21069D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1C21496A0();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 20);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      sub_1C2105D38(0, &qword_1EBF0C620, MEMORY[0x1E4FB0F28]);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 28);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_1C2106B18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C2106B2C);
}

uint64_t sub_1C2106B2C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = sub_1C21496A0();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 20);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      sub_1C2105D38(0, &qword_1EBF0C620, MEMORY[0x1E4FB0F28]);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 28);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

void sub_1C2106C74()
{
  sub_1C21496A0();
  if (v0 <= 0x3F)
  {
    sub_1C2105D38(319, &qword_1EBF0C620, MEMORY[0x1E4FB0F28]);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

id sub_1C2106F18()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MedicationsHistoryViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for MedicationsHistoryViewController()
{
  return self;
}

uint64_t sub_1C2106F70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v41 = a8;
  uint64_t v18 = sub_1C2147B20();
  uint64_t v39 = *(void *)(v18 - 8);
  uint64_t v40 = v18;
  MEMORY[0x1F4188790](v18);
  unint64_t v37 = (char *)v35 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(v10 + qword_1EA2C72Bsub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = a1;
  uint64_t v43 = a2;
  sub_1C1F236D8(a2, v10 + qword_1EA2C72B8);
  uint64_t v20 = (uint64_t *)(v10 + qword_1EA2C72C0);
  uint64_t v36 = a3;
  *uint64_t v20 = a3;
  v20[1] = a4;
  uint64_t v44 = a5;
  sub_1C1F236D8(a5, v10 + qword_1EA2C72C8);
  *(void *)(v10 + qword_1EA2C72Dsub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = a6;
  uint64_t v21 = (uint64_t *)(v10 + qword_1EA2C72D8);
  uint64_t v38 = a7;
  *uint64_t v21 = a7;
  uint64_t v22 = v41;
  v21[1] = v41;
  sub_1C1F236D8(a9, v10 + qword_1EA2C72E0);
  *(void *)(v10 + qword_1EA2C72E8) = a10;
  swift_beginAccess();
  unint64_t v23 = *(void *)(a1 + 16);
  uint64_t v42 = a1;
  if (!(v23 >> 62))
  {
    uint64_t v24 = *(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t result = swift_bridgeObjectRetain();
    if (v24) {
      goto LABEL_3;
    }
LABEL_8:
    swift_bridgeObjectRelease();
    __break(1u);
    goto LABEL_9;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t result = sub_1C214B930();
  if (!result) {
    goto LABEL_8;
  }
LABEL_3:
  v35[1] = v10;
  if ((v23 & 0xC000000000000001) != 0)
  {
LABEL_9:
    id v26 = (id)MEMORY[0x1C8753960](0, v23);
    goto LABEL_6;
  }
  if (*(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v26 = *(id *)(v23 + 32);
LABEL_6:
    uint64_t v27 = v26;
    swift_bridgeObjectRelease();
    v35[0] = a9;
    uint64_t v28 = sub_1C2107B94(v27, v43, v36, a4, v44, a6, v38, v22, a9, a10);

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v41 = sub_1C2107E0C(v42);
    sub_1C1F65B7C();
    sub_1C2148540();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1C214FCC0;
    sub_1C1F5FE64(0, (unint64_t *)&qword_1EBF0C958, (unint64_t *)&qword_1EBF0C2F0);
    uint64_t v29 = swift_allocObject();
    *(_OWORD *)(v29 + 16) = xmmword_1C214FCD0;
    sub_1C1FFF5D0();
    *(void *)(v29 + 56) = v30;
    *(void *)(v29 + 64) = sub_1C2108308(&qword_1EA2C7310, (void (*)(uint64_t))sub_1C1FFF5D0);
    uint64_t v38 = v28;
    *(void *)(v29 + 32) = v28;
    swift_retain();
    id v31 = v37;
    sub_1C2147B10();
    sub_1C2147AD0();
    uint64_t v32 = v40;
    uint64_t v33 = *(void (**)(char *, uint64_t))(v39 + 8);
    v33(v31, v40);
    sub_1C2148520();
    sub_1C2147B10();
    sub_1C2147AD0();
    v33(v31, v32);
    sub_1C2148520();
    uint64_t v34 = sub_1C2147F50();
    swift_release();
    swift_release();
    __swift_destroy_boxed_opaque_existential_0(v35[0]);
    __swift_destroy_boxed_opaque_existential_0(v44);
    __swift_destroy_boxed_opaque_existential_0(v43);
    return v34;
  }
  __break(1u);
  return result;
}

void InteractionDetailDataSource.__allocating_init(arrangedSections:isHidden:)()
{
}

void InteractionDetailDataSource.init(arrangedSections:isHidden:)()
{
}

uint64_t sub_1C210749C()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_0(v0 + qword_1EA2C72B8);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(v0 + qword_1EA2C72C8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(v0 + qword_1EA2C72E0);

  return swift_bridgeObjectRelease();
}

uint64_t InteractionDetailDataSource.deinit()
{
  uint64_t v0 = _s19HealthMedicationsUI34InteractionSeperatorLineDataSourceCfd_0();
  swift_release();
  __swift_destroy_boxed_opaque_existential_0(v0 + qword_1EA2C72B8);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(v0 + qword_1EA2C72C8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(v0 + qword_1EA2C72E0);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t InteractionDetailDataSource.__deallocating_deinit()
{
  InteractionDetailDataSource.deinit();

  return swift_deallocClassInstance();
}

uint64_t sub_1C2107624()
{
  return sub_1C2148B80();
}

Swift::Void __swiftcall InteractionDetailDataSource.registerCells(for:)(UICollectionView *a1)
{
}

uint64_t sub_1C2107758()
{
  return sub_1C214ACD0();
}

uint64_t InteractionDetailDataSource.supplementaryItem(ofKind:at:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = sub_1C2147B20();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (sub_1C214A5F0() == a1 && v10 == a2)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v12 = sub_1C214BA80();
    swift_bridgeObjectRelease();
    if ((v12 & 1) == 0)
    {
      a3[3] = sub_1C2148220();
      a3[4] = sub_1C2108308(&qword_1EA2C2D28, MEMORY[0x1E4F66330]);
      __swift_allocate_boxed_opaque_existential_1(a3);
      return sub_1C2148210();
    }
  }
  if (qword_1EBF0CA00 != -1) {
    swift_once();
  }
  uint64_t v14 = (void *)qword_1EBF0CA18;
  sub_1C1F5FE64(0, qword_1EBF0B8A0, (unint64_t *)&qword_1EBF0C9F0);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1C214FCD0;
  uint64_t v16 = MEMORY[0x1E4FBB5C8];
  *(void *)(v15 + 56) = MEMORY[0x1E4FBB550];
  *(void *)(v15 + 64) = v16;
  *(void *)(v15 + 32) = 1;
  id v17 = v14;
  swift_bridgeObjectRetain();
  sub_1C2147730();
  sub_1C214A5C0();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v18[0] = 0x74497265746F6F46;
  v18[1] = 0xEB000000005F6D65;
  sub_1C2147B10();
  sub_1C2147AD0();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  a3[3] = sub_1C2148960();
  a3[4] = sub_1C2108308(&qword_1EA2C2D38, MEMORY[0x1E4F665E8]);
  __swift_allocate_boxed_opaque_existential_1(a3);
  return sub_1C2148950();
}

uint64_t sub_1C2107B7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return InteractionDetailDataSource.supplementaryItem(ofKind:at:)(a1, a2, a3);
}

uint64_t sub_1C2107B94(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  id v17 = objc_msgSend(a1, sel_educationContent);
  id v18 = v17;
  if (!v17) {
    goto LABEL_5;
  }
  id v19 = objc_msgSend(v17, sel_primarySection);

  if (!v19)
  {
    id v18 = 0;
    goto LABEL_7;
  }
  id v18 = objc_msgSend(v19, sel_attributions);

  if (v18)
  {
    sub_1C214A780();

    id v19 = (id)sub_1C214A7C0();
    id v18 = v20;
    swift_bridgeObjectRelease();
  }
  else
  {
LABEL_5:
    id v19 = 0;
  }
LABEL_7:
  sub_1C1F236D8(a2, (uint64_t)v33);
  sub_1C1F236D8(a5, (uint64_t)v34);
  sub_1C1F236D8(a9, (uint64_t)v35);
  swift_bridgeObjectRetain();
  id v21 = a1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v22 = sub_1C1FF3838();
  id v32 = v21;
  uint64_t v33[5] = a3;
  v33[6] = a4;
  v34[5] = a6;
  v34[6] = a7;
  v34[7] = a8;
  v35[5] = a10;
  v35[6] = v22;
  v35[7] = v23;
  v35[8] = v19;
  v35[9] = v18;
  uint64_t v30 = &type metadata for InteractionResultDetailDataProvider;
  id v31 = &protocol witness table for InteractionResultDetailDataProvider;
  *(void *)&long long v29 = swift_allocObject();
  sub_1C1F412E4((uint64_t)&v32, v29 + 16);
  sub_1C1FFF5D0();
  uint64_t v24 = swift_allocObject();
  sub_1C2147B10();
  uint64_t v25 = (uint64_t *)(v24 + qword_1EA2C7FB0);
  type metadata accessor for InteractionResultDetailCell();
  sub_1C2108308((unint64_t *)&qword_1EA2C5188, (void (*)(uint64_t))type metadata accessor for InteractionResultDetailCell);
  *uint64_t v25 = sub_1C21481D0();
  v25[1] = v26;
  sub_1C1F31280(&v29, v24 + *(void *)(*(void *)v24 + 120));
  sub_1C2059188((uint64_t)&v32);
  return v24;
}

uint64_t sub_1C2107E0C(uint64_t a1)
{
  swift_beginAccess();
  unint64_t v2 = *(void *)(a1 + 16);
  if (!(v2 >> 62))
  {
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v3) {
      goto LABEL_3;
    }
LABEL_13:
    swift_bridgeObjectRelease();
    return MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_1C214B930();
  if (!v3) {
    goto LABEL_13;
  }
LABEL_3:
  uint64_t v28 = MEMORY[0x1E4FBC860];
  uint64_t result = sub_1C1F704CC(0, v3 & ~(v3 >> 63), 0);
  if ((v3 & 0x8000000000000000) == 0)
  {
    uint64_t v5 = v28;
    type metadata accessor for InteractionResultDetailEducationCell();
    uint64_t v6 = 0;
    unint64_t v24 = v2 & 0xC000000000000001;
    unint64_t v7 = v2;
    do
    {
      if (v24) {
        id v8 = (id)MEMORY[0x1C8753960](v6, v2);
      }
      else {
        id v8 = *(id *)(v2 + 8 * v6 + 32);
      }
      uint64_t v9 = v8;
      sub_1C21084B8();
      uint64_t v11 = v10;
      uint64_t v12 = swift_allocObject();
      id v13 = v9;
      sub_1C2147B10();
      uint64_t v14 = (uint64_t *)(v12 + qword_1EA2C7FB0);
      sub_1C2108308(&qword_1EA2C72F0, (void (*)(uint64_t))type metadata accessor for InteractionResultDetailEducationCell);
      *uint64_t v14 = sub_1C21481D0();
      v14[1] = v15;
      *(void *)(v12 + *(void *)(*(void *)v12 + 120)) = v13;
      uint64_t v26 = v11;
      uint64_t v27 = sub_1C2108308(&qword_1EA2C7320, (void (*)(uint64_t))sub_1C21084B8);

      v25[0] = v12;
      uint64_t v28 = v5;
      unint64_t v17 = *(void *)(v5 + 16);
      unint64_t v16 = *(void *)(v5 + 24);
      if (v17 >= v16 >> 1) {
        sub_1C1F704CC(v16 > 1, v17 + 1, 1);
      }
      ++v6;
      uint64_t v18 = v26;
      uint64_t v19 = v27;
      uint64_t v20 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v25, v26);
      MEMORY[0x1F4188790](v20);
      uint64_t v22 = (char *)&v25[-1] - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v23 + 16))(v22);
      sub_1C20A09B8(v17, (uint64_t)v22, &v28, v18, v19);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v25);
      uint64_t v5 = v28;
      unint64_t v2 = v7;
    }
    while (v3 != v6);
    swift_bridgeObjectRelease();
    return v5;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C2108134(uint64_t a1)
{
  uint64_t v2 = sub_1C2148710();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  uint64_t v6 = &v15[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v4);
  id v8 = &v15[-v7];
  sub_1C2148690();
  if (a1)
  {
    sub_1C2148650();
    uint64_t v9 = *(void (**)(unsigned char *, uint64_t))(v3 + 8);
    v9(v6, v2);
    sub_1C21486B0();
    uint64_t v10 = sub_1C2148700();
    v9(v8, v2);
  }
  else
  {
    uint64_t v11 = (void (*)(unsigned char *, void))sub_1C21486D0();
    *uint64_t v12 = 0x4034000000000000;
    v11(v15, 0);
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v3 + 16))(v6, v8, v2);
    uint64_t v10 = sub_1C2148700();
    id v13 = *(void (**)(unsigned char *, uint64_t))(v3 + 8);
    v13(v6, v2);
    v13(v8, v2);
  }
  return v10;
}

uint64_t sub_1C2108308(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C2108350()
{
  return sub_1C2108308(&qword_1EA2C72F8, (void (*)(uint64_t))type metadata accessor for InteractionDetailDataSource);
}

uint64_t type metadata accessor for InteractionDetailDataSource()
{
  uint64_t result = qword_1EA2C7300;
  if (!qword_1EA2C7300) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C21083E4()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for InteractionDetailDataSource(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for InteractionDetailDataSource);
}

uint64_t dispatch thunk of InteractionDetailDataSource.layout(for:environment:)()
{
  return (*(uint64_t (**)(void))(class metadata base offset for InteractionDetailDataSource + *v0 + 72))();
}

uint64_t sub_1C21084B0()
{
  return type metadata accessor for InteractionDetailDataSource();
}

void sub_1C21084B8()
{
  if (!qword_1EA2C7318)
  {
    type metadata accessor for InteractionResultDetailEducationCell();
    sub_1C2108564();
    sub_1C2108308(&qword_1EA2C72F0, (void (*)(uint64_t))type metadata accessor for InteractionResultDetailEducationCell);
    unint64_t v0 = type metadata accessor for InteractionResultItem();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C7318);
    }
  }
}

unint64_t sub_1C2108564()
{
  unint64_t result = qword_1EBF0C880;
  if (!qword_1EBF0C880)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBF0C880);
  }
  return result;
}

uint64_t sub_1C21085A4()
{
  __swift_destroy_boxed_opaque_existential_0(v0 + 24);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(v0 + 80);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(v0 + 144);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 224, 7);
}

id MedicationsDayHistoryDataSource.healthStore.getter()
{
  return *(id *)(v0 + qword_1EA2C7328);
}

uint64_t MedicationsDayHistoryDataSource.__allocating_init(doseEventPublisher:healthStore:)(uint64_t a1, void *a2)
{
  return MedicationsDayHistoryDataSource.init(doseEventPublisher:healthStore:)(a1, a2);
}

uint64_t MedicationsDayHistoryDataSource.init(doseEventPublisher:healthStore:)(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v21 = a1;
  sub_1C2108C6C(0, &qword_1EBF0C7E8, MEMORY[0x1E4FBCC28], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v21 - v6;
  sub_1C2108AE8();
  uint64_t v23 = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1C2147B20();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(v3 + qword_1EA2C7348) = 0;
  *(void *)(v3 + qword_1EA2C7328) = a2;
  v25[0] = 0;
  v25[1] = 0xE000000000000000;
  id v22 = a2;
  sub_1C214B7C0();
  swift_bridgeObjectRelease();
  strcpy((char *)v25, "MutableArray<");
  HIWORD(v25[1]) = -4864;
  sub_1C2147B10();
  sub_1C2147AD0();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  sub_1C214A6C0();
  uint64_t v16 = sub_1C2148590();
  v25[0] = v21;
  sub_1C1FC0A6C();
  swift_retain();
  id v24 = (id)sub_1C214AD80();
  uint64_t v17 = sub_1C214AD20();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v7, 1, 1, v17);
  sub_1C2108BD4();
  sub_1C2109124(&qword_1EA2C7340, (void (*)(uint64_t))sub_1C2108BD4);
  sub_1C2109124((unint64_t *)&qword_1EBF0C7F0, (void (*)(uint64_t))sub_1C1FC0A6C);
  sub_1C214A0A0();
  sub_1C1F441C8((uint64_t)v7);

  swift_allocObject();
  swift_weakInit();
  sub_1C2109124(&qword_1EA2C7350, (void (*)(uint64_t))sub_1C2108AE8);
  uint64_t v18 = v23;
  uint64_t v19 = sub_1C214A0F0();
  swift_release();

  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v18);
  *(void *)(v16 + qword_1EA2C7348) = v19;
  swift_release();
  return v16;
}

void sub_1C2108AE8()
{
  if (!qword_1EA2C7330)
  {
    sub_1C2108BD4();
    sub_1C1FC0A6C();
    sub_1C2109124(&qword_1EA2C7340, (void (*)(uint64_t))sub_1C2108BD4);
    sub_1C2109124((unint64_t *)&qword_1EBF0C7F0, (void (*)(uint64_t))sub_1C1FC0A6C);
    unint64_t v0 = sub_1C2149DF0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C7330);
    }
  }
}

void sub_1C2108BD4()
{
  if (!qword_1EA2C7338)
  {
    sub_1C2108C6C(255, &qword_1EA2C4F30, (uint64_t (*)(uint64_t))sub_1C20F372C, MEMORY[0x1E4FBB320]);
    unint64_t v0 = sub_1C2149E10();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C7338);
    }
  }
}

void sub_1C2108C6C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C2108CD0()
{
  swift_weakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C2108D08(uint64_t *a1)
{
  uint64_t v1 = *a1;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1C20F2AE8(v1);
    sub_1C21485C0();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C2108D84(uint64_t *a1)
{
  return sub_1C2108D08(a1);
}

uint64_t sub_1C2108D8C()
{
  return sub_1C214ACC0();
}

uint64_t sub_1C2108E9C()
{
  uint64_t v0 = sub_1C2148710();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2148690();
  id v4 = objc_msgSend(self, sel_systemBackgroundColor);
  sub_1C21486A0();
  uint64_t v5 = sub_1C2148700();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v5;
}

void MedicationsDayHistoryDataSource.__allocating_init(arrangedSections:identifier:)()
{
}

void MedicationsDayHistoryDataSource.init(arrangedSections:identifier:)()
{
}

void sub_1C2108FF4()
{
  swift_release();
  uint64_t v1 = *(void **)(v0 + qword_1EA2C7328);
}

uint64_t MedicationsDayHistoryDataSource.deinit()
{
  uint64_t v0 = sub_1C2148610();
  swift_release();

  return v0;
}

uint64_t MedicationsDayHistoryDataSource.__deallocating_deinit()
{
  uint64_t v0 = sub_1C2148610();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_1C21090DC()
{
  return sub_1C2109124(&qword_1EA2C7360, (void (*)(uint64_t))type metadata accessor for MedicationsDayHistoryDataSource);
}

uint64_t sub_1C2109124(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for MedicationsDayHistoryDataSource()
{
  uint64_t result = qword_1EA2C7368;
  if (!qword_1EA2C7368) {
    return swift_getSingletonMetadata();
  }
  return result;
}

id sub_1C21091B8()
{
  return *(id *)(v0 + qword_1EA2C7328);
}

uint64_t sub_1C21091C8()
{
  return sub_1C2148B80();
}

uint64_t sub_1C2109224()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for MedicationsDayHistoryDataSource(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MedicationsDayHistoryDataSource);
}

uint64_t dispatch thunk of MedicationsDayHistoryDataSource.context.getter()
{
  return (*(uint64_t (**)(void))(class metadata base offset for MedicationsDayHistoryDataSource + *v0 + 40))();
}

uint64_t dispatch thunk of MedicationsDayHistoryDataSource.__allocating_init(doseEventPublisher:healthStore:)()
{
  return (*(uint64_t (**)(void))(class metadata base offset for MedicationsDayHistoryDataSource + v0 + 48))();
}

uint64_t dispatch thunk of MedicationsDayHistoryDataSource.registerCells(for:)()
{
  return (*(uint64_t (**)(void))(class metadata base offset for MedicationsDayHistoryDataSource + *v0 + 56))();
}

uint64_t dispatch thunk of MedicationsDayHistoryDataSource.layout(for:environment:)()
{
  return (*(uint64_t (**)(void))(class metadata base offset for MedicationsDayHistoryDataSource + *v0 + 64))();
}

uint64_t sub_1C2109370()
{
  return type metadata accessor for MedicationsDayHistoryDataSource();
}

double sub_1C2109378()
{
  double result = 13.0;
  xmmword_1EA2C8320 = xmmword_1C215BEA0;
  *(_OWORD *)&qword_1EA2C8330 = xmmword_1C215BEB0;
  return result;
}

void sub_1C2109398()
{
  qword_1EA2C8340 = 0x4020000000000000;
}

void sub_1C21093A8()
{
  qword_1EA2C8348 = 0x4032000000000000;
}

uint64_t sub_1C21093B8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI26InteractionSummaryItemCell_item;
  swift_beginAccess();
  return sub_1C1F1CC94(v3, a1, (unint64_t *)&qword_1EBF0C300, (void (*)(uint64_t))sub_1C1F1CB5C);
}

uint64_t sub_1C2109428(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = (uint64_t)v1 + OBJC_IVAR____TtC19HealthMedicationsUI26InteractionSummaryItemCell_item;
  swift_beginAccess();
  sub_1C1F32DDC(a1, v4);
  swift_endAccess();
  sub_1C210A67C();
  sub_1C214A5F0();
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  uint64_t v5 = (void *)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setAccessibilityIdentifier_, v5);

  return sub_1C1F1CD00(a1, (unint64_t *)&qword_1EBF0C300, (void (*)(uint64_t))sub_1C1F1CB5C);
}

void (*sub_1C2109534(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1C2109594;
}

void sub_1C2109594(uint64_t a1, char a2)
{
  swift_endAccess();
  if ((a2 & 1) == 0)
  {
    uint64_t v4 = *(void **)(a1 + 24);
    sub_1C210A67C();
    sub_1C214A5F0();
    swift_bridgeObjectRetain();
    sub_1C214A6C0();
    swift_bridgeObjectRelease();
    id v5 = (id)sub_1C214A5B0();
    swift_bridgeObjectRelease();
    objc_msgSend(v4, sel_setAccessibilityIdentifier_, v5);
  }
}

id sub_1C2109678()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
  if (qword_1EBF0CA00 != -1) {
    swift_once();
  }
  id v1 = (id)qword_1EBF0CA18;
  swift_bridgeObjectRetain();
  sub_1C2147730();
  swift_bridgeObjectRelease();

  uint64_t v2 = (void *)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_setText_, v2, 0xE000000000000000);

  id v3 = objc_msgSend(self, sel_systemCyanColor);
  objc_msgSend(v0, sel_setTextColor_, v3);

  id v4 = objc_msgSend(self, sel__preferredFontForTextStyle_variant_, *MEMORY[0x1E4FB2950], 1024);
  objc_msgSend(v0, sel_setFont_, v4);

  objc_msgSend(v0, sel_setNumberOfLines_, 0);
  objc_msgSend(v0, sel_setLineBreakMode_, 0);
  objc_msgSend(v0, sel_setAdjustsFontForContentSizeCategory_, 1);
  LODWORD(v5) = 1148846080;
  objc_msgSend(v0, sel_setContentHuggingPriority_forAxis_, 1, v5);
  sub_1C214A5F0();
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  id v6 = v0;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  uint64_t v7 = (void *)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  objc_msgSend(v6, sel_setAccessibilityIdentifier_, v7);

  objc_msgSend(v6, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  return v6;
}

id sub_1C2109948()
{
  uint64_t v1 = OBJC_IVAR____TtC19HealthMedicationsUI26InteractionSummaryItemCell____lazy_storage___subtitleView;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI26InteractionSummaryItemCell____lazy_storage___subtitleView);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI26InteractionSummaryItemCell____lazy_storage___subtitleView);
  }
  else
  {
    id v4 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for InteractionSummaryContentView()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
    double v5 = *(void **)(v0 + v1);
    *(void *)(v0 + vsub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, 0, 1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_1C21099CC(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = &v4[OBJC_IVAR____TtC19HealthMedicationsUI26InteractionSummaryItemCell_item];
  *(_OWORD *)uint64_t v9 = 0u;
  *((_OWORD *)v9 + sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, 0, 1) = 0u;
  *((void *)v9 + 4) = 0;
  uint64_t v10 = OBJC_IVAR____TtC19HealthMedicationsUI26InteractionSummaryItemCell_titleLabel;
  uint64_t v11 = v4;
  *(void *)&v4[v10] = sub_1C2109678();
  uint64_t v12 = OBJC_IVAR____TtC19HealthMedicationsUI26InteractionSummaryItemCell_chevronView;
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8F0);
  *(void *)&v11[v12] = MEMORY[0x1C8753230]();
  *(void *)&v11[OBJC_IVAR____TtC19HealthMedicationsUI26InteractionSummaryItemCell____lazy_storage___subtitleView] = 0;

  v15.receiver = v11;
  v15.super_class = (Class)type metadata accessor for InteractionSummaryItemCell();
  id v13 = objc_msgSendSuper2(&v15, sel_initWithFrame_, a1, a2, a3, a4);
  sub_1C2109C28();

  return v13;
}

id sub_1C2109AE4(void *a1)
{
  id v3 = &v1[OBJC_IVAR____TtC19HealthMedicationsUI26InteractionSummaryItemCell_item];
  *(_OWORD *)id v3 = 0u;
  *((_OWORD *)v3 + sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, 0, 1) = 0u;
  *((void *)v3 + 4) = 0;
  uint64_t v4 = OBJC_IVAR____TtC19HealthMedicationsUI26InteractionSummaryItemCell_titleLabel;
  double v5 = v1;
  *(void *)&v1[v4] = sub_1C2109678();
  uint64_t v6 = OBJC_IVAR____TtC19HealthMedicationsUI26InteractionSummaryItemCell_chevronView;
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8F0);
  *(void *)&v5[v6] = MEMORY[0x1C8753230]();
  *(void *)&v5[OBJC_IVAR____TtC19HealthMedicationsUI26InteractionSummaryItemCell____lazy_storage___subtitleView] = 0;

  v9.receiver = v5;
  v9.super_class = (Class)type metadata accessor for InteractionSummaryItemCell();
  id v7 = objc_msgSendSuper2(&v9, sel_initWithCoder_, a1);

  return v7;
}

void sub_1C2109C28()
{
  id v1 = objc_msgSend(v0, sel_contentView);
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC19HealthMedicationsUI26InteractionSummaryItemCell_titleLabel];
  objc_msgSend(v1, sel_addSubview_, v2);

  id v3 = objc_msgSend(v0, sel_contentView);
  uint64_t v4 = *(void **)&v0[OBJC_IVAR____TtC19HealthMedicationsUI26InteractionSummaryItemCell_chevronView];
  objc_msgSend(v3, sel_addSubview_, v4);

  id v5 = objc_msgSend(v0, sel_contentView);
  id v6 = sub_1C2109948();
  objc_msgSend(v5, sel_addSubview_, v6);

  uint64_t v49 = self;
  sub_1C1F0ED28();
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1C21594A0;
  id v8 = objc_msgSend(v2, sel_leadingAnchor);
  id v9 = objc_msgSend(v0, sel_contentView);
  id v10 = objc_msgSend(v9, sel_layoutMarginsGuide);

  id v11 = objc_msgSend(v10, sel_leadingAnchor);
  id v12 = objc_msgSend(v8, sel_constraintEqualToAnchor_, v11);

  *(void *)(v7 + 32) = v12;
  id v13 = objc_msgSend(v2, sel_topAnchor);
  id v14 = objc_msgSend(v0, sel_contentView);
  id v15 = objc_msgSend(v14, sel_topAnchor);

  if (qword_1EA2C2740 != -1) {
    swift_once();
  }
  id v16 = objc_msgSend(v13, sel_constraintEqualToAnchor_constant_, v15, *(double *)&xmmword_1EA2C8320);

  *(void *)(v7 + 4sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = v16;
  id v17 = objc_msgSend(v4, sel_leadingAnchor);
  id v18 = objc_msgSend(v2, sel_trailingAnchor);
  if (qword_1EA2C2748 != -1) {
    swift_once();
  }
  id v19 = objc_msgSend(v17, sel_constraintGreaterThanOrEqualToAnchor_constant_, v18, *(double *)&qword_1EA2C8340);

  *(void *)(v7 + 48) = v19;
  id v20 = objc_msgSend(v4, sel_trailingAnchor);
  id v21 = objc_msgSend(v0, sel_contentView);
  id v22 = objc_msgSend(v21, sel_layoutMarginsGuide);

  id v23 = objc_msgSend(v22, sel_trailingAnchor);
  id v24 = objc_msgSend(v20, sel_constraintEqualToAnchor_, v23);

  *(void *)(v7 + 56) = v24;
  id v25 = objc_msgSend(v4, sel_centerYAnchor);
  id v26 = objc_msgSend(v2, sel_centerYAnchor);
  id v27 = objc_msgSend(v25, sel_constraintEqualToAnchor_, v26);

  *(void *)(v7 + 64) = v27;
  id v28 = sub_1C2109948();
  id v29 = objc_msgSend(v28, sel_leadingAnchor);

  id v30 = objc_msgSend(v0, (SEL)&selRef_setContentHuggingPriority_forAxis_);
  id v31 = objc_msgSend(v30, (SEL)&selRef_didTapDoneWithSender_ + 1);

  id v32 = objc_msgSend(v31, sel_leadingAnchor);
  id v33 = objc_msgSend(v29, sel_constraintEqualToAnchor_, v32);

  *(void *)(v7 + 72) = v33;
  id v34 = sub_1C2109948();
  id v35 = objc_msgSend(v34, sel_topAnchor);

  id v36 = objc_msgSend(v2, sel_lastBaselineAnchor);
  if (qword_1EA2C2750 != -1) {
    swift_once();
  }
  id v37 = objc_msgSend(v35, sel_constraintEqualToAnchor_constant_, v36, *(double *)&qword_1EA2C8348);

  *(void *)(v7 + 8sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = v37;
  id v38 = sub_1C2109948();
  id v39 = objc_msgSend(v38, sel_trailingAnchor);

  id v40 = objc_msgSend(v0, (SEL)&selRef_setContentHuggingPriority_forAxis_);
  id v41 = objc_msgSend(v40, (SEL)&selRef_didTapDoneWithSender_ + 1);

  id v42 = objc_msgSend(v41, sel_trailingAnchor);
  id v43 = objc_msgSend(v39, sel_constraintEqualToAnchor_, v42);

  *(void *)(v7 + 88) = v43;
  id v44 = sub_1C2109948();
  id v45 = objc_msgSend(v44, sel_bottomAnchor);

  id v46 = objc_msgSend(v0, (SEL)&selRef_setContentHuggingPriority_forAxis_);
  id v47 = objc_msgSend(v46, sel_bottomAnchor);

  id v48 = objc_msgSend(v45, sel_constraintEqualToAnchor_constant_, v47, -*(double *)&qword_1EA2C8330);
  *(void *)(v7 + 96) = v48;
  sub_1C214A7A0();
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C810);
  id v50 = (id)sub_1C214A770();
  swift_bridgeObjectRelease();
  objc_msgSend(v49, sel_activateConstraints_, v50);
}

uint64_t sub_1C210A2E8()
{
  id v1 = v0;
  sub_1C1F1CC40(0, &qword_1EBF0C620, MEMORY[0x1E4FB0F28]);
  uint64_t v3 = MEMORY[0x1F4188790](v2 - 8);
  id v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x1F4188790](v3);
  id v8 = (char *)&v20 - v7;
  MEMORY[0x1F4188790](v6);
  id v10 = (char *)&v20 - v9;
  id v11 = (void *)sub_1C2149950();
  id v12 = (objc_class *)type metadata accessor for InteractionSummaryItemCell();
  v20.receiver = v1;
  v20.super_class = v12;
  objc_msgSendSuper2(&v20, sel__bridgedUpdateConfigurationUsingState_, v11);

  if (objc_msgSend(v1, sel_isHighlighted))
  {
    MEMORY[0x1C8752FE0]();
    uint64_t v13 = sub_1C21499D0();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48))(v10, 1, v13))
    {
      id v14 = (void (*)(uint64_t))MEMORY[0x1E4FB0F28];
      sub_1C1F1CC94((uint64_t)v10, (uint64_t)v8, &qword_1EBF0C620, MEMORY[0x1E4FB0F28]);
      MEMORY[0x1C8752FF0](v8);
      uint64_t v15 = (uint64_t)v10;
      return sub_1C1F1CD00(v15, &qword_1EBF0C620, v14);
    }
    sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C900);
    sub_1C214B170();
    sub_1C2149990();
    id v18 = v10;
  }
  else
  {
    MEMORY[0x1C8752FE0]();
    uint64_t v16 = sub_1C21499D0();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48))(v5, 1, v16))
    {
      id v14 = (void (*)(uint64_t))MEMORY[0x1E4FB0F28];
      sub_1C1F1CC94((uint64_t)v5, (uint64_t)v8, &qword_1EBF0C620, MEMORY[0x1E4FB0F28]);
      MEMORY[0x1C8752FF0](v8);
      uint64_t v15 = (uint64_t)v5;
      return sub_1C1F1CD00(v15, &qword_1EBF0C620, v14);
    }
    id v19 = objc_msgSend(self, sel_tertiarySystemBackgroundColor);
    sub_1C2149990();
    id v18 = v5;
  }
  return MEMORY[0x1C8752FF0](v18);
}

void sub_1C210A67C()
{
  uint64_t v1 = sub_1C21497F0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = (uint64_t)v0 + OBJC_IVAR____TtC19HealthMedicationsUI26InteractionSummaryItemCell_item;
  swift_beginAccess();
  sub_1C1F1CC94(v5, (uint64_t)v20, (unint64_t *)&qword_1EBF0C300, (void (*)(uint64_t))sub_1C1F1CB5C);
  if (v20[3])
  {
    sub_1C1F1CB5C();
    type metadata accessor for InteractionSummaryItem();
    if (swift_dynamicCast())
    {
      uint64_t v6 = v19;
      id v7 = sub_1C2109948();
      sub_1C210B430(v6);
      swift_release();

      return;
    }
  }
  else
  {
    sub_1C1F1CD00((uint64_t)v20, (unint64_t *)&qword_1EBF0C300, (void (*)(uint64_t))sub_1C1F1CB5C);
  }
  sub_1C21497A0();
  id v8 = v0;
  uint64_t v9 = sub_1C21497E0();
  os_log_type_t v10 = sub_1C214ABD0();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v18 = v1;
    id v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    uint64_t v17 = v2;
    uint64_t v13 = v12;
    uint64_t v19 = v12;
    *(_DWORD *)id v11 = 136446210;
    uint64_t v16 = v11 + 4;
    sub_1C1F1CC94(v5, (uint64_t)v20, (unint64_t *)&qword_1EBF0C300, (void (*)(uint64_t))sub_1C1F1CB5C);
    sub_1C1F1CC40(0, (unint64_t *)&qword_1EBF0C300, (void (*)(uint64_t))sub_1C1F1CB5C);
    uint64_t v14 = sub_1C214A630();
    v20[0] = sub_1C1F6FD54(v14, v15, &v19);
    sub_1C214B530();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C1F0B000, v9, v10, "Incorrect view model for InteractionSummaryItemCell: %{public}s", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C8754730](v13, -1, -1);
    MEMORY[0x1C8754730](v11, -1, -1);

    (*(void (**)(char *, uint64_t))(v17 + 8))(v4, v18);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
}

uint64_t type metadata accessor for InteractionSummaryItemCell()
{
  return self;
}

id InteractionSummaryItemCell.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for InteractionSummaryItemCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void (*sub_1C210AA88(void *a1))(void *a1)
{
  objc_super v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1C2109534((uint64_t)v2);
  return sub_1C1F37460;
}

uint64_t sub_1C210AAE0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC19HealthMedicationsUI26InteractionSummaryItemCell_item;
  swift_beginAccess();
  return sub_1C1F1CC94(v3, a2, (unint64_t *)&qword_1EBF0C300, (void (*)(uint64_t))sub_1C1F1CB5C);
}

uint64_t sub_1C210AB54(uint64_t a1)
{
  sub_1C1F1CC94(a1, (uint64_t)v2, (unint64_t *)&qword_1EBF0C300, (void (*)(uint64_t))sub_1C1F1CB5C);
  return sub_1C2109428((uint64_t)v2);
}

uint64_t method lookup function for InteractionSummaryItemCell(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for InteractionSummaryItemCell);
}

uint64_t dispatch thunk of InteractionSummaryItemCell.item.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of InteractionSummaryItemCell.item.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of InteractionSummaryItemCell.item.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x80))();
}

id InteractionSummaryContentView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  id v9 = objc_allocWithZone(v4);

  return objc_msgSend(v9, sel_initWithFrame_, a1, a2, a3, a4);
}

id sub_1C210ACC4()
{
  uint64_t v1 = OBJC_IVAR____TtC19HealthMedicationsUI29InteractionSummaryContentView____lazy_storage___titleLabel;
  objc_super v2 = *(void **)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI29InteractionSummaryContentView____lazy_storage___titleLabel);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI29InteractionSummaryContentView____lazy_storage___titleLabel);
  }
  else
  {
    uint64_t v4 = v0;
    id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
    objc_msgSend(v5, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    uint64_t v13 = sub_1C214A5F0();
    uint64_t v14 = v6;
    swift_bridgeObjectRetain();
    sub_1C214A6C0();
    id v7 = v5;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_1C214A6C0();
    swift_bridgeObjectRelease();
    id v8 = (void *)sub_1C214A5B0();
    swift_bridgeObjectRelease();
    objc_msgSend(v7, sel_setAccessibilityIdentifier_, v8, v13, v14);

    objc_msgSend(v7, sel_setNumberOfLines_, 0);
    objc_msgSend(v7, sel_setAdjustsFontForContentSizeCategory_, 1);
    objc_msgSend(v7, sel_setLineBreakMode_, 4);
    sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8E0);
    id v9 = (void *)sub_1C214B0A0();
    objc_msgSend(v7, sel_setFont_, v9);

    os_log_type_t v10 = *(void **)(v4 + v1);
    *(void *)(v4 + vsub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, 0, 1) = v7;
    id v3 = v7;

    objc_super v2 = 0;
  }
  id v11 = v2;
  return v3;
}

id InteractionSummaryContentView.init(frame:)(double a1, double a2, double a3, double a4)
{
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI29InteractionSummaryContentView____lazy_storage___titleLabel] = 0;
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI29InteractionSummaryContentView_viewModel] = 0;
  v12.receiver = v4;
  v12.super_class = (Class)type metadata accessor for InteractionSummaryContentView();
  id v9 = objc_msgSendSuper2(&v12, sel_initWithFrame_, a1, a2, a3, a4);
  objc_msgSend(v9, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  id v10 = sub_1C210ACC4();
  objc_msgSend(v9, sel_addSubview_, v10);

  sub_1C210B1BC();
  return v9;
}

uint64_t type metadata accessor for InteractionSummaryContentView()
{
  return self;
}

id InteractionSummaryContentView.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void InteractionSummaryContentView.init(coder:)()
{
  *(void *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI29InteractionSummaryContentView____lazy_storage___titleLabel] = 0;
  *(void *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI29InteractionSummaryContentView_viewModel] = 0;

  sub_1C214B910();
  __break(1u);
}

void sub_1C210B1BC()
{
  uint64_t v1 = self;
  sub_1C1F0ED28();
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1C21510C0;
  id v3 = sub_1C210ACC4();
  id v4 = objc_msgSend(v3, sel_leadingAnchor);

  id v5 = objc_msgSend(v0, sel_leadingAnchor);
  id v6 = objc_msgSend(v4, sel_constraintEqualToAnchor_, v5);

  *(void *)(v2 + 32) = v6;
  id v7 = sub_1C210ACC4();
  id v8 = objc_msgSend(v7, sel_trailingAnchor);

  id v9 = objc_msgSend(v0, sel_trailingAnchor);
  id v10 = objc_msgSend(v8, sel_constraintEqualToAnchor_, v9);

  *(void *)(v2 + 4sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = v10;
  id v11 = sub_1C210ACC4();
  id v12 = objc_msgSend(v11, sel_topAnchor);

  id v13 = objc_msgSend(v0, sel_topAnchor);
  id v14 = objc_msgSend(v12, sel_constraintEqualToAnchor_constant_, v13, 8.0);

  *(void *)(v2 + 48) = v14;
  id v15 = sub_1C210ACC4();
  id v16 = objc_msgSend(v15, sel_bottomAnchor);

  id v17 = objc_msgSend(v0, sel_bottomAnchor);
  id v18 = objc_msgSend(v16, sel_constraintEqualToAnchor_, v17);

  *(void *)(v2 + 56) = v18;
  sub_1C214A7A0();
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C810);
  id v19 = (id)sub_1C214A770();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_activateConstraints_, v19);
}

void sub_1C210B430(uint64_t a1)
{
  id v2 = sub_1C210ACC4();
  id v3 = objc_msgSend(v2, sel_font);

  if (v3)
  {
    id v4 = (void *)sub_1C210B678(v3);

    id v5 = sub_1C210ACC4();
    id v6 = v5;
    if (v4)
    {
      objc_msgSend(v5, sel_setAttributedText_, v4);
    }
    else
    {
      unint64_t v7 = *(void *)(a1 + 16);
      if (v7)
      {
        if (v7 != 1) {
          Array<A>.interactionSummaryTitle()(v7);
        }
      }
      else
      {
        if (qword_1EBF0CA00 != -1) {
          swift_once();
        }
        id v8 = (id)qword_1EBF0CA18;
        swift_bridgeObjectRetain();
        unint64_t v14 = 0xE000000000000000;
        sub_1C2147730();
        swift_bridgeObjectRelease();
      }
      uint64_t v9 = sub_1C214A5B0();
      swift_bridgeObjectRelease();
      objc_msgSend(v6, sel_setText_, v9);
      id v4 = v6;
      id v6 = (void *)v9;
    }

    id v10 = sub_1C210ACC4();
    uint64_t v11 = *(void *)(a1 + 16);
    id v12 = self;
    id v13 = &selRef_secondaryLabelColor;
    if (v11) {
      id v13 = &selRef_labelColor;
    }
    id v15 = objc_msgSend(v12, *v13, v14);
    objc_msgSend(v10, sel_setTextColor_, v15);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1C210B678(void *a1)
{
  unint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    if (v2 != 1)
    {
      uint64_t v4 = Array<A>.countBySeverityLevel.getter(*(void *)(v1 + 16));
      if (*(void *)(v4 + 16) && (unint64_t v5 = sub_1C1F4B548(1), (v6 & 1) != 0))
      {
        uint64_t v7 = *(void *)(*(void *)(v4 + 56) + 8 * v5);
        swift_bridgeObjectRelease();
        if (v7 > 0)
        {
          id v8 = Array<A>.interactionSummaryTitle()(v2);
          unint64_t v2 = sub_1C210B818((uint64_t)v8, v9, a1);
          swift_bridgeObjectRelease();
          return v2;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      return 0;
    }
    return sub_1C210B818(0x6C616E7265746E49, 0xEE00726F72724520, a1);
  }
  return v2;
}

id InteractionSummaryContentView.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for InteractionSummaryContentView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t method lookup function for InteractionSummaryContentView(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for InteractionSummaryContentView);
}

uint64_t dispatch thunk of InteractionSummaryContentView.updateFor(viewModel:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA0))();
}

uint64_t sub_1C210B818(uint64_t a1, uint64_t a2, void *a3)
{
  v14[0] = a1;
  sub_1C210BA44();
  MEMORY[0x1F4188790](v4 - 8);
  char v6 = (char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1F12718(0, (unint64_t *)&unk_1EBF0C800);
  sub_1C1F0ED28();
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1C214E170;
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C900);
  id v8 = self;
  id v9 = objc_msgSend(v8, sel_systemBlackColor, v14[0]);
  id v10 = objc_msgSend(v8, sel_systemWhiteColor);
  uint64_t v11 = sub_1C214B160();

  *(void *)(v7 + 32) = v11;
  v14[1] = v7;
  sub_1C214A7A0();
  uint64_t v12 = sub_1C214ADF0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v6, 1, 1, v12);
  swift_bridgeObjectRetain();
  objc_msgSend(v8, sel_labelColor);
  a3;
  return sub_1C214ADE0();
}

void sub_1C210BA44()
{
  if (!qword_1EA2C4AA8)
  {
    sub_1C214ADF0();
    unint64_t v0 = sub_1C214B4F0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C4AA8);
    }
  }
}

uint64_t MedicationDetailsDataSource.__allocating_init(with:healthStore:)(void *a1, void *a2)
{
  return MedicationDetailsDataSource.init(with:healthStore:)(a1, a2);
}

uint64_t MedicationDetailsDataSource.init(with:healthStore:)(void *a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = qword_1EA2C73A8;
  *(void *)(v3 + qword_1EA2C73A8) = 0;
  *(void *)(v3 + qword_1EA2C73Bsub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = MEMORY[0x1E4FBC870];
  *(void *)(v3 + qword_1EA2C73B8) = a2;
  *(void *)(v3 + v6) = a1;
  swift_retain();
  id v7 = a2;
  swift_retain();
  swift_release();
  sub_1C2149410();
  swift_allocObject();
  id v8 = v7;
  *(void *)(v3 + qword_1EA2C73Csub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = sub_1C2149400();
  sub_1C2149E90();
  id v9 = objc_msgSend(v19, sel_localizedOntologyEducationContent);
  if (v9)
  {
    id v10 = v9;
    sub_1C1F12718(0, (unint64_t *)&unk_1EA2C4680);
    sub_1C21480A0();
    uint64_t v12 = v11;

    if (v12) {
      swift_bridgeObjectRelease();
    }
  }
  else
  {
  }
  sub_1C2149E90();
  id v13 = objc_msgSend(v19, sel_localizedOntologyEducationContent);
  if (v13)
  {
    unint64_t v14 = v13;
    sub_1C1F12718(0, (unint64_t *)&unk_1EA2C4680);
    sub_1C21480C0();
    uint64_t v16 = v15;

    if (v16) {
      swift_bridgeObjectRelease();
    }
  }
  else
  {
  }
  sub_1C2149590();
  swift_allocObject();
  *(void *)(v3 + qword_1EA2C73C8) = sub_1C2149560();
  swift_release();
  uint64_t v17 = sub_1C2147F50();
  swift_retain();
  sub_1C210C13C(a1);
  swift_release();
  swift_release();

  return v17;
}

uint64_t MedicationDetailsDataSource.__allocating_init(with:)(uint64_t a1)
{
  return MedicationDetailsDataSource.init(with:)(a1);
}

uint64_t MedicationDetailsDataSource.init(with:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1C2147B20();
  uint64_t v20 = *(void *)(v4 - 8);
  uint64_t v21 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(v1 + qword_1EA2C73A8) = 0;
  *(void *)(v1 + qword_1EA2C73Bsub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = MEMORY[0x1E4FBC870];
  id v7 = objc_allocWithZone(MEMORY[0x1E4F2B0B8]);
  swift_retain();
  id v8 = objc_msgSend(v7, sel_init);
  *(void *)(v2 + qword_1EA2C73B8) = v8;
  sub_1C2149410();
  swift_allocObject();
  id v9 = v8;
  *(void *)(v2 + qword_1EA2C73Csub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = sub_1C2149400();
  sub_1C2149590();
  swift_allocObject();
  *(void *)(v2 + qword_1EA2C73C8) = sub_1C2149560();
  swift_release();
  id v10 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
  sub_1C210D8D4(0, (unint64_t *)&qword_1EA2C2DD0, MEMORY[0x1E4F66468], MEMORY[0x1E4FBBE00]);
  sub_1C2148540();
  uint64_t v11 = swift_allocObject();
  long long v19 = xmmword_1C214FCD0;
  *(_OWORD *)(v11 + 16) = xmmword_1C214FCD0;
  sub_1C210D8D4(0, (unint64_t *)&qword_1EBF0C958, (uint64_t (*)(uint64_t))sub_1C1F1CB5C, v10);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = v19;
  sub_1C1F236D8(a1, (uint64_t)v22);
  uint64_t v13 = type metadata accessor for MedicationDetailsCardItem();
  *(void *)(v12 + 56) = v13;
  *(void *)(v12 + 64) = sub_1C210C560(&qword_1EA2C73D0, (void (*)(uint64_t))type metadata accessor for MedicationDetailsCardItem);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v12 + 32));
  sub_1C2147B10();
  uint64_t v15 = (uint64_t *)((char *)boxed_opaque_existential_1 + *(int *)(v13 + 28));
  type metadata accessor for MedicationDetailsCardCell();
  sub_1C210C560((unint64_t *)&unk_1EA2C4410, (void (*)(uint64_t))type metadata accessor for MedicationDetailsCardCell);
  *uint64_t v15 = sub_1C21481D0();
  v15[1] = v16;
  sub_1C1F31280(v22, (uint64_t)boxed_opaque_existential_1);
  *(uint64_t *)((char *)boxed_opaque_existential_1 + *(int *)(v13 + 24)) = 0;
  sub_1C2147B10();
  sub_1C2147AD0();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v6, v21);
  sub_1C2148520();
  uint64_t v17 = sub_1C2147F50();
  __swift_destroy_boxed_opaque_existential_0(a1);
  return v17;
}

uint64_t sub_1C210C13C(void *a1)
{
  uint64_t v21 = a1;
  sub_1C210D8D4(0, &qword_1EBF0C7E8, MEMORY[0x1E4FBCC28], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v20 - v3;
  sub_1C210D6B0();
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  id v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C210D75C();
  uint64_t v11 = v10;
  uint64_t v12 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  unint64_t v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v22 = a1;
  sub_1C1F4986C();
  type metadata accessor for MedicationDetailsDataProvider(0);
  sub_1C210C560(&qword_1EA2C35A0, (void (*)(uint64_t))sub_1C1F4986C);
  sub_1C214A020();
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0CB10);
  id v22 = (id)sub_1C214AD80();
  uint64_t v15 = sub_1C214AD20();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v4, 1, 1, v15);
  sub_1C210C560(&qword_1EA2C7400, (void (*)(uint64_t))sub_1C210D6B0);
  sub_1C1F43FD4();
  sub_1C214A0A0();
  sub_1C1F441C8((uint64_t)v4);

  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t v16 = swift_allocObject();
  swift_weakInit();
  uint64_t v17 = swift_allocObject();
  id v18 = v21;
  *(void *)(v17 + 16) = v16;
  *(void *)(v17 + 24) = v18;
  sub_1C210C560(&qword_1EA2C7408, (void (*)(uint64_t))sub_1C210D75C);
  swift_retain();
  sub_1C214A0F0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  swift_beginAccess();
  sub_1C2149E20();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1C210C560(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C210C5A8@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1C210D8D4(0, (unint64_t *)&qword_1EBF0B690, MEMORY[0x1E4F66C80], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v28 - v5;
  id v29 = *a1;
  uint64_t v7 = v29;
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8C0);
  uint64_t v28 = sub_1C2149490();
  uint64_t v9 = v8;
  uint64_t v10 = sub_1C214AF70();
  unint64_t v12 = v11;
  uint64_t v13 = _sSo29HKMedicationUserDomainConceptC19HealthMedicationsUIE8strengthSSSgvg_0();
  unint64_t v15 = v14;
  _sSo29HKMedicationUserDomainConceptC19HealthMedicationsUIE7medmoji0eF10Experience29MedicationVisualizationConfigVSgvg_0();
  id v16 = objc_msgSend(v7, sel_userSpecifiedNotes);
  if (v16)
  {
    uint64_t v17 = v16;
    uint64_t v18 = sub_1C214A5F0();
    uint64_t v20 = v19;
  }
  else
  {
    uint64_t v18 = 0;
    uint64_t v20 = 0;
  }
  unint64_t v21 = 0xE000000000000000;
  if (v15) {
    unint64_t v22 = v15;
  }
  else {
    unint64_t v22 = 0xE000000000000000;
  }
  if (v15) {
    uint64_t v23 = v13;
  }
  else {
    uint64_t v23 = 0;
  }
  *a2 = v28;
  a2[1] = v9;
  if (v12)
  {
    unint64_t v21 = v12;
    uint64_t v24 = v10;
  }
  else
  {
    uint64_t v24 = 0;
  }
  a2[2] = v24;
  a2[3] = v21;
  a2[4] = v23;
  a2[5] = v22;
  uint64_t v25 = type metadata accessor for MedicationDetailsDataProvider(0);
  uint64_t result = sub_1C1F4DB28((uint64_t)v6, (uint64_t)a2 + *(int *)(v25 + 28));
  id v27 = (uint64_t *)((char *)a2 + *(int *)(v25 + 32));
  *id v27 = v18;
  v27[1] = v20;
  return result;
}

uint64_t sub_1C210C750(uint64_t a1)
{
  uint64_t v2 = sub_1C2147B20();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    swift_retain();
    sub_1C2147F40();
    swift_release();
    uint64_t v21 = sub_1C21482F0();
    swift_release();
    uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
    sub_1C210D8D4(0, (unint64_t *)&qword_1EA2C2DD0, MEMORY[0x1E4F66468], MEMORY[0x1E4FBBE00]);
    uint64_t v8 = *(unsigned __int8 *)(*(void *)(sub_1C2148540() - 8) + 80);
    uint64_t v20 = v2;
    uint64_t v9 = (v8 + 32) & ~v8;
    uint64_t v10 = swift_allocObject();
    long long v18 = xmmword_1C214FCD0;
    *(_OWORD *)(v10 + 16) = xmmword_1C214FCD0;
    uint64_t v19 = v10 + v9;
    sub_1C210D8D4(0, (unint64_t *)&qword_1EBF0C958, (uint64_t (*)(uint64_t))sub_1C1F1CB5C, v7);
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = v18;
    uint64_t v24 = type metadata accessor for MedicationDetailsDataProvider(0);
    uint64_t v25 = &protocol witness table for MedicationDetailsDataProvider;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v23);
    sub_1C210D870(a1, (uint64_t)boxed_opaque_existential_1);
    sub_1C2149E90();
    uint64_t v13 = v22;
    uint64_t v14 = type metadata accessor for MedicationDetailsCardItem();
    *(void *)(v11 + 56) = v14;
    *(void *)(v11 + 64) = sub_1C210C560(&qword_1EA2C73D0, (void (*)(uint64_t))type metadata accessor for MedicationDetailsCardItem);
    unint64_t v15 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v11 + 32));
    sub_1C2147B10();
    id v16 = (uint64_t *)((char *)v15 + *(int *)(v14 + 28));
    type metadata accessor for MedicationDetailsCardCell();
    sub_1C210C560((unint64_t *)&unk_1EA2C4410, (void (*)(uint64_t))type metadata accessor for MedicationDetailsCardCell);
    *id v16 = sub_1C21481D0();
    v16[1] = v17;
    sub_1C1F31280(&v23, (uint64_t)v15);
    *(uint64_t *)((char *)v15 + *(int *)(v14 + 24)) = v13;
    sub_1C2147B10();
    sub_1C2147AD0();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v20);
    sub_1C2148520();
    sub_1C21485B0();
    swift_release();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C210CAE8(uint64_t a1)
{
  uint64_t v2 = sub_1C2148710();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1) {
    sub_1C2148690();
  }
  else {
    sub_1C2148660();
  }
  uint64_t v6 = sub_1C2148700();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v6;
}

void MedicationDetailsDataSource.__allocating_init(arrangedSections:isHidden:)()
{
}

void MedicationDetailsDataSource.init(arrangedSections:isHidden:)()
{
}

uint64_t sub_1C210CC38()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t MedicationDetailsDataSource.deinit()
{
  uint64_t v0 = _s19HealthMedicationsUI34InteractionSeperatorLineDataSourceCfd_0();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  swift_release();
  return v0;
}

uint64_t MedicationDetailsDataSource.__deallocating_deinit()
{
  uint64_t v0 = _s19HealthMedicationsUI34InteractionSeperatorLineDataSourceCfd_0();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_1C210CDB0()
{
  return sub_1C2148B80();
}

Swift::Void __swiftcall MedicationDetailsDataSource.registerCells(for:)(UICollectionView *a1)
{
}

uint64_t sub_1C210CEAC()
{
  return sub_1C214ACC0();
}

uint64_t MedicationDetailsDataSource.supplementaryItem(ofKind:at:)@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = sub_1C2149BE0();
  MEMORY[0x1F4188790](v3 - 8);
  if (*(void *)(v1 + qword_1EA2C73A8))
  {
    swift_retain();
    sub_1C2149E90();
    swift_release();

    if (qword_1EBF0CA00 != -1) {
      swift_once();
    }
    id v4 = (id)qword_1EBF0CA18;
    swift_bridgeObjectRetain();
    sub_1C2147730();
    swift_bridgeObjectRelease();

    id v5 = (id)qword_1EBF0CA18;
    swift_bridgeObjectRetain();
    sub_1C2147730();
    swift_bridgeObjectRelease();

    swift_allocObject();
    swift_weakInit();
    swift_retain();
    sub_1C2149B50();
    uint64_t v6 = sub_1C2148180();
    swift_allocObject();
    uint64_t v7 = sub_1C2148170();
    swift_release();
  }
  else
  {
    if (qword_1EBF0CA00 != -1) {
      swift_once();
    }
    id v8 = (id)qword_1EBF0CA18;
    swift_bridgeObjectRetain();
    sub_1C2147730();
    swift_bridgeObjectRelease();

    sub_1C2149B50();
    uint64_t v6 = sub_1C2148180();
    swift_allocObject();
    uint64_t v7 = sub_1C2148170();
  }
  a1[3] = v6;
  uint64_t result = sub_1C210C560((unint64_t *)&qword_1EA2C3550, MEMORY[0x1E4F66208]);
  a1[4] = result;
  *a1 = v7;
  return result;
}

uint64_t sub_1C210D2F8()
{
  swift_weakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

void sub_1C210D330(void *a1)
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v3 = Strong;
    if (*(void *)(Strong + qword_1EA2C73A8))
    {
      swift_retain();
      sub_1C2149E90();
      swift_release();
      swift_retain();
      sub_1C2149550();
      swift_release();
      id v4 = *(void **)(v3 + qword_1EA2C73B8);
      id v5 = objc_allocWithZone((Class)type metadata accessor for MedicationDetailEditViewController());
      id v6 = v4;
      id v7 = v12;
      id v8 = (void *)sub_1C20E330C(v6, v7);

      id v9 = objc_msgSend(a1, sel_viewController);
      if (v9)
      {
        uint64_t v10 = v9;
        id v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F67B78]), sel_initWithRootViewController_, v8);
        objc_msgSend(v11, sel_setModalPresentationStyle_, 2);
        objc_msgSend(v11, sel_setModalInPresentation_, 1);
        objc_msgSend(v10, sel_presentViewController_animated_completion_, v11, 1, 0);

        swift_release();
      }
      else
      {
        swift_release();
      }
    }
    else
    {
      swift_release();
    }
  }
}

void sub_1C210D4E0(void *a1)
{
}

uint64_t sub_1C210D4E8()
{
  return sub_1C210C560(&qword_1EA2C73D8, (void (*)(uint64_t))type metadata accessor for MedicationDetailsDataSource);
}

uint64_t type metadata accessor for MedicationDetailsDataSource()
{
  uint64_t result = qword_1EA2C73E0;
  if (!qword_1EA2C73E0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C210D57C@<X0>(uint64_t *a1@<X8>)
{
  return MedicationDetailsDataSource.supplementaryItem(ofKind:at:)(a1);
}

uint64_t sub_1C210D5A0()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for MedicationDetailsDataSource(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MedicationDetailsDataSource);
}

uint64_t dispatch thunk of MedicationDetailsDataSource.__allocating_init(with:healthStore:)()
{
  return (*(uint64_t (**)(void))(class metadata base offset for MedicationDetailsDataSource + v0 + 168))();
}

uint64_t dispatch thunk of MedicationDetailsDataSource.__allocating_init(with:)()
{
  return (*(uint64_t (**)(void))(class metadata base offset for MedicationDetailsDataSource + v0 + 176))();
}

uint64_t dispatch thunk of MedicationDetailsDataSource.layout(for:environment:)()
{
  return (*(uint64_t (**)(void))(class metadata base offset for MedicationDetailsDataSource + *v0 + 192))();
}

uint64_t sub_1C210D6A8()
{
  return type metadata accessor for MedicationDetailsDataSource();
}

void sub_1C210D6B0()
{
  if (!qword_1EA2C73F0)
  {
    sub_1C1F4986C();
    type metadata accessor for MedicationDetailsDataProvider(255);
    sub_1C210C560(&qword_1EA2C35A0, (void (*)(uint64_t))sub_1C1F4986C);
    unint64_t v0 = sub_1C2149D60();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C73F0);
    }
  }
}

void sub_1C210D75C()
{
  if (!qword_1EA2C73F8)
  {
    sub_1C210D6B0();
    sub_1C1F12718(255, (unint64_t *)&qword_1EBF0CB10);
    sub_1C210C560(&qword_1EA2C7400, (void (*)(uint64_t))sub_1C210D6B0);
    sub_1C1F43FD4();
    unint64_t v0 = sub_1C2149DF0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C73F8);
    }
  }
}

uint64_t sub_1C210D828()
{
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C210D868(uint64_t a1)
{
  return sub_1C210C750(a1);
}

uint64_t sub_1C210D870(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MedicationDetailsDataProvider(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1C210D8D4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1C210DABC()
{
  id v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1400]), sel_initWithActivityIndicatorStyle_, 101);
  id v27 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
  id v2 = objc_msgSend(self, sel_secondaryLabelColor);
  objc_msgSend(v27, sel_setTextColor_, v2);

  objc_msgSend(v27, sel_setNumberOfLines_, 0);
  if (qword_1EBF0CA00 != -1) {
    swift_once();
  }
  id v3 = (id)qword_1EBF0CA18;
  swift_bridgeObjectRetain();
  sub_1C2147730();
  swift_bridgeObjectRelease();

  uint64_t v4 = (void *)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  objc_msgSend(v27, sel_setText_, v4, 0xE000000000000000);

  if (objc_msgSend(self, sel_isAppleInternalInstall))
  {
    id v5 = (id)qword_1EBF0CA18;
    swift_bridgeObjectRetain();
    sub_1C2147730();
    swift_bridgeObjectRelease();

    id v6 = (void *)sub_1C214A5B0();
    swift_bridgeObjectRelease();
    objc_msgSend(v27, sel_setText_, v6, 0xE000000000000000);
  }
  objc_msgSend(v27, sel_setTextAlignment_, 1);
  objc_msgSend(v27, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  id v7 = objc_msgSend(v0, sel_contentView);
  objc_msgSend(v7, sel_addSubview_, v27);

  id v8 = objc_msgSend(v0, sel_contentView);
  objc_msgSend(v8, sel_addSubview_, v1);

  objc_msgSend(v1, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  uint64_t v9 = self;
  sub_1C1F0ED28();
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1C21510C0;
  id v11 = objc_msgSend(v1, sel_centerYAnchor);
  id v12 = objc_msgSend(v0, sel_contentView);
  id v13 = objc_msgSend(v12, sel_centerYAnchor);

  id v14 = objc_msgSend(v11, sel_constraintEqualToAnchor_, v13);
  *(void *)(v10 + 32) = v14;
  id v15 = objc_msgSend(v1, sel_centerXAnchor);
  id v16 = objc_msgSend(v0, sel_contentView);
  id v17 = objc_msgSend(v16, sel_centerXAnchor);

  id v18 = objc_msgSend(v15, sel_constraintEqualToAnchor_, v17);
  *(void *)(v10 + 4sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = v18;
  id v19 = objc_msgSend(v27, sel_topAnchor);
  id v20 = objc_msgSend(v1, sel_bottomAnchor);
  id v21 = objc_msgSend(v19, sel_constraintEqualToAnchor_constant_, v20, 8.0);

  *(void *)(v10 + 48) = v21;
  id v22 = objc_msgSend(v27, sel_centerXAnchor);
  id v23 = objc_msgSend(v0, sel_contentView);
  id v24 = objc_msgSend(v23, sel_centerXAnchor);

  id v25 = objc_msgSend(v22, sel_constraintEqualToAnchor_, v24);
  *(void *)(v10 + 56) = v25;
  sub_1C214A7A0();
  sub_1C1F645D4();
  id v26 = (void *)sub_1C214A770();
  swift_bridgeObjectRelease();
  objc_msgSend(v9, sel_activateConstraints_, v26);

  objc_msgSend(v1, sel_startAnimating);
}

id sub_1C210E004()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ShardSpinnerDownloadCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for ShardSpinnerDownloadCell()
{
  return self;
}

uint64_t sub_1C210E06C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI24ShardSpinnerDownloadCell_item;
  swift_beginAccess();
  return sub_1C1F2116C(v3, a1);
}

uint64_t sub_1C210E0C0(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI24ShardSpinnerDownloadCell_item;
  swift_beginAccess();
  sub_1C1F1CADC(a1, v3);
  return swift_endAccess();
}

uint64_t (*sub_1C210E11C())()
{
  return j__swift_endAccess;
}

uint64_t sub_1C210E178()
{
  type metadata accessor for ShardSpinnerDownloadCell();
  sub_1C210E248();
  uint64_t result = sub_1C21481D0();
  qword_1EA2C8360 = result;
  *(void *)algn_1EA2C8368 = v1;
  return result;
}

uint64_t type metadata accessor for ShardSpinnerDownloadItem()
{
  return self;
}

uint64_t sub_1C210E1E0()
{
  if (qword_1EA2C2758 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_1EA2C8360;
  swift_bridgeObjectRetain();
  return v0;
}

unint64_t sub_1C210E248()
{
  unint64_t result = qword_1EA2C3030;
  if (!qword_1EA2C3030)
  {
    type metadata accessor for ShardSpinnerDownloadCell();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C3030);
  }
  return result;
}

BOOL static HistoryDisplayContext.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t HistoryDisplayContext.hash(into:)()
{
  return sub_1C214BB40();
}

uint64_t HistoryDisplayContext.hashValue.getter()
{
  return sub_1C214BB80();
}

unint64_t sub_1C210E32C()
{
  unint64_t result = qword_1EA2C7418;
  if (!qword_1EA2C7418)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C7418);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for HistoryDisplayContext(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, 0, 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C210E44CLL);
      case 4:
        *(_DWORD *)(result + sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, 0, 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, 0, 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, 0, 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HistoryDisplayContext()
{
  return &type metadata for HistoryDisplayContext;
}

uint64_t type metadata accessor for MedicationLogDetailsDataSource()
{
  uint64_t result = qword_1EA2C7428;
  if (!qword_1EA2C7428) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C210E4D0()
{
  uint64_t result = type metadata accessor for MedicationLogDetailsHeaderItem();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

void sub_1C210E58C()
{
  qword_1EA2C8370 = (uint64_t)&unk_1F1D73C78;
}

void *sub_1C210E5A0@<X0>(void *result@<X0>, char *a2@<X8>)
{
  if (*result == 1) {
    char v2 = 1;
  }
  else {
    char v2 = 2;
  }
  if (*result) {
    char v3 = v2;
  }
  else {
    char v3 = 0;
  }
  *a2 = v3;
  return result;
}

void sub_1C210E5C0(void *a1@<X8>)
{
  *a1 = *v1;
}

void sub_1C210E5CC(void *a1@<X8>)
{
  *a1 = &unk_1F1D740A0;
}

uint64_t *sub_1C210E5DC@<X0>(uint64_t *result@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v2 = *result;
  if ((unint64_t)*result >= 3) {
    LOBYTE(v2) = 3;
  }
  *a2 = v2;
  return result;
}

void sub_1C210E5F4(void *a1@<X8>)
{
  *a1 = &unk_1F1D740C8;
}

uint64_t sub_1C210E604(unint64_t a1)
{
  uint64_t v3 = sub_1C2148710();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t result = MEMORY[0x1F4188790](v3);
  id v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v8 = *(void *)(v1 + qword_1EA2C7420);
  if (*(void *)(v8 + 16) <= a1)
  {
LABEL_8:
    __break(1u);
    return result;
  }
  if (*(unsigned char *)(v8 + a1 + 32)) {
    sub_1C2148690();
  }
  else {
    sub_1C2148660();
  }
  uint64_t v9 = sub_1C2148700();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  return v9;
}

uint64_t sub_1C210E724@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  if (sub_1C214A5F0() == a1 && v6 == a2)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v8 = sub_1C214BA80();
    swift_bridgeObjectRelease();
    if ((v8 & 1) == 0)
    {
      a3[3] = sub_1C2148220();
      a3[4] = sub_1C210EFCC(&qword_1EA2C2D28, MEMORY[0x1E4F66330]);
      __swift_allocate_boxed_opaque_existential_1(a3);
      return sub_1C2148210();
    }
  }
  uint64_t v10 = v3 + qword_1EA2C8378;
  a3[3] = type metadata accessor for MedicationLogDetailsHeaderItem();
  a3[4] = sub_1C210EFCC(&qword_1EA2C7488, (void (*)(uint64_t))type metadata accessor for MedicationLogDetailsHeaderItem);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a3);

  return sub_1C2073F14(v10, (uint64_t)boxed_opaque_existential_1);
}

void sub_1C210E87C()
{
}

uint64_t sub_1C210E8AC()
{
  sub_1C2073D64(v0 + qword_1EA2C8378);
  swift_release();
  sub_1C1F2E220(v0 + qword_1EA2C8388);

  return swift_bridgeObjectRelease();
}

uint64_t sub_1C210E90C()
{
  uint64_t v0 = sub_1C2148610();
  sub_1C2073D64(v0 + qword_1EA2C8378);
  swift_release();
  sub_1C1F2E220(v0 + qword_1EA2C8388);
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_1C210E9B0()
{
  return type metadata accessor for MedicationLogDetailsDataSource();
}

unsigned char *storeEnumTagSinglePayload for LogDetailsSection(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, 0, 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C210EA84);
      case 4:
        *(_DWORD *)(result + sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, 0, 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, 0, 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, 0, 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LogDetailsSection()
{
  return &type metadata for LogDetailsSection;
}

unsigned char *storeEnumTagSinglePayload for LogDetailsRow(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, 0, 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C210EB88);
      case 4:
        *(_DWORD *)(result + sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, 0, 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, 0, 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, 0, 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LogDetailsRow()
{
  return &type metadata for LogDetailsRow;
}

uint64_t sub_1C210EBC0()
{
  return sub_1C210EC78(&qword_1EA2C7438, &qword_1EA2C7440);
}

unint64_t sub_1C210EBF4()
{
  unint64_t result = qword_1EA2C7448;
  if (!qword_1EA2C7448)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C7448);
  }
  return result;
}

uint64_t sub_1C210EC48()
{
  return sub_1C210EC78(&qword_1EA2C7450, &qword_1EA2C7458);
}

uint64_t sub_1C210EC78(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C210ECC8(255, a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C210ECC8(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t v3 = sub_1C214A830();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

unint64_t sub_1C210ED14()
{
  unint64_t result = qword_1EA2C7460;
  if (!qword_1EA2C7460)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C7460);
  }
  return result;
}

uint64_t sub_1C210ED68(unint64_t a1)
{
  return sub_1C210E604(a1);
}

uint64_t sub_1C210ED8C()
{
  return sub_1C214ACD0();
}

uint64_t sub_1C210EF04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1C210E724(a1, a2, a3);
}

uint64_t sub_1C210EF28()
{
  return sub_1C2148B80();
}

uint64_t sub_1C210EF84()
{
  return sub_1C210EFCC(&qword_1EA2C7468, (void (*)(uint64_t))type metadata accessor for MedicationLogDetailsDataSource);
}

uint64_t sub_1C210EFCC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C210F014(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1C2147B20();
  uint64_t v39 = *(void *)(v6 - 8);
  uint64_t v40 = v6;
  MEMORY[0x1F4188790](v6);
  id v38 = (char *)v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for MedicationLogDetailsUnitItem();
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = v2 + qword_1EA2C8388;
  *(void *)(v2 + qword_1EA2C8388 + 8) = 0;
  swift_unknownObjectWeakInit();
  uint64_t v12 = qword_1EA2C7420;
  uint64_t v13 = qword_1EA2C2760;
  swift_retain();
  if (v13 != -1) {
    swift_once();
  }
  *(void *)(v3 + v12) = qword_1EA2C8370;
  sub_1C2073F14(a2, v3 + qword_1EA2C8378);
  *(void *)(v3 + qword_1EA2C838sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = a1;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  sub_1C210F830(0, (unint64_t *)&qword_1EBF0C958, (void (*)(uint64_t))sub_1C1F1CB5C);
  uint64_t v37 = v3;
  uint64_t v14 = swift_allocObject();
  long long v33 = xmmword_1C214FCD0;
  *(_OWORD *)(v14 + 16) = xmmword_1C214FCD0;
  uint64_t v15 = type metadata accessor for MedicationLogDetailsTimeItem(0);
  uint64_t v36 = a2;
  uint64_t v16 = v15;
  *(void *)(v14 + 56) = v15;
  *(void *)(v14 + 64) = sub_1C210EFCC(&qword_1EA2C7498, (void (*)(uint64_t))type metadata accessor for MedicationLogDetailsTimeItem);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v14 + 32));
  swift_retain();
  sub_1C2147B10();
  id v18 = (uint64_t *)((char *)boxed_opaque_existential_1 + *(int *)(v16 + 24));
  type metadata accessor for MedicationLogDetailsTimeCell();
  sub_1C210EFCC(&qword_1EA2C7478, (void (*)(uint64_t))type metadata accessor for MedicationLogDetailsTimeCell);
  *id v18 = sub_1C21481D0();
  v18[1] = v19;
  *(uint64_t *)((char *)boxed_opaque_existential_1 + *(int *)(v16 + 20)) = a1;
  sub_1C210F830(0, (unint64_t *)&qword_1EA2C2DD0, MEMORY[0x1E4F66468]);
  uint64_t v20 = *(void *)(sub_1C2148540() - 8);
  uint64_t v34 = *(void *)(v20 + 72);
  unint64_t v21 = (*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  uint64_t v22 = swift_allocObject();
  uint64_t v35 = v22;
  *(_OWORD *)(v22 + 16) = xmmword_1C214FCC0;
  v32[1] = v22 + v21;
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = v33;
  MEMORY[0x1C8754850](v11);
  *(void *)&long long v33 = *(void *)(v11 + 8);
  *(void *)(v23 + 56) = v8;
  *(void *)(v23 + 64) = sub_1C210EFCC(&qword_1EA2C3208, (void (*)(uint64_t))type metadata accessor for MedicationLogDetailsUnitItem);
  id v24 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v23 + 32));
  swift_retain();
  sub_1C2147B10();
  id v25 = &v10[*(int *)(v8 + 24)];
  *((void *)v25 + sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, 0, 1) = 0;
  swift_unknownObjectWeakInit();
  uint64_t v26 = v8;
  id v27 = (uint64_t *)&v10[*(int *)(v8 + 28)];
  type metadata accessor for MedicationLogDetailsUnitCell();
  sub_1C210EFCC(&qword_1EA2C7470, (void (*)(uint64_t))type metadata accessor for MedicationLogDetailsUnitCell);
  *id v27 = sub_1C21481D0();
  v27[1] = v28;
  *(void *)&v10[*(int *)(v26 + 20)] = a1;
  *((void *)v25 + sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, 0, 1) = v33;
  swift_unknownObjectWeakAssign();
  swift_unknownObjectRelease();
  sub_1C1FC77F0((uint64_t)v10, (uint64_t)v24);
  sub_1C2148520();
  sub_1C2148520();
  v41[0] = 0;
  v41[1] = 0xE000000000000000;
  sub_1C214B7C0();
  swift_bridgeObjectRelease();
  strcpy((char *)v41, "MutableArray<");
  HIWORD(v41[1]) = -4864;
  id v29 = v38;
  sub_1C2147B10();
  sub_1C2147AD0();
  (*(void (**)(char *, uint64_t))(v39 + 8))(v29, v40);
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  sub_1C214A6C0();
  uint64_t v30 = sub_1C2148590();
  sub_1C2073D64(v36);
  return v30;
}

uint64_t sub_1C210F5CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (int *)type metadata accessor for MedicationLogDetailsUnitItem();
  uint64_t v5 = *((void *)v4 - 1);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = v2 + qword_1EA2C8388;
  uint64_t v9 = v2;
  uint64_t v19 = v2;
  *(void *)(v2 + qword_1EA2C8388 + 8) = a2;
  swift_unknownObjectWeakAssign();
  sub_1C210F830(0, &qword_1EA2C7490, (void (*)(uint64_t))type metadata accessor for MedicationLogDetailsUnitItem);
  unint64_t v10 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1C214FCD0;
  uint64_t v12 = *(void *)(v9 + qword_1EA2C8380);
  MEMORY[0x1C8754850](v8);
  uint64_t v13 = *(void *)(v8 + 8);
  swift_retain();
  sub_1C2147B10();
  uint64_t v14 = &v7[v4[6]];
  *((void *)v14 + sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, 0, 1) = 0;
  swift_unknownObjectWeakInit();
  uint64_t v15 = (uint64_t *)&v7[v4[7]];
  type metadata accessor for MedicationLogDetailsUnitCell();
  sub_1C210EFCC(&qword_1EA2C7470, (void (*)(uint64_t))type metadata accessor for MedicationLogDetailsUnitCell);
  *uint64_t v15 = sub_1C21481D0();
  v15[1] = v16;
  *(void *)&v7[v4[5]] = v12;
  *((void *)v14 + sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, 0, 1) = v13;
  swift_unknownObjectWeakAssign();
  swift_unknownObjectRelease();
  sub_1C1FC77F0((uint64_t)v7, v11 + v10);
  sub_1C1F383B4(v11);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  sub_1C21485C0();
  return swift_bridgeObjectRelease();
}

void sub_1C210F830(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C214BA50();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t MedicationChartCodableData.startDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1C2147AC0();
  unint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t MedicationChartCodableData.endDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MedicationChartCodableData() + 20);
  uint64_t v4 = sub_1C2147AC0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

double MedicationChartCodableData.takenCount.getter()
{
  return *(double *)(v0 + *(int *)(type metadata accessor for MedicationChartCodableData() + 24));
}

double MedicationChartCodableData.skippedCount.getter()
{
  return *(double *)(v0 + *(int *)(type metadata accessor for MedicationChartCodableData() + 28));
}

uint64_t MedicationChartCodableData.statisticsInterval.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MedicationChartCodableData() + 32);
  uint64_t v4 = sub_1C21476D0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t MedicationChartCodableData.windowTakenCount.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for MedicationChartCodableData() + 36));
}

uint64_t MedicationChartCodableData.windowSkippedCount.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for MedicationChartCodableData() + 40));
}

uint64_t sub_1C210FA88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C2110E0C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C210FAB0()
{
  return 0;
}

void sub_1C210FABC(unsigned char *a1@<X8>)
{
  *a1 = 7;
}

uint64_t sub_1C210FAC8(uint64_t a1)
{
  unint64_t v2 = sub_1C1F0FBB8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C210FB04(uint64_t a1)
{
  unint64_t v2 = sub_1C1F0FBB8();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t MedicationChartCodableData.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v33 = a2;
  uint64_t v3 = sub_1C21476D0();
  uint64_t v34 = *(void *)(v3 - 8);
  uint64_t v35 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1C2147AC0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v38 = v6;
  uint64_t v39 = v7;
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  unint64_t v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v37 = (char *)&v31 - v11;
  sub_1C1F0FB54(0, &qword_1EA2C74A0, MEMORY[0x1E4FBBDC0]);
  uint64_t v41 = v12;
  uint64_t v36 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v31 - v13;
  uint64_t v15 = (int *)type metadata accessor for MedicationChartCodableData();
  MEMORY[0x1F4188790](v15);
  id v17 = (char *)&v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_0(a1, a1[3]);
  sub_1C1F0FBB8();
  uint64_t v40 = v14;
  uint64_t v18 = (uint64_t)v42;
  sub_1C214BBA0();
  if (v18) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  uint64_t v19 = v10;
  id v31 = v5;
  id v32 = v17;
  uint64_t v20 = v39;
  id v42 = a1;
  char v49 = 0;
  sub_1C1F0FAC8(&qword_1EA2C74A8, MEMORY[0x1E4F27928]);
  unint64_t v21 = v37;
  sub_1C214B9E0();
  uint64_t v22 = (uint64_t)v32;
  uint64_t v23 = v38;
  uint64_t v37 = *(char **)(v20 + 32);
  ((void (*)(char *, char *, uint64_t))v37)(v32, v21, v38);
  char v48 = 1;
  sub_1C214B9E0();
  ((void (*)(uint64_t, char *, uint64_t))v37)(v22 + v15[5], v19, v23);
  char v47 = 2;
  uint64_t v37 = 0;
  sub_1C214B9C0();
  uint64_t v24 = v36;
  *(void *)(v22 + v15[6]) = v25;
  char v46 = 3;
  sub_1C214B9C0();
  *(void *)(v22 + v15[7]) = v26;
  char v45 = 4;
  sub_1C1F0FAC8(&qword_1EA2C74B0, MEMORY[0x1E4F26F90]);
  id v27 = v31;
  uint64_t v28 = v35;
  sub_1C214B9E0();
  (*(void (**)(uint64_t, char *, uint64_t))(v34 + 32))(v22 + v15[8], v27, v28);
  char v44 = 5;
  *(void *)(v22 + v15[9]) = sub_1C214B9D0();
  char v43 = 6;
  uint64_t v29 = sub_1C214B9D0();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v40, v41);
  *(void *)(v22 + v15[10]) = v29;
  sub_1C1F153E4(v22, v33, (uint64_t (*)(void))type metadata accessor for MedicationChartCodableData);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v42);
  return sub_1C1F100B8(v22, (uint64_t (*)(void))type metadata accessor for MedicationChartCodableData);
}

uint64_t sub_1C21101D0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return MedicationChartCodableData.init(from:)(a1, a2);
}

id MedicationChartDataSource.__allocating_init(with:displayType:)(void *a1, void *a2)
{
  id v5 = objc_allocWithZone(v2);
  return MedicationChartDataSource.init(with:displayType:)(a1, a2);
}

uint64_t sub_1C21102EC()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C2110324()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C211035C(unint64_t a1, void *a2)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_1C214B930();
    uint64_t v4 = result;
    if (!result) {
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (!v4) {
      goto LABEL_10;
    }
  }
  if (v4 < 1)
  {
    __break(1u);
    return result;
  }
  for (uint64_t i = 0; i != v4; ++i)
  {
    if ((a1 & 0xC000000000000001) != 0) {
      id v7 = (id)MEMORY[0x1C8753960](i, a1);
    }
    else {
      id v7 = *(id *)(a1 + 8 * i + 32);
    }
    uint64_t v8 = v7;
    objc_msgSend(a2, sel_stopQuery_, v7);
  }
LABEL_10:

  return swift_bridgeObjectRelease();
}

id MedicationChartDataSource.__allocating_init(displayType:healthStore:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithDisplayType_healthStore_, a1, a2);

  return v5;
}

void MedicationChartDataSource.init(displayType:healthStore:)()
{
}

id MedicationChartDataSource.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

void MedicationChartDataSource.init()()
{
}

id MedicationChartDataSource.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MedicationChartDataSource();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

unint64_t sub_1C211063C(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1C1F4C67C();
  uint64_t v2 = sub_1C214B970();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1C1F153E4(v6, (uint64_t)&v15, (uint64_t (*)(void))sub_1C1F4C750);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_1C2110778(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v3[6] + 16 * result);
    uint64_t *v11 = v7;
    v11[1] = v8;
    unint64_t result = (unint64_t)sub_1C1F3CB70(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1C2110778(uint64_t a1, uint64_t a2)
{
  sub_1C214BB30();
  sub_1C214A690();
  uint64_t v4 = sub_1C214BB80();

  return sub_1C21107F0(a1, a2, v4);
}

unint64_t sub_1C21107F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t i = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    char v10 = (void *)(v9 + 16 * i);
    if ((*v10 != a1 || v10[1] != a2) && (sub_1C214BA80() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      unint64_t i = (i + 1) & v12;
      if ((*(void *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
      {
        BOOL v13 = (void *)(v9 + 16 * i);
        if ((*v13 != a1 || v13[1] != a2) && (sub_1C214BA80() & 1) == 0)
        {
          for (unint64_t i = (i + 1) & v12; ((*(void *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v12)
          {
            uint64_t v15 = (void *)(v9 + 16 * i);
            if (*v15 == a1 && v15[1] == a2) {
              break;
            }
            if (sub_1C214BA80()) {
              break;
            }
          }
        }
      }
    }
  }
  return i;
}

uint64_t sub_1C211093C(uint64_t a1, uint64_t a2)
{
  uint64_t v48 = sub_1C21476D0();
  uint64_t v5 = *(void *)(v48 - 8);
  MEMORY[0x1F4188790](v48);
  char v47 = (char *)v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = sub_1C2147AC0();
  uint64_t v7 = MEMORY[0x1F4188790](v43);
  id v50 = (char *)v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  char v49 = (char *)v34 - v10;
  uint64_t result = MEMORY[0x1E4FBC860];
  uint64_t v53 = MEMORY[0x1E4FBC860];
  uint64_t v12 = *(void *)(a1 + 16);
  if (v12)
  {
    v34[1] = v2;
    uint64_t v13 = v9;
    uint64_t v14 = type metadata accessor for MedicationChartCodableData();
    uint64_t v15 = *(void *)(v14 - 8);
    unint64_t v16 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
    uint64_t v40 = *(void **)(a2 + OBJC_IVAR____TtC19HealthMedicationsUI25MedicationChartDataSource_medication);
    uint64_t v41 = (int *)v14;
    uint64_t v39 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
    uint64_t v17 = a1 + v16;
    uint64_t v38 = (void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    uint64_t v37 = (void (**)(char *, uint64_t))(v5 + 8);
    uint64_t v42 = v13 + 16;
    uint64_t v36 = (uint64_t (**)(char *, uint64_t))(v13 + 8);
    uint64_t v35 = *(void *)(v15 + 72);
    v34[0] = a1;
    swift_bridgeObjectRetain();
    uint64_t v18 = v38;
    uint64_t v19 = v40;
    do
    {
      uint64_t v46 = v12;
      uint64_t v20 = v43;
      unint64_t v21 = v39;
      v39(v49, v17, v43);
      uint64_t v22 = v41;
      v21(v50, v17 + v41[5], v20);
      uint64_t v23 = *(void *)(v17 + v22[6]);
      uint64_t v24 = *(void *)(v17 + v22[7]);
      uint64_t v25 = *v18;
      (*v18)(v47, v17 + v22[8], v48);
      uint64_t v26 = *(void *)(v17 + v22[10]);
      uint64_t v44 = *(void *)(v17 + v22[9]);
      uint64_t v45 = v26;
      id v27 = (objc_class *)type metadata accessor for MedicationChartPoint(0);
      uint64_t v28 = (char *)objc_allocWithZone(v27);
      v52[3] = sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8C0);
      v52[4] = MEMORY[0x1E4F66D70];
      v52[0] = v19;
      *(void *)&v28[OBJC_IVAR____TtC19HealthMedicationsUI20MedicationChartPoint_takenCount] = v23;
      *(void *)&v28[OBJC_IVAR____TtC19HealthMedicationsUI20MedicationChartPoint_skippedCount] = v24;
      v21(&v28[OBJC_IVAR____TtC19HealthMedicationsUI20MedicationChartPoint_startDate], (uint64_t)v49, v20);
      v21(&v28[OBJC_IVAR____TtC19HealthMedicationsUI20MedicationChartPoint_endDate], (uint64_t)v50, v20);
      uint64_t v29 = v47;
      uint64_t v30 = v48;
      v25(&v28[OBJC_IVAR____TtC19HealthMedicationsUI20MedicationChartPoint_statisticsInterval], (uint64_t)v47, v48);
      sub_1C1F236D8((uint64_t)v52, (uint64_t)&v28[OBJC_IVAR____TtC19HealthMedicationsUI20MedicationChartPoint_medication]);
      *(void *)&v28[OBJC_IVAR____TtC19HealthMedicationsUI20MedicationChartPoint_windowTakenCount] = v44;
      *(void *)&v28[OBJC_IVAR____TtC19HealthMedicationsUI20MedicationChartPoint_windowSkippedCount] = v45;
      v51.receiver = v28;
      v51.super_class = v27;
      id v31 = v19;
      objc_msgSendSuper2(&v51, sel_init);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v52);
      (*v37)(v29, v30);
      id v32 = *v36;
      (*v36)(v50, v20);
      uint64_t v33 = v32(v49, v20);
      MEMORY[0x1C87528E0](v33);
      if (*(void *)((v53 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v53 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_1C214A7D0();
      }
      v17 += v35;
      sub_1C214A820();
      sub_1C214A7A0();
      uint64_t v12 = v46 - 1;
    }
    while (v46 != 1);
    swift_bridgeObjectRelease();
    return v53;
  }
  return result;
}

uint64_t sub_1C2110E0C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7461447472617473 && a2 == 0xE900000000000065;
  if (v2 || (sub_1C214BA80() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65746144646E65 && a2 == 0xE700000000000000 || (sub_1C214BA80() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x756F436E656B6174 && a2 == 0xEA0000000000746ELL || (sub_1C214BA80() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x4364657070696B73 && a2 == 0xEC000000746E756FLL || (sub_1C214BA80() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001C2164640 || (sub_1C214BA80() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001C2164660 || (sub_1C214BA80() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001C2164680)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    char v6 = sub_1C214BA80();
    swift_bridgeObjectRelease();
    if (v6) {
      return 6;
    }
    else {
      return 7;
    }
  }
}

uint64_t sub_1C211110C()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C2111144()
{
  swift_unknownObjectWeakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C211117C()
{
  swift_release();
  swift_release();

  swift_release();

  return MEMORY[0x1F4186498](v0, 64, 7);
}

uint64_t sub_1C21111CC()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C211120C()
{
  return sub_1C211035C(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_1C2111214(void *a1)
{
  id v6 = objc_msgSend(a1, sel_queryDataObject);
  if (v6)
  {
    uint64_t v7 = v6;
    sub_1C1F18C18(0, &qword_1EBF0B498, (uint64_t (*)(uint64_t))type metadata accessor for MedicationChartCodableData, MEMORY[0x1E4FBB320]);
    uint64_t v8 = sub_1C2147890();
    unint64_t v10 = v9;

    sub_1C1F19034(&qword_1EA2C7500, &qword_1EA2C7508);
    sub_1C21474B0();
    sub_1C1F190F4(v8, v10);
    id v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F67B00]), sel_init);
    id v12 = v1;
    unint64_t v13 = sub_1C211093C(v17, (uint64_t)v12);
    swift_bridgeObjectRelease();

    if (v13 >> 62)
    {
      sub_1C2111F74();
      swift_bridgeObjectRetain();
      sub_1C214B920();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_1C214BA90();
      sub_1C2111F74();
    }
    swift_bridgeObjectRelease();
    sub_1C2111F74();
    uint64_t v14 = (void *)sub_1C214A770();
    swift_bridgeObjectRelease();
    objc_msgSend(v11, sel_setChartPoints_, v14);

    return (uint64_t)v11;
  }
  else
  {
    __break(1u);

    sub_1C1F190F4(v4, v3);
    sub_1C214B7C0();
    sub_1C214A6C0();
    id v16 = objc_msgSend(a1, sel_description);
    sub_1C214A5F0();

    sub_1C214A6C0();
    swift_bridgeObjectRelease();
    uint64_t result = sub_1C214B910();
    __break(1u);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for MedicationChartCodableData(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1C2147AC0();
    uint64_t v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8((uint64_t *)((char *)a1 + a3[5]), (uint64_t *)((char *)a2 + a3[5]), v7);
    uint64_t v9 = a3[7];
    *(uint64_t *)((char *)a1 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
    *(uint64_t *)((char *)a1 + v9) = *(uint64_t *)((char *)a2 + v9);
    uint64_t v10 = a3[8];
    id v11 = (char *)a1 + v10;
    id v12 = (char *)a2 + v10;
    uint64_t v13 = sub_1C21476D0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
    uint64_t v14 = a3[10];
    *(uint64_t *)((char *)a1 + a3[9]) = *(uint64_t *)((char *)a2 + a3[9]);
    *(uint64_t *)((char *)a1 + v14) = *(uint64_t *)((char *)a2 + v14);
  }
  return a1;
}

uint64_t assignWithCopy for MedicationChartCodableData(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1C2147AC0();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  uint64_t v8 = a3[8];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_1C21476D0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 24))(v9, v10, v11);
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  return a1;
}

uint64_t initializeWithTake for MedicationChartCodableData(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1C2147AC0();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  uint64_t v8 = a3[7];
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  uint64_t v9 = a3[8];
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = sub_1C21476D0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
  uint64_t v13 = a3[10];
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  *(void *)(a1 + v13) = *(void *)(a2 + v13);
  return a1;
}

uint64_t assignWithTake for MedicationChartCodableData(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1C2147AC0();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  uint64_t v8 = a3[7];
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  uint64_t v9 = a3[8];
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = sub_1C21476D0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 40))(v10, v11, v12);
  uint64_t v13 = a3[10];
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  *(void *)(a1 + v13) = *(void *)(a2 + v13);
  return a1;
}

uint64_t getEnumTagSinglePayload for MedicationChartCodableData(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C2111984);
}

uint64_t sub_1C2111984(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C2147AC0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = sub_1C21476D0();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 32);
    return v11(v13, a2, v12);
  }
}

uint64_t storeEnumTagSinglePayload for MedicationChartCodableData(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C2111A90);
}

uint64_t sub_1C2111A90(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_1C2147AC0();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = sub_1C21476D0();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 32);
    return v13(v15, a2, a2, v14);
  }
}

uint64_t sub_1C2111B94()
{
  uint64_t result = sub_1C2147AC0();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1C21476D0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for MedicationChartDataSource(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MedicationChartDataSource);
}

uint64_t dispatch thunk of MedicationChartDataSource.__allocating_init(with:displayType:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

unsigned char *storeEnumTagSinglePayload for MedicationStatsContext.PredicateType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, 0, 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C2111D68);
      case 4:
        *(_DWORD *)(result + sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, 0, 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, 0, 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, 0, 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MedicationStatsContext.PredicateType()
{
  return &type metadata for MedicationStatsContext.PredicateType;
}

ValueMetadata *type metadata accessor for MedicationChartCodableData.CodingKeys()
{
  return &type metadata for MedicationChartCodableData.CodingKeys;
}

unint64_t sub_1C2111DDC()
{
  unint64_t result = qword_1EA2C74D8;
  if (!qword_1EA2C74D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C74D8);
  }
  return result;
}

unint64_t sub_1C2111E34()
{
  unint64_t result = qword_1EA2C74E0;
  if (!qword_1EA2C74E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C74E0);
  }
  return result;
}

unint64_t sub_1C2111E8C()
{
  unint64_t result = qword_1EBF0B2E8;
  if (!qword_1EBF0B2E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBF0B2E8);
  }
  return result;
}

unint64_t sub_1C2111EE4()
{
  unint64_t result = qword_1EBF0B2E0;
  if (!qword_1EBF0B2E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBF0B2E0);
  }
  return result;
}

uint64_t sub_1C2111F38()
{
  _Block_release(*(const void **)(v0 + 16));

  return MEMORY[0x1F4186498](v0, 24, 7);
}

unint64_t sub_1C2111F74()
{
  unint64_t result = qword_1EA2C7510;
  if (!qword_1EA2C7510)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA2C7510);
  }
  return result;
}

ValueMetadata *type metadata accessor for MedicationStatisticCollector()
{
  return &type metadata for MedicationStatisticCollector;
}

__n128 sub_1C2111FF0()
{
  __asm { FMOV            V0.2D, #16.0 }
  xmmword_1EA2C83A0 = (__int128)result;
  *(__n128 *)&qword_1EA2C83B0 = result;
  return result;
}

uint64_t sub_1C2112004(uint64_t a1, void *a2)
{
  sub_1C1F2116C(a1, (uint64_t)v5);
  uint64_t v3 = *a2 + OBJC_IVAR____TtC19HealthMedicationsUI36InteractionResultDetailEducationCell_item;
  swift_beginAccess();
  sub_1C1F32DDC((uint64_t)v5, v3);
  swift_endAccess();
  sub_1C2112678();
  return sub_1C1F374E4((uint64_t)v5);
}

uint64_t sub_1C2112078@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI36InteractionResultDetailEducationCell_item;
  swift_beginAccess();
  return sub_1C1F2116C(v3, a1);
}

uint64_t sub_1C21120CC(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI36InteractionResultDetailEducationCell_item;
  swift_beginAccess();
  sub_1C1F32DDC(a1, v3);
  swift_endAccess();
  sub_1C2112678();
  return sub_1C1F374E4(a1);
}

void (*sub_1C211213C(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1C211219C;
}

void sub_1C211219C(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    sub_1C2112678();
  }
}

id sub_1C21121D0(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = &v4[OBJC_IVAR____TtC19HealthMedicationsUI36InteractionResultDetailEducationCell_item];
  *(_OWORD *)uint64_t v9 = 0u;
  *((_OWORD *)v9 + sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, 0, 1) = 0u;
  *((void *)v9 + 4) = 0;
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI36InteractionResultDetailEducationCell____lazy_storage___stackView] = 0;
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI36InteractionResultDetailEducationCell____lazy_storage___attributionLabel] = 0;
  v14.receiver = v4;
  v14.super_class = (Class)type metadata accessor for InteractionResultDetailEducationCell();
  id v10 = objc_msgSendSuper2(&v14, sel_initWithFrame_, a1, a2, a3, a4);
  objc_msgSend(v10, sel_setUserInteractionEnabled_, 0);
  id v11 = objc_msgSend(v10, sel_contentView);
  id v12 = sub_1C21123D4();
  objc_msgSend(v11, sel_addSubview_, v12);

  return v10;
}

id sub_1C21123D4()
{
  uint64_t v1 = OBJC_IVAR____TtC19HealthMedicationsUI36InteractionResultDetailEducationCell____lazy_storage___stackView;
  unint64_t v2 = *(void **)(v0
                + OBJC_IVAR____TtC19HealthMedicationsUI36InteractionResultDetailEducationCell____lazy_storage___stackView);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC19HealthMedicationsUI36InteractionResultDetailEducationCell____lazy_storage___stackView);
  }
  else
  {
    id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1C60]), sel_init);
    objc_msgSend(v4, sel_setAxis_, 1);
    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    objc_msgSend(v4, sel_setSpacing_, 20.0);
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + vsub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, 0, 1) = v4;
    id v3 = v4;

    unint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_1C2112484()
{
  uint64_t v1 = OBJC_IVAR____TtC19HealthMedicationsUI36InteractionResultDetailEducationCell____lazy_storage___attributionLabel;
  unint64_t v2 = *(void **)(v0
                + OBJC_IVAR____TtC19HealthMedicationsUI36InteractionResultDetailEducationCell____lazy_storage___attributionLabel);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC19HealthMedicationsUI36InteractionResultDetailEducationCell____lazy_storage___attributionLabel);
  }
  else
  {
    uint64_t v4 = v0;
    id v5 = objc_msgSend(objc_allocWithZone((Class)sub_1C2148250()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
    id v6 = (id)*MEMORY[0x1E4FB2950];
    sub_1C2148240();
    sub_1C2148230();
    objc_msgSend(v5, sel_setNumberOfLines_, 0);
    uint64_t v16 = sub_1C214A5F0();
    uint64_t v17 = v7;
    swift_bridgeObjectRetain();
    sub_1C214A6C0();
    id v8 = v5;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_1C214A6C0();
    swift_bridgeObjectRelease();
    uint64_t v9 = (void *)sub_1C214A5B0();
    swift_bridgeObjectRelease();
    objc_msgSend(v8, sel_setAccessibilityIdentifier_, v9, v16, v17);

    id v10 = self;
    id v11 = v8;
    id v12 = objc_msgSend(v10, sel_secondaryLabelColor);
    objc_msgSend(v11, sel_setTextColor_, v12);

    objc_msgSend(v11, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    uint64_t v13 = *(void **)(v4 + v1);
    *(void *)(v4 + vsub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, 0, 1) = v11;
    id v3 = v11;

    unint64_t v2 = 0;
  }
  id v14 = v2;
  return v3;
}

void sub_1C2112678()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1C21497F0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  id v5 = (char *)&v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = (uint64_t)v1 + OBJC_IVAR____TtC19HealthMedicationsUI36InteractionResultDetailEducationCell_item;
  swift_beginAccess();
  sub_1C1F2116C(v6, (uint64_t)v54);
  if (!v54[3])
  {
    sub_1C1F374E4((uint64_t)v54);
LABEL_12:
    sub_1C21497A0();
    id v16 = v1;
    uint64_t v17 = sub_1C21497E0();
    os_log_type_t v18 = sub_1C214ABD0();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = swift_slowAlloc();
      uint64_t v52 = v2;
      uint64_t v20 = (uint8_t *)v19;
      uint64_t v21 = swift_slowAlloc();
      uint64_t v53 = v21;
      *(_DWORD *)uint64_t v20 = 136446210;
      sub_1C1F2116C(v6, (uint64_t)v54);
      sub_1C1F24488();
      uint64_t v22 = sub_1C214A630();
      v54[0] = sub_1C1F6FD54(v22, v23, &v53);
      sub_1C214B530();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C1F0B000, v17, v18, "Incorrect view model for InteractionResultDetailEducationCell: %{public}s", v20, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C8754730](v21, -1, -1);
      MEMORY[0x1C8754730](v20, -1, -1);

      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v52);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    }
    return;
  }
  sub_1C1F1CB5C();
  sub_1C21084B8();
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_12;
  }
  uint64_t v7 = v53;
  id v8 = sub_1C21123D4();
  id v9 = objc_msgSend(v8, sel_arrangedSubviews);

  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8F0);
  unint64_t v10 = sub_1C214A780();

  if (v10 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_1C214B930();
    swift_bridgeObjectRelease();
    if (v11) {
      goto LABEL_5;
    }
  }
  else
  {
    uint64_t v11 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v11)
    {
LABEL_5:
      if (v11 < 1)
      {
        __break(1u);
        return;
      }
      uint64_t v12 = 0;
      do
      {
        if ((v10 & 0xC000000000000001) != 0) {
          id v13 = (id)MEMORY[0x1C8753960](v12, v10);
        }
        else {
          id v13 = *(id *)(v10 + 8 * v12 + 32);
        }
        id v14 = v13;
        ++v12;
        id v15 = sub_1C21123D4();
        objc_msgSend(v15, sel_removeArrangedSubview_, v14);

        objc_msgSend(v14, sel_removeFromSuperview);
      }
      while (v11 != v12);
    }
  }
  swift_bridgeObjectRelease();
  id v24 = *(id *)(v7 + *(void *)(*(void *)v7 + 120));
  id v25 = objc_msgSend(v24, sel_severity);
  id v26 = objc_msgSend(v25, sel_severityLevel);

  uint64_t v27 = sub_1C1FF3838();
  uint64_t v29 = v28;
  id v30 = objc_allocWithZone((Class)type metadata accessor for InteractionDetailEducationView());
  id v31 = sub_1C206F9FC((uint64_t)v26, v27, v29);
  id v32 = sub_1C21123D4();
  objc_msgSend(v32, sel_addArrangedSubview_, v31);

  id v33 = sub_1C2112484();
  sub_1C1FF3988();
  uint64_t v34 = (void *)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  objc_msgSend(v33, sel_setText_, v34);

  id v35 = sub_1C21123D4();
  id v36 = sub_1C2112484();
  objc_msgSend(v35, sel_addArrangedSubview_, v36);

  id v37 = sub_1C21123D4();
  id v38 = objc_msgSend(v1, sel_contentView);
  uint64_t v52 = v7;
  if (qword_1EA2C2768 != -1) {
    swift_once();
  }
  objc_msgSend(v37, sel_hk_alignVerticalConstraintsWithView_insets_, v38, xmmword_1EA2C83A0, *(double *)&qword_1EA2C83B0, unk_1EA2C83B8, v52);

  id v39 = sub_1C21123D4();
  id v40 = objc_msgSend(v39, sel_leadingAnchor);

  id v41 = objc_msgSend(v1, sel_contentView);
  id v42 = objc_msgSend(v41, sel_layoutMarginsGuide);

  id v43 = objc_msgSend(v42, sel_leadingAnchor);
  id v44 = objc_msgSend(v40, sel_constraintEqualToAnchor_, v43);

  objc_msgSend(v44, sel_setActive_, 1);
  id v45 = sub_1C21123D4();
  id v46 = objc_msgSend(v45, sel_trailingAnchor);

  id v47 = objc_msgSend(v1, sel_contentView);
  id v48 = objc_msgSend(v47, sel_layoutMarginsGuide);

  id v49 = objc_msgSend(v48, sel_trailingAnchor);
  id v50 = objc_msgSend(v46, sel_constraintEqualToAnchor_, v49);

  objc_msgSend(v50, sel_setActive_, 1);
  id v51 = sub_1C21123D4();
  objc_msgSend(v51, sel_setCustomSpacing_afterView_, v31, 10.0);
  swift_release();
}

uint64_t type metadata accessor for InteractionResultDetailEducationCell()
{
  return self;
}

id InteractionResultDetailEducationCell.__deallocating_deinit()
{
  return sub_1C2112D8C((SEL *)&selRef_dealloc);
}

id sub_1C2112D8C(SEL *a1)
{
  v4.receiver = v1;
  v4.super_class = (Class)type metadata accessor for InteractionResultDetailEducationCell();
  return objc_msgSendSuper2(&v4, *a1);
}

uint64_t sub_1C2112E24@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC19HealthMedicationsUI36InteractionResultDetailEducationCell_item;
  swift_beginAccess();
  return sub_1C1F2116C(v3, a2);
}

uint64_t method lookup function for InteractionResultDetailEducationCell(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for InteractionResultDetailEducationCell);
}

uint64_t dispatch thunk of InteractionResultDetailEducationCell.item.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of InteractionResultDetailEducationCell.item.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of InteractionResultDetailEducationCell.item.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x78))();
}

uint64_t MedmojiConfigItem.init(_:isSelected:sectionIdentifier:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a5 - 8) + 32))(a6, a1, a5);
  uint64_t result = type metadata accessor for MedmojiConfigItem();
  *(unsigned char *)(a6 + *(int *)(result + 36)) = a2;
  uint64_t v11 = (void *)(a6 + *(int *)(result + 40));
  void *v11 = a3;
  v11[1] = a4;
  return result;
}

uint64_t type metadata accessor for MedmojiConfigItem()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t MedmojiColor.cellIdentifier.getter()
{
  return sub_1C21130E0((void (*)(void))type metadata accessor for ColorCell, &qword_1EA2C7228, (void (*)(uint64_t))type metadata accessor for ColorCell);
}

uint64_t type metadata accessor for ColorCell(uint64_t a1)
{
  return sub_1C1F20D10(a1, (uint64_t *)&unk_1EBF0B0A0);
}

uint64_t sub_1C2113050(uint64_t a1, uint64_t a2)
{
  return sub_1C21131F4(a1, a2, (void (*)(void))type metadata accessor for ColorCell, &qword_1EA2C7228, (void (*)(uint64_t))type metadata accessor for ColorCell);
}

uint64_t MedicationShape.cellIdentifier.getter()
{
  return sub_1C21130E0((void (*)(void))type metadata accessor for ShapeCell, &qword_1EA2C4358, (void (*)(uint64_t))type metadata accessor for ShapeCell);
}

uint64_t sub_1C21130E0(void (*a1)(void), unint64_t *a2, void (*a3)(uint64_t))
{
  return sub_1C21481D0();
}

uint64_t type metadata accessor for ShapeCell(uint64_t a1)
{
  return sub_1C1F20D10(a1, (uint64_t *)&unk_1EBF0B040);
}

uint64_t sub_1C2113164(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C21131AC(uint64_t a1, uint64_t a2)
{
  return sub_1C21131F4(a1, a2, (void (*)(void))type metadata accessor for ShapeCell, &qword_1EA2C4358, (void (*)(uint64_t))type metadata accessor for ShapeCell);
}

uint64_t sub_1C21131F4(uint64_t a1, uint64_t a2, void (*a3)(void), unint64_t *a4, void (*a5)(uint64_t))
{
  return sub_1C21481D0();
}

uint64_t MedmojiConfigItem.uniqueIdentifier.getter(uint64_t a1)
{
  uint64_t v2 = (*(uint64_t (**)(void))(*(void *)(a1 + 24) + 16))(*(void *)(a1 + 16));
  sub_1C214A6C0();
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  sub_1C214A6C0();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  sub_1C214A6C0();
  MedmojiConfigItem.hashValue.getter();
  sub_1C214BA40();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t MedmojiConfigItem.reuseIdentifier.getter(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 24) + 16))(*(void *)(a1 + 16));
}

uint64_t MedmojiConfigItem.hashValue.getter()
{
  return sub_1C214BB80();
}

uint64_t MedmojiConfigItem.item.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t MedmojiConfigItem.isSelected.getter(uint64_t a1)
{
  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 36));
}

uint64_t MedmojiConfigItem.sectionIdentifier.getter(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 40));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t static MedmojiConfigItem.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MedmojiConfigItem();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  id v32 = &v28[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  id v30 = &v28[-v9];
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  uint64_t v12 = &v28[-v11];
  MEMORY[0x1F4188790](v10);
  id v14 = &v28[-v13];
  char v15 = sub_1C214A5A0();
  id v16 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v5 + 16);
  uint64_t v31 = a1;
  v16(v14, a1, v4);
  v16(v12, a2, v4);
  if (v15)
  {
    int v29 = v14[*(int *)(v4 + 36)];
    uint64_t v17 = *(void (**)(unsigned char *, uint64_t))(v5 + 8);
    v17(v14, v4);
    int v18 = v12[*(int *)(v4 + 36)];
    v17(v12, v4);
    uint64_t v19 = v30;
    v16(v30, v31, v4);
    uint64_t v20 = v32;
    v16(v32, a2, v4);
    if (v29 == v18)
    {
      uint64_t v22 = *(int *)(v4 + 40);
      uint64_t v23 = *(void *)&v19[v22];
      uint64_t v24 = *(void *)&v19[v22 + 8];
      id v25 = &v20[v22];
      if (v23 == *v25 && v24 == v25[1]) {
        char v21 = 1;
      }
      else {
        char v21 = sub_1C214BA80();
      }
    }
    else
    {
      char v21 = 0;
    }
  }
  else
  {
    uint64_t v17 = *(void (**)(unsigned char *, uint64_t))(v5 + 8);
    v17(v12, v4);
    v17(v14, v4);
    uint64_t v19 = v30;
    v16(v30, v31, v4);
    uint64_t v20 = v32;
    v16(v32, a2, v4);
    char v21 = 0;
  }
  v17(v19, v4);
  v17(v20, v4);
  return v21 & 1;
}

uint64_t MedmojiConfigItem.hash(into:)()
{
  sub_1C214A560();
  sub_1C214BB50();
  swift_bridgeObjectRetain();
  sub_1C214A690();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1C21137F4()
{
  return sub_1C214BB80();
}

uint64_t sub_1C2113838(uint64_t a1)
{
  uint64_t result = sub_1C2113164(&qword_1EA2C7540, MEMORY[0x1E4F66BE8]);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C2113890(uint64_t a1)
{
  uint64_t result = sub_1C2113164(qword_1EA2C7548, MEMORY[0x1E4F66C08]);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C21138E8()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C2113904(uint64_t a1, uint64_t a2)
{
  return static MedmojiConfigItem.== infix(_:_:)(a1, a2);
}

uint64_t dispatch thunk of MedmojiConfigurationItem.cellIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_1C211392C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 32);
}

uint64_t sub_1C2113934()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *sub_1C21139D8(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || (v6 & 0xFFFFFFFFFFFFFFF8) != 0 && (v6 & 0xFFFFFFFFFFFFFFF8) < 0xFFFFFFFFFFFFFFE8)
  {
    uint64_t v9 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(void *, void *))(v5 + 16))(a1, a2);
    *((unsigned char *)v4 + v6) = *((unsigned char *)a2 + v6);
    unint64_t v10 = ((unint64_t)v4 + v6) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v11 = ((unint64_t)a2 + v6) & 0xFFFFFFFFFFFFFFF8;
    *(void *)(v10 + 8) = *(void *)(v11 + 8);
    *(void *)(v10 + 16) = *(void *)(v11 + 16);
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_1C2113AD8(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1C2113B44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 48);
  uint64_t v7 = v6 + a1;
  uint64_t v8 = v6 + a2;
  *(unsigned char *)uint64_t v7 = *(unsigned char *)v8;
  v7 &= 0xFFFFFFFFFFFFFFF8;
  v8 &= 0xFFFFFFFFFFFFFFF8;
  *(void *)(v7 + 8) = *(void *)(v8 + 8);
  *(void *)(v7 + 16) = *(void *)(v8 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1C2113BD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 40);
  uint64_t v7 = v6 + a1;
  uint64_t v8 = v6 + a2;
  *(unsigned char *)uint64_t v7 = *(unsigned char *)v8;
  v7 &= 0xFFFFFFFFFFFFFFF8;
  v8 &= 0xFFFFFFFFFFFFFFF8;
  *(void *)(v7 + 8) = *(void *)(v8 + 8);
  *(void *)(v7 + 16) = *(void *)(v8 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C2113C68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 32);
  unint64_t v7 = v6 + a1;
  unint64_t v8 = v6 + a2;
  *(unsigned char *)unint64_t v7 = *(unsigned char *)v8;
  *(_OWORD *)((v7 & 0xFFFFFFFFFFFFFFF8) + 8) = *(_OWORD *)((v8 & 0xFFFFFFFFFFFFFFF8) + 8);
  return a1;
}

uint64_t sub_1C2113CE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 24);
  uint64_t v7 = v6 + a1;
  uint64_t v8 = v6 + a2;
  *(unsigned char *)uint64_t v7 = *(unsigned char *)v8;
  v7 &= 0xFFFFFFFFFFFFFFF8;
  v8 &= 0xFFFFFFFFFFFFFFF8;
  *(void *)(v7 + 8) = *(void *)(v8 + 8);
  *(void *)(v7 + 16) = *(void *)(v8 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C2113D78(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = (v6 & 0xFFFFFFFFFFFFFFF8) + 24;
    unsigned int v9 = a2 - v7;
    uint64_t v10 = v8 & 0xFFFFFFF8;
    if ((v8 & 0xFFFFFFF8) != 0) {
      unsigned int v11 = 2;
    }
    else {
      unsigned int v11 = v9 + 1;
    }
    if (v11 >= 0x10000) {
      unsigned int v12 = 4;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v11 < 0x100) {
      unsigned int v12 = 1;
    }
    if (v11 >= 2) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    switch(v13)
    {
      case 1:
        int v14 = *((unsigned __int8 *)a1 + v8);
        if (!v14) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v14 = *(unsigned __int16 *)((char *)a1 + v8);
        if (v14) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1C2113EBCLL);
      case 4:
        int v14 = *(_DWORD *)((char *)a1 + v8);
        if (!v14) {
          break;
        }
LABEL_22:
        int v16 = v14 - 1;
        if (v10)
        {
          int v16 = 0;
          LODWORD(v1sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = *a1;
        }
        return v7 + (v10 | v16) + 1;
      default:
        break;
    }
  }
  if (v5 >= 0x7FFFFFFF) {
    return (*(uint64_t (**)(void))(v4 + 48))();
  }
  unint64_t v17 = *(void *)((((unint64_t)a1 + v6) & 0xFFFFFFFFFFFFFFF8) + 16);
  if (v17 >= 0xFFFFFFFF) {
    LODWORD(v17) = -1;
  }
  return (v17 + 1);
}

void sub_1C2113ED0(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  unint64_t v10 = (v9 & 0xFFFFFFFFFFFFFFF8) + 24;
  if ((v9 & 0xFFFFFFF8) == 0xFFFFFFE8) {
    unsigned int v11 = a3 - v8 + 1;
  }
  else {
    unsigned int v11 = 2;
  }
  if (v11 >= 0x10000) {
    int v12 = 4;
  }
  else {
    int v12 = 2;
  }
  if (v11 < 0x100) {
    int v12 = 1;
  }
  if (v11 >= 2) {
    unsigned int v13 = v12;
  }
  else {
    unsigned int v13 = 0;
  }
  if (v8 < a3) {
    uint64_t v14 = v13;
  }
  else {
    uint64_t v14 = 0;
  }
  if (a2 > v8)
  {
    if ((v9 & 0xFFFFFFF8) == 0xFFFFFFE8) {
      int v15 = a2 - v8;
    }
    else {
      int v15 = 1;
    }
    if ((v9 & 0xFFFFFFF8) != 0xFFFFFFE8)
    {
      int v16 = ~v8 + a2;
      bzero(a1, (v9 & 0xFFFFFFFFFFFFFFF8) + 24);
      *(_DWORD *)a1 = v16;
    }
    switch(v14)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_43;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
  switch(v14)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 3:
LABEL_43:
      __break(1u);
      JUMPOUT(0x1C21140A8);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_32;
    default:
LABEL_32:
      if (a2)
      {
LABEL_33:
        if (v7 < 0x7FFFFFFF)
        {
          unint64_t v18 = (unint64_t)&a1[v9] & 0xFFFFFFFFFFFFFFF8;
          if ((a2 & 0x80000000) != 0)
          {
            *(void *)(v18 + 8) = a2 ^ 0x80000000;
            *(void *)(v18 + 16) = 0;
          }
          else
          {
            *(void *)(v18 + 16) = a2 - 1;
          }
        }
        else
        {
          unint64_t v17 = *(void (**)(void))(v6 + 56);
          v17();
        }
      }
      return;
  }
}

id sub_1C21140D0()
{
  uint64_t v1 = OBJC_IVAR____TtC19HealthMedicationsUI9ColorCell____lazy_storage___gradientView;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI9ColorCell____lazy_storage___gradientView);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI9ColorCell____lazy_storage___gradientView);
  }
  else
  {
    sub_1C2149250();
    id v4 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
    unsigned int v5 = *(void **)(v0 + v1);
    *(void *)(v0 + vsub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, 0, 1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_1C2114148(double a1, double a2, double a3, double a4)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  sub_1C2116CC4(0, &qword_1EBF0C620, MEMORY[0x1E4FB0F28]);
  MEMORY[0x1F4188790](v10 - 8);
  int v12 = (char *)&v32 - v11;
  unsigned int v13 = &v4[OBJC_IVAR____TtC19HealthMedicationsUI9ColorCell_deselectionBehavior];
  v4[OBJC_IVAR____TtC19HealthMedicationsUI9ColorCell_deselectionBehavior] = 1;
  uint64_t v14 = *MEMORY[0x1E4F66478];
  uint64_t v15 = sub_1C2148620();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 104))(v13, v14, v15);
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI9ColorCell____lazy_storage___gradientView] = 0;
  int v16 = &v4[OBJC_IVAR____TtC19HealthMedicationsUI9ColorCell_item];
  *(_OWORD *)int v16 = 0u;
  *((_OWORD *)v16 + sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, 0, 1) = 0u;
  *((void *)v16 + 4) = 0;
  v32.receiver = v4;
  v32.super_class = ObjectType;
  id v17 = objc_msgSendSuper2(&v32, sel_initWithFrame_, a1, a2, a3, a4);
  sub_1C21499B0();
  uint64_t v18 = sub_1C21499D0();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v12, 0, 1, v18);
  MEMORY[0x1C8752FF0](v12);
  id v19 = objc_msgSend(v17, sel_contentView);
  id v20 = sub_1C21140D0();
  objc_msgSend(v19, sel_addSubview_, v20);

  id v21 = sub_1C21140D0();
  id v22 = objc_msgSend(v17, sel_contentView);
  objc_msgSend(v22, sel_bounds);
  CGFloat v24 = v23;
  CGFloat v26 = v25;
  CGFloat v28 = v27;
  CGFloat v30 = v29;

  v33.origin.x = v24;
  v33.origin.y = v26;
  v33.size.width = v28;
  v33.size.height = v30;
  CGRect v34 = CGRectInset(v33, 6.0, 6.0);
  objc_msgSend(v21, sel_setFrame_, v34.origin.x, v34.origin.y, v34.size.width, v34.size.height);

  return v17;
}

void sub_1C21143FC()
{
  v33.receiver = v0;
  v33.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v33, sel_layoutSubviews);
  id v1 = objc_msgSend(v0, sel_contentView);
  id v2 = objc_msgSend(v1, sel_layer);

  id v3 = objc_msgSend(v0, sel_contentView);
  objc_msgSend(v3, sel_bounds);
  CGFloat v5 = v4;
  CGFloat v7 = v6;
  CGFloat v9 = v8;
  CGFloat v11 = v10;

  v34.origin.x = v5;
  v34.origin.y = v7;
  v34.size.width = v9;
  v34.size.height = v11;
  objc_msgSend(v2, sel_setCornerRadius_, CGRectGetHeight(v34) * 0.5);

  id v12 = sub_1C21140D0();
  id v13 = objc_msgSend(v0, sel_contentView);
  objc_msgSend(v13, sel_bounds);
  CGFloat v15 = v14;
  CGFloat v17 = v16;
  CGFloat v19 = v18;
  CGFloat v21 = v20;

  v35.origin.x = v15;
  v35.origin.y = v17;
  v35.size.width = v19;
  v35.size.height = v21;
  CGRect v36 = CGRectInset(v35, 6.0, 6.0);
  objc_msgSend(v12, sel_setFrame_, v36.origin.x, v36.origin.y, v36.size.width, v36.size.height);

  id v22 = sub_1C21140D0();
  id v23 = objc_msgSend(v22, sel_layer);

  id v24 = objc_msgSend(v0, sel_contentView);
  objc_msgSend(v24, sel_bounds);
  CGFloat v26 = v25;
  CGFloat v28 = v27;
  CGFloat v30 = v29;
  CGFloat v32 = v31;

  v37.origin.x = v26;
  v37.origin.y = v28;
  v37.size.width = v30;
  v37.size.height = v32;
  CGRect v38 = CGRectInset(v37, 6.0, 6.0);
  objc_msgSend(v23, sel_setCornerRadius_, CGRectGetHeight(v38) * 0.5);
}

uint64_t sub_1C2114648()
{
  id v1 = v0;
  sub_1C2116CC4(0, &qword_1EA2C3FA0, (void (*)(uint64_t))sub_1C1F3C674);
  MEMORY[0x1F4188790](v2 - 8);
  double v4 = &v31[-v3];
  sub_1C1F3C674();
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  CGFloat v9 = &v31[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = (uint64_t)v1 + OBJC_IVAR____TtC19HealthMedicationsUI9ColorCell_item;
  swift_beginAccess();
  sub_1C2116C58(v10, (uint64_t)v32, (unint64_t *)&qword_1EBF0C300, (void (*)(uint64_t))sub_1C1F1CB5C);
  if (!v33)
  {
    sub_1C2116B34((uint64_t)v32, (unint64_t *)&qword_1EBF0C300, (void (*)(uint64_t))sub_1C1F1CB5C);
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v4, 1, 1, v6);
    return sub_1C2116B34((uint64_t)v4, &qword_1EA2C3FA0, (void (*)(uint64_t))sub_1C1F3C674);
  }
  sub_1C1F1CB5C();
  int v11 = swift_dynamicCast();
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v7 + 56))(v4, v11 ^ 1u, 1, v6);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v7 + 48))(v4, 1, v6) == 1) {
    return sub_1C2116B34((uint64_t)v4, &qword_1EA2C3FA0, (void (*)(uint64_t))sub_1C1F3C674);
  }
  sub_1C2116BF0((uint64_t)v4, (uint64_t)v9, (uint64_t (*)(void))sub_1C1F3C674);
  id v12 = objc_msgSend(v1, sel_contentView);
  id v13 = objc_msgSend(v12, sel_layer);

  double v14 = 3.0;
  if (!v9[*(int *)(v6 + 36)]) {
    double v14 = 0.0;
  }
  objc_msgSend(v13, sel_setBorderWidth_, v14);

  id v15 = objc_msgSend(v1, sel_contentView);
  id v16 = objc_msgSend(v15, sel_layer);

  id v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1618]), sel_initWithRed_green_blue_alpha_, 0.780392157, 0.780392157, 0.8, 1.0);
  id v18 = objc_msgSend(v17, sel_CGColor);

  objc_msgSend(v16, sel_setBorderColor_, v18);
  id v19 = sub_1C21140D0();
  double v20 = (void *)sub_1C2148E50();
  objc_msgSend(v19, sel_setBackgroundColor_, v20);

  id v21 = sub_1C21140D0();
  id v22 = objc_msgSend(v21, sel_layer);

  id v23 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1618]), sel_initWithRed_green_blue_alpha_, 0.780392157, 0.780392157, 0.8, 1.0);
  id v24 = objc_msgSend(v23, sel_CGColor);

  objc_msgSend(v22, sel_setBorderColor_, v24);
  id v25 = sub_1C21140D0();
  id v26 = objc_msgSend(v25, sel_layer);

  sub_1C1F758A4();
  double v27 = (void *)sub_1C2148E50();
  CGFloat v28 = (void *)sub_1C214B190();
  LOBYTE(v25) = sub_1C214B220();

  if (v25) {
    double v29 = 1.0;
  }
  else {
    double v29 = 0.0;
  }
  objc_msgSend(v26, sel_setBorderWidth_, v29);

  sub_1C2114B14();
  return sub_1C2116B90((uint64_t)v9, (uint64_t (*)(void))sub_1C1F3C674);
}

void sub_1C2114B14()
{
  id v1 = v0;
  swift_getObjectType();
  objc_msgSend(v0, sel_setIsAccessibilityElement_, 1);
  sub_1C2148E40();
  if (v2)
  {
    uint64_t v3 = (void *)sub_1C214A5B0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = 0;
  }
  objc_msgSend(v1, sel_setAccessibilityLabel_, v3);

  sub_1C214A5F0();
  sub_1C214B7C0();
  swift_bridgeObjectRelease();
  sub_1C1F3C674();
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  sub_1C214A6C0();
  sub_1C2113164(&qword_1EA2C7228, (void (*)(uint64_t))type metadata accessor for ColorCell);
  sub_1C21481D0();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  sub_1C214A6C0();
  id v4 = objc_msgSend(v1, sel_accessibilityLabel);
  if (v4)
  {
    uint64_t v5 = v4;
    sub_1C214A5F0();
  }
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v6 = (id)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_setAccessibilityIdentifier_, v6);
}

uint64_t sub_1C2114DAC()
{
  sub_1C2116CC4(0, &qword_1EA2C3FA0, (void (*)(uint64_t))sub_1C1F3C674);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = &v13[-v2];
  sub_1C1F3C674();
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = &v13[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = v0 + OBJC_IVAR____TtC19HealthMedicationsUI9ColorCell_item;
  swift_beginAccess();
  sub_1C2116C58(v9, (uint64_t)v14, (unint64_t *)&qword_1EBF0C300, (void (*)(uint64_t))sub_1C1F1CB5C);
  if (!v15)
  {
    sub_1C2116B34((uint64_t)v14, (unint64_t *)&qword_1EBF0C300, (void (*)(uint64_t))sub_1C1F1CB5C);
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v3, 1, 1, v5);
    goto LABEL_5;
  }
  sub_1C1F1CB5C();
  int v10 = swift_dynamicCast();
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v6 + 56))(v3, v10 ^ 1u, 1, v5);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v6 + 48))(v3, 1, v5) == 1)
  {
LABEL_5:
    sub_1C2116B34((uint64_t)v3, &qword_1EA2C3FA0, (void (*)(uint64_t))sub_1C1F3C674);
    return 0;
  }
  sub_1C2116BF0((uint64_t)v3, (uint64_t)v8, (uint64_t (*)(void))sub_1C1F3C674);
  uint64_t v11 = v8[*(int *)(v5 + 36)];
  sub_1C2116B90((uint64_t)v8, (uint64_t (*)(void))sub_1C1F3C674);
  return v11;
}

uint64_t sub_1C2115044()
{
  return type metadata accessor for ColorCell(0);
}

uint64_t sub_1C2115050@<X0>(uint64_t a1@<X8>)
{
  return sub_1C2116850(&OBJC_IVAR____TtC19HealthMedicationsUI9ColorCell_item, a1);
}

uint64_t sub_1C211505C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C21168DC(a1, a2, a3, &OBJC_IVAR____TtC19HealthMedicationsUI9ColorCell_item, (void (*)(uint64_t))sub_1C2114648);
}

uint64_t (*sub_1C211507C(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1C21150DC;
}

uint64_t sub_1C21150DC(uint64_t a1, char a2)
{
  return sub_1C21169E4(a1, a2, (uint64_t (*)(uint64_t))sub_1C2114648);
}

uint64_t sub_1C21150F4()
{
  return sub_1C2148480();
}

uint64_t sub_1C2115180@<X0>(uint64_t a1@<X8>)
{
  return sub_1C2116AC0(&OBJC_IVAR____TtC19HealthMedicationsUI9ColorCell_deselectionBehavior, a1);
}

id sub_1C211518C()
{
  uint64_t v1 = OBJC_IVAR____TtC19HealthMedicationsUI9ShapeCell____lazy_storage___shapeView;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI9ShapeCell____lazy_storage___shapeView);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI9ShapeCell____lazy_storage___shapeView);
  }
  else
  {
    uint64_t v4 = v0;
    id v5 = objc_msgSend(objc_allocWithZone((Class)sub_1C2148EF0()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
    sub_1C2148EE0();
    uint64_t v6 = *(void **)(v4 + v1);
    *(void *)(v4 + vsub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, 0, 1) = v5;
    id v3 = v5;

    uint64_t v2 = 0;
  }
  id v7 = v2;
  return v3;
}

id sub_1C2115220(double a1, double a2, double a3, double a4)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  sub_1C2116CC4(0, &qword_1EBF0C620, MEMORY[0x1E4FB0F28]);
  MEMORY[0x1F4188790](v10 - 8);
  id v12 = (char *)&v44 - v11;
  id v13 = &v4[OBJC_IVAR____TtC19HealthMedicationsUI9ShapeCell_deselectionBehavior];
  v4[OBJC_IVAR____TtC19HealthMedicationsUI9ShapeCell_deselectionBehavior] = 1;
  uint64_t v14 = *MEMORY[0x1E4F66478];
  uint64_t v15 = sub_1C2148620();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 104))(v13, v14, v15);
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI9ShapeCell____lazy_storage___shapeView] = 0;
  id v16 = &v4[OBJC_IVAR____TtC19HealthMedicationsUI9ShapeCell_item];
  *(_OWORD *)id v16 = 0u;
  *((_OWORD *)v16 + sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, 0, 1) = 0u;
  *((void *)v16 + 4) = 0;
  v44.receiver = v4;
  v44.super_class = ObjectType;
  id v17 = objc_msgSendSuper2(&v44, sel_initWithFrame_, a1, a2, a3, a4);
  id v18 = objc_msgSend(v17, sel_contentView);
  id v19 = objc_msgSend(v18, sel_layer);

  id v20 = objc_msgSend(v17, sel_contentView);
  objc_msgSend(v20, sel_bounds);
  CGFloat v22 = v21;
  CGFloat v24 = v23;
  CGFloat v26 = v25;
  CGFloat v28 = v27;

  v45.origin.x = v22;
  v45.origin.y = v24;
  v45.size.width = v26;
  v45.size.height = v28;
  objc_msgSend(v19, sel_setCornerRadius_, CGRectGetHeight(v45) * 0.5);

  id v29 = v17;
  sub_1C21499B0();
  uint64_t v30 = sub_1C21499D0();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v12, 0, 1, v30);
  MEMORY[0x1C8752FF0](v12);

  id v31 = objc_msgSend(v29, sel_contentView);
  id v32 = sub_1C211518C();
  objc_msgSend(v31, sel_addSubview_, v32);

  id v33 = sub_1C211518C();
  id v34 = objc_msgSend(v29, sel_contentView);
  objc_msgSend(v34, sel_bounds);
  CGFloat v36 = v35;
  CGFloat v38 = v37;
  CGFloat v40 = v39;
  CGFloat v42 = v41;

  v46.origin.x = v36;
  v46.origin.y = v38;
  v46.size.width = v40;
  v46.size.height = v42;
  CGRect v47 = CGRectInset(v46, 6.0, 6.0);
  objc_msgSend(v33, sel_setFrame_, v47.origin.x, v47.origin.y, v47.size.width, v47.size.height);

  return v29;
}

void sub_1C2115574(char *a1, uint64_t a2, void *a3, void *a4, void *a5, void *a6)
{
  uint64_t v10 = &a1[*a4];
  *uint64_t v10 = 1;
  uint64_t v11 = *MEMORY[0x1E4F66478];
  uint64_t v12 = sub_1C2148620();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 104))(v10, v11, v12);
  *(void *)&a1[*a5] = 0;
  id v13 = &a1[*a6];
  *((void *)v13 + 4) = 0;
  *(_OWORD *)id v13 = 0u;
  *((_OWORD *)v13 + sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, 0, 1) = 0u;
  id v14 = a3;

  sub_1C214B910();
  __break(1u);
}

void sub_1C211566C()
{
  v22.receiver = v0;
  v22.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v22, sel_layoutSubviews);
  id v1 = objc_msgSend(v0, sel_contentView);
  id v2 = objc_msgSend(v1, sel_layer);

  id v3 = objc_msgSend(v0, sel_contentView);
  objc_msgSend(v3, sel_bounds);
  CGFloat v5 = v4;
  CGFloat v7 = v6;
  CGFloat v9 = v8;
  CGFloat v11 = v10;

  v23.origin.x = v5;
  v23.origin.y = v7;
  v23.size.width = v9;
  v23.size.height = v11;
  objc_msgSend(v2, sel_setCornerRadius_, CGRectGetHeight(v23) * 0.5);

  id v12 = sub_1C211518C();
  id v13 = objc_msgSend(v0, sel_contentView);
  objc_msgSend(v13, sel_bounds);
  CGFloat v15 = v14;
  CGFloat v17 = v16;
  CGFloat v19 = v18;
  CGFloat v21 = v20;

  v24.origin.x = v15;
  v24.origin.y = v17;
  v24.size.width = v19;
  v24.size.height = v21;
  CGRect v25 = CGRectInset(v24, 6.0, 6.0);
  objc_msgSend(v12, sel_setFrame_, v25.origin.x, v25.origin.y, v25.size.width, v25.size.height);
}

uint64_t sub_1C2115820()
{
  uint64_t v1 = sub_1C21492D0();
  uint64_t v63 = *(void *)(v1 - 8);
  uint64_t v64 = v1;
  MEMORY[0x1F4188790](v1);
  unint64_t v60 = (char *)&v57 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1FDC3C0();
  uint64_t v4 = v3;
  MEMORY[0x1F4188790](v3);
  double v6 = (char *)&v57 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2116CC4(0, (unint64_t *)&qword_1EBF0B690, MEMORY[0x1E4F66C80]);
  uint64_t v8 = MEMORY[0x1F4188790](v7 - 8);
  uint64_t v61 = (uint64_t)&v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  unint64_t v62 = (char *)&v57 - v11;
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  double v14 = (char *)&v57 - v13;
  MEMORY[0x1F4188790](v12);
  double v16 = (char *)&v57 - v15;
  sub_1C2116CC4(0, &qword_1EA2C2CA8, (void (*)(uint64_t))sub_1C1F243F4);
  MEMORY[0x1F4188790](v17 - 8);
  CGFloat v19 = (char *)&v57 - v18;
  sub_1C1F243F4();
  uint64_t v21 = v20;
  uint64_t v22 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v20);
  CGRect v24 = (char *)&v57 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = (uint64_t)v0 + OBJC_IVAR____TtC19HealthMedicationsUI9ShapeCell_item;
  swift_beginAccess();
  sub_1C2116C58(v25, (uint64_t)v65, (unint64_t *)&qword_1EBF0C300, (void (*)(uint64_t))sub_1C1F1CB5C);
  if (!v66)
  {
    sub_1C2116B34((uint64_t)v65, (unint64_t *)&qword_1EBF0C300, (void (*)(uint64_t))sub_1C1F1CB5C);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v22 + 56))(v19, 1, 1, v21);
    return sub_1C2116B34((uint64_t)v19, &qword_1EA2C2CA8, (void (*)(uint64_t))sub_1C1F243F4);
  }
  sub_1C1F1CB5C();
  int v26 = swift_dynamicCast();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v19, v26 ^ 1u, 1, v21);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v19, 1, v21) == 1) {
    return sub_1C2116B34((uint64_t)v19, &qword_1EA2C2CA8, (void (*)(uint64_t))sub_1C1F243F4);
  }
  sub_1C2116BF0((uint64_t)v19, (uint64_t)v24, (uint64_t (*)(void))sub_1C1F243F4);
  int v27 = v24[*(int *)(v21 + 36)];
  id v28 = objc_msgSend(v0, sel_contentView);
  id v29 = objc_msgSend(v28, sel_layer);

  if (v27 == 1)
  {
    id v30 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1618]), sel_initWithRed_green_blue_alpha_, 0.780392157, 0.780392157, 0.8, 1.0);
    id v31 = objc_msgSend(v30, sel_CGColor);

    objc_msgSend(v29, sel_setBorderColor_, v31);
    id v32 = objc_msgSend(v0, sel_contentView);
    id v33 = objc_msgSend(v32, sel_layer);

    objc_msgSend(v33, sel_setBorderWidth_, 3.0);
  }
  else
  {
    id v35 = objc_msgSend(self, sel_secondarySystemFillColor);
    id v36 = objc_msgSend(v35, sel_CGColor);

    objc_msgSend(v29, sel_setBorderColor_, v36);
    id v37 = objc_msgSend(v0, sel_contentView);
    id v33 = objc_msgSend(v37, sel_layer);

    objc_msgSend(v33, sel_setBorderWidth_, 0.0);
  }

  BOOL v59 = v0;
  id v38 = sub_1C211518C();
  sub_1C2148EC0();

  MedicationShape.previewConfig.getter((uint64_t)v14);
  uint64_t v40 = v63;
  uint64_t v39 = v64;
  id v58 = *(void (**)(char *, void, uint64_t, uint64_t))(v63 + 56);
  v58(v14, 0, 1, v64);
  uint64_t v41 = (uint64_t)&v6[*(int *)(v4 + 48)];
  CGFloat v42 = (void (*)(uint64_t))MEMORY[0x1E4F66C80];
  sub_1C2116C58((uint64_t)v16, (uint64_t)v6, (unint64_t *)&qword_1EBF0B690, MEMORY[0x1E4F66C80]);
  id v43 = v42;
  uint64_t v44 = v39;
  sub_1C2116C58((uint64_t)v14, v41, (unint64_t *)&qword_1EBF0B690, v43);
  CGRect v45 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v40 + 48);
  if (v45((uint64_t)v6, 1, v39) != 1)
  {
    sub_1C2116C58((uint64_t)v6, (uint64_t)v62, (unint64_t *)&qword_1EBF0B690, MEMORY[0x1E4F66C80]);
    if (v45(v41, 1, v39) != 1)
    {
      uint64_t v49 = v63;
      id v50 = v60;
      (*(void (**)(char *, uint64_t, uint64_t))(v63 + 32))(v60, v41, v39);
      sub_1C2113164(&qword_1EA2C4BE8, MEMORY[0x1E4F66C80]);
      char v51 = sub_1C214A5A0();
      uint64_t v52 = *(void (**)(char *, uint64_t))(v49 + 8);
      v52(v50, v39);
      uint64_t v53 = (void (*)(uint64_t))MEMORY[0x1E4F66C80];
      sub_1C2116B34((uint64_t)v14, (unint64_t *)&qword_1EBF0B690, MEMORY[0x1E4F66C80]);
      sub_1C2116B34((uint64_t)v16, (unint64_t *)&qword_1EBF0B690, v53);
      v52(v62, v64);
      id v54 = v53;
      uint64_t v44 = v64;
      sub_1C2116B34((uint64_t)v6, (unint64_t *)&qword_1EBF0B690, v54);
      if (v51) {
        goto LABEL_16;
      }
LABEL_15:
      id v55 = sub_1C211518C();
      uint64_t v56 = v61;
      MedicationShape.previewConfig.getter(v61);
      v58((char *)v56, 0, 1, v44);
      sub_1C2148ED0();

      goto LABEL_16;
    }
    id v48 = (void (*)(uint64_t))MEMORY[0x1E4F66C80];
    sub_1C2116B34((uint64_t)v14, (unint64_t *)&qword_1EBF0B690, MEMORY[0x1E4F66C80]);
    sub_1C2116B34((uint64_t)v16, (unint64_t *)&qword_1EBF0B690, v48);
    (*(void (**)(char *, uint64_t))(v63 + 8))(v62, v39);
LABEL_13:
    sub_1C2116B90((uint64_t)v6, (uint64_t (*)(void))sub_1C1FDC3C0);
    goto LABEL_15;
  }
  CGRect v46 = (void (*)(uint64_t))MEMORY[0x1E4F66C80];
  sub_1C2116B34((uint64_t)v14, (unint64_t *)&qword_1EBF0B690, MEMORY[0x1E4F66C80]);
  CGRect v47 = v46;
  uint64_t v44 = v64;
  sub_1C2116B34((uint64_t)v16, (unint64_t *)&qword_1EBF0B690, v47);
  if (v45(v41, 1, v44) != 1) {
    goto LABEL_13;
  }
  sub_1C2116B34((uint64_t)v6, (unint64_t *)&qword_1EBF0B690, MEMORY[0x1E4F66C80]);
LABEL_16:
  sub_1C2116124();
  return sub_1C2116B90((uint64_t)v24, (uint64_t (*)(void))sub_1C1F243F4);
}

void sub_1C2116124()
{
  uint64_t v1 = v0;
  swift_getObjectType();
  objc_msgSend(v0, sel_setIsAccessibilityElement_, 1);
  sub_1C2148F30();
  if (v2)
  {
    uint64_t v3 = (void *)sub_1C214A5B0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = 0;
  }
  objc_msgSend(v1, sel_setAccessibilityLabel_, v3);

  sub_1C214A5F0();
  sub_1C214B7C0();
  swift_bridgeObjectRelease();
  sub_1C2113164(&qword_1EA2C4358, (void (*)(uint64_t))type metadata accessor for ShapeCell);
  sub_1C21481D0();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  sub_1C214A6C0();
  id v4 = objc_msgSend(v1, sel_accessibilityLabel);
  if (v4)
  {
    uint64_t v5 = v4;
    sub_1C214A5F0();
  }
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v6 = (id)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_setAccessibilityIdentifier_, v6);
}

uint64_t sub_1C2116428()
{
  sub_1C2116CC4(0, &qword_1EA2C2CA8, (void (*)(uint64_t))sub_1C1F243F4);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = &v13[-v2];
  sub_1C1F243F4();
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = &v13[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = v0 + OBJC_IVAR____TtC19HealthMedicationsUI9ShapeCell_item;
  swift_beginAccess();
  sub_1C2116C58(v9, (uint64_t)v14, (unint64_t *)&qword_1EBF0C300, (void (*)(uint64_t))sub_1C1F1CB5C);
  if (!v15)
  {
    sub_1C2116B34((uint64_t)v14, (unint64_t *)&qword_1EBF0C300, (void (*)(uint64_t))sub_1C1F1CB5C);
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v3, 1, 1, v5);
    goto LABEL_5;
  }
  sub_1C1F1CB5C();
  int v10 = swift_dynamicCast();
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v6 + 56))(v3, v10 ^ 1u, 1, v5);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v6 + 48))(v3, 1, v5) == 1)
  {
LABEL_5:
    sub_1C2116B34((uint64_t)v3, &qword_1EA2C2CA8, (void (*)(uint64_t))sub_1C1F243F4);
    return 0;
  }
  sub_1C2116BF0((uint64_t)v3, (uint64_t)v8, (uint64_t (*)(void))sub_1C1F243F4);
  uint64_t v11 = v8[*(int *)(v5 + 36)];
  sub_1C2116B90((uint64_t)v8, (uint64_t (*)(void))sub_1C1F243F4);
  return v11;
}

id sub_1C21166A0()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1C21166F4(uint64_t a1, uint64_t a2, void *a3, void *a4, void *a5)
{
  uint64_t v8 = a1 + *a3;
  uint64_t v9 = sub_1C2148620();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);

  return sub_1C2116B34(a1 + *a5, (unint64_t *)&qword_1EBF0C300, (void (*)(uint64_t))sub_1C1F1CB5C);
}

uint64_t sub_1C2116798()
{
  return type metadata accessor for ShapeCell(0);
}

uint64_t sub_1C21167A0()
{
  uint64_t result = sub_1C2148620();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1C2116844@<X0>(uint64_t a1@<X8>)
{
  return sub_1C2116850(&OBJC_IVAR____TtC19HealthMedicationsUI9ShapeCell_item, a1);
}

uint64_t sub_1C2116850@<X0>(void *a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *a1;
  swift_beginAccess();
  return sub_1C2116C58(v4, a2, (unint64_t *)&qword_1EBF0C300, (void (*)(uint64_t))sub_1C1F1CB5C);
}

uint64_t sub_1C21168BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C21168DC(a1, a2, a3, &OBJC_IVAR____TtC19HealthMedicationsUI9ShapeCell_item, (void (*)(uint64_t))sub_1C2115820);
}

uint64_t sub_1C21168DC(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void (*a5)(uint64_t))
{
  uint64_t v8 = v5 + *a4;
  swift_beginAccess();
  sub_1C1F32DDC(a1, v8);
  uint64_t v9 = swift_endAccess();
  a5(v9);
  return sub_1C2116B34(a1, (unint64_t *)&qword_1EBF0C300, (void (*)(uint64_t))sub_1C1F1CB5C);
}

uint64_t (*sub_1C211696C(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1C21169CC;
}

uint64_t sub_1C21169CC(uint64_t a1, char a2)
{
  return sub_1C21169E4(a1, a2, (uint64_t (*)(uint64_t))sub_1C2115820);
}

uint64_t sub_1C21169E4(uint64_t a1, char a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result = swift_endAccess();
  if ((a2 & 1) == 0) {
    return a3(result);
  }
  return result;
}

uint64_t sub_1C2116A28()
{
  return sub_1C2148480();
}

uint64_t sub_1C2116AB4@<X0>(uint64_t a1@<X8>)
{
  return sub_1C2116AC0(&OBJC_IVAR____TtC19HealthMedicationsUI9ShapeCell_deselectionBehavior, a1);
}

uint64_t sub_1C2116AC0@<X0>(void *a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t v4 = *v2 + *a1;
  uint64_t v5 = sub_1C2148620();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v6(a2, v4, v5);
}

uint64_t sub_1C2116B34(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1C2116CC4(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1C2116B90(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C2116BF0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C2116C58(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_1C2116CC4(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

void sub_1C2116CC4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C214B4F0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

Swift::Bool __swiftcall PregnancyTrimesterLactationRatings.isCritical(for:)(HealthMedicationsUI::MedicationSecondaryEducationType a1)
{
  if (*(unsigned char *)a1 == 1) {
    return sub_1C21494B0();
  }
  else {
    return sub_1C21494C0();
  }
}

Swift::Bool __swiftcall PregnancyTrimesterLactationRatings.shouldIncludeMedication(for:importance:)(HealthMedicationsUI::MedicationSecondaryEducationType a1, HealthMedicationsUI::MedicationInformationImportance importance)
{
  char v2 = *(unsigned char *)importance;
  if (*(unsigned char *)a1 == 1) {
    char v3 = sub_1C21494B0();
  }
  else {
    char v3 = sub_1C21494C0();
  }
  return (v2 ^ v3) & 1;
}

uint64_t sub_1C2116D6C(uint64_t a1, uint64_t a2)
{
  char v2 = *(void **)(a1 + 8);
  char v3 = *(void **)(a2 + 8);
  sub_1C1F12718(0, (unint64_t *)&qword_1EA2C4AA0);
  if (sub_1C214B220())
  {
    if (v2)
    {
      if (v3)
      {
        sub_1C1F12718(0, &qword_1EA2C7608);
        id v4 = v3;
        id v5 = v2;
        char v6 = sub_1C214B220();

        if (v6) {
          return 1;
        }
      }
    }
    else if (!v3)
    {
      return 1;
    }
  }
  return 0;
}

id sub_1C2116E24()
{
  id result = objc_msgSend(self, sel_medicationDoseEventTypeForIdentifier_, *MEMORY[0x1E4F2A040]);
  if (!result) {
    __break(1u);
  }
  return result;
}

void *sub_1C2116E70()
{
  uint64_t v1 = *(void **)(v0 + 8);
  id v2 = v1;
  return v1;
}

void sub_1C2116E98(void *a1)
{
  sub_1C21172DC(a1, *v1);
}

uint64_t sub_1C2116EA8()
{
  return sub_1C21481D0();
}

uint64_t sub_1C2116EDC()
{
  id v1 = objc_msgSend(*v0, sel_semanticIdentifier);
  id v2 = objc_msgSend(v1, sel_description);
  sub_1C214A5F0();

  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  return 0x6574497472616843;
}

id sub_1C2116F88(uint64_t a1, void *a2, uint64_t a3, void *a4, void *a5, void *a6, void *a7, void *a8, void *a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  id v38 = a6;
  uint64_t v39 = a7;
  uint64_t v40 = a8;
  id v41 = a5;
  sub_1C2117C44();
  uint64_t v35 = sub_1C214A770();
  swift_bridgeObjectRelease();
  if (a3)
  {
    sub_1C1F12718(0, &qword_1EBF0C908);
    uint64_t v36 = sub_1C214A770();
    swift_bridgeObjectRelease();
    uint64_t v16 = a10[3];
    if (v16)
    {
LABEL_3:
      uint64_t v17 = __swift_project_boxed_opaque_existential_0(a10, v16);
      uint64_t v18 = *(void *)(v16 - 8);
      MEMORY[0x1F4188790](v17);
      uint64_t v20 = (char *)&v34 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v18 + 16))(v20);
      uint64_t v21 = sub_1C214BA70();
      (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v16);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)a10);
      goto LABEL_6;
    }
  }
  else
  {
    uint64_t v36 = 0;
    uint64_t v16 = a10[3];
    if (v16) {
      goto LABEL_3;
    }
  }
  uint64_t v21 = 0;
LABEL_6:
  uint64_t v22 = sub_1C2147CF0();
  uint64_t v23 = *(void *)(v22 - 8);
  CGRect v24 = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48))(a11, 1, v22) != 1)
  {
    CGRect v24 = (void *)sub_1C2147C40();
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(a11, v22);
  }
  if (a13)
  {
    sub_1C1F12718(0, &qword_1EBF0C908);
    sub_1C1F12718(0, &qword_1EA2C3628);
    sub_1C1F35D9C();
    uint64_t v25 = (void *)sub_1C214A500();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v25 = 0;
  }
  uint64_t v33 = v21;
  int v26 = v40;
  int v27 = v39;
  id v29 = (void *)v36;
  id v28 = v37;
  id v30 = (void *)v35;
  id v37 = a9;
  id v31 = v38;
  id v34 = objc_msgSend(v28, sel_initWithStackedDisplayTypes_primaryDisplayTypeStackIndex_stackedDisplayTypeHeights_healthStore_unitPreferenceController_dateCache_chartDataCacheController_selectedTimeScopeController_sampleTypeDateRangeController_initialXValue_currentCalendarOverride_options_timeScopeRanges_, v35, a2, v36, a4, v41, v38, v39, v40, a9, v33, v24, a12, v25);

  swift_unknownObjectRelease();
  return v34;
}

void sub_1C21172DC(void *a1, void *a2)
{
  id v60 = a2;
  char v3 = (void *)sub_1C21497F0();
  id v58 = (id)*(v3 - 1);
  id v59 = v3;
  MEMORY[0x1F4188790](v3);
  id v5 = (char *)&v54 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2117BE0(0, (unint64_t *)&unk_1EBF0B210, MEMORY[0x1E4F27CA0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v61 = (char *)&v54 - v7;
  id v62 = objc_msgSend(a1, sel_CHRRoomApplicationItems);
  id v8 = objc_msgSend(v62, sel_timeScopeController);
  objc_msgSend(v8, sel_setSelectedTimeScope_, 5);

  id v9 = _sSo18HKStackedBarSeriesC19HealthMedicationsUIE019makeMedicationEventC0AByFZ_0();
  id v10 = objc_msgSend(self, sel_standardNumericYAxisWithConfigurationOverrides_, 0);
  objc_msgSend(v9, sel_setYAxis_, v10);
  sub_1C1F12718(0, &qword_1EBF0C908);
  uint64_t v11 = (void *)sub_1C214B200();
  uint64_t v12 = (void *)sub_1C214B200();
  id v13 = objc_msgSend(self, sel_valueRangeWithMinValue_maxValue_, v11, v12);

  sub_1C1F4A510(MEMORY[0x1E4FBC860]);
  sub_1C1F12718(0, &qword_1EA2C3628);
  sub_1C1F35D9C();
  double v14 = (void *)sub_1C214A500();
  swift_bridgeObjectRelease();
  id v15 = objc_msgSend(self, sel_ruleWithDefaultAxisBounds_axisBoundsOverrides_, v13, v14);

  objc_msgSend(v9, sel_setAxisScalingRule_, v15);
  objc_msgSend(v9, sel_setIsCriticalForAutoscale_, 1);
  objc_msgSend(v9, sel_setInvertYAxis_, 0);
  uint64_t v16 = self;
  id v17 = objc_msgSend(a1, sel_healthStore);
  id v18 = objc_msgSend(v16, sel_sharedInstanceForHealthStore_, v17);

  if (v18)
  {
    id v19 = objc_msgSend(self, sel_medicationDoseEventType);
    id v20 = objc_msgSend(v18, sel_displayTypeForObjectType_, v19);

    if (v20)
    {
      id v21 = objc_allocWithZone((Class)type metadata accessor for MedicationChartDataFormatter());
      id v22 = v9;
      id v23 = v20;
      id v59 = v23;
      id v24 = objc_msgSend(v21, sel_init);
      id v25 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F67B30]), sel_initWithGraphSeries_baseDisplayType_valueFormatter_dataTypeCode_, v22, v23, v24, 273);

      id v56 = v22;
      id v26 = objc_allocWithZone((Class)type metadata accessor for MedicationChartDataSource());
      id v27 = v60;
      id v60 = v15;
      id v28 = v27;
      id v29 = v25;
      id v30 = MedicationChartDataSource.init(with:displayType:)(v28, v29);
      id v58 = v30;
      id v31 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F679C0]), sel_init);
      objc_msgSend(v31, sel_setDataSource_, v30);
      id v32 = objc_msgSend(self, sel_sharedOperationManager);
      objc_msgSend(v31, sel_setOperationManager_, v32);

      id v33 = v31;
      id v57 = v10;
      id v34 = v62;
      id v35 = objc_msgSend(v62, sel_chartDataCacheController);
      objc_msgSend(v35, sel_addCustomChartCache_forDisplayType_, v33, v29);

      id v36 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F679B0]), sel_init);
      objc_msgSend(v36, sel_setChartCache_, v33);
      objc_msgSend(v22, sel_setDataSource_, v36);
      sub_1C2117BE0(0, &qword_1EA2C75E8, (uint64_t (*)(uint64_t))sub_1C2117C44, MEMORY[0x1E4FBBE00]);
      uint64_t v37 = swift_allocObject();
      *(_OWORD *)(v37 + 16) = xmmword_1C214FCD0;
      sub_1C1F0ED28();
      uint64_t v38 = swift_allocObject();
      *(_OWORD *)(v38 + 16) = xmmword_1C214E170;
      *(void *)(v38 + 32) = v29;
      v63[0] = v38;
      sub_1C214A7A0();
      *(void *)(v37 + 32) = v63[0];
      id v55 = v29;
      id v54 = objc_msgSend(a1, sel_healthStore);
      id v39 = objc_msgSend(v34, sel_unitController);
      id v40 = objc_msgSend(v34, sel_dateCache);
      id v41 = objc_msgSend(v34, sel_chartDataCacheController);
      id v42 = objc_msgSend(v34, sel_timeScopeController);
      id v43 = objc_msgSend(v34, sel_sampleDateRangeController);
      v63[3] = sub_1C2147AC0();
      __swift_allocate_boxed_opaque_existential_1(v63);
      sub_1C2147AB0();
      uint64_t v44 = sub_1C2147CF0();
      uint64_t v45 = (uint64_t)v61;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 56))(v61, 1, 1, v44);
      id v46 = objc_allocWithZone(MEMORY[0x1E4F67B48]);
      sub_1C2116F88(v37, 0, 0, v54, v39, v40, v41, v42, v43, v63, v45, 0x2000, 0);
    }
    else
    {
      sub_1C21497D0();
      CGRect v47 = sub_1C21497E0();
      os_log_type_t v48 = sub_1C214ABD0();
      if (os_log_type_enabled(v47, v48))
      {
        uint64_t v49 = (uint8_t *)swift_slowAlloc();
        uint64_t v50 = swift_slowAlloc();
        id v60 = v15;
        uint64_t v51 = v50;
        *(_DWORD *)uint64_t v49 = 136446210;
        v63[0] = v50;
        uint64_t v64 = &type metadata for MedicationChartItem;
        sub_1C2117BA4();
        uint64_t v52 = sub_1C214A610();
        uint64_t v64 = (ValueMetadata *)sub_1C1F6FD54(v52, v53, v63);
        sub_1C214B530();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1C1F0B000, v47, v48, "[%{public}s] DisplayType not found for medication dose event type", v49, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C8754730](v51, -1, -1);
        MEMORY[0x1C8754730](v49, -1, -1);
      }
      else
      {
      }
      (*((void (**)(char *, id))v58 + 1))(v5, v59);
    }
  }
  else
  {
    __break(1u);
  }
}

unint64_t sub_1C2117BA4()
{
  unint64_t result = qword_1EA2C75E0;
  if (!qword_1EA2C75E0)
  {
    unint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA2C75E0);
  }
  return result;
}

void sub_1C2117BE0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1C2117C44()
{
  if (!qword_1EA2C75F0)
  {
    sub_1C1F12718(255, &qword_1EA2C75F8);
    unint64_t v0 = sub_1C214A830();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C75F0);
    }
  }
}

ValueMetadata *type metadata accessor for MedicationChartItem()
{
  return &type metadata for MedicationChartItem;
}

unint64_t sub_1C2117CC0()
{
  unint64_t result = qword_1EA2C7600;
  if (!qword_1EA2C7600)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C7600);
  }
  return result;
}

uint64_t type metadata accessor for MedmojiPreviewDataSource()
{
  uint64_t result = qword_1EA2C7618;
  if (!qword_1EA2C7618) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1C2117D60()
{
  sub_1C2118920(319, (unint64_t *)&qword_1EBF0B690, MEMORY[0x1E4F66C80], MEMORY[0x1E4FBB718]);
  if (v0 <= 0x3F) {
    swift_initClassMetadata2();
  }
}

uint64_t sub_1C2117E38(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1C2147B20();
  uint64_t v32 = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2118920(0, (unint64_t *)&qword_1EBF0B690, MEMORY[0x1E4F66C80], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v8 - 8);
  id v10 = (char *)&v30 - v9;
  uint64_t v11 = v2 + qword_1EA2C83C0;
  uint64_t v12 = sub_1C21492D0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
  *(void *)(v2 + qword_1EA2C761sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = a1;
  swift_retain();
  id v13 = a1;
  _sSo29HKMedicationUserDomainConceptC19HealthMedicationsUIE7medmoji0eF10Experience29MedicationVisualizationConfigVSgvg_0();
  swift_beginAccess();
  sub_1C200700C((uint64_t)v10, v11);
  swift_endAccess();
  swift_release();
  v33[0] = 0;
  v33[1] = 0xE000000000000000;
  sub_1C214B7C0();
  swift_bridgeObjectRelease();
  strcpy((char *)v33, "MutableArray<");
  HIWORD(v33[1]) = -4864;
  sub_1C2147B10();
  sub_1C2147AD0();
  id v31 = *(void (**)(char *, uint64_t))(v5 + 8);
  v31(v7, v4);
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  sub_1C214A6C0();
  uint64_t v14 = sub_1C2148590();
  id v15 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
  sub_1C2118920(0, (unint64_t *)&qword_1EA2C2DD0, MEMORY[0x1E4F66468], MEMORY[0x1E4FBBE00]);
  uint64_t v16 = *(void *)(sub_1C2148540() - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_1C214FCD0;
  unint64_t v30 = v18 + v17;
  sub_1C2118920(0, (unint64_t *)&qword_1EBF0C958, (uint64_t (*)(uint64_t))sub_1C1F1CB5C, v15);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_1C214FCC0;
  uint64_t v20 = v14 + qword_1EA2C83C0;
  swift_beginAccess();
  sub_1C1F64A60(v20, (uint64_t)v10);
  uint64_t v21 = swift_allocObject();
  swift_weakInit();
  uint64_t v22 = type metadata accessor for MedicationAvatarItem();
  *(void *)(v19 + 56) = v22;
  *(void *)(v19 + 64) = sub_1C21189C4(&qword_1EA2C7640, (void (*)(uint64_t))type metadata accessor for MedicationAvatarItem);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v19 + 32));
  sub_1C1F4DB28((uint64_t)v10, (uint64_t)boxed_opaque_existential_1);
  id v24 = (uint64_t (**)(uint64_t, uint64_t))((char *)boxed_opaque_existential_1 + *(int *)(v22 + 20));
  *id v24 = sub_1C21189BC;
  v24[1] = (uint64_t (*)(uint64_t, uint64_t))v21;
  swift_retain();
  swift_retain();
  sub_1C2147B10();
  id v25 = (uint64_t *)((char *)boxed_opaque_existential_1 + *(int *)(v22 + 28));
  type metadata accessor for MedicationAvatarCell();
  sub_1C21189C4(&qword_1EA2C7630, (void (*)(uint64_t))type metadata accessor for MedicationAvatarCell);
  *id v25 = sub_1C21481D0();
  v25[1] = v26;
  swift_release();
  *(void *)(v19 + 96) = &type metadata for MedicationDetailItem;
  *(void *)(v19 + 104) = sub_1C2118A0C();
  *(void *)(v19 + 72) = v13;
  type metadata accessor for MedicationDetailCell();
  sub_1C21189C4(&qword_1EA2C7638, (void (*)(uint64_t))type metadata accessor for MedicationDetailCell);
  id v27 = v13;
  *(void *)(v19 + 8sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = sub_1C21481D0();
  *(void *)(v19 + 88) = v28;
  sub_1C2147B10();
  sub_1C2147AD0();
  v31(v7, v32);
  sub_1C2148520();
  sub_1C21485B0();
  swift_release();
  swift_bridgeObjectRelease();

  return v14;
}

uint64_t sub_1C21183F4(uint64_t a1, uint64_t a2)
{
  sub_1C2118920(0, (unint64_t *)&qword_1EBF0B690, MEMORY[0x1E4F66C80], MEMORY[0x1E4FBB718]);
  uint64_t v4 = MEMORY[0x1F4188790](v3 - 8);
  uint64_t v6 = &v14[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = &v14[-v7];
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v10 = result;
    uint64_t v11 = sub_1C21492D0();
    uint64_t v12 = *(void *)(v11 - 8);
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v12 + 16))(v8, a2, v11);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v12 + 56))(v8, 0, 1, v11);
    sub_1C1F4DB28((uint64_t)v8, (uint64_t)v6);
    uint64_t v13 = v10 + qword_1EA2C83C0;
    swift_beginAccess();
    sub_1C200700C((uint64_t)v6, v13);
    swift_endAccess();
    return swift_release();
  }
  return result;
}

void sub_1C21185C0()
{
}

uint64_t sub_1C21185F0()
{
  uint64_t v1 = v0 + qword_1EA2C83C0;

  return sub_1C1F4CCB0(v1);
}

uint64_t sub_1C2118630()
{
  uint64_t v0 = sub_1C2148610();

  sub_1C1F4CCB0(v0 + qword_1EA2C83C0);

  return swift_deallocClassInstance();
}

uint64_t sub_1C21186B4()
{
  return type metadata accessor for MedmojiPreviewDataSource();
}

uint64_t sub_1C21186BC()
{
  uint64_t v0 = sub_1C2148710();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2148690();
  id v4 = objc_msgSend(self, sel_systemBackgroundColor);
  sub_1C21486A0();
  sub_1C21486B0();
  uint64_t v5 = sub_1C2148700();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v5;
}

uint64_t sub_1C21187BC()
{
  return sub_1C214ACC0();
}

uint64_t sub_1C211887C()
{
  return sub_1C2148B80();
}

uint64_t sub_1C21188D8()
{
  return sub_1C21189C4(&qword_1EA2C7628, (void (*)(uint64_t))type metadata accessor for MedmojiPreviewDataSource);
}

void sub_1C2118920(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C2118984()
{
  swift_weakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C21189BC(uint64_t a1, uint64_t a2)
{
  return sub_1C21183F4(a1, a2);
}

uint64_t sub_1C21189C4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C2118A0C()
{
  unint64_t result = qword_1EA2C7648;
  if (!qword_1EA2C7648)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C7648);
  }
  return result;
}

void sub_1C2118A6C()
{
  id v0 = objc_msgSend(self, sel_defaultWorkspace);
  if (v0)
  {
    uint64_t v1 = v0;
    uint64_t v2 = (void *)sub_1C2147840();
    sub_1C1F49F60(MEMORY[0x1E4FBC860]);
    id v3 = (id)sub_1C214A500();
    swift_bridgeObjectRelease();
    objc_msgSend(v1, sel_openSensitiveURL_withOptions_, v2, v3);
  }
}

uint64_t MedicationsTapToRadar.deinit()
{
  return v0;
}

uint64_t MedicationsTapToRadar.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

void _s19HealthMedicationsUI0B10TapToRadarC15promptBeforeTTR7message14viewController6actionySS_So06UIViewL0CyyctFZ_0(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  swift_bridgeObjectRetain();
  unint64_t v8 = (void *)sub_1C214A5B0();
  uint64_t v9 = (void *)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  id v10 = objc_msgSend(self, sel_alertControllerWithTitle_message_preferredStyle_, v8, v9, 1);

  uint64_t v11 = (void *)sub_1C214A5B0();
  uint64_t v12 = self;
  id v13 = objc_msgSend(v12, sel_actionWithTitle_style_handler_, v11, 1, 0);

  objc_msgSend(v10, sel_addAction_, v13);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a4;
  *(void *)(v14 + 24) = a5;
  swift_retain();
  id v15 = (void *)sub_1C214A5B0();
  v18[4] = sub_1C1F60618;
  void v18[5] = v14;
  v18[0] = MEMORY[0x1E4F143A8];
  v18[1] = 1107296256;
  void v18[2] = sub_1C203D9F8;
  void v18[3] = &block_descriptor_31;
  uint64_t v16 = _Block_copy(v18);
  swift_release();
  id v17 = objc_msgSend(v12, sel_actionWithTitle_style_handler_, v15, 0, v16);
  _Block_release(v16);

  objc_msgSend(v10, sel_addAction_, v17);
  objc_msgSend(a3, sel_presentViewController_animated_completion_, v10, 1, 0);
}

uint64_t _s19HealthMedicationsUI0B10TapToRadarC19medicationsTracking14viewControllerySo06UIViewJ0CSg_tFZ_0(void *a1)
{
  uint64_t v2 = sub_1C2147870();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  uint64_t v5 = MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  unint64_t v8 = (char *)&v21 - v7;
  uint64_t v9 = self;
  id v10 = (void *)sub_1C214A5B0();
  uint64_t v11 = (void *)sub_1C214A5B0();
  id v12 = objc_msgSend(v9, sel_hk_tapToRadarURLForBundleID_component_title_description_classification_reproducibility_keywords_autoDiagnostics_attachments_collaborationContactHandles_diagnosticExtensionOptions_, 0, 1330752, v10, v11, 7, 0, 0, 3, 0, 0, 1);

  sub_1C2147850();
  if (HKShowSensitiveLogItems() && a1)
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v8, v2);
    unint64_t v13 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
    uint64_t v14 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v14 + v13, v6, v2);
    id v15 = a1;
    _s19HealthMedicationsUI0B10TapToRadarC15promptBeforeTTR7message14viewController6actionySS_So06UIViewL0CyyctFZ_0(0x10000000000000D2, 0x80000001C216C4C0, v15, (uint64_t)sub_1C2119430, v14);

    swift_release();
  }
  else
  {
    id v16 = objc_msgSend(self, sel_defaultWorkspace);
    if (v16)
    {
      id v17 = v16;
      uint64_t v18 = (void *)sub_1C2147840();
      sub_1C1F49F60(MEMORY[0x1E4FBC860]);
      uint64_t v19 = (void *)sub_1C214A500();
      swift_bridgeObjectRelease();
      objc_msgSend(v17, sel_openSensitiveURL_withOptions_, v18, v19);
    }
  }
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v8, v2);
}

uint64_t _s19HealthMedicationsUI0B10TapToRadarC16drugInteractions14viewControllerySo06UIViewJ0C_tFZ_0(void *a1)
{
  uint64_t v2 = sub_1C2147870();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  uint64_t v5 = MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  unint64_t v8 = (char *)&v20 - v7;
  uint64_t v9 = self;
  id v10 = (void *)sub_1C214A5B0();
  uint64_t v11 = (void *)sub_1C214A5B0();
  id v12 = objc_msgSend(v9, sel_hk_tapToRadarURLForBundleID_component_title_description_classification_reproducibility_keywords_autoDiagnostics_attachments_collaborationContactHandles_diagnosticExtensionOptions_, 0, 1330752, v10, v11, 7, 0, 0, 2, 0, 0, 1);

  sub_1C2147850();
  if (HKShowSensitiveLogItems())
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v8, v2);
    unint64_t v13 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
    uint64_t v14 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v14 + v13, v6, v2);
    _s19HealthMedicationsUI0B10TapToRadarC15promptBeforeTTR7message14viewController6actionySS_So06UIViewL0CyyctFZ_0(0x10000000000000D2, 0x80000001C216C4C0, a1, (uint64_t)sub_1C2119430, v14);
    swift_release();
  }
  else
  {
    id v15 = objc_msgSend(self, sel_defaultWorkspace);
    if (v15)
    {
      id v16 = v15;
      id v17 = (void *)sub_1C2147840();
      sub_1C1F49F60(MEMORY[0x1E4FBC860]);
      uint64_t v18 = (void *)sub_1C214A500();
      swift_bridgeObjectRelease();
      objc_msgSend(v16, sel_openSensitiveURL_withOptions_, v17, v18);
    }
  }
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v8, v2);
}

uint64_t type metadata accessor for MedicationsTapToRadar()
{
  return self;
}

uint64_t method lookup function for MedicationsTapToRadar(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MedicationsTapToRadar);
}

uint64_t sub_1C21193F4()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t objectdestroy_4Tm_0()
{
  uint64_t v1 = sub_1C2147870();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x1F4186498](v0, v5, v6);
}

void sub_1C21194C8()
{
}

void sub_1C211951C(double a1, uint64_t a2, uint64_t a3)
{
  if (!a3) {
    return;
  }
  id v5 = objc_allocWithZone(MEMORY[0x1E4FB0848]);
  swift_bridgeObjectRetain();
  id v6 = objc_msgSend(v5, sel_init);
  objc_msgSend(v6, sel_setLineSpacing_, a1);
  objc_msgSend(v6, sel_setAlignment_, objc_msgSend(v3, sel_textAlignment));
  id v18 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28E48]), sel_init);
  id v7 = objc_msgSend(v3, sel_attributedText);

  if (v7)
  {
    swift_bridgeObjectRelease();
    id v8 = objc_msgSend(v3, sel_attributedText);
    if (!v8)
    {
      __break(1u);
      return;
    }
    id v9 = v8;
    objc_msgSend(v18, sel_appendAttributedString_, v8);
  }
  else
  {
    id v10 = objc_msgSend(v3, sel_font);
    if (!v10)
    {
      swift_bridgeObjectRelease();
      goto LABEL_9;
    }
    uint64_t v11 = v10;
    id v12 = objc_allocWithZone(MEMORY[0x1E4F28E48]);
    unint64_t v13 = (void *)sub_1C214A5B0();
    swift_bridgeObjectRelease();
    id v14 = objc_msgSend(v12, sel_initWithString_, v13);

    objc_msgSend(v18, sel_appendAttributedString_, v14);
    uint64_t v15 = *MEMORY[0x1E4FB06F8];
    id v9 = v11;
    objc_msgSend(v18, sel_addAttribute_value_range_, v15, v9, 0, objc_msgSend(v18, sel_length));
  }
  uint64_t v16 = *MEMORY[0x1E4FB0738];
  id v17 = v6;
  objc_msgSend(v18, sel_addAttribute_value_range_, v16, v17, 0, objc_msgSend(v18, sel_length));

  objc_msgSend(v3, sel_setAttributedText_, v18);
LABEL_9:
}

uint64_t sub_1C21197B4()
{
  sub_1C211BE1C(0, &qword_1EBF0C7E8, MEMORY[0x1E4FBCC28], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v0 - 8);
  id v35 = (char *)&v27 - v1;
  sub_1C2006250();
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  id v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C211BF18();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v28 = v7;
  uint64_t v29 = v8;
  MEMORY[0x1F4188790](v7);
  id v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C211BFB4();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v31 = v11;
  uint64_t v32 = v12;
  MEMORY[0x1F4188790](v11);
  id v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C211C048();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v33 = v15;
  uint64_t v34 = v16;
  MEMORY[0x1F4188790](v15);
  unint64_t v30 = (char *)&v27 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  id v18 = (void *)sub_1C2149730();
  swift_release();
  id v36 = v18;
  sub_1C20C6D34();
  sub_1C1F49748(0, (unint64_t *)&qword_1EBF0C790, (unint64_t *)&qword_1EBF0C8C0, 0x1E4F66B80, MEMORY[0x1E4FBB320]);
  sub_1C211C148((unint64_t *)&qword_1EBF0C688, (void (*)(uint64_t))sub_1C20C6D34);
  sub_1C2149FD0();
  swift_release();
  swift_retain();
  sub_1C2149CF0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  sub_1C211C148(&qword_1EA2C76C0, (void (*)(uint64_t))sub_1C211BF18);
  uint64_t v19 = v28;
  sub_1C214A0D0();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v10, v19);
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0CB10);
  id v36 = (id)sub_1C214AD80();
  uint64_t v20 = sub_1C214AD20();
  uint64_t v21 = (uint64_t)v35;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v35, 1, 1, v20);
  sub_1C211C148(&qword_1EA2C76D0, (void (*)(uint64_t))sub_1C211BFB4);
  sub_1C1F43FD4();
  id v23 = v30;
  uint64_t v22 = v31;
  sub_1C214A0A0();
  sub_1C1F441C8(v21);

  (*(void (**)(char *, uint64_t))(v32 + 8))(v14, v22);
  sub_1C211C148(&qword_1EA2C76D8, (void (*)(uint64_t))sub_1C211C048);
  uint64_t v24 = v33;
  uint64_t v25 = sub_1C2149FC0();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v23, v24);
  return v25;
}

uint64_t sub_1C2119D50()
{
  sub_1C211BE1C(0, &qword_1EBF0C7E8, MEMORY[0x1E4FBCC28], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v0 - 8);
  id v35 = (char *)&v27 - v1;
  sub_1C2006250();
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  id v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C211BF18();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v28 = v7;
  uint64_t v29 = v8;
  MEMORY[0x1F4188790](v7);
  id v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C211BFB4();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v31 = v11;
  uint64_t v32 = v12;
  MEMORY[0x1F4188790](v11);
  id v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C211C048();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v33 = v15;
  uint64_t v34 = v16;
  MEMORY[0x1F4188790](v15);
  unint64_t v30 = (char *)&v27 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  id v18 = (void *)sub_1C2149730();
  swift_release();
  id v36 = v18;
  sub_1C20C6D34();
  sub_1C1F49748(0, (unint64_t *)&qword_1EBF0C790, (unint64_t *)&qword_1EBF0C8C0, 0x1E4F66B80, MEMORY[0x1E4FBB320]);
  sub_1C211C148((unint64_t *)&qword_1EBF0C688, (void (*)(uint64_t))sub_1C20C6D34);
  sub_1C2149FD0();
  swift_release();
  swift_retain();
  sub_1C2149CF0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  sub_1C211C148(&qword_1EA2C76C0, (void (*)(uint64_t))sub_1C211BF18);
  uint64_t v19 = v28;
  sub_1C214A0D0();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v10, v19);
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0CB10);
  id v36 = (id)sub_1C214AD80();
  uint64_t v20 = sub_1C214AD20();
  uint64_t v21 = (uint64_t)v35;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v35, 1, 1, v20);
  sub_1C211C148(&qword_1EA2C76D0, (void (*)(uint64_t))sub_1C211BFB4);
  sub_1C1F43FD4();
  id v23 = v30;
  uint64_t v22 = v31;
  sub_1C214A0A0();
  sub_1C1F441C8(v21);

  (*(void (**)(char *, uint64_t))(v32 + 8))(v14, v22);
  sub_1C211C148(&qword_1EA2C76D8, (void (*)(uint64_t))sub_1C211C048);
  uint64_t v24 = v33;
  uint64_t v25 = sub_1C2149FC0();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v23, v24);
  return v25;
}

uint64_t sub_1C211A2E0(unint64_t a1, uint64_t a2)
{
  if (a1 >> 62) {
    goto LABEL_17;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v4; uint64_t v4 = sub_1C214B930())
  {
    sub_1C1F12718(0, (unint64_t *)&qword_1EA2C4AA0);
    if ((a1 & 0xC000000000000001) != 0)
    {
      uint64_t v5 = 0;
      while (1)
      {
        MEMORY[0x1C8753960](v5, a1);
        uint64_t v6 = v5 + 1;
        if (__OFADD__(v5, 1)) {
          break;
        }
        id v7 = *(id *)(a2 + 24);
        char v8 = sub_1C214B220();
        swift_unknownObjectRelease();

        if (v8) {
          goto LABEL_14;
        }
        ++v5;
        if (v6 == v4) {
          goto LABEL_13;
        }
      }
      __break(1u);
    }
    else
    {
      uint64_t v9 = 0;
      while (1)
      {
        uint64_t v10 = v9 + 1;
        if (__OFADD__(v9, 1)) {
          break;
        }
        uint64_t v11 = *(void **)(a2 + 24);
        id v12 = *(id *)(a1 + 8 * v9 + 32);
        id v13 = v11;
        char v14 = sub_1C214B220();

        if (v14)
        {
LABEL_14:
          swift_bridgeObjectRelease();
          return 1;
        }
        ++v9;
        if (v10 == v4) {
          goto LABEL_13;
        }
      }
    }
    __break(1u);
LABEL_17:
    swift_bridgeObjectRetain();
  }
LABEL_13:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1C211A450(uint64_t (*a1)(id *), uint64_t a2, unint64_t a3)
{
  if (a3 >> 62) {
    goto LABEL_16;
  }
  uint64_t v5 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v5; uint64_t v5 = sub_1C214B930())
  {
    uint64_t v6 = 4;
    while (1)
    {
      id v7 = (a3 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1C8753960](v6 - 4, a3) : *(id *)(a3 + 8 * v6);
      char v8 = v7;
      uint64_t v9 = v6 - 3;
      if (__OFADD__(v6 - 4, 1)) {
        break;
      }
      id v15 = v7;
      char v10 = a1(&v15);
      if (v3)
      {
        swift_bridgeObjectRelease();

        return v12 & 1;
      }
      char v11 = v10;

      if (v11)
      {
        swift_bridgeObjectRelease();
        char v12 = 1;
        return v12 & 1;
      }
      ++v6;
      if (v9 == v5) {
        goto LABEL_11;
      }
    }
    __break(1u);
LABEL_16:
    swift_bridgeObjectRetain();
  }
LABEL_11:
  swift_bridgeObjectRelease();
  char v12 = 0;
  return v12 & 1;
}

uint64_t sub_1C211A588()
{
  if (*(void *)(v0 + 56))
  {
    uint64_t v1 = *(void *)(v0 + 56);
  }
  else
  {
    uint64_t v2 = v0;
    uint64_t v3 = *(void **)(v0 + 24);
    sub_1C1F4986C();
    swift_allocObject();
    id v4 = v3;
    uint64_t v1 = sub_1C2149EB0();
    *(void *)(v2 + 56) = v1;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v1;
}

void *sub_1C211A614()
{
  uint64_t v1 = v0;
  sub_1C211BDA8(0, (unint64_t *)&qword_1EA2C69F0, MEMORY[0x1E4FBBE00]);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1C214FCC0;
  uint64_t v3 = (void *)sub_1C211A588();
  id v4 = (void *)v0[4];
  type metadata accessor for RelatedCHRRecordsDataSource();
  swift_allocObject();
  id v5 = v4;
  uint64_t v6 = RelatedCHRRecordsDataSource.init(with:healthStore:)(v3, v5);
  uint64_t v7 = sub_1C211C148(&qword_1EA2C7670, (void (*)(uint64_t))type metadata accessor for RelatedCHRRecordsDataSource);
  *(void *)(v2 + 32) = v6;
  *(void *)(v2 + 4sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = v7;
  uint64_t v8 = sub_1C211A588();
  uint64_t v9 = v0[2];
  uint64_t v10 = v0[5];
  type metadata accessor for OptionsDataSource();
  swift_allocObject();
  id v62 = v5;
  swift_retain();
  swift_retain();
  uint64_t v11 = OptionsDataSource.init(with:listManager:healthStore:analyticsManager:)(v8, v9, v62, v10);
  uint64_t v12 = sub_1C211C148(&qword_1EA2C7678, (void (*)(uint64_t))type metadata accessor for OptionsDataSource);
  *(void *)(v2 + 48) = v11;
  *(void *)(v2 + 56) = v12;
  sub_1C2148820();
  swift_allocObject();
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_1C2148840();
  char v14 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
  sub_1C211BE1C(0, &qword_1EA2C7658, (uint64_t (*)(uint64_t))sub_1C211B1FC, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C214FCC0;
  *(void *)(inited + 32) = 2;
  sub_1C21484E0();
  uint64_t v16 = sub_1C21484F0();
  uint64_t v17 = MEMORY[0x1E4F66610];
  *(void *)(inited + 4sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = v16;
  *(void *)(inited + 48) = v17;
  uint64_t v18 = MEMORY[0x1E4F66580];
  *(void *)(inited + 56) = MEMORY[0x1E4F66470];
  *(void *)(inited + 64) = 1;
  *(void *)(inited + 72) = v13;
  *(void *)(inited + 8sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = v18;
  *(void *)(inited + 88) = MEMORY[0x1E4F66578];
  sub_1C1F4C2F4(inited);
  swift_setDeallocating();
  sub_1C211B1FC();
  swift_retain();
  swift_arrayDestroy();
  sub_1C2148920();
  swift_allocObject();
  swift_retain();
  uint64_t v63 = sub_1C2148910();
  long long v65 = xmmword_1C215CD50;
  uint64_t v19 = (void *)v1[3];
  type metadata accessor for MedicationChartCellDataSource();
  *(void *)(swift_allocObject() + qword_1EA2C2CE8) = v19;
  sub_1C211BE1C(0, (unint64_t *)&qword_1EA2C2DD0, MEMORY[0x1E4F66468], v14);
  sub_1C2148540();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1C214FCD0;
  sub_1C1FF344C();
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_1C214FCD0;
  *(void *)(v20 + 56) = &type metadata for MedicationChartItem;
  *(void *)(v20 + 64) = sub_1C211BE80();
  *(void *)(v20 + 32) = v19;
  *(void *)(v20 + 4sub_1C20A6F54((uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_colorButton, (uint64_t)&OBJC_IVAR____TtC19HealthMedicationsUI27MedmojiPickerViewController_shapeButton, 1, 0) = 0;
  id v21 = v19;
  sub_1C2148520();
  uint64_t v22 = sub_1C2147F50();

  uint64_t v23 = sub_1C211C148(&qword_1EA2C7688, (void (*)(uint64_t))type metadata accessor for MedicationChartCellDataSource);
  uint64_t v66 = v22;
  v67[0] = v23;
  uint64_t v24 = (void *)v1[3];
  uint64_t v25 = (void *)v1[6];
  type metadata accessor for MedicationsRecordDoseDataSource();
  swift_allocObject();
  id v26 = v24;
  id v27 = v62;
  swift_retain();
  swift_retain();
  id v28 = v26;
  uint64_t v29 = MedicationsRecordDoseDataSource.init(healthStore:listManager:medication:incompatibilityCache:didTapRecordDoseHandler:)(v27, v9, v28, v25, (uint64_t)sub_1C211BED4, v10);

  v67[1] = v29;
  v67[2] = MEMORY[0x1E4F66470];
  unint64_t v30 = (void *)v1[3];
  id v31 = v27;
  id v32 = v30;
  uint64_t v33 = sub_1C2119D50();
  type metadata accessor for ScheduleDataSource(0);
  uint64_t v34 = swift_allocObject();
  swift_retain();
  uint64_t v35 = sub_1C211B88C((uint64_t)v32, v27, v33, v10, 0, v34);
  uint64_t v36 = sub_1C211C148(&qword_1EA2C5E90, (void (*)(uint64_t))type metadata accessor for ScheduleDataSource);
  v67[3] = v35;
  v67[4] = v36;
  sub_1C214ACF0();
  __swift_project_boxed_opaque_existential_0(v64, (uint64_t)v64[3]);
  uint64_t v37 = (void *)sub_1C2147E10();
  uint64_t v38 = (void *)v1[3];
  id v39 = objc_allocWithZone((Class)type metadata accessor for MedicationHighlightsDataSource());
  id v40 = v37;
  uint64_t v41 = sub_1C1F4DCAC(v40, v38);

  uint64_t v42 = sub_1C211C148(&qword_1EA2C7690, (void (*)(uint64_t))type metadata accessor for MedicationHighlightsDataSource);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v64);
  v67[5] = v41;
  v67[6] = v42;
  id v43 = (void *)sub_1C211A588();
  type metadata accessor for MedicationDetailsDataSource();
  swift_allocObject();
  id v44 = v31;
  uint64_t v45 = MedicationDetailsDataSource.init(with:healthStore:)(v43, v44);
  uint64_t v46 = sub_1C211C148(&qword_1EA2C7698, (void (*)(uint64_t))type metadata accessor for MedicationDetailsDataSource);
  v67[7] = v45;
  v67[8] = v46;
  sub_1C211AE3C();
  v67[9] = v47;
  v67[10] = v48;
  uint64_t v49 = (void *)v1[3];
  v64[0] = v49;
  type metadata accessor for MedicationInformationDataSource();
  swift_allocObject();
  id v50 = v44;
  swift_retain();
  swift_retain();
  id v51 = v49;
  uint64_t v52 = MedicationInformationDataSource.init(displayContext:listManager:healthStore:analyticsManager:)(v64, v9, v50, v10);
  uint64_t v53 = sub_1C211C148(&qword_1EA2C76A0, (void (*)(uint64_t))type metadata accessor for MedicationInformationDataSource);
  v67[11] = v52;
  v67[12] = v53;
  v67[13] = v63;
  v67[14] = MEMORY[0x1E4F665B8];
  swift_retain();
  uint64_t v54 = 0;
  id v55 = (void *)MEMORY[0x1E4FBC860];
  do
  {
    uint64_t v57 = v67[v54 - 1];
    if (v57)
    {
      uint64_t v58 = v67[v54];
      swift_unknownObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        id v55 = sub_1C1F3B234(0, v55[2] + 1, 1, v55);
      }
      unint64_t v60 = v55[2];
      unint64_t v59 = v55[3];
      if (v60 >= v59 >> 1) {
        id v55 = sub_1C1F3B234((void *)(v59 > 1), v60 + 1, 1, v55);
      }
      v55[2] = v60 + 1;
      id v56 = &v55[2 * v60];
      uint64_t v56[4] = v57;
      v56[5] = v58;
    }
    v54 += 2;
  }
  while (v54 != 16);
  swift_release();
  swift_release();
  sub_1C211BDA8(0, &qword_1EA2C76A8, MEMORY[0x1E4FBB718]);
  swift_arrayDestroy();
  return v55;
}