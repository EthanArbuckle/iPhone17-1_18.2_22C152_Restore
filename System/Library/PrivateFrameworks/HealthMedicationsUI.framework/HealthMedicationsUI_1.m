uint64_t type metadata accessor for PregnancyLactationInteractionCriticalAlertCell()
{
  return self;
}

void sub_1C1FB5F9C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C1FB6000()
{
  swift_unknownObjectWeakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

void sub_1C1FB6038(uint64_t a1, uint64_t a2)
{
  sub_1C1FB369C(a1, a2, v2);
}

uint64_t sub_1C1FB6040(uint64_t a1, uint64_t a2)
{
  sub_1C1FB5F9C(0, &qword_1EBF0C620, MEMORY[0x1E4FB0F28], MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C1FB60D4(uint64_t a1)
{
  sub_1C1FB5F9C(0, &qword_1EBF0C620, MEMORY[0x1E4FB0F28], MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1C1FB6160()
{
  unint64_t result = qword_1EA2C4620;
  if (!qword_1EA2C4620)
  {
    sub_1C1F12718(255, &qword_1EA2C4618);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C4620);
  }
  return result;
}

void sub_1C1FB62F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C21497F0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = swift_bridgeObjectRetain();
  uint64_t v9 = (void *)sub_1C1FB2B10(v8);
  swift_bridgeObjectRelease();
  if (!v9) {
    goto LABEL_7;
  }
  id v10 = sub_1C1FB3B20();
  char v11 = MEMORY[0x1C8753270](v9, v10, 36.0, 36.0);

  if ((v11 & 1) == 0)
  {

LABEL_7:
    sub_1C1F12718(0, &qword_1EA2C4618);
    sub_1C1FB6160();
    v15 = (void *)sub_1C214AA50();
    v16 = (objc_class *)type metadata accessor for PregnancyLactationInteractionCriticalAlertCell();
    v28.receiver = v2;
    v28.super_class = v16;
    objc_msgSendSuper2(&v28, sel_touchesEnded_withEvent_, v15, a2);

    return;
  }
  uint64_t v12 = (uint64_t)v2 + OBJC_IVAR____TtC19HealthMedicationsUI46PregnancyLactationInteractionCriticalAlertCell_item;
  swift_beginAccess();
  sub_1C1F2116C(v12, (uint64_t)v27);
  if (v27[3])
  {
    sub_1C1F23804(0, (unint64_t *)&qword_1EBF0C2F0);
    type metadata accessor for PregnancyLactationInteractionCriticalAlertItem();
    if (swift_dynamicCast())
    {
      v13 = *(void (**)(uint64_t))(v26 + 56);
      uint64_t v14 = swift_retain();
      v13(v14);

      swift_release();
      swift_release();
      return;
    }
  }
  else
  {
    sub_1C1F374E4((uint64_t)v27);
  }
  if (HKShowSensitiveLogItems())
  {
    sub_1C21497A0();
    id v17 = v2;
    v18 = sub_1C21497E0();
    os_log_type_t v19 = sub_1C214ABD0();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = (uint8_t *)swift_slowAlloc();
      uint64_t v25 = swift_slowAlloc();
      uint64_t v26 = v25;
      *(_DWORD *)v20 = 136315138;
      v24[1] = v20 + 4;
      sub_1C1F2116C(v12, (uint64_t)v27);
      sub_1C1F24488();
      uint64_t v21 = sub_1C214A630();
      v27[0] = sub_1C1F6FD54(v21, v22, &v26);
      sub_1C214B530();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C1F0B000, v18, v19, "Incorrect view model for PregnancyLactationInteractionCriticalAlertItem: %s", v20, 0xCu);
      uint64_t v23 = v25;
      swift_arrayDestroy();
      MEMORY[0x1C8754730](v23, -1, -1);
      MEMORY[0x1C8754730](v20, -1, -1);
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  else
  {
  }
}

id PregnancyLactationInteractionCriticalAlertCell.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PregnancyLactationInteractionCriticalAlertCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1C1FB6818@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC19HealthMedicationsUI46PregnancyLactationInteractionCriticalAlertCell_item;
  swift_beginAccess();
  return sub_1C1F2116C(v3, a2);
}

uint64_t method lookup function for PregnancyLactationInteractionCriticalAlertCell(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for PregnancyLactationInteractionCriticalAlertCell);
}

uint64_t dispatch thunk of PregnancyLactationInteractionCriticalAlertCell.item.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of PregnancyLactationInteractionCriticalAlertCell.item.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of PregnancyLactationInteractionCriticalAlertCell.item.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB0))();
}

uint64_t sub_1C1FB6928(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t type metadata accessor for ColorSelectionViewController()
{
  uint64_t result = qword_1EA2C46C8;
  if (!qword_1EA2C46C8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C1FB6980()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1C1FB69E8(uint64_t a1)
{
  uint64_t v175 = a1;
  sub_1C1F3BF0C();
  uint64_t v148 = v2;
  uint64_t v145 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  v139 = (char *)&v134 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1FB8D98(0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v174 = (uint64_t)&v134 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1F728E8();
  uint64_t v169 = v6;
  uint64_t v154 = *(void *)(v6 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v6);
  uint64_t v136 = (uint64_t)&v134 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v137 = (uint64_t)&v134 - v10;
  MEMORY[0x1F4188790](v9);
  uint64_t v138 = (uint64_t)&v134 - v11;
  uint64_t v12 = sub_1C2149390();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v162 = v12;
  uint64_t v163 = v13;
  MEMORY[0x1F4188790](v12);
  v177 = (char *)&v134 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1FB8DB8();
  uint64_t v170 = v15;
  v155 = *(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v15 - 8);
  MEMORY[0x1F4188790](v15);
  v160 = (char *)&v134 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1FB9070(0, &qword_1EA2C46E8, (void (*)(uint64_t))sub_1C1FB8DB8);
  uint64_t v18 = MEMORY[0x1F4188790](v17 - 8);
  v176 = (unint64_t *)((char *)&v134 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v18);
  uint64_t v21 = (char *)&v134 - v20;
  uint64_t v151 = sub_1C2148E60();
  uint64_t v153 = *(void *)(v151 - 8);
  MEMORY[0x1F4188790](v151);
  v150 = (char *)&v134 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v167 = (void (**)(void, void, void, void))sub_1C2148F60();
  uint64_t v171 = (uint64_t)*(v167 - 1);
  uint64_t v23 = MEMORY[0x1F4188790](v167);
  v159 = (char *)&v134 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = MEMORY[0x1F4188790](v23);
  v164 = (char *)&v134 - v26;
  MEMORY[0x1F4188790](v25);
  v166 = (char *)&v134 - v27;
  sub_1C1F4CC58();
  uint64_t v29 = MEMORY[0x1F4188790](v28 - 8);
  uint64_t v143 = (uint64_t)&v134 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = MEMORY[0x1F4188790](v29);
  uint64_t v168 = (uint64_t)&v134 - v32;
  uint64_t v33 = MEMORY[0x1F4188790](v31);
  v165 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&v134 - v34);
  uint64_t v35 = MEMORY[0x1F4188790](v33);
  v37 = (char *)&v134 - v36;
  MEMORY[0x1F4188790](v35);
  v39 = (char *)&v134 - v38;
  uint64_t v40 = qword_1EA2C4698;
  uint64_t v41 = sub_1C21492D0();
  uint64_t v42 = *(void *)(v41 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v42 + 56))(v39, 1, 1, v41);
  sub_1C1FB8E24(0, &qword_1EA2C46F0, (void (*)(uint64_t))sub_1C1F4CC58);
  swift_allocObject();
  v43 = v1;
  *(void *)&v1[v40] = sub_1C2149EB0();
  v152 = v43;
  *(void *)&v43[qword_1EA2C46B8] = MEMORY[0x1E4FBC870];
  sub_1C1FB8FE8(v175, (uint64_t)v37, (uint64_t (*)(void))sub_1C1F4CC58);
  v172 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v42 + 48);
  uint64_t v173 = v42 + 48;
  int v44 = v172(v37, 1, v41);
  uint64_t v144 = v42;
  if (v44 == 1)
  {
    v46 = v166;
    v45 = v167;
    uint64_t v47 = v171;
    sub_1C1FB91F0((uint64_t)v37, (uint64_t (*)(void))sub_1C1F4CC58);
    uint64_t result = sub_1C2148F40();
    if (!*(void *)(result + 16))
    {
LABEL_43:
      __break(1u);
      goto LABEL_44;
    }
    (*(void (**)(char *, unint64_t, void (**)(void, void, void, void)))(v47 + 16))(v46, result + ((*(unsigned __int8 *)(v47 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80)), v45);
    swift_bridgeObjectRelease();
  }
  else
  {
    v49 = v164;
    sub_1C21492C0();
    (*(void (**)(char *, uint64_t))(v42 + 8))(v37, v41);
    uint64_t v47 = v171;
    (*(void (**)(char *, char *, void (**)(void, void, void, void)))(v171 + 32))(v166, v49, v167);
  }
  sub_1C1FB8E24(0, &qword_1EA2C3FB0, MEMORY[0x1E4F66C08]);
  swift_allocObject();
  uint64_t v50 = sub_1C2149EB0();
  uint64_t v142 = qword_1EA2C4690;
  *(void *)&v152[qword_1EA2C4690] = v50;
  uint64_t result = sub_1C2148E20();
  uint64_t v51 = v151;
  uint64_t v52 = v153;
  v53 = v150;
  if (!*(void *)(result + 16)) {
    goto LABEL_41;
  }
  uint64_t v171 = v41;
  unint64_t v54 = (*(unsigned __int8 *)(v153 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v153 + 80);
  uint64_t v55 = v153 + 16;
  v56 = *(void (**)(char *, unint64_t, uint64_t))(v153 + 16);
  v56(v150, result + v54, v151);
  swift_bridgeObjectRelease();
  id v149 = (id)sub_1C2148E50();
  v59 = *(void (**)(char *, uint64_t))(v52 + 8);
  uint64_t v58 = v52 + 8;
  v57 = v59;
  v59(v53, v51);
  uint64_t result = sub_1C2148E20();
  if (!*(void *)(result + 16))
  {
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  unint64_t v147 = v54;
  v161 = v56;
  v56(v53, result + v54, v51);
  swift_bridgeObjectRelease();
  id v146 = (id)sub_1C2148E50();
  v57(v53, v51);
  v60 = v165;
  sub_1C1FB8FE8(v175, (uint64_t)v165, (uint64_t (*)(void))sub_1C1F4CC58);
  uint64_t v61 = v171;
  int v62 = v172((char *)v60, 1, v171);
  uint64_t v141 = v55;
  v140 = v57;
  if (v62 != 1)
  {
    uint64_t v153 = v58;
    v65 = v159;
    sub_1C21492C0();
    v66 = *(void (**)(uint64_t, uint64_t))(v144 + 8);
    uint64_t v157 = v144 + 8;
    v156 = v66;
    v66((uint64_t)v60, v61);
    uint64_t v67 = sub_1C2148F50();
    (*(void (**)(char *, void (**)(void, void, void, void)))(v47 + 8))(v65, v167);
    uint64_t v68 = sub_1C20FF53C(v67);
    uint64_t result = swift_bridgeObjectRelease();
    unint64_t v69 = 0;
    uint64_t v158 = v163 + 16;
    v159 = (char *)v68;
    unint64_t v70 = *(void *)(v68 + 16);
    v71 = (void (**)(char *, char *, uint64_t))(v163 + 32);
    v166 = (char *)(v155 + 6);
    v167 = (void (**)(void, void, void, void))(v155 + 7);
    v165 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v154 + 56);
    v155 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v154 + 48);
    v135 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v145 + 48);
    v134 = (void (**)(uint64_t, uint64_t))(v145 + 8);
    v164 = (char *)(v163 + 8);
    uint64_t v72 = v174;
    uint64_t v73 = v162;
    uint64_t v74 = (uint64_t)v176;
    while (1)
    {
      uint64_t v75 = v170;
      if (v69 == v70)
      {
        uint64_t v76 = 1;
        unint64_t v69 = v70;
      }
      else
      {
        if (v69 >= *((void *)v159 + 2))
        {
          __break(1u);
LABEL_41:
          __break(1u);
          goto LABEL_42;
        }
        uint64_t v77 = v163;
        v78 = &v160[*(int *)(v170 + 48)];
        (*(void (**)(char *, char *, uint64_t))(v163 + 16))(v78, &v159[((*(unsigned __int8 *)(v77 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v77 + 80))+ *(void *)(v77 + 72) * v69], v73);
        v79 = (char *)v176 + *(int *)(v75 + 48);
        unint64_t *v176 = v69;
        v80 = *(void (**)(char *, char *, uint64_t))(v77 + 32);
        uint64_t v74 = (uint64_t)v176;
        uint64_t v72 = v174;
        v80(v79, v78, v73);
        uint64_t v76 = 0;
        ++v69;
      }
      (*v167)(v74, v76, 1, v75);
      sub_1C1FB8F00(v74, (uint64_t)v21);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))v166)(v21, 1, v75) == 1)
      {
        swift_bridgeObjectRelease();
        uint64_t v63 = v148;
        v64 = v152;
        goto LABEL_35;
      }
      uint64_t v81 = *(void *)v21;
      (*v71)(v177, &v21[*(int *)(v75 + 48)], v73);
      uint64_t v82 = v168;
      sub_1C1FB8FE8(v175, v168, (uint64_t (*)(void))sub_1C1F4CC58);
      uint64_t v83 = v171;
      if (v172((char *)v82, 1, v171) == 1) {
        break;
      }
      uint64_t v84 = sub_1C2149290();
      v156(v82, v83);
      if (*(void *)(v84 + 16) && (unint64_t v85 = sub_1C1F4B8E0((uint64_t)v177), (v86 & 1) != 0))
      {
        sub_1C1FB8FE8(*(void *)(v84 + 56) + *(void *)(v154 + 72) * v85, v174, (uint64_t (*)(void))sub_1C1F728E8);
        uint64_t v87 = 0;
      }
      else
      {
        uint64_t v87 = 1;
      }
      v88 = v161;
      uint64_t v72 = v174;
      uint64_t v89 = v169;
      (*v165)(v174, v87, 1, v169);
      swift_bridgeObjectRelease();
      int v90 = (*v155)(v72, 1, v89);
      uint64_t v73 = v162;
      uint64_t v74 = (uint64_t)v176;
      if (v90 == 1)
      {
LABEL_11:
        (*(void (**)(char *, uint64_t))v164)(v177, v73);
        uint64_t result = sub_1C1FB91F0(v72, (uint64_t (*)(void))sub_1C1FB8D98);
      }
      else
      {
        uint64_t v91 = v138;
        sub_1C1FB8F80(v72, v138, (uint64_t (*)(void))sub_1C1F728E8);
        if (v81)
        {
          uint64_t v101 = v91;
          uint64_t v102 = v136;
          sub_1C1FB8FE8(v101, v136, (uint64_t (*)(void))sub_1C1F728E8);
          uint64_t v103 = v148;
          if ((*v135)(v102, 1, v148) == 1)
          {
            sub_1C1FB91F0(v102, (uint64_t (*)(void))sub_1C1F728E8);
            uint64_t result = sub_1C2148E20();
            if (!*(void *)(result + 16)) {
              goto LABEL_46;
            }
            v104 = v150;
            uint64_t v105 = v151;
            v88(v150, result + v147, v151);
            swift_bridgeObjectRelease();
            uint64_t v97 = sub_1C2148E50();

            v140(v104, v105);
            v100 = (id *)&v178;
          }
          else
          {
            uint64_t v106 = v102;
            uint64_t v97 = sub_1C214A460();
            uint64_t v107 = v106;
            uint64_t v74 = (uint64_t)v176;
            (*v134)(v107, v103);

            v100 = (id *)&v178;
          }
        }
        else
        {
          uint64_t v92 = v91;
          uint64_t v93 = v137;
          sub_1C1FB8FE8(v92, v137, (uint64_t (*)(void))sub_1C1F728E8);
          uint64_t v94 = v148;
          if ((*v135)(v93, 1, v148) == 1)
          {
            sub_1C1FB91F0(v93, (uint64_t (*)(void))sub_1C1F728E8);
            uint64_t result = sub_1C2148E20();
            if (!*(void *)(result + 16)) {
              goto LABEL_45;
            }
            v95 = v150;
            uint64_t v96 = v151;
            v88(v150, result + v147, v151);
            swift_bridgeObjectRelease();
            uint64_t v97 = sub_1C2148E50();

            v140(v95, v96);
          }
          else
          {
            uint64_t v98 = v93;
            uint64_t v97 = sub_1C214A460();
            uint64_t v99 = v98;
            uint64_t v74 = (uint64_t)v176;
            (*v134)(v99, v94);
          }
          v100 = (id *)&v179;
        }
        *(v100 - 32) = (id)v97;
        sub_1C1FB91F0(v138, (uint64_t (*)(void))sub_1C1F728E8);
        uint64_t result = (*(uint64_t (**)(char *, uint64_t))v164)(v177, v73);
        uint64_t v72 = v174;
      }
    }
    sub_1C1FB91F0(v82, (uint64_t (*)(void))sub_1C1F4CC58);
    (*v165)(v72, 1, 1, v169);
    goto LABEL_11;
  }
  sub_1C1FB91F0((uint64_t)v60, (uint64_t (*)(void))sub_1C1F4CC58);
  uint64_t v63 = v148;
  v64 = v152;
LABEL_35:
  id v108 = v149;
  uint64_t v178 = (uint64_t)v149;
  sub_1C1FB8E88();
  swift_allocObject();
  v177 = (char *)v108;
  uint64_t v109 = sub_1C2149EB0();
  uint64_t v110 = qword_1EA2C46A8;
  *(void *)&v64[qword_1EA2C46A8] = v109;
  id v111 = v146;
  uint64_t v178 = (uint64_t)v146;
  swift_allocObject();
  id v112 = v111;
  uint64_t v113 = sub_1C2149EB0();
  uint64_t v114 = qword_1EA2C46B0;
  v115 = v64;
  *(void *)&v64[qword_1EA2C46B0] = v113;
  uint64_t v116 = v143;
  sub_1C1FB8FE8(v175, v143, (uint64_t (*)(void))sub_1C1F4CC58);
  uint64_t v117 = v171;
  int v118 = v172((char *)v116, 1, v171);
  unint64_t v119 = v147;
  if (v118 != 1)
  {
    v124 = v139;
    sub_1C2149280();
    (*(void (**)(uint64_t, uint64_t))(v144 + 8))(v116, v117);
    uint64_t v123 = sub_1C214A460();
    (*(void (**)(char *, uint64_t))(v145 + 8))(v124, v63);
    goto LABEL_39;
  }
  sub_1C1FB91F0(v116, (uint64_t (*)(void))sub_1C1F4CC58);
  uint64_t result = sub_1C2148E30();
  if (*(void *)(result + 16))
  {
    unint64_t v120 = result + v119;
    v121 = v150;
    uint64_t v122 = v151;
    v161(v150, v120, v151);
    swift_bridgeObjectRelease();
    uint64_t v123 = sub_1C2148E50();
    v140(v121, v122);
LABEL_39:
    uint64_t v178 = v123;
    swift_allocObject();
    uint64_t v125 = sub_1C2149EB0();
    *(void *)&v115[qword_1EA2C46A0] = v125;
    uint64_t v126 = *(void *)&v115[v142];
    uint64_t v127 = *(void *)&v115[v110];
    uint64_t v128 = *(void *)&v115[v114];
    LOBYTE(v178) = 1;
    type metadata accessor for VisualizationModificationDataSource();
    swift_allocObject();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v129 = sub_1C20FF950(v126, v125, v127, v128, (unsigned __int8 *)&v178);
    uint64_t v130 = qword_1EA2C46C0;
    *(void *)&v115[qword_1EA2C46C0] = v129;

    sub_1C2148820();
    sub_1C1F24848();
    uint64_t v131 = swift_allocObject();
    *(_OWORD *)(v131 + 16) = xmmword_1C214FCD0;
    uint64_t v132 = MEMORY[0x1E4F66470];
    *(void *)(v131 + 32) = *(void *)&v115[v130];
    *(void *)(v131 + 40) = v132;
    swift_retain();
    sub_1C2148850();
    id v133 = (id)sub_1C2148AC0();
    sub_1C1FB7FC8();

    sub_1C1FB91F0(v175, (uint64_t (*)(void))sub_1C1F4CC58);
    return (uint64_t)v133;
  }
LABEL_44:
  __break(1u);
LABEL_45:
  __break(1u);
LABEL_46:
  __break(1u);
  return result;
}

void sub_1C1FB7D40()
{
  v6.receiver = v0;
  v6.super_class = (Class)type metadata accessor for ColorSelectionViewController();
  objc_msgSendSuper2(&v6, sel_viewDidLoad);
  id v1 = objc_msgSend(v0, sel_collectionView);
  if (v1)
  {
    uint64_t v2 = v1;
    objc_msgSend(v1, sel_setPreservesSuperviewLayoutMargins_, 1);

    id v3 = objc_msgSend(v0, sel_collectionView);
    if (v3)
    {
      uint64_t v4 = v3;
      id v5 = objc_msgSend(self, sel_systemBackgroundColor);
      objc_msgSend(v4, sel_setBackgroundColor_, v5);

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_1C1FB7E20(void *a1)
{
  id v1 = a1;
  sub_1C1FB7D40();
}

void sub_1C1FB7E68(char *a1, uint64_t a2, void *a3)
{
  sub_1C1F4CC58();
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = qword_1EA2C4698;
  uint64_t v9 = sub_1C21492D0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v7, 1, 1, v9);
  sub_1C1FB8E24(0, &qword_1EA2C46F0, (void (*)(uint64_t))sub_1C1F4CC58);
  swift_allocObject();
  id v10 = a3;
  *(void *)&a1[v8] = sub_1C2149EB0();
  *(void *)&a1[qword_1EA2C46B8] = MEMORY[0x1E4FBC870];

  sub_1C214B910();
  __break(1u);
}

uint64_t sub_1C1FB7FC8()
{
  sub_1C1F2F7C0(0);
  MEMORY[0x1F4188790](v1 - 8);
  id v3 = (char *)v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1FB90C4();
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (void *)(*(void *)(v0 + qword_1EA2C46C0) + qword_1EA2C71F8);
  swift_beginAccess();
  v12[1] = *v9;
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0CB10);
  swift_retain();
  id v13 = (id)sub_1C214AD80();
  uint64_t v10 = sub_1C214AD20();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v3, 1, 1, v10);
  sub_1C1FB8E24(0, &qword_1EA2C46F0, (void (*)(uint64_t))sub_1C1F4CC58);
  sub_1C1FB917C();
  sub_1C1F43FD4();
  sub_1C214A0A0();
  sub_1C1FB91F0((uint64_t)v3, (uint64_t (*)(void))sub_1C1F2F7C0);

  swift_release();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1C1FB9290(&qword_1EA2C4708, (void (*)(uint64_t))sub_1C1FB90C4);
  sub_1C214A0F0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_beginAccess();
  sub_1C2149E20();
  swift_endAccess();
  return swift_release();
}

void sub_1C1FB82D4(uint64_t a1, uint64_t a2)
{
  sub_1C1F4CC58();
  uint64_t v5 = MEMORY[0x1F4188790](v4 - 8);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v18 - v8;
  uint64_t v10 = sub_1C21492D0();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  id v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v14 = MEMORY[0x1C8754850](a2 + 16);
  if (v14)
  {
    uint64_t v15 = (void *)v14;
    sub_1C1FB8FE8(a1, (uint64_t)v9, (uint64_t (*)(void))sub_1C1F4CC58);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
    {

      sub_1C1FB91F0((uint64_t)v9, (uint64_t (*)(void))sub_1C1F4CC58);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v9, v10);
      id v16 = v15;
      uint64_t v17 = sub_1C2148AD0();

      if (v17)
      {
        sub_1C21488F0();
        swift_release();
        (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v7, v13, v10);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v7, 0, 1, v10);
        swift_retain();
        sub_1C2149E70();

        swift_release();
        sub_1C1FB91F0((uint64_t)v7, (uint64_t (*)(void))sub_1C1F4CC58);
        (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
      }
      else
      {
        __break(1u);
      }
    }
  }
}

void sub_1C1FB8578(void *a1)
{
  sub_1C1FB9050(0);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1F3C674();
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (void *)sub_1C2147D40();
  objc_msgSend(a1, sel_deselectItemAtIndexPath_animated_, v10, 1);

  uint64_t v11 = (void *)sub_1C2147D40();
  id v28 = objc_msgSend(a1, sel_cellForItemAtIndexPath_, v11);

  if (v28)
  {
    type metadata accessor for ColorCell(0);
    uint64_t v12 = swift_dynamicCastClass();
    if (v12)
    {
      uint64_t v13 = v12 + OBJC_IVAR____TtC19HealthMedicationsUI9ColorCell_item;
      swift_beginAccess();
      sub_1C1FB8FE8(v13, (uint64_t)v29, (uint64_t (*)(void))sub_1C1F24488);
      if (v29[3])
      {
        sub_1C1F248B4(0, (unint64_t *)&qword_1EBF0C2F0);
        id v14 = v28;
        int v15 = swift_dynamicCast();
        (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v4, v15 ^ 1u, 1, v6);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v4, 1, v6) != 1)
        {
          sub_1C1FB8F80((uint64_t)v4, (uint64_t)v9, (uint64_t (*)(void))sub_1C1F3C674);
          type metadata accessor for VisualizationModificationDataSource();
          swift_retain();
          uint64_t v16 = sub_1C2148360();
          swift_release();
          unint64_t v17 = sub_1C2147D80();
          if ((v17 & 0x8000000000000000) != 0)
          {
            __break(1u);
          }
          else if (v17 < *(void *)(v16 + 16))
          {
            unint64_t v18 = v16 + 16 * v17;
            uint64_t v20 = *(void *)(v18 + 32);
            uint64_t v19 = *(void *)(v18 + 40);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            if (v20 == 0xD000000000000011 && v19 == 0x80000001C2161550
              || (sub_1C214BA80() & 1) != 0
              || v20 == 0xD000000000000012 && v19 == 0x80000001C2161570
              || (sub_1C214BA80() & 1) != 0
              || v20 == 0x756F72676B636162 && v19 == 0xEF726F6C6F43646ELL)
            {
              swift_bridgeObjectRelease();
            }
            else
            {
              char v26 = sub_1C214BA80();
              swift_bridgeObjectRelease();
              if ((v26 & 1) == 0)
              {
                sub_1C1FB91F0((uint64_t)v9, (uint64_t (*)(void))sub_1C1F3C674);

                return;
              }
            }
            swift_retain();
            uint64_t v21 = (void *)sub_1C2148E50();
            v29[0] = v21;
            sub_1C2149E70();

            swift_release();
            uint64_t v22 = (uint64_t (*)(void))sub_1C1F3C674;
            uint64_t v23 = (uint64_t)v9;
            goto LABEL_17;
          }
          __break(1u);
          return;
        }
      }
      else
      {
        id v25 = v28;
        sub_1C1FB91F0((uint64_t)v29, (uint64_t (*)(void))sub_1C1F24488);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v4, 1, 1, v6);
      }

      uint64_t v22 = (uint64_t (*)(void))sub_1C1FB9050;
      uint64_t v23 = (uint64_t)v4;
LABEL_17:
      sub_1C1FB91F0(v23, v22);
      return;
    }
    id v24 = v28;
  }
}

uint64_t sub_1C1FB8ACC(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5 = sub_1C2147D90();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2147D50();
  id v9 = a3;
  id v10 = a1;
  sub_1C1FB8578(v9);

  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void sub_1C1FB8BC8()
{
}

void sub_1C1FB8BF8(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = a3;
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1C1FB8C2C()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return swift_release();
}

id sub_1C1FB8CBC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ColorSelectionViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1C1FB8CF4()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t sub_1C1FB8D90()
{
  return type metadata accessor for ColorSelectionViewController();
}

void sub_1C1FB8D98(uint64_t a1)
{
}

void sub_1C1FB8DB8()
{
  if (!qword_1EA2C46E0)
  {
    sub_1C2149390();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA2C46E0);
    }
  }
}

void sub_1C1FB8E24(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C2149EA0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1C1FB8E88()
{
  if (!qword_1EA2C3FA8)
  {
    sub_1C1F12718(255, (unint64_t *)&qword_1EBF0C900);
    unint64_t v0 = sub_1C2149EA0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C3FA8);
    }
  }
}

uint64_t sub_1C1FB8F00(uint64_t a1, uint64_t a2)
{
  sub_1C1FB9070(0, &qword_1EA2C46E8, (void (*)(uint64_t))sub_1C1FB8DB8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C1FB8F80(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C1FB8FE8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void sub_1C1FB9050(uint64_t a1)
{
}

void sub_1C1FB9070(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C214B4F0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1C1FB90C4()
{
  if (!qword_1EA2C46F8)
  {
    sub_1C1FB8E24(255, &qword_1EA2C46F0, (void (*)(uint64_t))sub_1C1F4CC58);
    sub_1C1F12718(255, (unint64_t *)&qword_1EBF0CB10);
    sub_1C1FB917C();
    sub_1C1F43FD4();
    unint64_t v0 = sub_1C2149DF0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C46F8);
    }
  }
}

unint64_t sub_1C1FB917C()
{
  unint64_t result = qword_1EA2C4700;
  if (!qword_1EA2C4700)
  {
    sub_1C1FB8E24(255, &qword_1EA2C46F0, (void (*)(uint64_t))sub_1C1F4CC58);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C4700);
  }
  return result;
}

uint64_t sub_1C1FB91F0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C1FB9250()
{
  swift_unknownObjectWeakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

void sub_1C1FB9288(uint64_t a1)
{
  sub_1C1FB82D4(a1, v1);
}

uint64_t sub_1C1FB9290(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id sub_1C1FB92D8()
{
  sub_1C1FBDC68(0, &qword_1EBF0C920, MEMORY[0x1E4FB1290], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v0 - 8);
  objc_super v2 = (char *)&v14 - v1;
  uint64_t v3 = sub_1C214B350();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1C214B3D0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  id v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB14D0]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  sub_1C214B380();
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E4FB1268], v3);
  sub_1C214B270();
  id v12 = objc_msgSend(self, sel_systemBlueColor);
  sub_1C214B320();
  _sSo7UIImageC19HealthMedicationsUIE26collectionViewCellPlusSignABvgZ_0();
  sub_1C214B370();
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v2, v10, v7);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v2, 0, 1, v7);
  sub_1C214B400();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return v11;
}

uint64_t sub_1C1FB956C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v35 = a1;
  objc_super v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C1FBDC68(0, &qword_1EBF0C610, MEMORY[0x1E4FB0E38], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v30 - v4;
  uint64_t v32 = sub_1C2149910();
  uint64_t v6 = *(void *)(v32 - 8);
  MEMORY[0x1F4188790](v32);
  uint64_t v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1C21498C0();
  uint64_t v33 = *(void *)(v9 - 8);
  uint64_t v34 = v9;
  MEMORY[0x1F4188790](v9);
  id v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v12 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FB0E68];
  sub_1C1FBDC68(0, &qword_1EBF0C618, MEMORY[0x1E4FB0E68], v2);
  uint64_t v14 = MEMORY[0x1F4188790](v13 - 8);
  uint64_t v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  unint64_t v18 = (char *)&v30 - v17;
  uint64_t v19 = v1
      + OBJC_IVAR____TtC19HealthMedicationsUI39MedicationsRecordDoseCollectionViewCell____lazy_storage___plusAccessory;
  swift_beginAccess();
  sub_1C1FBE398(v19, (uint64_t)v18, &qword_1EBF0C618, v12);
  uint64_t v20 = sub_1C2149930();
  uint64_t v21 = *(void *)(v20 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v18, 1, v20) != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v21 + 32))(v35, v18, v20);
  }
  sub_1C1FBE418((uint64_t)v18, &qword_1EBF0C618, MEMORY[0x1E4FB0E68]);
  id v31 = *(id *)(v1 + OBJC_IVAR____TtC19HealthMedicationsUI39MedicationsRecordDoseCollectionViewCell_logButton);
  sub_1C1FBE24C();
  uint64_t v23 = (uint64_t (**)())&v8[*(int *)(v22 + 48)];
  uint64_t v24 = *MEMORY[0x1E4FB0E18];
  uint64_t v25 = sub_1C2149860();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v25 - 8) + 104))(v8, v24, v25);
  *uint64_t v23 = sub_1C1F52D30;
  v23[1] = 0;
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E4FB0E60], v32);
  uint64_t v26 = sub_1C2149870();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v5, 1, 1, v26);
  id v27 = v31;
  sub_1C21498B0();
  uint64_t v28 = v35;
  sub_1C2149810();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v11, v34);
  (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v16, v28, v20);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v16, 0, 1, v20);
  swift_beginAccess();
  sub_1C1FBE304((uint64_t)v16, v19);
  return swift_endAccess();
}

uint64_t sub_1C1FB9A0C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1C21497F0();
  uint64_t v56 = *(void *)(v2 - 8);
  uint64_t v57 = v2;
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (char *)&v52 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C1FBDC68(0, &qword_1EBF0C620, MEMORY[0x1E4FB0F28], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v52 - v7;
  uint64_t v58 = sub_1C21499D0();
  uint64_t v54 = *(void *)(v58 - 8);
  MEMORY[0x1F4188790](v58);
  uint64_t v10 = (char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = sub_1C2149BE0();
  uint64_t v53 = *(void *)(v55 - 8);
  MEMORY[0x1F4188790](v55);
  id v12 = (char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1FBDC68(0, &qword_1EBF0C368, type metadata accessor for MedicationsRecordDoseItem, v5);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v15 = (char *)&v52 - v14;
  uint64_t v16 = type metadata accessor for MedicationsRecordDoseItem(0);
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)&v52 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = (uint64_t)&v1[OBJC_IVAR____TtC19HealthMedicationsUI39MedicationsRecordDoseCollectionViewCell_item];
  swift_beginAccess();
  sub_1C1FBDF90(v20, (uint64_t)v60, (uint64_t (*)(void))sub_1C1F24488);
  if (v61)
  {
    sub_1C1F23804(0, (unint64_t *)&qword_1EBF0C2F0);
    int v21 = swift_dynamicCast();
    (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v15, v21 ^ 1u, 1, v16);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) != 1)
    {
      uint64_t v22 = sub_1C1FBDECC((uint64_t)v15, (uint64_t)v19);
      MEMORY[0x1C8753050](v22);
      swift_bridgeObjectRetain();
      sub_1C2149B90();
      id v23 = objc_msgSend(v1, sel_traitCollection);
      BOOL v24 = objc_msgSend(v23, sel_userInterfaceStyle) == (id)2;

      double v25 = dbl_1C2153900[v24];
      sub_1C21499C0();
      uint64_t v26 = self;
      id v27 = objc_msgSend(v26, sel_systemCyanColor);
      id v28 = objc_msgSend(v27, sel_colorWithAlphaComponent_, v25);

      uint64_t v29 = v10;
      uint64_t v52 = v10;
      sub_1C2149990();
      uint64_t v30 = v54;
      id v31 = v29;
      uint64_t v32 = v58;
      (*(void (**)(char *, char *, uint64_t))(v54 + 16))(v8, v31, v58);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v30 + 56))(v8, 0, 1, v32);
      MEMORY[0x1C8752FF0](v8);
      sub_1C1FBDC68(0, (unint64_t *)&unk_1EBF0C990, MEMORY[0x1E4FB0E68], MEMORY[0x1E4FBBE00]);
      uint64_t v33 = *(void *)(sub_1C2149930() - 8);
      unint64_t v34 = (*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
      uint64_t v35 = swift_allocObject();
      *(_OWORD *)(v35 + 16) = xmmword_1C214FCD0;
      sub_1C1FB956C(v35 + v34);
      sub_1C214AEC0();
      uint64_t v36 = v19[*(int *)(v16 + 36)];
      v37 = &selRef_labelColor;
      if (!v19[*(int *)(v16 + 36)]) {
        v37 = &selRef_secondaryLabelColor;
      }
      id v38 = [v26 *v37];
      v39 = (void (*)(uint64_t *, void))sub_1C2149AA0();
      sub_1C2149A60();
      v39(v60, 0);
      uint64_t v40 = (void (*)(uint64_t *, void))sub_1C2149AA0();
      sub_1C2149A20();
      v40(v60, 0);
      objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI39MedicationsRecordDoseCollectionViewCell_logButton], sel_setEnabled_, v36);
      uint64_t v41 = v55;
      uint64_t v61 = v55;
      uint64_t v62 = MEMORY[0x1E4FB0F88];
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v60);
      uint64_t v43 = v53;
      (*(void (**)(uint64_t *, char *, uint64_t))(v53 + 16))(boxed_opaque_existential_1, v12, v41);
      MEMORY[0x1C8752FD0](v60);
      (*(void (**)(char *, uint64_t))(v30 + 8))(v52, v58);
      (*(void (**)(char *, uint64_t))(v43 + 8))(v12, v41);
      return sub_1C1FBDF30((uint64_t)v19, type metadata accessor for MedicationsRecordDoseItem);
    }
  }
  else
  {
    sub_1C1FBDF30((uint64_t)v60, (uint64_t (*)(void))sub_1C1F24488);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v15, 1, 1, v16);
  }
  sub_1C1FBE418((uint64_t)v15, &qword_1EBF0C368, type metadata accessor for MedicationsRecordDoseItem);
  sub_1C21497A0();
  v45 = v1;
  v46 = sub_1C21497E0();
  os_log_type_t v47 = sub_1C214ABD0();
  if (os_log_type_enabled(v46, v47))
  {
    v48 = (uint8_t *)swift_slowAlloc();
    uint64_t v49 = swift_slowAlloc();
    uint64_t v59 = v49;
    *(_DWORD *)v48 = 136315138;
    sub_1C1FBDF90(v20, (uint64_t)v60, (uint64_t (*)(void))sub_1C1F24488);
    sub_1C1F24488();
    uint64_t v50 = sub_1C214A630();
    v60[0] = sub_1C1F6FD54(v50, v51, &v59);
    sub_1C214B530();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C1F0B000, v46, v47, "Incorrect view model for MedicationsRecordDoseItem: %s", v48, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C8754730](v49, -1, -1);
    MEMORY[0x1C8754730](v48, -1, -1);
  }
  else
  {
  }
  return (*(uint64_t (**)(char *, uint64_t))(v56 + 8))(v4, v57);
}

uint64_t sub_1C1FBA2D0()
{
  uint64_t v1 = v0;
  uint64_t v53 = sub_1C21497F0();
  uint64_t v2 = *(void *)(v53 - 8);
  MEMORY[0x1F4188790](v53);
  uint64_t v4 = (char *)&v51 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C1FBDC68(0, &qword_1EBF0C620, MEMORY[0x1E4FB0F28], MEMORY[0x1E4FBB718]);
  uint64_t v7 = MEMORY[0x1F4188790](v6 - 8);
  uint64_t v52 = (char *)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v51 - v10;
  MEMORY[0x1F4188790](v9);
  unint64_t v51 = (char *)&v51 - v12;
  sub_1C1FBDC68(0, &qword_1EBF0C368, type metadata accessor for MedicationsRecordDoseItem, v5);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v15 = (char *)&v51 - v14;
  uint64_t v16 = type metadata accessor for MedicationsRecordDoseItem(0);
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)&v51 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = (void *)sub_1C2149950();
  int v21 = (objc_class *)type metadata accessor for MedicationsRecordDoseCollectionViewCell(0);
  v56.receiver = v1;
  v56.super_class = v21;
  objc_msgSendSuper2(&v56, sel__bridgedUpdateConfigurationUsingState_, v20);

  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI39MedicationsRecordDoseCollectionViewCell_logButton], sel_addTarget_action_forControlEvents_, v1, sel_didTapAccessory, 64);
  uint64_t v22 = (uint64_t)&v1[OBJC_IVAR____TtC19HealthMedicationsUI39MedicationsRecordDoseCollectionViewCell_item];
  swift_beginAccess();
  sub_1C1FBDF90(v22, (uint64_t)v55, (uint64_t (*)(void))sub_1C1F24488);
  if (!v55[3])
  {
    sub_1C1FBDF30((uint64_t)v55, (uint64_t (*)(void))sub_1C1F24488);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v15, 1, 1, v16);
    goto LABEL_8;
  }
  sub_1C1F23804(0, (unint64_t *)&qword_1EBF0C2F0);
  int v23 = swift_dynamicCast();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v15, v23 ^ 1u, 1, v16);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
LABEL_8:
    sub_1C1FBE418((uint64_t)v15, &qword_1EBF0C368, type metadata accessor for MedicationsRecordDoseItem);
    sub_1C21497A0();
    uint64_t v30 = v1;
    id v31 = sub_1C21497E0();
    os_log_type_t v32 = sub_1C214ABD0();
    if (os_log_type_enabled(v31, v32))
    {
      uint64_t v33 = (uint8_t *)swift_slowAlloc();
      uint64_t v34 = swift_slowAlloc();
      uint64_t v54 = v34;
      *(_DWORD *)uint64_t v33 = 136315138;
      sub_1C1FBDF90(v22, (uint64_t)v55, (uint64_t (*)(void))sub_1C1F24488);
      sub_1C1F24488();
      uint64_t v35 = sub_1C214A630();
      v55[0] = sub_1C1F6FD54(v35, v36, &v54);
      sub_1C214B530();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C1F0B000, v31, v32, "Incorrect view model for MedicationsRecordDoseItem: %s", v33, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C8754730](v34, -1, -1);
      MEMORY[0x1C8754730](v33, -1, -1);
    }
    else
    {
    }
    return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v53);
  }
  uint64_t v24 = (uint64_t)v15;
  uint64_t v25 = (uint64_t)v19;
  sub_1C1FBDECC(v24, (uint64_t)v19);
  if (v19[*(int *)(v16 + 36)])
  {
    if (objc_msgSend(v1, sel_isHighlighted))
    {
      uint64_t v26 = (uint64_t)v51;
      MEMORY[0x1C8752FE0]();
      uint64_t v27 = sub_1C21499D0();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 48))(v26, 1, v27))
      {
        id v28 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FB0F28];
        sub_1C1FBE398(v26, (uint64_t)v11, &qword_1EBF0C620, MEMORY[0x1E4FB0F28]);
        MEMORY[0x1C8752FF0](v11);
        sub_1C1FBDF30(v25, type metadata accessor for MedicationsRecordDoseItem);
        uint64_t v29 = v26;
        return sub_1C1FBE418(v29, &qword_1EBF0C620, v28);
      }
      sub_1C1F758A4();
      uint64_t v40 = self;
      id v41 = objc_msgSend(v40, sel_systemCyanColor);
      id v42 = objc_msgSend(v41, sel_colorWithAlphaComponent_, 0.2);

      id v43 = objc_msgSend(v40, sel_systemCyanColor);
      id v44 = objc_msgSend(v43, sel_colorWithAlphaComponent_, 0.3);

      sub_1C214B160();
      sub_1C2149990();
      uint64_t v45 = v26;
    }
    else
    {
      uint64_t v38 = (uint64_t)v52;
      MEMORY[0x1C8752FE0]();
      uint64_t v39 = sub_1C21499D0();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 48))(v38, 1, v39))
      {
        id v28 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FB0F28];
        sub_1C1FBE398(v38, (uint64_t)v11, &qword_1EBF0C620, MEMORY[0x1E4FB0F28]);
        MEMORY[0x1C8752FF0](v11);
        sub_1C1FBDF30((uint64_t)v19, type metadata accessor for MedicationsRecordDoseItem);
        uint64_t v29 = v38;
        return sub_1C1FBE418(v29, &qword_1EBF0C620, v28);
      }
      sub_1C1F758A4();
      v46 = self;
      id v47 = objc_msgSend(v46, sel_systemCyanColor);
      id v48 = objc_msgSend(v47, sel_colorWithAlphaComponent_, 0.1);

      id v49 = objc_msgSend(v46, sel_systemCyanColor);
      id v50 = objc_msgSend(v49, sel_colorWithAlphaComponent_, 0.2);

      sub_1C214B160();
      sub_1C2149990();
      uint64_t v45 = v38;
    }
    MEMORY[0x1C8752FF0](v45);
  }
  return sub_1C1FBDF30(v25, type metadata accessor for MedicationsRecordDoseItem);
}

uint64_t sub_1C1FBAC40()
{
  v1[16] = v0;
  uint64_t v2 = sub_1C21497F0();
  v1[17] = v2;
  v1[18] = *(void *)(v2 - 8);
  v1[19] = swift_task_alloc();
  sub_1C1FBDC68(0, &qword_1EBF0C368, type metadata accessor for MedicationsRecordDoseItem, MEMORY[0x1E4FBB718]);
  v1[20] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for MedicationsRecordDoseItem(0);
  v1[21] = v3;
  v1[22] = *(void *)(v3 - 8);
  v1[23] = swift_task_alloc();
  sub_1C214A890();
  v1[24] = sub_1C214A880();
  uint64_t v5 = sub_1C214A840();
  v1[25] = v5;
  v1[26] = v4;
  return MEMORY[0x1F4188298](sub_1C1FBADEC, v5, v4);
}

uint64_t sub_1C1FBADEC()
{
  id v28 = v0;
  uint64_t v1 = v0[16] + OBJC_IVAR____TtC19HealthMedicationsUI39MedicationsRecordDoseCollectionViewCell_item;
  swift_beginAccess();
  sub_1C1FBDF90(v1, (uint64_t)(v0 + 2), (uint64_t (*)(void))sub_1C1F24488);
  uint64_t v2 = v0[21];
  uint64_t v3 = v0[22];
  uint64_t v4 = v0[20];
  if (v0[5])
  {
    sub_1C1F23804(0, (unint64_t *)&qword_1EBF0C2F0);
    int v5 = swift_dynamicCast();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v3 + 56))(v4, v5 ^ 1u, 1, v2);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v4, 1, v2) != 1)
    {
      uint64_t v6 = v0[23];
      sub_1C1FBDECC(v0[20], v6);
      v0[27] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F66B38]), sel_initWithHealthStore_, *(void *)(v6 + 32));
      uint64_t v7 = (void *)swift_task_alloc();
      v0[28] = v7;
      *uint64_t v7 = v0;
      v7[1] = sub_1C1FBB20C;
      return MEMORY[0x1F411F970]();
    }
  }
  else
  {
    sub_1C1FBDF30((uint64_t)(v0 + 2), (uint64_t (*)(void))sub_1C1F24488);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56))(v4, 1, 1, v2);
  }
  uint64_t v8 = v0[20];
  uint64_t v9 = (void *)v0[16];
  swift_release();
  sub_1C1FBE418(v8, &qword_1EBF0C368, type metadata accessor for MedicationsRecordDoseItem);
  sub_1C21497A0();
  id v10 = v9;
  uint64_t v11 = sub_1C21497E0();
  os_log_type_t v12 = sub_1C214ABD0();
  BOOL v13 = os_log_type_enabled(v11, v12);
  uint64_t v15 = v0[18];
  uint64_t v14 = v0[19];
  uint64_t v17 = (void *)v0[16];
  uint64_t v16 = v0[17];
  if (v13)
  {
    uint64_t v26 = v0[19];
    uint64_t v25 = v0[17];
    uint64_t v18 = (uint8_t *)swift_slowAlloc();
    uint64_t v24 = swift_slowAlloc();
    uint64_t v27 = v24;
    *(_DWORD *)uint64_t v18 = 136315138;
    sub_1C1FBDF90(v1, (uint64_t)(v0 + 7), (uint64_t (*)(void))sub_1C1F24488);
    sub_1C1F24488();
    uint64_t v19 = sub_1C214A630();
    v0[15] = sub_1C1F6FD54(v19, v20, &v27);
    sub_1C214B530();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1C1F0B000, v11, v12, "Incorrect view model for MedicationsRecordDoseItem: %s", v18, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C8754730](v24, -1, -1);
    MEMORY[0x1C8754730](v18, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v26, v25);
  }
  else
  {

    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  int v21 = (uint64_t (*)(uint64_t))v0[1];
  uint64_t v22 = MEMORY[0x1E4FBC860];
  return v21(v22);
}

uint64_t sub_1C1FBB20C(uint64_t a1)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *v2;
  *(void *)(v4 + 232) = a1;
  *(void *)(v4 + 240) = v1;
  swift_task_dealloc();
  uint64_t v5 = *(void *)(v3 + 208);
  uint64_t v6 = *(void *)(v3 + 200);
  if (v1) {
    uint64_t v7 = sub_1C1FBB574;
  }
  else {
    uint64_t v7 = sub_1C1FBB350;
  }
  return MEMORY[0x1F4188298](v7, v6, v5);
}

uint64_t sub_1C1FBB350()
{
  unint64_t v1 = *(void *)(v0 + 232);
  swift_release();
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1C214B930();
    swift_bridgeObjectRelease();
    if (v2) {
      goto LABEL_3;
    }
LABEL_16:

    uint64_t v5 = MEMORY[0x1E4FBC860];
    goto LABEL_17;
  }
  uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v2) {
    goto LABEL_16;
  }
LABEL_3:
  uint64_t v19 = MEMORY[0x1E4FBC860];
  uint64_t result = sub_1C1F70524(0, v2 & ~(v2 >> 63), 0);
  if (v2 < 0)
  {
    __break(1u);
    return result;
  }
  uint64_t v4 = 0;
  uint64_t v5 = v19;
  unint64_t v6 = v1 & 0xC000000000000001;
  uint64_t v18 = *(void *)(v0 + 232) + 32;
  do
  {
    if (v6) {
      id v7 = (id)MEMORY[0x1C8753960](v4, *(void *)(v0 + 232));
    }
    else {
      id v7 = *(id *)(v18 + 8 * v4);
    }
    uint64_t v8 = v7;
    id v9 = objc_msgSend(v7, sel_medicationIdentifier);
    if (v9)
    {
      id v10 = v9;
      uint64_t v11 = sub_1C214A5F0();
      unint64_t v13 = v12;
    }
    else
    {

      uint64_t v11 = 0;
      unint64_t v13 = 0xE000000000000000;
    }
    unint64_t v15 = *(void *)(v19 + 16);
    unint64_t v14 = *(void *)(v19 + 24);
    if (v15 >= v14 >> 1) {
      sub_1C1F70524(v14 > 1, v15 + 1, 1);
    }
    ++v4;
    *(void *)(v19 + 16) = v15 + 1;
    uint64_t v16 = v19 + 16 * v15;
    *(void *)(v16 + 32) = v11;
    *(void *)(v16 + 40) = v13;
  }
  while (v2 != v4);

LABEL_17:
  sub_1C1FBDF30(*(void *)(v0 + 184), type metadata accessor for MedicationsRecordDoseItem);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v17 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v17(v5);
}

uint64_t sub_1C1FBB574()
{
  unint64_t v1 = (void *)v0[27];
  uint64_t v2 = v0[23];
  swift_release();

  sub_1C1FBDF30(v2, type metadata accessor for MedicationsRecordDoseItem);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_1C1FBB620(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[7] = a4;
  v5[8] = a5;
  v5[5] = a2;
  v5[6] = a3;
  v5[4] = a1;
  uint64_t v6 = sub_1C21497F0();
  v5[9] = v6;
  v5[10] = *(void *)(v6 - 8);
  v5[11] = swift_task_alloc();
  sub_1C1FBDC68(0, &qword_1EBF0B1F0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  v5[12] = swift_task_alloc();
  uint64_t v7 = sub_1C2147AC0();
  v5[13] = v7;
  v5[14] = *(void *)(v7 - 8);
  v5[15] = swift_task_alloc();
  v5[16] = swift_task_alloc();
  v5[17] = swift_task_alloc();
  v5[18] = sub_1C214A890();
  v5[19] = sub_1C214A880();
  uint64_t v8 = (void *)swift_task_alloc();
  v5[20] = v8;
  *uint64_t v8 = v5;
  v8[1] = sub_1C1FBB808;
  return sub_1C1FBAC40();
}

uint64_t sub_1C1FBB808(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 168) = a1;
  *(void *)(v3 + 176) = v1;
  swift_task_dealloc();
  uint64_t v5 = sub_1C214A840();
  if (v1) {
    uint64_t v6 = sub_1C1FBC21C;
  }
  else {
    uint64_t v6 = sub_1C1FBB968;
  }
  return MEMORY[0x1F4188298](v6, v5, v4);
}

uint64_t sub_1C1FBB968()
{
  uint64_t v1 = v0[16];
  uint64_t v2 = v0[13];
  uint64_t v3 = v0[14];
  uint64_t v4 = v0[12];
  uint64_t v5 = v0[6];
  swift_release();
  sub_1C1FBC490(v4);
  v65 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v65(v1, v5, v2);
  int v6 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v4, 1, v2);
  uint64_t v7 = v0[17];
  uint64_t v8 = v0[13];
  uint64_t v9 = v0[14];
  uint64_t v10 = v0[12];
  if (v6 == 1)
  {
    v60 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 32);
    v60(v0[17], v0[16], v0[13]);
    sub_1C1FBE418(v10, &qword_1EBF0B1F0, MEMORY[0x1E4F27928]);
  }
  else
  {
    (*(void (**)(void, void))(v9 + 8))(v0[16], v0[13]);
    v60 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 32);
    v60(v7, v10, v8);
  }
  unint64_t v11 = v0[5];
  unint64_t v69 = MEMORY[0x1E4FBC860];
  unint64_t v70 = MEMORY[0x1E4FBC860];
  if (v11 >> 62)
  {
LABEL_56:
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_1C214B930();
  }
  else
  {
    uint64_t v12 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  uint64_t v13 = v0[21];
  if (v12)
  {
    unint64_t v14 = 0;
    uint64_t v63 = (void *)v0[21];
    unint64_t v64 = v11 & 0xC000000000000001;
    uint64_t v66 = *(void *)(v13 + 16);
    uint64_t v61 = v0[5] + 32;
    uint64_t v62 = v11 & 0xFFFFFFFFFFFFFF8;
    uint64_t v59 = (void *)(v13 + 72);
    while (1)
    {
      if (v64)
      {
        id v16 = (id)MEMORY[0x1C8753960](v14, v0[5]);
      }
      else
      {
        if (v14 >= *(void *)(v62 + 16)) {
          goto LABEL_54;
        }
        id v16 = *(id *)(v61 + 8 * v14);
      }
      unint64_t v11 = (unint64_t)v16;
      unint64_t v17 = v14 + 1;
      if (__OFADD__(v14, 1))
      {
        __break(1u);
LABEL_54:
        __break(1u);
LABEL_55:
        __break(1u);
        goto LABEL_56;
      }
      uint64_t v18 = (char *)v0[15];
      v65((uint64_t)v18, v0[17], v0[13]);
      type metadata accessor for MedicationsDoseLogViewModel(0);
      swift_allocObject();
      unint64_t v11 = (unint64_t)(id)v11;
      MedicationsDoseLogViewModel.init(medication:doseEvent:scheduleItem:logDate:dosage:index:)((void *)v11, 0, 0, v18, v14, 1.0);
      id v19 = objc_msgSend((id)v11, sel_semanticIdentifier);
      id v20 = objc_msgSend(v19, sel_stringValue);

      uint64_t v21 = sub_1C214A5F0();
      uint64_t v23 = v22;

      if (v66)
      {
        BOOL v24 = v63[4] == v21 && v63[5] == v23;
        if (v24 || (sub_1C214BA80() & 1) != 0)
        {
LABEL_8:
          swift_bridgeObjectRelease();
          uint64_t v15 = swift_retain();
          MEMORY[0x1C87528E0](v15);
          if (*(void *)((v69 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v69 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_1C214A7D0();
          }
          goto LABEL_10;
        }
        if (v66 != 1)
        {
          if (v63[6] == v21 && v63[7] == v23 || (sub_1C214BA80() & 1) != 0) {
            goto LABEL_8;
          }
          if (v66 != 2)
          {
            uint64_t v26 = v59;
            uint64_t v27 = 2;
            do
            {
              uint64_t v28 = v27 + 1;
              if (__OFADD__(v27, 1)) {
                goto LABEL_55;
              }
              BOOL v29 = *(v26 - 1) == v21 && *v26 == v23;
              if (v29 || (sub_1C214BA80() & 1) != 0) {
                goto LABEL_8;
              }
              ++v27;
              v26 += 2;
            }
            while (v28 != v66);
          }
        }
      }
      swift_bridgeObjectRelease();
      uint64_t v25 = swift_retain();
      MEMORY[0x1C87528E0](v25);
      if (*(void *)((v70 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v70 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_1C214A7D0();
      }
LABEL_10:
      sub_1C214A820();
      sub_1C214A7A0();

      swift_release();
      unint64_t v14 = v17;
      if (v17 == v12)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v30 = v69;
        if (v69 >> 62) {
          goto LABEL_46;
        }
LABEL_40:
        uint64_t v31 = *(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10);
        goto LABEL_41;
      }
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v30 = MEMORY[0x1E4FBC860];
  if (!(MEMORY[0x1E4FBC860] >> 62)) {
    goto LABEL_40;
  }
LABEL_46:
  swift_bridgeObjectRetain();
  uint64_t v31 = sub_1C214B930();
  swift_bridgeObjectRelease();
LABEL_41:
  if (v31)
  {
    v65(v0[15], v0[6], v0[13]);
    if (qword_1EBF0CA00 != -1) {
      swift_once();
    }
    uint64_t v67 = v0[15];
    uint64_t v32 = v0[13];
    id v33 = (id)qword_1EBF0CA18;
    swift_bridgeObjectRetain();
    uint64_t v34 = sub_1C2147730();
    uint64_t v36 = v35;

    swift_bridgeObjectRelease();
    type metadata accessor for MedicationDoseLogListViewModel(0);
    uint64_t v37 = swift_allocObject();
    v60(v37 + OBJC_IVAR____TtC19HealthMedicationsUI30MedicationDoseLogListViewModel_date, v67, v32);
    uint64_t v38 = (uint64_t *)(v37 + OBJC_IVAR____TtC19HealthMedicationsUI30MedicationDoseLogListViewModel_title);
    *uint64_t v38 = v34;
    v38[1] = v36;
    *(void *)(v37 + 16) = v30;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  if (v70 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v39 = sub_1C214B930();
    swift_bridgeObjectRelease();
    if (v39) {
      goto LABEL_50;
    }
LABEL_58:
    swift_bridgeObjectRelease();
    goto LABEL_59;
  }
  uint64_t v39 = *(void *)((v70 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v39) {
    goto LABEL_58;
  }
LABEL_50:
  v65(v0[15], v0[6], v0[13]);
  if (qword_1EBF0CA00 != -1) {
    swift_once();
  }
  uint64_t v68 = v0[15];
  uint64_t v40 = v0[13];
  id v41 = (id)qword_1EBF0CA18;
  swift_bridgeObjectRetain();
  uint64_t v42 = sub_1C2147730();
  uint64_t v44 = v43;

  swift_bridgeObjectRelease();
  type metadata accessor for MedicationDoseLogListViewModel(0);
  uint64_t v39 = swift_allocObject();
  v60(v39 + OBJC_IVAR____TtC19HealthMedicationsUI30MedicationDoseLogListViewModel_date, v68, v40);
  uint64_t v45 = (uint64_t *)(v39 + OBJC_IVAR____TtC19HealthMedicationsUI30MedicationDoseLogListViewModel_title);
  uint64_t *v45 = v42;
  v45[1] = v44;
  *(void *)(v39 + 16) = v70;
LABEL_59:
  uint64_t v46 = v0[17];
  uint64_t v47 = v0[13];
  uint64_t v48 = v0[14];
  id v50 = (void *)v0[7];
  uint64_t v49 = v0[8];
  unint64_t v51 = (void *)v0[4];
  id v52 = objc_allocWithZone((Class)type metadata accessor for MedicationsLogViewController());
  swift_retain();
  id v53 = v50;
  uint64_t v54 = swift_retain();
  uint64_t v55 = (void *)MedicationsLogViewController.init(medicationDoseLogList:asNeededMedicationDoseLogList:healthStore:showRecordAll:provenance:context:)(v54, v39, v53, 0, v49, 0, 2, 0);
  id v56 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F67B78]), sel_initWithRootViewController_, v55);
  objc_msgSend(v56, sel_setModalPresentationStyle_, 2);
  objc_msgSend(v56, sel_setModalInPresentation_, 1);
  objc_msgSend(v51, sel_presentViewController_animated_completion_, v56, 1, 0);

  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v46, v47);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v57 = (uint64_t (*)(void))v0[1];
  return v57();
}

uint64_t sub_1C1FBC21C()
{
  uint64_t v22 = v0;
  uint64_t v1 = (void *)v0[22];
  swift_release();
  sub_1C21497A0();
  id v2 = v1;
  id v3 = v1;
  uint64_t v4 = sub_1C21497E0();
  os_log_type_t v5 = sub_1C214ABD0();
  if (os_log_type_enabled(v4, v5))
  {
    int v6 = (void *)v0[22];
    uint64_t v7 = v0[10];
    uint64_t v19 = v0[9];
    uint64_t v20 = v0[11];
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136315138;
    uint64_t v21 = v9;
    v0[2] = v6;
    id v10 = v6;
    sub_1C1F23804(0, (unint64_t *)&qword_1EBF0C9C0);
    uint64_t v11 = sub_1C214A610();
    v0[3] = sub_1C1F6FD54(v11, v12, &v21);
    sub_1C214B530();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1C1F0B000, v4, v5, "Could not show logging view error: %s", v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C8754730](v9, -1, -1);
    MEMORY[0x1C8754730](v8, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v20, v19);
  }
  else
  {
    uint64_t v13 = (void *)v0[22];
    uint64_t v15 = v0[10];
    uint64_t v14 = v0[11];
    uint64_t v16 = v0[9];

    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v17 = (uint64_t (*)(void))v0[1];
  return v17();
}

uint64_t sub_1C1FBC490@<X0>(uint64_t a1@<X8>)
{
  uint64_t v35 = a1;
  uint64_t v1 = sub_1C2147AC0();
  uint64_t v30 = *(void *)(v1 - 8);
  uint64_t v31 = (void (*)(char *, uint64_t))v1;
  MEMORY[0x1F4188790](v1);
  uint64_t v28 = (char *)v27 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_1C2147CF0();
  uint64_t v37 = *(void *)(v29 - 8);
  MEMORY[0x1F4188790](v29);
  uint64_t v4 = (char *)v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1C21476D0();
  uint64_t v33 = *(void *)(v5 - 8);
  uint64_t v34 = v5;
  uint64_t v6 = MEMORY[0x1F4188790](v5);
  uint64_t v32 = (char *)v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v36 = (char *)v27 - v8;
  sub_1C2147CB0();
  sub_1C1FBDC68(0, &qword_1EBF0B508, MEMORY[0x1E4F27C88], MEMORY[0x1E4FBBE00]);
  v27[2] = v9;
  uint64_t v10 = sub_1C2147CD0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 72);
  uint64_t v13 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v14 = (v13 + 32) & ~v13;
  v27[1] = v13 | 7;
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1C2152C90;
  uint64_t v16 = *(void (**)(uint64_t, void, uint64_t))(v11 + 104);
  v16(v15 + v14, *MEMORY[0x1E4F27C10], v10);
  v16(v15 + v14 + v12, *MEMORY[0x1E4F27C48], v10);
  v27[0] = 2 * v12;
  v16(v15 + v14 + 2 * v12, *MEMORY[0x1E4F27C50], v10);
  v16(v15 + v14 + 3 * v12, *MEMORY[0x1E4F27BB8], v10);
  sub_1C1F17A58(v15);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  unint64_t v17 = v28;
  sub_1C2147A70();
  sub_1C2147BF0();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, void))(v30 + 8))(v17, v31);
  uint64_t v18 = *(void (**)(char *, uint64_t))(v37 + 8);
  v37 += 8;
  uint64_t v31 = v18;
  uint64_t v19 = v29;
  v18(v4, v29);
  sub_1C2147CB0();
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_1C2150000;
  v16(v20 + v14, *MEMORY[0x1E4F27C20], v10);
  v16(v20 + v14 + v12, *MEMORY[0x1E4F27C30], v10);
  v16(v20 + v14 + v27[0], *MEMORY[0x1E4F27BF0], v10);
  sub_1C1F17A58(v20);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  uint64_t v21 = v32;
  sub_1C2147BF0();
  swift_bridgeObjectRelease();
  uint64_t v22 = v31;
  v31(v4, v19);
  uint64_t v23 = v36;
  sub_1C2147630();
  sub_1C2147640();
  sub_1C2147670();
  sub_1C2147680();
  sub_1C2147690();
  sub_1C21476A0();
  sub_1C21475E0();
  sub_1C21475F0();
  sub_1C2147CB0();
  sub_1C2147C70();
  v22(v4, v19);
  uint64_t v24 = v34;
  uint64_t v25 = *(void (**)(char *, uint64_t))(v33 + 8);
  v25(v21, v34);
  return ((uint64_t (*)(char *, uint64_t))v25)(v23, v24);
}

uint64_t sub_1C1FBCA10()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C1FBDC68(0, (unint64_t *)&qword_1EA2C32D8, MEMORY[0x1E4FBCFE8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v72 = (char *)&v69 - v4;
  uint64_t v5 = sub_1C21497F0();
  uint64_t v73 = *(void *)(v5 - 8);
  uint64_t v74 = v5;
  uint64_t v6 = MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v69 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x1F4188790](v6);
  uint64_t v11 = (char *)&v69 - v10;
  MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v69 - v12;
  sub_1C1FBDC68(0, &qword_1EBF0C368, type metadata accessor for MedicationsRecordDoseItem, v2);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v16 = (char *)&v69 - v15;
  uint64_t v17 = type metadata accessor for MedicationsRecordDoseItem(0);
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(void *)(v18 + 64);
  uint64_t v20 = MEMORY[0x1F4188790](v17);
  uint64_t v71 = (uint64_t)&v69 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20);
  uint64_t v22 = (char *)&v69 - v21;
  id v75 = v1;
  uint64_t v23 = (uint64_t)v1 + OBJC_IVAR____TtC19HealthMedicationsUI39MedicationsRecordDoseCollectionViewCell_item;
  swift_beginAccess();
  sub_1C1FBDF90(v23, (uint64_t)v77, (uint64_t (*)(void))sub_1C1F24488);
  if (!v77[3])
  {
    sub_1C1FBDF30((uint64_t)v77, (uint64_t (*)(void))sub_1C1F24488);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56))(v16, 1, 1, v17);
    goto LABEL_20;
  }
  sub_1C1F23804(0, (unint64_t *)&qword_1EBF0C2F0);
  int v24 = swift_dynamicCast();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v16, v24 ^ 1u, 1, v17);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
  {
LABEL_20:
    sub_1C1FBE418((uint64_t)v16, &qword_1EBF0C368, type metadata accessor for MedicationsRecordDoseItem);
    sub_1C21497A0();
    id v34 = v75;
    uint64_t v35 = sub_1C21497E0();
    os_log_type_t v36 = sub_1C214ABD0();
    if (os_log_type_enabled(v35, v36))
    {
      uint64_t v37 = (uint8_t *)swift_slowAlloc();
      uint64_t v38 = swift_slowAlloc();
      uint64_t v76 = v38;
      *(_DWORD *)uint64_t v37 = 136315138;
      sub_1C1FBDF90(v23, (uint64_t)v77, (uint64_t (*)(void))sub_1C1F24488);
      sub_1C1F24488();
      uint64_t v39 = sub_1C214A630();
      v77[0] = sub_1C1F6FD54(v39, v40, &v76);
      sub_1C214B530();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C1F0B000, v35, v36, "Incorrect view model for MedicationsRecordDoseItem: %s", v37, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C8754730](v38, -1, -1);
      MEMORY[0x1C8754730](v37, -1, -1);
    }
    else
    {
    }
    return (*(uint64_t (**)(char *, uint64_t))(v73 + 8))(v8, v74);
  }
  sub_1C1FBDECC((uint64_t)v16, (uint64_t)v22);
  if ((v22[*(int *)(v17 + 36)] & 1) == 0)
  {
LABEL_38:
    uint64_t v55 = (uint64_t)v22;
    return sub_1C1FBDF30(v55, type metadata accessor for MedicationsRecordDoseItem);
  }
  id v25 = objc_msgSend(v75, sel_viewController);
  if (!v25)
  {
    sub_1C21497D0();
    id v41 = sub_1C21497E0();
    os_log_type_t v42 = sub_1C214ABD0();
    if (os_log_type_enabled(v41, v42))
    {
      uint64_t v43 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v43 = 0;
      _os_log_impl(&dword_1C1F0B000, v41, v42, "Unable to show logging view controller because MedicationsRecordDoseCollectionViewCell vc cannot be resolved.", v43, 2u);
      MEMORY[0x1C8754730](v43, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v73 + 8))(v11, v74);
    goto LABEL_38;
  }
  id v26 = v25;
  if (!*((void *)v22 + 5))
  {
    uint64_t v44 = v22;
    sub_1C21497D0();
    uint64_t v45 = sub_1C21497E0();
    os_log_type_t v46 = sub_1C214ABF0();
    if (os_log_type_enabled(v45, v46))
    {
      uint64_t v47 = swift_slowAlloc();
      id v69 = v26;
      uint64_t v48 = (uint8_t *)v47;
      uint64_t v49 = swift_slowAlloc();
      v77[0] = v49;
      *(_DWORD *)uint64_t v48 = 136315138;
      uint64_t v50 = sub_1C214BC10();
      uint64_t v76 = sub_1C1F6FD54(v50, v51, v77);
      sub_1C214B530();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C1F0B000, v45, v46, "[%s] Could not present MedicationsLogViewController because MedicationsRecordDoseItem did not have a specified medication or a list manager.", v48, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C8754730](v49, -1, -1);
      id v52 = v48;
      id v26 = v69;
      MEMORY[0x1C8754730](v52, -1, -1);
    }

    uint64_t v53 = (*(uint64_t (**)(char *, uint64_t))(v73 + 8))(v13, v74);
    uint64_t v54 = (void (**)(uint64_t))&v44[*(int *)(v17 + 40)];
    if (*v54) {
      (*v54)(v53);
    }

    uint64_t v55 = (uint64_t)v44;
    return sub_1C1FBDF30(v55, type metadata accessor for MedicationsRecordDoseItem);
  }
  id v69 = v25;
  uint64_t v74 = swift_retain();
  unint64_t v27 = sub_1C2149710();
  unint64_t v28 = v27;
  v77[0] = MEMORY[0x1E4FBC860];
  if (v27 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_1C214B930();
    uint64_t v29 = result;
    if (result) {
      goto LABEL_8;
    }
LABEL_34:
    swift_bridgeObjectRelease();
    uint64_t v73 = MEMORY[0x1E4FBC860];
LABEL_35:
    swift_bridgeObjectRelease();
    uint64_t v56 = sub_1C214A8C0();
    uint64_t v57 = (uint64_t)v72;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v56 - 8) + 56))(v72, 1, 1, v56);
    uint64_t v58 = v71;
    sub_1C1FBDF90((uint64_t)v22, v71, type metadata accessor for MedicationsRecordDoseItem);
    sub_1C214A890();
    id v59 = v75;
    id v60 = v69;
    uint64_t v61 = sub_1C214A880();
    unint64_t v62 = (*(unsigned __int8 *)(v18 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
    uint64_t v63 = v22;
    unint64_t v64 = (void *)swift_allocObject();
    uint64_t v65 = MEMORY[0x1E4FBCFD8];
    v64[2] = v61;
    v64[3] = v65;
    v64[4] = v59;
    v64[5] = v60;
    v64[6] = v73;
    sub_1C1FBDECC(v58, (uint64_t)v64 + v62);
    uint64_t v66 = (uint64_t)v64;
    uint64_t v22 = v63;
    sub_1C1F86288(v57, (uint64_t)&unk_1EA2C4730, v66);
    swift_release();
    uint64_t v67 = swift_release();
    uint64_t v68 = (void (**)(uint64_t))&v63[*(int *)(v17 + 40)];
    if (*v68) {
      (*v68)(v67);
    }

    goto LABEL_38;
  }
  uint64_t v29 = *(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain();
  if (!v29) {
    goto LABEL_34;
  }
LABEL_8:
  uint64_t ObjectType = (uint64_t)v22;
  if (v29 >= 1)
  {
    for (uint64_t i = 0; i != v29; ++i)
    {
      if ((v28 & 0xC000000000000001) != 0) {
        id v32 = (id)MEMORY[0x1C8753960](i, v28);
      }
      else {
        id v32 = *(id *)(v28 + 8 * i + 32);
      }
      uint64_t v33 = v32;
      self;
      if (swift_dynamicCastObjCClass())
      {
        MEMORY[0x1C87528E0]();
        if (*(void *)((v77[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v77[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1C214A7D0();
        }
        sub_1C214A820();
        sub_1C214A7A0();
      }
      else
      {
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v73 = v77[0];
    uint64_t v22 = (char *)ObjectType;
    goto LABEL_35;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C1FBD400(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[4] = a6;
  v7[5] = a7;
  v7[2] = a4;
  v7[3] = a5;
  sub_1C214A890();
  v7[6] = sub_1C214A880();
  uint64_t v9 = sub_1C214A840();
  v7[7] = v9;
  v7[8] = v8;
  return MEMORY[0x1F4188298](sub_1C1FBD49C, v9, v8);
}

uint64_t sub_1C1FBD49C()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = v1 + *(int *)(type metadata accessor for MedicationsRecordDoseItem(0) + 32);
  uint64_t v3 = *(void *)(v1 + 32);
  uint64_t v4 = (void *)swift_task_alloc();
  v0[9] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1C1FBD560;
  uint64_t v6 = v0[3];
  uint64_t v5 = v0[4];
  return sub_1C1FBB620(v6, v5, v2, v3, 2);
}

uint64_t sub_1C1FBD560()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 64);
  uint64_t v3 = *(void *)(v1 + 56);
  return MEMORY[0x1F4188298](sub_1C1FBD680, v3, v2);
}

uint64_t sub_1C1FBD680()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

id sub_1C1FBD908()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MedicationsRecordDoseCollectionViewCell(0);
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1C1FBD9C0()
{
  return type metadata accessor for MedicationsRecordDoseCollectionViewCell(0);
}

uint64_t type metadata accessor for MedicationsRecordDoseCollectionViewCell(uint64_t a1)
{
  return sub_1C1F20D10(a1, (uint64_t *)&unk_1EBF0C498);
}

void sub_1C1FBD9E8()
{
  sub_1C1FBDC68(319, &qword_1EBF0C618, MEMORY[0x1E4FB0E68], MEMORY[0x1E4FBB718]);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_1C1FBDAC0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI39MedicationsRecordDoseCollectionViewCell_item;
  swift_beginAccess();
  return sub_1C1FBDF90(v3, a1, (uint64_t (*)(void))sub_1C1F24488);
}

uint64_t sub_1C1FBDB28(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI39MedicationsRecordDoseCollectionViewCell_item;
  swift_beginAccess();
  sub_1C1F32DDC(a1, v3);
  swift_endAccess();
  sub_1C1FB9A0C();
  return sub_1C1FBDF30(a1, (uint64_t (*)(void))sub_1C1F24488);
}

uint64_t (*sub_1C1FBDBAC(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1C1FBDC0C;
}

uint64_t sub_1C1FBDC0C(uint64_t a1, char a2)
{
  uint64_t result = swift_endAccess();
  if ((a2 & 1) == 0) {
    return sub_1C1FB9A0C();
  }
  return result;
}

uint64_t sub_1C1FBDC40()
{
  return sub_1C1FBCA10();
}

void sub_1C1FBDC68(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t type metadata accessor for MedicationsRecordDoseItem(uint64_t a1)
{
  return sub_1C1F20D10(a1, (uint64_t *)&unk_1EBF0C358);
}

uint64_t sub_1C1FBDCEC()
{
  return 0x6D65744965736F44;
}

uint64_t sub_1C1FBDDBC()
{
  return sub_1C214BB80();
}

uint64_t sub_1C1FBDE0C()
{
  sub_1C214A690();

  return sub_1C214A690();
}

uint64_t sub_1C1FBDE4C()
{
  return sub_1C214BB80();
}

uint64_t sub_1C1FBDE9C(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 16) == *(void *)(a2 + 16) && *(void *)(a1 + 24) == *(void *)(a2 + 24)) {
    return 1;
  }
  else {
    return sub_1C214BA80();
  }
}

uint64_t sub_1C1FBDECC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MedicationsRecordDoseItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C1FBDF30(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C1FBDF90(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C1FBDFF8()
{
  uint64_t v1 = (int *)(type metadata accessor for MedicationsRecordDoseItem(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 56) & ~v2;
  uint64_t v4 = *(void *)(*(void *)v1 + 64);
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  uint64_t v5 = v0 + v3 + v1[10];
  uint64_t v6 = sub_1C2147AC0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  if (*(void *)(v0 + v3 + v1[12])) {
    swift_release();
  }

  return MEMORY[0x1F4186498](v0, v3 + v4, v2 | 7);
}

uint64_t sub_1C1FBE13C(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for MedicationsRecordDoseItem(0) - 8);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = v1[5];
  uint64_t v9 = v1[6];
  uint64_t v10 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  *uint64_t v11 = v2;
  v11[1] = sub_1C1F40400;
  return sub_1C1FBD400(a1, v5, v6, v7, v8, v9, v10);
}

void sub_1C1FBE24C()
{
  if (!qword_1EBF0C600)
  {
    sub_1C2149860();
    sub_1C1FBE2C0();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EBF0C600);
    }
  }
}

unint64_t sub_1C1FBE2C0()
{
  unint64_t result = qword_1EBF0C9F8;
  if (!qword_1EBF0C9F8)
  {
    unint64_t result = swift_getFunctionTypeMetadata0();
    atomic_store(result, (unint64_t *)&qword_1EBF0C9F8);
  }
  return result;
}

uint64_t sub_1C1FBE304(uint64_t a1, uint64_t a2)
{
  sub_1C1FBDC68(0, &qword_1EBF0C618, MEMORY[0x1E4FB0E68], MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C1FBE398(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_1C1FBDC68(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_1C1FBE418(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1C1FBDC68(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

void *sub_1C1FBE488(void *a1, void *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v19 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    uint64_t v10 = (void *)a2[4];
    uint64_t v9 = a2[5];
    uint64_t v11 = a3[8];
    uint64_t v21 = (char *)a2 + v11;
    uint64_t v22 = (char *)a1 + v11;
    a1[4] = v10;
    a1[5] = v9;
    uint64_t v12 = sub_1C2147AC0();
    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v14 = v10;
    swift_retain();
    v13(v22, v21, v12);
    uint64_t v15 = a3[10];
    *((unsigned char *)v4 + a3[9]) = *((unsigned char *)a2 + a3[9]);
    uint64_t v16 = (void *)((char *)v4 + v15);
    uint64_t v17 = (void *)((char *)a2 + v15);
    if (*v17)
    {
      uint64_t v18 = v17[1];
      void *v16 = *v17;
      v16[1] = v18;
      swift_retain();
    }
    else
    {
      *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
    }
  }
  return v4;
}

uint64_t sub_1C1FBE5E0(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 32);
  uint64_t v5 = sub_1C2147AC0();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  if (*(void *)(a1 + *(int *)(a2 + 40)))
  {
    return swift_release();
  }
  return result;
}

void *sub_1C1FBE6A0(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  uint64_t v9 = (void *)a2[4];
  uint64_t v8 = a2[5];
  uint64_t v10 = a3[8];
  uint64_t v19 = (char *)a2 + v10;
  uint64_t v20 = (char *)a1 + v10;
  a1[4] = v9;
  a1[5] = v8;
  uint64_t v11 = sub_1C2147AC0();
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v13 = v9;
  swift_retain();
  v12(v20, v19, v11);
  uint64_t v14 = a3[10];
  *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  uint64_t v15 = (void *)((char *)a1 + v14);
  uint64_t v16 = (void *)((char *)a2 + v14);
  if (*v16)
  {
    uint64_t v17 = v16[1];
    void *v15 = *v16;
    v15[1] = v17;
    swift_retain();
  }
  else
  {
    *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
  }
  return a1;
}

void *sub_1C1FBE7A8(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = (void *)a2[4];
  uint64_t v7 = (void *)a1[4];
  a1[4] = v6;
  id v8 = v6;

  a1[5] = a2[5];
  swift_retain();
  swift_release();
  uint64_t v9 = a3[8];
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = sub_1C2147AC0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 24))(v10, v11, v12);
  *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  uint64_t v13 = a3[10];
  uint64_t v14 = (void *)((char *)a1 + v13);
  uint64_t v15 = (void *)((char *)a2 + v13);
  uint64_t v16 = *(void *)((char *)a1 + v13);
  uint64_t v17 = *v15;
  if (!v16)
  {
    if (v17)
    {
      uint64_t v19 = v15[1];
      *uint64_t v14 = v17;
      v14[1] = v19;
      swift_retain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
    return a1;
  }
  if (!v17)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v18 = v15[1];
  *uint64_t v14 = v17;
  v14[1] = v18;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *sub_1C1FBE900(_OWORD *a1, _OWORD *a2, int *a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  uint64_t v7 = a3[8];
  id v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1C2147AC0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[10];
  *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  uint64_t v12 = (void *)((char *)a1 + v11);
  uint64_t v13 = (uint64_t *)((char *)a2 + v11);
  uint64_t v14 = *v13;
  if (*v13)
  {
    uint64_t v15 = v13[1];
    *uint64_t v12 = v14;
    v12[1] = v15;
  }
  else
  {
    *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
  }
  return a1;
}

void *sub_1C1FBE9C4(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  id v8 = (void *)a1[4];
  a1[4] = a2[4];

  a1[5] = a2[5];
  swift_release();
  uint64_t v9 = a3[8];
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = sub_1C2147AC0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 40))(v10, v11, v12);
  uint64_t v13 = a3[10];
  *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  uint64_t v14 = (void *)((char *)a1 + v13);
  uint64_t v15 = (void *)((char *)a2 + v13);
  uint64_t v16 = *v15;
  if (!*(void *)((char *)a1 + v13))
  {
    if (v16)
    {
      uint64_t v18 = v15[1];
      *uint64_t v14 = v16;
      v14[1] = v18;
      return a1;
    }
LABEL_7:
    *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
    return a1;
  }
  if (!v16)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v17 = v15[1];
  *uint64_t v14 = v16;
  v14[1] = v17;
  swift_release();
  return a1;
}

uint64_t sub_1C1FBEAE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C1FBEAF4);
}

uint64_t sub_1C1FBEAF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1C2147AC0();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 32);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1C1FBEBA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C1FBEBB8);
}

uint64_t sub_1C1FBEBB8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1C2147AC0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 32);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1C1FBEC60()
{
  uint64_t result = sub_1C2147AC0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_1C1FBED28()
{
  unint64_t result = qword_1EBF0C350;
  if (!qword_1EBF0C350)
  {
    type metadata accessor for MedicationsRecordDoseItem(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBF0C350);
  }
  return result;
}

uint64_t MedicationOptionsDataSource.currentValuePublisher.getter()
{
  sub_1C1FC01B0();

  return swift_retain();
}

uint64_t MedicationOptionsDataSource.item.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C1F246EC(v1 + qword_1EA2C7D70, a1);
}

void *MedicationOptionsDataSource.__allocating_init(item:currentValuePublisher:)(uint64_t a1, uint64_t a2)
{
  swift_allocObject();
  unint64_t v4 = sub_1C1FC01C0(a1, a2);
  swift_release();
  return v4;
}

void *MedicationOptionsDataSource.init(item:currentValuePublisher:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = sub_1C1FC01C0(a1, a2);
  swift_release();
  return v2;
}

uint64_t sub_1C1FBEE4C()
{
  return MEMORY[0x1E4FBC860];
}

uint64_t sub_1C1FBEE58()
{
  uint64_t v19 = *v0;
  uint64_t v17 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FBCC28];
  sub_1C1FC0BE0(0, &qword_1EBF0C7E8, MEMORY[0x1E4FBCC28], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)&v17 - v2;
  uint64_t v18 = *(void *)(v19 + class metadata base offset for MedicationOptionsDataSource);
  sub_1C214B4F0();
  uint64_t v4 = sub_1C2149EA0();
  unint64_t v5 = sub_1C1FC0A6C();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = sub_1C1FC0AAC((unint64_t *)&qword_1EBF0C7F0, (void (*)(uint64_t))sub_1C1FC0A6C);
  uint64_t v21 = v4;
  unint64_t v22 = v5;
  uint64_t v23 = WitnessTable;
  uint64_t v24 = v7;
  uint64_t v8 = sub_1C2149DF0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v17 - v10;
  uint64_t v21 = *(uint64_t *)((char *)v0 + qword_1EA2C4738);
  swift_retain();
  id v20 = (id)sub_1C214AD80();
  uint64_t v12 = sub_1C214AD20();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v3, 1, 1, v12);
  sub_1C214A0A0();
  sub_1C1FC0AF4((uint64_t)v3, &qword_1EBF0C7E8, v17);

  swift_release();
  uint64_t v13 = swift_allocObject();
  swift_weakInit();
  uint64_t v14 = (void *)swift_allocObject();
  uint64_t v15 = v19;
  v14[2] = v18;
  v14[3] = *(void *)(class metadata base offset for MedicationOptionsDataSource + v15 + 8);
  v14[4] = v13;
  swift_getWitnessTable();
  sub_1C214A0F0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  swift_beginAccess();
  sub_1C2149E20();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1C1FBF1FC()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1C1FBF280();
    return swift_release();
  }
  return result;
}

uint64_t sub_1C1FBF254()
{
  return sub_1C2149E90();
}

uint64_t sub_1C1FBF280()
{
  (*(void (**)(void))(class metadata base offset for MedicationOptionsDataSource + *v0 + 80))();
  sub_1C21485C0();
  uint64_t v1 = swift_bridgeObjectRelease();
  (*(void (**)(uint64_t))(class metadata base offset for MedicationOptionsDataSource + *v0 + 88))(v1);
  sub_1C21485C0();
  uint64_t v2 = swift_bridgeObjectRelease();
  (*(void (**)(uint64_t))(class metadata base offset for MedicationOptionsDataSource + *v0 + 96))(v2);
  sub_1C21485C0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1C1FBF3BC()
{
  return sub_1C214ACC0();
}

void *sub_1C1FBF444()
{
  uint64_t v0 = sub_1C2148710();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2148690();
  uint64_t v4 = (void *)sub_1C2148700();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  objc_msgSend(v4, sel_contentInsets);
  objc_msgSend(v4, sel_setContentInsets_, 0.0);
  objc_msgSend(v4, sel_contentInsets);
  objc_msgSend(v4, sel_setContentInsets_);
  return v4;
}

uint64_t sub_1C1FBF558(uint64_t a1)
{
  uint64_t v3 = sub_1C2148710();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](v3);
  uint64_t v7 = &v23[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = MEMORY[0x1F4188790](v5);
  uint64_t v10 = &v23[-v9];
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = &v23[-v11];
  sub_1C2148690();
  (*(void (**)(uint64_t))(class metadata base offset for MedicationOptionsDataSource + *v1 + 104))(a1);
  uint64_t v14 = v13;
  swift_bridgeObjectRelease();
  if (v14)
  {
    sub_1C2148660();
    (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v12, v3);
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v4 + 32))(v12, v10, v3);
  }
  (*(void (**)(uint64_t))(class metadata base offset for MedicationOptionsDataSource + *v1 + 112))(a1);
  uint64_t v16 = v15;
  swift_bridgeObjectRelease();
  if (v16)
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v4 + 16))(v10, v12, v3);
    sub_1C2148650();
    uint64_t v17 = *(void (**)(unsigned char *, uint64_t))(v4 + 8);
    v17(v10, v3);
    v17(v12, v3);
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v4 + 32))(v12, v7, v3);
  }
  uint64_t v18 = (void (*)(unsigned char *, void))sub_1C21486D0();
  *(void *)(v19 + 16) = 0;
  v18(v23, 0);
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v4 + 16))(v10, v12, v3);
  uint64_t v20 = sub_1C20F270C();
  uint64_t v21 = *(void (**)(unsigned char *, uint64_t))(v4 + 8);
  v21(v10, v3);
  v21(v12, v3);
  return v20;
}

uint64_t sub_1C1FBF854(uint64_t a1)
{
  uint64_t v2 = sub_1C2148710();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 == 1)
  {
    sub_1C2148690();
    uint64_t v7 = (void *)sub_1C2148700();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    objc_msgSend(v7, sel_contentInsets);
    objc_msgSend(v7, sel_setContentInsets_, 0.0);
    objc_msgSend(v7, sel_contentInsets);
    objc_msgSend(v7, sel_setContentInsets_);
    return (uint64_t)v7;
  }
  if (a1)
  {
    sub_1C2148690();
    uint64_t v7 = (void *)sub_1C2148700();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    return (uint64_t)v7;
  }

  return sub_1C1FBF558(0);
}

uint64_t sub_1C1FBF9E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  sub_1C1FC0BE0(0, (unint64_t *)&qword_1EA2C2FE8, MEMORY[0x1E4F664F8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v27 - v8;
  uint64_t v10 = sub_1C2147B20();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  BOOL v15 = sub_1C214A5F0() == a1 && v14 == a2;
  unint64_t v28 = a3;
  if (v15)
  {
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  char v16 = sub_1C214BA80();
  swift_bridgeObjectRelease();
  if (v16)
  {
LABEL_13:
    uint64_t v22 = sub_1C2147D80();
    (*(void (**)(uint64_t))(class metadata base offset for MedicationOptionsDataSource + *v3 + 112))(v22);
    uint64_t v29 = 0x74497265746F6F46;
    unint64_t v30 = 0xEB000000005F6D65;
    sub_1C2147B10();
    sub_1C2147AD0();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    sub_1C214A6C0();
    swift_bridgeObjectRelease();
    uint64_t v23 = sub_1C2148960();
    uint64_t v24 = v28;
    v28[3] = v23;
    v24[4] = sub_1C1FC0AAC(&qword_1EA2C2D38, MEMORY[0x1E4F665E8]);
    __swift_allocate_boxed_opaque_existential_1(v24);
    return sub_1C2148950();
  }
  if (sub_1C214A5F0() == a1 && v17 == a2)
  {
    swift_bridgeObjectRelease();
    uint64_t v20 = v28;
  }
  else
  {
    char v19 = sub_1C214BA80();
    swift_bridgeObjectRelease();
    uint64_t v20 = v28;
    if ((v19 & 1) == 0)
    {
      v20[3] = sub_1C2148220();
      v20[4] = sub_1C1FC0AAC(&qword_1EA2C2D28, MEMORY[0x1E4F66330]);
      __swift_allocate_boxed_opaque_existential_1(v20);
      return sub_1C2148210();
    }
  }
  uint64_t v25 = sub_1C2147D80();
  (*(void (**)(uint64_t))(class metadata base offset for MedicationOptionsDataSource + *v3 + 104))(v25);
  uint64_t v26 = sub_1C2148770();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v9, 1, 1, v26);
  v20[3] = sub_1C2148790();
  v20[4] = sub_1C1FC0AAC((unint64_t *)&qword_1EA2C3000, MEMORY[0x1E4F66500]);
  __swift_allocate_boxed_opaque_existential_1(v20);
  return sub_1C2148780();
}

void MedicationOptionsDataSource.__allocating_init(arrangedSections:identifier:)()
{
}

void MedicationOptionsDataSource.init(arrangedSections:identifier:)()
{
}

uint64_t sub_1C1FBFED8()
{
  swift_release();
  sub_1C1FC0AF4(v0 + qword_1EA2C7D70, (unint64_t *)&qword_1EA2C2CC8, type metadata accessor for MedicationSearchItem);

  return swift_bridgeObjectRelease();
}

uint64_t MedicationOptionsDataSource.deinit()
{
  uint64_t v0 = sub_1C2148610();
  swift_release();
  sub_1C1FC0AF4(v0 + qword_1EA2C7D70, (unint64_t *)&qword_1EA2C2CC8, type metadata accessor for MedicationSearchItem);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t MedicationOptionsDataSource.__deallocating_deinit()
{
  MedicationOptionsDataSource.deinit();

  return swift_deallocClassInstance();
}

uint64_t sub_1C1FC000C()
{
  return (*(uint64_t (**)(void))(class metadata base offset for MedicationOptionsDataSource + **v0 + 144))();
}

uint64_t sub_1C1FC006C()
{
  sub_1C1FC01B0();

  return swift_retain();
}

uint64_t sub_1C1FC0094()
{
  return (*(uint64_t (**)(void))(class metadata base offset for MedicationOptionsDataSource + **v0 + 168))();
}

uint64_t sub_1C1FC00F4()
{
  return (*(uint64_t (**)(void))(class metadata base offset for MedicationOptionsDataSource + **v0 + 176))();
}

uint64_t sub_1C1FC0154()
{
  return sub_1C2148B80();
}

uint64_t sub_1C1FC01B0()
{
  return *(void *)(v0 + qword_1EA2C4738);
}

void *sub_1C1FC01C0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1C2147B20();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(v3 + qword_1EA2C4740) = MEMORY[0x1E4FBC870];
  sub_1C1F246EC(a1, v3 + qword_1EA2C7D70);
  *(void *)(v3 + qword_1EA2C4738) = a2;
  v16[0] = 0;
  v16[1] = 0xE000000000000000;
  swift_retain();
  sub_1C214B7C0();
  swift_bridgeObjectRelease();
  strcpy((char *)v16, "MutableArray<");
  HIWORD(v16[1]) = -4864;
  sub_1C2147B10();
  sub_1C2147AD0();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  sub_1C214A6C0();
  uint64_t v10 = (void *)sub_1C2148590();
  sub_1C1FC0BE0(0, (unint64_t *)&qword_1EA2C2DD0, MEMORY[0x1E4F66468], MEMORY[0x1E4FBBE00]);
  sub_1C2148540();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1C2150000;
  uint64_t v11 = *(void (**)(uint64_t))(class metadata base offset for MedicationOptionsDataSource + *v10 + 80);
  uint64_t v12 = swift_retain_n();
  v11(v12);
  uint64_t v13 = sub_1C2148520();
  (*(void (**)(uint64_t))(class metadata base offset for MedicationOptionsDataSource + *v10 + 88))(v13);
  uint64_t v14 = sub_1C2148520();
  (*(void (**)(uint64_t))(class metadata base offset for MedicationOptionsDataSource + *v10 + 96))(v14);
  sub_1C2148520();
  sub_1C21485B0();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1C1FBEE58();
  swift_release();
  sub_1C1FC0AF4(a1, (unint64_t *)&qword_1EA2C2CC8, type metadata accessor for MedicationSearchItem);
  return v10;
}

void sub_1C1FC05D8()
{
}

uint64_t sub_1C1FC0608(uint64_t a1, uint64_t a2)
{
  return *(void *)(class metadata base offset for MedicationOptionsDataSource + a2 + 8);
}

uint64_t sub_1C1FC061C()
{
  return swift_getWitnessTable();
}

void sub_1C1FC0638()
{
  sub_1C1FC0BE0(319, (unint64_t *)&qword_1EA2C2CC8, type metadata accessor for MedicationSearchItem, MEMORY[0x1E4FBB718]);
  if (v0 <= 0x3F) {
    swift_initClassMetadata2();
  }
}

uint64_t type metadata accessor for MedicationOptionsDataSource()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for MedicationOptionsDataSource(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MedicationOptionsDataSource);
}

uint64_t dispatch thunk of MedicationOptionsDataSource.value.getter()
{
  return (*(uint64_t (**)(void))(class metadata base offset for MedicationOptionsDataSource + *v0 + 40))();
}

uint64_t dispatch thunk of MedicationOptionsDataSource.__allocating_init(item:currentValuePublisher:)()
{
  return (*(uint64_t (**)(void))(class metadata base offset for MedicationOptionsDataSource + v0 + 72))();
}

uint64_t dispatch thunk of MedicationOptionsDataSource.makeItems()()
{
  return (*(uint64_t (**)(void))(class metadata base offset for MedicationOptionsDataSource + *v0 + 80))();
}

uint64_t dispatch thunk of MedicationOptionsDataSource.makeFooterItems()()
{
  return (*(uint64_t (**)(void))(class metadata base offset for MedicationOptionsDataSource + *v0 + 88))();
}

uint64_t dispatch thunk of MedicationOptionsDataSource.makeAlternativeSelectionItems()()
{
  return (*(uint64_t (**)(void))(class metadata base offset for MedicationOptionsDataSource + *v0 + 96))();
}

uint64_t dispatch thunk of MedicationOptionsDataSource.headerTitle(atIndex:)()
{
  return (*(uint64_t (**)(void))(class metadata base offset for MedicationOptionsDataSource + *v0 + 104))();
}

uint64_t dispatch thunk of MedicationOptionsDataSource.footerText(atIndex:)()
{
  return (*(uint64_t (**)(void))(class metadata base offset for MedicationOptionsDataSource + *v0 + 112))();
}

uint64_t dispatch thunk of MedicationOptionsDataSource.selectedValue.getter()
{
  return (*(uint64_t (**)(void))(class metadata base offset for MedicationOptionsDataSource + *v0 + 128))();
}

uint64_t dispatch thunk of MedicationOptionsDataSource.registerCells(for:)()
{
  return (*(uint64_t (**)(void))(class metadata base offset for MedicationOptionsDataSource + *v0 + 144))();
}

uint64_t dispatch thunk of MedicationOptionsDataSource.footerLayout(environment:)()
{
  return (*(uint64_t (**)(void))(class metadata base offset for MedicationOptionsDataSource + *v0 + 152))();
}

uint64_t dispatch thunk of MedicationOptionsDataSource.itemsLayout(section:environment:)()
{
  return (*(uint64_t (**)(void))(class metadata base offset for MedicationOptionsDataSource + *v0 + 160))();
}

uint64_t dispatch thunk of MedicationOptionsDataSource.layout(for:environment:)()
{
  return (*(uint64_t (**)(void))(class metadata base offset for MedicationOptionsDataSource + *v0 + 168))();
}

uint64_t dispatch thunk of MedicationOptionsDataSource.supplementaryItem(ofKind:at:)()
{
  return (*(uint64_t (**)(void))(class metadata base offset for MedicationOptionsDataSource + *v0 + 176))();
}

unint64_t sub_1C1FC0A6C()
{
  unint64_t result = qword_1EBF0CB10;
  if (!qword_1EBF0CB10)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBF0CB10);
  }
  return result;
}

uint64_t sub_1C1FC0AAC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C1FC0AF4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1C1FC0BE0(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1C1FC0B64()
{
  swift_weakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C1FC0B9C()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1C1FC0BD4()
{
  return sub_1C1FBF1FC();
}

void sub_1C1FC0BE0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t _s19HealthMedicationsUI24CustomStrengthOptionItemV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v3 = a1[3];
  uint64_t v4 = a2[2];
  uint64_t v5 = a2[3];
  BOOL v6 = *a1 == *a2 && a1[1] == a2[1];
  if (v6 || (char v7 = sub_1C214BA80(), result = 0, (v7 & 1) != 0))
  {
    if (v2 == v4 && v3 == v5)
    {
      return 1;
    }
    else
    {
      return sub_1C214BA80();
    }
  }
  return result;
}

uint64_t destroy for ScheduledDoseIdentifier()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for ScheduledDoseIdentifier(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for ScheduledDoseIdentifier(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for ScheduledDoseIdentifier(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ScheduledDoseIdentifier(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ScheduledDoseIdentifier(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ScheduledDoseIdentifier()
{
  return &type metadata for ScheduledDoseIdentifier;
}

unint64_t sub_1C1FC0EC0()
{
  unint64_t result = qword_1EA2C47C8;
  if (!qword_1EA2C47C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C47C8);
  }
  return result;
}

uint64_t static HKDrugInteractionResultCollection.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t v4 = *(void *)(a1 + 16);
  swift_beginAccess();
  uint64_t v5 = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v6 = sub_1C1FC0FE4(v4, v5, (uint64_t)&qword_1EBF0C880);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v6 & 1;
}

uint64_t sub_1C1FC0FBC(uint64_t a1, uint64_t a2)
{
  return sub_1C1FC0FE4(a1, a2, (uint64_t)&qword_1EBF0C880);
}

uint64_t sub_1C1FC0FD0(uint64_t a1, uint64_t a2)
{
  return sub_1C1FC0FE4(a1, a2, (uint64_t)&unk_1EBF0C8A0);
}

uint64_t sub_1C1FC0FE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = (unint64_t)a1 >> 62;
  if ((unint64_t)a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1C214B930();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v7 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  unint64_t v8 = (unint64_t)a2 >> 62;
  if ((unint64_t)a2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = (void *)sub_1C214B930();
    swift_bridgeObjectRelease();
    if ((void *)v7 == v9) {
      goto LABEL_5;
    }
    return 0;
  }
  uint64_t v9 = *(void **)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if ((void *)v7 != v9) {
    return 0;
  }
LABEL_5:
  if (!v7) {
    return 1;
  }
  uint64_t v10 = a1 & 0xFFFFFFFFFFFFFF8;
  uint64_t v11 = (a1 & 0xFFFFFFFFFFFFFF8) + 32;
  if (a1 < 0) {
    uint64_t v10 = a1;
  }
  if (v6) {
    uint64_t v11 = v10;
  }
  uint64_t v12 = a2 & 0xFFFFFFFFFFFFFF8;
  uint64_t v13 = (a2 & 0xFFFFFFFFFFFFFF8) + 32;
  if (a2 < 0) {
    uint64_t v12 = a2;
  }
  if (v8) {
    uint64_t v13 = v12;
  }
  if (v11 == v13) {
    return 1;
  }
  if (v7 < 0)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  unint64_t v23 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
LABEL_42:
    uint64_t result = MEMORY[0x1C8753960](0, a1);
    goto LABEL_19;
  }
  if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_44;
  }
  uint64_t result = (uint64_t)*(id *)(a1 + 32);
LABEL_19:
  uint64_t v9 = (void *)result;
  unint64_t v8 = a2 & 0xC000000000000001;
  if ((a2 & 0xC000000000000001) != 0)
  {
LABEL_44:
    id v15 = (id)MEMORY[0x1C8753960](0, a2);
LABEL_22:
    char v16 = v15;
    sub_1C1F12718(0, (unint64_t *)a3);
    a3 = sub_1C214B220();

    if (a3)
    {
      uint64_t v17 = 1 - v7;
      for (uint64_t i = 5; ; ++i)
      {
        uint64_t v7 = v17 + i == 5;
        if (v17 + i == 5) {
          return v7;
        }
        unint64_t v22 = i - 4;
        if (v23)
        {
          a3 = MEMORY[0x1C8753960](i - 4, a1);
          if (v8) {
            goto LABEL_24;
          }
        }
        else
        {
          if (v22 >= *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
LABEL_40:
            __break(1u);
            goto LABEL_41;
          }
          a3 = (uint64_t)*(id *)(a1 + 8 * i);
          if (v8)
          {
LABEL_24:
            id v19 = (id)MEMORY[0x1C8753960](i - 4, a2);
            goto LABEL_25;
          }
        }
        if (v22 >= *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_40;
        }
        id v19 = *(id *)(a2 + 8 * i);
LABEL_25:
        uint64_t v20 = v19;
        char v21 = sub_1C214B220();

        if ((v21 & 1) == 0) {
          return v7;
        }
      }
    }
    return 0;
  }
  if (*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v15 = *(id *)(a2 + 32);
    goto LABEL_22;
  }
  __break(1u);
  return result;
}

BOOL sub_1C1FC1264(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  if (v2 != a2[2]) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  if (a1[4] != a2[4]) {
    return 0;
  }
  uint64_t v3 = a1 + 5;
  uint64_t v4 = a2 + 5;
  uint64_t v5 = v2 - 1;
  do
  {
    BOOL result = v5 == 0;
    if (!v5) {
      break;
    }
    uint64_t v8 = *v3++;
    uint64_t v7 = v8;
    uint64_t v9 = *v4++;
    --v5;
  }
  while (v7 == v9);
  return result;
}

uint64_t sub_1C1FC12D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  uint64_t v3 = 0;
  uint64_t v30 = a1;
  uint64_t v31 = a2;
  while (1)
  {
    uint64_t v5 = *(void **)(a1 + v3 + 40);
    uint64_t v4 = *(void *)(a1 + v3 + 48);
    uint64_t v6 = *(void *)(a1 + v3 + 64);
    uint64_t v41 = *(void *)(a1 + v3 + 56);
    uint64_t v8 = *(void *)(a1 + v3 + 72);
    uint64_t v7 = *(void *)(a1 + v3 + 80);
    uint64_t v9 = *(void *)(a1 + v3 + 88);
    uint64_t v10 = *(unsigned __int8 *)(a1 + v3 + 32);
    uint64_t v11 = *(void **)(a2 + v3 + 40);
    uint64_t v12 = *(void *)(a2 + v3 + 48);
    uint64_t v42 = *(void *)(a2 + v3 + 56);
    uint64_t v13 = *(void *)(a2 + v3 + 72);
    unint64_t v14 = 0xE800000000000000;
    uint64_t v15 = 0x656C756465686373;
    switch(v10)
    {
      case 1:
        uint64_t v15 = 0x656863536174656DLL;
        unint64_t v14 = 0xEC000000656C7564;
        break;
      case 2:
        uint64_t v15 = 0x6874676E65727473;
        break;
      case 3:
        unint64_t v14 = 0xE400000000000000;
        uint64_t v15 = 1836216166;
        break;
      default:
        break;
    }
    unint64_t v16 = 0xE800000000000000;
    uint64_t v17 = 0x656C756465686373;
    switch(*(unsigned char *)(a2 + v3 + 32))
    {
      case 1:
        uint64_t v17 = 0x656863536174656DLL;
        unint64_t v16 = 0xEC000000656C7564;
        break;
      case 2:
        uint64_t v17 = 0x6874676E65727473;
        break;
      case 3:
        unint64_t v16 = 0xE400000000000000;
        uint64_t v17 = 1836216166;
        break;
      default:
        break;
    }
    uint64_t v38 = *(void *)(a2 + v3 + 88);
    uint64_t v39 = v9;
    uint64_t v40 = v8;
    uint64_t v32 = *(void *)(a2 + v3 + 80);
    uint64_t v33 = v7;
    uint64_t v34 = *(void *)(a2 + v3 + 64);
    uint64_t v35 = v6;
    uint64_t v36 = v3;
    uint64_t v37 = v2;
    if (v15 == v17 && v14 == v16)
    {
      swift_bridgeObjectRetain();
      id v18 = v5;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v19 = v11;
      swift_bridgeObjectRetain();
      uint64_t v20 = v13;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v29 = sub_1C214BA80();
      swift_bridgeObjectRetain();
      id v21 = v5;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v22 = v11;
      swift_bridgeObjectRetain();
      uint64_t v20 = v13;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v29 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        return 0;
      }
    }
    sub_1C1F12718(0, (unint64_t *)&qword_1EA2C4AA0);
    if ((sub_1C214B220() & 1) == 0 || (v4 != v12 || v41 != v42) && (sub_1C214BA80() & 1) == 0)
    {
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_46;
    }
    if (!v40) {
      break;
    }
    if (!v20) {
      goto LABEL_41;
    }
    uint64_t v23 = v20;
    uint64_t v25 = v38;
    uint64_t v24 = v39;
    if ((v35 != v34 || v40 != v23) && (sub_1C214BA80() & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      goto LABEL_46;
    }
LABEL_31:
    if (!v24)
    {
      if (v25)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_47;
      }
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease_n();
      goto LABEL_6;
    }
    if (!v25)
    {
LABEL_41:
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      goto LABEL_46;
    }
    if (v33 == v32 && v24 == v25)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
LABEL_6:
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_7;
    }
    char v27 = sub_1C214BA80();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v27 & 1) == 0) {
      return 0;
    }
LABEL_7:
    uint64_t v3 = v36 + 64;
    uint64_t v2 = v37 - 1;
    a1 = v30;
    a2 = v31;
    if (v37 == 1) {
      return 1;
    }
  }
  uint64_t v26 = v20;
  uint64_t v25 = v38;
  uint64_t v24 = v39;
  if (!v26) {
    goto LABEL_31;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_46:
  swift_bridgeObjectRelease();
LABEL_47:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1C1FC1880(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = (void *)(a1 + 40);
    for (uint64_t i = (void *)(a2 + 40); ; i += 6)
    {
      BOOL v5 = *(v3 - 1) == *(i - 1) && *v3 == *i;
      if (!v5 && (sub_1C214BA80() & 1) == 0) {
        break;
      }
      v3 += 6;
      if (!--v2) {
        return 1;
      }
    }
    return 0;
  }
  return 1;
}

unint64_t sub_1C1FC1908(unint64_t result, uint64_t a2)
{
  uint64_t v3 = result;
  unint64_t v4 = result >> 62;
  if (result >> 62) {
    goto LABEL_31;
  }
  uint64_t v5 = *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_3:
  if ((unint64_t)a2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_1C214B930();
    BOOL result = swift_bridgeObjectRelease();
    if (v5 == v13) {
      goto LABEL_5;
    }
LABEL_33:
    char v11 = 0;
    return v11 & 1;
  }
  if (v5 != *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_33;
  }
LABEL_5:
  if (!v5) {
    goto LABEL_28;
  }
  uint64_t v6 = v3 & 0xFFFFFFFFFFFFFF8;
  if (v3 < 0) {
    uint64_t v6 = v3;
  }
  if (!v4) {
    uint64_t v6 = (v3 & 0xFFFFFFFFFFFFFF8) + 32;
  }
  uint64_t v7 = a2 & 0xFFFFFFFFFFFFFF8;
  uint64_t v8 = (a2 & 0xFFFFFFFFFFFFFF8) + 32;
  uint64_t v14 = a2 & 0xFFFFFFFFFFFFFF8;
  if (a2 < 0) {
    uint64_t v7 = a2;
  }
  if ((unint64_t)a2 >> 62) {
    uint64_t v8 = v7;
  }
  if (v6 == v8)
  {
LABEL_28:
    char v11 = 1;
    return v11 & 1;
  }
  if ((v5 & 0x8000000000000000) == 0)
  {
    sub_1C2148FB0();
    unint64_t v9 = 0;
    uint64_t v10 = a2;
    a2 &= 0xC000000000000001;
    uint64_t v15 = v10;
    unint64_t v4 = v5 - 1;
    while (1)
    {
      if (v5 == v9)
      {
        __break(1u);
LABEL_30:
        __break(1u);
LABEL_31:
        swift_bridgeObjectRetain();
        uint64_t v5 = sub_1C214B930();
        BOOL result = swift_bridgeObjectRelease();
        goto LABEL_3;
      }
      if ((v3 & 0xC000000000000001) != 0)
      {
        MEMORY[0x1C8753960](v9, v3);
        if (a2) {
          goto LABEL_20;
        }
      }
      else
      {
        swift_retain();
        if (a2)
        {
LABEL_20:
          MEMORY[0x1C8753960](v9, v15);
          goto LABEL_24;
        }
      }
      if (v9 >= *(void *)(v14 + 16)) {
        goto LABEL_30;
      }
      swift_retain();
LABEL_24:
      sub_1C1FC28E0(&qword_1EA2C47D8, 255, MEMORY[0x1E4F66C28]);
      char v11 = sub_1C214A5A0();
      swift_release();
      swift_release();
      if ((v11 & 1) != 0 && v4 != v9++) {
        continue;
      }
      return v11 & 1;
    }
  }
  __break(1u);
  return result;
}

id sub_1C1FC1B4C(unint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1;
  unint64_t v4 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    unint64_t v5 = sub_1C214B930();
    swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if ((unint64_t)a2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v29 = sub_1C214B930();
    swift_bridgeObjectRelease();
    if (v5 == v29) {
      goto LABEL_5;
    }
LABEL_49:
    LOBYTE(v5) = 0;
    return (id)(v5 & 1);
  }
  if (v5 != *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_49;
  }
LABEL_5:
  if (!v5) {
    goto LABEL_38;
  }
  uint64_t v6 = v3 & 0xFFFFFFFFFFFFFF8;
  if (v3 < 0) {
    uint64_t v6 = v3;
  }
  if (!v4) {
    uint64_t v6 = (v3 & 0xFFFFFFFFFFFFFF8) + 32;
  }
  uint64_t v7 = a2 & 0xFFFFFFFFFFFFFF8;
  uint64_t v8 = (a2 & 0xFFFFFFFFFFFFFF8) + 32;
  if (a2 < 0) {
    uint64_t v9 = a2;
  }
  else {
    uint64_t v9 = a2 & 0xFFFFFFFFFFFFFF8;
  }
  if ((unint64_t)a2 >> 62) {
    uint64_t v8 = v9;
  }
  if (v6 == v8)
  {
LABEL_38:
    LOBYTE(v5) = 1;
    return (id)(v5 & 1);
  }
  if ((v5 & 0x8000000000000000) != 0) {
    goto LABEL_55;
  }
  unint64_t v30 = v3 & 0xC000000000000001;
  if ((v3 & 0xC000000000000001) != 0) {
    goto LABEL_56;
  }
  for (id result = *(id *)(v3 + 32); ; id result = (id)MEMORY[0x1C8753960](0, v3))
  {
    char v11 = result;
    if ((a2 & 0xC000000000000001) == 0) {
      break;
    }
    id v12 = (id)MEMORY[0x1C8753960](0, a2);
LABEL_22:
    uint64_t v13 = v12;
    sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C810);
    char v14 = sub_1C214B220();

    if ((v14 & 1) == 0) {
      goto LABEL_49;
    }
    unint64_t v15 = v5 - 1;
    if (v5 == 1) {
      return (id)(v5 & 1);
    }
    if (((a2 | v3) & 0xC000000000000001) != 0)
    {
      uint64_t v16 = 0;
      unint64_t v17 = v5 - 2;
      while (v15 != v16)
      {
        unint64_t v5 = v16 + 1;
        if (v30) {
          id v18 = (id)MEMORY[0x1C8753960](v16 + 1, v3);
        }
        else {
          id v18 = *(id *)(v3 + 40 + 8 * v16);
        }
        id v19 = v18;
        if ((a2 & 0xC000000000000001) != 0)
        {
          id v20 = (id)MEMORY[0x1C8753960](v16 + 1, a2);
        }
        else
        {
          if (v5 >= *(void *)(v7 + 16)) {
            goto LABEL_54;
          }
          id v20 = *(id *)(a2 + 40 + 8 * v16);
        }
        id v21 = v20;
        unint64_t v5 = sub_1C214B220();

        if ((v5 & 1) != 0 && v17 != v16++) {
          continue;
        }
        return (id)(v5 & 1);
      }
      __break(1u);
    }
    else
    {
      unint64_t v23 = *(void *)(v7 + 16);
      if (v23 <= 1) {
        unint64_t v23 = 1;
      }
      unint64_t v24 = v23 - 1;
      uint64_t v25 = (void **)(v3 + 40);
      uint64_t v7 = a2 + 40;
      while (v15)
      {
        if (!v24) {
          goto LABEL_53;
        }
        char v27 = *v25++;
        uint64_t v26 = v27;
        unint64_t v28 = *(void **)v7;
        v7 += 8;
        a2 = v26;
        uint64_t v3 = v28;
        unint64_t v5 = sub_1C214B220();

        if (v5)
        {
          --v24;
          if (--v15) {
            continue;
          }
        }
        return (id)(v5 & 1);
      }
    }
    __break(1u);
LABEL_53:
    __break(1u);
LABEL_54:
    __break(1u);
LABEL_55:
    __break(1u);
LABEL_56:
    ;
  }
  if (*(void *)(v7 + 16))
  {
    id v12 = *(id *)(a2 + 32);
    goto LABEL_22;
  }
  __break(1u);
  return result;
}

BOOL sub_1C1FC1E38(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Dosage();
  uint64_t v5 = MEMORY[0x1F4188790](v4);
  uint64_t v6 = MEMORY[0x1F4188790](v5);
  uint64_t v7 = MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v34 - v8;
  uint64_t v10 = MEMORY[0x1F4188790](v7);
  id v12 = (char *)&v34 - v11;
  uint64_t v13 = MEMORY[0x1F4188790](v10);
  unint64_t v15 = (char *)&v34 - v14;
  MEMORY[0x1F4188790](v13);
  id v20 = (char *)&v34 - v19;
  uint64_t v21 = *(void *)(a1 + 16);
  if (v21 == *(void *)(a2 + 16))
  {
    if (!v21 || a1 == a2) {
      return 1;
    }
    uint64_t v37 = v18;
    uint64_t v38 = v17;
    unint64_t v22 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
    uint64_t v34 = *(void *)(v16 + 72);
    uint64_t v35 = a1;
    uint64_t v23 = v21 - 1;
    uint64_t v36 = a2;
    while (1)
    {
      uint64_t v39 = v23;
      sub_1C1F84AD8(a1 + v22, (uint64_t)v20);
      sub_1C1F84AD8(a2 + v22, (uint64_t)v15);
      char v24 = sub_1C2147AF0();
      sub_1C1F84AD8((uint64_t)v20, (uint64_t)v12);
      sub_1C1F84AD8((uint64_t)v15, (uint64_t)v9);
      if ((v24 & 1) == 0) {
        break;
      }
      uint64_t v25 = (uint64_t)v15;
      char v26 = sub_1C2147A50();
      char v27 = v9;
      sub_1C1FC2884((uint64_t)v9);
      sub_1C1FC2884((uint64_t)v12);
      uint64_t v28 = v4;
      uint64_t v29 = v37;
      sub_1C1F84AD8((uint64_t)v20, v37);
      uint64_t v30 = v38;
      sub_1C1F84AD8((uint64_t)v15, v38);
      if ((v26 & 1) == 0) {
        goto LABEL_12;
      }
      double v31 = *(double *)(v29 + *(int *)(v28 + 24));
      sub_1C1FC2884(v29);
      double v32 = *(double *)(v30 + *(int *)(v28 + 24));
      sub_1C1FC2884(v30);
      sub_1C1FC2884((uint64_t)v15);
      sub_1C1FC2884((uint64_t)v20);
      uint64_t v23 = v39 - 1;
      BOOL result = v31 == v32;
      if (v31 == v32)
      {
        uint64_t v4 = v28;
        a1 = v35;
        v22 += v34;
        a2 = v36;
        uint64_t v9 = v27;
        if (v39) {
          continue;
        }
      }
      return result;
    }
    sub_1C1FC2884((uint64_t)v9);
    sub_1C1FC2884((uint64_t)v12);
    uint64_t v29 = v37;
    sub_1C1F84AD8((uint64_t)v20, v37);
    uint64_t v30 = v38;
    sub_1C1F84AD8((uint64_t)v15, v38);
    uint64_t v25 = (uint64_t)v15;
LABEL_12:
    sub_1C1FC2884(v30);
    sub_1C1FC2884(v29);
    sub_1C1FC2884(v25);
    sub_1C1FC2884((uint64_t)v20);
  }
  return 0;
}

uint64_t sub_1C1FC2148()
{
  swift_beginAccess();
  unint64_t v1 = *(void *)(v0 + 16);
  if (!(v1 >> 62))
  {
    uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v2) {
      goto LABEL_3;
    }
LABEL_8:
    swift_bridgeObjectRelease();
    __break(1u);
    goto LABEL_9;
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_1C214B930();
  if (!result) {
    goto LABEL_8;
  }
LABEL_3:
  if ((v1 & 0xC000000000000001) != 0)
  {
LABEL_9:
    id v4 = (id)MEMORY[0x1C8753960](0, v1);
    goto LABEL_6;
  }
  if (*(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v4 = *(id *)(v1 + 32);
LABEL_6:
    id v5 = v4;
    swift_bridgeObjectRelease();
    return (uint64_t)v5;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C1FC2210(void *a1)
{
  swift_beginAccess();
  id v3 = a1;
  MEMORY[0x1C87528E0]();
  if (*(void *)((*(void *)(v1 + 16) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(v1 + 16) & 0xFFFFFFFFFFFFFF8)
                                                                                     + 0x18) >> 1)
    sub_1C214A7D0();
  sub_1C214A820();
  sub_1C214A7A0();
  return swift_endAccess();
}

uint64_t sub_1C1FC22AC()
{
  swift_beginAccess();
  unint64_t v0 = swift_bridgeObjectRetain();
  sub_1C1F7D37C(v0);
  return swift_endAccess();
}

uint64_t sub_1C1FC2300(uint64_t a1)
{
  swift_beginAccess();
  unint64_t v3 = *(void *)(v1 + 16);
  if (!(v3 >> 62))
  {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v4) {
      goto LABEL_3;
    }
LABEL_8:
    swift_bridgeObjectRelease();
    __break(1u);
    goto LABEL_9;
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_1C214B930();
  if (!result) {
    goto LABEL_8;
  }
LABEL_3:
  if ((v3 & 0xC000000000000001) != 0)
  {
LABEL_9:
    id v6 = (id)MEMORY[0x1C8753960](0, v3);
    goto LABEL_6;
  }
  if (*(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v6 = *(id *)(v3 + 32);
LABEL_6:
    uint64_t v7 = v6;
    swift_bridgeObjectRelease();
    id v8 = objc_msgSend(v7, sel_hasSameAncestorIdentifiersAsInteractionResult_, a1);

    return (uint64_t)v8;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C1FC23F0()
{
  swift_beginAccess();
  sub_1C1F7F478((unint64_t *)(v0 + 16));
  return swift_endAccess();
}

uint64_t HKDrugInteractionResultCollection.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t HKDrugInteractionResultCollection.__deallocating_deinit()
{
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t HKDrugInteractionResultCollection.hash(into:)(uint64_t a1)
{
  swift_beginAccess();
  uint64_t v3 = *(void *)(v1 + 16);
  swift_bridgeObjectRetain();
  sub_1C1F830BC(a1, v3);
  return swift_bridgeObjectRelease();
}

uint64_t HKDrugInteractionResultCollection.hashValue.getter()
{
  sub_1C214BB30();
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  sub_1C1F830BC(v3, v1);
  swift_bridgeObjectRelease();
  return sub_1C214BB80();
}

uint64_t sub_1C1FC2568(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v2 + 16);
  swift_beginAccess();
  uint64_t v5 = *(void *)(v3 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v6 = sub_1C1FC0FE4(v4, v5, (uint64_t)&qword_1EBF0C880);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v6 & 1;
}

uint64_t sub_1C1FC2610()
{
  uint64_t v1 = *v0;
  sub_1C214BB30();
  swift_beginAccess();
  uint64_t v2 = *(void *)(v1 + 16);
  swift_bridgeObjectRetain();
  sub_1C1F830BC(v4, v2);
  swift_bridgeObjectRelease();
  return sub_1C214BB80();
}

uint64_t sub_1C1FC2680(uint64_t a1)
{
  uint64_t v3 = *v1;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 16);
  swift_bridgeObjectRetain();
  sub_1C1F830BC(a1, v4);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C1FC26E0()
{
  sub_1C214BB30();
  uint64_t v1 = *v0;
  swift_beginAccess();
  uint64_t v2 = *(void *)(v1 + 16);
  swift_bridgeObjectRetain();
  sub_1C1F830BC(v4, v2);
  swift_bridgeObjectRelease();
  return sub_1C214BB80();
}

uint64_t sub_1C1FC274C(uint64_t a1, uint64_t a2)
{
  return sub_1C1FC28E0(&qword_1EA2C47D0, a2, (void (*)(uint64_t))type metadata accessor for HKDrugInteractionResultCollection);
}

uint64_t type metadata accessor for HKDrugInteractionResultCollection()
{
  return self;
}

uint64_t method lookup function for HKDrugInteractionResultCollection(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for HKDrugInteractionResultCollection);
}

uint64_t dispatch thunk of HKDrugInteractionResultCollection.first.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of HKDrugInteractionResultCollection.append(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of HKDrugInteractionResultCollection.append(contentsOf:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of HKDrugInteractionResultCollection.hasSameAncestors(as:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t dispatch thunk of HKDrugInteractionResultCollection.sortByIdentifier()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t sub_1C1FC2884(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Dosage();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C1FC28E0(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t MedicationSecondaryEducationViewController.__allocating_init(type:educationDisplayable:content:attribution:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_1C1FC2958(a1, a2, a3, a4, a5, a6, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1C1FC3404);
}

uint64_t MedicationSecondaryEducationViewController.init(type:educationDisplayable:content:attribution:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_1C1FC2958(a1, a2, a3, a4, a5, a6, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1C1FC3234);
}

uint64_t sub_1C1FC2958(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v15 = *(void *)(a2 + 24);
  uint64_t v16 = *(void *)(a2 + 32);
  uint64_t v17 = __swift_mutable_project_boxed_opaque_existential_1(a2, v15);
  uint64_t v18 = a7(a1, v17, a3, a4, a5, a6, v7, v15, v16);
  __swift_destroy_boxed_opaque_existential_0(a2);
  return v18;
}

void sub_1C1FC2A04()
{
}

Swift::Void __swiftcall MedicationSecondaryEducationViewController.viewDidLoad()()
{
  v1.receiver = v0;
  v1.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v1, sel_viewDidLoad);
  sub_1C1FC2A9C();
}

void sub_1C1FC2A9C()
{
  if (v0[qword_1EA2C47E0])
  {
    if (v0[qword_1EA2C47E0] == 1)
    {
      if (qword_1EA2C2710 == -1)
      {
LABEL_9:
        objc_super v1 = &qword_1EA2C5D90;
        goto LABEL_10;
      }
    }
    else if (qword_1EA2C2710 == -1)
    {
      goto LABEL_9;
    }
    swift_once();
    goto LABEL_9;
  }
  if (qword_1EBF0CA00 != -1) {
    swift_once();
  }
  objc_super v1 = &qword_1EBF0CA18;
LABEL_10:
  id v2 = (id)*v1;
  swift_bridgeObjectRetain();
  sub_1C2147730();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  uint64_t v3 = (void *)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_setTitle_, v3, 0xE000000000000000);

  id v4 = objc_msgSend(v0, sel_collectionView);
  if (!v4)
  {
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v5 = v4;
  id v6 = objc_msgSend(self, sel_systemGroupedBackgroundColor);
  objc_msgSend(v5, sel_setBackgroundColor_, v6);

  id v7 = objc_msgSend(v0, sel_collectionView);
  if (!v7)
  {
LABEL_16:
    __break(1u);
    return;
  }
  id v8 = v7;
  sub_1C214A5F0();
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  id v9 = (id)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  objc_msgSend(v8, sel_setAccessibilityIdentifier_, v9);
}

void sub_1C1FC2E44(void *a1)
{
  v2.receiver = a1;
  v2.super_class = (Class)swift_getObjectType();
  id v1 = v2.receiver;
  objc_msgSendSuper2(&v2, sel_viewDidLoad);
  sub_1C1FC2A9C();
}

void MedicationSecondaryEducationViewController.__allocating_init(dataSource:)()
{
}

void MedicationSecondaryEducationViewController.init(dataSource:)()
{
}

id MedicationSecondaryEducationViewController.__allocating_init(collectionViewLayout:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCollectionViewLayout_, a1);

  return v3;
}

void MedicationSecondaryEducationViewController.init(collectionViewLayout:)()
{
}

void sub_1C1FC2F70(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = a3;
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id MedicationSecondaryEducationViewController.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

Swift::Void __swiftcall MedicationSecondaryEducationViewController.viewControllerWillEnterAdaptiveModal()()
{
  objc_msgSend(v0, sel_setModalPresentationStyle_, 2);
  id v1 = objc_msgSend(v0, sel_navigationItem);
  sub_1C1F12718(0, (unint64_t *)&qword_1EA2C3508);
  sub_1C1F12718(0, &qword_1EA2C3198);
  uint64_t v2 = swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1C214B250();
  id v3 = (id)sub_1C214AC50();
  objc_msgSend(v1, sel_setRightBarButtonItem_, v3, 0, 0, 0, sub_1C1F65CB0, v2);
}

void sub_1C1FC3124(void *a1)
{
  id v1 = a1;
  MedicationSecondaryEducationViewController.viewControllerWillEnterAdaptiveModal()();
}

Swift::Void __swiftcall MedicationSecondaryEducationViewController.viewControllerDidLeaveAdaptiveModal()()
{
  id v1 = objc_msgSend(v0, sel_navigationItem);
  objc_msgSend(v1, sel_setRightBarButtonItem_, 0);
}

void sub_1C1FC31C8(void *a1)
{
  id v1 = a1;
  id v2 = objc_msgSend(v1, sel_navigationItem);
  objc_msgSend(v2, sel_setRightBarButtonItem_, 0);
}

void *sub_1C1FC3234(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t), char *a5, uint64_t a6, void *a7, uint64_t a8, uint64_t a9)
{
  uint64_t v28 = a5;
  uint64_t v29 = a6;
  uint64_t v14 = *(void *)(a8 - 8);
  uint64_t v15 = (unsigned __int8 *)MEMORY[0x1F4188790](a1);
  uint64_t v17 = (char *)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned __int8 v18 = *v15;
  *(unsigned char *)(v19 + qword_1EA2C47E0) = *v15;
  type metadata accessor for MedicationSecondaryEducationCompoundDataSource(0);
  swift_allocObject();
  unsigned __int8 v30 = v18;
  type metadata accessor for MedicationSecondaryEducationDataSource(0);
  uint64_t v20 = swift_allocObject();
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v17, a2, a8);
  id v21 = a7;
  uint64_t v22 = sub_1C1F4D330(&v30, (uint64_t)v17, a3, a4, v28, v29, v20, a8, a9);
  sub_1C1F24848();
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_1C214FCD0;
  unint64_t v24 = sub_1C1FC35A0();
  *(void *)(v23 + 32) = v22;
  *(void *)(v23 + 40) = v24;
  sub_1C2148840();

  swift_retain();
  uint64_t v25 = (void *)sub_1C2148AC0();
  objc_msgSend(v25, sel_setModalPresentationStyle_, 2);
  swift_release();
  return v25;
}

void *sub_1C1FC3404(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t), char *a5, uint64_t a6, Class a7, uint64_t a8, uint64_t a9)
{
  id v16 = objc_allocWithZone(a7);

  return sub_1C1FC3234(a1, a2, a3, a4, a5, a6, v16, a8, a9);
}

uint64_t sub_1C1FC3494()
{
  swift_unknownObjectWeakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t type metadata accessor for MedicationSecondaryEducationViewController()
{
  uint64_t result = qword_1EA2C47E8;
  if (!qword_1EA2C47E8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C1FC3518()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for MedicationSecondaryEducationViewController(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MedicationSecondaryEducationViewController);
}

uint64_t dispatch thunk of MedicationSecondaryEducationViewController.__allocating_init(type:educationDisplayable:content:attribution:)()
{
  return (*(uint64_t (**)(void))(class metadata base offset for MedicationSecondaryEducationViewController + v0 + 8))();
}

uint64_t sub_1C1FC3598()
{
  return type metadata accessor for MedicationSecondaryEducationViewController();
}

unint64_t sub_1C1FC35A0()
{
  unint64_t result = qword_1EA2C47F8;
  if (!qword_1EA2C47F8)
  {
    type metadata accessor for MedicationSecondaryEducationDataSource(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C47F8);
  }
  return result;
}

uint64_t type metadata accessor for FormStepViewController(uint64_t a1)
{
  return sub_1C1F20D10(a1, (uint64_t *)&unk_1EA2C4800);
}

uint64_t sub_1C1FC3618()
{
  return sub_1C1F20D54();
}

void sub_1C1FC3624(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

void sub_1C1FC362C()
{
}

void sub_1C1FC3688()
{
}

id sub_1C1FC36A4()
{
  return sub_1C1FC378C(type metadata accessor for FormStepViewController);
}

uint64_t sub_1C1FC36BC()
{
  return type metadata accessor for FormStepViewController(0);
}

uint64_t type metadata accessor for ManualFormStepViewController(uint64_t a1)
{
  return sub_1C1F20D10(a1, (uint64_t *)&unk_1EA2C4810);
}

uint64_t sub_1C1FC36E4()
{
  return sub_1C1F20D54();
}

void sub_1C1FC36F0(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

void sub_1C1FC36FC()
{
}

void sub_1C1FC3758()
{
}

id sub_1C1FC3774()
{
  return sub_1C1FC378C(type metadata accessor for ManualFormStepViewController);
}

id sub_1C1FC378C(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1(0);
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t sub_1C1FC37CC()
{
  return type metadata accessor for ManualFormStepViewController(0);
}

uint64_t sub_1C1FC37D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C1FC39FC(0, &qword_1EA2C4820, (void (*)(uint64_t))type metadata accessor for FormStepResult);
  MEMORY[0x1F4188790](v6 - 8);
  id v8 = (char *)&v18 - v7;
  sub_1C1FC39FC(0, (unint64_t *)&qword_1EA2C2CC8, (void (*)(uint64_t))type metadata accessor for MedicationSearchItem);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v18 - v10;
  objc_allocWithZone((Class)type metadata accessor for FormStepViewController(0));
  sub_1C1F73B18(a1, (uint64_t)v11);
  uint64_t v12 = type metadata accessor for MedicationSearchItem(0);
  uint64_t v13 = *(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
  v13(v11, 0, 1, v12);
  sub_1C1FC3A50(a3, (uint64_t)v8);
  sub_1C1FC3AD0();
  swift_allocObject();
  uint64_t v14 = sub_1C2149EB0();
  type metadata accessor for MedicationFormsDataSource();
  swift_allocObject();
  uint64_t v15 = sub_1C20F7BE4((uint64_t)v11, v14);
  sub_1C1F73B18(a1, (uint64_t)v11);
  v13(v11, 0, 1, v12);
  uint64_t v16 = sub_1C2134AF4((uint64_t)v11, (uint64_t)v15, a2);
  swift_release();
  swift_release();
  sub_1C1FC3B54(a3);
  sub_1C1F73B7C(a1);
  return v16;
}

void sub_1C1FC39FC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C214B4F0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1C1FC3A50(uint64_t a1, uint64_t a2)
{
  sub_1C1FC39FC(0, &qword_1EA2C4820, (void (*)(uint64_t))type metadata accessor for FormStepResult);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1C1FC3AD0()
{
  if (!qword_1EA2C4828)
  {
    sub_1C1FC39FC(255, &qword_1EA2C4820, (void (*)(uint64_t))type metadata accessor for FormStepResult);
    unint64_t v0 = sub_1C2149EA0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C4828);
    }
  }
}

uint64_t sub_1C1FC3B54(uint64_t a1)
{
  sub_1C1FC39FC(0, &qword_1EA2C4820, (void (*)(uint64_t))type metadata accessor for FormStepResult);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C1FC3BCC(uint64_t a1, void *a2)
{
  uint64_t v4 = sub_1C21497F0();
  uint64_t v29 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1C21495D0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v24 - v12;
  uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  v14((char *)&v24 - v12, a1, v7);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v8 + 88))(v13, v7);
  if (result == *MEMORY[0x1E4F66CF0])
  {
    if ((*a2 & 1) == 0) {
      *a2 |= 1uLL;
    }
  }
  else if (result == *MEMORY[0x1E4F66D00])
  {
    if ((*a2 & 2) == 0) {
      *a2 |= 2uLL;
    }
  }
  else if (result == *MEMORY[0x1E4F66D18])
  {
    if ((*a2 & 4) == 0) {
      *a2 |= 4uLL;
    }
  }
  else if (result == *MEMORY[0x1E4F66D10])
  {
    if ((*a2 & 8) == 0) {
      *a2 |= 8uLL;
    }
  }
  else if (result == *MEMORY[0x1E4F66CE8])
  {
    if ((*a2 & 0x10) == 0) {
      *a2 |= 0x10uLL;
    }
  }
  else if (result == *MEMORY[0x1E4F66D08])
  {
    if ((*a2 & 0x20) == 0) {
      *a2 |= 0x20uLL;
    }
  }
  else if (result == *MEMORY[0x1E4F66CF8])
  {
    if ((*a2 & 0x40) == 0) {
      *a2 |= 0x40uLL;
    }
  }
  else
  {
    sub_1C21497A0();
    v14(v11, a1, v7);
    uint64_t v16 = sub_1C21497E0();
    os_log_type_t v17 = sub_1C214ABD0();
    int v18 = v17;
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v19 = swift_slowAlloc();
      uint64_t v28 = swift_slowAlloc();
      uint64_t v31 = v28;
      *(_DWORD *)uint64_t v19 = 136315394;
      int v27 = v18;
      uint64_t v30 = sub_1C1F6FD54(0x737961646B656557, 0xE800000000000000, &v31);
      sub_1C214B530();
      *(_WORD *)(v19 + 12) = 2048;
      uint64_t v26 = v19 + 14;
      uint64_t v25 = sub_1C21495C0();
      uint64_t v20 = v11;
      id v21 = *(void (**)(char *, uint64_t))(v8 + 8);
      v21(v20, v7);
      uint64_t v30 = v25;
      sub_1C214B530();
      _os_log_impl(&dword_1C1F0B000, v16, (os_log_type_t)v27, "[%s] Encountered unknown Day = %ld", (uint8_t *)v19, 0x16u);
      uint64_t v22 = v28;
      swift_arrayDestroy();
      MEMORY[0x1C8754730](v22, -1, -1);
      MEMORY[0x1C8754730](v19, -1, -1);
    }
    else
    {
      uint64_t v23 = v11;
      id v21 = *(void (**)(char *, uint64_t))(v8 + 8);
      v21(v23, v7);
    }

    (*(void (**)(char *, uint64_t))(v29 + 8))(v6, v4);
    return ((uint64_t (*)(char *, uint64_t))v21)(v13, v7);
  }
  return result;
}

uint64_t sub_1C1FC4040(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1C2147B20();
  uint64_t v21 = *(void *)(v4 - 8);
  uint64_t v22 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v20 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(v2 + qword_1EA2C4838) = a1;
  uint64_t v32 = 1;
  uint64_t v19 = v2;
  swift_retain();
  swift_retain();
  v33[0] = sub_1C2148D00() & 1;
  uint64_t v34 = 2;
  char v35 = sub_1C2148D50() & 1;
  uint64_t v36 = 3;
  uint64_t v23 = a1;
  char v37 = sub_1C2148D20() & 1;
  uint64_t v30 = MEMORY[0x1E4FBC860];
  sub_1C214B850();
  unint64_t v27 = sub_1C1F758A4();
  id v26 = self;
  uint64_t v6 = type metadata accessor for InteractionFactorsLifestyleOptionsItem();
  uint64_t v7 = 0;
  unint64_t v24 = 0x80000001C21632C0;
  uint64_t v25 = v6;
  do
  {
    uint64_t v9 = *(void *)&v31[v7 + 32];
    char v10 = v33[v7];
    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + qword_1EA2C4B18) = v9;
    *(unsigned char *)(v11 + qword_1EA2C4B10) = v10;
    id v12 = v26;
    id v13 = objc_msgSend(v26, sel_systemBackgroundColor);
    id v14 = objc_msgSend(v12, sel_secondarySystemBackgroundColor);
    sub_1C214B150();

    HKDrugInteractionLifestyleFactor.image.getter(v9);
    switch(v9)
    {
      case 0:
        break;
      case 1:
      case 2:
      case 3:
        unint64_t v28 = 0;
        unint64_t v29 = 0xE000000000000000;
        sub_1C214B7C0();
        swift_bridgeObjectRelease();
        unint64_t v28 = 0xD000000000000011;
        unint64_t v29 = v24;
        sub_1C214A6C0();
        swift_bridgeObjectRelease();
        sub_1C214A6C0();
        sub_1C214A6C0();
        if (qword_1EBF0CA00 != -1) {
          swift_once();
        }
        id v8 = (id)qword_1EBF0CA18;
        swift_bridgeObjectRetain();
        sub_1C2147730();
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        break;
      default:
        sub_1C214B910();
        __break(1u);
        JUMPOUT(0x1C1FC45F8);
    }
    sub_1C21487D0();
    sub_1C214B820();
    sub_1C214B860();
    sub_1C214B870();
    sub_1C214B830();
    v7 += 16;
  }
  while (v7 != 48);
  *(void *)(v19 + qword_1EA2C4830) = v30;
  swift_release();
  uint64_t v15 = sub_1C2147F50();
  swift_retain();
  sub_1C2147F40();
  sub_1C21482F0();
  swift_release();
  sub_1C1F65B7C();
  sub_1C2148540();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1C214FCD0;
  sub_1C1F386A4(*(void *)(v15 + qword_1EA2C4830));
  uint64_t v16 = v20;
  sub_1C2147B10();
  sub_1C2147AD0();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v16, v22);
  sub_1C2148520();
  sub_1C21485B0();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return v15;
}

uint64_t sub_1C1FC4608()
{
  uint64_t v0 = sub_1C2148710();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  objc_super v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2148690();
  uint64_t v4 = sub_1C2148700();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

uint64_t sub_1C1FC46DC()
{
  uint64_t v1 = v0;
  uint64_t v28 = *v0;
  uint64_t v2 = sub_1C21497F0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v6 = *(void *)((char *)v1 + qword_1EA2C4830);
  if (v6 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_1C214B930();
    uint64_t v7 = result;
    if (result) {
      goto LABEL_3;
    }
LABEL_22:
    return swift_bridgeObjectRelease();
  }
  uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain();
  if (!v7) {
    goto LABEL_22;
  }
LABEL_3:
  if (v7 >= 1)
  {
    uint64_t v10 = 0;
    unint64_t v31 = v6 & 0xC000000000000001;
    unint64_t v29 = (void (**)(char *, uint64_t))(v3 + 8);
    *(void *)&long long v9 = 136446466;
    long long v24 = v9;
    v23[1] = MEMORY[0x1E4FBC840] + 8;
    id v26 = v5;
    unint64_t v27 = v1;
    uint64_t v25 = v7;
    uint64_t v30 = qword_1EA2C4838;
    while (1)
    {
      if (v31)
      {
        uint64_t v11 = MEMORY[0x1C8753960](v10, v6);
      }
      else
      {
        uint64_t v11 = *(void *)(v6 + 8 * v10 + 32);
        swift_retain();
      }
      uint64_t v12 = qword_1EA2C4B18;
      uint64_t v13 = *(void *)(v11 + qword_1EA2C4B18);
      switch(v13)
      {
        case 3:
          sub_1C2148D30();
          break;
        case 2:
          sub_1C2148D60();
          break;
        case 1:
          sub_1C2148D10();
          break;
        default:
          sub_1C21497A0();
          swift_retain_n();
          id v14 = sub_1C21497E0();
          os_log_type_t v15 = sub_1C214ABD0();
          if (os_log_type_enabled(v14, v15))
          {
            uint64_t v16 = swift_slowAlloc();
            uint64_t v17 = swift_slowAlloc();
            uint64_t v33 = v17;
            *(_DWORD *)uint64_t v16 = v24;
            uint64_t v18 = sub_1C214BC10();
            *(void *)(v16 + 4) = sub_1C1F6FD54(v18, v19, &v33);
            swift_bridgeObjectRelease();
            *(_WORD *)(v16 + 12) = 2080;
            uint64_t v32 = *(void *)(v11 + v12);
            type metadata accessor for HKDrugInteractionLifestyleFactor(0);
            uint64_t v20 = sub_1C214A610();
            *(void *)(v16 + 14) = sub_1C1F6FD54(v20, v21, &v33);
            swift_release_n();
            uint64_t v5 = v26;
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_1C1F0B000, v14, v15, "%{public}s Unrecognized DDI factor: %s", (uint8_t *)v16, 0x16u);
            swift_arrayDestroy();
            MEMORY[0x1C8754730](v17, -1, -1);
            uint64_t v22 = v16;
            uint64_t v7 = v25;
            MEMORY[0x1C8754730](v22, -1, -1);
            swift_release();
          }
          else
          {

            swift_release_n();
          }
          (*v29)(v5, v2);
          goto LABEL_7;
      }
      swift_release();
LABEL_7:
      if (v7 == ++v10) {
        return swift_bridgeObjectRelease();
      }
    }
  }
  __break(1u);
  return result;
}

void InteractionFactorsLifestyleOptionsDataSource.__allocating_init(arrangedSections:isHidden:)()
{
}

void InteractionFactorsLifestyleOptionsDataSource.init(arrangedSections:isHidden:)()
{
}

uint64_t sub_1C1FC4B34()
{
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t InteractionFactorsLifestyleOptionsDataSource.deinit()
{
  uint64_t v0 = _s19HealthMedicationsUI34InteractionSeperatorLineDataSourceCfd_0();
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t InteractionFactorsLifestyleOptionsDataSource.__deallocating_deinit()
{
  _s19HealthMedicationsUI34InteractionSeperatorLineDataSourceCfd_0();
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_1C1FC4C1C()
{
  return sub_1C2148B80();
}

Swift::Void __swiftcall InteractionFactorsLifestyleOptionsDataSource.registerCells(for:)(UICollectionView *a1)
{
}

uint64_t sub_1C1FC4CB0()
{
  return sub_1C214ACC0();
}

unint64_t sub_1C1FC4CEC()
{
  unint64_t result = qword_1EA2C4840;
  if (!qword_1EA2C4840)
  {
    type metadata accessor for InteractionFactorsLifestyleOptionsDataSource();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C4840);
  }
  return result;
}

uint64_t type metadata accessor for InteractionFactorsLifestyleOptionsDataSource()
{
  uint64_t result = qword_1EA2C4848;
  if (!qword_1EA2C4848) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C1FC4D90()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for InteractionFactorsLifestyleOptionsDataSource(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for InteractionFactorsLifestyleOptionsDataSource);
}

uint64_t dispatch thunk of InteractionFactorsLifestyleOptionsDataSource.layout(for:environment:)()
{
  return (*(uint64_t (**)(void))(class metadata base offset for InteractionFactorsLifestyleOptionsDataSource + *v0 + 24))();
}

uint64_t dispatch thunk of InteractionFactorsLifestyleOptionsDataSource.commitChanges()()
{
  return (*(uint64_t (**)(void))(class metadata base offset for InteractionFactorsLifestyleOptionsDataSource + *v0 + 32))();
}

uint64_t sub_1C1FC4E84()
{
  return type metadata accessor for InteractionFactorsLifestyleOptionsDataSource();
}

unint64_t sub_1C1FC4E8C()
{
  return 0xD000000000000013;
}

uint64_t sub_1C1FC4F4C()
{
  return sub_1C214BB80();
}

uint64_t sub_1C1FC500C()
{
  sub_1C2147B20();
  sub_1C1FC8140((unint64_t *)&unk_1EA2C30A0, MEMORY[0x1E4F27990]);
  sub_1C214A560();
  sub_1C20B7378();
  sub_1C214A690();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1C1FC50C0()
{
  return sub_1C214BB80();
}

id sub_1C1FC5180()
{
  uint64_t v1 = OBJC_IVAR____TtC19HealthMedicationsUI28MedicationLogDetailsUnitCell____lazy_storage___unitView;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI28MedicationLogDetailsUnitCell____lazy_storage___unitView);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI28MedicationLogDetailsUnitCell____lazy_storage___unitView);
  }
  else
  {
    type metadata accessor for MedicationLogDetailsUnitView();
    id v4 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

uint64_t sub_1C1FC5208()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1C21497F0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1FC7E44(0, (unint64_t *)&unk_1EA2C4920, (uint64_t (*)(uint64_t))type metadata accessor for MedicationLogDetailsUnitItem, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v6 - 8);
  id v8 = (char *)&v26 - v7;
  uint64_t v9 = type metadata accessor for MedicationLogDetailsUnitItem();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = (uint64_t)v1 + OBJC_IVAR____TtC19HealthMedicationsUI28MedicationLogDetailsUnitCell_item;
  swift_beginAccess();
  sub_1C1F2116C(v13, (uint64_t)v28);
  if (v28[3])
  {
    sub_1C1F1CB5C();
    int v14 = swift_dynamicCast();
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v8, v14 ^ 1u, 1, v9);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) != 1)
    {
      sub_1C1FC77F0((uint64_t)v8, (uint64_t)v12);
      os_log_type_t v15 = (char *)sub_1C1FC5180();
      *(void *)&v15[OBJC_IVAR____TtC19HealthMedicationsUI28MedicationLogDetailsUnitView_viewModel] = *(void *)&v12[*(int *)(v9 + 20)];
      swift_retain_n();
      swift_release();
      sub_1C1FC5C34();

      swift_release();
      uint64_t v16 = (char *)sub_1C1FC5180();
      uint64_t v17 = &v12[*(int *)(v9 + 24)];
      MEMORY[0x1C8754850](v17);
      *(void *)&v16[OBJC_IVAR____TtC19HealthMedicationsUI28MedicationLogDetailsUnitView_detailsDelegate + 8] = *((void *)v17 + 1);
      swift_unknownObjectWeakAssign();

      swift_unknownObjectRelease();
      return sub_1C1FC7854((uint64_t)v12);
    }
  }
  else
  {
    sub_1C1FC7744((uint64_t)v28, (unint64_t *)&qword_1EBF0C300, (uint64_t (*)(uint64_t))sub_1C1F1CB5C);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
  }
  sub_1C1FC7744((uint64_t)v8, (unint64_t *)&unk_1EA2C4920, (uint64_t (*)(uint64_t))type metadata accessor for MedicationLogDetailsUnitItem);
  sub_1C21497A0();
  id v19 = v1;
  uint64_t v20 = sub_1C21497E0();
  os_log_type_t v21 = sub_1C214ABD0();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v22 = (uint8_t *)swift_slowAlloc();
    uint64_t v23 = swift_slowAlloc();
    uint64_t v26 = v2;
    uint64_t v27 = v23;
    *(_DWORD *)uint64_t v22 = 136315138;
    sub_1C1F2116C(v13, (uint64_t)v28);
    sub_1C1FC7E44(0, (unint64_t *)&qword_1EBF0C300, (uint64_t (*)(uint64_t))sub_1C1F1CB5C, MEMORY[0x1E4FBB718]);
    uint64_t v24 = sub_1C214A630();
    v28[0] = sub_1C1F6FD54(v24, v25, &v27);
    sub_1C214B530();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C1F0B000, v20, v21, "Incorrect view model for MedicationLogDetailsUnitItem: %s", v22, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C8754730](v23, -1, -1);
    MEMORY[0x1C8754730](v22, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v26);
  }
  else
  {

    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
}

id sub_1C1FC56E8(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = sub_1C2149BE0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI28MedicationLogDetailsUnitCell____lazy_storage___unitView] = 0;
  uint64_t v13 = &v4[OBJC_IVAR____TtC19HealthMedicationsUI28MedicationLogDetailsUnitCell_item];
  int v14 = (objc_class *)type metadata accessor for MedicationLogDetailsUnitCell();
  *(_OWORD *)uint64_t v13 = 0u;
  *((_OWORD *)v13 + 1) = 0u;
  *((void *)v13 + 4) = 0;
  v30.receiver = v4;
  v30.super_class = v14;
  id v15 = objc_msgSendSuper2(&v30, sel_initWithFrame_, a1, a2, a3, a4);
  id v16 = objc_msgSend(v15, sel_contentView);
  id v17 = sub_1C1FC5180();
  objc_msgSend(v16, sel_addSubview_, v17);

  id v18 = sub_1C1FC5180();
  objc_msgSend(v18, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);

  sub_1C2149B70();
  sub_1C2149B20();
  double v20 = v19;
  double v22 = v21;
  double v24 = v23;
  double v26 = v25;
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  id v27 = sub_1C1FC5180();
  id v28 = objc_msgSend(v15, sel_contentView);
  objc_msgSend(v27, sel_hk_alignConstraintsWithView_insets_, v28, v20, v22, v24, v26);

  return v15;
}

id sub_1C1FC59B4()
{
  return sub_1C1FC7480(type metadata accessor for MedicationLogDetailsUnitCell);
}

uint64_t type metadata accessor for MedicationLogDetailsUnitCell()
{
  return self;
}

uint64_t sub_1C1FC5A4C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI28MedicationLogDetailsUnitCell_item;
  swift_beginAccess();
  return sub_1C1F2116C(v3, a1);
}

uint64_t sub_1C1FC5AA0(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI28MedicationLogDetailsUnitCell_item;
  swift_beginAccess();
  sub_1C1F32DDC(a1, v3);
  swift_endAccess();
  sub_1C1FC5208();
  return sub_1C1FC7744(a1, (unint64_t *)&qword_1EBF0C300, (uint64_t (*)(uint64_t))sub_1C1F1CB5C);
}

uint64_t (*sub_1C1FC5B2C(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1C1FC5B8C;
}

uint64_t sub_1C1FC5B8C(uint64_t a1, char a2)
{
  uint64_t result = swift_endAccess();
  if ((a2 & 1) == 0) {
    return sub_1C1FC5208();
  }
  return result;
}

uint64_t sub_1C1FC5BC0()
{
  return sub_1C2148480();
}

uint64_t sub_1C1FC5C34()
{
  uint64_t v1 = sub_1C2147BB0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t result = MEMORY[0x1F4188790](v1);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI28MedicationLogDetailsUnitView_viewModel);
  if (v6)
  {
    swift_retain();
    id v7 = sub_1C1FC5EE8();
    sub_1C1FC70EC();
    id v8 = (void *)sub_1C214A5B0();
    swift_bridgeObjectRelease();
    objc_msgSend(v7, sel_setText_, v8);

    uint64_t v9 = (uint64_t *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI28MedicationLogDetailsUnitView_valueText);
    if (*(void *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI28MedicationLogDetailsUnitView_valueText + 8)
      && (swift_bridgeObjectRetain(),
          sub_1C214A680(),
          uint64_t v11 = v10,
          swift_bridgeObjectRelease(),
          swift_bridgeObjectRelease(),
          v11))
    {
      return swift_release();
    }
    else
    {
      sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8C0);
      sub_1C2147BA0();
      uint64_t v12 = sub_1C2149010();
      uint64_t v14 = v13;
      (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
      *uint64_t v9 = v12;
      v9[1] = v14;
      swift_bridgeObjectRelease();
      if (v9[1])
      {
        swift_bridgeObjectRetain();
        id v15 = sub_1C1FC6234();
        id v16 = (void *)sub_1C214A5B0();
        swift_bridgeObjectRelease();
        objc_msgSend(v15, sel_setText_, v16);
      }
      id v17 = sub_1C1FC6484();
      id v18 = *(id *)(v6 + 16);
      sub_1C214AFD0();

      double v19 = (void *)sub_1C214A5B0();
      swift_bridgeObjectRelease();
      objc_msgSend(v17, sel_setText_, v19);

      return swift_release();
    }
  }
  return result;
}

id sub_1C1FC5EE8()
{
  return sub_1C1FC64A4(&OBJC_IVAR____TtC19HealthMedicationsUI28MedicationLogDetailsUnitView____lazy_storage___titleLabel, (uint64_t (*)(void))sub_1C1FC5F08);
}

id sub_1C1FC5F08()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v0, sel_setAdjustsFontForContentSizeCategory_, 1);
  objc_msgSend(v0, sel_setNumberOfLines_, 0);
  id v1 = objc_msgSend(self, sel_labelColor);
  objc_msgSend(v0, sel_setTextColor_, v1);

  objc_msgSend(v0, sel_setNumberOfLines_, 1);
  uint64_t v7 = sub_1C214A5F0();
  uint64_t v8 = v2;
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  id v3 = v0;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  uint64_t v4 = (void *)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setAccessibilityIdentifier_, v4, v7, v8);

  id v5 = objc_msgSend(self, sel_preferredFontForTextStyle_, *MEMORY[0x1E4FB28C8]);
  objc_msgSend(v3, sel_setFont_, v5);

  return v3;
}

id sub_1C1FC60DC()
{
  return sub_1C1FC6254(&OBJC_IVAR____TtC19HealthMedicationsUI28MedicationLogDetailsUnitView____lazy_storage___valueAffixStackView, (uint64_t (*)(uint64_t))sub_1C1FC60FC);
}

id sub_1C1FC60FC()
{
  sub_1C1F0ED28();
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1C214FCB0;
  *(void *)(v0 + 32) = sub_1C1FC6234();
  *(void *)(v0 + 40) = sub_1C1FC6484();
  sub_1C214A7A0();
  id v1 = objc_allocWithZone(MEMORY[0x1E4FB1C60]);
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8F0);
  uint64_t v2 = (void *)sub_1C214A770();
  swift_bridgeObjectRelease();
  id v3 = objc_msgSend(v1, sel_initWithArrangedSubviews_, v2);

  objc_msgSend(v3, sel_setAxis_, 0);
  objc_msgSend(v3, sel_setAlignment_, 3);
  objc_msgSend(v3, sel_setDistribution_, 0);
  objc_msgSend(v3, sel_setSpacing_, 0.0);
  objc_msgSend(v3, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  return v3;
}

id sub_1C1FC6234()
{
  return sub_1C1FC6254(&OBJC_IVAR____TtC19HealthMedicationsUI28MedicationLogDetailsUnitView____lazy_storage___valueTextField, (uint64_t (*)(uint64_t))sub_1C1FC62B8);
}

id sub_1C1FC6254(uint64_t *a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(void **)(v2 + *a1);
  if (v4)
  {
    id v5 = *(id *)(v2 + *a1);
  }
  else
  {
    uint64_t v6 = (void *)a2(v2);
    uint64_t v7 = *(void **)(v2 + v3);
    *(void *)(v2 + v3) = v6;
    id v5 = v6;

    uint64_t v4 = 0;
  }
  id v8 = v4;
  return v5;
}

id sub_1C1FC62B8(uint64_t a1)
{
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1D70]), sel_init);
  objc_msgSend(v2, sel_setDelegate_, a1);
  id v3 = objc_msgSend(self, sel_preferredFontForTextStyle_, *MEMORY[0x1E4FB28C8]);
  objc_msgSend(v2, sel_setFont_, v3);

  id v4 = objc_msgSend(self, sel_systemBlueColor);
  objc_msgSend(v2, sel_setTextColor_, v4);

  uint64_t v9 = sub_1C214A5F0();
  uint64_t v10 = v5;
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  id v6 = v2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  uint64_t v7 = (void *)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  objc_msgSend(v6, sel_setAccessibilityIdentifier_, v7, v9, v10);

  objc_msgSend(v6, sel_setKeyboardType_, 8);
  objc_msgSend(v6, sel_setAdjustsFontForContentSizeCategory_, 1);
  return v6;
}

id sub_1C1FC6484()
{
  return sub_1C1FC64A4(&OBJC_IVAR____TtC19HealthMedicationsUI28MedicationLogDetailsUnitView____lazy_storage___countingAffixLabel, (uint64_t (*)(void))sub_1C1FC6504);
}

id sub_1C1FC64A4(uint64_t *a1, uint64_t (*a2)(void))
{
  uint64_t v3 = *a1;
  id v4 = *(void **)(v2 + *a1);
  if (v4)
  {
    id v5 = *(id *)(v2 + *a1);
  }
  else
  {
    id v6 = (void *)a2();
    uint64_t v7 = *(void **)(v2 + v3);
    *(void *)(v2 + v3) = v6;
    id v5 = v6;

    id v4 = 0;
  }
  id v8 = v4;
  return v5;
}

id sub_1C1FC6504()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v0, sel_setAdjustsFontForContentSizeCategory_, 1);
  objc_msgSend(v0, sel_setNumberOfLines_, 0);
  id v1 = self;
  id v2 = objc_msgSend(v1, sel_labelColor);
  objc_msgSend(v0, sel_setTextColor_, v2);

  objc_msgSend(v0, sel_setNumberOfLines_, 1);
  uint64_t v9 = sub_1C214A5F0();
  uint64_t v10 = v3;
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  id v4 = v0;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  id v5 = (void *)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_setAccessibilityIdentifier_, v5, v9, v10);

  id v6 = objc_msgSend(self, sel_preferredFontForTextStyle_, *MEMORY[0x1E4FB28C8]);
  objc_msgSend(v4, sel_setFont_, v6);

  id v7 = objc_msgSend(v1, sel_systemBlueColor);
  objc_msgSend(v4, sel_setTextColor_, v7);

  return v4;
}

void sub_1C1FC6714()
{
  id v1 = v0;
  sub_1C1F0ED28();
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1C214FCB0;
  *(void *)(v2 + 32) = sub_1C1FC5EE8();
  *(void *)(v2 + 40) = sub_1C1FC60DC();
  sub_1C214A7A0();
  id v3 = objc_allocWithZone(MEMORY[0x1E4FB1C60]);
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8F0);
  id v4 = (void *)sub_1C214A770();
  swift_bridgeObjectRelease();
  id v5 = objc_msgSend(v3, sel_initWithArrangedSubviews_, v4);

  objc_msgSend(v5, sel_setAxis_, 0);
  objc_msgSend(v5, sel_setAlignment_, 3);
  objc_msgSend(v5, sel_setDistribution_, 0);
  objc_msgSend(v5, sel_setSpacing_, 0.0);
  objc_msgSend(v5, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v0, sel_addSubview_, v5);
  id v6 = self;
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1C21510C0;
  id v8 = objc_msgSend(v5, sel_topAnchor);
  id v9 = objc_msgSend(v1, sel_topAnchor);
  id v10 = objc_msgSend(v8, sel_constraintEqualToAnchor_, v9);

  *(void *)(v7 + 32) = v10;
  id v11 = objc_msgSend(v5, sel_leadingAnchor);
  id v12 = objc_msgSend(v1, sel_leadingAnchor);
  id v13 = objc_msgSend(v11, sel_constraintEqualToAnchor_, v12);

  *(void *)(v7 + 40) = v13;
  id v14 = objc_msgSend(v5, sel_trailingAnchor);
  id v15 = objc_msgSend(v1, sel_trailingAnchor);
  if (qword_1EA2C2688 != -1) {
    swift_once();
  }
  id v16 = objc_msgSend(v14, sel_constraintEqualToAnchor_constant_, v15, -*(double *)&qword_1EA2C4860);

  *(void *)(v7 + 48) = v16;
  id v17 = objc_msgSend(v5, sel_bottomAnchor);
  id v18 = objc_msgSend(v1, sel_bottomAnchor);
  id v19 = objc_msgSend(v17, sel_constraintEqualToAnchor_, v18);

  *(void *)(v7 + 56) = v19;
  sub_1C214A7A0();
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C810);
  uint64_t v20 = (void *)sub_1C214A770();
  swift_bridgeObjectRelease();
  objc_msgSend(v6, sel_activateConstraints_, v20);

  id v21 = sub_1C1FC6234();
  objc_msgSend(v21, sel_addTarget_action_forControlEvents_, v1, sel_didChangeText_, 0x20000);
}

void sub_1C1FC6AEC()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1C2147BB0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  id v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = sub_1C1FC6234();
  id v7 = objc_msgSend(v6, sel_text);

  if (v7)
  {
    uint64_t v8 = sub_1C214A5F0();
    uint64_t v10 = v9;
  }
  else
  {
    uint64_t v8 = 0;
    uint64_t v10 = 0;
  }
  id v11 = (uint64_t *)(v1 + OBJC_IVAR____TtC19HealthMedicationsUI28MedicationLogDetailsUnitView_valueText);
  *id v11 = v8;
  v11[1] = v10;
  swift_bridgeObjectRelease();
  if (v11[1])
  {
    swift_bridgeObjectRetain();
    id v12 = sub_1C1FC6234();
    id v13 = (void *)sub_1C214A5B0();
    swift_bridgeObjectRelease();
    objc_msgSend(v12, sel_setText_, v13);
  }
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8C0);
  swift_bridgeObjectRetain();
  sub_1C2147BA0();
  sub_1C2149020();
  double v15 = v14;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  id v16 = sub_1C1FC5EE8();
  sub_1C1FC70EC();
  id v17 = (void *)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  objc_msgSend(v16, sel_setText_, v17);

  id v18 = (void *)MEMORY[0x1C8754850](v1 + OBJC_IVAR____TtC19HealthMedicationsUI28MedicationLogDetailsUnitView_detailsDelegate);
  if (v18)
  {
    id v19 = objc_msgSend(v18, sel_navigationItem);
    id v20 = objc_msgSend(v19, sel_rightBarButtonItem);

    objc_msgSend(v20, sel_setEnabled_, v15 > 0.0);
    swift_unknownObjectRelease();
  }
}

uint64_t sub_1C1FC6DE8()
{
  uint64_t v1 = v0;
  swift_getObjectType();
  uint64_t v2 = sub_1C21497F0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  id v5 = (char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1C2147BB0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(v1 + OBJC_IVAR____TtC19HealthMedicationsUI28MedicationLogDetailsUnitView_valueText + 8))
  {
    sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8C0);
    swift_bridgeObjectRetain();
    sub_1C2147BA0();
    sub_1C2149020();
    uint64_t v11 = v10;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    return v11;
  }
  else
  {
    sub_1C21497A0();
    id v13 = sub_1C21497E0();
    os_log_type_t v14 = sub_1C214ABD0();
    if (os_log_type_enabled(v13, v14))
    {
      double v15 = (uint8_t *)swift_slowAlloc();
      uint64_t v16 = swift_slowAlloc();
      uint64_t v20 = v16;
      *(_DWORD *)double v15 = 136315138;
      v19[1] = v15 + 4;
      uint64_t v17 = sub_1C214BC10();
      v19[2] = sub_1C1F6FD54(v17, v18, &v20);
      sub_1C214B530();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C1F0B000, v13, v14, "[%s] Couldn't retrieve unit value", v15, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C8754730](v16, -1, -1);
      MEMORY[0x1C8754730](v15, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    return 0;
  }
}

uint64_t sub_1C1FC70EC()
{
  uint64_t v1 = v0;
  swift_getObjectType();
  uint64_t v2 = sub_1C21497F0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  id v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(v1 + OBJC_IVAR____TtC19HealthMedicationsUI28MedicationLogDetailsUnitView_viewModel);
  if (v6)
  {
    uint64_t v7 = *(void **)(v6 + 16);
    swift_retain();
    id v8 = v7;
    uint64_t v9 = sub_1C214AFA0();
    swift_release();
  }
  else
  {
    sub_1C21497B0();
    uint64_t v10 = sub_1C21497E0();
    os_log_type_t v11 = sub_1C214ABD0();
    if (os_log_type_enabled(v10, v11))
    {
      id v12 = (uint8_t *)swift_slowAlloc();
      uint64_t v13 = swift_slowAlloc();
      uint64_t v18 = v13;
      *(_DWORD *)id v12 = 136315138;
      uint64_t v14 = sub_1C214BC10();
      uint64_t v17 = sub_1C1F6FD54(v14, v15, &v18);
      sub_1C214B530();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C1F0B000, v10, v11, "[%s] item is not a MedicationsDoseLogViewModel", v12, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C8754730](v13, -1, -1);
      MEMORY[0x1C8754730](v12, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    return 0;
  }
  return v9;
}

id sub_1C1FC7338(double a1, double a2, double a3, double a4)
{
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI28MedicationLogDetailsUnitView_viewModel] = 0;
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI28MedicationLogDetailsUnitView_detailsDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v9 = &v4[OBJC_IVAR____TtC19HealthMedicationsUI28MedicationLogDetailsUnitView_valueText];
  *(void *)uint64_t v9 = 0;
  *((void *)v9 + 1) = 0;
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI28MedicationLogDetailsUnitView____lazy_storage___titleLabel] = 0;
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI28MedicationLogDetailsUnitView____lazy_storage___valueAffixStackView] = 0;
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI28MedicationLogDetailsUnitView____lazy_storage___valueTextField] = 0;
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI28MedicationLogDetailsUnitView____lazy_storage___countingAffixLabel] = 0;
  v12.receiver = v4;
  v12.super_class = (Class)type metadata accessor for MedicationLogDetailsUnitView();
  id v10 = objc_msgSendSuper2(&v12, sel_initWithFrame_, a1, a2, a3, a4);
  sub_1C1FC6714();

  return v10;
}

id sub_1C1FC7468()
{
  return sub_1C1FC7480(type metadata accessor for MedicationLogDetailsUnitView);
}

id sub_1C1FC7480(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t type metadata accessor for MedicationLogDetailsUnitView()
{
  return self;
}

void sub_1C1FC757C(void *a1)
{
  id v2 = objc_msgSend(a1, sel_endOfDocument);
  id v3 = objc_msgSend(a1, sel_textRangeFromPosition_toPosition_, v2, v2);
  objc_msgSend(a1, sel_setSelectedTextRange_, v3);
}

uint64_t type metadata accessor for MedicationLogDetailsUnitItem()
{
  uint64_t result = qword_1EA2C4930;
  if (!qword_1EA2C4930) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C1FC7744(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1C1FC7E44(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

double sub_1C1FC77B4()
{
  sub_1C2148990();
  sub_1C2148980();
  double result = v0 * 0.5;
  qword_1EA2C4860 = *(void *)&result;
  return result;
}

uint64_t sub_1C1FC77F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MedicationLogDetailsUnitItem();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C1FC7854(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MedicationLogDetailsUnitItem();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1C1FC78B0()
{
  *(void *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI28MedicationLogDetailsUnitView_viewModel] = 0;
  *(void *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI28MedicationLogDetailsUnitView_detailsDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v1 = &v0[OBJC_IVAR____TtC19HealthMedicationsUI28MedicationLogDetailsUnitView_valueText];
  *(void *)uint64_t v1 = 0;
  *((void *)v1 + 1) = 0;
  *(void *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI28MedicationLogDetailsUnitView____lazy_storage___titleLabel] = 0;
  *(void *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI28MedicationLogDetailsUnitView____lazy_storage___valueAffixStackView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI28MedicationLogDetailsUnitView____lazy_storage___valueTextField] = 0;
  *(void *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI28MedicationLogDetailsUnitView____lazy_storage___countingAffixLabel] = 0;

  sub_1C214B910();
  __break(1u);
}

uint64_t sub_1C1FC7974(void *a1)
{
  uint64_t v2 = sub_1C214A3F0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  id v5 = (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1C214A420();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0CB10);
  id v10 = (void *)sub_1C214AD80();
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a1;
  aBlock[4] = sub_1C1FC7E3C;
  aBlock[5] = v11;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C1F0E42C;
  aBlock[3] = &block_descriptor_12;
  objc_super v12 = _Block_copy(aBlock);
  id v13 = a1;
  swift_release();
  sub_1C214A410();
  aBlock[0] = MEMORY[0x1E4FBC860];
  sub_1C1FC8140((unint64_t *)&qword_1EBF0CAE0, MEMORY[0x1E4FBCB00]);
  sub_1C1FC7E44(0, (unint64_t *)&qword_1EBF0CAF0, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
  sub_1C1F12754();
  sub_1C214B640();
  MEMORY[0x1C8752F10](0, v9, v5, v12);
  _Block_release(v12);

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1C1FC7C5C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C2147BB0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = objc_msgSend(a1, sel_text);
  if (v10)
  {
    uint64_t v11 = v10;
    objc_super v12 = (void *)sub_1C214A5B0();
    id v13 = objc_msgSend(v11, sel_stringByReplacingCharactersInRange_withString_, a2, a3, v12);

    sub_1C214A5F0();
    sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8C0);
    sub_1C2147BA0();
    char v14 = sub_1C2149000();
    swift_bridgeObjectRelease();

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  else
  {
    char v14 = 0;
  }
  return v14 & 1;
}

uint64_t sub_1C1FC7E04()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

void sub_1C1FC7E3C()
{
  sub_1C1FC757C(*(void **)(v0 + 16));
}

void sub_1C1FC7E44(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C1FC7EA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C1FC7EBC);
}

uint64_t sub_1C1FC7EBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C2147B20();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    unint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_1C1FC7F7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C1FC7F90);
}

uint64_t sub_1C1FC7F90(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1C2147B20();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_1C1FC804C()
{
  uint64_t result = sub_1C2147B20();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1C1FC80F8()
{
  return sub_1C1FC8140((unint64_t *)&unk_1EA2C4940, (void (*)(uint64_t))type metadata accessor for MedicationLogDetailsUnitItem);
}

uint64_t sub_1C1FC8140(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t TileItem.init(titleText:bodyText:subBodyText:buttonTitle:imageSystemName:background:didTapView:didTapDismiss:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  sub_1C2147B10();
  uint64_t v21 = (int *)type metadata accessor for TileItem(0);
  double v22 = (uint64_t *)(a9 + v21[5]);
  type metadata accessor for TileItemCell();
  sub_1C1FC98E4(&qword_1EA2C4950, v23, (void (*)(uint64_t))type metadata accessor for TileItemCell);
  *double v22 = sub_1C21481D0();
  v22[1] = v24;
  double v25 = (void *)(a9 + v21[6]);
  *double v25 = a1;
  v25[1] = a2;
  double v26 = (void *)(a9 + v21[7]);
  *double v26 = a3;
  v26[1] = a4;
  id v27 = (void *)(a9 + v21[8]);
  *id v27 = a5;
  v27[1] = a6;
  id v28 = (void *)(a9 + v21[9]);
  *id v28 = a7;
  v28[1] = a8;
  unint64_t v29 = (void *)(a9 + v21[10]);
  *unint64_t v29 = a10;
  v29[1] = a11;
  uint64_t result = sub_1C1FCE110(a12, a9 + v21[11], type metadata accessor for TileItem.Background);
  unint64_t v31 = (void *)(a9 + v21[12]);
  *unint64_t v31 = a13;
  v31[1] = a14;
  uint64_t v32 = (void *)(a9 + v21[13]);
  *uint64_t v32 = a15;
  v32[1] = a16;
  return result;
}

uint64_t type metadata accessor for TileItem(uint64_t a1)
{
  return sub_1C1F20D10(a1, qword_1EA2C4970);
}

uint64_t type metadata accessor for TileItemCell()
{
  return self;
}

uint64_t type metadata accessor for TileItem.Background(uint64_t a1)
{
  return sub_1C1F20D10(a1, qword_1EA2C4988);
}

uint64_t sub_1C1FC8374(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t TileItem.identifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1C2147B20();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t TileItem.reuseIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for TileItem(0) + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TileItem.uniqueIdentifier.getter()
{
  return 0x6D657449656C6954;
}

uint64_t TileItem.hash(into:)()
{
  type metadata accessor for TileItem(0);
  swift_bridgeObjectRetain();
  sub_1C214A690();

  return swift_bridgeObjectRelease();
}

uint64_t static TileItem.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(int *)(type metadata accessor for TileItem(0) + 20);
  uint64_t v5 = *(void *)(a1 + v4);
  uint64_t v6 = *(void *)(a1 + v4 + 8);
  uint64_t v7 = (void *)(a2 + v4);
  if (v5 == *v7 && v6 == v7[1]) {
    return 1;
  }

  return sub_1C214BA80();
}

uint64_t TileItem.hashValue.getter()
{
  return sub_1C214BB80();
}

uint64_t sub_1C1FC85CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *(int *)(a3 + 20);
  if (*(void *)(a1 + v3) == *(void *)(a2 + v3) && *(void *)(a1 + v3 + 8) == *(void *)(a2 + v3 + 8)) {
    return 1;
  }
  else {
    return sub_1C214BA80();
  }
}

uint64_t sub_1C1FC8600()
{
  return 0x6D657449656C6954;
}

uint64_t sub_1C1FC865C(uint64_t a1, void *a2)
{
  sub_1C1FCE178(a1, (uint64_t)v5, (uint64_t (*)(void))sub_1C1F24488);
  uint64_t v3 = *a2 + OBJC_IVAR____TtC19HealthMedicationsUI12TileItemCell_item;
  swift_beginAccess();
  sub_1C1F32DDC((uint64_t)v5, v3);
  swift_endAccess();
  sub_1C1FC86F8();
  return sub_1C1FCE1E0((uint64_t)v5, (uint64_t (*)(void))sub_1C1F24488);
}

uint64_t sub_1C1FC86F8()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v2 = sub_1C21497F0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v68 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C1FCDFE0(0, &qword_1EBF0C620, MEMORY[0x1E4FB0F28], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v71 = (char *)&v68 - v8;
  uint64_t v72 = sub_1C21499D0();
  uint64_t v70 = *(void *)(v72 - 8);
  MEMORY[0x1F4188790](v72);
  id v69 = (char *)&v68 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = type metadata accessor for TileItem.Background(0);
  MEMORY[0x1F4188790](v73);
  uint64_t v11 = (void **)((char *)&v68 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C1FCDFE0(0, (unint64_t *)&unk_1EA2C4A30, type metadata accessor for TileItem, v6);
  MEMORY[0x1F4188790](v12 - 8);
  char v14 = (char *)&v68 - v13;
  unint64_t v15 = (int *)type metadata accessor for TileItem(0);
  uint64_t v16 = *((void *)v15 - 1);
  MEMORY[0x1F4188790](v15);
  uint64_t v18 = (char *)&v68 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = (uint64_t)v1 + OBJC_IVAR____TtC19HealthMedicationsUI12TileItemCell_item;
  swift_beginAccess();
  sub_1C1FCE178(v19, (uint64_t)v77, (uint64_t (*)(void))sub_1C1F24488);
  if (v77[3])
  {
    sub_1C1F23804(0, (unint64_t *)&qword_1EBF0C2F0);
    int v20 = swift_dynamicCast();
    (*(void (**)(char *, void, uint64_t, int *))(v16 + 56))(v14, v20 ^ 1u, 1, v15);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v16 + 48))(v14, 1, v15) != 1)
    {
      sub_1C1FCE110((uint64_t)v14, (uint64_t)v18, type metadata accessor for TileItem);
      if (*(void *)&v18[v15[10] + 8])
      {
        uint64_t v21 = self;
        swift_bridgeObjectRetain();
        id v22 = objc_msgSend(v21, sel_configurationWithPointSize_weight_, 5, 34.0);
        uint64_t v23 = (void *)sub_1C214A5B0();
        swift_bridgeObjectRelease();
        id v24 = objc_msgSend(self, sel_systemImageNamed_withConfiguration_, v23, v22);

        double v25 = sub_1C1FC9294();
        id v26 = *(id *)&v25[OBJC_IVAR____TtC19HealthMedicationsUI11TileTipView_iconImageView];

        objc_msgSend(v26, sel_setImage_, v24);
      }
      else
      {
        uint64_t v34 = sub_1C1FC9294();
        id v26 = *(id *)&v34[OBJC_IVAR____TtC19HealthMedicationsUI11TileTipView_iconImageView];

        objc_msgSend(v26, sel_setImage_, 0);
      }

      sub_1C1FCE178((uint64_t)&v18[v15[11]], (uint64_t)v11, type metadata accessor for TileItem.Background);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v36 = v69;
        uint64_t v35 = v70;
        uint64_t v37 = v72;
        (*(void (**)(char *, void **, uint64_t))(v70 + 32))(v69, v11, v72);
        uint64_t v38 = v71;
        (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v71, v36, v37);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v35 + 56))(v38, 0, 1, v37);
        MEMORY[0x1C8752FF0](v38);
        (*(void (**)(char *, uint64_t))(v35 + 8))(v36, v37);
      }
      else
      {
        uint64_t v39 = *v11;
        id v40 = objc_msgSend(v1, sel_contentView);
        objc_msgSend(v40, sel_setBackgroundColor_, v39);
      }
      uint64_t v41 = sub_1C1FC9294();
      id v42 = sub_1C1FCB274();

      swift_bridgeObjectRetain();
      uint64_t v43 = (void *)sub_1C214A5B0();
      swift_bridgeObjectRelease();
      objc_msgSend(v42, sel_setText_, v43);

      uint64_t v44 = sub_1C1FC9294();
      id v45 = sub_1C1FCB484();

      swift_bridgeObjectRetain();
      os_log_type_t v46 = (void *)sub_1C214A5B0();
      swift_bridgeObjectRelease();
      objc_msgSend(v45, sel_setText_, v46);

      uint64_t v47 = sub_1C1FC9294();
      id v48 = sub_1C1FCB510();

      if (*(void *)&v18[v15[8] + 8])
      {
        swift_bridgeObjectRetain();
        uint64_t v49 = (void *)sub_1C214A5B0();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v49 = 0;
      }
      objc_msgSend(v48, sel_setText_, v49);

      uint64_t v50 = sub_1C1FC9294();
      id v51 = sub_1C1FCBC90();

      swift_bridgeObjectRetain();
      id v52 = (void *)sub_1C214A5B0();
      swift_bridgeObjectRelease();
      objc_msgSend(v51, sel_setTitle_forState_, v52, 0);

      uint64_t v53 = sub_1C1FC9294();
      uint64_t v54 = &v18[v15[12]];
      uint64_t v56 = *(void *)v54;
      uint64_t v55 = *((void *)v54 + 1);
      uint64_t v57 = &v53[OBJC_IVAR____TtC19HealthMedicationsUI11TileTipView_onTap];
      *(void *)uint64_t v57 = v56;
      *((void *)v57 + 1) = v55;
      swift_retain();

      swift_release();
      uint64_t v58 = sub_1C1FC9294();
      id v59 = (uint64_t *)&v18[v15[13]];
      uint64_t v60 = *v59;
      uint64_t v61 = v59[1];
      unint64_t v62 = (uint64_t *)&v58[OBJC_IVAR____TtC19HealthMedicationsUI11TileTipView_onDismiss];
      uint64_t v63 = *(void *)&v58[OBJC_IVAR____TtC19HealthMedicationsUI11TileTipView_onDismiss];
      *unint64_t v62 = v60;
      v62[1] = v61;
      sub_1C1F1325C(v60);
      sub_1C1F1325C(v60);
      sub_1C1F31118(v63);
      sub_1C1FCD934();
      sub_1C1F31118(v60);

      unint64_t v64 = sub_1C1FC9294();
      id v65 = objc_msgSend(v64, sel_traitCollection);
      id v66 = objc_msgSend(v65, sel_preferredContentSizeCategory);
      LOBYTE(v61) = sub_1C214AE80();

      sub_1C1FCC538(v61 & 1);
      objc_msgSend(v64, sel_invalidateIntrinsicContentSize);
      uint64_t v67 = (objc_class *)type metadata accessor for TileTipView();
      v75.receiver = v64;
      v75.super_class = v67;
      objc_msgSendSuper2(&v75, sel_layoutSubviews);

      return sub_1C1FCE1E0((uint64_t)v18, type metadata accessor for TileItem);
    }
  }
  else
  {
    sub_1C1FCE1E0((uint64_t)v77, (uint64_t (*)(void))sub_1C1F24488);
    (*(void (**)(char *, uint64_t, uint64_t, int *))(v16 + 56))(v14, 1, 1, v15);
  }
  sub_1C1FCE084((uint64_t)v14);
  sub_1C21497A0();
  id v27 = sub_1C21497E0();
  os_log_type_t v28 = sub_1C214ABD0();
  if (os_log_type_enabled(v27, v28))
  {
    unint64_t v29 = (uint8_t *)swift_slowAlloc();
    uint64_t v30 = swift_slowAlloc();
    v77[0] = v30;
    *(_DWORD *)unint64_t v29 = 136315138;
    uint64_t v31 = sub_1C214BC10();
    uint64_t v76 = sub_1C1F6FD54(v31, v32, v77);
    sub_1C214B530();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C1F0B000, v27, v28, "[%s] Incorrect view model for TileItemCell", v29, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C8754730](v30, -1, -1);
    MEMORY[0x1C8754730](v29, -1, -1);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_1C1FC9114@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI12TileItemCell_item;
  swift_beginAccess();
  return sub_1C1FCE178(v3, a1, (uint64_t (*)(void))sub_1C1F24488);
}

uint64_t sub_1C1FC917C(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI12TileItemCell_item;
  swift_beginAccess();
  sub_1C1F32DDC(a1, v3);
  swift_endAccess();
  sub_1C1FC86F8();
  return sub_1C1FCE1E0(a1, (uint64_t (*)(void))sub_1C1F24488);
}

uint64_t (*sub_1C1FC9200(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1C1FC9260;
}

uint64_t sub_1C1FC9260(uint64_t a1, char a2)
{
  uint64_t result = swift_endAccess();
  if ((a2 & 1) == 0) {
    return sub_1C1FC86F8();
  }
  return result;
}

char *sub_1C1FC9294()
{
  uint64_t v1 = OBJC_IVAR____TtC19HealthMedicationsUI12TileItemCell____lazy_storage___tileTipView;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI12TileItemCell____lazy_storage___tileTipView);
  if (v2)
  {
    uint64_t v3 = *(char **)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI12TileItemCell____lazy_storage___tileTipView);
  }
  else
  {
    uint64_t v4 = v0;
    uint64_t v5 = v0 + OBJC_IVAR____TtC19HealthMedicationsUI12TileItemCell_didTapView;
    uint64_t v6 = *(void *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI12TileItemCell_didTapView);
    uint64_t v7 = *(void *)(v5 + 8);
    uint64_t v8 = *(void *)(v4 + OBJC_IVAR____TtC19HealthMedicationsUI12TileItemCell_didTapDismiss);
    uint64_t v9 = *(void *)(v4 + OBJC_IVAR____TtC19HealthMedicationsUI12TileItemCell_didTapDismiss + 8);
    objc_allocWithZone((Class)type metadata accessor for TileTipView());
    swift_retain();
    sub_1C1F1325C(v8);
    uint64_t v10 = sub_1C1FCBFF8(v6, v7, v8, v9);
    objc_msgSend(v10, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    uint64_t v11 = *(void **)(v4 + v1);
    *(void *)(v4 + v1) = v10;
    uint64_t v3 = v10;

    uint64_t v2 = 0;
  }
  id v12 = v2;
  return v3;
}

id sub_1C1FC9370(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = &v4[OBJC_IVAR____TtC19HealthMedicationsUI12TileItemCell_item];
  *(_OWORD *)uint64_t v9 = 0u;
  *((_OWORD *)v9 + 1) = 0u;
  *((void *)v9 + 4) = 0;
  uint64_t v10 = (uint64_t *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI12TileItemCell_didTapDismiss];
  *uint64_t v10 = 0;
  v10[1] = 0;
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI12TileItemCell____lazy_storage___tileTipView] = 0;
  uint64_t v11 = &v4[OBJC_IVAR____TtC19HealthMedicationsUI12TileItemCell_didTapView];
  *(void *)uint64_t v11 = nullsub_1;
  *((void *)v11 + 1) = 0;
  uint64_t v12 = *v10;
  *uint64_t v10 = 0;
  v10[1] = 0;
  sub_1C1F31118(v12);
  v18.receiver = v4;
  v18.super_class = (Class)type metadata accessor for TileItemCell();
  id v13 = objc_msgSendSuper2(&v18, sel_initWithFrame_, a1, a2, a3, a4);
  sub_1C2147DE0();
  id v14 = (id)*MEMORY[0x1E4F39EA8];
  sub_1C214B0D0();

  id v15 = objc_msgSend(v13, sel_contentView);
  uint64_t v16 = sub_1C1FC9294();
  objc_msgSend(v15, sel_addSubview_, v16);

  sub_1C1FC9588();
  return v13;
}

void sub_1C1FC9588()
{
  uint64_t v1 = self;
  sub_1C1F0ED28();
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1C21510C0;
  uint64_t v3 = sub_1C1FC9294();
  id v4 = objc_msgSend(v3, sel_topAnchor);

  id v5 = objc_msgSend(v0, sel_contentView);
  id v6 = objc_msgSend(v5, sel_topAnchor);

  id v7 = objc_msgSend(v4, sel_constraintEqualToAnchor_, v6);
  *(void *)(v2 + 32) = v7;
  uint64_t v8 = sub_1C1FC9294();
  id v9 = objc_msgSend(v8, sel_bottomAnchor);

  id v10 = objc_msgSend(v0, sel_contentView);
  id v11 = objc_msgSend(v10, sel_bottomAnchor);

  id v12 = objc_msgSend(v9, sel_constraintEqualToAnchor_, v11);
  *(void *)(v2 + 40) = v12;
  id v13 = sub_1C1FC9294();
  id v14 = objc_msgSend(v13, sel_leadingAnchor);

  id v15 = objc_msgSend(v0, sel_contentView);
  id v16 = objc_msgSend(v15, sel_layoutMarginsGuide);

  id v17 = objc_msgSend(v16, sel_leadingAnchor);
  id v18 = objc_msgSend(v14, sel_constraintEqualToAnchor_, v17);

  *(void *)(v2 + 48) = v18;
  uint64_t v19 = sub_1C1FC9294();
  id v20 = objc_msgSend(v19, sel_trailingAnchor);

  id v21 = objc_msgSend(v0, sel_contentView);
  id v22 = objc_msgSend(v21, sel_trailingAnchor);

  id v23 = objc_msgSend(v20, sel_constraintEqualToAnchor_, v22);
  *(void *)(v2 + 56) = v23;
  sub_1C214A7A0();
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C810);
  id v24 = (id)sub_1C214A770();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_activateConstraints_, v24);
}

id TileItemCell.__deallocating_deinit()
{
  return sub_1C1FCDC94(type metadata accessor for TileItemCell);
}

uint64_t sub_1C1FC9898()
{
  return sub_1C1FC98E4((unint64_t *)&unk_1EA2C4960, 255, (void (*)(uint64_t))type metadata accessor for TileItem);
}

uint64_t sub_1C1FC98E4(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C1FC99B4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC19HealthMedicationsUI12TileItemCell_item;
  swift_beginAccess();
  return sub_1C1FCE178(v3, a2, (uint64_t (*)(void))sub_1C1F24488);
}

uint64_t *initializeBufferWithCopyOfBuffer for TileItem(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v34 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v34 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1C2147B20();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    id v10 = (uint64_t *)((char *)a1 + v8);
    id v11 = (uint64_t *)((char *)a2 + v8);
    uint64_t v12 = v11[1];
    *id v10 = *v11;
    v10[1] = v12;
    id v13 = (uint64_t *)((char *)a1 + v9);
    id v14 = (uint64_t *)((char *)a2 + v9);
    uint64_t v15 = v14[1];
    *id v13 = *v14;
    v13[1] = v15;
    uint64_t v16 = a3[7];
    uint64_t v17 = a3[8];
    id v18 = (uint64_t *)((char *)a1 + v16);
    uint64_t v19 = (uint64_t *)((char *)a2 + v16);
    uint64_t v20 = v19[1];
    void *v18 = *v19;
    v18[1] = v20;
    id v21 = (uint64_t *)((char *)a1 + v17);
    id v22 = (uint64_t *)((char *)a2 + v17);
    uint64_t v23 = v22[1];
    *id v21 = *v22;
    v21[1] = v23;
    uint64_t v24 = a3[9];
    uint64_t v25 = a3[10];
    id v26 = (uint64_t *)((char *)a1 + v24);
    id v27 = (uint64_t *)((char *)a2 + v24);
    uint64_t v28 = v27[1];
    *id v26 = *v27;
    v26[1] = v28;
    unint64_t v29 = (uint64_t *)((char *)a1 + v25);
    uint64_t v30 = (uint64_t *)((char *)a2 + v25);
    uint64_t v31 = v30[1];
    *unint64_t v29 = *v30;
    v29[1] = v31;
    uint64_t v32 = a3[11];
    uint64_t v47 = (void **)((char *)a1 + v32);
    id v48 = (void **)((char *)a2 + v32);
    type metadata accessor for TileItem.Background(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v33 = sub_1C21499D0();
      (*(void (**)(void **, void **, uint64_t))(*(void *)(v33 - 8) + 16))(v47, v48, v33);
    }
    else
    {
      uint64_t v35 = *v48;
      *uint64_t v47 = *v48;
      id v36 = v35;
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v37 = a3[12];
    uint64_t v38 = a3[13];
    uint64_t v39 = (uint64_t *)((char *)a1 + v37);
    id v40 = (uint64_t *)((char *)a2 + v37);
    uint64_t v41 = v40[1];
    void *v39 = *v40;
    v39[1] = v41;
    id v42 = (uint64_t *)((char *)a1 + v38);
    uint64_t v43 = (uint64_t *)((char *)a2 + v38);
    uint64_t v44 = *v43;
    swift_retain();
    if (v44)
    {
      uint64_t v45 = v43[1];
      *id v42 = v44;
      v42[1] = v45;
      swift_retain();
    }
    else
    {
      *(_OWORD *)id v42 = *(_OWORD *)v43;
    }
  }
  return a1;
}

uint64_t destroy for TileItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C2147B20();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  int v5 = (id *)(a1 + *(int *)(a2 + 44));
  type metadata accessor for TileItem.Background(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_1C21499D0();
    (*(void (**)(id *, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
  }
  uint64_t result = swift_release();
  if (*(void *)(a1 + *(int *)(a2 + 52)))
  {
    return swift_release();
  }
  return result;
}

uint64_t initializeWithCopy for TileItem(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1C2147B20();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)(a1 + v7);
  id v10 = (void *)(a2 + v7);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  uint64_t v12 = (void *)(a1 + v8);
  id v13 = (void *)(a2 + v8);
  uint64_t v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  uint64_t v15 = a3[7];
  uint64_t v16 = a3[8];
  uint64_t v17 = (void *)(a1 + v15);
  id v18 = (void *)(a2 + v15);
  uint64_t v19 = v18[1];
  *uint64_t v17 = *v18;
  v17[1] = v19;
  uint64_t v20 = (void *)(a1 + v16);
  id v21 = (void *)(a2 + v16);
  uint64_t v22 = v21[1];
  void *v20 = *v21;
  v20[1] = v22;
  uint64_t v23 = a3[9];
  uint64_t v24 = a3[10];
  uint64_t v25 = (void *)(a1 + v23);
  id v26 = (void *)(a2 + v23);
  uint64_t v27 = v26[1];
  *uint64_t v25 = *v26;
  v25[1] = v27;
  uint64_t v28 = (void *)(a1 + v24);
  unint64_t v29 = (void *)(a2 + v24);
  uint64_t v30 = v29[1];
  *uint64_t v28 = *v29;
  v28[1] = v30;
  uint64_t v31 = a3[11];
  uint64_t v45 = (void **)(a1 + v31);
  os_log_type_t v46 = (void **)(a2 + v31);
  type metadata accessor for TileItem.Background(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v32 = sub_1C21499D0();
    (*(void (**)(void **, void **, uint64_t))(*(void *)(v32 - 8) + 16))(v45, v46, v32);
  }
  else
  {
    uint64_t v33 = *v46;
    NSObject *v45 = *v46;
    id v34 = v33;
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v35 = a3[12];
  uint64_t v36 = a3[13];
  uint64_t v37 = (void *)(a1 + v35);
  uint64_t v38 = (void *)(a2 + v35);
  uint64_t v39 = v38[1];
  void *v37 = *v38;
  v37[1] = v39;
  id v40 = (void *)(a1 + v36);
  uint64_t v41 = (uint64_t *)(a2 + v36);
  uint64_t v42 = *v41;
  swift_retain();
  if (v42)
  {
    uint64_t v43 = v41[1];
    *id v40 = v42;
    v40[1] = v43;
    swift_retain();
  }
  else
  {
    *(_OWORD *)id v40 = *(_OWORD *)v41;
  }
  return a1;
}

uint64_t assignWithCopy for TileItem(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1C2147B20();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = a3[6];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v13 = a3[7];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (void *)(a2 + v13);
  *uint64_t v14 = *v15;
  v14[1] = v15[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v16 = a3[8];
  uint64_t v17 = (void *)(a1 + v16);
  id v18 = (void *)(a2 + v16);
  *uint64_t v17 = *v18;
  v17[1] = v18[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v19 = a3[9];
  uint64_t v20 = (void *)(a1 + v19);
  id v21 = (void *)(a2 + v19);
  void *v20 = *v21;
  v20[1] = v21[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v22 = a3[10];
  uint64_t v23 = (void *)(a1 + v22);
  uint64_t v24 = (void *)(a2 + v22);
  *uint64_t v23 = *v24;
  v23[1] = v24[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v25 = a3[11];
    id v26 = (void **)(a1 + v25);
    uint64_t v27 = (void **)(a2 + v25);
    sub_1C1FCE1E0(a1 + v25, type metadata accessor for TileItem.Background);
    type metadata accessor for TileItem.Background(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v28 = sub_1C21499D0();
      (*(void (**)(void **, void **, uint64_t))(*(void *)(v28 - 8) + 16))(v26, v27, v28);
    }
    else
    {
      unint64_t v29 = *v27;
      *id v26 = *v27;
      id v30 = v29;
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v31 = a3[12];
  uint64_t v32 = (void *)(a1 + v31);
  uint64_t v33 = (void *)(a2 + v31);
  uint64_t v34 = v33[1];
  *uint64_t v32 = *v33;
  v32[1] = v34;
  swift_retain();
  swift_release();
  uint64_t v35 = a3[13];
  uint64_t v36 = (void *)(a1 + v35);
  uint64_t v37 = (uint64_t *)(a2 + v35);
  uint64_t v38 = *(void *)(a1 + v35);
  uint64_t v39 = *v37;
  if (!v38)
  {
    if (v39)
    {
      uint64_t v41 = v37[1];
      *uint64_t v36 = v39;
      v36[1] = v41;
      swift_retain();
      return a1;
    }
LABEL_12:
    *(_OWORD *)uint64_t v36 = *(_OWORD *)v37;
    return a1;
  }
  if (!v39)
  {
    swift_release();
    goto LABEL_12;
  }
  uint64_t v40 = v37[1];
  *uint64_t v36 = v39;
  v36[1] = v40;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t initializeWithTake for TileItem(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1C2147B20();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  uint64_t v8 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  *(_OWORD *)(a1 + v8) = *(_OWORD *)(a2 + v8);
  uint64_t v9 = a3[10];
  *(_OWORD *)(a1 + a3[9]) = *(_OWORD *)(a2 + a3[9]);
  *(_OWORD *)(a1 + v9) = *(_OWORD *)(a2 + v9);
  uint64_t v10 = a3[11];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (const void *)(a2 + v10);
  uint64_t v13 = type metadata accessor for TileItem.Background(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v14 = sub_1C21499D0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v14 - 8) + 32))(v11, v12, v14);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
  }
  uint64_t v15 = a3[13];
  *(_OWORD *)(a1 + a3[12]) = *(_OWORD *)(a2 + a3[12]);
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (uint64_t *)(a2 + v15);
  uint64_t v18 = *v17;
  if (*v17)
  {
    uint64_t v19 = v17[1];
    void *v16 = v18;
    v16[1] = v19;
  }
  else
  {
    *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
  }
  return a1;
}

uint64_t assignWithTake for TileItem(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1C2147B20();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[6];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (uint64_t *)(a2 + v12);
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  *uint64_t v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  uint64_t v17 = a3[7];
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (uint64_t *)(a2 + v17);
  uint64_t v21 = *v19;
  uint64_t v20 = v19[1];
  void *v18 = v21;
  v18[1] = v20;
  swift_bridgeObjectRelease();
  uint64_t v22 = a3[8];
  uint64_t v23 = (void *)(a1 + v22);
  uint64_t v24 = (uint64_t *)(a2 + v22);
  uint64_t v26 = *v24;
  uint64_t v25 = v24[1];
  *uint64_t v23 = v26;
  v23[1] = v25;
  swift_bridgeObjectRelease();
  uint64_t v27 = a3[9];
  uint64_t v28 = (void *)(a1 + v27);
  unint64_t v29 = (uint64_t *)(a2 + v27);
  uint64_t v31 = *v29;
  uint64_t v30 = v29[1];
  *uint64_t v28 = v31;
  v28[1] = v30;
  swift_bridgeObjectRelease();
  uint64_t v32 = a3[10];
  uint64_t v33 = (void *)(a1 + v32);
  uint64_t v34 = (uint64_t *)(a2 + v32);
  uint64_t v36 = *v34;
  uint64_t v35 = v34[1];
  *uint64_t v33 = v36;
  v33[1] = v35;
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v37 = a3[11];
    uint64_t v38 = (void *)(a1 + v37);
    uint64_t v39 = (const void *)(a2 + v37);
    sub_1C1FCE1E0(a1 + v37, type metadata accessor for TileItem.Background);
    uint64_t v40 = type metadata accessor for TileItem.Background(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v41 = sub_1C21499D0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v41 - 8) + 32))(v38, v39, v41);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v38, v39, *(void *)(*(void *)(v40 - 8) + 64));
    }
  }
  *(_OWORD *)(a1 + a3[12]) = *(_OWORD *)(a2 + a3[12]);
  swift_release();
  uint64_t v42 = a3[13];
  uint64_t v43 = (void *)(a1 + v42);
  uint64_t v44 = (uint64_t *)(a2 + v42);
  uint64_t v45 = *(void *)(a1 + v42);
  uint64_t v46 = *v44;
  if (!v45)
  {
    if (v46)
    {
      uint64_t v48 = v44[1];
      void *v43 = v46;
      v43[1] = v48;
      return a1;
    }
LABEL_11:
    *(_OWORD *)uint64_t v43 = *(_OWORD *)v44;
    return a1;
  }
  if (!v46)
  {
    swift_release();
    goto LABEL_11;
  }
  uint64_t v47 = v44[1];
  void *v43 = v46;
  v43[1] = v47;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for TileItem(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C1FCA688);
}

uint64_t sub_1C1FCA688(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C2147B20();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if (a2 == 0x7FFFFFFF)
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
  else
  {
    uint64_t v11 = type metadata accessor for TileItem.Background(0);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a3 + 44);
    return v12(v14, a2, v13);
  }
}

uint64_t storeEnumTagSinglePayload for TileItem(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C1FCA7CC);
}

uint64_t sub_1C1FCA7CC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1C2147B20();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v11 = type metadata accessor for TileItem.Background(0);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a4 + 44);
    return v12(v14, a2, a2, v13);
  }
  return result;
}

uint64_t sub_1C1FCA8FC()
{
  uint64_t result = sub_1C2147B20();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for TileItem.Background(319);
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

char *initializeBufferWithCopyOfBuffer for TileItem.Background(char *a1, char **a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v7 = *a2;
    *(void *)a1 = *a2;
    a1 = &v7[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_1C21499D0();
      (*(void (**)(char *, char **, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      uint64_t v8 = *a2;
      *(void *)a1 = *a2;
      uint64_t v9 = v8;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void destroy for TileItem.Background(void **a1)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v2 = sub_1C21499D0();
    uint64_t v3 = *(void (**)(void **, uint64_t))(*(void *)(v2 - 8) + 8);
    v3(a1, v2);
  }
  else
  {
    uint64_t v4 = *a1;
  }
}

void **initializeWithCopy for TileItem.Background(void **a1, void **a2)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_1C21499D0();
    (*(void (**)(void **, void **, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  }
  else
  {
    int v5 = *a2;
    *a1 = *a2;
    id v6 = v5;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void **assignWithCopy for TileItem.Background(void **a1, void **a2)
{
  if (a1 != a2)
  {
    sub_1C1FCE1E0((uint64_t)a1, type metadata accessor for TileItem.Background);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v4 = sub_1C21499D0();
      (*(void (**)(void **, void **, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
    }
    else
    {
      int v5 = *a2;
      *a1 = *a2;
      id v6 = v5;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *initializeWithTake for TileItem.Background(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_1C21499D0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *assignWithTake for TileItem.Background(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1C1FCE1E0((uint64_t)a1, type metadata accessor for TileItem.Background);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_1C21499D0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1C1FCAE98()
{
  uint64_t result = sub_1C21499D0();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t method lookup function for TileItemCell(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for TileItemCell);
}

uint64_t dispatch thunk of TileItemCell.item.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of TileItemCell.item.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of TileItemCell.item.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x80))();
}

uint64_t sub_1C1FCAFE4(uint64_t a1)
{
  uint64_t v2 = *(void *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI11TileTipView_currentConstraints];
  *(void *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI11TileTipView_currentConstraints] = a1;
  unint64_t v3 = swift_bridgeObjectRetain();
  unsigned __int8 v4 = sub_1C1FC1B4C(v3, v2);
  swift_bridgeObjectRelease();
  if ((v4 & 1) == 0)
  {
    int v5 = self;
    sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C810);
    uint64_t v6 = (void *)sub_1C214A770();
    objc_msgSend(v5, sel_deactivateConstraints_, v6);

    swift_bridgeObjectRetain();
    uint64_t v7 = (void *)sub_1C214A770();
    swift_bridgeObjectRelease();
    objc_msgSend(v5, sel_activateConstraints_, v7);

    objc_msgSend(v1, sel_setNeedsLayout);
  }

  return swift_bridgeObjectRelease();
}

id sub_1C1FCB0F0()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1838]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v0, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v0, sel_setContentMode_, 1);
  id v1 = objc_msgSend(self, sel_systemGrayColor);
  objc_msgSend(v0, sel_setTintColor_, v1);

  uint64_t v6 = sub_1C214A5F0();
  uint64_t v7 = v2;
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  id v3 = v0;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  unsigned __int8 v4 = (void *)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setAccessibilityIdentifier_, v4, v6, v7);

  return v3;
}

id sub_1C1FCB274()
{
  return sub_1C1FCB744(&OBJC_IVAR____TtC19HealthMedicationsUI11TileTipView____lazy_storage___titleLabel, (uint64_t (*)(void))sub_1C1FCB294);
}

id sub_1C1FCB294()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
  uint64_t v8 = sub_1C214A5F0();
  uint64_t v9 = v1;
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  id v2 = v0;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  id v3 = (void *)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setAccessibilityIdentifier_, v3, v8, v9);

  objc_msgSend(v2, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v2, sel_setNumberOfLines_, 0);
  id v4 = objc_msgSend(self, sel__preferredFontForTextStyle_variant_, *MEMORY[0x1E4FB28C8], 1024);
  objc_msgSend(v2, sel_setFont_, v4);

  objc_msgSend(v2, sel_setAdjustsFontForContentSizeCategory_, 1);
  id v5 = objc_msgSend(self, sel_labelColor);
  objc_msgSend(v2, sel_setTextColor_, v5);

  LODWORD(v6) = 1132068864;
  objc_msgSend(v2, sel_setContentHuggingPriority_forAxis_, 0, v6);
  return v2;
}

id sub_1C1FCB484()
{
  return sub_1C1FCB4AC(&OBJC_IVAR____TtC19HealthMedicationsUI11TileTipView____lazy_storage___detailLabel);
}

id sub_1C1FCB4AC(uint64_t *a1)
{
  uint64_t v2 = *a1;
  id v3 = *(void **)(v1 + *a1);
  if (v3)
  {
    id v4 = *(id *)(v1 + *a1);
  }
  else
  {
    id v5 = sub_1C1FCB53C();
    double v6 = *(void **)(v1 + v2);
    *(void *)(v1 + v2) = v5;
    id v4 = v5;

    id v3 = 0;
  }
  id v7 = v3;
  return v4;
}

id sub_1C1FCB510()
{
  return sub_1C1FCB4AC(&OBJC_IVAR____TtC19HealthMedicationsUI11TileTipView____lazy_storage___subdetailLabel);
}

id sub_1C1FCB53C()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
  uint64_t v8 = sub_1C214A5F0();
  uint64_t v9 = v1;
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  id v2 = v0;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  id v3 = (void *)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setAccessibilityIdentifier_, v3, v8, v9);

  objc_msgSend(v2, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v2, sel_setNumberOfLines_, 0);
  id v4 = objc_msgSend(self, sel_preferredFontForTextStyle_, *MEMORY[0x1E4FB2950]);
  objc_msgSend(v2, sel_setFont_, v4);

  objc_msgSend(v2, sel_setAdjustsFontForContentSizeCategory_, 1);
  id v5 = objc_msgSend(self, sel_secondaryLabelColor);
  objc_msgSend(v2, sel_setTextColor_, v5);

  LODWORD(v6) = 1132068864;
  objc_msgSend(v2, sel_setContentHuggingPriority_forAxis_, 0, v6);
  return v2;
}

id sub_1C1FCB724()
{
  return sub_1C1FCB744(&OBJC_IVAR____TtC19HealthMedicationsUI11TileTipView____lazy_storage___separatorView, (uint64_t (*)(void))sub_1C1FCB7A4);
}

id sub_1C1FCB744(uint64_t *a1, uint64_t (*a2)(void))
{
  uint64_t v3 = *a1;
  id v4 = *(void **)(v2 + *a1);
  if (v4)
  {
    id v5 = *(id *)(v2 + *a1);
  }
  else
  {
    double v6 = (void *)a2();
    id v7 = *(void **)(v2 + v3);
    *(void *)(v2 + v3) = v6;
    id v5 = v6;

    id v4 = 0;
  }
  id v8 = v4;
  return v5;
}

id sub_1C1FCB7A4()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1EB0]), sel_init);
  objc_msgSend(v0, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  id v1 = objc_msgSend(self, sel_opaqueSeparatorColor);
  objc_msgSend(v0, sel_setBackgroundColor_, v1);

  uint64_t v5 = sub_1C214A5F0();
  uint64_t v6 = v2;
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  uint64_t v3 = (void *)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_setAccessibilityIdentifier_, v3, v5, v6);

  return v0;
}

id sub_1C1FCB8F8()
{
  return sub_1C1FCBCB0(&OBJC_IVAR____TtC19HealthMedicationsUI11TileTipView____lazy_storage___dismissButton, (uint64_t (*)(uint64_t))sub_1C1FCB918);
}

id sub_1C1FCB918(uint64_t a1)
{
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB14D0]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v2, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v2, sel_addTarget_action_forControlEvents_, a1, sel_didTapDismiss, 64);
  uint64_t v7 = sub_1C214A5F0();
  uint64_t v8 = v3;
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  id v4 = v2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  uint64_t v5 = (void *)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_setAccessibilityIdentifier_, v5, v7, v8);

  return v4;
}

id sub_1C1FCBA70()
{
  uint64_t v1 = OBJC_IVAR____TtC19HealthMedicationsUI11TileTipView____lazy_storage___dismissImageView;
  id v2 = *(void **)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI11TileTipView____lazy_storage___dismissImageView);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI11TileTipView____lazy_storage___dismissImageView);
  }
  else
  {
    uint64_t v4 = v0;
    sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8E0);
    uint64_t v5 = (void *)sub_1C214B0A0();
    id v6 = objc_msgSend(self, sel_configurationWithFont_, v5);

    id v7 = v6;
    uint64_t v8 = (void *)sub_1C214A5B0();
    id v9 = objc_msgSend(self, sel_systemImageNamed_withConfiguration_, v8, v7);

    id v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1838]), sel_init);
    objc_msgSend(v10, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    objc_msgSend(v10, sel_setPreferredSymbolConfiguration_, v7);
    objc_msgSend(v10, sel_setContentMode_, 1);
    if (v9)
    {
      uint64_t v11 = self;
      id v12 = v9;
      id v13 = objc_msgSend(v11, sel_quaternaryLabelColor);
      id v14 = objc_msgSend(v12, sel_imageWithTintColor_renderingMode_, v13, 1);
    }
    else
    {
      id v14 = 0;
    }
    objc_msgSend(v10, sel_setImage_, v14);

    uint64_t v15 = *(void **)(v4 + v1);
    *(void *)(v4 + v1) = v10;
    id v3 = v10;

    id v2 = 0;
  }
  id v16 = v2;
  return v3;
}

id sub_1C1FCBC90()
{
  return sub_1C1FCBCB0(&OBJC_IVAR____TtC19HealthMedicationsUI11TileTipView____lazy_storage___actionButton, (uint64_t (*)(uint64_t))sub_1C1FCBD14);
}

id sub_1C1FCBCB0(uint64_t *a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(void **)(v2 + *a1);
  if (v4)
  {
    id v5 = *(id *)(v2 + *a1);
  }
  else
  {
    id v6 = (void *)a2(v2);
    id v7 = *(void **)(v2 + v3);
    *(void *)(v2 + v3) = v6;
    id v5 = v6;

    uint64_t v4 = 0;
  }
  id v8 = v4;
  return v5;
}

id sub_1C1FCBD14(uint64_t a1)
{
  id v2 = objc_msgSend(self, sel_buttonWithType_, 1);
  objc_msgSend(v2, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  uint64_t v19 = sub_1C214A5F0();
  uint64_t v20 = v3;
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  id v4 = v2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  id v5 = (void *)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_setAccessibilityIdentifier_, v5, v19, v20);

  objc_msgSend(v4, sel_addTarget_action_forControlEvents_, a1, sel_didTapView, 64);
  id v6 = objc_msgSend(v4, sel_titleLabel);
  if (v6)
  {
    id v7 = v6;
    sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8E0);
    id v8 = (void *)sub_1C214B0A0();
    objc_msgSend(v7, sel_setFont_, v8);
  }
  id v9 = objc_msgSend(v4, sel_titleLabel);
  if (v9)
  {
    id v10 = v9;
    objc_msgSend(v9, sel_setAdjustsFontForContentSizeCategory_, 1);
  }
  id v11 = objc_msgSend(v4, sel_titleLabel);
  if (v11)
  {
    id v12 = v11;
    objc_msgSend(v11, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  }
  id v13 = objc_msgSend(v4, sel_titleLabel);
  if (v13)
  {
    id v14 = v13;
    objc_msgSend(v13, sel_setNumberOfLines_, 0);
  }
  id v15 = objc_msgSend(v4, sel_titleLabel);
  if (v15)
  {
    id v16 = v15;
    id v17 = objc_msgSend(self, sel_systemBlueColor);
    objc_msgSend(v16, sel_setTextColor_, v17);
  }
  objc_msgSend(v4, sel_setContentHorizontalAlignment_, 4);
  return v4;
}

char *sub_1C1FCBFF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v9 = (uint64_t *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI11TileTipView_onDismiss];
  *id v9 = 0;
  v9[1] = 0;
  v4[OBJC_IVAR____TtC19HealthMedicationsUI11TileTipView_isUsingVerticalLayout] = 0;
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI11TileTipView_currentConstraints] = MEMORY[0x1E4FBC860];
  uint64_t v10 = OBJC_IVAR____TtC19HealthMedicationsUI11TileTipView_iconImageView;
  id v11 = v4;
  *(void *)&v4[v10] = sub_1C1FCB0F0();
  *(void *)&v11[OBJC_IVAR____TtC19HealthMedicationsUI11TileTipView____lazy_storage___titleLabel] = 0;
  *(void *)&v11[OBJC_IVAR____TtC19HealthMedicationsUI11TileTipView____lazy_storage___detailLabel] = 0;
  *(void *)&v11[OBJC_IVAR____TtC19HealthMedicationsUI11TileTipView____lazy_storage___subdetailLabel] = 0;
  *(void *)&v11[OBJC_IVAR____TtC19HealthMedicationsUI11TileTipView____lazy_storage___separatorView] = 0;
  *(void *)&v11[OBJC_IVAR____TtC19HealthMedicationsUI11TileTipView____lazy_storage___dismissButton] = 0;
  *(void *)&v11[OBJC_IVAR____TtC19HealthMedicationsUI11TileTipView____lazy_storage___dismissImageView] = 0;
  *(void *)&v11[OBJC_IVAR____TtC19HealthMedicationsUI11TileTipView____lazy_storage___actionButton] = 0;
  *(void *)&v11[OBJC_IVAR____TtC19HealthMedicationsUI11TileTipView_detailLabelBottomConstraint] = 0;
  id v12 = &v11[OBJC_IVAR____TtC19HealthMedicationsUI11TileTipView_onTap];
  *(void *)id v12 = a1;
  *((void *)v12 + 1) = a2;
  uint64_t v13 = *v9;
  *id v9 = a3;
  v9[1] = a4;
  swift_retain();
  sub_1C1F1325C(a3);
  sub_1C1F31118(v13);

  v38.receiver = v11;
  v38.super_class = (Class)type metadata accessor for TileTipView();
  id v14 = (char *)objc_msgSendSuper2(&v38, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  sub_1C2147DE0();
  id v15 = (id)*MEMORY[0x1E4F39EA8];
  sub_1C214B0D0();

  objc_msgSend(v14, sel_addSubview_, *(void *)&v14[OBJC_IVAR____TtC19HealthMedicationsUI11TileTipView_iconImageView]);
  id v16 = v14;
  id v17 = sub_1C1FCBA70();
  objc_msgSend(v16, sel_addSubview_, v17);

  uint64_t v18 = v16;
  id v19 = sub_1C1FCB8F8();
  objc_msgSend(v18, sel_addSubview_, v19);

  uint64_t v20 = v18;
  id v21 = sub_1C1FCB274();
  objc_msgSend(v20, sel_addSubview_, v21);

  uint64_t v22 = v20;
  id v23 = sub_1C1FCB484();
  objc_msgSend(v22, sel_addSubview_, v23);

  uint64_t v24 = v22;
  id v25 = sub_1C1FCB510();
  objc_msgSend(v24, sel_addSubview_, v25);

  uint64_t v26 = v24;
  id v27 = sub_1C1FCB724();
  objc_msgSend(v26, sel_addSubview_, v27);

  uint64_t v28 = v26;
  id v29 = sub_1C1FCBC90();
  objc_msgSend(v28, sel_addSubview_, v29);

  id v30 = objc_msgSend(v28, sel_traitCollection);
  id v31 = objc_msgSend(v30, sel_preferredContentSizeCategory);
  char v32 = sub_1C214AE80();

  sub_1C1FCC538(v32 & 1);
  sub_1C1FCDFE0(0, (unint64_t *)&qword_1EA2C3D80, (uint64_t (*)(uint64_t))sub_1C1F7C864, MEMORY[0x1E4FBBE00]);
  uint64_t v33 = swift_allocObject();
  *(_OWORD *)(v33 + 16) = xmmword_1C214FCD0;
  uint64_t v34 = sub_1C2149C70();
  uint64_t v35 = MEMORY[0x1E4FB1138];
  *(void *)(v33 + 32) = v34;
  *(void *)(v33 + 40) = v35;
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1C1F7C8F0();
  uint64_t v36 = v28;
  sub_1C214B120();
  sub_1C1F31118(a3);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  swift_release();
  return (char *)v36;
}

void sub_1C1FCC410(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a3 + 16;
  swift_beginAccess();
  uint64_t v4 = MEMORY[0x1C8754850](v3);
  if (v4)
  {
    id v5 = (unsigned __int8 *)v4;
    id v6 = (objc_class *)type metadata accessor for TileTipView();
    if ((sub_1C214AE10() & 1) == 0)
    {
      id v7 = objc_msgSend(v5, sel_traitCollection);
      id v8 = objc_msgSend(v7, sel_preferredContentSizeCategory);
      int v9 = sub_1C214AE80() & 1;

      if (v9 != v5[OBJC_IVAR____TtC19HealthMedicationsUI11TileTipView_isUsingVerticalLayout])
      {
        sub_1C1FCC538(v9);
        objc_msgSend(v5, sel_invalidateIntrinsicContentSize);
        v10.receiver = v5;
        v10.super_class = v6;
        objc_msgSendSuper2(&v10, sel_layoutSubviews);
      }
    }
  }
}

void sub_1C1FCC538(int a1)
{
  id v2 = v1;
  swift_getObjectType();
  uint64_t v4 = sub_1C21497F0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  id v8 = (char *)&v173 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  objc_super v10 = (char *)&v173 - v9;
  id v11 = sub_1C1FCBA70();
  id v12 = objc_msgSend(v11, sel_image);

  if (v12)
  {
    objc_msgSend(v12, sel_size);
    double v14 = v13;
    double v16 = v15;
    id v17 = sub_1C1FCBC90();
    id v18 = objc_msgSend(v17, sel_titleLabel);

    if (v18)
    {
      int v178 = a1;
      id v175 = v12;
      sub_1C1FCD934();
      objc_msgSend(v2, sel_setLayoutMargins_, 11.0, 13.0, 11.0, 13.0);
      id v176 = objc_msgSend(v2, sel_layoutMarginsGuide);
      sub_1C1F0ED28();
      uint64_t v19 = swift_allocObject();
      *(_OWORD *)(v19 + 16) = xmmword_1C2154100;
      id v20 = sub_1C1FCB8F8();
      id v21 = objc_msgSend(v20, sel_topAnchor);

      id v22 = objc_msgSend(v2, sel_topAnchor);
      id v23 = objc_msgSend(v21, sel_constraintEqualToAnchor_, v22);

      *(void *)(v19 + 32) = v23;
      id v24 = sub_1C1FCB8F8();
      id v177 = v18;
      id v25 = objc_msgSend(v24, sel_trailingAnchor);

      id v26 = objc_msgSend(v2, sel_trailingAnchor);
      id v27 = objc_msgSend(v25, sel_constraintEqualToAnchor_, v26);

      *(void *)(v19 + 40) = v27;
      id v28 = sub_1C1FCB8F8();
      id v29 = objc_msgSend(v28, sel_widthAnchor);

      id v30 = objc_msgSend(v29, sel_constraintEqualToConstant_, v14 + 26.0);
      *(void *)(v19 + 48) = v30;
      id v31 = sub_1C1FCB8F8();
      id v32 = objc_msgSend(v31, sel_heightAnchor);

      id v33 = objc_msgSend(v32, sel_constraintEqualToConstant_, v16 + 22.0);
      *(void *)(v19 + 56) = v33;
      id v34 = sub_1C1FCBA70();
      id v35 = objc_msgSend(v34, sel_topAnchor);

      id v36 = objc_msgSend(v2, sel_topAnchor);
      id v37 = objc_msgSend(v35, sel_constraintEqualToAnchor_constant_, v36, 11.0);

      *(void *)(v19 + 64) = v37;
      id v38 = sub_1C1FCBA70();
      id v39 = objc_msgSend(v38, sel_trailingAnchor);

      id v40 = objc_msgSend(v2, sel_layoutMarginsGuide);
      id v41 = objc_msgSend(v40, sel_trailingAnchor);

      id v42 = objc_msgSend(v39, sel_constraintEqualToAnchor_, v41);
      *(void *)(v19 + 72) = v42;
      uint64_t v43 = *(void **)&v2[OBJC_IVAR____TtC19HealthMedicationsUI11TileTipView_iconImageView];
      id v44 = objc_msgSend(v43, sel_topAnchor);
      id v45 = objc_msgSend(v2, sel_topAnchor);
      id v46 = objc_msgSend(v44, (SEL)&selRef_dealloc + 7, v45, 11.0);

      *(void *)(v19 + 80) = v46;
      id v47 = objc_msgSend(v43, sel_leadingAnchor);
      id v48 = objc_msgSend(v2, (SEL)&selRef_setTranslatesAutoresizingMaskIntoConstraints_ + 2);
      id v49 = objc_msgSend(v47, sel_constraintEqualToAnchor_, v48);

      *(void *)(v19 + 88) = v49;
      id v50 = objc_msgSend(v43, sel_widthAnchor);
      id v51 = objc_msgSend(v50, sel_constraintEqualToConstant_, 45.0);

      *(void *)(v19 + 96) = v51;
      id v174 = v43;
      id v52 = objc_msgSend(v43, sel_heightAnchor);
      id v53 = objc_msgSend(v52, sel_constraintEqualToConstant_, 45.0);

      *(void *)(v19 + 104) = v53;
      id v54 = sub_1C1FCB484();
      id v55 = objc_msgSend(v54, sel_topAnchor);

      id v56 = sub_1C1FCB274();
      id v57 = objc_msgSend(v56, sel_bottomAnchor);

      id v58 = objc_msgSend(v55, sel_constraintEqualToAnchor_constant_, v57, 4.0);
      *(void *)(v19 + 112) = v58;
      id v59 = sub_1C1FCB484();
      id v60 = objc_msgSend(v59, sel_leadingAnchor);

      id v61 = sub_1C1FCB274();
      id v62 = objc_msgSend(v61, sel_leadingAnchor);

      id v63 = objc_msgSend(v60, sel_constraintEqualToAnchor_, v62);
      *(void *)(v19 + 120) = v63;
      id v64 = sub_1C1FCB484();
      id v65 = objc_msgSend(v64, sel_trailingAnchor);

      id v66 = objc_msgSend(v2, sel_trailingAnchor);
      id v67 = objc_msgSend(v65, sel_constraintEqualToAnchor_, v66);

      *(void *)(v19 + 128) = v67;
      id v68 = sub_1C1FCB510();
      id v69 = objc_msgSend(v68, sel_leadingAnchor);

      id v70 = sub_1C1FCB274();
      id v71 = objc_msgSend(v70, sel_leadingAnchor);

      id v72 = objc_msgSend(v69, sel_constraintEqualToAnchor_, v71);
      *(void *)(v19 + 136) = v72;
      id v73 = sub_1C1FCB510();
      id v74 = objc_msgSend(v73, sel_trailingAnchor);

      id v75 = objc_msgSend(v2, sel_trailingAnchor);
      id v76 = objc_msgSend(v74, sel_constraintEqualToAnchor_, v75);

      *(void *)(v19 + 144) = v76;
      id v77 = sub_1C1FCB510();
      id v78 = objc_msgSend(v77, sel_bottomAnchor);

      id v79 = sub_1C1FCB724();
      id v80 = objc_msgSend(v79, sel_topAnchor);

      double v81 = -11.0;
      id v82 = objc_msgSend(v78, sel_constraintEqualToAnchor_constant_, v80, -11.0);

      *(void *)(v19 + 152) = v82;
      id v83 = sub_1C1FCB724();
      id v84 = objc_msgSend(v83, sel_heightAnchor);

      HKUIOnePixel();
      id v85 = objc_msgSend(v84, sel_constraintEqualToConstant_);

      *(void *)(v19 + 160) = v85;
      id v86 = sub_1C1FCB724();
      id v87 = objc_msgSend(v86, sel_leadingAnchor);

      id v88 = sub_1C1FCB484();
      id v89 = objc_msgSend(v88, sel_leadingAnchor);

      id v90 = objc_msgSend(v87, sel_constraintEqualToAnchor_, v89);
      *(void *)(v19 + 168) = v90;
      id v91 = sub_1C1FCB724();
      id v92 = objc_msgSend(v91, sel_trailingAnchor);

      id v93 = objc_msgSend(v2, sel_trailingAnchor);
      id v94 = objc_msgSend(v92, sel_constraintEqualToAnchor_, v93);

      *(void *)(v19 + 176) = v94;
      id v95 = sub_1C1FCB724();
      id v96 = objc_msgSend(v95, sel_bottomAnchor);

      id v97 = v177;
      id v98 = objc_msgSend(v177, sel_topAnchor);
      id v99 = objc_msgSend(v96, sel_constraintEqualToAnchor_constant_, v98, -11.0);

      *(void *)(v19 + 184) = v99;
      id v100 = sub_1C1FCBC90();
      id v101 = objc_msgSend(v100, sel_leadingAnchor);

      id v102 = sub_1C1FCB484();
      id v103 = objc_msgSend(v102, sel_leadingAnchor);

      id v104 = objc_msgSend(v101, sel_constraintEqualToAnchor_, v103);
      *(void *)(v19 + 192) = v104;
      id v105 = sub_1C1FCBC90();
      id v106 = objc_msgSend(v105, sel_trailingAnchor);

      id v107 = sub_1C1FCB484();
      id v108 = objc_msgSend(v107, sel_trailingAnchor);

      id v109 = objc_msgSend(v106, sel_constraintLessThanOrEqualToAnchor_, v108);
      *(void *)(v19 + 200) = v109;
      id v110 = objc_msgSend(v97, sel_bottomAnchor);
      id v111 = objc_msgSend(v176, sel_bottomAnchor);
      id v112 = objc_msgSend(v110, sel_constraintEqualToAnchor_, v111);

      *(void *)(v19 + 208) = v112;
      uint64_t v180 = v19;
      sub_1C214A7A0();
      unint64_t v113 = v180;
      id v114 = sub_1C1FCB510();
      id v115 = objc_msgSend(v114, sel_text);

      if (v115)
      {
        sub_1C214A5F0();

        sub_1C214A680();
        uint64_t v117 = v116;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (!v117) {
          double v81 = 0.0;
        }
      }
      else
      {
        double v81 = 0.0;
      }
      id v130 = sub_1C1FCB484();
      id v131 = objc_msgSend(v130, sel_bottomAnchor);

      id v132 = sub_1C1FCB510();
      id v133 = objc_msgSend(v132, sel_topAnchor);

      id v134 = objc_msgSend(v131, sel_constraintEqualToAnchor_constant_, v133, v81);
      uint64_t v135 = OBJC_IVAR____TtC19HealthMedicationsUI11TileTipView_detailLabelBottomConstraint;
      uint64_t v136 = *(void **)&v2[OBJC_IVAR____TtC19HealthMedicationsUI11TileTipView_detailLabelBottomConstraint];
      *(void *)&v2[OBJC_IVAR____TtC19HealthMedicationsUI11TileTipView_detailLabelBottomConstraint] = v134;

      uint64_t v137 = *(void **)&v2[v135];
      if (v137) {
        objc_msgSend(v137, sel_setActive_, 1);
      }
      if (v178)
      {
        id v138 = sub_1C1FCB274();
        id v139 = objc_msgSend(v138, sel_topAnchor);

        id v140 = v174;
        id v141 = objc_msgSend(v174, sel_bottomAnchor);
        id v142 = objc_msgSend(v139, sel_constraintEqualToAnchor_constant_, v141, 4.0);

        id v143 = sub_1C1FCB274();
        id v144 = objc_msgSend(v143, sel_leadingAnchor);

        id v145 = objc_msgSend(v140, sel_leadingAnchor);
        id v146 = objc_msgSend(v144, (SEL)&selRef_leadingAnchor + 6, v145);

        id v147 = sub_1C1FCB274();
        id v148 = objc_msgSend(v147, sel_trailingAnchor);

        id v149 = objc_msgSend(v2, sel_trailingAnchor);
        id v150 = objc_msgSend(v148, (SEL)&selRef_leadingAnchor + 6, v149);

        if (v113 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v151 = sub_1C214B930();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v151 = *(void *)((v113 & 0xFFFFFFFFFFFFFF8) + 0x10);
        }
        char v152 = v178;
        id v153 = v177;
        if (__OFADD__(v151, 3))
        {
          __break(1u);
        }
        else
        {
          sub_1C1FCDE1C(v151 + 3, 1);
          sub_1C214A7A0();
          unint64_t v113 = (unint64_t)v142;
          MEMORY[0x1C87528E0]();
          if (*(void *)((v180 & 0xFFFFFFFFFFFFFF8) + 0x10) < *(void *)((v180 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          {
LABEL_20:
            sub_1C214A820();
            sub_1C214A7A0();
            id v154 = v146;
            MEMORY[0x1C87528E0]();
            if (*(void *)((v180 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v180 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              sub_1C214A7D0();
            }
            sub_1C214A820();
            sub_1C214A7A0();
            id v155 = v150;
            MEMORY[0x1C87528E0]();
            if (*(void *)((v180 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v180 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              sub_1C214A7D0();
            }
            sub_1C214A820();
            sub_1C214A7A0();
LABEL_42:

            sub_1C1FCAFE4(v180);
            v2[OBJC_IVAR____TtC19HealthMedicationsUI11TileTipView_isUsingVerticalLayout] = v152 & 1;
            return;
          }
        }
        sub_1C214A7D0();
        goto LABEL_20;
      }
      id v156 = v174;
      if (objc_msgSend(v174, sel_isHidden)) {
        id v157 = objc_msgSend(v2, sel_leadingAnchor);
      }
      else {
        id v157 = objc_msgSend(v156, sel_trailingAnchor);
      }
      id v158 = v157;
      if (objc_msgSend(v156, sel_isHidden)) {
        double v159 = 0.0;
      }
      else {
        double v159 = 11.0;
      }
      id v160 = sub_1C1FCB274();
      id v161 = objc_msgSend(v160, sel_topAnchor);

      id v162 = objc_msgSend(v2, sel_topAnchor);
      id v163 = objc_msgSend(v161, sel_constraintEqualToAnchor_constant_, v162, 11.0);

      id v164 = sub_1C1FCB274();
      id v165 = objc_msgSend(v164, sel_leadingAnchor);

      id v174 = v158;
      id v166 = objc_msgSend(v165, sel_constraintEqualToAnchor_constant_, v158, v159);

      id v167 = sub_1C1FCB274();
      id v168 = objc_msgSend(v167, sel_trailingAnchor);

      id v169 = sub_1C1FCBA70();
      id v170 = objc_msgSend(v169, sel_leadingAnchor);

      id v171 = objc_msgSend(v168, sel_constraintEqualToAnchor_constant_, v170, -10.0);
      if (v113 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v172 = sub_1C214B930();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v172 = *(void *)((v113 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      char v152 = v178;
      id v153 = v177;
      if (__OFADD__(v172, 3))
      {
        __break(1u);
      }
      else
      {
        sub_1C1FCDE1C(v172 + 3, 1);
        sub_1C214A7A0();
        unint64_t v113 = (unint64_t)v163;
        MEMORY[0x1C87528E0]();
        if (*(void *)((v180 & 0xFFFFFFFFFFFFFF8) + 0x10) < *(void *)((v180 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        {
LABEL_37:
          sub_1C214A820();
          sub_1C214A7A0();
          id v154 = v166;
          MEMORY[0x1C87528E0]();
          if (*(void *)((v180 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v180 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_1C214A7D0();
          }
          sub_1C214A820();
          sub_1C214A7A0();
          id v155 = v171;
          MEMORY[0x1C87528E0]();
          if (*(void *)((v180 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v180 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_1C214A7D0();
          }
          sub_1C214A820();
          sub_1C214A7A0();

          goto LABEL_42;
        }
      }
      sub_1C214A7D0();
      goto LABEL_37;
    }
    sub_1C21497A0();
    v124 = sub_1C21497E0();
    uint64_t v125 = sub_1C214ABD0();
    if (os_log_type_enabled(v124, (os_log_type_t)v125))
    {
      uint64_t v126 = (uint8_t *)swift_slowAlloc();
      uint64_t v127 = swift_slowAlloc();
      uint64_t v180 = v127;
      id v175 = v12;
      *(_DWORD *)uint64_t v126 = 136315138;
      uint64_t v128 = sub_1C214BC10();
      uint64_t v179 = sub_1C1F6FD54(v128, v129, &v180);
      sub_1C214B530();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C1F0B000, v124, (os_log_type_t)v125, "[%s] Action button label is nil.", v126, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C8754730](v127, -1, -1);
      MEMORY[0x1C8754730](v126, -1, -1);
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
  }
  else
  {
    sub_1C21497A0();
    int v118 = sub_1C21497E0();
    os_log_type_t v119 = sub_1C214ABD0();
    if (os_log_type_enabled(v118, v119))
    {
      unint64_t v120 = (uint8_t *)swift_slowAlloc();
      uint64_t v121 = swift_slowAlloc();
      uint64_t v180 = v121;
      *(_DWORD *)unint64_t v120 = 136315138;
      uint64_t v122 = sub_1C214BC10();
      uint64_t v179 = sub_1C1F6FD54(v122, v123, &v180);
      sub_1C214B530();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C1F0B000, v118, v119, "[%s] Dismiss button image is nil.", v120, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C8754730](v121, -1, -1);
      MEMORY[0x1C8754730](v120, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  }
}

void sub_1C1FCD934()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI11TileTipView_iconImageView);
  id v2 = objc_msgSend(v1, sel_image);
  id v3 = v2;
  if (v2) {

  }
  objc_msgSend(v1, sel_setHidden_, v3 == 0);
  id v4 = sub_1C1FCB510();
  id v5 = sub_1C1FCB510();
  id v6 = objc_msgSend(v5, sel_text);

  if (v6 && (sub_1C214A5F0(), v6, sub_1C214A680(), uint64_t v8 = v7, swift_bridgeObjectRelease(), v8))
  {
    swift_bridgeObjectRelease();
    uint64_t v9 = 0;
  }
  else
  {
    uint64_t v9 = 1;
  }
  objc_msgSend(v4, sel_setHidden_, v9);

  id v10 = sub_1C1FCB8F8();
  id v11 = (uint64_t *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI11TileTipView_onDismiss);
  uint64_t v12 = *(void *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI11TileTipView_onDismiss);
  uint64_t v13 = *(void *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI11TileTipView_onDismiss + 8);
  if (v12)
  {
    uint64_t v14 = swift_allocObject();
    *(void *)(v14 + 16) = v12;
    *(void *)(v14 + 24) = v13;
    double v15 = sub_1C1FCE244;
  }
  else
  {
    double v15 = 0;
  }
  sub_1C1F1325C(v12);
  sub_1C1F31118((uint64_t)v15);
  objc_msgSend(v10, sel_setHidden_, v12 == 0);

  id v16 = sub_1C1FCBA70();
  uint64_t v17 = *v11;
  uint64_t v18 = v11[1];
  id v21 = v16;
  if (*v11)
  {
    uint64_t v19 = swift_allocObject();
    *(void *)(v19 + 16) = v17;
    *(void *)(v19 + 24) = v18;
    id v20 = sub_1C1F60618;
  }
  else
  {
    id v20 = 0;
  }
  sub_1C1F1325C(v17);
  sub_1C1F31118((uint64_t)v20);
  objc_msgSend(v21, sel_setHidden_, v17 == 0);
}

id sub_1C1FCDC7C()
{
  return sub_1C1FCDC94(type metadata accessor for TileTipView);
}

id sub_1C1FCDC94(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t type metadata accessor for TileTipView()
{
  return self;
}

uint64_t sub_1C1FCDDE4()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C1FCDE1C(uint64_t a1, char a2)
{
  unint64_t v5 = *v2;
  uint64_t result = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *id v2 = v5;
  uint64_t v7 = 0;
  if ((result & 1) != 0 && (v5 & 0x8000000000000000) == 0 && (v5 & 0x4000000000000000) == 0)
  {
    if (a1 <= *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      return result;
    }
    uint64_t v7 = 1;
  }
  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_1C214B930();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v8 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v8 <= a1) {
    uint64_t v9 = a1;
  }
  else {
    uint64_t v9 = v8;
  }
  uint64_t result = MEMORY[0x1C8753970](v7, v9, a2 & 1, v5);
  *id v2 = result;
  return result;
}

void sub_1C1FCDEDC()
{
  uint64_t v1 = &v0[OBJC_IVAR____TtC19HealthMedicationsUI11TileTipView_onDismiss];
  void *v1 = 0;
  v1[1] = 0;
  v0[OBJC_IVAR____TtC19HealthMedicationsUI11TileTipView_isUsingVerticalLayout] = 0;
  *(void *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI11TileTipView_currentConstraints] = MEMORY[0x1E4FBC860];
  uint64_t v2 = OBJC_IVAR____TtC19HealthMedicationsUI11TileTipView_iconImageView;
  *(void *)&v0[v2] = sub_1C1FCB0F0();
  *(void *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI11TileTipView____lazy_storage___titleLabel] = 0;
  *(void *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI11TileTipView____lazy_storage___detailLabel] = 0;
  *(void *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI11TileTipView____lazy_storage___subdetailLabel] = 0;
  *(void *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI11TileTipView____lazy_storage___separatorView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI11TileTipView____lazy_storage___dismissButton] = 0;
  *(void *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI11TileTipView____lazy_storage___dismissImageView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI11TileTipView____lazy_storage___actionButton] = 0;
  *(void *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI11TileTipView_detailLabelBottomConstraint] = 0;

  sub_1C214B910();
  __break(1u);
}

void sub_1C1FCDFE0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C1FCE044()
{
  swift_unknownObjectWeakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

void sub_1C1FCE07C(uint64_t a1, uint64_t a2)
{
  sub_1C1FCC410(a1, a2, v2);
}

uint64_t sub_1C1FCE084(uint64_t a1)
{
  sub_1C1FCDFE0(0, (unint64_t *)&unk_1EA2C4A30, type metadata accessor for TileItem, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C1FCE110(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C1FCE178(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C1FCE1E0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_1C1FCE248()
{
  qword_1EA2C7DC8 = 0;
}

uint64_t sub_1C1FCE254(uint64_t a1, void *a2)
{
  sub_1C1F2116C(a1, (uint64_t)v5);
  uint64_t v3 = *a2 + OBJC_IVAR____TtC19HealthMedicationsUI22MedicationListItemCell_item;
  swift_beginAccess();
  sub_1C1F32DDC((uint64_t)v5, v3);
  swift_endAccess();
  sub_1C1FD05B4();
  return sub_1C1F374E4((uint64_t)v5);
}

uint64_t sub_1C1FCE2C8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI22MedicationListItemCell_item;
  swift_beginAccess();
  return sub_1C1F2116C(v3, a1);
}

uint64_t sub_1C1FCE31C(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI22MedicationListItemCell_item;
  swift_beginAccess();
  sub_1C1F32DDC(a1, v3);
  swift_endAccess();
  sub_1C1FD05B4();
  return sub_1C1F374E4(a1);
}

uint64_t (*sub_1C1FCE38C(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1C1FCE3EC;
}

uint64_t sub_1C1FCE3EC(uint64_t a1, char a2)
{
  uint64_t result = swift_endAccess();
  if ((a2 & 1) == 0) {
    return sub_1C1FD05B4();
  }
  return result;
}

id sub_1C1FCE464()
{
  uint64_t v1 = OBJC_IVAR____TtC19HealthMedicationsUI22MedicationListItemCell____lazy_storage___primaryLabel;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI22MedicationListItemCell____lazy_storage___primaryLabel);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI22MedicationListItemCell____lazy_storage___primaryLabel);
  }
  else
  {
    uint64_t v4 = v0;
    id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
    sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8E0);
    id v6 = (void *)sub_1C214B0A0();
    objc_msgSend(v5, sel_setFont_, v6);

    objc_msgSend(v5, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    objc_msgSend(v5, sel_setNumberOfLines_, 2);
    uint64_t v7 = sub_1C214A5F0();
    uint64_t v9 = v8;
    id v10 = v5;
    swift_bridgeObjectRetain();
    sub_1C214A6C0();
    swift_bridgeObjectRelease();
    uint64_t v16 = v7;
    swift_bridgeObjectRetain();
    sub_1C214A6C0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_1C214A6C0();
    swift_bridgeObjectRelease();
    id v11 = (void *)sub_1C214A5B0();
    swift_bridgeObjectRelease();
    objc_msgSend(v10, sel_setAccessibilityIdentifier_, v11, v16, v9);

    LODWORD(v12) = 1148846080;
    objc_msgSend(v10, sel_setContentCompressionResistancePriority_forAxis_, 1, v12);
    uint64_t v13 = *(void **)(v4 + v1);
    *(void *)(v4 + v1) = v10;
    id v3 = v10;

    uint64_t v2 = 0;
  }
  id v14 = v2;
  return v3;
}

id sub_1C1FCE6DC()
{
  uint64_t v1 = OBJC_IVAR____TtC19HealthMedicationsUI22MedicationListItemCell____lazy_storage___disclosureIndicator;
  uint64_t v2 = *(void **)(v0
                + OBJC_IVAR____TtC19HealthMedicationsUI22MedicationListItemCell____lazy_storage___disclosureIndicator);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI22MedicationListItemCell____lazy_storage___disclosureIndicator);
  }
  else
  {
    id v4 = sub_1C1FCE73C();
    id v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_1C1FCE73C()
{
  sub_1C2038918();
  uint64_t v1 = v0;
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1838]), sel_initWithImage_, v0);
  objc_msgSend(v2, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v2, sel_setAdjustsImageSizeForAccessibilityContentSizeCategory_, 0);
  id v3 = objc_msgSend(self, sel_tertiaryLabelColor);
  objc_msgSend(v2, sel_setTintColor_, v3);

  objc_msgSend(v2, sel_setContentMode_, 1);
  LODWORD(v4) = 1148846080;
  objc_msgSend(v2, sel_setContentCompressionResistancePriority_forAxis_, 0, v4);

  return v2;
}

id sub_1C1FCE864()
{
  uint64_t v1 = OBJC_IVAR____TtC19HealthMedicationsUI22MedicationListItemCell____lazy_storage___pillImageView;
  id v2 = *(void **)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI22MedicationListItemCell____lazy_storage___pillImageView);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI22MedicationListItemCell____lazy_storage___pillImageView);
  }
  else
  {
    uint64_t v4 = v0;
    id v5 = objc_msgSend(objc_allocWithZone((Class)sub_1C2149140()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
    sub_1C2148EE0();

    objc_msgSend(v5, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    id v6 = *(void **)(v4 + v1);
    *(void *)(v4 + v1) = v5;
    id v3 = v5;

    id v2 = 0;
  }
  id v7 = v2;
  return v3;
}

id sub_1C1FCE9A0()
{
  return sub_1C1FCEAE8(&OBJC_IVAR____TtC19HealthMedicationsUI22MedicationListItemCell____lazy_storage___medicationDetailStackView, 0.0);
}

id sub_1C1FCEA3C()
{
  return sub_1C1FCEAE8(&OBJC_IVAR____TtC19HealthMedicationsUI22MedicationListItemCell____lazy_storage___scheduleStackView, 2.0);
}

id sub_1C1FCEAD8()
{
  return sub_1C1FCEAE8(&OBJC_IVAR____TtC19HealthMedicationsUI22MedicationListItemCell____lazy_storage___metaScheduleStackView, 0.0);
}

id sub_1C1FCEAE8(uint64_t *a1, double a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(void **)(v2 + *a1);
  if (v4)
  {
    id v5 = *(id *)(v2 + *a1);
  }
  else
  {
    id v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1C60]), sel_init);
    objc_msgSend(v7, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    objc_msgSend(v7, sel_setAxis_, 1);
    objc_msgSend(v7, sel_setAlignment_, 1);
    objc_msgSend(v7, sel_setSpacing_, a2);
    uint64_t v8 = *(void **)(v2 + v3);
    *(void *)(v2 + v3) = v7;
    id v5 = v7;

    uint64_t v4 = 0;
  }
  id v9 = v4;
  return v5;
}

id sub_1C1FCEC40()
{
  uint64_t v1 = OBJC_IVAR____TtC19HealthMedicationsUI22MedicationListItemCell____lazy_storage___itemsStackView;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI22MedicationListItemCell____lazy_storage___itemsStackView);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI22MedicationListItemCell____lazy_storage___itemsStackView);
  }
  else
  {
    id v4 = sub_1C1FCECEC();
    id v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_1C1FCECEC()
{
  sub_1C1F0ED28();
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1C2151E40;
  *(void *)(v0 + 32) = sub_1C1FCE9A0();
  *(void *)(v0 + 40) = sub_1C1FCEA3C();
  *(void *)(v0 + 48) = sub_1C1FCEAD8();
  sub_1C214A7A0();
  id v1 = objc_allocWithZone(MEMORY[0x1E4FB1C60]);
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8F0);
  uint64_t v2 = (void *)sub_1C214A770();
  swift_bridgeObjectRelease();
  id v3 = objc_msgSend(v1, sel_initWithArrangedSubviews_, v2);

  objc_msgSend(v3, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v3, sel_setAxis_, 1);
  objc_msgSend(v3, sel_setAlignment_, 1);
  objc_msgSend(v3, sel_setSpacing_, 6.0);
  return v3;
}

id sub_1C1FCEE18()
{
  uint64_t v1 = OBJC_IVAR____TtC19HealthMedicationsUI22MedicationListItemCell____lazy_storage___minHeightConstraint;
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC19HealthMedicationsUI22MedicationListItemCell____lazy_storage___minHeightConstraint];
  if (v2)
  {
    id v3 = *(id *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI22MedicationListItemCell____lazy_storage___minHeightConstraint];
  }
  else
  {
    id v4 = objc_msgSend(v0, sel_heightAnchor);
    id v5 = objc_msgSend(v4, sel_constraintGreaterThanOrEqualToConstant_, 118.0);

    id v6 = *(void **)&v0[v1];
    *(void *)&v0[v1] = v5;
    id v3 = v5;

    uint64_t v2 = 0;
  }
  id v7 = v2;
  return v3;
}

id sub_1C1FCEEC0(double a1, double a2, double a3, double a4)
{
  id v9 = &v4[OBJC_IVAR____TtC19HealthMedicationsUI22MedicationListItemCell_cellAXIdentifier];
  *(void *)id v9 = 0xD000000000000016;
  *((void *)v9 + 1) = 0x80000001C2154350;
  id v10 = &v4[OBJC_IVAR____TtC19HealthMedicationsUI22MedicationListItemCell_item];
  *(_OWORD *)id v10 = 0u;
  *((_OWORD *)v10 + 1) = 0u;
  *((void *)v10 + 4) = 0;
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI22MedicationListItemCell____lazy_storage___primaryLabel] = 0;
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI22MedicationListItemCell____lazy_storage___disclosureIndicator] = 0;
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI22MedicationListItemCell____lazy_storage___pillImageView] = 0;
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI22MedicationListItemCell____lazy_storage___medicationDetailStackView] = 0;
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI22MedicationListItemCell____lazy_storage___scheduleStackView] = 0;
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI22MedicationListItemCell____lazy_storage___metaScheduleStackView] = 0;
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI22MedicationListItemCell____lazy_storage___itemsStackView] = 0;
  id v11 = v4;
  sub_1C21497A0();
  *(void *)&v11[OBJC_IVAR____TtC19HealthMedicationsUI22MedicationListItemCell_activeConstraints] = MEMORY[0x1E4FBC860];
  *(void *)&v11[OBJC_IVAR____TtC19HealthMedicationsUI22MedicationListItemCell____lazy_storage___minHeightConstraint] = 0;

  v23.receiver = v11;
  v23.super_class = (Class)type metadata accessor for MedicationListItemCell();
  id v12 = objc_msgSendSuper2(&v23, sel_initWithFrame_, a1, a2, a3, a4);
  id v13 = sub_1C1FCE464();
  id v14 = sub_1C1FCEC40();
  id v15 = sub_1C1FCE864();
  id v16 = sub_1C1FCE6DC();
  objc_msgSend(v12, sel_addSubview_, v13);
  objc_msgSend(v12, sel_addSubview_, v14);
  objc_msgSend(v12, sel_addSubview_, v15);
  objc_msgSend(v12, sel_addSubview_, v16);

  sub_1C1FCF568();
  sub_1C1FD148C(0, (unint64_t *)&qword_1EA2C3D80, (uint64_t (*)(uint64_t))sub_1C1F7C864, MEMORY[0x1E4FBBE00]);
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_1C214FCC0;
  uint64_t v18 = sub_1C2149C70();
  uint64_t v19 = MEMORY[0x1E4FB1138];
  *(void *)(v17 + 32) = v18;
  *(void *)(v17 + 40) = v19;
  uint64_t v20 = sub_1C214A450();
  uint64_t v21 = sub_1C1FD3418(&qword_1EA2C4A98, MEMORY[0x1E4F678F8]);
  *(void *)(v17 + 48) = v20;
  *(void *)(v17 + 56) = v21;
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1C1F7C8F0();
  sub_1C214B120();

  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_release();
  return v12;
}

id sub_1C1FCF1D8(void *a1)
{
  id v3 = &v1[OBJC_IVAR____TtC19HealthMedicationsUI22MedicationListItemCell_cellAXIdentifier];
  *(void *)id v3 = 0xD000000000000016;
  *((void *)v3 + 1) = 0x80000001C2154350;
  id v4 = &v1[OBJC_IVAR____TtC19HealthMedicationsUI22MedicationListItemCell_item];
  *(_OWORD *)id v4 = 0u;
  *((_OWORD *)v4 + 1) = 0u;
  *((void *)v4 + 4) = 0;
  *(void *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI22MedicationListItemCell____lazy_storage___primaryLabel] = 0;
  *(void *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI22MedicationListItemCell____lazy_storage___disclosureIndicator] = 0;
  *(void *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI22MedicationListItemCell____lazy_storage___pillImageView] = 0;
  *(void *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI22MedicationListItemCell____lazy_storage___medicationDetailStackView] = 0;
  *(void *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI22MedicationListItemCell____lazy_storage___scheduleStackView] = 0;
  *(void *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI22MedicationListItemCell____lazy_storage___metaScheduleStackView] = 0;
  *(void *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI22MedicationListItemCell____lazy_storage___itemsStackView] = 0;
  id v5 = v1;
  sub_1C21497A0();
  *(void *)&v5[OBJC_IVAR____TtC19HealthMedicationsUI22MedicationListItemCell_activeConstraints] = MEMORY[0x1E4FBC860];
  *(void *)&v5[OBJC_IVAR____TtC19HealthMedicationsUI22MedicationListItemCell____lazy_storage___minHeightConstraint] = 0;

  v19.receiver = v5;
  v19.super_class = (Class)type metadata accessor for MedicationListItemCell();
  id v6 = objc_msgSendSuper2(&v19, sel_initWithCoder_, a1);
  id v7 = v6;
  if (v6)
  {
    id v8 = v6;
    id v9 = sub_1C1FCE464();
    id v10 = sub_1C1FCEC40();
    id v11 = sub_1C1FCE864();
    id v12 = sub_1C1FCE6DC();
    objc_msgSend(v8, sel_addSubview_, v9);
    objc_msgSend(v8, sel_addSubview_, v10);
    objc_msgSend(v8, sel_addSubview_, v11);
    objc_msgSend(v8, sel_addSubview_, v12);

    sub_1C1FCF568();
    sub_1C1FD148C(0, (unint64_t *)&qword_1EA2C3D80, (uint64_t (*)(uint64_t))sub_1C1F7C864, MEMORY[0x1E4FBBE00]);
    uint64_t v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_1C214FCC0;
    uint64_t v14 = sub_1C2149C70();
    uint64_t v15 = MEMORY[0x1E4FB1138];
    *(void *)(v13 + 32) = v14;
    *(void *)(v13 + 40) = v15;
    uint64_t v16 = sub_1C214A450();
    uint64_t v17 = sub_1C1FD3418(&qword_1EA2C4A98, MEMORY[0x1E4F678F8]);
    *(void *)(v13 + 48) = v16;
    *(void *)(v13 + 56) = v17;
    swift_allocObject();
    swift_unknownObjectWeakInit();
    sub_1C1F7C8F0();
    sub_1C214B120();

    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    swift_release();
  }
  else
  {
  }
  return v7;
}

void sub_1C1FCF4E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a3 + 16;
  swift_beginAccess();
  uint64_t v4 = MEMORY[0x1C8754850](v3);
  if (v4)
  {
    id v5 = (void *)v4;
    sub_1C1FD05B4();
  }
  swift_beginAccess();
  uint64_t v6 = MEMORY[0x1C8754850](v3);
  if (v6)
  {
    id v7 = (void *)v6;
    sub_1C1FCF568();
  }
}

void sub_1C1FCF568()
{
  uint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC19HealthMedicationsUI22MedicationListItemCell_activeConstraints;
  uint64_t v3 = *(void *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI22MedicationListItemCell_activeConstraints];
  swift_bridgeObjectRetain();
  id v4 = sub_1C1FCEE18();
  swift_bridgeObjectRetain();
  id v5 = v4;
  MEMORY[0x1C87528E0]();
  if (*(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1C214A7D0();
  }
  uint64_t v6 = self;
  sub_1C214A820();
  sub_1C214A7A0();
  swift_bridgeObjectRelease();

  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C810);
  id v7 = (void *)sub_1C214A770();
  swift_bridgeObjectRelease();
  objc_msgSend(v6, sel_deactivateConstraints_, v7);

  char v8 = sub_1C214B110();
  sub_1C1F0ED28();
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1C21542B0;
  id v10 = sub_1C1FCE864();
  id v11 = objc_msgSend(v10, sel_topAnchor);

  id v12 = objc_msgSend(v1, sel_topAnchor);
  id v13 = objc_msgSend(v11, sel_constraintEqualToAnchor_, v12);

  *(void *)(v9 + 32) = v13;
  id v14 = sub_1C1FCE864();
  id v15 = objc_msgSend(v14, sel_leadingAnchor);

  id v16 = objc_msgSend(v1, sel_leadingAnchor);
  id v17 = objc_msgSend(v15, sel_constraintEqualToAnchor_, v16);

  *(void *)(v9 + 40) = v17;
  id v18 = sub_1C1FCE864();
  objc_super v19 = v18;
  if (v8)
  {
    id v20 = objc_msgSend(v18, sel_heightAnchor);

    id v21 = objc_msgSend(v20, sel_constraintEqualToConstant_, 102.0);
    *(void *)(v9 + 48) = v21;
    id v22 = sub_1C1FCE864();
    id v23 = objc_msgSend(v22, sel_trailingAnchor);

    id v24 = objc_msgSend(v1, sel_trailingAnchor);
    id v25 = objc_msgSend(v23, sel_constraintEqualToAnchor_, v24);

    *(void *)(v9 + 56) = v25;
    id v26 = sub_1C1FCE464();
    id v27 = objc_msgSend(v26, sel_leadingAnchor);

    id v28 = objc_msgSend(v1, sel_leadingAnchor);
    id v29 = objc_msgSend(v27, sel_constraintEqualToAnchor_constant_, v28, 16.0);

    *(void *)(v9 + 64) = v29;
    id v30 = sub_1C1FCE464();
    id v31 = objc_msgSend(v30, sel_topAnchor);

    id v32 = sub_1C1FCE864();
    id v33 = objc_msgSend(v32, sel_bottomAnchor);

    id v34 = objc_msgSend(v31, sel_constraintEqualToAnchor_constant_, v33, 16.0);
    *(void *)(v9 + 72) = v34;
    id v35 = sub_1C1FCE464();
    id v36 = objc_msgSend(v35, sel_trailingAnchor);

    id v37 = sub_1C1FCE6DC();
    id v38 = objc_msgSend(v37, sel_leadingAnchor);

    id v39 = objc_msgSend(v36, sel_constraintLessThanOrEqualToAnchor_constant_, v38, -8.0);
    *(void *)(v9 + 80) = v39;
    id v40 = sub_1C1FCE6DC();
    id v41 = objc_msgSend(v40, sel_trailingAnchor);

    id v42 = objc_msgSend(v1, sel_trailingAnchor);
    id v43 = objc_msgSend(v41, sel_constraintEqualToAnchor_constant_, v42, -16.0);

    *(void *)(v9 + 88) = v43;
    id v44 = sub_1C1FCE6DC();
    id v45 = objc_msgSend(v44, sel_firstBaselineAnchor);

    id v46 = sub_1C1FCE464();
    id v47 = objc_msgSend(v46, sel_firstBaselineAnchor);

    id v48 = objc_msgSend(v45, sel_constraintEqualToAnchor_, v47);
    *(void *)(v9 + 96) = v48;
    id v49 = sub_1C1FCEC40();
    id v50 = objc_msgSend(v49, sel_topAnchor);

    id v51 = sub_1C1FCE464();
    id v52 = objc_msgSend(v51, sel_bottomAnchor);

    if (qword_1EA2C2690 != -1) {
      swift_once();
    }
    id v53 = objc_msgSend(v50, sel_constraintEqualToAnchor_constant_, v52, -*(double *)&qword_1EA2C7DC8);

    *(void *)(v9 + 104) = v53;
    id v54 = sub_1C1FCEC40();
    id v55 = objc_msgSend(v54, sel_leadingAnchor);

    id v56 = sub_1C1FCE464();
    id v57 = objc_msgSend(v56, sel_leadingAnchor);

    id v58 = objc_msgSend(v55, sel_constraintEqualToAnchor_, v57);
    *(void *)(v9 + 112) = v58;
    id v59 = sub_1C1FCEC40();
    id v60 = objc_msgSend(v59, sel_trailingAnchor);

    id v61 = objc_msgSend(v1, sel_trailingAnchor);
    id v62 = objc_msgSend(v60, sel_constraintEqualToAnchor_constant_, v61, -34.0);

    *(void *)(v9 + 120) = v62;
    id v63 = sub_1C1FCEC40();
    id v64 = objc_msgSend(v63, sel_bottomAnchor);

    id v65 = objc_msgSend(v1, sel_bottomAnchor);
    id v66 = objc_msgSend(v64, sel_constraintEqualToAnchor_constant_, v65, -16.0);
  }
  else
  {
    id v67 = objc_msgSend(v18, sel_widthAnchor);

    id v68 = objc_msgSend(v67, sel_constraintEqualToConstant_, 102.0);
    *(void *)(v9 + 48) = v68;
    id v69 = sub_1C1FCE864();
    id v70 = objc_msgSend(v69, sel_bottomAnchor);

    id v71 = objc_msgSend(v1, sel_bottomAnchor);
    id v72 = objc_msgSend(v70, sel_constraintEqualToAnchor_, v71);

    *(void *)(v9 + 56) = v72;
    id v73 = sub_1C1FCE464();
    id v74 = objc_msgSend(v73, sel_leadingAnchor);

    id v75 = sub_1C1FCE864();
    id v76 = objc_msgSend(v75, sel_trailingAnchor);

    id v77 = objc_msgSend(v74, sel_constraintEqualToAnchor_constant_, v76, 16.0);
    *(void *)(v9 + 64) = v77;
    id v78 = sub_1C1FCE464();
    id v79 = objc_msgSend(v78, sel_topAnchor);

    id v80 = objc_msgSend(v1, sel_topAnchor);
    id v81 = objc_msgSend(v79, sel_constraintEqualToAnchor_constant_, v80, 16.0);

    *(void *)(v9 + 72) = v81;
    id v82 = sub_1C1FCE464();
    id v83 = objc_msgSend(v82, sel_trailingAnchor);

    id v84 = sub_1C1FCE6DC();
    id v85 = objc_msgSend(v84, sel_leadingAnchor);

    id v86 = objc_msgSend(v83, sel_constraintLessThanOrEqualToAnchor_constant_, v85, -8.0);
    *(void *)(v9 + 80) = v86;
    id v87 = sub_1C1FCE6DC();
    id v88 = objc_msgSend(v87, sel_trailingAnchor);

    id v89 = objc_msgSend(v1, sel_trailingAnchor);
    id v90 = objc_msgSend(v88, sel_constraintEqualToAnchor_constant_, v89, -16.0);

    *(void *)(v9 + 88) = v90;
    id v91 = sub_1C1FCE6DC();
    id v92 = objc_msgSend(v91, sel_firstBaselineAnchor);

    id v93 = sub_1C1FCE464();
    id v94 = objc_msgSend(v93, sel_firstBaselineAnchor);

    id v95 = objc_msgSend(v92, sel_constraintEqualToAnchor_, v94);
    *(void *)(v9 + 96) = v95;
    id v96 = sub_1C1FCEC40();
    id v97 = objc_msgSend(v96, sel_topAnchor);

    id v98 = sub_1C1FCE464();
    id v99 = objc_msgSend(v98, sel_bottomAnchor);

    if (qword_1EA2C2690 != -1) {
      swift_once();
    }
    id v100 = objc_msgSend(v97, sel_constraintEqualToAnchor_constant_, v99, *(double *)&qword_1EA2C7DC8);

    *(void *)(v9 + 104) = v100;
    id v101 = sub_1C1FCEC40();
    id v102 = objc_msgSend(v101, sel_leadingAnchor);

    id v103 = sub_1C1FCE464();
    id v104 = objc_msgSend(v103, sel_leadingAnchor);

    id v105 = objc_msgSend(v102, sel_constraintEqualToAnchor_, v104);
    *(void *)(v9 + 112) = v105;
    id v106 = sub_1C1FCEC40();
    id v107 = objc_msgSend(v106, sel_trailingAnchor);

    id v108 = objc_msgSend(v1, sel_trailingAnchor);
    id v109 = objc_msgSend(v107, sel_constraintEqualToAnchor_constant_, v108, -8.0);

    *(void *)(v9 + 120) = v109;
    id v110 = sub_1C1FCEC40();
    id v64 = objc_msgSend(v110, sel_lastBaselineAnchor);

    id v65 = objc_msgSend(v1, sel_bottomAnchor);
    id v66 = objc_msgSend(v64, sel_constraintEqualToAnchor_constant_, v65, -16.0);
  }
  id v111 = v66;

  *(void *)(v9 + 128) = v111;
  sub_1C214A7A0();
  *(void *)&v1[v2] = v9;
  swift_bridgeObjectRelease();
  uint64_t v112 = *(void *)&v1[v2];
  swift_bridgeObjectRetain();
  id v113 = sub_1C1FCEE18();
  swift_bridgeObjectRetain();
  id v114 = v113;
  MEMORY[0x1C87528E0]();
  if (*(void *)((v112 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v112 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1C214A7D0();
  }
  sub_1C214A820();
  sub_1C214A7A0();
  swift_bridgeObjectRelease();

  id v115 = (id)sub_1C214A770();
  swift_bridgeObjectRelease();
  objc_msgSend(v6, sel_activateConstraints_, v115);
}

uint64_t sub_1C1FD025C()
{
  uint64_t v1 = v0;
  sub_1C1FD148C(0, &qword_1EBF0C620, MEMORY[0x1E4FB0F28], MEMORY[0x1E4FBB718]);
  uint64_t v3 = MEMORY[0x1F4188790](v2 - 8);
  id v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x1F4188790](v3);
  char v8 = (char *)&v19 - v7;
  MEMORY[0x1F4188790](v6);
  id v10 = (char *)&v19 - v9;
  id v11 = (void *)sub_1C2149950();
  id v12 = (objc_class *)type metadata accessor for MedicationListItemCell();
  v19.receiver = v1;
  v19.super_class = v12;
  objc_msgSendSuper2(&v19, sel__bridgedUpdateConfigurationUsingState_, v11);

  if (objc_msgSend(v1, sel_isHighlighted))
  {
    MEMORY[0x1C8752FE0]();
    uint64_t v13 = sub_1C21499D0();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48))(v10, 1, v13))
    {
      sub_1C1FB6040((uint64_t)v10, (uint64_t)v8);
      MEMORY[0x1C8752FF0](v8);
      uint64_t v14 = (uint64_t)v10;
      return sub_1C1FB60D4(v14);
    }
    sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C900);
    sub_1C214B170();
    sub_1C2149990();
    id v17 = v10;
  }
  else
  {
    MEMORY[0x1C8752FE0]();
    uint64_t v15 = sub_1C21499D0();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48))(v5, 1, v15))
    {
      sub_1C1FB6040((uint64_t)v5, (uint64_t)v8);
      MEMORY[0x1C8752FF0](v8);
      uint64_t v14 = (uint64_t)v5;
      return sub_1C1FB60D4(v14);
    }
    id v18 = objc_msgSend(self, sel_tertiarySystemBackgroundColor);
    sub_1C2149990();
    id v17 = v5;
  }
  return MEMORY[0x1C8752FF0](v17);
}

uint64_t sub_1C1FD05B4()
{
  uint64_t v1 = sub_1C21497F0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)v87 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v5 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C1FD148C(0, (unint64_t *)&qword_1EA2C4AA8, MEMORY[0x1E4F67900], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v6 - 8);
  id v93 = (char *)v87 - v7;
  sub_1C1FD148C(0, (unint64_t *)&qword_1EBF0B690, MEMORY[0x1E4F66C80], v5);
  MEMORY[0x1F4188790](v8 - 8);
  id v101 = v0;
  uint64_t v9 = (uint64_t)&v0[OBJC_IVAR____TtC19HealthMedicationsUI22MedicationListItemCell_item];
  swift_beginAccess();
  sub_1C1F2116C(v9, (uint64_t)&v111);
  if (!v113)
  {
    sub_1C1F374E4((uint64_t)&v111);
LABEL_23:
    sub_1C21497A0();
    id v75 = v101;
    id v76 = sub_1C21497E0();
    os_log_type_t v77 = sub_1C214ABD0();
    if (os_log_type_enabled(v76, v77))
    {
      uint64_t v78 = swift_slowAlloc();
      uint64_t v109 = v1;
      id v79 = (uint8_t *)v78;
      uint64_t v80 = v2;
      uint64_t v81 = swift_slowAlloc();
      v110[0] = v81;
      *(_DWORD *)id v79 = 136446210;
      sub_1C1F2116C(v9, (uint64_t)&v111);
      sub_1C1FD330C(0, (unint64_t *)&qword_1EBF0C300, (uint64_t)&qword_1EBF0C2F0, MEMORY[0x1E4F66028], (void (*)(uint64_t, uint64_t, uint64_t))sub_1C1F23804);
      uint64_t v82 = sub_1C214A630();
      uint64_t v111 = sub_1C1F6FD54(v82, v83, v110);
      sub_1C214B530();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C1F0B000, v76, v77, "Incorrect view model for MedicationListItemCell: %{public}s", v79, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C8754730](v81, -1, -1);
      MEMORY[0x1C8754730](v79, -1, -1);

      return (*(uint64_t (**)(char *, uint64_t))(v80 + 8))(v4, v109);
    }
    else
    {

      return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    }
  }
  sub_1C1F23804(0, (unint64_t *)&qword_1EBF0C2F0);
  type metadata accessor for MedicationListItem();
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_23;
  }
  uint64_t v10 = v110[0];
  uint64_t v100 = *MEMORY[0x1E4F67960];
  uint64_t v11 = sub_1C214A5F0();
  unint64_t v13 = v12;
  uint64_t v111 = 46;
  unint64_t v112 = 0xE100000000000000;
  id v14 = v101;
  uint64_t v15 = *(void *)&v101[OBJC_IVAR____TtC19HealthMedicationsUI22MedicationListItemCell_cellAXIdentifier];
  uint64_t v16 = *(void *)&v101[OBJC_IVAR____TtC19HealthMedicationsUI22MedicationListItemCell_cellAXIdentifier + 8];
  swift_bridgeObjectRetain();
  uint64_t v99 = v15;
  sub_1C214A6C0();
  uint64_t v98 = v16;
  swift_bridgeObjectRelease();
  sub_1C214A6C0();
  v110[0] = *(void *)(v10 + 64);
  sub_1C214BA40();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  uint64_t v111 = v11;
  unint64_t v112 = v13;
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v17 = (void *)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  objc_msgSend(v14, sel_setAccessibilityIdentifier_, v17);

  sub_1C2147DE0();
  id v18 = (id)*MEMORY[0x1E4F39EA8];
  sub_1C214B0D0();

  id v19 = sub_1C1FCE864();
  id v20 = *(void **)(v10 + 16);
  id v21 = *(id *)(v10 + 24);
  id v22 = v20;
  _sSo29HKMedicationUserDomainConceptC19HealthMedicationsUIE7medmoji0eF10Experience29MedicationVisualizationConfigVSgvg_0();

  sub_1C2148ED0();
  id v23 = sub_1C1FCE464();
  uint64_t v111 = *(void *)(v10 + 16);
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8C0);
  sub_1C2149490();
  id v24 = (void *)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  objc_msgSend(v23, sel_setText_, v24);

  id v25 = sub_1C1FCE464();
  uint64_t v97 = sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8E0);
  id v26 = (void *)sub_1C214B0A0();
  objc_msgSend(v25, sel_setFont_, v26);

  id v27 = sub_1C1FCE9A0();
  id v28 = sub_1C1FCEA3C();
  id v29 = sub_1C1FCEAD8();
  id v30 = v27;
  sub_1C214B0E0();

  id v31 = v28;
  sub_1C214B0E0();

  id v32 = v29;
  sub_1C214B0E0();

  v87[1] = v10;
  unint64_t v33 = *(void *)(v10 + 24);
  uint64_t v111 = *(void *)(v10 + 16);
  unint64_t v112 = v33;
  id v88 = MedicationListViewData.items.getter();
  uint64_t v34 = v88[2];
  if (v34)
  {
    id v35 = v88 + 6;
    uint64_t v95 = *MEMORY[0x1E4FB2950];
    unint64_t v96 = 0x80000001C2163A30;
    uint64_t v94 = *MEMORY[0x1E4FB09D8];
    id v92 = (void *)*MEMORY[0x1E4FB0700];
    id v91 = (void *)*MEMORY[0x1E4FB06F8];
    long long v90 = xmmword_1C214FCC0;
    uint64_t v89 = MEMORY[0x1E4FBC840] + 8;
    do
    {
      uint64_t v104 = v34;
      uint64_t v38 = *((unsigned __int8 *)v35 - 16);
      id v39 = (void *)*(v35 - 1);
      uint64_t v106 = *v35;
      uint64_t v102 = v35[2];
      uint64_t v40 = v35[3];
      uint64_t v105 = v35[4];
      uint64_t v41 = v35[5];
      id v42 = objc_allocWithZone(MEMORY[0x1E4FB1930]);
      uint64_t v108 = v41;
      swift_bridgeObjectRetain();
      id v43 = v39;
      swift_bridgeObjectRetain();
      uint64_t v109 = v40;
      swift_bridgeObjectRetain();
      id v44 = objc_msgSend(v42, sel_init);
      uint64_t v45 = sub_1C214A5F0();
      unint64_t v47 = v46;
      uint64_t v111 = 0;
      unint64_t v112 = 0xE000000000000000;
      id v48 = v44;
      sub_1C214B7C0();
      swift_bridgeObjectRelease();
      uint64_t v111 = 46;
      unint64_t v112 = 0xE100000000000000;
      swift_bridgeObjectRetain();
      sub_1C214A6C0();
      swift_bridgeObjectRelease();
      sub_1C214A6C0();
      v35 += 8;
      uint64_t v49 = 0xE800000000000000;
      id v107 = v43;
      uint64_t v50 = 0x656C756465686373;
      uint64_t v103 = v38;
      switch(v38)
      {
        case 1:
          uint64_t v50 = 0x656863536174656DLL;
          uint64_t v49 = 0xEC000000656C7564;
          break;
        case 2:
          uint64_t v50 = 0x6874676E65727473;
          break;
        case 3:
          uint64_t v49 = 0xE400000000000000;
          uint64_t v50 = 1836216166;
          break;
        default:
          break;
      }
      v110[0] = v50;
      v110[1] = v49;
      sub_1C1F40B78();
      sub_1C214B560();
      swift_bridgeObjectRelease();
      sub_1C214A6C0();
      swift_bridgeObjectRelease();
      uint64_t v111 = v45;
      unint64_t v112 = v47;
      swift_bridgeObjectRetain();
      sub_1C214A6C0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      id v51 = (void *)sub_1C214A5B0();
      swift_bridgeObjectRelease();
      objc_msgSend(v48, sel_setAccessibilityIdentifier_, v51);

      if (!v108) {
        swift_bridgeObjectRetain();
      }
      id v52 = v48;
      swift_bridgeObjectRetain();
      id v53 = (void *)sub_1C214A5B0();
      swift_bridgeObjectRelease();
      objc_msgSend(v52, sel_setAccessibilityLabel_, v53);

      objc_msgSend(v52, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
      objc_msgSend(v52, sel_setNumberOfLines_, 0);
      LODWORD(v54) = 1144750080;
      objc_msgSend(v52, sel_setContentCompressionResistancePriority_forAxis_, 1, v54);
      id v55 = v107;
      if (v109)
      {
        sub_1C1F12718(0, (unint64_t *)&unk_1EBF0C800);
        uint64_t v56 = sub_1C214ADF0();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v56 - 8) + 56))(v93, 1, 1, v56);
        id v57 = v55;
        swift_bridgeObjectRetain();
        id v58 = v57;
        swift_bridgeObjectRetain();
        sub_1C214B0A0();
        id v59 = (id)sub_1C214ADD0();
      }
      else
      {
        sub_1C1FD148C(0, (unint64_t *)&unk_1EBF0C9A0, (uint64_t (*)(uint64_t))sub_1C1F7C7B0, MEMORY[0x1E4FBBE00]);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = v90;
        id v61 = v92;
        *(void *)(inited + 32) = v92;
        uint64_t v62 = sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C900);
        *(void *)(inited + 40) = v55;
        id v63 = v91;
        *(void *)(inited + 64) = v62;
        *(void *)(inited + 72) = v63;
        swift_bridgeObjectRetain();
        id v64 = v55;
        id v65 = v61;
        id v66 = v63;
        uint64_t v67 = v97;
        uint64_t v68 = sub_1C214B0A0();
        *(void *)(inited + 104) = v67;
        *(void *)(inited + 80) = v68;
        sub_1C1F49F18(inited);
        id v69 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
        id v70 = (void *)sub_1C214A5B0();
        swift_bridgeObjectRelease();
        type metadata accessor for Key(0);
        sub_1C1FD3418((unint64_t *)&qword_1EBF0C850, type metadata accessor for Key);
        id v71 = (void *)sub_1C214A500();
        swift_bridgeObjectRelease();
        id v59 = objc_msgSend(v69, sel_initWithString_attributes_, v70, v71);
      }
      uint64_t v72 = v104;
      int v73 = v103;
      objc_msgSend(v52, sel_setAttributedText_, v59);

      if (sub_1C20BB5FC(v73))
      {
        id v36 = sub_1C1FCE9A0();
      }
      else
      {
        switch(v73)
        {
          case 1:
          case 2:
          case 3:
            char v74 = sub_1C214BA80();
            swift_bridgeObjectRelease();
            if (v74) {
              goto LABEL_20;
            }
            id v36 = sub_1C1FCEAD8();
            break;
          default:
            swift_bridgeObjectRelease();
LABEL_20:
            id v36 = sub_1C1FCEA3C();
            break;
        }
      }
      id v37 = v36;
      objc_msgSend(v36, sel_addArrangedSubview_, v52);

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      uint64_t v34 = v72 - 1;
    }
    while (v34);
  }
  swift_bridgeObjectRelease();
  id v85 = sub_1C1FCEAD8();
  id v86 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1EB0]), sel_init);
  objc_msgSend(v85, sel_addArrangedSubview_, v86);

  swift_bridgeObjectRetain();
  sub_1C214AEC0();
  return swift_release();
}

void sub_1C1FD148C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t type metadata accessor for MedicationListItemCell()
{
  uint64_t result = qword_1EBF0B088;
  if (!qword_1EBF0B088) {
    return swift_getSingletonMetadata();
  }
  return result;
}

id MedicationListItemCell.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MedicationListItemCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1C1FD1698()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC19HealthMedicationsUI22MedicationListItemCell_item;
  swift_beginAccess();
  sub_1C1F2116C(v1, (uint64_t)v6);
  if (v7)
  {
    sub_1C1F23804(0, (unint64_t *)&qword_1EBF0C2F0);
    type metadata accessor for MedicationListItem();
    if (swift_dynamicCast())
    {
      swift_beginAccess();
      swift_retain();
      swift_release();
      sub_1C1F2116C(v1, (uint64_t)v6);
      if (v7)
      {
        if (swift_dynamicCast())
        {
          id v2 = *(id *)(v5 + 16);
          swift_release();
          char v3 = sub_1C2149720();
          swift_release();

          return (v3 & 1) == 0;
        }
      }
      else
      {
        sub_1C1F374E4((uint64_t)v6);
      }
    }
  }
  else
  {
    sub_1C1F374E4((uint64_t)v6);
  }
  uint64_t result = sub_1C214B910();
  __break(1u);
  return result;
}

void sub_1C1FD1844()
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v2 = sub_1C2149750();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = v0 + OBJC_IVAR____TtC19HealthMedicationsUI22MedicationListItemCell_item;
  swift_beginAccess();
  sub_1C1F2116C(v6, (uint64_t)aBlock);
  if (!v23) {
    goto LABEL_21;
  }
  uint64_t v20 = v0;
  sub_1C1F23804(0, (unint64_t *)&qword_1EBF0C2F0);
  type metadata accessor for MedicationListItem();
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_22;
  }
  swift_beginAccess();
  swift_retain();
  swift_release();
  sub_1C1F2116C(v6, (uint64_t)aBlock);
  if (!v23) {
    goto LABEL_19;
  }
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_22;
  }
  id v7 = *(id *)(v28 + 16);
  swift_release();
  char v8 = sub_1C2149720();
  swift_release();

  sub_1C1F2116C(v6, (uint64_t)aBlock);
  if (!v23)
  {
LABEL_21:
    sub_1C1F374E4((uint64_t)aBlock);
    goto LABEL_22;
  }
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_22;
  }
  swift_beginAccess();
  swift_retain();
  swift_release();
  sub_1C1F2116C(v6, (uint64_t)aBlock);
  if (!v23) {
    goto LABEL_19;
  }
  uint64_t v21 = ObjectType;
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_22;
  }
  id v9 = *(id *)(v27 + 16);
  swift_release();
  ListConceptManager.toggleMedicationPinState(for:onCommitHandler:)(v9);
  swift_release();

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  if ((v8 & 1) == 0) {
    return;
  }
  sub_1C1F2116C(v6, (uint64_t)aBlock);
  if (!v23) {
    goto LABEL_19;
  }
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_27;
  }
  id v10 = *(id *)(v27 + 16);
  swift_release();
  id v11 = objc_msgSend(v10, sel_firstOntologyCoding);

  if (!v11) {
    return;
  }

  sub_1C1F2116C(v6, (uint64_t)aBlock);
  if (!v23) {
    goto LABEL_23;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_27:
    while (1)
    {
LABEL_22:
      sub_1C214B910();
      __break(1u);
LABEL_23:
      sub_1C1F374E4((uint64_t)aBlock);
    }
  }
  uint64_t v12 = v27;
  swift_beginAccess();
  id v13 = *(id *)(v12 + 32);
  swift_release();
  id v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F66AE8]), sel_initWithHealthStore_, v13);

  sub_1C1F2116C(v6, (uint64_t)aBlock);
  if (!v23)
  {
LABEL_19:
    sub_1C1F374E4((uint64_t)aBlock);
    goto LABEL_22;
  }
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_22;
  }
  id v15 = *(id *)(v26 + 16);
  swift_release();
  uint64_t v16 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v17 = swift_allocObject();
  uint64_t v18 = v21;
  *(void *)(v17 + 16) = v16;
  *(void *)(v17 + 24) = v18;
  id v24 = sub_1C1FD3304;
  uint64_t v25 = v17;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C20E218C;
  id v23 = &block_descriptor_39;
  id v19 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(v14, sel_deleteDismissedPregnancyLactationInteractionsForMedication_interactionTypes_completion_, v15, 0, v19);
  _Block_release(v19);
}

uint64_t sub_1C1FD1D94(uint64_t a1, void *a2, uint64_t a3)
{
  v58[4] = *MEMORY[0x1E4F143B8];
  uint64_t v5 = sub_1C21497F0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  id v9 = &v49[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v7);
  id v11 = &v49[-v10];
  if (a2)
  {
    swift_beginAccess();
    uint64_t result = MEMORY[0x1C8754850](a3 + 16);
    if (!result) {
      return result;
    }
    id v13 = (void *)result;
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v6 + 16))(v9, result + OBJC_IVAR____TtC19HealthMedicationsUI22MedicationListItemCell_logger, v5);

    swift_retain();
    id v14 = a2;
    swift_retain();
    id v15 = a2;
    uint64_t v16 = sub_1C21497E0();
    int v17 = sub_1C214ABD0();
    if (os_log_type_enabled(v16, (os_log_type_t)v17))
    {
      int v50 = v17;
      uint64_t v53 = v5;
      uint64_t v18 = swift_slowAlloc();
      id v51 = (void *)swift_slowAlloc();
      uint64_t v52 = swift_slowAlloc();
      v58[0] = v52;
      *(_DWORD *)uint64_t v18 = 136446978;
      uint64_t v19 = sub_1C214BC10();
      uint64_t v55 = sub_1C1F6FD54(v19, v20, v58);
      sub_1C214B530();
      swift_bridgeObjectRelease();
      *(_WORD *)(v18 + 12) = 2080;
      uint64_t v55 = 0xD000000000000015;
      unint64_t v56 = 0x80000001C2163A10;
      uint64_t v21 = sub_1C214A650();
      uint64_t v55 = sub_1C1F6FD54(v21, v22, v58);
      sub_1C214B530();
      swift_bridgeObjectRelease();
      *(_WORD *)(v18 + 22) = 2112;
      swift_beginAccess();
      uint64_t v23 = MEMORY[0x1C8754850](a3 + 16);
      id v24 = (id)v23;
      if (!v23)
      {
        uint64_t v55 = 0;
        goto LABEL_18;
      }
      uint64_t v25 = v23 + OBJC_IVAR____TtC19HealthMedicationsUI22MedicationListItemCell_item;
      swift_beginAccess();
      sub_1C1F2116C(v25, (uint64_t)&v55);
      if (v57)
      {
        sub_1C1F23804(0, (unint64_t *)&qword_1EBF0C2F0);
        type metadata accessor for MedicationListItem();
        if (swift_dynamicCast())
        {
          id v26 = *(id *)(v54 + 16);

          swift_release();
          id v24 = objc_msgSend(v26, sel_semanticIdentifier);

          uint64_t v55 = (uint64_t)v24;
LABEL_18:
          sub_1C214B530();
          id v42 = v51;
          *id v51 = v24;
          swift_release_n();
          *(_WORD *)(v18 + 32) = 2080;
          uint64_t v55 = (uint64_t)a2;
          id v43 = a2;
          sub_1C1FD330C(0, &qword_1EA2C2EC0, (uint64_t)&qword_1EBF0C9C0, MEMORY[0x1E4FBC0E8], (void (*)(uint64_t, uint64_t, uint64_t))sub_1C1F23804);
          uint64_t v44 = sub_1C214A610();
          uint64_t v55 = sub_1C1F6FD54(v44, v45, v58);
          sub_1C214B530();
          swift_bridgeObjectRelease();

          _os_log_impl(&dword_1C1F0B000, v16, (os_log_type_t)v50, "%{public}s] Unexpected error deleting dismissed %s interactions for medication: %@, error: %s", (uint8_t *)v18, 0x2Au);
          sub_1C1FD330C(0, (unint64_t *)&qword_1EA2C3178, (uint64_t)&qword_1EA2C4AA0, 0x1E4FBA8A8, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C1F12718);
          swift_arrayDestroy();
          MEMORY[0x1C8754730](v42, -1, -1);
          uint64_t v46 = v52;
          swift_arrayDestroy();
          MEMORY[0x1C8754730](v46, -1, -1);
          MEMORY[0x1C8754730](v18, -1, -1);

          id v39 = *(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8);
          uint64_t v40 = v9;
LABEL_21:
          uint64_t v41 = v53;
          return v39(v40, v41);
        }

        goto LABEL_27;
      }

LABEL_25:
      swift_release();
      sub_1C1F374E4((uint64_t)&v55);
LABEL_28:
      uint64_t result = sub_1C214B910();
      __break(1u);
      return result;
    }
    swift_release_n();

    id v39 = *(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8);
    uint64_t v40 = v9;
  }
  else
  {
    swift_beginAccess();
    uint64_t result = MEMORY[0x1C8754850](a3 + 16);
    if (!result) {
      return result;
    }
    uint64_t v27 = (void *)result;
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v6 + 16))(v11, result + OBJC_IVAR____TtC19HealthMedicationsUI22MedicationListItemCell_logger, v5);

    swift_retain_n();
    uint64_t v28 = sub_1C21497E0();
    os_log_type_t v29 = sub_1C214ABF0();
    if (os_log_type_enabled(v28, v29))
    {
      uint64_t v53 = v5;
      uint64_t v30 = swift_slowAlloc();
      id v51 = (void *)swift_slowAlloc();
      uint64_t v52 = swift_slowAlloc();
      v58[0] = v52;
      *(_DWORD *)uint64_t v30 = 136446722;
      uint64_t v31 = sub_1C214BC10();
      uint64_t v55 = sub_1C1F6FD54(v31, v32, v58);
      sub_1C214B530();
      swift_bridgeObjectRelease();
      *(_WORD *)(v30 + 12) = 2080;
      uint64_t v55 = 0xD000000000000015;
      unint64_t v56 = 0x80000001C2163A10;
      uint64_t v33 = sub_1C214A650();
      uint64_t v55 = sub_1C1F6FD54(v33, v34, v58);
      sub_1C214B530();
      swift_bridgeObjectRelease();
      *(_WORD *)(v30 + 22) = 2112;
      swift_beginAccess();
      uint64_t v35 = MEMORY[0x1C8754850](a3 + 16);
      id v36 = (id)v35;
      if (v35)
      {
        uint64_t v37 = v35 + OBJC_IVAR____TtC19HealthMedicationsUI22MedicationListItemCell_item;
        swift_beginAccess();
        sub_1C1F2116C(v37, (uint64_t)&v55);
        if (!v57) {
          goto LABEL_25;
        }
        sub_1C1F23804(0, (unint64_t *)&qword_1EBF0C2F0);
        type metadata accessor for MedicationListItem();
        if ((swift_dynamicCast() & 1) == 0)
        {
LABEL_27:
          swift_release();
          goto LABEL_28;
        }
        id v38 = *(id *)(v54 + 16);

        swift_release();
        id v36 = objc_msgSend(v38, sel_semanticIdentifier);

        uint64_t v55 = (uint64_t)v36;
      }
      else
      {
        uint64_t v55 = 0;
      }
      sub_1C214B530();
      unint64_t v47 = v51;
      *id v51 = v36;
      swift_release_n();
      _os_log_impl(&dword_1C1F0B000, v28, v29, "%{public}s] Successfully deleted dismissed %s interactions for medication: %@", (uint8_t *)v30, 0x20u);
      sub_1C1FD330C(0, (unint64_t *)&qword_1EA2C3178, (uint64_t)&qword_1EA2C4AA0, 0x1E4FBA8A8, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C1F12718);
      swift_arrayDestroy();
      MEMORY[0x1C8754730](v47, -1, -1);
      uint64_t v48 = v52;
      swift_arrayDestroy();
      MEMORY[0x1C8754730](v48, -1, -1);
      MEMORY[0x1C8754730](v30, -1, -1);

      id v39 = *(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8);
      uint64_t v40 = v11;
      goto LABEL_21;
    }

    swift_release_n();
    id v39 = *(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8);
    uint64_t v40 = v11;
  }
  uint64_t v41 = v5;
  return v39(v40, v41);
}

uint64_t MedicationListItemCell.leadingSwipeActionsConfigurationProvider.getter()
{
  return 0;
}

id MedicationListItemCell.trailingSwipeActionsConfigurationProvider.getter()
{
  uint64_t v0 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v1 = swift_allocObject();
  swift_unknownObjectWeakInit();
  if (sub_1C1FD1698()) {
    id v2 = sub_1C1FD2C10((uint64_t)sub_1C1FD2B10, v1);
  }
  else {
    id v2 = sub_1C1FD2E50((uint64_t)sub_1C1FD2A0C, v0);
  }
  uint64_t v3 = v2;
  sub_1C1F0ED28();
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1C214E170;
  *(void *)(v4 + 32) = v3;
  sub_1C214A7A0();
  sub_1C1F12718(0, &qword_1EA2C4A50);
  id v5 = v3;
  uint64_t v6 = (void *)sub_1C214A770();
  swift_bridgeObjectRelease();
  id v7 = objc_msgSend(self, sel_configurationWithActions_, v6);
  swift_release();
  swift_release();

  return v7;
}

uint64_t sub_1C1FD285C()
{
  swift_unknownObjectWeakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

void sub_1C1FD2894(uint64_t a1, uint64_t a2, void (*a3)(void), uint64_t a4, uint64_t a5)
{
  uint64_t v7 = a5 + 16;
  swift_beginAccess();
  uint64_t v8 = MEMORY[0x1C8754850](v7);
  if (v8)
  {
    id v9 = (void *)v8;
    uint64_t v10 = swift_allocObject();
    swift_unknownObjectWeakInit();
    id v11 = (void *)swift_allocObject();
    v11[2] = v10;
    v11[3] = a3;
    v11[4] = a4;
    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = a3;
    *(void *)(v12 + 24) = a4;
    swift_retain_n();
    swift_retain();
    id v13 = _sSo17UIAlertControllerC19HealthMedicationsUIE31makeAlertForArchivingMedication9onConfirm0K6CancelAByyc_yycSgtFZ_0((uint64_t)sub_1C1FD33A8, (uint64_t)v11, (uint64_t)sub_1C1FD33EC, v12);
    swift_release();
    swift_release();
    swift_release();
    id v14 = objc_msgSend(v9, sel_viewController);
    if (v14)
    {
      id v15 = v14;
      objc_msgSend(v14, sel_presentViewController_animated_completion_, v13, 1, 0);
    }
  }
  else
  {
    a3();
  }
}

void sub_1C1FD2A0C(uint64_t a1, uint64_t a2, void (*a3)(void), uint64_t a4)
{
  sub_1C1FD2894(a1, a2, a3, a4, v4);
}

uint64_t sub_1C1FD2A14(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v3 = a1 + 16;
  swift_beginAccess();
  uint64_t v4 = MEMORY[0x1C8754850](v3);
  if (v4)
  {
    id v5 = (void *)v4;
    sub_1C1FD1844();
  }
  return a2(1);
}

void sub_1C1FD2A88(uint64_t a1, uint64_t a2, void (*a3)(void), uint64_t a4, uint64_t a5)
{
  uint64_t v6 = a5 + 16;
  swift_beginAccess();
  uint64_t v7 = MEMORY[0x1C8754850](v6);
  if (v7)
  {
    uint64_t v8 = (void *)v7;
    sub_1C1FD1844();
    ((void (*)(uint64_t))a3)(1);
  }
  else
  {
    a3();
  }
}

void sub_1C1FD2B10(uint64_t a1, uint64_t a2, void (*a3)(void), uint64_t a4)
{
  sub_1C1FD2A88(a1, a2, a3, a4, v4);
}

id sub_1C1FD2B18()
{
  return MedicationListItemCell.trailingSwipeActionsConfigurationProvider.getter();
}

void sub_1C1FD2B3C(uint64_t a1, void *a2, void *a3, void *aBlock)
{
  uint64_t v6 = *(void (**)(id, id, uint64_t (*)(char), uint64_t))(a1 + 32);
  uint64_t v7 = _Block_copy(aBlock);
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = v7;
  swift_retain();
  id v10 = a2;
  id v9 = a3;
  v6(v10, v9, sub_1C1FD32B4, v8);
  swift_release();
  swift_release();
}

id sub_1C1FD2C10(uint64_t a1, uint64_t a2)
{
  if (qword_1EBF0CA00 != -1) {
    swift_once();
  }
  id v4 = (id)qword_1EBF0CA18;
  swift_bridgeObjectRetain();
  sub_1C2147730();
  swift_bridgeObjectRelease();

  swift_retain();
  id v5 = (void *)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  aBlock[4] = a1;
  aBlock[5] = a2;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C1FD2B3C;
  void aBlock[3] = &block_descriptor_13;
  uint64_t v6 = _Block_copy(aBlock);
  id v7 = objc_msgSend(self, sel_contextualActionWithStyle_title_handler_, 0, v5, v6, 0xE000000000000000);

  _Block_release(v6);
  swift_release();
  uint64_t v8 = (void *)sub_1C214A5B0();
  id v9 = objc_msgSend(self, sel_systemImageNamed_, v8);

  objc_msgSend(v7, sel_setImage_, v9);
  id v10 = objc_msgSend(self, sel_systemYellowColor);
  objc_msgSend(v7, sel_setBackgroundColor_, v10);

  return v7;
}

id sub_1C1FD2E50(uint64_t a1, uint64_t a2)
{
  if (qword_1EBF0CA00 != -1) {
    swift_once();
  }
  id v4 = (id)qword_1EBF0CA18;
  swift_bridgeObjectRetain();
  sub_1C2147730();
  swift_bridgeObjectRelease();

  swift_retain();
  id v5 = (void *)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  aBlock[4] = a1;
  aBlock[5] = a2;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C1FD2B3C;
  void aBlock[3] = &block_descriptor_32;
  uint64_t v6 = _Block_copy(aBlock);
  id v7 = objc_msgSend(self, sel_contextualActionWithStyle_title_handler_, 0, v5, v6, 0xE000000000000000);

  _Block_release(v6);
  swift_release();
  uint64_t v8 = (void *)sub_1C214A5B0();
  id v9 = objc_msgSend(self, sel_systemImageNamed_, v8);

  objc_msgSend(v7, sel_setImage_, v9);
  id v10 = objc_msgSend(self, sel_systemYellowColor);
  objc_msgSend(v7, sel_setBackgroundColor_, v10);

  return v7;
}

uint64_t sub_1C1FD3090@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC19HealthMedicationsUI22MedicationListItemCell_item;
  swift_beginAccess();
  return sub_1C1F2116C(v3, a2);
}

uint64_t sub_1C1FD30EC()
{
  return type metadata accessor for MedicationListItemCell();
}

uint64_t sub_1C1FD30F4()
{
  uint64_t result = sub_1C21497F0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for MedicationListItemCell(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MedicationListItemCell);
}

uint64_t dispatch thunk of MedicationListItemCell.item.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of MedicationListItemCell.item.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of MedicationListItemCell.item.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xC0))();
}

void sub_1C1FD3274(uint64_t a1, uint64_t a2)
{
  sub_1C1FCF4E8(a1, a2, v2);
}

uint64_t sub_1C1FD327C()
{
  _Block_release(*(const void **)(v0 + 16));

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C1FD32B4(char a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(v1 + 16) + 16))(*(void *)(v1 + 16), a1 & 1);
}

uint64_t sub_1C1FD32CC()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C1FD3304(uint64_t a1, void *a2)
{
  return sub_1C1FD1D94(a1, a2, *(void *)(v2 + 16));
}

void sub_1C1FD330C(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    a5(255, a3, a4);
    unint64_t v6 = sub_1C214B4F0();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_1C1FD3368()
{
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1C1FD33A8()
{
  return sub_1C1FD2A14(*(void *)(v0 + 16), *(uint64_t (**)(uint64_t))(v0 + 24));
}

uint64_t sub_1C1FD33B4()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C1FD33EC()
{
  return (*(uint64_t (**)(void))(v0 + 16))(0);
}

uint64_t sub_1C1FD3418(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t InteractionNoneFoundItem.reuseIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1C1FD34A0()
{
  uint64_t v2 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  return v2;
}

uint64_t InteractionNoneFoundItem.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  type metadata accessor for InteractionNoneFoundCell();
  sub_1C1FD39A0(&qword_1EA2C4AB0, 255, (void (*)(uint64_t))type metadata accessor for InteractionNoneFoundCell);
  *(void *)(v0 + 16) = sub_1C21481D0();
  *(void *)(v0 + 24) = v1;
  return v0;
}

uint64_t InteractionNoneFoundItem.init()()
{
  type metadata accessor for InteractionNoneFoundCell();
  sub_1C1FD39A0(&qword_1EA2C4AB0, 255, (void (*)(uint64_t))type metadata accessor for InteractionNoneFoundCell);
  *(void *)(v0 + 16) = sub_1C21481D0();
  *(void *)(v0 + 24) = v1;
  return v0;
}

uint64_t sub_1C1FD35F8()
{
  swift_bridgeObjectRetain();
  sub_1C214A690();

  return swift_bridgeObjectRelease();
}

uint64_t InteractionNoneFoundItem.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t InteractionNoneFoundItem.__deallocating_deinit()
{
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_1C1FD36A8()
{
  return sub_1C214BB80();
}

uint64_t sub_1C1FD36EC()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1C1FD3720()
{
  uint64_t v2 = *(void *)(*(void *)v0 + 16);
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  return v2;
}

uint64_t sub_1C1FD3778(uint64_t *a1, uint64_t *a2)
{
  return _s19HealthMedicationsUI24InteractionNoneFoundItemC2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

uint64_t sub_1C1FD3784()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 112))();
}

uint64_t sub_1C1FD37C8()
{
  swift_bridgeObjectRetain();
  sub_1C214A690();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1C1FD3824()
{
  return sub_1C214BB80();
}

uint64_t _s19HealthMedicationsUI24InteractionNoneFoundItemC2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = *(void *)(a1 + 16);
  uint64_t v9 = *(void *)(a1 + 24);
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  uint64_t v4 = v7;
  uint64_t v3 = v9;
  uint64_t v8 = *(void *)(a2 + 16);
  uint64_t v10 = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  if (v4 == v8 && v3 == v10) {
    char v5 = 1;
  }
  else {
    char v5 = sub_1C214BA80();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_1C1FD3958(uint64_t a1, uint64_t a2)
{
  return sub_1C1FD39A0(&qword_1EA2C4AB8, a2, (void (*)(uint64_t))type metadata accessor for InteractionNoneFoundItem);
}

uint64_t sub_1C1FD39A0(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for InteractionNoneFoundItem()
{
  return self;
}

uint64_t method lookup function for InteractionNoneFoundItem(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for InteractionNoneFoundItem);
}

uint64_t dispatch thunk of InteractionNoneFoundItem.uniqueIdentifier.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 88))();
}

uint64_t dispatch thunk of InteractionNoneFoundItem.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of InteractionNoneFoundItem.hash(into:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t dispatch thunk of InteractionNoneFoundItem.hashValue.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t sub_1C1FD3AA4(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  uint64_t v4 = *a2;
  swift_beginAccess();
  *(void *)(v4 + 48) = v3;
  *(void *)(v4 + 56) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C1FD3B04()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1C1FD3B50(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 48) = a1;
  *(void *)(v2 + 56) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1C1FD3BA4())()
{
  return j__swift_endAccess;
}

uint64_t sub_1C1FD3BF8()
{
  sub_1C2147B20();
  sub_1C1FD3E60(&qword_1EA2C39F8, 255, MEMORY[0x1E4F27990]);
  uint64_t v1 = sub_1C214BA40();
  sub_1C214A6C0();
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t MedicationComponentsItem.__allocating_init(medicationName:componentsList:hasEducation:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v8 = swift_allocObject();
  type metadata accessor for MedicationComponentsItemCell();
  sub_1C1FD3E60(&qword_1EA2C4AC8, v9, (void (*)(uint64_t))type metadata accessor for MedicationComponentsItemCell);
  *(void *)(v8 + 48) = sub_1C21481D0();
  *(void *)(v8 + 56) = v10;
  sub_1C2147B10();
  *(void *)(v8 + 16) = a1;
  *(void *)(v8 + 24) = a2;
  *(void *)(v8 + 32) = a3;
  *(unsigned char *)(v8 + 40) = a4;
  return v8;
}

uint64_t MedicationComponentsItem.init(medicationName:componentsList:hasEducation:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  type metadata accessor for MedicationComponentsItemCell();
  sub_1C1FD3E60(&qword_1EA2C4AC8, v9, (void (*)(uint64_t))type metadata accessor for MedicationComponentsItemCell);
  *(void *)(v4 + 48) = sub_1C21481D0();
  *(void *)(v4 + 56) = v10;
  sub_1C2147B10();
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = a2;
  *(void *)(v4 + 32) = a3;
  *(unsigned char *)(v4 + 40) = a4;
  return v4;
}

uint64_t type metadata accessor for MedicationComponentsItemCell()
{
  return self;
}

uint64_t sub_1C1FD3E60(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t MedicationComponentsItem.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC19HealthMedicationsUI24MedicationComponentsItem_uuid;
  uint64_t v2 = sub_1C2147B20();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t MedicationComponentsItem.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC19HealthMedicationsUI24MedicationComponentsItem_uuid;
  uint64_t v2 = sub_1C2147B20();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_1C1FD3FDC()
{
  uint64_t v1 = *v0;
  swift_beginAccess();
  uint64_t v2 = *(void *)(v1 + 48);
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1C1FD402C()
{
  sub_1C2147B20();
  sub_1C1FD3E60(&qword_1EA2C39F8, 255, MEMORY[0x1E4F27990]);
  uint64_t v1 = sub_1C214BA40();
  sub_1C214A6C0();
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1C1FD4108(uint64_t a1, void *a2)
{
  sub_1C1F2116C(a1, (uint64_t)v5);
  uint64_t v3 = *a2 + OBJC_IVAR____TtC19HealthMedicationsUI28MedicationComponentsItemCell_item;
  swift_beginAccess();
  sub_1C1F32DDC((uint64_t)v5, v3);
  swift_endAccess();
  sub_1C1FD5368();
  return sub_1C1F374E4((uint64_t)v5);
}

uint64_t sub_1C1FD417C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI28MedicationComponentsItemCell_item;
  swift_beginAccess();
  return sub_1C1F2116C(v3, a1);
}

uint64_t sub_1C1FD41D0(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI28MedicationComponentsItemCell_item;
  swift_beginAccess();
  sub_1C1F32DDC(a1, v3);
  swift_endAccess();
  sub_1C1FD5368();
  return sub_1C1F374E4(a1);
}

uint64_t (*sub_1C1FD4240(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1C1FD42A0;
}

uint64_t sub_1C1FD42A0(uint64_t a1, char a2)
{
  uint64_t result = swift_endAccess();
  if ((a2 & 1) == 0) {
    return sub_1C1FD5368();
  }
  return result;
}

id sub_1C1FD42D4()
{
  return sub_1C1FD44C4(&OBJC_IVAR____TtC19HealthMedicationsUI28MedicationComponentsItemCell____lazy_storage___primaryLabel, (uint64_t (*)(void))sub_1C1FD42F4);
}

id sub_1C1FD42F4()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
  uint64_t v7 = sub_1C214A5F0();
  uint64_t v8 = v1;
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  id v2 = v0;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  uint64_t v3 = (void *)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setAccessibilityIdentifier_, v3, v7, v8);

  objc_msgSend(v2, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v2, sel_setNumberOfLines_, 0);
  LODWORD(v4) = 1148846080;
  objc_msgSend(v2, sel_setContentCompressionResistancePriority_forAxis_, 1, v4);
  id v5 = objc_msgSend(self, sel_preferredFontForTextStyle_, *MEMORY[0x1E4FB28C8]);
  objc_msgSend(v2, sel_setFont_, v5);

  objc_msgSend(v2, sel_setAdjustsFontForContentSizeCategory_, 1);
  return v2;
}

id sub_1C1FD44A4()
{
  return sub_1C1FD44C4(&OBJC_IVAR____TtC19HealthMedicationsUI28MedicationComponentsItemCell____lazy_storage___componentsLabel, (uint64_t (*)(void))sub_1C1FD4524);
}

id sub_1C1FD44C4(uint64_t *a1, uint64_t (*a2)(void))
{
  uint64_t v3 = *a1;
  double v4 = *(void **)(v2 + *a1);
  if (v4)
  {
    id v5 = *(id *)(v2 + *a1);
  }
  else
  {
    unint64_t v6 = (void *)a2();
    uint64_t v7 = *(void **)(v2 + v3);
    *(void *)(v2 + v3) = v6;
    id v5 = v6;

    double v4 = 0;
  }
  id v8 = v4;
  return v5;
}

id sub_1C1FD4524()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
  uint64_t v8 = sub_1C214A5F0();
  uint64_t v9 = v1;
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  id v2 = v0;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  uint64_t v3 = (void *)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setAccessibilityIdentifier_, v3, v8, v9);

  objc_msgSend(v2, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v2, sel_setNumberOfLines_, 0);
  id v4 = objc_msgSend(self, sel_secondaryLabelColor);
  objc_msgSend(v2, sel_setTextColor_, v4);

  LODWORD(v5) = 1148846080;
  objc_msgSend(v2, sel_setContentCompressionResistancePriority_forAxis_, 1, v5);
  id v6 = objc_msgSend(self, sel_preferredFontForTextStyle_, *MEMORY[0x1E4FB28D8]);
  objc_msgSend(v2, sel_setFont_, v6);

  objc_msgSend(v2, sel_setAdjustsFontForContentSizeCategory_, 1);
  return v2;
}

id sub_1C1FD470C(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = &v4[OBJC_IVAR____TtC19HealthMedicationsUI28MedicationComponentsItemCell_item];
  *(_OWORD *)uint64_t v9 = 0u;
  *((_OWORD *)v9 + 1) = 0u;
  *((void *)v9 + 4) = 0;
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI28MedicationComponentsItemCell____lazy_storage___primaryLabel] = 0;
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI28MedicationComponentsItemCell____lazy_storage___componentsLabel] = 0;
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI28MedicationComponentsItemCell____lazy_storage___constraintsWithComponentsLabel] = 0;
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI28MedicationComponentsItemCell____lazy_storage___constraintsWithoutComponentsLabel] = 0;
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI28MedicationComponentsItemCell____lazy_storage___constraintsWithComponentsWithoutEducationLabel] = 0;
  v12.receiver = v4;
  v12.super_class = (Class)type metadata accessor for MedicationComponentsItemCell();
  id v10 = objc_msgSendSuper2(&v12, sel_initWithFrame_, a1, a2, a3, a4);
  sub_1C1FD48D0();

  return v10;
}

id sub_1C1FD4804(void *a1)
{
  uint64_t v3 = &v1[OBJC_IVAR____TtC19HealthMedicationsUI28MedicationComponentsItemCell_item];
  *(_OWORD *)uint64_t v3 = 0u;
  *((_OWORD *)v3 + 1) = 0u;
  *((void *)v3 + 4) = 0;
  *(void *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI28MedicationComponentsItemCell____lazy_storage___primaryLabel] = 0;
  *(void *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI28MedicationComponentsItemCell____lazy_storage___componentsLabel] = 0;
  *(void *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI28MedicationComponentsItemCell____lazy_storage___constraintsWithComponentsLabel] = 0;
  *(void *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI28MedicationComponentsItemCell____lazy_storage___constraintsWithoutComponentsLabel] = 0;
  *(void *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI28MedicationComponentsItemCell____lazy_storage___constraintsWithComponentsWithoutEducationLabel] = 0;
  v6.receiver = v1;
  v6.super_class = (Class)type metadata accessor for MedicationComponentsItemCell();
  id v4 = objc_msgSendSuper2(&v6, sel_initWithCoder_, a1);

  return v4;
}

uint64_t sub_1C1FD48D0()
{
  uint64_t v1 = v0;
  sub_1C1F1CC40(0, &qword_1EBF0C620, MEMORY[0x1E4FB0F28]);
  MEMORY[0x1F4188790](v2 - 8);
  id v4 = (char *)&v15 - v3;
  uint64_t v5 = sub_1C21499D0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v9 = objc_msgSend(v0, sel_contentView);
  id v10 = sub_1C1FD42D4();
  objc_msgSend(v9, sel_addSubview_, v10);

  id v11 = objc_msgSend(v1, sel_contentView);
  id v12 = sub_1C1FD44A4();
  objc_msgSend(v11, sel_addSubview_, v12);

  sub_1C21499A0();
  id v13 = objc_msgSend(self, sel_tertiarySystemBackgroundColor);
  sub_1C2149990();
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v4, v8, v5);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
  MEMORY[0x1C8752FF0](v4);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1C1FD4AFC()
{
  return sub_1C1FD4EC8(&OBJC_IVAR____TtC19HealthMedicationsUI28MedicationComponentsItemCell____lazy_storage___constraintsWithComponentsLabel, -8.0);
}

uint64_t sub_1C1FD4B0C()
{
  uint64_t v1 = OBJC_IVAR____TtC19HealthMedicationsUI28MedicationComponentsItemCell____lazy_storage___constraintsWithoutComponentsLabel;
  if (*(void *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI28MedicationComponentsItemCell____lazy_storage___constraintsWithoutComponentsLabel])
  {
    uint64_t v2 = *(void *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI28MedicationComponentsItemCell____lazy_storage___constraintsWithoutComponentsLabel];
  }
  else
  {
    uint64_t v2 = sub_1C1FD4B74(v0);
    *(void *)&v0[v1] = v2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1C1FD4B74(void *a1)
{
  sub_1C1F13CCC(0, (unint64_t *)&qword_1EBF0CA10, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1C21544C0;
  id v3 = sub_1C1FD42D4();
  id v4 = objc_msgSend(v3, sel_topAnchor);

  id v5 = objc_msgSend(a1, sel_contentView);
  id v6 = objc_msgSend(v5, sel_topAnchor);

  id v7 = objc_msgSend(v4, sel_constraintEqualToAnchor_constant_, v6, 8.0);
  *(void *)(v2 + 32) = v7;
  id v8 = sub_1C1FD42D4();
  id v9 = objc_msgSend(v8, sel_bottomAnchor);

  id v10 = objc_msgSend(a1, sel_contentView);
  id v11 = objc_msgSend(v10, sel_bottomAnchor);

  id v12 = objc_msgSend(v9, sel_constraintEqualToAnchor_constant_, v11, -8.0);
  *(void *)(v2 + 40) = v12;
  id v13 = sub_1C1FD42D4();
  id v14 = objc_msgSend(v13, sel_leadingAnchor);

  id v15 = objc_msgSend(a1, sel_contentView);
  id v16 = objc_msgSend(v15, sel_layoutMarginsGuide);

  id v17 = objc_msgSend(v16, sel_leadingAnchor);
  id v18 = objc_msgSend(v14, sel_constraintEqualToAnchor_, v17);

  *(void *)(v2 + 48) = v18;
  id v19 = sub_1C1FD42D4();
  id v20 = objc_msgSend(v19, sel_trailingAnchor);

  id v21 = objc_msgSend(a1, sel_contentView);
  id v22 = objc_msgSend(v21, sel_layoutMarginsGuide);

  id v23 = objc_msgSend(v22, sel_trailingAnchor);
  id v24 = objc_msgSend(v20, sel_constraintEqualToAnchor_, v23);

  *(void *)(v2 + 56) = v24;
  id v25 = objc_msgSend(a1, sel_contentView);
  id v26 = objc_msgSend(v25, sel_heightAnchor);

  id v27 = objc_msgSend(v26, sel_constraintGreaterThanOrEqualToConstant_, 44.0);
  *(void *)(v2 + 64) = v27;
  sub_1C214A7A0();
  return v2;
}

uint64_t sub_1C1FD4EB8()
{
  return sub_1C1FD4EC8(&OBJC_IVAR____TtC19HealthMedicationsUI28MedicationComponentsItemCell____lazy_storage___constraintsWithComponentsWithoutEducationLabel, -16.0);
}

uint64_t sub_1C1FD4EC8(uint64_t *a1, double a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(void *)&v2[*a1];
  if (v4)
  {
    uint64_t v5 = v4;
  }
  else
  {
    uint64_t v5 = sub_1C1FD4F2C(v2, a2);
    *(void *)&v2[v3] = v5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v5;
}

uint64_t sub_1C1FD4F2C(void *a1, double a2)
{
  sub_1C1F13CCC(0, (unint64_t *)&qword_1EBF0CA10, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1C21518E0;
  id v5 = sub_1C1FD42D4();
  id v6 = objc_msgSend(v5, sel_topAnchor);

  id v7 = objc_msgSend(a1, sel_contentView);
  id v8 = objc_msgSend(v7, sel_topAnchor);

  id v9 = objc_msgSend(v6, sel_constraintEqualToAnchor_constant_, v8, 16.0);
  *(void *)(v4 + 32) = v9;
  id v10 = sub_1C1FD42D4();
  id v11 = objc_msgSend(v10, sel_leadingAnchor);

  id v12 = objc_msgSend(a1, sel_contentView);
  id v13 = objc_msgSend(v12, sel_layoutMarginsGuide);

  id v14 = objc_msgSend(v13, sel_leadingAnchor);
  id v15 = objc_msgSend(v11, sel_constraintEqualToAnchor_, v14);

  *(void *)(v4 + 40) = v15;
  id v16 = sub_1C1FD42D4();
  id v17 = objc_msgSend(v16, sel_trailingAnchor);

  id v18 = objc_msgSend(a1, sel_contentView);
  id v19 = objc_msgSend(v18, sel_layoutMarginsGuide);

  id v20 = objc_msgSend(v19, sel_trailingAnchor);
  id v21 = objc_msgSend(v17, sel_constraintEqualToAnchor_, v20);

  *(void *)(v4 + 48) = v21;
  id v22 = sub_1C1FD44A4();
  id v23 = objc_msgSend(v22, sel_topAnchor);

  id v24 = sub_1C1FD42D4();
  id v25 = objc_msgSend(v24, sel_bottomAnchor);

  id v26 = objc_msgSend(v23, sel_constraintEqualToAnchor_constant_, v25, 2.0);
  *(void *)(v4 + 56) = v26;
  id v27 = sub_1C1FD44A4();
  id v28 = objc_msgSend(v27, sel_leadingAnchor);

  id v29 = sub_1C1FD42D4();
  id v30 = objc_msgSend(v29, sel_leadingAnchor);

  id v31 = objc_msgSend(v28, sel_constraintEqualToAnchor_, v30);
  *(void *)(v4 + 64) = v31;
  id v32 = sub_1C1FD44A4();
  id v33 = objc_msgSend(v32, sel_trailingAnchor);

  id v34 = sub_1C1FD42D4();
  id v35 = objc_msgSend(v34, sel_trailingAnchor);

  id v36 = objc_msgSend(v33, sel_constraintEqualToAnchor_, v35);
  *(void *)(v4 + 72) = v36;
  id v37 = sub_1C1FD44A4();
  id v38 = objc_msgSend(v37, sel_bottomAnchor);

  id v39 = objc_msgSend(a1, sel_contentView);
  id v40 = objc_msgSend(v39, sel_bottomAnchor);

  id v41 = objc_msgSend(v38, sel_constraintEqualToAnchor_constant_, v40, a2);
  *(void *)(v4 + 80) = v41;
  sub_1C214A7A0();
  return v4;
}

uint64_t sub_1C1FD5368()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1C21497F0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  id v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = (uint64_t)v1 + OBJC_IVAR____TtC19HealthMedicationsUI28MedicationComponentsItemCell_item;
  swift_beginAccess();
  sub_1C1F2116C(v6, (uint64_t)v31);
  if (v31[3])
  {
    sub_1C1F1CB5C();
    type metadata accessor for MedicationComponentsItem();
    if (swift_dynamicCast())
    {
      uint64_t v7 = v30;
      id v8 = sub_1C1FD42D4();
      swift_bridgeObjectRetain();
      id v9 = (void *)sub_1C214A5B0();
      swift_bridgeObjectRelease();
      objc_msgSend(v8, sel_setText_, v9);

      id v10 = sub_1C1FD44A4();
      v31[0] = *(void *)(v7 + 32);
      sub_1C1F13CCC(0, (unint64_t *)&qword_1EA2C3A40, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
      sub_1C1F64558();
      swift_bridgeObjectRetain();
      sub_1C214A580();
      swift_bridgeObjectRelease();
      id v11 = (void *)sub_1C214A5B0();
      swift_bridgeObjectRelease();
      objc_msgSend(v10, sel_setText_, v11);

      if (*(void *)(*(void *)(v7 + 32) + 16))
      {
        int v12 = *(unsigned __int8 *)(v7 + 40);
        id v13 = self;
        if (v12 != 1)
        {
          sub_1C1FD4EB8();
          sub_1C1F645D4();
          id v26 = (void *)sub_1C214A770();
          swift_bridgeObjectRelease();
          objc_msgSend(v13, sel_activateConstraints_, v26);

          sub_1C1FD4B0C();
          id v27 = (void *)sub_1C214A770();
          swift_bridgeObjectRelease();
          objc_msgSend(v13, sel_deactivateConstraints_, v27);

          sub_1C1FD4AFC();
          goto LABEL_14;
        }
        sub_1C1FD4AFC();
        sub_1C1F645D4();
        id v14 = (void *)sub_1C214A770();
        swift_bridgeObjectRelease();
        objc_msgSend(v13, sel_activateConstraints_, v14);

        sub_1C1FD4B0C();
      }
      else
      {
        id v13 = self;
        sub_1C1FD4B0C();
        sub_1C1F645D4();
        id v24 = (void *)sub_1C214A770();
        swift_bridgeObjectRelease();
        objc_msgSend(v13, sel_activateConstraints_, v24);

        sub_1C1FD4AFC();
      }
      id v25 = (void *)sub_1C214A770();
      swift_bridgeObjectRelease();
      objc_msgSend(v13, sel_deactivateConstraints_, v25);

      sub_1C1FD4EB8();
LABEL_14:
      id v28 = (void *)sub_1C214A770();
      swift_bridgeObjectRelease();
      objc_msgSend(v13, sel_deactivateConstraints_, v28);

      return swift_release();
    }
  }
  else
  {
    sub_1C1F374E4((uint64_t)v31);
  }
  sub_1C21497A0();
  id v15 = v1;
  id v16 = sub_1C21497E0();
  os_log_type_t v17 = sub_1C214ABD0();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = swift_slowAlloc();
    uint64_t v29 = v2;
    id v19 = (uint8_t *)v18;
    uint64_t v20 = swift_slowAlloc();
    uint64_t v30 = v20;
    *(_DWORD *)id v19 = 136446210;
    sub_1C1F2116C(v6, (uint64_t)v31);
    sub_1C1F1CC40(0, (unint64_t *)&qword_1EBF0C300, (void (*)(uint64_t))sub_1C1F1CB5C);
    uint64_t v21 = sub_1C214A630();
    v31[0] = sub_1C1F6FD54(v21, v22, &v30);
    sub_1C214B530();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C1F0B000, v16, v17, "Incorrect view model for MedicationListItemCell: %{public}s", v19, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C8754730](v20, -1, -1);
    MEMORY[0x1C8754730](v19, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v29);
  }
  else
  {

    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
}

id MedicationComponentsItemCell.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MedicationComponentsItemCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1C1FD59A4@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 56);
  *a2 = *(void *)(v3 + 48);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C1FD59F4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC19HealthMedicationsUI28MedicationComponentsItemCell_item;
  swift_beginAccess();
  return sub_1C1F2116C(v3, a2);
}

uint64_t sub_1C1FD5A50()
{
  return type metadata accessor for MedicationComponentsItem();
}

uint64_t type metadata accessor for MedicationComponentsItem()
{
  uint64_t result = qword_1EA2C4AD8;
  if (!qword_1EA2C4AD8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C1FD5AA4()
{
  uint64_t result = sub_1C2147B20();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for MedicationComponentsItem(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MedicationComponentsItem);
}

uint64_t dispatch thunk of MedicationComponentsItem.reuseIdentifier.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of MedicationComponentsItem.reuseIdentifier.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of MedicationComponentsItem.reuseIdentifier.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of MedicationComponentsItem.uniqueIdentifier.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t dispatch thunk of MedicationComponentsItem.__allocating_init(medicationName:componentsList:hasEducation:)()
{
  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t method lookup function for MedicationComponentsItemCell(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MedicationComponentsItemCell);
}

uint64_t dispatch thunk of MedicationComponentsItemCell.item.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of MedicationComponentsItemCell.item.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of MedicationComponentsItemCell.item.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x90))();
}

uint64_t InteractionFactorsLifestyleOptionsItem.__allocating_init(factor:enabled:)(uint64_t a1, char a2)
{
  return InteractionFactorsLifestyleOptionsItem.init(factor:enabled:)(a1, a2);
}

uint64_t InteractionFactorsLifestyleOptionsItem.isOn.getter()
{
  return *(unsigned __int8 *)(v0 + qword_1EA2C4B10);
}

uint64_t InteractionFactorsLifestyleOptionsItem.init(factor:enabled:)(uint64_t a1, char a2)
{
  *(void *)(v2 + qword_1EA2C4B18) = a1;
  *(unsigned char *)(v2 + qword_1EA2C4B10) = a2;
  sub_1C1F758A4();
  uint64_t v4 = self;
  id v5 = objc_msgSend(v4, sel_systemBackgroundColor);
  id v6 = objc_msgSend(v4, sel_secondarySystemBackgroundColor);
  sub_1C214B150();

  HKDrugInteractionLifestyleFactor.image.getter(a1);
  char v8 = 0;
  HKDrugInteractionLifestyleFactor.localizedString(variant:)((uint64_t)&v8, a1);

  return sub_1C21487D0();
}

uint64_t InteractionFactorsLifestyleOptionsItem.handleSwitchValueChanged(_:for:)(uint64_t result)
{
  *(unsigned char *)(v1 + qword_1EA2C4B10) = result;
  return result;
}

void InteractionFactorsLifestyleOptionsItem.__allocating_init(image:text:detailText:backgroundColor:)()
{
}

void InteractionFactorsLifestyleOptionsItem.init(image:text:detailText:backgroundColor:)()
{
}

uint64_t InteractionFactorsLifestyleOptionsItem.__deallocating_deinit()
{
  _s19HealthMedicationsUI38InteractionFactorsLifestyleOptionsItemCfd_0();

  return swift_deallocClassInstance();
}

uint64_t sub_1C1FD5ED0()
{
  return *(unsigned __int8 *)(v0 + qword_1EA2C4B10);
}

uint64_t sub_1C1FD5EE0(uint64_t a1)
{
  return MEMORY[0x1F411EBC8](a1, *v1);
}

uint64_t sub_1C1FD5F0C(uint64_t result)
{
  *(unsigned char *)(v1 + qword_1EA2C4B10) = result;
  return result;
}

uint64_t type metadata accessor for InteractionFactorsLifestyleOptionsItem()
{
  uint64_t result = qword_1EA2C4B20;
  if (!qword_1EA2C4B20) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C1FD5F68()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for InteractionFactorsLifestyleOptionsItem(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for InteractionFactorsLifestyleOptionsItem);
}

uint64_t dispatch thunk of InteractionFactorsLifestyleOptionsItem.__allocating_init(factor:enabled:)()
{
  return (*(uint64_t (**)(void))(class metadata base offset for InteractionFactorsLifestyleOptionsItem + v0 + 16))();
}

uint64_t sub_1C1FD5FF4()
{
  return type metadata accessor for InteractionFactorsLifestyleOptionsItem();
}

uint64_t sub_1C1FD5FFC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t MedicationMarkdownItemCell.item.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI26MedicationMarkdownItemCell_item;
  swift_beginAccess();
  return sub_1C1F2116C(v3, a1);
}

uint64_t sub_1C1FD6098(uint64_t a1, void *a2)
{
  sub_1C1F2116C(a1, (uint64_t)v5);
  uint64_t v3 = *a2 + OBJC_IVAR____TtC19HealthMedicationsUI26MedicationMarkdownItemCell_item;
  swift_beginAccess();
  sub_1C1F32DDC((uint64_t)v5, v3);
  swift_endAccess();
  sub_1C1FD617C();
  return sub_1C1F374E4((uint64_t)v5);
}

uint64_t MedicationMarkdownItemCell.item.setter(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI26MedicationMarkdownItemCell_item;
  swift_beginAccess();
  sub_1C1F32DDC(a1, v3);
  swift_endAccess();
  sub_1C1FD617C();
  return sub_1C1F374E4(a1);
}

void sub_1C1FD617C()
{
  uint64_t v1 = sub_1C21497F0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = (uint64_t)v0 + OBJC_IVAR____TtC19HealthMedicationsUI26MedicationMarkdownItemCell_item;
  swift_beginAccess();
  sub_1C1F2116C(v5, (uint64_t)v33);
  if (!v33[3])
  {
    sub_1C1F374E4((uint64_t)v33);
LABEL_6:
    sub_1C21497A0();
    id v11 = v0;
    int v12 = sub_1C21497E0();
    os_log_type_t v13 = sub_1C214ABD0();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = swift_slowAlloc();
      uint64_t v31 = v1;
      id v15 = (uint8_t *)v14;
      uint64_t v16 = swift_slowAlloc();
      uint64_t v32 = v16;
      *(_DWORD *)id v15 = 136446210;
      sub_1C1F2116C(v5, (uint64_t)v33);
      sub_1C1F24488();
      uint64_t v17 = sub_1C214A630();
      v33[0] = sub_1C1F6FD54(v17, v18, &v32);
      sub_1C214B530();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C1F0B000, v12, v13, "Incorrect view model for MedicationMarkdownItem: %{public}s", v15, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C8754730](v16, -1, -1);
      MEMORY[0x1C8754730](v15, -1, -1);

      (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v31);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    }
    return;
  }
  sub_1C1F1CB5C();
  type metadata accessor for MedicationMarkdownItem();
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_6;
  }
  uint64_t v6 = v32;
  int v7 = *(unsigned __int8 *)(v32 + 64);
  id v8 = sub_1C1FD6678();
  id v9 = v8;
  if (v7 == 1)
  {
    id v10 = sub_1C1FD6750();
    objc_msgSend(v9, sel_insertArrangedSubview_atIndex_, v10, 0);
LABEL_12:

    goto LABEL_13;
  }
  id v19 = objc_msgSend(v8, sel_arrangedSubviews);

  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8F0);
  unint64_t v20 = sub_1C214A780();

  id v21 = sub_1C1FD6750();
  char v22 = sub_1C20BFD8C((uint64_t)v21, v20);
  swift_bridgeObjectRelease();

  if (v22)
  {
    id v9 = sub_1C1FD6678();
    id v10 = sub_1C1FD6750();
    objc_msgSend(v9, sel_removeArrangedSubview_, v10);
    goto LABEL_12;
  }
LABEL_13:
  id v23 = sub_1C1FD688C();
  swift_bridgeObjectRetain();
  id v24 = (void *)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  objc_msgSend(v23, sel_setText_, v24);

  id v25 = sub_1C1FD69F0();
  if (*(void *)(v6 + 56))
  {
    swift_bridgeObjectRetain();
    id v26 = (void *)sub_1C214A5B0();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v26 = 0;
  }
  objc_msgSend(v25, sel_setText_, v26);

  id v27 = sub_1C1FD69F0();
  if (*(void *)(v6 + 56)
    && (swift_bridgeObjectRetain(), sub_1C214A680(), uint64_t v29 = v28, swift_bridgeObjectRelease(), v29))
  {
    swift_bridgeObjectRelease();
    uint64_t v30 = 0;
  }
  else
  {
    uint64_t v30 = 1;
  }
  objc_msgSend(v27, sel_setHidden_, v30);
  swift_release();
}

void (*MedicationMarkdownItemCell.item.modify(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1C1FD6644;
}

void sub_1C1FD6644(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    sub_1C1FD617C();
  }
}

id sub_1C1FD6678()
{
  uint64_t v1 = OBJC_IVAR____TtC19HealthMedicationsUI26MedicationMarkdownItemCell____lazy_storage___stackView;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI26MedicationMarkdownItemCell____lazy_storage___stackView);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI26MedicationMarkdownItemCell____lazy_storage___stackView);
  }
  else
  {
    id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1C60]), sel_init);
    objc_msgSend(v4, sel_setAxis_, 1);
    objc_msgSend(v4, sel_setAlignment_, 1);
    objc_msgSend(v4, sel_setDistribution_, 0);
    objc_msgSend(v4, sel_setSpacing_, 16.0);
    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_1C1FD6750()
{
  uint64_t v1 = OBJC_IVAR____TtC19HealthMedicationsUI26MedicationMarkdownItemCell____lazy_storage___criticalButton;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI26MedicationMarkdownItemCell____lazy_storage___criticalButton);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI26MedicationMarkdownItemCell____lazy_storage___criticalButton);
  }
  else
  {
    if (qword_1EA2C2710 != -1) {
      swift_once();
    }
    id v4 = (id)qword_1EA2C5D90;
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_1C2147730();
    uint64_t v7 = v6;
    swift_bridgeObjectRelease();

    _sSo8UIButtonC19HealthMedicationsUIE21makeExclamationButton5title29accessibilityIdentifierSuffixABSS_SStFZ_0(v5, v7, 0x616369746972432ELL, 0xE90000000000006CLL);
    id v9 = v8;
    swift_bridgeObjectRelease();
    id v10 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v9;
    id v3 = v9;

    uint64_t v2 = 0;
  }
  id v11 = v2;
  return v3;
}

id sub_1C1FD688C()
{
  uint64_t v1 = OBJC_IVAR____TtC19HealthMedicationsUI26MedicationMarkdownItemCell____lazy_storage___primaryLabel;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI26MedicationMarkdownItemCell____lazy_storage___primaryLabel);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI26MedicationMarkdownItemCell____lazy_storage___primaryLabel);
  }
  else
  {
    uint64_t v4 = v0;
    id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
    sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8E0);
    uint64_t v6 = (void *)sub_1C214B0A0();
    objc_msgSend(v5, sel_setFont_, v6);

    objc_msgSend(v5, sel_setAdjustsFontForContentSizeCategory_, 1);
    objc_msgSend(v5, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    objc_msgSend(v5, sel_setNumberOfLines_, 0);
    id v3 = v5;
    uint64_t v7 = (void *)sub_1C214A770();
    id v8 = (id)HKUIJoinStringsForAutomationIdentifier();

    objc_msgSend(v3, sel_setAccessibilityIdentifier_, v8);
    id v9 = *(void **)(v4 + v1);
    *(void *)(v4 + v1) = v3;

    uint64_t v2 = 0;
  }
  id v10 = v2;
  return v3;
}

id sub_1C1FD69F0()
{
  uint64_t v1 = OBJC_IVAR____TtC19HealthMedicationsUI26MedicationMarkdownItemCell____lazy_storage___attributionLabel;
  uint64_t v2 = *(void **)(v0
                + OBJC_IVAR____TtC19HealthMedicationsUI26MedicationMarkdownItemCell____lazy_storage___attributionLabel);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC19HealthMedicationsUI26MedicationMarkdownItemCell____lazy_storage___attributionLabel);
  }
  else
  {
    uint64_t v4 = v0;
    id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
    sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8E0);
    uint64_t v6 = (void *)sub_1C214B0A0();
    objc_msgSend(v5, sel_setFont_, v6);

    objc_msgSend(v5, sel_setAdjustsFontForContentSizeCategory_, 1);
    id v7 = objc_msgSend(self, sel_secondaryLabelColor);
    objc_msgSend(v5, sel_setTextColor_, v7);

    objc_msgSend(v5, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    objc_msgSend(v5, sel_setNumberOfLines_, 0);
    id v3 = v5;
    id v8 = (void *)sub_1C214A770();
    id v9 = (id)HKUIJoinStringsForAutomationIdentifier();

    objc_msgSend(v3, sel_setAccessibilityIdentifier_, v9);
    id v10 = *(void **)(v4 + v1);
    *(void *)(v4 + v1) = v3;

    uint64_t v2 = 0;
  }
  id v11 = v2;
  return v3;
}

id sub_1C1FD6B90(double a1, double a2, double a3, double a4)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v10 = sub_1C2149BE0();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  os_log_type_t v13 = (char *)v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = &v4[OBJC_IVAR____TtC19HealthMedicationsUI26MedicationMarkdownItemCell_item];
  *(_OWORD *)uint64_t v14 = 0u;
  *((_OWORD *)v14 + 1) = 0u;
  *((void *)v14 + 4) = 0;
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI26MedicationMarkdownItemCell____lazy_storage___stackView] = 0;
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI26MedicationMarkdownItemCell____lazy_storage___criticalButton] = 0;
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI26MedicationMarkdownItemCell____lazy_storage___primaryLabel] = 0;
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI26MedicationMarkdownItemCell____lazy_storage___attributionLabel] = 0;
  v47.receiver = v4;
  v47.super_class = ObjectType;
  id v15 = objc_msgSendSuper2(&v47, sel_initWithFrame_, a1, a2, a3, a4);
  objc_msgSend(v15, sel_setUserInteractionEnabled_, 0);
  id v16 = sub_1C1FD6678();
  id v17 = sub_1C1FD688C();
  objc_msgSend(v16, sel_addArrangedSubview_, v17);

  id v18 = sub_1C1FD6678();
  id v19 = sub_1C1FD69F0();
  objc_msgSend(v18, sel_addArrangedSubview_, v19);

  id v20 = objc_msgSend(v15, sel_contentView);
  id v21 = sub_1C1FD6678();
  objc_msgSend(v20, sel_addSubview_, v21);

  sub_1C2149B70();
  sub_1C2149B20();
  double v23 = v22;
  double v25 = v24;
  double v27 = v26;
  double v29 = v28;
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  id v30 = sub_1C1FD6678();
  id v31 = objc_msgSend(v15, sel_contentView);
  objc_msgSend(v30, sel_hk_alignHorizontalConstraintsWithView_insets_, v31, v23, v25, v27, v29);

  uint64_t v32 = self;
  sub_1C1F0ED28();
  uint64_t v33 = swift_allocObject();
  *(_OWORD *)(v33 + 16) = xmmword_1C214FCB0;
  id v34 = sub_1C1FD6678();
  id v35 = objc_msgSend(v34, sel_topAnchor);

  id v36 = objc_msgSend(v15, sel_contentView);
  id v37 = objc_msgSend(v36, sel_topAnchor);

  id v38 = objc_msgSend(v35, sel_constraintEqualToAnchor_constant_, v37, 16.0);
  *(void *)(v33 + 32) = v38;
  id v39 = sub_1C1FD6678();
  id v40 = objc_msgSend(v39, sel_bottomAnchor);

  id v41 = objc_msgSend(v15, sel_contentView);
  id v42 = objc_msgSend(v41, sel_bottomAnchor);

  id v43 = objc_msgSend(v40, sel_constraintEqualToAnchor_constant_, v42, -16.0);
  *(void *)(v33 + 40) = v43;
  v46[1] = v33;
  sub_1C214A7A0();
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C810);
  uint64_t v44 = (void *)sub_1C214A770();
  swift_bridgeObjectRelease();
  objc_msgSend(v32, sel_activateConstraints_, v44);

  return v15;
}

id MedicationMarkdownItemCell.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1C1FD7150@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI26MedicationMarkdownItemCell_item;
  swift_beginAccess();
  return sub_1C1F2116C(v3, a1);
}

uint64_t sub_1C1FD71A4(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI26MedicationMarkdownItemCell_item;
  swift_beginAccess();
  sub_1C1F32DDC(a1, v3);
  swift_endAccess();
  sub_1C1FD617C();
  return sub_1C1F374E4(a1);
}

void (*sub_1C1FD7214(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1C1FD6644;
}

uint64_t sub_1C1FD7274()
{
  return sub_1C21481D0();
}

uint64_t sub_1C1FD727C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC19HealthMedicationsUI26MedicationMarkdownItemCell_item;
  swift_beginAccess();
  return sub_1C1F2116C(v3, a2);
}

uint64_t type metadata accessor for MedicationMarkdownItem()
{
  return self;
}

uint64_t type metadata accessor for MedicationMarkdownItemCell()
{
  return self;
}

uint64_t MedicationNicknameNotes.hash(into:)()
{
  uint64_t v1 = *(void *)(v0 + 24);
  if (!*(void *)(v0 + 8))
  {
    sub_1C214BB50();
    if (v1) {
      goto LABEL_3;
    }
    return sub_1C214BB50();
  }
  sub_1C214BB50();
  swift_bridgeObjectRetain();
  sub_1C214A690();
  swift_bridgeObjectRelease();
  if (!v1) {
    return sub_1C214BB50();
  }
LABEL_3:
  sub_1C214BB50();
  swift_bridgeObjectRetain();
  sub_1C214A690();

  return swift_bridgeObjectRelease();
}

uint64_t MedicationNicknameNotes.hashValue.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  uint64_t v2 = *(void *)(v0 + 24);
  sub_1C214BB30();
  if (!v1)
  {
    sub_1C214BB50();
    if (v2) {
      goto LABEL_3;
    }
LABEL_5:
    sub_1C214BB50();
    return sub_1C214BB80();
  }
  sub_1C214BB50();
  swift_bridgeObjectRetain();
  sub_1C214A690();
  swift_bridgeObjectRelease();
  if (!v2) {
    goto LABEL_5;
  }
LABEL_3:
  sub_1C214BB50();
  swift_bridgeObjectRetain();
  sub_1C214A690();
  swift_bridgeObjectRelease();
  return sub_1C214BB80();
}

uint64_t sub_1C1FD74CC()
{
  uint64_t v1 = *(void *)(v0 + 24);
  if (!*(void *)(v0 + 8))
  {
    sub_1C214BB50();
    if (v1) {
      goto LABEL_3;
    }
    return sub_1C214BB50();
  }
  sub_1C214BB50();
  swift_bridgeObjectRetain();
  sub_1C214A690();
  swift_bridgeObjectRelease();
  if (!v1) {
    return sub_1C214BB50();
  }
LABEL_3:
  sub_1C214BB50();
  swift_bridgeObjectRetain();
  sub_1C214A690();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1C1FD75A4()
{
  uint64_t v1 = *(void *)(v0 + 8);
  uint64_t v2 = *(void *)(v0 + 24);
  sub_1C214BB30();
  if (!v1)
  {
    sub_1C214BB50();
    if (v2) {
      goto LABEL_3;
    }
LABEL_5:
    sub_1C214BB50();
    return sub_1C214BB80();
  }
  sub_1C214BB50();
  swift_bridgeObjectRetain();
  sub_1C214A690();
  swift_bridgeObjectRelease();
  if (!v2) {
    goto LABEL_5;
  }
LABEL_3:
  sub_1C214BB50();
  swift_bridgeObjectRetain();
  sub_1C214A690();
  swift_bridgeObjectRelease();
  return sub_1C214BB80();
}

uint64_t _s19HealthMedicationsUI23MedicationNicknameNotesV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  uint64_t v3 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v5 = a1[3];
  uint64_t v6 = a2[1];
  uint64_t v7 = a2[2];
  uint64_t v8 = a2[3];
  if (!v3)
  {
    if (v6) {
      return 0;
    }
    goto LABEL_10;
  }
  if (!v6) {
    return 0;
  }
  BOOL v9 = *a1 == *a2 && v3 == v6;
  if (v9 || (v10 = sub_1C214BA80(), uint64_t result = 0, (v10 & 1) != 0))
  {
LABEL_10:
    if (v5)
    {
      if (v8 && (v4 == v7 && v5 == v8 || (sub_1C214BA80() & 1) != 0)) {
        return 1;
      }
    }
    else if (!v8)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

unint64_t sub_1C1FD7728()
{
  unint64_t result = qword_1EA2C4B58;
  if (!qword_1EA2C4B58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C4B58);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for MedicationNicknameNotes(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for MedicationNicknameNotes(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 32) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MedicationNicknameNotes()
{
  return &type metadata for MedicationNicknameNotes;
}

uint64_t InteractionFactorsHeaderItem.reuseIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t InteractionFactorsHeaderItem.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  type metadata accessor for InteractionFactorsHeaderCell();
  sub_1C1FD7AAC(&qword_1EA2C4B60, 255, (void (*)(uint64_t))type metadata accessor for InteractionFactorsHeaderCell);
  *(void *)(v0 + 16) = sub_1C21481D0();
  *(void *)(v0 + 24) = v1;
  return v0;
}

uint64_t InteractionFactorsHeaderItem.init()()
{
  type metadata accessor for InteractionFactorsHeaderCell();
  sub_1C1FD7AAC(&qword_1EA2C4B60, 255, (void (*)(uint64_t))type metadata accessor for InteractionFactorsHeaderCell);
  *(void *)(v0 + 16) = sub_1C21481D0();
  *(void *)(v0 + 24) = v1;
  return v0;
}

uint64_t static InteractionFactorsHeaderItem.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 16) == *(void *)(a2 + 16) && *(void *)(a1 + 24) == *(void *)(a2 + 24)) {
    return 1;
  }
  else {
    return sub_1C214BA80();
  }
}

uint64_t InteractionFactorsHeaderItem.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t InteractionFactorsHeaderItem.__deallocating_deinit()
{
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_1C1FD79F4(uint64_t a1, uint64_t a2)
{
  if (*(void *)(*(void *)a1 + 16) == *(void *)(*(void *)a2 + 16)
    && *(void *)(*(void *)a1 + 24) == *(void *)(*(void *)a2 + 24))
  {
    return 1;
  }
  else
  {
    return sub_1C214BA80();
  }
}

uint64_t sub_1C1FD7A20()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 112))();
}

uint64_t sub_1C1FD7A64(uint64_t a1, uint64_t a2)
{
  return sub_1C1FD7AAC(&qword_1EA2C4B68, a2, (void (*)(uint64_t))type metadata accessor for InteractionFactorsHeaderItem);
}

uint64_t sub_1C1FD7AAC(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for InteractionFactorsHeaderItem()
{
  return self;
}

uint64_t method lookup function for InteractionFactorsHeaderItem(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for InteractionFactorsHeaderItem);
}

uint64_t dispatch thunk of InteractionFactorsHeaderItem.uniqueIdentifier.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 88))();
}

uint64_t dispatch thunk of InteractionFactorsHeaderItem.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of InteractionFactorsHeaderItem.hash(into:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t dispatch thunk of InteractionFactorsHeaderItem.hashValue.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

char *InteractionStackedMedmojiView.__allocating_init(width:)(double a1)
{
  id v3 = objc_allocWithZone(v1);
  return InteractionStackedMedmojiView.init(width:)(a1);
}

uint64_t InteractionStackedMedmojiDataProvider.severityLevel.getter()
{
  return *(void *)v0;
}

uint64_t InteractionStackedMedmojiDataProvider.severityLevel.setter(uint64_t result)
{
  void *v1 = result;
  return result;
}

uint64_t (*InteractionStackedMedmojiDataProvider.severityLevel.modify())()
{
  return nullsub_1;
}

uint64_t InteractionStackedMedmojiDataProvider.firstItemConfig.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for InteractionStackedMedmojiDataProvider(0) + 20);

  return sub_1C1F6C204(v3, a1);
}

uint64_t InteractionStackedMedmojiDataProvider.firstItemConfig.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for InteractionStackedMedmojiDataProvider(0) + 20);

  return sub_1C1FDA0A8(a1, v3);
}

uint64_t (*InteractionStackedMedmojiDataProvider.firstItemConfig.modify())()
{
  return nullsub_1;
}

uint64_t InteractionStackedMedmojiDataProvider.secondItemConfig.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for InteractionStackedMedmojiDataProvider(0) + 24);

  return sub_1C1F6C204(v3, a1);
}

uint64_t InteractionStackedMedmojiDataProvider.secondItemConfig.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for InteractionStackedMedmojiDataProvider(0) + 24);

  return sub_1C1FDA0A8(a1, v3);
}

uint64_t (*InteractionStackedMedmojiDataProvider.secondItemConfig.modify())()
{
  return nullsub_1;
}

uint64_t InteractionStackedMedmojiDataProvider.reversedItemConfig()@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = type metadata accessor for InteractionStackedMedmojiDataProvider(0);
  uint64_t v5 = (uint64_t)v1 + *(int *)(v4 + 24);
  a1[3] = v4;
  a1[4] = sub_1C1FDA488(&qword_1EA2C4B70, (void (*)(uint64_t))type metadata accessor for InteractionStackedMedmojiDataProvider);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a1);
  sub_1C1F6C204(v5, (uint64_t)boxed_opaque_existential_1 + *(int *)(v4 + 20));
  uint64_t result = sub_1C1F6C204((uint64_t)v1 + *(int *)(v4 + 20), (uint64_t)boxed_opaque_existential_1 + *(int *)(v4 + 24));
  uint64_t *boxed_opaque_existential_1 = v3;
  return result;
}

BOOL static InteractionStackedMedmojiDataProvider.== infix(_:_:)(void *a1, void *a2)
{
  if (*a1 != *a2) {
    return 0;
  }
  uint64_t v4 = type metadata accessor for InteractionStackedMedmojiDataProvider(0);
  if (!_s19HealthMedicationsUI34DrugInteractionVisualizationConfigO2eeoiySbAC_ACtFZ_0((uint64_t)a1 + *(int *)(v4 + 20), (uint64_t)a2 + *(int *)(v4 + 20)))return 0; {
  uint64_t v5 = *(int *)(v4 + 24);
  }

  return _s19HealthMedicationsUI34DrugInteractionVisualizationConfigO2eeoiySbAC_ACtFZ_0((uint64_t)a1 + v5, (uint64_t)a2 + v5);
}

uint64_t sub_1C1FD7F0C()
{
  return *(void *)v0;
}

uint64_t sub_1C1FD7F14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C1F6C204(v2 + *(int *)(a1 + 20), a2);
}

uint64_t sub_1C1FD7F24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C1F6C204(v2 + *(int *)(a1 + 24), a2);
}

uint64_t sub_1C1FD7F34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5 = *v3;
  uint64_t v6 = (uint64_t)v3 + *(int *)(a1 + 24);
  a3[3] = a1;
  a3[4] = a2;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a3);
  sub_1C1F6C204(v6, (uint64_t)boxed_opaque_existential_1 + *(int *)(a1 + 20));
  uint64_t result = sub_1C1F6C204((uint64_t)v3 + *(int *)(a1 + 20), (uint64_t)boxed_opaque_existential_1 + *(int *)(a1 + 24));
  uint64_t *boxed_opaque_existential_1 = v5;
  return result;
}

uint64_t sub_1C1FD7FA4(void *a1, void *a2, uint64_t a3)
{
  if (*a1 != *a2
    || (static DrugInteractionVisualizationConfig.== infix(_:_:)((char *)a1 + *(int *)(a3 + 20), (char *)a2 + *(int *)(a3 + 20)) & 1) == 0)
  {
    return 0;
  }
  uint64_t v6 = *(int *)(a3 + 24);

  return static DrugInteractionVisualizationConfig.== infix(_:_:)((char *)a1 + v6, (char *)a2 + v6);
}

id sub_1C1FD8028()
{
  return sub_1C1FD804C(&OBJC_IVAR____TtC19HealthMedicationsUI29InteractionStackedMedmojiView____lazy_storage___firstMedmojiView);
}

id sub_1C1FD8034()
{
  return sub_1C1FD8134(&OBJC_IVAR____TtC19HealthMedicationsUI29InteractionStackedMedmojiView____lazy_storage___firstImageView);
}

id sub_1C1FD8040()
{
  return sub_1C1FD804C(&OBJC_IVAR____TtC19HealthMedicationsUI29InteractionStackedMedmojiView____lazy_storage___secondMedmojiView);
}

id sub_1C1FD804C(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *(void **)(v1 + *a1);
  if (v3)
  {
    id v4 = *(id *)(v1 + *a1);
  }
  else
  {
    uint64_t v5 = v1;
    id v6 = objc_msgSend(objc_allocWithZone((Class)sub_1C2148EF0()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
    id v7 = (id)*MEMORY[0x1E4F39EA8];
    sub_1C214B0D0();

    objc_msgSend(v6, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    uint64_t v8 = *(void **)(v5 + v2);
    *(void *)(v5 + v2) = v6;
    id v4 = v6;

    uint64_t v3 = 0;
  }
  id v9 = v3;
  return v4;
}

id sub_1C1FD8128()
{
  return sub_1C1FD8134(&OBJC_IVAR____TtC19HealthMedicationsUI29InteractionStackedMedmojiView____lazy_storage___secondImageView);
}

id sub_1C1FD8134(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *(void **)(v1 + *a1);
  if (v3)
  {
    id v4 = *(id *)(v1 + *a1);
  }
  else
  {
    id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1838]), sel_init);
    objc_msgSend(v5, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    id v6 = *(void **)(v1 + v2);
    *(void *)(v1 + v2) = v5;
    id v4 = v5;

    uint64_t v3 = 0;
  }
  id v7 = v3;
  return v4;
}

uint64_t sub_1C1FD81B8(uint64_t a1, void *a2)
{
  sub_1C1FDA10C(a1, (uint64_t)v5, &qword_1EA2C2C80, (void (*)(uint64_t))sub_1C1FDA178);
  uint64_t v3 = *a2 + OBJC_IVAR____TtC19HealthMedicationsUI29InteractionStackedMedmojiView_stackedMemojiConfig;
  swift_beginAccess();
  sub_1C1FDA1D0((uint64_t)v5, v3);
  swift_endAccess();
  sub_1C1FD8260();
  return sub_1C1FDC364((uint64_t)v5, &qword_1EA2C2C80, (void (*)(uint64_t))sub_1C1FDA178);
}

void sub_1C1FD8260()
{
  uint64_t v1 = type metadata accessor for DrugInteractionVisualizationConfig(0);
  uint64_t v2 = MEMORY[0x1F4188790](v1);
  uint64_t v94 = (uint64_t *)((char *)&v93 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  id v6 = (char *)&v93 - v5;
  uint64_t v7 = MEMORY[0x1F4188790](v4);
  unint64_t v96 = (uint64_t *)((char *)&v93 - v8);
  MEMORY[0x1F4188790](v7);
  char v10 = (char *)&v93 - v9;
  sub_1C1FDA704(0, (unint64_t *)&qword_1EBF0B690, MEMORY[0x1E4F66C80]);
  uint64_t v12 = MEMORY[0x1F4188790](v11 - 8);
  uint64_t v95 = (uint64_t)&v93 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  uint64_t v98 = (uint64_t)&v93 - v15;
  MEMORY[0x1F4188790](v14);
  id v17 = (char *)&v93 - v16;
  id v18 = (void *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI29InteractionStackedMedmojiView_stackedMemojiConfig);
  swift_beginAccess();
  uint64_t v19 = v18[3];
  if (v19)
  {
    uint64_t v97 = v6;
    uint64_t v20 = v0;
    uint64_t v21 = v18[4];
    double v22 = __swift_project_boxed_opaque_existential_0(v18, v19);
    uint64_t v23 = *(void *)(v19 - 8);
    MEMORY[0x1F4188790](v22);
    double v25 = (char *)&v93 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v23 + 16))(v25);
    (*(void (**)(uint64_t, uint64_t))(v21 + 24))(v19, v21);
    (*(void (**)(char *, uint64_t))(v23 + 8))(v25, v19);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      sub_1C1FDAB44((uint64_t)v10, type metadata accessor for DrugInteractionVisualizationConfig);
      uint64_t v27 = v18[3];
      uint64_t v28 = v20;
      uint64_t v29 = (uint64_t)v97;
      if (!v27) {
        return;
      }
      uint64_t v30 = v18[4];
      id v31 = __swift_project_boxed_opaque_existential_0(v18, v18[3]);
      uint64_t v32 = *(void *)(v27 - 8);
      MEMORY[0x1F4188790](v31);
      id v34 = (char *)&v93 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v32 + 16))(v34);
      id v35 = *(void (**)(uint64_t, uint64_t))(v30 + 24);
      uint64_t v36 = v30;
      id v37 = v96;
      v35(v27, v36);
      (*(void (**)(char *, uint64_t))(v32 + 8))(v34, v27);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        id v38 = sub_1C1FDA274(*v37);
        id v39 = sub_1C1FD8034();
        objc_msgSend(v39, sel_setImage_, v38);

        id v40 = sub_1C1FD8034();
        objc_msgSend(v40, sel_setHidden_, v38 == 0);

        id v41 = sub_1C1FD8028();
        objc_msgSend(v41, sel_setHidden_, 1);

        uint64_t v42 = v18[3];
        if (!v42) {
          return;
        }
      }
      else
      {
        sub_1C1FDAB44((uint64_t)v37, type metadata accessor for DrugInteractionVisualizationConfig);
        uint64_t v42 = v18[3];
        if (!v42) {
          return;
        }
      }
    }
    else
    {
      sub_1C1F4DB28((uint64_t)v10, (uint64_t)v17);
      uint64_t v28 = v20;
      id v43 = sub_1C1FD8028();
      uint64_t v44 = (void (*)(uint64_t))MEMORY[0x1E4F66C80];
      sub_1C1FDA10C((uint64_t)v17, v98, (unint64_t *)&qword_1EBF0B690, MEMORY[0x1E4F66C80]);
      sub_1C2148ED0();

      id v45 = sub_1C1FD8028();
      objc_msgSend(v45, sel_setHidden_, 0);

      id v46 = sub_1C1FD8034();
      objc_msgSend(v46, sel_setHidden_, 1);

      sub_1C1FDC364((uint64_t)v17, (unint64_t *)&qword_1EBF0B690, v44);
      uint64_t v29 = (uint64_t)v97;
      uint64_t v42 = v18[3];
      if (!v42) {
        return;
      }
    }
    uint64_t v47 = v18[4];
    uint64_t v48 = __swift_project_boxed_opaque_existential_0(v18, v42);
    uint64_t v49 = *(void *)(v42 - 8);
    MEMORY[0x1F4188790](v48);
    id v51 = (char *)&v93 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v49 + 16))(v51);
    (*(void (**)(uint64_t, uint64_t))(v47 + 32))(v42, v47);
    (*(void (**)(char *, uint64_t))(v49 + 8))(v51, v42);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_1C1FDAB44(v29, type metadata accessor for DrugInteractionVisualizationConfig);
      uint64_t v52 = v18[3];
      if (v52)
      {
        uint64_t v53 = v18[4];
        uint64_t v54 = __swift_project_boxed_opaque_existential_0(v18, v18[3]);
        uint64_t v55 = *(void *)(v52 - 8);
        MEMORY[0x1F4188790](v54);
        uint64_t v57 = (char *)&v93 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *))(v55 + 16))(v57);
        id v58 = v94;
        (*(void (**)(uint64_t, uint64_t))(v53 + 32))(v52, v53);
        (*(void (**)(char *, uint64_t))(v55 + 8))(v57, v52);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          id v59 = sub_1C1FDA274(*v58);
          id v60 = sub_1C1FD8128();
          objc_msgSend(v60, sel_setImage_, v59);

          id v61 = sub_1C1FD8128();
          objc_msgSend(v61, sel_setHidden_, v59 == 0);

          id v62 = sub_1C1FD8040();
          objc_msgSend(v62, sel_setHidden_, 1);

          uint64_t v63 = OBJC_IVAR____TtC19HealthMedicationsUI29InteractionStackedMedmojiView_secondTopConstraint;
          id v64 = *(void **)(v28 + OBJC_IVAR____TtC19HealthMedicationsUI29InteractionStackedMedmojiView_secondTopConstraint);
          if (v64)
          {
            id v65 = self;
            sub_1C1F0ED28();
            uint64_t v66 = swift_allocObject();
            *(_OWORD *)(v66 + 16) = xmmword_1C214E170;
            *(void *)(v66 + 32) = v64;
            uint64_t v99 = v66;
            sub_1C214A7A0();
            sub_1C1F645D4();
            id v67 = v64;
            uint64_t v68 = (void *)sub_1C214A770();
            swift_bridgeObjectRelease();
            objc_msgSend(v65, sel_deactivateConstraints_, v68);
          }
          id v69 = sub_1C1FD8128();
          id v70 = objc_msgSend(v69, sel_topAnchor);

          if (EnumCaseMultiPayload == 1) {
            id v71 = sub_1C1FD8034();
          }
          else {
            id v71 = sub_1C1FD8028();
          }
          id v72 = objc_msgSend(v71, sel_bottomAnchor);

          id v90 = objc_msgSend(v70, sel_constraintEqualToAnchor_constant_, v72, -4.0);
          id v91 = *(void **)(v28 + v63);
          *(void *)(v28 + v63) = v90;

          id v92 = *(id *)(v28 + v63);
          objc_msgSend(v92, sel_setActive_, 1);
        }
        else
        {
          sub_1C1FDAB44((uint64_t)v58, type metadata accessor for DrugInteractionVisualizationConfig);
        }
      }
    }
    else
    {
      uint64_t v73 = v95;
      sub_1C1F4DB28(v29, v95);
      id v74 = sub_1C1FD8040();
      sub_1C1FDA10C(v73, v98, (unint64_t *)&qword_1EBF0B690, MEMORY[0x1E4F66C80]);
      sub_1C2148ED0();

      id v75 = sub_1C1FD8040();
      objc_msgSend(v75, sel_setHidden_, 0);

      id v76 = sub_1C1FD8128();
      objc_msgSend(v76, sel_setHidden_, 1);

      uint64_t v77 = OBJC_IVAR____TtC19HealthMedicationsUI29InteractionStackedMedmojiView_secondTopConstraint;
      uint64_t v78 = *(void **)(v28 + OBJC_IVAR____TtC19HealthMedicationsUI29InteractionStackedMedmojiView_secondTopConstraint);
      if (v78)
      {
        id v79 = self;
        sub_1C1F0ED28();
        uint64_t v80 = swift_allocObject();
        *(_OWORD *)(v80 + 16) = xmmword_1C214E170;
        *(void *)(v80 + 32) = v78;
        uint64_t v99 = v80;
        sub_1C214A7A0();
        sub_1C1F645D4();
        id v81 = v78;
        uint64_t v82 = (void *)sub_1C214A770();
        swift_bridgeObjectRelease();
        objc_msgSend(v79, sel_deactivateConstraints_, v82);
      }
      id v83 = sub_1C1FD8040();
      id v84 = objc_msgSend(v83, sel_topAnchor);

      if (EnumCaseMultiPayload == 1) {
        id v85 = sub_1C1FD8034();
      }
      else {
        id v85 = sub_1C1FD8028();
      }
      id v86 = v85;
      id v87 = objc_msgSend(v85, sel_bottomAnchor);

      id v88 = objc_msgSend(v84, sel_constraintEqualToAnchor_constant_, v87, -4.0);
      uint64_t v89 = *(void **)(v28 + v77);
      *(void *)(v28 + v77) = v88;

      objc_msgSend(*(id *)(v28 + v77), sel_setActive_, 1);
      sub_1C1FDC364(v73, (unint64_t *)&qword_1EBF0B690, MEMORY[0x1E4F66C80]);
    }
  }
}

uint64_t sub_1C1FD8DBC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI29InteractionStackedMedmojiView_stackedMemojiConfig;
  swift_beginAccess();
  return sub_1C1FDA10C(v3, a1, &qword_1EA2C2C80, (void (*)(uint64_t))sub_1C1FDA178);
}

uint64_t sub_1C1FD8E2C(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI29InteractionStackedMedmojiView_stackedMemojiConfig;
  swift_beginAccess();
  sub_1C1FDA1D0(a1, v3);
  swift_endAccess();
  sub_1C1FD8260();
  return sub_1C1FDC364(a1, &qword_1EA2C2C80, (void (*)(uint64_t))sub_1C1FDA178);
}

void (*sub_1C1FD8EB8(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1C1FD8F18;
}

void sub_1C1FD8F18(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    sub_1C1FD8260();
  }
}

char *InteractionStackedMedmojiView.init(width:)(double a1)
{
  *(void *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI29InteractionStackedMedmojiView____lazy_storage___firstMedmojiView] = 0;
  *(void *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI29InteractionStackedMedmojiView____lazy_storage___firstImageView] = 0;
  *(void *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI29InteractionStackedMedmojiView____lazy_storage___secondMedmojiView] = 0;
  *(void *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI29InteractionStackedMedmojiView____lazy_storage___secondImageView] = 0;
  uint64_t v2 = &v1[OBJC_IVAR____TtC19HealthMedicationsUI29InteractionStackedMedmojiView_stackedMemojiConfig];
  *(_OWORD *)uint64_t v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  *((void *)v2 + 4) = 0;
  *(void *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI29InteractionStackedMedmojiView_secondTopConstraint] = 0;
  *(double *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI29InteractionStackedMedmojiView_width] = a1;
  v88.receiver = v1;
  v88.super_class = (Class)type metadata accessor for InteractionStackedMedmojiView();
  id v3 = objc_msgSendSuper2(&v88, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  id v4 = sub_1C1FD8040();
  objc_msgSend(v3, sel_addSubview_, v4);

  id v5 = v3;
  id v6 = sub_1C1FD8128();
  objc_msgSend(v5, sel_addSubview_, v6);

  id v7 = v5;
  id v8 = sub_1C1FD8028();
  objc_msgSend(v7, sel_addSubview_, v8);

  uint64_t v9 = (char *)v7;
  id v10 = sub_1C1FD8034();
  objc_msgSend(v9, sel_addSubview_, v10);

  id v87 = self;
  sub_1C1F0ED28();
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1C2154910;
  id v12 = sub_1C1FD8028();
  id v13 = objc_msgSend(v12, sel_leadingAnchor);

  id v14 = objc_msgSend(v9, (SEL)&selRef_setTranslatesAutoresizingMaskIntoConstraints_ + 2);
  id v15 = objc_msgSend(v13, sel_constraintEqualToAnchor_, v14);

  *(void *)(v11 + 32) = v15;
  id v16 = sub_1C1FD8028();
  id v17 = objc_msgSend(v16, sel_trailingAnchor);

  id v18 = objc_msgSend(v9, sel_trailingAnchor);
  id v19 = objc_msgSend(v17, sel_constraintEqualToAnchor_, v18);

  *(void *)(v11 + 40) = v19;
  id v20 = sub_1C1FD8028();
  id v21 = objc_msgSend(v20, sel_topAnchor);

  id v22 = objc_msgSend(v9, sel_topAnchor);
  id v23 = objc_msgSend(v21, sel_constraintEqualToAnchor_, v22);

  *(void *)(v11 + 48) = v23;
  id v24 = sub_1C1FD8028();
  id v25 = objc_msgSend(v24, sel_widthAnchor);

  uint64_t v26 = OBJC_IVAR____TtC19HealthMedicationsUI29InteractionStackedMedmojiView_width;
  id v27 = objc_msgSend(v25, sel_constraintEqualToConstant_, *(double *)&v9[OBJC_IVAR____TtC19HealthMedicationsUI29InteractionStackedMedmojiView_width]);

  *(void *)(v11 + 56) = v27;
  id v28 = sub_1C1FD8028();
  id v29 = objc_msgSend(v28, sel_heightAnchor);

  id v30 = objc_msgSend(v29, (SEL)&selRef_systemBackgroundColor + 2, *(double *)&v9[v26]);
  *(void *)(v11 + 64) = v30;
  id v31 = sub_1C1FD8034();
  id v32 = objc_msgSend(v31, (SEL)&selRef_setTranslatesAutoresizingMaskIntoConstraints_ + 2);

  id v33 = objc_msgSend(v9, (SEL)&selRef_setTranslatesAutoresizingMaskIntoConstraints_ + 2);
  id v34 = objc_msgSend(v32, sel_constraintEqualToAnchor_, v33);

  *(void *)(v11 + 72) = v34;
  id v35 = sub_1C1FD8034();
  id v36 = objc_msgSend(v35, sel_trailingAnchor);

  id v37 = objc_msgSend(v9, sel_trailingAnchor);
  id v38 = objc_msgSend(v36, sel_constraintEqualToAnchor_, v37);

  *(void *)(v11 + 80) = v38;
  id v39 = sub_1C1FD8034();
  id v40 = objc_msgSend(v39, sel_topAnchor);

  id v41 = objc_msgSend(v9, sel_topAnchor);
  id v42 = objc_msgSend(v40, sel_constraintEqualToAnchor_, v41);

  *(void *)(v11 + 88) = v42;
  id v43 = sub_1C1FD8034();
  id v44 = objc_msgSend(v43, sel_widthAnchor);

  id v45 = objc_msgSend(v44, sel_constraintEqualToConstant_, *(double *)&v9[v26]);
  *(void *)(v11 + 96) = v45;
  id v46 = sub_1C1FD8034();
  id v47 = objc_msgSend(v46, sel_heightAnchor);

  id v48 = objc_msgSend(v47, sel_constraintEqualToConstant_, *(double *)&v9[v26]);
  *(void *)(v11 + 104) = v48;
  id v49 = sub_1C1FD8040();
  id v50 = objc_msgSend(v49, sel_leadingAnchor);

  id v51 = objc_msgSend(v9, sel_leadingAnchor);
  id v52 = objc_msgSend(v50, sel_constraintEqualToAnchor_, v51);

  *(void *)(v11 + 112) = v52;
  id v53 = sub_1C1FD8040();
  id v54 = objc_msgSend(v53, sel_trailingAnchor);

  id v55 = objc_msgSend(v9, sel_trailingAnchor);
  id v56 = objc_msgSend(v54, sel_constraintEqualToAnchor_, v55);

  *(void *)(v11 + 120) = v56;
  id v57 = sub_1C1FD8040();
  id v58 = objc_msgSend(v57, sel_bottomAnchor);

  id v59 = objc_msgSend(v9, sel_bottomAnchor);
  id v60 = objc_msgSend(v58, sel_constraintEqualToAnchor_, v59);

  *(void *)(v11 + 128) = v60;
  id v61 = sub_1C1FD8040();
  id v62 = objc_msgSend(v61, sel_widthAnchor);

  id v63 = objc_msgSend(v62, sel_constraintEqualToConstant_, *(double *)&v9[v26]);
  *(void *)(v11 + 136) = v63;
  id v64 = sub_1C1FD8040();
  id v65 = objc_msgSend(v64, sel_heightAnchor);

  id v66 = objc_msgSend(v65, sel_constraintEqualToConstant_, *(double *)&v9[v26]);
  *(void *)(v11 + 144) = v66;
  id v67 = sub_1C1FD8128();
  id v68 = objc_msgSend(v67, sel_leadingAnchor);

  id v69 = objc_msgSend(v9, sel_leadingAnchor);
  id v70 = objc_msgSend(v68, sel_constraintEqualToAnchor_, v69);

  *(void *)(v11 + 152) = v70;
  id v71 = sub_1C1FD8128();
  id v72 = objc_msgSend(v71, sel_trailingAnchor);

  id v73 = objc_msgSend(v9, sel_trailingAnchor);
  id v74 = objc_msgSend(v72, sel_constraintEqualToAnchor_, v73);

  *(void *)(v11 + 160) = v74;
  id v75 = sub_1C1FD8128();
  id v76 = objc_msgSend(v75, sel_bottomAnchor);

  id v77 = objc_msgSend(v9, sel_bottomAnchor);
  id v78 = objc_msgSend(v76, sel_constraintEqualToAnchor_, v77);

  *(void *)(v11 + 168) = v78;
  id v79 = sub_1C1FD8128();
  id v80 = objc_msgSend(v79, sel_widthAnchor);

  id v81 = objc_msgSend(v80, (SEL)&selRef_systemBackgroundColor + 2, *(double *)&v9[v26]);
  *(void *)(v11 + 176) = v81;
  id v82 = sub_1C1FD8128();
  id v83 = objc_msgSend(v82, sel_heightAnchor);

  id v84 = objc_msgSend(v83, (SEL)&selRef_systemBackgroundColor + 2, *(double *)&v9[v26]);
  *(void *)(v11 + 184) = v84;
  sub_1C214A7A0();
  sub_1C1F645D4();
  id v85 = (void *)sub_1C214A770();
  swift_bridgeObjectRelease();
  objc_msgSend(v87, sel_activateConstraints_, v85);

  return v9;
}

id InteractionStackedMedmojiView.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id InteractionStackedMedmojiView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  id v9 = objc_allocWithZone(v4);

  return objc_msgSend(v9, sel_initWithFrame_, a1, a2, a3, a4);
}

void InteractionStackedMedmojiView.init(frame:)()
{
}

id InteractionStackedMedmojiView.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for InteractionStackedMedmojiView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

BOOL _s19HealthMedicationsUI34DrugInteractionVisualizationConfigO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C21492D0();
  uint64_t v41 = *(void *)(v4 - 8);
  uint64_t v42 = v4;
  MEMORY[0x1F4188790](v4);
  id v39 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1FDC3C0();
  uint64_t v7 = v6;
  MEMORY[0x1F4188790](v6);
  id v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1FDA704(0, (unint64_t *)&qword_1EBF0B690, MEMORY[0x1E4F66C80]);
  uint64_t v11 = MEMORY[0x1F4188790](v10 - 8);
  uint64_t v40 = (uint64_t)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  id v14 = (char *)&v39 - v13;
  uint64_t v15 = type metadata accessor for DrugInteractionVisualizationConfig(0);
  uint64_t v16 = MEMORY[0x1F4188790](v15);
  id v18 = (char **)((char *)&v39 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v16);
  id v20 = (char *)&v39 - v19;
  sub_1C1FDC440();
  uint64_t v22 = MEMORY[0x1F4188790](v21 - 8);
  id v24 = (char *)&v39 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v25 = &v24[*(int *)(v22 + 56)];
  sub_1C1F6C204(a1, (uint64_t)v24);
  sub_1C1F6C204(a2, (uint64_t)v25);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_1C1F6C204((uint64_t)v24, (uint64_t)v20);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_1C1FDC364((uint64_t)v20, (unint64_t *)&qword_1EBF0B690, MEMORY[0x1E4F66C80]);
      BOOL v28 = 0;
      id v27 = (uint64_t (*)(void))sub_1C1FDC440;
      goto LABEL_17;
    }
    sub_1C1F4DB28((uint64_t)v25, (uint64_t)v14);
    uint64_t v29 = (uint64_t)&v9[*(int *)(v7 + 48)];
    sub_1C1F4DB28((uint64_t)v20, (uint64_t)v9);
    sub_1C1FDA10C((uint64_t)v14, v29, (unint64_t *)&qword_1EBF0B690, MEMORY[0x1E4F66C80]);
    uint64_t v31 = v41;
    uint64_t v30 = v42;
    id v32 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v41 + 48);
    if (v32((uint64_t)v9, 1, v42) == 1)
    {
      sub_1C1FDC364((uint64_t)v14, (unint64_t *)&qword_1EBF0B690, MEMORY[0x1E4F66C80]);
      if (v32(v29, 1, v30) == 1)
      {
        sub_1C1FDC364((uint64_t)v9, (unint64_t *)&qword_1EBF0B690, MEMORY[0x1E4F66C80]);
        BOOL v28 = 1;
        goto LABEL_16;
      }
    }
    else
    {
      uint64_t v33 = v40;
      sub_1C1FDA10C((uint64_t)v9, v40, (unint64_t *)&qword_1EBF0B690, MEMORY[0x1E4F66C80]);
      if (v32(v29, 1, v30) != 1)
      {
        id v34 = v39;
        (*(void (**)(char *, uint64_t, uint64_t))(v31 + 32))(v39, v29, v30);
        sub_1C1FDA488(&qword_1EA2C4BE8, MEMORY[0x1E4F66C80]);
        char v35 = sub_1C214A5A0();
        id v36 = *(void (**)(char *, uint64_t))(v31 + 8);
        v36(v34, v30);
        id v37 = (void (*)(uint64_t))MEMORY[0x1E4F66C80];
        sub_1C1FDC364((uint64_t)v14, (unint64_t *)&qword_1EBF0B690, MEMORY[0x1E4F66C80]);
        v36((char *)v33, v30);
        sub_1C1FDC364((uint64_t)v9, (unint64_t *)&qword_1EBF0B690, v37);
        id v27 = type metadata accessor for DrugInteractionVisualizationConfig;
        if (v35)
        {
          BOOL v28 = 1;
          goto LABEL_17;
        }
LABEL_15:
        BOOL v28 = 0;
        goto LABEL_16;
      }
      sub_1C1FDC364((uint64_t)v14, (unint64_t *)&qword_1EBF0B690, MEMORY[0x1E4F66C80]);
      (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v33, v30);
    }
    sub_1C1FDAB44((uint64_t)v9, (uint64_t (*)(void))sub_1C1FDC3C0);
    goto LABEL_15;
  }
  sub_1C1F6C204((uint64_t)v24, (uint64_t)v18);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  id v27 = (uint64_t (*)(void))sub_1C1FDC440;
  if (EnumCaseMultiPayload == 1)
  {
    BOOL v28 = *v18 == *(void *)v25;
LABEL_16:
    id v27 = type metadata accessor for DrugInteractionVisualizationConfig;
    goto LABEL_17;
  }
  BOOL v28 = 0;
LABEL_17:
  sub_1C1FDAB44((uint64_t)v24, v27);
  return v28;
}

uint64_t type metadata accessor for InteractionStackedMedmojiDataProvider(uint64_t a1)
{
  return sub_1C1F20D10(a1, (uint64_t *)&unk_1EA2C4BC8);
}

uint64_t type metadata accessor for DrugInteractionVisualizationConfig(uint64_t a1)
{
  return sub_1C1F20D10(a1, (uint64_t *)&unk_1EA2C4BB8);
}

uint64_t sub_1C1FDA0A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DrugInteractionVisualizationConfig(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C1FDA10C(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_1C1FDA704(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

unint64_t sub_1C1FDA178()
{
  unint64_t result = qword_1EA2C55B0;
  if (!qword_1EA2C55B0)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA2C55B0);
  }
  return result;
}

uint64_t sub_1C1FDA1D0(uint64_t a1, uint64_t a2)
{
  sub_1C1FDA704(0, &qword_1EA2C2C80, (void (*)(uint64_t))sub_1C1FDA178);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for InteractionStackedMedmojiView()
{
  return self;
}

id sub_1C1FDA274(uint64_t a1)
{
  if (a1 != 1 && a1 != 3 && a1 != 2) {
    return 0;
  }
  type metadata accessor for InteractionFactorsCell();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v2 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  id v3 = (void *)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  id v4 = objc_msgSend(self, sel_imageNamed_inBundle_, v3, v2);

  return v4;
}

void _s19HealthMedicationsUI29InteractionStackedMedmojiViewC5coderACSgSo7NSCoderC_tcfc_0()
{
  *(void *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI29InteractionStackedMedmojiView____lazy_storage___firstMedmojiView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI29InteractionStackedMedmojiView____lazy_storage___firstImageView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI29InteractionStackedMedmojiView____lazy_storage___secondMedmojiView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI29InteractionStackedMedmojiView____lazy_storage___secondImageView] = 0;
  uint64_t v1 = &v0[OBJC_IVAR____TtC19HealthMedicationsUI29InteractionStackedMedmojiView_stackedMemojiConfig];
  *(_OWORD *)uint64_t v1 = 0u;
  *((_OWORD *)v1 + 1) = 0u;
  *((void *)v1 + 4) = 0;
  *(void *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI29InteractionStackedMedmojiView_secondTopConstraint] = 0;

  sub_1C214B910();
  __break(1u);
}

uint64_t sub_1C1FDA430(uint64_t a1)
{
  uint64_t result = sub_1C1FDA488(&qword_1EA2C4BB0, (void (*)(uint64_t))type metadata accessor for InteractionStackedMedmojiDataProvider);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C1FDA488(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C1FDA4D0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC19HealthMedicationsUI29InteractionStackedMedmojiView_stackedMemojiConfig;
  swift_beginAccess();
  return sub_1C1FDA10C(v3, a2, &qword_1EA2C2C80, (void (*)(uint64_t))sub_1C1FDA178);
}

uint64_t *initializeBufferWithCopyOfBuffer for DrugInteractionVisualizationConfig(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v8 = sub_1C21492D0();
      uint64_t v9 = *(void *)(v8 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v9 + 48))(a2, 1, v8))
      {
        sub_1C1FDA704(0, (unint64_t *)&qword_1EBF0B690, MEMORY[0x1E4F66C80]);
        memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v9 + 16))(a1, a2, v8);
        (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
      }
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

void sub_1C1FDA704(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C214B4F0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t destroy for DrugInteractionVisualizationConfig(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (!result)
  {
    uint64_t v3 = sub_1C21492D0();
    uint64_t v5 = *(void *)(v3 - 8);
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v3);
    if (!result)
    {
      unint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8);
      return v4(a1, v3);
    }
  }
  return result;
}

void *initializeWithCopy for DrugInteractionVisualizationConfig(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v6 = sub_1C21492D0();
    uint64_t v7 = *(void *)(v6 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
    {
      sub_1C1FDA704(0, (unint64_t *)&qword_1EBF0B690, MEMORY[0x1E4F66C80]);
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *assignWithCopy for DrugInteractionVisualizationConfig(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1C1FDAB44((uint64_t)a1, type metadata accessor for DrugInteractionVisualizationConfig);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v6 = sub_1C21492D0();
      uint64_t v7 = *(void *)(v6 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
      {
        sub_1C1FDA704(0, (unint64_t *)&qword_1EBF0B690, MEMORY[0x1E4F66C80]);
        memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(a1, a2, v6);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      }
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_1C1FDAB44(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void *initializeWithTake for DrugInteractionVisualizationConfig(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v6 = sub_1C21492D0();
    uint64_t v7 = *(void *)(v6 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
    {
      sub_1C1FDA704(0, (unint64_t *)&qword_1EBF0B690, MEMORY[0x1E4F66C80]);
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *assignWithTake for DrugInteractionVisualizationConfig(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1C1FDAB44((uint64_t)a1, type metadata accessor for DrugInteractionVisualizationConfig);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v6 = sub_1C21492D0();
      uint64_t v7 = *(void *)(v6 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
      {
        sub_1C1FDA704(0, (unint64_t *)&qword_1EBF0B690, MEMORY[0x1E4F66C80]);
        memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(a1, a2, v6);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      }
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

void sub_1C1FDAEB8()
{
  sub_1C1FDA704(319, (unint64_t *)&qword_1EBF0B690, MEMORY[0x1E4F66C80]);
  if (v0 <= 0x3F) {
    swift_initEnumMetadataMultiPayload();
  }
}

uint64_t dispatch thunk of InteractionStackedMedmojiDisplayable.severityLevel.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of InteractionStackedMedmojiDisplayable.firstItemConfig.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of InteractionStackedMedmojiDisplayable.secondItemConfig.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of InteractionStackedMedmojiDisplayable.reversedItemConfig()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t *initializeBufferWithCopyOfBuffer for InteractionStackedMedmojiDataProvider(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  unint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *unint64_t v4 = *a2;
    unint64_t v4 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    uint64_t v7 = *(int *)(a3 + 20);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = type metadata accessor for DrugInteractionVisualizationConfig(0);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
    }
    else
    {
      uint64_t v12 = sub_1C21492D0();
      uint64_t v13 = *(void *)(v12 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v9, 1, v12))
      {
        sub_1C1FDA704(0, (unint64_t *)&qword_1EBF0B690, MEMORY[0x1E4F66C80]);
        memcpy(v8, v9, *(void *)(*(void *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v8, v9, v12);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v8, 0, 1, v12);
      }
      swift_storeEnumTagMultiPayload();
    }
    uint64_t v15 = *(int *)(a3 + 24);
    uint64_t v16 = (char *)v4 + v15;
    uint64_t v17 = (char *)a2 + v15;
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v16, v17, *(void *)(*(void *)(v10 - 8) + 64));
    }
    else
    {
      uint64_t v18 = sub_1C21492D0();
      uint64_t v19 = *(void *)(v18 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
      {
        sub_1C1FDA704(0, (unint64_t *)&qword_1EBF0B690, MEMORY[0x1E4F66C80]);
        memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v16, v17, v18);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
      }
      swift_storeEnumTagMultiPayload();
    }
  }
  return v4;
}

uint64_t destroy for InteractionStackedMedmojiDataProvider(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  type metadata accessor for DrugInteractionVisualizationConfig(0);
  if (!swift_getEnumCaseMultiPayload())
  {
    uint64_t v5 = sub_1C21492D0();
    uint64_t v6 = *(void *)(v5 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
    }
  }
  uint64_t v7 = a1 + *(int *)(a2 + 24);
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (!result)
  {
    uint64_t v9 = sub_1C21492D0();
    uint64_t v11 = *(void *)(v9 - 8);
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v7, 1, v9);
    if (!result)
    {
      uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(v11 + 8);
      return v10(v7, v9);
    }
  }
  return result;
}

void *initializeWithCopy for InteractionStackedMedmojiDataProvider(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for DrugInteractionVisualizationConfig(0);
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    uint64_t v10 = sub_1C21492D0();
    uint64_t v11 = *(void *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10))
    {
      sub_1C1FDA704(0, (unint64_t *)&qword_1EBF0B690, MEMORY[0x1E4F66C80]);
      memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v7, v8, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v7, 0, 1, v10);
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v13 = *(int *)(a3 + 24);
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v14, v15, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    uint64_t v16 = sub_1C21492D0();
    uint64_t v17 = *(void *)(v16 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
    {
      sub_1C1FDA704(0, (unint64_t *)&qword_1EBF0B690, MEMORY[0x1E4F66C80]);
      memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v14, v15, v16);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *assignWithCopy for InteractionStackedMedmojiDataProvider(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    sub_1C1FDAB44((uint64_t)a1 + v6, type metadata accessor for DrugInteractionVisualizationConfig);
    uint64_t v9 = type metadata accessor for DrugInteractionVisualizationConfig(0);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      uint64_t v10 = sub_1C21492D0();
      uint64_t v11 = *(void *)(v10 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10))
      {
        sub_1C1FDA704(0, (unint64_t *)&qword_1EBF0B690, MEMORY[0x1E4F66C80]);
        memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v7, v8, v10);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v7, 0, 1, v10);
      }
      swift_storeEnumTagMultiPayload();
    }
    uint64_t v13 = *(int *)(a3 + 24);
    uint64_t v14 = (char *)a1 + v13;
    uint64_t v15 = (char *)a2 + v13;
    sub_1C1FDAB44((uint64_t)a1 + v13, type metadata accessor for DrugInteractionVisualizationConfig);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v14, v15, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      uint64_t v16 = sub_1C21492D0();
      uint64_t v17 = *(void *)(v16 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
      {
        sub_1C1FDA704(0, (unint64_t *)&qword_1EBF0B690, MEMORY[0x1E4F66C80]);
        memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v14, v15, v16);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
      }
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

void *initializeWithTake for InteractionStackedMedmojiDataProvider(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for DrugInteractionVisualizationConfig(0);
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    uint64_t v10 = sub_1C21492D0();
    uint64_t v11 = *(void *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10))
    {
      sub_1C1FDA704(0, (unint64_t *)&qword_1EBF0B690, MEMORY[0x1E4F66C80]);
      memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v7, v8, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v7, 0, 1, v10);
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v13 = *(int *)(a3 + 24);
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v14, v15, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    uint64_t v16 = sub_1C21492D0();
    uint64_t v17 = *(void *)(v16 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
    {
      sub_1C1FDA704(0, (unint64_t *)&qword_1EBF0B690, MEMORY[0x1E4F66C80]);
      memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v14, v15, v16);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *assignWithTake for InteractionStackedMedmojiDataProvider(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    sub_1C1FDAB44((uint64_t)a1 + v6, type metadata accessor for DrugInteractionVisualizationConfig);
    uint64_t v9 = type metadata accessor for DrugInteractionVisualizationConfig(0);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      uint64_t v10 = sub_1C21492D0();
      uint64_t v11 = *(void *)(v10 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10))
      {
        sub_1C1FDA704(0, (unint64_t *)&qword_1EBF0B690, MEMORY[0x1E4F66C80]);
        memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v7, v8, v10);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v7, 0, 1, v10);
      }
      swift_storeEnumTagMultiPayload();
    }
    uint64_t v13 = *(int *)(a3 + 24);
    uint64_t v14 = (char *)a1 + v13;
    uint64_t v15 = (char *)a2 + v13;
    sub_1C1FDAB44((uint64_t)a1 + v13, type metadata accessor for DrugInteractionVisualizationConfig);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v14, v15, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      uint64_t v16 = sub_1C21492D0();
      uint64_t v17 = *(void *)(v16 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
      {
        sub_1C1FDA704(0, (unint64_t *)&qword_1EBF0B690, MEMORY[0x1E4F66C80]);
        memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v14, v15, v16);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
      }
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for InteractionStackedMedmojiDataProvider(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C1FDC0E8);
}

uint64_t sub_1C1FDC0E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for DrugInteractionVisualizationConfig(0);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48);
  uint64_t v8 = v6;
  uint64_t v9 = a1 + *(int *)(a3 + 20);

  return v7(v9, a2, v8);
}

uint64_t storeEnumTagSinglePayload for InteractionStackedMedmojiDataProvider(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C1FDC17C);
}

uint64_t sub_1C1FDC17C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = type metadata accessor for DrugInteractionVisualizationConfig(0);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
  uint64_t v9 = v7;
  uint64_t v10 = a1 + *(int *)(a4 + 20);

  return v8(v10, a2, a2, v9);
}

uint64_t sub_1C1FDC200()
{
  uint64_t result = type metadata accessor for DrugInteractionVisualizationConfig(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t method lookup function for InteractionStackedMedmojiView(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for InteractionStackedMedmojiView);
}

uint64_t dispatch thunk of InteractionStackedMedmojiView.stackedMemojiConfig.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xE8))();
}

uint64_t dispatch thunk of InteractionStackedMedmojiView.stackedMemojiConfig.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xF0))();
}

uint64_t dispatch thunk of InteractionStackedMedmojiView.stackedMemojiConfig.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xF8))();
}

uint64_t dispatch thunk of InteractionStackedMedmojiView.__allocating_init(width:)()
{
  return (*(uint64_t (**)(void))(v0 + 280))();
}

uint64_t sub_1C1FDC364(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1C1FDA704(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

void sub_1C1FDC3C0()
{
  if (!qword_1EA2C4BD8)
  {
    sub_1C1FDA704(255, (unint64_t *)&qword_1EBF0B690, MEMORY[0x1E4F66C80]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA2C4BD8);
    }
  }
}

void sub_1C1FDC440()
{
  if (!qword_1EA2C4BE0)
  {
    type metadata accessor for DrugInteractionVisualizationConfig(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA2C4BE0);
    }
  }
}

uint64_t type metadata accessor for PauseDataSource(uint64_t a1)
{
  return sub_1C1F20D10(a1, (uint64_t *)&unk_1EA2C4C18);
}

uint64_t sub_1C1FDC4C4()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1C1FDC524(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  v16[1] = a4;
  uint64_t v10 = sub_1C2147B20();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(v5 + qword_1EA2C4C10) = 0;
  *(void *)(v5 + qword_1EA2C4C00) = a2;
  *(void *)(v5 + qword_1EA2C4C08) = a3;
  *(void *)(v5 + qword_1EA2C4BF0) = a1;
  *(void *)(v5 + qword_1EA2C4BF8) = a4;
  v17[0] = 0;
  v17[1] = 0xE000000000000000;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1C214B7C0();
  swift_bridgeObjectRelease();
  strcpy((char *)v17, "MutableArray<");
  HIWORD(v17[1]) = -4864;
  sub_1C2147B10();
  sub_1C2147AD0();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  sub_1C214A6C0();
  uint64_t v14 = sub_1C2148590();
  swift_retain();
  sub_1C1FDC734();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v14;
}

uint64_t sub_1C1FDC734()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1C1FDE744();
  uint64_t v15 = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)((char *)v0 + qword_1EA2C4BF8);
  uint64_t v16 = *(void *)((char *)v0 + qword_1EA2C4BF0);
  uint64_t v17 = v7;
  sub_1C1FDE848(0, (unint64_t *)&qword_1EA2C4C88, type metadata accessor for HKMedicationScheduleType);
  sub_1C1FDE848(0, &qword_1EA2C4C90, (void (*)(uint64_t))sub_1C1FDE8AC);
  sub_1C1FDEA74((unint64_t *)&qword_1EA2C4CA0, (unint64_t *)&qword_1EA2C4C88, type metadata accessor for HKMedicationScheduleType);
  sub_1C1FDEA74(&qword_1EA2C4CA8, &qword_1EA2C4C90, (void (*)(uint64_t))sub_1C1FDE8AC);
  sub_1C214A010();
  uint64_t v8 = swift_allocObject();
  swift_weakInit();
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v8;
  *(void *)(v9 + 24) = v2;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = sub_1C1FDE93C;
  *(void *)(v10 + 24) = v9;
  sub_1C1FDDB64(&qword_1EA2C4CB0, (void (*)(uint64_t))sub_1C1FDE744);
  uint64_t v11 = v15;
  uint64_t v12 = sub_1C214A0F0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v11);
  *(void *)((char *)v1 + qword_1EA2C4C10) = v12;
  return swift_release();
}

uint64_t sub_1C1FDC9E8(uint64_t result, unsigned __int8 *a2)
{
  int v2 = *a2;
  if (v2 != 2)
  {
    uint64_t v3 = result;
    swift_beginAccess();
    uint64_t result = swift_weakLoadStrong();
    if (result)
    {
      uint64_t v4 = result;
      if ((unint64_t)(v3 - 7) > 1)
      {
        return swift_release();
      }
      else
      {
        uint64_t v5 = *(void *)(result + qword_1EA2C4C08);
        unsigned __int8 v7 = v2 & 1;
        sub_1C1FDE4A4(v5, (char *)&v7);
        uint64_t v6 = *(void *)(v4 + qword_1EA2C4C00);
        unsigned __int8 v7 = v2 & 1;
        sub_1C1FDE4A4(v6, (char *)&v7);
        unsigned __int8 v7 = v2 & 1;
        sub_1C1FDCAD0(&v7);
        sub_1C21485C0();
        swift_release();
        return swift_bridgeObjectRelease();
      }
    }
  }
  return result;
}

uint64_t sub_1C1FDCAD0(unsigned __int8 *a1)
{
  uint64_t v3 = sub_1C2147B20();
  MEMORY[0x1F4188790](v3 - 8);
  sub_1C1FDDC9C(0, &qword_1EBF0C620, MEMORY[0x1E4FB0F28], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v21 - v5;
  int v7 = *a1;
  sub_1C1FDDC9C(0, (unint64_t *)&qword_1EBF0C958, (uint64_t (*)(uint64_t))sub_1C1F1CB5C, MEMORY[0x1E4FBBE00]);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1C214FCC0;
  if (qword_1EBF0CA00 != -1) {
    swift_once();
  }
  uint64_t v26 = (uint64_t *)(v8 + 32);
  id v9 = (id)qword_1EBF0CA18;
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_1C2147730();
  uint64_t v23 = v11;
  uint64_t v24 = v10;
  swift_bridgeObjectRelease();

  sub_1C21499A0();
  uint64_t v29 = sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C900);
  sub_1C214B1A0();
  sub_1C2149990();
  uint64_t v12 = sub_1C21499D0();
  uint64_t v13 = *(void *)(v12 - 8);
  id v27 = *(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56);
  uint64_t v28 = v13 + 56;
  v27(v6, 0, 1, v12);
  char v31 = v7;
  sub_1C204A8E8(&v31);
  swift_allocObject();
  swift_weakInit();
  swift_allocObject();
  swift_weakInit();
  sub_1C2147B10();
  uint64_t v22 = v1;
  uint64_t v14 = (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E4F66218];
  sub_1C1FDE654(0, &qword_1EA2C4C70, MEMORY[0x1E4F66218]);
  uint64_t v25 = v15;
  *(void *)(v8 + 56) = v15;
  uint64_t v16 = sub_1C1FDE6B8(&qword_1EA2C4C78, &qword_1EA2C4C70, v14);
  HIDWORD(v21) = v7;
  uint64_t v17 = v16;
  *(void *)(v8 + 64) = v16;
  __swift_allocate_boxed_opaque_existential_1(v26);
  sub_1C1FDDBAC();
  sub_1C2148190();
  uint64_t v26 = (uint64_t *)(v8 + 72);
  id v18 = (id)qword_1EBF0CA18;
  swift_bridgeObjectRetain();
  uint64_t v24 = sub_1C2147730();
  swift_bridgeObjectRelease();

  sub_1C21499A0();
  sub_1C214B1A0();
  sub_1C2149990();
  v27(v6, 0, 1, v12);
  char v30 = BYTE4(v21);
  sub_1C204A8E8(&v30);
  swift_allocObject();
  swift_weakInit();
  swift_allocObject();
  swift_weakInit();
  sub_1C2147B10();
  uint64_t v19 = v26;
  *(void *)(v8 + 96) = v25;
  *(void *)(v8 + 104) = v17;
  __swift_allocate_boxed_opaque_existential_1(v19);
  sub_1C2148190();
  return v8;
}

uint64_t sub_1C1FDD028@<X0>(uint64_t a1@<X8>)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1C2149E90();
    return swift_release();
  }
  else
  {
    *(void *)a1 = 0;
    *(unsigned char *)(a1 + 8) = -1;
  }
  return result;
}

uint64_t sub_1C1FDD0AC()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1C2149E70();
    return swift_release();
  }
  return result;
}

void sub_1C1FDD134()
{
}

uint64_t sub_1C1FDD164()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t sub_1C1FDD1D4()
{
  sub_1C2148610();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_1C1FDD264()
{
  return type metadata accessor for PauseDataSource(0);
}

uint64_t type metadata accessor for NextPauseDataSource(uint64_t a1)
{
  return sub_1C1F20D10(a1, (uint64_t *)&unk_1EA2C4C28);
}

uint64_t sub_1C1FDD28C()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1C1FDD2CC()
{
  type metadata accessor for ScheduleDurationCell();
  sub_1C1FDDB64(&qword_1EA2C4C40, (void (*)(uint64_t))type metadata accessor for ScheduleDurationCell);
  sub_1C214ACE0();
  uint64_t v0 = (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E4F66538];
  sub_1C1FDE654(0, &qword_1EA2C4C48, MEMORY[0x1E4F66538]);
  sub_1C1FDE6B8(&qword_1EA2C4C58, &qword_1EA2C4C48, v0);
  return sub_1C214ACC0();
}

uint64_t sub_1C1FDD3AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  if (sub_1C214A5F0() == a1 && v5 == a2)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v7 = sub_1C214BA80();
    swift_bridgeObjectRelease();
    if ((v7 & 1) == 0)
    {
      a3[3] = sub_1C2148220();
      a3[4] = sub_1C1FDDB64(&qword_1EA2C2D28, MEMORY[0x1E4F66330]);
      __swift_allocate_boxed_opaque_existential_1(a3);
      return sub_1C2148210();
    }
  }
  if (qword_1EBF0CA00 != -1) {
    swift_once();
  }
  id v9 = (id)qword_1EBF0CA18;
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_1C2147730();
  uint64_t v12 = v11;
  swift_bridgeObjectRelease();

  type metadata accessor for ScheduleHeaderCell();
  sub_1C1FDDB64(&qword_1EA2C4C60, (void (*)(uint64_t))type metadata accessor for ScheduleHeaderCell);
  uint64_t v13 = sub_1C21481D0();
  uint64_t v15 = v14;
  sub_1C21481D0();
  swift_bridgeObjectRelease();
  a3[3] = (uint64_t)&type metadata for ScheduleHeaderItem;
  a3[4] = sub_1C1FDDC00();
  uint64_t result = swift_allocObject();
  *a3 = result;
  *(void *)(result + 16) = v10;
  *(void *)(result + 24) = v12;
  *(unsigned char *)(result + 32) = 0;
  *(void *)(result + 40) = nullsub_1;
  *(void *)(result + 48) = 0;
  *(void *)(result + 56) = v13;
  *(void *)(result + 64) = v15;
  return result;
}

void *sub_1C1FDD5F4()
{
  uint64_t v0 = sub_1C2148710();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2148660();
  uint64_t v4 = (void *)sub_1C2148700();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  sub_1C214AE90();
  objc_msgSend(v4, sel_setContentInsets_);
  objc_msgSend(v4, sel_setContentInsetsReference_, 1);
  return v4;
}

uint64_t sub_1C1FDD6F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1C1FDD3AC(a1, a2, a3);
}

uint64_t sub_1C1FDD708()
{
  return sub_1C2148B80();
}

uint64_t sub_1C1FDD764@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_1C2147B20();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  char v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1FDED50(*a1);
  sub_1C1FDDC9C(0, (unint64_t *)&qword_1EA2C2DD0, MEMORY[0x1E4F66468], MEMORY[0x1E4FBBE00]);
  sub_1C2148540();
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1C214FCD0;
  sub_1C2147B10();
  sub_1C2147AD0();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t result = sub_1C2148520();
  *a2 = v8;
  return result;
}

uint64_t sub_1C1FDD930()
{
  return sub_1C214ACC0();
}

void *sub_1C1FDD968()
{
  uint64_t v0 = sub_1C2148710();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2148690();
  sub_1C21487F0();
  uint64_t v4 = (void *)sub_1C2148700();
  swift_unknownObjectRelease();
  sub_1C214AE90();
  objc_msgSend(v4, sel_setContentInsets_);
  objc_msgSend(v4, sel_contentInsets);
  objc_msgSend(v4, sel_setContentInsets_, -10.0);
  objc_msgSend(v4, sel_setContentInsetsReference_, 1);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

void sub_1C1FDDAA4()
{
}

void sub_1C1FDDAB4()
{
}

uint64_t sub_1C1FDDAE4()
{
  sub_1C2148460();

  return swift_deallocClassInstance();
}

uint64_t sub_1C1FDDB14()
{
  return type metadata accessor for NextPauseDataSource(0);
}

uint64_t sub_1C1FDDB1C()
{
  return sub_1C1FDDB64(&qword_1EA2C4C38, (void (*)(uint64_t))type metadata accessor for PauseDataSource);
}

uint64_t sub_1C1FDDB64(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C1FDDBAC()
{
  unint64_t result = qword_1EA2C4C50;
  if (!qword_1EA2C4C50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C4C50);
  }
  return result;
}

unint64_t sub_1C1FDDC00()
{
  unint64_t result = qword_1EA2C4C68;
  if (!qword_1EA2C4C68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C4C68);
  }
  return result;
}

uint64_t sub_1C1FDDC54()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 72, 7);
}

void sub_1C1FDDC9C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C1FDDD00(void *a1)
{
  uint64_t v45 = *v1;
  id v38 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FBCC28];
  sub_1C1FDDC9C(0, &qword_1EBF0C7E8, MEMORY[0x1E4FBCC28], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)v32 - v4;
  uint64_t v6 = sub_1C214A400();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1FDE9AC();
  uint64_t v35 = v10;
  uint64_t v37 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1FDEAC4();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v40 = v13;
  uint64_t v41 = v14;
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1FDEB90();
  uint64_t v42 = v17;
  uint64_t v44 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  id v36 = (char *)v32 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1FDEC6C();
  uint64_t v43 = v19;
  uint64_t v46 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19);
  id v39 = (char *)v32 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v47 = a1;
  sub_1C1FDE848(0, (unint64_t *)&qword_1EA2C3978, (void (*)(uint64_t))sub_1C1F89100);
  sub_1C1F12718(0, &qword_1EBF0C828);
  sub_1C1FDEA74((unint64_t *)&qword_1EA2C3980, (unint64_t *)&qword_1EA2C3978, (void (*)(uint64_t))sub_1C1F89100);
  sub_1C2149FD0();
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0CB10);
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E4FBCB38], v6);
  uint64_t v21 = (void *)sub_1C214ADB0();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  id v47 = v21;
  uint64_t v22 = sub_1C214AD20();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v33 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56);
  uint64_t v34 = v23 + 56;
  v33(v5, 1, 1, v22);
  sub_1C1FDDB64(&qword_1EA2C4CC8, (void (*)(uint64_t))sub_1C1FDE9AC);
  v32[1] = sub_1C1F43FD4();
  uint64_t v24 = v35;
  sub_1C214A0A0();
  uint64_t v25 = v38;
  sub_1C1FDF2E8((uint64_t)v5, &qword_1EBF0C7E8, v38);

  (*(void (**)(char *, uint64_t))(v37 + 8))(v12, v24);
  *(void *)(swift_allocObject() + 16) = v45;
  sub_1C1FDDC9C(0, &qword_1EA2C4CD8, MEMORY[0x1E4F66468], MEMORY[0x1E4FBB320]);
  sub_1C1FDDB64(&qword_1EA2C4CE0, (void (*)(uint64_t))sub_1C1FDEAC4);
  uint64_t v26 = v36;
  uint64_t v27 = v40;
  sub_1C214A020();
  swift_release();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v16, v27);
  id v47 = (id)sub_1C214AD80();
  v33(v5, 1, 1, v22);
  sub_1C1FDDB64(&qword_1EA2C4CF0, (void (*)(uint64_t))sub_1C1FDEB90);
  uint64_t v28 = v39;
  uint64_t v29 = v42;
  sub_1C214A0A0();
  sub_1C1FDF2E8((uint64_t)v5, &qword_1EBF0C7E8, v25);

  (*(void (**)(char *, uint64_t))(v44 + 8))(v26, v29);
  sub_1C1FDDB64(&qword_1EA2C4CF8, (void (*)(uint64_t))sub_1C1FDEC6C);
  uint64_t v30 = v43;
  sub_1C2149FB0();
  (*(void (**)(char *, uint64_t))(v46 + 8))(v28, v30);
  sub_1C2148890();
  sub_1C2148370();
  swift_release();
  return sub_1C2148450();
}

uint64_t sub_1C1FDE4A4(uint64_t a1, char *a2)
{
  char v2 = *a2;
  sub_1C2149E90();
  if (v6 == 255) {
    return sub_1C2149E70();
  }
  uint64_t result = sub_1C2149E90();
  if ((v6 & 1) == 0)
  {
    if (v2) {
      return result;
    }
    if ((unsigned __int128)(v5 * (__int128)7) >> 64 != (7 * v5) >> 63) {
      __break(1u);
    }
    return sub_1C2149E70();
  }
  if ((v2 & 1) == 0) {
    return result;
  }
  double v4 = ceil((double)v5 / 7.0);
  if ((~*(void *)&v4 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_14;
  }
  if (v4 <= -9.22337204e18)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (v4 >= 9.22337204e18)
  {
LABEL_15:
    __break(1u);
    return result;
  }
  return sub_1C2149E70();
}

uint64_t sub_1C1FDE5D4()
{
  swift_weakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C1FDE60C@<X0>(uint64_t a1@<X8>)
{
  return sub_1C1FDD028(a1);
}

uint64_t sub_1C1FDE630()
{
  return sub_1C1FDD0AC();
}

void sub_1C1FDE654(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C1FDDBAC();
    unint64_t v7 = a3(a1, &type metadata for PauseUsePeriod, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1C1FDE6B8(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C1FDE654(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C1FDE6FC@<X0>(uint64_t a1@<X8>)
{
  return sub_1C1FDD028(a1);
}

uint64_t sub_1C1FDE720()
{
  return sub_1C1FDD0AC();
}

void sub_1C1FDE744()
{
  if (!qword_1EA2C4C80)
  {
    sub_1C1FDE848(255, (unint64_t *)&qword_1EA2C4C88, type metadata accessor for HKMedicationScheduleType);
    sub_1C1FDE848(255, &qword_1EA2C4C90, (void (*)(uint64_t))sub_1C1FDE8AC);
    sub_1C1FDEA74((unint64_t *)&qword_1EA2C4CA0, (unint64_t *)&qword_1EA2C4C88, type metadata accessor for HKMedicationScheduleType);
    sub_1C1FDEA74(&qword_1EA2C4CA8, &qword_1EA2C4C90, (void (*)(uint64_t))sub_1C1FDE8AC);
    unint64_t v0 = sub_1C2149CA0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C4C80);
    }
  }
}

void sub_1C1FDE848(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C2149EA0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1C1FDE8AC()
{
  if (!qword_1EA2C4C98)
  {
    unint64_t v0 = sub_1C214B4F0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C4C98);
    }
  }
}

uint64_t sub_1C1FDE904()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C1FDE93C(uint64_t result, unsigned __int8 *a2)
{
  return sub_1C1FDC9E8(result, a2);
}

uint64_t sub_1C1FDE944()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C1FDE97C(void *a1)
{
  return (*(uint64_t (**)(void, void *))(v1 + 16))(*a1, a1 + 1);
}

void sub_1C1FDE9AC()
{
  if (!qword_1EA2C4CB8)
  {
    sub_1C1FDE848(255, (unint64_t *)&qword_1EA2C3978, (void (*)(uint64_t))sub_1C1F89100);
    sub_1C1F12718(255, &qword_1EBF0C828);
    sub_1C1FDEA74((unint64_t *)&qword_1EA2C3980, (unint64_t *)&qword_1EA2C3978, (void (*)(uint64_t))sub_1C1F89100);
    unint64_t v0 = sub_1C2149D00();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C4CB8);
    }
  }
}

uint64_t sub_1C1FDEA74(unint64_t *a1, unint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C1FDE848(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C1FDEAC4()
{
  if (!qword_1EA2C4CC0)
  {
    sub_1C1FDE9AC();
    sub_1C1F12718(255, (unint64_t *)&qword_1EBF0CB10);
    sub_1C1FDDB64(&qword_1EA2C4CC8, (void (*)(uint64_t))sub_1C1FDE9AC);
    sub_1C1F43FD4();
    unint64_t v0 = sub_1C2149DF0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C4CC0);
    }
  }
}

void sub_1C1FDEB90()
{
  if (!qword_1EA2C4CD0)
  {
    sub_1C1FDEAC4();
    sub_1C1FDDC9C(255, &qword_1EA2C4CD8, MEMORY[0x1E4F66468], MEMORY[0x1E4FBB320]);
    sub_1C1FDDB64(&qword_1EA2C4CE0, (void (*)(uint64_t))sub_1C1FDEAC4);
    unint64_t v0 = sub_1C2149D60();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C4CD0);
    }
  }
}

void sub_1C1FDEC6C()
{
  if (!qword_1EA2C4CE8)
  {
    sub_1C1FDEB90();
    sub_1C1F12718(255, (unint64_t *)&qword_1EBF0CB10);
    sub_1C1FDDB64(&qword_1EA2C4CF0, (void (*)(uint64_t))sub_1C1FDEB90);
    sub_1C1F43FD4();
    unint64_t v0 = sub_1C2149DF0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C4CE8);
    }
  }
}

uint64_t sub_1C1FDED38()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C1FDED48@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1C1FDD764(a1, a2);
}

uint64_t sub_1C1FDED50(void *a1)
{
  uint64_t v2 = sub_1C21497F0();
  uint64_t v32 = *(void *)(v2 - 8);
  uint64_t v33 = v2;
  MEMORY[0x1F4188790](v2);
  unint64_t v4 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1C2147B20();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1C2147CF0();
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1FDDC9C(0, &qword_1EA2C3918, (uint64_t (*)(uint64_t))type metadata accessor for CycleData, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = (char *)&v31 - v13;
  uint64_t v15 = type metadata accessor for CycleData();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v18 = (char *)&v31 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    uint64_t v31 = v6;
    id v19 = a1;
    sub_1C2147C50();
    sub_1C2084348(v19, (uint64_t)v11, (uint64_t)v14);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
    {

      sub_1C1FDF2E8((uint64_t)v14, &qword_1EA2C3918, (uint64_t (*)(uint64_t))type metadata accessor for CycleData);
    }
    else
    {
      sub_1C1FDF358((uint64_t)v14, (uint64_t)v18);
      uint64_t v20 = CycleData.localizedNextPhaseDateChangeDescription.getter();
      if (v21)
      {
        uint64_t v33 = v20;
        sub_1C1FDDC9C(0, (unint64_t *)&qword_1EBF0C958, (uint64_t (*)(uint64_t))sub_1C1F1CB5C, MEMORY[0x1E4FBBE00]);
        uint64_t v22 = swift_allocObject();
        *(_OWORD *)(v22 + 16) = xmmword_1C214FCD0;
        v34[0] = 0x74497265746F6F46;
        v34[1] = 0xEB000000005F6D65;
        sub_1C2147B10();
        sub_1C2147AD0();
        (*(void (**)(char *, uint64_t))(v31 + 8))(v8, v5);
        sub_1C214A6C0();
        swift_bridgeObjectRelease();
        *(void *)(v22 + 56) = sub_1C2148960();
        *(void *)(v22 + 64) = sub_1C1FDDB64(&qword_1EA2C2D38, MEMORY[0x1E4F665E8]);
        __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v22 + 32));
        sub_1C2148950();

        sub_1C1FDF3BC((uint64_t)v18);
        return v22;
      }
      sub_1C1FDF3BC((uint64_t)v18);
    }
  }
  sub_1C21497D0();
  id v23 = a1;
  uint64_t v24 = sub_1C21497E0();
  os_log_type_t v25 = sub_1C214ABD0();
  if (os_log_type_enabled(v24, v25))
  {
    uint64_t v26 = (uint8_t *)swift_slowAlloc();
    uint64_t v27 = swift_slowAlloc();
    v34[0] = v27;
    *(_DWORD *)uint64_t v26 = 136315138;
    uint64_t v35 = (uint64_t)a1;
    sub_1C1F89100();
    uint64_t v28 = sub_1C214B4E0();
    uint64_t v35 = sub_1C1F6FD54(v28, v29, v34);
    sub_1C214B530();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C1F0B000, v24, v25, "[MedicationsPauseDataSource] Unable to set the next phase footer information because contextual information is nil. Current Schedule: %s", v26, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C8754730](v27, -1, -1);
    MEMORY[0x1C8754730](v26, -1, -1);
  }
  else
  {
  }
  (*(void (**)(char *, uint64_t))(v32 + 8))(v4, v33);
  return MEMORY[0x1E4FBC860];
}

uint64_t sub_1C1FDF2E8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1C1FDDC9C(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1C1FDF358(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CycleData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C1FDF3BC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CycleData();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C1FDF418()
{
  sub_1C2148990();
  uint64_t result = sub_1C2148980();
  qword_1EA2C4D00 = v1;
  return result;
}

double sub_1C1FDF44C()
{
  if (qword_1EA2C2698 != -1) {
    swift_once();
  }
  double result = *(double *)&qword_1EA2C4D00 * 0.5;
  *(double *)&qword_1EA2C4D08 = *(double *)&qword_1EA2C4D00 * 0.5;
  return result;
}

uint64_t DurationDatePickerItem.reuseIdentifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DurationDatePickerItem.reuseIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*DurationDatePickerItem.reuseIdentifier.modify())()
{
  return nullsub_1;
}

unint64_t DurationDatePickerItem.uniqueIdentifier.getter()
{
  return 0xD000000000000017;
}

uint64_t type metadata accessor for DurationDatePickerItem()
{
  uint64_t result = qword_1EA2C4D68;
  if (!qword_1EA2C4D68) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t DurationDatePickerItem.uuid.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for DurationDatePickerItem() + 20);
  uint64_t v4 = sub_1C2147B20();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t DurationDatePickerItem.title.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for DurationDatePickerItem() + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DurationDatePickerItem.title.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for DurationDatePickerItem() + 24));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*DurationDatePickerItem.title.modify())()
{
  return nullsub_1;
}

uint64_t DurationDatePickerItem.placeholderText.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for DurationDatePickerItem() + 28));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DurationDatePickerItem.placeholderText.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for DurationDatePickerItem() + 28));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*DurationDatePickerItem.placeholderText.modify())()
{
  return nullsub_1;
}

uint64_t DurationDatePickerItem.cellAccessories.getter()
{
  type metadata accessor for DurationDatePickerItem();

  return swift_bridgeObjectRetain();
}

uint64_t DurationDatePickerItem.cellAccessories.setter(uint64_t a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for DurationDatePickerItem() + 32);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + v3) = a1;
  return result;
}

uint64_t (*DurationDatePickerItem.cellAccessories.modify())()
{
  return nullsub_1;
}

uint64_t DurationDatePickerItem.backgroundConfiguration.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for DurationDatePickerItem() + 36);
  uint64_t v4 = sub_1C21499D0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t DurationDatePickerItem.backgroundConfiguration.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for DurationDatePickerItem() + 36);
  uint64_t v4 = sub_1C21499D0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*DurationDatePickerItem.backgroundConfiguration.modify())()
{
  return nullsub_1;
}

uint64_t sub_1C1FDF9F4(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  if (*a1) {
    uint64_t v3 = a1[1];
  }
  else {
    uint64_t v3 = 0;
  }
  uint64_t v4 = (uint64_t *)(a2 + *(int *)(type metadata accessor for DurationDatePickerItem() + 40));
  uint64_t v5 = *v4;
  sub_1C1F1325C(v2);
  uint64_t result = sub_1C1F31118(v5);
  *uint64_t v4 = v2;
  v4[1] = v3;
  return result;
}

uint64_t DurationDatePickerItem.dataProvider.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for DurationDatePickerItem() + 40));
  sub_1C1F1325C(v1);
  return v1;
}

uint64_t DurationDatePickerItem.dataProvider.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (uint64_t *)(v2 + *(int *)(type metadata accessor for DurationDatePickerItem() + 40));
  uint64_t result = sub_1C1F31118(*v5);
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*DurationDatePickerItem.dataProvider.modify())()
{
  return nullsub_1;
}

uint64_t sub_1C1FDFB34@<X0>(uint64_t a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v3 = (uint64_t *)(a1 + *(int *)(type metadata accessor for DurationDatePickerItem() + 44));
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  if (*v3)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    *(void *)(v6 + 24) = v5;
    uint64_t v7 = sub_1C1FE4A38;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;

  return sub_1C1F1325C(v4);
}

uint64_t sub_1C1FDFBC8(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = sub_1C1FE4A10;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v7 = (uint64_t *)(a2 + *(int *)(type metadata accessor for DurationDatePickerItem() + 44));
  uint64_t v8 = *v7;
  sub_1C1F1325C(v3);
  uint64_t result = sub_1C1F31118(v8);
  *uint64_t v7 = (uint64_t)v6;
  v7[1] = v5;
  return result;
}

uint64_t DurationDatePickerItem.updateHandler.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for DurationDatePickerItem() + 44));
  sub_1C1F1325C(v1);
  return v1;
}

uint64_t DurationDatePickerItem.updateHandler.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (uint64_t *)(v2 + *(int *)(type metadata accessor for DurationDatePickerItem() + 44));
  uint64_t result = sub_1C1F31118(*v5);
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*DurationDatePickerItem.updateHandler.modify())()
{
  return nullsub_1;
}

uint64_t sub_1C1FDFD48@<X0>(uint64_t a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v3 = (uint64_t *)(a1 + *(int *)(type metadata accessor for DurationDatePickerItem() + 48));
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  if (*v3)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    *(void *)(v6 + 24) = v5;
    uint64_t v7 = sub_1C1FE4A6C;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;

  return sub_1C1F1325C(v4);
}

uint64_t sub_1C1FDFDDC(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = sub_1C1FE4A70;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v7 = (uint64_t *)(a2 + *(int *)(type metadata accessor for DurationDatePickerItem() + 48));
  uint64_t v8 = *v7;
  sub_1C1F1325C(v3);
  uint64_t result = sub_1C1F31118(v8);
  *uint64_t v7 = (uint64_t)v6;
  v7[1] = v5;
  return result;
}

uint64_t DurationDatePickerItem.deletionHandler.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for DurationDatePickerItem() + 48));
  sub_1C1F1325C(v1);
  return v1;
}

uint64_t DurationDatePickerItem.deletionHandler.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (uint64_t *)(v2 + *(int *)(type metadata accessor for DurationDatePickerItem() + 48));
  uint64_t result = sub_1C1F31118(*v5);
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*DurationDatePickerItem.deletionHandler.modify())()
{
  return nullsub_1;
}

uint64_t DurationDatePickerItem.isEditEnabled.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for DurationDatePickerItem() + 52));
}

uint64_t DurationDatePickerItem.isEditEnabled.setter(char a1)
{
  uint64_t result = type metadata accessor for DurationDatePickerItem();
  *(unsigned char *)(v1 + *(int *)(result + 52)) = a1;
  return result;
}

uint64_t (*DurationDatePickerItem.isEditEnabled.modify())()
{
  return nullsub_1;
}

uint64_t DurationDatePickerItem.datePickerMode.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for DurationDatePickerItem() + 56));
}

uint64_t DurationDatePickerItem.datePickerMode.setter(uint64_t a1)
{
  uint64_t result = type metadata accessor for DurationDatePickerItem();
  *(void *)(v1 + *(int *)(result + 56)) = a1;
  return result;
}

uint64_t (*DurationDatePickerItem.datePickerMode.modify())()
{
  return nullsub_1;
}

uint64_t DurationDatePickerItem.datePickerStyle.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for DurationDatePickerItem() + 60));
}

uint64_t DurationDatePickerItem.datePickerStyle.setter(uint64_t a1)
{
  uint64_t result = type metadata accessor for DurationDatePickerItem();
  *(void *)(v1 + *(int *)(result + 60)) = a1;
  return result;
}

uint64_t (*DurationDatePickerItem.datePickerStyle.modify())()
{
  return nullsub_1;
}

uint64_t DurationDatePickerItem.minimumDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for DurationDatePickerItem() + 64);

  return sub_1C1FE0174(v3, a1);
}

uint64_t sub_1C1FE0174(uint64_t a1, uint64_t a2)
{
  sub_1C1F1724C(0, &qword_1EBF0B1F0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t DurationDatePickerItem.minimumDate.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for DurationDatePickerItem() + 64);

  return sub_1C1FE024C(a1, v3);
}

uint64_t sub_1C1FE024C(uint64_t a1, uint64_t a2)
{
  sub_1C1F1724C(0, &qword_1EBF0B1F0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t (*DurationDatePickerItem.minimumDate.modify())()
{
  return nullsub_1;
}

uint64_t static DurationDatePickerItem.defaultBackgroundConfiguration.getter()
{
  sub_1C21499A0();
  id v0 = objc_msgSend(self, sel_systemBackgroundColor);
  return sub_1C2149990();
}

uint64_t DurationDatePickerItem.init(uuid:title:placeholderText:isEditEnabled:cellAccessories:backgroundConfiguration:datePickerMode:datePickerStyle:minimumDate:dataProvider:updateHandler:deletionHandler:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t *a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  type metadata accessor for DurationDatePickerCollectionViewCell();
  sub_1C1FE2F94(&qword_1EA2C4D18, v20, (void (*)(uint64_t))type metadata accessor for DurationDatePickerCollectionViewCell);
  *a9 = sub_1C21481D0();
  a9[1] = v21;
  uint64_t v22 = (int *)type metadata accessor for DurationDatePickerItem();
  id v23 = (uint64_t *)((char *)a9 + v22[7]);
  uint64_t v24 = (uint64_t *)((char *)a9 + v22[10]);
  *uint64_t v24 = 0;
  v24[1] = 0;
  os_log_type_t v25 = (uint64_t *)((char *)a9 + v22[11]);
  *os_log_type_t v25 = 0;
  v25[1] = 0;
  uint64_t v26 = (uint64_t *)((char *)a9 + v22[12]);
  *uint64_t v26 = 0;
  v26[1] = 0;
  uint64_t v27 = (uint64_t)a9 + v22[16];
  uint64_t v28 = sub_1C2147AC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v27, 1, 1, v28);
  unint64_t v29 = (char *)a9 + v22[5];
  uint64_t v30 = sub_1C2147B20();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v30 - 8) + 32))(v29, a1, v30);
  uint64_t v31 = (uint64_t *)((char *)a9 + v22[6]);
  *uint64_t v31 = a2;
  v31[1] = a3;
  *id v23 = a4;
  v23[1] = a5;
  *((unsigned char *)a9 + v22[13]) = a6;
  *(uint64_t *)((char *)a9 + v22[14]) = a10;
  *(uint64_t *)((char *)a9 + v22[15]) = a11;
  sub_1C1FE024C(a12, v27);
  sub_1C1F31118(*v24);
  *uint64_t v24 = a13;
  v24[1] = a14;
  sub_1C1F31118(*v25);
  *os_log_type_t v25 = a15;
  v25[1] = a16;
  sub_1C1F31118(*v26);
  *uint64_t v26 = a17;
  v26[1] = a18;
  *(uint64_t *)((char *)a9 + v22[8]) = a7;
  uint64_t v32 = (char *)a9 + v22[9];
  uint64_t v33 = sub_1C21499D0();
  uint64_t v34 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v33 - 8) + 32);

  return v34(v32, a8, v33);
}

uint64_t type metadata accessor for DurationDatePickerCollectionViewCell()
{
  return self;
}

uint64_t sub_1C1FE0628(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 24));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1C1FE0660(uint64_t a1)
{
  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 52));
}

uint64_t sub_1C1FE066C(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 40));
  sub_1C1F1325C(v2);
  return v2;
}

uint64_t sub_1C1FE06AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1) {
    uint64_t v5 = a2;
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = (uint64_t *)(v3 + *(int *)(a3 + 40));
  uint64_t result = sub_1C1F31118(*v6);
  *uint64_t v6 = a1;
  v6[1] = v5;
  return result;
}

uint64_t (*sub_1C1FE06F0(uint64_t a1, uint64_t a2))()
{
  uint64_t v3 = *(int *)(a2 + 40);
  *(_DWORD *)(a1 + 24) = v3;
  uint64_t v4 = (uint64_t *)(v2 + v3);
  uint64_t v6 = *v4;
  uint64_t v5 = v4[1];
  if (!v6) {
    uint64_t v5 = 0;
  }
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v2;
  return sub_1C1FE0734;
}

uint64_t sub_1C1FE0738(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 44));
  sub_1C1F1325C(v2);
  return v2;
}

uint64_t sub_1C1FE0778(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1) {
    uint64_t v5 = a2;
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = (uint64_t *)(v3 + *(int *)(a3 + 44));
  uint64_t result = sub_1C1F31118(*v6);
  *uint64_t v6 = a1;
  v6[1] = v5;
  return result;
}

uint64_t (*sub_1C1FE07BC(uint64_t a1, uint64_t a2))()
{
  uint64_t v3 = *(int *)(a2 + 44);
  *(_DWORD *)(a1 + 24) = v3;
  uint64_t v4 = (uint64_t *)(v2 + v3);
  uint64_t v6 = *v4;
  uint64_t v5 = v4[1];
  if (!v6) {
    uint64_t v5 = 0;
  }
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v2;
  return sub_1C1FE0734;
}

uint64_t sub_1C1FE0800(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 8);
  uint64_t v2 = (void *)(*(void *)(result + 16) + *(int *)(result + 24));
  if (!*(void *)result) {
    uint64_t v1 = 0;
  }
  *uint64_t v2 = *(void *)result;
  v2[1] = v1;
  return result;
}

unint64_t sub_1C1FE0820()
{
  return 0xD000000000000017;
}

uint64_t sub_1C1FE0884(uint64_t a1, void **a2)
{
  sub_1C1F2116C(a1, (uint64_t)v7);
  uint64_t v3 = *a2;
  uint64_t v4 = (uint64_t)*a2 + OBJC_IVAR____TtC19HealthMedicationsUI36DurationDatePickerCollectionViewCell_item;
  swift_beginAccess();
  sub_1C1F32DDC((uint64_t)v7, v4);
  uint64_t v5 = swift_endAccess();
  (*(void (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & *v3) + 0xC0))(v5);
  return sub_1C1FE2DB8((uint64_t)v7, (uint64_t (*)(void))sub_1C1F24488);
}

uint64_t sub_1C1FE093C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI36DurationDatePickerCollectionViewCell_item;
  swift_beginAccess();
  return sub_1C1F2116C(v3, a1);
}

uint64_t sub_1C1FE0990(uint64_t a1)
{
  uint64_t v3 = (uint64_t)v1 + OBJC_IVAR____TtC19HealthMedicationsUI36DurationDatePickerCollectionViewCell_item;
  swift_beginAccess();
  sub_1C1F32DDC(a1, v3);
  uint64_t v4 = swift_endAccess();
  (*(void (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & *v1) + 0xC0))(v4);
  return sub_1C1FE2DB8(a1, (uint64_t (*)(void))sub_1C1F24488);
}

uint64_t (*sub_1C1FE0A44(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1C1FE0AA4;
}

uint64_t sub_1C1FE0AA4(uint64_t a1, char a2)
{
  uint64_t result = swift_endAccess();
  if ((a2 & 1) == 0) {
    return (*(uint64_t (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & **(void **)(a1 + 24)) + 0xC0))(result);
  }
  return result;
}

id sub_1C1FE0B08()
{
  uint64_t v1 = OBJC_IVAR____TtC19HealthMedicationsUI36DurationDatePickerCollectionViewCell____lazy_storage___titleLabel;
  uint64_t v2 = *(void **)(v0
                + OBJC_IVAR____TtC19HealthMedicationsUI36DurationDatePickerCollectionViewCell____lazy_storage___titleLabel);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC19HealthMedicationsUI36DurationDatePickerCollectionViewCell____lazy_storage___titleLabel);
  }
  else
  {
    swift_getObjectType();
    id v4 = sub_1C1FE0B70();
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_1C1FE0B70()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
  objc_msgSend(v0, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  uint64_t v1 = sub_1C214A5F0();
  uint64_t v3 = v2;
  sub_1C1FE2F94(&qword_1EA2C4D18, v2, (void (*)(uint64_t))type metadata accessor for DurationDatePickerCollectionViewCell);
  id v4 = v0;
  sub_1C21481D0();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  uint64_t v9 = v1;
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  uint64_t v5 = (void *)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_setAccessibilityIdentifier_, v5, v9, v3);

  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8E0);
  id v6 = (void *)sub_1C214B0A0();
  objc_msgSend(v4, sel_setFont_, v6);

  objc_msgSend(v4, sel_setTextAlignment_, 4);
  objc_msgSend(v4, sel_setAdjustsFontForContentSizeCategory_, 1);
  id v7 = objc_msgSend(self, sel_labelColor);
  objc_msgSend(v4, sel_setTextColor_, v7);

  objc_msgSend(v4, sel_setNumberOfLines_, 0);
  objc_msgSend(v4, sel_setUserInteractionEnabled_, 0);
  return v4;
}

id sub_1C1FE0DE8()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB16B0]), sel_init);
  objc_msgSend(v0, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v0, sel_setPreferredDatePickerStyle_, 1);
  objc_msgSend(v0, sel_setDatePickerMode_, 1);
  uint64_t v5 = sub_1C214A5F0();
  uint64_t v6 = v1;
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  id v2 = v0;
  swift_bridgeObjectRelease();
  uint64_t v3 = (void *)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setAccessibilityIdentifier_, v3, v5, v6);

  return v2;
}

id DurationDatePickerCollectionViewCell.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void DurationDatePickerCollectionViewCell.init(coder:)()
{
  uint64_t v1 = &v0[OBJC_IVAR____TtC19HealthMedicationsUI36DurationDatePickerCollectionViewCell_item];
  *(_OWORD *)uint64_t v1 = 0u;
  *((_OWORD *)v1 + 1) = 0u;
  *((void *)v1 + 4) = 0;
  *(void *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI36DurationDatePickerCollectionViewCell____lazy_storage___titleLabel] = 0;
  uint64_t v2 = OBJC_IVAR____TtC19HealthMedicationsUI36DurationDatePickerCollectionViewCell_datePicker;
  *(void *)&v0[v2] = sub_1C1FE0DE8();
  *(void *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI36DurationDatePickerCollectionViewCell_currentLayoutConstraints] = MEMORY[0x1E4FBC860];

  sub_1C214B910();
  __break(1u);
}

uint64_t sub_1C1FE1178()
{
  id v1 = objc_msgSend(v0, sel_contentView);
  id v2 = sub_1C1FE0B08();
  objc_msgSend(v1, sel_addSubview_, v2);

  id v3 = objc_msgSend(v0, sel_contentView);
  objc_msgSend(v3, sel_addSubview_, *(void *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI36DurationDatePickerCollectionViewCell_datePicker]);

  id v4 = self;
  uint64_t v5 = OBJC_IVAR____TtC19HealthMedicationsUI36DurationDatePickerCollectionViewCell_currentLayoutConstraints;
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C810);
  swift_bridgeObjectRetain();
  uint64_t v6 = (void *)sub_1C214A770();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_deactivateConstraints_, v6);

  *(void *)&v0[v5] = MEMORY[0x1E4FBC860];
  swift_bridgeObjectRelease();
  id v7 = objc_msgSend(v0, sel_traitCollection);
  id v8 = objc_msgSend(v7, sel_preferredContentSizeCategory);

  LOBYTE(v7) = sub_1C214AE80();
  if (v7) {
    sub_1C1FE23AC();
  }
  else {
    sub_1C1FE2870();
  }
  objc_msgSend(v0, sel_setNeedsLayout);
  sub_1C1F1724C(0, (unint64_t *)&qword_1EA2C3D80, (uint64_t (*)(uint64_t))sub_1C1F7C864, MEMORY[0x1E4FBBE00]);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1C214FCD0;
  uint64_t v10 = sub_1C2149C70();
  uint64_t v11 = MEMORY[0x1E4FB1138];
  *(void *)(v9 + 32) = v10;
  *(void *)(v9 + 40) = v11;
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1C1F7C8F0();
  sub_1C214B120();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  return swift_release();
}

void sub_1C1FE13D4(void *a1, void *a2, uint64_t a3)
{
  id v5 = objc_msgSend(a1, sel_traitCollection);
  id v6 = objc_msgSend(v5, sel_preferredContentSizeCategory);

  LODWORD(v5) = sub_1C214AE80() & 1;
  id v7 = objc_msgSend(a2, sel_preferredContentSizeCategory);
  LODWORD(v6) = sub_1C214AE80() & 1;

  if (v5 != v6)
  {
    swift_beginAccess();
    uint64_t v8 = MEMORY[0x1C8754850](a3 + 16);
    if (v8)
    {
      uint64_t v9 = (char *)v8;
      uint64_t v10 = self;
      uint64_t v11 = OBJC_IVAR____TtC19HealthMedicationsUI36DurationDatePickerCollectionViewCell_currentLayoutConstraints;
      sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C810);
      swift_bridgeObjectRetain();
      uint64_t v12 = (void *)sub_1C214A770();
      swift_bridgeObjectRelease();
      objc_msgSend(v10, sel_deactivateConstraints_, v12);

      *(void *)&v9[v11] = MEMORY[0x1E4FBC860];
      swift_bridgeObjectRelease();
      id v13 = objc_msgSend(v9, sel_traitCollection);
      id v14 = objc_msgSend(v13, sel_preferredContentSizeCategory);

      LOBYTE(v13) = sub_1C214AE80();
      if (v13) {
        sub_1C1FE23AC();
      }
      else {
        sub_1C1FE2870();
      }
      objc_msgSend(v9, sel_setNeedsLayout);
    }
  }
}

uint64_t sub_1C1FE1594()
{
  id v1 = v0;
  uint64_t v2 = sub_1C2147AC0();
  uint64_t v42 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v41 = (char *)&v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v4 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C1F1724C(0, &qword_1EBF0B1F0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  uint64_t v6 = MEMORY[0x1F4188790](v5 - 8);
  uint64_t v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v41 - v9;
  sub_1C1F1724C(0, &qword_1EBF0C620, MEMORY[0x1E4FB0F28], v4);
  MEMORY[0x1F4188790](v11 - 8);
  id v13 = (char *)&v41 - v12;
  sub_1C1F1724C(0, (unint64_t *)&unk_1EA2C4D48, (uint64_t (*)(uint64_t))type metadata accessor for DurationDatePickerItem, v4);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v16 = (char *)&v41 - v15;
  uint64_t v17 = (int *)type metadata accessor for DurationDatePickerItem();
  uint64_t v18 = *((void *)v17 - 1);
  MEMORY[0x1F4188790](v17);
  uint64_t v20 = (char *)&v41 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = (uint64_t)&v1[OBJC_IVAR____TtC19HealthMedicationsUI36DurationDatePickerCollectionViewCell_item];
  swift_beginAccess();
  sub_1C1F2116C(v21, (uint64_t)v43);
  if (!v44)
  {
    sub_1C1FE2DB8((uint64_t)v43, (uint64_t (*)(void))sub_1C1F24488);
    (*(void (**)(char *, uint64_t, uint64_t, int *))(v18 + 56))(v16, 1, 1, v17);
    return sub_1C1FE1DA4((uint64_t)v16, (unint64_t *)&unk_1EA2C4D48, (uint64_t (*)(uint64_t))type metadata accessor for DurationDatePickerItem);
  }
  sub_1C1F23804(0, (unint64_t *)&qword_1EBF0C2F0);
  int v22 = swift_dynamicCast();
  (*(void (**)(char *, void, uint64_t, int *))(v18 + 56))(v16, v22 ^ 1u, 1, v17);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v18 + 48))(v16, 1, v17) == 1) {
    return sub_1C1FE1DA4((uint64_t)v16, (unint64_t *)&unk_1EA2C4D48, (uint64_t (*)(uint64_t))type metadata accessor for DurationDatePickerItem);
  }
  sub_1C1FE1D40((uint64_t)v16, (uint64_t)v20);
  id v23 = &v20[v17[9]];
  uint64_t v24 = sub_1C21499D0();
  uint64_t v25 = *(void *)(v24 - 8);
  (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v13, v23, v24);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v13, 0, 1, v24);
  MEMORY[0x1C8752FF0](v13);
  id v26 = sub_1C1FE0B08();
  swift_bridgeObjectRetain();
  uint64_t v27 = (void *)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  objc_msgSend(v26, sel_setText_, v27);

  uint64_t v28 = *(void **)&v1[OBJC_IVAR____TtC19HealthMedicationsUI36DurationDatePickerCollectionViewCell_datePicker];
  objc_msgSend(v28, sel_setDatePickerMode_, *(void *)&v20[v17[14]]);
  objc_msgSend(v28, sel_setPreferredDatePickerStyle_, *(void *)&v20[v17[15]]);
  sub_1C1FE0174((uint64_t)&v20[v17[16]], (uint64_t)v10);
  unint64_t v29 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48);
  uint64_t v30 = 0;
  if (v29(v10, 1, v2) != 1)
  {
    uint64_t v30 = (void *)sub_1C2147A00();
    (*(void (**)(char *, uint64_t))(v42 + 8))(v10, v2);
  }
  objc_msgSend(v28, sel_setMinimumDate_, v30);

  objc_msgSend(v1, sel_setUserInteractionEnabled_, v20[v17[13]]);
  uint64_t v31 = *(void (**)(char *))&v20[v17[10]];
  if (!v31)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v42 + 56))(v8, 1, 1, v2);
    goto LABEL_11;
  }
  swift_retain();
  v31(v20);
  sub_1C1F31118((uint64_t)v31);
  if (v29(v8, 1, v2) == 1)
  {
LABEL_11:
    sub_1C1FE1DA4((uint64_t)v8, &qword_1EBF0B1F0, MEMORY[0x1E4F27928]);
    goto LABEL_12;
  }
  uint64_t v33 = v41;
  uint64_t v32 = v42;
  (*(void (**)(char *, char *, uint64_t))(v42 + 32))(v41, v8, v2);
  uint64_t v34 = (void *)sub_1C2147A00();
  objc_msgSend(v28, sel_setDate_animated_, v34, 1);

  (*(void (**)(char *, uint64_t))(v32 + 8))(v33, v2);
LABEL_12:
  id v36 = self;
  uint64_t v37 = OBJC_IVAR____TtC19HealthMedicationsUI36DurationDatePickerCollectionViewCell_currentLayoutConstraints;
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C810);
  swift_bridgeObjectRetain();
  id v38 = (void *)sub_1C214A770();
  swift_bridgeObjectRelease();
  objc_msgSend(v36, sel_deactivateConstraints_, v38);

  *(void *)&v1[v37] = MEMORY[0x1E4FBC860];
  swift_bridgeObjectRelease();
  id v39 = objc_msgSend(v1, sel_traitCollection);
  id v40 = objc_msgSend(v39, sel_preferredContentSizeCategory);

  LOBYTE(v39) = sub_1C214AE80();
  if (v39) {
    sub_1C1FE23AC();
  }
  else {
    sub_1C1FE2870();
  }
  objc_msgSend(v1, sel_setNeedsLayout);
  objc_msgSend(v28, sel_addTarget_action_forControlEvents_, v1, sel_pickerDateChanged_, 0xFFFFFFFFLL);
  sub_1C1FE1E14(v28);
  swift_bridgeObjectRetain();
  sub_1C214AEC0();
  return sub_1C1FE2DB8((uint64_t)v20, (uint64_t (*)(void))type metadata accessor for DurationDatePickerItem);
}

uint64_t sub_1C1FE1D40(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DurationDatePickerItem();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C1FE1DA4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1C1F1724C(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1C1FE1E14(void *a1)
{
  uint64_t v2 = v1;
  v31[0] = swift_getObjectType();
  uint64_t v4 = sub_1C21497F0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C1F1724C(0, &qword_1EBF0B1F0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)v31 - v10;
  sub_1C1F1724C(0, (unint64_t *)&unk_1EA2C4D48, (uint64_t (*)(uint64_t))type metadata accessor for DurationDatePickerItem, v8);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = (char *)v31 - v13;
  uint64_t v15 = type metadata accessor for DurationDatePickerItem();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v18 = (char *)v31 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = v2 + OBJC_IVAR____TtC19HealthMedicationsUI36DurationDatePickerCollectionViewCell_item;
  swift_beginAccess();
  sub_1C1F2116C(v19, (uint64_t)v32);
  if (v32[3])
  {
    sub_1C1F23804(0, (unint64_t *)&qword_1EBF0C2F0);
    int v20 = swift_dynamicCast();
    (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v14, v20 ^ 1u, 1, v15);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) != 1)
    {
      sub_1C1FE1D40((uint64_t)v14, (uint64_t)v18);
      uint64_t v21 = *(void (**)(char *, char *))&v18[*(int *)(v15 + 44)];
      if (v21)
      {
        swift_retain();
        id v22 = objc_msgSend(a1, sel_date, v31[0]);
        sub_1C2147A60();

        uint64_t v23 = sub_1C2147AC0();
        (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v11, 0, 1, v23);
        v21(v18, v11);
        sub_1C1F31118((uint64_t)v21);
        sub_1C1FE1DA4((uint64_t)v11, &qword_1EBF0B1F0, MEMORY[0x1E4F27928]);
      }
      return sub_1C1FE2DB8((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for DurationDatePickerItem);
    }
  }
  else
  {
    sub_1C1FE2DB8((uint64_t)v32, (uint64_t (*)(void))sub_1C1F24488);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v14, 1, 1, v15);
  }
  sub_1C1FE1DA4((uint64_t)v14, (unint64_t *)&unk_1EA2C4D48, (uint64_t (*)(uint64_t))type metadata accessor for DurationDatePickerItem);
  sub_1C21497B0();
  uint64_t v25 = sub_1C21497E0();
  os_log_type_t v26 = sub_1C214ABF0();
  if (os_log_type_enabled(v25, v26))
  {
    uint64_t v27 = (uint8_t *)swift_slowAlloc();
    uint64_t v28 = swift_slowAlloc();
    v32[0] = v28;
    *(_DWORD *)uint64_t v27 = 136315138;
    uint64_t v29 = sub_1C214BC10();
    v31[1] = sub_1C1F6FD54(v29, v30, v32);
    sub_1C214B530();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C1F0B000, v25, v26, "[%s] item is not a DatePickerItem", v27, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C8754730](v28, -1, -1);
    MEMORY[0x1C8754730](v27, -1, -1);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1C1FE23AC()
{
  uint64_t v1 = v0;
  sub_1C1F0ED28();
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1C21518E0;
  id v3 = sub_1C1FE0B08();
  id v4 = objc_msgSend(v3, sel_leadingAnchor);

  id v5 = objc_msgSend(v1, sel_contentView);
  id v6 = objc_msgSend(v5, sel_leadingAnchor);

  if (qword_1EA2C2698 != -1) {
    swift_once();
  }
  id v7 = objc_msgSend(v4, sel_constraintEqualToAnchor_constant_, v6, *(double *)&qword_1EA2C4D00);

  *(void *)(v2 + 32) = v7;
  id v8 = sub_1C1FE0B08();
  id v9 = objc_msgSend(v8, sel_topAnchor);

  id v10 = objc_msgSend(v1, sel_contentView);
  id v11 = objc_msgSend(v10, sel_topAnchor);

  id v12 = objc_msgSend(v9, sel_constraintEqualToAnchor_constant_, v11, 6.0);
  *(void *)(v2 + 40) = v12;
  id v13 = objc_msgSend(v1, sel_separatorLayoutGuide);
  id v14 = objc_msgSend(v13, sel_leadingAnchor);

  id v15 = sub_1C1FE0B08();
  id v16 = objc_msgSend(v15, sel_leadingAnchor);

  id v17 = objc_msgSend(v14, sel_constraintEqualToAnchor_, v16);
  *(void *)(v2 + 48) = v17;
  uint64_t v18 = *(void **)&v1[OBJC_IVAR____TtC19HealthMedicationsUI36DurationDatePickerCollectionViewCell_datePicker];
  id v19 = objc_msgSend(v18, sel_leadingAnchor);
  id v20 = objc_msgSend(v1, sel_contentView);
  id v21 = objc_msgSend(v20, sel_leadingAnchor);

  id v22 = objc_msgSend(v19, sel_constraintEqualToAnchor_constant_, v21, *(double *)&qword_1EA2C4D00);
  *(void *)(v2 + 56) = v22;
  id v23 = objc_msgSend(v18, sel_trailingAnchor);
  id v24 = objc_msgSend(v1, sel_contentView);
  id v25 = objc_msgSend(v24, sel_trailingAnchor);

  if (qword_1EA2C26A0 != -1) {
    swift_once();
  }
  id v26 = objc_msgSend(v23, sel_constraintLessThanOrEqualToAnchor_constant_, v25, -*(double *)&qword_1EA2C4D08);

  *(void *)(v2 + 64) = v26;
  id v27 = objc_msgSend(v18, sel_topAnchor);
  id v28 = sub_1C1FE0B08();
  id v29 = objc_msgSend(v28, sel_bottomAnchor);

  id v30 = objc_msgSend(v27, sel_constraintEqualToAnchor_constant_, v29, 6.0);
  *(void *)(v2 + 72) = v30;
  id v31 = objc_msgSend(v18, sel_bottomAnchor);
  id v32 = objc_msgSend(v1, sel_contentView);
  id v33 = objc_msgSend(v32, sel_bottomAnchor);

  id v34 = objc_msgSend(v31, sel_constraintEqualToAnchor_constant_, v33, -6.0);
  *(void *)(v2 + 80) = v34;
  sub_1C214A7A0();
  uint64_t v35 = v2;
  id v36 = self;
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C810);
  uint64_t v37 = (void *)sub_1C214A770();
  objc_msgSend(v36, sel_activateConstraints_, v37);

  *(void *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI36DurationDatePickerCollectionViewCell_currentLayoutConstraints] = v35;

  return swift_bridgeObjectRelease();
}

uint64_t sub_1C1FE2870()
{
  uint64_t v1 = v0;
  sub_1C1F0ED28();
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1C2150CA0;
  id v3 = sub_1C1FE0B08();
  id v4 = objc_msgSend(v3, sel_leadingAnchor);

  id v5 = objc_msgSend(v1, sel_contentView);
  id v6 = objc_msgSend(v5, sel_leadingAnchor);

  if (qword_1EA2C2698 != -1) {
    swift_once();
  }
  id v7 = objc_msgSend(v4, sel_constraintEqualToAnchor_constant_, v6, *(double *)&qword_1EA2C4D00);

  *(void *)(v2 + 32) = v7;
  id v8 = sub_1C1FE0B08();
  id v9 = objc_msgSend(v8, sel_topAnchor);

  id v10 = objc_msgSend(v1, sel_contentView);
  id v11 = objc_msgSend(v10, sel_topAnchor);

  id v12 = objc_msgSend(v9, sel_constraintEqualToAnchor_constant_, v11, 6.0);
  *(void *)(v2 + 40) = v12;
  id v13 = objc_msgSend(v1, sel_contentView);
  id v14 = objc_msgSend(v13, sel_bottomAnchor);

  id v15 = sub_1C1FE0B08();
  id v16 = objc_msgSend(v15, sel_bottomAnchor);

  id v17 = objc_msgSend(v14, sel_constraintEqualToAnchor_constant_, v16, 6.0);
  *(void *)(v2 + 48) = v17;
  id v18 = objc_msgSend(v1, sel_separatorLayoutGuide);
  id v19 = objc_msgSend(v18, sel_leadingAnchor);

  id v20 = sub_1C1FE0B08();
  id v21 = objc_msgSend(v20, sel_leadingAnchor);

  id v22 = objc_msgSend(v19, sel_constraintEqualToAnchor_, v21);
  *(void *)(v2 + 56) = v22;
  id v23 = *(void **)&v1[OBJC_IVAR____TtC19HealthMedicationsUI36DurationDatePickerCollectionViewCell_datePicker];
  id v24 = objc_msgSend(v23, sel_leadingAnchor);
  id v25 = sub_1C1FE0B08();
  id v26 = objc_msgSend(v25, sel_trailingAnchor);

  id v27 = objc_msgSend(v24, sel_constraintGreaterThanOrEqualToAnchor_constant_, v26, *(double *)&qword_1EA2C4D00);
  *(void *)(v2 + 64) = v27;
  id v28 = objc_msgSend(v1, sel_contentView);
  id v29 = objc_msgSend(v28, sel_trailingAnchor);

  id v30 = objc_msgSend(v23, sel_trailingAnchor);
  if (qword_1EA2C26A0 != -1) {
    swift_once();
  }
  id v31 = objc_msgSend(v29, sel_constraintEqualToAnchor_constant_, v30, *(double *)&qword_1EA2C4D08);

  *(void *)(v2 + 72) = v31;
  id v32 = objc_msgSend(v23, sel_topAnchor);
  id v33 = objc_msgSend(v1, sel_contentView);
  id v34 = objc_msgSend(v33, sel_topAnchor);

  id v35 = objc_msgSend(v32, sel_constraintEqualToAnchor_constant_, v34, 6.0);
  *(void *)(v2 + 80) = v35;
  id v36 = objc_msgSend(v1, sel_contentView);
  id v37 = objc_msgSend(v36, sel_bottomAnchor);

  id v38 = objc_msgSend(v23, sel_bottomAnchor);
  id v39 = objc_msgSend(v37, sel_constraintEqualToAnchor_constant_, v38, 6.0);

  *(void *)(v2 + 88) = v39;
  sub_1C214A7A0();
  uint64_t v40 = v2;
  uint64_t v41 = self;
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C810);
  uint64_t v42 = (void *)sub_1C214A770();
  objc_msgSend(v41, sel_activateConstraints_, v42);

  *(void *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI36DurationDatePickerCollectionViewCell_currentLayoutConstraints] = v40;

  return swift_bridgeObjectRelease();
}

uint64_t sub_1C1FE2DB8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

id DurationDatePickerCollectionViewCell.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DurationDatePickerCollectionViewCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t DurationDatePickerCollectionViewCell.deselectionBehavior.getter@<X0>(unsigned char *a1@<X8>)
{
  *a1 = 1;
  uint64_t v2 = *MEMORY[0x1E4F66478];
  uint64_t v3 = sub_1C2148620();
  id v4 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104);

  return v4(a1, v2, v3);
}

uint64_t sub_1C1FE2F48()
{
  return sub_1C1FE2F94((unint64_t *)&unk_1EA2C4D58, 255, (void (*)(uint64_t))type metadata accessor for DurationDatePickerItem);
}

uint64_t sub_1C1FE2F94(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C1FE2FDC()
{
  return sub_1C2148480();
}

uint64_t sub_1C1FE3050@<X0>(unsigned char *a1@<X8>)
{
  *a1 = 1;
  uint64_t v2 = *MEMORY[0x1E4F66478];
  uint64_t v3 = sub_1C2148620();
  id v4 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104);

  return v4(a1, v2, v3);
}

uint64_t sub_1C1FE30CC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = (uint64_t *)(a1 + *(int *)(type metadata accessor for DurationDatePickerItem() + 40));
  uint64_t v4 = *v3;
  if (*v3) {
    uint64_t v5 = v3[1];
  }
  else {
    uint64_t v5 = 0;
  }
  *a2 = v4;
  a2[1] = v5;

  return sub_1C1F1325C(v4);
}

uint64_t sub_1C1FE3134@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC19HealthMedicationsUI36DurationDatePickerCollectionViewCell_item;
  swift_beginAccess();
  return sub_1C1F2116C(v3, a2);
}

void *initializeBufferWithCopyOfBuffer for DurationDatePickerItem(void *a1, void *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v29 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v29 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a3[5];
    id v9 = (char *)a1 + v8;
    id v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1C2147B20();
    id v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = a3[6];
    uint64_t v14 = a3[7];
    id v15 = (void *)((char *)v4 + v13);
    id v16 = (void *)((char *)a2 + v13);
    uint64_t v17 = v16[1];
    void *v15 = *v16;
    v15[1] = v17;
    id v18 = (void *)((char *)v4 + v14);
    id v19 = (void *)((char *)a2 + v14);
    uint64_t v20 = v19[1];
    void *v18 = *v19;
    v18[1] = v20;
    uint64_t v21 = a3[9];
    *(void *)((char *)v4 + a3[8]) = *(void *)((char *)a2 + a3[8]);
    uint64_t v46 = (char *)v4 + v21;
    id v22 = (char *)a2 + v21;
    uint64_t v23 = sub_1C21499D0();
    id v24 = *(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v24(v46, v22, v23);
    uint64_t v25 = a3[10];
    id v26 = (void *)((char *)v4 + v25);
    id v27 = (void *)((char *)a2 + v25);
    if (*v27)
    {
      uint64_t v28 = v27[1];
      *id v26 = *v27;
      v26[1] = v28;
      swift_retain();
    }
    else
    {
      *(_OWORD *)id v26 = *(_OWORD *)v27;
    }
    uint64_t v30 = a3[11];
    id v31 = (void *)((char *)v4 + v30);
    id v32 = (void *)((char *)a2 + v30);
    if (*v32)
    {
      uint64_t v33 = v32[1];
      *id v31 = *v32;
      v31[1] = v33;
      swift_retain();
    }
    else
    {
      *(_OWORD *)id v31 = *(_OWORD *)v32;
    }
    uint64_t v34 = a3[12];
    id v35 = (void *)((char *)v4 + v34);
    id v36 = (void *)((char *)a2 + v34);
    if (*v36)
    {
      uint64_t v37 = v36[1];
      *id v35 = *v36;
      v35[1] = v37;
      swift_retain();
    }
    else
    {
      *(_OWORD *)id v35 = *(_OWORD *)v36;
    }
    uint64_t v38 = a3[14];
    *((unsigned char *)v4 + a3[13]) = *((unsigned char *)a2 + a3[13]);
    *(void *)((char *)v4 + v38) = *(void *)((char *)a2 + v38);
    uint64_t v39 = a3[16];
    *(void *)((char *)v4 + a3[15]) = *(void *)((char *)a2 + a3[15]);
    uint64_t v40 = (char *)v4 + v39;
    uint64_t v41 = (char *)a2 + v39;
    uint64_t v42 = sub_1C2147AC0();
    uint64_t v43 = *(void *)(v42 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(v41, 1, v42))
    {
      sub_1C1F1724C(0, &qword_1EBF0B1F0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
      memcpy(v40, v41, *(void *)(*(void *)(v44 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v43 + 16))(v40, v41, v42);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v43 + 56))(v40, 0, 1, v42);
    }
  }
  return v4;
}

uint64_t destroy for DurationDatePickerItem(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = sub_1C2147B20();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v6 = a1 + a2[9];
  uint64_t v7 = sub_1C21499D0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  if (*(void *)(a1 + a2[10])) {
    swift_release();
  }
  if (*(void *)(a1 + a2[11])) {
    swift_release();
  }
  if (*(void *)(a1 + a2[12])) {
    swift_release();
  }
  uint64_t v8 = a1 + a2[16];
  uint64_t v9 = sub_1C2147AC0();
  uint64_t v12 = *(void *)(v9 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v8, 1, v9);
  if (!result)
  {
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(v12 + 8);
    return v11(v8, v9);
  }
  return result;
}

void *initializeWithCopy for DurationDatePickerItem(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1C2147B20();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  uint64_t v12 = a3[6];
  uint64_t v13 = a3[7];
  uint64_t v14 = (void *)((char *)a1 + v12);
  id v15 = (void *)((char *)a2 + v12);
  uint64_t v16 = v15[1];
  *uint64_t v14 = *v15;
  v14[1] = v16;
  uint64_t v17 = (void *)((char *)a1 + v13);
  id v18 = (void *)((char *)a2 + v13);
  uint64_t v19 = v18[1];
  *uint64_t v17 = *v18;
  v17[1] = v19;
  uint64_t v20 = a3[9];
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  uint64_t v44 = (char *)a1 + v20;
  uint64_t v21 = (char *)a2 + v20;
  uint64_t v22 = sub_1C21499D0();
  uint64_t v23 = *(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v23(v44, v21, v22);
  uint64_t v24 = a3[10];
  uint64_t v25 = (void *)((char *)a1 + v24);
  id v26 = (void *)((char *)a2 + v24);
  if (*v26)
  {
    uint64_t v27 = v26[1];
    *uint64_t v25 = *v26;
    v25[1] = v27;
    swift_retain();
  }
  else
  {
    *(_OWORD *)uint64_t v25 = *(_OWORD *)v26;
  }
  uint64_t v28 = a3[11];
  uint64_t v29 = (void *)((char *)a1 + v28);
  uint64_t v30 = (void *)((char *)a2 + v28);
  if (*v30)
  {
    uint64_t v31 = v30[1];
    *uint64_t v29 = *v30;
    v29[1] = v31;
    swift_retain();
  }
  else
  {
    *(_OWORD *)uint64_t v29 = *(_OWORD *)v30;
  }
  uint64_t v32 = a3[12];
  uint64_t v33 = (void *)((char *)a1 + v32);
  uint64_t v34 = (void *)((char *)a2 + v32);
  if (*v34)
  {
    uint64_t v35 = v34[1];
    *uint64_t v33 = *v34;
    v33[1] = v35;
    swift_retain();
  }
  else
  {
    *(_OWORD *)uint64_t v33 = *(_OWORD *)v34;
  }
  uint64_t v36 = a3[14];
  *((unsigned char *)a1 + a3[13]) = *((unsigned char *)a2 + a3[13]);
  *(void *)((char *)a1 + v36) = *(void *)((char *)a2 + v36);
  uint64_t v37 = a3[16];
  *(void *)((char *)a1 + a3[15]) = *(void *)((char *)a2 + a3[15]);
  uint64_t v38 = (char *)a1 + v37;
  uint64_t v39 = (char *)a2 + v37;
  uint64_t v40 = sub_1C2147AC0();
  uint64_t v41 = *(void *)(v40 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v39, 1, v40))
  {
    sub_1C1F1724C(0, &qword_1EBF0B1F0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
    memcpy(v38, v39, *(void *)(*(void *)(v42 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v38, v39, v40);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v40);
  }
  return a1;
}

void *assignWithCopy for DurationDatePickerItem(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1C2147B20();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = (void *)((char *)a1 + v10);
  uint64_t v12 = (void *)((char *)a2 + v10);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v13 = a3[7];
  uint64_t v14 = (void *)((char *)a1 + v13);
  id v15 = (void *)((char *)a2 + v13);
  *uint64_t v14 = *v15;
  v14[1] = v15[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v16 = a3[9];
  uint64_t v17 = (char *)a1 + v16;
  id v18 = (char *)a2 + v16;
  uint64_t v19 = sub_1C21499D0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 24))(v17, v18, v19);
  uint64_t v20 = a3[10];
  uint64_t v21 = (void *)((char *)a1 + v20);
  uint64_t v22 = (char *)a2 + v20;
  uint64_t v23 = *(void *)((char *)a1 + v20);
  uint64_t v24 = *(void *)((char *)a2 + v20);
  if (v23)
  {
    if (v24)
    {
      uint64_t v25 = *((void *)v22 + 1);
      *uint64_t v21 = v24;
      v21[1] = v25;
      swift_retain();
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v24)
  {
    uint64_t v26 = *((void *)v22 + 1);
    *uint64_t v21 = v24;
    v21[1] = v26;
    swift_retain();
    goto LABEL_8;
  }
  *(_OWORD *)uint64_t v21 = *(_OWORD *)v22;
LABEL_8:
  uint64_t v27 = a3[11];
  uint64_t v28 = (void *)((char *)a1 + v27);
  uint64_t v29 = (char *)a2 + v27;
  uint64_t v30 = *(void *)((char *)a1 + v27);
  uint64_t v31 = *(void *)((char *)a2 + v27);
  if (v30)
  {
    if (v31)
    {
      uint64_t v32 = *((void *)v29 + 1);
      *uint64_t v28 = v31;
      v28[1] = v32;
      swift_retain();
      swift_release();
      goto LABEL_15;
    }
    swift_release();
  }
  else if (v31)
  {
    uint64_t v33 = *((void *)v29 + 1);
    *uint64_t v28 = v31;
    v28[1] = v33;
    swift_retain();
    goto LABEL_15;
  }
  *(_OWORD *)uint64_t v28 = *(_OWORD *)v29;
LABEL_15:
  uint64_t v34 = a3[12];
  uint64_t v35 = (void *)((char *)a1 + v34);
  uint64_t v36 = (char *)a2 + v34;
  uint64_t v37 = *(void *)((char *)a1 + v34);
  uint64_t v38 = *(void *)((char *)a2 + v34);
  if (v37)
  {
    if (v38)
    {
      uint64_t v39 = *((void *)v36 + 1);
      *uint64_t v35 = v38;
      v35[1] = v39;
      swift_retain();
      swift_release();
      goto LABEL_22;
    }
    swift_release();
  }
  else if (v38)
  {
    uint64_t v40 = *((void *)v36 + 1);
    *uint64_t v35 = v38;
    v35[1] = v40;
    swift_retain();
    goto LABEL_22;
  }
  *(_OWORD *)uint64_t v35 = *(_OWORD *)v36;
LABEL_22:
  *((unsigned char *)a1 + a3[13]) = *((unsigned char *)a2 + a3[13]);
  *(void *)((char *)a1 + a3[14]) = *(void *)((char *)a2 + a3[14]);
  *(void *)((char *)a1 + a3[15]) = *(void *)((char *)a2 + a3[15]);
  uint64_t v41 = a3[16];
  uint64_t v42 = (char *)a1 + v41;
  uint64_t v43 = (char *)a2 + v41;
  uint64_t v44 = sub_1C2147AC0();
  uint64_t v45 = *(void *)(v44 - 8);
  uint64_t v46 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v45 + 48);
  int v47 = v46(v42, 1, v44);
  int v48 = v46(v43, 1, v44);
  if (!v47)
  {
    if (!v48)
    {
      (*(void (**)(char *, char *, uint64_t))(v45 + 24))(v42, v43, v44);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v45 + 8))(v42, v44);
    goto LABEL_27;
  }
  if (v48)
  {
LABEL_27:
    sub_1C1F1724C(0, &qword_1EBF0B1F0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
    memcpy(v42, v43, *(void *)(*(void *)(v49 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v45 + 16))(v42, v43, v44);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v45 + 56))(v42, 0, 1, v44);
  return a1;
}

_OWORD *initializeWithTake for DurationDatePickerItem(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1C2147B20();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[7];
  *(_OWORD *)((char *)a1 + a3[6]) = *(_OWORD *)((char *)a2 + a3[6]);
  *(_OWORD *)((char *)a1 + v10) = *(_OWORD *)((char *)a2 + v10);
  uint64_t v11 = a3[9];
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = sub_1C21499D0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[10];
  uint64_t v16 = (void *)((char *)a1 + v15);
  uint64_t v17 = (uint64_t *)((char *)a2 + v15);
  uint64_t v18 = *v17;
  if (*v17)
  {
    uint64_t v19 = v17[1];
    void *v16 = v18;
    v16[1] = v19;
  }
  else
  {
    *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
  }
  uint64_t v20 = a3[11];
  uint64_t v21 = (void *)((char *)a1 + v20);
  uint64_t v22 = (uint64_t *)((char *)a2 + v20);
  uint64_t v23 = *v22;
  if (*v22)
  {
    uint64_t v24 = v22[1];
    *uint64_t v21 = v23;
    v21[1] = v24;
  }
  else
  {
    *(_OWORD *)uint64_t v21 = *(_OWORD *)v22;
  }
  uint64_t v25 = a3[12];
  uint64_t v26 = (void *)((char *)a1 + v25);
  uint64_t v27 = (uint64_t *)((char *)a2 + v25);
  uint64_t v28 = *v27;
  if (*v27)
  {
    uint64_t v29 = v27[1];
    *uint64_t v26 = v28;
    v26[1] = v29;
  }
  else
  {
    *(_OWORD *)uint64_t v26 = *(_OWORD *)v27;
  }
  uint64_t v30 = a3[14];
  *((unsigned char *)a1 + a3[13]) = *((unsigned char *)a2 + a3[13]);
  *(void *)((char *)a1 + v30) = *(void *)((char *)a2 + v30);
  uint64_t v31 = a3[16];
  *(void *)((char *)a1 + a3[15]) = *(void *)((char *)a2 + a3[15]);
  uint64_t v32 = (char *)a1 + v31;
  uint64_t v33 = (char *)a2 + v31;
  uint64_t v34 = sub_1C2147AC0();
  uint64_t v35 = *(void *)(v34 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34))
  {
    sub_1C1F1724C(0, &qword_1EBF0B1F0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
    memcpy(v32, v33, *(void *)(*(void *)(v36 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v32, v33, v34);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
  }
  return a1;
}

void *assignWithTake for DurationDatePickerItem(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1C2147B20();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = (void *)((char *)a1 + v11);
  uint64_t v13 = (void *)((char *)a2 + v11);
  uint64_t v15 = *v13;
  uint64_t v14 = v13[1];
  *uint64_t v12 = v15;
  v12[1] = v14;
  swift_bridgeObjectRelease();
  uint64_t v16 = a3[7];
  uint64_t v17 = (void *)((char *)a1 + v16);
  uint64_t v18 = (void *)((char *)a2 + v16);
  uint64_t v20 = *v18;
  uint64_t v19 = v18[1];
  *uint64_t v17 = v20;
  v17[1] = v19;
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  swift_bridgeObjectRelease();
  uint64_t v21 = a3[9];
  uint64_t v22 = (char *)a1 + v21;
  uint64_t v23 = (char *)a2 + v21;
  uint64_t v24 = sub_1C21499D0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 40))(v22, v23, v24);
  uint64_t v25 = a3[10];
  uint64_t v26 = (void *)((char *)a1 + v25);
  uint64_t v27 = (char *)a2 + v25;
  uint64_t v28 = *(void *)((char *)a1 + v25);
  uint64_t v29 = *(void *)((char *)a2 + v25);
  if (v28)
  {
    if (v29)
    {
      uint64_t v30 = *((void *)v27 + 1);
      *uint64_t v26 = v29;
      v26[1] = v30;
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v29)
  {
    uint64_t v31 = *((void *)v27 + 1);
    *uint64_t v26 = v29;
    v26[1] = v31;
    goto LABEL_8;
  }
  *(_OWORD *)uint64_t v26 = *(_OWORD *)v27;
LABEL_8:
  uint64_t v32 = a3[11];
  uint64_t v33 = (void *)((char *)a1 + v32);
  uint64_t v34 = (char *)a2 + v32;
  uint64_t v35 = *(void *)((char *)a1 + v32);
  uint64_t v36 = *(void *)((char *)a2 + v32);
  if (v35)
  {
    if (v36)
    {
      uint64_t v37 = *((void *)v34 + 1);
      *uint64_t v33 = v36;
      v33[1] = v37;
      swift_release();
      goto LABEL_15;
    }
    swift_release();
  }
  else if (v36)
  {
    uint64_t v38 = *((void *)v34 + 1);
    *uint64_t v33 = v36;
    v33[1] = v38;
    goto LABEL_15;
  }
  *(_OWORD *)uint64_t v33 = *(_OWORD *)v34;
LABEL_15:
  uint64_t v39 = a3[12];
  uint64_t v40 = (void *)((char *)a1 + v39);
  uint64_t v41 = (char *)a2 + v39;
  uint64_t v42 = *(void *)((char *)a1 + v39);
  uint64_t v43 = *(void *)((char *)a2 + v39);
  if (v42)
  {
    if (v43)
    {
      uint64_t v44 = *((void *)v41 + 1);
      *uint64_t v40 = v43;
      v40[1] = v44;
      swift_release();
      goto LABEL_22;
    }
    swift_release();
  }
  else if (v43)
  {
    uint64_t v45 = *((void *)v41 + 1);
    *uint64_t v40 = v43;
    v40[1] = v45;
    goto LABEL_22;
  }
  *(_OWORD *)uint64_t v40 = *(_OWORD *)v41;
LABEL_22:
  uint64_t v46 = a3[14];
  *((unsigned char *)a1 + a3[13]) = *((unsigned char *)a2 + a3[13]);
  *(void *)((char *)a1 + v46) = *(void *)((char *)a2 + v46);
  uint64_t v47 = a3[16];
  *(void *)((char *)a1 + a3[15]) = *(void *)((char *)a2 + a3[15]);
  int v48 = (char *)a1 + v47;
  uint64_t v49 = (char *)a2 + v47;
  uint64_t v50 = sub_1C2147AC0();
  uint64_t v51 = *(void *)(v50 - 8);
  id v52 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v51 + 48);
  int v53 = v52(v48, 1, v50);
  int v54 = v52(v49, 1, v50);
  if (!v53)
  {
    if (!v54)
    {
      (*(void (**)(char *, char *, uint64_t))(v51 + 40))(v48, v49, v50);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v51 + 8))(v48, v50);
    goto LABEL_27;
  }
  if (v54)
  {
LABEL_27:
    sub_1C1F1724C(0, &qword_1EBF0B1F0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
    memcpy(v48, v49, *(void *)(*(void *)(v55 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v51 + 32))(v48, v49, v50);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v51 + 56))(v48, 0, 1, v50);
  return a1;
}

uint64_t getEnumTagSinglePayload for DurationDatePickerItem(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C1FE43CC);
}

uint64_t sub_1C1FE43CC(uint64_t a1, uint64_t a2, int *a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  uint64_t v8 = sub_1C2147B20();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a2)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a3[5];
LABEL_9:
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
    return v13(a1 + v11, a2, v9);
  }
  uint64_t v12 = sub_1C21499D0();
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a2)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a3[9];
    goto LABEL_9;
  }
  sub_1C1F1724C(0, &qword_1EBF0B1F0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  uint64_t v16 = v14;
  uint64_t v17 = a1 + a3[16];

  return v15(v17, a2, v16);
}

uint64_t storeEnumTagSinglePayload for DurationDatePickerItem(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C1FE4588);
}

uint64_t sub_1C1FE4588(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
    return result;
  }
  uint64_t v8 = sub_1C2147B20();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[5];
LABEL_7:
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    return v13(v5 + v11, a2, a2, v9);
  }
  uint64_t v12 = sub_1C21499D0();
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a3)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a4[9];
    goto LABEL_7;
  }
  sub_1C1F1724C(0, &qword_1EBF0B1F0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  uint64_t v16 = v14;
  uint64_t v17 = v5 + a4[16];

  return v15(v17, a2, a2, v16);
}

void sub_1C1FE4730()
{
  sub_1C2147B20();
  if (v0 <= 0x3F)
  {
    sub_1C21499D0();
    if (v1 <= 0x3F)
    {
      sub_1C1F1724C(319, &qword_1EBF0B1F0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

uint64_t method lookup function for DurationDatePickerCollectionViewCell(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for DurationDatePickerCollectionViewCell);
}

uint64_t dispatch thunk of DurationDatePickerCollectionViewCell.item.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of DurationDatePickerCollectionViewCell.item.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of DurationDatePickerCollectionViewCell.item.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of DurationDatePickerCollectionViewCell.itemUpdated()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xC0))();
}

uint64_t sub_1C1FE4998()
{
  swift_unknownObjectWeakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

void sub_1C1FE49D0(void *a1, void *a2)
{
  sub_1C1FE13D4(a1, a2, v2);
}

uint64_t sub_1C1FE49D8()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C1FE4A10()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1C1FE4A38()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t type metadata accessor for MedicationSourceListViewController()
{
  uint64_t result = qword_1EA2C4D88;
  if (!qword_1EA2C4D88) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C1FE4AC0()
{
  return swift_initClassMetadata2();
}

id sub_1C1FE4B1C(void *a1, void *a2)
{
  type metadata accessor for MedicationSourceListDataSource();
  swift_allocObject();
  uint64_t v5 = v2;
  id v6 = a2;
  id v7 = a1;
  uint64_t v8 = sub_1C206CEFC(v6, v7, 0);
  uint64_t v9 = qword_1EA2C4D78;
  *(void *)&v5[qword_1EA2C4D78] = v8;
  *(void *)&v5[qword_1EA2C4D80] = v6;
  id v10 = v6;

  sub_1C2148820();
  sub_1C1F24848();
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1C214FCD0;
  uint64_t v12 = MEMORY[0x1E4F66470];
  *(void *)(v11 + 32) = *(void *)&v5[v9];
  *(void *)(v11 + 40) = v12;
  swift_retain();
  sub_1C2148850();
  id v13 = (id)sub_1C2148AC0();
  objc_msgSend(v13, sel_setModalPresentationStyle_, 2);

  return v13;
}

void sub_1C1FE4C3C()
{
}

void sub_1C1FE4C98()
{
  v5.receiver = v0;
  v5.super_class = (Class)type metadata accessor for MedicationSourceListViewController();
  objc_msgSendSuper2(&v5, sel_viewDidLoad);
  id v1 = objc_msgSend(v0, sel_collectionView);
  if (v1)
  {
    uint64_t v2 = v1;
    objc_msgSend(v1, sel_setPreservesSuperviewLayoutMargins_, 1);

    if (qword_1EBF0CA00 != -1) {
      swift_once();
    }
    id v3 = (id)qword_1EBF0CA18;
    swift_bridgeObjectRetain();
    sub_1C2147730();
    swift_bridgeObjectRelease();

    unint64_t v4 = (void *)sub_1C214A5B0();
    swift_bridgeObjectRelease();
    objc_msgSend(v0, sel_setTitle_, v4, 0xE000000000000000);
  }
  else
  {
    __break(1u);
  }
}

void sub_1C1FE4DF0(void *a1)
{
  id v1 = a1;
  sub_1C1FE4C98();
}

void sub_1C1FE4E38()
{
}

void sub_1C1FE4E68(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = a3;
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_1C1FE4E9C()
{
  swift_release();
  id v1 = *(void **)(v0 + qword_1EA2C4D80);
}

id sub_1C1FE4EDC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MedicationSourceListViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1C1FE4F14(uint64_t a1)
{
  swift_release();
  objc_super v2 = *(void **)(a1 + qword_1EA2C4D80);
}

uint64_t sub_1C1FE4F60()
{
  return type metadata accessor for MedicationSourceListViewController();
}

void sub_1C1FE4F68()
{
  objc_msgSend(v0, sel_setModalPresentationStyle_, 2);
  id v1 = objc_msgSend(v0, sel_navigationItem);
  sub_1C1F12718(0, (unint64_t *)&qword_1EA2C3508);
  sub_1C1F12718(0, &qword_1EA2C3198);
  uint64_t v2 = swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1C214B250();
  id v3 = (id)sub_1C214AC50();
  objc_msgSend(v1, sel_setRightBarButtonItem_, v3, 0, 0, 0, sub_1C1F65CB0, v2);
}

void sub_1C1FE50B0(void *a1)
{
  id v1 = a1;
  sub_1C1FE4F68();
}

void sub_1C1FE50F8(void *a1)
{
  id v1 = a1;
  id v2 = objc_msgSend(v1, sel_navigationItem);
  objc_msgSend(v2, sel_setRightBarButtonItem_, 0);
}

uint64_t sub_1C1FE5164()
{
  swift_unknownObjectWeakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t MedicationRegularEducationDataSource.__allocating_init(with:analyticsManager:)(uint64_t a1, uint64_t a2)
{
  return MedicationRegularEducationDataSource.init(with:analyticsManager:)(a1, a2);
}

uint64_t MedicationRegularEducationDataSource.init(with:analyticsManager:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = qword_1EA2C4D98;
  *(void *)(v2 + qword_1EA2C4D98) = 0;
  *(void *)(v2 + qword_1EA2C4DA0) = MEMORY[0x1E4FBC870];
  *(void *)(v2 + qword_1EA2C4DA8) = a2;
  *(void *)(v2 + v4) = a1;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_release();
  if (qword_1EBF0CA00 != -1) {
    swift_once();
  }
  id v5 = (id)qword_1EBF0CA18;
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_1C2147730();
  uint64_t v8 = v7;
  swift_bridgeObjectRelease();

  uint64_t v9 = (uint64_t *)(v2 + qword_1EA2C4DB0);
  *uint64_t v9 = v6;
  v9[1] = v8;
  swift_release();
  uint64_t v10 = sub_1C2147F50();
  swift_retain();
  sub_1C1FE5428(a1);
  sub_1C2149E90();
  sub_1C1FE63C4(v12, v10);

  swift_release();
  swift_release();
  swift_release();
  return v10;
}

uint64_t MedicationRegularEducationDataSource.__allocating_init(with:analyticsManager:)(void *a1, uint64_t a2)
{
  swift_allocObject();
  uint64_t v4 = sub_1C1FE732C(a1, a2);
  swift_release();
  return v4;
}

uint64_t MedicationRegularEducationDataSource.init(with:analyticsManager:)(void *a1, uint64_t a2)
{
  uint64_t v2 = sub_1C1FE732C(a1, a2);
  swift_release();
  return v2;
}

uint64_t sub_1C1FE5428(uint64_t a1)
{
  uint64_t v2 = (void (*)(uint64_t))MEMORY[0x1E4FBCC28];
  sub_1C1FE7744(0, &qword_1EBF0C7E8, MEMORY[0x1E4FBCC28]);
  MEMORY[0x1F4188790](v3 - 8);
  id v5 = (char *)v15 - v4;
  sub_1C1FE7870();
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15[2] = a1;
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0CB10);
  id v16 = (id)sub_1C214AD80();
  uint64_t v11 = sub_1C214AD20();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v5, 1, 1, v11);
  sub_1C1F4986C();
  sub_1C1FE7508(&qword_1EA2C35A0, (void (*)(uint64_t))sub_1C1F4986C);
  sub_1C1F43FD4();
  sub_1C214A0A0();
  sub_1C1FE793C((uint64_t)v5, &qword_1EBF0C7E8, v2);

  uint64_t v12 = swift_allocObject();
  swift_weakInit();
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = v12;
  *(void *)(v13 + 24) = a1;
  sub_1C1FE7508((unint64_t *)&unk_1EA2C4DF0, (void (*)(uint64_t))sub_1C1FE7870);
  swift_retain();
  sub_1C214A0F0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  swift_beginAccess();
  sub_1C2149E20();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1C1FE5748()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = result;
    sub_1C2149E90();
    sub_1C1FE63C4(v2, v1);

    return swift_release();
  }
  return result;
}

uint64_t sub_1C1FE57BC(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_1C2148710();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x1F4188790](v7);
  uint64_t v12 = (char *)v26 - v11;
  MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)v26 - v13;
  if (a1) {
    sub_1C2148690();
  }
  else {
    sub_1C2148660();
  }
  uint64_t v15 = (void (*)(void *, void))sub_1C21486D0();
  *(void *)(v16 + 16) = 0x4024000000000000;
  v15(v29, 0);
  if (*(void *)(v2 + qword_1EA2C4D98))
  {
    v26[1] = a2;
    uint64_t v30 = sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8C0);
    uint64_t v31 = &protocol witness table for HKMedicationUserDomainConcept;
    swift_retain();
    sub_1C2149E90();
    uint64_t v17 = v30;
    uint64_t v18 = v31;
    __swift_project_boxed_opaque_existential_0(v29, v30);
    ((void (*)(void *__return_ptr, uint64_t, _UNKNOWN **))v18[6])(v27, v17, v18);
    if (v28)
    {
      __swift_project_boxed_opaque_existential_0(v27, v28);
      char v19 = sub_1C2147F90();
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v27);
      if (v19)
      {
        if (a1)
        {
          if (a1 == 1)
          {
            uint64_t v20 = (void (*)(void *, void))sub_1C21486D0();
            *uint64_t v21 = 0x4024000000000000;
            v20(v27, 0);
          }
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v12, v14, v5);
          sub_1C2148650();
          uint64_t v22 = *(void (**)(char *, uint64_t))(v6 + 8);
          v22(v12, v5);
          v22(v14, v5);
          (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v14, v9, v5);
        }
      }
    }
    else
    {
      sub_1C1FE7798((uint64_t)v27, (unint64_t *)&qword_1EA2C4DB8, (unint64_t *)&qword_1EA2C4DC0, MEMORY[0x1E4F67820]);
    }
    swift_release();
    sub_1C1FE74B4((uint64_t)v29);
  }
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v12, v14, v5);
  uint64_t v23 = sub_1C2148700();
  uint64_t v24 = *(void (**)(char *, uint64_t))(v6 + 8);
  v24(v12, v5);
  v24(v14, v5);
  return v23;
}

void MedicationRegularEducationDataSource.__allocating_init(arrangedSections:isHidden:)()
{
}

void MedicationRegularEducationDataSource.init(arrangedSections:isHidden:)()
{
}

uint64_t sub_1C1FE5B84()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t MedicationRegularEducationDataSource.deinit()
{
  uint64_t v0 = _s19HealthMedicationsUI34InteractionSeperatorLineDataSourceCfd_0();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t MedicationRegularEducationDataSource.__deallocating_deinit()
{
  _s19HealthMedicationsUI34InteractionSeperatorLineDataSourceCfd_0();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_1C1FE5CD8(uint64_t a1, uint64_t a2)
{
  return sub_1C1FE57BC(a1, a2);
}

uint64_t sub_1C1FE5CFC()
{
  return sub_1C2148B80();
}

Swift::Void __swiftcall MedicationRegularEducationDataSource.registerCells(for:)(UICollectionView *a1)
{
}

uint64_t sub_1C1FE5E10()
{
  return sub_1C214ACC0();
}

uint64_t MedicationRegularEducationDataSource.supplementaryItem(ofKind:at:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v7 = sub_1C2147B20();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1C2149BE0();
  MEMORY[0x1F4188790](v11 - 8);
  if (sub_1C214A5F0() == a1 && v12 == a2)
  {
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  char v14 = sub_1C214BA80();
  swift_bridgeObjectRelease();
  if (v14)
  {
LABEL_13:
    swift_bridgeObjectRetain();
    sub_1C2149B50();
    uint64_t v18 = sub_1C2148180();
    swift_allocObject();
    uint64_t v19 = sub_1C2148170();
    a3[3] = v18;
    uint64_t result = sub_1C1FE7508((unint64_t *)&qword_1EA2C3550, MEMORY[0x1E4F66208]);
    a3[4] = result;
    *a3 = v19;
    return result;
  }
  if (sub_1C214A5F0() == a1 && v15 == a2)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v17 = sub_1C214BA80();
    swift_bridgeObjectRelease();
    if ((v17 & 1) == 0) {
      goto LABEL_20;
    }
  }
  if (!*(void *)(v3 + qword_1EA2C4D98))
  {
LABEL_20:
    a3[3] = sub_1C2148220();
    a3[4] = sub_1C1FE7508(&qword_1EA2C2D28, MEMORY[0x1E4F66330]);
    __swift_allocate_boxed_opaque_existential_1(a3);
    return sub_1C2148210();
  }
  swift_retain();
  sub_1C2149E90();
  id v21 = (id)v27;
  id v22 = objc_msgSend((id)v27, sel_localizedOntologyEducationContent);
  if (v22
    && (uint64_t v23 = v22,
        id v24 = objc_msgSend(v22, sel_primarySection),
        v23,
        v24))
  {
    uint64_t v25 = sub_1C214B060();

    uint64_t v29 = v25;
    sub_1C1FE7550();
    sub_1C1FE7508((unint64_t *)&qword_1EA2C44D0, (void (*)(uint64_t))sub_1C1FE7550);
    sub_1C214A580();

    swift_bridgeObjectRelease();
    uint64_t v27 = 0x74497265746F6F46;
    unint64_t v28 = 0xEB000000005F6D65;
    sub_1C2147B10();
    sub_1C2147AD0();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    sub_1C214A6C0();
    swift_bridgeObjectRelease();
    a3[3] = sub_1C2148960();
    a3[4] = sub_1C1FE7508(&qword_1EA2C2D38, MEMORY[0x1E4F665E8]);
    __swift_allocate_boxed_opaque_existential_1(a3);
    sub_1C2148950();
  }
  else
  {

    a3[3] = sub_1C2148220();
    a3[4] = sub_1C1FE7508(&qword_1EA2C2D28, MEMORY[0x1E4F66330]);
    __swift_allocate_boxed_opaque_existential_1(a3);
    sub_1C2148210();
  }
  return swift_release();
}

uint64_t sub_1C1FE63A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return MedicationRegularEducationDataSource.supplementaryItem(ofKind:at:)(a1, a2, a3);
}

uint64_t sub_1C1FE63C4(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_1C2147B20();
  uint64_t v42 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1FE7744(0, &qword_1EA2C4DE0, MEMORY[0x1E4F66468]);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v37 - v8;
  uint64_t v10 = sub_1C2148540();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  uint64_t v40 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  uint64_t v41 = (char *)&v37 - v15;
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  uint64_t v18 = (char *)&v37 - v17;
  MEMORY[0x1F4188790](v16);
  uint64_t v20 = (char *)&v37 - v19;
  v49[3] = sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8C0);
  unsigned char v49[4] = &protocol witness table for HKMedicationUserDomainConcept;
  v49[0] = a1;
  sub_1C1F236D8((uint64_t)v49, (uint64_t)v48);
  id v21 = a1;
  sub_1C20E0210((uint64_t)v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_1C1FE793C((uint64_t)v9, &qword_1EA2C4DE0, MEMORY[0x1E4F66468]);
    unint64_t v22 = MEMORY[0x1E4FBC860];
  }
  else
  {
    uint64_t v38 = v4;
    uint64_t v39 = a2;
    uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
    v23(v20, v9, v10);
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v18, v20, v10);
    unint64_t v22 = sub_1C1F3AD2C(0, 1, 1, MEMORY[0x1E4FBC860]);
    unint64_t v25 = *(void *)(v22 + 16);
    unint64_t v24 = *(void *)(v22 + 24);
    if (v25 >= v24 >> 1) {
      unint64_t v22 = sub_1C1F3AD2C(v24 > 1, v25 + 1, 1, v22);
    }
    *(void *)(v22 + 16) = v25 + 1;
    v23((char *)(v22+ ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))+ *(void *)(v11 + 72) * v25), v18, v10);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v20, v10);
    a2 = v39;
    uint64_t v4 = v38;
  }
  sub_1C20E0494(2, (uint64_t)&v45);
  if (v46)
  {
    sub_1C1F31280(&v45, (uint64_t)v47);
    uint64_t v26 = *(void *)(a2 + qword_1EA2C4DA8);
    LOBYTE(v45) = 0;
    sub_1C20E122C(&v45, v26, (uint64_t)&v43);
    if (v44)
    {
      sub_1C1F31280(&v43, (uint64_t)&v45);
    }
    else
    {
      sub_1C1FE7798((uint64_t)&v43, (unint64_t *)&qword_1EBF0C300, (unint64_t *)&qword_1EBF0C2F0, MEMORY[0x1E4F66028]);
      sub_1C20E0DB0((uint64_t *)&v45);
    }
    sub_1C1FE7808(0, (unint64_t *)&qword_1EBF0C958, (unint64_t *)&qword_1EBF0C2F0, MEMORY[0x1E4F66028], MEMORY[0x1E4FBBE00]);
    uint64_t v28 = swift_allocObject();
    *(_OWORD *)(v28 + 16) = xmmword_1C214FCC0;
    sub_1C1F236D8((uint64_t)v47, v28 + 32);
    sub_1C1F236D8((uint64_t)&v45, v28 + 72);
    sub_1C2147B10();
    sub_1C2147AD0();
    (*(void (**)(char *, uint64_t))(v42 + 8))(v6, v4);
    uint64_t v29 = v41;
    sub_1C2148520();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v22 = sub_1C1F3AD2C(0, *(void *)(v22 + 16) + 1, 1, v22);
    }
    unint64_t v31 = *(void *)(v22 + 16);
    unint64_t v30 = *(void *)(v22 + 24);
    if (v31 >= v30 >> 1) {
      unint64_t v22 = sub_1C1F3AD2C(v30 > 1, v31 + 1, 1, v22);
    }
    *(void *)(v22 + 16) = v31 + 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v22+ ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))+ *(void *)(v11 + 72) * v31, v29, v10);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)&v45);
  }
  else
  {
    sub_1C1FE7798((uint64_t)&v45, (unint64_t *)&qword_1EBF0C300, (unint64_t *)&qword_1EBF0C2F0, MEMORY[0x1E4F66028]);
    uint64_t v27 = *(void *)(a2 + qword_1EA2C4DA8);
    LOBYTE(v47[0]) = 0;
    sub_1C20E122C(v47, v27, (uint64_t)&v45);
    if (v46)
    {
      sub_1C1F31280(&v45, (uint64_t)v47);
    }
    else
    {
      sub_1C1FE7798((uint64_t)&v45, (unint64_t *)&qword_1EBF0C300, (unint64_t *)&qword_1EBF0C2F0, MEMORY[0x1E4F66028]);
      sub_1C20E0DB0(v47);
    }
    sub_1C1FE7808(0, (unint64_t *)&qword_1EBF0C958, (unint64_t *)&qword_1EBF0C2F0, MEMORY[0x1E4F66028], MEMORY[0x1E4FBBE00]);
    uint64_t v32 = swift_allocObject();
    *(_OWORD *)(v32 + 16) = xmmword_1C214FCD0;
    sub_1C1F236D8((uint64_t)v47, v32 + 32);
    sub_1C2147B10();
    sub_1C2147AD0();
    (*(void (**)(char *, uint64_t))(v42 + 8))(v6, v4);
    uint64_t v33 = v40;
    sub_1C2148520();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v22 = sub_1C1F3AD2C(0, *(void *)(v22 + 16) + 1, 1, v22);
    }
    unint64_t v35 = *(void *)(v22 + 16);
    unint64_t v34 = *(void *)(v22 + 24);
    if (v35 >= v34 >> 1) {
      unint64_t v22 = sub_1C1F3AD2C(v34 > 1, v35 + 1, 1, v22);
    }
    *(void *)(v22 + 16) = v35 + 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v22+ ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))+ *(void *)(v11 + 72) * v35, v33, v10);
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v47);
  sub_1C2147F40();
  sub_1C21482F0();
  swift_release();
  sub_1C21485B0();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1C1FE74B4((uint64_t)v48);
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v49);
}

uint64_t sub_1C1FE6B74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v45 = sub_1C2147B20();
  uint64_t v44 = *(void *)(v45 - 8);
  MEMORY[0x1F4188790](v45);
  uint64_t v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1FE7744(0, &qword_1EA2C4DE0, MEMORY[0x1E4F66468]);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v40 - v11;
  uint64_t v13 = sub_1C2148540();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  uint64_t v42 = (char *)&v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  long long v43 = (char *)&v40 - v18;
  uint64_t v19 = MEMORY[0x1F4188790](v17);
  id v21 = (char *)&v40 - v20;
  MEMORY[0x1F4188790](v19);
  uint64_t v23 = (char *)&v40 - v22;
  v52[3] = a3;
  v52[4] = a4;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v52);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 16))(boxed_opaque_existential_1, a1, a3);
  sub_1C1F236D8((uint64_t)v52, (uint64_t)v51);
  sub_1C20E0210((uint64_t)v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_1C1FE793C((uint64_t)v12, &qword_1EA2C4DE0, MEMORY[0x1E4F66468]);
    unint64_t v25 = MEMORY[0x1E4FBC860];
  }
  else
  {
    uint64_t v41 = a2;
    uint64_t v26 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
    v26(v23, v12, v13);
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v21, v23, v13);
    unint64_t v25 = sub_1C1F3AD2C(0, 1, 1, MEMORY[0x1E4FBC860]);
    unint64_t v28 = *(void *)(v25 + 16);
    unint64_t v27 = *(void *)(v25 + 24);
    if (v28 >= v27 >> 1) {
      unint64_t v25 = sub_1C1F3AD2C(v27 > 1, v28 + 1, 1, v25);
    }
    *(void *)(v25 + 16) = v28 + 1;
    v26((char *)(v25+ ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80))+ *(void *)(v14 + 72) * v28), v21, v13);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v23, v13);
    a2 = v41;
  }
  sub_1C20E0494(2, (uint64_t)&v48);
  if (v49)
  {
    sub_1C1F31280(&v48, (uint64_t)v50);
    uint64_t v29 = *(void *)(a2 + qword_1EA2C4DA8);
    LOBYTE(v48) = 0;
    sub_1C20E122C(&v48, v29, (uint64_t)&v46);
    if (v47)
    {
      sub_1C1F31280(&v46, (uint64_t)&v48);
    }
    else
    {
      sub_1C1FE7798((uint64_t)&v46, (unint64_t *)&qword_1EBF0C300, (unint64_t *)&qword_1EBF0C2F0, MEMORY[0x1E4F66028]);
      sub_1C20E0DB0((uint64_t *)&v48);
    }
    sub_1C1FE7808(0, (unint64_t *)&qword_1EBF0C958, (unint64_t *)&qword_1EBF0C2F0, MEMORY[0x1E4F66028], MEMORY[0x1E4FBBE00]);
    uint64_t v31 = swift_allocObject();
    *(_OWORD *)(v31 + 16) = xmmword_1C214FCC0;
    sub_1C1F236D8((uint64_t)v50, v31 + 32);
    sub_1C1F236D8((uint64_t)&v48, v31 + 72);
    sub_1C2147B10();
    sub_1C2147AD0();
    (*(void (**)(char *, uint64_t))(v44 + 8))(v9, v45);
    uint64_t v32 = v43;
    sub_1C2148520();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v25 = sub_1C1F3AD2C(0, *(void *)(v25 + 16) + 1, 1, v25);
    }
    unint64_t v34 = *(void *)(v25 + 16);
    unint64_t v33 = *(void *)(v25 + 24);
    if (v34 >= v33 >> 1) {
      unint64_t v25 = sub_1C1F3AD2C(v33 > 1, v34 + 1, 1, v25);
    }
    *(void *)(v25 + 16) = v34 + 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(v25+ ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80))+ *(void *)(v14 + 72) * v34, v32, v13);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)&v48);
  }
  else
  {
    sub_1C1FE7798((uint64_t)&v48, (unint64_t *)&qword_1EBF0C300, (unint64_t *)&qword_1EBF0C2F0, MEMORY[0x1E4F66028]);
    uint64_t v30 = *(void *)(a2 + qword_1EA2C4DA8);
    LOBYTE(v50[0]) = 0;
    sub_1C20E122C(v50, v30, (uint64_t)&v48);
    if (v49)
    {
      sub_1C1F31280(&v48, (uint64_t)v50);
    }
    else
    {
      sub_1C1FE7798((uint64_t)&v48, (unint64_t *)&qword_1EBF0C300, (unint64_t *)&qword_1EBF0C2F0, MEMORY[0x1E4F66028]);
      sub_1C20E0DB0(v50);
    }
    sub_1C1FE7808(0, (unint64_t *)&qword_1EBF0C958, (unint64_t *)&qword_1EBF0C2F0, MEMORY[0x1E4F66028], MEMORY[0x1E4FBBE00]);
    uint64_t v35 = swift_allocObject();
    *(_OWORD *)(v35 + 16) = xmmword_1C214FCD0;
    sub_1C1F236D8((uint64_t)v50, v35 + 32);
    sub_1C2147B10();
    sub_1C2147AD0();
    (*(void (**)(char *, uint64_t))(v44 + 8))(v9, v45);
    uint64_t v36 = v42;
    sub_1C2148520();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v25 = sub_1C1F3AD2C(0, *(void *)(v25 + 16) + 1, 1, v25);
    }
    unint64_t v38 = *(void *)(v25 + 16);
    unint64_t v37 = *(void *)(v25 + 24);
    if (v38 >= v37 >> 1) {
      unint64_t v25 = sub_1C1F3AD2C(v37 > 1, v38 + 1, 1, v25);
    }
    *(void *)(v25 + 16) = v38 + 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(v25+ ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80))+ *(void *)(v14 + 72) * v38, v36, v13);
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v50);
  sub_1C2147F40();
  sub_1C21482F0();
  swift_release();
  sub_1C21485B0();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1C1FE74B4((uint64_t)v51);
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v52);
}

uint64_t sub_1C1FE732C(void *a1, uint64_t a2)
{
  *(void *)(v2 + qword_1EA2C4D98) = 0;
  *(void *)(v2 + qword_1EA2C4DA0) = MEMORY[0x1E4FBC870];
  *(void *)(v2 + qword_1EA2C4DA8) = a2;
  uint64_t v4 = qword_1EBF0CA00;
  swift_retain();
  swift_retain();
  if (v4 != -1) {
    swift_once();
  }
  id v5 = (id)qword_1EBF0CA18;
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_1C2147730();
  uint64_t v8 = v7;
  swift_bridgeObjectRelease();

  uint64_t v9 = (uint64_t *)(v2 + qword_1EA2C4DB0);
  *uint64_t v9 = v6;
  v9[1] = v8;
  swift_release();
  uint64_t v10 = sub_1C2147F50();
  uint64_t v11 = a1[3];
  uint64_t v12 = a1[4];
  uint64_t v13 = __swift_project_boxed_opaque_existential_0(a1, v11);
  swift_retain();
  sub_1C1FE6B74((uint64_t)v13, v10, v11, v12);
  swift_release();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return v10;
}

uint64_t sub_1C1FE74B4(uint64_t a1)
{
  return a1;
}

uint64_t sub_1C1FE7508(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C1FE7550()
{
  if (!qword_1EA2C3A40)
  {
    unint64_t v0 = sub_1C214A830();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C3A40);
    }
  }
}

uint64_t sub_1C1FE75A8()
{
  return sub_1C1FE7508(&qword_1EA2C4DC8, (void (*)(uint64_t))type metadata accessor for MedicationRegularEducationDataSource);
}

uint64_t type metadata accessor for MedicationRegularEducationDataSource()
{
  uint64_t result = qword_1EA2C4DD0;
  if (!qword_1EA2C4DD0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C1FE763C()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for MedicationRegularEducationDataSource(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MedicationRegularEducationDataSource);
}

uint64_t dispatch thunk of MedicationRegularEducationDataSource.__allocating_init(with:analyticsManager:)()
{
  return (*(uint64_t (**)(void))(class metadata base offset for MedicationRegularEducationDataSource + v0 + 80))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(class metadata base offset for MedicationRegularEducationDataSource + v0 + 88))();
}

uint64_t dispatch thunk of MedicationRegularEducationDataSource.layout(for:environment:)()
{
  return (*(uint64_t (**)(void))(class metadata base offset for MedicationRegularEducationDataSource + *v0 + 104))();
}

uint64_t sub_1C1FE773C()
{
  return type metadata accessor for MedicationRegularEducationDataSource();
}

void sub_1C1FE7744(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C214B4F0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1C1FE7798(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4)
{
  sub_1C1FE7808(0, a2, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

void sub_1C1FE7808(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = sub_1C1F23804(255, a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

void sub_1C1FE7870()
{
  if (!qword_1EA2C4DE8)
  {
    sub_1C1F4986C();
    sub_1C1F12718(255, (unint64_t *)&qword_1EBF0CB10);
    sub_1C1FE7508(&qword_1EA2C35A0, (void (*)(uint64_t))sub_1C1F4986C);
    sub_1C1F43FD4();
    unint64_t v0 = sub_1C2149DF0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C4DE8);
    }
  }
}

uint64_t sub_1C1FE793C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1C1FE7744(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1C1FE7998()
{
  swift_weakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C1FE79D0()
{
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C1FE7A10()
{
  return sub_1C1FE5748();
}

id MedicationChartUserInfo.__allocating_init(takenCount:skippedCount:statisticsInterval:medication:windowTakenCount:windowSkippedCount:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5, double a6)
{
  uint64_t v7 = v6;
  uint64_t v14 = (char *)objc_allocWithZone(v7);
  *(double *)&v14[OBJC_IVAR____TtC19HealthMedicationsUI23MedicationChartUserInfo_takenCount] = a5;
  *(double *)&v14[OBJC_IVAR____TtC19HealthMedicationsUI23MedicationChartUserInfo_skippedCount] = a6;
  uint64_t v15 = &v14[OBJC_IVAR____TtC19HealthMedicationsUI23MedicationChartUserInfo_statisticsInterval];
  uint64_t v16 = sub_1C21476D0();
  uint64_t v17 = *(void *)(v16 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v15, a1, v16);
  sub_1C1F236D8(a2, (uint64_t)&v14[OBJC_IVAR____TtC19HealthMedicationsUI23MedicationChartUserInfo_medication]);
  *(void *)&v14[OBJC_IVAR____TtC19HealthMedicationsUI23MedicationChartUserInfo_windowTakenCount] = a3;
  *(void *)&v14[OBJC_IVAR____TtC19HealthMedicationsUI23MedicationChartUserInfo_windowSkippedCount] = a4;
  v20.receiver = v14;
  v20.super_class = v7;
  id v18 = objc_msgSendSuper2(&v20, sel_init);
  __swift_destroy_boxed_opaque_existential_0(a2);
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(a1, v16);
  return v18;
}

id MedicationChartUserInfo.init(takenCount:skippedCount:statisticsInterval:medication:windowTakenCount:windowSkippedCount:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5, double a6)
{
  *(double *)&v6[OBJC_IVAR____TtC19HealthMedicationsUI23MedicationChartUserInfo_takenCount] = a5;
  *(double *)&v6[OBJC_IVAR____TtC19HealthMedicationsUI23MedicationChartUserInfo_skippedCount] = a6;
  uint64_t v11 = &v6[OBJC_IVAR____TtC19HealthMedicationsUI23MedicationChartUserInfo_statisticsInterval];
  uint64_t v12 = sub_1C21476D0();
  uint64_t v13 = *(void *)(v12 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v11, a1, v12);
  sub_1C1F236D8(a2, (uint64_t)&v6[OBJC_IVAR____TtC19HealthMedicationsUI23MedicationChartUserInfo_medication]);
  *(void *)&v6[OBJC_IVAR____TtC19HealthMedicationsUI23MedicationChartUserInfo_windowTakenCount] = a3;
  *(void *)&v6[OBJC_IVAR____TtC19HealthMedicationsUI23MedicationChartUserInfo_windowSkippedCount] = a4;
  v16.receiver = v6;
  v16.super_class = (Class)type metadata accessor for MedicationChartUserInfo(0);
  id v14 = objc_msgSendSuper2(&v16, sel_init);
  __swift_destroy_boxed_opaque_existential_0(a2);
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(a1, v12);
  return v14;
}

uint64_t type metadata accessor for MedicationChartUserInfo(uint64_t a1)
{
  return sub_1C1F20D10(a1, qword_1EA2C4E28);
}

void MedicationChartUserInfo.init()()
{
}

id MedicationChartUserInfo.__deallocating_deinit()
{
  return sub_1C1FE8F4C(type metadata accessor for MedicationChartUserInfo);
}

uint64_t sub_1C1FE7DB4()
{
  sub_1C1F172B0(0, &qword_1EBF0B220, MEMORY[0x1E4F27D68]);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)v23 - v2;
  sub_1C1F172B0(0, (unint64_t *)&unk_1EBF0B210, MEMORY[0x1E4F27CA0]);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)v23 - v5;
  uint64_t v7 = sub_1C21476D0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = v0 + OBJC_IVAR____TtC19HealthMedicationsUI20MedicationChartPoint_statisticsInterval;
  uint64_t v12 = sub_1C2147CF0();
  uint64_t v13 = *(void *)(v12 - 8);
  id v14 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56);
  uint64_t v25 = v13 + 56;
  uint64_t v26 = v14;
  v14(v6, 1, 1, v12);
  uint64_t v15 = sub_1C2147D30();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56);
  void v23[2] = v16 + 56;
  unint64_t v24 = v17;
  v17(v3, 1, 1, v15);
  sub_1C21476B0();
  unint64_t v18 = sub_1C1FE9860();
  uint64_t v27 = v11;
  v23[1] = v18;
  LOBYTE(v11) = sub_1C214A5A0();
  uint64_t v19 = *(void (**)(char *, uint64_t))(v8 + 8);
  uint64_t v28 = v8 + 8;
  v19(v10, v7);
  char v20 = 0;
  if ((v11 & 1) == 0)
  {
    v26(v6, 1, 1, v12);
    v24(v3, 1, 1, v15);
    sub_1C21476B0();
    char v21 = sub_1C214A5A0();
    v19(v10, v7);
    char v20 = v21 ^ 1;
  }
  return v20 & 1;
}

double sub_1C1FE81A0()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI20MedicationChartPoint_windowTakenCount);
  double v2 = 0.0;
  double v3 = 0.0;
  if (v1) {
    double v3 = *(double *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI20MedicationChartPoint_takenCount) / (double)v1;
  }
  uint64_t v4 = *(void *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI20MedicationChartPoint_windowSkippedCount);
  if (v4) {
    double v2 = *(double *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI20MedicationChartPoint_skippedCount) / (double)v4;
  }
  return v3 + v2;
}

id MedicationChartPoint.__allocating_init(startDate:endDate:takenCount:skippedCount:statisticsInterval:medication:windowTakenCount:windowSkippedCount:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, double a7, double a8)
{
  uint64_t v17 = *(void *)(a4 + 24);
  uint64_t v18 = *(void *)(a4 + 32);
  uint64_t v19 = __swift_mutable_project_boxed_opaque_existential_1(a4, v17);
  id v20 = sub_1C1FE92C8(a1, a2, a3, v19, a5, a6, a7, a8, v8, v17, v18);
  __swift_destroy_boxed_opaque_existential_0(a4);
  return v20;
}

id MedicationChartPoint.init(startDate:endDate:takenCount:skippedCount:statisticsInterval:medication:windowTakenCount:windowSkippedCount:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, double a7, double a8)
{
  uint64_t v17 = *(void *)(a4 + 24);
  uint64_t v18 = *(void *)(a4 + 32);
  uint64_t v19 = __swift_mutable_project_boxed_opaque_existential_1(a4, v17);
  MEMORY[0x1F4188790](v19);
  char v21 = (char *)&v25 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v22 + 16))(v21);
  id v23 = sub_1C1FE9074(a1, a2, a3, (uint64_t)v21, a5, a6, v8, v17, a7, a8, v18);
  __swift_destroy_boxed_opaque_existential_0(a4);
  return v23;
}

uint64_t sub_1C1FE83F8@<X0>(uint64_t *a1@<X8>)
{
  sub_1C1F172B0(0, &qword_1EBF0B1F0, MEMORY[0x1E4F27928]);
  uint64_t v3 = v2;
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v13 - v4;
  uint64_t v6 = (void *)sub_1C2147A00();
  uint64_t v7 = (void *)sub_1C2147A00();
  id v8 = (id)HKUIMidDate();

  if (v8)
  {
    sub_1C2147A60();

    uint64_t v9 = sub_1C2147AC0();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v5, 0, 1, v9);
  }
  else
  {
    uint64_t v10 = sub_1C2147AC0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v5, 1, 1, v10);
  }
  a1[3] = v3;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a1);
  return sub_1C1F90A80((uint64_t)v5, (uint64_t)boxed_opaque_existential_1);
}

void sub_1C1FE8670(uint64_t a1@<X8>)
{
  if (sub_1C1FE7DB4()) {
    double v3 = sub_1C1FE81A0();
  }
  else {
    double v3 = *(double *)(v1 + OBJC_IVAR____TtC19HealthMedicationsUI20MedicationChartPoint_takenCount)
  }
       + *(double *)(v1 + OBJC_IVAR____TtC19HealthMedicationsUI20MedicationChartPoint_skippedCount);
  *(void *)(a1 + 24) = MEMORY[0x1E4FBB3D0];
  *(double *)a1 = v3;
}

uint64_t sub_1C1FE882C()
{
  char v1 = sub_1C1FE7DB4();
  sub_1C1FE9408();
  uint64_t v2 = swift_allocObject();
  uint64_t v3 = v2;
  *(_OWORD *)(v2 + 16) = xmmword_1C214FCC0;
  if (v1)
  {
    uint64_t v4 = *(void *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI20MedicationChartPoint_windowTakenCount);
    if (v4) {
      double v5 = *(double *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI20MedicationChartPoint_takenCount) / (double)v4;
    }
    else {
      double v5 = 0.0;
    }
    uint64_t v9 = MEMORY[0x1E4FBB3D0];
    *(void *)(v2 + 56) = MEMORY[0x1E4FBB3D0];
    *(double *)(v2 + 32) = v5;
    double v8 = sub_1C1FE81A0();
    *(void *)(v3 + 88) = v9;
  }
  else
  {
    double v6 = *(double *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI20MedicationChartPoint_takenCount);
    uint64_t v7 = MEMORY[0x1E4FBB3D0];
    *(void *)(v2 + 56) = MEMORY[0x1E4FBB3D0];
    *(double *)(v2 + 32) = v6;
    double v8 = v6 + *(double *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI20MedicationChartPoint_skippedCount);
    *(void *)(v2 + 88) = v7;
  }
  *(double *)(v3 + 64) = v8;
  return v3;
}

uint64_t sub_1C1FE8964@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = sub_1C1FE7DB4();
  if (result)
  {
    uint64_t v4 = *(void *)(v1 + OBJC_IVAR____TtC19HealthMedicationsUI20MedicationChartPoint_windowTakenCount);
    if (v4) {
      double v5 = *(double *)(v1 + OBJC_IVAR____TtC19HealthMedicationsUI20MedicationChartPoint_takenCount) / (double)v4;
    }
    else {
      double v5 = 0.0;
    }
  }
  else
  {
    double v5 = *(double *)(v1 + OBJC_IVAR____TtC19HealthMedicationsUI20MedicationChartPoint_takenCount);
  }
  *(void *)(a1 + 24) = MEMORY[0x1E4FBB3D0];
  *(double *)a1 = v5;
  return result;
}

id sub_1C1FE8C78()
{
  uint64_t v1 = sub_1C21476D0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(void *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI20MedicationChartPoint_takenCount);
  uint64_t v6 = *(void *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI20MedicationChartPoint_skippedCount);
  uint64_t v7 = *(void (**)(char *, uint64_t, uint64_t))(v2 + 16);
  v7(v4, v0 + OBJC_IVAR____TtC19HealthMedicationsUI20MedicationChartPoint_statisticsInterval, v1);
  sub_1C1F236D8(v0 + OBJC_IVAR____TtC19HealthMedicationsUI20MedicationChartPoint_medication, (uint64_t)v16);
  uint64_t v8 = *(void *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI20MedicationChartPoint_windowTakenCount);
  uint64_t v9 = *(void *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI20MedicationChartPoint_windowSkippedCount);
  uint64_t v10 = (objc_class *)type metadata accessor for MedicationChartUserInfo(0);
  uint64_t v11 = (char *)objc_allocWithZone(v10);
  *(void *)&v11[OBJC_IVAR____TtC19HealthMedicationsUI23MedicationChartUserInfo_takenCount] = v5;
  *(void *)&v11[OBJC_IVAR____TtC19HealthMedicationsUI23MedicationChartUserInfo_skippedCount] = v6;
  v7(&v11[OBJC_IVAR____TtC19HealthMedicationsUI23MedicationChartUserInfo_statisticsInterval], (uint64_t)v4, v1);
  sub_1C1F236D8((uint64_t)v16, (uint64_t)&v11[OBJC_IVAR____TtC19HealthMedicationsUI23MedicationChartUserInfo_medication]);
  *(void *)&v11[OBJC_IVAR____TtC19HealthMedicationsUI23MedicationChartUserInfo_windowTakenCount] = v8;
  *(void *)&v11[OBJC_IVAR____TtC19HealthMedicationsUI23MedicationChartUserInfo_windowSkippedCount] = v9;
  v15.receiver = v11;
  v15.super_class = v10;
  id v12 = objc_msgSendSuper2(&v15, sel_init);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v16);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return v12;
}

id MedicationChartPoint.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

void MedicationChartPoint.init()()
{
}

id MedicationChartPoint.__deallocating_deinit()
{
  return sub_1C1FE8F4C(type metadata accessor for MedicationChartPoint);
}

id sub_1C1FE8F4C(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1(0);
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

id sub_1C1FE9074(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char *a7, uint64_t a8, double a9, double a10, uint64_t a11)
{
  v33[3] = a8;
  v33[4] = a11;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v33);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a8 - 8) + 32))(boxed_opaque_existential_1, a4, a8);
  *(double *)&a7[OBJC_IVAR____TtC19HealthMedicationsUI20MedicationChartPoint_takenCount] = a9;
  *(double *)&a7[OBJC_IVAR____TtC19HealthMedicationsUI20MedicationChartPoint_skippedCount] = a10;
  char v21 = &a7[OBJC_IVAR____TtC19HealthMedicationsUI20MedicationChartPoint_startDate];
  uint64_t v22 = sub_1C2147AC0();
  uint64_t v23 = *(void *)(v22 - 8);
  unint64_t v24 = *(void (**)(char *, uint64_t, uint64_t))(v23 + 16);
  v24(v21, a1, v22);
  v24(&a7[OBJC_IVAR____TtC19HealthMedicationsUI20MedicationChartPoint_endDate], a2, v22);
  uint64_t v25 = &a7[OBJC_IVAR____TtC19HealthMedicationsUI20MedicationChartPoint_statisticsInterval];
  uint64_t v26 = sub_1C21476D0();
  uint64_t v27 = *(void *)(v26 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v27 + 16))(v25, a3, v26);
  sub_1C1F236D8((uint64_t)v33, (uint64_t)&a7[OBJC_IVAR____TtC19HealthMedicationsUI20MedicationChartPoint_medication]);
  *(void *)&a7[OBJC_IVAR____TtC19HealthMedicationsUI20MedicationChartPoint_windowTakenCount] = a5;
  *(void *)&a7[OBJC_IVAR____TtC19HealthMedicationsUI20MedicationChartPoint_windowSkippedCount] = a6;
  v32.receiver = a7;
  v32.super_class = (Class)type metadata accessor for MedicationChartPoint(0);
  id v28 = objc_msgSendSuper2(&v32, sel_init);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v33);
  (*(void (**)(uint64_t, uint64_t))(v27 + 8))(a3, v26);
  uint64_t v29 = *(void (**)(uint64_t, uint64_t))(v23 + 8);
  v29(a2, v22);
  v29(a1, v22);
  return v28;
}

id sub_1C1FE92C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, double a7, double a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v25 = a6;
  uint64_t v19 = *(void *)(a10 - 8);
  MEMORY[0x1F4188790](a1);
  char v21 = (char *)&v24 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = (char *)objc_allocWithZone((Class)type metadata accessor for MedicationChartPoint(0));
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v21, a4, a10);
  return sub_1C1FE9074(a1, a2, a3, (uint64_t)v21, a5, v25, v22, a10, a7, a8, a11);
}

void sub_1C1FE9408()
{
  if (!qword_1EA2C3DA0)
  {
    unint64_t v0 = sub_1C214BA50();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C3DA0);
    }
  }
}

uint64_t type metadata accessor for MedicationChartPoint(uint64_t a1)
{
  return sub_1C1F20D10(a1, (uint64_t *)&unk_1EA2C4EA0);
}

uint64_t sub_1C1FE9484()
{
  return type metadata accessor for MedicationChartUserInfo(0);
}

uint64_t sub_1C1FE948C()
{
  uint64_t result = sub_1C21476D0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for MedicationChartUserInfo(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MedicationChartUserInfo);
}

uint64_t dispatch thunk of MedicationChartUserInfo.__allocating_init(takenCount:skippedCount:statisticsInterval:medication:windowTakenCount:windowSkippedCount:)()
{
  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t sub_1C1FE9564()
{
  return type metadata accessor for MedicationChartPoint(0);
}

uint64_t sub_1C1FE956C()
{
  uint64_t result = sub_1C2147AC0();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1C21476D0();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_updateClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

uint64_t method lookup function for MedicationChartPoint(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MedicationChartPoint);
}

uint64_t dispatch thunk of MedicationChartPoint.__allocating_init(startDate:endDate:takenCount:skippedCount:statisticsInterval:medication:windowTakenCount:windowSkippedCount:)()
{
  return (*(uint64_t (**)(void))(v0 + 184))();
}

uint64_t dispatch thunk of MedicationChartPoint.xValueAsGenericType()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of MedicationChartPoint.minXValueAsGenericType()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of MedicationChartPoint.maxXValueAsGenericType()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of MedicationChartPoint.yValue()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of MedicationChartPoint.yValue(forKey:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xE0))();
}

uint64_t dispatch thunk of MedicationChartPoint.allYValues()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xE8))();
}

uint64_t dispatch thunk of MedicationChartPoint.minYValue()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xF0))();
}

uint64_t dispatch thunk of MedicationChartPoint.maxYValue()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xF8))();
}

uint64_t dispatch thunk of MedicationChartPoint.userInfo()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x100))();
}

unint64_t sub_1C1FE9860()
{
  unint64_t result = qword_1EA2C4EB0;
  if (!qword_1EA2C4EB0)
  {
    sub_1C21476D0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C4EB0);
  }
  return result;
}

uint64_t *sub_1C1FE98C0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v8 = sub_1C21491B0();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_1C1FE99B8(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (!result)
  {
    uint64_t v3 = sub_1C21491B0();
    uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
    return v4(a1, v3);
  }
  return result;
}

void *sub_1C1FE9A30(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v6 = sub_1C21491B0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_1C1FE9AE4(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1C1FEA720((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for FormStepResult);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v6 = sub_1C21491B0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t type metadata accessor for FormStepResult()
{
  uint64_t result = qword_1EA2C4EC0;
  if (!qword_1EA2C4EC0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void *sub_1C1FE9C08(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v6 = sub_1C21491B0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_1C1FE9CBC(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1C1FEA720((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for FormStepResult);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v6 = sub_1C21491B0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_1C1FE9D94()
{
  uint64_t result = sub_1C21491B0();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_1C1FE9E28()
{
  return sub_1C1FEA780(&qword_1EA2C4ED0, (void (*)(uint64_t))type metadata accessor for FormStepResult);
}

uint64_t sub_1C1FE9E70()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1C21491B0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  int v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for FormStepResult();
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C214BB30();
  sub_1C1FEA6BC(v1, (uint64_t)v8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1C214BB70();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
    sub_1C1FEA780((unint64_t *)&unk_1EA2C4EE0, MEMORY[0x1E4F66C58]);
    sub_1C214A560();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return sub_1C214BB80();
}

uint64_t sub_1C1FEA034()
{
  uint64_t v1 = sub_1C21491B0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = MEMORY[0x1F4188790](v1);
  int v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1FEA6BC(v0, (uint64_t)v7);
  if (swift_getEnumCaseMultiPayload() == 1) {
    return sub_1C214BB70();
  }
  (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v5, v7, v1);
  sub_1C1FEA780((unint64_t *)&unk_1EA2C4EE0, MEMORY[0x1E4F66C58]);
  sub_1C214A560();
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v5, v1);
}

uint64_t sub_1C1FEA1DC()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1C21491B0();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C214BB30();
  sub_1C1FEA6BC(v1, (uint64_t)v8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1C214BB70();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v6, v8, v2);
    sub_1C1FEA780((unint64_t *)&unk_1EA2C4EE0, MEMORY[0x1E4F66C58]);
    sub_1C214A560();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  }
  return sub_1C214BB80();
}

uint64_t sub_1C1FEA39C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C21491B0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for FormStepResult();
  uint64_t v9 = MEMORY[0x1F4188790](v8);
  uint64_t v11 = (uint64_t *)((char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v24 - v12;
  sub_1C1FEA658();
  uint64_t v15 = MEMORY[0x1F4188790](v14 - 8);
  uint64_t v17 = (char *)&v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = &v17[*(int *)(v15 + 56)];
  sub_1C1FEA6BC(a1, (uint64_t)v17);
  sub_1C1FEA6BC(a2, (uint64_t)v18);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1C1FEA6BC((uint64_t)v17, (uint64_t)v11);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v20 = (uint64_t (*)(void))sub_1C1FEA658;
    if (EnumCaseMultiPayload == 1)
    {
      char v21 = *v11 == *(void *)v18;
LABEL_8:
      uint64_t v20 = (uint64_t (*)(void))type metadata accessor for FormStepResult;
      goto LABEL_9;
    }
    char v21 = 0;
  }
  else
  {
    sub_1C1FEA6BC((uint64_t)v17, (uint64_t)v13);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v18, v4);
      char v21 = sub_1C21491A0();
      uint64_t v22 = *(void (**)(char *, uint64_t))(v5 + 8);
      v22(v7, v4);
      v22(v13, v4);
      goto LABEL_8;
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v13, v4);
    char v21 = 0;
    uint64_t v20 = (uint64_t (*)(void))sub_1C1FEA658;
  }
LABEL_9:
  sub_1C1FEA720((uint64_t)v17, v20);
  return v21 & 1;
}

void sub_1C1FEA658()
{
  if (!qword_1EA2C4ED8)
  {
    type metadata accessor for FormStepResult();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA2C4ED8);
    }
  }
}

uint64_t sub_1C1FEA6BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FormStepResult();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C1FEA720(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C1FEA780(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t static TitleWithSubtitleView.reuseIdentifier.getter()
{
  swift_beginAccess();
  uint64_t v0 = qword_1EA2C4EF0;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t static TitleWithSubtitleView.reuseIdentifier.setter(uint64_t a1, void *a2)
{
  qword_1EA2C4EF0 = a1;
  off_1EA2C4EF8 = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*static TitleWithSubtitleView.reuseIdentifier.modify())()
{
  return j__swift_endAccess;
}

id sub_1C1FEA8D0()
{
  return sub_1C1FEA900(&OBJC_IVAR____TtC19HealthMedicationsUI21TitleWithSubtitleView____lazy_storage___titleLabel);
}

id sub_1C1FEA8E8()
{
  return sub_1C1FEA900(&OBJC_IVAR____TtC19HealthMedicationsUI21TitleWithSubtitleView____lazy_storage___subtitleLabel);
}

id sub_1C1FEA900(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *(void **)(v1 + *a1);
  if (v3)
  {
    id v4 = *(id *)(v1 + *a1);
  }
  else
  {
    uint64_t v5 = v1;
    id v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
    sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8E0);
    uint64_t v7 = (void *)sub_1C214B0A0();
    objc_msgSend(v6, sel_setFont_, v7);

    objc_msgSend(v6, sel_setNumberOfLines_, 0);
    id v8 = objc_msgSend(self, sel_labelColor);
    objc_msgSend(v6, sel_setTextColor_, v8);

    objc_msgSend(v6, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    uint64_t v9 = *(void **)(v5 + v2);
    *(void *)(v5 + v2) = v6;
    id v4 = v6;

    uint64_t v3 = 0;
  }
  id v10 = v3;
  return v4;
}

uint64_t sub_1C1FEAA44@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI21TitleWithSubtitleView_item;
  swift_beginAccess();
  sub_1C1F2116C(v3, (uint64_t)v20);
  if (v20[3])
  {
    sub_1C1F23804(0, (unint64_t *)&qword_1EBF0C2F0);
    uint64_t result = swift_dynamicCast();
    if (result)
    {
      unint64_t v5 = v13;
      char v6 = v15;
      char v7 = v17;
      uint64_t v8 = v18;
      uint64_t v9 = v19;
      long long v10 = v14;
      long long v11 = v16;
      *(void *)a1 = v12;
      *(void *)(a1 + 8) = v5;
      *(_OWORD *)(a1 + 16) = v10;
      *(unsigned char *)(a1 + 32) = v6;
      *(_OWORD *)(a1 + 40) = v11;
      *(unsigned char *)(a1 + 56) = v7;
      *(void *)(a1 + 64) = v8;
      *(void *)(a1 + 72) = v9;
      return result;
    }
  }
  else
  {
    sub_1C1F374E4((uint64_t)v20);
  }
  uint64_t v12 = 0;
  unint64_t v13 = 0xE000000000000000;
  sub_1C214B7C0();
  swift_bridgeObjectRelease();
  v20[0] = 0xD000000000000026;
  v20[1] = 0x80000001C2164720;
  sub_1C1F2116C(v3, (uint64_t)&v12);
  sub_1C1F24488();
  sub_1C214A630();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  uint64_t result = sub_1C214B910();
  __break(1u);
  return result;
}

uint64_t sub_1C1FEABBC(uint64_t a1, void *a2)
{
  sub_1C1F2116C(a1, (uint64_t)v5);
  uint64_t v3 = *a2 + OBJC_IVAR____TtC19HealthMedicationsUI21TitleWithSubtitleView_item;
  swift_beginAccess();
  sub_1C1F32DDC((uint64_t)v5, v3);
  swift_endAccess();
  sub_1C1FEAC30();
  return sub_1C1F374E4((uint64_t)v5);
}

uint64_t sub_1C1FEAC30()
{
  uint64_t v1 = (uint64_t)&v0[OBJC_IVAR____TtC19HealthMedicationsUI21TitleWithSubtitleView_item];
  swift_beginAccess();
  sub_1C1F2116C(v1, (uint64_t)v24);
  if (!v24[3])
  {
    sub_1C1F374E4((uint64_t)v24);
    goto LABEL_11;
  }
  sub_1C1F23804(0, (unint64_t *)&qword_1EBF0C2F0);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_11:
    v17[0] = 0;
    v17[1] = 0xE000000000000000;
    sub_1C214B7C0();
    swift_bridgeObjectRelease();
    v24[0] = 0xD000000000000026;
    v24[1] = 0x80000001C2164720;
    sub_1C1F2116C(v1, (uint64_t)v17);
    sub_1C1F24488();
    sub_1C214A630();
    sub_1C214A6C0();
    swift_bridgeObjectRelease();
    uint64_t result = sub_1C214B910();
    __break(1u);
    return result;
  }
  uint64_t v2 = v19;
  char v3 = v20;
  id v4 = sub_1C1FEA8D0();
  if (v20)
  {
    objc_msgSend(v4, sel_setAttributedText_, v18);
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_1C214A5B0();
    objc_msgSend(v4, sel_setText_, v5);

    id v4 = (id)v5;
  }

  sub_1C1F94FC4(v18, v19, v20);
  id v6 = sub_1C1FEA8E8();
  long long v16 = v18;
  if (v23)
  {
    objc_msgSend(v6, sel_setAttributedText_, v21);
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1C214A5B0();
    objc_msgSend(v6, sel_setText_, v7);

    id v6 = (id)v7;
  }
  char v15 = v21;

  sub_1C1F94FC4(v21, v22, v23);
  uint64_t v8 = self;
  char v9 = v23;
  uint64_t v10 = v22;
  uint64_t v11 = OBJC_IVAR____TtC19HealthMedicationsUI21TitleWithSubtitleView_customConstraints;
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C810);
  swift_bridgeObjectRetain();
  uint64_t v12 = (void *)sub_1C214A770();
  swift_bridgeObjectRelease();
  objc_msgSend(v8, sel_deactivateConstraints_, v12);

  *(void *)&v0[v11] = sub_1C1FEB7C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  unint64_t v13 = (void *)sub_1C214A770();
  swift_bridgeObjectRelease();
  objc_msgSend(v8, sel_activateConstraints_, v13);

  objc_msgSend(v0, sel_setNeedsLayout);
  swift_bridgeObjectRelease();
  sub_1C1F94FC4(v16, v2, v3);
  sub_1C1F94FC4(v15, v10, v9);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C1FEAF90@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI21TitleWithSubtitleView_item;
  swift_beginAccess();
  return sub_1C1F2116C(v3, a1);
}

uint64_t sub_1C1FEAFE4(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI21TitleWithSubtitleView_item;
  swift_beginAccess();
  sub_1C1F32DDC(a1, v3);
  swift_endAccess();
  sub_1C1FEAC30();
  return sub_1C1F374E4(a1);
}

uint64_t (*sub_1C1FEB054(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1C1FEB0B4;
}

uint64_t sub_1C1FEB0B4(uint64_t a1, char a2)
{
  uint64_t result = swift_endAccess();
  if ((a2 & 1) == 0) {
    return sub_1C1FEAC30();
  }
  return result;
}

id TitleWithSubtitleView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  id v9 = objc_allocWithZone(v4);

  return objc_msgSend(v9, sel_initWithFrame_, a1, a2, a3, a4);
}

id TitleWithSubtitleView.init(frame:)(double a1, double a2, double a3, double a4)
{
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI21TitleWithSubtitleView____lazy_storage___titleLabel] = 0;
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI21TitleWithSubtitleView____lazy_storage___subtitleLabel] = 0;
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI21TitleWithSubtitleView_customConstraints] = MEMORY[0x1E4FBC860];
  id v9 = &v4[OBJC_IVAR____TtC19HealthMedicationsUI21TitleWithSubtitleView_item];
  uint64_t v10 = (objc_class *)type metadata accessor for TitleWithSubtitleView();
  *(_OWORD *)id v9 = 0u;
  *((_OWORD *)v9 + 1) = 0u;
  *((void *)v9 + 4) = 0;
  v13.receiver = v4;
  v13.super_class = v10;
  id v11 = objc_msgSendSuper2(&v13, sel_initWithFrame_, a1, a2, a3, a4);
  sub_1C1FEB3AC();

  return v11;
}

uint64_t type metadata accessor for TitleWithSubtitleView()
{
  return self;
}

uint64_t sub_1C1FEB3AC()
{
  id v1 = sub_1C1FEA8D0();
  objc_msgSend(v0, sel_addSubview_, v1);

  id v2 = sub_1C1FEA8E8();
  objc_msgSend(v0, sel_addSubview_, v2);

  uint64_t v3 = self;
  uint64_t v4 = OBJC_IVAR____TtC19HealthMedicationsUI21TitleWithSubtitleView_customConstraints;
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C810);
  swift_bridgeObjectRetain();
  uint64_t v5 = (void *)sub_1C214A770();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_deactivateConstraints_, v5);

  *(void *)&v0[v4] = sub_1C1FEB7C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  id v6 = (void *)sub_1C214A770();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_activateConstraints_, v6);

  objc_msgSend(v0, sel_setNeedsLayout);
  sub_1C1FEBB20();
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1C214FCC0;
  uint64_t v8 = sub_1C2149BF0();
  uint64_t v9 = MEMORY[0x1E4FB0FA8];
  *(void *)(v7 + 32) = v8;
  *(void *)(v7 + 40) = v9;
  uint64_t v10 = sub_1C2149C70();
  uint64_t v11 = MEMORY[0x1E4FB1138];
  *(void *)(v7 + 48) = v10;
  *(void *)(v7 + 56) = v11;
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1C1F7C8F0();
  sub_1C214B120();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  return swift_release();
}

void sub_1C1FEB598(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a3 + 16;
  swift_beginAccess();
  uint64_t v4 = MEMORY[0x1C8754850](v3);
  if (v4)
  {
    uint64_t v5 = (char *)v4;
    id v6 = self;
    uint64_t v7 = OBJC_IVAR____TtC19HealthMedicationsUI21TitleWithSubtitleView_customConstraints;
    sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C810);
    swift_bridgeObjectRetain();
    uint64_t v8 = (void *)sub_1C214A770();
    swift_bridgeObjectRelease();
    objc_msgSend(v6, sel_deactivateConstraints_, v8);

    *(void *)&v5[v7] = sub_1C1FEB7C0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    uint64_t v9 = (void *)sub_1C214A770();
    swift_bridgeObjectRelease();
    objc_msgSend(v6, sel_activateConstraints_, v9);

    objc_msgSend(v5, sel_setNeedsLayout);
  }
}

id sub_1C1FEB6C0()
{
  id v1 = self;
  uint64_t v2 = OBJC_IVAR____TtC19HealthMedicationsUI21TitleWithSubtitleView_customConstraints;
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C810);
  swift_bridgeObjectRetain();
  uint64_t v3 = (void *)sub_1C214A770();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_deactivateConstraints_, v3);

  *(void *)&v0[v2] = sub_1C1FEB7C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  uint64_t v4 = (void *)sub_1C214A770();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_activateConstraints_, v4);

  return objc_msgSend(v0, sel_setNeedsLayout);
}

uint64_t sub_1C1FEB7C0()
{
  sub_1C1F0ED28();
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1C21518E0;
  id v2 = sub_1C1FEA8D0();
  id v3 = objc_msgSend(v2, sel_topAnchor);

  id v4 = objc_msgSend(v0, sel_topAnchor);
  id v5 = objc_msgSend(v3, sel_constraintEqualToAnchor_, v4);

  *(void *)(v1 + 32) = v5;
  id v6 = sub_1C1FEA8D0();
  id v7 = objc_msgSend(v6, sel_leadingAnchor);

  id v8 = objc_msgSend(v0, sel_leadingAnchor);
  id v9 = objc_msgSend(v7, sel_constraintEqualToAnchor_constant_, v8, 2.0);

  *(void *)(v1 + 40) = v9;
  id v10 = objc_msgSend(v0, sel_trailingAnchor);
  id v11 = sub_1C1FEA8D0();
  id v12 = objc_msgSend(v11, sel_trailingAnchor);

  id v13 = objc_msgSend(v10, sel_constraintEqualToAnchor_constant_, v12, 2.0);
  *(void *)(v1 + 48) = v13;
  id v14 = sub_1C1FEA8E8();
  id v15 = objc_msgSend(v14, sel_topAnchor);

  id v16 = sub_1C1FEA8D0();
  id v17 = objc_msgSend(v16, sel_bottomAnchor);

  id v18 = objc_msgSend(v15, sel_constraintEqualToAnchor_constant_, v17, 8.0);
  *(void *)(v1 + 56) = v18;
  id v19 = sub_1C1FEA8E8();
  id v20 = objc_msgSend(v19, sel_leadingAnchor);

  id v21 = sub_1C1FEA8D0();
  id v22 = objc_msgSend(v21, sel_leadingAnchor);

  id v23 = objc_msgSend(v20, sel_constraintEqualToAnchor_, v22);
  *(void *)(v1 + 64) = v23;
  id v24 = sub_1C1FEA8E8();
  id v25 = objc_msgSend(v24, sel_trailingAnchor);

  id v26 = sub_1C1FEA8D0();
  id v27 = objc_msgSend(v26, sel_trailingAnchor);

  id v28 = objc_msgSend(v25, sel_constraintLessThanOrEqualToAnchor_, v27);
  *(void *)(v1 + 72) = v28;
  id v29 = objc_msgSend(v0, sel_bottomAnchor);
  id v30 = sub_1C1FEA8E8();
  id v31 = objc_msgSend(v30, sel_lastBaselineAnchor);

  id v32 = objc_msgSend(v29, sel_constraintEqualToAnchor_constant_, v31, 10.0);
  *(void *)(v1 + 80) = v32;
  sub_1C214A7A0();
  return v1;
}

void sub_1C1FEBB20()
{
  if (!qword_1EA2C3D80)
  {
    sub_1C1F7C864();
    unint64_t v0 = sub_1C214BA50();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C3D80);
    }
  }
}

uint64_t sub_1C1FEBB78()
{
  swift_unknownObjectWeakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

void sub_1C1FEBBB0(uint64_t a1, uint64_t a2)
{
  sub_1C1FEB598(a1, a2, v2);
}

id TitleWithSubtitleView.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TitleWithSubtitleView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1C1FEBC58@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC19HealthMedicationsUI21TitleWithSubtitleView_item;
  swift_beginAccess();
  return sub_1C1F2116C(v3, a1);
}

uint64_t sub_1C1FEBCB0(uint64_t a1)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC19HealthMedicationsUI21TitleWithSubtitleView_item;
  swift_beginAccess();
  sub_1C1F32DDC(a1, v3);
  swift_endAccess();
  sub_1C1FEAC30();
  return sub_1C1F374E4(a1);
}

uint64_t (*sub_1C1FEBD24(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = *v1;
  swift_beginAccess();
  return sub_1C1FEB0B4;
}

uint64_t sub_1C1FEBD88()
{
  swift_beginAccess();
  uint64_t v0 = qword_1EA2C4EF0;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_1C1FEBDDC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC19HealthMedicationsUI21TitleWithSubtitleView_item;
  swift_beginAccess();
  return sub_1C1F2116C(v3, a2);
}

uint64_t method lookup function for TitleWithSubtitleView(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for TitleWithSubtitleView);
}

uint64_t dispatch thunk of TitleWithSubtitleView.headerItem.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of TitleWithSubtitleView.item.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of TitleWithSubtitleView.item.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of TitleWithSubtitleView.item.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of TitleWithSubtitleView.commonInit()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of TitleWithSubtitleView.setUpConstraints()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xE0))();
}

uint64_t MedicationSecondaryEducationType.shouldShowCriticalButton(for:)(void *a1)
{
  uint64_t v2 = a1[3];
  uint64_t v3 = a1[4];
  id v4 = __swift_project_boxed_opaque_existential_0(a1, v2);

  return sub_1C1FECA34((uint64_t)v4, v1, v2, v3);
}

uint64_t MedicationSecondaryEducationType.title.getter()
{
  if (*v0)
  {
    if (*v0 == 1)
    {
      if (qword_1EA2C2710 == -1)
      {
LABEL_9:
        uint64_t v1 = &qword_1EA2C5D90;
        goto LABEL_10;
      }
    }
    else if (qword_1EA2C2710 == -1)
    {
      goto LABEL_9;
    }
    swift_once();
    goto LABEL_9;
  }
  if (qword_1EBF0CA00 != -1) {
    swift_once();
  }
  uint64_t v1 = &qword_1EBF0CA18;
LABEL_10:
  id v2 = (id)*v1;
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_1C2147730();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  return v3;
}

uint64_t MedicationSecondaryEducationType.content(from:)(void *a1)
{
  uint64_t v2 = a1[3];
  uint64_t v3 = a1[4];
  id v4 = __swift_project_boxed_opaque_existential_0(a1, v2);

  return sub_1C1FEC834((uint64_t)v4, v1, v2, v3);
}

uint64_t MedicationSecondaryEducationType.automationSuffix.getter()
{
  uint64_t v1 = 0x636E616E67657250;
  if (*v0 != 1) {
    uint64_t v1 = 0x6F6974617463614CLL;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6666452065646953;
  }
}

unint64_t MedicationSecondaryEducationType.titleKey.getter()
{
  uint64_t v1 = 0x434E414E47455250;
  if (*v0 != 1) {
    uint64_t v1 = 0x4F4954415443414CLL;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0xD000000000000012;
  }
}

uint64_t MedicationSecondaryEducationType.source.getter@<X0>(uint64_t *a1@<X8>)
{
  if (*v1)
  {
    if (qword_1EA2C2710 != -1) {
      swift_once();
    }
    uint64_t v3 = &qword_1EA2C5D90;
  }
  else
  {
    if (qword_1EBF0CA00 != -1) {
      swift_once();
    }
    uint64_t v3 = &qword_1EBF0CA18;
  }
  id v4 = (void *)*v3;
  uint64_t v5 = v3[1];
  uint64_t v6 = v3[2];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  id v7 = v4;

  return swift_bridgeObjectRetain();
}

uint64_t MedicationSecondaryEducationType.text.getter()
{
  if (*v0)
  {
    if (*v0 == 1)
    {
      if (qword_1EA2C2710 == -1)
      {
LABEL_9:
        uint64_t v1 = &qword_1EA2C5D90;
        goto LABEL_10;
      }
    }
    else if (qword_1EA2C2710 == -1)
    {
      goto LABEL_9;
    }
    swift_once();
    goto LABEL_9;
  }
  if (qword_1EBF0CA00 != -1) {
    swift_once();
  }
  uint64_t v1 = &qword_1EBF0CA18;
LABEL_10:
  id v2 = (id)*v1;
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_1C2147730();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  return v3;
}

unint64_t MedicationSecondaryEducationType.textKey.getter()
{
  uint64_t v1 = 0x434E414E47455250;
  if (*v0 != 1) {
    uint64_t v1 = 0x4F4954415443414CLL;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0xD000000000000011;
  }
}

uint64_t MedicationSecondaryEducationType.unavailableText.getter()
{
  if (*v0)
  {
    if (qword_1EA2C2710 != -1) {
      swift_once();
    }
    uint64_t v1 = &qword_1EA2C5D90;
  }
  else
  {
    if (qword_1EBF0CA00 != -1) {
      swift_once();
    }
    uint64_t v1 = &qword_1EBF0CA18;
  }
  id v2 = (id)*v1;
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_1C2147730();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  return v3;
}

unint64_t MedicationSecondaryEducationType.unavailableKey.getter()
{
  if (*v0) {
    return 0xD00000000000001ALL;
  }
  else {
    return 0xD00000000000001DLL;
  }
}

uint64_t MedicationSecondaryEducationType.uniqueIdentifier.getter()
{
  uint64_t v1 = 0x636E616E67657270;
  if (*v0 != 1) {
    uint64_t v1 = 0x6F6974617463616CLL;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6566664565646973;
  }
}

BOOL static MedicationSecondaryEducationType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t MedicationSecondaryEducationType.hash(into:)()
{
  return sub_1C214BB40();
}

uint64_t MedicationSecondaryEducationType.hashValue.getter()
{
  return sub_1C214BB80();
}

uint64_t sub_1C1FEC834(uint64_t a1, unsigned char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(a3 - 8);
  MEMORY[0x1F4188790](a1);
  id v9 = (char *)&v14[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v7 + 16))(v9);
  if (!*a2)
  {
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(a4 + 48))(v14, a3, a4);
    if (v15)
    {
      __swift_project_boxed_opaque_existential_0(v14, v15);
      uint64_t v10 = sub_1C2147FB0();
      goto LABEL_9;
    }
LABEL_10:
    sub_1C1FECD3C((uint64_t)v14);
    uint64_t v11 = 0;
    goto LABEL_11;
  }
  if (*a2 != 1)
  {
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(a4 + 48))(v14, a3, a4);
    if (v15)
    {
      __swift_project_boxed_opaque_existential_0(v14, v15);
      uint64_t v10 = sub_1C2147FD0();
      goto LABEL_9;
    }
    goto LABEL_10;
  }
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(a4 + 48))(v14, a3, a4);
  if (!v15) {
    goto LABEL_10;
  }
  __swift_project_boxed_opaque_existential_0(v14, v15);
  uint64_t v10 = sub_1C2147FE0();
LABEL_9:
  uint64_t v11 = v10;
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v14);
LABEL_11:
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, a3);
  return v11;
}

uint64_t sub_1C1FECA34(uint64_t a1, unsigned char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(a3 - 8);
  MEMORY[0x1F4188790](a1);
  id v9 = (char *)&v15[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v7 + 16))(v9);
  if (!*a2) {
    goto LABEL_9;
  }
  if (*a2 != 1)
  {
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(a4 + 48))(v15, a3, a4);
    if (v16)
    {
      __swift_project_boxed_opaque_existential_0(v15, v16);
      char v10 = sub_1C2147FF0();
      goto LABEL_7;
    }
    goto LABEL_8;
  }
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(a4 + 48))(v15, a3, a4);
  if (!v16)
  {
LABEL_8:
    sub_1C1FECD3C((uint64_t)v15);
LABEL_9:
    uint64_t v12 = 0;
    goto LABEL_10;
  }
  __swift_project_boxed_opaque_existential_0(v15, v16);
  char v10 = sub_1C2148000();
LABEL_7:
  char v11 = v10;
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v15);
  uint64_t v12 = v11 & 1;
LABEL_10:
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, a3);
  return v12;
}

unint64_t sub_1C1FECBE4()
{
  unint64_t result = qword_1EA2C4F20;
  if (!qword_1EA2C4F20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C4F20);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for MedicationSecondaryEducationType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C1FECD04);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MedicationSecondaryEducationType()
{
  return &type metadata for MedicationSecondaryEducationType;
}

uint64_t sub_1C1FECD3C(uint64_t a1)
{
  sub_1C1FECD98();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1C1FECD98()
{
  if (!qword_1EA2C4DB8)
  {
    sub_1C1FECDF0();
    unint64_t v0 = sub_1C214B4F0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C4DB8);
    }
  }
}

unint64_t sub_1C1FECDF0()
{
  unint64_t result = qword_1EA2C4DC0;
  if (!qword_1EA2C4DC0)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA2C4DC0);
  }
  return result;
}

uint64_t sub_1C1FECE48@<X0>(long long *a1@<X0>, uint64_t *a2@<X8>)
{
  id v20 = a2;
  uint64_t v19 = sub_1C21478D0();
  uint64_t v3 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19);
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1C21478F0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  id v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1C2147AC0();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  id v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(v12) = *((unsigned char *)a1 + 16);
  long long v21 = *a1;
  char v22 = v12;
  LoggableDose.scheduleDate.getter((uint64_t)v13);
  sub_1C21478E0();
  sub_1C21478C0();
  uint64_t v14 = sub_1C2147A80();
  uint64_t v16 = v15;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v19);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  id v18 = v20;
  uint64_t *v20 = v14;
  v18[1] = v16;
  return result;
}

uint64_t sub_1C1FED090(long long *a1, uint64_t a2)
{
  uint64_t v4 = sub_1C2147AC0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v17 - v9;
  char v11 = *((unsigned char *)a1 + 16);
  uint64_t v12 = *(void *)a2;
  uint64_t v13 = *(void *)(a2 + 8);
  char v14 = *(unsigned char *)(a2 + 16);
  long long v17 = *a1;
  char v18 = v11;
  LoggableDose.scheduleDate.getter((uint64_t)&v17 - v9);
  *(void *)&long long v17 = v12;
  *((void *)&v17 + 1) = v13;
  char v18 = v14;
  LoggableDose.scheduleDate.getter((uint64_t)v8);
  LOBYTE(a2) = sub_1C2147A20();
  uint64_t v15 = *(void (**)(char *, uint64_t))(v5 + 8);
  v15(v8, v4);
  v15(v10, v4);
  return a2 & 1;
}

uint64_t sub_1C1FED1E8@<X0>(uint64_t *a1@<X8>)
{
  id v20 = a1;
  uint64_t v19 = sub_1C21478D0();
  uint64_t v1 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19);
  uint64_t v3 = (char *)&v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1C21478F0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1C2147AC0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  char v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (void *)sub_1C2148F90();
  id v13 = objc_msgSend(v12, sel_startDate);

  sub_1C2147A60();
  sub_1C21478E0();
  sub_1C21478C0();
  uint64_t v14 = sub_1C2147A80();
  uint64_t v16 = v15;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v19);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  char v18 = v20;
  uint64_t *v20 = v14;
  v18[1] = v16;
  return result;
}

uint64_t sub_1C1FED44C()
{
  uint64_t v0 = sub_1C2147AC0();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = MEMORY[0x1F4188790](v0);
  uint64_t v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v13 - v5;
  uint64_t v7 = (void *)sub_1C2148F90();
  id v8 = objc_msgSend(v7, sel_startDate);

  sub_1C2147A60();
  uint64_t v9 = sub_1C2148F90();
  id v10 = objc_msgSend((id)v9, sel_startDate);

  sub_1C2147A60();
  LOBYTE(v9) = sub_1C2147A20();
  char v11 = *(void (**)(char *, uint64_t))(v1 + 8);
  v11(v4, v0);
  v11(v6, v0);
  return v9 & 1;
}

uint64_t Publisher<>.groupedByScheduledDate()(uint64_t a1, uint64_t a2)
{
  return sub_1C1FED688(a1, a2, &qword_1EA2C4F28, &qword_1EA2C3BC8);
}

uint64_t sub_1C1FED604@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1C1FED878(a1, (uint64_t)sub_1C1FECE48, (uint64_t)sub_1C1FED090, (void (*)(uint64_t, void, uint64_t, void, void))sub_1C209C8FC, (uint64_t (*)(void))sub_1C1F388E8, a2);
}

uint64_t Publisher<>.groupedByStartDate()(uint64_t a1, uint64_t a2)
{
  return sub_1C1FED688(a1, a2, &qword_1EA2C4F30, (unint64_t *)&qword_1EA2C3BA8);
}

uint64_t sub_1C1FED688(uint64_t a1, uint64_t a2, unint64_t *a3, unint64_t *a4)
{
  sub_1C1FED7CC(255, a3, a4);
  uint64_t v4 = sub_1C2149D00();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v10 - v6;
  sub_1C2149FD0();
  swift_getWitnessTable();
  uint64_t v8 = sub_1C2149FC0();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v8;
}

void sub_1C1FED7CC(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  if (!*a2)
  {
    sub_1C1F23804(255, a3);
    unint64_t v4 = sub_1C214A830();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1C1FED824@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1C1FED878(a1, (uint64_t)sub_1C1FED1E8, (uint64_t)sub_1C1FED44C, (void (*)(uint64_t, void, uint64_t, void, void))sub_1C209C440, (uint64_t (*)(void))sub_1C1F385A8, a2);
}

uint64_t sub_1C1FED878@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void (*a4)(uint64_t, void, uint64_t, void, void)@<X3>, uint64_t (*a5)(void)@<X4>, uint64_t *a6@<X8>)
{
  a4(a2, 0, a3, 0, *a1);
  uint64_t v8 = a5();
  uint64_t result = swift_bridgeObjectRelease();
  *a6 = v8;
  return result;
}

uint64_t Publisher.delayIf<A>(condition:for:scheduler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v56 = a2;
  uint64_t v51 = a3;
  uint64_t v52 = a8;
  uint64_t v54 = a4;
  uint64_t v55 = a1;
  uint64_t v10 = *(void *)(a6 - 8);
  uint64_t v49 = a6;
  uint64_t v50 = v10;
  uint64_t v53 = *(void *)(v10 + 64);
  MEMORY[0x1F4188790](a1);
  uint64_t v12 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = v12;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v40 = AssociatedTypeWitness;
  uint64_t v14 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v15 = *(void *)(v14 + 64);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v44 = (char *)&v39 - v16;
  swift_getAssociatedTypeWitness();
  uint64_t v17 = sub_1C2149E10();
  uint64_t v48 = v17;
  uint64_t v18 = a5;
  uint64_t v19 = swift_getAssociatedTypeWitness();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v47 = WitnessTable;
  uint64_t v42 = a7;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v57 = v17;
  uint64_t v58 = v19;
  uint64_t v59 = WitnessTable;
  uint64_t v60 = AssociatedConformanceWitness;
  uint64_t v22 = sub_1C2149D30();
  uint64_t v23 = swift_getWitnessTable();
  uint64_t v57 = v22;
  uint64_t v58 = v18;
  uint64_t v59 = v23;
  uint64_t v60 = a7;
  uint64_t v24 = sub_1C2149DA0();
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v45 = v24;
  uint64_t v46 = v25;
  MEMORY[0x1F4188790](v24);
  long long v43 = (char *)&v39 - v26;
  id v27 = v44;
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v44, v51, AssociatedTypeWitness);
  uint64_t v29 = v49;
  uint64_t v28 = v50;
  (*(void (**)(char *, uint64_t, uint64_t))(v50 + 16))(v12, v54, v49);
  unint64_t v30 = (*(unsigned __int8 *)(v14 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  unint64_t v31 = (v15 + *(unsigned __int8 *)(v28 + 80) + v30) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
  id v32 = (char *)swift_allocObject();
  *((void *)v32 + 2) = v18;
  *((void *)v32 + 3) = v29;
  uint64_t v33 = v52;
  *((void *)v32 + 4) = v42;
  *((void *)v32 + 5) = v33;
  uint64_t v34 = v56;
  *((void *)v32 + 6) = v55;
  *((void *)v32 + 7) = v34;
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(&v32[v30], v27, v40);
  (*(void (**)(char *, char *, uint64_t))(v28 + 32))(&v32[v31], v41, v29);
  swift_retain();
  sub_1C2149E00();
  uint64_t v35 = v43;
  sub_1C214A070();
  swift_release();
  uint64_t v36 = v45;
  swift_getWitnessTable();
  uint64_t v37 = sub_1C2149FC0();
  (*(void (**)(char *, uint64_t))(v46 + 8))(v35, v36);
  return v37;
}

uint64_t sub_1C1FEDD70@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t)@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X6>, uint64_t *a6@<X8>, uint64_t a7)
{
  uint64_t v54 = a4;
  uint64_t v45 = a3;
  uint64_t v48 = a2;
  uint64_t v50 = a1;
  uint64_t v56 = a6;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = sub_1C2149ED0();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v57 = v9;
  uint64_t v58 = a5;
  uint64_t v59 = WitnessTable;
  uint64_t v60 = a7;
  uint64_t v11 = sub_1C2149DF0();
  uint64_t v43 = *(void *)(v11 - 8);
  uint64_t v44 = v11;
  MEMORY[0x1F4188790](v11);
  uint64_t v42 = (char *)&v38 - v12;
  uint64_t v47 = swift_getAssociatedTypeWitness();
  uint64_t v13 = sub_1C214B4F0();
  uint64_t v51 = *(void *)(v13 - 8);
  uint64_t v52 = v13;
  MEMORY[0x1F4188790](v13);
  uint64_t v49 = (char *)&v38 - v14;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v39 = swift_getAssociatedTypeWitness();
  uint64_t v15 = sub_1C214B4F0();
  uint64_t v40 = *(void *)(v15 - 8);
  uint64_t v41 = v15;
  uint64_t v16 = MEMORY[0x1F4188790](v15);
  uint64_t v18 = (char *)&v38 - v17;
  uint64_t v19 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v20 = MEMORY[0x1F4188790](v16);
  uint64_t v22 = (char *)&v38 - v21;
  uint64_t v46 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v20);
  uint64_t v24 = (char *)&v38 - v23;
  uint64_t v55 = v9;
  uint64_t v57 = v9;
  uint64_t v58 = a5;
  uint64_t v53 = WitnessTable;
  uint64_t v59 = WitnessTable;
  uint64_t v60 = a7;
  uint64_t v25 = sub_1C2149D80();
  uint64_t v38 = *(void *)(v25 - 8);
  uint64_t v26 = MEMORY[0x1F4188790](v25);
  uint64_t v28 = (char *)&v38 - v27;
  char v29 = v48(v26);
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v22, v50, AssociatedTypeWitness);
  sub_1C2149EE0();
  if (v29)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v18, 1, 1);
    unint64_t v30 = v49;
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v47 - 8) + 56))(v49, 1, 1);
    uint64_t v31 = v55;
    sub_1C214A050();
    (*(void (**)(char *, uint64_t))(v51 + 8))(v30, v52);
    (*(void (**)(char *, uint64_t))(v40 + 8))(v18, v41);
    (*(void (**)(char *, uint64_t))(v46 + 8))(v24, v31);
    swift_getWitnessTable();
    uint64_t v32 = sub_1C2149FC0();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v28, v25);
  }
  else
  {
    uint64_t v34 = v49;
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v47 - 8) + 56))(v49, 1, 1);
    uint64_t v35 = v42;
    uint64_t v36 = v55;
    sub_1C214A0A0();
    (*(void (**)(char *, uint64_t))(v51 + 8))(v34, v52);
    (*(void (**)(char *, uint64_t))(v46 + 8))(v24, v36);
    uint64_t v37 = v44;
    swift_getWitnessTable();
    uint64_t v32 = sub_1C2149FC0();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v35, v37);
  }
  *uint64_t v56 = v32;
  return result;
}

uint64_t sub_1C1FEE3E4()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = (v4 + 64) & ~v4;
  uint64_t v6 = *(void *)(v1 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = (v5 + *(void *)(v3 + 64) + v7) & ~v7;
  uint64_t v9 = v8 + *(void *)(v6 + 64);
  uint64_t v10 = v4 | v7 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0 + v5, AssociatedTypeWitness);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v8, v1);

  return MEMORY[0x1F4186498](v0, v9, v10);
}

uint64_t sub_1C1FEE594@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = *(void *)(v2 + 24);
  uint64_t v6 = *(void *)(v2 + 40);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v7 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  return sub_1C1FEDD70(a1, *(uint64_t (**)(uint64_t))(v2 + 48), v2 + v8, v2+ ((v8 + *(void *)(v7 + 64) + *(unsigned __int8 *)(*(void *)(v5 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v5 - 8) + 80)), v5, a2, v6);
}

uint64_t type metadata accessor for ShapeSelectionViewController()
{
  uint64_t result = qword_1EA2C4F40;
  if (!qword_1EA2C4F40) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C1FEE744()
{
  return swift_initClassMetadata2();
}

id sub_1C1FEE794()
{
  v5.receiver = v0;
  v5.super_class = (Class)type metadata accessor for ShapeSelectionViewController();
  objc_msgSendSuper2(&v5, sel_viewDidLoad);
  id result = objc_msgSend(v0, sel_collectionView);
  if (!result)
  {
    __break(1u);
    goto LABEL_6;
  }
  uint64_t v2 = result;
  objc_msgSend(result, sel_setPreservesSuperviewLayoutMargins_, 1);

  id result = objc_msgSend(v0, sel_collectionView);
  if (!result)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v3 = result;
  id v4 = objc_msgSend(self, sel_systemBackgroundColor);
  objc_msgSend(v3, sel_setBackgroundColor_, v4);

  id result = (id)sub_1C2148AD0();
  if (result)
  {
    sub_1C2148900();
    return (id)swift_release();
  }
LABEL_7:
  __break(1u);
  return result;
}

void sub_1C1FEE890(void *a1)
{
  id v1 = a1;
  sub_1C1FEE794();
}

void sub_1C1FEE8D8()
{
}

void sub_1C1FEE934(void *a1)
{
  sub_1C1FEEF28(0, &qword_1EA2C2CA0, MEMORY[0x1E4F66C08]);
  MEMORY[0x1F4188790](v2 - 8);
  id v4 = (char *)&v23 - v3;
  sub_1C1FEEF28(0, &qword_1EA2C2CA8, (void (*)(uint64_t))sub_1C1F243F4);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v23 - v6;
  sub_1C1F243F4();
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = (void *)sub_1C2147D40();
  objc_msgSend(a1, sel_deselectItemAtIndexPath_animated_, v13, 1);

  uint64_t v14 = (void *)sub_1C2147D40();
  id v24 = objc_msgSend(a1, sel_cellForItemAtIndexPath_, v14);

  if (v24)
  {
    type metadata accessor for ShapeCell(0);
    uint64_t v15 = swift_dynamicCastClass();
    if (v15)
    {
      uint64_t v16 = v15 + OBJC_IVAR____TtC19HealthMedicationsUI9ShapeCell_item;
      swift_beginAccess();
      sub_1C1F2116C(v16, (uint64_t)v25);
      if (v26)
      {
        sub_1C1F1CB5C();
        id v17 = v24;
        int v18 = swift_dynamicCast();
        (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, v18 ^ 1u, 1, v9);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v7, 1, v9) != 1)
        {
          sub_1C1F24550((uint64_t)v7, (uint64_t)v12);
          uint64_t v19 = sub_1C2148F60();
          uint64_t v20 = *(void *)(v19 - 8);
          (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v4, v12, v19);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v4, 0, 1, v19);
          swift_retain();
          sub_1C2149E70();

          swift_release();
          sub_1C1FEEF7C((uint64_t)v4, &qword_1EA2C2CA0, MEMORY[0x1E4F66C08]);
          sub_1C1FEEFD8((uint64_t)v12);
          return;
        }
      }
      else
      {
        id v22 = v24;
        sub_1C1FEEF7C((uint64_t)v25, (unint64_t *)&qword_1EBF0C300, (void (*)(uint64_t))sub_1C1F1CB5C);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v7, 1, 1, v9);
      }

      sub_1C1FEEF7C((uint64_t)v7, &qword_1EA2C2CA8, (void (*)(uint64_t))sub_1C1F243F4);
    }
    else
    {
      id v21 = v24;
    }
  }
}

uint64_t sub_1C1FEED68(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5 = sub_1C2147D90();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2147D50();
  id v9 = a3;
  id v10 = a1;
  sub_1C1FEE934(v9);

  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void sub_1C1FEEE64()
{
}

void sub_1C1FEEE94(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = a3;
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1C1FEEEC8()
{
  return swift_release();
}

id sub_1C1FEEED8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ShapeSelectionViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1C1FEEF10()
{
  return swift_release();
}

uint64_t sub_1C1FEEF20()
{
  return type metadata accessor for ShapeSelectionViewController();
}

void sub_1C1FEEF28(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C214B4F0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1C1FEEF7C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1C1FEEF28(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1C1FEEFD8(uint64_t a1)
{
  sub_1C1F243F4();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id sub_1C1FEF034()
{
  uint64_t v1 = OBJC_IVAR____TtC19HealthMedicationsUI28MedicationChartDataFormatter____lazy_storage___numberFormatter;
  uint64_t v2 = *(void **)(v0
                + OBJC_IVAR____TtC19HealthMedicationsUI28MedicationChartDataFormatter____lazy_storage___numberFormatter);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC19HealthMedicationsUI28MedicationChartDataFormatter____lazy_storage___numberFormatter);
  }
  else
  {
    id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28EE0]), sel_init);
    objc_msgSend(v4, sel_setNumberStyle_, 1);
    objc_msgSend(v4, sel_setMaximumFractionDigits_, 2);
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

uint64_t sub_1C1FEF0D0(unint64_t a1, uint64_t *a2)
{
  unint64_t v6 = sub_1C1F65028(a1);
  if (!v6) {
    return MEMORY[0x1E4FBC860];
  }
  unint64_t v7 = v6;
  uint64_t v8 = v6 & 0xFFFFFFFFFFFFFF8;
  if (v6 >> 62) {
    goto LABEL_30;
  }
  uint64_t v9 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  uint64_t v49 = a2;
  if (v9)
  {
    while (1)
    {
      if (v9 < 1)
      {
        __break(1u);
LABEL_49:
        id v47 = v4;
        uint64_t v38 = (char *)MEMORY[0x1C8753960](0, v7);
LABEL_41:
        uint64_t v39 = v38;
        swift_bridgeObjectRelease();
        uint64_t v40 = &v39[OBJC_IVAR____TtC19HealthMedicationsUI23MedicationChartUserInfo_medication];
        uint64_t v41 = (uint64_t)&v39[OBJC_IVAR____TtC19HealthMedicationsUI23MedicationChartUserInfo_statisticsInterval];
        uint64_t v42 = sub_1C1FEF6A8(&v39[OBJC_IVAR____TtC19HealthMedicationsUI23MedicationChartUserInfo_medication], (void *)0x1C, v3, (uint64_t)&v39[OBJC_IVAR____TtC19HealthMedicationsUI23MedicationChartUserInfo_statisticsInterval], v49);
        if (v42)
        {
          uint64_t v43 = (void *)v42;
          uint64_t v44 = sub_1C1FEF6A8(v40, (void *)0x1D, v2, v41, v49);
          if (v44)
          {
            uint64_t v45 = v44;
            swift_bridgeObjectRelease();
            uint64_t v46 = swift_allocObject();
            *(_OWORD *)(v46 + 16) = xmmword_1C214FCB0;
            *(void *)(v46 + 32) = v43;
            *(void *)(v46 + 40) = v45;
            uint64_t v51 = v46;
            sub_1C214A7A0();
            uint64_t v8 = v51;
            goto LABEL_44;
          }
        }
        else
        {
LABEL_44:
        }
        return v8;
      }
      if ((v7 & 0xC000000000000001) != 0)
      {
        uint64_t v10 = 0;
        double v11 = 0.0;
        double v12 = 0.0;
        do
        {
          uint64_t v13 = MEMORY[0x1C8753960](v10++, v7);
          double v12 = v12 + *(double *)(v13 + OBJC_IVAR____TtC19HealthMedicationsUI23MedicationChartUserInfo_takenCount);
          double v14 = *(double *)(v13 + OBJC_IVAR____TtC19HealthMedicationsUI23MedicationChartUserInfo_skippedCount);
          swift_unknownObjectRelease();
          double v11 = v11 + v14;
        }
        while (v9 != v10);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        uint64_t v15 = 0;
        uint64_t v2 = 0;
        uint64_t v3 = 0;
        a2 = &OBJC_IVAR____TtC19HealthMedicationsUI23MedicationChartUserInfo_windowSkippedCount;
        while (1)
        {
          uint64_t v16 = MEMORY[0x1C8753960](v15, v7);
          uint64_t v17 = *(void *)(v16 + OBJC_IVAR____TtC19HealthMedicationsUI23MedicationChartUserInfo_windowTakenCount);
          BOOL v18 = __OFADD__(v3, v17);
          v3 += v17;
          if (v18) {
            break;
          }
          id v4 = *(id *)(v16 + OBJC_IVAR____TtC19HealthMedicationsUI23MedicationChartUserInfo_windowSkippedCount);
          swift_unknownObjectRelease();
          BOOL v18 = __OFADD__(v2, v4);
          v2 += (uint64_t)v4;
          if (v18) {
            goto LABEL_27;
          }
          if (v9 == ++v15) {
            goto LABEL_32;
          }
        }
        __break(1u);
LABEL_27:
        __break(1u);
        goto LABEL_28;
      }
      uint64_t v19 = (void *)(v7 + 32);
      if ((unint64_t)v9 < 2) {
        break;
      }
      unint64_t v20 = v9 & 0xFFFFFFFFFFFFFFFELL;
      id v21 = (void *)(v7 + 40);
      double v11 = 0.0;
      unint64_t v22 = v9 & 0xFFFFFFFFFFFFFFFELL;
      double v12 = 0.0;
      do
      {
        uint64_t v23 = *(v21 - 1);
        double v11 = v11
            + *(double *)(v23 + OBJC_IVAR____TtC19HealthMedicationsUI23MedicationChartUserInfo_skippedCount)
            + *(double *)(*v21 + OBJC_IVAR____TtC19HealthMedicationsUI23MedicationChartUserInfo_skippedCount);
        double v12 = v12
            + *(double *)(v23 + OBJC_IVAR____TtC19HealthMedicationsUI23MedicationChartUserInfo_takenCount)
            + *(double *)(*v21 + OBJC_IVAR____TtC19HealthMedicationsUI23MedicationChartUserInfo_takenCount);
        v21 += 2;
        v22 -= 2;
      }
      while (v22);
      if (v9 != v20) {
        goto LABEL_19;
      }
LABEL_21:
      swift_bridgeObjectRelease();
      uint64_t v2 = 0;
      uint64_t v3 = 0;
      uint64_t v27 = v9;
      while (1)
      {
        uint64_t v28 = *(void *)(*v19 + OBJC_IVAR____TtC19HealthMedicationsUI23MedicationChartUserInfo_windowTakenCount);
        BOOL v18 = __OFADD__(v3, v28);
        v3 += v28;
        if (v18) {
          break;
        }
        uint64_t v29 = *(void *)(*v19 + OBJC_IVAR____TtC19HealthMedicationsUI23MedicationChartUserInfo_windowSkippedCount);
        BOOL v18 = __OFADD__(v2, v29);
        v2 += v29;
        if (v18) {
          goto LABEL_29;
        }
        ++v19;
        if (!--v27) {
          goto LABEL_33;
        }
      }
LABEL_28:
      __break(1u);
LABEL_29:
      __break(1u);
LABEL_30:
      swift_bridgeObjectRetain();
      uint64_t v9 = sub_1C214B930();
      uint64_t v49 = a2;
      if (!v9) {
        goto LABEL_31;
      }
    }
    unint64_t v20 = 0;
    double v11 = 0.0;
    double v12 = 0.0;
LABEL_19:
    unint64_t v24 = v9 - v20;
    uint64_t v25 = (uint64_t *)(v7 + 8 * v20 + 32);
    do
    {
      uint64_t v26 = *v25++;
      double v12 = v12 + *(double *)(v26 + OBJC_IVAR____TtC19HealthMedicationsUI23MedicationChartUserInfo_takenCount);
      double v11 = v11 + *(double *)(v26 + OBJC_IVAR____TtC19HealthMedicationsUI23MedicationChartUserInfo_skippedCount);
      --v24;
    }
    while (v24);
    goto LABEL_21;
  }
LABEL_31:
  uint64_t v2 = 0;
  uint64_t v3 = 0;
  double v11 = 0.0;
  double v12 = 0.0;
LABEL_32:
  swift_bridgeObjectRelease();
LABEL_33:
  uint64_t v48 = v8;
  id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F67C00]), sel_initWithStatisticsType_, 0);
  if (qword_1EBF0CA00 != -1) {
    swift_once();
  }
  id v30 = (id)qword_1EBF0CA18;
  swift_bridgeObjectRetain();
  sub_1C2147730();
  swift_bridgeObjectRelease();

  id v31 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
  uint64_t v32 = (void *)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  id v33 = objc_msgSend(v31, sel_initWithString_, v32, 0xE000000000000000);

  objc_msgSend(v4, sel_setAttributedString_, v33);
  sub_1C1F0ED28();
  uint64_t v34 = swift_allocObject();
  *(_OWORD *)(v34 + 16) = xmmword_1C214E170;
  *(void *)(v34 + 32) = v4;
  uint64_t v50 = v34;
  uint64_t result = sub_1C214A7A0();
  uint64_t v8 = v50;
  if (v12 <= 0.0 && v11 <= 0.0 || !v9)
  {
    swift_bridgeObjectRelease();
    return v8;
  }
  if ((v7 & 0xC000000000000001) != 0) {
    goto LABEL_49;
  }
  if (*(void *)(v48 + 16))
  {
    uint64_t v36 = *(void **)(v7 + 32);
    id v37 = v4;
    uint64_t v38 = v36;
    goto LABEL_41;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C1FEF6A8(void *a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v81 = a4;
  id v78 = a5;
  uint64_t v79 = a3;
  id v70 = a1;
  id v71 = a2;
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C1FF0190(0, &qword_1EBF0B220, MEMORY[0x1E4F27D68], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v66 - v7;
  sub_1C1FF0190(0, (unint64_t *)&unk_1EBF0B210, MEMORY[0x1E4F27CA0], v5);
  MEMORY[0x1F4188790](v9 - 8);
  double v11 = (char *)&v66 - v10;
  uint64_t v77 = sub_1C21476D0();
  uint64_t v12 = *(void *)(v77 - 8);
  MEMORY[0x1F4188790](v77);
  double v14 = (char *)&v66 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1C2147CF0();
  uint64_t v16 = *(void *)(v15 - 8);
  *(void *)&long long v74 = *(void *)(v16 + 56);
  uint64_t v75 = v16 + 56;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v74)(v11, 1, 1, v15);
  uint64_t v17 = sub_1C2147D30();
  uint64_t v18 = *(void *)(v17 - 8);
  id v72 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56);
  id v73 = (id)(v18 + 56);
  v72(v8, 1, 1, v17);
  sub_1C21476B0();
  LODWORD(v76) = MEMORY[0x1C874F790](v81, v14);
  uint64_t v19 = *(void (**)(char *, uint64_t))(v12 + 8);
  uint64_t v20 = v77;
  v19(v14, v77);
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v74)(v11, 1, 1, v15);
  v72(v8, 1, 1, v17);
  sub_1C21476B0();
  int v21 = MEMORY[0x1C874F790](v81, v14);
  v19(v14, v20);
  if (v78)
  {
    if (v78 != (id)1) {
      goto LABEL_24;
    }
    if (v79)
    {
      if (v76) {
        goto LABEL_11;
      }
    }
    else if (v76)
    {
      goto LABEL_11;
    }
LABEL_13:
    int v23 = 0;
    uint64_t v22 = 8;
    goto LABEL_14;
  }
  if (!v79)
  {
    if ((v76 | v21)) {
      goto LABEL_11;
    }
    goto LABEL_13;
  }
  if ((v76 & 1) == 0 && (v21 & 1) == 0) {
    goto LABEL_13;
  }
LABEL_11:
  uint64_t v22 = 0;
  int v23 = 1;
LABEL_14:
  id v24 = sub_1C1FEF034();
  uint64_t v25 = (void *)sub_1C2147DA0();
  id v26 = objc_msgSend(v24, sel_stringForObjectValue_, v25);

  if (!v26) {
    return 0;
  }
  int v68 = v23;
  uint64_t v67 = v22;
  sub_1C214A5F0();

  __swift_project_boxed_opaque_existential_0(v70, v70[3]);
  uint64_t v75 = sub_1C2149320();
  uint64_t v77 = v27;
  id v78 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F67C00]), sel_initWithStatisticsType_, 0);
  objc_msgSend(v78, sel_setDataType_, v71);
  sub_1C1F0ED28();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C2151E40;
  sub_1C1FF0190(0, (unint64_t *)&unk_1EBF0C9A0, (uint64_t (*)(uint64_t))sub_1C1F7C7B0, MEMORY[0x1E4FBBE00]);
  uint64_t v79 = v29;
  uint64_t v30 = swift_initStackObject();
  id v31 = (void **)MEMORY[0x1E4FB06F8];
  long long v74 = xmmword_1C214FCC0;
  *(_OWORD *)(v30 + 16) = xmmword_1C214FCC0;
  uint64_t v32 = *v31;
  *(void *)(v30 + 32) = *v31;
  id v33 = self;
  id v34 = v32;
  id v73 = v33;
  id v35 = objc_msgSend(v33, sel_hk_chartCurrentValueValueFont);
  uint64_t v36 = sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8E0);
  *(void *)(v30 + 40) = v35;
  id v37 = (void *)*MEMORY[0x1E4FB0700];
  id v72 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v36;
  *(void *)(v30 + 64) = v36;
  *(void *)(v30 + 72) = v37;
  uint64_t v38 = self;
  id v70 = v37;
  id v71 = v38;
  id v39 = objc_msgSend(v38, sel_hk_chartLollipopValueColor);
  uint64_t v69 = sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C900);
  *(void *)(v30 + 104) = v69;
  *(void *)(v30 + 80) = v39;
  sub_1C1F49F18(v30);
  id v40 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
  uint64_t v41 = (void *)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1C1FF01F4();
  uint64_t v81 = MEMORY[0x1E4FBC840] + 8;
  uint64_t v42 = (void *)sub_1C214A500();
  swift_bridgeObjectRelease();
  id v43 = objc_msgSend(v40, sel_initWithString_attributes_, v41, v42);

  unint64_t v76 = inited;
  *(void *)(inited + 32) = v43;
  uint64_t v44 = swift_initStackObject();
  *(_OWORD *)(v44 + 16) = xmmword_1C214FCD0;
  *(void *)(v44 + 32) = v34;
  id v45 = v34;
  id v46 = objc_msgSend(v80, sel_minorFont);
  if (v46)
  {
    id v47 = v72;
    *(void *)(v44 + 64) = v72;
    *(void *)(v44 + 40) = v46;
    sub_1C1F49F18(v44);
    id v48 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
    uint64_t v49 = (void *)sub_1C214A5B0();
    uint64_t v50 = (void *)sub_1C214A500();
    swift_bridgeObjectRelease();
    id v51 = objc_msgSend(v48, sel_initWithString_attributes_, v49, v50);

    unint64_t v52 = v76;
    *(void *)(v76 + 40) = v51;
    uint64_t v53 = swift_initStackObject();
    *(_OWORD *)(v53 + 16) = v74;
    *(void *)(v53 + 32) = v45;
    id v54 = v45;
    *(void *)(v53 + 40) = objc_msgSend(v73, sel_hk_chartCurrentValueUnitFont);
    uint64_t v55 = v70;
    *(void *)(v53 + 64) = v47;
    *(void *)(v53 + 72) = v55;
    uint64_t v56 = v55;
    id v57 = objc_msgSend(v71, sel_hk_chartLollipopLabelColor);
    *(void *)(v53 + 104) = v69;
    *(void *)(v53 + 80) = v57;
    sub_1C1F49F18(v53);
    id v58 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
    uint64_t v59 = (void *)sub_1C214A5B0();
    swift_bridgeObjectRelease();
    uint64_t v60 = (void *)sub_1C214A500();
    swift_bridgeObjectRelease();
    id v61 = objc_msgSend(v58, sel_initWithString_attributes_, v59, v60);

    *(void *)(v52 + 48) = v61;
    unint64_t v82 = v52;
    sub_1C214A7A0();
    sub_1C1F38A0C(v82);
    swift_bridgeObjectRelease();
    id v62 = (void *)sub_1C214A770();
    swift_bridgeObjectRelease();
    id v63 = (id)HKUIJoinAttributedStringsForLocale();

    if (v63)
    {
      id v64 = v78;
      objc_msgSend(v78, sel_setAttributedString_, v63);
      if ((v68 & 1) == 0) {
        objc_msgSend(v64, sel_setStatisticsType_, v67);
      }

      return (uint64_t)v64;
    }

    return 0;
  }
  __break(1u);
LABEL_24:
  uint64_t result = sub_1C214B910();
  __break(1u);
  return result;
}

id MedicationChartDataFormatter.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

id MedicationChartDataFormatter.init()()
{
  *(void *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI28MedicationChartDataFormatter____lazy_storage___numberFormatter] = 0;
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MedicationChartDataFormatter();
  return objc_msgSendSuper2(&v2, sel_init);
}

id MedicationChartDataFormatter.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MedicationChartDataFormatter();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t method lookup function for MedicationChartDataFormatter(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MedicationChartDataFormatter);
}

unint64_t sub_1C1FF0138()
{
  unint64_t result = qword_1EA2C4F68;
  if (!qword_1EA2C4F68)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA2C4F68);
  }
  return result;
}

void sub_1C1FF0190(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_1C1FF01F4()
{
  unint64_t result = qword_1EBF0C850;
  if (!qword_1EBF0C850)
  {
    type metadata accessor for Key(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBF0C850);
  }
  return result;
}

char *sub_1C1FF024C(uint64_t a1)
{
  uint64_t v3 = OBJC_IVAR____TtC19HealthMedicationsUI12DayPickerDay_formatter;
  sub_1C1FF1194();
  id v4 = v1;
  *(void *)&v1[v3] = sub_1C214AC10();
  uint64_t v5 = OBJC_IVAR____TtC19HealthMedicationsUI12DayPickerDay_background;
  *(void *)&v4[v5] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F39C88]), sel_init);
  uint64_t v6 = OBJC_IVAR____TtC19HealthMedicationsUI12DayPickerDay_dayLabel;
  *(void *)&v4[v6] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
  uint64_t v7 = &v4[OBJC_IVAR____TtC19HealthMedicationsUI12DayPickerDay_day];
  uint64_t v8 = sub_1C21495D0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v37 = v8;
  (*(void (**)(char *, uint64_t))(v9 + 16))(v7, a1);

  v38.receiver = v4;
  v38.super_class = (Class)type metadata accessor for DayPickerDay();
  uint64_t v10 = (char *)objc_msgSendSuper2(&v38, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v11 = OBJC_IVAR____TtC19HealthMedicationsUI12DayPickerDay_dayLabel;
  uint64_t v12 = *(void **)&v10[OBJC_IVAR____TtC19HealthMedicationsUI12DayPickerDay_dayLabel];
  uint64_t v13 = OBJC_IVAR____TtC19HealthMedicationsUI12DayPickerDay_formatter;
  double v14 = *(void **)&v10[OBJC_IVAR____TtC19HealthMedicationsUI12DayPickerDay_formatter];
  uint64_t v15 = v10;
  id v16 = v12;
  id v17 = v14;
  sub_1C214AC30();
  uint64_t v19 = v18;

  if (v19)
  {
    uint64_t v20 = (void *)sub_1C214A5B0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v20 = 0;
  }
  objc_msgSend(v16, sel_setText_, v20);

  int v21 = *(void **)&v10[v13];
  uint64_t v22 = v15;
  id v23 = v21;
  sub_1C214AC20();
  uint64_t v25 = v24;

  if (v25)
  {
    id v26 = (void *)sub_1C214A5B0();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v26 = 0;
  }
  objc_msgSend(v22, sel_setLargeContentTitle_, v26);

  id v27 = objc_msgSend(v22, sel_layer);
  objc_msgSend(v27, sel_addSublayer_, *(void *)&v22[OBJC_IVAR____TtC19HealthMedicationsUI12DayPickerDay_background]);

  objc_msgSend(v22, sel_addSubview_, *(void *)&v10[v11]);
  sub_1C1FF0650();
  sub_1C1FEBB20();
  uint64_t v28 = swift_allocObject();
  *(_OWORD *)(v28 + 16) = xmmword_1C2150000;
  uint64_t v29 = sub_1C2149C70();
  uint64_t v30 = MEMORY[0x1E4FB1138];
  *(void *)(v28 + 32) = v29;
  *(void *)(v28 + 40) = v30;
  uint64_t v31 = sub_1C2149940();
  uint64_t v32 = MEMORY[0x1E4FB0EE8];
  *(void *)(v28 + 48) = v31;
  *(void *)(v28 + 56) = v32;
  uint64_t v33 = sub_1C2149BF0();
  uint64_t v34 = MEMORY[0x1E4FB0FA8];
  *(void *)(v28 + 64) = v33;
  *(void *)(v28 + 72) = v34;
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1C1F7C8F0();
  id v35 = v22;
  sub_1C214B120();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(a1, v37);
  return v35;
}

void sub_1C1FF05D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a3 + 16;
  swift_beginAccess();
  uint64_t v4 = MEMORY[0x1C8754850](v3);
  if (v4)
  {
    uint64_t v5 = (void *)v4;
    sub_1C1FF0650();
  }
}

id sub_1C1FF0650()
{
  id v1 = *(void **)&v0[OBJC_IVAR____TtC19HealthMedicationsUI12DayPickerDay_dayLabel];
  id result = objc_msgSend(self, sel__preferredFontForTextStyle_variant_maximumContentSizeCategory_, *MEMORY[0x1E4FB28C8], 1024, *MEMORY[0x1E4FB2798]);
  if (result)
  {
    uint64_t v3 = result;
    objc_msgSend(v1, sel_setFont_, result);

    objc_msgSend(v0, sel_setShowsLargeContentViewer_, 1);
    objc_msgSend(v0, sel_setScalesLargeContentImage_, 1);
    id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1938]), sel_init);
    objc_msgSend(v0, sel_addInteraction_, v4);

    sub_1C1FF075C();
    return objc_msgSend(v0, sel_setNeedsLayout);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1C1FF075C()
{
  id v1 = v0;
  if (objc_msgSend(v0, sel_isEnabled))
  {
    unsigned int v2 = objc_msgSend(v0, sel_isSelected);
    uint64_t v3 = *(void **)&v0[OBJC_IVAR____TtC19HealthMedicationsUI12DayPickerDay_background];
    if (v2)
    {
      id v4 = objc_msgSend(v0, sel_tintColor);
      if (!v4)
      {
        __break(1u);
        return;
      }
      uint64_t v5 = v4;
      id v6 = objc_msgSend(v1, sel_traitCollection);
      uint64_t v7 = (void *)sub_1C214B1B0();

      objc_msgSend(v3, sel_setFillColor_, v7);
      uint64_t v8 = *(void **)&v1[OBJC_IVAR____TtC19HealthMedicationsUI12DayPickerDay_dayLabel];
      id v9 = objc_msgSend(self, sel_whiteColor);
      objc_msgSend(v8, sel_setTextColor_, v9);

      uint64_t v10 = (void *)sub_1C214A5B0();
      id v11 = objc_msgSend(self, sel_systemImageNamed_, v10);
    }
    else
    {
      uint64_t v18 = self;
      id v19 = objc_msgSend(v18, sel_clearColor);
      id v20 = objc_msgSend(v1, sel_traitCollection);
      int v21 = (void *)sub_1C214B1B0();

      objc_msgSend(v3, sel_setFillColor_, v21);
      uint64_t v22 = *(void **)&v1[OBJC_IVAR____TtC19HealthMedicationsUI12DayPickerDay_dayLabel];
      id v23 = objc_msgSend(v18, sel_labelColor);
      objc_msgSend(v22, sel_setTextColor_, v23);

      uint64_t v10 = (void *)sub_1C214A5B0();
      id v11 = objc_msgSend(self, sel_systemImageNamed_, v10);
    }
  }
  else
  {
    uint64_t v12 = *(void **)&v0[OBJC_IVAR____TtC19HealthMedicationsUI12DayPickerDay_background];
    uint64_t v13 = self;
    id v14 = objc_msgSend(v13, sel_clearColor);
    id v15 = objc_msgSend(v14, sel_CGColor);

    objc_msgSend(v12, sel_setFillColor_, v15);
    id v16 = *(void **)&v1[OBJC_IVAR____TtC19HealthMedicationsUI12DayPickerDay_dayLabel];
    id v17 = objc_msgSend(v13, sel_tertiaryLabelColor);
    objc_msgSend(v16, sel_setTextColor_, v17);

    uint64_t v10 = (void *)sub_1C214A5B0();
    id v11 = objc_msgSend(self, sel_systemImageNamed_, v10);
  }
  id v24 = v11;

  objc_msgSend(v1, sel_setLargeContentImage_, v24);
}

id sub_1C1FF0AB8()
{
  id v1 = v0;
  v16.receiver = v0;
  v16.super_class = (Class)type metadata accessor for DayPickerDay();
  objc_msgSendSuper2(&v16, sel_layoutSubviews);
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB17A8]), sel_initForTextStyle_, *MEMORY[0x1E4FB2950]);
  id v3 = objc_msgSend(v1, sel_traitCollection);
  objc_msgSend(v2, sel_scaledValueForValue_compatibleWithTraitCollection_, v3, 34.0);
  double v5 = v4;

  objc_msgSend(v1, sel_bounds);
  double Height = CGRectGetHeight(v17);
  objc_msgSend(v1, sel_bounds);
  double Width = CGRectGetWidth(v18);
  if (v5 > 34.0) {
    double v8 = v5;
  }
  else {
    double v8 = 34.0;
  }
  double v9 = Width + -4.0;
  if (v9 >= Height + -4.0) {
    double v9 = Height + -4.0;
  }
  if (v8 >= v9) {
    double v10 = v9;
  }
  else {
    double v10 = v8;
  }
  id v11 = *(void **)&v1[OBJC_IVAR____TtC19HealthMedicationsUI12DayPickerDay_background];
  v19.origin.x = 0.0;
  v19.origin.y = 0.0;
  v19.size.width = v10;
  v19.size.height = v10;
  CGPathRef v12 = CGPathCreateWithEllipseInRect(v19, 0);
  objc_msgSend(v11, sel_setPath_, v12);

  id v13 = objc_msgSend(v11, sel_path);
  objc_msgSend(v11, sel_setShadowPath_, v13);

  objc_msgSend(v11, sel_setFrame_, 0.0, 0.0, v10, v10);
  objc_msgSend(v1, sel_bounds);
  sub_1C214B080();
  sub_1C214B130();
  id v14 = *(void **)&v1[OBJC_IVAR____TtC19HealthMedicationsUI12DayPickerDay_dayLabel];
  objc_msgSend(v14, sel_sizeToFit);
  objc_msgSend(v1, sel_bounds);
  sub_1C214B080();
  return objc_msgSend(v14, sel_setCenter_);
}

id sub_1C1FF0EF8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DayPickerDay();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1C1FF0FD0()
{
  return type metadata accessor for DayPickerDay();
}

uint64_t type metadata accessor for DayPickerDay()
{
  uint64_t result = qword_1EBF0B7E8;
  if (!qword_1EBF0B7E8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C1FF1024()
{
  uint64_t result = sub_1C21495D0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

void sub_1C1FF10C4()
{
  unint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC19HealthMedicationsUI12DayPickerDay_formatter;
  sub_1C1FF1194();
  *(void *)&v0[v2] = sub_1C214AC10();
  uint64_t v3 = OBJC_IVAR____TtC19HealthMedicationsUI12DayPickerDay_background;
  *(void *)&v1[v3] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F39C88]), sel_init);
  uint64_t v4 = OBJC_IVAR____TtC19HealthMedicationsUI12DayPickerDay_dayLabel;
  *(void *)&v1[v4] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);

  sub_1C214B910();
  __break(1u);
}

unint64_t sub_1C1FF1194()
{
  unint64_t result = qword_1EA2C4FD8;
  if (!qword_1EA2C4FD8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA2C4FD8);
  }
  return result;
}

uint64_t sub_1C1FF11D4()
{
  swift_unknownObjectWeakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

void sub_1C1FF120C(uint64_t a1, uint64_t a2)
{
  sub_1C1FF05D4(a1, a2, v2);
}

uint64_t InteractionCriticalAlertItem.resultDisplayable.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C1F236D8(v1 + 16, a1);
}

uint64_t InteractionCriticalAlertItem.reuseIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 56);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1C1FF1250()
{
  uint64_t v1 = v0[7];
  uint64_t v2 = v0[5];
  uint64_t v3 = v0[6];
  __swift_project_boxed_opaque_existential_0(v0 + 2, v2);
  uint64_t v4 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v2, v3);
  id v5 = objc_msgSend(v4, sel_uniqueIdentifier);

  id v6 = objc_msgSend(v5, sel_description);
  sub_1C214A5F0();

  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t InteractionCriticalAlertItem.learnMoreAction.getter()
{
  uint64_t v1 = *(void *)(v0 + 72);
  swift_retain();
  return v1;
}

uint64_t InteractionCriticalAlertItem.dismissAction.getter()
{
  uint64_t v1 = *(void *)(v0 + 88);
  swift_retain();
  return v1;
}

void *InteractionCriticalAlertItem.__allocating_init(resultDisplayable:learnMoreAction:dismissAction:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = *(void *)(a1 + 24);
  uint64_t v12 = *(void *)(a1 + 32);
  uint64_t v13 = __swift_mutable_project_boxed_opaque_existential_1(a1, v11);
  id v14 = sub_1C1FF1DBC(v13, a2, a3, a4, a5, v5, v11, v12);
  __swift_destroy_boxed_opaque_existential_0(a1);
  return v14;
}

void *InteractionCriticalAlertItem.init(resultDisplayable:learnMoreAction:dismissAction:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = *(void *)(a1 + 24);
  uint64_t v12 = *(void *)(a1 + 32);
  uint64_t v13 = __swift_mutable_project_boxed_opaque_existential_1(a1, v11);
  MEMORY[0x1F4188790](v13);
  id v15 = (char *)&v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v16 + 16))(v15);
  CGRect v17 = sub_1C1FF1CBC((uint64_t)v15, a2, a3, a4, a5, v5, v11, v12);
  __swift_destroy_boxed_opaque_existential_0(a1);
  return v17;
}

uint64_t static InteractionCriticalAlertItem.== infix(_:_:)(void *a1, void *a2)
{
  sub_1C1F45050();
  uint64_t v4 = a1[5];
  uint64_t v5 = a1[6];
  __swift_project_boxed_opaque_existential_0(a1 + 2, v4);
  id v6 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v4, v5);
  id v7 = objc_msgSend(v6, sel_identifier);

  double v8 = a2 + 2;
  uint64_t v10 = a2[5];
  uint64_t v9 = a2[6];
  __swift_project_boxed_opaque_existential_0(v8, v10);
  uint64_t v11 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(v10, v9);
  id v12 = objc_msgSend(v11, sel_identifier);

  char v13 = sub_1C214B220();
  return v13 & 1;
}

uint64_t sub_1C1FF162C()
{
  swift_bridgeObjectRetain();
  sub_1C214A690();
  swift_bridgeObjectRelease();
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[6];
  __swift_project_boxed_opaque_existential_0(v0 + 2, v1);
  uint64_t v3 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v2);
  id v4 = objc_msgSend(v3, sel_identifier);

  objc_msgSend(v4, sel_rawIdentifier);
  return sub_1C214BB70();
}

uint64_t InteractionCriticalAlertItem.deinit()
{
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return v0;
}

uint64_t InteractionCriticalAlertItem.__deallocating_deinit()
{
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_1C1FF1774()
{
  sub_1C214BB30();
  swift_bridgeObjectRetain();
  sub_1C214A690();
  swift_bridgeObjectRelease();
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[6];
  __swift_project_boxed_opaque_existential_0(v0 + 2, v1);
  uint64_t v3 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v2);
  id v4 = objc_msgSend(v3, sel_identifier);

  objc_msgSend(v4, sel_rawIdentifier);
  sub_1C214BB70();
  return sub_1C214BB80();
}

uint64_t sub_1C1FF184C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 56);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1C1FF1880()
{
  return sub_1C1FF1250();
}

uint64_t sub_1C1FF18A4(void *a1, void *a2)
{
  uint64_t v2 = (void *)*a1;
  uint64_t v3 = (void *)*a2;
  sub_1C1F45050();
  uint64_t v4 = v2[5];
  uint64_t v5 = v2[6];
  __swift_project_boxed_opaque_existential_0(v2 + 2, v4);
  id v6 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v4, v5);
  id v7 = objc_msgSend(v6, sel_identifier);

  double v8 = v3 + 2;
  uint64_t v9 = v3[5];
  uint64_t v10 = v3[6];
  __swift_project_boxed_opaque_existential_0(v8, v9);
  uint64_t v11 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8))(v9, v10);
  id v12 = objc_msgSend(v11, sel_identifier);

  char v13 = sub_1C214B220();
  return v13 & 1;
}

uint64_t sub_1C1FF19A0()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 136))();
}

uint64_t sub_1C1FF19E4()
{
  uint64_t v1 = (void *)*v0;
  swift_bridgeObjectRetain();
  sub_1C214A690();
  swift_bridgeObjectRelease();
  uint64_t v2 = v1 + 2;
  uint64_t v3 = v1[5];
  uint64_t v4 = v1[6];
  __swift_project_boxed_opaque_existential_0(v2, v3);
  uint64_t v5 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v3, v4);
  id v6 = objc_msgSend(v5, sel_identifier);

  objc_msgSend(v6, sel_rawIdentifier);
  return sub_1C214BB70();
}

uint64_t sub_1C1FF1AA8()
{
  sub_1C214BB30();
  uint64_t v1 = (void *)*v0;
  swift_bridgeObjectRetain();
  sub_1C214A690();
  swift_bridgeObjectRelease();
  uint64_t v2 = v1 + 2;
  uint64_t v3 = v1[5];
  uint64_t v4 = v1[6];
  __swift_project_boxed_opaque_existential_0(v2, v3);
  uint64_t v5 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v3, v4);
  id v6 = objc_msgSend(v5, sel_identifier);

  objc_msgSend(v6, sel_rawIdentifier);
  sub_1C214BB70();
  return sub_1C214BB80();
}

Swift::Void __swiftcall InteractionCriticalAlertItem.didSelectCell(_:in:)(UIView *_, UIViewController *in)
{
  (*(void (**)(UIView *, UIViewController *))(v2 + 72))(_, in);
}

uint64_t InteractionCriticalAlertItem.deselectionBehavior(in:)()
{
  type metadata accessor for InteractionCriticalAlertItem();
  sub_1C1FF1FDC(&qword_1EA2C4FE0, v0, (void (*)(uint64_t))type metadata accessor for InteractionCriticalAlertItem);
  return sub_1C21484D0();
}

uint64_t sub_1C1FF1C34()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 72))();
}

uint64_t sub_1C1FF1C60()
{
  return sub_1C21484D0();
}

void *sub_1C1FF1CBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8)
{
  uint64_t v19 = a7;
  uint64_t v20 = a8;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v18);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a7 - 8) + 32))(boxed_opaque_existential_1, a1, a7);
  type metadata accessor for InteractionCriticalAlertCell();
  sub_1C1FF1FDC(&qword_1EBF0C540, 255, (void (*)(uint64_t))type metadata accessor for InteractionCriticalAlertCell);
  a6[7] = sub_1C21481D0();
  a6[8] = v16;
  sub_1C1F31280(&v18, (uint64_t)(a6 + 2));
  a6[9] = a2;
  a6[10] = a3;
  a6[11] = a4;
  a6[12] = a5;
  return a6;
}

void *sub_1C1FF1DBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v15 = *(void *)(a7 - 8);
  MEMORY[0x1F4188790](a1);
  CGRect v17 = (char *)&v20 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for InteractionCriticalAlertItem();
  long long v18 = (void *)swift_allocObject();
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, a1, a7);
  return sub_1C1FF1CBC((uint64_t)v17, a2, a3, a4, a5, v18, a7, a8);
}

uint64_t type metadata accessor for InteractionCriticalAlertItem()
{
  return self;
}

uint64_t sub_1C1FF1EFC(uint64_t a1, uint64_t a2)
{
  return sub_1C1FF1FDC(&qword_1EA2C4FE8, a2, (void (*)(uint64_t))type metadata accessor for InteractionCriticalAlertItem);
}

uint64_t method lookup function for InteractionCriticalAlertItem(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for InteractionCriticalAlertItem);
}

uint64_t dispatch thunk of InteractionCriticalAlertItem.uniqueIdentifier.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of InteractionCriticalAlertItem.__allocating_init(resultDisplayable:learnMoreAction:dismissAction:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of InteractionCriticalAlertItem.hash(into:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of InteractionCriticalAlertItem.hashValue.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t sub_1C1FF1FDC(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C1FF2024(uint64_t a1, void *a2)
{
  sub_1C1F1CC94(a1, (uint64_t)v5, (unint64_t *)&qword_1EBF0C300, (void (*)(uint64_t))sub_1C1F1CB5C);
  uint64_t v3 = *a2 + OBJC_IVAR____TtC19HealthMedicationsUI24InteractionNoneFoundCell_item;
  swift_beginAccess();
  sub_1C1F32DDC((uint64_t)v5, v3);
  swift_endAccess();
  sub_1C1FF225C();
  return sub_1C1F1CD00((uint64_t)v5, (unint64_t *)&qword_1EBF0C300, (void (*)(uint64_t))sub_1C1F1CB5C);
}

uint64_t sub_1C1FF20CC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI24InteractionNoneFoundCell_item;
  swift_beginAccess();
  return sub_1C1F1CC94(v3, a1, (unint64_t *)&qword_1EBF0C300, (void (*)(uint64_t))sub_1C1F1CB5C);
}

uint64_t sub_1C1FF213C(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI24InteractionNoneFoundCell_item;
  swift_beginAccess();
  sub_1C1F32DDC(a1, v3);
  swift_endAccess();
  sub_1C1FF225C();
  return sub_1C1F1CD00(a1, (unint64_t *)&qword_1EBF0C300, (void (*)(uint64_t))sub_1C1F1CB5C);
}

uint64_t (*sub_1C1FF21C8(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1C1FF2228;
}

uint64_t sub_1C1FF2228(uint64_t a1, char a2)
{
  uint64_t result = swift_endAccess();
  if ((a2 & 1) == 0) {
    return sub_1C1FF225C();
  }
  return result;
}

uint64_t sub_1C1FF225C()
{
  uint64_t v1 = sub_1C2149BE0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v24[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1F1CC40(0, &qword_1EBF0C620, MEMORY[0x1E4FB0F28]);
  uint64_t v6 = MEMORY[0x1F4188790](v5 - 8);
  double v8 = (char *)&v24[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v24[-1] - v9;
  objc_msgSend(v0, sel_setUserInteractionEnabled_, 0);
  sub_1C21499A0();
  uint64_t v11 = sub_1C21499D0();
  uint64_t v12 = *(void *)(v11 - 8);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v10, 0, 1, v11);
  uint64_t v13 = MEMORY[0x1C8752FF0](v10);
  MEMORY[0x1C8752FE0](v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v8, 1, v11))
  {
    uint64_t v14 = (void (*)(uint64_t))MEMORY[0x1E4FB0F28];
    sub_1C1F1CC94((uint64_t)v8, (uint64_t)v10, &qword_1EBF0C620, MEMORY[0x1E4FB0F28]);
    MEMORY[0x1C8752FF0](v10);
    uint64_t v15 = sub_1C1F1CD00((uint64_t)v8, &qword_1EBF0C620, v14);
  }
  else
  {
    id v16 = objc_msgSend(self, sel_tertiarySystemFillColor);
    sub_1C2149990();
    uint64_t v15 = MEMORY[0x1C8752FF0](v8);
  }
  MEMORY[0x1C8753050](v15);
  if (qword_1EBF0CA00 != -1) {
    swift_once();
  }
  id v17 = (id)qword_1EBF0CA18;
  swift_bridgeObjectRetain();
  sub_1C2147730();
  swift_bridgeObjectRelease();

  sub_1C2149B90();
  id v18 = objc_msgSend(self, sel_secondaryLabelColor);
  uint64_t v19 = (void (*)(uint64_t *, void))sub_1C2149AA0();
  sub_1C2149A60();
  v19(v24, 0);
  sub_1C1FF2AF4();
  sub_1C214B0A0();
  uint64_t v20 = (void (*)(uint64_t *, void))sub_1C2149AA0();
  sub_1C2149A50();
  v20(v24, 0);
  v24[3] = v1;
  v24[4] = MEMORY[0x1E4FB0F88];
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v24);
  (*(void (**)(uint64_t *, char *, uint64_t))(v2 + 16))(boxed_opaque_existential_1, v4, v1);
  MEMORY[0x1C8752FD0](v24);
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

id InteractionNoneFoundCell.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  id v9 = objc_allocWithZone(v4);

  return objc_msgSend(v9, sel_initWithFrame_, a1, a2, a3, a4);
}

id InteractionNoneFoundCell.init(frame:)(double a1, double a2, double a3, double a4)
{
  id v9 = &v4[OBJC_IVAR____TtC19HealthMedicationsUI24InteractionNoneFoundCell_item];
  found = (objc_class *)type metadata accessor for InteractionNoneFoundCell();
  *(_OWORD *)id v9 = 0u;
  *((_OWORD *)v9 + 1) = 0u;
  *((void *)v9 + 4) = 0;
  v12.receiver = v4;
  v12.super_class = found;
  return objc_msgSendSuper2(&v12, sel_initWithFrame_, a1, a2, a3, a4);
}

uint64_t type metadata accessor for InteractionNoneFoundCell()
{
  return self;
}

id InteractionNoneFoundCell.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id InteractionNoneFoundCell.init(coder:)(void *a1)
{
  id v3 = &v1[OBJC_IVAR____TtC19HealthMedicationsUI24InteractionNoneFoundCell_item];
  found = (objc_class *)type metadata accessor for InteractionNoneFoundCell();
  *(_OWORD *)id v3 = 0u;
  *((_OWORD *)v3 + 1) = 0u;
  *((void *)v3 + 4) = 0;
  v7.receiver = v1;
  v7.super_class = found;
  id v5 = objc_msgSendSuper2(&v7, sel_initWithCoder_, a1);

  return v5;
}

id InteractionNoneFoundCell.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for InteractionNoneFoundCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1C1FF29C8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC19HealthMedicationsUI24InteractionNoneFoundCell_item;
  swift_beginAccess();
  return sub_1C1F1CC94(v3, a2, (unint64_t *)&qword_1EBF0C300, (void (*)(uint64_t))sub_1C1F1CB5C);
}

uint64_t method lookup function for InteractionNoneFoundCell(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for InteractionNoneFoundCell);
}

uint64_t dispatch thunk of InteractionNoneFoundCell.item.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x58))();
}

uint64_t dispatch thunk of InteractionNoneFoundCell.item.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x60))();
}

uint64_t dispatch thunk of InteractionNoneFoundCell.item.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x68))();
}

unint64_t sub_1C1FF2AF4()
{
  unint64_t result = qword_1EBF0C8E0;
  if (!qword_1EBF0C8E0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBF0C8E0);
  }
  return result;
}

uint64_t type metadata accessor for ManualNameDataSource()
{
  uint64_t result = qword_1EA2C5008;
  if (!qword_1EA2C5008) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C1FF2B80()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1C1FF2BD8(uint64_t a1)
{
  uint64_t v3 = sub_1C2147B20();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_super v7 = (void *)(v1 + qword_1EA2C5000);
  *objc_super v7 = 0;
  v7[1] = 0xE000000000000000;
  *(void *)(v1 + qword_1EA2C4FF8) = a1;
  v10[0] = 0;
  v10[1] = 0xE000000000000000;
  swift_retain();
  sub_1C214B7C0();
  swift_bridgeObjectRelease();
  strcpy((char *)v10, "MutableArray<");
  HIWORD(v10[1]) = -4864;
  sub_1C2147B10();
  sub_1C2147AD0();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  sub_1C214A6C0();
  uint64_t v8 = sub_1C2148590();
  swift_retain();
  sub_1C1FF2D9C();
  sub_1C21485C0();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_1C1FF2D9C()
{
  sub_1C1FF344C();
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1C214FCD0;
  sub_1C2149E90();
  if (v21)
  {
    uint64_t v19 = v21;
    uint64_t v18 = v20;
  }
  else
  {
    uint64_t v18 = *(void *)(v0 + qword_1EA2C5000);
    uint64_t v19 = *(void *)(v0 + qword_1EA2C5000 + 8);
    swift_bridgeObjectRetain();
  }
  if (qword_1EBF0CA00 != -1) {
    swift_once();
  }
  id v2 = (id)qword_1EBF0CA18;
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_1C2147730();
  uint64_t v16 = v4;
  uint64_t v17 = v3;
  swift_bridgeObjectRelease();

  uint64_t v5 = swift_allocObject();
  swift_weakInit();
  uint64_t v6 = (int *)type metadata accessor for FieldItem();
  *(void *)(v1 + 56) = v6;
  *(void *)(v1 + 64) = sub_1C1FF34E4(&qword_1EA2C5028, (void (*)(uint64_t))type metadata accessor for FieldItem);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v1 + 32));
  sub_1C2147B10();
  uint64_t v8 = (uint64_t *)((char *)boxed_opaque_existential_1 + v6[5]);
  id v9 = (uint64_t *)((char *)boxed_opaque_existential_1 + v6[6]);
  uint64_t v10 = (char *)boxed_opaque_existential_1 + v6[10];
  uint64_t v11 = (uint64_t *)((char *)boxed_opaque_existential_1 + v6[14]);
  objc_super v12 = (uint64_t *)((char *)boxed_opaque_existential_1 + v6[15]);
  type metadata accessor for FieldCell();
  sub_1C1FF34E4(&qword_1EA2C7930, (void (*)(uint64_t))type metadata accessor for FieldCell);
  *objc_super v12 = sub_1C21481D0();
  v12[1] = v13;
  *uint64_t v8 = v18;
  v8[1] = v19;
  *id v9 = v17;
  v9[1] = v16;
  *(uint64_t *)((char *)boxed_opaque_existential_1 + v6[7]) = 0x4046000000000000;
  *(void *)uint64_t v10 = 0;
  v10[8] = 1;
  *((unsigned char *)boxed_opaque_existential_1 + v6[9]) = 0;
  *((unsigned char *)boxed_opaque_existential_1 + v6[8]) = 1;
  *(uint64_t *)((char *)boxed_opaque_existential_1 + v6[12]) = 0;
  *uint64_t v11 = 0;
  v11[1] = 0;
  uint64_t v14 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))((char *)boxed_opaque_existential_1 + v6[13]);
  *uint64_t v14 = sub_1C1FF34DC;
  v14[1] = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v5;
  *((unsigned char *)boxed_opaque_existential_1 + v6[11]) = 1;
  return v1;
}

uint64_t sub_1C1FF3050(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v6 = (void *)(Strong + qword_1EA2C5000);
    *uint64_t v6 = a2;
    v6[1] = a3;
    swift_bridgeObjectRetain();
    swift_release();
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    swift_retain();
    swift_release();
    swift_bridgeObjectRetain();
    sub_1C2149E70();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

void sub_1C1FF3148()
{
}

uint64_t sub_1C1FF3178()
{
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1C1FF31BC()
{
  sub_1C2148610();
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_1C1FF3220()
{
  return type metadata accessor for ManualNameDataSource();
}

uint64_t sub_1C1FF3228()
{
  return sub_1C214ACC0();
}

uint64_t sub_1C1FF3298()
{
  return swift_retain();
}

uint64_t sub_1C1FF32A8()
{
  uint64_t v0 = sub_1C2148710();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2148690();
  uint64_t v4 = sub_1C20F270C();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

uint64_t sub_1C1FF3380()
{
  return sub_1C2148B80();
}

uint64_t sub_1C1FF33F8()
{
  return sub_1C1FF34E4(&qword_1EA2C5018, (void (*)(uint64_t))type metadata accessor for ManualNameDataSource);
}

uint64_t sub_1C1FF3440()
{
  return MEMORY[0x1E4FBB1C8];
}

void sub_1C1FF344C()
{
  if (!qword_1EBF0C958)
  {
    sub_1C1F1CB5C();
    unint64_t v0 = sub_1C214BA50();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBF0C958);
    }
  }
}

uint64_t sub_1C1FF34A4()
{
  swift_weakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C1FF34DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C1FF3050(a1, a2, a3);
}

uint64_t sub_1C1FF34E4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

Swift::Void __swiftcall InputAccessoryPresenting.setInputAccessoryViewToToolbar(items:)(Swift::OpaquePointer items)
{
  uint64_t v3 = v2;
  uint64_t v4 = v1;
  id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1DF0]), sel_init);
  objc_msgSend(v5, sel_setBarStyle_, 0);
  sub_1C1FF3618();
  uint64_t v6 = (void *)sub_1C214A770();
  objc_msgSend(v5, sel_setItems_, v6);

  objc_msgSend(v5, sel_sizeToFit);
  objc_super v7 = *(void (**)(id, uint64_t, uint64_t))(v3 + 16);
  id v8 = v5;
  v7(v5, v4, v3);
}

unint64_t sub_1C1FF3618()
{
  unint64_t result = qword_1EA2C3508;
  if (!qword_1EA2C3508)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA2C3508);
  }
  return result;
}

uint64_t (*sub_1C1FF3658(void *a1))()
{
  a1[1] = v1;
  *a1 = objc_msgSend(v1, sel_inputAccessoryView);
  return sub_1C1FF3834;
}

id sub_1C1FF36B8()
{
  id v1 = objc_msgSend(v0, sel_inputAccessoryView);

  return v1;
}

void sub_1C1FF36F0(void *a1)
{
  objc_msgSend(v1, sel_setInputAccessoryView_, a1);
}

void (*sub_1C1FF3738(void *a1))(id *a1)
{
  a1[1] = v1;
  *a1 = objc_msgSend(v1, sel_inputAccessoryView);
  return sub_1C1FF3794;
}

void sub_1C1FF3794(id *a1)
{
  id v1 = *a1;
  objc_msgSend(a1[1], sel_setInputAccessoryView_);
}

uint64_t dispatch thunk of InputAccessoryPresenting.inputAccessoryView.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of InputAccessoryPresenting.inputAccessoryView.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of InputAccessoryPresenting.inputAccessoryView.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of InputAccessoryPresenting.setInputAccessoryViewToToolbar(items:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t sub_1C1FF3838()
{
  id v1 = objc_msgSend(v0, sel_educationContent);
  if (v1
    && (uint64_t v2 = v1,
        id v3 = objc_msgSend(v1, sel_firstSectionWithType_, 1),
        v2,
        v3)
    && (id v4 = objc_msgSend(v3, sel_localizedText), v3, v4))
  {
    uint64_t v5 = sub_1C214A5F0();
  }
  else
  {
    if (qword_1EBF0CA00 != -1) {
      swift_once();
    }
    id v4 = (id)qword_1EBF0CA18;
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_1C2147730();
    swift_bridgeObjectRelease();
  }

  return v5;
}

uint64_t sub_1C1FF3988()
{
  id v1 = objc_msgSend(v0, sel_educationContent);
  if (v1
    && (uint64_t v2 = v1,
        id v3 = objc_msgSend(v1, sel_firstSectionWithType_, 1),
        v2,
        v3)
    && (id v4 = objc_msgSend(v3, sel_attributions), v3, v4))
  {
    sub_1C214A780();

    sub_1C1FE7550();
    sub_1C1F64558();
    uint64_t v5 = sub_1C214A580();
    swift_bridgeObjectRelease();
    return v5;
  }
  else
  {
    if (qword_1EBF0CA00 != -1) {
      swift_once();
    }
    id v7 = (id)qword_1EBF0CA18;
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_1C2147730();
    swift_bridgeObjectRelease();

    return v8;
  }
}

uint64_t static UIColor.medicationCategoryRoomCyanHighlightedBackground.getter()
{
  return sub_1C1FF3B50(0.2, 0.3);
}

uint64_t static UIColor.medicationCategoryRoomCyanBackground.getter()
{
  return sub_1C1FF3B50(0.1, 0.2);
}

uint64_t sub_1C1FF3B50(double a1, double a2)
{
  sub_1C1F758A4();
  id v4 = self;
  id v5 = objc_msgSend(v4, sel_systemCyanColor);
  id v6 = objc_msgSend(v5, sel_colorWithAlphaComponent_, a1);

  id v7 = objc_msgSend(v4, sel_systemCyanColor);
  id v8 = objc_msgSend(v7, sel_colorWithAlphaComponent_, a2);

  uint64_t v9 = sub_1C214B160();
  return v9;
}

void static UIColor.medicationTimelineCurrentDayCompleteGradientStart.getter()
{
}

void static UIColor.medicationTimelineCurrentDayCompleteGradientMiddle.getter()
{
}

void static UIColor.medicationTimelineCurrentDayCompleteGradientEnd.getter()
{
}

void sub_1C1FF3C8C()
{
  if (qword_1EBF0CA38 != -1) {
    swift_once();
  }
  id v0 = (id)qword_1EBF0CA30;
  id v1 = (void *)sub_1C214A5B0();
  id v2 = objc_msgSend(self, sel_colorNamed_inBundle_compatibleWithTraitCollection_, v1, v0, 0);

  if (!v2) {
    __break(1u);
  }
}

unint64_t static MedicationVisualizationConfig.random()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1C2149540();
  uint64_t v71 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  id v70 = (char *)&v64 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = sub_1C2149390();
  uint64_t v4 = *(void *)(v75 - 8);
  MEMORY[0x1F4188790](v75);
  id v6 = (char *)&v64 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1F3BE6C();
  uint64_t v84 = *(void *)(v7 - 8);
  uint64_t v85 = v7;
  MEMORY[0x1F4188790](v7);
  id v86 = (char *)&v64 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C1FF4910(0, &qword_1EA2C5030, MEMORY[0x1E4F66BE8], MEMORY[0x1E4FBB718]);
  uint64_t v11 = MEMORY[0x1F4188790](v10 - 8);
  id v78 = (char *)&v64 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  id v72 = (char *)&v64 - v13;
  sub_1C1F3BF0C();
  uint64_t v83 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v69 = (char *)&v64 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1FF4910(0, &qword_1EA2C2CA0, MEMORY[0x1E4F66C08], v9);
  MEMORY[0x1F4188790](v17 - 8);
  uint64_t v19 = (char *)&v64 - v18;
  uint64_t v20 = sub_1C2148F60();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = MEMORY[0x1F4188790](v20);
  id v73 = (char *)&v64 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v22);
  long long v74 = (char *)&v64 - v24;
  uint64_t v25 = sub_1C2148F40();
  uint64_t v26 = v25;
  unint64_t v27 = *(void *)(v25 + 16);
  if (v27)
  {
    unint64_t result = sub_1C1FF4884(*(void *)(v25 + 16));
    if (result >= v27) {
      goto LABEL_34;
    }
    (*(void (**)(char *, unint64_t, uint64_t))(v21 + 16))(v19, v26+ ((*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80))+ *(void *)(v21 + 72) * result, v20);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v19, 0, 1, v20);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56))(v19, 1, 1, v20);
  }
  swift_bridgeObjectRelease();
  unint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20);
  uint64_t v29 = v72;
  if (result == 1) {
    goto LABEL_37;
  }
  uint64_t v30 = v74;
  (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v74, v19, v20);
  uint64_t v67 = v21;
  uint64_t v31 = *(void (**)(char *, char *, uint64_t))(v21 + 16);
  uint64_t v68 = v20;
  v31(v73, v30, v20);
  uint64_t v32 = sub_1C2148F50();
  int64_t v33 = *(void *)(v32 + 16);
  if (v33)
  {
    uint64_t v65 = v2;
    uint64_t v66 = a1;
    uint64_t v88 = MEMORY[0x1E4FBC860];
    sub_1C1F70564(0, v33, 0);
    uint64_t v34 = 0;
    uint64_t v36 = *(void (**)(uint64_t, char *, uint64_t))(v4 + 16);
    uint64_t v35 = v4 + 16;
    unint64_t v82 = v36;
    unint64_t v37 = (*(unsigned __int8 *)(v35 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 64);
    uint64_t v64 = v32;
    unint64_t v81 = v32 + v37;
    uint64_t v38 = *(void *)(v35 + 56);
    uint64_t v79 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 56);
    uint64_t v80 = v38;
    id v39 = (void (**)(char *, uint64_t))(v35 - 8);
    uint64_t v40 = v75;
    uint64_t v41 = (uint64_t)v86;
    int64_t v42 = v33;
    int64_t v76 = v33;
    uint64_t v77 = v35;
    while (1)
    {
      id v43 = v82;
      v82((uint64_t)v6, (char *)(v81 + v80 * v34), v40);
      uint64_t v44 = v41 + *(int *)(v85 + 48);
      v43(v41, v6, v40);
      if (sub_1C2149380())
      {
        uint64_t v45 = sub_1C2148E20();
        unint64_t v46 = *(void *)(v45 + 16);
        if (v46)
        {
          unint64_t v87 = 0;
          unint64_t result = MEMORY[0x1C8754750](&v87, 8);
          uint64_t v47 = (v87 * (unsigned __int128)v46) >> 64;
          if (v46 > v87 * v46)
          {
            unint64_t v48 = -(uint64_t)v46 % v46;
            if (v48 > v87 * v46)
            {
              do
              {
                unint64_t v87 = 0;
                unint64_t result = MEMORY[0x1C8754750](&v87, 8);
              }
              while (v48 > v87 * v46);
              uint64_t v47 = (v87 * (unsigned __int128)v46) >> 64;
            }
          }
          if (v47 >= *(void *)(v45 + 16))
          {
            __break(1u);
LABEL_34:
            __break(1u);
LABEL_35:
            __break(1u);
LABEL_36:
            __break(1u);
LABEL_37:
            __break(1u);
LABEL_38:
            __break(1u);
            return result;
          }
          uint64_t v49 = sub_1C2148E60();
          uint64_t v50 = *(void *)(v49 - 8);
          id v51 = v78;
          (*(void (**)(char *, unint64_t, uint64_t))(v50 + 16))(v78, v45+ ((*(unsigned __int8 *)(v50 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80))+ *(void *)(v50 + 72) * v47, v49);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v51, 0, 1, v49);
          uint64_t v40 = v75;
        }
        else
        {
          uint64_t v49 = sub_1C2148E60();
          id v51 = v78;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v49 - 8) + 56))(v78, 1, 1, v49);
        }
        swift_bridgeObjectRelease();
        sub_1C2148E60();
        uint64_t v53 = *(void *)(v49 - 8);
        unint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v53 + 48))(v51, 1, v49);
        if (result == 1) {
          goto LABEL_36;
        }
        sub_1C2148E50();
        (*(void (**)(char *, uint64_t))(v53 + 8))(v51, v49);
        sub_1C1F758A4();
        sub_1C214A480();
        uint64_t v52 = 0;
        int64_t v42 = v76;
      }
      else
      {
        uint64_t v52 = 1;
      }
      (*v79)(v44, v52, 1, v83);
      (*v39)(v6, v40);
      uint64_t v54 = v88;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C1F70564(0, *(void *)(v54 + 16) + 1, 1);
        uint64_t v54 = v88;
      }
      uint64_t v41 = (uint64_t)v86;
      unint64_t v56 = *(void *)(v54 + 16);
      unint64_t v55 = *(void *)(v54 + 24);
      if (v56 >= v55 >> 1)
      {
        sub_1C1F70564(v55 > 1, v56 + 1, 1);
        uint64_t v41 = (uint64_t)v86;
        uint64_t v54 = v88;
      }
      ++v34;
      *(void *)(v54 + 16) = v56 + 1;
      sub_1C1F75A88(v41, v54+ ((*(unsigned __int8 *)(v84 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v84 + 80))+ *(void *)(v84 + 72) * v56);
      if (v34 == v42)
      {
        swift_bridgeObjectRelease();
        uint64_t v2 = v65;
        uint64_t v29 = v72;
        goto LABEL_27;
      }
    }
  }
  swift_bridgeObjectRelease();
LABEL_27:
  uint64_t v57 = sub_1C2148E30();
  uint64_t v58 = v57;
  unint64_t v59 = *(void *)(v57 + 16);
  if (v59)
  {
    unint64_t result = sub_1C1FF4884(*(void *)(v57 + 16));
    if (result >= v59) {
      goto LABEL_35;
    }
    unint64_t v60 = result;
    uint64_t v61 = sub_1C2148E60();
    uint64_t v62 = *(void *)(v61 - 8);
    (*(void (**)(char *, unint64_t, uint64_t))(v62 + 16))(v29, v58+ ((*(unsigned __int8 *)(v62 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v62 + 80))+ *(void *)(v62 + 72) * v60, v61);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v62 + 56))(v29, 0, 1, v61);
  }
  else
  {
    uint64_t v61 = sub_1C2148E60();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v61 - 8) + 56))(v29, 1, 1, v61);
  }
  swift_bridgeObjectRelease();
  sub_1C2148E60();
  uint64_t v63 = *(void *)(v61 - 8);
  unint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v63 + 48))(v29, 1, v61);
  if (result == 1) {
    goto LABEL_38;
  }
  sub_1C2148E50();
  (*(void (**)(char *, uint64_t))(v63 + 8))(v29, v61);
  sub_1C1F758A4();
  sub_1C214A480();
  (*(void (**)(char *, void, uint64_t))(v71 + 104))(v70, *MEMORY[0x1E4F66CE0], v2);
  sub_1C21492B0();
  return (*(uint64_t (**)(char *, uint64_t))(v67 + 8))(v74, v68);
}

unint64_t sub_1C1FF4884(unint64_t result)
{
  if (result)
  {
    unint64_t v1 = result;
    unint64_t v3 = 0;
    MEMORY[0x1C8754750](&v3, 8);
    unint64_t result = (v3 * (unsigned __int128)v1) >> 64;
    if (v3 * v1 < v1)
    {
      unint64_t v2 = -(uint64_t)v1 % v1;
      if (v2 > v3 * v1)
      {
        do
        {
          unint64_t v3 = 0;
          MEMORY[0x1C8754750](&v3, 8);
        }
        while (v2 > v3 * v1);
        return (v3 * (unsigned __int128)v1) >> 64;
      }
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1C1FF4910(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

BOOL HKMedicationScheduleType.isMultiphasic.getter(uint64_t a1)
{
  return (unint64_t)(a1 - 7) < 2;
}

uint64_t type metadata accessor for StartDateEndDateEditDataSource()
{
  uint64_t result = qword_1EA2C5060;
  if (!qword_1EA2C5060) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C1FF49D0()
{
  uint64_t result = type metadata accessor for DurationDatePickerItem();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1C1FF4A84(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  id v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C1FF8310(0, &qword_1EBF0C610, MEMORY[0x1E4FB0E38], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v95 = (uint64_t (*)(uint64_t, uint64_t))((char *)&v80 - v8);
  uint64_t v9 = (void *)sub_1C2149910();
  uint64_t v92 = *(v9 - 1);
  id v93 = v9;
  MEMORY[0x1F4188790](v9);
  *(void *)&long long v94 = (char *)&v80 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1C21498C0();
  uint64_t v96 = *(void *)(v11 - 8);
  uint64_t v97 = v11;
  MEMORY[0x1F4188790](v11);
  uint64_t v102 = (char *)&v80 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1FF8310(0, &qword_1EBF0B1F0, MEMORY[0x1E4F27928], v6);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v108 = (uint64_t)&v80 - v14;
  uint64_t v15 = (int *)type metadata accessor for DurationDatePickerItem();
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (uint64_t *)((char *)&v80 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v18 = sub_1C21499D0();
  uint64_t v106 = *(void *)(v18 - 8);
  uint64_t v19 = MEMORY[0x1F4188790](v18);
  uint64_t v105 = (char *)&v80 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  uint64_t v22 = (char *)&v80 - v21;
  *(void *)(v3 + qword_1EA2C5048) = 0;
  *(void *)(v3 + qword_1EA2C5038) = a1;
  *(void *)(v3 + qword_1EA2C5040) = a2;
  uint64_t v103 = v3;
  swift_retain();
  swift_retain();
  uint64_t v107 = a2;
  swift_retain();
  sub_1C21499C0();
  id v82 = self;
  id v23 = objc_msgSend(v82, sel_secondarySystemGroupedBackgroundColor);
  sub_1C2149990();
  if (qword_1EBF0CA00 != -1) {
    swift_once();
  }
  id v24 = (id)qword_1EBF0CA18;
  swift_bridgeObjectRetain();
  uint64_t v91 = sub_1C2147730();
  id v90 = v25;
  swift_bridgeObjectRelease();

  uint64_t v26 = *(void (**)(char *, char *, uint64_t))(v106 + 16);
  uint64_t v84 = v106 + 16;
  uint64_t v85 = v26;
  id v101 = v22;
  v26(v105, v22, v18);
  uint64_t v27 = sub_1C2147AC0();
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t v29 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v28 + 56);
  uint64_t v30 = v28 + 56;
  uint64_t v83 = v27;
  v29(v108, 1, 1, v27);
  uint64_t v99 = v30;
  uint64_t v100 = v29;
  swift_retain_n();
  sub_1C2147B10();
  uint64_t v31 = type metadata accessor for DurationDatePickerCollectionViewCell();
  uint64_t v89 = sub_1C1FF8934(&qword_1EA2C4D18, (void (*)(uint64_t))type metadata accessor for DurationDatePickerCollectionViewCell);
  uint64_t v88 = v31;
  *uint64_t v17 = sub_1C21481D0();
  v17[1] = v32;
  uint64_t v33 = v15[7];
  uint64_t v104 = a1;
  uint64_t v34 = (uint64_t *)((char *)v17 + v33);
  uint64_t v35 = v15[10];
  uint64_t v98 = v18;
  uint64_t v36 = (uint64_t *)((char *)v17 + v35);
  *uint64_t v36 = 0;
  v36[1] = 0;
  unint64_t v37 = (uint64_t *)((char *)v17 + v15[11]);
  uint64_t *v37 = 0;
  v37[1] = 0;
  uint64_t v38 = (uint64_t *)((char *)v17 + v15[12]);
  *uint64_t v38 = 0;
  v38[1] = 0;
  uint64_t v39 = (uint64_t)v17 + v15[16];
  v29(v39, 1, 1, v27);
  uint64_t v40 = (uint64_t *)((char *)v17 + v15[6]);
  id v41 = v90;
  *uint64_t v40 = v91;
  v40[1] = v41;
  *uint64_t v34 = 0;
  v34[1] = 0;
  *((unsigned char *)v17 + v15[13]) = 1;
  *(uint64_t *)((char *)v17 + v15[14]) = 1;
  *(uint64_t *)((char *)v17 + v15[15]) = 2;
  sub_1C1FE024C(v108, v39);
  sub_1C1F31118(*v36);
  uint64_t v42 = v104;
  *uint64_t v36 = (uint64_t)sub_1C1FF8374;
  v36[1] = v42;
  sub_1C1F31118(*v37);
  uint64_t *v37 = (uint64_t)sub_1C1FF837C;
  v37[1] = v42;
  sub_1C1F31118(*v38);
  *uint64_t v38 = 0;
  v38[1] = 0;
  *(uint64_t *)((char *)v17 + v15[8]) = MEMORY[0x1E4FBC860];
  id v43 = (char *)v17 + v15[9];
  uint64_t v44 = *(void (**)(char *, char *, uint64_t))(v106 + 32);
  uint64_t v86 = v106 + 32;
  unint64_t v87 = v44;
  uint64_t v45 = v105;
  uint64_t v46 = v98;
  v44(v43, v105, v98);
  uint64_t v91 = v103 + qword_1EA2C5050;
  sub_1C1FE1D40((uint64_t)v17, v103 + qword_1EA2C5050);
  sub_1C1F12718(0, &qword_1EA2C3198);
  uint64_t v47 = (void *)sub_1C214A5B0();
  id v48 = objc_msgSend(self, sel_systemImageNamed_, v47);

  swift_retain();
  uint64_t v49 = (void *)sub_1C214B250();
  sub_1C1F12718(0, &qword_1EBF0C928);
  id v90 = v49;
  uint64_t v50 = (void *)sub_1C214B410();
  id v51 = objc_msgSend(v82, sel_secondaryLabelColor);
  objc_msgSend(v50, sel_setTintColor_, v51);

  sub_1C1FBE24C();
  uint64_t v53 = v94;
  uint64_t v54 = (uint64_t (**)())(v94 + *(int *)(v52 + 48));
  uint64_t v55 = *MEMORY[0x1E4FB0E18];
  uint64_t v56 = sub_1C2149860();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v56 - 8) + 104))(v53, v55, v56);
  *uint64_t v54 = sub_1C1F52D30;
  v54[1] = 0;
  (*(void (**)(uint64_t, void, id))(v92 + 104))(v53, *MEMORY[0x1E4FB0E60], v93);
  uint64_t v57 = sub_1C2149870();
  (*(void (**)(uint64_t (*)(uint64_t, uint64_t), uint64_t, uint64_t, uint64_t))(*(void *)(v57 - 8)
                                                                                              + 56))(v95, 1, 1, v57);
  id v93 = v50;
  sub_1C21498B0();
  id v58 = (id)qword_1EBF0CA18;
  swift_bridgeObjectRetain();
  uint64_t v92 = sub_1C2147730();
  id v82 = v59;
  swift_bridgeObjectRelease();

  uint64_t v95 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
  sub_1C1FF8310(0, (unint64_t *)&unk_1EBF0C990, MEMORY[0x1E4FB0E68], MEMORY[0x1E4FBBE00]);
  sub_1C2149930();
  uint64_t v81 = swift_allocObject();
  long long v94 = xmmword_1C214FCD0;
  *(_OWORD *)(v81 + 16) = xmmword_1C214FCD0;
  sub_1C2149810();
  v85(v45, v101, v46);
  uint64_t v60 = v108;
  sub_1C2149E90();
  uint64_t v61 = v83;
  v100(v60, 0, 1, v83);
  uint64_t v62 = swift_allocObject();
  swift_weakInit();
  uint64_t v63 = swift_allocObject();
  swift_weakInit();
  swift_retain();
  swift_retain();
  sub_1C2147B10();
  *uint64_t v17 = sub_1C21481D0();
  v17[1] = v64;
  uint64_t v65 = (uint64_t *)((char *)v17 + v15[7]);
  uint64_t v66 = (uint64_t *)((char *)v17 + v15[10]);
  *uint64_t v66 = 0;
  v66[1] = 0;
  uint64_t v67 = (uint64_t *)((char *)v17 + v15[11]);
  *uint64_t v67 = 0;
  v67[1] = 0;
  uint64_t v68 = (uint64_t *)((char *)v17 + v15[12]);
  *uint64_t v68 = 0;
  v68[1] = 0;
  uint64_t v69 = (uint64_t)v17 + v15[16];
  v100(v69, 1, 1, v61);
  id v70 = (uint64_t *)((char *)v17 + v15[6]);
  uint64_t v71 = (uint64_t)v82;
  *id v70 = v92;
  v70[1] = v71;
  void *v65 = 0;
  v65[1] = 0;
  *((unsigned char *)v17 + v15[13]) = 1;
  *(uint64_t *)((char *)v17 + v15[14]) = 1;
  *(uint64_t *)((char *)v17 + v15[15]) = 2;
  sub_1C1FE024C(v108, v69);
  sub_1C1F31118(*v66);
  *uint64_t v66 = (uint64_t)sub_1C1FF83C4;
  v66[1] = v62;
  sub_1C1F31118(*v67);
  *uint64_t v67 = (uint64_t)sub_1C1FF83CC;
  v67[1] = v63;
  sub_1C1F31118(*v68);
  *uint64_t v68 = 0;
  v68[1] = 0;
  *(uint64_t *)((char *)v17 + v15[8]) = v81;
  uint64_t v72 = v98;
  v87((char *)v17 + v15[9], v105, v98);
  swift_release();
  swift_release();
  uint64_t v73 = v103 + qword_1EA2C5058;
  sub_1C1FE1D40((uint64_t)v17, v103 + qword_1EA2C5058);
  sub_1C1FF8310(0, (unint64_t *)&qword_1EA2C2DD0, MEMORY[0x1E4F66468], v95);
  sub_1C2148540();
  *(_OWORD *)(swift_allocObject() + 16) = v94;
  sub_1C1F5FE64(0, (unint64_t *)&qword_1EBF0C958, (unint64_t *)&qword_1EBF0C2F0);
  uint64_t v74 = swift_allocObject();
  *(_OWORD *)(v74 + 16) = xmmword_1C214FCC0;
  *(void *)(v74 + 56) = v15;
  uint64_t v75 = sub_1C1FF8934((unint64_t *)&unk_1EA2C4D58, (void (*)(uint64_t))type metadata accessor for DurationDatePickerItem);
  *(void *)(v74 + 64) = v75;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v74 + 32));
  sub_1C1FF83D4(v91, (uint64_t)boxed_opaque_existential_1);
  swift_beginAccess();
  *(void *)(v74 + 96) = v15;
  *(void *)(v74 + 104) = v75;
  uint64_t v77 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v74 + 72));
  sub_1C1FF83D4(v73, (uint64_t)v77);
  swift_release();
  sub_1C2148520();
  uint64_t v78 = sub_1C2148590();
  swift_retain();
  sub_1C1FF62E0();

  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v96 + 8))(v102, v97);
  (*(void (**)(char *, uint64_t))(v106 + 8))(v101, v72);
  return v78;
}

uint64_t sub_1C1FF58E8@<X0>(uint64_t a1@<X8>)
{
  sub_1C2149E90();
  uint64_t v2 = sub_1C2147AC0();
  uint64_t v3 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);

  return v3(a1, 0, 1, v2);
}

uint64_t sub_1C1FF595C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v24[1] = a3;
  uint64_t v4 = sub_1C2147CF0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1FF8310(0, &qword_1EBF0B1F0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)v24 - v9;
  uint64_t v11 = sub_1C2147AC0();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x1F4188790](v13);
  uint64_t v18 = (char *)v24 - v17;
  MEMORY[0x1F4188790](v16);
  uint64_t v20 = (char *)v24 - v19;
  sub_1C1FE0174(a2, (uint64_t)v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1) {
    return sub_1C1F13AE4((uint64_t)v10, &qword_1EBF0B1F0, MEMORY[0x1E4F27928]);
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v20, v10, v11);
  sub_1C2147CB0();
  sub_1C2147BC0();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_1C2149E90();
  sub_1C1FF8934(&qword_1EA2C5070, MEMORY[0x1E4F27928]);
  char v22 = sub_1C214A5A0();
  id v23 = *(void (**)(char *, uint64_t))(v12 + 8);
  v23(v15, v11);
  if ((v22 & 1) == 0) {
    sub_1C2149E70();
  }
  v23(v18, v11);
  return ((uint64_t (*)(char *, uint64_t))v23)(v20, v11);
}

uint64_t sub_1C1FF5CA0()
{
  id v0 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27928];
  sub_1C1FF8310(0, &qword_1EBF0B1F0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)&v6 - v2;
  uint64_t v4 = sub_1C2147AC0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 1, 1, v4);
  sub_1C2149E70();
  return sub_1C1F13AE4((uint64_t)v3, &qword_1EBF0B1F0, v0);
}

uint64_t sub_1C1FF5D9C@<X0>(uint64_t a1@<X8>)
{
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    sub_1C2149E90();
    return swift_release();
  }
  else
  {
    uint64_t v3 = sub_1C2147AC0();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(a1, 1, 1, v3);
  }
}

uint64_t sub_1C1FF5E3C(uint64_t a1, uint64_t a2, char *a3)
{
  uint64_t v39 = a3;
  uint64_t v4 = sub_1C2147CF0();
  uint64_t v37 = *(void *)(v4 - 8);
  uint64_t v38 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1FF8310(0, &qword_1EBF0B1F0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  uint64_t v8 = MEMORY[0x1F4188790](v7 - 8);
  uint64_t v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x1F4188790](v8);
  uint64_t v13 = (char *)&v34 - v12;
  MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)&v34 - v14;
  uint64_t v16 = sub_1C2147AC0();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = MEMORY[0x1F4188790](v16);
  uint64_t v20 = (char *)&v34 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  char v22 = (char *)&v34 - v21;
  sub_1C1FE0174(a2, (uint64_t)v15);
  id v23 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
  if (v23(v15, 1, v16) == 1)
  {
    id v24 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27928];
    uint64_t v25 = (uint64_t)v15;
    return sub_1C1F13AE4(v25, &qword_1EBF0B1F0, v24);
  }
  uint64_t v35 = v10;
  uint64_t v36 = v20;
  uint64_t v34 = v6;
  uint64_t v26 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
  uint64_t v39 = v22;
  v26(v22, v15, v16);
  swift_beginAccess();
  uint64_t v27 = v16;
  if (!swift_weakLoadStrong())
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v13, 1, 1, v16);
    goto LABEL_10;
  }
  sub_1C2149E90();
  swift_release();
  if (v23(v13, 1, v16) == 1)
  {
LABEL_10:
    (*(void (**)(char *, uint64_t))(v17 + 8))(v39, v16);
    id v24 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27928];
    uint64_t v25 = (uint64_t)v13;
    return sub_1C1F13AE4(v25, &qword_1EBF0B1F0, v24);
  }
  uint64_t v28 = v36;
  v26(v36, v13, v16);
  sub_1C1FF8934(&qword_1EA2C5070, MEMORY[0x1E4F27928]);
  uint64_t v29 = v39;
  if ((sub_1C214A5A0() & 1) == 0)
  {
    swift_beginAccess();
    if (swift_weakLoadStrong())
    {
      uint64_t v30 = v34;
      sub_1C2147CB0();
      uint64_t v31 = (uint64_t)v35;
      sub_1C2147BC0();
      (*(void (**)(char *, uint64_t))(v37 + 8))(v30, v38);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v17 + 56))(v31, 0, 1, v27);
      sub_1C2149E70();
      swift_release();
      sub_1C1F13AE4(v31, &qword_1EBF0B1F0, MEMORY[0x1E4F27928]);
    }
  }
  uint64_t v32 = *(void (**)(char *, uint64_t))(v17 + 8);
  v32(v28, v27);
  return ((uint64_t (*)(char *, uint64_t))v32)(v29, v27);
}

uint64_t sub_1C1FF62E0()
{
  uint64_t v1 = v0;
  uint64_t v28 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FBCC28];
  sub_1C1FF8310(0, &qword_1EBF0C7E8, MEMORY[0x1E4FBCC28], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v22 - v3;
  uint64_t v5 = sub_1C214AD60();
  uint64_t v25 = *(void *)(v5 - 8);
  uint64_t v26 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1FF863C();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v23 = v8;
  uint64_t v24 = v9;
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1FF8824();
  uint64_t v27 = v12;
  uint64_t v29 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  char v22 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void **)(v0 + qword_1EA2C5038);
  uint64_t v30 = *(void *)(v1 + qword_1EA2C5040);
  id v31 = v14;
  sub_1C1FF8724();
  sub_1C1FF878C();
  sub_1C1FF8934((unint64_t *)&qword_1EA2C5098, (void (*)(uint64_t))sub_1C1FF8724);
  sub_1C1FF8934((unint64_t *)&qword_1EA2C50A0, (void (*)(uint64_t))sub_1C1FF878C);
  swift_retain();
  swift_retain();
  sub_1C2149CB0();
  sub_1C214AD30();
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0CB10);
  id v31 = (id)sub_1C214AD80();
  uint64_t v15 = sub_1C214AD20();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v4, 1, 1, v15);
  sub_1C1FF8934(&qword_1EA2C50B0, (void (*)(uint64_t))sub_1C1FF863C);
  sub_1C1F43FD4();
  uint64_t v17 = v22;
  uint64_t v16 = v23;
  sub_1C214A0B0();
  sub_1C1F13AE4((uint64_t)v4, &qword_1EBF0C7E8, v28);

  (*(void (**)(char *, uint64_t))(v25 + 8))(v7, v26);
  (*(void (**)(char *, uint64_t))(v24 + 8))(v11, v16);
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = sub_1C1FF88F0;
  *(void *)(v18 + 24) = v1;
  sub_1C1FF8934(&qword_1EA2C50B8, (void (*)(uint64_t))sub_1C1FF8824);
  swift_retain();
  uint64_t v19 = v27;
  uint64_t v20 = sub_1C214A0F0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v17, v19);
  *(void *)(v1 + qword_1EA2C5048) = v20;
  return swift_release();
}

uint64_t sub_1C1FF67C8(uint64_t a1, uint64_t a2)
{
  uint64_t v98 = a2;
  uint64_t v100 = a1;
  sub_1C1FF8494();
  uint64_t v94 = v2;
  *(void *)&long long v93 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (char *)&v91 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1C2148A70();
  uint64_t v105 = *(void *)(v5 - 8);
  uint64_t v106 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v107 = (char *)&v91 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v103 = sub_1C2148620();
  uint64_t v102 = *(void *)(v103 - 8);
  MEMORY[0x1F4188790](v103);
  uint64_t v108 = (char *)&v91 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C1FF8310(0, &qword_1EBF0C620, MEMORY[0x1E4FB0F28], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v104 = (char *)&v91 - v10;
  uint64_t v11 = sub_1C21487B0();
  uint64_t v112 = *(void *)(v11 - 8);
  uint64_t v113 = v11;
  MEMORY[0x1F4188790](v11);
  uint64_t v111 = (char *)&v91 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v97 = sub_1C2147CF0();
  uint64_t v96 = *(void *)(v97 - 8);
  MEMORY[0x1F4188790](v97);
  uint64_t v95 = (char *)&v91 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v116 = sub_1C2149BE0();
  uint64_t v110 = *(void *)(v116 - 8);
  uint64_t v14 = MEMORY[0x1F4188790](v116);
  uint64_t v99 = (char *)&v91 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v91 - v16;
  sub_1C1FF8310(0, &qword_1EBF0B1F0, MEMORY[0x1E4F27928], v8);
  uint64_t v19 = MEMORY[0x1F4188790](v18 - 8);
  uint64_t v21 = (char *)&v91 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  uint64_t v23 = (char *)&v91 - v22;
  uint64_t v24 = sub_1C2147AC0();
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = *(void *)(v25 + 64);
  uint64_t v27 = MEMORY[0x1F4188790](v24);
  uint64_t v28 = (char *)&v91 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v27);
  id v115 = (char *)&v91 - v29;
  uint64_t v118 = sub_1C21499D0();
  uint64_t v109 = *(void *)(v118 - 8);
  MEMORY[0x1F4188790](v118);
  id v31 = (char *)&v91 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C21499C0();
  id v114 = self;
  id v32 = objc_msgSend(v114, sel_secondarySystemGroupedBackgroundColor);
  sub_1C2149990();
  sub_1C1FE0174(v98, (uint64_t)v23);
  int v33 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24);
  uint64_t v117 = v31;
  uint64_t v101 = v25;
  if (v33 == 1)
  {
    sub_1C1F13AE4((uint64_t)v23, &qword_1EBF0B1F0, MEMORY[0x1E4F27928]);
    sub_1C2148600();
    uint64_t v34 = v94;
    uint64_t v35 = sub_1C2149C00();
    (*(void (**)(char *, uint64_t))(v93 + 8))(v4, v34);
    if (v35 >= 2) {
      sub_1C2148570();
    }
    uint64_t v36 = v99;
    sub_1C2149BD0();
    if (qword_1EBF0CA00 != -1) {
      swift_once();
    }
    id v37 = (id)qword_1EBF0CA18;
    swift_bridgeObjectRetain();
    sub_1C2147730();
    swift_bridgeObjectRelease();

    sub_1C2149B90();
    id v38 = (id)qword_1EBF0CA18;
    swift_bridgeObjectRetain();
    sub_1C2147730();
    swift_bridgeObjectRelease();

    sub_1C2149A00();
    id v39 = objc_msgSend(v114, sel_linkColor);
    uint64_t v40 = (void (*)(uint64_t *, void))sub_1C2149AF0();
    sub_1C2149A60();
    v40(v120, 0);
    uint64_t v41 = v101;
    uint64_t v42 = v36;
    (*(void (**)(char *, uint64_t, uint64_t))(v101 + 16))(v28, v100, v24);
    unint64_t v43 = (*(unsigned __int8 *)(v41 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80);
    uint64_t v44 = swift_allocObject();
    uint64_t v45 = v119;
    *(void *)(v44 + 16) = v119;
    (*(void (**)(unint64_t, char *, uint64_t))(v41 + 32))(v44 + v43, v28, v24);
    uint64_t v46 = v116;
    uint64_t v121 = v116;
    uint64_t v122 = MEMORY[0x1E4FB0F88];
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v120);
    uint64_t v48 = v110;
    (*(void (**)(uint64_t *, char *, uint64_t))(v110 + 16))(boxed_opaque_existential_1, v42, v46);
    uint64_t v49 = v109;
    uint64_t v50 = v104;
    uint64_t v51 = v118;
    (*(void (**)(char *, char *, uint64_t))(v109 + 16))(v104, v117, v118);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v49 + 56))(v50, 0, 1, v51);
    (*(void (**)(char *, void, uint64_t))(v102 + 104))(v108, *MEMORY[0x1E4F66480], v103);
    (*(void (**)(char *, void, uint64_t))(v105 + 104))(v107, *MEMORY[0x1E4F66678], v106);
    swift_retain();
    swift_retain();
    uint64_t v52 = v111;
    sub_1C21487A0();
    sub_1C1F5FE64(0, (unint64_t *)&qword_1EBF0C958, (unint64_t *)&qword_1EBF0C2F0);
    uint64_t v53 = swift_allocObject();
    *(_OWORD *)(v53 + 16) = xmmword_1C214FCC0;
    uint64_t v54 = v45 + qword_1EA2C5050;
    *(void *)(v53 + 56) = type metadata accessor for DurationDatePickerItem();
    *(void *)(v53 + 64) = sub_1C1FF8934((unint64_t *)&unk_1EA2C4D58, (void (*)(uint64_t))type metadata accessor for DurationDatePickerItem);
    uint64_t v55 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v53 + 32));
    sub_1C1FF83D4(v54, (uint64_t)v55);
    uint64_t v56 = v113;
    *(void *)(v53 + 96) = v113;
    *(void *)(v53 + 104) = sub_1C1FF8934((unint64_t *)&qword_1EA2C2E68, MEMORY[0x1E4F66510]);
    uint64_t v57 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v53 + 72));
    uint64_t v58 = v112;
    (*(void (**)(uint64_t *, char *, uint64_t))(v112 + 16))(v57, v52, v56);
    sub_1C21485C0();
    swift_release();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v58 + 8))(v52, v56);
    (*(void (**)(char *, uint64_t))(v48 + 8))(v99, v46);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v115, v23, v24);
    sub_1C1FF7CB8(v100, (uint64_t)v21);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v21, 0, 1, v24);
    uint64_t v59 = v119 + qword_1EA2C5058;
    swift_beginAccess();
    uint64_t v94 = type metadata accessor for DurationDatePickerItem();
    uint64_t v60 = *(int *)(v94 + 64);
    uint64_t v98 = v59;
    sub_1C1FE024C((uint64_t)v21, v59 + v60);
    swift_endAccess();
    sub_1C2149BD0();
    if (qword_1EBF0CA00 != -1) {
      swift_once();
    }
    uint64_t v99 = (char *)v24;
    id v61 = (id)qword_1EBF0CA18;
    swift_bridgeObjectRetain();
    sub_1C2147730();
    swift_bridgeObjectRelease();

    sub_1C2149B90();
    id v62 = objc_msgSend(v114, sel_labelColor);
    uint64_t v63 = (void (*)(uint64_t *, void))sub_1C2149AA0();
    sub_1C2149A60();
    v63(v120, 0);
    sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8E0);
    sub_1C214B0A0();
    uint64_t v64 = v17;
    uint64_t v65 = (void (*)(uint64_t *, void))sub_1C2149AA0();
    sub_1C2149A50();
    v65(v120, 0);
    uint64_t v66 = (void *)qword_1EBF0CA18;
    sub_1C1F5FE64(0, qword_1EBF0B8A0, (unint64_t *)&qword_1EBF0C9F0);
    uint64_t v67 = swift_allocObject();
    long long v93 = xmmword_1C214FCD0;
    *(_OWORD *)(v67 + 16) = xmmword_1C214FCD0;
    id v68 = v66;
    swift_bridgeObjectRetain();
    uint64_t v69 = v95;
    sub_1C2147CB0();
    uint64_t v70 = sub_1C2147C20();
    (*(void (**)(char *, uint64_t))(v96 + 8))(v69, v97);
    uint64_t v71 = MEMORY[0x1E4FBB5C8];
    *(void *)(v67 + 56) = MEMORY[0x1E4FBB550];
    *(void *)(v67 + 64) = v71;
    *(void *)(v67 + 32) = v70;
    sub_1C2147730();
    if (*(void *)(v67 + 16))
    {
      sub_1C214A5C0();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    uint64_t v72 = v118;
    uint64_t v49 = v109;
    sub_1C2149A00();
    id v73 = objc_msgSend(v114, sel_labelColor);
    uint64_t v92 = v17;
    uint64_t v74 = (void (*)(uint64_t *, void))sub_1C2149AF0();
    sub_1C2149A60();
    v74(v120, 0);
    uint64_t v75 = v116;
    uint64_t v121 = v116;
    uint64_t v122 = MEMORY[0x1E4FB0F88];
    int64_t v76 = __swift_allocate_boxed_opaque_existential_1(v120);
    uint64_t v77 = v110;
    (*(void (**)(uint64_t *, char *, uint64_t))(v110 + 16))(v76, v64, v75);
    uint64_t v78 = v104;
    (*(void (**)(char *, char *, uint64_t))(v49 + 16))(v104, v117, v72);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v49 + 56))(v78, 0, 1, v72);
    (*(void (**)(char *, void, uint64_t))(v102 + 104))(v108, *MEMORY[0x1E4F66480], v103);
    (*(void (**)(char *, void, uint64_t))(v105 + 104))(v107, *MEMORY[0x1E4F66678], v106);
    uint64_t v79 = v111;
    sub_1C21487A0();
    sub_1C1F5FE64(0, (unint64_t *)&qword_1EBF0C958, (unint64_t *)&qword_1EBF0C2F0);
    uint64_t v80 = swift_allocObject();
    *(_OWORD *)(v80 + 16) = xmmword_1C214FCC0;
    uint64_t v81 = v119 + qword_1EA2C5050;
    uint64_t v82 = v94;
    *(void *)(v80 + 56) = v94;
    uint64_t v83 = sub_1C1FF8934((unint64_t *)&unk_1EA2C4D58, (void (*)(uint64_t))type metadata accessor for DurationDatePickerItem);
    *(void *)(v80 + 64) = v83;
    uint64_t v84 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v80 + 32));
    sub_1C1FF83D4(v81, (uint64_t)v84);
    *(void *)(v80 + 96) = v82;
    *(void *)(v80 + 104) = v83;
    uint64_t v85 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v80 + 72));
    sub_1C1FF83D4(v98, (uint64_t)v85);
    sub_1C21485C0();
    swift_bridgeObjectRelease();
    uint64_t v86 = swift_allocObject();
    *(_OWORD *)(v86 + 16) = v93;
    uint64_t v87 = v113;
    *(void *)(v86 + 56) = v113;
    *(void *)(v86 + 64) = sub_1C1FF8934((unint64_t *)&qword_1EA2C2E68, MEMORY[0x1E4F66510]);
    uint64_t v88 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v86 + 32));
    uint64_t v89 = v112;
    (*(void (**)(uint64_t *, char *, uint64_t))(v112 + 16))(v88, v79, v87);
    sub_1C21485C0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v89 + 8))(v79, v87);
    (*(void (**)(char *, uint64_t))(v77 + 8))(v92, v116);
    (*(void (**)(char *, char *))(v101 + 8))(v115, v99);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v49 + 8))(v117, v118);
}

uint64_t sub_1C1FF7A54()
{
  uint64_t v0 = sub_1C2147CD0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1C2147CF0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27928];
  sub_1C1FF8310(0, &qword_1EBF0B1F0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v13 - v10;
  swift_retain();
  sub_1C2147CB0();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4F27BF0], v0);
  sub_1C2147C90();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_1C2149E70();
  swift_release();
  return sub_1C1F13AE4((uint64_t)v11, &qword_1EBF0B1F0, v8);
}

uint64_t sub_1C1FF7CB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v25 = a1;
  uint64_t v23 = a2;
  uint64_t v2 = sub_1C2147CD0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1C2147AC0();
  uint64_t v24 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1C2147CF0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2148E10();
  sub_1C2148E00();
  sub_1C2148DB0();
  swift_release();
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C7C8);
  sub_1C214AC00();
  sub_1C2148D70();
  swift_allocObject();
  sub_1C2148C90();
  char v13 = sub_1C2148CB0();
  swift_release();
  if (v13)
  {
    uint64_t v14 = v23;
    uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v24 + 16);
    uint64_t v16 = v25;
    return v15(v14, v16, v6);
  }
  else
  {
    uint64_t v18 = v23;
    sub_1C2147CB0();
    sub_1C2147A70();
    (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4F27BF0], v2);
    uint64_t v19 = sub_1C2147CA0();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    uint64_t v20 = *(void (**)(char *, uint64_t))(v24 + 8);
    v20(v8, v6);
    uint64_t v21 = *(void (**)(char *, uint64_t))(v10 + 8);
    v21(v12, v9);
    if (v19 == -1)
    {
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v24 + 16))(v18, v25, v6);
    }
    else
    {
      sub_1C2147CB0();
      sub_1C2147A70();
      sub_1C2147BC0();
      v20(v8, v6);
      return ((uint64_t (*)(char *, uint64_t))v21)(v12, v9);
    }
  }
}

void sub_1C1FF8050()
{
}

uint64_t sub_1C1FF8080()
{
  swift_release();
  swift_release();
  swift_release();
  sub_1C1FF8438(v0 + qword_1EA2C5050);
  uint64_t v1 = v0 + qword_1EA2C5058;

  return sub_1C1FF8438(v1);
}

uint64_t sub_1C1FF80F0()
{
  uint64_t v0 = sub_1C2148610();
  swift_release();
  swift_release();
  swift_release();
  sub_1C1FF8438(v0 + qword_1EA2C5050);
  sub_1C1FF8438(v0 + qword_1EA2C5058);

  return swift_deallocClassInstance();
}

uint64_t sub_1C1FF81A4()
{
  return type metadata accessor for StartDateEndDateEditDataSource();
}

uint64_t sub_1C1FF81AC()
{
  uint64_t v0 = sub_1C2148710();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2148690();
  sub_1C21487F0();
  uint64_t v4 = sub_1C2148700();
  swift_unknownObjectRelease();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

uint64_t sub_1C1FF82A0()
{
  return sub_1C214ACC0();
}

void sub_1C1FF8310(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C1FF8374@<X0>(uint64_t a1@<X8>)
{
  return sub_1C1FF58E8(a1);
}

uint64_t sub_1C1FF837C(uint64_t a1, uint64_t a2)
{
  return sub_1C1FF595C(a1, a2, v2);
}

uint64_t sub_1C1FF8384()
{
  return sub_1C1FF5CA0();
}

uint64_t sub_1C1FF838C()
{
  swift_weakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C1FF83C4@<X0>(uint64_t a1@<X8>)
{
  return sub_1C1FF5D9C(a1);
}

uint64_t sub_1C1FF83CC(uint64_t a1, uint64_t a2)
{
  return sub_1C1FF5E3C(a1, a2, v2);
}

uint64_t sub_1C1FF83D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DurationDatePickerItem();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C1FF8438(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DurationDatePickerItem();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1C1FF8494()
{
  if (!qword_1EA2C5078)
  {
    unint64_t v0 = sub_1C2149C30();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C5078);
    }
  }
}

uint64_t sub_1C1FF84FC()
{
  uint64_t v1 = sub_1C2147AC0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x1F4186498](v0, v5, v6);
}

uint64_t sub_1C1FF85C8()
{
  sub_1C2147AC0();

  return sub_1C1FF7A54();
}

void sub_1C1FF863C()
{
  if (!qword_1EA2C5080)
  {
    sub_1C1FF8724();
    sub_1C1FF878C();
    sub_1C1FF8934((unint64_t *)&qword_1EA2C5098, (void (*)(uint64_t))sub_1C1FF8724);
    sub_1C1FF8934((unint64_t *)&qword_1EA2C50A0, (void (*)(uint64_t))sub_1C1FF878C);
    unint64_t v0 = sub_1C2149CA0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C5080);
    }
  }
}

void sub_1C1FF8724()
{
  if (!qword_1EA2C5088)
  {
    sub_1C2147AC0();
    unint64_t v0 = sub_1C2149EA0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C5088);
    }
  }
}

void sub_1C1FF878C()
{
  if (!qword_1EA2C5090)
  {
    sub_1C1FF8310(255, &qword_1EBF0B1F0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
    unint64_t v0 = sub_1C2149EA0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C5090);
    }
  }
}

void sub_1C1FF8824()
{
  if (!qword_1EA2C50A8)
  {
    sub_1C1FF863C();
    sub_1C1F12718(255, (unint64_t *)&qword_1EBF0CB10);
    sub_1C1FF8934(&qword_1EA2C50B0, (void (*)(uint64_t))sub_1C1FF863C);
    sub_1C1F43FD4();
    unint64_t v0 = sub_1C2149DB0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C50A8);
    }
  }
}

uint64_t sub_1C1FF88F4()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C1FF892C(uint64_t a1)
{
  return sub_1C2009AB0(a1, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 16));
}

uint64_t sub_1C1FF8934(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void static ScheduleUnavailableDeviceState.Device.resolvedLocal.getter(char *a1@<X8>)
{
  id v2 = objc_msgSend(self, sel_currentDevice);
  id v3 = objc_msgSend(v2, sel_userInterfaceIdiom);

  if (v3 == (id)1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v3) {
    char v4 = 0;
  }
  *a1 = v4;
}

HealthMedicationsUI::ScheduleUnavailableDeviceState __swiftcall ScheduleUnavailableDeviceState.init(localDevice:location:isHealthSharing:medicationCount:)(HealthMedicationsUI::ScheduleUnavailableDeviceState::Device localDevice, HealthMedicationsUI::ScheduleUnavailableDeviceState::Location location, Swift::Bool isHealthSharing, Swift::Int medicationCount)
{
  char v5 = *(unsigned char *)location;
  *(unsigned char *)uint64_t v4 = *(unsigned char *)localDevice;
  *(unsigned char *)(v4 + 1) = v5;
  *(unsigned char *)(v4 + 2) = isHealthSharing;
  *(void *)(v4 + 8) = medicationCount;
  LOBYTE(result.medicationCount) = location;
  result.localDevice = localDevice;
  return result;
}

uint64_t ScheduleUnavailableDeviceState.bodyText.getter()
{
  char v1 = *(unsigned char *)(v0 + 1);
  uint64_t v2 = *(void *)(v0 + 8);
  uint64_t v3 = ScheduleUnavailableDeviceState.localizationKey.getter();
  if (v4)
  {
    if (v1)
    {
      if (qword_1EBF0CA00 != -1) {
        swift_once();
      }
      id v5 = (id)qword_1EBF0CA18;
      swift_bridgeObjectRetain();
      uint64_t v3 = sub_1C2147730();
      swift_bridgeObjectRelease();
    }
    else
    {
      if (qword_1EBF0CA00 != -1) {
        swift_once();
      }
      uint64_t v6 = (void *)qword_1EBF0CA18;
      sub_1C1FF8EAC();
      uint64_t v7 = swift_allocObject();
      uint64_t v8 = MEMORY[0x1E4FBB550];
      *(_OWORD *)(v7 + 16) = xmmword_1C214FCD0;
      uint64_t v9 = MEMORY[0x1E4FBB5C8];
      *(void *)(v7 + 56) = v8;
      *(void *)(v7 + 64) = v9;
      *(void *)(v7 + 32) = v2;
      id v10 = v6;
      swift_bridgeObjectRetain();
      sub_1C2147730();
      uint64_t v3 = sub_1C214A5C0();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
  return v3;
}

BOOL static ScheduleUnavailableDeviceState.Device.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t ScheduleUnavailableDeviceState.Device.hash(into:)()
{
  return sub_1C214BB40();
}

uint64_t ScheduleUnavailableDeviceState.localizationKey.getter()
{
  char v1 = *v0;
  int v2 = v0[1];
  int v3 = v0[2];
  uint64_t v4 = *((void *)v0 + 1);
  if (v0[1]) {
    uint64_t v5 = 0x5F545045434E4F43;
  }
  else {
    uint64_t v5 = 0x59524F4745544143;
  }
  if ((v1 & 1) != 0 || !objc_msgSend(self, sel_hasSupportedAppleWatchPaired))
  {
    if (v3)
    {
      if ((v2 & 1) == 0) {
        goto LABEL_14;
      }
      goto LABEL_12;
    }
  }
  else if (v3)
  {
    goto LABEL_15;
  }
  if (!v2)
  {
LABEL_13:
    swift_bridgeObjectRetain();
    sub_1C214A6C0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_1C214A6C0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_1C214A6C0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_1C214A6C0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v5;
  }
LABEL_12:
  if (v4 == 1) {
    goto LABEL_13;
  }
LABEL_14:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_15:
  swift_bridgeObjectRelease();
  return 0;
}

void sub_1C1FF8EAC()
{
  if (!qword_1EBF0B8A0[0])
  {
    sub_1C1FAEE38();
    unint64_t v0 = sub_1C214BA50();
    if (!v1) {
      atomic_store(v0, qword_1EBF0B8A0);
    }
  }
}

unint64_t sub_1C1FF8F08()
{
  unint64_t result = qword_1EA2C50C0;
  if (!qword_1EA2C50C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C50C0);
  }
  return result;
}

unint64_t sub_1C1FF8F60()
{
  unint64_t result = qword_1EA2C50C8;
  if (!qword_1EA2C50C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C50C8);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ScheduleUnavailableDeviceState(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && a1[16]) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *a1;
  BOOL v4 = v3 >= 2;
  int v5 = v3 - 2;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ScheduleUnavailableDeviceState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)unint64_t result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(unsigned char *)unint64_t result = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ScheduleUnavailableDeviceState()
{
  return &type metadata for ScheduleUnavailableDeviceState;
}

ValueMetadata *type metadata accessor for ScheduleUnavailableDeviceState.Device()
{
  return &type metadata for ScheduleUnavailableDeviceState.Device;
}

unsigned char *_s19HealthMedicationsUI30ScheduleUnavailableDeviceStateV6DeviceOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C1FF912CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ScheduleUnavailableDeviceState.Location()
{
  return &type metadata for ScheduleUnavailableDeviceState.Location;
}

uint64_t dispatch thunk of DayHistoryLineItemDisplayable.imageName.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of DayHistoryLineItemDisplayable.name.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of DayHistoryLineItemDisplayable.skipped.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of DayHistoryLineItemDisplayable.isLastScheduledDose.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of DayHistoryDisplayable.timeText.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of DayHistoryDisplayable.lineItems.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of DayHistoryDisplayable.logTime.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t ScheduleDurationItem.startDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ScheduleDurationItem() + 20);
  uint64_t v4 = sub_1C2147AC0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for ScheduleDurationItem()
{
  uint64_t result = qword_1EA2C5108;
  if (!qword_1EA2C5108) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t ScheduleDurationItem.endDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for ScheduleDurationItem();
  return sub_1C1FFBDCC(v1 + *(int *)(v3 + 24), a1, &qword_1EBF0B1F0, MEMORY[0x1E4F27928]);
}

uint64_t ScheduleDurationItem.init(startDate:endDate:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_1C2147B10();
  unsigned int v6 = (int *)type metadata accessor for ScheduleDurationItem();
  uint64_t v7 = (uint64_t *)(a3 + v6[7]);
  type metadata accessor for ScheduleDurationCell();
  sub_1C1FFDA00(&qword_1EA2C4C40, v8, (void (*)(uint64_t))type metadata accessor for ScheduleDurationCell);
  *uint64_t v7 = sub_1C21481D0();
  v7[1] = v9;
  uint64_t v10 = a3 + v6[5];
  uint64_t v11 = sub_1C2147AC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v10, a1, v11);
  uint64_t v12 = a3 + v6[6];

  return sub_1C1F90A80(a2, v12);
}

uint64_t type metadata accessor for ScheduleDurationCell()
{
  return self;
}

uint64_t ScheduleDurationItem.reuseIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for ScheduleDurationItem() + 28));
  swift_bridgeObjectRetain();
  return v1;
}

unint64_t ScheduleDurationItem.uniqueIdentifier.getter()
{
  return 0xD000000000000015;
}

uint64_t ScheduleDurationItem.hash(into:)()
{
  uint64_t v1 = sub_1C2147AC0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27928];
  sub_1C1F17304(0, &qword_1EBF0B1F0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v11 - v7;
  uint64_t v9 = type metadata accessor for ScheduleDurationItem();
  sub_1C1FFDA00(&qword_1EA2C50D0, 255, MEMORY[0x1E4F27928]);
  sub_1C214A560();
  sub_1C1FFBDCC(v0 + *(int *)(v9 + 24), (uint64_t)v8, &qword_1EBF0B1F0, v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v8, 1, v1) == 1) {
    return sub_1C214BB50();
  }
  (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v8, v1);
  sub_1C214BB50();
  sub_1C214A560();
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

uint64_t ScheduleDurationItem.hashValue.getter()
{
  uint64_t v1 = sub_1C2147AC0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27928];
  sub_1C1F17304(0, &qword_1EBF0B1F0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v11 - v7;
  sub_1C214BB30();
  uint64_t v9 = type metadata accessor for ScheduleDurationItem();
  sub_1C1FFDA00(&qword_1EA2C50D0, 255, MEMORY[0x1E4F27928]);
  sub_1C214A560();
  sub_1C1FFBDCC(v0 + *(int *)(v9 + 24), (uint64_t)v8, &qword_1EBF0B1F0, v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v8, 1, v1) == 1)
  {
    sub_1C214BB50();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v8, v1);
    sub_1C214BB50();
    sub_1C214A560();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  return sub_1C214BB80();
}

uint64_t sub_1C1FF99AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C2147AC0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27928];
  sub_1C1F17304(0, &qword_1EBF0B1F0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v13 - v10;
  sub_1C1FFDA00(&qword_1EA2C50D0, 255, MEMORY[0x1E4F27928]);
  sub_1C214A560();
  sub_1C1FFBDCC(v2 + *(int *)(a2 + 24), (uint64_t)v11, &qword_1EBF0B1F0, v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v11, 1, v4) == 1) {
    return sub_1C214BB50();
  }
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v11, v4);
  sub_1C214BB50();
  sub_1C214A560();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1C1FF9BE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C2147AC0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27928];
  sub_1C1F17304(0, &qword_1EBF0B1F0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v13 - v10;
  sub_1C214BB30();
  sub_1C1FFDA00(&qword_1EA2C50D0, 255, MEMORY[0x1E4F27928]);
  sub_1C214A560();
  sub_1C1FFBDCC(v2 + *(int *)(a2 + 24), (uint64_t)v11, &qword_1EBF0B1F0, v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v11, 1, v4) == 1)
  {
    sub_1C214BB50();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v11, v4);
    sub_1C214BB50();
    sub_1C214A560();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  return sub_1C214BB80();
}

void sub_1C1FF9E3C()
{
  qword_1EA2C7EA0 = 0x4018000000000000;
}

void sub_1C1FF9E4C()
{
  qword_1EA2C7EA8 = 0;
}

void sub_1C1FF9E58()
{
  qword_1EA2C7EB0 = 0x4020000000000000;
}

void sub_1C1FF9E68()
{
  qword_1EA2C7EB8 = 0x4028000000000000;
}

id sub_1C1FF9E78()
{
  uint64_t v1 = OBJC_IVAR____TtC19HealthMedicationsUI20ScheduleDurationCell____lazy_storage___mainStackView;
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC19HealthMedicationsUI20ScheduleDurationCell____lazy_storage___mainStackView];
  if (v2)
  {
    id v3 = *(id *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI20ScheduleDurationCell____lazy_storage___mainStackView];
  }
  else
  {
    id v4 = sub_1C1FF9EDC(v0);
    uint64_t v5 = *(void **)&v0[v1];
    *(void *)&v0[v1] = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_1C1FF9EDC(void *a1)
{
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1C60]), sel_init);
  id v3 = objc_msgSend(a1, sel_traitCollection);
  id v4 = objc_msgSend(v3, sel_preferredContentSizeCategory);

  LOBYTE(v3) = sub_1C214AE80();
  objc_msgSend(v2, sel_setAxis_, v3 & 1);
  id v5 = objc_msgSend(a1, sel_traitCollection);
  id v6 = objc_msgSend(v5, sel_preferredContentSizeCategory);

  LOBYTE(v5) = sub_1C214AE80();
  if (v5)
  {
    if (qword_1EA2C26C0 != -1) {
      swift_once();
    }
    uint64_t v7 = &qword_1EA2C7EB8;
  }
  else
  {
    if (qword_1EA2C26B8 != -1) {
      swift_once();
    }
    uint64_t v7 = &qword_1EA2C7EB0;
  }
  objc_msgSend(v2, sel_setSpacing_, *(double *)v7);
  objc_msgSend(v2, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  return v2;
}

id sub_1C1FFA068()
{
  return sub_1C1FFA074(&OBJC_IVAR____TtC19HealthMedicationsUI20ScheduleDurationCell____lazy_storage___startDateStackView);
}

id sub_1C1FFA074(uint64_t *a1)
{
  uint64_t v2 = *a1;
  id v3 = *(void **)&v1[*a1];
  if (v3)
  {
    id v4 = *(id *)&v1[*a1];
  }
  else
  {
    id v5 = sub_1C1FFA0E0(v1);
    id v6 = *(void **)&v1[v2];
    *(void *)&v1[v2] = v5;
    id v4 = v5;

    id v3 = 0;
  }
  id v7 = v3;
  return v4;
}

id sub_1C1FFA0D4()
{
  return sub_1C1FFA074(&OBJC_IVAR____TtC19HealthMedicationsUI20ScheduleDurationCell____lazy_storage___endDateStackView);
}

id sub_1C1FFA0E0(void *a1)
{
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1C60]), sel_init);
  objc_msgSend(v2, sel_setAxis_, 1);
  id v3 = objc_msgSend(a1, sel_traitCollection);
  id v4 = objc_msgSend(v3, sel_preferredContentSizeCategory);

  LOBYTE(v3) = sub_1C214AE80();
  if (v3)
  {
    if (qword_1EA2C26B0 != -1) {
      swift_once();
    }
    id v5 = &qword_1EA2C7EA8;
  }
  else
  {
    if (qword_1EA2C26A8 != -1) {
      swift_once();
    }
    id v5 = &qword_1EA2C7EA0;
  }
  objc_msgSend(v2, sel_setSpacing_, *(double *)v5);
  return v2;
}

uint64_t sub_1C1FFA20C(uint64_t a1, void *a2)
{
  sub_1C1F2116C(a1, (uint64_t)v5);
  uint64_t v3 = *a2 + OBJC_IVAR____TtC19HealthMedicationsUI20ScheduleDurationCell_item;
  swift_beginAccess();
  sub_1C1F32DDC((uint64_t)v5, v3);
  swift_endAccess();
  sub_1C1FFA3D8();
  return sub_1C1F374E4((uint64_t)v5);
}

uint64_t sub_1C1FFA280@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI20ScheduleDurationCell_item;
  swift_beginAccess();
  return sub_1C1F2116C(v3, a1);
}

uint64_t sub_1C1FFA2D4(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI20ScheduleDurationCell_item;
  swift_beginAccess();
  sub_1C1F32DDC(a1, v3);
  swift_endAccess();
  sub_1C1FFA3D8();
  return sub_1C1F374E4(a1);
}

uint64_t (*sub_1C1FFA344(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1C1FFA3A4;
}

uint64_t sub_1C1FFA3A4(uint64_t a1, char a2)
{
  uint64_t result = swift_endAccess();
  if ((a2 & 1) == 0) {
    return sub_1C1FFA3D8();
  }
  return result;
}

uint64_t sub_1C1FFA3D8()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1C21497F0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  id v5 = (char *)&v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C1F17304(0, &qword_1EBF0B1F0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v53 - v8;
  sub_1C1F17304(0, (unint64_t *)&unk_1EA2C5120, (uint64_t (*)(uint64_t))type metadata accessor for ScheduleDurationItem, v6);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v53 - v11;
  uint64_t v13 = type metadata accessor for ScheduleDurationItem();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v53 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = (uint64_t)v1 + OBJC_IVAR____TtC19HealthMedicationsUI20ScheduleDurationCell_item;
  swift_beginAccess();
  sub_1C1F2116C(v17, (uint64_t)v55);
  if (!v55[3])
  {
    sub_1C1F374E4((uint64_t)v55);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v12, 1, 1, v13);
LABEL_7:
    sub_1C1FFD838((uint64_t)v12, (unint64_t *)&unk_1EA2C5120, (uint64_t (*)(uint64_t))type metadata accessor for ScheduleDurationItem);
    sub_1C21497A0();
    id v46 = v1;
    uint64_t v47 = sub_1C21497E0();
    os_log_type_t v48 = sub_1C214ABD0();
    if (os_log_type_enabled(v47, v48))
    {
      uint64_t v53 = v2;
      uint64_t v49 = (uint8_t *)swift_slowAlloc();
      uint64_t v50 = swift_slowAlloc();
      uint64_t v54 = v50;
      *(_DWORD *)uint64_t v49 = 136446210;
      sub_1C1F2116C(v17, (uint64_t)v55);
      sub_1C1F5236C(0, (unint64_t *)&qword_1EBF0C300, (unint64_t *)&qword_1EBF0C2F0, MEMORY[0x1E4F66028], MEMORY[0x1E4FBB718]);
      uint64_t v51 = sub_1C214A630();
      v55[0] = sub_1C1F6FD54(v51, v52, &v54);
      sub_1C214B530();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C1F0B000, v47, v48, "Incorrect view model for ScheduleDurationItem: %{public}s", v49, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C8754730](v50, -1, -1);
      MEMORY[0x1C8754730](v49, -1, -1);

      return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v53);
    }
    else
    {

      return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    }
  }
  sub_1C1F23804(0, (unint64_t *)&qword_1EBF0C2F0);
  int v18 = swift_dynamicCast();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v12, v18 ^ 1u, 1, v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1) {
    goto LABEL_7;
  }
  sub_1C1FFCF7C((uint64_t)v12, (uint64_t)v16);
  id v19 = sub_1C1FF9E78();
  sub_1C214B0E0();

  id v20 = sub_1C1FFA068();
  sub_1C214B0E0();

  id v21 = sub_1C1FFA0D4();
  sub_1C214B0E0();

  id v22 = sub_1C1FFA068();
  if (qword_1EBF0CA00 != -1) {
    swift_once();
  }
  id v23 = (id)qword_1EBF0CA18;
  swift_bridgeObjectRetain();
  uint64_t v24 = sub_1C2147730();
  uint64_t v26 = v25;
  swift_bridgeObjectRelease();

  id v27 = sub_1C1FFCFE0(v24, v26);
  swift_bridgeObjectRelease();
  objc_msgSend(v22, sel_addArrangedSubview_, v27);

  id v28 = sub_1C1FFA068();
  uint64_t v29 = &v16[*(int *)(v13 + 20)];
  uint64_t v30 = sub_1C2147AC0();
  uint64_t v31 = *(void *)(v30 - 8);
  (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v9, v29, v30);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v31 + 56))(v9, 0, 1, v30);
  id v32 = sub_1C1FFD22C((uint64_t)v9);
  sub_1C1FFD838((uint64_t)v9, &qword_1EBF0B1F0, MEMORY[0x1E4F27928]);
  objc_msgSend(v28, sel_addArrangedSubview_, v32);

  id v33 = sub_1C1FFA0D4();
  id v34 = (id)qword_1EBF0CA18;
  swift_bridgeObjectRetain();
  uint64_t v35 = sub_1C2147730();
  uint64_t v37 = v36;
  swift_bridgeObjectRelease();

  id v38 = sub_1C1FFCFE0(v35, v37);
  swift_bridgeObjectRelease();
  objc_msgSend(v33, sel_addArrangedSubview_, v38);

  id v39 = sub_1C1FFA0D4();
  id v40 = sub_1C1FFD22C((uint64_t)&v16[*(int *)(v13 + 24)]);
  objc_msgSend(v39, sel_addArrangedSubview_, v40);

  id v41 = sub_1C1FF9E78();
  id v42 = sub_1C1FFA068();
  objc_msgSend(v41, sel_addArrangedSubview_, v42);

  id v43 = sub_1C1FF9E78();
  id v44 = sub_1C1FFA0D4();
  objc_msgSend(v43, sel_addArrangedSubview_, v44);

  return sub_1C1FFD9A0((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for ScheduleDurationItem);
}

id ScheduleDurationCell.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  id v9 = objc_allocWithZone(v4);

  return objc_msgSend(v9, sel_initWithFrame_, a1, a2, a3, a4);
}

id ScheduleDurationCell.init(frame:)(double a1, double a2, double a3, double a4)
{
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI20ScheduleDurationCell____lazy_storage___mainStackView] = 0;
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI20ScheduleDurationCell____lazy_storage___startDateStackView] = 0;
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI20ScheduleDurationCell____lazy_storage___endDateStackView] = 0;
  id v9 = &v4[OBJC_IVAR____TtC19HealthMedicationsUI20ScheduleDurationCell_item];
  uint64_t v10 = (objc_class *)type metadata accessor for ScheduleDurationCell();
  *(_OWORD *)id v9 = 0u;
  *((_OWORD *)v9 + 1) = 0u;
  *((void *)v9 + 4) = 0;
  v44.receiver = v4;
  v44.super_class = v10;
  id v11 = objc_msgSendSuper2(&v44, sel_initWithFrame_, a1, a2, a3, a4);
  id v12 = objc_msgSend(v11, sel_contentView);
  id v13 = sub_1C1FF9E78();
  objc_msgSend(v12, sel_addSubview_, v13);

  uint64_t v14 = self;
  sub_1C1F0ED28();
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1C21510C0;
  id v16 = sub_1C1FF9E78();
  id v17 = objc_msgSend(v16, sel_leadingAnchor);

  id v18 = objc_msgSend(v11, sel_contentView);
  id v19 = objc_msgSend(v18, sel_layoutMarginsGuide);

  id v20 = objc_msgSend(v19, sel_leadingAnchor);
  id v21 = objc_msgSend(v17, sel_constraintEqualToAnchor_, v20);

  *(void *)(v15 + 32) = v21;
  id v22 = sub_1C1FF9E78();
  id v23 = objc_msgSend(v22, sel_trailingAnchor);

  id v24 = objc_msgSend(v11, sel_contentView);
  id v25 = objc_msgSend(v24, sel_layoutMarginsGuide);

  id v26 = objc_msgSend(v25, sel_trailingAnchor);
  id v27 = objc_msgSend(v23, sel_constraintEqualToAnchor_, v26);

  *(void *)(v15 + 40) = v27;
  id v28 = sub_1C1FF9E78();
  id v29 = objc_msgSend(v28, sel_topAnchor);

  id v30 = objc_msgSend(v11, sel_contentView);
  id v31 = objc_msgSend(v30, sel_topAnchor);

  if (qword_1EA2C26C0 != -1) {
    swift_once();
  }
  id v32 = objc_msgSend(v29, sel_constraintEqualToAnchor_constant_, v31, *(double *)&qword_1EA2C7EB8);

  *(void *)(v15 + 48) = v32;
  id v33 = sub_1C1FF9E78();
  id v34 = objc_msgSend(v33, sel_bottomAnchor);

  id v35 = objc_msgSend(v11, sel_contentView);
  id v36 = objc_msgSend(v35, sel_bottomAnchor);

  id v37 = objc_msgSend(v34, sel_constraintEqualToAnchor_constant_, v36, -*(double *)&qword_1EA2C7EB8);
  *(void *)(v15 + 56) = v37;
  sub_1C214A7A0();
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C810);
  id v38 = (void *)sub_1C214A770();
  swift_bridgeObjectRelease();
  objc_msgSend(v14, sel_activateConstraints_, v38);

  sub_1C1F17304(0, (unint64_t *)&qword_1EA2C3D80, (uint64_t (*)(uint64_t))sub_1C1F7C864, MEMORY[0x1E4FBBE00]);
  uint64_t v39 = swift_allocObject();
  *(_OWORD *)(v39 + 16) = xmmword_1C214FCD0;
  uint64_t v40 = sub_1C2149C70();
  uint64_t v41 = MEMORY[0x1E4FB1138];
  *(void *)(v39 + 32) = v40;
  *(void *)(v39 + 40) = v41;
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1C1F7C8F0();
  id v42 = v11;
  sub_1C214B120();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return v42;
}

void sub_1C1FFB134(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a3 + 16;
  swift_beginAccess();
  uint64_t v4 = MEMORY[0x1C8754850](v3);
  if (v4)
  {
    id v5 = (void *)v4;
    id v6 = sub_1C1FF9E78();
    id v7 = objc_msgSend(v5, sel_traitCollection);
    id v8 = objc_msgSend(v7, sel_preferredContentSizeCategory);

    LOBYTE(v7) = sub_1C214AE80();
    objc_msgSend(v6, sel_setAxis_, v7 & 1);

    id v9 = sub_1C1FF9E78();
    id v10 = objc_msgSend(v5, sel_traitCollection);
    id v11 = objc_msgSend(v10, sel_preferredContentSizeCategory);

    LOBYTE(v10) = sub_1C214AE80();
    if (v10)
    {
      if (qword_1EA2C26C0 != -1) {
        swift_once();
      }
      id v12 = &qword_1EA2C7EB8;
    }
    else
    {
      if (qword_1EA2C26B8 != -1) {
        swift_once();
      }
      id v12 = &qword_1EA2C7EB0;
    }
    objc_msgSend(v9, sel_setSpacing_, *(double *)v12);

    id v13 = sub_1C1FFA068();
    id v14 = objc_msgSend(v5, sel_traitCollection);
    id v15 = objc_msgSend(v14, sel_preferredContentSizeCategory);

    LOBYTE(v14) = sub_1C214AE80();
    if (v14)
    {
      if (qword_1EA2C26B0 != -1) {
        swift_once();
      }
      id v16 = &qword_1EA2C7EA8;
    }
    else
    {
      if (qword_1EA2C26A8 != -1) {
        swift_once();
      }
      id v16 = &qword_1EA2C7EA0;
    }
    objc_msgSend(v13, sel_setSpacing_, *(double *)v16);

    id v17 = sub_1C1FFA0D4();
    id v18 = objc_msgSend(v5, sel_traitCollection);
    id v19 = objc_msgSend(v18, sel_preferredContentSizeCategory);

    LOBYTE(v18) = sub_1C214AE80();
    if (v18)
    {
      if (qword_1EA2C26B0 != -1) {
        swift_once();
      }
      id v20 = &qword_1EA2C7EA8;
    }
    else
    {
      if (qword_1EA2C26A8 != -1) {
        swift_once();
      }
      id v20 = &qword_1EA2C7EA0;
    }
    objc_msgSend(v17, sel_setSpacing_, *(double *)v20);
  }
}

uint64_t sub_1C1FFB550()
{
  uint64_t v1 = v0;
  sub_1C1F17304(0, &qword_1EBF0C620, MEMORY[0x1E4FB0F28], MEMORY[0x1E4FBB718]);
  uint64_t v3 = MEMORY[0x1F4188790](v2 - 8);
  id v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  id v7 = (char *)&v13 - v6;
  id v8 = (void *)sub_1C2149950();
  id v9 = (objc_class *)type metadata accessor for ScheduleDurationCell();
  v13.receiver = v1;
  v13.super_class = v9;
  objc_msgSendSuper2(&v13, sel__bridgedUpdateConfigurationUsingState_, v8);

  MEMORY[0x1C8752FE0]();
  uint64_t v10 = sub_1C21499D0();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v7, 1, v10))
  {
    id v11 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FB0F28];
    sub_1C1FFBDCC((uint64_t)v7, (uint64_t)v5, &qword_1EBF0C620, MEMORY[0x1E4FB0F28]);
    MEMORY[0x1C8752FF0](v5);
    return sub_1C1FFD838((uint64_t)v7, &qword_1EBF0C620, v11);
  }
  else
  {
    sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C900);
    sub_1C214B1A0();
    sub_1C2149990();
    return MEMORY[0x1C8752FF0](v7);
  }
}

id ScheduleDurationCell.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ScheduleDurationCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t _s19HealthMedicationsUI20ScheduleDurationItemV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C2147AC0();
  uint64_t v36 = *(void *)(v4 - 8);
  uint64_t v37 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1F17304(0, &qword_1EBF0B1F0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v7 - 8);
  id v9 = (char *)&v34 - v8;
  sub_1C1FFD8A8();
  uint64_t v11 = v10;
  MEMORY[0x1F4188790](v10);
  objc_super v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for ScheduleDurationItem();
  uint64_t v15 = MEMORY[0x1F4188790](v14);
  id v17 = (char *)&v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  id v19 = (char *)&v34 - v18;
  char v20 = sub_1C2147A50();
  sub_1C1FFD93C(a1, (uint64_t)v19);
  sub_1C1FFD93C(a2, (uint64_t)v17);
  if ((v20 & 1) == 0)
  {
    sub_1C1FFD9A0((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for ScheduleDurationItem);
    uint64_t v29 = (uint64_t)v19;
    id v30 = (uint64_t (*)(void))type metadata accessor for ScheduleDurationItem;
LABEL_9:
    sub_1C1FFD9A0(v29, v30);
    char v28 = 0;
    return v28 & 1;
  }
  id v35 = v9;
  uint64_t v21 = *(int *)(v14 + 24);
  uint64_t v22 = (uint64_t)&v17[v21];
  uint64_t v23 = (uint64_t)&v13[*(int *)(v11 + 48)];
  id v24 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27928];
  sub_1C1FFBDCC((uint64_t)&v19[v21], (uint64_t)v13, &qword_1EBF0B1F0, MEMORY[0x1E4F27928]);
  sub_1C1FFBDCC(v22, v23, &qword_1EBF0B1F0, v24);
  uint64_t v25 = v36;
  uint64_t v26 = v37;
  id v27 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v36 + 48);
  if (v27((uint64_t)v13, 1, v37) != 1)
  {
    uint64_t v31 = (uint64_t)v35;
    sub_1C1FFBDCC((uint64_t)v13, (uint64_t)v35, &qword_1EBF0B1F0, MEMORY[0x1E4F27928]);
    if (v27(v23, 1, v26) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v25 + 32))(v6, v23, v26);
      sub_1C1FFDA00(&qword_1EA2C5070, 255, MEMORY[0x1E4F27928]);
      char v28 = sub_1C214A5A0();
      id v33 = *(void (**)(char *, uint64_t))(v25 + 8);
      v33(v6, v26);
      sub_1C1FFD9A0((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for ScheduleDurationItem);
      sub_1C1FFD9A0((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for ScheduleDurationItem);
      v33((char *)v31, v26);
      sub_1C1FFD838((uint64_t)v13, &qword_1EBF0B1F0, MEMORY[0x1E4F27928]);
      return v28 & 1;
    }
    sub_1C1FFD9A0((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for ScheduleDurationItem);
    sub_1C1FFD9A0((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for ScheduleDurationItem);
    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v31, v26);
    goto LABEL_8;
  }
  sub_1C1FFD9A0((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for ScheduleDurationItem);
  sub_1C1FFD9A0((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for ScheduleDurationItem);
  if (v27(v23, 1, v26) != 1)
  {
LABEL_8:
    id v30 = (uint64_t (*)(void))sub_1C1FFD8A8;
    uint64_t v29 = (uint64_t)v13;
    goto LABEL_9;
  }
  sub_1C1FFD838((uint64_t)v13, &qword_1EBF0B1F0, MEMORY[0x1E4F27928]);
  char v28 = 1;
  return v28 & 1;
}

uint64_t sub_1C1FFBD8C()
{
  swift_unknownObjectWeakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

void sub_1C1FFBDC4(uint64_t a1, uint64_t a2)
{
  sub_1C1FFB134(a1, a2, v2);
}

uint64_t sub_1C1FFBDCC(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_1C1F17304(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_1C1FFBE4C()
{
  return sub_1C1FFDA00((unint64_t *)&unk_1EA2C50F8, 255, (void (*)(uint64_t))type metadata accessor for ScheduleDurationItem);
}

uint64_t sub_1C1FFBE98@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC19HealthMedicationsUI20ScheduleDurationCell_item;
  swift_beginAccess();
  return sub_1C1F2116C(v3, a2);
}

void *initializeBufferWithCopyOfBuffer for ScheduleDurationItem(void *a1, char *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *(void *)a2;
    *a1 = *(void *)a2;
    a1 = (void *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1C2147B20();
    (*(void (**)(void *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    id v9 = (char *)a1 + v8;
    uint64_t v10 = &a2[v8];
    uint64_t v11 = sub_1C2147AC0();
    uint64_t v12 = *(void *)(v11 - 8);
    objc_super v13 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
    v13(v9, v10, v11);
    uint64_t v14 = a3[6];
    uint64_t v15 = (char *)a1 + v14;
    uint64_t v16 = &a2[v14];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(&a2[v14], 1, v11))
    {
      sub_1C1F17304(0, &qword_1EBF0B1F0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
      memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      v13(v15, v16, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v15, 0, 1, v11);
    }
    uint64_t v19 = a3[7];
    char v20 = (void *)((char *)a1 + v19);
    uint64_t v21 = &a2[v19];
    uint64_t v22 = *((void *)v21 + 1);
    void *v20 = *(void *)v21;
    v20[1] = v22;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for ScheduleDurationItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C2147B20();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_1C2147AC0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v8(v5, v6);
  uint64_t v9 = a1 + *(int *)(a2 + 24);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v9, 1, v6)) {
    v8(v9, v6);
  }

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ScheduleDurationItem(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1C2147B20();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_1C2147AC0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void (**)(void *, const void *, uint64_t))(v11 + 16);
  v12(v8, v9, v10);
  uint64_t v13 = a3[6];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (const void *)(a2 + v13);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(a2 + v13, 1, v10))
  {
    sub_1C1F17304(0, &qword_1EBF0B1F0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
    memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    v12(v14, v15, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v14, 0, 1, v10);
  }
  uint64_t v17 = a3[7];
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (void *)(a2 + v17);
  uint64_t v20 = v19[1];
  void *v18 = *v19;
  v18[1] = v20;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ScheduleDurationItem(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C2147B20();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_1C2147AC0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void (**)(void *, const void *, uint64_t))(v11 + 24);
  v12(v8, v9, v10);
  uint64_t v23 = a3;
  uint64_t v24 = a2;
  uint64_t v13 = *(int *)(a3 + 24);
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (const void *)(a2 + v13);
  uint64_t v16 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  LODWORD(a3) = v16((const void *)(a1 + v13), 1, v10);
  int v17 = v16(v15, 1, v10);
  if (!a3)
  {
    if (!v17)
    {
      v12(v14, v15, v10);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v14, v10);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    sub_1C1F17304(0, &qword_1EBF0B1F0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
    memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v14, v15, v10);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v14, 0, 1, v10);
LABEL_7:
  uint64_t v19 = *(int *)(v23 + 28);
  uint64_t v20 = (void *)(a1 + v19);
  uint64_t v21 = (void *)(v24 + v19);
  void *v20 = *v21;
  v20[1] = v21[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for ScheduleDurationItem(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1C2147B20();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_1C2147AC0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void (**)(void *, const void *, uint64_t))(v11 + 32);
  v12(v8, v9, v10);
  uint64_t v13 = a3[6];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (const void *)(a2 + v13);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(a2 + v13, 1, v10))
  {
    sub_1C1F17304(0, &qword_1EBF0B1F0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
    memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    v12(v14, v15, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v14, 0, 1, v10);
  }
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  return a1;
}

uint64_t assignWithTake for ScheduleDurationItem(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C2147B20();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_1C2147AC0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void (**)(void *, const void *, uint64_t))(v11 + 40);
  v12(v8, v9, v10);
  uint64_t v25 = a3;
  uint64_t v26 = a2;
  uint64_t v13 = *(int *)(a3 + 24);
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (const void *)(a2 + v13);
  uint64_t v16 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  LODWORD(a3) = v16((const void *)(a1 + v13), 1, v10);
  int v17 = v16(v15, 1, v10);
  if (!a3)
  {
    if (!v17)
    {
      v12(v14, v15, v10);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v14, v10);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    sub_1C1F17304(0, &qword_1EBF0B1F0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
    memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v14, v15, v10);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v14, 0, 1, v10);
LABEL_7:
  uint64_t v19 = *(int *)(v25 + 28);
  uint64_t v20 = (void *)(a1 + v19);
  uint64_t v21 = (uint64_t *)(v26 + v19);
  uint64_t v23 = *v21;
  uint64_t v22 = v21[1];
  void *v20 = v23;
  v20[1] = v22;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ScheduleDurationItem(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C1FFCA54);
}

uint64_t sub_1C1FFCA54(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1C2147B20();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_8:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_1C2147AC0();
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_7:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_8;
  }
  sub_1C1F17304(0, &qword_1EBF0B1F0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_7;
  }
  unint64_t v16 = *(void *)(a1 + a3[7] + 8);
  if (v16 >= 0xFFFFFFFF) {
    LODWORD(v16) = -1;
  }
  return (v16 + 1);
}

uint64_t storeEnumTagSinglePayload for ScheduleDurationItem(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C1FFCBFC);
}

void sub_1C1FFCBFC(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_1C2147B20();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t v13 = sub_1C2147AC0();
    if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
    {
      uint64_t v10 = v13;
      uint64_t v14 = *(void *)(v13 - 8);
      uint64_t v15 = a4[5];
    }
    else
    {
      sub_1C1F17304(0, &qword_1EBF0B1F0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
      if (*(_DWORD *)(*(void *)(v16 - 8) + 84) != a3)
      {
        *(void *)(a1 + a4[7] + 8) = (a2 - 1);
        return;
      }
      uint64_t v10 = v16;
      uint64_t v14 = *(void *)(v16 - 8);
      uint64_t v15 = a4[6];
    }
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  v11(v12, a2, a2, v10);
}

void sub_1C1FFCD8C()
{
  sub_1C2147B20();
  if (v0 <= 0x3F)
  {
    sub_1C2147AC0();
    if (v1 <= 0x3F)
    {
      sub_1C1F17304(319, &qword_1EBF0B1F0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

uint64_t method lookup function for ScheduleDurationCell(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ScheduleDurationCell);
}

uint64_t dispatch thunk of ScheduleDurationCell.item.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of ScheduleDurationCell.item.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of ScheduleDurationCell.item.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xC8))();
}

uint64_t sub_1C1FFCF7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ScheduleDurationItem();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

id sub_1C1FFCFE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27A78];
  sub_1C1F17304(0, (unint64_t *)&unk_1EA2C5130, MEMORY[0x1E4F27A78], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)v14 - v6;
  id v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
  id v9 = objc_msgSend(self, sel_preferredFontForTextStyle_, *MEMORY[0x1E4FB28F0]);
  objc_msgSend(v8, sel_setFont_, v9);

  id v10 = objc_msgSend(self, sel_secondaryLabelColor);
  objc_msgSend(v8, sel_setTextColor_, v10);

  objc_msgSend(v8, sel_setNumberOfLines_, 1);
  objc_msgSend(v8, sel_setAdjustsFontForContentSizeCategory_, 1);
  objc_msgSend(v8, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  v14[0] = a1;
  v14[1] = a2;
  sub_1C2147B60();
  uint64_t v11 = sub_1C2147BB0();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v7, 0, 1, v11);
  sub_1C1F40B78();
  sub_1C214B550();
  sub_1C1FFD838((uint64_t)v7, (unint64_t *)&unk_1EA2C5130, v4);
  uint64_t v12 = (void *)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  objc_msgSend(v8, sel_setText_, v12);

  return v8;
}

id sub_1C1FFD22C(uint64_t a1)
{
  uint64_t v29 = sub_1C2147CF0();
  uint64_t v2 = *(void *)(v29 - 8);
  MEMORY[0x1F4188790](v29);
  uint64_t v4 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27928];
  sub_1C1F17304(0, &qword_1EBF0B1F0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v6 - 8);
  id v8 = (char *)&v28 - v7;
  uint64_t v9 = sub_1C2147AC0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
  id v14 = objc_msgSend(self, sel_preferredFontForTextStyle_, *MEMORY[0x1E4FB28C8]);
  objc_msgSend(v13, sel_setFont_, v14);

  uint64_t v15 = v9;
  uint64_t v16 = v10;
  objc_msgSend(v13, sel_setAdjustsFontForContentSizeCategory_, 1);
  objc_msgSend(v13, sel_setLineBreakMode_, 0);
  objc_msgSend(v13, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v13, sel_setNumberOfLines_, 2);
  sub_1C1FFBDCC(a1, (uint64_t)v8, &qword_1EBF0B1F0, v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v15) == 1)
  {
    sub_1C1FFD838((uint64_t)v8, &qword_1EBF0B1F0, MEMORY[0x1E4F27928]);
    if (qword_1EBF0CA00 != -1) {
      swift_once();
    }
    id v17 = (id)qword_1EBF0CA18;
    swift_bridgeObjectRetain();
    sub_1C2147730();
    swift_bridgeObjectRelease();

    uint64_t v18 = (void *)sub_1C214A5B0();
    swift_bridgeObjectRelease();
    objc_msgSend(v13, sel_setText_, v18);

    id v19 = objc_msgSend(self, sel_secondaryLabelColor);
    objc_msgSend(v13, sel_setTextColor_, v19);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v15);
    sub_1C2147CB0();
    char v20 = sub_1C2147BD0();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v29);
    uint64_t v21 = v12;
    if (v20)
    {
      sub_1C1F5236C(0, qword_1EBF0B8A0, (unint64_t *)&qword_1EBF0C9F0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
      uint64_t v22 = swift_allocObject();
      *(_OWORD *)(v22 + 16) = xmmword_1C214FCD0;
      Swift::String v23 = Date.formattedWithYearIfDifferent()();
      *(void *)(v22 + 56) = MEMORY[0x1E4FBB1A0];
      *(void *)(v22 + 64) = sub_1C1F31298();
      *(Swift::String *)(v22 + 32) = v23;
      if (qword_1EBF0CA00 != -1) {
        swift_once();
      }
      id v24 = (id)qword_1EBF0CA18;
      swift_bridgeObjectRetain();
      sub_1C2147730();
      sub_1C214A5C0();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      Date.formattedWithYearIfDifferent()();
    }
    uint64_t v25 = (void *)sub_1C214A5B0();
    swift_bridgeObjectRelease();
    objc_msgSend(v13, sel_setText_, v25);

    id v26 = objc_msgSend(self, sel_labelColor);
    objc_msgSend(v13, sel_setTextColor_, v26);

    (*(void (**)(char *, uint64_t))(v16 + 8))(v21, v15);
  }
  return v13;
}

uint64_t sub_1C1FFD838(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1C1F17304(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

void sub_1C1FFD8A8()
{
  if (!qword_1EA2C5140)
  {
    sub_1C1F17304(255, &qword_1EBF0B1F0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA2C5140);
    }
  }
}

uint64_t sub_1C1FFD93C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ScheduleDurationItem();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C1FFD9A0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C1FFDA00(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id InteractionNotCheckedItem.medication.getter()
{
  return *(id *)(v0 + 16);
}

uint64_t InteractionNotCheckedItem.reuseIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1C1FFDA80()
{
  uint64_t v1 = *(void *)(v0 + 24);
  id v2 = objc_msgSend(*(id *)(v0 + 16), sel_semanticIdentifier);
  id v3 = objc_msgSend(v2, sel_description);
  sub_1C214A5F0();

  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  return v1;
}

void *InteractionNotCheckedItem.__allocating_init(medication:)(uint64_t a1)
{
  id v2 = (void *)swift_allocObject();
  type metadata accessor for InteractionNotCheckedCell();
  sub_1C1FFDFE0(&qword_1EA2C5148, 255, (void (*)(uint64_t))type metadata accessor for InteractionNotCheckedCell);
  v2[3] = sub_1C21481D0();
  v2[4] = v3;
  v2[2] = a1;
  return v2;
}

void *InteractionNotCheckedItem.init(medication:)(uint64_t a1)
{
  type metadata accessor for InteractionNotCheckedCell();
  sub_1C1FFDFE0(&qword_1EA2C5148, 255, (void (*)(uint64_t))type metadata accessor for InteractionNotCheckedCell);
  v1[3] = sub_1C21481D0();
  v1[4] = v3;
  v1[2] = a1;
  return v1;
}

uint64_t static InteractionNotCheckedItem.== infix(_:_:)()
{
  return sub_1C214B220() & 1;
}

void sub_1C1FFDC8C()
{
  swift_bridgeObjectRetain();
  sub_1C214A690();
  swift_bridgeObjectRelease();
  id v1 = *(id *)(v0 + 16);
  sub_1C214B230();
}

uint64_t InteractionNotCheckedItem.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t InteractionNotCheckedItem.__deallocating_deinit()
{
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_1C1FFDD78()
{
  return sub_1C214BB80();
}

uint64_t sub_1C1FFDDC8()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1C1FFDDFC()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 24);
  id v2 = objc_msgSend(*(id *)(*(void *)v0 + 16), sel_semanticIdentifier);
  id v3 = objc_msgSend(v2, sel_description);
  sub_1C214A5F0();

  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1C1FFDEA8()
{
  return sub_1C214B220() & 1;
}

uint64_t sub_1C1FFDEF0()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 120))();
}

void sub_1C1FFDF34()
{
  uint64_t v1 = *v0;
  sub_1C214A690();
  id v2 = *(id *)(v1 + 16);
  sub_1C214B230();
}

uint64_t sub_1C1FFDF98(uint64_t a1, uint64_t a2)
{
  return sub_1C1FFDFE0(&qword_1EA2C5150, a2, (void (*)(uint64_t))type metadata accessor for InteractionNotCheckedItem);
}

uint64_t sub_1C1FFDFE0(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for InteractionNotCheckedItem()
{
  return self;
}

uint64_t sub_1C1FFE04C()
{
  sub_1C214BB30();
  uint64_t v1 = *v0;
  sub_1C214A690();
  id v2 = *(id *)(v1 + 16);
  sub_1C214B230();

  return sub_1C214BB80();
}

uint64_t method lookup function for InteractionNotCheckedItem(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for InteractionNotCheckedItem);
}

uint64_t dispatch thunk of InteractionNotCheckedItem.uniqueIdentifier.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 96))();
}

uint64_t dispatch thunk of InteractionNotCheckedItem.__allocating_init(medication:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of InteractionNotCheckedItem.hash(into:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of InteractionNotCheckedItem.hashValue.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

__n128 sub_1C1FFE140()
{
  __asm { FMOV            V0.2D, #16.0 }
  xmmword_1EA2C7EC0 = (__int128)result;
  *(__n128 *)&qword_1EA2C7ED0 = result;
  return result;
}

uint64_t sub_1C1FFE154(uint64_t a1, void *a2)
{
  sub_1C1F2116C(a1, (uint64_t)v5);
  uint64_t v3 = *a2 + OBJC_IVAR____TtC19HealthMedicationsUI27InteractionResultDetailCell_item;
  swift_beginAccess();
  sub_1C1F2373C((uint64_t)v5, v3, (unint64_t *)&qword_1EBF0C300, (unint64_t *)&qword_1EBF0C2F0);
  swift_endAccess();
  sub_1C1FFEE8C();
  return sub_1C1F23854((uint64_t)v5, (unint64_t *)&qword_1EBF0C300, (unint64_t *)&qword_1EBF0C2F0);
}

uint64_t sub_1C1FFE208@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI27InteractionResultDetailCell_item;
  swift_beginAccess();
  return sub_1C1F2116C(v3, a1);
}

uint64_t sub_1C1FFE25C(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI27InteractionResultDetailCell_item;
  swift_beginAccess();
  sub_1C1F2373C(a1, v3, (unint64_t *)&qword_1EBF0C300, (unint64_t *)&qword_1EBF0C2F0);
  swift_endAccess();
  sub_1C1FFEE8C();
  return sub_1C1F23854(a1, (unint64_t *)&qword_1EBF0C300, (unint64_t *)&qword_1EBF0C2F0);
}

void (*sub_1C1FFE304(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1C1FFE364;
}

void sub_1C1FFE364(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    sub_1C1FFEE8C();
  }
}

id sub_1C1FFE46C(void *a1)
{
  uint64_t v3 = &v1[OBJC_IVAR____TtC19HealthMedicationsUI27InteractionResultDetailCell_item];
  *(_OWORD *)uint64_t v3 = 0u;
  *((_OWORD *)v3 + 1) = 0u;
  *((void *)v3 + 4) = 0;
  *(void *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI27InteractionResultDetailCell____lazy_storage___firstFactorView] = 0;
  *(void *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI27InteractionResultDetailCell____lazy_storage___separatorView] = 0;
  *(void *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI27InteractionResultDetailCell____lazy_storage___secondFactorView] = 0;
  v6.receiver = v1;
  v6.super_class = (Class)type metadata accessor for InteractionResultDetailCell();
  id v4 = objc_msgSendSuper2(&v6, sel_initWithCoder_, a1);

  return v4;
}

id sub_1C1FFE560()
{
  return sub_1C1FFE654(&OBJC_IVAR____TtC19HealthMedicationsUI27InteractionResultDetailCell____lazy_storage___firstFactorView);
}

id sub_1C1FFE56C()
{
  uint64_t v1 = OBJC_IVAR____TtC19HealthMedicationsUI27InteractionResultDetailCell____lazy_storage___separatorView;
  id v2 = *(void **)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI27InteractionResultDetailCell____lazy_storage___separatorView);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI27InteractionResultDetailCell____lazy_storage___separatorView);
  }
  else
  {
    id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F67C08]), sel_init);
    HKUIOnePixel();
    objc_msgSend(v4, sel_setSeparatorThickness_);
    id v5 = objc_msgSend(self, sel_separatorColor);
    objc_msgSend(v4, sel_setColor_, v5);

    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    objc_super v6 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    id v2 = 0;
  }
  id v7 = v2;
  return v3;
}

id sub_1C1FFE648()
{
  return sub_1C1FFE654(&OBJC_IVAR____TtC19HealthMedicationsUI27InteractionResultDetailCell____lazy_storage___secondFactorView);
}

id sub_1C1FFE654(uint64_t *a1)
{
  uint64_t v2 = *a1;
  id v3 = *(void **)(v1 + *a1);
  if (v3)
  {
    id v4 = *(id *)(v1 + *a1);
  }
  else
  {
    id v5 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for InteractionDetailFactorView()), sel_init);
    objc_msgSend(v5, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    objc_super v6 = *(void **)(v1 + v2);
    *(void *)(v1 + v2) = v5;
    id v4 = v5;

    id v3 = 0;
  }
  id v7 = v3;
  return v4;
}

void sub_1C1FFE6D8()
{
  id v1 = sub_1C1FFE560();
  id v2 = sub_1C1FFE56C();
  id v3 = sub_1C1FFE648();
  id v4 = v1;
  id v5 = objc_msgSend(v0, sel_contentView);
  objc_msgSend(v5, sel_addSubview_, v4);

  id v6 = v2;
  id v7 = objc_msgSend(v0, sel_contentView);
  objc_msgSend(v7, sel_addSubview_, v6);

  id v8 = v3;
  id v9 = objc_msgSend(v0, sel_contentView);
  objc_msgSend(v9, sel_addSubview_, v8);
}

void sub_1C1FFE7EC()
{
  uint64_t v58 = self;
  sub_1C1F0ED28();
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1C2151820;
  id v2 = sub_1C1FFE560();
  id v3 = objc_msgSend(v2, sel_topAnchor);

  id v4 = objc_msgSend(v0, sel_contentView);
  id v5 = objc_msgSend(v4, sel_topAnchor);

  if (qword_1EA2C26C8 != -1) {
    swift_once();
  }
  id v6 = objc_msgSend(v3, sel_constraintEqualToAnchor_constant_, v5, *(double *)&xmmword_1EA2C7EC0);

  *(void *)(v1 + 32) = v6;
  id v7 = sub_1C1FFE560();
  id v8 = objc_msgSend(v7, sel_leadingAnchor);

  id v9 = objc_msgSend(v0, sel_contentView);
  id v10 = objc_msgSend(v9, sel_layoutMarginsGuide);

  id v11 = objc_msgSend(v10, (SEL)&selRef_setTranslatesAutoresizingMaskIntoConstraints_ + 2);
  id v12 = objc_msgSend(v8, sel_constraintEqualToAnchor_, v11);

  *(void *)(v1 + 40) = v12;
  id v13 = sub_1C1FFE560();
  id v14 = objc_msgSend(v13, sel_trailingAnchor);

  id v15 = objc_msgSend(v0, sel_contentView);
  id v16 = objc_msgSend(v15, sel_layoutMarginsGuide);

  id v17 = objc_msgSend(v16, sel_trailingAnchor);
  id v18 = objc_msgSend(v14, sel_constraintEqualToAnchor_, v17);

  *(void *)(v1 + 48) = v18;
  id v19 = sub_1C1FFE56C();
  id v20 = objc_msgSend(v19, (SEL)&selRef_setTranslatesAutoresizingMaskIntoConstraints_ + 2);

  id v21 = objc_msgSend(v0, sel_contentView);
  id v22 = objc_msgSend(v21, sel_layoutMarginsGuide);

  id v23 = objc_msgSend(v22, (SEL)&selRef_setTranslatesAutoresizingMaskIntoConstraints_ + 2);
  id v24 = objc_msgSend(v20, sel_constraintEqualToAnchor_, v23);

  *(void *)(v1 + 56) = v24;
  id v25 = sub_1C1FFE56C();
  id v26 = objc_msgSend(v25, sel_trailingAnchor);

  id v27 = objc_msgSend(v0, sel_contentView);
  id v28 = objc_msgSend(v27, sel_layoutMarginsGuide);

  id v29 = objc_msgSend(v28, sel_trailingAnchor);
  id v30 = objc_msgSend(v26, sel_constraintEqualToAnchor_, v29);

  *(void *)(v1 + 64) = v30;
  id v31 = sub_1C1FFE56C();
  id v32 = objc_msgSend(v31, sel_topAnchor);

  id v33 = sub_1C1FFE560();
  id v34 = objc_msgSend(v33, sel_bottomAnchor);

  id v35 = objc_msgSend(v32, sel_constraintEqualToAnchor_constant_, v34, 20.0);
  *(void *)(v1 + 72) = v35;
  id v36 = sub_1C1FFE648();
  id v37 = objc_msgSend(v36, sel_leadingAnchor);

  id v38 = objc_msgSend(v0, sel_contentView);
  id v39 = objc_msgSend(v38, sel_layoutMarginsGuide);

  id v40 = objc_msgSend(v39, sel_leadingAnchor);
  id v41 = objc_msgSend(v37, sel_constraintEqualToAnchor_, v40);

  *(void *)(v1 + 80) = v41;
  id v42 = sub_1C1FFE648();
  id v43 = objc_msgSend(v42, sel_trailingAnchor);

  id v44 = objc_msgSend(v0, sel_contentView);
  id v45 = objc_msgSend(v44, sel_layoutMarginsGuide);

  id v46 = objc_msgSend(v45, sel_trailingAnchor);
  id v47 = objc_msgSend(v43, sel_constraintEqualToAnchor_, v46);

  *(void *)(v1 + 88) = v47;
  id v48 = sub_1C1FFE648();
  id v49 = objc_msgSend(v48, sel_topAnchor);

  id v50 = sub_1C1FFE56C();
  id v51 = objc_msgSend(v50, sel_bottomAnchor);

  id v52 = objc_msgSend(v49, sel_constraintEqualToAnchor_constant_, v51, 17.0);
  *(void *)(v1 + 96) = v52;
  id v53 = sub_1C1FFE648();
  id v54 = objc_msgSend(v53, sel_bottomAnchor);

  id v55 = objc_msgSend(v0, sel_contentView);
  id v56 = objc_msgSend(v55, sel_bottomAnchor);

  id v57 = objc_msgSend(v54, sel_constraintEqualToAnchor_constant_, v56, -*(double *)&qword_1EA2C7ED0);
  *(void *)(v1 + 104) = v57;
  sub_1C214A7A0();
  sub_1C1F645D4();
  id v59 = (id)sub_1C214A770();
  swift_bridgeObjectRelease();
  objc_msgSend(v58, sel_activateConstraints_, v59);
}

void sub_1C1FFEE8C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1C21497F0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  id v5 = (char *)v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0) + 40;
  uint64_t v6 = (uint64_t)v1 + OBJC_IVAR____TtC19HealthMedicationsUI27InteractionResultDetailCell_item;
  swift_beginAccess();
  sub_1C1F2116C(v6, (uint64_t)v37);
  if (v37[3])
  {
    sub_1C1F23804(0, (unint64_t *)&qword_1EBF0C2F0);
    sub_1C1FFF5D0();
    if (swift_dynamicCast())
    {
      uint64_t v7 = v36[0];
      id v8 = (char *)sub_1C1FFE560();
      id v9 = (void *)(v7 + *(void *)(*(void *)v7 + 120));
      uint64_t v10 = v9[3];
      uint64_t v11 = v9[4];
      __swift_project_boxed_opaque_existential_0(v9, v10);
      uint64_t v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 40))(v10, v11);
      id v13 = (uint64_t *)&v8[OBJC_IVAR____TtC19HealthMedicationsUI27InteractionDetailFactorView_ingredients];
      swift_beginAccess();
      *id v13 = v12;

      swift_bridgeObjectRelease();
      id v14 = sub_1C1FFE560();
      uint64_t v15 = v9[3];
      uint64_t v16 = v9[4];
      __swift_project_boxed_opaque_existential_0(v9, v15);
      (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v16 + 32))(v37, v15, v16);
      uint64_t v17 = (uint64_t)v14 + OBJC_IVAR____TtC19HealthMedicationsUI27InteractionDetailFactorView_viewModelFactor;
      swift_beginAccess();
      sub_1C1F2373C((uint64_t)v37, v17, &qword_1EA2C3A70, &qword_1EA2C3A78);
      swift_endAccess();
      sub_1C1F67128();
      sub_1C1F23854((uint64_t)v37, &qword_1EA2C3A70, &qword_1EA2C3A78);

      id v18 = (char *)sub_1C1FFE648();
      uint64_t v19 = v9[3];
      uint64_t v20 = v9[4];
      __swift_project_boxed_opaque_existential_0(v9, v19);
      uint64_t v21 = (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 64))(v19, v20);
      id v22 = (uint64_t *)&v18[OBJC_IVAR____TtC19HealthMedicationsUI27InteractionDetailFactorView_ingredients];
      swift_beginAccess();
      *id v22 = v21;

      swift_bridgeObjectRelease();
      id v23 = sub_1C1FFE648();
      uint64_t v24 = v9[3];
      uint64_t v25 = v9[4];
      __swift_project_boxed_opaque_existential_0(v9, v24);
      (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v25 + 56))(v37, v24, v25);
      uint64_t v26 = (uint64_t)v23 + OBJC_IVAR____TtC19HealthMedicationsUI27InteractionDetailFactorView_viewModelFactor;
      swift_beginAccess();
      sub_1C1F2373C((uint64_t)v37, v26, &qword_1EA2C3A70, &qword_1EA2C3A78);
      swift_endAccess();
      sub_1C1F67128();
      sub_1C1F23854((uint64_t)v37, &qword_1EA2C3A70, &qword_1EA2C3A78);
      swift_release();

      return;
    }
  }
  else
  {
    sub_1C1F23854((uint64_t)v37, (unint64_t *)&qword_1EBF0C300, (unint64_t *)&qword_1EBF0C2F0);
  }
  sub_1C21497A0();
  id v27 = v1;
  id v28 = sub_1C21497E0();
  os_log_type_t v29 = sub_1C214ABD0();
  if (os_log_type_enabled(v28, v29))
  {
    uint64_t v30 = swift_slowAlloc();
    uint64_t v35 = v2;
    id v31 = (uint8_t *)v30;
    uint64_t v32 = swift_slowAlloc();
    v36[0] = v32;
    *(_DWORD *)id v31 = 136446210;
    sub_1C1F2116C(v6, (uint64_t)v37);
    sub_1C1F237AC(0, (unint64_t *)&qword_1EBF0C300, (unint64_t *)&qword_1EBF0C2F0);
    uint64_t v33 = sub_1C214A630();
    v37[0] = sub_1C1F6FD54(v33, v34, v36);
    sub_1C214B530();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C1F0B000, v28, v29, "Incorrect view model for InteractionResultDetailCell: %{public}s", v31, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C8754730](v32, -1, -1);
    MEMORY[0x1C8754730](v31, -1, -1);

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v35);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
}

uint64_t type metadata accessor for InteractionResultDetailCell()
{
  return self;
}

id InteractionResultDetailCell.__deallocating_deinit()
{
  return sub_1C1FFF400((SEL *)&selRef_dealloc);
}

id sub_1C1FFF400(SEL *a1)
{
  v4.receiver = v1;
  v4.super_class = (Class)type metadata accessor for InteractionResultDetailCell();
  return objc_msgSendSuper2(&v4, *a1);
}

uint64_t sub_1C1FFF4C0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC19HealthMedicationsUI27InteractionResultDetailCell_item;
  swift_beginAccess();
  return sub_1C1F2116C(v3, a2);
}

uint64_t method lookup function for InteractionResultDetailCell(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for InteractionResultDetailCell);
}

uint64_t dispatch thunk of InteractionResultDetailCell.item.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of InteractionResultDetailCell.item.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of InteractionResultDetailCell.item.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x80))();
}

void sub_1C1FFF5D0()
{
  if (!qword_1EA2C5178)
  {
    type metadata accessor for InteractionResultDetailCell();
    sub_1C1F23804(255, &qword_1EA2C5180);
    sub_1C1FFF658();
    unint64_t v0 = type metadata accessor for InteractionResultItem();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C5178);
    }
  }
}

unint64_t sub_1C1FFF658()
{
  unint64_t result = qword_1EA2C5188;
  if (!qword_1EA2C5188)
  {
    type metadata accessor for InteractionResultDetailCell();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C5188);
  }
  return result;
}

Swift::Void __swiftcall OntologyInfoInternalViewController.viewDidLoad()()
{
  v1.receiver = v0;
  v1.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v1, sel_viewDidLoad);
  sub_1C1FFF744();
}

void sub_1C1FFF744()
{
  objc_super v1 = v0;
  uint64_t v2 = (void *)sub_1C214A5B0();
  objc_msgSend(v1, sel_setTitle_, v2);

  id v3 = objc_msgSend(v1, sel_tableView);
  if (!v3)
  {
    __break(1u);
    goto LABEL_9;
  }
  objc_super v4 = v3;
  objc_msgSend(v3, sel_setAllowsSelection_, 0);

  id v5 = objc_msgSend(v1, sel_tableView);
  if (!v5)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v6 = v5;
  sub_1C2148090();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  sub_1C2148080();
  id v8 = (void *)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  objc_msgSend(v6, sel_registerClass_forCellReuseIdentifier_, ObjCClassFromMetadata, v8);

  id v9 = objc_msgSend(v1, sel_tableView);
  if (!v9)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v10 = v9;
  sub_1C2148040();
  uint64_t v11 = swift_getObjCClassFromMetadata();
  sub_1C2148020();
  uint64_t v12 = (void *)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  objc_msgSend(v10, sel_registerClass_forCellReuseIdentifier_, v11, v12);

  id v13 = objc_msgSend(v1, sel_tableView);
  if (!v13)
  {
LABEL_11:
    __break(1u);
    return;
  }
  id v14 = v13;
  objc_msgSend(v13, sel_reloadData);
}

Swift::Int __swiftcall OntologyInfoInternalViewController.numberOfSections(in:)(UITableView *in)
{
  return 1;
}

Swift::Int __swiftcall OntologyInfoInternalViewController.tableView(_:numberOfRowsInSection:)(UITableView *_, Swift::Int numberOfRowsInSection)
{
  unint64_t v3 = *(void *)(*(void *)(v2
                             + OBJC_IVAR____TtC19HealthMedicationsUI34OntologyInfoInternalViewController_conceptsDataSource)
                 + 88);
  if (!(v3 >> 62))
  {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    Swift::Int result = v4 + 2;
    if (!__OFADD__(v4, 2)) {
      return result;
    }
LABEL_6:
    __break(1u);
    return result;
  }
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_1C214B930();
  swift_bridgeObjectRelease();
  Swift::Int result = v6 + 2;
  if (__OFADD__(v6, 2)) {
    goto LABEL_6;
  }
  return result;
}

uint64_t OntologyInfoInternalViewController.tableView(_:cellForRowAt:)(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  sub_1C2148040();
  sub_1C2148020();
  uint64_t v6 = (void *)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  uint64_t v7 = (void *)sub_1C2147D40();
  id v8 = objc_msgSend(a1, sel_dequeueReusableCellWithIdentifier_forIndexPath_, v6, v7);

  uint64_t v9 = swift_dynamicCastClassUnconditional();
  if (!sub_1C2147D70() || sub_1C2147D70() == 1)
  {
    uint64_t v10 = (void *)sub_1C2148010();
    uint64_t v11 = (void *)sub_1C214A5B0();
    objc_msgSend(v10, sel_setText_, v11);

    uint64_t v12 = (void *)sub_1C2148030();
    swift_bridgeObjectRetain();
    id v13 = (id)sub_1C214A5B0();
    swift_bridgeObjectRelease();
    objc_msgSend(v12, sel_setText_, v13);

    goto LABEL_4;
  }
  uint64_t v15 = *(void *)(v3 + OBJC_IVAR____TtC19HealthMedicationsUI34OntologyInfoInternalViewController_conceptsDataSource);
  swift_retain();
  uint64_t v16 = a2;
  uint64_t v17 = sub_1C2147D70();
  unint64_t v18 = v17 - 2;
  if (__OFSUB__(v17, 2))
  {
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v16 = *(void *)(v15 + 88);
  swift_bridgeObjectRetain();
  uint64_t result = swift_release();
  if ((v16 & 0xC000000000000001) != 0)
  {
LABEL_15:
    id v19 = (id)MEMORY[0x1C8753960](v18, v16);
    goto LABEL_11;
  }
  if ((v18 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v18 < *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v19 = *(id *)(v16 + 8 * v18 + 32);
LABEL_11:
    uint64_t v20 = v19;
    swift_bridgeObjectRelease();
    uint64_t v35 = v20;
    sub_1C1F25654();
    sub_1C1FFFED0();
    id v13 = v20;
    if (swift_dynamicCast())
    {
      sub_1C1F31280(v33, (uint64_t)v36);
      uint64_t v21 = (void *)sub_1C2148010();
      uint64_t v22 = v37;
      uint64_t v23 = v38;
      __swift_project_boxed_opaque_existential_0(v36, v37);
      (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v22, v23);
      uint64_t v24 = (void *)sub_1C214A5B0();
      swift_bridgeObjectRelease();
      objc_msgSend(v21, sel_setText_, v24);

      uint64_t v25 = (void *)sub_1C2148030();
      uint64_t v26 = v37;
      uint64_t v27 = v38;
      __swift_project_boxed_opaque_existential_0(v36, v37);
      (*(void (**)(uint64_t, uint64_t))(v27 + 16))(v26, v27);
      id v28 = (void *)sub_1C214A5B0();
      swift_bridgeObjectRelease();
      objc_msgSend(v25, sel_setText_, v28);

      __swift_destroy_boxed_opaque_existential_0((uint64_t)v36);
      return v9;
    }
    uint64_t v34 = 0;
    memset(v33, 0, sizeof(v33));
    sub_1C1FFFF28((uint64_t)v33);
    os_log_type_t v29 = (void *)sub_1C2148010();
    uint64_t v30 = (void *)sub_1C214A5B0();
    objc_msgSend(v29, sel_setText_, v30);

    id v31 = (void *)sub_1C2148030();
    uint64_t v32 = (void *)sub_1C214A5B0();
    objc_msgSend(v31, sel_setText_, v32);

LABEL_4:
    return v9;
  }
  __break(1u);
  return result;
}

unint64_t sub_1C1FFFED0()
{
  unint64_t result = qword_1EA2C5198;
  if (!qword_1EA2C5198)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA2C5198);
  }
  return result;
}

uint64_t sub_1C1FFFF28(uint64_t a1)
{
  sub_1C1FFFF84();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1C1FFFF84()
{
  if (!qword_1EA2C51A0)
  {
    sub_1C1FFFED0();
    unint64_t v0 = sub_1C214B4F0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C51A0);
    }
  }
}

id OntologyInfoInternalViewController.__allocating_init(usingInsetStyling:)(char a1)
{
  id v3 = objc_allocWithZone(v1);

  return objc_msgSend(v3, sel_initWithUsingInsetStyling_, a1 & 1);
}

void OntologyInfoInternalViewController.init(usingInsetStyling:)()
{
}

id OntologyInfoInternalViewController.__allocating_init(style:)(uint64_t a1)
{
  id v3 = objc_allocWithZone(v1);

  return objc_msgSend(v3, sel_initWithStyle_, a1);
}

void OntologyInfoInternalViewController.init(style:)()
{
}

id OntologyInfoInternalViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = v3;
  if (a2)
  {
    uint64_t v6 = (void *)sub_1C214A5B0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = 0;
  }
  id v7 = objc_msgSend(objc_allocWithZone(v4), sel_initWithNibName_bundle_, v6, a3);

  return v7;
}

void OntologyInfoInternalViewController.init(nibName:bundle:)()
{
}

id OntologyInfoInternalViewController.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for OntologyInfoInternalViewController()
{
  return self;
}

uint64_t method lookup function for OntologyInfoInternalViewController(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for OntologyInfoInternalViewController);
}

id _sSo6UIViewC19HealthMedicationsUIE16alignConstraints2toyAB_tF_0(void *a1)
{
  objc_super v2 = v1;
  uint64_t v4 = self;
  sub_1C1F0ED28();
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1C21510C0;
  id v6 = objc_msgSend(v2, sel_leadingAnchor);
  id v7 = objc_msgSend(a1, sel_leadingAnchor);
  id v8 = objc_msgSend(v6, sel_constraintEqualToAnchor_, v7);

  *(void *)(v5 + 32) = v8;
  id v9 = objc_msgSend(v2, sel_topAnchor);
  id v10 = objc_msgSend(a1, sel_topAnchor);
  id v11 = objc_msgSend(v9, sel_constraintEqualToAnchor_, v10);

  *(void *)(v5 + 40) = v11;
  id v12 = objc_msgSend(a1, sel_trailingAnchor);
  id v13 = objc_msgSend(v2, sel_trailingAnchor);
  id v14 = objc_msgSend(v12, sel_constraintEqualToAnchor_, v13);

  *(void *)(v5 + 48) = v14;
  id v15 = objc_msgSend(a1, sel_bottomAnchor);
  id v16 = objc_msgSend(v2, sel_bottomAnchor);
  id v17 = objc_msgSend(v15, sel_constraintEqualToAnchor_, v16);

  *(void *)(v5 + 56) = v17;
  sub_1C214A7A0();
  sub_1C1F645D4();
  unint64_t v18 = (void *)sub_1C214A770();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_activateConstraints_, v18);

  return objc_msgSend(v2, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
}

uint64_t HKDrugInteractionLifestyleFactor.localizedString.getter(uint64_t a1)
{
  char v2 = 0;
  return HKDrugInteractionLifestyleFactor.localizedString(variant:)((uint64_t)&v2, a1);
}

id HKDrugInteractionLifestyleFactor.image.getter(uint64_t a1)
{
  switch(a1)
  {
    case 0:
    case 1:
    case 2:
    case 3:
      type metadata accessor for DrugInteractionVisualizationView();
      uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
      id v2 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
      id v3 = (void *)sub_1C214A5B0();
      swift_bridgeObjectRelease();
      id v4 = objc_msgSend(self, sel_imageNamed_inBundle_, v3, v2);

      if (!v4)
      {
        __break(1u);
LABEL_5:
        sub_1C214B7C0();
        swift_bridgeObjectRelease();
        sub_1C214BA40();
        sub_1C214A6C0();
        swift_bridgeObjectRelease();
        sub_1C214B910();
        __break(1u);
        JUMPOUT(0x1C20007FCLL);
      }

      return v4;
    default:
      goto LABEL_5;
  }
}

BOOL static HKDrugInteractionLifestyleFactor.Variant.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t HKDrugInteractionLifestyleFactor.Variant.hash(into:)()
{
  return sub_1C214BB40();
}

uint64_t HKDrugInteractionLifestyleFactor.Variant.hashValue.getter()
{
  return sub_1C214BB80();
}

uint64_t HKDrugInteractionLifestyleFactor.localizedString(variant:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  switch(a2)
  {
    case 0:
      return v2;
    case 1:
    case 2:
    case 3:
      sub_1C214B7C0();
      swift_bridgeObjectRelease();
      sub_1C214A6C0();
      swift_bridgeObjectRelease();
      sub_1C214A6C0();
      sub_1C214A6C0();
      swift_bridgeObjectRelease();
      if (qword_1EBF0CA00 != -1) {
        swift_once();
      }
      id v3 = (id)qword_1EBF0CA18;
      swift_bridgeObjectRetain();
      uint64_t v2 = sub_1C2147730();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      break;
    default:
      sub_1C214B910();
      __break(1u);
      JUMPOUT(0x1C2000ADCLL);
  }
  return v2;
}

unint64_t sub_1C2000AF0()
{
  unint64_t result = qword_1EA2C51A8;
  if (!qword_1EA2C51A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C51A8);
  }
  return result;
}

unsigned char *_s7VariantOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C2000C10);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HKDrugInteractionLifestyleFactor.Variant()
{
  return &type metadata for HKDrugInteractionLifestyleFactor.Variant;
}

uint64_t sub_1C2000C50()
{
  uint64_t v1 = qword_1EA2C51B0;
  if (*(void *)(v0 + qword_1EA2C51B0))
  {
    uint64_t v2 = *(void *)(v0 + qword_1EA2C51B0);
  }
  else
  {
    uint64_t v3 = v0;
    sub_1C2148E10();
    sub_1C2148E00();
    sub_1C2148DB0();
    swift_release();
    sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C7C8);
    sub_1C214AC00();
    sub_1C2148D70();
    swift_allocObject();
    uint64_t v2 = sub_1C2148C90();
    *(void *)(v3 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

void *sub_1C2000D24()
{
  uint64_t v1 = qword_1EA2C51B8;
  if (*(void *)(v0 + qword_1EA2C51B8))
  {
    uint64_t v2 = *(void **)(v0 + qword_1EA2C51B8);
  }
  else
  {
    uint64_t v3 = v0;
    id v4 = *(id *)(v0 + qword_1EA2C51D8);
    uint64_t v5 = sub_1C2000C50();
    type metadata accessor for MedicationsInteractionEngine();
    swift_allocObject();
    uint64_t v2 = sub_1C1F34F68(v4, v5);

    swift_release();
    *(void *)(v3 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

uint64_t MedicationInformationDataSource.__allocating_init(displayContext:listManager:healthStore:analyticsManager:)(void **a1, uint64_t a2, void *a3, uint64_t a4)
{
  return MedicationInformationDataSource.init(displayContext:listManager:healthStore:analyticsManager:)(a1, a2, a3, a4);
}

uint64_t MedicationInformationDataSource.init(displayContext:listManager:healthStore:analyticsManager:)(void **a1, uint64_t a2, void *a3, uint64_t a4)
{
  unsigned int v6 = *a1;
  *(void *)(v4 + qword_1EA2C51B0) = 0;
  *(void *)(v4 + qword_1EA2C51B8) = 0;
  *(void *)(v4 + qword_1EA2C51C0) = MEMORY[0x1E4FBC870];
  *(void *)(v4 + qword_1EA2C51C8) = v6;
  *(void *)(v4 + qword_1EA2C51D0) = a2;
  *(void *)(v4 + qword_1EA2C51D8) = a3;
  *(void *)(v4 + qword_1EA2C51E0) = a4;
  id v7 = v6;
  swift_retain();
  id v8 = a3;
  swift_retain();
  uint64_t v9 = sub_1C2147F50();
  if (v6)
  {
    id v10 = v7;
    swift_retain();
    id v11 = objc_msgSend(v10, sel_firstOntologyCoding);
    if (!v11)
    {

      swift_release();
      goto LABEL_7;
    }
    id v12 = v11;
  }
  else
  {
    swift_retain();
  }
  sub_1C2001614();

  swift_release();
LABEL_7:
  swift_release();
  swift_release();
  return v9;
}

uint64_t sub_1C2000F98()
{
  return sub_1C2005CB4();
}

uint64_t sub_1C2000FA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  id v8 = (void *)swift_allocObject();
  v8[2] = a1;
  v8[3] = a2;
  v8[4] = a3;
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))MEMORY[0x1E4F1AC28];
  sub_1C2006CA8(0, &qword_1EA2C52B0, MEMORY[0x1E4F1AC28]);
  swift_allocObject();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1C2149F10();
  sub_1C2006D58(&qword_1EA2C52B8, &qword_1EA2C52B0, v9);
  uint64_t v10 = sub_1C2149FC0();
  uint64_t result = swift_release();
  *a4 = v10;
  return result;
}

void sub_1C20010DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  sub_1C2000D24();
  id v8 = sub_1C1F349B8();
  swift_release();
  unint64_t v9 = swift_bridgeObjectRetain();
  sub_1C203771C(v9);
  swift_bridgeObjectRelease();
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8C0);
  sub_1C1F2F9D0((unint64_t *)&qword_1EBF0C8C8, (unint64_t *)&qword_1EBF0C8C0);
  uint64_t v10 = (void *)sub_1C214AA50();
  swift_bridgeObjectRelease();
  if (a5)
  {
    sub_1C1F12718(0, &qword_1EBF0C908);
    sub_1C1F2F9D0((unint64_t *)&qword_1EBF0C910, &qword_1EBF0C908);
    a5 = (void *)sub_1C214AA50();
  }
  uint64_t v11 = swift_allocObject();
  swift_weakInit();
  id v12 = (void *)swift_allocObject();
  v12[2] = v11;
  v12[3] = a1;
  void v12[4] = a2;
  v14[4] = sub_1C2006DFC;
  v14[5] = v12;
  v14[0] = MEMORY[0x1E4F143A8];
  v14[1] = 1107296256;
  void v14[2] = sub_1C2032288;
  void v14[3] = &block_descriptor_14;
  id v13 = _Block_copy(v14);
  swift_retain();
  swift_release();
  objc_msgSend(v8, sel_interactionResultsForMedications_lifestyleFactors_completion_, v10, a5, v13);
  _Block_release(v13);
}

void sub_1C200131C(uint64_t a1, void *a2, uint64_t a3, void (*a4)(unint64_t *))
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v8 = Strong;
    if (a2)
    {
      id v26 = a2;
      id v9 = a2;
      sub_1C1F248B4(0, (unint64_t *)&qword_1EBF0C9C0);
      sub_1C1F12718(0, &qword_1EA2C52C0);
      if (swift_dynamicCast())
      {
        if (objc_msgSend(v25, sel_code) == (id)1003)
        {
          id v10 = objc_msgSend(self, sel_sharedBehavior);
          if (v10)
          {
            uint64_t v11 = v10;
            unsigned int v12 = objc_msgSend(v10, sel_isAppleInternalInstall);

            if (v12)
            {

              unint64_t v13 = 1;
LABEL_17:
              unint64_t v27 = v13;
              char v28 = 0;
              a4(&v27);
              swift_release();
              sub_1C1F916B8(v13);
              return;
            }
            unint64_t v27 = (unint64_t)v25;
            char v28 = 1;
            id v23 = v25;
            a4(&v27);

            swift_release();
            uint64_t v22 = v26;
            goto LABEL_20;
          }
LABEL_26:
          __break(1u);
          return;
        }
      }
      unint64_t v27 = (unint64_t)a2;
      char v28 = 1;
      id v20 = a2;
      id v21 = a2;
      a4(&v27);
      swift_release();

      uint64_t v22 = a2;
LABEL_20:

      return;
    }
    sub_1C2000C50();
    uint64_t v14 = sub_1C2148CC0();
    swift_release();
    if (v14)
    {
      id v15 = objc_msgSend(self, sel_sharedBehavior);
      if (!v15)
      {
        __break(1u);
        goto LABEL_26;
      }
      id v16 = v15;
      char v17 = objc_msgSend(v15, sel_isAppleInternalInstall);

      if (!a1) {
        goto LABEL_11;
      }
    }
    else
    {
      char v17 = 0;
      if (!a1)
      {
LABEL_11:
        unint64_t v13 = MEMORY[0x1E4FBC860];
        goto LABEL_14;
      }
    }
    unint64_t v18 = *(void **)(v8 + qword_1EA2C51C8);
    id v19 = v18;
    unint64_t v13 = Set<>.severities(filtering:includeMinorInteractions:)(v18, v17);

LABEL_14:
    if (v13 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v24 = sub_1C214B930();
      swift_bridgeObjectRelease();
      if (v24) {
        goto LABEL_17;
      }
    }
    else if (*(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_17;
    }
    swift_bridgeObjectRelease();
    unint64_t v13 = 0;
    goto LABEL_17;
  }
}

uint64_t sub_1C2001614()
{
  sub_1C2006120(0, &qword_1EBF0C7E8, MEMORY[0x1E4FBCC28], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v67 = (char *)&v45 - v2;
  uint64_t v62 = sub_1C214AD60();
  uint64_t v60 = *(void *)(v62 - 8);
  MEMORY[0x1F4188790](v62);
  id v51 = (char *)&v45 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2006B2C(0, &qword_1EBF0C740, MEMORY[0x1E4FBB390], MEMORY[0x1E4F1AC60]);
  id v49 = v4;
  uint64_t v50 = *((void *)v4 - 1);
  MEMORY[0x1F4188790](v4);
  unsigned int v6 = (char *)&v45 - v5;
  sub_1C2006250();
  uint64_t v46 = v7;
  uint64_t v47 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  id v9 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C200631C();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v52 = v10;
  uint64_t v53 = v11;
  MEMORY[0x1F4188790](v10);
  unint64_t v13 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C20068F4(0, &qword_1EA2C5218, (uint64_t (*)(uint64_t))sub_1C200631C, sub_1C200654C, MEMORY[0x1E4F1AA50]);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v57 = v14;
  uint64_t v58 = v15;
  MEMORY[0x1F4188790](v14);
  id v48 = (char *)&v45 - v16;
  sub_1C2006580();
  uint64_t v59 = v17;
  uint64_t v61 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  id v54 = (char *)&v45 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2006860();
  uint64_t v63 = v19;
  uint64_t v65 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19);
  id v55 = (char *)&v45 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C20068F4(0, &qword_1EA2C5270, (uint64_t (*)(uint64_t))sub_1C2006860, sub_1C20069D8, MEMORY[0x1E4F1AAB0]);
  uint64_t v64 = v21;
  uint64_t v66 = *(void *)(v21 - 8);
  MEMORY[0x1F4188790](v21);
  id v56 = (char *)&v45 - v22;
  uint64_t v68 = sub_1C2149730();
  uint64_t v23 = MEMORY[0x1E4F677F0];
  sub_1C200646C(0, (unint64_t *)&qword_1EBF0C690, MEMORY[0x1E4F677F0]);
  sub_1C1F43CE8();
  sub_1C200680C((unint64_t *)&qword_1EBF0C688, (uint64_t)&qword_1EBF0C690, v23, (void (*)(uint64_t))sub_1C200646C);
  sub_1C2149FD0();
  swift_release();
  uint64_t v45 = v0;
  uint64_t v24 = sub_1C2000D24()[5];
  swift_retain();
  swift_release();
  uint64_t v69 = v24;
  sub_1C2000D24();
  sub_1C1F34A2C();
  swift_release();
  swift_beginAccess();
  sub_1C2006B2C(0, &qword_1EBF0C750, MEMORY[0x1E4FBB390], MEMORY[0x1E4F1AC70]);
  sub_1C2149F50();
  swift_endAccess();
  swift_release();
  sub_1C200646C(0, &qword_1EA2C5208, (void (*)(uint64_t))sub_1C1F35D28);
  sub_1C2005DFC(&qword_1EBF0C638, (void (*)(uint64_t))sub_1C2006250);
  sub_1C200680C(&qword_1EA2C5210, (uint64_t)&qword_1EA2C5208, (uint64_t)sub_1C1F35D28, (void (*)(uint64_t))sub_1C200646C);
  sub_1C20064D0();
  uint64_t v25 = v46;
  id v26 = v49;
  sub_1C2149FF0();
  (*(void (**)(char *, void (*)(void, void, void, void)))(v50 + 8))(v6, v26);
  swift_release();
  (*(void (**)(char *, uint64_t))(v47 + 8))(v9, v25);
  unint64_t v27 = v51;
  sub_1C214AD40();
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0CB10);
  uint64_t v68 = sub_1C214AD80();
  uint64_t v28 = sub_1C214AD20();
  uint64_t v29 = *(void *)(v28 - 8);
  id v49 = *(void (**)(void, void, void, void))(v29 + 56);
  uint64_t v50 = v29 + 56;
  uint64_t v30 = (uint64_t)v67;
  v49(v67, 1, 1, v28);
  sub_1C200654C();
  uint64_t v47 = sub_1C1F2F9D0((unint64_t *)&qword_1EBF0C7F0, (unint64_t *)&qword_1EBF0CB10);
  id v31 = v48;
  uint64_t v32 = v52;
  sub_1C214A0B0();
  sub_1C1F441C8(v30);

  (*(void (**)(char *, uint64_t))(v60 + 8))(v27, v62);
  (*(void (**)(char *, uint64_t))(v53 + 8))(v13, v32);
  uint64_t v33 = swift_allocObject();
  swift_weakInit();
  uint64_t v34 = swift_allocObject();
  *(void *)(v34 + 16) = sub_1C2006A0C;
  *(void *)(v34 + 24) = v33;
  sub_1C2149E00();
  uint64_t v35 = MEMORY[0x1E4F1AAE0];
  sub_1C2006CA8(0, &qword_1EA2C5230, MEMORY[0x1E4F1AAE0]);
  sub_1C2006770();
  sub_1C200680C(&qword_1EA2C5250, (uint64_t)&qword_1EA2C5230, v35, (void (*)(uint64_t))sub_1C2006CA8);
  id v36 = v54;
  uint64_t v37 = v57;
  sub_1C214A120();
  swift_release();
  (*(void (**)(char *, uint64_t))(v58 + 8))(v31, v37);
  uint64_t v68 = 2;
  sub_1C2005DFC(&qword_1EA2C5268, (void (*)(uint64_t))sub_1C2006580);
  uint64_t v38 = v55;
  uint64_t v39 = v59;
  sub_1C2149FE0();
  (*(void (**)(char *, uint64_t))(v61 + 8))(v36, v39);
  uint64_t v68 = sub_1C214AD80();
  uint64_t v40 = (uint64_t)v67;
  v49(v67, 1, 1, v28);
  sub_1C20069D8();
  id v41 = v56;
  uint64_t v42 = v63;
  sub_1C214A0A0();
  sub_1C1F441C8(v40);

  (*(void (**)(char *, uint64_t))(v65 + 8))(v38, v42);
  swift_allocObject();
  swift_weakInit();
  sub_1C2006A90();
  uint64_t v43 = v64;
  sub_1C214A0F0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v66 + 8))(v41, v43);
  swift_beginAccess();
  sub_1C2149E20();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1C20021F8(unint64_t a1, uint64_t a2, char a3)
{
  uint64_t v32 = a2;
  sub_1C2006B78();
  uint64_t v33 = *(void *)(v5 - 8);
  uint64_t v34 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2006C2C();
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2006CA8(0, &qword_1EA2C5298, MEMORY[0x1E4F1ACE0]);
  uint64_t v14 = v13;
  uint64_t v15 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v17 = (char *)&v31 - v16;
  if ((a3 & 1) == 0) {
    goto LABEL_17;
  }
  if (!(a1 >> 62))
  {
    uint64_t v18 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v18) {
      goto LABEL_4;
    }
LABEL_17:
    uint64_t v36 = 2;
    sub_1C2006B2C(0, &qword_1EA2C5238, (uint64_t)&type metadata for InteractionSummaryItemState, MEMORY[0x1E4FBB718]);
    goto LABEL_18;
  }
  swift_bridgeObjectRetain();
  uint64_t v18 = sub_1C214B930();
  swift_bridgeObjectRelease();
  if (!v18) {
    goto LABEL_17;
  }
LABEL_4:
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (!result)
  {
    uint64_t v35 = 2;
    sub_1C2006B2C(0, &qword_1EA2C5238, (uint64_t)&type metadata for InteractionSummaryItemState, MEMORY[0x1E4FBB718]);
LABEL_18:
    sub_1C2149EE0();
    sub_1C1F248B4(0, (unint64_t *)&qword_1EBF0C9C0);
    sub_1C2149EC0();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    sub_1C2006D58(&qword_1EA2C52A0, &qword_1EA2C5298, MEMORY[0x1E4F1ACE0]);
    uint64_t v30 = sub_1C2149FC0();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    return v30;
  }
  uint64_t v35 = MEMORY[0x1E4FBC860];
  if (v18 >= 1)
  {
    uint64_t v20 = result;
    swift_bridgeObjectRetain();
    for (uint64_t i = 0; i != v18; ++i)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v22 = (id)MEMORY[0x1C8753960](i, a1);
      }
      else {
        id v22 = *(id *)(a1 + 8 * i + 32);
      }
      uint64_t v23 = v22;
      id v24 = objc_msgSend(v22, sel_firstOntologyCoding);

      if (v24)
      {
        sub_1C214B820();
        sub_1C214B860();
        sub_1C214B870();
        sub_1C214B830();
      }
      else
      {
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v25 = v35;
    id v26 = (void *)swift_allocObject();
    void v26[2] = v20;
    v26[3] = v25;
    v26[4] = v32;
    uint64_t v27 = MEMORY[0x1E4F1AAE0];
    sub_1C2006CA8(0, &qword_1EA2C5230, MEMORY[0x1E4F1AAE0]);
    sub_1C200680C(&qword_1EA2C5250, (uint64_t)&qword_1EA2C5230, v27, (void (*)(uint64_t))sub_1C2006CA8);
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1C2149F20();
    sub_1C2005DFC(&qword_1EA2C52A8, (void (*)(uint64_t))sub_1C2006B78);
    uint64_t v28 = v34;
    uint64_t v29 = sub_1C2149FC0();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v7, v28);
    swift_release();
    uint64_t v35 = v29;
    uint64_t v30 = sub_1C2149FC0();
    swift_release();
    swift_release();
    return v30;
  }
  __break(1u);
  return result;
}

void sub_1C2002780(uint64_t *a1)
{
  uint64_t v2 = sub_1C2147B20();
  uint64_t v40 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (char *)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1C2148540();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1C21487B0();
  uint64_t v41 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *a1;
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong) {
    return;
  }
  uint64_t v14 = Strong;
  uint64_t v38 = v6;
  uint64_t v39 = v5;
  uint64_t v15 = qword_1EA2C51C8;
  uint64_t v16 = *(void **)(Strong + qword_1EA2C51C8);
  if (v16)
  {
    id v17 = v16;
    id v18 = objc_msgSend(v17, sel_firstOntologyCoding);
    if (!v18)
    {
      swift_release();

      return;
    }
    uint64_t v19 = v18;
  }
  unint64_t v20 = sub_1C2149710();
  unint64_t v21 = sub_1C1F6501C(v20);
  swift_bridgeObjectRelease();
  if (!v21)
  {
LABEL_15:
    swift_retain();
    sub_1C2147F40();
    swift_release();
    sub_1C21482F0();
    swift_release();
    sub_1C21485B0();
    swift_release();
    swift_release();
    return;
  }
  if (v21 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v36 = sub_1C214B930();
    swift_bridgeObjectRelease();
    if (v36 >= 1) {
      goto LABEL_8;
    }
    goto LABEL_14;
  }
  if (*(uint64_t *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10) < 1)
  {
LABEL_14:
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
LABEL_8:
  id v22 = *(void **)(v14 + v15);
  if (v22)
  {
    id v23 = v22;
    swift_bridgeObjectRelease();
    sub_1C2006B2C(0, (unint64_t *)&qword_1EBF0CA10, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
    uint64_t v24 = swift_allocObject();
    *(_OWORD *)(v24 + 16) = xmmword_1C214E170;
    *(void *)(v24 + 32) = v23;
    v44[0] = v24;
    sub_1C214A7A0();
    unint64_t v21 = v44[0];
    uint64_t v25 = *(void **)(v14 + v15);
  }
  else
  {
    uint64_t v25 = 0;
  }
  v44[0] = v12;
  id v26 = v25;
  sub_1C2002D98((unint64_t *)v44, v25, (uint64_t)v11);

  LOBYTE(v43[0]) = 1;
  sub_1C2003F74((unsigned __int8 *)v43, v21, v44);
  unsigned __int8 v42 = 2;
  sub_1C2003F74(&v42, v21, v43);
  swift_bridgeObjectRelease();
  sub_1C1F72888(0, (unint64_t *)&qword_1EBF0C958, (unint64_t *)&qword_1EBF0C2F0);
  uint64_t v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_1C2150000;
  uint64_t v28 = v9;
  *(void *)(v27 + 56) = v9;
  uint64_t v37 = v9;
  *(void *)(v27 + 64) = sub_1C2005DFC((unint64_t *)&qword_1EA2C2E68, MEMORY[0x1E4F66510]);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v27 + 32));
  uint64_t v30 = v41;
  (*(void (**)(uint64_t *, char *, uint64_t))(v41 + 16))(boxed_opaque_existential_1, v11, v28);
  sub_1C1F236D8((uint64_t)v44, v27 + 72);
  sub_1C1F236D8((uint64_t)v43, v27 + 112);
  sub_1C2147B10();
  sub_1C2147AD0();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v4, v2);
  sub_1C2148520();
  swift_retain();
  sub_1C2147F40();
  swift_release();
  sub_1C21482F0();
  swift_release();
  sub_1C2006120(0, (unint64_t *)&qword_1EA2C2DD0, MEMORY[0x1E4F66468], MEMORY[0x1E4FBBE00]);
  uint64_t v31 = v38;
  unint64_t v32 = (*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80);
  uint64_t v33 = swift_allocObject();
  *(_OWORD *)(v33 + 16) = xmmword_1C214FCD0;
  unint64_t v34 = v33 + v32;
  uint64_t v35 = v39;
  (*(void (**)(unint64_t, char *, uint64_t))(v31 + 16))(v34, v8, v39);
  sub_1C21485B0();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v31 + 8))(v8, v35);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v43);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v44);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v11, v37);
}

uint64_t sub_1C2002D98@<X0>(unint64_t *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v87 = a3;
  uint64_t v80 = *v3;
  uint64_t v81 = a2;
  uint64_t v5 = sub_1C2148A70();
  uint64_t v85 = *(void *)(v5 - 8);
  uint64_t v86 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v84 = (char *)&v62 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C2006120(0, &qword_1EBF0C620, MEMORY[0x1E4FB0F28], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v83 = (char *)&v62 - v9;
  uint64_t v10 = sub_1C2148620();
  uint64_t v78 = *(void *)(v10 - 8);
  uint64_t v79 = v10;
  MEMORY[0x1F4188790](v10);
  uint64_t v82 = (char *)&v62 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = sub_1C21498E0();
  uint64_t v76 = *(void *)(v77 - 8);
  MEMORY[0x1F4188790](v77);
  uint64_t v75 = (char *)&v62 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2006120(0, &qword_1EBF0C610, MEMORY[0x1E4FB0E38], v7);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v74 = (char *)&v62 - v14;
  uint64_t v70 = (void (*)(char *, uint64_t))sub_1C2149830();
  uint64_t v69 = *((void *)v70 - 1);
  MEMORY[0x1F4188790](v70);
  uint64_t v68 = (char *)&v62 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v88 = sub_1C2149860();
  uint64_t v16 = *(void *)(v88 - 8);
  MEMORY[0x1F4188790](v88);
  id v18 = (char *)&v62 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = sub_1C2149930();
  uint64_t v73 = *(void *)(v72 - 8);
  MEMORY[0x1F4188790](v72);
  uint64_t v71 = (char *)&v62 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_1C2149BE0();
  uint64_t v91 = *(void *)(v20 - 8);
  uint64_t v92 = v20;
  MEMORY[0x1F4188790](v20);
  id v22 = (char *)&v62 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v23 = *a1;
  sub_1C21499F0();
  if (qword_1EBF0CA00 != -1) {
    swift_once();
  }
  id v24 = (id)qword_1EBF0CA18;
  swift_bridgeObjectRetain();
  uint64_t v25 = sub_1C2147730();
  uint64_t v89 = v26;
  uint64_t v90 = v25;
  swift_bridgeObjectRelease();

  if (v23 == 2)
  {
    id v27 = (id)qword_1EBF0CA18;
    swift_bridgeObjectRetain();
    sub_1C2147730();
    swift_bridgeObjectRelease();
  }
  else
  {
    v93[0] = v23;
    sub_1C2003B2C();
  }
  swift_bridgeObjectRetain();
  sub_1C2149B90();
  sub_1C2149A00();
  id v28 = objc_msgSend(self, sel_secondaryLabelColor);
  uint64_t v29 = (void (*)(uint64_t *, void))sub_1C2149AF0();
  sub_1C2149A60();
  v29(v93, 0);
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8E0);
  sub_1C214B0A0();
  uint64_t v30 = (void (*)(uint64_t *, void))sub_1C2149AF0();
  sub_1C2149A50();
  v30(v93, 0);
  sub_1C2149B60();
  sub_1C214AEB0();
  sub_1C2149B30();
  if (v23 < 3 || (uint64_t)Array<A>.count.getter(v23) < 1)
  {
    sub_1C2006120(0, (unint64_t *)&unk_1EBF0C990, MEMORY[0x1E4FB0E68], MEMORY[0x1E4FBBE00]);
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1C214FCD0;
    uint64_t v47 = v88;
    (*(void (**)(char *, void, uint64_t))(v16 + 104))(v18, *MEMORY[0x1E4FB0E18], v88);
    uint64_t v48 = sub_1C2149870();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 56))(v74, 1, 1, v48);
    id v49 = v75;
    sub_1C21498D0();
    sub_1C21498A0();
    (*(void (**)(char *, uint64_t))(v76 + 8))(v49, v77);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v47);
  }
  else
  {
    sub_1C1F72888(0, qword_1EBF0B8A0, (unint64_t *)&qword_1EBF0C9F0);
    uint64_t v31 = swift_allocObject();
    *(_OWORD *)(v31 + 16) = xmmword_1C214FCD0;
    id v32 = Array<A>.count.getter(v23);
    uint64_t v33 = MEMORY[0x1E4FBB5C8];
    *(void *)(v31 + 56) = MEMORY[0x1E4FBB550];
    *(void *)(v31 + 64) = v33;
    *(void *)(v31 + 32) = v32;
    sub_1C214A5C0();
    swift_bridgeObjectRelease();
    unsigned int v67 = *MEMORY[0x1E4FB0E18];
    uint64_t v66 = *(void (**)(char *))(v16 + 104);
    unint64_t v34 = v18;
    uint64_t v35 = v88;
    v66(v18);
    uint64_t v64 = sub_1C2149870();
    uint64_t v36 = *(void *)(v64 - 8);
    uint64_t v63 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v36 + 56);
    uint64_t v65 = v36 + 56;
    uint64_t v37 = v74;
    v63(v74, 1, 1, v64);
    uint64_t v38 = v68;
    sub_1C2149820();
    uint64_t v39 = v71;
    sub_1C21498F0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, void *))(v69 + 8))(v38, v70);
    uint64_t v40 = *(void (**)(char *, uint64_t))(v16 + 8);
    uint64_t v69 = v16 + 8;
    uint64_t v70 = v40;
    v40(v34, v35);
    sub_1C2006120(0, (unint64_t *)&unk_1EBF0C990, MEMORY[0x1E4FB0E68], MEMORY[0x1E4FBBE00]);
    uint64_t v41 = v73;
    unint64_t v42 = (*(unsigned __int8 *)(v73 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v73 + 80);
    uint64_t v43 = swift_allocObject();
    *(_OWORD *)(v43 + 16) = xmmword_1C214FCC0;
    uint64_t v44 = v72;
    (*(void (**)(unint64_t, char *, uint64_t))(v41 + 16))(v43 + v42, v39, v72);
    uint64_t v45 = v88;
    ((void (*)(char *, void, uint64_t))v66)(v34, v67, v88);
    v63(v37, 1, 1, v64);
    uint64_t v46 = v75;
    sub_1C21498D0();
    sub_1C21498A0();
    (*(void (**)(char *, uint64_t))(v76 + 8))(v46, v77);
    v70(v34, v45);
    (*(void (**)(char *, uint64_t))(v41 + 8))(v39, v44);
  }
  uint64_t v50 = v92;
  v93[3] = v92;
  v93[4] = MEMORY[0x1E4FB0F88];
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v93);
  (*(void (**)(uint64_t *, char *, uint64_t))(v91 + 16))(boxed_opaque_existential_1, v22, v50);
  uint64_t v52 = swift_allocObject();
  swift_weakInit();
  uint64_t v53 = (void *)swift_allocObject();
  uint64_t v54 = v80;
  id v55 = v81;
  v53[2] = v52;
  v53[3] = v55;
  v53[4] = v54;
  id v56 = v82;
  *uint64_t v82 = 1;
  (*(void (**)(unsigned char *, void, uint64_t))(v78 + 104))(v56, *MEMORY[0x1E4F66478], v79);
  uint64_t v57 = sub_1C21499D0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v57 - 8) + 56))(v83, 1, 1, v57);
  id v58 = v55;
  swift_retain();
  uint64_t v59 = (void *)sub_1C214A770();
  id v60 = (id)HKUIJoinStringsForAutomationIdentifier();

  if (v60)
  {
    sub_1C214A5F0();
  }
  (*(void (**)(char *, void, uint64_t))(v85 + 104))(v84, *MEMORY[0x1E4F66678], v86);
  sub_1C21487A0();
  (*(void (**)(char *, uint64_t))(v91 + 8))(v22, v92);
  return swift_release();
}

id sub_1C2003B2C()
{
  unint64_t v1 = *v0;
  if (qword_1EBF0CA00 != -1) {
    swift_once();
  }
  id v2 = (id)qword_1EBF0CA18;
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_1C2147730();
  swift_bridgeObjectRelease();

  if (!v1) {
    return (id)v3;
  }
  if (v1 != 1)
  {
    swift_bridgeObjectRelease();
    return Array<A>.interactionSummaryTitle()(v1);
  }
  id result = objc_msgSend(self, sel_sharedBehavior, 0xE000000000000000);
  if (result)
  {
    uint64_t v5 = result;
    unsigned int v6 = objc_msgSend(result, sel_isAppleInternalInstall);

    if (v6)
    {
      swift_bridgeObjectRelease();
      return (id)0xD00000000000001DLL;
    }
    return (id)v3;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C2003CA0(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5 = sub_1C21497F0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v10 = Strong;
    uint64_t v11 = *(void *)(Strong + qword_1EA2C51D0);
    uint64_t v12 = *(void **)(Strong + qword_1EA2C51D8);
    uint64_t v13 = *(void *)(Strong + qword_1EA2C51E0);
    id v14 = objc_allocWithZone((Class)type metadata accessor for InteractionSummaryOverviewViewController());
    id v15 = a3;
    swift_retain();
    id v16 = v12;
    swift_retain();
    id v17 = InteractionSummaryOverviewViewController.init(filteringMedication:listManager:healthStore:analyticsManager:roomType:)(a3, v11, v16, v13, 2);
    objc_msgSend(v17, sel_setModalPresentationStyle_, 2);
    objc_msgSend(a1, sel_showAdaptively_sender_, v17, v10);
    swift_retain();
    sub_1C2149550();
    swift_release();

    return swift_release();
  }
  else
  {
    sub_1C21497A0();
    uint64_t v19 = sub_1C21497E0();
    os_log_type_t v20 = sub_1C214ABD0();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v21 = (uint8_t *)swift_slowAlloc();
      uint64_t v22 = swift_slowAlloc();
      uint64_t v26 = v22;
      *(_DWORD *)uint64_t v21 = 136315138;
      uint64_t v23 = sub_1C214BC10();
      v25[1] = sub_1C1F6FD54(v23, v24, &v26);
      sub_1C214B530();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C1F0B000, v19, v20, "[%s] Unable to launch InteractionSummaryOverviewViewController as self was deallocated.", v21, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C8754730](v22, -1, -1);
      MEMORY[0x1C8754730](v21, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
}

uint64_t sub_1C2003F74@<X0>(unsigned __int8 *a1@<X0>, unint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v105 = a3;
  uint64_t v97 = *v3;
  uint64_t v102 = sub_1C2148A70();
  uint64_t v101 = *(void *)(v102 - 8);
  MEMORY[0x1F4188790](v102);
  uint64_t v104 = (char *)&v77 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C2006120(0, &qword_1EBF0C620, MEMORY[0x1E4FB0F28], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v77 - v9;
  uint64_t v100 = sub_1C2148620();
  uint64_t v99 = *(void *)(v100 - 8);
  MEMORY[0x1F4188790](v100);
  id v114 = (char *)&v77 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = sub_1C2149830();
  uint64_t v86 = *(void *)(v87 - 8);
  MEMORY[0x1F4188790](v87);
  uint64_t v85 = (char *)&v77 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1C2149930();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  long long v93 = (char *)&v77 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2006120(0, &qword_1EBF0C610, MEMORY[0x1E4FB0E38], v7);
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v108 = (char *)&v77 - v17;
  uint64_t v109 = sub_1C21498E0();
  uint64_t v115 = *(void *)(v109 - 8);
  MEMORY[0x1F4188790](v109);
  uint64_t v107 = (char *)&v77 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v110 = sub_1C2149860();
  uint64_t v116 = *(void (**)(void *))(v110 - 8);
  MEMORY[0x1F4188790](v110);
  os_log_type_t v20 = (char *)&v77 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_1C2149BE0();
  uint64_t v112 = *(void *)(v21 - 8);
  uint64_t v113 = v21;
  MEMORY[0x1F4188790](v21);
  uint64_t v23 = (char *)&v77 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v117 = *a1;
  LOBYTE(v119[0]) = v117;
  uint64_t v24 = Array<A>.cellContent(for:)((unsigned __int8 *)v119, a2);
  uint64_t v77 = v25;
  uint64_t v27 = v26;
  sub_1C1F72888(0, qword_1EBF0B8A0, (unint64_t *)&qword_1EBF0C9F0);
  uint64_t v28 = swift_allocObject();
  uint64_t v29 = MEMORY[0x1E4FBB550];
  long long v111 = xmmword_1C214FCD0;
  *(_OWORD *)(v28 + 16) = xmmword_1C214FCD0;
  uint64_t v30 = MEMORY[0x1E4FBB5C8];
  *(void *)(v28 + 56) = v29;
  *(void *)(v28 + 64) = v30;
  uint64_t v94 = v24;
  *(void *)(v28 + 32) = v24;
  uint64_t v84 = sub_1C214A5C0();
  uint64_t v95 = v31;
  swift_bridgeObjectRelease();
  uint64_t v96 = v27;
  uint64_t v103 = v10;
  uint64_t v83 = v13;
  if (v27) {
    sub_1C21499F0();
  }
  else {
    sub_1C2149BD0();
  }
  LOBYTE(v119[0]) = v117;
  MedicationSecondaryEducationType.text.getter();
  sub_1C2149B90();
  id v32 = objc_msgSend(self, sel_secondaryLabelColor);
  uint64_t v33 = (void (*)(uint64_t *, void))sub_1C2149AF0();
  sub_1C2149A60();
  v33(v119, 0);
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8E0);
  sub_1C214B0A0();
  unint64_t v34 = (void (*)(uint64_t *, void))sub_1C2149AF0();
  sub_1C2149A50();
  v34(v119, 0);
  sub_1C2149B60();
  sub_1C214AEB0();
  uint64_t v106 = v23;
  sub_1C2149B30();
  sub_1C2006120(0, (unint64_t *)&unk_1EBF0C990, MEMORY[0x1E4FB0E68], MEMORY[0x1E4FBBE00]);
  uint64_t v35 = *(void *)(v14 + 72);
  uint64_t v82 = v14;
  uint64_t v36 = *(unsigned __int8 *)(v14 + 80);
  uint64_t v37 = (v36 + 32) & ~v36;
  uint64_t v81 = v35;
  uint64_t v80 = v38;
  uint64_t v79 = v36 | 7;
  *(_OWORD *)(swift_allocObject() + 16) = v111;
  uint64_t v39 = v116;
  uint64_t v40 = (void (*)(char *, uint64_t, uint64_t))*((void *)v116 + 13);
  unsigned int v88 = *MEMORY[0x1E4FB0E18];
  uint64_t v41 = v110;
  uint64_t v92 = v40;
  ((void (*)(char *))v40)(v20);
  uint64_t v42 = sub_1C2149870();
  uint64_t v43 = *(void *)(v42 - 8);
  uint64_t v44 = v108;
  uint64_t v91 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v43 + 56);
  uint64_t v90 = v43 + 56;
  v91(v108, 1, 1, v42);
  uint64_t v45 = v107;
  sub_1C21498D0();
  sub_1C21498A0();
  uint64_t v46 = *(void (**)(char *, uint64_t))(v115 + 8);
  v115 += 8;
  uint64_t v78 = v46;
  v46(v45, v109);
  uint64_t v47 = (void (*)(char *, uint64_t))*((void *)v39 + 1);
  uint64_t v116 = (void (*)(void *))((char *)v39 + 8);
  uint64_t v89 = v47;
  v47(v20, v41);
  uint64_t v48 = swift_allocObject();
  uint64_t v49 = v98;
  swift_weakInit();
  uint64_t v50 = swift_allocObject();
  *(void *)(v50 + 16) = v48;
  *(unsigned char *)(v50 + 24) = v117;
  *(void *)&long long v111 = v50;
  *(void *)(v50 + 32) = v97;
  if (!*(void *)(v49 + qword_1EA2C51C8) || v94 > 0)
  {
    uint64_t v54 = v88;
    uint64_t v55 = v110;
    v92(v20, v88, v110);
    v91(v44, 1, 1, v42);
    id v56 = v85;
    sub_1C2149820();
    uint64_t v57 = v93;
    sub_1C21498F0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v86 + 8))(v56, v87);
    v89(v20, v55);
    if (v96)
    {
      swift_bridgeObjectRelease();
      sub_1C2149A00();
    }
    else
    {
      uint64_t v53 = v106;
      if (v94 < 1)
      {
        uint64_t v62 = v83;
        uint64_t v59 = v82;
        goto LABEL_14;
      }
      swift_bridgeObjectRelease();
      uint64_t v54 = v88;
    }
    uint64_t v58 = swift_allocObject();
    *(_OWORD *)(v58 + 16) = xmmword_1C214FCC0;
    uint64_t v59 = v82;
    uint64_t v60 = v58 + v37;
    uint64_t v61 = v93;
    uint64_t v62 = v83;
    (*(void (**)(uint64_t, char *, uint64_t))(v82 + 16))(v60, v93, v83);
    uint64_t v63 = v54;
    uint64_t v64 = v110;
    v92(v20, v63, v110);
    v91(v108, 1, 1, v42);
    uint64_t v65 = v107;
    sub_1C21498D0();
    uint64_t v57 = v61;
    sub_1C21498A0();
    v78(v65, v109);
    v89(v20, v64);
    uint64_t v53 = v106;
LABEL_14:
    (*(void (**)(char *, uint64_t))(v59 + 8))(v57, v62);
    uint64_t v116 = sub_1C20061F4;
    id v51 = v103;
    goto LABEL_15;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v51 = v103;
  if (qword_1EA2C2710 != -1) {
    swift_once();
  }
  id v52 = (id)qword_1EA2C5D90;
  swift_bridgeObjectRetain();
  sub_1C2147730();
  swift_bridgeObjectRelease();

  uint64_t v53 = v106;
  sub_1C2149A00();
  swift_release();
  uint64_t v116 = 0;
  *(void *)&long long v111 = 0;
LABEL_15:
  char v66 = v117;
  LOBYTE(v119[0]) = v117;
  MedicationSecondaryEducationType.text.getter();
  uint64_t v67 = v113;
  v119[3] = v113;
  v119[4] = MEMORY[0x1E4FB0F88];
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v119);
  (*(void (**)(uint64_t *, char *, uint64_t))(v112 + 16))(boxed_opaque_existential_1, v53, v67);
  *id v114 = 1;
  (*(void (**)(void))(v99 + 104))();
  uint64_t v69 = sub_1C21499D0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v69 - 8) + 56))(v51, 1, 1, v69);
  sub_1C2006B2C(0, (unint64_t *)&qword_1EA2C3298, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
  uint64_t v70 = swift_allocObject();
  *(_OWORD *)(v70 + 16) = xmmword_1C2150000;
  *(void *)(v70 + 32) = 0xD000000000000015;
  *(void *)(v70 + 40) = 0x80000001C215D640;
  char v118 = v66;
  *(void *)(v70 + 48) = MedicationSecondaryEducationType.text.getter();
  *(void *)(v70 + 56) = v71;
  *(void *)(v70 + 64) = 1819043139;
  *(void *)(v70 + 72) = 0xE400000000000000;
  uint64_t v72 = (void *)sub_1C214A770();
  swift_bridgeObjectRelease();
  id v73 = (id)HKUIJoinStringsForAutomationIdentifier();

  if (v73)
  {
    sub_1C214A5F0();
  }
  (*(void (**)(char *, void, uint64_t))(v101 + 104))(v104, *MEMORY[0x1E4F66678], v102);
  uint64_t v74 = sub_1C21487B0();
  uint64_t v75 = v105;
  v105[3] = v74;
  v75[4] = sub_1C2005DFC((unint64_t *)&qword_1EA2C2E68, MEMORY[0x1E4F66510]);
  __swift_allocate_boxed_opaque_existential_1(v75);
  sub_1C21487A0();
  return (*(uint64_t (**)(char *, uint64_t))(v112 + 8))(v53, v113);
}

void sub_1C2004E64(void *a1, uint64_t a2, char a3)
{
  uint64_t v5 = sub_1C21497F0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v10 = Strong;
    uint64_t v11 = *(void **)(Strong + qword_1EA2C51C8);
    if (v11)
    {
      id v41 = a1;
      type metadata accessor for MedicationInformationOverviewItem();
      uint64_t inited = swift_initStackObject();
      type metadata accessor for MedicationInformationOverviewCell();
      sub_1C2005DFC(&qword_1EA2C43F8, (void (*)(uint64_t))type metadata accessor for MedicationInformationOverviewCell);
      id v13 = v11;
      *(void *)(inited + 32) = sub_1C21481D0();
      *(void *)(inited + 40) = v14;
      v40[1] = v14;
      *(void *)(inited + 16) = v13;
      *(unsigned char *)(inited + 24) = a3;
      if ((a3 - 1) > 1u)
      {
        sub_1C214B910();
        __break(1u);
      }
      else
      {
        id v15 = v13;
        uint64_t v16 = sub_1C20391E4();
        uint64_t v18 = v17;
        uint64_t v19 = sub_1C20392E0();
        uint64_t v21 = v20;
        uint64_t v22 = objc_allocWithZone((Class)type metadata accessor for MedicationSecondaryEducationViewController());
        v22[qword_1EA2C47E0] = a3;
        type metadata accessor for MedicationSecondaryEducationCompoundDataSource(0);
        swift_allocObject();
        type metadata accessor for MedicationSecondaryEducationDataSource(0);
        uint64_t v23 = swift_allocObject();
        uint64_t v24 = v22;
        uint64_t v25 = sub_1C20D8758(a3, v15, v16, v18, (uint64_t)v19, v21, v23);
        sub_1C1F72888(0, (unint64_t *)&qword_1EA2C69F0, (unint64_t *)&qword_1EA2C2CE0);
        uint64_t v26 = swift_allocObject();
        *(_OWORD *)(v26 + 16) = xmmword_1C214FCD0;
        uint64_t v27 = sub_1C2005DFC((unint64_t *)&qword_1EA2C47F8, (void (*)(uint64_t))type metadata accessor for MedicationSecondaryEducationDataSource);
        *(void *)(v26 + 32) = v25;
        *(void *)(v26 + 40) = v27;
        sub_1C2148840();

        swift_retain();
        uint64_t v28 = (void *)sub_1C2148AC0();
        objc_msgSend(v28, sel_setModalPresentationStyle_, 2);

        swift_release();
        id v29 = v28;
        objc_msgSend(v41, sel_showAdaptively_sender_, v29, v10);
        swift_bridgeObjectRelease();

        swift_release();
      }
    }
    else
    {
      LOBYTE(v43) = a3;
      id v36 = objc_allocWithZone((Class)type metadata accessor for PregnancyLactationEducationViewController());
      uint64_t v37 = swift_retain();
      id v38 = PregnancyLactationEducationViewController.init(listManager:educationType:)(v37, (unsigned __int8 *)&v43);
      objc_msgSend(v38, sel_setModalPresentationStyle_, 2);
      id v39 = v38;
      objc_msgSend(a1, sel_showAdaptively_sender_, v39, v10);

      swift_release();
    }
  }
  else
  {
    sub_1C21497A0();
    uint64_t v30 = sub_1C21497E0();
    os_log_type_t v31 = sub_1C214ABD0();
    if (os_log_type_enabled(v30, v31))
    {
      id v32 = (uint8_t *)swift_slowAlloc();
      uint64_t v33 = swift_slowAlloc();
      uint64_t v43 = v33;
      *(_DWORD *)id v32 = 136315138;
      uint64_t v34 = sub_1C214BC10();
      uint64_t v42 = sub_1C1F6FD54(v34, v35, &v43);
      sub_1C214B530();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C1F0B000, v30, v31, "[%s] Unable to launch PregnancyLactationEducationViewController as self was deallocated.", v32, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C8754730](v33, -1, -1);
      MEMORY[0x1C8754730](v32, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
}

void MedicationInformationDataSource.__allocating_init(arrangedSections:isHidden:)()
{
}

void MedicationInformationDataSource.init(arrangedSections:isHidden:)()
{
}

uint64_t sub_1C20053C8()
{
  swift_release();

  swift_release();
  swift_release();
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t MedicationInformationDataSource.deinit()
{
  uint64_t v0 = _s19HealthMedicationsUI34InteractionSeperatorLineDataSourceCfd_0();
  swift_release();

  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t MedicationInformationDataSource.__deallocating_deinit()
{
  MedicationInformationDataSource.deinit();

  return swift_deallocClassInstance();
}

uint64_t sub_1C2005520()
{
  return sub_1C2005CB4();
}

uint64_t sub_1C2005548()
{
  return sub_1C2148B80();
}

Swift::Void __swiftcall MedicationInformationDataSource.registerCells(for:)(UICollectionView *a1)
{
}

uint64_t sub_1C200560C()
{
  return sub_1C214ACD0();
}

uint64_t MedicationInformationDataSource.supplementaryItem(ofKind:at:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = sub_1C2147B20();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1C2149BE0();
  MEMORY[0x1F4188790](v10 - 8);
  if (sub_1C214A5F0() == a1 && v11 == a2)
  {
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  char v13 = sub_1C214BA80();
  swift_bridgeObjectRelease();
  if (v13)
  {
LABEL_13:
    if (qword_1EBF0CA00 != -1) {
      swift_once();
    }
    id v18 = (id)qword_1EBF0CA18;
    swift_bridgeObjectRetain();
    sub_1C2147730();
    swift_bridgeObjectRelease();

    sub_1C2149B50();
    uint64_t v19 = sub_1C2148180();
    swift_allocObject();
    uint64_t v20 = sub_1C2148170();
    a3[3] = v19;
    uint64_t result = sub_1C2005DFC((unint64_t *)&qword_1EA2C3550, MEMORY[0x1E4F66208]);
    a3[4] = result;
    *a3 = v20;
    return result;
  }
  if (sub_1C214A5F0() == a1 && v14 == a2)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v16 = sub_1C214BA80();
    swift_bridgeObjectRelease();
    if ((v16 & 1) == 0)
    {
      a3[3] = sub_1C2148220();
      a3[4] = sub_1C2005DFC(&qword_1EA2C2D28, MEMORY[0x1E4F66330]);
      __swift_allocate_boxed_opaque_existential_1(a3);
      return sub_1C2148210();
    }
  }
  if (qword_1EBF0CA00 != -1) {
    swift_once();
  }
  uint64_t v21 = (void *)qword_1EBF0CA18;
  sub_1C1F72888(0, qword_1EBF0B8A0, (unint64_t *)&qword_1EBF0C9F0);
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_1C214FCD0;
  id v23 = v21;
  swift_bridgeObjectRetain();
  unint64_t v24 = sub_1C2149710();
  unint64_t v25 = sub_1C1F6501C(v24);
  swift_bridgeObjectRelease();
  if (v25)
  {
    if (v25 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v26 = sub_1C214B930();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v26 = *(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v26 = 0;
  }
  uint64_t v27 = MEMORY[0x1E4FBB5C8];
  *(void *)(v22 + 56) = MEMORY[0x1E4FBB550];
  *(void *)(v22 + 64) = v27;
  *(void *)(v22 + 32) = v26;
  sub_1C2147730();
  sub_1C214A5C0();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v28[0] = 0x74497265746F6F46;
  v28[1] = 0xEB000000005F6D65;
  sub_1C2147B10();
  sub_1C2147AD0();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  a3[3] = sub_1C2148960();
  a3[4] = sub_1C2005DFC(&qword_1EA2C2D38, MEMORY[0x1E4F665E8]);
  __swift_allocate_boxed_opaque_existential_1(a3);
  return sub_1C2148950();
}

uint64_t sub_1C2005C04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return MedicationInformationDataSource.supplementaryItem(ofKind:at:)(a1, a2, a3);
}

BOOL _s19HealthMedicationsUI31MedicationInformationDataSourceC14DisplayContextO2eeoiySbAE_AEtFZ_0(void **a1, void **a2)
{
  id v2 = *a1;
  uint64_t v3 = *a2;
  if (*a1)
  {
    if (v3)
    {
      sub_1C1F12718(0, (unint64_t *)&qword_1EA2C4AA0);
      id v4 = v3;
      id v5 = v2;
      char v6 = sub_1C214B220();

      return v6 & 1;
    }
    return 0;
  }
  return !v3;
}

uint64_t sub_1C2005CB4()
{
  uint64_t v1 = sub_1C2148710();
  uint64_t v2 = MEMORY[0x1F4188790](v1);
  id v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v2);
  char v6 = (char *)&v12 - v5;
  uint64_t v8 = (void (**)(char *, uint64_t))(v7 + 8);
  if (*(void *)(v0 + qword_1EA2C51C8)) {
    sub_1C2148690();
  }
  else {
    sub_1C2148660();
  }
  sub_1C2148650();
  uint64_t v9 = *v8;
  (*v8)(v6, v1);
  uint64_t v10 = sub_1C2148700();
  v9(v4, v1);
  return v10;
}

uint64_t sub_1C2005DFC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C2005E44()
{
  return sub_1C2005DFC(&qword_1EA2C51E8, (void (*)(uint64_t))type metadata accessor for MedicationInformationDataSource);
}

uint64_t type metadata accessor for MedicationInformationDataSource()
{
  uint64_t result = qword_1EA2C51F0;
  if (!qword_1EA2C51F0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C2005ED8()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for MedicationInformationDataSource(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MedicationInformationDataSource);
}

uint64_t dispatch thunk of MedicationInformationDataSource.__allocating_init(displayContext:listManager:healthStore:analyticsManager:)()
{
  return (*(uint64_t (**)(void))(class metadata base offset for MedicationInformationDataSource + v0 + 152))();
}

uint64_t dispatch thunk of MedicationInformationDataSource.layout(for:environment:)()
{
  return (*(uint64_t (**)(void))(class metadata base offset for MedicationInformationDataSource + *v0 + 160))();
}

uint64_t sub_1C2005FC8()
{
  return type metadata accessor for MedicationInformationDataSource();
}

void **initializeBufferWithCopyOfBuffer for MedicationInformationDataSource.DisplayContext(void **a1, void **a2)
{
  uint64_t v3 = *a2;
  *a1 = *a2;
  id v4 = v3;
  return a1;
}

void **assignWithCopy for MedicationInformationDataSource.DisplayContext(void **a1, void **a2)
{
  uint64_t v3 = *a2;
  id v4 = *a1;
  *a1 = *a2;
  id v5 = v3;

  return a1;
}

void **assignWithTake for MedicationInformationDataSource.DisplayContext(void **a1, void **a2)
{
  uint64_t v3 = *a1;
  *a1 = *a2;

  return a1;
}

uint64_t getEnumTagSinglePayload for MedicationInformationDataSource.DisplayContext(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) >= 2) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for MedicationInformationDataSource.DisplayContext(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)uint64_t result = 0;
    *(_DWORD *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)uint64_t result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MedicationInformationDataSource.DisplayContext()
{
  return &type metadata for MedicationInformationDataSource.DisplayContext;
}

void sub_1C2006120(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C2006184()
{
  swift_weakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C20061BC()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

void sub_1C20061F4(void *a1)
{
  sub_1C2004E64(a1, *(void *)(v1 + 16), *(unsigned char *)(v1 + 24));
}

uint64_t sub_1C2006204()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1C2006244(void *a1)
{
  return sub_1C2003CA0(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

void sub_1C2006250()
{
  if (!qword_1EBF0C640)
  {
    uint64_t v0 = MEMORY[0x1E4F677F0];
    sub_1C200646C(255, (unint64_t *)&qword_1EBF0C690, MEMORY[0x1E4F677F0]);
    sub_1C1F43CE8();
    sub_1C200680C((unint64_t *)&qword_1EBF0C688, (uint64_t)&qword_1EBF0C690, v0, (void (*)(uint64_t))sub_1C200646C);
    unint64_t v1 = sub_1C2149D00();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_1EBF0C640);
    }
  }
}

void sub_1C200631C()
{
  if (!qword_1EA2C5200)
  {
    sub_1C2006250();
    sub_1C200646C(255, &qword_1EA2C5208, (void (*)(uint64_t))sub_1C1F35D28);
    sub_1C2006B2C(255, &qword_1EBF0C740, MEMORY[0x1E4FBB390], MEMORY[0x1E4F1AC60]);
    sub_1C2005DFC(&qword_1EBF0C638, (void (*)(uint64_t))sub_1C2006250);
    sub_1C200680C(&qword_1EA2C5210, (uint64_t)&qword_1EA2C5208, (uint64_t)sub_1C1F35D28, (void (*)(uint64_t))sub_1C200646C);
    sub_1C20064D0();
    unint64_t v0 = sub_1C2149CC0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C5200);
    }
  }
}

void sub_1C200646C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C2149E10();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

unint64_t sub_1C20064D0()
{
  unint64_t result = qword_1EBF0C730;
  if (!qword_1EBF0C730)
  {
    sub_1C2006B2C(255, &qword_1EBF0C740, MEMORY[0x1E4FBB390], MEMORY[0x1E4F1AC60]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBF0C730);
  }
  return result;
}

uint64_t sub_1C200654C()
{
  return sub_1C2005DFC(&qword_1EA2C5220, (void (*)(uint64_t))sub_1C200631C);
}

void sub_1C2006580()
{
  if (!qword_1EA2C5228)
  {
    uint64_t v0 = MEMORY[0x1E4F1AAE0];
    sub_1C2006CA8(255, &qword_1EA2C5230, MEMORY[0x1E4F1AAE0]);
    sub_1C200668C();
    sub_1C200680C(&qword_1EA2C5250, (uint64_t)&qword_1EA2C5230, v0, (void (*)(uint64_t))sub_1C2006CA8);
    sub_1C2005DFC(&qword_1EA2C5258, (void (*)(uint64_t))sub_1C200668C);
    unint64_t v1 = sub_1C2149DA0();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_1EA2C5228);
    }
  }
}

void sub_1C200668C()
{
  if (!qword_1EA2C5240)
  {
    sub_1C20068F4(255, &qword_1EA2C5218, (uint64_t (*)(uint64_t))sub_1C200631C, sub_1C200654C, MEMORY[0x1E4F1AA50]);
    sub_1C1F248B4(255, (unint64_t *)&qword_1EBF0C9C0);
    sub_1C2006770();
    unint64_t v0 = sub_1C2149D30();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C5240);
    }
  }
}

unint64_t sub_1C2006770()
{
  unint64_t result = qword_1EA2C5248;
  if (!qword_1EA2C5248)
  {
    sub_1C20068F4(255, &qword_1EA2C5218, (uint64_t (*)(uint64_t))sub_1C200631C, sub_1C200654C, MEMORY[0x1E4F1AA50]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C5248);
  }
  return result;
}

uint64_t sub_1C200680C(unint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a4(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C2006860()
{
  if (!qword_1EA2C5260)
  {
    sub_1C2006580();
    sub_1C2005DFC(&qword_1EA2C5268, (void (*)(uint64_t))sub_1C2006580);
    unint64_t v0 = sub_1C2149D20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C5260);
    }
  }
}

void sub_1C20068F4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, void *))
{
  if (!*a2)
  {
    v11[0] = a3(255);
    v11[1] = sub_1C1F12718(255, (unint64_t *)&qword_1EBF0CB10);
    v11[2] = a4();
    v11[3] = sub_1C1F2F9D0((unint64_t *)&qword_1EBF0C7F0, (unint64_t *)&qword_1EBF0CB10);
    unint64_t v9 = a5(a1, v11);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

uint64_t sub_1C20069D8()
{
  return sub_1C2005DFC(&qword_1EA2C5278, (void (*)(uint64_t))sub_1C2006860);
}

uint64_t sub_1C2006A0C(unint64_t a1, uint64_t a2, char a3)
{
  return sub_1C20021F8(a1, a2, a3);
}

uint64_t sub_1C2006A14()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C2006A4C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void, void, void))(v2 + 16))(*(void *)a1, *(void *)(a1 + 8), *(unsigned __int8 *)(a1 + 16));
  *a2 = result;
  return result;
}

void sub_1C2006A88(uint64_t *a1)
{
}

unint64_t sub_1C2006A90()
{
  unint64_t result = qword_1EA2C5280;
  if (!qword_1EA2C5280)
  {
    sub_1C20068F4(255, &qword_1EA2C5270, (uint64_t (*)(uint64_t))sub_1C2006860, sub_1C20069D8, MEMORY[0x1E4F1AAB0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C5280);
  }
  return result;
}

void sub_1C2006B2C(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1C2006B78()
{
  if (!qword_1EA2C5288)
  {
    uint64_t v0 = MEMORY[0x1E4F1AAE0];
    sub_1C2006CA8(255, &qword_1EA2C5230, MEMORY[0x1E4F1AAE0]);
    sub_1C200680C(&qword_1EA2C5250, (uint64_t)&qword_1EA2C5230, v0, (void (*)(uint64_t))sub_1C2006CA8);
    unint64_t v1 = sub_1C2149F30();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_1EA2C5288);
    }
  }
}

void sub_1C2006C2C()
{
  if (!qword_1EA2C5290)
  {
    sub_1C2006B2C(255, &qword_1EA2C5238, (uint64_t)&type metadata for InteractionSummaryItemState, MEMORY[0x1E4FBB718]);
    unint64_t v0 = sub_1C2149ED0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C5290);
    }
  }
}

void sub_1C2006CA8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, void))
{
  if (!*a2)
  {
    sub_1C2006B2C(255, &qword_1EA2C5238, (uint64_t)&type metadata for InteractionSummaryItemState, MEMORY[0x1E4FBB718]);
    uint64_t v7 = v6;
    uint64_t v8 = sub_1C1F248B4(255, (unint64_t *)&qword_1EBF0C9C0);
    unint64_t v9 = a3(a1, v7, v8, MEMORY[0x1E4FBC0F0]);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

uint64_t sub_1C2006D58(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C2006CA8(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C2006DA0@<X0>(uint64_t *a1@<X8>)
{
  return sub_1C2000FA0(v1[2], v1[3], v1[4], a1);
}

void sub_1C2006DB0(uint64_t a1, uint64_t a2)
{
  sub_1C20010DC(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void **)(v2 + 32));
}

uint64_t sub_1C2006DBC()
{
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

void sub_1C2006DFC(uint64_t a1, void *a2)
{
  sub_1C200131C(a1, a2, *(void *)(v2 + 16), *(void (**)(unint64_t *))(v2 + 24));
}

id MedicationCustomizationDataProvider.medication.getter()
{
  id v1 = *v0;
  id v2 = *v0;
  return v1;
}

void MedicationCustomizationDataProvider.medication.setter(void *a1)
{
  id *v1 = a1;
}

uint64_t (*MedicationCustomizationDataProvider.medication.modify())()
{
  return nullsub_1;
}

uint64_t MedicationCustomizationDataProvider.caption.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MedicationCustomizationDataProvider.caption.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + 16) = a2;
  return result;
}

uint64_t (*MedicationCustomizationDataProvider.caption.modify())()
{
  return nullsub_1;
}

uint64_t MedicationCustomizationDataProvider.strengthDisplay.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MedicationCustomizationDataProvider.strengthDisplay.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = a2;
  return result;
}

uint64_t (*MedicationCustomizationDataProvider.strengthDisplay.modify())()
{
  return nullsub_1;
}

uint64_t MedicationCustomizationDataProvider.medMoji.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C2007740(type metadata accessor for MedicationCustomizationDataProvider, a1);
}

uint64_t type metadata accessor for MedicationCustomizationDataProvider(uint64_t a1)
{
  return sub_1C1F20D10(a1, (uint64_t *)&unk_1EA2C52C8);
}

uint64_t MedicationCustomizationDataProvider.medMoji.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MedicationCustomizationDataProvider(0) + 28);

  return sub_1C200700C(a1, v3);
}

uint64_t sub_1C200700C(uint64_t a1, uint64_t a2)
{
  sub_1C1F4CC58();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t (*MedicationCustomizationDataProvider.medMoji.modify())()
{
  return nullsub_1;
}

uint64_t MedicationCustomizationDataProvider.nickname.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for MedicationCustomizationDataProvider(0) + 32));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MedicationCustomizationDataProvider.nickname.setter(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for MedicationCustomizationDataProvider(0) + 32));
  uint64_t result = swift_bridgeObjectRelease();
  *unint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*MedicationCustomizationDataProvider.nickname.modify())()
{
  return nullsub_1;
}

uint64_t MedicationCustomizationDataProvider.notes.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for MedicationCustomizationDataProvider(0) + 36));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MedicationCustomizationDataProvider.notes.setter(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for MedicationCustomizationDataProvider(0) + 36));
  uint64_t result = swift_bridgeObjectRelease();
  *unint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*MedicationCustomizationDataProvider.notes.modify())()
{
  return nullsub_1;
}

uint64_t MedicationCustomizationDataProvider.init(medication:caption:medMoji:nickname:notes:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>)
{
  char v16 = (int *)type metadata accessor for MedicationCustomizationDataProvider(0);
  uint64_t v17 = (uint64_t)a9 + v16[7];
  uint64_t v18 = sub_1C21492D0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v17, 1, 1, v18);
  uint64_t v19 = (void *)((char *)a9 + v16[9]);
  *uint64_t v19 = 0;
  v19[1] = 0;
  *a9 = a1;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = 0;
  a9[4] = 0xE000000000000000;
  sub_1C200700C(a4, v17);
  uint64_t v20 = (void *)((char *)a9 + v16[8]);
  void *v20 = a5;
  v20[1] = a6;
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v19 = a7;
  v19[1] = a8;
  return result;
}

uint64_t MedicationCustomizationDataProvider.title.getter()
{
  sub_1C1FA2240();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C214FCC0;
  type metadata accessor for MedicationCustomizationDataProvider(0);
  uint64_t v3 = sub_1C214A680();
  *(void *)(inited + 32) = v3;
  *(void *)(inited + 40) = v2;
  if (!*v0)
  {
    uint64_t v9 = v2;
    uint64_t v8 = 0;
    uint64_t v6 = 0;
    *(void *)(inited + 48) = 0;
    *(void *)(inited + 56) = 0;
    if (v2) {
      goto LABEL_9;
    }
LABEL_5:
    uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
    if (!v8) {
      goto LABEL_17;
    }
    goto LABEL_12;
  }
  id v4 = objc_msgSend(*v0, sel_localizedPreferredName);
  if (v4)
  {
    unint64_t v5 = v4;
    uint64_t v6 = sub_1C214A5F0();
    uint64_t v8 = v7;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v8 = 0;
  }
  *(void *)(inited + 48) = v6;
  *(void *)(inited + 56) = v8;
  uint64_t v3 = *(void *)(inited + 32);
  uint64_t v9 = *(void *)(inited + 40);
  if (!v9) {
    goto LABEL_5;
  }
LABEL_9:
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_1C1F3AAE0(0, 1, 1, MEMORY[0x1E4FBC860]);
  unint64_t v12 = v10[2];
  unint64_t v11 = v10[3];
  if (v12 >= v11 >> 1) {
    uint64_t v10 = sub_1C1F3AAE0((void *)(v11 > 1), v12 + 1, 1, v10);
  }
  void v10[2] = v12 + 1;
  char v13 = &v10[2 * v12];
  v13[4] = v3;
  v13[5] = v9;
  uint64_t v6 = *(void *)(inited + 48);
  uint64_t v8 = *(void *)(inited + 56);
  if (v8)
  {
LABEL_12:
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v10 = sub_1C1F3AAE0(0, v10[2] + 1, 1, v10);
    }
    unint64_t v15 = v10[2];
    unint64_t v14 = v10[3];
    if (v15 >= v14 >> 1) {
      uint64_t v10 = sub_1C1F3AAE0((void *)(v14 > 1), v15 + 1, 1, v10);
    }
    void v10[2] = v15 + 1;
    char v16 = &v10[2 * v15];
    v16[4] = v6;
    v16[5] = v8;
  }
LABEL_17:
  swift_bridgeObjectRelease();
  sub_1C2007584(0, (unint64_t *)&qword_1EA2C3A40, MEMORY[0x1E4FBB320]);
  sub_1C1F64558();
  uint64_t v17 = sub_1C214A580();
  swift_bridgeObjectRelease();
  return v17;
}

void sub_1C2007584(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void, void))
{
  if (!*a2)
  {
    unint64_t v4 = a3(0, MEMORY[0x1E4FBB1A0]);
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1C20075D8()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1C2007608(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 36));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t MedicationDetailsDataProvider.title.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MedicationDetailsDataProvider.caption.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MedicationDetailsDataProvider.strengthDisplay.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MedicationDetailsDataProvider.strengthDisplay.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = a2;
  return result;
}

uint64_t (*MedicationDetailsDataProvider.strengthDisplay.modify())()
{
  return nullsub_1;
}

uint64_t MedicationDetailsDataProvider.medMoji.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C2007740(type metadata accessor for MedicationDetailsDataProvider, a1);
}

uint64_t sub_1C2007740@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1(0) + 28);

  return sub_1C1F64A60(v4, a2);
}

uint64_t MedicationDetailsDataProvider.notes.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for MedicationDetailsDataProvider(0) + 32));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MedicationDetailsDataProvider.init(title:caption:strengthDisplay:medMoji:notes:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, uint64_t a10)
{
  *a9 = a1;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a4;
  a9[4] = a5;
  a9[5] = a6;
  uint64_t v13 = type metadata accessor for MedicationDetailsDataProvider(0);
  uint64_t result = sub_1C1F4DB28(a7, (uint64_t)a9 + *(int *)(v13 + 28));
  unint64_t v15 = (void *)((char *)a9 + *(int *)(v13 + 32));
  void *v15 = a8;
  v15[1] = a10;
  return result;
}

uint64_t sub_1C200783C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C1F64A60(v2 + *(int *)(a1 + 28), a2);
}

uint64_t sub_1C200784C(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 32));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t type metadata accessor for MedicationDetailsDataProvider(uint64_t a1)
{
  return sub_1C1F20D10(a1, (uint64_t *)&unk_1EA2C52D8);
}

uint64_t dispatch thunk of MedicationDetailsDisplayable.title.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of MedicationDetailsDisplayable.caption.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of MedicationDetailsDisplayable.strengthDisplay.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of MedicationDetailsDisplayable.medMoji.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of MedicationDetailsDisplayable.notes.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

char *initializeBufferWithCopyOfBuffer for MedicationCustomizationDataProvider(char *a1, char **a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = &v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    uint64_t v8 = a2[2];
    *((void *)a1 + 1) = a2[1];
    *((void *)a1 + 2) = v8;
    uint64_t v9 = a2[4];
    *((void *)a1 + 3) = a2[3];
    *((void *)a1 + 4) = v9;
    uint64_t v10 = a3[7];
    __dst = &a1[v10];
    unint64_t v11 = (char *)a2 + v10;
    uint64_t v12 = sub_1C21492D0();
    uint64_t v13 = *(void *)(v12 - 8);
    unint64_t v25 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
    unint64_t v14 = v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v25(v11, 1, v12))
    {
      sub_1C1F4CC58();
      memcpy(__dst, v11, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(__dst, v11, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(__dst, 0, 1, v12);
    }
    uint64_t v16 = a3[8];
    uint64_t v17 = a3[9];
    uint64_t v18 = &v7[v16];
    uint64_t v19 = (char **)((char *)a2 + v16);
    uint64_t v20 = v19[1];
    *(void *)uint64_t v18 = *v19;
    *((void *)v18 + 1) = v20;
    uint64_t v21 = &v7[v17];
    uint64_t v22 = (char **)((char *)a2 + v17);
    uint64_t v23 = v22[1];
    *(void *)uint64_t v21 = *v22;
    *((void *)v21 + 1) = v23;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v7;
}

uint64_t destroy for MedicationCustomizationDataProvider(id *a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = (char *)a1 + *(int *)(a2 + 28);
  uint64_t v5 = sub_1C21492D0();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
  }
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for MedicationCustomizationDataProvider(void *a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void **)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v5;
  uint64_t v7 = *(void *)(a2 + 24);
  a1[2] = *(void *)(a2 + 16);
  a1[3] = v7;
  a1[4] = *(void *)(a2 + 32);
  uint64_t v8 = a3[7];
  __dst = (char *)a1 + v8;
  uint64_t v9 = (const void *)(a2 + v8);
  uint64_t v10 = sub_1C21492D0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  id v13 = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    sub_1C1F4CC58();
    memcpy(__dst, v9, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, const void *, uint64_t))(v11 + 16))(__dst, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(__dst, 0, 1, v10);
  }
  uint64_t v15 = a3[8];
  uint64_t v16 = a3[9];
  uint64_t v17 = (void *)((char *)a1 + v15);
  uint64_t v18 = (void *)(a2 + v15);
  uint64_t v19 = v18[1];
  *uint64_t v17 = *v18;
  v17[1] = v19;
  uint64_t v20 = (void *)((char *)a1 + v16);
  uint64_t v21 = (void *)(a2 + v16);
  uint64_t v22 = v21[1];
  void *v20 = *v21;
  v20[1] = v22;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for MedicationCustomizationDataProvider(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void **)a1;
  uint64_t v7 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v8 = v7;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v9 = a3[7];
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (void *)(a2 + v9);
  uint64_t v12 = sub_1C21492D0();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(void *, void *, uint64_t))(v13 + 24))(v10, v11, v12);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v13 + 8))(v10, v12);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    sub_1C1F4CC58();
    memcpy(v10, v11, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v13 + 16))(v10, v11, v12);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
LABEL_7:
  uint64_t v18 = a3[8];
  uint64_t v19 = (void *)(a1 + v18);
  uint64_t v20 = (void *)(a2 + v18);
  *uint64_t v19 = *v20;
  v19[1] = v20[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v21 = a3[9];
  uint64_t v22 = (void *)(a1 + v21);
  uint64_t v23 = (void *)(a2 + v21);
  *uint64_t v22 = *v23;
  v22[1] = v23[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for MedicationCustomizationDataProvider(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  uint64_t v6 = a3[7];
  uint64_t v7 = (void *)(a1 + v6);
  id v8 = (const void *)(a2 + v6);
  uint64_t v9 = sub_1C21492D0();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    sub_1C1F4CC58();
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v12 = a3[9];
  *(_OWORD *)(a1 + a3[8]) = *(_OWORD *)(a2 + a3[8]);
  *(_OWORD *)(a1 + v12) = *(_OWORD *)(a2 + v12);
  return a1;
}

uint64_t assignWithTake for MedicationCustomizationDataProvider(uint64_t a1, void *a2, int *a3)
{
  uint64_t v6 = *(void **)a1;
  *(void *)a1 = *a2;

  uint64_t v7 = a2[2];
  *(void *)(a1 + 8) = a2[1];
  *(void *)(a1 + 16) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[4];
  *(void *)(a1 + 24) = a2[3];
  *(void *)(a1 + 32) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = a3[7];
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = sub_1C21492D0();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(void *, char *, uint64_t))(v13 + 40))(v10, v11, v12);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v13 + 8))(v10, v12);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    sub_1C1F4CC58();
    memcpy(v10, v11, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
LABEL_7:
  uint64_t v18 = a3[8];
  uint64_t v19 = (void *)(a1 + v18);
  uint64_t v20 = (void *)((char *)a2 + v18);
  uint64_t v22 = *v20;
  uint64_t v21 = v20[1];
  *uint64_t v19 = v22;
  v19[1] = v21;
  swift_bridgeObjectRelease();
  uint64_t v23 = a3[9];
  unint64_t v24 = (void *)(a1 + v23);
  unint64_t v25 = (void *)((char *)a2 + v23);
  uint64_t v27 = *v25;
  uint64_t v26 = v25[1];
  *unint64_t v24 = v27;
  v24[1] = v26;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MedicationCustomizationDataProvider(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C20082D0);
}

uint64_t sub_1C20082D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    sub_1C1F4CC58();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 28);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for MedicationCustomizationDataProvider(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C2008394);
}

uint64_t sub_1C2008394(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 16) = (a2 - 1);
  }
  else
  {
    sub_1C1F4CC58();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 28);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_1C200843C()
{
  sub_1C1F4CC58();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for MedicationDetailsDataProvider(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  unint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *unint64_t v4 = *a2;
    unint64_t v4 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    uint64_t v7 = a2[3];
    a1[2] = a2[2];
    a1[3] = v7;
    uint64_t v8 = a2[5];
    uint64_t v9 = *(int *)(a3 + 28);
    __dst = (char *)a1 + v9;
    uint64_t v10 = (char *)a2 + v9;
    a1[4] = a2[4];
    a1[5] = v8;
    uint64_t v11 = sub_1C21492D0();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      sub_1C1F4CC58();
      memcpy(__dst, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(__dst, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(__dst, 0, 1, v11);
    }
    uint64_t v16 = *(int *)(a3 + 32);
    uint64_t v17 = (uint64_t *)((char *)v4 + v16);
    uint64_t v18 = (uint64_t *)((char *)a2 + v16);
    uint64_t v19 = v18[1];
    *uint64_t v17 = *v18;
    v17[1] = v19;
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for MedicationDetailsDataProvider(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = sub_1C21492D0();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for MedicationDetailsDataProvider(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  uint64_t v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  uint64_t v7 = a2[5];
  uint64_t v8 = *(int *)(a3 + 28);
  __dst = (char *)a1 + v8;
  uint64_t v9 = (char *)a2 + v8;
  a1[4] = a2[4];
  a1[5] = v7;
  uint64_t v10 = sub_1C21492D0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    sub_1C1F4CC58();
    memcpy(__dst, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(__dst, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(__dst, 0, 1, v10);
  }
  uint64_t v14 = *(int *)(a3 + 32);
  uint64_t v15 = (void *)((char *)a1 + v14);
  uint64_t v16 = (void *)((char *)a2 + v14);
  uint64_t v17 = v16[1];
  void *v15 = *v16;
  v15[1] = v17;
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for MedicationDetailsDataProvider(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1C21492D0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    sub_1C1F4CC58();
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  uint64_t v15 = *(int *)(a3 + 32);
  uint64_t v16 = (void *)((char *)a1 + v15);
  uint64_t v17 = (void *)((char *)a2 + v15);
  void *v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *initializeWithTake for MedicationDetailsDataProvider(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  uint64_t v7 = *(int *)(a3 + 28);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1C21492D0();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    sub_1C1F4CC58();
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 32)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 32));
  return a1;
}

void *assignWithTake for MedicationDetailsDataProvider(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(int *)(a3 + 28);
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = sub_1C21492D0();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 40))(v10, v11, v12);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    sub_1C1F4CC58();
    memcpy(v10, v11, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
LABEL_7:
  uint64_t v18 = *(int *)(a3 + 32);
  uint64_t v19 = (void *)((char *)a1 + v18);
  uint64_t v20 = (void *)((char *)a2 + v18);
  uint64_t v22 = *v20;
  uint64_t v21 = v20[1];
  *uint64_t v19 = v22;
  v19[1] = v21;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MedicationDetailsDataProvider(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C2008E28);
}

uint64_t sub_1C2008E28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    sub_1C1F4CC58();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 28);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for MedicationDetailsDataProvider(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C2008EEC);
}

uint64_t sub_1C2008EEC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_1C1F4CC58();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 28);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_1C2008F94()
{
  sub_1C1F4CC58();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

Swift::String __swiftcall Date.formattedWithYearIfDifferent()()
{
  uint64_t v0 = sub_1C2147970();
  uint64_t v55 = *(void *)(v0 - 8);
  uint64_t v56 = v0;
  MEMORY[0x1F4188790](v0);
  uint64_t v54 = (char *)&v53 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_1C2147AC0();
  uint64_t v68 = *(void *)(v2 - 8);
  uint64_t v69 = v2;
  MEMORY[0x1F4188790](v2);
  uint64_t v65 = (char *)&v53 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = sub_1C2147CD0();
  uint64_t v72 = *(void *)(v66 - 8);
  MEMORY[0x1F4188790](v66);
  uint64_t v67 = (char *)&v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = sub_1C2147950();
  uint64_t v59 = *(void (***)(char *, uint64_t))(v63 - 8);
  MEMORY[0x1F4188790](v63);
  uint64_t v61 = (char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = sub_1C2147990();
  uint64_t v60 = *(void *)(v62 - 8);
  MEMORY[0x1F4188790](v62);
  uint64_t v58 = (char *)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1C2147820();
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v8 = sub_1C2147D30();
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v64 = sub_1C2147CF0();
  uint64_t v71 = *(void *)(v64 - 8);
  MEMORY[0x1F4188790](v64);
  uint64_t v10 = (char *)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1C2147BB0();
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C200994C(0, &qword_1EA2C52E8, MEMORY[0x1E4F27808], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v13 - 8);
  int v15 = (char *)&v53 - v14;
  sub_1C200994C(0, &qword_1EA2C52F0, MEMORY[0x1E4F27810], v12);
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v18 = (char *)&v53 - v17;
  uint64_t v70 = sub_1C21479A0();
  uint64_t v19 = *(char **)(v70 - 8);
  uint64_t v20 = MEMORY[0x1F4188790](v70);
  uint64_t v22 = (char *)&v53 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = MEMORY[0x1F4188790](v20);
  unint64_t v25 = (void (**)(char *, uint64_t))((char *)&v53 - v24);
  MEMORY[0x1F4188790](v23);
  uint64_t v57 = (char *)&v53 - v26;
  uint64_t v27 = sub_1C21478F0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v18, 1, 1, v27);
  uint64_t v28 = sub_1C21478D0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v15, 1, 1, v28);
  sub_1C2147B60();
  sub_1C2147C50();
  sub_1C2147D10();
  sub_1C2147810();
  id v29 = v10;
  sub_1C2147910();
  uint64_t v30 = v58;
  sub_1C2147980();
  sub_1C2147930();
  (*(void (**)(char *, uint64_t))(v60 + 8))(v30, v62);
  uint64_t v58 = v19;
  os_log_type_t v31 = (void (*)(char *, uint64_t))*((void *)v19 + 1);
  uint64_t v32 = v70;
  v31(v22, v70);
  uint64_t v33 = v31;
  uint64_t v62 = (uint64_t)v31;
  uint64_t v34 = v61;
  sub_1C2147940();
  sub_1C2147900();
  v59[1](v34, v63);
  uint64_t v59 = v25;
  v33((char *)v25, v32);
  unint64_t v35 = v29;
  sub_1C2147CB0();
  LODWORD(v61) = *MEMORY[0x1E4F27C20];
  uint64_t v36 = v72;
  uint64_t v60 = *(void *)(v72 + 104);
  uint64_t v38 = v66;
  uint64_t v37 = v67;
  ((void (*)(char *))v60)(v67);
  id v39 = v65;
  sub_1C2147A70();
  uint64_t v63 = sub_1C2147CE0();
  (*(void (**)(char *, uint64_t))(v68 + 8))(v39, v69);
  uint64_t v40 = *(void (**)(char *, uint64_t))(v36 + 8);
  uint64_t v72 = v36 + 8;
  uint64_t v41 = v38;
  v40(v37, v38);
  uint64_t v42 = *(void (**)(char *, uint64_t))(v71 + 8);
  v71 += 8;
  uint64_t v43 = v64;
  v42(v35, v64);
  sub_1C2147CB0();
  ((void (*)(char *, void, uint64_t))v60)(v37, v61, v41);
  uint64_t v44 = sub_1C2147CE0();
  v40(v37, v41);
  uint64_t v45 = (void (*)(char *, uint64_t))v62;
  uint64_t v46 = v70;
  v42(v35, v43);
  uint64_t v47 = v57;
  if (v63 != v44)
  {
    uint64_t v48 = v54;
    sub_1C2147960();
    uint64_t v49 = v59;
    sub_1C2147920();
    (*(void (**)(char *, uint64_t))(v55 + 8))(v48, v56);
    v45(v47, v46);
    (*((void (**)(char *, void (**)(char *, uint64_t), uint64_t))v58 + 4))(v47, v49, v46);
  }
  sub_1C200BEFC(&qword_1EA2C52F8, MEMORY[0x1E4F27860]);
  sub_1C2147A90();
  v45(v47, v46);
  uint64_t v50 = v73;
  id v51 = v74;
  result._object = v51;
  result._countAndFlagsBits = v50;
  return result;
}

void sub_1C200994C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t type metadata accessor for StartDateDataSource()
{
  uint64_t result = qword_1EA2C5320;
  if (!qword_1EA2C5320) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C20099FC()
{
  uint64_t result = sub_1C2148540();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1C2009AB0(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  sub_1C200BF44();
  return a2(a1, a1 + *(int *)(v4 + 48));
}

uint64_t sub_1C2009AFC(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + qword_1EA2C5310) = 0;
  swift_retain();
  sub_1C2148500();
  *(void *)(v2 + qword_1EA2C5300) = a1;
  *(void *)(v2 + qword_1EA2C5308) = a2;
  swift_retain();
  swift_retain();
  swift_release();
  sub_1C200994C(0, (unint64_t *)&qword_1EA2C2DD0, MEMORY[0x1E4F66468], MEMORY[0x1E4FBBE00]);
  sub_1C2148540();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1C214FCD0;
  sub_1C2148520();
  uint64_t v5 = sub_1C2148590();
  swift_retain();
  sub_1C2009CBC();
  swift_release();
  swift_release();
  swift_release();
  return v5;
}

uint64_t sub_1C2009CBC()
{
  uint64_t v1 = v0;
  sub_1C1FF863C();
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v0 + qword_1EA2C5300);
  v12[0] = *(void *)(v0 + qword_1EA2C5308);
  v12[1] = v7;
  sub_1C1FF8724();
  sub_1C1FF878C();
  sub_1C200BEFC((unint64_t *)&qword_1EA2C5098, (void (*)(uint64_t))sub_1C1FF8724);
  sub_1C200BEFC((unint64_t *)&qword_1EA2C50A0, (void (*)(uint64_t))sub_1C1FF878C);
  sub_1C214A010();
  uint64_t v8 = swift_allocObject();
  swift_weakInit();
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = sub_1C200BE74;
  *(void *)(v9 + 24) = v8;
  sub_1C200BEFC(&qword_1EA2C50B0, (void (*)(uint64_t))sub_1C1FF863C);
  uint64_t v10 = sub_1C214A0F0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  *(void *)(v1 + qword_1EA2C5310) = v10;
  return swift_release();
}

uint64_t sub_1C2009F0C(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1C2009F80(a1, a2);
    return swift_release();
  }
  return result;
}

uint64_t sub_1C2009F80(uint64_t a1, uint64_t a2)
{
  uint64_t v52 = sub_1C2148A70();
  uint64_t v50 = *(void *)(v52 - 8);
  MEMORY[0x1F4188790](v52);
  uint64_t v49 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C200994C(0, &qword_1EBF0C620, MEMORY[0x1E4FB0F28], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v48 = (char *)&v43 - v6;
  uint64_t v47 = sub_1C2148620();
  uint64_t v7 = *(void *)(v47 - 8);
  MEMORY[0x1F4188790](v47);
  uint64_t v9 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1C21487B0();
  uint64_t v56 = *(void *)(v10 - 8);
  uint64_t v57 = v10;
  MEMORY[0x1F4188790](v10);
  uint64_t v55 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1C21499D0();
  uint64_t v53 = *(void *)(v12 - 8);
  uint64_t v54 = v12;
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1C2149BE0();
  uint64_t v51 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for ScheduleDurationItem();
  uint64_t v19 = MEMORY[0x1F4188790](v18);
  uint64_t v21 = (char *)&v43 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = &v21[*(int *)(v19 + 20)];
  uint64_t v23 = sub_1C2147AC0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 16))(v22, a1, v23);
  sub_1C1FE0174(a2, (uint64_t)&v21[*(int *)(v18 + 24)]);
  sub_1C2147B10();
  uint64_t v46 = v18;
  uint64_t v24 = (uint64_t *)&v21[*(int *)(v18 + 28)];
  type metadata accessor for ScheduleDurationCell();
  sub_1C200BEFC(&qword_1EA2C4C40, (void (*)(uint64_t))type metadata accessor for ScheduleDurationCell);
  *uint64_t v24 = sub_1C21481D0();
  v24[1] = v25;
  uint64_t v26 = v17;
  sub_1C2149BD0();
  if (qword_1EBF0CA00 != -1) {
    swift_once();
  }
  id v27 = (id)qword_1EBF0CA18;
  swift_bridgeObjectRetain();
  sub_1C2147730();
  swift_bridgeObjectRelease();

  sub_1C2149B90();
  id v28 = objc_msgSend(self, sel_linkColor);
  uint64_t v45 = v26;
  id v29 = (void (*)(uint64_t *, void))sub_1C2149AA0();
  sub_1C2149A60();
  v29(v58, 0);
  sub_1C21499C0();
  sub_1C1F758A4();
  sub_1C214B1A0();
  sub_1C2149990();
  uint64_t v30 = v15;
  v58[3] = v15;
  v58[4] = MEMORY[0x1E4FB0F88];
  uint64_t v44 = v15;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v58);
  uint64_t v32 = v51;
  (*(void (**)(uint64_t *, char *, uint64_t))(v51 + 16))(boxed_opaque_existential_1, v26, v30);
  swift_allocObject();
  swift_weakInit();
  *uint64_t v9 = 1;
  (*(void (**)(unsigned char *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E4F66478], v47);
  uint64_t v33 = v53;
  uint64_t v34 = v54;
  unint64_t v35 = v48;
  (*(void (**)(char *, char *, uint64_t))(v53 + 16))(v48, v14, v54);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v33 + 56))(v35, 0, 1, v34);
  (*(void (**)(char *, void, uint64_t))(v50 + 104))(v49, *MEMORY[0x1E4F66678], v52);
  uint64_t v36 = v55;
  sub_1C21487A0();
  sub_1C1F72888(0, (unint64_t *)&qword_1EBF0C958, (unint64_t *)&qword_1EBF0C2F0);
  uint64_t v37 = swift_allocObject();
  *(_OWORD *)(v37 + 16) = xmmword_1C214FCC0;
  *(void *)(v37 + 56) = v46;
  *(void *)(v37 + 64) = sub_1C200BEFC(&qword_1EA2C5338, (void (*)(uint64_t))type metadata accessor for ScheduleDurationItem);
  uint64_t v38 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v37 + 32));
  sub_1C1FFD93C((uint64_t)v21, (uint64_t)v38);
  uint64_t v39 = v57;
  *(void *)(v37 + 96) = v57;
  *(void *)(v37 + 104) = sub_1C200BEFC((unint64_t *)&qword_1EA2C2E68, MEMORY[0x1E4F66510]);
  uint64_t v40 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v37 + 72));
  uint64_t v41 = v56;
  (*(void (**)(uint64_t *, char *, uint64_t))(v56 + 16))(v40, v36, v39);
  sub_1C21485C0();
  swift_bridgeObjectRelease();
  sub_1C21485D0();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v36, v39);
  (*(void (**)(char *, uint64_t))(v33 + 8))(v14, v34);
  (*(void (**)(char *, uint64_t))(v32 + 8))(v45, v44);
  return sub_1C200BB74((uint64_t)v21);
}

uint64_t sub_1C200A7BC(uint64_t a1)
{
  sub_1C200994C(0, &qword_1EBF0B1F0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  uint64_t v46 = *(void *)(v2 - 8);
  uint64_t v3 = MEMORY[0x1F4188790](v2 - 8);
  uint64_t v5 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = v4;
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v38 - v6;
  uint64_t v8 = sub_1C2147AC0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  uint64_t v11 = MEMORY[0x1F4188790](v8);
  uint64_t v44 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v38 - v12;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v15 = result;
    uint64_t v41 = v5;
    uint64_t v42 = v8;
    uint64_t v43 = a1;
    uint64_t v16 = qword_1EA2C5300;
    swift_retain();
    sub_1C2149E90();
    swift_release();
    uint64_t v17 = qword_1EA2C5308;
    swift_retain();
    sub_1C2149E90();
    swift_release();
    uint64_t v18 = *(void *)(v15 + v16);
    uint64_t v19 = *(void *)(v15 + v17);
    type metadata accessor for StartDateEndDateEditDataSource();
    swift_allocObject();
    swift_retain();
    swift_retain();
    uint64_t v20 = sub_1C1FF4A84(v18, v19);
    sub_1C2148820();
    sub_1C1F72888(0, (unint64_t *)&qword_1EA2C69F0, (unint64_t *)&qword_1EA2C2CE0);
    uint64_t v21 = swift_allocObject();
    *(_OWORD *)(v21 + 16) = xmmword_1C214FCD0;
    uint64_t v22 = MEMORY[0x1E4F66470];
    *(void *)(v21 + 32) = v20;
    *(void *)(v21 + 40) = v22;
    uint64_t v40 = v20;
    swift_retain();
    sub_1C2148850();
    id v23 = objc_allocWithZone((Class)sub_1C2148B10());
    uint64_t v24 = (void *)sub_1C2148AC0();
    uint64_t v25 = qword_1EBF0CA00;
    id v26 = v24;
    id v27 = v13;
    if (v25 != -1) {
      swift_once();
    }
    id v28 = (id)qword_1EBF0CA18;
    swift_bridgeObjectRetain();
    sub_1C2147730();
    swift_bridgeObjectRelease();

    id v29 = (void *)sub_1C214A5B0();
    swift_bridgeObjectRelease();
    objc_msgSend(v26, sel_setTitle_, v29);

    uint64_t v30 = swift_allocObject();
    uint64_t v38 = v15;
    swift_weakInit();
    os_log_type_t v31 = v44;
    uint64_t v32 = v42;
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v44, v27, v42);
    uint64_t v39 = v27;
    uint64_t v33 = (uint64_t)v7;
    uint64_t v34 = (uint64_t)v41;
    sub_1C1FE0174((uint64_t)v7, (uint64_t)v41);
    unint64_t v35 = (*(unsigned __int8 *)(v9 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    unint64_t v36 = (v10 + *(unsigned __int8 *)(v46 + 80) + v35) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80);
    uint64_t v37 = swift_allocObject();
    *(void *)(v37 + 16) = v30;
    (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v37 + v35, v31, v32);
    sub_1C1F90A80(v34, v37 + v36);
    UIViewController.presentAsFormSheetWithNavigationController(viewController:isModalInPresentation:leadingAction:trailingAction:)(v26, 0, (uint64_t)sub_1C200BD6C, v37, (uint64_t)sub_1C200ADF8, 0);
    swift_release();
    swift_release();
    swift_release();

    sub_1C1F394F8(v33);
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v39, v32);
  }
  return result;
}

id sub_1C200ACF4(void *a1)
{
  if (swift_weakLoadStrong())
  {
    swift_retain();
    swift_release();
    sub_1C2149E70();
    swift_release();
  }
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    swift_retain();
    swift_release();
    sub_1C2149E70();
    swift_release();
  }
  return objc_msgSend(a1, sel_dismissViewControllerAnimated_completion_, 1, 0);
}

id sub_1C200ADF8(void *a1)
{
  return objc_msgSend(a1, sel_dismissViewControllerAnimated_completion_, 1, 0);
}

void *sub_1C200AE0C()
{
  sub_1C200994C(0, &qword_1EBF0B1F0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v2 = (char *)&v14 - v1;
  uint64_t v3 = sub_1C2148710();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v14 - v8;
  sub_1C2148660();
  swift_retain();
  sub_1C2149E90();
  swift_release();
  uint64_t v10 = sub_1C2147AC0();
  int v11 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v2, 1, v10);
  sub_1C1F394F8((uint64_t)v2);
  if (v11 != 1)
  {
    sub_1C2148650();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v9, v7, v3);
  }
  sub_1C21487F0();
  uint64_t v12 = (void *)sub_1C2148700();
  swift_unknownObjectRelease();
  sub_1C214AEA0();
  objc_msgSend(v12, sel_setContentInsets_);
  objc_msgSend(v12, sel_setContentInsetsReference_, 1);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
  return v12;
}

uint64_t sub_1C200B080@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v51 = a3;
  uint64_t v5 = sub_1C2147B20();
  uint64_t v48 = *(void *)(v5 - 8);
  uint64_t v49 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v47 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1C2147CF0();
  uint64_t v46 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C200994C(0, &qword_1EBF0B1F0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v46 - v11;
  uint64_t v50 = sub_1C2147AC0();
  uint64_t v13 = *(void *)(v50 - 8);
  uint64_t v14 = MEMORY[0x1F4188790](v50);
  uint64_t v16 = (char *)&v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v18 = (char *)&v46 - v17;
  if (sub_1C214A5F0() == a1 && v19 == a2)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v21 = sub_1C214BA80();
    swift_bridgeObjectRelease();
    if ((v21 & 1) == 0)
    {
      swift_retain();
      sub_1C2149E90();
      swift_release();
      uint64_t v22 = v13;
      uint64_t v23 = v50;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v12, 1, v50) == 1)
      {
        sub_1C1F394F8((uint64_t)v12);
        uint64_t v24 = sub_1C21482E0();
        uint64_t v25 = v51;
        v51[3] = v24;
        v25[4] = sub_1C200BEFC(&qword_1EA2C5330, MEMORY[0x1E4F663A8]);
        __swift_allocate_boxed_opaque_existential_1(v25);
        return sub_1C21482D0();
      }
      else
      {
        unint64_t v35 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
        unint64_t v36 = v18;
        v35(v18, v12, v23);
        sub_1C1F72888(0, qword_1EBF0B8A0, (unint64_t *)&qword_1EBF0C9F0);
        uint64_t v37 = swift_allocObject();
        *(_OWORD *)(v37 + 16) = xmmword_1C214FCD0;
        sub_1C2147CB0();
        uint64_t v38 = v23;
        swift_retain();
        sub_1C2149E90();
        swift_release();
        uint64_t v39 = sub_1C2147C20();
        uint64_t v40 = *(void (**)(char *, uint64_t))(v22 + 8);
        v40(v16, v38);
        (*(void (**)(char *, uint64_t))(v46 + 8))(v9, v7);
        uint64_t v41 = MEMORY[0x1E4FBB5C8];
        *(void *)(v37 + 56) = MEMORY[0x1E4FBB550];
        *(void *)(v37 + 64) = v41;
        *(void *)(v37 + 32) = v39;
        if (qword_1EBF0CA00 != -1) {
          swift_once();
        }
        id v42 = (id)qword_1EBF0CA18;
        swift_bridgeObjectRetain();
        sub_1C2147730();
        if (*(void *)(v37 + 16))
        {
          sub_1C214A5C0();
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease();
        }
        else
        {
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        uint64_t v52 = 0x74497265746F6F46;
        unint64_t v53 = 0xEB000000005F6D65;
        uint64_t v43 = v47;
        sub_1C2147B10();
        sub_1C2147AD0();
        (*(void (**)(char *, uint64_t))(v48 + 8))(v43, v49);
        sub_1C214A6C0();
        swift_bridgeObjectRelease();
        uint64_t v44 = sub_1C2148960();
        uint64_t v45 = v51;
        v51[3] = v44;
        v45[4] = sub_1C200BEFC(&qword_1EA2C2D38, MEMORY[0x1E4F665E8]);
        __swift_allocate_boxed_opaque_existential_1(v45);
        sub_1C2148950();
        return ((uint64_t (*)(char *, uint64_t))v40)(v36, v50);
      }
    }
  }
  if (qword_1EA2C2708 != -1) {
    swift_once();
  }
  id v27 = (id)qword_1EA2C5D78;
  swift_bridgeObjectRetain();
  uint64_t v28 = sub_1C2147730();
  uint64_t v30 = v29;
  swift_bridgeObjectRelease();

  type metadata accessor for ScheduleHeaderCell();
  sub_1C200BEFC(&qword_1EA2C4C60, (void (*)(uint64_t))type metadata accessor for ScheduleHeaderCell);
  uint64_t v31 = sub_1C21481D0();
  uint64_t v33 = v32;
  sub_1C21481D0();
  swift_bridgeObjectRelease();
  uint64_t v34 = v51;
  v51[3] = (uint64_t)&type metadata for ScheduleHeaderItem;
  v34[4] = sub_1C1FDDC00();
  uint64_t result = swift_allocObject();
  *uint64_t v34 = result;
  *(void *)(result + 16) = v28;
  *(void *)(result + 24) = v30;
  *(unsigned char *)(result + 32) = 0;
  *(void *)(result + 40) = nullsub_1;
  *(void *)(result + 48) = 0;
  *(void *)(result + 56) = v31;
  *(void *)(result + 64) = v33;
  return result;
}

void sub_1C200B808()
{
}

uint64_t sub_1C200B838()
{
  swift_release();
  swift_release();
  swift_release();
  uint64_t v1 = v0 + qword_1EA2C5318;
  uint64_t v2 = sub_1C2148540();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(v1, v2);
}

uint64_t sub_1C200B8D4()
{
  uint64_t v0 = sub_1C2148610();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v1 = v0 + qword_1EA2C5318;
  uint64_t v2 = sub_1C2148540();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_1C200B9AC()
{
  return type metadata accessor for StartDateDataSource();
}

void *sub_1C200B9B4()
{
  return sub_1C200AE0C();
}

uint64_t sub_1C200B9D8()
{
  return sub_1C214ACD0();
}

uint64_t sub_1C200BAC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1C200B080(a1, a2, a3);
}

uint64_t sub_1C200BAEC()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 72, 7);
}

uint64_t sub_1C200BB34()
{
  swift_weakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C200BB6C(uint64_t a1)
{
  return sub_1C200A7BC(a1);
}

uint64_t sub_1C200BB74(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ScheduleDurationItem();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C200BBD0()
{
  uint64_t v1 = sub_1C2147AC0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  sub_1C200994C(0, &qword_1EBF0B1F0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  uint64_t v7 = *(unsigned __int8 *)(*(void *)(v6 - 8) + 80);
  uint64_t v8 = (v5 + v7) & ~v7;
  uint64_t v9 = *(void *)(*(void *)(v6 - 8) + 64);
  swift_release();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v10(v0 + v4, v1);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v0 + v8, 1, v1)) {
    v10(v0 + v8, v1);
  }

  return MEMORY[0x1F4186498](v0, v8 + v9, v3 | v7 | 7);
}

id sub_1C200BD6C(void *a1)
{
  sub_1C2147AC0();
  sub_1C200994C(0, &qword_1EBF0B1F0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);

  return sub_1C200ACF4(a1);
}

uint64_t sub_1C200BE74(uint64_t a1, uint64_t a2)
{
  return sub_1C2009F0C(a1, a2);
}

uint64_t sub_1C200BE7C()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C200BEB4(uint64_t a1)
{
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(v1 + 16);
  sub_1C200BF44();
  return v3(a1, a1 + *(int *)(v4 + 48));
}

uint64_t sub_1C200BEFC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C200BF44()
{
  if (!qword_1EA2C5340)
  {
    sub_1C2147AC0();
    sub_1C200994C(255, &qword_1EBF0B1F0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA2C5340);
    }
  }
}

uint64_t Dosage.description.getter()
{
  return 0;
}

uint64_t type metadata accessor for Dosage()
{
  uint64_t result = qword_1EA2C5348;
  if (!qword_1EA2C5348) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C200C1E8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

BOOL _s19HealthMedicationsUI6DosageV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Dosage();
  uint64_t v5 = MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x1F4188790](v5);
  uint64_t v10 = (char *)&v21 - v9;
  uint64_t v11 = MEMORY[0x1F4188790](v8);
  uint64_t v13 = (char *)&v21 - v12;
  MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)&v21 - v14;
  char v16 = sub_1C2147AF0();
  sub_1C1F84AD8(a1, (uint64_t)v15);
  sub_1C1F84AD8(a2, (uint64_t)v13);
  if (v16)
  {
    char v17 = sub_1C2147A50();
    sub_1C1FC2884((uint64_t)v13);
    sub_1C1FC2884((uint64_t)v15);
    sub_1C1F84AD8(a1, (uint64_t)v10);
    sub_1C1F84AD8(a2, (uint64_t)v7);
    if (v17)
    {
      double v18 = *(double *)&v10[*(int *)(v4 + 24)];
      sub_1C1FC2884((uint64_t)v10);
      double v19 = *(double *)&v7[*(int *)(v4 + 24)];
      sub_1C1FC2884((uint64_t)v7);
      return v18 == v19;
    }
  }
  else
  {
    sub_1C1FC2884((uint64_t)v13);
    sub_1C1FC2884((uint64_t)v15);
    sub_1C1F84AD8(a1, (uint64_t)v10);
    sub_1C1F84AD8(a2, (uint64_t)v7);
  }
  sub_1C1FC2884((uint64_t)v7);
  sub_1C1FC2884((uint64_t)v10);
  return 0;
}

uint64_t *initializeBufferWithCopyOfBuffer for Dosage(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1C2147B20();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1C2147AC0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 24));
  }
  return a1;
}

uint64_t destroy for Dosage(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C2147B20();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_1C2147AC0();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);

  return v7(v5, v6);
}

uint64_t initializeWithCopy for Dosage(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C2147B20();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1C2147AC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t assignWithCopy for Dosage(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C2147B20();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1C2147AC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t initializeWithTake for Dosage(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C2147B20();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1C2147AC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t assignWithTake for Dosage(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C2147B20();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1C2147AC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t getEnumTagSinglePayload for Dosage(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C200C90C);
}

uint64_t sub_1C200C90C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C2147B20();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = sub_1C2147AC0();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t storeEnumTagSinglePayload for Dosage(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C200CA18);
}

uint64_t sub_1C200CA18(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_1C2147B20();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = sub_1C2147AC0();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

uint64_t sub_1C200CB1C()
{
  uint64_t result = sub_1C2147B20();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1C2147AC0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_1C200CBF0()
{
  return sub_1C214A610();
}

uint64_t sub_1C200CC24(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI19SeparatorHeaderCell_item;
  swift_beginAccess();
  sub_1C1F32DDC(a1, v3);
  swift_endAccess();
  sub_1C1F2116C(v3, (uint64_t)v7);
  if (v8)
  {
    sub_1C1F1CB5C();
    if (swift_dynamicCast())
    {
      id v4 = sub_1C200CE40();
      objc_msgSend(v4, sel_setColor_, v6);
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    sub_1C1F374E4((uint64_t)v7);
  }
  return sub_1C1F374E4(a1);
}

void (*sub_1C200CD08(void *a1))(void **a1, char a2)
{
  uint64_t v3 = malloc(0x50uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC19HealthMedicationsUI19SeparatorHeaderCell_item;
  v3[8] = v1;
  v3[9] = v4;
  swift_beginAccess();
  return sub_1C200CD74;
}

void sub_1C200CD74(void **a1, char a2)
{
  uint64_t v3 = *a1;
  swift_endAccess();
  if ((a2 & 1) == 0)
  {
    sub_1C1F2116C(v3[8] + v3[9], (uint64_t)v3);
    if (v3[3])
    {
      sub_1C1F1CB5C();
      if (swift_dynamicCast())
      {
        uint64_t v4 = (void *)v3[5];
        id v5 = sub_1C200CE40();
        objc_msgSend(v5, sel_setColor_, v4);

        swift_bridgeObjectRelease();
      }
    }
    else
    {
      sub_1C1F374E4((uint64_t)v3);
    }
  }

  free(v3);
}

id sub_1C200CE40()
{
  uint64_t v1 = OBJC_IVAR____TtC19HealthMedicationsUI19SeparatorHeaderCell____lazy_storage___separatorView;
  unint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI19SeparatorHeaderCell____lazy_storage___separatorView);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI19SeparatorHeaderCell____lazy_storage___separatorView);
  }
  else
  {
    id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F67C08]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    id v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    unint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

void sub_1C200D020()
{
  id v1 = sub_1C200CE40();
  objc_msgSend(v0, sel_addSubview_, v1);

  unint64_t v2 = self;
  sub_1C1F0ED28();
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1C21510C0;
  id v4 = sub_1C200CE40();
  id v5 = objc_msgSend(v4, sel_heightAnchor);

  id v6 = objc_msgSend(v5, sel_constraintEqualToConstant_, 1.0);
  *(void *)(v3 + 32) = v6;
  id v7 = sub_1C200CE40();
  id v8 = objc_msgSend(v7, sel_leadingAnchor);

  id v9 = objc_msgSend(v0, sel_layoutMarginsGuide);
  id v10 = objc_msgSend(v9, sel_leadingAnchor);

  id v11 = objc_msgSend(v8, sel_constraintEqualToAnchor_constant_, v10, 3.0);
  *(void *)(v3 + 40) = v11;
  id v12 = sub_1C200CE40();
  id v13 = objc_msgSend(v12, sel_trailingAnchor);

  id v14 = objc_msgSend(v0, sel_layoutMarginsGuide);
  id v15 = objc_msgSend(v14, sel_trailingAnchor);

  id v16 = objc_msgSend(v13, sel_constraintEqualToAnchor_constant_, v15, -3.0);
  *(void *)(v3 + 48) = v16;
  id v17 = sub_1C200CE40();
  id v18 = objc_msgSend(v17, sel_centerYAnchor);

  id v19 = objc_msgSend(v0, sel_centerYAnchor);
  id v20 = objc_msgSend(v18, sel_constraintEqualToAnchor_, v19);

  *(void *)(v3 + 56) = v20;
  sub_1C214A7A0();
  sub_1C1F645D4();
  id v21 = (id)sub_1C214A770();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_activateConstraints_, v21);
}

id sub_1C200D2C4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SeparatorHeaderCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for SeparatorHeaderCell()
{
  return self;
}

void *sub_1C200D36C(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  a1[2] = *(void *)(a2 + 16);
  id v5 = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SeparatorHeaderItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for SeparatorHeaderItem(uint64_t a1, void *a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *a2;

  uint64_t v5 = a2[2];
  *(void *)(a1 + 8) = a2[1];
  *(void *)(a1 + 16) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SeparatorHeaderItem(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SeparatorHeaderItem(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SeparatorHeaderItem()
{
  return &type metadata for SeparatorHeaderItem;
}

uint64_t sub_1C200D4F0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI19SeparatorHeaderCell_item;
  swift_beginAccess();
  return sub_1C1F2116C(v3, a1);
}

uint64_t (*sub_1C200D548(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1C200CD08(v2);
  return sub_1C1F37384;
}

uint64_t sub_1C200D5A0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC19HealthMedicationsUI19SeparatorHeaderCell_item;
  swift_beginAccess();
  return sub_1C1F2116C(v3, a1);
}

uint64_t sub_1C200D5F8(uint64_t a1)
{
  return sub_1C200CC24(a1);
}

uint64_t (*sub_1C200D61C(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1C200CD08(v2);
  return sub_1C1F37384;
}

unint64_t sub_1C200D678()
{
  unint64_t result = qword_1EA2C5368;
  if (!qword_1EA2C5368)
  {
    unint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA2C5368);
  }
  return result;
}

uint64_t type metadata accessor for InteractionFactorsInfoDataSourceProvider()
{
  return self;
}

uint64_t sub_1C200D6D8()
{
  sub_1C1F24848();
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1C214FCD0;
  type metadata accessor for InteractionFactorsInfoDataSource();
  swift_allocObject();
  uint64_t v1 = sub_1C20193A4();
  unint64_t v2 = sub_1C200D744();
  *(void *)(v0 + 32) = v1;
  *(void *)(v0 + 40) = v2;
  return v0;
}

unint64_t sub_1C200D744()
{
  unint64_t result = qword_1EA2C5370;
  if (!qword_1EA2C5370)
  {
    type metadata accessor for InteractionFactorsInfoDataSource();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C5370);
  }
  return result;
}

void *sub_1C200D79C()
{
  uint64_t v1 = qword_1EA2C5380;
  if (*(void *)(v0 + qword_1EA2C5380))
  {
    unint64_t v2 = *(void **)(v0 + qword_1EA2C5380);
  }
  else
  {
    uint64_t v3 = sub_1C200E3D8();
    uint64_t v4 = *(void *)(v0 + qword_1EA2C5390);
    uint64_t v5 = *(void *)(v0 + qword_1EA2C53A8);
    type metadata accessor for InteractionFactorsItem();
    unint64_t v2 = (void *)swift_allocObject();
    type metadata accessor for InteractionFactorsCell();
    sub_1C200EB50(&qword_1EA2C5398, (void (*)(uint64_t))type metadata accessor for InteractionFactorsCell);
    swift_retain();
    uint64_t v6 = sub_1C21481D0();
    v2[2] = v3;
    v2[3] = v6;
    v2[4] = v7;
    v2[5] = v4;
    v2[6] = v5;
    *(void *)(v0 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

uint64_t sub_1C200D8AC(uint64_t a1, uint64_t a2)
{
  sub_1C200EE1C(0, &qword_1EBF0C7E8, MEMORY[0x1E4FBCC28], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v32 = (char *)&v27 - v6;
  sub_1C1F35768();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v34 = v7;
  uint64_t v35 = v8;
  MEMORY[0x1F4188790](v7);
  uint64_t v30 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C200ED10();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v36 = v10;
  uint64_t v37 = v11;
  MEMORY[0x1F4188790](v10);
  uint64_t v31 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = qword_1EA2C5378;
  sub_1C2148E10();
  swift_retain();
  sub_1C2148E00();
  sub_1C2148DB0();
  swift_release();
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C7C8);
  sub_1C214AC00();
  sub_1C2148D70();
  swift_allocObject();
  *(void *)(v2 + v13) = sub_1C2148C90();
  *(void *)(v2 + qword_1EA2C5380) = 0;
  *(void *)(v2 + qword_1EA2C5388) = 0;
  uint64_t v33 = a1;
  *(void *)(v2 + qword_1EA2C5390) = a1;
  *(void *)(v2 + qword_1EA2C53A8) = a2;
  swift_retain();
  swift_release();
  uint64_t v28 = sub_1C2147F50();
  swift_retain();
  id v14 = (void *)sub_1C2148CA0();
  sub_1C200EE1C(0, &qword_1EA2C3160, (uint64_t (*)(uint64_t))sub_1C1F357FC, MEMORY[0x1E4FBBE00]);
  sub_1C1F357FC();
  uint64_t v29 = v15;
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1C2150000;
  sub_1C1F12718(0, &qword_1EA2C3168);
  sub_1C214AC80();
  sub_1C214AC70();
  swift_bridgeObjectRelease();
  id v16 = v14;
  sub_1C214ACA0();
  sub_1C214AC70();
  swift_bridgeObjectRelease();

  id v17 = v16;
  sub_1C214AC90();
  sub_1C214AC70();
  swift_bridgeObjectRelease();

  sub_1C200EB50(&qword_1EA2C30E0, (void (*)(uint64_t))sub_1C1F357FC);
  id v18 = v30;
  sub_1C2149DE0();
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0CB10);
  id v38 = (id)sub_1C214AD80();
  uint64_t v19 = sub_1C214AD20();
  uint64_t v20 = (uint64_t)v32;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v32, 1, 1, v19);
  sub_1C200EB50(&qword_1EA2C3118, (void (*)(uint64_t))sub_1C1F35768);
  sub_1C1F43FD4();
  id v21 = v31;
  uint64_t v22 = v34;
  sub_1C214A0A0();
  sub_1C1F441C8(v20);

  (*(void (**)(char *, uint64_t))(v35 + 8))(v18, v22);
  swift_allocObject();
  uint64_t v23 = v28;
  swift_weakInit();
  sub_1C200EB50(&qword_1EA2C53C8, (void (*)(uint64_t))sub_1C200ED10);
  uint64_t v24 = v36;
  uint64_t v25 = sub_1C214A030();
  swift_release();
  (*(void (**)(char *, uint64_t))(v37 + 8))(v21, v24);
  *(void *)(v23 + qword_1EA2C5388) = v25;
  swift_release();
  sub_1C200E094();

  swift_release();
  swift_release();
  return v23;
}

uint64_t sub_1C200DF20()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1C200E094();
    return swift_release();
  }
  return result;
}

uint64_t sub_1C200DF78()
{
  uint64_t v0 = sub_1C2148710();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = MEMORY[0x1F4188790](v0);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v10 - v5;
  sub_1C2148690();
  sub_1C2148650();
  uint64_t v7 = *(void (**)(char *, uint64_t))(v1 + 8);
  v7(v4, v0);
  uint64_t v8 = sub_1C2148700();
  v7(v6, v0);
  return v8;
}

uint64_t sub_1C200E094()
{
  uint64_t v17 = sub_1C2147B20();
  uint64_t v1 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v3 = (char *)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1C200E3D8();
  uint64_t v5 = *(void *)(v0 + qword_1EA2C5390);
  uint64_t v6 = *(void *)(v0 + qword_1EA2C53A8);
  uint64_t v7 = type metadata accessor for InteractionFactorsItem();
  uint64_t v8 = (void *)swift_allocObject();
  type metadata accessor for InteractionFactorsCell();
  sub_1C200EB50(&qword_1EA2C5398, (void (*)(uint64_t))type metadata accessor for InteractionFactorsCell);
  swift_retain();
  uint64_t v9 = sub_1C21481D0();
  v8[2] = v4;
  v8[3] = v9;
  v8[4] = v10;
  v8[5] = v5;
  v8[6] = v6;
  *(void *)(v0 + qword_1EA2C5380) = v8;
  swift_release();
  sub_1C2147F40();
  sub_1C21482F0();
  swift_release();
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
  sub_1C200EE1C(0, (unint64_t *)&qword_1EA2C2DD0, MEMORY[0x1E4F66468], MEMORY[0x1E4FBBE00]);
  sub_1C2148540();
  uint64_t v12 = swift_allocObject();
  long long v16 = xmmword_1C214FCD0;
  *(_OWORD *)(v12 + 16) = xmmword_1C214FCD0;
  sub_1C200EE1C(0, (unint64_t *)&qword_1EBF0C958, (uint64_t (*)(uint64_t))sub_1C1F1CB5C, v11);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = v16;
  id v14 = sub_1C200D79C();
  *(void *)(v13 + 56) = v7;
  *(void *)(v13 + 64) = sub_1C200EB50(&qword_1EA2C53D0, (void (*)(uint64_t))type metadata accessor for InteractionFactorsItem);
  *(void *)(v13 + 32) = v14;
  sub_1C2147B10();
  sub_1C2147AD0();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v17);
  sub_1C2148520();
  sub_1C21485B0();
  swift_release();
  return swift_bridgeObjectRelease();
}

void *sub_1C200E3D8()
{
  if ((sub_1C2148D00() & 1) == 0)
  {
    uint64_t v0 = (void *)MEMORY[0x1E4FBC860];
    if ((sub_1C2148D50() & 1) == 0) {
      goto LABEL_12;
    }
    goto LABEL_7;
  }
  uint64_t v0 = sub_1C1F3ADBC(0, 1, 1, MEMORY[0x1E4FBC860]);
  unint64_t v2 = v0[2];
  unint64_t v1 = v0[3];
  if (v2 >= v1 >> 1) {
    uint64_t v0 = sub_1C1F3ADBC((void *)(v1 > 1), v2 + 1, 1, v0);
  }
  v0[2] = v2 + 1;
  v0[v2 + 4] = 1;
  if (sub_1C2148D50())
  {
LABEL_7:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v0 = sub_1C1F3ADBC(0, v0[2] + 1, 1, v0);
    }
    unint64_t v4 = v0[2];
    unint64_t v3 = v0[3];
    if (v4 >= v3 >> 1) {
      uint64_t v0 = sub_1C1F3ADBC((void *)(v3 > 1), v4 + 1, 1, v0);
    }
    v0[2] = v4 + 1;
    v0[v4 + 4] = 2;
  }
LABEL_12:
  if (sub_1C2148D20())
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v0 = sub_1C1F3ADBC(0, v0[2] + 1, 1, v0);
    }
    unint64_t v6 = v0[2];
    unint64_t v5 = v0[3];
    if (v6 >= v5 >> 1) {
      uint64_t v0 = sub_1C1F3ADBC((void *)(v5 > 1), v6 + 1, 1, v0);
    }
    v0[2] = v6 + 1;
    v0[v6 + 4] = 3;
  }
  return v0;
}

void InteractionFactorsDataSource.__allocating_init(arrangedSections:isHidden:)()
{
}

void InteractionFactorsDataSource.init(arrangedSections:isHidden:)()
{
}

uint64_t sub_1C200E5CC()
{
  swift_release();
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t InteractionFactorsDataSource.deinit()
{
  uint64_t v0 = _s19HealthMedicationsUI34InteractionSeperatorLineDataSourceCfd_0();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t InteractionFactorsDataSource.__deallocating_deinit()
{
  _s19HealthMedicationsUI34InteractionSeperatorLineDataSourceCfd_0();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_1C200E714()
{
  return sub_1C2148B80();
}

Swift::Void __swiftcall InteractionFactorsDataSource.registerCells(for:)(UICollectionView *a1)
{
}

uint64_t sub_1C200E7F8()
{
  return sub_1C214ACD0();
}

uint64_t InteractionFactorsDataSource.supplementaryItem(ofKind:at:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = sub_1C2147B20();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (sub_1C214A5F0() == a1 && v10 == a2)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v12 = sub_1C214BA80();
    swift_bridgeObjectRelease();
    if ((v12 & 1) == 0)
    {
      a3[3] = sub_1C2148220();
      a3[4] = sub_1C200EB50(&qword_1EA2C2D28, MEMORY[0x1E4F66330]);
      __swift_allocate_boxed_opaque_existential_1(a3);
      return sub_1C2148210();
    }
  }
  if (qword_1EBF0CA00 != -1) {
    swift_once();
  }
  id v14 = (id)qword_1EBF0CA18;
  swift_bridgeObjectRetain();
  sub_1C2147730();
  swift_bridgeObjectRelease();

  v15[0] = 0x74497265746F6F46;
  v15[1] = 0xEB000000005F6D65;
  sub_1C2147B10();
  sub_1C2147AD0();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  a3[3] = sub_1C2148960();
  a3[4] = sub_1C200EB50(&qword_1EA2C2D38, MEMORY[0x1E4F665E8]);
  __swift_allocate_boxed_opaque_existential_1(a3);
  return sub_1C2148950();
}

uint64_t sub_1C200EB50(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C200EB98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return InteractionFactorsDataSource.supplementaryItem(ofKind:at:)(a1, a2, a3);
}

uint64_t sub_1C200EBB0()
{
  return sub_1C200EB50(&qword_1EA2C53A0, (void (*)(uint64_t))type metadata accessor for InteractionFactorsDataSource);
}

uint64_t type metadata accessor for InteractionFactorsDataSource()
{
  uint64_t result = qword_1EA2C53B0;
  if (!qword_1EA2C53B0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C200EC44()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for InteractionFactorsDataSource(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for InteractionFactorsDataSource);
}

uint64_t dispatch thunk of InteractionFactorsDataSource.layout(for:environment:)()
{
  return (*(uint64_t (**)(void))(class metadata base offset for InteractionFactorsDataSource + *v0 + 96))();
}

uint64_t sub_1C200ED08()
{
  return type metadata accessor for InteractionFactorsDataSource();
}

void sub_1C200ED10()
{
  if (!qword_1EA2C53C0)
  {
    sub_1C1F35768();
    sub_1C1F12718(255, (unint64_t *)&qword_1EBF0CB10);
    sub_1C200EB50(&qword_1EA2C3118, (void (*)(uint64_t))sub_1C1F35768);
    sub_1C1F43FD4();
    unint64_t v0 = sub_1C2149DF0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C53C0);
    }
  }
}

uint64_t sub_1C200EDDC()
{
  swift_weakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C200EE14()
{
  return sub_1C200DF20();
}

void sub_1C200EE1C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t type metadata accessor for ManualStrengthDataSource()
{
  uint64_t result = qword_1EA2C5430;
  if (!qword_1EA2C5430) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C200EECC()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1C200EF48(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1C2147B20();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = qword_1EA2C53F8;
  sub_1C1F13DB0(0, (unint64_t *)&qword_1EBF0CA10, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1C21544C0;
  char v12 = self;
  swift_retain();
  *(void *)(v11 + 32) = objc_msgSend(v12, sel_gramUnitWithMetricPrefix_, 4);
  *(void *)(v11 + 40) = objc_msgSend(v12, sel_gramUnitWithMetricPrefix_, 3);
  *(void *)(v11 + 48) = objc_msgSend(v12, sel_gramUnit);
  *(void *)(v11 + 56) = objc_msgSend(v12, sel_literUnitWithMetricPrefix_, 4);
  *(void *)(v11 + 64) = objc_msgSend(v12, sel_percentUnit);
  v27[0] = v11;
  sub_1C214A7A0();
  *(void *)(v3 + v10) = v27[0];
  uint64_t v13 = (void *)(v3 + qword_1EA2C5410);
  v27[0] = sub_1C214A5F0();
  v27[1] = v14;
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  uint64_t v15 = v27[1];
  *uint64_t v13 = v27[0];
  v13[1] = v15;
  uint64_t v16 = qword_1EA2C5418;
  sub_1C1F40AC8();
  v27[0] = 0;
  v27[1] = 0;
  swift_allocObject();
  *(void *)(v3 + v16) = sub_1C2149EB0();
  uint64_t v17 = qword_1EA2C5420;
  v27[0] = 0;
  sub_1C2011358();
  swift_allocObject();
  *(void *)(v3 + v17) = sub_1C2149EB0();
  *(void *)(v3 + qword_1EA2C5428) = MEMORY[0x1E4FBC870];
  *(void *)(v3 + qword_1EA2C5408) = a2;
  *(void *)(v3 + qword_1EA2C5400) = a1;
  v26[1] = a1;
  swift_retain();
  swift_release();
  v27[0] = 0;
  v27[1] = 0xE000000000000000;
  sub_1C214B7C0();
  swift_bridgeObjectRelease();
  strcpy((char *)v27, "MutableArray<");
  HIWORD(v27[1]) = -4864;
  sub_1C2147B10();
  sub_1C2147AD0();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  sub_1C214A6C0();
  uint64_t v18 = sub_1C2148590();
  sub_1C201160C(0, (unint64_t *)&qword_1EA2C2DD0, MEMORY[0x1E4F66468], MEMORY[0x1E4FBBE00]);
  v26[0] = *(void *)(*(void *)(sub_1C2148540() - 8) + 72);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1C214FCC0;
  uint64_t v19 = qword_1EBF0CA00;
  swift_retain_n();
  if (v19 != -1) {
    swift_once();
  }
  id v20 = (id)qword_1EBF0CA18;
  swift_bridgeObjectRetain();
  sub_1C2147730();
  swift_bridgeObjectRelease();

  sub_1C201160C(0, (unint64_t *)&qword_1EBF0C958, (uint64_t (*)(uint64_t))sub_1C1F1CB5C, MEMORY[0x1E4FBBE00]);
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_1C214FCD0;
  *(void *)(v21 + 56) = type metadata accessor for FieldItem();
  *(void *)(v21 + 64) = sub_1C20110AC(&qword_1EA2C5028, (void (*)(uint64_t))type metadata accessor for FieldItem);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v21 + 32));
  sub_1C200F628((uint64_t)boxed_opaque_existential_1);
  swift_bridgeObjectRetain();
  sub_1C2148520();
  id v23 = (id)qword_1EBF0CA18;
  swift_bridgeObjectRetain();
  sub_1C2147730();
  swift_bridgeObjectRelease();

  swift_retain();
  unint64_t v24 = swift_bridgeObjectRetain();
  sub_1C20110F4(v24, v18);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRetain();
  sub_1C2148520();
  sub_1C21485B0();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1C200F850();
  swift_release();
  swift_release();
  return v18;
}

uint64_t sub_1C200F628@<X0>(uint64_t a1@<X8>)
{
  sub_1C2149E90();
  if (qword_1EBF0CA00 != -1) {
    swift_once();
  }
  if (v21) {
    unint64_t v2 = v21;
  }
  else {
    unint64_t v2 = 0xE000000000000000;
  }
  if (v21) {
    uint64_t v3 = v20;
  }
  else {
    uint64_t v3 = 0;
  }
  uint64_t v18 = v3;
  unint64_t v19 = v2;
  id v4 = (id)qword_1EBF0CA18;
  swift_bridgeObjectRetain();
  uint64_t v17 = sub_1C2147730();
  uint64_t v6 = v5;
  swift_bridgeObjectRelease();

  uint64_t v7 = swift_allocObject();
  swift_weakInit();
  sub_1C2147B10();
  uint64_t v8 = (int *)type metadata accessor for FieldItem();
  uint64_t v9 = (void *)(a1 + v8[5]);
  uint64_t v10 = (uint64_t *)(a1 + v8[6]);
  uint64_t v11 = a1 + v8[10];
  char v12 = (void *)(a1 + v8[14]);
  uint64_t v13 = (uint64_t *)(a1 + v8[15]);
  type metadata accessor for FieldCell();
  sub_1C20110AC(&qword_1EA2C7930, (void (*)(uint64_t))type metadata accessor for FieldCell);
  uint64_t result = sub_1C21481D0();
  *uint64_t v13 = result;
  v13[1] = v15;
  *uint64_t v9 = v18;
  v9[1] = v19;
  *uint64_t v10 = v17;
  v10[1] = v6;
  *(void *)(a1 + v8[7]) = 0x4046000000000000;
  *(void *)uint64_t v11 = 0;
  *(unsigned char *)(v11 + 8) = 1;
  *(unsigned char *)(a1 + v8[9]) = 1;
  *(unsigned char *)(a1 + v8[8]) = 1;
  *(void *)(a1 + v8[12]) = 0;
  *char v12 = 0;
  v12[1] = 0;
  uint64_t v16 = (uint64_t (**)())(a1 + v8[13]);
  char *v16 = sub_1C20116B8;
  v16[1] = (uint64_t (*)())v7;
  *(unsigned char *)(a1 + v8[11]) = 0;
  return result;
}

uint64_t sub_1C200F850()
{
  sub_1C2011430();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v16 = v1;
  uint64_t v17 = v2;
  MEMORY[0x1F4188790](v1);
  uint64_t v15 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2011518();
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = *(void *)(v0 + qword_1EA2C5420);
  uint64_t v9 = v19;
  sub_1C2011358();
  uint64_t v14 = v10;
  sub_1C20113F0();
  sub_1C20110AC(&qword_1EA2C5480, (void (*)(uint64_t))sub_1C2011358);
  swift_retain();
  sub_1C2149FD0();
  swift_release();
  swift_allocObject();
  swift_weakInit();
  sub_1C20110AC(&qword_1EA2C5490, (void (*)(uint64_t))sub_1C2011518);
  sub_1C214A0F0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_beginAccess();
  sub_1C2149E20();
  swift_endAccess();
  swift_release();
  uint64_t v18 = *(void *)(v0 + qword_1EA2C5418);
  uint64_t v19 = v9;
  sub_1C1F40AC8();
  sub_1C20110AC((unint64_t *)&qword_1EA2C3460, (void (*)(uint64_t))sub_1C1F40AC8);
  uint64_t v11 = v15;
  sub_1C214A010();
  swift_allocObject();
  swift_weakInit();
  sub_1C20110AC(&qword_1EA2C5498, (void (*)(uint64_t))sub_1C2011430);
  uint64_t v12 = v16;
  sub_1C214A0F0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v11, v12);
  swift_beginAccess();
  sub_1C2149E20();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1C200FC44()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = result;
    sub_1C201160C(0, (unint64_t *)&qword_1EBF0C958, (uint64_t (*)(uint64_t))sub_1C1F1CB5C, MEMORY[0x1E4FBBE00]);
    uint64_t v2 = swift_allocObject();
    *(_OWORD *)(v2 + 16) = xmmword_1C214FCD0;
    *(void *)(v2 + 56) = type metadata accessor for FieldItem();
    *(void *)(v2 + 64) = sub_1C20110AC(&qword_1EA2C5028, (void (*)(uint64_t))type metadata accessor for FieldItem);
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v2 + 32));
    sub_1C200F628((uint64_t)boxed_opaque_existential_1);
    sub_1C21485C0();
    swift_bridgeObjectRelease();
    swift_retain();
    unint64_t v4 = swift_bridgeObjectRetain();
    sub_1C20110F4(v4, v1);
    swift_bridgeObjectRelease();
    swift_release();
    sub_1C21485C0();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C200FDBC(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  unint64_t v2 = *(void *)(a1 + 16);
  if (*(void *)a1) {
    BOOL v3 = v2 == 0;
  }
  else {
    BOOL v3 = 1;
  }
  if (v3) {
    goto LABEL_6;
  }
  uint64_t v5 = HIBYTE(v2) & 0xF;
  if ((v2 & 0x2000000000000000) == 0) {
    uint64_t v5 = *(void *)(a1 + 8) & 0xFFFFFFFFFFFFLL;
  }
  if (!v5)
  {
LABEL_6:
    swift_beginAccess();
    uint64_t result = swift_weakLoadStrong();
    if (!result) {
      return result;
    }
    swift_retain();
    swift_release();
    sub_1C2149E70();
  }
  else
  {
    swift_beginAccess();
    uint64_t result = swift_weakLoadStrong();
    if (!result) {
      return result;
    }
    id v6 = v1;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_release();
    id v7 = v6;
    sub_1C2149E70();
    swift_bridgeObjectRelease();
  }
  return swift_release();
}

uint64_t sub_1C200FF0C()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    swift_retain();
    swift_release();
    swift_bridgeObjectRetain();
    sub_1C2149E70();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

unint64_t sub_1C200FFAC@<X0>(uint64_t *a1@<X8>)
{
  sub_1C201160C(0, (unint64_t *)&qword_1EA2C2FE8, MEMORY[0x1E4F664F8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v2 - 8);
  unint64_t v4 = (char *)&v14 - v3;
  uint64_t v5 = sub_1C2148540();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1C21485A0();
  unint64_t result = sub_1C2147D80();
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  if (result >= *(void *)(v9 + 16))
  {
LABEL_8:
    __break(1u);
    return result;
  }
  (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v8, v9+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(void *)(v6 + 72) * result, v5);
  swift_bridgeObjectRelease();
  sub_1C2148530();
  uint64_t v12 = v11;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  if (v12)
  {
    uint64_t v13 = sub_1C2148770();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v4, 1, 1, v13);
    a1[3] = sub_1C2148790();
    a1[4] = sub_1C20110AC((unint64_t *)&qword_1EA2C3000, MEMORY[0x1E4F66500]);
    __swift_allocate_boxed_opaque_existential_1(a1);
    return sub_1C2148780();
  }
  else
  {
    a1[3] = sub_1C2148220();
    a1[4] = sub_1C20110AC(&qword_1EA2C2D28, MEMORY[0x1E4F66330]);
    __swift_allocate_boxed_opaque_existential_1(a1);
    return sub_1C2148210();
  }
}

uint64_t sub_1C2010284@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v66 = a2;
  uint64_t v3 = sub_1C2148A70();
  uint64_t v64 = *(void *)(v3 - 8);
  uint64_t v65 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v63 = (char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C201160C(0, &qword_1EBF0C620, MEMORY[0x1E4FB0F28], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v62 = (char *)&v47 - v7;
  uint64_t v8 = sub_1C2148620();
  uint64_t v58 = *(void *)(v8 - 8);
  uint64_t v59 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v61 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1C2149860();
  uint64_t v56 = *(void *)(v10 - 8);
  uint64_t v57 = v10;
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C201160C(0, &qword_1EBF0C610, MEMORY[0x1E4FB0E38], v5);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v52 = (char *)&v47 - v14;
  uint64_t v55 = sub_1C2149890();
  uint64_t v54 = *(void *)(v55 - 8);
  MEMORY[0x1F4188790](v55);
  uint64_t v16 = (char *)&v47 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = sub_1C2149BE0();
  uint64_t v60 = *(void *)(v67 - 8);
  MEMORY[0x1F4188790](v67);
  uint64_t v18 = (char *)&v47 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2149B70();
  sub_1C2148E10();
  sub_1C2148E00();
  uint64_t v19 = (void *)sub_1C2148DB0();
  swift_release();
  id v20 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F67C98]), sel_initWithHealthStore_, v19);

  id v21 = objc_msgSend(v20, sel_localizedDisplayNameForUnit_value_nameContext_, a1, 0, 1);
  uint64_t v22 = sub_1C214A5F0();

  swift_bridgeObjectRetain();
  uint64_t v53 = v22;
  sub_1C2149B90();
  id v51 = self;
  id v23 = objc_msgSend(v51, sel_labelColor);
  unint64_t v24 = (void (*)(uint64_t *, void))sub_1C2149AA0();
  sub_1C2149A60();
  v24(&v71, 0);
  sub_1C2149E90();
  uint64_t v25 = (void *)v71;
  if (v71)
  {
    sub_1C20113F0();
    id v26 = a1;
    id v27 = v25;
    sub_1C214B220();
  }
  uint64_t v71 = 0x5F6D657469;
  unint64_t v72 = 0xE500000000000000;
  id v28 = objc_msgSend(a1, sel_unitString);
  sub_1C214A5F0();

  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  uint64_t v50 = v71;
  unint64_t v49 = v72;
  uint64_t v29 = v67;
  uint64_t v73 = v67;
  uint64_t v74 = MEMORY[0x1E4FB0F88];
  uint64_t v30 = __swift_allocate_boxed_opaque_existential_1(&v71);
  uint64_t v31 = v60;
  uint64_t v32 = *(void (**)(uint64_t *, char *, uint64_t))(v60 + 16);
  uint64_t v48 = v18;
  v32(v30, v18, v29);
  sub_1C201160C(0, (unint64_t *)&unk_1EBF0C990, MEMORY[0x1E4FB0E68], MEMORY[0x1E4FBBE00]);
  sub_1C2149930();
  uint64_t v47 = swift_allocObject();
  *(_OWORD *)(v47 + 16) = xmmword_1C214FCD0;
  uint64_t v33 = sub_1C2149870();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v52, 1, 1, v33);
  sub_1C2149880();
  uint64_t v35 = v56;
  uint64_t v34 = v57;
  (*(void (**)(char *, void, uint64_t))(v56 + 104))(v12, *MEMORY[0x1E4FB0E18], v57);
  sub_1C2149920();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v12, v34);
  (*(void (**)(char *, uint64_t))(v54 + 8))(v16, v55);
  uint64_t v36 = swift_allocObject();
  uint64_t v37 = v68;
  swift_weakInit();
  uint64_t v38 = swift_allocObject();
  *(void *)(v38 + 16) = v36;
  *(void *)(v38 + 24) = a1;
  uint64_t v39 = v61;
  *uint64_t v61 = 1;
  (*(void (**)(unsigned char *, void, uint64_t))(v58 + 104))(v39, *MEMORY[0x1E4F66478], v59);
  id v40 = a1;
  swift_retain();
  uint64_t v41 = v62;
  sub_1C21499A0();
  id v42 = objc_msgSend(v51, sel_secondarySystemBackgroundColor);
  sub_1C2149990();
  uint64_t v43 = sub_1C21499D0();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56))(v41, 0, 1, v43);
  uint64_t v45 = *(void *)(v37 + qword_1EA2C5410);
  unint64_t v44 = *(void *)(v37 + qword_1EA2C5410 + 8);
  uint64_t v69 = 0x6C654374696E552ELL;
  unint64_t v70 = 0xEA00000000002E6CLL;
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  uint64_t v69 = v45;
  unint64_t v70 = v44;
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, void, uint64_t))(v64 + 104))(v63, *MEMORY[0x1E4F66678], v65);
  sub_1C21487A0();
  (*(void (**)(char *, uint64_t))(v31 + 8))(v48, v67);
  return swift_release();
}

uint64_t sub_1C2010BB8(uint64_t a1, uint64_t a2, void *a3)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    swift_retain();
    swift_release();
    id v5 = a3;
    sub_1C2149E70();

    return swift_release();
  }
  return result;
}

void sub_1C2010C50()
{
}

uint64_t sub_1C2010C80()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1C2010D04()
{
  sub_1C2148610();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_1C2010DA8()
{
  return type metadata accessor for ManualStrengthDataSource();
}

uint64_t sub_1C2010DB0()
{
  return sub_1C214ACC0();
}

uint64_t sub_1C2010E88()
{
  return swift_retain();
}

unint64_t sub_1C2010E98@<X0>(uint64_t *a1@<X8>)
{
  return sub_1C200FFAC(a1);
}

uint64_t sub_1C2010EBC()
{
  uint64_t v0 = sub_1C2148710();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2148660();
  uint64_t v4 = sub_1C20F270C();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

uint64_t sub_1C2010F94()
{
  return sub_1C2148B80();
}

uint64_t sub_1C201100C()
{
  return sub_1C20110AC(&qword_1EA2C5440, (void (*)(uint64_t))type metadata accessor for ManualStrengthDataSource);
}

unint64_t sub_1C2011058()
{
  unint64_t result = qword_1EA2C5448;
  if (!qword_1EA2C5448)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C5448);
  }
  return result;
}

uint64_t sub_1C20110AC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C20110F4(unint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  v19[2] = a2;
  if (a1 >> 62) {
    goto LABEL_15;
  }
  uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v6 = MEMORY[0x1E4FBC860];
    if (!v5) {
      return v6;
    }
    uint64_t v23 = MEMORY[0x1E4FBC860];
    uint64_t result = sub_1C1F704CC(0, v5 & ~(v5 >> 63), 0);
    if (v5 < 0) {
      break;
    }
    v19[1] = v3;
    uint64_t v8 = 0;
    uint64_t v6 = v23;
    while (v5 != v8)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v9 = (id)MEMORY[0x1C8753960](v8, a1);
      }
      else {
        id v9 = *(id *)(a1 + 8 * v8 + 32);
      }
      uint64_t v10 = v9;
      uint64_t v21 = sub_1C21487B0();
      uint64_t v22 = sub_1C20110AC((unint64_t *)&qword_1EA2C2E68, MEMORY[0x1E4F66510]);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v20);
      sub_1C2010284(v10, (uint64_t)boxed_opaque_existential_1);

      uint64_t v23 = v6;
      unint64_t v13 = *(void *)(v6 + 16);
      unint64_t v12 = *(void *)(v6 + 24);
      if (v13 >= v12 >> 1) {
        sub_1C1F704CC(v12 > 1, v13 + 1, 1);
      }
      ++v8;
      uint64_t v14 = v21;
      uint64_t v15 = v22;
      uint64_t v16 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v20, v21);
      MEMORY[0x1F4188790](v16);
      uint64_t v3 = (char *)v19 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v18 + 16))(v3);
      sub_1C20A09B8(v13, (uint64_t)v3, &v23, v14, v15);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v20);
      uint64_t v6 = v23;
      if (v5 == v8) {
        return v6;
      }
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_1C214B930();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

void sub_1C2011358()
{
  if (!qword_1EA2C5460)
  {
    sub_1C201160C(255, &qword_1EA2C5468, (uint64_t (*)(uint64_t))sub_1C20113F0, MEMORY[0x1E4FBB718]);
    unint64_t v0 = sub_1C2149EA0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C5460);
    }
  }
}

unint64_t sub_1C20113F0()
{
  unint64_t result = qword_1EA2C5470;
  if (!qword_1EA2C5470)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA2C5470);
  }
  return result;
}

void sub_1C2011430()
{
  if (!qword_1EA2C5478)
  {
    sub_1C2011358();
    sub_1C1F40AC8();
    sub_1C20110AC(&qword_1EA2C5480, (void (*)(uint64_t))sub_1C2011358);
    sub_1C20110AC((unint64_t *)&qword_1EA2C3460, (void (*)(uint64_t))sub_1C1F40AC8);
    unint64_t v0 = sub_1C2149CA0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C5478);
    }
  }
}

void sub_1C2011518()
{
  if (!qword_1EA2C5488)
  {
    sub_1C2011358();
    sub_1C20113F0();
    sub_1C20110AC(&qword_1EA2C5480, (void (*)(uint64_t))sub_1C2011358);
    unint64_t v0 = sub_1C2149D00();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C5488);
    }
  }
}

uint64_t sub_1C20115C4()
{
  swift_weakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C20115FC()
{
  return sub_1C200FC44();
}

uint64_t sub_1C2011604(uint64_t a1)
{
  return sub_1C200FDBC(a1);
}

void sub_1C201160C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C2011670()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C20116B0(uint64_t a1)
{
  return sub_1C2010BB8(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_1C20116B8()
{
  return sub_1C200FF0C();
}

uint64_t sub_1C20116C0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t MedicationSideEffectsItemCell.item.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI29MedicationSideEffectsItemCell_item;
  swift_beginAccess();
  return sub_1C1F2116C(v3, a1);
}

uint64_t sub_1C201175C(uint64_t a1, void *a2)
{
  sub_1C1F2116C(a1, (uint64_t)v5);
  uint64_t v3 = *a2 + OBJC_IVAR____TtC19HealthMedicationsUI29MedicationSideEffectsItemCell_item;
  swift_beginAccess();
  sub_1C1F32DDC((uint64_t)v5, v3);
  swift_endAccess();
  sub_1C2011840();
  return sub_1C1F374E4((uint64_t)v5);
}

uint64_t MedicationSideEffectsItemCell.item.setter(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI29MedicationSideEffectsItemCell_item;
  swift_beginAccess();
  sub_1C1F32DDC(a1, v3);
  swift_endAccess();
  sub_1C2011840();
  return sub_1C1F374E4(a1);
}

void sub_1C2011840()
{
  uint64_t v1 = sub_1C21497F0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = (uint64_t)v0 + OBJC_IVAR____TtC19HealthMedicationsUI29MedicationSideEffectsItemCell_item;
  swift_beginAccess();
  sub_1C1F2116C(v5, (uint64_t)v25);
  if (!v25[3])
  {
    sub_1C1F374E4((uint64_t)v25);
LABEL_6:
    sub_1C21497A0();
    id v11 = v0;
    unint64_t v12 = sub_1C21497E0();
    os_log_type_t v13 = sub_1C214ABD0();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = swift_slowAlloc();
      uint64_t v23 = v1;
      uint64_t v15 = (uint8_t *)v14;
      uint64_t v16 = swift_slowAlloc();
      uint64_t v24 = v16;
      *(_DWORD *)uint64_t v15 = 136446210;
      sub_1C1F2116C(v5, (uint64_t)v25);
      sub_1C1F24488();
      uint64_t v17 = sub_1C214A630();
      v25[0] = sub_1C1F6FD54(v17, v18, &v24);
      sub_1C214B530();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C1F0B000, v12, v13, "Incorrect view model for MedicationSideEffectsItem: %{public}s", v15, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C8754730](v16, -1, -1);
      MEMORY[0x1C8754730](v15, -1, -1);

      (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v23);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    }
    return;
  }
  sub_1C1F1CB5C();
  type metadata accessor for MedicationSideEffectsItem();
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_6;
  }
  uint64_t v6 = v24;
  id v7 = sub_1C2011D40();
  swift_bridgeObjectRetain();
  unint64_t v8 = (void *)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  objc_msgSend(v7, sel_setText_, v8);

  id v9 = sub_1C2011E90();
  if (*(void *)(v6 + 56))
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = (void *)sub_1C214A5B0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v10 = 0;
  }
  objc_msgSend(v9, sel_setText_, v10);

  id v19 = sub_1C2011E90();
  if (*(void *)(v6 + 56)
    && (swift_bridgeObjectRetain(), sub_1C214A680(), uint64_t v21 = v20, swift_bridgeObjectRelease(), v21))
  {
    swift_bridgeObjectRelease();
    uint64_t v22 = 0;
  }
  else
  {
    uint64_t v22 = 1;
  }
  objc_msgSend(v19, sel_setHidden_, v22);
  swift_release();
}

void (*MedicationSideEffectsItemCell.item.modify(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1C2011C34;
}

void sub_1C2011C34(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    sub_1C2011840();
  }
}

id sub_1C2011C68()
{
  uint64_t v1 = OBJC_IVAR____TtC19HealthMedicationsUI29MedicationSideEffectsItemCell____lazy_storage___stackView;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI29MedicationSideEffectsItemCell____lazy_storage___stackView);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI29MedicationSideEffectsItemCell____lazy_storage___stackView);
  }
  else
  {
    id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1C60]), sel_init);
    objc_msgSend(v4, sel_setAxis_, 1);
    objc_msgSend(v4, sel_setAlignment_, 1);
    objc_msgSend(v4, sel_setDistribution_, 0);
    objc_msgSend(v4, sel_setSpacing_, 16.0);
    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_1C2011D40()
{
  uint64_t v1 = OBJC_IVAR____TtC19HealthMedicationsUI29MedicationSideEffectsItemCell____lazy_storage___primaryLabel;
  uint64_t v2 = *(void **)(v0
                + OBJC_IVAR____TtC19HealthMedicationsUI29MedicationSideEffectsItemCell____lazy_storage___primaryLabel);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI29MedicationSideEffectsItemCell____lazy_storage___primaryLabel);
  }
  else
  {
    uint64_t v4 = v0;
    id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
    sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8E0);
    id v6 = (void *)sub_1C214B0A0();
    objc_msgSend(v5, sel_setFont_, v6);

    objc_msgSend(v5, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    objc_msgSend(v5, sel_setNumberOfLines_, 0);
    id v3 = v5;
    id v7 = (void *)sub_1C214A770();
    id v8 = (id)HKUIJoinStringsForAutomationIdentifier();

    objc_msgSend(v3, sel_setAccessibilityIdentifier_, v8);
    id v9 = *(void **)(v4 + v1);
    *(void *)(v4 + v1) = v3;

    uint64_t v2 = 0;
  }
  id v10 = v2;
  return v3;
}

id sub_1C2011E90()
{
  uint64_t v1 = OBJC_IVAR____TtC19HealthMedicationsUI29MedicationSideEffectsItemCell____lazy_storage___attributionLabel;
  uint64_t v2 = *(void **)(v0
                + OBJC_IVAR____TtC19HealthMedicationsUI29MedicationSideEffectsItemCell____lazy_storage___attributionLabel);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC19HealthMedicationsUI29MedicationSideEffectsItemCell____lazy_storage___attributionLabel);
  }
  else
  {
    uint64_t v4 = v0;
    id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
    sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8E0);
    id v6 = (void *)sub_1C214B0A0();
    objc_msgSend(v5, sel_setFont_, v6);

    id v7 = objc_msgSend(self, sel_secondaryLabelColor);
    objc_msgSend(v5, sel_setTextColor_, v7);

    objc_msgSend(v5, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    objc_msgSend(v5, sel_setNumberOfLines_, 0);
    id v3 = v5;
    id v8 = (void *)sub_1C214A770();
    id v9 = (id)HKUIJoinStringsForAutomationIdentifier();

    objc_msgSend(v3, sel_setAccessibilityIdentifier_, v9);
    id v10 = *(void **)(v4 + v1);
    *(void *)(v4 + v1) = v3;

    uint64_t v2 = 0;
  }
  id v11 = v2;
  return v3;
}

id sub_1C201201C(double a1, double a2, double a3, double a4)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v10 = sub_1C2149BE0();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  os_log_type_t v13 = (char *)v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = &v4[OBJC_IVAR____TtC19HealthMedicationsUI29MedicationSideEffectsItemCell_item];
  *(_OWORD *)uint64_t v14 = 0u;
  *((_OWORD *)v14 + 1) = 0u;
  *((void *)v14 + 4) = 0;
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI29MedicationSideEffectsItemCell____lazy_storage___stackView] = 0;
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI29MedicationSideEffectsItemCell____lazy_storage___primaryLabel] = 0;
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI29MedicationSideEffectsItemCell____lazy_storage___attributionLabel] = 0;
  v47.receiver = v4;
  v47.super_class = ObjectType;
  id v15 = objc_msgSendSuper2(&v47, sel_initWithFrame_, a1, a2, a3, a4);
  objc_msgSend(v15, sel_setUserInteractionEnabled_, 0);
  id v16 = sub_1C2011C68();
  id v17 = sub_1C2011D40();
  objc_msgSend(v16, sel_addArrangedSubview_, v17);

  id v18 = sub_1C2011C68();
  id v19 = sub_1C2011E90();
  objc_msgSend(v18, sel_addArrangedSubview_, v19);

  id v20 = objc_msgSend(v15, sel_contentView);
  id v21 = sub_1C2011C68();
  objc_msgSend(v20, sel_addSubview_, v21);

  sub_1C2149B70();
  sub_1C2149B20();
  double v23 = v22;
  double v25 = v24;
  double v27 = v26;
  double v29 = v28;
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  id v30 = sub_1C2011C68();
  id v31 = objc_msgSend(v15, sel_contentView);
  objc_msgSend(v30, sel_hk_alignHorizontalConstraintsWithView_insets_, v31, v23, v25, v27, v29);

  uint64_t v32 = self;
  sub_1C1F0ED28();
  uint64_t v33 = swift_allocObject();
  *(_OWORD *)(v33 + 16) = xmmword_1C214FCB0;
  id v34 = sub_1C2011C68();
  id v35 = objc_msgSend(v34, sel_topAnchor);

  id v36 = objc_msgSend(v15, sel_contentView);
  id v37 = objc_msgSend(v36, sel_topAnchor);

  id v38 = objc_msgSend(v35, sel_constraintEqualToAnchor_constant_, v37, 16.0);
  *(void *)(v33 + 32) = v38;
  id v39 = sub_1C2011C68();
  id v40 = objc_msgSend(v39, sel_bottomAnchor);

  id v41 = objc_msgSend(v15, sel_contentView);
  id v42 = objc_msgSend(v41, sel_bottomAnchor);

  id v43 = objc_msgSend(v40, sel_constraintEqualToAnchor_constant_, v42, -16.0);
  *(void *)(v33 + 40) = v43;
  v46[1] = v33;
  sub_1C214A7A0();
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C810);
  unint64_t v44 = (void *)sub_1C214A770();
  swift_bridgeObjectRelease();
  objc_msgSend(v32, sel_activateConstraints_, v44);

  return v15;
}

id MedicationSideEffectsItemCell.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1C20125B4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI29MedicationSideEffectsItemCell_item;
  swift_beginAccess();
  return sub_1C1F2116C(v3, a1);
}

uint64_t sub_1C2012608(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI29MedicationSideEffectsItemCell_item;
  swift_beginAccess();
  sub_1C1F32DDC(a1, v3);
  swift_endAccess();
  sub_1C2011840();
  return sub_1C1F374E4(a1);
}

void (*sub_1C2012678(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1C2011C34;
}

uint64_t sub_1C20126D8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC19HealthMedicationsUI29MedicationSideEffectsItemCell_item;
  swift_beginAccess();
  return sub_1C1F2116C(v3, a2);
}

uint64_t type metadata accessor for MedicationSideEffectsItem()
{
  return self;
}

uint64_t type metadata accessor for MedicationSideEffectsItemCell()
{
  return self;
}

ValueMetadata *type metadata accessor for MedicationSideEffectsItemCell.Constants()
{
  return &type metadata for MedicationSideEffectsItemCell.Constants;
}

uint64_t sub_1C201278C(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  uint64_t v4 = (void *)(*a2 + qword_1EA2C54C0);
  swift_beginAccess();
  *uint64_t v4 = v3;
  v4[1] = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C20127F8()
{
  uint64_t v1 = (uint64_t *)(v0 + qword_1EA2C54C0);
  swift_beginAccess();
  uint64_t v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1C2012850(uint64_t a1, uint64_t a2)
{
  id v5 = (void *)(v2 + qword_1EA2C54C0);
  swift_beginAccess();
  *id v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1C20128B0())()
{
  return j__swift_endAccess;
}

id InteractionFactorsViewController.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return InteractionFactorsViewController.init()();
}

id InteractionFactorsViewController.init()()
{
  id v1 = (uint64_t *)&v0[qword_1EA2C54C0];
  uint64_t v7 = sub_1C214A5F0();
  uint64_t v8 = v2;
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  uint64_t v3 = v8;
  uint64_t v4 = v0;
  swift_bridgeObjectRelease();
  uint64_t *v1 = v7;
  v1[1] = v3;

  v6.receiver = v4;
  v6.super_class = (Class)type metadata accessor for InteractionFactorsViewController();
  return objc_msgSendSuper2(&v6, sel_initWithCollectionViewLayout_, 0);
}

uint64_t type metadata accessor for InteractionFactorsViewController()
{
  uint64_t result = qword_1EA2C54D0;
  if (!qword_1EA2C54D0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1C2012A44(char *a1, uint64_t a2, void *a3)
{
  id v5 = (uint64_t *)&a1[qword_1EA2C54C0];
  uint64_t v8 = sub_1C214A5F0();
  uint64_t v9 = v6;
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  id v7 = a3;
  swift_bridgeObjectRelease();
  *id v5 = v8;
  v5[1] = v9;

  sub_1C214B910();
  __break(1u);
}

uint64_t sub_1C2012B1C()
{
  uint64_t v1 = type metadata accessor for InteractionFactorsDataSourceProvider();
  uint64_t v2 = swift_allocObject();
  uint64_t v10 = v1;
  uint64_t v11 = sub_1C20138DC(&qword_1EA2C54C8, (void (*)(uint64_t))type metadata accessor for InteractionFactorsDataSourceProvider);
  uint64_t v9 = v2;
  sub_1C2148AF0();
  id v3 = objc_msgSend(v0, sel_navigationItem);
  id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB14A8]), sel_initWithBarButtonSystemItem_target_action_, 1, v0, sel_cancelButtonTapped_);
  objc_msgSend(v3, sel_setLeftBarButtonItem_, v4);

  id v5 = objc_msgSend(v0, sel_navigationItem);
  id v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB14A8]), sel_initWithBarButtonSystemItem_target_action_, 0, v0, sel_doneButtonTapped_);
  objc_msgSend(v5, sel_setRightBarButtonItem_, v6);

  v8.receiver = v0;
  v8.super_class = (Class)type metadata accessor for InteractionFactorsViewController();
  objc_msgSendSuper2(&v8, sel_viewDidLoad);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_1C2012D1C();
  return swift_bridgeObjectRelease();
}

void sub_1C2012CD4(void *a1)
{
  id v1 = a1;
  sub_1C2012B1C();
}

void sub_1C2012D1C()
{
  id v1 = v0;
  id v2 = objc_msgSend(v0, sel_navigationItem);
  id v3 = objc_msgSend(v2, sel_leftBarButtonItem);

  if (v3)
  {
    swift_bridgeObjectRetain();
    sub_1C214A6C0();
    id v4 = (void *)sub_1C214A5B0();
    swift_bridgeObjectRelease();
    objc_msgSend(v3, sel_setAccessibilityIdentifier_, v4);
  }
  id v5 = objc_msgSend(v1, sel_navigationItem);
  id v6 = objc_msgSend(v5, sel_rightBarButtonItem);

  if (v6)
  {
    swift_bridgeObjectRetain();
    sub_1C214A6C0();
    id v7 = (id)sub_1C214A5B0();
    swift_bridgeObjectRelease();
    objc_msgSend(v6, sel_setAccessibilityIdentifier_, v7);
  }
}

uint64_t sub_1C2012ECC(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5 = sub_1C2147D90();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  objc_super v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2147D50();
  id v9 = a3;
  id v10 = a1;
  sub_1C1F4EE40(v9);

  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1C2012FC8(void *a1)
{
  swift_unknownObjectRetain();
  id v2 = a1;
  sub_1C214B5A0();
  swift_unknownObjectRelease();
  objc_msgSend(v2, sel_dismissViewControllerAnimated_completion_, 1, 0);

  return __swift_destroy_boxed_opaque_existential_0((uint64_t)&v4);
}

id sub_1C201303C()
{
  uint64_t v1 = sub_1C214A3F0();
  uint64_t v18 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  id v3 = (char *)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1C214A420();
  uint64_t v4 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1C214A400();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  id v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0CB10);
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E4FBCB28], v7);
  uint64_t v11 = (void *)sub_1C214ADB0();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v0;
  aBlock[4] = sub_1C20138D4;
  aBlock[5] = v12;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C1F0E42C;
  void aBlock[3] = &block_descriptor_15;
  os_log_type_t v13 = _Block_copy(aBlock);
  id v14 = v0;
  sub_1C214A410();
  uint64_t v19 = MEMORY[0x1E4FBC860];
  sub_1C20138DC((unint64_t *)&qword_1EBF0CAE0, MEMORY[0x1E4FBCB00]);
  sub_1C1F209B4();
  sub_1C20138DC((unint64_t *)&qword_1EBF0CB00, (void (*)(uint64_t))sub_1C1F209B4);
  sub_1C214B640();
  MEMORY[0x1C8752F10](0, v6, v3, v13);
  _Block_release(v13);

  (*(void (**)(char *, uint64_t))(v18 + 8))(v3, v1);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v17);
  swift_release();
  return objc_msgSend(v14, sel_dismissViewControllerAnimated_completion_, 1, 0);
}

uint64_t sub_1C20133FC()
{
  sub_1C2148AB0();
  uint64_t v0 = sub_1C2148810();
  swift_release();
  uint64_t v1 = *(void *)(v0 + 16);
  if (v1)
  {
    uint64_t v2 = v0 + 32;
    type metadata accessor for InteractionFactorsLifestyleOptionsDataSource();
    do
    {
      if (swift_dynamicCastClass())
      {
        swift_unknownObjectRetain();
        sub_1C1FC46DC();
        swift_unknownObjectRelease();
      }
      v2 += 16;
      --v1;
    }
    while (v1);
  }

  return swift_bridgeObjectRelease();
}

uint64_t sub_1C20134B0(void *a1)
{
  swift_unknownObjectRetain();
  id v2 = a1;
  sub_1C214B5A0();
  swift_unknownObjectRelease();
  sub_1C201303C();

  return __swift_destroy_boxed_opaque_existential_0((uint64_t)&v4);
}

void InteractionFactorsViewController.__allocating_init(dataSource:)()
{
}

void InteractionFactorsViewController.init(dataSource:)()
{
}

id InteractionFactorsViewController.__allocating_init(collectionViewLayout:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCollectionViewLayout_, a1);

  return v3;
}

void InteractionFactorsViewController.init(collectionViewLayout:)()
{
}

void sub_1C20135E4(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = a3;
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1C2013618()
{
  return swift_bridgeObjectRelease();
}

id InteractionFactorsViewController.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for InteractionFactorsViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1C2013664@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  id v3 = (void *)(*a1 + qword_1EA2C54C0);
  swift_beginAccess();
  uint64_t v4 = v3[1];
  *a2 = *v3;
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C20136C0()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for InteractionFactorsViewController(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for InteractionFactorsViewController);
}

uint64_t dispatch thunk of InteractionFactorsViewController.baseIdentifier.getter()
{
  return (*(uint64_t (**)(void))(class metadata base offset for InteractionFactorsViewController
                              + (*MEMORY[0x1E4FBC8C8] & *v0)
                              + 8))();
}

uint64_t dispatch thunk of InteractionFactorsViewController.baseIdentifier.setter()
{
  return (*(uint64_t (**)(void))(class metadata base offset for InteractionFactorsViewController
                              + (*MEMORY[0x1E4FBC8C8] & *v0)
                              + 16))();
}

uint64_t dispatch thunk of InteractionFactorsViewController.baseIdentifier.modify()
{
  return (*(uint64_t (**)(void))(class metadata base offset for InteractionFactorsViewController
                              + (*MEMORY[0x1E4FBC8C8] & *v0)
                              + 24))();
}

uint64_t dispatch thunk of InteractionFactorsViewController.__allocating_init()()
{
  return (*(uint64_t (**)(void))(class metadata base offset for InteractionFactorsViewController + v0 + 32))();
}

uint64_t dispatch thunk of InteractionFactorsViewController.updateAutomationIdentifiers(with:)()
{
  return (*(uint64_t (**)(void))(class metadata base offset for InteractionFactorsViewController
                              + (*MEMORY[0x1E4FBC8C8] & *v0)
                              + 40))();
}

uint64_t sub_1C2013880()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C2013894()
{
  return type metadata accessor for InteractionFactorsViewController();
}

uint64_t sub_1C201389C()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C20138D4()
{
  return sub_1C20133FC();
}

uint64_t sub_1C20138DC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t Collection<>.loggedDoseEvents.getter(uint64_t a1)
{
  MEMORY[0x1F4188790](a1);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v1, a1);
  return sub_1C214A740();
}

BOOL sub_1C2013A0C()
{
  uint64_t v0 = (void *)sub_1C2148F90();
  id v1 = objc_msgSend(v0, sel_status);

  if (v1 == (id)4) {
    return 1;
  }
  uint64_t v3 = (void *)sub_1C2148F90();
  id v4 = objc_msgSend(v3, sel_status);

  return v4 == (id)5;
}

uint64_t sub_1C2013A90@<X0>(void *a1@<X8>)
{
  uint64_t v41 = sub_1C2149200();
  uint64_t v3 = *(void *)(v41 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v41);
  id v40 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  id v39 = (char *)&v32 - v6;
  uint64_t v7 = sub_1C2149070();
  int64_t v8 = *(void *)(v7 + 16);
  if (v8)
  {
    uint64_t v33 = a1;
    uint64_t v34 = v1;
    uint64_t v44 = MEMORY[0x1E4FBC860];
    sub_1C1F7074C(0, v8, 0);
    id v10 = *(void (**)(char *, char *, uint64_t))(v3 + 16);
    uint64_t v9 = v3 + 16;
    uint64_t v11 = *(unsigned __int8 *)(v9 + 64);
    uint64_t v32 = v7;
    uint64_t v12 = v7 + ((v11 + 32) & ~v11);
    uint64_t v36 = *(void *)(v9 + 56);
    id v37 = v10;
    id v35 = (void (**)(char *, uint64_t))(v9 - 8);
    uint64_t v38 = v9;
    id v14 = v39;
    os_log_type_t v13 = v40;
    do
    {
      uint64_t v15 = v41;
      uint64_t v16 = v37;
      v37(v14, (char *)v12, v41);
      v16(v13, v14, v15);
      uint64_t v17 = (void *)sub_1C21491F0();
      id v18 = objc_msgSend(v17, sel_semanticIdentifier, v32);

      id v19 = objc_msgSend(v18, sel_stringValue);
      uint64_t v20 = sub_1C214A5F0();
      uint64_t v42 = v21;
      uint64_t v43 = v20;

      uint64_t v22 = sub_1C21491D0();
      uint64_t v24 = v23;
      double v25 = *v35;
      (*v35)(v13, v15);
      v25(v14, v15);
      uint64_t v26 = v44;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C1F7074C(0, *(void *)(v26 + 16) + 1, 1);
        uint64_t v26 = v44;
      }
      unint64_t v28 = *(void *)(v26 + 16);
      unint64_t v27 = *(void *)(v26 + 24);
      if (v28 >= v27 >> 1)
      {
        sub_1C1F7074C(v27 > 1, v28 + 1, 1);
        uint64_t v26 = v44;
      }
      *(void *)(v26 + 16) = v28 + 1;
      double v29 = (void *)(v26 + 32 * v28);
      uint64_t v30 = v42;
      v29[4] = v43;
      void v29[5] = v30;
      v29[6] = v22;
      v29[7] = v24;
      v12 += v36;
      --v8;
    }
    while (v8);
    uint64_t result = swift_bridgeObjectRelease();
    a1 = v33;
  }
  else
  {
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v26 = MEMORY[0x1E4FBC860];
  }
  *a1 = v26;
  return result;
}

unint64_t sub_1C2013D6C()
{
  return 0xD000000000000013;
}

uint64_t sub_1C2013DF8()
{
  return sub_1C214BB80();
}

uint64_t sub_1C2013EB8()
{
  sub_1C2147B20();
  sub_1C20166EC((unint64_t *)&unk_1EA2C30A0, MEMORY[0x1E4F27990]);
  sub_1C214A560();
  sub_1C20B7378();
  sub_1C214A690();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1C2013F6C()
{
  return sub_1C214BB80();
}

id sub_1C201402C()
{
  uint64_t v1 = OBJC_IVAR____TtC19HealthMedicationsUI28MedicationLogDetailsTimeCell____lazy_storage___timeView;
  objc_super v2 = *(void **)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI28MedicationLogDetailsTimeCell____lazy_storage___timeView);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI28MedicationLogDetailsTimeCell____lazy_storage___timeView);
  }
  else
  {
    type metadata accessor for MedicationLogDetailsTimeView(0);
    id v4 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    objc_super v2 = 0;
  }
  id v6 = v2;
  return v3;
}

uint64_t sub_1C20140B8()
{
  uint64_t v1 = sub_1C21497F0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  id v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1F17368(0, &qword_1EA2C5538, (void (*)(uint64_t))type metadata accessor for MedicationLogDetailsTimeItem);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v24 - v6;
  uint64_t v8 = type metadata accessor for MedicationLogDetailsTimeItem(0);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (uint64_t)v0 + OBJC_IVAR____TtC19HealthMedicationsUI28MedicationLogDetailsTimeCell_item;
  swift_beginAccess();
  sub_1C2015F48(v12, (uint64_t)v28, (unint64_t *)&qword_1EBF0C300, (void (*)(uint64_t))sub_1C1F1CB5C);
  if (v28[3])
  {
    sub_1C1F1CB5C();
    int v13 = swift_dynamicCast();
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v7, v13 ^ 1u, 1, v8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) != 1)
    {
      sub_1C2015E88((uint64_t)v7, (uint64_t)v11);
      id v14 = (char *)sub_1C201402C();
      *(void *)&v14[OBJC_IVAR____TtC19HealthMedicationsUI28MedicationLogDetailsTimeView_viewModel] = *(void *)&v11[*(int *)(v8 + 20)];
      swift_retain_n();
      swift_release();
      sub_1C2014E24();

      swift_release();
      return sub_1C2015EEC((uint64_t)v11);
    }
  }
  else
  {
    sub_1C2015FB4((uint64_t)v28, (unint64_t *)&qword_1EBF0C300, (void (*)(uint64_t))sub_1C1F1CB5C);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
  }
  sub_1C2015FB4((uint64_t)v7, &qword_1EA2C5538, (void (*)(uint64_t))type metadata accessor for MedicationLogDetailsTimeItem);
  sub_1C21497A0();
  id v16 = v0;
  uint64_t v17 = sub_1C21497E0();
  os_log_type_t v18 = sub_1C214ABD0();
  if (os_log_type_enabled(v17, v18))
  {
    id v19 = (uint8_t *)swift_slowAlloc();
    uint64_t v20 = swift_slowAlloc();
    uint64_t v26 = v1;
    uint64_t v27 = v20;
    uint64_t v21 = v20;
    uint64_t v25 = v2;
    *(_DWORD *)id v19 = 136315138;
    uint64_t v24 = v19 + 4;
    sub_1C2015F48(v12, (uint64_t)v28, (unint64_t *)&qword_1EBF0C300, (void (*)(uint64_t))sub_1C1F1CB5C);
    sub_1C1F17368(0, (unint64_t *)&qword_1EBF0C300, (void (*)(uint64_t))sub_1C1F1CB5C);
    uint64_t v22 = sub_1C214A630();
    v28[0] = sub_1C1F6FD54(v22, v23, &v27);
    sub_1C214B530();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C1F0B000, v17, v18, "Incorrect view model for MedicationLogDetailsTimeItem: %s", v19, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C8754730](v21, -1, -1);
    MEMORY[0x1C8754730](v19, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v4, v26);
  }
  else
  {

    return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
}

id sub_1C2014564(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = sub_1C2149BE0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI28MedicationLogDetailsTimeCell____lazy_storage___timeView] = 0;
  int v13 = &v4[OBJC_IVAR____TtC19HealthMedicationsUI28MedicationLogDetailsTimeCell_item];
  id v14 = (objc_class *)type metadata accessor for MedicationLogDetailsTimeCell();
  *(_OWORD *)int v13 = 0u;
  *((_OWORD *)v13 + 1) = 0u;
  *((void *)v13 + 4) = 0;
  v30.receiver = v4;
  v30.super_class = v14;
  id v15 = objc_msgSendSuper2(&v30, sel_initWithFrame_, a1, a2, a3, a4);
  id v16 = sub_1C201402C();
  objc_msgSend(v16, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);

  id v17 = objc_msgSend(v15, sel_contentView);
  id v18 = sub_1C201402C();
  objc_msgSend(v17, sel_addSubview_, v18);

  sub_1C2149B70();
  sub_1C2149B20();
  double v20 = v19;
  double v22 = v21;
  double v24 = v23;
  double v26 = v25;
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  id v27 = sub_1C201402C();
  id v28 = objc_msgSend(v15, sel_contentView);
  objc_msgSend(v27, sel_hk_alignConstraintsWithView_insets_, v28, v20, v22, v24, v26);

  return v15;
}

id sub_1C2014834(uint64_t a1)
{
  return sub_1C2015C78(a1, type metadata accessor for MedicationLogDetailsTimeCell);
}

uint64_t type metadata accessor for MedicationLogDetailsTimeCell()
{
  return self;
}

uint64_t sub_1C20148CC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI28MedicationLogDetailsTimeCell_item;
  swift_beginAccess();
  return sub_1C2015F48(v3, a1, (unint64_t *)&qword_1EBF0C300, (void (*)(uint64_t))sub_1C1F1CB5C);
}

uint64_t sub_1C201493C(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI28MedicationLogDetailsTimeCell_item;
  swift_beginAccess();
  sub_1C2016010(a1, v3, (unint64_t *)&qword_1EBF0C300, (void (*)(uint64_t))sub_1C1F1CB5C);
  swift_endAccess();
  sub_1C20140B8();
  return sub_1C2015FB4(a1, (unint64_t *)&qword_1EBF0C300, (void (*)(uint64_t))sub_1C1F1CB5C);
}

uint64_t (*sub_1C20149E0(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1C2014A40;
}

uint64_t sub_1C2014A40(uint64_t a1, char a2)
{
  uint64_t result = swift_endAccess();
  if ((a2 & 1) == 0) {
    return sub_1C20140B8();
  }
  return result;
}

uint64_t sub_1C2014A74()
{
  return sub_1C2148480();
}

id sub_1C2014AE8()
{
  uint64_t v1 = OBJC_IVAR____TtC19HealthMedicationsUI28MedicationLogDetailsTimeView____lazy_storage___timeFormatter;
  uint64_t v2 = *(void **)(v0
                + OBJC_IVAR____TtC19HealthMedicationsUI28MedicationLogDetailsTimeView____lazy_storage___timeFormatter);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI28MedicationLogDetailsTimeView____lazy_storage___timeFormatter);
  }
  else
  {
    id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28C10]), sel_init);
    objc_msgSend(v4, sel_setDateStyle_, 0);
    objc_msgSend(v4, sel_setTimeStyle_, 1);
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

uint64_t sub_1C2014B84(uint64_t a1)
{
  id v3 = (void (*)(uint64_t))MEMORY[0x1E4F27928];
  sub_1C1F17368(0, &qword_1EBF0B1F0, MEMORY[0x1E4F27928]);
  MEMORY[0x1F4188790](v4 - 8);
  id v6 = (char *)&v17 - v5;
  uint64_t v7 = sub_1C2147AC0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI28MedicationLogDetailsTimeView_logDate;
  swift_beginAccess();
  sub_1C2016010(a1, v11, &qword_1EBF0B1F0, v3);
  swift_endAccess();
  sub_1C2015F48(v11, (uint64_t)v6, &qword_1EBF0B1F0, v3);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_1C2015FB4((uint64_t)v6, &qword_1EBF0B1F0, MEMORY[0x1E4F27928]);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
    id v12 = sub_1C2015344();
    id v13 = sub_1C2014AE8();
    id v14 = (void *)sub_1C2147A00();
    id v15 = objc_msgSend(v13, sel_stringFromDate_, v14);

    if (!v15)
    {
      sub_1C214A5F0();
      id v15 = (id)sub_1C214A5B0();
      swift_bridgeObjectRelease();
    }
    objc_msgSend(v12, sel_setText_, v15);

    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  return sub_1C2015FB4(a1, &qword_1EBF0B1F0, MEMORY[0x1E4F27928]);
}

uint64_t sub_1C2014E24()
{
  sub_1C1F17368(0, &qword_1EBF0B1F0, MEMORY[0x1E4F27928]);
  uint64_t v2 = MEMORY[0x1F4188790](v1 - 8);
  uint64_t v4 = &v16[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t result = MEMORY[0x1F4188790](v2);
  uint64_t v7 = &v16[-v6];
  uint64_t v8 = *(void *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI28MedicationLogDetailsTimeView_viewModel);
  if (v8)
  {
    swift_retain();
    id v9 = sub_1C2015150();
    if (qword_1EBF0CA00 != -1) {
      swift_once();
    }
    id v10 = (id)qword_1EBF0CA18;
    swift_bridgeObjectRetain();
    sub_1C2147730();
    swift_bridgeObjectRelease();

    uint64_t v11 = (void *)sub_1C214A5B0();
    swift_bridgeObjectRelease();
    objc_msgSend(v9, sel_setText_, v11);

    uint64_t v12 = v0 + OBJC_IVAR____TtC19HealthMedicationsUI28MedicationLogDetailsTimeView_logDate;
    swift_beginAccess();
    sub_1C2015F48(v12, (uint64_t)v7, &qword_1EBF0B1F0, MEMORY[0x1E4F27928]);
    uint64_t v13 = sub_1C2147AC0();
    uint64_t v14 = *(void *)(v13 - 8);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v14 + 48))(v7, 1, v13) == 1)
    {
      sub_1C2015FB4((uint64_t)v7, &qword_1EBF0B1F0, MEMORY[0x1E4F27928]);
      uint64_t v15 = v8 + OBJC_IVAR____TtC19HealthMedicationsUI27MedicationsDoseLogViewModel_logDate;
      swift_beginAccess();
      (*(void (**)(unsigned char *, uint64_t, uint64_t))(v14 + 16))(v4, v15, v13);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v14 + 56))(v4, 0, 1, v13);
      sub_1C2014B84((uint64_t)v4);
      return swift_release();
    }
    else
    {
      swift_release();
      return sub_1C2015FB4((uint64_t)v7, &qword_1EBF0B1F0, MEMORY[0x1E4F27928]);
    }
  }
  return result;
}

id sub_1C2015150()
{
  return sub_1C2015364(&OBJC_IVAR____TtC19HealthMedicationsUI28MedicationLogDetailsTimeView____lazy_storage___titleLabel, (uint64_t (*)(void))sub_1C2015170);
}

id sub_1C2015170()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v0, sel_setAdjustsFontForContentSizeCategory_, 1);
  objc_msgSend(v0, sel_setNumberOfLines_, 0);
  id v1 = objc_msgSend(self, sel_labelColor);
  objc_msgSend(v0, sel_setTextColor_, v1);

  objc_msgSend(v0, sel_setNumberOfLines_, 1);
  uint64_t v7 = sub_1C214A5F0();
  uint64_t v8 = v2;
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  id v3 = v0;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  uint64_t v4 = (void *)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setAccessibilityIdentifier_, v4, v7, v8);

  id v5 = objc_msgSend(self, sel_preferredFontForTextStyle_, *MEMORY[0x1E4FB28C8]);
  objc_msgSend(v3, sel_setFont_, v5);

  return v3;
}

id sub_1C2015344()
{
  return sub_1C2015364(&OBJC_IVAR____TtC19HealthMedicationsUI28MedicationLogDetailsTimeView____lazy_storage___logTimeLabel, (uint64_t (*)(void))sub_1C20153C4);
}

id sub_1C2015364(uint64_t *a1, uint64_t (*a2)(void))
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(void **)(v2 + *a1);
  if (v4)
  {
    id v5 = *(id *)(v2 + *a1);
  }
  else
  {
    uint64_t v6 = (void *)a2();
    uint64_t v7 = *(void **)(v2 + v3);
    *(void *)(v2 + v3) = v6;
    id v5 = v6;

    uint64_t v4 = 0;
  }
  id v8 = v4;
  return v5;
}

id sub_1C20153C4()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v0, sel_setAdjustsFontForContentSizeCategory_, 1);
  objc_msgSend(v0, sel_setNumberOfLines_, 0);
  id v1 = self;
  id v2 = objc_msgSend(v1, sel_labelColor);
  objc_msgSend(v0, sel_setTextColor_, v2);

  sub_1C1F12718(0, (unint64_t *)&unk_1EA2C5540);
  objc_msgSend(v0, sel_setTextAlignment_, 2 * (MEMORY[0x1C8752D20]() != 1));
  uint64_t v9 = sub_1C214A5F0();
  uint64_t v10 = v3;
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  id v4 = v0;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  id v5 = (void *)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_setAccessibilityIdentifier_, v5, v9, v10);

  id v6 = objc_msgSend(self, sel_preferredFontForTextStyle_, *MEMORY[0x1E4FB28C8]);
  objc_msgSend(v4, sel_setFont_, v6);

  objc_msgSend(v4, sel_setAdjustsFontForContentSizeCategory_, 1);
  id v7 = objc_msgSend(v1, sel_systemBlueColor);
  objc_msgSend(v4, sel_setTextColor_, v7);

  return v4;
}

void sub_1C201561C()
{
  id v1 = v0;
  sub_1C1F0ED28();
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1C214FCB0;
  *(void *)(v2 + 32) = sub_1C2015150();
  *(void *)(v2 + 40) = sub_1C2015344();
  sub_1C214A7A0();
  id v3 = objc_allocWithZone(MEMORY[0x1E4FB1C60]);
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8F0);
  id v4 = (void *)sub_1C214A770();
  swift_bridgeObjectRelease();
  id v5 = objc_msgSend(v3, sel_initWithArrangedSubviews_, v4);

  objc_msgSend(v5, sel_setAxis_, 0);
  objc_msgSend(v5, sel_setAlignment_, 3);
  objc_msgSend(v5, sel_setDistribution_, 0);
  objc_msgSend(v5, sel_setSpacing_, 0.0);
  objc_msgSend(v1, sel_addSubview_, v5);
  objc_msgSend(v5, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  id v6 = objc_msgSend(v5, sel_topAnchor);
  id v7 = objc_msgSend(v1, sel_topAnchor);
  id v8 = objc_msgSend(v6, sel_constraintEqualToAnchor_, v7);

  objc_msgSend(v8, sel_setActive_, 1);
  id v9 = objc_msgSend(v5, sel_leadingAnchor);
  id v10 = objc_msgSend(v1, sel_leadingAnchor);
  id v11 = objc_msgSend(v9, sel_constraintEqualToAnchor_, v10);

  objc_msgSend(v11, sel_setActive_, 1);
  id v12 = objc_msgSend(v5, sel_trailingAnchor);
  id v13 = objc_msgSend(v1, sel_trailingAnchor);
  if (qword_1EA2C26D0 != -1) {
    swift_once();
  }
  id v14 = objc_msgSend(v12, sel_constraintEqualToAnchor_constant_, v13, -*(double *)&qword_1EA2C54E0);

  objc_msgSend(v14, sel_setActive_, 1);
  id v15 = objc_msgSend(v5, sel_bottomAnchor);
  id v16 = objc_msgSend(v1, sel_bottomAnchor);
  id v17 = objc_msgSend(v15, sel_constraintEqualToAnchor_, v16);

  objc_msgSend(v17, sel_setActive_, 1);
  id v18 = sub_1C2015150();
  if (qword_1EBF0CA00 != -1) {
    swift_once();
  }
  id v19 = (id)qword_1EBF0CA18;
  swift_bridgeObjectRetain();
  sub_1C2147730();
  swift_bridgeObjectRelease();

  id v20 = (id)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  objc_msgSend(v18, sel_setText_, v20, 0xE000000000000000);
}

id sub_1C2015C5C()
{
  return sub_1C2015C78(0, (uint64_t (*)(void))type metadata accessor for MedicationLogDetailsTimeView);
}

id sub_1C2015C78(uint64_t a1, uint64_t (*a2)(void))
{
  v4.receiver = v2;
  v4.super_class = (Class)a2();
  return objc_msgSendSuper2(&v4, sel_dealloc);
}

uint64_t sub_1C2015D48()
{
  return type metadata accessor for MedicationLogDetailsTimeView(0);
}

uint64_t type metadata accessor for MedicationLogDetailsTimeView(uint64_t a1)
{
  return sub_1C1F20D10(a1, qword_1EA2C5520);
}

void sub_1C2015D70()
{
  sub_1C1F17368(319, &qword_1EBF0B1F0, MEMORY[0x1E4F27928]);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t type metadata accessor for MedicationLogDetailsTimeItem(uint64_t a1)
{
  return sub_1C1F20D10(a1, (uint64_t *)&unk_1EA2C5550);
}

double sub_1C2015E4C()
{
  sub_1C2148990();
  sub_1C2148980();
  double result = v0 * 0.5;
  qword_1EA2C54E0 = *(void *)&result;
  return result;
}

uint64_t sub_1C2015E88(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MedicationLogDetailsTimeItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C2015EEC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MedicationLogDetailsTimeItem(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C2015F48(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_1C1F17368(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_1C2015FB4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1C1F17368(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1C2016010(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_1C1F17368(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a2, a1, v6);
  return a2;
}

uint64_t *sub_1C201607C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1C2147B20();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 24);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    id v9 = (uint64_t *)((char *)a1 + v8);
    id v10 = (uint64_t *)((char *)a2 + v8);
    uint64_t v11 = v10[1];
    *id v9 = *v10;
    v9[1] = v11;
    swift_retain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1C2016164(uint64_t a1)
{
  uint64_t v2 = sub_1C2147B20();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1C20161E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C2147B20();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  uint64_t v8 = (void *)(a1 + v7);
  id v9 = (void *)(a2 + v7);
  uint64_t v10 = v9[1];
  *uint64_t v8 = *v9;
  v8[1] = v10;
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1C2016280(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C2147B20();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_retain();
  swift_release();
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = (void *)(a1 + v7);
  id v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C2016338(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C2147B20();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  return a1;
}

uint64_t sub_1C20163BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C2147B20();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_release();
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = (void *)(a1 + v7);
  id v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C201645C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C2016470);
}

uint64_t sub_1C2016470(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C2147B20();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_1C2016530(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C2016544);
}

uint64_t sub_1C2016544(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1C2147B20();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_1C2016600()
{
  uint64_t result = sub_1C2147B20();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1C20166A4()
{
  return sub_1C20166EC((unint64_t *)&unk_1EA2C5560, (void (*)(uint64_t))type metadata accessor for MedicationLogDetailsTimeItem);
}

uint64_t sub_1C20166EC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

__n128 sub_1C2016734()
{
  __asm { FMOV            V0.2D, #16.0 }
  xmmword_1EA2C7F40 = (__int128)result;
  unk_1EA2C7F50 = result;
  return result;
}

uint64_t sub_1C2016748(uint64_t a1, void *a2)
{
  sub_1C1F2116C(a1, (uint64_t)v6);
  uint64_t v3 = *a2 + OBJC_IVAR____TtC19HealthMedicationsUI28InteractionCriticalAlertCell_item;
  swift_beginAccess();
  uint64_t v4 = MEMORY[0x1E4F66028];
  sub_1C20192B0((uint64_t)v6, v3, (unint64_t *)&qword_1EBF0C300, (unint64_t *)&qword_1EBF0C2F0, MEMORY[0x1E4F66028]);
  swift_endAccess();
  sub_1C2018454();
  return sub_1C2019334((uint64_t)v6, (unint64_t *)&qword_1EBF0C300, (unint64_t *)&qword_1EBF0C2F0, v4);
}

uint64_t sub_1C20167FC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI28InteractionCriticalAlertCell_item;
  swift_beginAccess();
  return sub_1C1F2116C(v3, a1);
}

uint64_t sub_1C2016850(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI28InteractionCriticalAlertCell_item;
  swift_beginAccess();
  uint64_t v4 = MEMORY[0x1E4F66028];
  sub_1C20192B0(a1, v3, (unint64_t *)&qword_1EBF0C300, (unint64_t *)&qword_1EBF0C2F0, MEMORY[0x1E4F66028]);
  swift_endAccess();
  sub_1C2018454();
  return sub_1C2019334(a1, (unint64_t *)&qword_1EBF0C300, (unint64_t *)&qword_1EBF0C2F0, v4);
}

void (*sub_1C20168F8(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1C2016958;
}

void sub_1C2016958(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    sub_1C2018454();
  }
}

id sub_1C201698C(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = &v4[OBJC_IVAR____TtC19HealthMedicationsUI28InteractionCriticalAlertCell_item];
  *(_OWORD *)uint64_t v9 = 0u;
  *((_OWORD *)v9 + 1) = 0u;
  *((void *)v9 + 4) = 0;
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI28InteractionCriticalAlertCell_activeConstraints] = MEMORY[0x1E4FBC860];
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI28InteractionCriticalAlertCell____lazy_storage___interactionStackedMedmojiView] = 0;
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI28InteractionCriticalAlertCell____lazy_storage___dismissLabel] = 0;
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI28InteractionCriticalAlertCell____lazy_storage___titleButton] = 0;
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI28InteractionCriticalAlertCell____lazy_storage___subtitleLabel] = 0;
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI28InteractionCriticalAlertCell____lazy_storage___separatorView] = 0;
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI28InteractionCriticalAlertCell____lazy_storage___learnMoreLabel] = 0;
  v15.receiver = v4;
  v15.super_class = (Class)type metadata accessor for InteractionCriticalAlertCell();
  id v10 = objc_msgSendSuper2(&v15, sel_initWithFrame_, a1, a2, a3, a4);
  sub_1C2017704();
  sub_1C2017A60();
  sub_1C2018A18(0, (unint64_t *)&qword_1EA2C3D80, (uint64_t (*)(uint64_t))sub_1C1F7C864, MEMORY[0x1E4FBBE00]);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1C214FCD0;
  uint64_t v12 = sub_1C2149C70();
  uint64_t v13 = MEMORY[0x1E4FB1138];
  *(void *)(v11 + 32) = v12;
  *(void *)(v11 + 40) = v13;
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1C1F7C8F0();
  sub_1C214B120();

  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return v10;
}

id sub_1C2016B84(void *a1)
{
  uint64_t v3 = &v1[OBJC_IVAR____TtC19HealthMedicationsUI28InteractionCriticalAlertCell_item];
  *(_OWORD *)uint64_t v3 = 0u;
  *((_OWORD *)v3 + 1) = 0u;
  *((void *)v3 + 4) = 0;
  *(void *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI28InteractionCriticalAlertCell_activeConstraints] = MEMORY[0x1E4FBC860];
  *(void *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI28InteractionCriticalAlertCell____lazy_storage___interactionStackedMedmojiView] = 0;
  *(void *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI28InteractionCriticalAlertCell____lazy_storage___dismissLabel] = 0;
  *(void *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI28InteractionCriticalAlertCell____lazy_storage___titleButton] = 0;
  *(void *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI28InteractionCriticalAlertCell____lazy_storage___subtitleLabel] = 0;
  *(void *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI28InteractionCriticalAlertCell____lazy_storage___separatorView] = 0;
  *(void *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI28InteractionCriticalAlertCell____lazy_storage___learnMoreLabel] = 0;
  v6.receiver = v1;
  v6.super_class = (Class)type metadata accessor for InteractionCriticalAlertCell();
  id v4 = objc_msgSendSuper2(&v6, sel_initWithCoder_, a1);

  return v4;
}

uint64_t sub_1C2016C70()
{
  v5.receiver = v0;
  v5.super_class = (Class)type metadata accessor for InteractionCriticalAlertCell();
  objc_msgSendSuper2(&v5, sel_awakeFromNib);
  sub_1C2017704();
  sub_1C2017A60();
  sub_1C2018A18(0, (unint64_t *)&qword_1EA2C3D80, (uint64_t (*)(uint64_t))sub_1C1F7C864, MEMORY[0x1E4FBBE00]);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1C214FCD0;
  uint64_t v2 = sub_1C2149C70();
  uint64_t v3 = MEMORY[0x1E4FB1138];
  *(void *)(v1 + 32) = v2;
  *(void *)(v1 + 40) = v3;
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1C1F7C8F0();
  sub_1C214B120();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  return swift_release();
}

void sub_1C2016DD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a3 + 16;
  swift_beginAccess();
  uint64_t v4 = MEMORY[0x1C8754850](v3);
  if (v4)
  {
    objc_super v5 = (void *)v4;
    type metadata accessor for InteractionCriticalAlertCell();
    if ((sub_1C214AE10() & 1) == 0) {
      sub_1C2017A60();
    }
  }
}

uint64_t sub_1C2016E3C()
{
  uint64_t v1 = v0;
  sub_1C2018A18(0, &qword_1EBF0C620, MEMORY[0x1E4FB0F28], MEMORY[0x1E4FBB718]);
  uint64_t v3 = MEMORY[0x1F4188790](v2 - 8);
  objc_super v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x1F4188790](v3);
  uint64_t v8 = (char *)&v19 - v7;
  MEMORY[0x1F4188790](v6);
  id v10 = (char *)&v19 - v9;
  uint64_t v11 = (void *)sub_1C2149950();
  uint64_t v12 = (objc_class *)type metadata accessor for InteractionCriticalAlertCell();
  v19.receiver = v1;
  v19.super_class = v12;
  objc_msgSendSuper2(&v19, sel__bridgedUpdateConfigurationUsingState_, v11);

  if (objc_msgSend(v1, sel_isHighlighted))
  {
    MEMORY[0x1C8752FE0]();
    uint64_t v13 = sub_1C21499D0();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48))(v10, 1, v13))
    {
      sub_1C1FB6040((uint64_t)v10, (uint64_t)v8);
      MEMORY[0x1C8752FF0](v8);
      uint64_t v14 = (uint64_t)v10;
      return sub_1C1FB60D4(v14);
    }
    sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C900);
    sub_1C214B170();
    sub_1C2149990();
    id v17 = v10;
  }
  else
  {
    MEMORY[0x1C8752FE0]();
    uint64_t v15 = sub_1C21499D0();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48))(v5, 1, v15))
    {
      sub_1C1FB6040((uint64_t)v5, (uint64_t)v8);
      MEMORY[0x1C8752FF0](v8);
      uint64_t v14 = (uint64_t)v5;
      return sub_1C1FB60D4(v14);
    }
    id v18 = objc_msgSend(self, sel_secondarySystemBackgroundColor);
    sub_1C2149990();
    id v17 = v5;
  }
  return MEMORY[0x1C8752FF0](v17);
}

char *sub_1C2017190()
{
  uint64_t v1 = OBJC_IVAR____TtC19HealthMedicationsUI28InteractionCriticalAlertCell____lazy_storage___interactionStackedMedmojiView;
  uint64_t v2 = *(void **)(v0
                + OBJC_IVAR____TtC19HealthMedicationsUI28InteractionCriticalAlertCell____lazy_storage___interactionStackedMedmojiView);
  if (v2)
  {
    uint64_t v3 = *(char **)(v0
                  + OBJC_IVAR____TtC19HealthMedicationsUI28InteractionCriticalAlertCell____lazy_storage___interactionStackedMedmojiView);
  }
  else
  {
    uint64_t v4 = v0;
    id v5 = objc_allocWithZone((Class)type metadata accessor for InteractionStackedMedmojiView());
    uint64_t v6 = InteractionStackedMedmojiView.init(width:)(36.0);
    objc_msgSend(v6, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    uint64_t v7 = *(void **)(v4 + v1);
    *(void *)(v4 + v1) = v6;
    uint64_t v3 = v6;

    uint64_t v2 = 0;
  }
  id v8 = v2;
  return v3;
}

id sub_1C2017220()
{
  return sub_1C20176A4(&OBJC_IVAR____TtC19HealthMedicationsUI28InteractionCriticalAlertCell____lazy_storage___dismissLabel, (uint64_t (*)(void))sub_1C1FB3B40);
}

id sub_1C2017240()
{
  uint64_t v1 = OBJC_IVAR____TtC19HealthMedicationsUI28InteractionCriticalAlertCell____lazy_storage___titleButton;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI28InteractionCriticalAlertCell____lazy_storage___titleButton);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI28InteractionCriticalAlertCell____lazy_storage___titleButton);
  }
  else
  {
    if (qword_1EBF0CA00 != -1) {
      swift_once();
    }
    id v4 = (id)qword_1EBF0CA18;
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_1C2147730();
    uint64_t v7 = v6;
    swift_bridgeObjectRelease();

    _sSo8UIButtonC19HealthMedicationsUIE21makeExclamationButton5title29accessibilityIdentifierSuffixABSS_SStFZ_0(v5, v7, 0xD000000000000014, 0x80000001C215DEA0);
    uint64_t v9 = v8;
    swift_bridgeObjectRelease();
    id v10 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v9;
    id v3 = v9;

    uint64_t v2 = 0;
  }
  id v11 = v2;
  return v3;
}

id sub_1C2017380()
{
  uint64_t v1 = OBJC_IVAR____TtC19HealthMedicationsUI28InteractionCriticalAlertCell____lazy_storage___subtitleLabel;
  uint64_t v2 = *(void **)(v0
                + OBJC_IVAR____TtC19HealthMedicationsUI28InteractionCriticalAlertCell____lazy_storage___subtitleLabel);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI28InteractionCriticalAlertCell____lazy_storage___subtitleLabel);
  }
  else
  {
    uint64_t v4 = v0;
    id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
    sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8E0);
    uint64_t v6 = (void *)sub_1C214B0A0();
    objc_msgSend(v5, sel_setFont_, v6);

    uint64_t v14 = sub_1C214A5F0();
    uint64_t v15 = v7;
    swift_bridgeObjectRetain();
    sub_1C214A6C0();
    id v8 = v5;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_1C214A6C0();
    swift_bridgeObjectRelease();
    uint64_t v9 = (void *)sub_1C214A5B0();
    swift_bridgeObjectRelease();
    objc_msgSend(v8, sel_setAccessibilityIdentifier_, v9, v14, v15);

    id v10 = objc_msgSend(self, sel_labelColor);
    objc_msgSend(v8, sel_setTextColor_, v10);

    objc_msgSend(v8, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    objc_msgSend(v8, sel_setNumberOfLines_, 0);
    objc_msgSend(v8, sel_setAdjustsFontForContentSizeCategory_, 1);
    id v11 = *(void **)(v4 + v1);
    *(void *)(v4 + v1) = v8;
    id v3 = v8;

    uint64_t v2 = 0;
  }
  id v12 = v2;
  return v3;
}

id sub_1C20175A8()
{
  uint64_t v1 = OBJC_IVAR____TtC19HealthMedicationsUI28InteractionCriticalAlertCell____lazy_storage___separatorView;
  uint64_t v2 = *(void **)(v0
                + OBJC_IVAR____TtC19HealthMedicationsUI28InteractionCriticalAlertCell____lazy_storage___separatorView);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI28InteractionCriticalAlertCell____lazy_storage___separatorView);
  }
  else
  {
    id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F67C08]), sel_init);
    HKUIOnePixel();
    objc_msgSend(v4, sel_setSeparatorThickness_);
    id v5 = objc_msgSend(self, sel_separatorColor);
    objc_msgSend(v4, sel_setColor_, v5);

    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    uint64_t v6 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v7 = v2;
  return v3;
}

id sub_1C2017684()
{
  return sub_1C20176A4(&OBJC_IVAR____TtC19HealthMedicationsUI28InteractionCriticalAlertCell____lazy_storage___learnMoreLabel, (uint64_t (*)(void))sub_1C1FB4400);
}

id sub_1C20176A4(uint64_t *a1, uint64_t (*a2)(void))
{
  uint64_t v3 = *a1;
  id v4 = *(void **)(v2 + *a1);
  if (v4)
  {
    id v5 = *(id *)(v2 + *a1);
  }
  else
  {
    uint64_t v6 = (void *)a2();
    id v7 = *(void **)(v2 + v3);
    *(void *)(v2 + v3) = v6;
    id v5 = v6;

    id v4 = 0;
  }
  id v8 = v4;
  return v5;
}

uint64_t sub_1C2017704()
{
  uint64_t v1 = v0;
  sub_1C2018A18(0, &qword_1EBF0C620, MEMORY[0x1E4FB0F28], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v2 - 8);
  id v4 = (char *)&v29 - v3;
  uint64_t v5 = sub_1C21499D0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  id v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = v8;
  sub_1C21499A0();
  id v9 = objc_msgSend(self, sel_secondarySystemBackgroundColor);
  sub_1C2149990();
  uint64_t v30 = v5;
  uint64_t v31 = v6;
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v4, v8, v5);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
  MEMORY[0x1C8752FF0](v4);
  id v10 = sub_1C2017190();
  id v11 = sub_1C2017220();
  id v12 = sub_1C2017240();
  id v13 = sub_1C2017380();
  id v14 = sub_1C20175A8();
  id v15 = sub_1C2017684();
  id v16 = v10;
  id v17 = objc_msgSend(v1, sel_contentView);
  objc_msgSend(v17, sel_addSubview_, v16);

  id v18 = v11;
  id v19 = objc_msgSend(v1, sel_contentView);
  objc_msgSend(v19, sel_addSubview_, v18);

  id v20 = v12;
  id v21 = objc_msgSend(v1, sel_contentView);
  objc_msgSend(v21, sel_addSubview_, v20);

  id v22 = v13;
  id v23 = objc_msgSend(v1, sel_contentView);
  objc_msgSend(v23, sel_addSubview_, v22);

  id v24 = v14;
  id v25 = objc_msgSend(v1, sel_contentView);
  objc_msgSend(v25, sel_addSubview_, v24);

  id v26 = v15;
  id v27 = objc_msgSend(v1, sel_contentView);
  objc_msgSend(v27, sel_addSubview_, v26);

  return (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v32, v30);
}

void sub_1C2017A60()
{
  uint64_t v1 = v0;
  uint64_t v2 = self;
  uint64_t v92 = (char *)OBJC_IVAR____TtC19HealthMedicationsUI28InteractionCriticalAlertCell_activeConstraints;
  uint64_t v3 = sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C810);
  swift_bridgeObjectRetain();
  uint64_t v91 = v3;
  id v4 = (void *)sub_1C214A770();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_deactivateConstraints_, v4);

  sub_1C1F0ED28();
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1C2156500;
  uint64_t v6 = sub_1C2017190();
  id v7 = objc_msgSend(v6, sel_leadingAnchor);

  id v8 = objc_msgSend(v1, sel_contentView);
  id v9 = objc_msgSend(v8, sel_leadingAnchor);

  if (qword_1EA2C26D8 != -1) {
    swift_once();
  }
  id v10 = objc_msgSend(v7, sel_constraintEqualToAnchor_constant_, v9, *((double *)&xmmword_1EA2C7F40 + 1), v91);

  *(void *)(v5 + 32) = v10;
  id v11 = sub_1C2017190();
  id v12 = objc_msgSend(v11, sel_topAnchor);

  id v13 = sub_1C2017380();
  id v14 = objc_msgSend(v13, sel_topAnchor);

  id v15 = objc_msgSend(v12, sel_constraintEqualToAnchor_, v14);
  *(void *)(v5 + 40) = v15;
  id v16 = sub_1C2017220();
  id v17 = objc_msgSend(v16, sel_trailingAnchor);

  id v18 = objc_msgSend(v1, (SEL)&selRef_setContentHuggingPriority_forAxis_);
  id v19 = objc_msgSend(v18, sel_trailingAnchor);

  id v20 = objc_msgSend(v17, sel_constraintEqualToAnchor_constant_, v19, -*(double *)&qword_1EA2C7F58);
  *(void *)(v5 + 48) = v20;
  id v21 = sub_1C2017220();
  id v22 = objc_msgSend(v21, sel_topAnchor);

  id v23 = objc_msgSend(v1, (SEL)&selRef_setContentHuggingPriority_forAxis_);
  id v24 = objc_msgSend(v23, sel_topAnchor);

  id v25 = objc_msgSend(v22, sel_constraintEqualToAnchor_constant_, v24, *(double *)&qword_1EA2C7F58);
  *(void *)(v5 + 56) = v25;
  id v26 = sub_1C2017240();
  id v27 = objc_msgSend(v26, sel_leadingAnchor);

  id v28 = objc_msgSend(v1, (SEL)&selRef_setContentHuggingPriority_forAxis_);
  id v29 = objc_msgSend(v28, (SEL)&selRef_setTranslatesAutoresizingMaskIntoConstraints_ + 2);

  id v30 = objc_msgSend(v27, sel_constraintEqualToAnchor_constant_, v29, *((double *)&xmmword_1EA2C7F40 + 1));
  *(void *)(v5 + 64) = v30;
  id v31 = sub_1C2017240();
  id v32 = objc_msgSend(v31, sel_trailingAnchor);

  id v33 = sub_1C2017220();
  id v34 = objc_msgSend(v33, sel_trailingAnchor);

  id v35 = objc_msgSend(v32, sel_constraintLessThanOrEqualToAnchor_constant_, v34, *(double *)&qword_1EA2C7F58);
  *(void *)(v5 + 72) = v35;
  id v36 = sub_1C2017240();
  id v37 = objc_msgSend(v36, sel_topAnchor);

  id v38 = objc_msgSend(v1, (SEL)&selRef_setContentHuggingPriority_forAxis_);
  id v39 = objc_msgSend(v38, sel_topAnchor);

  id v40 = objc_msgSend(v37, sel_constraintEqualToAnchor_constant_, v39, *(double *)&xmmword_1EA2C7F40);
  *(void *)(v5 + 80) = v40;
  id v41 = sub_1C2017380();
  id v42 = objc_msgSend(v41, sel_leadingAnchor);

  uint64_t v43 = sub_1C2017190();
  id v44 = objc_msgSend(v43, sel_trailingAnchor);

  id v45 = objc_msgSend(v42, sel_constraintEqualToAnchor_constant_, v44, *((double *)&xmmword_1EA2C7F40 + 1));
  *(void *)(v5 + 88) = v45;
  id v46 = sub_1C2017380();
  id v47 = objc_msgSend(v46, sel_trailingAnchor);

  id v48 = objc_msgSend(v1, (SEL)&selRef_setContentHuggingPriority_forAxis_);
  id v49 = objc_msgSend(v48, sel_trailingAnchor);

  id v50 = objc_msgSend(v47, sel_constraintEqualToAnchor_constant_, v49, -*(double *)&qword_1EA2C7F58);
  *(void *)(v5 + 96) = v50;
  id v51 = sub_1C2017380();
  id v52 = objc_msgSend(v51, sel_topAnchor);

  id v53 = sub_1C2017240();
  id v54 = objc_msgSend(v53, sel_bottomAnchor);

  id v55 = objc_msgSend(v52, sel_constraintEqualToAnchor_constant_, v54, 12.0);
  *(void *)(v5 + 104) = v55;
  id v56 = sub_1C20175A8();
  id v57 = objc_msgSend(v56, sel_leadingAnchor);

  id v58 = sub_1C2017380();
  id v59 = objc_msgSend(v58, sel_leadingAnchor);

  id v60 = objc_msgSend(v57, sel_constraintEqualToAnchor_, v59);
  *(void *)(v5 + 112) = v60;
  id v61 = sub_1C20175A8();
  id v62 = objc_msgSend(v61, sel_trailingAnchor);

  id v63 = objc_msgSend(v1, sel_contentView);
  id v64 = objc_msgSend(v63, sel_trailingAnchor);

  id v65 = objc_msgSend(v62, sel_constraintEqualToAnchor_, v64);
  *(void *)(v5 + 120) = v65;
  id v66 = sub_1C20175A8();
  id v67 = objc_msgSend(v66, sel_topAnchor);

  id v68 = sub_1C2017380();
  id v69 = objc_msgSend(v68, sel_bottomAnchor);

  id v70 = objc_msgSend(v67, sel_constraintEqualToAnchor_constant_, v69, 12.0);
  *(void *)(v5 + 128) = v70;
  id v71 = sub_1C2017684();
  id v72 = objc_msgSend(v71, sel_leadingAnchor);

  id v73 = sub_1C2017380();
  id v74 = objc_msgSend(v73, sel_leadingAnchor);

  id v75 = objc_msgSend(v72, sel_constraintEqualToAnchor_, v74);
  *(void *)(v5 + 136) = v75;
  id v76 = sub_1C2017684();
  id v77 = objc_msgSend(v76, sel_trailingAnchor);

  id v78 = objc_msgSend(v1, sel_contentView);
  id v79 = objc_msgSend(v78, sel_trailingAnchor);

  id v80 = objc_msgSend(v77, sel_constraintLessThanOrEqualToAnchor_, v79);
  *(void *)(v5 + 144) = v80;
  id v81 = sub_1C2017684();
  id v82 = objc_msgSend(v81, sel_centerYAnchor);

  id v83 = sub_1C20175A8();
  id v84 = objc_msgSend(v83, sel_bottomAnchor);

  id v85 = objc_msgSend(v82, sel_constraintEqualToAnchor_constant_, v84, 22.0);
  *(void *)(v5 + 152) = v85;
  id v86 = objc_msgSend(v1, sel_contentView);
  id v87 = objc_msgSend(v86, sel_bottomAnchor);

  id v88 = sub_1C20175A8();
  id v89 = objc_msgSend(v88, sel_bottomAnchor);

  id v90 = objc_msgSend(v87, sel_constraintEqualToAnchor_constant_, v89, 44.0);
  *(void *)(v5 + 160) = v90;
  sub_1C214A7A0();
  *(void *)&v92[(void)v1] = v5;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  id v93 = (id)sub_1C214A770();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_activateConstraints_, v93);
}

void sub_1C2018454()
{
  uint64_t v1 = v0;
  uint64_t v2 = (void *)sub_1C21497F0();
  uint64_t v3 = *(v2 - 1);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = (uint64_t)v1 + OBJC_IVAR____TtC19HealthMedicationsUI28InteractionCriticalAlertCell_item;
  swift_beginAccess();
  sub_1C1F2116C(v6, (uint64_t)v41);
  if (!v41[3])
  {
    sub_1C2019334((uint64_t)v41, (unint64_t *)&qword_1EBF0C300, (unint64_t *)&qword_1EBF0C2F0, MEMORY[0x1E4F66028]);
LABEL_7:
    sub_1C21497A0();
    id v28 = v1;
    id v29 = sub_1C21497E0();
    os_log_type_t v30 = sub_1C214ABD0();
    if (os_log_type_enabled(v29, v30))
    {
      uint64_t v31 = swift_slowAlloc();
      id v39 = v2;
      id v32 = (uint8_t *)v31;
      uint64_t v33 = swift_slowAlloc();
      v40[0] = v33;
      *(_DWORD *)id v32 = 136446210;
      sub_1C1F2116C(v6, (uint64_t)v41);
      sub_1C2019248(0, (unint64_t *)&qword_1EBF0C300, (unint64_t *)&qword_1EBF0C2F0, MEMORY[0x1E4F66028], MEMORY[0x1E4FBB718]);
      uint64_t v34 = sub_1C214A630();
      v41[0] = sub_1C1F6FD54(v34, v35, v40);
      sub_1C214B530();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C1F0B000, v29, v30, "Incorrect view model for InteractionCriticalAlertItem: %{public}s", v32, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C8754730](v33, -1, -1);
      MEMORY[0x1C8754730](v32, -1, -1);

      (*(void (**)(char *, id))(v3 + 8))(v5, v39);
    }
    else
    {

      (*(void (**)(char *, void *))(v3 + 8))(v5, v2);
    }
    return;
  }
  sub_1C1F23804(0, (unint64_t *)&qword_1EBF0C2F0);
  type metadata accessor for InteractionCriticalAlertItem();
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_7;
  }
  id v7 = (void *)v40[0];
  id v39 = sub_1C2017380();
  if (qword_1EBF0CA00 != -1) {
    swift_once();
  }
  id v37 = (id)qword_1EBF0CA18;
  uint64_t v38 = qword_1EBF0CA20;
  v36[1] = qword_1EBF0CA28;
  sub_1C2019248(0, qword_1EBF0B8A0, (unint64_t *)&qword_1EBF0C9F0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1C214FCC0;
  uint64_t v10 = v7[5];
  uint64_t v9 = v7[6];
  __swift_project_boxed_opaque_existential_0(v7 + 2, v10);
  id v11 = *(uint64_t (**)(uint64_t, uint64_t))(v9 + 24);
  id v37 = v37;
  swift_bridgeObjectRetain();
  uint64_t v12 = v11(v10, v9);
  uint64_t v14 = v13;
  uint64_t v15 = MEMORY[0x1E4FBB1A0];
  *(void *)(v8 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v16 = sub_1C1F31298();
  *(void *)(v8 + 64) = v16;
  *(void *)(v8 + 32) = v12;
  *(void *)(v8 + 40) = v14;
  uint64_t v17 = v7[5];
  uint64_t v18 = v7[6];
  __swift_project_boxed_opaque_existential_0(v7 + 2, v17);
  uint64_t v19 = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 48))(v17, v18);
  *(void *)(v8 + 96) = v15;
  *(void *)(v8 + 104) = v16;
  *(void *)(v8 + 72) = v19;
  *(void *)(v8 + 80) = v20;
  id v21 = v37;
  sub_1C2147730();
  sub_1C214A5C0();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v22 = (void *)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  id v23 = v39;
  objc_msgSend(v39, sel_setText_, v22);

  id v24 = sub_1C2017190();
  uint64_t v25 = v7[5];
  uint64_t v26 = v7[6];
  __swift_project_boxed_opaque_existential_0(v7 + 2, v25);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v26 + 16))(v41, v25, v26);
  uint64_t v27 = (uint64_t)&v24[OBJC_IVAR____TtC19HealthMedicationsUI29InteractionStackedMedmojiView_stackedMemojiConfig];
  swift_beginAccess();
  sub_1C20192B0((uint64_t)v41, v27, &qword_1EA2C2C80, (unint64_t *)&qword_1EA2C55B0, (uint64_t)&protocol descriptor for InteractionStackedMedmojiDisplayable);
  swift_endAccess();
  sub_1C1FD8260();
  sub_1C2019334((uint64_t)v41, &qword_1EA2C2C80, (unint64_t *)&qword_1EA2C55B0, (uint64_t)&protocol descriptor for InteractionStackedMedmojiDisplayable);
  swift_release();
}

uint64_t type metadata accessor for InteractionCriticalAlertCell()
{
  return self;
}

void sub_1C2018A18(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C2018A7C()
{
  swift_unknownObjectWeakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

void sub_1C2018AB4(uint64_t a1, uint64_t a2)
{
  sub_1C2016DD0(a1, a2, v2);
}

void sub_1C2018BE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C21497F0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = swift_bridgeObjectRetain();
  uint64_t v9 = (void *)sub_1C1FB2B10(v8);
  swift_bridgeObjectRelease();
  if (!v9) {
    goto LABEL_7;
  }
  id v10 = sub_1C2017220();
  char v11 = MEMORY[0x1C8753270](v9, v10, 36.0, 36.0);

  if ((v11 & 1) == 0)
  {

LABEL_7:
    sub_1C1F12718(0, &qword_1EA2C4618);
    sub_1C1FB6160();
    uint64_t v15 = (void *)sub_1C214AA50();
    unint64_t v16 = (objc_class *)type metadata accessor for InteractionCriticalAlertCell();
    v28.receiver = v2;
    v28.super_class = v16;
    objc_msgSendSuper2(&v28, sel_touchesEnded_withEvent_, v15, a2);

    return;
  }
  uint64_t v12 = (uint64_t)v2 + OBJC_IVAR____TtC19HealthMedicationsUI28InteractionCriticalAlertCell_item;
  swift_beginAccess();
  sub_1C1F2116C(v12, (uint64_t)v27);
  if (v27[3])
  {
    sub_1C1F23804(0, (unint64_t *)&qword_1EBF0C2F0);
    type metadata accessor for InteractionCriticalAlertItem();
    if (swift_dynamicCast())
    {
      uint64_t v13 = *(void (**)(uint64_t))(v26 + 88);
      uint64_t v14 = swift_retain();
      v13(v14);

      swift_release();
      swift_release();
      return;
    }
  }
  else
  {
    sub_1C2019334((uint64_t)v27, (unint64_t *)&qword_1EBF0C300, (unint64_t *)&qword_1EBF0C2F0, MEMORY[0x1E4F66028]);
  }
  sub_1C21497A0();
  id v17 = v2;
  uint64_t v18 = sub_1C21497E0();
  os_log_type_t v19 = sub_1C214ABD0();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = (uint8_t *)swift_slowAlloc();
    uint64_t v25 = swift_slowAlloc();
    uint64_t v26 = v25;
    *(_DWORD *)uint64_t v20 = 136446210;
    v24[1] = v20 + 4;
    sub_1C1F2116C(v12, (uint64_t)v27);
    sub_1C2019248(0, (unint64_t *)&qword_1EBF0C300, (unint64_t *)&qword_1EBF0C2F0, MEMORY[0x1E4F66028], MEMORY[0x1E4FBB718]);
    uint64_t v21 = sub_1C214A630();
    v27[0] = sub_1C1F6FD54(v21, v22, &v26);
    sub_1C214B530();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C1F0B000, v18, v19, "Incorrect view model for InteractionCriticalAlertItem: %{public}s", v20, 0xCu);
    uint64_t v23 = v25;
    swift_arrayDestroy();
    MEMORY[0x1C8754730](v23, -1, -1);
    MEMORY[0x1C8754730](v20, -1, -1);
  }
  else
  {
  }
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

id InteractionCriticalAlertCell.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for InteractionCriticalAlertCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1C2019138@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC19HealthMedicationsUI28InteractionCriticalAlertCell_item;
  swift_beginAccess();
  return sub_1C1F2116C(v3, a2);
}

uint64_t method lookup function for InteractionCriticalAlertCell(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for InteractionCriticalAlertCell);
}

uint64_t dispatch thunk of InteractionCriticalAlertCell.item.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of InteractionCriticalAlertCell.item.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of InteractionCriticalAlertCell.item.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA0))();
}

void sub_1C2019248(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = sub_1C1F23804(255, a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

uint64_t sub_1C20192B0(uint64_t a1, uint64_t a2, unint64_t *a3, unint64_t *a4, uint64_t a5)
{
  sub_1C2019248(0, a3, a4, a5, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 24))(a2, a1, v7);
  return a2;
}

uint64_t sub_1C2019334(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4)
{
  sub_1C2019248(0, a2, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

uint64_t sub_1C20193A4()
{
  uint64_t v0 = sub_1C2147B20();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for InteractionFactorsInfoCell();
  sub_1C2019938(&qword_1EA2C55C0, (void (*)(uint64_t))type metadata accessor for InteractionFactorsInfoCell);
  uint64_t v4 = sub_1C21481D0();
  uint64_t v15 = v5;
  uint64_t v16 = v4;
  unint64_t v17 = 0;
  unint64_t v18 = 0xE000000000000000;
  sub_1C214B7C0();
  swift_bridgeObjectRelease();
  unint64_t v17 = 0xD00000000000001BLL;
  unint64_t v18 = 0x80000001C2165D30;
  sub_1C2147B10();
  sub_1C2147AD0();
  uint64_t v6 = *(void (**)(char *, uint64_t))(v1 + 8);
  v6(v3, v0);
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  unint64_t v7 = v17;
  unint64_t v8 = v18;
  sub_1C1F421FC(0, (unint64_t *)&qword_1EA2C2DD0, MEMORY[0x1E4F66468]);
  sub_1C2148540();
  uint64_t v9 = swift_allocObject();
  long long v14 = xmmword_1C214FCD0;
  *(_OWORD *)(v9 + 16) = xmmword_1C214FCD0;
  sub_1C1F421FC(0, (unint64_t *)&qword_1EBF0C958, (void (*)(uint64_t))sub_1C1F1CB5C);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = v14;
  *(void *)(v10 + 56) = &type metadata for InteractionFactorsInfoItem;
  *(void *)(v10 + 64) = sub_1C2019ADC();
  char v11 = (void *)swift_allocObject();
  *(void *)(v10 + 32) = v11;
  uint64_t v12 = v15;
  v11[2] = v16;
  v11[3] = v12;
  void v11[4] = v7;
  v11[5] = v8;
  sub_1C2147B10();
  sub_1C2147AD0();
  v6(v3, v0);
  sub_1C2148520();
  return sub_1C2147F50();
}

uint64_t sub_1C20196AC()
{
  uint64_t v0 = sub_1C2148710();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2148690();
  sub_1C214AEB0();
  sub_1C21486F0();
  uint64_t v4 = sub_1C2148700();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

void InteractionFactorsInfoDataSource.__allocating_init(arrangedSections:isHidden:)()
{
}

void InteractionFactorsInfoDataSource.init(arrangedSections:isHidden:)()
{
}

uint64_t InteractionFactorsInfoDataSource.__deallocating_deinit()
{
  _s19HealthMedicationsUI34InteractionSeperatorLineDataSourceCfd_0();

  return swift_deallocClassInstance();
}

uint64_t sub_1C2019824()
{
  return sub_1C2148B80();
}

Swift::Void __swiftcall InteractionFactorsInfoDataSource.registerCells(for:)(UICollectionView *a1)
{
}

uint64_t sub_1C20198F0()
{
  return sub_1C2019938(&qword_1EA2C55C8, (void (*)(uint64_t))type metadata accessor for InteractionFactorsInfoDataSource);
}

uint64_t sub_1C2019938(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for InteractionFactorsInfoDataSource()
{
  uint64_t result = qword_1EA2C55D0;
  if (!qword_1EA2C55D0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C20199CC()
{
  return sub_1C214ACC0();
}

uint64_t sub_1C2019A3C()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for InteractionFactorsInfoDataSource(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for InteractionFactorsInfoDataSource);
}

uint64_t dispatch thunk of InteractionFactorsInfoDataSource.layout(for:environment:)()
{
  return (*(uint64_t (**)(void))(class metadata base offset for InteractionFactorsInfoDataSource + *v0 + 8))();
}

uint64_t sub_1C2019AD4()
{
  return type metadata accessor for InteractionFactorsInfoDataSource();
}

unint64_t sub_1C2019ADC()
{
  unint64_t result = qword_1EA2C55E0;
  if (!qword_1EA2C55E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C55E0);
  }
  return result;
}

uint64_t sub_1C2019B30()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t type metadata accessor for DosagesPerDaySectionDataSource()
{
  uint64_t result = qword_1EA2C5620;
  if (!qword_1EA2C5620) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C2019BBC()
{
  uint64_t result = sub_1C2147AC0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1C2019C9C(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v7 = type metadata accessor for Dosage();
  uint64_t v24 = *(void *)(v7 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v7 - 8);
  uint64_t v23 = (uint64_t)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)v20 - v11;
  uint64_t v13 = MEMORY[0x1E4FBC860];
  uint64_t v25 = MEMORY[0x1E4FBC860];
  uint64_t v22 = *(void *)(a3 + 16);
  if (v22)
  {
    unint64_t v14 = 0;
    uint64_t v15 = MEMORY[0x1E4FBC860];
    v20[1] = a2;
    uint64_t v21 = a3;
    v20[0] = a1;
    while (v14 < *(void *)(a3 + 16))
    {
      unint64_t v16 = (*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
      uint64_t v13 = *(void *)(v24 + 72);
      sub_1C2021840(a3 + v16 + v13 * v14, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for Dosage);
      char v17 = a1(v12);
      if (v3)
      {
        sub_1C20218A8((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for Dosage);
        swift_release();
        swift_bridgeObjectRelease();
        return v13;
      }
      if (v17)
      {
        sub_1C1F4C924((uint64_t)v12, v23);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_1C1F7091C(0, *(void *)(v15 + 16) + 1, 1);
        }
        uint64_t v15 = v25;
        unint64_t v19 = *(void *)(v25 + 16);
        unint64_t v18 = *(void *)(v25 + 24);
        if (v19 >= v18 >> 1)
        {
          sub_1C1F7091C(v18 > 1, v19 + 1, 1);
          uint64_t v15 = v25;
        }
        *(void *)(v15 + 16) = v19 + 1;
        uint64_t result = sub_1C1F4C924(v23, v15 + v16 + v19 * v13);
        a3 = v21;
        a1 = (uint64_t (*)(char *))v20[0];
      }
      else
      {
        uint64_t result = sub_1C20218A8((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for Dosage);
      }
      if (v22 == ++v14)
      {
        uint64_t v13 = v25;
        goto LABEL_15;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_15:
    swift_bridgeObjectRelease();
    return v13;
  }
  return result;
}

uint64_t sub_1C2019F0C(void (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  unint64_t v19 = a1;
  uint64_t v20 = a2;
  uint64_t v6 = type metadata accessor for Dosage();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v10 = *(void *)(a3 + 16);
  uint64_t v11 = MEMORY[0x1E4FBC860];
  if (v10)
  {
    uint64_t v21 = MEMORY[0x1E4FBC860];
    sub_1C1F7091C(0, v10, 0);
    uint64_t v11 = v21;
    unint64_t v18 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    uint64_t v12 = a3 + v18;
    uint64_t v13 = *(void *)(v7 + 72);
    while (1)
    {
      v19(v12);
      if (v4) {
        break;
      }
      uint64_t v4 = 0;
      uint64_t v21 = v11;
      unint64_t v15 = *(void *)(v11 + 16);
      unint64_t v14 = *(void *)(v11 + 24);
      if (v15 >= v14 >> 1)
      {
        sub_1C1F7091C(v14 > 1, v15 + 1, 1);
        uint64_t v11 = v21;
      }
      *(void *)(v11 + 16) = v15 + 1;
      sub_1C1F4C924((uint64_t)v9, v11 + v18 + v15 * v13);
      v12 += v13;
      if (!--v10) {
        return v11;
      }
    }
    swift_release();
  }
  return v11;
}

uint64_t sub_1C201A0A0(void (*a1)(uint64_t *__return_ptr, uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = *(void *)(a3 + 16);
  uint64_t result = MEMORY[0x1E4FBC860];
  if (v6)
  {
    uint64_t v13 = MEMORY[0x1E4FBC860];
    sub_1C214B850();
    uint64_t v9 = *(void *)(type metadata accessor for Dosage() - 8);
    uint64_t v10 = a3 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    while (1)
    {
      a1(&v12, v10);
      if (v4) {
        break;
      }
      uint64_t v4 = 0;
      sub_1C214B820();
      sub_1C214B860();
      sub_1C214B870();
      sub_1C214B830();
      v10 += v11;
      if (!--v6) {
        return v13;
      }
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_1C201A1E8()
{
  swift_getObjectType();
  uint64_t v1 = sub_1C21497F0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1C214B440();
  uint64_t v8 = v7;
  uint64_t v10 = v9;
  uint64_t v11 = v5;
  if (!v7 || !v5)
  {
    sub_1C21497B0();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    id v12 = v0;
    uint64_t v13 = sub_1C21497E0();
    os_log_type_t v14 = sub_1C214ABD0();
    int v33 = v14;
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = swift_slowAlloc();
      uint64_t v32 = v2;
      uint64_t v16 = v15;
      uint64_t v34 = (void *)swift_slowAlloc();
      uint64_t v30 = swift_slowAlloc();
      uint64_t v37 = v30;
      *(_DWORD *)uint64_t v16 = 136315906;
      os_log_t v29 = v13;
      uint64_t v17 = sub_1C214BC10();
      uint64_t v35 = sub_1C1F6FD54(v17, v18, &v37);
      uint64_t v31 = v1;
      sub_1C214B530();
      swift_bridgeObjectRelease();
      *(_WORD *)(v16 + 12) = 2112;
      id v19 = objc_msgSend(v12, sel_identifier);
      uint64_t v35 = (uint64_t)v19;
      sub_1C214B530();
      *uint64_t v34 = v19;

      *(_WORD *)(v16 + 22) = 2080;
      uint64_t v35 = v6;
      uint64_t v36 = v8;
      sub_1C1F24FA8();
      swift_bridgeObjectRetain();
      uint64_t v20 = sub_1C214A610();
      uint64_t v35 = sub_1C1F6FD54(v20, v21, &v37);
      sub_1C214B530();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v16 + 32) = 2080;
      uint64_t v35 = v10;
      uint64_t v36 = v11;
      swift_bridgeObjectRetain();
      uint64_t v22 = sub_1C214A610();
      uint64_t v35 = sub_1C1F6FD54(v22, v23, &v37);
      sub_1C214B530();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      os_log_t v24 = v29;
      _os_log_impl(&dword_1C1F0B000, v29, (os_log_type_t)v33, "[%s] Missing logging dose form for concept with ID %@: Singular = %s, Plural = %s", (uint8_t *)v16, 0x2Au);
      sub_1C1F3603C();
      uint64_t v25 = v34;
      swift_arrayDestroy();
      MEMORY[0x1C8754730](v25, -1, -1);
      uint64_t v26 = v30;
      swift_arrayDestroy();
      MEMORY[0x1C8754730](v26, -1, -1);
      MEMORY[0x1C8754730](v16, -1, -1);

      (*(void (**)(char *, uint64_t))(v32 + 8))(v4, v31);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();

      (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    }
    return 0;
  }
  return v6;
}

uint64_t sub_1C201A5E8(unint64_t *a1)
{
  uint64_t v2 = *(void *)(type metadata accessor for Dosage() - 8);
  unint64_t v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v3 = sub_1C1F81568(v3);
  }
  uint64_t v4 = *(void *)(v3 + 16);
  v6[0] = v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v4;
  uint64_t result = sub_1C201F360(v6);
  *a1 = v3;
  return result;
}

uint64_t sub_1C201A694(void (**a1)(void), void *a2, uint64_t a3)
{
  uint64_t v4 = v3;
  id v76 = a2;
  uint64_t v91 = a1;
  sub_1C2021A38(0, &qword_1EBF0B1F0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v6 - 8);
  id v87 = (char *)&v69 - v7;
  uint64_t v83 = type metadata accessor for Dosage();
  uint64_t v8 = MEMORY[0x1F4188790](v83);
  uint64_t v89 = (uint64_t)&v69 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  uint64_t v71 = (uint64_t)&v69 - v11;
  MEMORY[0x1F4188790](v10);
  uint64_t v72 = (uint64_t)&v69 - v12;
  uint64_t v90 = sub_1C2147B20();
  id v77 = *(void (***)(uint64_t, char *, uint64_t))(v90 - 8);
  id v75 = v77;
  MEMORY[0x1F4188790](v90);
  os_log_type_t v14 = (char *)&v69 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1C2147AC0();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  id v88 = (char *)&v69 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v20 = (char *)&v69 - v19;
  *(void *)(v3 + qword_1EA2C55E8) = 0x3FF0000000000000;
  *(void *)(v3 + qword_1EA2C5608) = 0;
  unint64_t v21 = (void *)(v3 + qword_1EA2C7F70);
  v92[0] = sub_1C214A5F0();
  v92[1] = v22;
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  uint64_t v23 = v92[0];
  uint64_t v24 = v92[1];
  swift_retain();
  swift_bridgeObjectRelease();
  *unint64_t v21 = v23;
  v21[1] = v24;
  uint64_t v25 = v91;
  *(void *)(v4 + qword_1EA2C55F0) = v91;
  *(void *)(v4 + qword_1EA2C5600) = a3;
  *(void *)(v4 + qword_1EA2C5610) = 0;
  uint64_t v26 = v25;
  uint64_t v74 = a3;
  swift_retain();
  sub_1C2147AB0();
  uint64_t v27 = v4;
  uint64_t v91 = (void (**)(void))v16;
  uint64_t v28 = *(void (**)(void, void, void))(v16 + 32);
  uint64_t v85 = v16 + 32;
  id v86 = v20;
  id v84 = v28;
  v28(v4 + qword_1EA2C5618, v20, v15);
  id v73 = v26;
  if (v76)
  {
    id v29 = v76;
    uint64_t v30 = sub_1C201A1E8();
    uint64_t v32 = v31;
    uint64_t v34 = v33;
    uint64_t v36 = v35;
  }
  else
  {
    uint64_t v30 = 0;
    uint64_t v32 = 0;
    uint64_t v34 = 0;
    uint64_t v36 = 0;
  }
  uint64_t v37 = (uint64_t *)(v27 + qword_1EA2C55F8);
  uint64_t *v37 = v30;
  v37[1] = v32;
  v37[2] = v34;
  v37[3] = v36;
  swift_release();
  v92[0] = 0;
  v92[1] = 0xE000000000000000;
  sub_1C214B7C0();
  swift_bridgeObjectRelease();
  strcpy((char *)v92, "MutableArray<");
  HIWORD(v92[1]) = -4864;
  sub_1C2147B10();
  sub_1C2147AD0();
  id v39 = v75 + 1;
  uint64_t v38 = v75[1];
  uint64_t v40 = v90;
  ((void (*)(char *, uint64_t))v38)(v14, v90);
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  sub_1C214A6C0();
  uint64_t v41 = MEMORY[0x1E4FBC860];
  uint64_t v42 = sub_1C2148590();
  uint64_t v43 = qword_1EA2C5600;
  swift_retain();
  sub_1C2149E90();
  if (v92[0]) {
    uint64_t v44 = v92[0];
  }
  else {
    uint64_t v44 = v41;
  }
  uint64_t v45 = *(void *)(v44 + 16);
  swift_bridgeObjectRelease();
  if (!v45)
  {
    uint64_t v69 = v43;
    id v70 = v38;
    id v75 = v39;
    uint64_t v79 = qword_1EA2C5610;
    uint64_t v80 = v42 + qword_1EA2C5618;
    id v81 = v14;
    sub_1C21479D0();
    uint64_t v46 = v83;
    uint64_t v47 = v89;
    id v48 = v91 + 2;
    id v49 = v91[2];
    id v50 = v89 + *(int *)(v83 + 20);
    uint64_t v51 = v15;
    v49();
    sub_1C2147B10();
    id v52 = v48;
    uint64_t v91 = 0;
    uint64_t v78 = *(int *)(v46 + 24);
    *(void *)(v47 + v78) = 0x3FF0000000000000;
    id v82 = (void (**)(char *, uint64_t))(v48 - 1);
    uint64_t v83 = (uint64_t)(v48 + 5);
    v77 += 4;
    uint64_t v53 = v42;
    id v54 = (void (*)(char *, char *, uint64_t))v84;
    while (1)
    {
      uint64_t v55 = (uint64_t)v87;
      id v56 = v50;
      id v57 = v52;
      ((void (*)(char *, char *, uint64_t))v49)(v87, (char *)v50, v51);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))v83)(v55, 0, 1, v51);
      sub_1C214A9C0();
      uint64_t v58 = v53;
      char v59 = sub_1C20205A4(v47, v55);
      swift_bridgeObjectRelease();
      uint64_t result = sub_1C2021BB4(v55, &qword_1EBF0B1F0, MEMORY[0x1E4F27928]);
      if (v59) {
        break;
      }
      if (v91 == (void (**)(void))0x7FFFFFFFFFFFFFFDLL)
      {
        __break(1u);
        return result;
      }
      id v61 = v86;
      uint64_t v91 = (void (**)(void))((char *)v91 + 5);
      sub_1C21479D0();
      id v62 = v88;
      (*v82)(v88, v51);
      v54(v62, v61, v51);
      ((void (*)(char *, char *, uint64_t))v49)(v61, v62, v51);
      id v63 = v81;
      sub_1C2147B10();
      uint64_t v64 = v89;
      sub_1C20218A8(v89, (uint64_t (*)(void))type metadata accessor for Dosage);
      id v65 = v63;
      uint64_t v47 = v64;
      (*v77)(v64, v65, v90);
      id v50 = v56;
      v54((char *)v56, v61, v51);
      id v52 = v57;
      *(void *)(v47 + v78) = 0x3FF0000000000000;
    }
    (*v82)(v88, v51);
    uint64_t v66 = v71;
    sub_1C1F4C924(v89, v71);
    uint64_t v67 = v72;
    sub_1C1F4C924(v66, v72);
    uint64_t v42 = v58;
    sub_1C2149E90();
    if (v92[0])
    {
      uint64_t v68 = *(void *)(v92[0] + 16);
      swift_bridgeObjectRelease();
      uint64_t v40 = v90;
      if (!v68) {
        sub_1C201CA00(v67);
      }
    }
    else
    {
      uint64_t v40 = v90;
    }
    sub_1C20218A8(v67, (uint64_t (*)(void))type metadata accessor for Dosage);
    os_log_type_t v14 = v81;
    uint64_t v38 = v70;
  }
  sub_1C2021A38(0, (unint64_t *)&qword_1EA2C2DD0, MEMORY[0x1E4F66468], MEMORY[0x1E4FBBE00]);
  sub_1C2148540();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1C214FCD0;
  swift_retain();
  sub_1C201AFE0();
  sub_1C2147B10();
  sub_1C2147AD0();
  ((void (*)(char *, uint64_t))v38)(v14, v40);
  sub_1C2148520();
  sub_1C21485B0();
  swift_bridgeObjectRelease();
  swift_release_n();

  swift_release();
  return v42;
}

void *sub_1C201AFE0()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1C2149E90();
  if (v19) {
    uint64_t v3 = v19;
  }
  else {
    uint64_t v3 = MEMORY[0x1E4FBC860];
  }
  uint64_t v17 = *(void *)((char *)v0 + qword_1EA2C55F8);
  uint64_t v18 = *(void **)((char *)v0 + qword_1EA2C55F0);
  uint64_t v4 = *(void *)((char *)v0 + qword_1EA2C55F8 + 24);
  uint64_t v15 = *(void *)((char *)v0 + qword_1EA2C55F8 + 16);
  uint64_t v16 = *(void *)((char *)v0 + qword_1EA2C55F8 + 8);
  uint64_t v5 = swift_allocObject();
  swift_weakInit();
  uint64_t v6 = swift_allocObject();
  swift_weakInit();
  uint64_t v7 = swift_allocObject();
  swift_weakInit();
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = v7;
  *(void *)(v8 + 24) = v2;
  uint64_t v9 = swift_allocObject();
  swift_weakInit();
  uint64_t v10 = swift_allocObject();
  swift_weakInit();
  uint64_t v12 = *(void *)((char *)v1 + qword_1EA2C7F70);
  uint64_t v11 = *(void *)((char *)v1 + qword_1EA2C7F70 + 8);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_1C201C1C0(v18, v17, v16, v15, v4, (uint64_t)sub_1C2021AD4, v5, (uint64_t)sub_1C2021ADC, v6, (uint64_t)sub_1C2021B1C, v8, (uint64_t)sub_1C2021B24, v9, (uint64_t)sub_1C2021B2C, v10, v12, v11, 0x4265736F44646441, 0xED00006E6F747475,
          v3);
  swift_bridgeObjectRelease();
  swift_release_n();
  swift_release_n();
  swift_release();
  swift_release();
  swift_release_n();
  swift_release_n();
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_1C201B2A4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  if (!swift_weakLoadStrong()) {
    return sub_1C2021840(a1, a2, (uint64_t (*)(void))type metadata accessor for Dosage);
  }
  sub_1C201C59C(a1, a2);
  return swift_release();
}

uint64_t sub_1C201B33C()
{
  uint64_t v54 = sub_1C2147B20();
  uint64_t v0 = *(void *)(v54 - 8);
  MEMORY[0x1F4188790](v54);
  uint64_t v53 = (char *)&v45 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2021A38(0, &qword_1EBF0B1F0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v2 - 8);
  char v59 = (char *)&v45 - v3;
  uint64_t v4 = sub_1C2147AC0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  id v52 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v45 - v8;
  uint64_t v10 = type metadata accessor for Dosage();
  uint64_t v11 = MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x1F4188790](v11);
  uint64_t v16 = (char *)&v45 - v15;
  MEMORY[0x1F4188790](v14);
  uint64_t v18 = (char *)&v45 - v17;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v45 = v16;
    uint64_t v46 = v18;
    uint64_t v50 = qword_1EA2C5610;
    uint64_t v51 = result + qword_1EA2C5618;
    uint64_t v58 = result;
    sub_1C21479D0();
    uint64_t v20 = &v13[*(int *)(v10 + 20)];
    uint64_t v22 = v5 + 16;
    unint64_t v21 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
    id v56 = v9;
    v21(v20, v9, v4);
    sub_1C2147B10();
    uint64_t v60 = 0;
    uint64_t v23 = *(int *)(v10 + 24);
    *(void *)&v13[v23] = 0x3FF0000000000000;
    id v57 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v5 + 56);
    uint64_t v55 = (void (**)(char *, uint64_t))(v5 + 8);
    uint64_t v48 = v5 + 32;
    uint64_t v49 = v23;
    uint64_t v47 = (void (**)(uint64_t, char *, uint64_t))(v0 + 32);
    uint64_t v24 = (uint64_t)v13;
    uint64_t v25 = (void (**)(char *, char *, uint64_t))(v5 + 32);
    while (1)
    {
      uint64_t v26 = (uint64_t)v59;
      uint64_t v27 = v20;
      uint64_t v28 = v20;
      uint64_t v29 = v22;
      uint64_t v30 = v21;
      v21(v59, v28, v4);
      uint64_t v31 = v4;
      (*v57)(v26, 0, 1, v4);
      sub_1C214A9C0();
      uint64_t v32 = v24;
      char v33 = sub_1C20205A4(v24, v26);
      swift_bridgeObjectRelease();
      uint64_t result = sub_1C2021BB4(v26, &qword_1EBF0B1F0, MEMORY[0x1E4F27928]);
      if (v33)
      {
        (*v55)(v56, v4);
        uint64_t v42 = (uint64_t)v45;
        sub_1C1F4C924(v24, (uint64_t)v45);
        uint64_t v43 = (uint64_t)v46;
        sub_1C1F4C924(v42, (uint64_t)v46);
        uint64_t v44 = sub_1C201CA00(v43);
        sub_1C201AFE0(v44);
        sub_1C21485C0();
        swift_release();
        swift_bridgeObjectRelease();
        return sub_1C20218A8(v43, (uint64_t (*)(void))type metadata accessor for Dosage);
      }
      if (v60 == 0x7FFFFFFFFFFFFFFDLL) {
        break;
      }
      uint64_t v34 = v52;
      v60 += 5;
      sub_1C21479D0();
      uint64_t v35 = v56;
      uint64_t v36 = v31;
      (*v55)(v56, v31);
      uint64_t v37 = *v25;
      (*v25)(v35, v34, v31);
      v30(v34, v35, v31);
      uint64_t v38 = v53;
      sub_1C2147B10();
      uint64_t v39 = v32;
      sub_1C20218A8(v32, (uint64_t (*)(void))type metadata accessor for Dosage);
      uint64_t v40 = v32;
      uint64_t v22 = v29;
      (*v47)(v40, v38, v54);
      uint64_t v20 = v27;
      uint64_t v41 = v34;
      uint64_t v24 = v39;
      uint64_t v4 = v36;
      v37(v27, v41, v36);
      unint64_t v21 = v30;
      *(void *)(v39 + v49) = 0x3FF0000000000000;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1C201B8BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v55 = a4;
  uint64_t v56 = a3;
  uint64_t v5 = sub_1C21497F0();
  uint64_t v58 = *(void *)(v5 - 8);
  uint64_t v59 = v5;
  uint64_t v6 = MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  id v57 = (char *)&v51 - v9;
  sub_1C2021A38(0, &qword_1EA2C5650, (uint64_t (*)(uint64_t))type metadata accessor for Dosage, MEMORY[0x1E4FBB718]);
  uint64_t v11 = MEMORY[0x1F4188790](v10 - 8);
  uint64_t v13 = (char *)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)&v51 - v14;
  uint64_t v16 = type metadata accessor for Dosage();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = MEMORY[0x1F4188790](v16);
  uint64_t v20 = (char *)&v51 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = MEMORY[0x1F4188790](v18);
  uint64_t v23 = (char *)&v51 - v22;
  MEMORY[0x1F4188790](v21);
  uint64_t v25 = (char *)&v51 - v24;
  sub_1C2021B34(a2, (uint64_t)v15, &qword_1EA2C5650, (uint64_t (*)(uint64_t))type metadata accessor for Dosage);
  uint64_t v26 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48);
  if (v26((uint64_t)v15, 1, v16) != 1)
  {
    uint64_t v53 = v20;
    uint64_t v54 = v13;
    id v57 = v8;
    sub_1C1F4C924((uint64_t)v15, (uint64_t)v25);
    swift_beginAccess();
    if (swift_weakLoadStrong())
    {
      sub_1C2149E90();
      uint64_t v35 = v60[0];
      swift_release();
      if (!v35) {
        uint64_t v35 = MEMORY[0x1E4FBC860];
      }
      uint64_t v36 = *(void *)(v35 + 16);
      id v52 = v26;
      if (v36)
      {
        uint64_t v37 = v35 + ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80));
        uint64_t v38 = *(void *)(v17 + 72);
        swift_bridgeObjectRetain();
        while (1)
        {
          sub_1C2021840(v37, (uint64_t)v23, (uint64_t (*)(void))type metadata accessor for Dosage);
          if (sub_1C2147AF0()) {
            break;
          }
          sub_1C20218A8((uint64_t)v23, (uint64_t (*)(void))type metadata accessor for Dosage);
          v37 += v38;
          if (!--v36)
          {
            swift_bridgeObjectRelease();
            goto LABEL_13;
          }
        }
        swift_bridgeObjectRelease();
        uint64_t v41 = (uint64_t)v54;
        sub_1C1F4C924((uint64_t)v23, (uint64_t)v54);
        uint64_t v39 = 0;
        uint64_t v40 = v57;
      }
      else
      {
LABEL_13:
        uint64_t v39 = 1;
        uint64_t v40 = v57;
        uint64_t v41 = (uint64_t)v54;
      }
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 56))(v41, v39, 1, v16);
      swift_bridgeObjectRelease();
      if (v52(v41, 1, v16) != 1)
      {
        sub_1C2021BB4(v41, &qword_1EA2C5650, (uint64_t (*)(uint64_t))type metadata accessor for Dosage);
        swift_beginAccess();
        if (swift_weakLoadStrong())
        {
          sub_1C201D098((uint64_t)v25);
          swift_release();
        }
        return sub_1C20218A8((uint64_t)v25, (uint64_t (*)(void))type metadata accessor for Dosage);
      }
    }
    else
    {
      uint64_t v41 = (uint64_t)v54;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v54, 1, 1, v16);
      uint64_t v40 = v57;
    }
    sub_1C2021BB4(v41, &qword_1EA2C5650, (uint64_t (*)(uint64_t))type metadata accessor for Dosage);
    sub_1C21497A0();
    uint64_t v42 = (uint64_t)v53;
    sub_1C2021840((uint64_t)v25, (uint64_t)v53, (uint64_t (*)(void))type metadata accessor for Dosage);
    uint64_t v43 = sub_1C21497E0();
    os_log_type_t v44 = sub_1C214ABD0();
    if (os_log_type_enabled(v43, v44))
    {
      uint64_t v45 = swift_slowAlloc();
      id v57 = (char *)swift_slowAlloc();
      v60[0] = (uint64_t)v57;
      *(_DWORD *)uint64_t v45 = 136315394;
      uint64_t v46 = sub_1C214BC10();
      uint64_t v61 = sub_1C1F6FD54(v46, v47, v60);
      sub_1C214B530();
      swift_bridgeObjectRelease();
      *(_WORD *)(v45 + 12) = 2080;
      sub_1C2147B20();
      sub_1C2021928(&qword_1EA2C39F8, MEMORY[0x1E4F27990]);
      uint64_t v48 = sub_1C214BA40();
      uint64_t v61 = sub_1C1F6FD54(v48, v49, v60);
      sub_1C214B530();
      swift_bridgeObjectRelease();
      sub_1C20218A8(v42, (uint64_t (*)(void))type metadata accessor for Dosage);
      _os_log_impl(&dword_1C1F0B000, v43, v44, "[%s] Unable to find dosage with uuid = %s", (uint8_t *)v45, 0x16u);
      uint64_t v50 = v57;
      swift_arrayDestroy();
      MEMORY[0x1C8754730](v50, -1, -1);
      MEMORY[0x1C8754730](v45, -1, -1);
    }
    else
    {
      sub_1C20218A8(v42, (uint64_t (*)(void))type metadata accessor for Dosage);
    }

    (*(void (**)(char *, uint64_t))(v58 + 8))(v40, v59);
    return sub_1C20218A8((uint64_t)v25, (uint64_t (*)(void))type metadata accessor for Dosage);
  }
  sub_1C2021BB4((uint64_t)v15, &qword_1EA2C5650, (uint64_t (*)(uint64_t))type metadata accessor for Dosage);
  uint64_t v27 = v57;
  sub_1C21497A0();
  uint64_t v28 = sub_1C21497E0();
  os_log_type_t v29 = sub_1C214ABD0();
  if (os_log_type_enabled(v28, v29))
  {
    uint64_t v30 = (uint8_t *)swift_slowAlloc();
    uint64_t v31 = swift_slowAlloc();
    v62[0] = v31;
    *(_DWORD *)uint64_t v30 = 136315138;
    uint64_t v32 = sub_1C214BC10();
    v60[0] = sub_1C1F6FD54(v32, v33, v62);
    sub_1C214B530();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C1F0B000, v28, v29, "[%s] Unable to update dosage. Dosage was nil", v30, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C8754730](v31, -1, -1);
    MEMORY[0x1C8754730](v30, -1, -1);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v58 + 8))(v27, v59);
}

uint64_t sub_1C201C0B0(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v4 = sub_1C201D52C(a2);
    sub_1C201AFE0(v4);
    sub_1C21485C0();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C201C130(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    uint64_t v4 = type metadata accessor for DosageItem(0);
    char v5 = sub_1C20205A4(a1 + *(int *)(v4 + 28), a2);
    swift_release();
  }
  else
  {
    char v5 = 0;
  }
  return v5 & 1;
}

void *sub_1C201C1C0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v66 = a8;
  uint64_t v56 = a7;
  uint64_t v53 = a4;
  uint64_t v52 = a2;
  uint64_t v64 = a17;
  uint64_t v65 = a18;
  uint64_t v62 = a16;
  uint64_t v63 = a19;
  uint64_t v57 = a15;
  uint64_t v67 = a13;
  uint64_t v68 = a20;
  uint64_t v61 = a9;
  uint64_t v25 = sub_1C21487B0();
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v59 = v25;
  uint64_t v60 = v26;
  uint64_t v27 = MEMORY[0x1F4188790](v25);
  uint64_t v58 = (char *)&v47 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v27);
  uint64_t v55 = (char *)&v47 - v29;
  id v54 = a1;
  uint64_t v50 = a3;
  uint64_t v51 = a5;
  sub_1C2021590(a2, a3);
  uint64_t v30 = v56;
  sub_1C1F1325C(a6);
  uint64_t v48 = a10;
  uint64_t v49 = a11;
  sub_1C1F1325C(a10);
  uint64_t v31 = v67;
  sub_1C1F1325C(a12);
  uint64_t v32 = v57;
  sub_1C1F1325C(a14);
  uint64_t v46 = v31;
  unint64_t v33 = v54;
  uint64_t v34 = v52;
  uint64_t v35 = (void *)sub_1C2021008(v68, v54, v52, a3, v53, a5, a6, v30, a10, a11, a12, v46, a14, v32);
  uint64_t v36 = (uint64_t)v55;
  sub_1C1F31118(a14);
  uint64_t v37 = v58;
  sub_1C1F31118(a12);
  sub_1C1F31118(v48);
  uint64_t v38 = v59;
  sub_1C1F31118(a6);
  uint64_t v39 = v60;
  sub_1C20215D4(v34, v50);

  sub_1C201EA3C(v65, v63, v62, v64, v66, v61, v36);
  uint64_t v40 = *(void (**)(char *, uint64_t, uint64_t))(v39 + 16);
  v40(v37, v36, v38);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v35 = sub_1C1F3AAC4(0, v35[2] + 1, 1, v35);
  }
  unint64_t v42 = v35[2];
  unint64_t v41 = v35[3];
  if (v42 >= v41 >> 1) {
    uint64_t v35 = sub_1C1F3AAC4((void *)(v41 > 1), v42 + 1, 1, v35);
  }
  uint64_t v70 = v38;
  uint64_t v71 = sub_1C2021928((unint64_t *)&qword_1EA2C2E68, MEMORY[0x1E4F66510]);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v69);
  v40((char *)boxed_opaque_existential_1, (uint64_t)v37, v38);
  v35[2] = v42 + 1;
  sub_1C1F31280(&v69, (uint64_t)&v35[5 * v42 + 4]);
  os_log_type_t v44 = *(void (**)(char *, uint64_t))(v39 + 8);
  v44(v37, v38);
  v44((char *)v36, v38);
  return v35;
}

uint64_t sub_1C201C59C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v23 = sub_1C2147B20();
  uint64_t v21 = *(void *)(v23 - 8);
  MEMORY[0x1F4188790](v23);
  uint64_t v22 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Dosage();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2021A38(0, &qword_1EA2C5650, (uint64_t (*)(uint64_t))type metadata accessor for Dosage, MEMORY[0x1E4FBB718]);
  uint64_t v10 = MEMORY[0x1F4188790](v9 - 8);
  uint64_t v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v21 - v13;
  sub_1C2149E90();
  if (v25) {
    unint64_t v15 = v25;
  }
  else {
    unint64_t v15 = MEMORY[0x1E4FBC860];
  }
  uint64_t v16 = *(void *)(v15 + 16);
  if (v16)
  {
    uint64_t v24 = a2;
    uint64_t v17 = v15 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    uint64_t v18 = *(void *)(v6 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_1C2021840(v17, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for Dosage);
      if (sub_1C2147AF0()) {
        break;
      }
      sub_1C20218A8((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for Dosage);
      v17 += v18;
      if (!--v16)
      {
        swift_bridgeObjectRelease();
        uint64_t v19 = 1;
        goto LABEL_11;
      }
    }
    swift_bridgeObjectRelease();
    sub_1C1F4C924((uint64_t)v8, (uint64_t)v14);
    uint64_t v19 = 0;
LABEL_11:
    a2 = v24;
  }
  else
  {
    uint64_t v19 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v14, v19, 1, v5);
  swift_bridgeObjectRelease();
  sub_1C2021B34((uint64_t)v14, (uint64_t)v12, &qword_1EA2C5650, (uint64_t (*)(uint64_t))type metadata accessor for Dosage);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v12, 1, v5) == 1)
  {
    sub_1C2021BB4((uint64_t)v12, &qword_1EA2C5650, (uint64_t (*)(uint64_t))type metadata accessor for Dosage);
    (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v22, a1, v23);
    unint64_t v25 = 0;
    unint64_t v26 = 0xE000000000000000;
    sub_1C214B7C0();
    swift_bridgeObjectRelease();
    unint64_t v25 = 0xD00000000000001DLL;
    unint64_t v26 = 0x80000001C2165F00;
    sub_1C2021928(&qword_1EA2C39F8, MEMORY[0x1E4F27990]);
    sub_1C214BA40();
    sub_1C214A6C0();
    swift_bridgeObjectRelease();
    uint64_t result = sub_1C214B910();
    __break(1u);
  }
  else
  {
    sub_1C2021BB4((uint64_t)v14, &qword_1EA2C5650, (uint64_t (*)(uint64_t))type metadata accessor for Dosage);
    return sub_1C1F4C924((uint64_t)v12, a2);
  }
  return result;
}

uint64_t sub_1C201CA00(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v2;
  uint64_t v5 = type metadata accessor for Dosage();
  uint64_t v53 = *(void *)(v5 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v5 - 8);
  uint64_t v52 = (uint64_t)v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v49 - v8;
  uint64_t v10 = sub_1C21497F0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)v49 - v15;
  sub_1C21497A0();
  uint64_t v50 = a1;
  sub_1C2021840(a1, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for Dosage);
  uint64_t v17 = sub_1C21497E0();
  os_log_type_t v18 = sub_1C214ABB0();
  BOOL v19 = os_log_type_enabled(v17, v18);
  uint64_t v54 = v11;
  uint64_t v55 = v10;
  uint64_t v56 = v14;
  v49[0] = v4;
  if (v19)
  {
    uint64_t v20 = swift_slowAlloc();
    uint64_t v21 = swift_slowAlloc();
    v58[0] = v21;
    *(_DWORD *)uint64_t v20 = 136315394;
    uint64_t v22 = sub_1C214BC10();
    uint64_t v59 = sub_1C1F6FD54(v22, v23, v58);
    sub_1C214B530();
    swift_bridgeObjectRelease();
    *(_WORD *)(v20 + 12) = 2080;
    uint64_t v24 = Dosage.description.getter();
    uint64_t v59 = sub_1C1F6FD54(v24, v25, v58);
    uint64_t v11 = v54;
    sub_1C214B530();
    swift_bridgeObjectRelease();
    sub_1C20218A8((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for Dosage);
    _os_log_impl(&dword_1C1F0B000, v17, v18, "[%s] Request to add dosage = %s.", (uint8_t *)v20, 0x16u);
    swift_arrayDestroy();
    uint64_t v26 = v21;
    uint64_t v10 = v55;
    MEMORY[0x1C8754730](v26, -1, -1);
    MEMORY[0x1C8754730](v20, -1, -1);
  }
  else
  {
    sub_1C20218A8((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for Dosage);
  }

  uint64_t v51 = *(void (**)(char *, uint64_t))(v11 + 8);
  v51(v16, v10);
  uint64_t v27 = *(uint64_t *)((char *)v2 + qword_1EA2C5600);
  sub_1C2149E90();
  if (v58[0]) {
    unint64_t v28 = v58[0];
  }
  else {
    unint64_t v28 = MEMORY[0x1E4FBC860];
  }
  uint64_t v29 = v52;
  sub_1C2021840(v50, v52, (uint64_t (*)(void))type metadata accessor for Dosage);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v28 = sub_1C1F3AA7C(0, *(void *)(v28 + 16) + 1, 1, v28);
  }
  unint64_t v31 = *(void *)(v28 + 16);
  unint64_t v30 = *(void *)(v28 + 24);
  if (v31 >= v30 >> 1) {
    unint64_t v28 = sub_1C1F3AA7C(v30 > 1, v31 + 1, 1, v28);
  }
  *(void *)(v28 + 16) = v31 + 1;
  sub_1C1F4C924(v29, v28+ ((*(unsigned __int8 *)(v53 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v53 + 80))+ *(void *)(v53 + 72) * v31);
  uint64_t v59 = v28;
  uint64_t v32 = v56;
  sub_1C21497A0();
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  unint64_t v33 = sub_1C21497E0();
  os_log_type_t v34 = sub_1C214ABB0();
  BOOL v35 = os_log_type_enabled(v33, v34);
  v49[1] = v27;
  if (v35)
  {
    uint64_t v36 = swift_slowAlloc();
    uint64_t v37 = swift_slowAlloc();
    v58[0] = v37;
    *(_DWORD *)uint64_t v36 = 136315650;
    uint64_t v38 = sub_1C214BC10();
    uint64_t v57 = sub_1C1F6FD54(v38, v39, v58);
    sub_1C214B530();
    swift_bridgeObjectRelease();
    *(_WORD *)(v36 + 12) = 2048;
    sub_1C2149E90();
    if (v57) {
      uint64_t v40 = v57;
    }
    else {
      uint64_t v40 = MEMORY[0x1E4FBC860];
    }
    uint64_t v41 = *(void *)(v40 + 16);
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v57 = v41;
    sub_1C214B530();
    swift_release();
    *(_WORD *)(v36 + 22) = 2048;
    uint64_t v42 = *(void *)(v28 + 16);
    swift_bridgeObjectRelease();
    uint64_t v57 = v42;
    sub_1C214B530();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C1F0B000, v33, v34, "[%s] Dosage count before add = %ld. Dosage count after add = %ld.", (uint8_t *)v36, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1C8754730](v37, -1, -1);
    MEMORY[0x1C8754730](v36, -1, -1);

    uint64_t v43 = v55;
    os_log_type_t v44 = v56;
  }
  else
  {

    swift_release_n();
    swift_bridgeObjectRelease_n();
    os_log_type_t v44 = v32;
    uint64_t v43 = v10;
  }
  uint64_t result = ((uint64_t (*)(char *, uint64_t))v51)(v44, v43);
  uint64_t v46 = *(uint64_t *)((char *)v2 + qword_1EA2C5610);
  BOOL v47 = __OFADD__(v46, 1);
  uint64_t v48 = v46 + 1;
  if (v47)
  {
    __break(1u);
  }
  else
  {
    *(uint64_t *)((char *)v2 + qword_1EA2C5610) = v48;
    swift_beginAccess();
    uint64_t v57 = v59;
    sub_1C2149E70();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C201D098(uint64_t a1)
{
  uint64_t v34 = *v1;
  uint64_t v3 = type metadata accessor for Dosage();
  uint64_t v4 = MEMORY[0x1F4188790](v3 - 8);
  uint64_t v6 = &v29[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = &v29[-v7];
  uint64_t v9 = sub_1C21497F0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = &v29[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1C21497A0();
  sub_1C2021840(a1, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for Dosage);
  sub_1C2021840(a1, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for Dosage);
  uint64_t v13 = sub_1C21497E0();
  os_log_type_t v14 = sub_1C214ABB0();
  int v15 = v14;
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v16 = swift_slowAlloc();
    uint64_t v32 = v9;
    uint64_t v17 = v16;
    uint64_t v31 = swift_slowAlloc();
    uint64_t v36 = v31;
    *(_DWORD *)uint64_t v17 = 136315650;
    uint64_t v18 = sub_1C214BC10();
    unint64_t v33 = v1;
    uint64_t v35 = sub_1C1F6FD54(v18, v19, &v36);
    int v30 = v15;
    sub_1C214B530();
    swift_bridgeObjectRelease();
    *(_WORD *)(v17 + 12) = 2080;
    sub_1C2147B20();
    uint64_t v34 = a1;
    sub_1C2021928(&qword_1EA2C39F8, MEMORY[0x1E4F27990]);
    uint64_t v20 = sub_1C214BA40();
    uint64_t v35 = sub_1C1F6FD54(v20, v21, &v36);
    sub_1C214B530();
    swift_bridgeObjectRelease();
    sub_1C20218A8((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for Dosage);
    *(_WORD *)(v17 + 22) = 2080;
    uint64_t v22 = Dosage.description.getter();
    uint64_t v35 = sub_1C1F6FD54(v22, v23, &v36);
    sub_1C214B530();
    swift_bridgeObjectRelease();
    a1 = v34;
    sub_1C20218A8((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for Dosage);
    _os_log_impl(&dword_1C1F0B000, v13, (os_log_type_t)v30, "[%s] Request to update dosage uuid = %s with updated dosage = %s.", (uint8_t *)v17, 0x20u);
    uint64_t v24 = v31;
    swift_arrayDestroy();
    MEMORY[0x1C8754730](v24, -1, -1);
    MEMORY[0x1C8754730](v17, -1, -1);

    (*(void (**)(unsigned char *, uint64_t))(v10 + 8))(v12, v32);
  }
  else
  {
    sub_1C20218A8((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for Dosage);
    sub_1C20218A8((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for Dosage);

    (*(void (**)(unsigned char *, uint64_t))(v10 + 8))(v12, v9);
  }
  uint64_t v25 = sub_1C2149E90();
  if (v36) {
    uint64_t v26 = v36;
  }
  else {
    uint64_t v26 = MEMORY[0x1E4FBC860];
  }
  MEMORY[0x1F4188790](v25);
  *(void *)&v29[-16] = a1;
  uint64_t v27 = sub_1C2019F0C((void (*)(uint64_t))sub_1C2021970, (uint64_t)&v29[-32], v26);
  swift_bridgeObjectRelease();
  uint64_t v36 = v27;
  sub_1C201A5E8((unint64_t *)&v36);
  uint64_t v35 = v36;
  sub_1C2149E70();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C201D52C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v2;
  uint64_t v5 = type metadata accessor for Dosage();
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1C21497F0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  os_log_type_t v14 = (char *)v45 - v13;
  sub_1C21497A0();
  uint64_t v48 = a1;
  sub_1C2021840(a1, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for Dosage);
  int v15 = sub_1C21497E0();
  os_log_type_t v16 = sub_1C214ABB0();
  BOOL v17 = os_log_type_enabled(v15, v16);
  uint64_t v49 = v12;
  uint64_t v50 = v9;
  uint64_t v46 = v4;
  if (v17)
  {
    uint64_t v18 = swift_slowAlloc();
    uint64_t v47 = swift_slowAlloc();
    uint64_t v52 = v47;
    *(_DWORD *)uint64_t v18 = 136315394;
    uint64_t v19 = sub_1C214BC10();
    uint64_t v51 = sub_1C1F6FD54(v19, v20, &v52);
    sub_1C214B530();
    swift_bridgeObjectRelease();
    *(_WORD *)(v18 + 12) = 2080;
    v45[1] = v18 + 14;
    sub_1C2147B20();
    sub_1C2021928(&qword_1EA2C39F8, MEMORY[0x1E4F27990]);
    uint64_t v21 = sub_1C214BA40();
    uint64_t v51 = sub_1C1F6FD54(v21, v22, &v52);
    uint64_t v9 = v50;
    sub_1C214B530();
    swift_bridgeObjectRelease();
    sub_1C20218A8((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for Dosage);
    _os_log_impl(&dword_1C1F0B000, v15, v16, "[%s] Request to delete dosage with uuid = %s", (uint8_t *)v18, 0x16u);
    uint64_t v23 = v47;
    swift_arrayDestroy();
    MEMORY[0x1C8754730](v23, -1, -1);
    uint64_t v24 = v18;
    uint64_t v12 = v49;
    MEMORY[0x1C8754730](v24, -1, -1);
  }
  else
  {
    sub_1C20218A8((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for Dosage);
  }

  uint64_t v25 = *(void (**)(char *, uint64_t))(v9 + 8);
  v25(v14, v8);
  uint64_t v26 = *(uint64_t *)((char *)v2 + qword_1EA2C5600);
  uint64_t v27 = sub_1C2149E90();
  MEMORY[0x1F4188790](v27);
  v45[-2] = v48;
  uint64_t v29 = sub_1C2019C9C((uint64_t (*)(char *))sub_1C2021908, (uint64_t)&v45[-4], v28);
  sub_1C21497A0();
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  int v30 = sub_1C21497E0();
  os_log_type_t v31 = sub_1C214ABB0();
  BOOL v32 = os_log_type_enabled(v30, v31);
  uint64_t v47 = v26;
  if (v32)
  {
    uint64_t v33 = swift_slowAlloc();
    uint64_t v34 = swift_slowAlloc();
    uint64_t v48 = v8;
    uint64_t v35 = v34;
    uint64_t v52 = v34;
    *(_DWORD *)uint64_t v33 = 136315650;
    uint64_t v36 = sub_1C214BC10();
    uint64_t v51 = sub_1C1F6FD54(v36, v37, &v52);
    sub_1C214B530();
    swift_bridgeObjectRelease();
    uint64_t v46 = (uint64_t (*)(char *, uint64_t))v25;
    *(_WORD *)(v33 + 12) = 2048;
    sub_1C2149E90();
    if (v51) {
      uint64_t v38 = v51;
    }
    else {
      uint64_t v38 = MEMORY[0x1E4FBC860];
    }
    uint64_t v39 = *(void *)(v38 + 16);
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v51 = v39;
    sub_1C214B530();
    swift_release();
    *(_WORD *)(v33 + 22) = 2048;
    uint64_t v40 = *(void *)(v29 + 16);
    swift_bridgeObjectRelease();
    uint64_t v51 = v40;
    sub_1C214B530();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C1F0B000, v30, v31, "[%s] Dosage count before delete = %ld. Dosage count after delete = %ld.", (uint8_t *)v33, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1C8754730](v35, -1, -1);
    MEMORY[0x1C8754730](v33, -1, -1);

    uint64_t result = v46(v49, v48);
  }
  else
  {

    swift_release_n();
    swift_bridgeObjectRelease_n();
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v25)(v12, v8);
  }
  uint64_t v42 = *(uint64_t *)((char *)v2 + qword_1EA2C5610);
  BOOL v43 = __OFSUB__(v42, 1);
  uint64_t v44 = v42 - 1;
  if (v43)
  {
    __break(1u);
  }
  else
  {
    *(uint64_t (**)(char *, uint64_t))((char *)v2 + qword_1EA2C5610) = (uint64_t (*)(char *, uint64_t))(v44 & ~(v44 >> 63));
    uint64_t v52 = v29;
    sub_1C2149E70();
    return swift_bridgeObjectRelease();
  }
  return result;
}

BOOL sub_1C201DB6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C2147B20();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)v14 - v9;
  uint64_t v11 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v11((char *)v14 - v9, a1, v4);
  v11(v8, a2, v4);
  sub_1C2021928(&qword_1EA2C5648, MEMORY[0x1E4F27990]);
  LOBYTE(a2) = sub_1C214A5A0();
  uint64_t v12 = *(void (**)(char *, uint64_t))(v5 + 8);
  v12(v8, v4);
  v12(v10, v4);
  return (a2 & 1) == 0;
}

void sub_1C201DD0C()
{
}

uint64_t sub_1C201DD3C()
{
  sub_1C20215D4(*(void *)(v0 + qword_1EA2C55F8), *(void *)(v0 + qword_1EA2C55F8 + 8));
  swift_release();
  swift_release();
  uint64_t v1 = v0 + qword_1EA2C5618;
  uint64_t v2 = sub_1C2147AC0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_bridgeObjectRelease();
}

uint64_t sub_1C201DE04()
{
  uint64_t v0 = sub_1C2148610();

  sub_1C20215D4(*(void *)(v0 + qword_1EA2C55F8), *(void *)(v0 + qword_1EA2C55F8 + 8));
  swift_release();
  swift_release();
  uint64_t v1 = v0 + qword_1EA2C5618;
  uint64_t v2 = sub_1C2147AC0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_1C201DF08()
{
  return type metadata accessor for DosagesPerDaySectionDataSource();
}

uint64_t sub_1C201DF10()
{
  return sub_1C214ACC0();
}

void *sub_1C201DFE8()
{
  uint64_t v0 = sub_1C2148710();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2148660();
  uint64_t v4 = (void *)sub_1C2148700();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  sub_1C214AEA0();
  objc_msgSend(v4, sel_setContentInsets_);
  objc_msgSend(v4, sel_contentInsets);
  objc_msgSend(v4, sel_setContentInsets_);
  objc_msgSend(v4, sel_setContentInsetsReference_, 1);
  return v4;
}

uint64_t sub_1C201E104()
{
  return sub_1C2148B80();
}

uint64_t sub_1C201E160@<X0>(uint64_t *a1@<X8>)
{
  if (qword_1EBF0CA00 != -1) {
    swift_once();
  }
  id v2 = (id)qword_1EBF0CA18;
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_1C2147730();
  uint64_t v5 = v4;
  swift_bridgeObjectRelease();

  type metadata accessor for ScheduleHeaderCell();
  sub_1C2021928(&qword_1EA2C4C60, (void (*)(uint64_t))type metadata accessor for ScheduleHeaderCell);
  uint64_t v6 = sub_1C21481D0();
  uint64_t v8 = v7;
  sub_1C21481D0();
  swift_bridgeObjectRelease();
  a1[3] = (uint64_t)&type metadata for ScheduleHeaderItem;
  a1[4] = sub_1C1FDDC00();
  uint64_t result = swift_allocObject();
  *a1 = result;
  *(void *)(result + 16) = v3;
  *(void *)(result + 24) = v5;
  *(unsigned char *)(result + 32) = 0;
  *(void *)(result + 40) = nullsub_1;
  *(void *)(result + 48) = 0;
  *(void *)(result + 56) = v6;
  *(void *)(result + 64) = v8;
  return result;
}

uint64_t sub_1C201E2F8()
{
  return sub_1C2021928(&qword_1EA2C5630, (void (*)(uint64_t))type metadata accessor for DosagesPerDaySectionDataSource);
}

size_t sub_1C201E340(uint64_t a1)
{
  sub_1C2021A38(0, &qword_1EA2C5650, (uint64_t (*)(uint64_t))type metadata accessor for Dosage, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v48 = (uint64_t)&v36 - v3;
  uint64_t v47 = sub_1C2147CD0();
  uint64_t v4 = *(void *)(v47 - 8);
  MEMORY[0x1F4188790](v47);
  uint64_t v46 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = type metadata accessor for Dosage();
  uint64_t v6 = *(void *)(v55 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v55);
  uint64_t v40 = (uint64_t)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v36 - v9;
  uint64_t v11 = sub_1C2147CF0();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  os_log_type_t v14 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v15 = sub_1C1F4A09C(MEMORY[0x1E4FBC860]);
  uint64_t v49 = v14;
  sub_1C2147CB0();
  uint64_t v16 = *(void *)(a1 + 16);
  if (v16)
  {
    uint64_t v51 = v15;
    uint64_t v37 = v12;
    uint64_t v38 = v11;
    uint64_t v17 = a1 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    uint64_t v50 = *(void *)(v6 + 72);
    unsigned int v45 = *MEMORY[0x1E4F27C10];
    BOOL v43 = (void (**)(char *, uint64_t))(v4 + 8);
    uint64_t v44 = (void (**)(char *, void, uint64_t))(v4 + 104);
    unsigned int v42 = *MEMORY[0x1E4F27C48];
    uint64_t v41 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56);
    uint64_t v39 = a1;
    swift_bridgeObjectRetain();
    uint64_t v18 = v47;
    do
    {
      uint64_t v53 = v17;
      uint64_t v54 = v16;
      sub_1C2021840(v17, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for Dosage);
      unint64_t v22 = v10;
      uint64_t v23 = *v44;
      uint64_t v24 = v46;
      (*v44)(v46, v45, v18);
      uint64_t v52 = sub_1C2147CE0();
      uint64_t v25 = *v43;
      (*v43)(v24, v18);
      v23(v24, v42, v18);
      uint64_t v10 = v22;
      uint64_t v26 = sub_1C2147CE0();
      v25(v24, v18);
      uint64_t v57 = 0;
      uint64_t v58 = 0xE000000000000000;
      sub_1C214A9E0();
      sub_1C214A6C0();
      uint64_t v56 = v52;
      sub_1C214BA40();
      sub_1C214A6C0();
      swift_bridgeObjectRelease();
      sub_1C214A6C0();
      uint64_t v56 = v26;
      sub_1C214BA40();
      sub_1C214A6C0();
      swift_bridgeObjectRelease();
      uint64_t v27 = v57;
      uint64_t v28 = v58;
      uint64_t v29 = v51;
      if (*(void *)(v51 + 16) && (unint64_t v30 = sub_1C1F4B4D0(v57, v58), (v31 & 1) != 0))
      {
        uint64_t v32 = v48;
        sub_1C2021840(*(void *)(v29 + 56) + v30 * v50, v48, (uint64_t (*)(void))type metadata accessor for Dosage);
        (*v41)(v32, 0, 1, v55);
        sub_1C20218A8((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for Dosage);
        swift_bridgeObjectRelease();
        sub_1C2021BB4(v32, &qword_1EA2C5650, (uint64_t (*)(uint64_t))type metadata accessor for Dosage);
      }
      else
      {
        uint64_t v19 = v48;
        (*v41)(v48, 1, 1, v55);
        sub_1C2021BB4(v19, &qword_1EA2C5650, (uint64_t (*)(uint64_t))type metadata accessor for Dosage);
        uint64_t v20 = v40;
        sub_1C2021840((uint64_t)v10, v40, (uint64_t (*)(void))type metadata accessor for Dosage);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v57 = v29;
        sub_1C201F118(v20, v27, v28, isUniquelyReferenced_nonNull_native);
        uint64_t v51 = v57;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1C20218A8((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for Dosage);
      }
      uint64_t v17 = v53 + v50;
      uint64_t v16 = v54 - 1;
    }
    while (v54 != 1);
    swift_bridgeObjectRelease();
    uint64_t v11 = v38;
    uint64_t v12 = v37;
  }
  uint64_t v33 = swift_bridgeObjectRetain();
  size_t v34 = sub_1C1F7F834(v33);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v49, v11);
  swift_bridgeObjectRelease();
  return v34;
}

uint64_t sub_1C201E980@<X0>(uint64_t a1@<X0>, void (*a2)(void *__return_ptr, uint64_t, uint64_t)@<X1>, uint64_t a3@<X3>, void *a4@<X8>)
{
  if (a2)
  {
    a2(a4, a1, a3);
    uint64_t v5 = type metadata accessor for Dosage();
    uint64_t v6 = *(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);
    uint64_t v7 = v5;
    uint64_t v8 = a4;
    uint64_t v9 = 0;
  }
  else
  {
    uint64_t v10 = type metadata accessor for Dosage();
    uint64_t v6 = *(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56);
    uint64_t v7 = v10;
    uint64_t v8 = a4;
    uint64_t v9 = 1;
  }

  return v6(v8, v9, 1, v7);
}

uint64_t sub_1C201EA3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v53 = a5;
  uint64_t v54 = a6;
  uint64_t v41 = a4;
  uint64_t v45 = a3;
  uint64_t v50 = a1;
  uint64_t v51 = a2;
  uint64_t v49 = a7;
  uint64_t v7 = sub_1C2148A70();
  uint64_t v47 = *(void *)(v7 - 8);
  uint64_t v48 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v46 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2021A38(0, &qword_1EBF0C620, MEMORY[0x1E4FB0F28], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v44 = (char *)&v37 - v10;
  uint64_t v11 = sub_1C2148620();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  unsigned int v42 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = sub_1C21499D0();
  uint64_t v40 = *(void *)(v43 - 8);
  MEMORY[0x1F4188790](v43);
  unint64_t v15 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = sub_1C2149BE0();
  uint64_t v39 = *(void *)(v52 - 8);
  MEMORY[0x1F4188790](v52);
  uint64_t v17 = (char *)&v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2149B70();
  uint64_t v18 = (void *)sub_1C214A5B0();
  id v19 = objc_msgSend(self, sel_systemImageNamed_, v18);

  sub_1C2149BA0();
  uint64_t v20 = self;
  id v21 = objc_msgSend(v20, sel_systemGreenColor);
  unint64_t v22 = (void (*)(uint64_t *, void))sub_1C2149AD0();
  sub_1C2149AC0();
  v22(v57, 0);
  if (qword_1EBF0CA00 != -1) {
    swift_once();
  }
  id v23 = (id)qword_1EBF0CA18;
  swift_bridgeObjectRetain();
  sub_1C2147730();
  swift_bridgeObjectRelease();

  sub_1C2149B90();
  id v24 = objc_msgSend(v20, sel_systemBlueColor);
  uint64_t v38 = v17;
  uint64_t v25 = (void (*)(uint64_t *, void))sub_1C2149AA0();
  sub_1C2149A60();
  v25(v57, 0);
  uint64_t v26 = v15;
  sub_1C21499A0();
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C900);
  sub_1C214B1A0();
  uint64_t v37 = v15;
  sub_1C2149990();
  uint64_t v27 = v52;
  v57[3] = v52;
  v57[4] = MEMORY[0x1E4FB0F88];
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v57);
  uint64_t v29 = v39;
  (*(void (**)(uint64_t *, char *, uint64_t))(v39 + 16))(boxed_opaque_existential_1, v17, v27);
  uint64_t v30 = swift_allocObject();
  uint64_t v31 = v54;
  *(void *)(v30 + 16) = v53;
  *(void *)(v30 + 24) = v31;
  uint64_t v32 = v42;
  *unsigned int v42 = 1;
  (*(void (**)(unsigned char *, void, uint64_t))(v12 + 104))(v32, *MEMORY[0x1E4F66478], v11);
  uint64_t v33 = v40;
  uint64_t v35 = v43;
  size_t v34 = v44;
  (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v44, v26, v43);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v33 + 56))(v34, 0, 1, v35);
  uint64_t v55 = v45;
  uint64_t v56 = v41;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  (*(void (**)(char *, void, uint64_t))(v47 + 104))(v46, *MEMORY[0x1E4F66678], v48);
  sub_1C1F1325C(v53);
  sub_1C21487A0();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v37, v35);
  return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v38, v52);
}

uint64_t sub_1C201F0D0()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 72, 7);
}

uint64_t sub_1C201F118(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  uint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_1C1F4B4D0(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 < v15 || (a4 & 1) == 0)
  {
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_1C1FAD2B8();
      goto LABEL_7;
    }
    sub_1C1FAC860(v15, a4 & 1);
    unint64_t v22 = sub_1C1F4B4D0(a2, a3);
    if ((v16 & 1) == (v23 & 1))
    {
      unint64_t v12 = v22;
      uint64_t v18 = *v5;
      if (v16) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = sub_1C214BAB0();
    __break(1u);
    return result;
  }
LABEL_7:
  uint64_t v18 = *v5;
  if (v16)
  {
LABEL_8:
    uint64_t v19 = v18[7];
    uint64_t v20 = v19 + *(void *)(*(void *)(type metadata accessor for Dosage() - 8) + 72) * v12;
    return sub_1C20219D4(a1, v20);
  }
LABEL_13:
  sub_1C201F2C8(v12, a2, a3, a1, v18);

  return swift_bridgeObjectRetain();
}

unint64_t sub_1C201F280(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[(result >> 6) + 8] |= 1 << result;
  uint64_t v5 = (void *)(a5[6] + 16 * result);
  *uint64_t v5 = a2;
  v5[1] = a3;
  *(void *)(a5[7] + 8 * result) = a4;
  uint64_t v6 = a5[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a5[2] = v8;
  }
  return result;
}

uint64_t sub_1C201F2C8(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = (void *)(a5[6] + 16 * a1);
  *uint64_t v8 = a2;
  v8[1] = a3;
  uint64_t v9 = a5[7];
  uint64_t v10 = type metadata accessor for Dosage();
  uint64_t result = sub_1C1F4C924(a4, v9 + *(void *)(*(void *)(v10 - 8) + 72) * a1);
  uint64_t v12 = a5[2];
  BOOL v13 = __OFADD__(v12, 1);
  uint64_t v14 = v12 + 1;
  if (v13) {
    __break(1u);
  }
  else {
    a5[2] = v14;
  }
  return result;
}

uint64_t sub_1C201F360(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v141 = type metadata accessor for Dosage();
  uint64_t v134 = *(void *)(v141 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v141);
  uint64_t v131 = (uint64_t)&v125 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  uint64_t v142 = (uint64_t)&v125 - v7;
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v138 = (uint64_t)&v125 - v9;
  MEMORY[0x1F4188790](v8);
  uint64_t v137 = (uint64_t)&v125 - v10;
  uint64_t v11 = a1[1];
  uint64_t result = sub_1C214BA30();
  if (result >= v11)
  {
    if (v11 < 0) {
      goto LABEL_142;
    }
    if (v11) {
      return sub_1C201FDEC(0, v11, 1, a1);
    }
    return result;
  }
  if (v11 >= 0) {
    uint64_t v13 = v11;
  }
  else {
    uint64_t v13 = v11 + 1;
  }
  if (v11 < -1) {
    goto LABEL_150;
  }
  uint64_t v127 = result;
  if (v11 < 2)
  {
    uint64_t v17 = MEMORY[0x1E4FBC860];
    unint64_t v133 = MEMORY[0x1E4FBC860]
         + ((*(unsigned __int8 *)(v134 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v134 + 80));
    if (v11 != 1)
    {
      unint64_t v20 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      uint64_t v19 = (char *)MEMORY[0x1E4FBC860];
LABEL_107:
      uint64_t v126 = v17;
      if (v20 >= 2)
      {
        uint64_t v117 = *a1;
        do
        {
          unint64_t v118 = v20 - 2;
          if (v20 < 2) {
            goto LABEL_137;
          }
          if (!v117) {
            goto LABEL_149;
          }
          uint64_t v119 = v19;
          unint64_t v120 = v19 + 32;
          uint64_t v121 = *(void *)&v19[16 * v118 + 32];
          uint64_t v122 = *(void *)&v19[16 * v20 + 24];
          sub_1C2020088(v117 + *(void *)(v134 + 72) * v121, v117 + *(void *)(v134 + 72) * *(void *)&v120[16 * v20 - 16], v117 + *(void *)(v134 + 72) * v122, v133);
          if (v2) {
            break;
          }
          if (v122 < v121) {
            goto LABEL_138;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v119 = sub_1C20FB150((uint64_t)v119);
          }
          if (v118 >= *((void *)v119 + 2)) {
            goto LABEL_139;
          }
          unint64_t v123 = &v119[16 * v118 + 32];
          *(void *)unint64_t v123 = v121;
          *((void *)v123 + 1) = v122;
          unint64_t v124 = *((void *)v119 + 2);
          if (v20 > v124) {
            goto LABEL_140;
          }
          uint64_t v19 = v119;
          memmove(&v119[16 * v20 + 16], &v119[16 * v20 + 32], 16 * (v124 - v20));
          *((void *)v119 + 2) = v124 - 1;
          unint64_t v20 = v124 - 1;
        }
        while (v124 > 2);
      }
LABEL_118:
      swift_bridgeObjectRelease();
      *(void *)(v126 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v126 = MEMORY[0x1E4FBC860];
  }
  else
  {
    uint64_t v14 = v13 >> 1;
    uint64_t v15 = sub_1C214A810();
    *(void *)(v15 + 16) = v14;
    uint64_t v16 = *(unsigned __int8 *)(v134 + 80);
    uint64_t v126 = v15;
    unint64_t v133 = v15 + ((v16 + 32) & ~v16);
  }
  uint64_t v18 = 0;
  uint64_t v19 = (char *)MEMORY[0x1E4FBC860];
  id v140 = a1;
  while (1)
  {
    uint64_t v21 = v18;
    uint64_t v22 = v18 + 1;
    uint64_t v132 = v18;
    if (v18 + 1 >= v11)
    {
      uint64_t v39 = v18 + 1;
      goto LABEL_59;
    }
    uint64_t v129 = v2;
    uint64_t v23 = *(void *)(v134 + 72);
    uint64_t v24 = *a1 + v23 * v22;
    uint64_t v136 = *a1;
    uint64_t v25 = v136;
    uint64_t v26 = v137;
    sub_1C2021840(v24, v137, (uint64_t (*)(void))type metadata accessor for Dosage);
    uint64_t v27 = v25 + v23 * v21;
    uint64_t v28 = v138;
    sub_1C2021840(v27, v138, (uint64_t (*)(void))type metadata accessor for Dosage);
    LODWORD(v139) = sub_1C2147A20();
    sub_1C20218A8(v28, (uint64_t (*)(void))type metadata accessor for Dosage);
    uint64_t v29 = v26;
    uint64_t v30 = v136;
    sub_1C20218A8(v29, (uint64_t (*)(void))type metadata accessor for Dosage);
    uint64_t v143 = v23;
    if (v21 + 2 >= v11)
    {
      uint64_t v33 = v21 + 2;
    }
    else
    {
      uint64_t v31 = v23;
      uint64_t v128 = v19;
      uint64_t v32 = v23 * v22;
      uint64_t v33 = v21 + 2;
      uint64_t v34 = v31 * (v21 + 2);
      while (1)
      {
        uint64_t v35 = v11;
        uint64_t v36 = v137;
        sub_1C2021840(v30 + v34, v137, (uint64_t (*)(void))type metadata accessor for Dosage);
        uint64_t v37 = v138;
        sub_1C2021840(v30 + v32, v138, (uint64_t (*)(void))type metadata accessor for Dosage);
        int v38 = sub_1C2147A20();
        sub_1C20218A8(v37, (uint64_t (*)(void))type metadata accessor for Dosage);
        sub_1C20218A8(v36, (uint64_t (*)(void))type metadata accessor for Dosage);
        if ((v139 ^ v38)) {
          break;
        }
        v30 += v143;
        ++v33;
        uint64_t v11 = v35;
        if (v35 == v33)
        {
          uint64_t v33 = v35;
          uint64_t v19 = v128;
          uint64_t v21 = v132;
          goto LABEL_25;
        }
      }
      uint64_t v19 = v128;
      uint64_t v21 = v132;
      uint64_t v11 = v35;
    }
LABEL_25:
    a1 = v140;
    if ((v139 & 1) == 0)
    {
      uint64_t v39 = v33;
      goto LABEL_39;
    }
    if (v33 < v21) {
      goto LABEL_143;
    }
    uint64_t v39 = v33;
    if (v21 < v33) {
      break;
    }
LABEL_39:
    uint64_t v2 = v129;
    if (v39 < v11) {
      goto LABEL_42;
    }
LABEL_59:
    if (v39 < v21) {
      goto LABEL_136;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v139 = v39;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      uint64_t v19 = sub_1C20FADDC(0, *((void *)v19 + 2) + 1, 1, v19);
    }
    unint64_t v66 = *((void *)v19 + 2);
    unint64_t v65 = *((void *)v19 + 3);
    unint64_t v20 = v66 + 1;
    if (v66 >= v65 >> 1) {
      uint64_t v19 = sub_1C20FADDC((char *)(v65 > 1), v66 + 1, 1, v19);
    }
    *((void *)v19 + 2) = v20;
    uint64_t v67 = v19 + 32;
    uint64_t v68 = &v19[16 * v66 + 32];
    uint64_t v69 = v139;
    *(void *)uint64_t v68 = v21;
    *((void *)v68 + 1) = v69;
    if (v66)
    {
      while (1)
      {
        unint64_t v70 = v20 - 1;
        if (v20 >= 4)
        {
          id v75 = &v67[16 * v20];
          uint64_t v76 = *((void *)v75 - 8);
          uint64_t v77 = *((void *)v75 - 7);
          BOOL v81 = __OFSUB__(v77, v76);
          uint64_t v78 = v77 - v76;
          if (v81) {
            goto LABEL_125;
          }
          uint64_t v80 = *((void *)v75 - 6);
          uint64_t v79 = *((void *)v75 - 5);
          BOOL v81 = __OFSUB__(v79, v80);
          uint64_t v73 = v79 - v80;
          char v74 = v81;
          if (v81) {
            goto LABEL_126;
          }
          unint64_t v82 = v20 - 2;
          uint64_t v83 = &v67[16 * v20 - 32];
          uint64_t v85 = *(void *)v83;
          uint64_t v84 = *((void *)v83 + 1);
          BOOL v81 = __OFSUB__(v84, v85);
          uint64_t v86 = v84 - v85;
          if (v81) {
            goto LABEL_128;
          }
          BOOL v81 = __OFADD__(v73, v86);
          uint64_t v87 = v73 + v86;
          if (v81) {
            goto LABEL_131;
          }
          if (v87 >= v78)
          {
            uint64_t v105 = &v67[16 * v70];
            uint64_t v107 = *(void *)v105;
            uint64_t v106 = *((void *)v105 + 1);
            BOOL v81 = __OFSUB__(v106, v107);
            uint64_t v108 = v106 - v107;
            if (v81) {
              goto LABEL_135;
            }
            BOOL v98 = v73 < v108;
            goto LABEL_96;
          }
        }
        else
        {
          if (v20 != 3)
          {
            uint64_t v99 = *((void *)v19 + 4);
            uint64_t v100 = *((void *)v19 + 5);
            BOOL v81 = __OFSUB__(v100, v99);
            uint64_t v92 = v100 - v99;
            char v93 = v81;
            goto LABEL_90;
          }
          uint64_t v72 = *((void *)v19 + 4);
          uint64_t v71 = *((void *)v19 + 5);
          BOOL v81 = __OFSUB__(v71, v72);
          uint64_t v73 = v71 - v72;
          char v74 = v81;
        }
        if (v74) {
          goto LABEL_127;
        }
        unint64_t v82 = v20 - 2;
        id v88 = &v67[16 * v20 - 32];
        uint64_t v90 = *(void *)v88;
        uint64_t v89 = *((void *)v88 + 1);
        BOOL v91 = __OFSUB__(v89, v90);
        uint64_t v92 = v89 - v90;
        char v93 = v91;
        if (v91) {
          goto LABEL_130;
        }
        uint64_t v94 = &v67[16 * v70];
        uint64_t v96 = *(void *)v94;
        uint64_t v95 = *((void *)v94 + 1);
        BOOL v81 = __OFSUB__(v95, v96);
        uint64_t v97 = v95 - v96;
        if (v81) {
          goto LABEL_133;
        }
        if (__OFADD__(v92, v97)) {
          goto LABEL_134;
        }
        if (v92 + v97 >= v73)
        {
          BOOL v98 = v73 < v97;
LABEL_96:
          if (v98) {
            unint64_t v70 = v82;
          }
          goto LABEL_98;
        }
LABEL_90:
        if (v93) {
          goto LABEL_129;
        }
        uint64_t v101 = &v67[16 * v70];
        uint64_t v103 = *(void *)v101;
        uint64_t v102 = *((void *)v101 + 1);
        BOOL v81 = __OFSUB__(v102, v103);
        uint64_t v104 = v102 - v103;
        if (v81) {
          goto LABEL_132;
        }
        if (v104 < v92) {
          goto LABEL_15;
        }
LABEL_98:
        unint64_t v109 = v70 - 1;
        if (v70 - 1 >= v20)
        {
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
          goto LABEL_145;
        }
        uint64_t v110 = *a1;
        if (!*a1) {
          goto LABEL_147;
        }
        long long v111 = v19;
        uint64_t v112 = &v67[16 * v109];
        uint64_t v113 = *(void *)v112;
        id v114 = &v67[16 * v70];
        uint64_t v115 = *((void *)v114 + 1);
        sub_1C2020088(v110 + *(void *)(v134 + 72) * *(void *)v112, v110 + *(void *)(v134 + 72) * *(void *)v114, v110 + *(void *)(v134 + 72) * v115, v133);
        if (v2) {
          goto LABEL_118;
        }
        if (v115 < v113) {
          goto LABEL_122;
        }
        if (v70 > *((void *)v111 + 2)) {
          goto LABEL_123;
        }
        *(void *)uint64_t v112 = v113;
        *(void *)&v67[16 * v109 + 8] = v115;
        unint64_t v116 = *((void *)v111 + 2);
        if (v70 >= v116) {
          goto LABEL_124;
        }
        uint64_t v19 = v111;
        unint64_t v20 = v116 - 1;
        memmove(&v67[16 * v70], v114 + 16, 16 * (v116 - 1 - v70));
        *((void *)v111 + 2) = v116 - 1;
        a1 = v140;
        if (v116 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v20 = 1;
LABEL_15:
    uint64_t v11 = a1[1];
    uint64_t v18 = v139;
    if (v139 >= v11)
    {
      uint64_t v17 = v126;
      goto LABEL_107;
    }
  }
  uint64_t v139 = v11;
  uint64_t v128 = v19;
  uint64_t v40 = 0;
  uint64_t v41 = v143;
  uint64_t v42 = v143 * (v33 - 1);
  uint64_t v43 = v33 * v143;
  uint64_t v44 = v21;
  uint64_t v45 = v21 * v143;
  do
  {
    if (v44 != v39 + v40 - 1)
    {
      uint64_t v46 = v136;
      if (!v136) {
        goto LABEL_148;
      }
      unint64_t v47 = v136 + v45;
      uint64_t v48 = v136 + v42;
      sub_1C1F4C924(v136 + v45, v131);
      if (v45 < v42 || v47 >= v46 + v43)
      {
        swift_arrayInitWithTakeFrontToBack();
        uint64_t v41 = v143;
      }
      else
      {
        uint64_t v41 = v143;
        if (v45 != v42) {
          swift_arrayInitWithTakeBackToFront();
        }
      }
      sub_1C1F4C924(v131, v48);
      a1 = v140;
      uint64_t v39 = v33;
    }
    ++v44;
    --v40;
    v42 -= v41;
    v43 -= v41;
    v45 += v41;
  }
  while (v44 < v39 + v40);
  uint64_t v19 = v128;
  uint64_t v2 = v129;
  uint64_t v21 = v132;
  uint64_t v11 = v139;
  if (v39 >= v139) {
    goto LABEL_59;
  }
LABEL_42:
  if (__OFSUB__(v39, v21)) {
    goto LABEL_141;
  }
  if (v39 - v21 >= v127) {
    goto LABEL_59;
  }
  if (__OFADD__(v21, v127)) {
    goto LABEL_144;
  }
  if (v21 + v127 >= v11) {
    uint64_t v49 = v11;
  }
  else {
    uint64_t v49 = v21 + v127;
  }
  if (v49 >= v21)
  {
    if (v39 != v49)
    {
      uint64_t v128 = v19;
      uint64_t v129 = v2;
      uint64_t v50 = *(void *)(v134 + 72);
      uint64_t v51 = v50 * (v39 - 1);
      uint64_t v135 = v50;
      uint64_t v52 = v39 * v50;
      uint64_t v130 = v49;
      do
      {
        uint64_t v54 = 0;
        uint64_t v139 = v39;
        uint64_t v136 = v52;
        while (1)
        {
          uint64_t v143 = v21;
          uint64_t v55 = *a1;
          uint64_t v56 = v137;
          sub_1C2021840(v52 + v54 + *a1, v137, (uint64_t (*)(void))type metadata accessor for Dosage);
          uint64_t v57 = v51;
          uint64_t v58 = v51 + v54 + v55;
          uint64_t v59 = a1;
          uint64_t v60 = v138;
          sub_1C2021840(v58, v138, (uint64_t (*)(void))type metadata accessor for Dosage);
          char v61 = sub_1C2147A20();
          sub_1C20218A8(v60, (uint64_t (*)(void))type metadata accessor for Dosage);
          sub_1C20218A8(v56, (uint64_t (*)(void))type metadata accessor for Dosage);
          if ((v61 & 1) == 0) {
            break;
          }
          uint64_t v62 = *v59;
          if (!*v59) {
            goto LABEL_146;
          }
          uint64_t v52 = v136;
          uint64_t v51 = v57;
          uint64_t v63 = v62 + v57 + v54;
          sub_1C1F4C924(v62 + v136 + v54, v142);
          swift_arrayInitWithTakeFrontToBack();
          sub_1C1F4C924(v142, v63);
          v54 -= v135;
          uint64_t v21 = v143 + 1;
          uint64_t v53 = v139;
          a1 = v140;
          if (v139 == v143 + 1) {
            goto LABEL_52;
          }
        }
        uint64_t v53 = v139;
        a1 = v59;
        uint64_t v51 = v57;
        uint64_t v52 = v136;
LABEL_52:
        uint64_t v39 = v53 + 1;
        v51 += v135;
        v52 += v135;
        uint64_t v21 = v132;
      }
      while (v39 != v130);
      uint64_t v39 = v130;
      uint64_t v19 = v128;
      uint64_t v2 = v129;
    }
    goto LABEL_59;
  }
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  __break(1u);
LABEL_149:
  __break(1u);
LABEL_150:
  uint64_t result = sub_1C214B900();
  __break(1u);
  return result;
}

uint64_t sub_1C201FDEC(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v26 = a1;
  uint64_t v29 = type metadata accessor for Dosage();
  uint64_t v7 = MEMORY[0x1F4188790](v29);
  uint64_t v30 = (uint64_t)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v24 - v10;
  uint64_t result = MEMORY[0x1F4188790](v9);
  uint64_t v15 = (char *)&v24 - v14;
  uint64_t v28 = a3;
  uint64_t v25 = a2;
  if (a3 != a2)
  {
    uint64_t v16 = *(void *)(v13 + 72);
    uint64_t v32 = v16 * (v28 - 1);
    uint64_t v27 = v16;
    uint64_t v31 = v16 * v28;
LABEL_5:
    uint64_t v17 = 0;
    uint64_t v18 = v26;
    while (1)
    {
      uint64_t v19 = a4;
      uint64_t v20 = *a4;
      sub_1C2021840(v31 + v17 + v20, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for Dosage);
      sub_1C2021840(v32 + v17 + v20, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for Dosage);
      char v21 = sub_1C2147A20();
      sub_1C20218A8((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for Dosage);
      a4 = v19;
      uint64_t result = sub_1C20218A8((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for Dosage);
      if ((v21 & 1) == 0)
      {
LABEL_4:
        v32 += v27;
        v31 += v27;
        if (++v28 == v25) {
          return result;
        }
        goto LABEL_5;
      }
      uint64_t v22 = *v19;
      if (!*v19) {
        break;
      }
      uint64_t v23 = v22 + v32 + v17;
      sub_1C1F4C924(v22 + v31 + v17, v30);
      swift_arrayInitWithTakeFrontToBack();
      uint64_t result = sub_1C1F4C924(v30, v23);
      v17 -= v27;
      ++v18;
      a4 = v19;
      if (v28 == v18) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1C2020088(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v44 = type metadata accessor for Dosage();
  uint64_t v8 = MEMORY[0x1F4188790](v44);
  uint64_t v43 = (uint64_t)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v40 - v10;
  uint64_t v13 = *(void *)(v12 + 72);
  if (!v13)
  {
    __break(1u);
LABEL_61:
    __break(1u);
LABEL_62:
    __break(1u);
    goto LABEL_63;
  }
  if (a2 - a1 == 0x8000000000000000 && v13 == -1) {
    goto LABEL_61;
  }
  int64_t v14 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v13 == -1) {
    goto LABEL_62;
  }
  uint64_t v15 = (uint64_t)(a2 - a1) / v13;
  unint64_t v47 = a1;
  unint64_t v46 = a4;
  uint64_t v16 = v14 / v13;
  if (v15 >= v14 / v13)
  {
    if ((v16 & 0x8000000000000000) == 0)
    {
      uint64_t v18 = v16 * v13;
      if (a4 < a2 || a2 + v18 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v26 = a4 + v18;
      unint64_t v45 = a4 + v18;
      unint64_t v47 = a2;
      if (v18 >= 1 && a1 < a2)
      {
        unint64_t v41 = a4;
        unint64_t v42 = a1;
        do
        {
          unint64_t v28 = a3 - v13;
          sub_1C2021840(v26 - v13, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for Dosage);
          unint64_t v29 = a2 - v13;
          unint64_t v30 = a3;
          uint64_t v31 = (uint64_t)v11;
          uint64_t v32 = v43;
          sub_1C2021840(a2 - v13, v43, (uint64_t (*)(void))type metadata accessor for Dosage);
          char v33 = sub_1C2147A20();
          uint64_t v34 = v32;
          uint64_t v11 = (char *)v31;
          sub_1C20218A8(v34, (uint64_t (*)(void))type metadata accessor for Dosage);
          sub_1C20218A8(v31, (uint64_t (*)(void))type metadata accessor for Dosage);
          if (v33)
          {
            if (v30 < a2 || v28 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v36 = v41;
              unint64_t v37 = v42;
            }
            else
            {
              BOOL v35 = v30 == a2;
              unint64_t v36 = v41;
              unint64_t v37 = v42;
              if (!v35) {
                swift_arrayInitWithTakeBackToFront();
              }
            }
            v47 -= v13;
          }
          else
          {
            unint64_t v38 = v45;
            v45 -= v13;
            if (v30 < v38 || v28 >= v38)
            {
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v29 = a2;
              unint64_t v36 = v41;
              unint64_t v37 = v42;
            }
            else
            {
              unint64_t v37 = v42;
              if (v30 != v38) {
                swift_arrayInitWithTakeBackToFront();
              }
              unint64_t v29 = a2;
              unint64_t v36 = v41;
            }
          }
          unint64_t v26 = v45;
          if (v45 <= v36) {
            break;
          }
          a2 = v29;
          a3 = v28;
        }
        while (v29 > v37);
      }
      goto LABEL_59;
    }
  }
  else if ((v15 & 0x8000000000000000) == 0)
  {
    uint64_t v17 = v15 * v13;
    if (a4 < a1 || a1 + v17 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v19 = a4 + v17;
    unint64_t v45 = a4 + v17;
    if (v17 >= 1 && a2 < a3)
    {
      do
      {
        sub_1C2021840(a2, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for Dosage);
        uint64_t v21 = v43;
        sub_1C2021840(a4, v43, (uint64_t (*)(void))type metadata accessor for Dosage);
        char v22 = sub_1C2147A20();
        sub_1C20218A8(v21, (uint64_t (*)(void))type metadata accessor for Dosage);
        sub_1C20218A8((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for Dosage);
        unint64_t v23 = v47;
        if (v22)
        {
          unint64_t v24 = a2 + v13;
          if (v47 < a2 || v47 >= v24)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v47 == a2)
          {
            unint64_t v23 = a2;
          }
          else
          {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        else
        {
          unint64_t v25 = v46 + v13;
          if (v47 < v46 || v47 >= v25)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v47 != v46)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          unint64_t v46 = v25;
          unint64_t v24 = a2;
        }
        unint64_t v47 = v23 + v13;
        a4 = v46;
        if (v46 >= v19) {
          break;
        }
        a2 = v24;
      }
      while (v24 < a3);
    }
LABEL_59:
    sub_1C20FAFDC(&v47, &v46, (uint64_t *)&v45);
    return 1;
  }
LABEL_63:
  uint64_t result = sub_1C214B990();
  __break(1u);
  return result;
}

uint64_t sub_1C20205A4(uint64_t a1, uint64_t a2)
{
  uint64_t v96 = a2;
  uint64_t v85 = sub_1C2147B20();
  uint64_t v94 = *(void *)(v85 - 8);
  MEMORY[0x1F4188790](v85);
  uint64_t v84 = (char *)&v67 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1C2147CD0();
  uint64_t v90 = *(char **)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v86 = (char *)&v67 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v97 = sub_1C2147CF0();
  uint64_t v89 = *(char **)(v97 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v97);
  BOOL v98 = (char *)&v67 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  id v88 = (char *)&v67 - v8;
  uint64_t v87 = type metadata accessor for Dosage();
  uint64_t v70 = *(void *)(v87 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v87);
  uint64_t v83 = (uint64_t)&v67 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v93 = (uint64_t)&v67 - v11;
  uint64_t v12 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27928];
  sub_1C2021A38(0, &qword_1EBF0B1F0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v15 = (char *)&v67 - v14;
  uint64_t v16 = sub_1C2147AC0();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = MEMORY[0x1F4188790](v16);
  uint64_t v20 = (char *)&v67 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = MEMORY[0x1F4188790](v18);
  unint64_t v23 = (char *)&v67 - v22;
  MEMORY[0x1F4188790](v21);
  unint64_t v25 = (char *)&v67 - v24;
  sub_1C2021B34(v96, (uint64_t)v15, &qword_1EBF0B1F0, v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) != 1)
  {
    uint64_t v79 = v23;
    uint64_t v80 = v20;
    unint64_t v26 = v88;
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v25, v15, v16);
    sub_1C2149E90();
    if (v99) {
      uint64_t v27 = v99;
    }
    else {
      uint64_t v27 = MEMORY[0x1E4FBC860];
    }
    uint64_t v28 = *(void *)(v27 + 16);
    unint64_t v29 = v25;
    if (!v28)
    {
      swift_bridgeObjectRelease();
      unint64_t v37 = *(void (**)(char *, uint64_t))(v17 + 8);
LABEL_18:
      v37(v29, v16);
      return 1;
    }
    unint64_t v82 = v25;
    uint64_t v92 = v16;
    unint64_t v30 = (*(unsigned __int8 *)(v70 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v70 + 80);
    uint64_t v67 = v27;
    uint64_t v31 = v27 + v30;
    unsigned int v78 = *MEMORY[0x1E4F27C10];
    uint64_t v32 = (char **)(v90 + 104);
    uint64_t v77 = (void (**)(char *, uint64_t))(v90 + 8);
    uint64_t v76 = (void (**)(char *, char *, uint64_t))(v89 + 16);
    id v75 = (void (**)(char *, uint64_t, uint64_t))(v17 + 16);
    BOOL v81 = (void (**)(char *, uint64_t))(v17 + 8);
    uint64_t v72 = (void (**)(char *, uint64_t))(v89 + 8);
    uint64_t v71 = (void (**)(char *, uint64_t, uint64_t))(v94 + 16);
    unsigned int v68 = *MEMORY[0x1E4F27C48];
    char v74 = (void (**)(char *, uint64_t))(v94 + 8);
    uint64_t v70 = *(void *)(v70 + 72);
    uint64_t v33 = v4;
    uint64_t v69 = v4;
    uint64_t v34 = v26;
    uint64_t v35 = v87;
    uint64_t v36 = v93;
    BOOL v91 = (char **)(v90 + 104);
    uint64_t v73 = a1;
    while (1)
    {
      uint64_t v94 = v31;
      uint64_t v95 = v28;
      sub_1C2021840(v31, v36, (uint64_t (*)(void))type metadata accessor for Dosage);
      uint64_t v43 = v36 + *(int *)(v35 + 20);
      sub_1C2147CB0();
      uint64_t v44 = *v32;
      unint64_t v45 = v86;
      uint64_t v46 = v78;
      ((void (*)(char *, void, uint64_t))*v32)(v86, v78, v33);
      uint64_t v96 = sub_1C2147CE0();
      unint64_t v47 = (char *)*v77;
      (*v77)(v45, v33);
      uint64_t v90 = v44;
      ((void (*)(char *, uint64_t, uint64_t))v44)(v45, v46, v33);
      uint64_t v48 = v82;
      uint64_t v49 = sub_1C2147CE0();
      uint64_t v89 = v47;
      ((void (*)(char *, uint64_t))v47)(v45, v33);
      (*v76)(v98, v34, v97);
      uint64_t v50 = *v75;
      uint64_t v51 = v79;
      uint64_t v52 = v43;
      uint64_t v53 = v92;
      (*v75)(v79, v52, v92);
      uint64_t v54 = v80;
      v50(v80, (uint64_t)v48, v53);
      if (v96 != v49) {
        break;
      }
      uint64_t v55 = v68;
      uint64_t v56 = (void (*)(char *, uint64_t, uint64_t))v90;
      ((void (*)(char *, void, uint64_t))v90)(v45, v68, v33);
      uint64_t v96 = sub_1C2147CE0();
      uint64_t v57 = (void (*)(char *, uint64_t))v89;
      ((void (*)(char *, uint64_t))v89)(v45, v33);
      v56(v45, v55, v33);
      uint64_t v58 = v98;
      uint64_t v59 = sub_1C2147CE0();
      v57(v45, v33);
      unint64_t v37 = *v81;
      uint64_t v60 = v54;
      uint64_t v61 = v92;
      (*v81)(v60, v92);
      v37(v51, v61);
      uint64_t v62 = *v72;
      uint64_t v63 = v97;
      (*v72)(v58, v97);
      uint64_t v64 = v88;
      v62(v88, v63);
      uint64_t v40 = v84;
      uint64_t v41 = v85;
      (*v71)(v84, v73, v85);
      uint64_t v42 = v83;
      sub_1C2021840(v93, v83, (uint64_t (*)(void))type metadata accessor for Dosage);
      uint64_t v34 = v64;
      if (v96 != v59)
      {
        uint64_t v35 = v87;
        uint64_t v36 = v93;
        goto LABEL_9;
      }
      sub_1C2021928(&qword_1EA2C5648, MEMORY[0x1E4F27990]);
      char v65 = sub_1C214A5A0();
      sub_1C20218A8(v42, (uint64_t (*)(void))type metadata accessor for Dosage);
      (*v74)(v40, v41);
      uint64_t v36 = v93;
      sub_1C20218A8(v93, (uint64_t (*)(void))type metadata accessor for Dosage);
      if ((v65 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v37(v82, v92);
        return 0;
      }
      uint64_t v33 = v69;
      uint64_t v35 = v87;
LABEL_10:
      uint64_t v32 = v91;
      uint64_t v31 = v94 + v70;
      uint64_t v28 = v95 - 1;
      if (v95 == 1)
      {
        swift_bridgeObjectRelease();
        uint64_t v16 = v92;
        unint64_t v29 = v82;
        goto LABEL_18;
      }
    }
    unint64_t v37 = *v81;
    (*v81)(v54, v53);
    v37(v51, v53);
    unint64_t v38 = *v72;
    uint64_t v39 = v97;
    (*v72)(v98, v97);
    uint64_t v34 = v88;
    v38(v88, v39);
    uint64_t v40 = v84;
    uint64_t v41 = v85;
    (*v71)(v84, v73, v85);
    uint64_t v36 = v93;
    uint64_t v42 = v83;
    sub_1C2021840(v93, v83, (uint64_t (*)(void))type metadata accessor for Dosage);
    uint64_t v35 = v87;
LABEL_9:
    sub_1C20218A8(v42, (uint64_t (*)(void))type metadata accessor for Dosage);
    (*v74)(v40, v41);
    sub_1C20218A8(v36, (uint64_t (*)(void))type metadata accessor for Dosage);
    uint64_t v33 = v69;
    goto LABEL_10;
  }
  sub_1C2021BB4((uint64_t)v15, &qword_1EBF0B1F0, MEMORY[0x1E4F27928]);
  return 1;
}

uint64_t sub_1C2021008(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v69 = a7;
  uint64_t v70 = a8;
  uint64_t v82 = a5;
  uint64_t v83 = a6;
  uint64_t v80 = a3;
  uint64_t v81 = a4;
  id v68 = a2;
  uint64_t v16 = type metadata accessor for Dosage();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(void *)(v17 + 64);
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v67 = (uint64_t)&v54 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = sub_1C2147B20();
  uint64_t v19 = *(void *)(v79 - 8);
  MEMORY[0x1F4188790](v79);
  unsigned int v78 = (char *)&v54 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = (int *)type metadata accessor for DosageItem(0);
  MEMORY[0x1F4188790](v21);
  unint64_t v23 = (uint64_t *)((char *)&v54 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  int64_t v24 = *(void *)(a1 + 16);
  uint64_t v25 = MEMORY[0x1E4FBC860];
  if (v24)
  {
    uint64_t v54 = v14;
    uint64_t v64 = a14;
    uint64_t v63 = a13;
    uint64_t v76 = a11;
    uint64_t v77 = a12;
    uint64_t v74 = a9;
    uint64_t v75 = a10;
    uint64_t v87 = MEMORY[0x1E4FBC860];
    sub_1C1F704CC(0, v24, 0);
    uint64_t v26 = *(unsigned __int8 *)(v17 + 80);
    uint64_t v27 = (v26 + 32) & ~v26;
    uint64_t v28 = a1 + v27;
    uint64_t v61 = type metadata accessor for DosageCollectionViewCell(0);
    unint64_t v30 = *(void (**)(char *, uint64_t, uint64_t))(v19 + 16);
    uint64_t v29 = v19 + 16;
    uint64_t v60 = v30;
    uint64_t v62 = v27;
    uint64_t v59 = v27 + v18;
    uint64_t v58 = v26 | 7;
    uint64_t v57 = *(void *)(v17 + 72);
    uint64_t v56 = v23 + 4;
    uint64_t v55 = (void (**)(char *, char *, uint64_t))(v29 + 16);
    uint64_t v66 = v29;
    char v65 = v21;
    uint64_t v31 = v63;
    do
    {
      int64_t v73 = v24;
      v60(v78, v28, v79);
      uint64_t v72 = v28;
      uint64_t v32 = v67;
      sub_1C2021840(v28, v67, (uint64_t (*)(void))type metadata accessor for Dosage);
      uint64_t v33 = swift_allocObject();
      uint64_t v35 = v69;
      uint64_t v34 = v70;
      *(void *)(v33 + 16) = v69;
      *(void *)(v33 + 24) = v34;
      sub_1C1F4C924(v32, v33 + v62);
      id v71 = v68;
      sub_1C2021590(v80, v81);
      sub_1C1F1325C(v35);
      sub_1C1F1325C(v74);
      sub_1C1F1325C(v76);
      uint64_t v36 = v64;
      sub_1C1F1325C(v31);
      sub_1C2021928(&qword_1EA2C5638, (void (*)(uint64_t))type metadata accessor for DosageCollectionViewCell);
      *unint64_t v23 = sub_1C21481D0();
      v23[1] = v37;
      void v23[2] = 0;
      void v23[3] = 0xE000000000000000;
      unint64_t v38 = v56;
      *uint64_t v56 = 0;
      v38[1] = 0;
      uint64_t v39 = (uint64_t *)((char *)v23 + v21[11]);
      uint64_t v40 = (uint64_t *)((char *)v23 + v21[12]);
      uint64_t v41 = (uint64_t *)((char *)v23 + v21[13]);
      uint64_t v42 = (uint64_t *)((char *)v23 + v21[14]);
      (*v55)((char *)v23 + v21[7], v78, v79);
      *((unsigned char *)v23 + v21[8]) = 1;
      *(uint64_t *)((char *)v23 + v21[9]) = (uint64_t)v71;
      uint64_t v43 = (uint64_t *)((char *)v23 + v21[10]);
      uint64_t v44 = v81;
      void *v43 = v80;
      v43[1] = v44;
      uint64_t v45 = v83;
      v43[2] = v82;
      v43[3] = v45;
      void *v39 = sub_1C20217BC;
      v39[1] = v33;
      uint64_t v46 = v75;
      *uint64_t v40 = v74;
      v40[1] = v46;
      uint64_t v47 = v77;
      *uint64_t v42 = v76;
      v42[1] = v47;
      *uint64_t v41 = v31;
      v41[1] = v36;
      uint64_t v25 = v87;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C1F704CC(0, *(void *)(v25 + 16) + 1, 1);
        uint64_t v25 = v87;
      }
      unint64_t v49 = *(void *)(v25 + 16);
      unint64_t v48 = *(void *)(v25 + 24);
      uint64_t v21 = v65;
      uint64_t v50 = v72;
      int64_t v51 = v73;
      if (v49 >= v48 >> 1)
      {
        sub_1C1F704CC(v48 > 1, v49 + 1, 1);
        uint64_t v25 = v87;
      }
      uint64_t v85 = v21;
      uint64_t v86 = sub_1C2021928(&qword_1EA2C5640, (void (*)(uint64_t))type metadata accessor for DosageItem);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v84);
      sub_1C2021840((uint64_t)v23, (uint64_t)boxed_opaque_existential_1, type metadata accessor for DosageItem);
      *(void *)(v25 + 16) = v49 + 1;
      sub_1C1F31280(&v84, v25 + 40 * v49 + 32);
      sub_1C20218A8((uint64_t)v23, type metadata accessor for DosageItem);
      uint64_t v28 = v50 + v57;
      int64_t v24 = v51 - 1;
    }
    while (v24);
  }
  return v25;
}

uint64_t sub_1C2021590(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1C20215D4(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C2021618()
{
  if (*(void *)(v0 + 16)) {
    swift_release();
  }

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C2021658()
{
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 16);
  if (v1) {
    return v1();
  }
  return result;
}

uint64_t sub_1C2021688()
{
  uint64_t v1 = type metadata accessor for Dosage();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 64);
  if (*(void *)(v0 + 16)) {
    swift_release();
  }
  uint64_t v4 = v2 | 7;
  uint64_t v5 = (v2 + 32) & ~v2;
  uint64_t v6 = v5 + v3;
  uint64_t v7 = v0 + v5;
  uint64_t v8 = sub_1C2147B20();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = v7 + *(int *)(v1 + 20);
  uint64_t v10 = sub_1C2147AC0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);

  return MEMORY[0x1F4186498](v0, v6, v4);
}

uint64_t sub_1C20217BC@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  void (*v6)(void *__return_ptr, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t vars8;

  uint64_t v5 = *(void *)(type metadata accessor for Dosage() - 8);
  uint64_t v6 = *(void (**)(void *__return_ptr, uint64_t, uint64_t))(v2 + 16);
  uint64_t v7 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_1C201E980(a1, v6, v7, a2);
}

uint64_t sub_1C2021840(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C20218A8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

BOOL sub_1C2021908(uint64_t a1)
{
  return sub_1C201DB6C(a1, *(void *)(v1 + 16));
}

uint64_t sub_1C2021928(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C2021970@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(v2 + 16);
  if (sub_1C2147AF0()) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = a1;
  }
  return sub_1C2021840(v6, a2, (uint64_t (*)(void))type metadata accessor for Dosage);
}

uint64_t sub_1C20219D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Dosage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_1C2021A38(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C2021A9C()
{
  swift_weakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C2021AD4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  return sub_1C201B2A4(a1, a2);
}

uint64_t sub_1C2021ADC()
{
  return sub_1C201B33C();
}

uint64_t sub_1C2021AE4()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C2021B1C(uint64_t a1, uint64_t a2)
{
  return sub_1C201B8BC(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_1C2021B24(uint64_t a1, uint64_t a2)
{
  return sub_1C201C0B0(a1, a2);
}

uint64_t sub_1C2021B2C(uint64_t a1, uint64_t a2)
{
  return sub_1C201C130(a1, a2);
}

uint64_t sub_1C2021B34(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_1C2021A38(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_1C2021BB4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1C2021A38(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1C2021C24(void (*a1)(void *__return_ptr, char *), uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  void (*v30)(void *__return_ptr, char *);
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  uint64_t v34;
  uint64_t v35;
  void v36[3];
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  uint64_t v6 = v5;
  uint64_t v31 = a2;
  uint64_t v32 = a3;
  unint64_t v30 = a1;
  uint64_t v9 = sub_1C2148F60();
  uint64_t v35 = *(void *)(v9 - 8);
  uint64_t result = MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = a5 >> 1;
  uint64_t v34 = a4;
  uint64_t v13 = (a5 >> 1) - a4;
  if (__OFSUB__(a5 >> 1, a4)) {
    goto LABEL_19;
  }
  uint64_t result = MEMORY[0x1E4FBC860];
  if (v13)
  {
    uint64_t v39 = MEMORY[0x1E4FBC860];
    uint64_t result = sub_1C1F704CC(0, v13 & ~(v13 >> 63), 0);
    if (v13 < 0)
    {
LABEL_20:
      __break(1u);
      return result;
    }
    uint64_t v14 = 0;
    uint64_t v28 = (void (**)(char *, uint64_t))(v35 + 8);
    uint64_t v29 = v35 + 16;
    uint64_t v26 = v12;
    uint64_t v27 = v9;
    while (1)
    {
      uint64_t v15 = v14 + 1;
      if (__OFADD__(v14, 1)) {
        break;
      }
      if (v34 + v14 >= v33 || v14 >= v13) {
        goto LABEL_18;
      }
      (*(void (**)(char *, uint64_t, uint64_t))(v35 + 16))(v12, v32 + *(void *)(v35 + 72) * (v34 + v14), v9);
      v30(v36, v12);
      if (v6)
      {
        (*v28)(v12, v9);
        return swift_release();
      }
      uint64_t v6 = 0;
      (*v28)(v12, v9);
      uint64_t v16 = v39;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C1F704CC(0, *(void *)(v16 + 16) + 1, 1);
        uint64_t v16 = v39;
      }
      unint64_t v18 = *(void *)(v16 + 16);
      unint64_t v17 = *(void *)(v16 + 24);
      if (v18 >= v17 >> 1) {
        sub_1C1F704CC(v17 > 1, v18 + 1, 1);
      }
      uint64_t v19 = v37;
      uint64_t v20 = v38;
      uint64_t v21 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v36, v37);
      MEMORY[0x1F4188790](v21);
      unint64_t v23 = (char *)&v25 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v24 + 16))(v23);
      sub_1C20A09B8(v18, (uint64_t)v23, &v39, v19, v20);
      uint64_t result = __swift_destroy_boxed_opaque_existential_0((uint64_t)v36);
      ++v14;
      uint64_t v12 = v26;
      uint64_t v9 = v27;
      if (v15 == v13) {
        return v39;
      }
    }
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  return result;
}

uint64_t type metadata accessor for ScheduleTypePickerViewController(uint64_t a1)
{
  return sub_1C1F20D10(a1, (uint64_t *)&unk_1EA2C5658);
}

uint64_t sub_1C2021F58()
{
  return swift_initClassMetadata2();
}

id sub_1C2021F98(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  uint64_t v3 = a2[1];
  uint64_t v28 = a2[3];
  sub_1C1F72888(0, (unint64_t *)&qword_1EA2C69F0, (unint64_t *)&qword_1EA2C2CE0);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1C214FCD0;
  type metadata accessor for ScheduleTypePickerDataSource(0);
  *(void *)(swift_allocObject() + qword_1EA2C5668) = a1;
  swift_retain();
  uint64_t v6 = sub_1C21489C0();
  swift_retain();
  sub_1C202270C();
  swift_release();
  uint64_t v7 = MEMORY[0x1E4F66470];
  *(void *)(v5 + 32) = v6;
  *(void *)(v5 + 40) = v7;
  sub_1C2148820();
  swift_allocObject();
  sub_1C2148840();
  id v8 = (id)sub_1C2148AC0();
  uint64_t v9 = &off_1E6447000;
  id v29 = objc_msgSend(v8, sel_navigationItem);
  if (qword_1EA2C2708 != -1) {
    swift_once();
  }
  id v10 = (id)qword_1EA2C5D78;
  swift_bridgeObjectRetain();
  sub_1C2147730();
  swift_bridgeObjectRelease();

  uint64_t v11 = type metadata accessor for ScheduleTypePickerViewController(0);
  v30[3] = v11;
  v30[0] = v8;
  id v12 = v8;
  uint64_t v13 = (void *)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  if (v11)
  {
    uint64_t v14 = __swift_project_boxed_opaque_existential_0(v30, v11);
    uint64_t v27 = v3;
    uint64_t v15 = *(void *)(v11 - 8);
    MEMORY[0x1F4188790](v14);
    unint64_t v17 = (char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v15 + 16))(v17);
    uint64_t v18 = sub_1C214BA70();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v11);
    uint64_t v9 = &off_1E6447000;
    uint64_t v3 = v27;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v30);
  }
  else
  {
    uint64_t v18 = 0;
  }
  id v19 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB14A8]), sel_initWithTitle_style_target_action_, v13, 2, v18, sel_doneButtonSelected);

  swift_unknownObjectRelease();
  id v20 = v29;
  objc_msgSend(v29, sel_setRightBarButtonItem_, v19);

  if (v3)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v21 = [v12 (SEL)v9[106]];

    sub_1C2148730();
    id v22 = objc_msgSend(self, sel_labelColor);
    unint64_t v23 = (void *)sub_1C2148720();
    objc_msgSend(v21, sel_setTitleView_, v23);
    swift_release();
    sub_1C20215D4(v4, v3);
  }
  else
  {
    uint64_t v24 = (void *)sub_1C214A5B0();
    objc_msgSend(v12, sel_setTitle_, v24);

    swift_release();
  }
  return v12;
}

void sub_1C202242C()
{
}

id sub_1C2022488(void *a1)
{
  return objc_msgSend(a1, sel_dismissViewControllerAnimated_completion_, 1, 0);
}

void sub_1C202249C()
{
}

void sub_1C20224CC(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = a3;
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id sub_1C2022500()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ScheduleTypePickerViewController(0);
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1C2022538()
{
  return type metadata accessor for ScheduleTypePickerViewController(0);
}

uint64_t type metadata accessor for ScheduleTypePickerDataSource(uint64_t a1)
{
  return sub_1C1F20D10(a1, (uint64_t *)&unk_1EA2C5670);
}

uint64_t sub_1C2022560()
{
  return swift_initClassMetadata2();
}

void *sub_1C20225B0()
{
  uint64_t v0 = sub_1C2148710();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  id v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = (void (**)(char *, uint64_t))(v1 + 8);
  if (sub_1C2148800())
  {
    sub_1C2148660();
    sub_1C21487F0();
    uint64_t v5 = (void *)sub_1C2148700();
    swift_unknownObjectRelease();
    (*v4)(v3, v0);
  }
  else
  {
    sub_1C2148690();
    sub_1C21487F0();
    uint64_t v5 = (void *)sub_1C2148700();
    swift_unknownObjectRelease();
    (*v4)(v3, v0);
    objc_msgSend(v5, sel_setContentInsets_, -4.0, 0.0, 0.0, 0.0);
  }
  return v5;
}

uint64_t sub_1C202270C()
{
  uint64_t v0 = sub_1C2148540();
  uint64_t v31 = *(void *)(v0 - 8);
  uint64_t v32 = v0;
  uint64_t v1 = MEMORY[0x1F4188790](v0);
  id v3 = (char *)&v28 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v1);
  uint64_t v5 = (char *)&v28 - v4;
  sub_1C2023A10(0, (unint64_t *)&qword_1EA2C2FE8, MEMORY[0x1E4F664F8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v6 - 8);
  id v8 = (char *)&v28 - v7;
  uint64_t v9 = sub_1C2148790();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  id v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EBF0CA00 != -1) {
    swift_once();
  }
  id v13 = (id)qword_1EBF0CA18;
  swift_bridgeObjectRetain();
  sub_1C2147730();
  swift_bridgeObjectRelease();

  uint64_t v14 = sub_1C2148770();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v8, 1, 1, v14);
  unint64_t v30 = v12;
  sub_1C2148780();
  uint64_t v15 = sub_1C1FA2CC4();
  swift_retain();
  uint64_t v16 = sub_1C202374C(v15);
  swift_bridgeObjectRelease();
  swift_release();
  sub_1C1F72888(0, (unint64_t *)&qword_1EBF0C958, (unint64_t *)&qword_1EBF0C2F0);
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_1C214FCD0;
  *(void *)(v17 + 56) = v9;
  uint64_t v29 = v9;
  *(void *)(v17 + 64) = sub_1C2023624();
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v17 + 32));
  (*(void (**)(uint64_t *, char *, uint64_t))(v10 + 16))(boxed_opaque_existential_1, v12, v9);
  sub_1C2148520();
  sub_1C1F38C70(v16);
  swift_bridgeObjectRelease();
  sub_1C2148520();
  sub_1C2023A10(0, (unint64_t *)&qword_1EA2C2DD0, MEMORY[0x1E4F66468], MEMORY[0x1E4FBBE00]);
  uint64_t v19 = v31;
  uint64_t v20 = *(void *)(v31 + 72);
  unint64_t v21 = (*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_1C214FCC0;
  unint64_t v23 = v22 + v21;
  uint64_t v24 = *(void (**)(unint64_t, char *, uint64_t))(v19 + 16);
  uint64_t v25 = v32;
  v24(v23, v5, v32);
  v24(v23 + v20, v3, v25);
  sub_1C21485B0();
  swift_bridgeObjectRelease();
  uint64_t v26 = *(void (**)(char *, uint64_t))(v19 + 8);
  v26(v3, v25);
  v26(v5, v25);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v30, v29);
}

uint64_t sub_1C2022C24()
{
  sub_1C2149B70();
  sub_1C1FF2AF4();
  sub_1C214B0A0();
  uint64_t v0 = (void (*)(unsigned char *, void))sub_1C2149AA0();
  sub_1C2149A50();
  v0(v4, 0);
  id v1 = objc_msgSend(self, sel_labelColor);
  uint64_t v2 = (uint64_t (*)(unsigned char *, void))sub_1C2149AA0();
  sub_1C2149A60();
  return v2(v4, 0);
}

uint64_t sub_1C2022D28()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = sub_1C2149E70();
    sub_1C202270C(v1);
    return swift_release();
  }
  return result;
}

void sub_1C2022DA8()
{
}

void sub_1C2022DC4()
{
}

void sub_1C2022DE0()
{
}

uint64_t sub_1C2022E0C()
{
  return swift_release();
}

uint64_t sub_1C2022E1C()
{
  sub_1C21489E0();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_1C2022E6C()
{
  return type metadata accessor for ScheduleTypePickerDataSource(0);
}

uint64_t sub_1C2022E74@<X0>(uint64_t *a1@<X8>)
{
  sub_1C2023A10(0, (unint64_t *)&qword_1EA2C2FE8, MEMORY[0x1E4F664F8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v8 - v3;
  if (qword_1EBF0CA00 != -1) {
    swift_once();
  }
  id v5 = (id)qword_1EBF0CA18;
  swift_bridgeObjectRetain();
  sub_1C2147730();
  swift_bridgeObjectRelease();

  uint64_t v6 = sub_1C2148770();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v4, 1, 1, v6);
  a1[3] = sub_1C2148790();
  a1[4] = sub_1C2023624();
  __swift_allocate_boxed_opaque_existential_1(a1);
  return sub_1C2148780();
}

uint64_t sub_1C2023058()
{
  return sub_1C2149B30();
}

uint64_t sub_1C2023090@<X0>(uint64_t *a1@<X8>)
{
  return sub_1C2022E74(a1);
}

uint64_t sub_1C20230A8()
{
  return sub_1C214ACC0();
}

uint64_t sub_1C2023100()
{
  uint64_t v0 = sub_1C2149860();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2023A10(0, &qword_1EBF0C610, MEMORY[0x1E4FB0E38], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v14 - v5;
  uint64_t v7 = sub_1C2149890();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2023A10(0, (unint64_t *)&unk_1EBF0C990, MEMORY[0x1E4FB0E68], MEMORY[0x1E4FBBE00]);
  sub_1C2149930();
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1C214FCD0;
  uint64_t v12 = sub_1C2149870();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v6, 1, 1, v12);
  sub_1C2149880();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FB0E18], v0);
  sub_1C2149920();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return v11;
}

uint64_t sub_1C2023420(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 48);
  v7[2] = *(_OWORD *)(a1 + 32);
  v7[3] = v2;
  v7[4] = *(_OWORD *)(a1 + 64);
  uint64_t v8 = *(void *)(a1 + 80);
  long long v3 = *(_OWORD *)(a1 + 16);
  v7[0] = *(_OWORD *)a1;
  v7[1] = v3;
  long long v4 = *(_OWORD *)(a2 + 48);
  v9[2] = *(_OWORD *)(a2 + 32);
  v9[3] = v4;
  v9[4] = *(_OWORD *)(a2 + 64);
  uint64_t v10 = *(void *)(a2 + 80);
  long long v5 = *(_OWORD *)(a2 + 16);
  v9[0] = *(_OWORD *)a2;
  v9[1] = v5;
  return sub_1C202367C((uint64_t)v7, (uint64_t)v9) & 1;
}

uint64_t sub_1C202348C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_1C2149BE0();
  uint64_t v3 = MEMORY[0x1E4FB0F88];
  a1[3] = v2;
  a1[4] = v3;
  __swift_allocate_boxed_opaque_existential_1(a1);
  sub_1C2149B70();
  swift_bridgeObjectRetain();
  sub_1C2149B90();
  swift_bridgeObjectRetain();
  sub_1C2149A00();
  id v4 = objc_msgSend(self, sel_secondaryLabelColor);
  long long v5 = (uint64_t (*)(uint64_t *, void))sub_1C2149AF0();
  sub_1C2149A60();
  return v5(&v7, 0);
}

uint64_t sub_1C2023578(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v2 + 72);
  if (v3) {
    return v3(a2);
  }
  return result;
}

uint64_t sub_1C20235AC@<X0>(unsigned char *a1@<X8>)
{
  *a1 = 0;
  uint64_t v2 = *MEMORY[0x1E4F66478];
  uint64_t v3 = sub_1C2148620();
  id v4 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104);

  return v4(a1, v2, v3);
}

unint64_t sub_1C2023624()
{
  unint64_t result = qword_1EA2C3000;
  if (!qword_1EA2C3000)
  {
    sub_1C2148790();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C3000);
  }
  return result;
}

uint64_t sub_1C202367C(uint64_t a1, uint64_t a2)
{
  BOOL v4 = *(void *)(a1 + 16) == *(void *)(a2 + 16) && *(void *)(a1 + 24) == *(void *)(a2 + 24);
  if (v4 || (char v5 = sub_1C214BA80(), v6 = 0, (v5 & 1) != 0))
  {
    BOOL v7 = *(void *)(a1 + 32) == *(void *)(a2 + 32) && *(void *)(a1 + 40) == *(void *)(a2 + 40);
    if (v7 || (char v8 = sub_1C214BA80(), v6 = 0, (v8 & 1) != 0))
    {
      uint64_t v9 = *(void *)(a1 + 56);
      uint64_t v10 = *(void *)(a2 + 56);
      if (v9)
      {
        if (v10)
        {
          if (*(void *)(a1 + 48) != *(void *)(a2 + 48) || v9 != v10)
          {
            char v11 = sub_1C214BA80();
            char v6 = 0;
            if ((v11 & 1) == 0) {
              return v6 & 1;
            }
          }
LABEL_19:
          char v6 = ((*(unsigned char *)(a1 + 64) & 1) == 0) ^ *(unsigned char *)(a2 + 64);
          return v6 & 1;
        }
      }
      else if (!v10)
      {
        goto LABEL_19;
      }
      char v6 = 0;
    }
  }
  return v6 & 1;
}

uint64_t sub_1C202374C(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v29 = MEMORY[0x1E4FBC860];
    sub_1C1F7096C(0, v1, 0);
    uint64_t v2 = v29;
    BOOL v4 = (uint64_t *)(a1 + 32);
    sub_1C2148B30();
    do
    {
      uint64_t v5 = v2;
      uint64_t v7 = *v4++;
      uint64_t v6 = v7;
      sub_1C214B7C0();
      swift_bridgeObjectRelease();
      sub_1C214BA40();
      sub_1C214A6C0();
      swift_bridgeObjectRelease();
      uint64_t v8 = sub_1C1FA2324(v7);
      uint64_t v27 = v9;
      uint64_t v28 = v8;
      uint64_t v10 = sub_1C1FA27F8(v7);
      uint64_t v25 = v11;
      uint64_t v26 = v10;
      sub_1C2149E90();
      uint64_t v12 = v7;
      if (qword_1EA2C2670 != -1) {
        swift_once();
      }
      swift_beginAccess();
      id v13 = off_1EA2C44D8;
      if (*((void *)off_1EA2C44D8 + 2))
      {
        unint64_t v14 = sub_1C1F4B548(v12);
        if (v15) {
          uint64_t v12 = *(void *)(v13[7] + 8 * v14);
        }
      }
      swift_endAccess();
      uint64_t v16 = swift_allocObject();
      swift_weakInit();
      uint64_t v17 = swift_allocObject();
      *(void *)(v17 + 16) = v16;
      *(void *)(v17 + 24) = v6;
      uint64_t v18 = sub_1C21481D0();
      uint64_t v20 = v19;
      uint64_t v2 = v5;
      uint64_t v30 = v5;
      unint64_t v21 = *(void *)(v5 + 16);
      unint64_t v22 = *(void *)(v2 + 24);
      if (v21 >= v22 >> 1)
      {
        sub_1C1F7096C(v22 > 1, v21 + 1, 1);
        uint64_t v2 = v30;
      }
      *(void *)(v2 + 16) = v21 + 1;
      uint64_t v23 = v2 + 88 * v21;
      *(void *)(v23 + 32) = v18;
      *(void *)(v23 + 40) = v20;
      *(void *)(v23 + 48) = 0xD000000000000019;
      *(void *)(v23 + 56) = 0x80000001C2166080;
      *(void *)(v23 + 64) = v28;
      *(void *)(v23 + 72) = v27;
      *(void *)(v23 + 80) = v26;
      *(void *)(v23 + 88) = v25;
      *(unsigned char *)(v23 + 96) = v12 == v6;
      *(void *)(v23 + 104) = sub_1C2023AE4;
      *(void *)(v23 + 112) = v17;
      --v1;
    }
    while (v1);
  }
  return v2;
}

void sub_1C2023A10(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C2023A74()
{
  swift_weakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C2023AAC()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C2023AE4()
{
  return sub_1C2022D28();
}

uint64_t destroy for ScheduleTypeOptionItem(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (*(void *)(a1 + 72))
  {
    return swift_release();
  }
  return result;
}

uint64_t initializeWithCopy for ScheduleTypeOptionItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  uint64_t v9 = (_OWORD *)(a2 + 72);
  uint64_t v8 = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v8)
  {
    uint64_t v10 = *(void *)(a2 + 80);
    *(void *)(a1 + 72) = v8;
    *(void *)(a1 + 80) = v10;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 72) = *v9;
  }
  return a1;
}

uint64_t assignWithCopy for ScheduleTypeOptionItem(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a1 + 72);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  uint64_t v5 = *(void *)(a2 + 72);
  if (!v4)
  {
    if (v5)
    {
      uint64_t v7 = *(void *)(a2 + 80);
      *(void *)(a1 + 72) = v5;
      *(void *)(a1 + 80) = v7;
      swift_retain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    return a1;
  }
  if (!v5)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v6 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = v5;
  *(void *)(a1 + 80) = v6;
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy88_8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 64);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for ScheduleTypeOptionItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 72);
  uint64_t v9 = *(void *)(a1 + 72);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  if (!v9)
  {
    if (v8)
    {
      uint64_t v11 = *(void *)(a2 + 80);
      *(void *)(a1 + 72) = v8;
      *(void *)(a1 + 80) = v11;
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    return a1;
  }
  if (!v8)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v10 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = v8;
  *(void *)(a1 + 80) = v10;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for ScheduleTypeOptionItem(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 88)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ScheduleTypeOptionItem(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 88) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 88) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ScheduleTypeOptionItem()
{
  return &type metadata for ScheduleTypeOptionItem;
}

uint64_t MedicationDetailItem.reuseIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MedicationDetailItem.uniqueIdentifier.getter()
{
  id v1 = objc_msgSend(*v0, sel_semanticIdentifier);
  id v2 = objc_msgSend(v1, sel_description);
  sub_1C214A5F0();

  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  return 0x74496C6961746544;
}

uint64_t static MedicationDetailItem.== infix(_:_:)()
{
  return sub_1C214B220() & 1;
}

void MedicationDetailItem.hash(into:)()
{
  id v1 = objc_msgSend(*v0, sel_semanticIdentifier);
  sub_1C214B230();
}

uint64_t MedicationDetailItem.hashValue.getter()
{
  id v1 = *v0;
  sub_1C214BB30();
  id v2 = objc_msgSend(v1, sel_semanticIdentifier);
  sub_1C214B230();

  return sub_1C214BB80();
}

uint64_t sub_1C20240A8()
{
  id v1 = *v0;
  sub_1C214BB30();
  id v2 = objc_msgSend(v1, sel_semanticIdentifier);
  sub_1C214B230();

  return sub_1C214BB80();
}

void sub_1C202410C()
{
  id v1 = objc_msgSend(*v0, sel_semanticIdentifier);
  sub_1C214B230();
}

uint64_t sub_1C2024174()
{
  id v1 = *v0;
  sub_1C214BB30();
  id v2 = objc_msgSend(v1, sel_semanticIdentifier);
  sub_1C214B230();

  return sub_1C214BB80();
}

unint64_t sub_1C20241D8()
{
  unint64_t result = qword_1EA2C5680;
  if (!qword_1EA2C5680)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C5680);
  }
  return result;
}

uint64_t sub_1C202422C()
{
  return sub_1C214B220() & 1;
}

uint64_t sub_1C2024280()
{
  id v1 = objc_msgSend(*v0, sel_semanticIdentifier);
  id v2 = objc_msgSend(v1, sel_description);
  sub_1C214A5F0();

  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  return 0x74496C6961746544;
}

ValueMetadata *type metadata accessor for MedicationDetailItem()
{
  return &type metadata for MedicationDetailItem;
}

id sub_1C2024340()
{
  uint64_t v1 = OBJC_IVAR____TtC19HealthMedicationsUI20MedicationDetailCell____lazy_storage___nickNameLabel;
  id v2 = *(void **)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI20MedicationDetailCell____lazy_storage___nickNameLabel);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI20MedicationDetailCell____lazy_storage___nickNameLabel);
  }
  else
  {
    uint64_t v4 = v0;
    id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
    objc_msgSend(v5, sel_setNumberOfLines_, 0);
    objc_msgSend(v5, sel_setTextAlignment_, 1);
    id v6 = objc_msgSend(self, sel_labelColor);
    objc_msgSend(v5, sel_setTextColor_, v6);

    objc_msgSend(v5, sel_setAdjustsFontForContentSizeCategory_, 1);
    sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8E0);
    uint64_t v7 = (void *)sub_1C214B0A0();
    objc_msgSend(v5, sel_setFont_, v7);

    uint64_t v8 = *(void **)(v4 + v1);
    *(void *)(v4 + v1) = v5;
    id v3 = v5;

    id v2 = 0;
  }
  id v9 = v2;
  return v3;
}

id sub_1C2024498()
{
  return sub_1C20244B0(&OBJC_IVAR____TtC19HealthMedicationsUI20MedicationDetailCell____lazy_storage___medicationNameFormLabel);
}

id sub_1C20244A4()
{
  return sub_1C20244B0(&OBJC_IVAR____TtC19HealthMedicationsUI20MedicationDetailCell____lazy_storage___strengthLabel);
}

id sub_1C20244B0(uint64_t *a1)
{
  uint64_t v2 = *a1;
  id v3 = *(void **)(v1 + *a1);
  if (v3)
  {
    id v4 = *(id *)(v1 + *a1);
  }
  else
  {
    uint64_t v5 = v1;
    id v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
    objc_msgSend(v6, sel_setNumberOfLines_, 0);
    objc_msgSend(v6, sel_setTextAlignment_, 1);
    id v7 = objc_msgSend(self, sel_labelColor);
    objc_msgSend(v6, sel_setTextColor_, v7);

    objc_msgSend(v6, sel_setAdjustsFontForContentSizeCategory_, 1);
    sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8E0);
    uint64_t v8 = (void *)sub_1C214B0A0();
    objc_msgSend(v6, sel_setFont_, v8);

    id v9 = *(void **)(v5 + v2);
    *(void *)(v5 + v2) = v6;
    id v4 = v6;

    id v3 = 0;
  }
  id v10 = v3;
  return v4;
}

void sub_1C2024764()
{
  uint64_t v1 = v0;
  sub_1C1F1CC40(0, &qword_1EBF0C620, MEMORY[0x1E4FB0F28]);
  MEMORY[0x1F4188790](v2 - 8);
  id v4 = (char *)&v30 - v3;
  sub_1C21499B0();
  uint64_t v5 = sub_1C21499D0();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 0, 1, v5);
  MEMORY[0x1C8752FF0](v4);
  sub_1C1F0ED28();
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1C2151E40;
  *(void *)(v6 + 32) = sub_1C2024340();
  *(void *)(v6 + 40) = sub_1C2024498();
  *(void *)(v6 + 48) = sub_1C20244A4();
  uint64_t v31 = v6;
  sub_1C214A7A0();
  id v7 = objc_allocWithZone(MEMORY[0x1E4FB1C60]);
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8F0);
  uint64_t v8 = (void *)sub_1C214A770();
  swift_bridgeObjectRelease();
  id v9 = objc_msgSend(v7, sel_initWithArrangedSubviews_, v8);

  objc_msgSend(v9, sel_setAxis_, 1);
  objc_msgSend(v9, sel_setAlignment_, 3);
  objc_msgSend(v9, sel_setDistribution_, 0);
  objc_msgSend(v9, sel_setSpacing_, 4.0);
  id v10 = objc_msgSend(v1, sel_contentView);
  objc_msgSend(v10, sel_addSubview_, v9);

  objc_msgSend(v9, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  uint64_t v11 = self;
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1C21510C0;
  id v13 = objc_msgSend(v9, sel_leadingAnchor);
  id v14 = objc_msgSend(v1, sel_contentView);
  id v15 = objc_msgSend(v14, sel_leadingAnchor);

  id v16 = objc_msgSend(v13, sel_constraintEqualToAnchor_constant_, v15, 16.0);
  *(void *)(v12 + 32) = v16;
  id v17 = objc_msgSend(v9, sel_trailingAnchor);
  id v18 = objc_msgSend(v1, sel_contentView);
  id v19 = objc_msgSend(v18, sel_trailingAnchor);

  id v20 = objc_msgSend(v17, sel_constraintEqualToAnchor_constant_, v19, -16.0);
  *(void *)(v12 + 40) = v20;
  id v21 = objc_msgSend(v9, sel_topAnchor);
  id v22 = objc_msgSend(v1, sel_contentView);
  id v23 = objc_msgSend(v22, sel_topAnchor);

  id v24 = objc_msgSend(v21, sel_constraintEqualToAnchor_, v23);
  *(void *)(v12 + 48) = v24;
  id v25 = objc_msgSend(v9, sel_bottomAnchor);
  id v26 = objc_msgSend(v1, sel_contentView);
  id v27 = objc_msgSend(v26, sel_bottomAnchor);

  id v28 = objc_msgSend(v25, sel_constraintEqualToAnchor_, v27);
  *(void *)(v12 + 56) = v28;
  uint64_t v31 = v12;
  sub_1C214A7A0();
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C810);
  uint64_t v29 = (void *)sub_1C214A770();
  swift_bridgeObjectRelease();
  objc_msgSend(v11, sel_activateConstraints_, v29);
}

void sub_1C2024C08()
{
  uint64_t v1 = v0;
  swift_getObjectType();
  uint64_t v2 = sub_1C21497F0();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v53 - v7;
  uint64_t v9 = (uint64_t)v1 + OBJC_IVAR____TtC19HealthMedicationsUI20MedicationDetailCell_item;
  swift_beginAccess();
  sub_1C1F2116C(v9, (uint64_t)v59);
  if (!v59[3])
  {
    sub_1C1F374E4((uint64_t)v59);
LABEL_6:
    sub_1C21497A0();
    id v15 = v1;
    id v16 = sub_1C21497E0();
    os_log_type_t v17 = sub_1C214ABD0();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = swift_slowAlloc();
      id v19 = (void *)swift_slowAlloc();
      uint64_t v56 = v2;
      id v20 = v19;
      v58[0] = v19;
      *(_DWORD *)uint64_t v18 = 136446466;
      uint64_t v21 = sub_1C214BC10();
      v59[0] = sub_1C1F6FD54(v21, v22, (uint64_t *)v58);
      sub_1C214B530();
      swift_bridgeObjectRelease();
      *(_WORD *)(v18 + 12) = 2080;
      sub_1C1F2116C(v9, (uint64_t)v59);
      sub_1C1F1CC40(0, (unint64_t *)&qword_1EBF0C300, (void (*)(uint64_t))sub_1C1F1CB5C);
      uint64_t v23 = sub_1C214A630();
      v59[0] = sub_1C1F6FD54(v23, v24, (uint64_t *)v58);
      sub_1C214B530();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C1F0B000, v16, v17, "%{public}s Incorrect view model for MedicationDetailCell: %s Expecting MedicationDetailItem", (uint8_t *)v18, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C8754730](v20, -1, -1);
      MEMORY[0x1C8754730](v18, -1, -1);

      (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v56);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
    }
    return;
  }
  sub_1C1F1CB5C();
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_6;
  }
  id v10 = v58[0];
  id v55 = v58[2];
  uint64_t v56 = v2;
  id v11 = objc_msgSend(v58[0], sel_userSpecifiedName);
  id v12 = sub_1C2024340();
  id v13 = v12;
  if (v11)
  {
    objc_msgSend(v12, sel_setText_, v11);

    id v14 = sub_1C2024340();
    objc_msgSend(v14, sel_setHidden_, 0);
  }
  else
  {
    objc_msgSend(v12, sel_setText_, 0);

    id v14 = sub_1C2024340();
    objc_msgSend(v14, sel_setHidden_, 1);
  }

  v59[0] = v10;
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8C0);
  uint64_t v25 = sub_1C2149470();
  if (v26)
  {
    id v27 = (void *)v25;
    id v28 = v26;
  }
  else
  {
    id v29 = objc_msgSend(v10, sel_freeTextMedicationName);
    if (!v29)
    {
      sub_1C21497A0();
      id v44 = v1;
      uint64_t v45 = sub_1C21497E0();
      os_log_type_t v46 = sub_1C214ABD0();
      if (os_log_type_enabled(v45, v46))
      {
        uint64_t v47 = swift_slowAlloc();
        uint64_t v54 = swift_slowAlloc();
        uint64_t v57 = v54;
        *(_DWORD *)uint64_t v47 = 136446466;
        uint64_t v48 = sub_1C214BC10();
        v59[0] = sub_1C1F6FD54(v48, v49, &v57);
        sub_1C214B530();
        swift_bridgeObjectRelease();
        *(_WORD *)(v47 + 12) = 2080;
        sub_1C1F2116C(v9, (uint64_t)v59);
        sub_1C1F1CC40(0, (unint64_t *)&qword_1EBF0C300, (void (*)(uint64_t))sub_1C1F1CB5C);
        uint64_t v50 = sub_1C214A630();
        v59[0] = sub_1C1F6FD54(v50, v51, &v57);
        sub_1C214B530();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1C1F0B000, v45, v46, "%{public}s Failed to retrieve medication name: %s", (uint8_t *)v47, 0x16u);
        uint64_t v52 = v54;
        swift_arrayDestroy();
        MEMORY[0x1C8754730](v52, -1, -1);
        MEMORY[0x1C8754730](v47, -1, -1);
        swift_bridgeObjectRelease();
      }
      else
      {

        swift_bridgeObjectRelease();
      }
      (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v56);
      return;
    }
    uint64_t v30 = v29;
    id v27 = (void *)sub_1C214A5F0();
    id v28 = v31;
  }
  v58[0] = v27;
  v58[1] = v28;
  _sSo29HKMedicationUserDomainConceptC19HealthMedicationsUIE8doseFormSSSgvg_0();
  if (v32)
  {
    v59[0] = 8236;
    v59[1] = 0xE200000000000000;
    sub_1C214A6C0();
    swift_bridgeObjectRelease();
    sub_1C214A6C0();
    swift_bridgeObjectRelease();
  }
  id v33 = sub_1C2024498();
  uint64_t v34 = (void *)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  objc_msgSend(v33, sel_setText_, v34);

  uint64_t v35 = _sSo29HKMedicationUserDomainConceptC19HealthMedicationsUIE8strengthSSSgvg_0();
  if (v36) {
    uint64_t v37 = v35;
  }
  else {
    uint64_t v37 = 0;
  }
  if (v36) {
    unint64_t v38 = v36;
  }
  else {
    unint64_t v38 = 0xE000000000000000;
  }
  id v39 = sub_1C20244A4();
  uint64_t v40 = v39;
  uint64_t v41 = HIBYTE(v38) & 0xF;
  if ((v38 & 0x2000000000000000) == 0) {
    uint64_t v41 = v37 & 0xFFFFFFFFFFFFLL;
  }
  objc_msgSend(v39, (SEL)&selRef_rawIdentifier, v41 == 0);

  id v42 = sub_1C20244A4();
  uint64_t v43 = (void *)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  objc_msgSend(v42, sel_setText_, v43);

  swift_bridgeObjectRelease();
}

id sub_1C2025304()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MedicationDetailCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for MedicationDetailCell()
{
  return self;
}

uint64_t sub_1C20253C8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI20MedicationDetailCell_item;
  swift_beginAccess();
  return sub_1C1F2116C(v3, a1);
}

uint64_t sub_1C202541C(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI20MedicationDetailCell_item;
  swift_beginAccess();
  sub_1C1F32DDC(a1, v3);
  swift_endAccess();
  sub_1C2024C08();
  return sub_1C1F374E4(a1);
}

void (*sub_1C202548C(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1C20254EC;
}

void sub_1C20254EC(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    sub_1C2024C08();
  }
}

uint64_t TextViewItem.identifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1C2147B20();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t TextViewItem.text.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for TextViewItem() + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t type metadata accessor for TextViewItem()
{
  uint64_t result = qword_1EA2C56C8;
  if (!qword_1EA2C56C8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t TextViewItem.text.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for TextViewItem() + 20));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*TextViewItem.text.modify())()
{
  return nullsub_1;
}

uint64_t TextViewItem.placeholder.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for TextViewItem() + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TextViewItem.placeholder.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for TextViewItem() + 24));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*TextViewItem.placeholder.modify())()
{
  return nullsub_1;
}

uint64_t TextViewItem.characterLimit.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for TextViewItem() + 28));
}

uint64_t TextViewItem.characterLimit.setter(uint64_t a1, char a2)
{
  uint64_t result = type metadata accessor for TextViewItem();
  uint64_t v6 = v2 + *(int *)(result + 28);
  *(void *)uint64_t v6 = a1;
  *(unsigned char *)(v6 + 8) = a2 & 1;
  return result;
}

uint64_t (*TextViewItem.characterLimit.modify())()
{
  return nullsub_1;
}

double TextViewItem.height.getter()
{
  return *(double *)(v0 + *(int *)(type metadata accessor for TextViewItem() + 32));
}

uint64_t TextViewItem.height.setter(double a1)
{
  uint64_t result = type metadata accessor for TextViewItem();
  *(double *)(v1 + *(int *)(result + 32)) = a1;
  return result;
}

uint64_t (*TextViewItem.height.modify())()
{
  return nullsub_1;
}

uint64_t TextViewItem.isEnabled.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for TextViewItem() + 36));
}

uint64_t TextViewItem.isEnabled.setter(char a1)
{
  uint64_t result = type metadata accessor for TextViewItem();
  *(unsigned char *)(v1 + *(int *)(result + 36)) = a1;
  return result;
}

uint64_t (*TextViewItem.isEnabled.modify())()
{
  return nullsub_1;
}

uint64_t TextViewItem.reuseIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for TextViewItem() + 44));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TextViewItem.uniqueIdentifier.getter()
{
  strcpy((char *)v1, "TextViewItem.");
  sub_1C2147AD0();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  return v1[0];
}

uint64_t TextViewItem.init(text:height:placeholder:characterLimit:isEnabled:updateHandler:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, char a7@<W6>, uint64_t a8@<X7>, uint64_t a9@<X8>, double a10@<D0>, uint64_t a11)
{
  sub_1C2147B10();
  id v16 = (int *)type metadata accessor for TextViewItem();
  os_log_type_t v17 = (void *)(a9 + v16[5]);
  uint64_t v18 = (void *)(a9 + v16[6]);
  uint64_t v19 = a9 + v16[7];
  id v20 = (uint64_t *)(a9 + v16[11]);
  type metadata accessor for TextItemCell();
  sub_1C2028094(&qword_1EA2C56B0, v21, (void (*)(uint64_t))type metadata accessor for TextItemCell);
  uint64_t result = sub_1C21481D0();
  uint64_t *v20 = result;
  v20[1] = v23;
  *os_log_type_t v17 = a1;
  v17[1] = a2;
  *(double *)(a9 + v16[8]) = a10;
  void *v18 = a3;
  v18[1] = a4;
  *(void *)uint64_t v19 = a5;
  *(unsigned char *)(v19 + 8) = a6 & 1;
  *(unsigned char *)(a9 + v16[9]) = a7;
  unint64_t v24 = (void *)(a9 + v16[10]);
  *unint64_t v24 = a8;
  v24[1] = a11;
  return result;
}

uint64_t type metadata accessor for TextItemCell()
{
  return self;
}

uint64_t TextViewItem.hash(into:)()
{
  if (*(void *)(v0 + *(int *)(type metadata accessor for TextViewItem() + 20) + 8))
  {
    sub_1C214BB50();
    swift_bridgeObjectRetain();
    sub_1C214A690();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1C214BB50();
  }
  sub_1C214BB70();
  return sub_1C214BB50();
}

uint64_t TextViewItem.hashValue.getter()
{
  sub_1C214BB30();
  if (*(void *)(v0 + *(int *)(type metadata accessor for TextViewItem() + 20) + 8))
  {
    sub_1C214BB50();
    swift_bridgeObjectRetain();
    sub_1C214A690();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1C214BB50();
  }
  sub_1C214BB70();
  sub_1C214BB50();
  return sub_1C214BB80();
}

uint64_t sub_1C2025CE4(uint64_t a1, uint64_t a2)
{
  if (*(void *)(v2 + *(int *)(a2 + 20) + 8))
  {
    sub_1C214BB50();
    swift_bridgeObjectRetain();
    sub_1C214A690();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1C214BB50();
  }
  sub_1C214BB70();
  return sub_1C214BB50();
}

uint64_t sub_1C2025D84(uint64_t a1, uint64_t a2)
{
  sub_1C214BB30();
  if (*(void *)(v2 + *(int *)(a2 + 20) + 8))
  {
    sub_1C214BB50();
    swift_bridgeObjectRetain();
    sub_1C214A690();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1C214BB50();
  }
  sub_1C214BB70();
  sub_1C214BB50();
  return sub_1C214BB80();
}

uint64_t sub_1C2025E4C()
{
  strcpy((char *)v1, "TextViewItem.");
  sub_1C2147AD0();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  return v1[0];
}

uint64_t sub_1C2025EB0(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 28));
}

id sub_1C2025EC4()
{
  uint64_t v1 = OBJC_IVAR____TtC19HealthMedicationsUI12TextItemCell____lazy_storage___textView;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI12TextItemCell____lazy_storage___textView);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI12TextItemCell____lazy_storage___textView);
  }
  else
  {
    id v4 = sub_1C2025F28(v0);
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_1C2025F28(uint64_t a1)
{
  type metadata accessor for UITextViewWithPlaceholder();
  id v2 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  sub_1C214AB50();
  objc_msgSend(v2, sel_setTextContainerInset_);
  id v3 = self;
  id v4 = v2;
  id v5 = objc_msgSend(v3, sel_secondarySystemBackgroundColor);
  objc_msgSend(v4, sel_setBackgroundColor_, v5);

  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8E0);
  id v6 = v4;
  uint64_t v7 = (void *)sub_1C214B0A0();
  objc_msgSend(v6, sel_setFont_, v7);

  objc_msgSend(v6, sel_setDelegate_, a1);
  objc_msgSend(v6, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  uint64_t v15 = sub_1C214A5F0();
  uint64_t v16 = v8;
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  id v9 = v6;
  swift_bridgeObjectRelease();
  id v10 = (void *)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  objc_msgSend(v9, sel_setAccessibilityIdentifier_, v10, v15, v16);

  sub_1C1F0ED28();
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1C214FCB0;
  *(void *)(v11 + 32) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB14A8]), sel_initWithBarButtonSystemItem_target_action_, 5, a1, 0);
  *(void *)(v11 + 40) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB14A8]), sel_initWithBarButtonSystemItem_target_action_, 0, a1, sel_didTapDoneWithSender_);
  sub_1C214A7A0();
  id v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1DF0]), sel_init, v11);
  objc_msgSend(v12, sel_setBarStyle_, 0);
  sub_1C1F12718(0, (unint64_t *)&qword_1EA2C3508);
  id v13 = (void *)sub_1C214A770();
  objc_msgSend(v12, sel_setItems_, v13);

  objc_msgSend(v12, sel_sizeToFit);
  objc_msgSend(v9, sel_setInputAccessoryView_, v12);

  swift_bridgeObjectRelease();
  return v9;
}

id sub_1C2026240(double a1, double a2, double a3, double a4)
{
  sub_1C202897C(0, &qword_1EBF0C620, MEMORY[0x1E4FB0F28]);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v26 - v10;
  uint64_t v12 = sub_1C21499D0();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI12TextItemCell____lazy_storage___textView] = 0;
  uint64_t v16 = &v4[OBJC_IVAR____TtC19HealthMedicationsUI12TextItemCell_item];
  os_log_type_t v17 = (objc_class *)type metadata accessor for TextItemCell();
  *(_OWORD *)uint64_t v16 = 0u;
  *((_OWORD *)v16 + 1) = 0u;
  *((void *)v16 + 4) = 0;
  v26.receiver = v4;
  v26.super_class = v17;
  id v18 = objc_msgSendSuper2(&v26, sel_initWithFrame_, a1, a2, a3, a4);
  id v19 = objc_msgSend(v18, sel_contentView);
  id v20 = sub_1C2025EC4();
  objc_msgSend(v19, sel_addSubview_, v20);

  id v21 = sub_1C2025EC4();
  sub_1C2147DE0();
  id v22 = (id)*MEMORY[0x1E4F39EA8];
  sub_1C214B0D0();

  sub_1C21499A0();
  id v23 = objc_msgSend(self, sel_tertiarySystemBackgroundColor);
  sub_1C2149990();
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v11, v15, v12);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v11, 0, 1, v12);
  id v24 = v18;
  MEMORY[0x1C8752FF0](v11);

  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  return v24;
}

void sub_1C202650C()
{
  sub_1C202897C(0, &qword_1EA2C5750, (void (*)(uint64_t))type metadata accessor for TextViewItem);
  MEMORY[0x1F4188790](v1 - 8);
  id v3 = &v39[-v2];
  id v4 = sub_1C2025EC4();
  id v5 = sub_1C2025EC4();
  id v6 = objc_msgSend(v5, sel_constraints);

  if (!v6)
  {
    sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C810);
    sub_1C214A780();
    id v6 = (id)sub_1C214A770();
    swift_bridgeObjectRelease();
  }
  objc_msgSend(v4, sel_removeConstraints_, v6);

  sub_1C1F0ED28();
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1C21544C0;
  id v8 = sub_1C2025EC4();
  id v9 = objc_msgSend(v8, sel_leadingAnchor);

  id v10 = objc_msgSend(v0, sel_contentView);
  id v11 = objc_msgSend(v10, sel_leadingAnchor);

  id v12 = objc_msgSend(v9, sel_constraintEqualToAnchor_, v11);
  *(void *)(v7 + 32) = v12;
  id v13 = sub_1C2025EC4();
  id v14 = objc_msgSend(v13, sel_trailingAnchor);

  id v15 = objc_msgSend(v0, sel_contentView);
  id v16 = objc_msgSend(v15, sel_trailingAnchor);

  id v17 = objc_msgSend(v14, sel_constraintEqualToAnchor_, v16);
  *(void *)(v7 + 40) = v17;
  id v18 = sub_1C2025EC4();
  id v19 = objc_msgSend(v18, sel_topAnchor);

  id v20 = objc_msgSend(v0, sel_contentView);
  id v21 = objc_msgSend(v20, sel_topAnchor);

  id v22 = objc_msgSend(v19, sel_constraintEqualToAnchor_, v21);
  *(void *)(v7 + 48) = v22;
  id v23 = sub_1C2025EC4();
  id v24 = objc_msgSend(v23, sel_bottomAnchor);

  id v25 = objc_msgSend(v0, sel_contentView);
  id v26 = objc_msgSend(v25, sel_bottomAnchor);

  id v27 = objc_msgSend(v24, sel_constraintEqualToAnchor_, v26);
  *(void *)(v7 + 56) = v27;
  id v28 = sub_1C2025EC4();
  id v29 = objc_msgSend(v28, sel_heightAnchor);

  uint64_t v30 = (uint64_t)v0 + OBJC_IVAR____TtC19HealthMedicationsUI12TextItemCell_item;
  swift_beginAccess();
  sub_1C1F2116C(v30, (uint64_t)v40);
  if (!v40[3])
  {
    sub_1C1F23854((uint64_t)v40, (unint64_t *)&qword_1EBF0C300, (unint64_t *)&qword_1EBF0C2F0);
    uint64_t v35 = type metadata accessor for TextViewItem();
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v3, 1, 1, v35);
    goto LABEL_7;
  }
  sub_1C1F23804(0, (unint64_t *)&qword_1EBF0C2F0);
  uint64_t v31 = type metadata accessor for TextViewItem();
  int v32 = swift_dynamicCast();
  uint64_t v33 = *(void *)(v31 - 8);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v33 + 56))(v3, v32 ^ 1u, 1, v31);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v33 + 48))(v3, 1, v31) == 1)
  {
LABEL_7:
    sub_1C20289D0((uint64_t)v3);
    double v34 = 60.0;
    goto LABEL_8;
  }
  double v34 = *(double *)&v3[*(int *)(v31 + 32)];
  sub_1C2028AAC((uint64_t)v3);
LABEL_8:
  unint64_t v36 = self;
  id v37 = objc_msgSend(v29, sel_constraintEqualToConstant_, v34);

  *(void *)(v7 + 64) = v37;
  v40[0] = v7;
  sub_1C214A7A0();
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C810);
  unint64_t v38 = (void *)sub_1C214A770();
  swift_bridgeObjectRelease();
  objc_msgSend(v36, sel_activateConstraints_, v38);
}

uint64_t sub_1C2026B04()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1C21497F0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  id v5 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C202897C(0, &qword_1EA2C5750, (void (*)(uint64_t))type metadata accessor for TextViewItem);
  MEMORY[0x1F4188790](v6 - 8);
  id v8 = (char *)&v32 - v7;
  id v9 = (int *)type metadata accessor for TextViewItem();
  uint64_t v10 = *((void *)v9 - 1);
  MEMORY[0x1F4188790](v9);
  id v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = (uint64_t)v1 + OBJC_IVAR____TtC19HealthMedicationsUI12TextItemCell_item;
  swift_beginAccess();
  sub_1C1F2116C(v13, (uint64_t)v34);
  if (!v34[3])
  {
    sub_1C1F23854((uint64_t)v34, (unint64_t *)&qword_1EBF0C300, (unint64_t *)&qword_1EBF0C2F0);
    (*(void (**)(char *, uint64_t, uint64_t, int *))(v10 + 56))(v8, 1, 1, v9);
LABEL_6:
    sub_1C20289D0((uint64_t)v8);
    sub_1C21497A0();
    id v23 = v1;
    id v24 = sub_1C21497E0();
    os_log_type_t v25 = sub_1C214ABD0();
    if (os_log_type_enabled(v24, v25))
    {
      id v26 = (uint8_t *)swift_slowAlloc();
      uint64_t v27 = swift_slowAlloc();
      uint64_t v32 = v2;
      uint64_t v33 = v27;
      *(_DWORD *)id v26 = 136446210;
      sub_1C1F2116C(v13, (uint64_t)v34);
      sub_1C1F237AC(0, (unint64_t *)&qword_1EBF0C300, (unint64_t *)&qword_1EBF0C2F0);
      uint64_t v28 = sub_1C214A630();
      v34[0] = sub_1C1F6FD54(v28, v29, &v33);
      sub_1C214B530();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C1F0B000, v24, v25, "Incorrect view model for TextItemCell: %{public}s", v26, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C8754730](v27, -1, -1);
      MEMORY[0x1C8754730](v26, -1, -1);

      return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v32);
    }
    else
    {

      return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    }
  }
  sub_1C1F23804(0, (unint64_t *)&qword_1EBF0C2F0);
  int v14 = swift_dynamicCast();
  (*(void (**)(char *, void, uint64_t, int *))(v10 + 56))(v8, v14 ^ 1u, 1, v9);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v10 + 48))(v8, 1, v9) == 1) {
    goto LABEL_6;
  }
  sub_1C2028A48((uint64_t)v8, (uint64_t)v12);
  sub_1C202650C();
  id v15 = sub_1C2025EC4();
  id v16 = (uint64_t *)&v12[v9[5]];
  uint64_t v17 = *v16;
  uint64_t v18 = v16[1];
  swift_bridgeObjectRetain();
  UITextViewWithPlaceholder.text.setter(v17, v18);

  id v19 = sub_1C2025EC4();
  uint64_t v20 = *(void *)&v12[v9[6] + 8];
  swift_bridgeObjectRetain();
  id v21 = sub_1C20DEE50();
  if (v20)
  {
    id v22 = (void *)sub_1C214A5B0();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v22 = 0;
  }
  objc_msgSend(v21, sel_setText_, v22);

  id v31 = sub_1C2025EC4();
  objc_msgSend(v31, sel_setUserInteractionEnabled_, v12[v9[9]]);

  return sub_1C2028AAC((uint64_t)v12);
}

BOOL sub_1C202704C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t v9 = v5 + OBJC_IVAR____TtC19HealthMedicationsUI12TextItemCell_item;
  swift_beginAccess();
  sub_1C1F2116C(v9, (uint64_t)v25);
  if (!v26)
  {
    sub_1C1F23854((uint64_t)v25, (unint64_t *)&qword_1EBF0C300, (unint64_t *)&qword_1EBF0C2F0);
    long long v27 = 0u;
    long long v28 = 0u;
    uint64_t v29 = 0;
    goto LABEL_9;
  }
  sub_1C1F23804(0, (unint64_t *)&qword_1EBF0C2F0);
  sub_1C1F23804(0, &qword_1EA2C5760);
  if ((swift_dynamicCast() & 1) == 0)
  {
    uint64_t v29 = 0;
    long long v27 = 0u;
    long long v28 = 0u;
    goto LABEL_9;
  }
  uint64_t v10 = *((void *)&v28 + 1);
  if (!*((void *)&v28 + 1))
  {
LABEL_9:
    sub_1C1F23854((uint64_t)&v27, &qword_1EA2C5758, &qword_1EA2C5760);
    return 1;
  }
  uint64_t v11 = v29;
  __swift_project_boxed_opaque_existential_0(&v27, *((uint64_t *)&v28 + 1));
  uint64_t v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8))(v10, v11);
  char v14 = v13;
  __swift_destroy_boxed_opaque_existential_0((uint64_t)&v27);
  if (v14) {
    return 1;
  }
  id v15 = objc_msgSend(a1, sel_text);
  if (v15)
  {
    id v16 = v15;
    unint64_t v17 = sub_1C214A5F0();
    unint64_t v19 = v18;
  }
  else
  {
    unint64_t v17 = 0;
    unint64_t v19 = 0xE000000000000000;
  }
  unint64_t v21 = sub_1C214AB20();
  if (v23)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    sub_1C2027278(v21, v22, a4, a5, v17, v19);
    swift_bridgeObjectRelease();
    uint64_t v24 = sub_1C214A6A0();
    swift_bridgeObjectRelease();
    return v12 >= v24;
  }
}

uint64_t sub_1C2027278(unint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6)
{
  swift_bridgeObjectRetain();
  sub_1C214B510();
  uint64_t v13 = v12;
  swift_bridgeObjectRelease();
  if ((v13 & 0x1000000000000000) != 0) {
    goto LABEL_25;
  }
  swift_bridgeObjectRetain();
  sub_1C214B510();
  uint64_t v15 = v14;
  uint64_t result = swift_bridgeObjectRelease();
  if ((v15 & 0x1000000000000000) != 0) {
    goto LABEL_25;
  }
  uint64_t v17 = (a5 >> 59) & 1;
  if ((a6 & 0x1000000000000000) == 0) {
    LOBYTE(v17) = 1;
  }
  uint64_t v18 = 4 << v17;
  unint64_t v19 = a1;
  if ((a1 & 0xC) == 4 << v17)
  {
    uint64_t result = sub_1C2027D44(a1, a5, a6);
    unint64_t v19 = result;
  }
  uint64_t v40 = a3;
  unint64_t v20 = a2;
  unint64_t v21 = a5 & 0x800000000000000;
  if ((a6 & 0x1000000000000000) != 0)
  {
    uint64_t v23 = a6 & 0x2000000000000000;
    uint64_t v25 = a5 & 0xFFFFFFFFFFFFLL;
    unint64_t v24 = HIBYTE(a6) & 0xF;
    if ((a6 & 0x2000000000000000) != 0) {
      unint64_t v32 = HIBYTE(a6) & 0xF;
    }
    else {
      unint64_t v32 = a5 & 0xFFFFFFFFFFFFLL;
    }
    if (v32 < v19 >> 16) {
      goto LABEL_43;
    }
    uint64_t result = sub_1C214A6F0();
    uint64_t v22 = result;
    if (v21) {
      uint64_t v26 = 7;
    }
    else {
      uint64_t v26 = 11;
    }
  }
  else
  {
    uint64_t v22 = v19 >> 16;
    uint64_t v23 = a6 & 0x2000000000000000;
    unint64_t v24 = HIBYTE(a6) & 0xF;
    uint64_t v25 = a5 & 0xFFFFFFFFFFFFLL;
    uint64_t v26 = 7;
  }
  if (!v23) {
    unint64_t v24 = v25;
  }
  uint64_t v27 = 4 << (v21 >> 59);
  unint64_t v28 = v26 | (v24 << 16);
  a2 = v20;
  if ((a6 & 0x1000000000000000) == 0) {
    uint64_t v27 = 8;
  }
  unint64_t v29 = v20;
  if ((v20 & 0xC) == v27)
  {
    unint64_t v33 = v20;
    uint64_t v34 = v22;
    uint64_t result = sub_1C2027D44(v33, a5, a6);
    uint64_t v22 = v34;
    unint64_t v29 = result;
  }
  if ((v26 & 0xC) == v18)
  {
    unint64_t v35 = v26 | (v24 << 16);
    uint64_t v36 = v22;
    uint64_t result = sub_1C2027D44(v35, a5, a6);
    uint64_t v22 = v36;
    unint64_t v28 = result;
    if ((a6 & 0x1000000000000000) == 0)
    {
LABEL_17:
      uint64_t v30 = (v28 >> 16) - (v29 >> 16);
      if ((a4 & 0x1000000000000000) == 0) {
        goto LABEL_18;
      }
      goto LABEL_37;
    }
  }
  else if ((a6 & 0x1000000000000000) == 0)
  {
    goto LABEL_17;
  }
  if (v24 < v29 >> 16)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  if (v24 >= v28 >> 16)
  {
    uint64_t v37 = v22;
    uint64_t v38 = sub_1C214A6F0();
    uint64_t v22 = v37;
    uint64_t v30 = v38;
    if ((a4 & 0x1000000000000000) == 0)
    {
LABEL_18:
      if ((a4 & 0x2000000000000000) != 0)
      {
        uint64_t result = HIBYTE(a4) & 0xF;
        uint64_t v31 = v22 + result;
        if (!__OFADD__(v22, result)) {
          goto LABEL_23;
        }
      }
      else
      {
        uint64_t result = v40 & 0xFFFFFFFFFFFFLL;
        uint64_t v31 = v22 + (v40 & 0xFFFFFFFFFFFFLL);
        if (!__OFADD__(v22, v40 & 0xFFFFFFFFFFFFLL)) {
          goto LABEL_23;
        }
      }
      goto LABEL_39;
    }
LABEL_37:
    uint64_t v39 = v22;
    uint64_t result = sub_1C214A6D0();
    uint64_t v31 = v39 + result;
    if (!__OFADD__(v39, result))
    {
LABEL_23:
      uint64_t result = v31 + v30;
      if (!__OFADD__(v31, v30))
      {
        MEMORY[0x1C87527F0](result);
LABEL_25:
        sub_1C214A720();
        sub_1C2028B08();
        sub_1C214A6B0();
        swift_bridgeObjectRelease();
        sub_1C214A6B0();
        sub_1C2027DC0(a2, a5, a6);
        sub_1C214A6B0();
        swift_bridgeObjectRelease();
        return 0;
      }
      goto LABEL_40;
    }
LABEL_39:
    __break(1u);
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
LABEL_42:
  __break(1u);
LABEL_43:
  __break(1u);
  return result;
}

uint64_t sub_1C2027650(void *a1)
{
  uint64_t v3 = sub_1C21497F0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C202897C(0, &qword_1EA2C5750, (void (*)(uint64_t))type metadata accessor for TextViewItem);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v30 - v8;
  uint64_t v10 = type metadata accessor for TextViewItem();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = (uint64_t)v1 + OBJC_IVAR____TtC19HealthMedicationsUI12TextItemCell_item;
  swift_beginAccess();
  sub_1C1F2116C(v14, (uint64_t)v32);
  if (!v32[3])
  {
    sub_1C1F23854((uint64_t)v32, (unint64_t *)&qword_1EBF0C300, (unint64_t *)&qword_1EBF0C2F0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, 1, 1, v10);
LABEL_6:
    sub_1C20289D0((uint64_t)v9);
    sub_1C21497A0();
    id v22 = v1;
    uint64_t v23 = sub_1C21497E0();
    os_log_type_t v24 = sub_1C214ABD0();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v30 = v3;
      uint64_t v25 = (uint8_t *)swift_slowAlloc();
      uint64_t v26 = swift_slowAlloc();
      uint64_t v31 = v26;
      *(_DWORD *)uint64_t v25 = 136446210;
      sub_1C1F2116C(v14, (uint64_t)v32);
      sub_1C1F237AC(0, (unint64_t *)&qword_1EBF0C300, (unint64_t *)&qword_1EBF0C2F0);
      uint64_t v27 = sub_1C214A630();
      v32[0] = sub_1C1F6FD54(v27, v28, &v31);
      sub_1C214B530();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C1F0B000, v23, v24, "Incorrect view model for TextItemCell: %{public}s", v25, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C8754730](v26, -1, -1);
      MEMORY[0x1C8754730](v25, -1, -1);

      return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v30);
    }
    else
    {

      return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    }
  }
  sub_1C1F23804(0, (unint64_t *)&qword_1EBF0C2F0);
  int v15 = swift_dynamicCast();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v9, v15 ^ 1u, 1, v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1) {
    goto LABEL_6;
  }
  sub_1C2028A48((uint64_t)v9, (uint64_t)v13);
  id v16 = *(void (**)(char *, uint64_t, unint64_t))&v13[*(int *)(v10 + 40)];
  swift_retain();
  id v17 = objc_msgSend(a1, sel_text);
  if (v17)
  {
    uint64_t v18 = v17;
    uint64_t v19 = sub_1C214A5F0();
    unint64_t v21 = v20;
  }
  else
  {
    uint64_t v19 = 0;
    unint64_t v21 = 0xE000000000000000;
  }
  v16(v13, v19, v21);
  swift_bridgeObjectRelease();
  swift_release();
  return sub_1C2028AAC((uint64_t)v13);
}

id sub_1C2027B48()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TextItemCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1C2027BD4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI12TextItemCell_item;
  swift_beginAccess();
  return sub_1C1F2116C(v3, a1);
}

uint64_t sub_1C2027C28(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI12TextItemCell_item;
  swift_beginAccess();
  sub_1C1F32DDC(a1, v3);
  swift_endAccess();
  sub_1C2026B04();
  return sub_1C1F23854(a1, (unint64_t *)&qword_1EBF0C300, (unint64_t *)&qword_1EBF0C2F0);
}

uint64_t (*sub_1C2027CB0(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1C2027D10;
}

uint64_t sub_1C2027D10(uint64_t a1, char a2)
{
  uint64_t result = swift_endAccess();
  if ((a2 & 1) == 0) {
    return sub_1C2026B04();
  }
  return result;
}

uint64_t sub_1C2027D44(unint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3 = a1;
  uint64_t v4 = (unsigned __int16)a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    uint64_t v10 = sub_1C214A700();
    uint64_t v11 = v10 + (v4 << 16);
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v13 = v12;
    }
    return v13 | 4;
  }
  else
  {
    uint64_t v5 = MEMORY[0x1C8752860](15, a1 >> 16);
    uint64_t v6 = v5 + (v4 << 16);
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v8 = v7;
    }
    return v8 | 8;
  }
}

unint64_t sub_1C2027DC0(unint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v3 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0) {
    uint64_t v3 = a2 & 0xFFFFFFFFFFFFLL;
  }
  if (4 * v3 >= result >> 14) {
    return sub_1C214A720();
  }
  __break(1u);
  return result;
}

uint64_t _s19HealthMedicationsUI12TextViewItemV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TextViewItem();
  uint64_t v5 = MEMORY[0x1F4188790](v4);
  unint64_t v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x1F4188790](v5);
  uint64_t v10 = (char *)&v30 - v9;
  uint64_t v11 = MEMORY[0x1F4188790](v8);
  unint64_t v13 = (char *)&v30 - v12;
  uint64_t v14 = MEMORY[0x1F4188790](v11);
  id v16 = (char *)&v30 - v15;
  uint64_t v17 = *(int *)(v14 + 20);
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = *(void *)(a1 + v17 + 8);
  unint64_t v20 = (void *)(a2 + v17);
  uint64_t v21 = v20[1];
  if (!v19)
  {
    if (!v21)
    {
LABEL_12:
      sub_1C2028B5C(a1, (uint64_t)&v30 - v15);
      sub_1C2028B5C(a2, (uint64_t)v13);
      goto LABEL_13;
    }
LABEL_10:
    sub_1C2028B5C(a1, (uint64_t)&v30 - v15);
    sub_1C2028B5C(a2, (uint64_t)v13);
    goto LABEL_11;
  }
  if (!v21) {
    goto LABEL_10;
  }
  if (*v18 == *v20 && v19 == v21) {
    goto LABEL_12;
  }
  char v23 = sub_1C214BA80();
  sub_1C2028B5C(a1, (uint64_t)v16);
  sub_1C2028B5C(a2, (uint64_t)v13);
  if ((v23 & 1) == 0)
  {
LABEL_11:
    sub_1C2028AAC((uint64_t)v13);
    sub_1C2028AAC((uint64_t)v16);
    sub_1C2028B5C(a1, (uint64_t)v10);
    sub_1C2028B5C(a2, (uint64_t)v7);
LABEL_15:
    sub_1C2028AAC((uint64_t)v7);
    sub_1C2028AAC((uint64_t)v10);
    char v28 = 0;
    return v28 & 1;
  }
LABEL_13:
  double v24 = *(double *)&v16[*(int *)(v4 + 32)];
  sub_1C2028AAC((uint64_t)v16);
  double v25 = *(double *)&v13[*(int *)(v4 + 32)];
  sub_1C2028AAC((uint64_t)v13);
  sub_1C2028B5C(a1, (uint64_t)v10);
  sub_1C2028B5C(a2, (uint64_t)v7);
  if (v24 != v25) {
    goto LABEL_15;
  }
  char v26 = v10[*(int *)(v4 + 36)];
  sub_1C2028AAC((uint64_t)v10);
  char v27 = v7[*(int *)(v4 + 36)];
  sub_1C2028AAC((uint64_t)v7);
  char v28 = v26 ^ v27 ^ 1;
  return v28 & 1;
}

uint64_t sub_1C2028048()
{
  return sub_1C2028094((unint64_t *)&unk_1EA2C56B8, 255, (void (*)(uint64_t))type metadata accessor for TextViewItem);
}

uint64_t sub_1C2028094(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for TextViewItem(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v28 = *a2;
    *a1 = *a2;
    a1 = (void *)(v28 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1C2147B20();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = (void *)((char *)a1 + v8);
    uint64_t v11 = (void *)((char *)a2 + v8);
    uint64_t v12 = v11[1];
    *uint64_t v10 = *v11;
    v10[1] = v12;
    unint64_t v13 = (void *)((char *)a1 + v9);
    uint64_t v14 = (void *)((char *)a2 + v9);
    uint64_t v15 = v14[1];
    *unint64_t v13 = *v14;
    v13[1] = v15;
    uint64_t v16 = a3[7];
    uint64_t v17 = a3[8];
    uint64_t v18 = (char *)a1 + v16;
    uint64_t v19 = (char *)a2 + v16;
    v18[8] = v19[8];
    *(void *)uint64_t v18 = *(void *)v19;
    *(void *)((char *)a1 + v17) = *(void *)((char *)a2 + v17);
    uint64_t v20 = a3[10];
    *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
    uint64_t v21 = (void *)((char *)a1 + v20);
    id v22 = (void *)((char *)a2 + v20);
    uint64_t v23 = v22[1];
    *uint64_t v21 = *v22;
    v21[1] = v23;
    uint64_t v24 = a3[11];
    double v25 = (void *)((char *)a1 + v24);
    char v26 = (void *)((char *)a2 + v24);
    uint64_t v27 = v26[1];
    *double v25 = *v26;
    v25[1] = v27;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for TextViewItem(uint64_t a1)
{
  uint64_t v2 = sub_1C2147B20();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for TextViewItem(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1C2147B20();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)(a1 + v7);
  uint64_t v10 = (void *)(a2 + v7);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  uint64_t v12 = (void *)(a1 + v8);
  unint64_t v13 = (void *)(a2 + v8);
  uint64_t v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  uint64_t v15 = a3[7];
  uint64_t v16 = a3[8];
  uint64_t v17 = a1 + v15;
  uint64_t v18 = a2 + v15;
  *(unsigned char *)(v17 + 8) = *(unsigned char *)(v18 + 8);
  *(void *)uint64_t v17 = *(void *)v18;
  *(void *)(a1 + v16) = *(void *)(a2 + v16);
  uint64_t v19 = a3[10];
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  uint64_t v20 = (void *)(a1 + v19);
  uint64_t v21 = (void *)(a2 + v19);
  uint64_t v22 = v21[1];
  void *v20 = *v21;
  v20[1] = v22;
  uint64_t v23 = a3[11];
  uint64_t v24 = (void *)(a1 + v23);
  double v25 = (void *)(a2 + v23);
  uint64_t v26 = v25[1];
  *uint64_t v24 = *v25;
  v24[1] = v26;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for TextViewItem(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1C2147B20();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = a3[6];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v13 = a3[7];
  uint64_t v14 = a1 + v13;
  uint64_t v15 = (uint64_t *)(a2 + v13);
  uint64_t v16 = *v15;
  *(unsigned char *)(v14 + 8) = *((unsigned char *)v15 + 8);
  *(void *)uint64_t v14 = v16;
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  uint64_t v17 = a3[10];
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (void *)(a2 + v17);
  uint64_t v20 = v19[1];
  void *v18 = *v19;
  v18[1] = v20;
  swift_retain();
  swift_release();
  uint64_t v21 = a3[11];
  uint64_t v22 = (void *)(a1 + v21);
  uint64_t v23 = (void *)(a2 + v21);
  *uint64_t v22 = *v23;
  v22[1] = v23[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for TextViewItem(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1C2147B20();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  uint64_t v8 = a3[7];
  uint64_t v9 = a3[8];
  uint64_t v10 = a1 + v8;
  uint64_t v11 = a2 + v8;
  *(void *)uint64_t v10 = *(void *)v11;
  *(unsigned char *)(v10 + 8) = *(unsigned char *)(v11 + 8);
  *(void *)(a1 + v9) = *(void *)(a2 + v9);
  uint64_t v12 = a3[10];
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  *(_OWORD *)(a1 + v12) = *(_OWORD *)(a2 + v12);
  *(_OWORD *)(a1 + a3[11]) = *(_OWORD *)(a2 + a3[11]);
  return a1;
}

uint64_t assignWithTake for TextViewItem(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1C2147B20();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[6];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (uint64_t *)(a2 + v12);
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  *uint64_t v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  uint64_t v17 = a3[7];
  uint64_t v18 = a3[8];
  uint64_t v19 = a1 + v17;
  uint64_t v20 = a2 + v17;
  *(unsigned char *)(v19 + 8) = *(unsigned char *)(v20 + 8);
  *(void *)uint64_t v19 = *(void *)v20;
  *(void *)(a1 + v18) = *(void *)(a2 + v18);
  uint64_t v21 = a3[10];
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  *(_OWORD *)(a1 + v21) = *(_OWORD *)(a2 + v21);
  swift_release();
  uint64_t v22 = a3[11];
  uint64_t v23 = (void *)(a1 + v22);
  uint64_t v24 = (uint64_t *)(a2 + v22);
  uint64_t v26 = *v24;
  uint64_t v25 = v24[1];
  *uint64_t v23 = v26;
  v23[1] = v25;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for TextViewItem(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C202871C);
}

uint64_t sub_1C202871C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C2147B20();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 40));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for TextViewItem(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C20287F0);
}

uint64_t sub_1C20287F0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1C2147B20();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 40)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_1C20288AC()
{
  uint64_t result = sub_1C2147B20();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void sub_1C202897C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C214B4F0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1C20289D0(uint64_t a1)
{
  sub_1C202897C(0, &qword_1EA2C5750, (void (*)(uint64_t))type metadata accessor for TextViewItem);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C2028A48(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TextViewItem();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C2028AAC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TextViewItem();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1C2028B08()
{
  unint64_t result = qword_1EA2C5768;
  if (!qword_1EA2C5768)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C5768);
  }
  return result;
}

uint64_t sub_1C2028B5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TextViewItem();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t InteractionResultItem.identifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + qword_1EA2C7FA8;
  uint64_t v4 = sub_1C2147B20();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t InteractionResultItem.reuseIdentifier.getter()
{
  uint64_t v0 = sub_1C2029184();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t InteractionResultItem.item.getter@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(*(void *)v1 + 88) - 8) + 16))(a1, v1 + *(void *)(*(void *)v1 + 120));
}

uint64_t InteractionResultItem.__allocating_init(item:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  InteractionResultItem.init(item:)(a1);
  return v2;
}

uint64_t *InteractionResultItem.init(item:)(uint64_t a1)
{
  uint64_t v3 = *v1;
  sub_1C2147B10();
  uint64_t v4 = (uint64_t *)((char *)v1 + qword_1EA2C7FB0);
  *uint64_t v4 = sub_1C21481C0();
  v4[1] = v5;
  (*(void (**)(uint64_t, uint64_t))(*(void *)(*(void *)(v3 + 88) - 8) + 32))((uint64_t)v1 + *(void *)(*v1 + 120), a1);
  return v1;
}

uint64_t sub_1C2028DEC()
{
  uint64_t v1 = *(void *)(v0 + qword_1EA2C7FB0);
  sub_1C2147AD0();
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t static InteractionResultItem.== infix(_:_:)()
{
  return sub_1C2147AF0();
}

uint64_t sub_1C2028E84()
{
  swift_bridgeObjectRetain();
  sub_1C214A690();

  return swift_bridgeObjectRelease();
}

uint64_t *InteractionResultItem.deinit()
{
  uint64_t v1 = *v0;
  uint64_t v2 = (uint64_t)v0 + qword_1EA2C7FA8;
  uint64_t v3 = sub_1C2147B20();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v1 + 88) - 8) + 8))((uint64_t)v0 + *(void *)(*v0 + 120));
  return v0;
}

uint64_t InteractionResultItem.__deallocating_deinit()
{
  InteractionResultItem.deinit();

  return swift_deallocClassInstance();
}

uint64_t sub_1C2029018()
{
  return sub_1C214BB80();
}

uint64_t sub_1C2029058()
{
  uint64_t v0 = sub_1C2029184();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_1C2029094()
{
  return sub_1C2028DEC();
}

uint64_t sub_1C20290B8()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 152))();
}

uint64_t sub_1C20290FC()
{
  return sub_1C2028E84();
}

uint64_t sub_1C2029120()
{
  return sub_1C214BB80();
}

uint64_t sub_1C2029160()
{
  return static InteractionResultItem.== infix(_:_:)() & 1;
}

uint64_t sub_1C2029184()
{
  return *(void *)(v0 + qword_1EA2C7FB0);
}

uint64_t sub_1C2029198()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C20291B4()
{
  uint64_t result = sub_1C2147B20();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_initClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

uint64_t type metadata accessor for InteractionResultItem()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for InteractionResultItem(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for InteractionResultItem);
}

uint64_t dispatch thunk of InteractionResultItem.__allocating_init(item:)()
{
  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t dispatch thunk of InteractionResultItem.uniqueIdentifier.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of InteractionResultItem.hash(into:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t dispatch thunk of InteractionResultItem.hashValue.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t sub_1C202933C()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v3 = sub_1C21497F0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1C2149BE0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  unint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI30MedicationsDayHistoryEmptyCell_item;
  swift_beginAccess();
  sub_1C1F2116C(v11, (uint64_t)v22);
  if (v23)
  {
    sub_1C1F1CB5C();
    type metadata accessor for MedicationsDayHistoryEmptyItem();
    if (swift_dynamicCast())
    {
      MEMORY[0x1C8753050]();
      swift_bridgeObjectRetain();
      sub_1C2149B90();
      uint64_t v23 = v7;
      uint64_t v24 = MEMORY[0x1E4FB0F88];
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v22);
      (*(void (**)(uint64_t *, char *, uint64_t))(v8 + 16))(boxed_opaque_existential_1, v10, v7);
      MEMORY[0x1C8752FD0](v22);
      swift_release();
      return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    }
  }
  else
  {
    sub_1C1F374E4((uint64_t)v22);
  }
  sub_1C21497A0();
  uint64_t v14 = sub_1C21497E0();
  os_log_type_t v15 = sub_1C214ABD0();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = (uint8_t *)swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    uint64_t v21 = v17;
    *(_DWORD *)uint64_t v16 = 136446210;
    v22[0] = ObjectType;
    swift_getMetatypeMetadata();
    uint64_t v18 = sub_1C214A610();
    v22[0] = sub_1C1F6FD54(v18, v19, &v21);
    sub_1C214B530();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C1F0B000, v14, v15, "[%{public}s]: Unexpected view model.", v16, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C8754730](v17, -1, -1);
    MEMORY[0x1C8754730](v16, -1, -1);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

id sub_1C202979C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MedicationsDayHistoryEmptyCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for MedicationsDayHistoryEmptyCell()
{
  return self;
}

uint64_t sub_1C2029804@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI30MedicationsDayHistoryEmptyCell_item;
  swift_beginAccess();
  return sub_1C1F2116C(v3, a1);
}

uint64_t sub_1C2029858(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI30MedicationsDayHistoryEmptyCell_item;
  swift_beginAccess();
  sub_1C1F32DDC(a1, v3);
  swift_endAccess();
  sub_1C202933C();
  return sub_1C1F374E4(a1);
}

uint64_t (*sub_1C20298C8(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1C2029928;
}

uint64_t sub_1C2029928(uint64_t a1, char a2)
{
  uint64_t result = swift_endAccess();
  if ((a2 & 1) == 0) {
    return sub_1C202933C();
  }
  return result;
}

uint64_t sub_1C202995C()
{
  uint64_t v2 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  sub_1C214A710();
  sub_1C214BA40();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  return v2;
}

void sub_1C20299E8()
{
  uint64_t v1 = (uint64_t)v0 + OBJC_IVAR____TtC19HealthMedicationsUI30MedicationOnboardingHeaderCell_item;
  swift_beginAccess();
  sub_1C1F2116C(v1, (uint64_t)v7);
  if (v8)
  {
    sub_1C1F1CB5C();
    if (swift_dynamicCast())
    {
      uint64_t v2 = OBJC_IVAR____TtC19HealthMedicationsUI30MedicationOnboardingHeaderCell_headerView;
      objc_msgSend(*(id *)((char *)&v0->super.super.isa+ OBJC_IVAR____TtC19HealthMedicationsUI30MedicationOnboardingHeaderCell_headerView), sel_removeFromSuperview);
      uint64_t v3 = (objc_class *)sub_1C2029F3C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v4 = *(Class *)((char *)&v0->super.super.isa + v2);
      *(Class *)((char *)&v0->super.super.isa + v2) = v3;

      uint64_t v5 = *(Class *)((char *)&v0->super.super.isa + v2);
      if (v5)
      {
        id v6 = v5;
        [(UIView *)v0 addSubview:v6];
        UIView.alignConstraints(to:)(v0);
      }
    }
  }
  else
  {
    sub_1C1F374E4((uint64_t)v7);
  }
}

id sub_1C2029C0C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MedicationOnboardingHeaderCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for MedicationOnboardingHeaderCell()
{
  return self;
}

uint64_t sub_1C2029CB0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI30MedicationOnboardingHeaderCell_item;
  swift_beginAccess();
  return sub_1C1F2116C(v3, a1);
}

uint64_t sub_1C2029D04(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI30MedicationOnboardingHeaderCell_item;
  swift_beginAccess();
  sub_1C1F32DDC(a1, v3);
  swift_endAccess();
  sub_1C20299E8();
  return sub_1C1F374E4(a1);
}

uint64_t (*sub_1C2029D74(uint64_t a1))()
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1C2029DD4;
}

uint64_t sub_1C2029DD8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC19HealthMedicationsUI30MedicationOnboardingHeaderCell_item;
  swift_beginAccess();
  return sub_1C1F2116C(v3, a1);
}

uint64_t sub_1C2029E30(uint64_t a1)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC19HealthMedicationsUI30MedicationOnboardingHeaderCell_item;
  swift_beginAccess();
  sub_1C1F32DDC(a1, v3);
  swift_endAccess();
  sub_1C20299E8();
  return sub_1C1F374E4(a1);
}

uint64_t (*sub_1C2029EA4(uint64_t a1))()
{
  *(void *)(a1 + 24) = *v1;
  swift_beginAccess();
  return sub_1C2029DD4;
}

void sub_1C2029F08(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    sub_1C20299E8();
  }
}

id sub_1C2029F3C()
{
  uint64_t v0 = sub_1C2148710();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = &v19[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = sub_1C2149BE0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  uint64_t v8 = &v19[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v6);
  unint64_t v10 = &v19[-v9];
  sub_1C2149B40();
  swift_bridgeObjectRetain();
  sub_1C2149B90();
  sub_1C2148660();
  sub_1C21486E0();
  (*(void (**)(unsigned char *, uint64_t))(v1 + 8))(v3, v0);
  sub_1C2149B30();
  uint64_t v11 = (void (*)(unsigned char *, void))sub_1C2149B10();
  *(void *)(v12 + 16) = 0;
  v11(v19, 0);
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v5 + 16))(v8, v10, v4);
  uint64_t v13 = (void *)sub_1C21499E0();
  uint64_t v14 = *(void (**)(unsigned char *, uint64_t))(v5 + 8);
  v14(v8, v4);
  os_log_type_t v15 = self;
  id v16 = v13;
  id v17 = objc_msgSend(v15, sel_systemBackgroundColor);
  objc_msgSend(v16, sel_setBackgroundColor_, v17);

  objc_msgSend(v16, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  v14(v10, v4);
  return v16;
}

ValueMetadata *type metadata accessor for MedicationOnboardingHeaderItem()
{
  return &type metadata for MedicationOnboardingHeaderItem;
}

unint64_t sub_1C202A214()
{
  unint64_t result = qword_1EA2C5868;
  if (!qword_1EA2C5868)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C5868);
  }
  return result;
}

uint64_t MedicationSearchItem.init(source:axIndex:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_1C2147B20();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = (int *)type metadata accessor for MedicationSearchItem(0);
  uint64_t v11 = (uint64_t *)(a3 + v10[6]);
  sub_1C2147B10();
  uint64_t v12 = sub_1C2147AD0();
  uint64_t v14 = v13;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  *uint64_t v11 = v12;
  v11[1] = v14;
  os_log_type_t v15 = (uint64_t *)(a3 + v10[7]);
  type metadata accessor for MedicationSearchCell();
  sub_1C202DFCC(&qword_1EA2C2EB8, v16, (void (*)(uint64_t))type metadata accessor for MedicationSearchCell);
  uint64_t *v15 = sub_1C21481D0();
  v15[1] = v17;
  uint64_t result = sub_1C202F7E0(a1, a3, type metadata accessor for MedicationSearchItem.Source);
  *(void *)(a3 + v10[5]) = a2;
  return result;
}

uint64_t type metadata accessor for MedicationSearchItem(uint64_t a1)
{
  return sub_1C1F20D10(a1, (uint64_t *)&unk_1EA2C5890);
}

uint64_t type metadata accessor for MedicationSearchCell()
{
  return self;
}

uint64_t type metadata accessor for MedicationSearchItem.Source(uint64_t a1)
{
  return sub_1C1F20D10(a1, (uint64_t *)&unk_1EA2C58A0);
}

uint64_t sub_1C202A450(uint64_t a1)
{
  v13[0] = a1;
  uint64_t v2 = sub_1C21491B0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x1E4F66C58];
  uint64_t v7 = MEMORY[0x1E4FBB718];
  sub_1C202F71C(0, &qword_1EA2C58E0, MEMORY[0x1E4F66C58], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v8 - 8);
  unint64_t v10 = (char *)v13 - v9;
  sub_1C202FC50(v1, (uint64_t)v13 - v9, (uint64_t)&qword_1EA2C58E0, v6, v7, (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1C202F71C);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v10, 1, v2) == 1) {
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v10, v2);
  uint64_t v12 = v13[1];
  ((void (*)(uint64_t *__return_ptr, char *))v13[0])(&v14, v5);
  if (v12) {
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v14;
}

uint64_t MedicationSearchItem.Source.hash(into:)()
{
  uint64_t v1 = sub_1C21490F0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1C21491B0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for MedicationSearchItem.Source(0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (void **)((char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C202DF68(v0, (uint64_t)v11);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(char *, void **, uint64_t))(v2 + 32))(v4, v11, v1);
    sub_1C214BB40();
    sub_1C202DFCC(&qword_1EA2C5870, 255, MEMORY[0x1E4F66C38]);
    sub_1C214A560();
    return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  else
  {
    uint64_t v13 = *v11;
    sub_1C1F30C40();
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, (char *)v11 + *(int *)(v14 + 48), v5);
    sub_1C214BB40();
    sub_1C214B230();
    sub_1C202DFCC((unint64_t *)&unk_1EA2C4EE0, 255, MEMORY[0x1E4F66C58]);
    sub_1C214A560();

    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
}

uint64_t MedicationSearchItem.Source.hashValue.getter()
{
  return sub_1C214BB80();
}

uint64_t sub_1C202A9A0()
{
  return sub_1C214BB80();
}

uint64_t sub_1C202A9E4()
{
  return sub_1C214BB80();
}

uint64_t sub_1C202AA20()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1C2149520();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1C21490F0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v21 - v11;
  uint64_t v13 = type metadata accessor for MedicationSearchItem.Source(0);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (id *)((char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C202DF68(v1, (uint64_t)v15);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(char *, id *, uint64_t))(v7 + 32))(v12, v15, v6);
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v12, v6);
    sub_1C2149530();
    char v16 = sub_1C21494E0();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
  }
  else
  {

    sub_1C1F30C40();
    uint64_t v18 = (char *)v15 + *(int *)(v17 + 48);
    uint64_t v19 = sub_1C21491B0();
    (*(void (**)(char *, uint64_t))(*(void *)(v19 - 8) + 8))(v18, v19);
    char v16 = 1;
  }
  return v16 & 1;
}

uint64_t sub_1C202ACC0()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1C2149520();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1C21490F0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v21 - v11;
  uint64_t v13 = type metadata accessor for MedicationSearchItem.Source(0);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (uint64_t *)((char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C202DF68(v1, (uint64_t)v15);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(char *, uint64_t *, uint64_t))(v7 + 32))(v12, v15, v6);
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v12, v6);
    sub_1C2149530();
    uint64_t v16 = sub_1C2149510();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
  }
  else
  {
    uint64_t v16 = *v15;
    sub_1C1F30C40();
    uint64_t v18 = (char *)v15 + *(int *)(v17 + 48);
    uint64_t v19 = sub_1C21491B0();
    (*(void (**)(char *, uint64_t))(*(void *)(v19 - 8) + 8))(v18, v19);
  }
  return v16;
}

uint64_t sub_1C202AF58@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1C2149520();
  uint64_t v29 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1C21490F0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v28 - v12;
  uint64_t v14 = type metadata accessor for MedicationSearchItem.Source(0);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (id *)((char *)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C202DF68(v2, (uint64_t)v16);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(char *, id *, uint64_t))(v8 + 32))(v13, v16, v7);
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v11, v13, v7);
    sub_1C2149530();
    if (sub_1C21494E0())
    {
      uint64_t v17 = sub_1C21494F0();
      uint64_t v18 = *(void *)(v17 + 16);
      uint64_t v19 = sub_1C21491B0();
      uint64_t v20 = *(void *)(v19 - 8);
      if (v18)
      {
        (*(void (**)(uint64_t, unint64_t, uint64_t))(*(void *)(v19 - 8) + 16))(a1, v17+ ((*(unsigned __int8 *)(*(void *)(v19 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v19 - 8) + 80)), v19);
        uint64_t v21 = 0;
      }
      else
      {
        uint64_t v21 = 1;
      }
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56))(a1, v21, 1, v19);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v29 + 8))(v6, v4);
      return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v13, v7);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v29 + 8))(v6, v4);
      (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
      uint64_t v27 = sub_1C21491B0();
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(a1, 1, 1, v27);
    }
  }
  else
  {

    sub_1C1F30C40();
    uint64_t v23 = (char *)v16 + *(int *)(v22 + 48);
    uint64_t v24 = sub_1C21491B0();
    uint64_t v25 = *(void *)(v24 - 8);
    (*(void (**)(uint64_t, char *, uint64_t))(v25 + 32))(a1, v23, v24);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v25 + 56))(a1, 0, 1, v24);
  }
}

uint64_t sub_1C202B358()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1C21490F0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1C21491B0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for MedicationSearchItem.Source(0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (void **)((char *)v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C202DF68(v1, (uint64_t)v12);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(char *, void **, uint64_t))(v3 + 32))(v5, v12, v2);
    uint64_t v13 = sub_1C21490C0();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  else
  {
    uint64_t v14 = *v12;
    sub_1C1F30C40();
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, (char *)v12 + *(int *)(v15 + 48), v6);
    uint64_t v16 = MEMORY[0x1E4FBB1A0];
    sub_1C202FC04(0, (unint64_t *)&qword_1EA2C3298, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
    uint64_t v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = xmmword_1C214FCC0;
    *(void *)(v17 + 32) = sub_1C2149180();
    *(void *)(v17 + 40) = v18;
    *(void *)(v17 + 48) = sub_1C214B470();
    *(void *)(v17 + 56) = v19;
    v21[1] = v17;
    sub_1C202FC04(0, (unint64_t *)&qword_1EA2C3A40, v16, MEMORY[0x1E4FBB320]);
    sub_1C1F64558();
    uint64_t v13 = sub_1C214A580();
    swift_bridgeObjectRelease();

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  return v13;
}

uint64_t sub_1C202B65C()
{
  uint64_t v1 = sub_1C21490F0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for MedicationSearchItem.Source(0);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (uint64_t *)((char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C202DF68(v0, (uint64_t)v7);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = (*(uint64_t (**)(char *, uint64_t *, uint64_t))(v2 + 32))(v4, v7, v1);
    MEMORY[0x1F4188790](v8);
    *(&v16 - 2) = (uint64_t)v4;
    uint64_t v9 = sub_1C202A450((uint64_t)sub_1C202FBE4);
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  else
  {
    uint64_t v10 = *v7;
    sub_1C1F30C40();
    uint64_t v12 = (char *)v7 + *(int *)(v11 + 48);
    sub_1C202FC04(0, (unint64_t *)&qword_1EBF0CA10, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
    uint64_t v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_1C214E170;
    *(void *)(v13 + 32) = v10;
    uint64_t v17 = v13;
    sub_1C214A7A0();
    uint64_t v9 = v17;
    uint64_t v14 = sub_1C21491B0();
    (*(void (**)(char *, uint64_t))(*(void *)(v14 - 8) + 8))(v12, v14);
  }
  return v9;
}

uint64_t sub_1C202B8BC@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_1C21490F0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1C2149520();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  sub_1C2149530();
  uint64_t v12 = sub_1C2149500();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  *a2 = v12;
  return result;
}

uint64_t MedicationSearchItem.uniqueIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for MedicationSearchItem(0) + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MedicationSearchItem.reuseIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for MedicationSearchItem(0) + 28));
  swift_bridgeObjectRetain();
  return v1;
}

id MedicationSearchItem.searchItemDisplayString.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1C21490F0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for MedicationSearchItem.Source(0);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (void **)((char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C202DF68(v1, (uint64_t)v8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(char *, void **, uint64_t))(v3 + 32))(v5, v8, v2);
    sub_1C21490B0();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  else
  {
    uint64_t v9 = *v8;
    sub_1C1F30C40();
    uint64_t v11 = (char *)v8 + *(int *)(v10 + 48);
    sub_1C214B420();

    uint64_t v12 = sub_1C21491B0();
    (*(void (**)(char *, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  }
  uint64_t v13 = type metadata accessor for MedicationSearchItem(0);
  uint64_t v14 = sub_1C202DFCC(&qword_1EA2C5878, 255, (void (*)(uint64_t))type metadata accessor for MedicationSearchItem);
  MEMORY[0x1C8751150](v13, v14);
  id v15 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
  uint64_t v16 = (void *)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1C202DFCC((unint64_t *)&qword_1EBF0C850, 255, type metadata accessor for Key);
  uint64_t v17 = (void *)sub_1C214A500();
  swift_bridgeObjectRelease();
  id v18 = objc_msgSend(v15, sel_initWithString_attributes_, v16, v17);

  return v18;
}

uint64_t MedicationSearchItem.hash(into:)()
{
  MedicationSearchItem.Source.hash(into:)();
  type metadata accessor for MedicationSearchItem(0);
  sub_1C214BB40();
  swift_bridgeObjectRetain();
  sub_1C214A690();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1C214A690();

  return swift_bridgeObjectRelease();
}

uint64_t MedicationSearchItem.hashValue.getter()
{
  return sub_1C214BB80();
}

uint64_t sub_1C202BEF0()
{
  return sub_1C214BB80();
}

uint64_t sub_1C202BF78()
{
  MedicationSearchItem.Source.hash(into:)();
  sub_1C214BB40();
  sub_1C214A690();

  return sub_1C214A690();
}

uint64_t sub_1C202BFF0()
{
  return sub_1C214BB80();
}

id sub_1C202C084(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = (uint64_t *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI20MedicationSearchCell_baseIdentifier];
  uint64_t v18 = sub_1C214A5F0();
  uint64_t v19 = v10;
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  uint64_t v11 = v19;
  uint64_t v12 = v4;
  swift_bridgeObjectRelease();
  *uint64_t v9 = v18;
  v9[1] = v11;
  uint64_t v13 = &v12[OBJC_IVAR____TtC19HealthMedicationsUI20MedicationSearchCell_item];
  *(_OWORD *)uint64_t v13 = 0u;
  *((_OWORD *)v13 + 1) = 0u;
  *((void *)v13 + 4) = 0;

  v17.receiver = v12;
  v17.super_class = (Class)type metadata accessor for MedicationSearchCell();
  id v14 = objc_msgSendSuper2(&v17, sel_initWithFrame_, a1, a2, a3, a4);
  sub_1C2147DE0();
  id v15 = (id)*MEMORY[0x1E4F39EA8];
  sub_1C214B0D0();

  return v14;
}

uint64_t sub_1C202C2D8()
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v1 = sub_1C21497F0();
  uint64_t v74 = *(void *)(v1 - 8);
  uint64_t v75 = v1;
  MEMORY[0x1F4188790](v1);
  unsigned int v78 = (char *)&v59 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C202F71C(0, &qword_1EBF0C620, MEMORY[0x1E4FB0F28], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v70 = (char *)&v59 - v5;
  uint64_t v71 = sub_1C21499D0();
  uint64_t v69 = *(void *)(v71 - 8);
  MEMORY[0x1F4188790](v71);
  id v68 = (char *)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C202F71C(0, &qword_1EBF0C610, MEMORY[0x1E4FB0E38], v3);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v64 = (char *)&v59 - v8;
  uint64_t v67 = sub_1C21498E0();
  uint64_t v66 = *(void *)(v67 - 8);
  MEMORY[0x1F4188790](v67);
  uint64_t v62 = (char *)&v59 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = sub_1C2149860();
  uint64_t v61 = *(void *)(v63 - 8);
  MEMORY[0x1F4188790](v63);
  uint64_t v60 = (char *)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1C21490F0();
  uint64_t v59 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v59 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for MedicationSearchItem.Source(0);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (id *)((char *)&v59 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v73 = sub_1C2149BE0();
  uint64_t v65 = *(void *)(v73 - 8);
  MEMORY[0x1F4188790](v73);
  uint64_t v18 = (char *)&v59 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C202F71C(0, (unint64_t *)&qword_1EA2C2CC8, type metadata accessor for MedicationSearchItem, v3);
  MEMORY[0x1F4188790](v19 - 8);
  uint64_t v21 = (char *)&v59 - v20;
  uint64_t v22 = type metadata accessor for MedicationSearchItem(0);
  uint64_t v23 = *(void *)(v22 - 8);
  MEMORY[0x1F4188790](v22);
  uint64_t v76 = (uint64_t)&v59 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v77 = v0;
  uint64_t v25 = (uint64_t)v0 + OBJC_IVAR____TtC19HealthMedicationsUI20MedicationSearchCell_item;
  swift_beginAccess();
  sub_1C202FC50(v25, (uint64_t)v80, (uint64_t)&qword_1EBF0C300, (uint64_t)&qword_1EBF0C2F0, MEMORY[0x1E4F66028], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1C1F237AC);
  if (!v81)
  {
    sub_1C202F780((uint64_t)v80, (uint64_t)&qword_1EBF0C300, (uint64_t)&qword_1EBF0C2F0, MEMORY[0x1E4F66028], (uint64_t (*)(void))sub_1C1F237AC);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56))(v21, 1, 1, v22);
LABEL_6:
    sub_1C202F780((uint64_t)v21, (uint64_t)&qword_1EA2C2CC8, (uint64_t)type metadata accessor for MedicationSearchItem, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C202F71C);
    uint64_t v29 = v78;
    sub_1C21497A0();
    id v30 = v77;
    uint64_t v31 = sub_1C21497E0();
    os_log_type_t v32 = sub_1C214ABD0();
    if (os_log_type_enabled(v31, v32))
    {
      uint64_t v33 = swift_slowAlloc();
      uint64_t v34 = swift_slowAlloc();
      uint64_t v79 = v34;
      *(_DWORD *)uint64_t v33 = 136315394;
      uint64_t v35 = sub_1C214BC10();
      v80[0] = sub_1C1F6FD54(v35, v36, &v79);
      sub_1C214B530();
      swift_bridgeObjectRelease();
      *(_WORD *)(v33 + 12) = 2080;
      sub_1C202FC50(v25, (uint64_t)v80, (uint64_t)&qword_1EBF0C300, (uint64_t)&qword_1EBF0C2F0, MEMORY[0x1E4F66028], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1C1F237AC);
      sub_1C1F237AC(0, (unint64_t *)&qword_1EBF0C300, (unint64_t *)&qword_1EBF0C2F0);
      uint64_t v37 = sub_1C214A610();
      v80[0] = sub_1C1F6FD54(v37, v38, &v79);
      sub_1C214B530();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C1F0B000, v31, v32, "[%s] Expected a MedicationSearchItem, but received a %s", (uint8_t *)v33, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C8754730](v34, -1, -1);
      MEMORY[0x1C8754730](v33, -1, -1);

      return (*(uint64_t (**)(char *, uint64_t))(v74 + 8))(v78, v75);
    }
    else
    {

      return (*(uint64_t (**)(char *, uint64_t))(v74 + 8))(v29, v75);
    }
  }
  sub_1C1F23804(0, (unint64_t *)&qword_1EBF0C2F0);
  int v26 = swift_dynamicCast();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v21, v26 ^ 1u, 1, v22);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22) == 1) {
    goto LABEL_6;
  }
  uint64_t v27 = v76;
  sub_1C202F7E0((uint64_t)v21, v76, type metadata accessor for MedicationSearchItem);
  sub_1C21499F0();
  sub_1C202DF68(v27, (uint64_t)v16);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v28 = v59;
    (*(void (**)(char *, id *, uint64_t))(v59 + 32))(v13, v16, v11);
    sub_1C21490A0();
    (*(void (**)(char *, uint64_t))(v28 + 8))(v13, v11);
  }
  else
  {

    sub_1C1F30C40();
    uint64_t v41 = (char *)v16 + *(int *)(v40 + 48);
    uint64_t v42 = sub_1C21491B0();
    (*(void (**)(char *, uint64_t))(*(void *)(v42 - 8) + 8))(v41, v42);
  }
  sub_1C2149B20();
  sub_1C214AEB0();
  sub_1C2149B30();
  uint64_t v43 = v76;
  MedicationSearchItem.searchItemDisplayString.getter();
  sub_1C2149A90();
  id v44 = (void (*)(uint64_t *, void))sub_1C2149AA0();
  sub_1C2149A30();
  v44(v80, 0);
  sub_1C202F848(v43);
  sub_1C2149AE0();
  uint64_t v45 = (void (*)(uint64_t *, void))sub_1C2149AF0();
  sub_1C2149A30();
  v45(v80, 0);
  uint64_t v46 = v73;
  uint64_t v81 = v73;
  uint64_t v82 = MEMORY[0x1E4FB0F88];
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v80);
  uint64_t v48 = v65;
  (*(void (**)(uint64_t *, char *, uint64_t))(v65 + 16))(boxed_opaque_existential_1, v18, v46);
  MEMORY[0x1C8752FD0](v80);
  sub_1C202F71C(0, (unint64_t *)&unk_1EBF0C990, MEMORY[0x1E4FB0E68], MEMORY[0x1E4FBBE00]);
  sub_1C2149930();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1C214FCD0;
  uint64_t v49 = v61;
  uint64_t v50 = v60;
  uint64_t v51 = v63;
  (*(void (**)(char *, void, uint64_t))(v61 + 104))(v60, *MEMORY[0x1E4FB0E18], v63);
  uint64_t v52 = sub_1C2149870();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v52 - 8) + 56))(v64, 1, 1, v52);
  uint64_t v53 = v62;
  sub_1C21498D0();
  sub_1C21498A0();
  (*(void (**)(char *, uint64_t))(v66 + 8))(v53, v67);
  (*(void (**)(char *, uint64_t))(v49 + 8))(v50, v51);
  sub_1C214AEC0();
  uint64_t v54 = v68;
  sub_1C21499A0();
  id v55 = objc_msgSend(self, sel_secondarySystemBackgroundColor);
  sub_1C2149990();
  uint64_t v57 = v69;
  uint64_t v56 = v70;
  uint64_t v58 = v71;
  (*(void (**)(char *, char *, uint64_t))(v69 + 16))(v70, v54, v71);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v57 + 56))(v56, 0, 1, v58);
  MEMORY[0x1C8752FF0](v56);
  (*(void (**)(char *, uint64_t))(v57 + 8))(v54, v58);
  (*(void (**)(char *, uint64_t))(v48 + 8))(v18, v73);
  return sub_1C202FB84(v76, type metadata accessor for MedicationSearchItem);
}

uint64_t sub_1C202D010(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v6 = sub_1C21497F0();
  uint64_t v38 = *(void *)(v6 - 8);
  uint64_t v39 = v6;
  uint64_t v7 = MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v35 - v10;
  sub_1C202F71C(0, (unint64_t *)&qword_1EA2C2CC8, type metadata accessor for MedicationSearchItem, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = (char *)&v35 - v13;
  uint64_t v15 = type metadata accessor for MedicationSearchItem(0);
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v18 = (char *)&v35 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = (uint64_t)v3 + OBJC_IVAR____TtC19HealthMedicationsUI20MedicationSearchCell_item;
  swift_beginAccess();
  sub_1C202FC50(v19, (uint64_t)&v41, (uint64_t)&qword_1EBF0C300, (uint64_t)&qword_1EBF0C2F0, MEMORY[0x1E4F66028], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1C1F237AC);
  if (!v43)
  {
    sub_1C202F780((uint64_t)&v41, (uint64_t)&qword_1EBF0C300, (uint64_t)&qword_1EBF0C2F0, MEMORY[0x1E4F66028], (uint64_t (*)(void))sub_1C1F237AC);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v14, 1, 1, v15);
    goto LABEL_6;
  }
  sub_1C1F23804(0, (unint64_t *)&qword_1EBF0C2F0);
  int v20 = swift_dynamicCast();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v14, v20 ^ 1u, 1, v15);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
LABEL_6:
    sub_1C202F780((uint64_t)v14, (uint64_t)&qword_1EA2C2CC8, (uint64_t)type metadata accessor for MedicationSearchItem, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C202F71C);
    sub_1C21497A0();
    id v22 = v3;
    uint64_t v23 = sub_1C21497E0();
    os_log_type_t v24 = sub_1C214ABD0();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = swift_slowAlloc();
      uint64_t v36 = swift_slowAlloc();
      uint64_t v40 = v36;
      *(_DWORD *)uint64_t v25 = 136315394;
      uint64_t v26 = sub_1C214BC10();
      uint64_t v41 = sub_1C1F6FD54(v26, v27, &v40);
      sub_1C214B530();
      swift_bridgeObjectRelease();
      *(_WORD *)(v25 + 12) = 2080;
      sub_1C202FC50(v19, (uint64_t)&v41, (uint64_t)&qword_1EBF0C300, (uint64_t)&qword_1EBF0C2F0, MEMORY[0x1E4F66028], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1C1F237AC);
      sub_1C1F237AC(0, (unint64_t *)&qword_1EBF0C300, (unint64_t *)&qword_1EBF0C2F0);
      uint64_t v28 = sub_1C214A610();
      uint64_t v41 = sub_1C1F6FD54(v28, v29, &v40);
      sub_1C214B530();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C1F0B000, v23, v24, "[%s] Expected a MedicationSearchItem, but received a %s", (uint8_t *)v25, 0x16u);
      uint64_t v30 = v36;
      swift_arrayDestroy();
      MEMORY[0x1C8754730](v30, -1, -1);
      MEMORY[0x1C8754730](v25, -1, -1);
    }
    else
    {
    }
    return (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v9, v39);
  }
  sub_1C202F7E0((uint64_t)v14, (uint64_t)v18, type metadata accessor for MedicationSearchItem);
  if (a2)
  {
    uint64_t v41 = 46;
    unint64_t v42 = 0xE100000000000000;
    uint64_t v40 = *(void *)&v18[*(int *)(v15 + 20)];
    sub_1C214BA40();
    sub_1C214A6C0();
    swift_bridgeObjectRelease();
    uint64_t v41 = a1;
    unint64_t v42 = a2;
    swift_bridgeObjectRetain();
    sub_1C214A6C0();
    swift_bridgeObjectRelease();
    uint64_t v21 = (void *)sub_1C214A5B0();
    swift_bridgeObjectRelease();
    objc_msgSend(v3, sel_setAccessibilityIdentifier_, v21);
  }
  else
  {
    sub_1C21497A0();
    os_log_type_t v32 = sub_1C21497E0();
    os_log_type_t v33 = sub_1C214ABD0();
    if (os_log_type_enabled(v32, v33))
    {
      uint64_t v34 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v34 = 0;
      _os_log_impl(&dword_1C1F0B000, v32, v33, "Unable to set automation identifiers as there is no base identifier.", v34, 2u);
      MEMORY[0x1C8754730](v34, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v38 + 8))(v11, v39);
  }
  return sub_1C202FB84((uint64_t)v18, type metadata accessor for MedicationSearchItem);
}

id sub_1C202D6A8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MedicationSearchCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1C202D74C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI20MedicationSearchCell_item;
  swift_beginAccess();
  return sub_1C202FC50(v3, a1, (uint64_t)&qword_1EBF0C300, (uint64_t)&qword_1EBF0C2F0, MEMORY[0x1E4F66028], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1C1F237AC);
}

uint64_t sub_1C202D7CC(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI20MedicationSearchCell_item;
  swift_beginAccess();
  sub_1C1F32DDC(a1, v3);
  swift_endAccess();
  sub_1C202C2D8();
  uint64_t v4 = (uint64_t *)(v1 + OBJC_IVAR____TtC19HealthMedicationsUI20MedicationSearchCell_baseIdentifier);
  swift_beginAccess();
  uint64_t v6 = *v4;
  unint64_t v5 = v4[1];
  swift_bridgeObjectRetain();
  sub_1C202D010(v6, v5);
  swift_bridgeObjectRelease();
  return sub_1C202F780(a1, (uint64_t)&qword_1EBF0C300, (uint64_t)&qword_1EBF0C2F0, MEMORY[0x1E4F66028], (uint64_t (*)(void))sub_1C1F237AC);
}

uint64_t (*sub_1C202D8A8(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1C202D908;
}

uint64_t sub_1C202D908(uint64_t a1, char a2)
{
  uint64_t result = swift_endAccess();
  if ((a2 & 1) == 0)
  {
    uint64_t v5 = *(void *)(a1 + 24);
    sub_1C202C2D8();
    uint64_t v6 = (uint64_t *)(v5 + OBJC_IVAR____TtC19HealthMedicationsUI20MedicationSearchCell_baseIdentifier);
    swift_beginAccess();
    uint64_t v7 = *v6;
    unint64_t v8 = v6[1];
    swift_bridgeObjectRetain();
    sub_1C202D010(v7, v8);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C202D9A0(uint64_t a1, void *a2)
{
  return sub_1C202F370(a2);
}

uint64_t sub_1C202D9C8()
{
  uint64_t v1 = (uint64_t *)(*v0 + OBJC_IVAR____TtC19HealthMedicationsUI20MedicationSearchCell_baseIdentifier);
  swift_beginAccess();
  uint64_t v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1C202DA24(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(*v2 + OBJC_IVAR____TtC19HealthMedicationsUI20MedicationSearchCell_baseIdentifier);
  swift_beginAccess();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1C202DA88())()
{
  return j__swift_endAccess;
}

uint64_t sub_1C202DAE8(uint64_t a1, unint64_t a2)
{
  return sub_1C202D010(a1, a2);
}

uint64_t _s19HealthMedicationsUI20MedicationSearchItemV6SourceO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C21490F0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1C21491B0();
  uint64_t v42 = *(void *)(v8 - 8);
  uint64_t v43 = v8;
  uint64_t v9 = MEMORY[0x1F4188790](v8);
  uint64_t v40 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v41 = (char *)&v40 - v11;
  uint64_t v12 = type metadata accessor for MedicationSearchItem.Source(0);
  uint64_t v13 = MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v17 = (void **)((char *)&v40 - v16);
  sub_1C202FB20();
  uint64_t v19 = MEMORY[0x1F4188790](v18 - 8);
  uint64_t v21 = (char *)&v40 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v22 = (void **)&v21[*(int *)(v19 + 56)];
  sub_1C202DF68(a1, (uint64_t)v21);
  sub_1C202DF68(a2, (uint64_t)v22);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1C202DF68((uint64_t)v21, (uint64_t)v15);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      (*(void (**)(char *, void **, uint64_t))(v5 + 32))(v7, v22, v4);
      char v23 = sub_1C21490E0();
      os_log_type_t v24 = *(void (**)(char *, uint64_t))(v5 + 8);
      v24(v7, v4);
      v24(v15, v4);
LABEL_11:
      unint64_t v29 = type metadata accessor for MedicationSearchItem.Source;
      goto LABEL_12;
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v15, v4);
  }
  else
  {
    sub_1C202DF68((uint64_t)v21, (uint64_t)v17);
    uint64_t v25 = *v17;
    sub_1C1F30C40();
    uint64_t v27 = *(int *)(v26 + 48);
    uint64_t v28 = (char *)v17 + v27;
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      uint64_t v30 = *v22;
      uint64_t v31 = v42;
      os_log_type_t v32 = *(void (**)(char *, char *, uint64_t))(v42 + 32);
      uint64_t v33 = v43;
      v32(v41, v28, v43);
      uint64_t v34 = v40;
      v32(v40, (char *)v22 + v27, v33);
      sub_1C1F12718(0, (unint64_t *)&qword_1EA2C4AA0);
      char v35 = sub_1C214B220();

      if (v35)
      {
        uint64_t v36 = v41;
        char v23 = sub_1C21491A0();
        uint64_t v37 = *(void (**)(char *, uint64_t))(v31 + 8);
        v37(v34, v33);
        v37(v36, v33);
      }
      else
      {
        uint64_t v38 = *(void (**)(char *, uint64_t))(v31 + 8);
        v38(v34, v33);
        v38(v41, v33);
        char v23 = 0;
      }
      goto LABEL_11;
    }
    (*(void (**)(char *, uint64_t))(v42 + 8))((char *)v17 + v27, v43);
  }
  char v23 = 0;
  unint64_t v29 = (uint64_t (*)(void))sub_1C202FB20;
LABEL_12:
  sub_1C202FB84((uint64_t)v21, v29);
  return v23 & 1;
}

uint64_t sub_1C202DF68(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MedicationSearchItem.Source(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C202DFCC(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t _s19HealthMedicationsUI20MedicationSearchItemV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  if ((_s19HealthMedicationsUI20MedicationSearchItemV6SourceO2eeoiySbAE_AEtFZ_0(a1, a2) & 1) == 0) {
    return 0;
  }
  uint64_t v4 = type metadata accessor for MedicationSearchItem(0);
  if (*(void *)(a1 + *(int *)(v4 + 20)) != *(void *)(a2 + *(int *)(v4 + 20))) {
    return 0;
  }
  uint64_t v5 = v4;
  uint64_t v6 = *(int *)(v4 + 24);
  uint64_t v7 = *(void *)(a1 + v6);
  uint64_t v8 = *(void *)(a1 + v6 + 8);
  uint64_t v9 = (void *)(a2 + v6);
  BOOL v10 = v7 == *v9 && v8 == v9[1];
  if (v10 || (v11 = sub_1C214BA80(), uint64_t result = 0, (v11 & 1) != 0))
  {
    uint64_t v13 = *(int *)(v5 + 28);
    uint64_t v14 = *(void *)(a1 + v13);
    uint64_t v15 = *(void *)(a1 + v13 + 8);
    uint64_t v16 = (void *)(a2 + v13);
    if (v14 == *v16 && v15 == v16[1])
    {
      return 1;
    }
    else
    {
      return sub_1C214BA80();
    }
  }
  return result;
}

uint64_t sub_1C202E0EC()
{
  return sub_1C202DFCC(&qword_1EA2C5880, 255, (void (*)(uint64_t))type metadata accessor for MedicationSearchItem.Source);
}

uint64_t sub_1C202E138()
{
  return sub_1C202DFCC(&qword_1EA2C5888, 255, (void (*)(uint64_t))type metadata accessor for MedicationSearchItem);
}

char *initializeBufferWithCopyOfBuffer for MedicationSearchItem(char *a1, char **a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *(void *)a1 = *a2;
    a1 = &v8[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    type metadata accessor for MedicationSearchItem.Source(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_1C21490F0();
      (*(void (**)(char *, char **, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      uint64_t v9 = *a2;
      *(void *)a1 = *a2;
      sub_1C1F30C40();
      uint64_t v11 = *(int *)(v10 + 48);
      uint64_t v12 = &a1[v11];
      uint64_t v13 = (char *)a2 + v11;
      uint64_t v14 = sub_1C21491B0();
      uint64_t v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16);
      uint64_t v16 = v9;
      v15(v12, v13, v14);
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v17 = a3[6];
    *(void *)&a1[a3[5]] = *(char **)((char *)a2 + a3[5]);
    uint64_t v18 = &a1[v17];
    uint64_t v19 = (char **)((char *)a2 + v17);
    uint64_t v20 = v19[1];
    *(void *)uint64_t v18 = *v19;
    *((void *)v18 + 1) = v20;
    uint64_t v21 = a3[7];
    id v22 = &a1[v21];
    char v23 = (char **)((char *)a2 + v21);
    uint64_t v24 = v23[1];
    *(void *)id v22 = *v23;
    *((void *)v22 + 1) = v24;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for MedicationSearchItem(id *a1)
{
  type metadata accessor for MedicationSearchItem.Source(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v2 = sub_1C21490F0();
    (*(void (**)(id *, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  }
  else
  {

    sub_1C1F30C40();
    uint64_t v4 = (char *)a1 + *(int *)(v3 + 48);
    uint64_t v5 = sub_1C21491B0();
    (*(void (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void **initializeWithCopy for MedicationSearchItem(void **a1, void **a2, int *a3)
{
  type metadata accessor for MedicationSearchItem.Source(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_1C21490F0();
    (*(void (**)(void **, void **, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    uint64_t v7 = *a2;
    *a1 = *a2;
    sub_1C1F30C40();
    uint64_t v9 = *(int *)(v8 + 48);
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = sub_1C21491B0();
    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
    id v14 = v7;
    v13(v10, v11, v12);
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v15 = a3[6];
  *(void **)((char *)a1 + a3[5]) = *(void **)((char *)a2 + a3[5]);
  uint64_t v16 = (void **)((char *)a1 + v15);
  uint64_t v17 = (void **)((char *)a2 + v15);
  uint64_t v18 = v17[1];
  void *v16 = *v17;
  v16[1] = v18;
  uint64_t v19 = a3[7];
  uint64_t v20 = (void **)((char *)a1 + v19);
  uint64_t v21 = (void **)((char *)a2 + v19);
  uint64_t v22 = v21[1];
  void *v20 = *v21;
  v20[1] = v22;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void **assignWithCopy for MedicationSearchItem(void **a1, void **a2, int *a3)
{
  if (a1 != a2)
  {
    sub_1C202FB84((uint64_t)a1, type metadata accessor for MedicationSearchItem.Source);
    type metadata accessor for MedicationSearchItem.Source(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_1C21490F0();
      (*(void (**)(void **, void **, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      uint64_t v7 = *a2;
      *a1 = *a2;
      sub_1C1F30C40();
      uint64_t v9 = *(int *)(v8 + 48);
      uint64_t v10 = (char *)a1 + v9;
      uint64_t v11 = (char *)a2 + v9;
      uint64_t v12 = sub_1C21491B0();
      uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
      id v14 = v7;
      v13(v10, v11, v12);
    }
    swift_storeEnumTagMultiPayload();
  }
  *(void **)((char *)a1 + a3[5]) = *(void **)((char *)a2 + a3[5]);
  uint64_t v15 = a3[6];
  uint64_t v16 = (void **)((char *)a1 + v15);
  uint64_t v17 = (void **)((char *)a2 + v15);
  void *v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v18 = a3[7];
  uint64_t v19 = (void **)((char *)a1 + v18);
  uint64_t v20 = (void **)((char *)a2 + v18);
  *uint64_t v19 = *v20;
  v19[1] = v20[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *initializeWithTake for MedicationSearchItem(void *a1, void *a2, int *a3)
{
  type metadata accessor for MedicationSearchItem.Source(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_1C21490F0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    sub_1C1F30C40();
    uint64_t v8 = *(int *)(v7 + 48);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1C21491B0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v12 = a3[6];
  *(void *)((char *)a1 + a3[5]) = *(void *)((char *)a2 + a3[5]);
  *(_OWORD *)((char *)a1 + v12) = *(_OWORD *)((char *)a2 + v12);
  *(_OWORD *)((char *)a1 + a3[7]) = *(_OWORD *)((char *)a2 + a3[7]);
  return a1;
}

void *assignWithTake for MedicationSearchItem(void *a1, void *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_1C202FB84((uint64_t)a1, type metadata accessor for MedicationSearchItem.Source);
    type metadata accessor for MedicationSearchItem.Source(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_1C21490F0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      sub_1C1F30C40();
      uint64_t v8 = *(int *)(v7 + 48);
      uint64_t v9 = (char *)a1 + v8;
      uint64_t v10 = (char *)a2 + v8;
      uint64_t v11 = sub_1C21491B0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v12 = a3[6];
  *(void *)((char *)a1 + a3[5]) = *(void *)((char *)a2 + a3[5]);
  uint64_t v13 = (void *)((char *)a1 + v12);
  id v14 = (void *)((char *)a2 + v12);
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  *uint64_t v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  uint64_t v17 = a3[7];
  uint64_t v18 = (void *)((char *)a1 + v17);
  uint64_t v19 = (void *)((char *)a2 + v17);
  uint64_t v21 = *v19;
  uint64_t v20 = v19[1];
  void *v18 = v21;
  v18[1] = v20;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MedicationSearchItem(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C202E9F8);
}

uint64_t sub_1C202E9F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for MedicationSearchItem.Source(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 24) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for MedicationSearchItem(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C202EAD0);
}

uint64_t sub_1C202EAD0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for MedicationSearchItem.Source(0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t sub_1C202EB90()
{
  uint64_t result = type metadata accessor for MedicationSearchItem.Source(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

char *initializeBufferWithCopyOfBuffer for MedicationSearchItem.Source(char *a1, char **a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v7 = *a2;
    *(void *)a1 = *a2;
    a1 = &v7[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_1C21490F0();
      (*(void (**)(char *, char **, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      uint64_t v8 = *a2;
      *(void *)a1 = *a2;
      sub_1C1F30C40();
      uint64_t v10 = *(int *)(v9 + 48);
      uint64_t v11 = &a1[v10];
      uint64_t v12 = (char *)a2 + v10;
      uint64_t v13 = sub_1C21491B0();
      id v14 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16);
      uint64_t v15 = v8;
      v14(v11, v12, v13);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for MedicationSearchItem.Source(id *a1)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v2 = sub_1C21490F0();
  }
  else
  {

    sub_1C1F30C40();
    a1 = (id *)((char *)a1 + *(int *)(v3 + 48));
    uint64_t v2 = sub_1C21491B0();
  }
  uint64_t v4 = *(uint64_t (**)(id *, uint64_t))(*(void *)(v2 - 8) + 8);

  return v4(a1, v2);
}

void **initializeWithCopy for MedicationSearchItem.Source(void **a1, void **a2)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_1C21490F0();
    (*(void (**)(void **, void **, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  }
  else
  {
    int v5 = *a2;
    *a1 = *a2;
    sub_1C1F30C40();
    uint64_t v7 = *(int *)(v6 + 48);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_1C21491B0();
    uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
    id v12 = v5;
    v11(v8, v9, v10);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void **assignWithCopy for MedicationSearchItem.Source(void **a1, void **a2)
{
  if (a1 != a2)
  {
    sub_1C202FB84((uint64_t)a1, type metadata accessor for MedicationSearchItem.Source);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v4 = sub_1C21490F0();
      (*(void (**)(void **, void **, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
    }
    else
    {
      int v5 = *a2;
      *a1 = *a2;
      sub_1C1F30C40();
      uint64_t v7 = *(int *)(v6 + 48);
      uint64_t v8 = (char *)a1 + v7;
      uint64_t v9 = (char *)a2 + v7;
      uint64_t v10 = sub_1C21491B0();
      uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
      id v12 = v5;
      v11(v8, v9, v10);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *initializeWithTake for MedicationSearchItem.Source(void *a1, void *a2)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_1C21490F0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  }
  else
  {
    *a1 = *a2;
    sub_1C1F30C40();
    uint64_t v6 = *(int *)(v5 + 48);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = sub_1C21491B0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *assignWithTake for MedicationSearchItem.Source(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_1C202FB84((uint64_t)a1, type metadata accessor for MedicationSearchItem.Source);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v4 = sub_1C21490F0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
    }
    else
    {
      *a1 = *a2;
      sub_1C1F30C40();
      uint64_t v6 = *(int *)(v5 + 48);
      uint64_t v7 = (char *)a1 + v6;
      uint64_t v8 = (char *)a2 + v6;
      uint64_t v9 = sub_1C21491B0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1C202F294()
{
  uint64_t result = sub_1C21491B0();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    v3[4] = v3;
    uint64_t result = sub_1C21490F0();
    if (v2 <= 0x3F)
    {
      v3[5] = *(void *)(result - 8) + 64;
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t sub_1C202F370(void *a1)
{
  sub_1C202F71C(0, (unint64_t *)&qword_1EA2C2CC8, type metadata accessor for MedicationSearchItem, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)v14 - v4;
  uint64_t v6 = type metadata accessor for MedicationSearchItem(0);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14[1] = a1;
  sub_1C1F12718(0, &qword_1EA2C58C0);
  sub_1C1F23804(0, &qword_1EA2C58C8);
  id v10 = a1;
  if ((swift_dynamicCast() & 1) == 0)
  {
    uint64_t v17 = 0;
    long long v15 = 0u;
    long long v16 = 0u;
    return sub_1C202F780((uint64_t)&v15, (uint64_t)&unk_1EA2C58D0, (uint64_t)&qword_1EA2C58C8, (uint64_t)&protocol descriptor for MedicationSelectionHandler, (uint64_t (*)(void))sub_1C1F237AC);
  }
  sub_1C1F31280(&v15, (uint64_t)v18);
  uint64_t v11 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI20MedicationSearchCell_item;
  swift_beginAccess();
  sub_1C202FC50(v11, (uint64_t)&v15, (uint64_t)&qword_1EBF0C300, (uint64_t)&qword_1EBF0C2F0, MEMORY[0x1E4F66028], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1C1F237AC);
  if (!*((void *)&v16 + 1))
  {
    sub_1C202F780((uint64_t)&v15, (uint64_t)&qword_1EBF0C300, (uint64_t)&qword_1EBF0C2F0, MEMORY[0x1E4F66028], (uint64_t (*)(void))sub_1C1F237AC);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1, 1, v6);
    goto LABEL_7;
  }
  sub_1C1F23804(0, (unint64_t *)&qword_1EBF0C2F0);
  int v12 = swift_dynamicCast();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v5, v12 ^ 1u, 1, v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
LABEL_7:
    sub_1C202F780((uint64_t)v5, (uint64_t)&qword_1EA2C2CC8, (uint64_t)type metadata accessor for MedicationSearchItem, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C202F71C);
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)v18);
  }
  sub_1C202F7E0((uint64_t)v5, (uint64_t)v9, type metadata accessor for MedicationSearchItem);
  __swift_project_boxed_opaque_existential_0(v18, v18[3]);
  sub_1C20B1FAC((uint64_t)v9);
  sub_1C202FB84((uint64_t)v9, type metadata accessor for MedicationSearchItem);
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v18);
}

void sub_1C202F71C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C202F780(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v6 = a5(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
  return a1;
}

uint64_t sub_1C202F7E0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

id sub_1C202F848(uint64_t a1)
{
  uint64_t v2 = sub_1C21490F0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for MedicationSearchItem.Source(0);
  MEMORY[0x1F4188790](v6);
  unint64_t v8 = (id *)((char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C202DF68(a1, (uint64_t)v8);
  if (swift_getEnumCaseMultiPayload() != 1)
  {

    sub_1C1F30C40();
    int v12 = (char *)v8 + *(int *)(v11 + 48);
    uint64_t v13 = sub_1C21491B0();
    (*(void (**)(char *, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
    goto LABEL_5;
  }
  (*(void (**)(char *, id *, uint64_t))(v3 + 32))(v5, v8, v2);
  char v9 = sub_1C21490A0();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  if (v9)
  {
LABEL_5:
    sub_1C202B358();
    uint64_t v14 = type metadata accessor for MedicationSearchItem(0);
    uint64_t v15 = sub_1C202DFCC(&qword_1EA2C5878, 255, (void (*)(uint64_t))type metadata accessor for MedicationSearchItem);
    MEMORY[0x1C8751160](v14, v15);
    id v16 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
    uint64_t v17 = (void *)sub_1C214A5B0();
    swift_bridgeObjectRelease();
    type metadata accessor for Key(0);
    sub_1C202DFCC((unint64_t *)&qword_1EBF0C850, 255, type metadata accessor for Key);
    uint64_t v18 = (void *)sub_1C214A500();
    swift_bridgeObjectRelease();
    id v10 = objc_msgSend(v16, sel_initWithString_attributes_, v17, v18);

    return v10;
  }
  return 0;
}

void sub_1C202FB20()
{
  if (!qword_1EA2C58D8)
  {
    type metadata accessor for MedicationSearchItem.Source(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA2C58D8);
    }
  }
}

uint64_t sub_1C202FB84(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C202FBE4@<X0>(uint64_t *a1@<X8>)
{
  return sub_1C202B8BC(*(void *)(v1 + 16), a1);
}

void sub_1C202FC04(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_1C202FC50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(void, uint64_t, uint64_t, uint64_t))
{
  uint64_t v8 = a6(0, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(a2, a1, v8);
  return a2;
}

id InteractionSummaryOverviewViewController.__allocating_init(filteringMedication:listManager:healthStore:analyticsManager:roomType:)(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  id v11 = objc_allocWithZone(v5);
  return InteractionSummaryOverviewViewController.init(filteringMedication:listManager:healthStore:analyticsManager:roomType:)(a1, a2, a3, a4, a5);
}

id sub_1C202FD28()
{
  uint64_t v1 = qword_1EA2C58F0;
  uint64_t v2 = *(void **)(v0 + qword_1EA2C58F0);
  if (v2)
  {
    id v3 = *(id *)(v0 + qword_1EA2C58F0);
  }
  else
  {
    id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F2B300]), sel_initWithHealthStore_, *(void *)(v0 + qword_1EA2C5918));
    unint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_1C202FDAC()
{
  uint64_t v1 = qword_1EA2C5900;
  uint64_t v2 = *(void **)(v0 + qword_1EA2C5900);
  if (v2)
  {
    id v3 = *(id *)(v0 + qword_1EA2C5900);
  }
  else
  {
    id v4 = sub_1C202FE10(v0);
    unint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_1C202FE10(uint64_t a1)
{
  uint64_t v2 = sub_1C214B3D0();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  id v6 = (char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)v23 - v7;
  sub_1C214B380();
  id v9 = objc_msgSend(self, sel_configurationWithScale_, 3);
  id v10 = (void *)sub_1C214A5B0();
  id v11 = objc_msgSend(self, sel_systemImageNamed_withConfiguration_, v10, v9);

  id v12 = v11;
  sub_1C214B370();
  sub_1C214B2B0();
  sub_1C1F12718(0, &qword_1EBF0C928);
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v8, v2);
  sub_1C1F12718(0, &qword_1EA2C3198);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1C214B250();
  uint64_t v13 = (void *)sub_1C214B3E0();
  objc_msgSend(v13, sel_setRole_, 1);
  uint64_t v14 = (void *)(a1 + qword_1EA2C58E8);
  swift_beginAccess();
  uint64_t v15 = v14[1];
  v23[1] = *v14;
  void v23[2] = v15;
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  id v16 = v13;
  uint64_t v17 = (void *)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  objc_msgSend(v16, sel_setAccessibilityIdentifier_, v17);

  uint64_t v18 = qword_1EBF0CA00;
  id v19 = v16;
  if (v18 != -1) {
    swift_once();
  }
  id v20 = (id)qword_1EBF0CA18;
  swift_bridgeObjectRetain();
  sub_1C2147730();

  swift_bridgeObjectRelease();
  uint64_t v21 = (void *)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  objc_msgSend(v19, sel_setAccessibilityLabel_, v21);

  (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
  return v19;
}

void sub_1C2030214(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 + 16;
  swift_beginAccess();
  uint64_t v3 = MEMORY[0x1C8754850](v2);
  if (v3)
  {
    uint64_t v4 = (void *)v3;
    sub_1C2030268();
  }
}

void sub_1C2030268()
{
  uint64_t v1 = v0;
  uint64_t v2 = (objc_class *)type metadata accessor for InteractionFactorsInfoViewController();
  v19.receiver = objc_allocWithZone(v2);
  v19.super_class = v2;
  id v3 = objc_msgSendSuper2(&v19, sel_initWithCollectionViewLayout_, 0);
  id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F67B78]), sel_initWithRootViewController_, v3);
  objc_msgSend(v3, sel_setModalPresentationStyle_, 2);
  objc_msgSend(v4, sel_setModalPresentationStyle_, 2);
  if ((sub_1C2148B00() & 1) == 0) {
    goto LABEL_4;
  }
  uint64_t v5 = self;
  id v6 = objc_msgSend(v1, sel_traitCollection);
  uint64_t v7 = sub_1C214ADC0();

  objc_msgSend(v5, sel_edgeInsetsForWidthDesignation_, v7);
  double v9 = v8;
  double v11 = v10;
  double v13 = v12;
  double v15 = v14;
  id v16 = objc_msgSend(v4, sel_navigationItem);
  objc_msgSend(v16, sel_setLargeTitleInsets_, v9, v11, v13, v15);

  id v17 = objc_msgSend(v4, sel_view);
  if (v17)
  {
    uint64_t v18 = v17;
    objc_msgSend(v17, sel_setDirectionalLayoutMargins_, v9, v11, v13, v15);

LABEL_4:
    objc_msgSend(v1, sel_presentViewController_animated_completion_, v4, 1, 0);

    return;
  }
  __break(1u);
}

uint64_t sub_1C203042C(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  id v4 = (void *)(*a2 + qword_1EA2C58E8);
  swift_beginAccess();
  *id v4 = v3;
  v4[1] = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C2030498()
{
  uint64_t v1 = (uint64_t *)(v0 + qword_1EA2C58E8);
  swift_beginAccess();
  uint64_t v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1C20304F0(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + qword_1EA2C58E8);
  swift_beginAccess();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1C2030550())()
{
  return j__swift_endAccess;
}

id InteractionSummaryOverviewViewController.init(filteringMedication:listManager:healthStore:analyticsManager:roomType:)(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  *(void *)&v5[qword_1EA2C58F0] = 0;
  *(void *)&v5[qword_1EA2C58F8] = 0;
  *(void *)&v5[qword_1EA2C5900] = 0;
  double v10 = (uint64_t *)&v5[qword_1EA2C58E8];
  uint64_t v20 = sub_1C214A5F0();
  uint64_t v21 = v11;
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  uint64_t v12 = v21;
  double v13 = v5;
  swift_bridgeObjectRelease();
  *double v10 = v20;
  v10[1] = v12;
  *(void *)&v13[qword_1EA2C5908] = a1;
  *(void *)&v13[qword_1EA2C5910] = a2;
  *(void *)&v13[qword_1EA2C5918] = a3;
  *(void *)&v13[qword_1EA2C5920] = a4;
  *(void *)&v13[qword_1EA2C5928] = a5;
  id v14 = a1;
  swift_retain();
  id v15 = a3;
  swift_retain();

  v19.receiver = v13;
  v19.super_class = (Class)type metadata accessor for InteractionSummaryOverviewViewController();
  id v16 = objc_msgSendSuper2(&v19, sel_initWithCollectionViewLayout_, 0);
  objc_msgSend(v16, sel_setModalPresentationStyle_, 2);
  sub_1C2030A84();
  swift_release();

  swift_release();
  return v16;
}

uint64_t type metadata accessor for InteractionSummaryOverviewViewController()
{
  uint64_t result = qword_1EA2C5948;
  if (!qword_1EA2C5948) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1C203079C(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = a3;
  sub_1C2032194();
}

uint64_t sub_1C20307C4()
{
  uint64_t v1 = v0;
  sub_1C2030CB4();
  MEMORY[0x1F4188790](v2 - 8);
  id v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(void **)&v0[qword_1EA2C5908];
  uint64_t v6 = *(void *)&v1[qword_1EA2C5910];
  uint64_t v7 = *(void **)&v1[qword_1EA2C5918];
  uint64_t v8 = *(void *)&v1[qword_1EA2C5920];
  uint64_t v9 = *(void *)&v1[qword_1EA2C5928];
  uint64_t v10 = type metadata accessor for InteractionSummaryOverviewDataSourceProvider();
  swift_allocObject();
  id v11 = v5;
  swift_retain();
  id v12 = v7;
  swift_retain();
  double v13 = sub_1C20A366C((uint64_t)v5, v6, (uint64_t)v12, v8, v9);
  uint64_t v24 = v10;
  unint64_t v25 = sub_1C2031DB0();
  char v23 = v13;
  sub_1C2148AF0();
  id v14 = (objc_class *)type metadata accessor for InteractionSummaryOverviewViewController();
  v22.receiver = v1;
  v22.super_class = v14;
  objc_msgSendSuper2(&v22, sel_viewDidLoad);
  uint64_t v15 = sub_1C214A8C0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v4, 1, 1, v15);
  sub_1C214A890();
  id v16 = v1;
  uint64_t v17 = sub_1C214A880();
  uint64_t v18 = (void *)swift_allocObject();
  uint64_t v19 = MEMORY[0x1E4FBCFD8];
  v18[2] = v17;
  v18[3] = v19;
  v18[4] = v16;
  sub_1C1F86288((uint64_t)v4, (uint64_t)&unk_1EA2C5940, (uint64_t)v18);
  return swift_release();
}

void sub_1C20309C0(void *a1)
{
  id v1 = a1;
  sub_1C20307C4();
}

uint64_t sub_1C2030A08(void *a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    id v4 = a1;
    swift_unknownObjectRetain();
    sub_1C214B5A0();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v7, 0, sizeof(v7));
    id v5 = a1;
  }
  sub_1C2147F30();
  sub_1C2147F20();

  return sub_1C1F4FC0C((uint64_t)v7);
}

void sub_1C2030A84()
{
  id v1 = objc_msgSend(v0, sel_navigationItem);
  objc_msgSend(v1, sel_setLargeTitleDisplayMode_, 1);

  id v2 = objc_msgSend(v0, sel_navigationItem);
  id v3 = sub_1C202FDAC();
  objc_msgSend(v2, sel__setLargeTitleAccessoryView_alignToBaseline_, v3, 0);

  if (qword_1EBF0CA00 != -1) {
    swift_once();
  }
  id v4 = (id)qword_1EBF0CA18;
  swift_bridgeObjectRetain();
  sub_1C2147730();

  swift_bridgeObjectRelease();
  id v5 = (void *)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_setTitle_, v5, 0xE000000000000000);

  id v6 = objc_msgSend(v0, sel_navigationItem);
  id v7 = objc_msgSend(v6, sel_backBarButtonItem);

  if (v7)
  {
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_1C214A6C0();
    uint64_t v8 = (void *)sub_1C214A5B0();
    swift_bridgeObjectRelease();
    objc_msgSend(v7, sel_setAccessibilityIdentifier_, v8);
  }
}

void sub_1C2030CB4()
{
  if (!qword_1EA2C32D8)
  {
    sub_1C214A8C0();
    unint64_t v0 = sub_1C214B4F0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C32D8);
    }
  }
}

uint64_t sub_1C2030D0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[21] = a4;
  uint64_t v5 = sub_1C21497F0();
  v4[22] = v5;
  v4[23] = *(void *)(v5 - 8);
  v4[24] = swift_task_alloc();
  v4[25] = swift_task_alloc();
  sub_1C214A890();
  v4[26] = sub_1C214A880();
  uint64_t v7 = sub_1C214A840();
  v4[27] = v7;
  v4[28] = v6;
  return MEMORY[0x1F4188298](sub_1C2030E10, v7, v6);
}

uint64_t sub_1C2030E10()
{
  char v23 = v0;
  uint64_t v1 = (void *)v0[21];
  sub_1C21497A0();
  id v2 = v1;
  id v3 = sub_1C21497E0();
  os_log_type_t v4 = sub_1C214ABB0();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v19 = v0[23];
    uint64_t v5 = (void *)v0[21];
    uint64_t v20 = v0[22];
    uint64_t v21 = v0[25];
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136446210;
    uint64_t v22 = v7;
    v0[19] = v5;
    type metadata accessor for InteractionSummaryOverviewViewController();
    id v8 = v5;
    uint64_t v9 = sub_1C214A630();
    v0[20] = sub_1C1F6FD54(v9, v10, &v22);
    sub_1C214B530();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C1F0B000, v3, v4, "[%{public}s] Marking interaction shard as required during viewing DDI overview", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C8754730](v7, -1, -1);
    MEMORY[0x1C8754730](v6, -1, -1);

    id v11 = *(void (**)(uint64_t, uint64_t))(v19 + 8);
    v11(v21, v20);
  }
  else
  {
    uint64_t v12 = v0[25];
    uint64_t v13 = v0[22];
    uint64_t v14 = v0[23];
    uint64_t v15 = (void *)v0[21];

    id v11 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
    v11(v12, v13);
  }
  v0[29] = v11;
  id v16 = sub_1C202FD28();
  v0[30] = v16;
  v0[2] = v0;
  v0[3] = sub_1C20310C8;
  uint64_t v17 = swift_continuation_init();
  v0[10] = MEMORY[0x1E4F143A8];
  v0[11] = 0x40000000;
  v0[12] = sub_1C20B073C;
  v0[13] = &block_descriptor_0;
  v0[14] = v17;
  objc_msgSend(v16, sel_markInteractionsShardAsRequiredWithCompletion_, v0 + 10);
  return MEMORY[0x1F41881E8](v0 + 2);
}

uint64_t sub_1C20310C8()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 48);
  *(void *)(*v0 + 248) = v2;
  uint64_t v3 = *(void *)(v1 + 224);
  uint64_t v4 = *(void *)(v1 + 216);
  if (v2) {
    uint64_t v5 = sub_1C20311F8;
  }
  else {
    uint64_t v5 = sub_1C1F88120;
  }
  return MEMORY[0x1F4188298](v5, v4, v3);
}

uint64_t sub_1C20311F8()
{
  uint64_t v31 = v0;
  uint64_t v2 = (void *)v0[30];
  uint64_t v1 = (void *)v0[31];
  uint64_t v3 = (void *)v0[21];
  swift_release();
  swift_willThrow();

  sub_1C21497A0();
  id v4 = v3;
  id v5 = v1;
  id v6 = v4;
  id v7 = v1;
  id v8 = sub_1C21497E0();
  os_log_type_t v9 = sub_1C214ABD0();
  if (os_log_type_enabled(v8, v9))
  {
    unint64_t v10 = (void *)v0[31];
    uint64_t v28 = v0[24];
    unint64_t v29 = (void (*)(uint64_t, uint64_t))v0[29];
    id v11 = (void *)v0[21];
    uint64_t v27 = v0[22];
    uint64_t v12 = swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    v30[0] = v13;
    *(_DWORD *)uint64_t v12 = 136446466;
    v0[15] = v11;
    type metadata accessor for InteractionSummaryOverviewViewController();
    id v14 = v11;
    uint64_t v15 = sub_1C214A630();
    v0[16] = sub_1C1F6FD54(v15, v16, v30);
    sub_1C214B530();

    swift_bridgeObjectRelease();
    *(_WORD *)(v12 + 12) = 2082;
    v0[17] = v10;
    id v17 = v10;
    sub_1C1F248B4(0, (unint64_t *)&qword_1EBF0C9C0);
    uint64_t v18 = sub_1C214A610();
    v0[18] = sub_1C1F6FD54(v18, v19, v30);
    sub_1C214B530();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1C1F0B000, v8, v9, "[%{public}s] Could not mark medication education/interaction shards as required: %{public}s", (uint8_t *)v12, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C8754730](v13, -1, -1);
    MEMORY[0x1C8754730](v12, -1, -1);

    v29(v28, v27);
  }
  else
  {
    uint64_t v20 = (void *)v0[31];
    uint64_t v21 = (void (*)(uint64_t, uint64_t))v0[29];
    uint64_t v22 = v0[24];
    uint64_t v24 = (void *)v0[21];
    uint64_t v23 = v0[22];

    v21(v22, v23);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v25 = (uint64_t (*)(void))v0[1];
  return v25();
}

uint64_t sub_1C20314F4(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5 = sub_1C2147D90();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  id v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2147D50();
  id v9 = a3;
  id v10 = a1;
  sub_1C1F4EE40(v9);

  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void InteractionSummaryOverviewViewController.__allocating_init(dataSource:)()
{
}

void InteractionSummaryOverviewViewController.init(dataSource:)()
{
}

id InteractionSummaryOverviewViewController.__allocating_init(collectionViewLayout:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCollectionViewLayout_, a1);

  return v3;
}

void InteractionSummaryOverviewViewController.init(collectionViewLayout:)()
{
}

void sub_1C20316C4(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = a3;
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1C20316F8()
{
  swift_release();
  swift_release();

  return swift_bridgeObjectRelease();
}

id InteractionSummaryOverviewViewController.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for InteractionSummaryOverviewViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1C20317D4(uint64_t a1)
{
  swift_release();
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1C2031884(void *a1)
{
  swift_unknownObjectRetain();
  id v2 = a1;
  sub_1C214B5A0();
  swift_unknownObjectRelease();
  _s19HealthMedicationsUI0B10TapToRadarC16drugInteractions14viewControllerySo06UIViewJ0C_tFZ_0(v2);

  return __swift_destroy_boxed_opaque_existential_0((uint64_t)&v4);
}

Swift::Void __swiftcall InteractionSummaryOverviewViewController.viewControllerWillEnterAdaptiveModal()()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1C21488D0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = objc_msgSend(v0, sel_navigationItem);
  sub_1C1F12718(0, (unint64_t *)&qword_1EA2C3508);
  sub_1C1F12718(0, &qword_1EA2C3198);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1C214B250();
  uint64_t v7 = sub_1C214AC50();
  objc_msgSend(v6, sel_setRightBarButtonItem_, v7);

  sub_1C21488C0();
  LOBYTE(v7) = sub_1C21488B0();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  if (v7)
  {
    id v8 = objc_msgSend(v1, sel_navigationItem);
    id v9 = (void *)sub_1C214A5B0();
    id v10 = objc_msgSend(self, sel_systemImageNamed_, v9);

    id v11 = objc_allocWithZone(MEMORY[0x1E4FB14A8]);
    id v12 = v1;
    id v13 = objc_msgSend(v11, sel_initWithImage_style_target_action_, v10, 0, v12, sel_tapToRadarButtonTappedWithSender_);

    objc_msgSend(v8, sel_setLeftBarButtonItem_, v13);
  }
  id v14 = objc_msgSend(v1, sel_navigationController);
  if (v14)
  {
    uint64_t v15 = v14;
    id v16 = objc_msgSend(v14, sel_navigationBar);

    objc_msgSend(v16, sel_setPrefersLargeTitles_, 1);
  }
  id v17 = objc_msgSend(v1, sel_navigationController);
  if (v17)
  {
    uint64_t v18 = v17;
    id v19 = objc_msgSend(v17, sel_navigationBar);

    sub_1C214AEB0();
    objc_msgSend(v19, sel_setDirectionalLayoutMargins_);
  }
}

void sub_1C2031C30(void *a1)
{
  id v1 = a1;
  InteractionSummaryOverviewViewController.viewControllerWillEnterAdaptiveModal()();
}

Swift::Void __swiftcall InteractionSummaryOverviewViewController.viewControllerDidLeaveAdaptiveModal()()
{
  id v1 = objc_msgSend(v0, sel_navigationItem);
  objc_msgSend(v1, sel_setRightBarButtonItem_, 0);

  id v2 = objc_msgSend(v0, sel_navigationItem);
  objc_msgSend(v2, sel_setLeftBarButtonItem_, 0);
}

void sub_1C2031D10(void *a1)
{
  id v1 = a1;
  id v2 = objc_msgSend(v1, sel_navigationItem);
  objc_msgSend(v2, sel_setRightBarButtonItem_, 0);

  id v3 = objc_msgSend(v1, sel_navigationItem);
  objc_msgSend(v3, sel_setLeftBarButtonItem_, 0);
}

unint64_t sub_1C2031DB0()
{
  unint64_t result = qword_1EA2C5930;
  if (!qword_1EA2C5930)
  {
    type metadata accessor for InteractionSummaryOverviewDataSourceProvider();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1EA2C5930);
  }
  return result;
}

uint64_t sub_1C2031E08()
{
  swift_unknownObjectRelease();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1C2031E48(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_1C1F40400;
  return sub_1C2030D0C(a1, v4, v5, v6);
}

uint64_t sub_1C2031EFC()
{
  swift_unknownObjectWeakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C2031F34@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  id v3 = (void *)(*a1 + qword_1EA2C58E8);
  swift_beginAccess();
  uint64_t v4 = v3[1];
  *a2 = *v3;
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C2031F90()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for InteractionSummaryOverviewViewController(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for InteractionSummaryOverviewViewController);
}

uint64_t dispatch thunk of InteractionSummaryOverviewViewController.baseIdentifier.getter()
{
  return (*(uint64_t (**)(void))(class metadata base offset for InteractionSummaryOverviewViewController
                              + (*MEMORY[0x1E4FBC8C8] & *v0)
                              + 144))();
}

uint64_t dispatch thunk of InteractionSummaryOverviewViewController.baseIdentifier.setter()
{
  return (*(uint64_t (**)(void))(class metadata base offset for InteractionSummaryOverviewViewController
                              + (*MEMORY[0x1E4FBC8C8] & *v0)
                              + 152))();
}

uint64_t dispatch thunk of InteractionSummaryOverviewViewController.baseIdentifier.modify()
{
  return (*(uint64_t (**)(void))(class metadata base offset for InteractionSummaryOverviewViewController
                              + (*MEMORY[0x1E4FBC8C8] & *v0)
                              + 160))();
}

uint64_t dispatch thunk of InteractionSummaryOverviewViewController.providedPresentation.getter()
{
  return (*(uint64_t (**)(void))(class metadata base offset for InteractionSummaryOverviewViewController
                              + (*MEMORY[0x1E4FBC8C8] & *v0)
                              + 168))();
}

uint64_t dispatch thunk of InteractionSummaryOverviewViewController.__allocating_init(filteringMedication:listManager:healthStore:analyticsManager:roomType:)()
{
  return (*(uint64_t (**)(void))(class metadata base offset for InteractionSummaryOverviewViewController + v0 + 176))();
}

uint64_t sub_1C203218C()
{
  return type metadata accessor for InteractionSummaryOverviewViewController();
}

void sub_1C2032194()
{
  *(void *)&v0[qword_1EA2C58F0] = 0;
  *(void *)&v0[qword_1EA2C58F8] = 0;
  *(void *)&v0[qword_1EA2C5900] = 0;
  id v1 = (uint64_t *)&v0[qword_1EA2C58E8];
  uint64_t v3 = sub_1C214A5F0();
  uint64_t v4 = v2;
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  uint64_t *v1 = v3;
  v1[1] = v4;

  sub_1C214B910();
  __break(1u);
}

void sub_1C2032280(uint64_t a1)
{
  sub_1C2030214(a1, v1);
}

uint64_t sub_1C2032288(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = a2;
  uint64_t v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2)
  {
    sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8A8);
    sub_1C1F2F9D0((unint64_t *)&unk_1EBF0C8B0, (unint64_t *)&qword_1EBF0C8A8);
    uint64_t v4 = sub_1C214AA60();
  }
  swift_retain();
  id v6 = a3;
  v5(v4, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

id sub_1C203236C()
{
  uint64_t v1 = qword_1EA2C5978;
  uint64_t v2 = *(void **)(v0 + qword_1EA2C5978);
  if (v2)
  {
    id v3 = *(id *)(v0 + qword_1EA2C5978);
  }
  else
  {
    id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F66AC0]), sel_initWithHealthStore_, *(void *)(v0 + qword_1EA2C5968));
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

void *sub_1C20323F0()
{
  uint64_t v1 = qword_1EA2C5980;
  if (*(void *)(v0 + qword_1EA2C5980))
  {
    uint64_t v2 = *(void **)(v0 + qword_1EA2C5980);
  }
  else
  {
    uint64_t v3 = v0;
    id v4 = *(void **)(v0 + qword_1EA2C5968);
    sub_1C2148E10();
    id v5 = v4;
    sub_1C2148E00();
    sub_1C2148DB0();
    swift_release();
    sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C7C8);
    sub_1C214AC00();
    sub_1C2148D70();
    swift_allocObject();
    uint64_t v6 = sub_1C2148C90();
    type metadata accessor for MedicationsInteractionEngine();
    swift_allocObject();
    uint64_t v2 = sub_1C1F34F68(v5, v6);

    swift_release();
    *(void *)(v3 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

uint64_t sub_1C2032518(uint64_t a1)
{
  uint64_t v2 = sub_1C2148710();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  uint64_t v6 = &v14[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v4);
  id v8 = &v14[-v7];
  if (a1) {
    sub_1C2148690();
  }
  else {
    sub_1C2148660();
  }
  uint64_t v9 = (void (*)(unsigned char *, void))sub_1C21486D0();
  *(void *)(v10 + 16) = 0x4024000000000000;
  v9(v14, 0);
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v3 + 16))(v6, v8, v2);
  uint64_t v11 = sub_1C2148700();
  id v12 = *(void (**)(unsigned char *, uint64_t))(v3 + 8);
  v12(v6, v2);
  v12(v8, v2);
  return v11;
}

uint64_t sub_1C2032698@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  id v8 = (void *)swift_allocObject();
  v8[2] = a1;
  v8[3] = a2;
  v8[4] = a3;
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))MEMORY[0x1E4F1AC28];
  sub_1C20375D8(0, &qword_1EBF0C6F8, MEMORY[0x1E4F1AC28]);
  swift_allocObject();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1C2149F10();
  sub_1C2035AF4((unint64_t *)&qword_1EBF0C6F0, &qword_1EBF0C6F8, v9);
  uint64_t v10 = sub_1C2149FC0();
  uint64_t result = swift_release();
  *a4 = v10;
  return result;
}

void sub_1C20327D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a1;
  *(void *)(v8 + 24) = a2;
  swift_retain();
  id v9 = sub_1C203236C();
  unint64_t v10 = swift_bridgeObjectRetain();
  sub_1C203771C(v10);
  swift_bridgeObjectRelease();
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8C0);
  sub_1C1F2F9D0((unint64_t *)&qword_1EBF0C8C8, (unint64_t *)&qword_1EBF0C8C0);
  uint64_t v11 = (void *)sub_1C214AA50();
  swift_bridgeObjectRelease();
  if (a5)
  {
    sub_1C1F12718(0, &qword_1EBF0C908);
    sub_1C1F2F9D0((unint64_t *)&qword_1EBF0C910, &qword_1EBF0C908);
    a5 = (void *)sub_1C214AA50();
  }
  uint64_t v12 = swift_allocObject();
  swift_weakInit();
  id v13 = (void *)swift_allocObject();
  void v13[2] = v12;
  v13[3] = sub_1C1F30CF8;
  v13[4] = v8;
  v15[4] = sub_1C20378E4;
  void v15[5] = v13;
  v15[0] = MEMORY[0x1E4F143A8];
  v15[1] = 1107296256;
  void v15[2] = sub_1C2032288;
  void v15[3] = &block_descriptor_16;
  id v14 = _Block_copy(v15);
  swift_release();
  objc_msgSend(v9, sel_interactionResultsForMedications_lifestyleFactors_completion_, v11, a5, v14);
  _Block_release(v14);
}

uint64_t sub_1C2032A20(uint64_t a1, char a2, uint64_t (*a3)(uint64_t *))
{
  uint64_t v4 = a1;
  char v5 = a2 & 1;
  return a3(&v4);
}

uint64_t sub_1C2032A60(uint64_t a1, void *a2, uint64_t a3, void (*a4)(void *, uint64_t))
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    if (a2)
    {
      id v8 = a2;
      a4(a2, 1);
    }
    else
    {
      id v9 = *(void **)(result + qword_1EA2C5958);
      if (v9)
      {
        id v10 = v9;
        id v11 = objc_msgSend(v10, sel_firstConceptIdentifier);
        if (v11)
        {
          uint64_t v12 = v11;
          if (a1)
          {
            id v13 = v11;
            uint64_t v14 = swift_bridgeObjectRetain();
            sub_1C2037E1C(v14, v13);
            uint64_t v16 = v15;

            uint64_t v17 = sub_1C1F7F9B8(v16);
            swift_release();
            a4((void *)v17, 0);
            swift_release();
          }
          else
          {
            uint64_t v20 = (void *)MEMORY[0x1E4FBC860];
            if ((MEMORY[0x1E4FBC860] & 0xC000000000000000) != 0) {
              uint64_t v20 = sub_1C1F7F9D4(MEMORY[0x1E4FBC860]);
            }
            a4(v20, 0);
            swift_release();
          }
        }
        else
        {
          id v19 = (void *)MEMORY[0x1E4FBC860];
          if ((MEMORY[0x1E4FBC860] & 0xC000000000000000) != 0) {
            id v19 = sub_1C1F7F9D4(MEMORY[0x1E4FBC860]);
          }
          a4(v19, 0);
          swift_release();
        }
      }
      else
      {
        if (a1)
        {
          uint64_t v18 = a1;
        }
        else if ((MEMORY[0x1E4FBC860] & 0xC000000000000000) != 0 && sub_1C214B930())
        {
          sub_1C1F99038(MEMORY[0x1E4FBC860]);
          uint64_t v18 = v22;
        }
        else
        {
          uint64_t v18 = MEMORY[0x1E4FBC870];
        }
        swift_bridgeObjectRetain();
        uint64_t v21 = sub_1C1F7F9B8(v18);
        swift_bridgeObjectRelease();
        a4((void *)v21, 0);
        swift_release();
      }
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_1C2032CA8()
{
  sub_1C1F2F7C0(0);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v63 = (char *)v45 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2006250();
  uint64_t v46 = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2035764();
  uint64_t v48 = v7;
  uint64_t v50 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  id v9 = (char *)v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C20358AC();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v52 = v10;
  uint64_t v53 = v11;
  MEMORY[0x1F4188790](v10);
  id v13 = (char *)v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2035B38();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v54 = v14;
  uint64_t v55 = v15;
  MEMORY[0x1F4188790](v14);
  uint64_t v47 = (char *)v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2035BFC();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v56 = v17;
  uint64_t v57 = v18;
  MEMORY[0x1F4188790](v17);
  uint64_t v49 = (char *)v45 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2035CA8();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v59 = v20;
  uint64_t v60 = v21;
  MEMORY[0x1F4188790](v20);
  uint64_t v51 = (char *)v45 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2035D3C();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v61 = v23;
  uint64_t v62 = v24;
  MEMORY[0x1F4188790](v23);
  uint64_t v58 = (char *)v45 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v64 = (id)sub_1C2149730();
  uint64_t v26 = (void (*)(uint64_t))MEMORY[0x1E4F677F0];
  sub_1C200646C(0, (unint64_t *)&qword_1EBF0C690, MEMORY[0x1E4F677F0]);
  sub_1C1F30D40(0, (unint64_t *)&qword_1EBF0C790, (unint64_t *)&qword_1EBF0C8C0);
  sub_1C203585C((unint64_t *)&qword_1EBF0C688, (unint64_t *)&qword_1EBF0C690, v26);
  sub_1C2149FD0();
  swift_release();
  uint64_t v27 = (void *)sub_1C20323F0()[5];
  swift_retain();
  swift_release();
  id v64 = v27;
  sub_1C200646C(0, &qword_1EA2C5208, (void (*)(uint64_t))sub_1C1F35D28);
  v45[1] = MEMORY[0x1E4F1A820];
  sub_1C2035270(&qword_1EBF0C638, (void (*)(uint64_t))sub_1C2006250);
  sub_1C203585C(&qword_1EA2C5210, &qword_1EA2C5208, (void (*)(uint64_t))sub_1C1F35D28);
  uint64_t v28 = v46;
  sub_1C214A010();
  swift_release();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v28);
  uint64_t v29 = swift_allocObject();
  *(void *)(v29 + 16) = sub_1C2035E3C;
  *(void *)(v29 + 24) = v0;
  swift_retain();
  sub_1C2149E00();
  uint64_t v30 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))MEMORY[0x1E4F1AAE0];
  sub_1C20375D8(0, &qword_1EBF0C6B0, MEMORY[0x1E4F1AAE0]);
  sub_1C2035270(&qword_1EA2C59D8, (void (*)(uint64_t))sub_1C2035764);
  sub_1C2035AF4((unint64_t *)&qword_1EBF0C6A8, &qword_1EBF0C6B0, v30);
  uint64_t v31 = v48;
  sub_1C214A120();
  swift_release();
  (*(void (**)(char *, uint64_t))(v50 + 8))(v9, v31);
  sub_1C1F30D40(0, &qword_1EBF0C778, (unint64_t *)&qword_1EBF0C8A8);
  sub_1C2035270(&qword_1EA2C59F0, (void (*)(uint64_t))sub_1C20358AC);
  uint64_t v32 = v47;
  uint64_t v33 = v52;
  sub_1C2149FD0();
  (*(void (**)(char *, uint64_t))(v53 + 8))(v13, v33);
  uint64_t v34 = swift_allocObject();
  *(void *)(v34 + 16) = sub_1C2035EB4;
  *(void *)(v34 + 24) = v0;
  sub_1C20359B8();
  swift_retain();
  char v35 = v49;
  uint64_t v36 = v54;
  sub_1C2149CF0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v55 + 8))(v32, v36);
  id v64 = 0;
  sub_1C2035270(&qword_1EA2C5A08, (void (*)(uint64_t))sub_1C2035BFC);
  uint64_t v37 = v51;
  uint64_t v38 = v56;
  sub_1C2149FE0();
  (*(void (**)(char *, uint64_t))(v57 + 8))(v35, v38);
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0CB10);
  id v64 = (id)sub_1C214AD80();
  uint64_t v39 = sub_1C214AD20();
  uint64_t v40 = (uint64_t)v63;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v63, 1, 1, v39);
  sub_1C2035270(&qword_1EA2C5A18, (void (*)(uint64_t))sub_1C2035CA8);
  sub_1C1F2F9D0((unint64_t *)&qword_1EBF0C7F0, (unint64_t *)&qword_1EBF0CB10);
  uint64_t v42 = v58;
  uint64_t v41 = v59;
  sub_1C214A0A0();
  sub_1C2036B6C(v40, (uint64_t (*)(void))sub_1C1F2F7C0);

  (*(void (**)(char *, uint64_t))(v60 + 8))(v37, v41);
  swift_allocObject();
  swift_weakInit();
  sub_1C2035270(&qword_1EA2C5A20, (void (*)(uint64_t))sub_1C2035D3C);
  uint64_t v43 = v61;
  sub_1C214A0F0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v62 + 8))(v42, v43);
  swift_beginAccess();
  sub_1C2149E20();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1C2033714(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v22 = a3;
  sub_1C2037504();
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  id v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = MEMORY[0x1E4FBC860];
  if (!(a1 >> 62))
  {
    uint64_t v10 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v10) {
      goto LABEL_3;
    }
LABEL_14:
    swift_bridgeObjectRelease();
    uint64_t v16 = MEMORY[0x1E4FBC860];
LABEL_15:
    uint64_t v17 = (void *)swift_allocObject();
    void v17[2] = v22;
    v17[3] = v16;
    v17[4] = a2;
    uint64_t v18 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))MEMORY[0x1E4F1AAE0];
    sub_1C20375D8(0, &qword_1EBF0C6B0, MEMORY[0x1E4F1AAE0]);
    sub_1C2035AF4((unint64_t *)&qword_1EBF0C6A8, &qword_1EBF0C6B0, v18);
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1C2149F20();
    sub_1C2035270(&qword_1EBF0C710, (void (*)(uint64_t))sub_1C2037504);
    uint64_t v19 = sub_1C2149FC0();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    swift_release();
    return v19;
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_1C214B930();
  uint64_t v10 = result;
  if (!result) {
    goto LABEL_14;
  }
LABEL_3:
  if (v10 >= 1)
  {
    uint64_t v20 = a2;
    uint64_t v21 = v6;
    for (uint64_t i = 0; i != v10; ++i)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v13 = (id)MEMORY[0x1C8753960](i, a1);
      }
      else {
        id v13 = *(id *)(a1 + 8 * i + 32);
      }
      uint64_t v14 = v13;
      id v15 = objc_msgSend(v13, sel_firstOntologyCoding, v20, v21);

      if (v15)
      {
        sub_1C214B820();
        sub_1C214B860();
        sub_1C214B870();
        sub_1C214B830();
      }
      else
      {
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v16 = v23;
    a2 = v20;
    uint64_t v6 = v21;
    goto LABEL_15;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C2033A14@<X0>(void *a1@<X0>, uint64_t (*a2)(void, void)@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result = a2(*a1, a1[1]);
  *a3 = result;
  return result;
}

uint64_t sub_1C2033A50@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *a1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C2033A5C()
{
  swift_retain();
  unint64_t v0 = swift_bridgeObjectRetain();
  uint64_t v1 = sub_1C20372D4(v0);
  swift_bridgeObjectRelease();
  swift_release();
  return v1;
}

uint64_t sub_1C2033AC4(unint64_t *a1)
{
  uint64_t v35 = sub_1C2147B20();
  uint64_t v2 = *(void *)(v35 - 8);
  MEMORY[0x1F4188790](v35);
  uint64_t v4 = (char *)v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = sub_1C2148540();
  uint64_t v5 = *(void *)(v34 - 8);
  MEMORY[0x1F4188790](v34);
  uint64_t v7 = (char *)v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v8 = *a1;
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v10 = Strong;
    unint64_t v11 = sub_1C2149710();
    uint64_t v12 = sub_1C1F6501C(v11);
    swift_bridgeObjectRelease();
    if (v12)
    {
      uint64_t v33 = v2;
      type metadata accessor for InteractionSeverityDataSource();
      id v13 = *(void **)(v10 + qword_1EA2C5998);
      uint64_t v14 = *(void *)(v10 + qword_1EA2C5970);
      id v15 = *(char **)(v10 + qword_1EA2C59A8);
      id v16 = *(id *)(v10 + qword_1EA2C5968);
      swift_retain();
      uint64_t v17 = (void *)sub_1C20340F0((uint64_t)v39, v13, v8, v12, v16, v14, v15);

      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v40 = v17;
      sub_1C1F2116C((uint64_t)v39, (uint64_t)v37);
      uint64_t v38 = v17;
      uint64_t v18 = v10 + qword_1EA2C5988;
      swift_beginAccess();
      swift_bridgeObjectRetain();
      sub_1C1F1CADC((uint64_t)v37, v18);
      swift_endAccess();
      sub_1C1F2116C((uint64_t)v39, (uint64_t)v37);
      uint64_t v38 = v17;
      sub_1C1F374E4((uint64_t)v37);
      int64_t v19 = v17[2];
      if (v19) {
        goto LABEL_5;
      }
      swift_bridgeObjectRelease();
      sub_1C2035F30(0, (unint64_t *)&qword_1EBF0C958, MEMORY[0x1E4FBBE00]);
      uint64_t v17 = (void *)swift_allocObject();
      *((_OWORD *)v17 + 1) = xmmword_1C214FCD0;
      uint64_t found = type metadata accessor for InteractionNoneFoundItem();
      uint64_t v21 = swift_allocObject();
      type metadata accessor for InteractionNoneFoundCell();
      sub_1C2035270(&qword_1EA2C4AB0, (void (*)(uint64_t))type metadata accessor for InteractionNoneFoundCell);
      *(void *)(v21 + 16) = sub_1C21481D0();
      *(void *)(v21 + 24) = v22;
      v17[7] = found;
      v17[8] = sub_1C2035270(&qword_1EA2C5A38, (void (*)(uint64_t))type metadata accessor for InteractionNoneFoundItem);
      v17[4] = v21;
      int64_t v19 = v17[2];
      if (v19)
      {
LABEL_5:
        v31[0] = v10;
        uint64_t v36 = MEMORY[0x1E4FBC860];
        sub_1C1F7098C(0, v19, 0);
        v31[1] = v17;
        uint64_t v23 = (uint64_t)(v17 + 4);
        uint64_t v24 = (void (**)(char *, uint64_t))(v33 + 8);
        uint64_t v33 = v5 + 32;
        long long v32 = xmmword_1C214FCD0;
        uint64_t v25 = v7;
        do
        {
          sub_1C1F236D8(v23, (uint64_t)v37);
          sub_1C2035F30(0, (unint64_t *)&qword_1EBF0C958, MEMORY[0x1E4FBBE00]);
          uint64_t v26 = swift_allocObject();
          *(_OWORD *)(v26 + 16) = v32;
          sub_1C1F236D8((uint64_t)v37, v26 + 32);
          sub_1C2147B10();
          sub_1C2147AD0();
          (*v24)(v4, v35);
          sub_1C2148520();
          __swift_destroy_boxed_opaque_existential_0((uint64_t)v37);
          uint64_t v27 = v36;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1C1F7098C(0, *(void *)(v27 + 16) + 1, 1);
            uint64_t v27 = v36;
          }
          unint64_t v29 = *(void *)(v27 + 16);
          unint64_t v28 = *(void *)(v27 + 24);
          if (v29 >= v28 >> 1)
          {
            sub_1C1F7098C(v28 > 1, v29 + 1, 1);
            uint64_t v27 = v36;
          }
          *(void *)(v27 + 16) = v29 + 1;
          (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v27+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(void *)(v5 + 72) * v29, v25, v34);
          uint64_t v36 = v27;
          v23 += 40;
          --v19;
        }
        while (v19);
      }
      swift_bridgeObjectRelease();
      swift_retain();
      sub_1C2147F40();
      swift_release();
      sub_1C21482F0();
      swift_release();
      sub_1C21485B0();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      return sub_1C2036B6C((uint64_t)v39, (uint64_t (*)(void))sub_1C2035FA0);
    }
    swift_release();
  }
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1C2147F40();
    swift_release();
    sub_1C21482F0();
    swift_release();
    sub_1C21485B0();
    return swift_release();
  }
  return result;
}

uint64_t sub_1C20340F0(uint64_t a1, id a2, unint64_t a3, uint64_t a4, void *a5, uint64_t a6, char *a7)
{
  uint64_t v51 = a7;
  id v56 = a5;
  uint64_t v57 = a6;
  uint64_t v55 = a4;
  uint64_t v10 = sub_1C2149BE0();
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = MEMORY[0x1E4FBC860];
  if (a3)
  {
    if (a3 >> 62) {
      goto LABEL_36;
    }
    uint64_t v13 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    for (; v13; uint64_t v13 = sub_1C214B930())
    {
      uint64_t v48 = v12;
      uint64_t v49 = a1;
      uint64_t v14 = 0;
      unint64_t v54 = a3 & 0xC000000000000001;
      unint64_t v52 = a3;
      unint64_t v50 = a3 + 32;
      a1 = MEMORY[0x1E4FBC838] + 8;
      uint64_t v12 = v51;
      uint64_t v53 = v13;
      while (v54)
      {
        id v18 = (id)MEMORY[0x1C8753960](v14, v52);
        BOOL v19 = __OFADD__(v14++, 1);
        if (v19) {
          goto LABEL_35;
        }
LABEL_12:
        id v58 = v18;
        id v20 = objc_msgSend(v18, sel_interactions, v48);
        a3 = sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C880);
        sub_1C1F2F9D0((unint64_t *)&unk_1EBF0C888, (unint64_t *)&qword_1EBF0C880);
        uint64_t v21 = sub_1C214AA60();

        if ((v21 & 0xC000000000000001) != 0)
        {
          uint64_t v22 = MEMORY[0x1E4FBC870];
          uint64_t v61 = MEMORY[0x1E4FBC870];
          sub_1C214B680();
          uint64_t v23 = sub_1C214B700();
          if (v23)
          {
            do
            {
              uint64_t v59 = v23;
              swift_dynamicCast();
              id v24 = objc_msgSend(v60, sel_severity);
              id v25 = objc_msgSend(v24, sel_severityLevel);

              uint64_t v12 = v60;
              if (v25 == a2)
              {
                uint64_t v26 = v61;
                unint64_t v27 = *(void *)(v61 + 16);
                if (*(void *)(v61 + 24) <= v27)
                {
                  sub_1C208F2D4(v27 + 1);
                  uint64_t v26 = v61;
                }
                uint64_t v28 = sub_1C214B210();
                uint64_t v29 = v26 + 56;
                uint64_t v30 = -1 << *(unsigned char *)(v26 + 32);
                unint64_t v31 = v28 & ~v30;
                unint64_t v32 = v31 >> 6;
                if (((-1 << v31) & ~*(void *)(v26 + 56 + 8 * (v31 >> 6))) != 0)
                {
                  unint64_t v33 = __clz(__rbit64((-1 << v31) & ~*(void *)(v26 + 56 + 8 * (v31 >> 6)))) | v31 & 0x7FFFFFFFFFFFFFC0;
                }
                else
                {
                  char v34 = 0;
                  unint64_t v35 = (unint64_t)(63 - v30) >> 6;
                  do
                  {
                    if (++v32 == v35 && (v34 & 1) != 0)
                    {
                      __break(1u);
                      goto LABEL_35;
                    }
                    BOOL v36 = v32 == v35;
                    if (v32 == v35) {
                      unint64_t v32 = 0;
                    }
                    v34 |= v36;
                    uint64_t v37 = *(void *)(v29 + 8 * v32);
                  }
                  while (v37 == -1);
                  unint64_t v33 = __clz(__rbit64(~v37)) + (v32 << 6);
                }
                *(void *)(v29 + ((v33 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v33;
                *(void *)(*(void *)(v26 + 48) + 8 * v33) = v12;
                ++*(void *)(v26 + 16);
              }
              else
              {
              }
              uint64_t v23 = sub_1C214B700();
            }
            while (v23);
            uint64_t v15 = v61;
            uint64_t v12 = v51;
          }
          else
          {
            uint64_t v15 = v22;
          }
          swift_release();
        }
        else
        {
          uint64_t v15 = sub_1C203604C(v21, a2);
        }
        uint64_t v16 = v55;
        swift_bridgeObjectRetain();
        a3 = (unint64_t)v56;
        uint64_t v17 = v57;
        swift_retain();
        sub_1C20367D0(v15, v16, (void *)a3, v17, (uint64_t)v12, &v62);

        swift_release();
        swift_bridgeObjectRelease();

        swift_release();
        if (v14 == v53)
        {
          swift_bridgeObjectRelease();
          a1 = v49;
          goto LABEL_38;
        }
      }
      id v18 = *(id *)(v50 + 8 * v14);
      BOOL v19 = __OFADD__(v14++, 1);
      if (!v19) {
        goto LABEL_12;
      }
LABEL_35:
      __break(1u);
LABEL_36:
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease();
LABEL_38:
    unint64_t v39 = swift_bridgeObjectRetain();
    uint64_t v40 = Array<A>.deduped()(v39);
    swift_bridgeObjectRelease();
    if (v40 < 0 || (v40 & 0x4000000000000000) != 0)
    {
      unint64_t v47 = swift_bridgeObjectRetain();
      uint64_t v41 = (uint64_t)sub_1C1F7F718(v47);
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v41 = v40 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
    }
    uint64_t v61 = v41;
    sub_1C1F7F500(&v61);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C20DB3B0(0xD000000000000015, 0x80000001C21665A0, (uint64_t)a2);
    if (qword_1EBF0CA00 != -1) {
      swift_once();
    }
    id v42 = (id)qword_1EBF0CA18;
    swift_bridgeObjectRetain();
    sub_1C2147730();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    sub_1C2149B50();
    uint64_t v43 = sub_1C2148180();
    swift_allocObject();
    uint64_t v44 = sub_1C2148170();
    *(void *)(a1 + 24) = v43;
    *(void *)(a1 + 32) = sub_1C2035270((unint64_t *)&qword_1EA2C3550, MEMORY[0x1E4F66208]);
    *(void *)a1 = v44;
    swift_retain();
    unint64_t v45 = swift_retain();
    uint64_t v38 = sub_1C1F38DF8(v45);
    swift_release();
    swift_release_n();
  }
  else
  {
    *(void *)(a1 + 32) = 0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    return MEMORY[0x1E4FBC860];
  }
  return v38;
}

uint64_t sub_1C2034738(id *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v73 = a6;
  uint64_t v71 = a5;
  uint64_t v72 = a4;
  id v69 = a3;
  uint64_t v75 = type metadata accessor for InteractionStackedMedmojiDataProvider(0);
  uint64_t v8 = MEMORY[0x1F4188790](v75);
  uint64_t v70 = (uint64_t)&v67 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (uint64_t *)((char *)&v67 - v10);
  uint64_t v12 = type metadata accessor for DrugInteractionVisualizationConfig(0);
  uint64_t v13 = MEMORY[0x1F4188790](v12);
  uint64_t v15 = (uint64_t *)((char *)&v67 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v13);
  uint64_t v17 = (uint64_t *)((char *)&v67 - v16);
  id v18 = *a1;
  unint64_t v19 = swift_bridgeObjectRetain();
  unint64_t v20 = sub_1C20365FC(v19, v18, (SEL *)&selRef_firstInteractionClass);
  swift_bridgeObjectRelease();

  id v21 = v18;
  unint64_t v22 = swift_bridgeObjectRetain();
  unint64_t v23 = sub_1C20365FC(v22, v21, (SEL *)&selRef_secondInteractionClass);
  swift_bridgeObjectRelease();

  if (v20 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v29 = sub_1C214B930();
    swift_bridgeObjectRelease();
    uint64_t v84 = v6;
    if (v29) {
      goto LABEL_3;
    }
LABEL_8:
    swift_bridgeObjectRelease();
    id v30 = objc_msgSend(v21, sel_firstInteractionClass);
    id v31 = objc_msgSend(v30, sel_ancestorIdentifier);

    id v32 = (id)HKDrugInteractionLifestyleFactorForHKConceptIdentifier();
    unint64_t v33 = v32;
    if (!v32)
    {
      sub_1C1F12718(0, &qword_1EBF0C908);
      unint64_t v33 = (void *)sub_1C214B200();
    }
    id v34 = v32;
    uint64_t v26 = sub_1C214B520();

    *uint64_t v17 = v26;
    swift_storeEnumTagMultiPayload();
    LOBYTE(v81[0]) = 0;
    uint64_t v68 = HKDrugInteractionLifestyleFactor.localizedString(variant:)((uint64_t)v81, v26);
    uint64_t v74 = v35;
    type metadata accessor for HKDrugInteractionLifestyleFactor(0);
    uint64_t v82 = v36;
    uint64_t v83 = &protocol witness table for HKDrugInteractionLifestyleFactor;

    goto LABEL_11;
  }
  uint64_t v24 = *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v84 = v6;
  if (!v24) {
    goto LABEL_8;
  }
LABEL_3:
  if ((v20 & 0xC000000000000001) != 0)
  {
    id v25 = (id)MEMORY[0x1C8753960](0, v20);
  }
  else
  {
    if (!*(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_30;
    }
    id v25 = *(id *)(v20 + 32);
  }
  uint64_t v26 = (uint64_t)v25;
  swift_bridgeObjectRelease();
  _sSo29HKMedicationUserDomainConceptC19HealthMedicationsUIE7medmoji0eF10Experience29MedicationVisualizationConfigVSgvg_0();
  swift_storeEnumTagMultiPayload();
  v81[0] = v26;
  uint64_t v27 = sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8C0);
  uint64_t v68 = sub_1C21494A0();
  uint64_t v74 = v28;
  uint64_t v82 = v27;
  uint64_t v83 = &protocol witness table for HKMedicationUserDomainConcept;
LABEL_11:
  v81[0] = v26;
  if (v23 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v42 = sub_1C214B930();
    swift_bridgeObjectRelease();
    if (v42)
    {
LABEL_13:
      if ((v23 & 0xC000000000000001) == 0)
      {
        if (!*(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          goto LABEL_32;
        }
        id v37 = *(id *)(v23 + 32);
        goto LABEL_16;
      }
LABEL_30:
      id v37 = (id)MEMORY[0x1C8753960](0, v23);
LABEL_16:
      uint64_t v38 = (uint64_t)v37;
      swift_bridgeObjectRelease();
      _sSo29HKMedicationUserDomainConceptC19HealthMedicationsUIE7medmoji0eF10Experience29MedicationVisualizationConfigVSgvg_0();
      swift_storeEnumTagMultiPayload();
      v78[0] = v38;
      uint64_t v39 = sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8C0);
      uint64_t v67 = sub_1C21494A0();
      uint64_t v41 = v40;
      uint64_t v79 = v39;
      uint64_t v80 = &protocol witness table for HKMedicationUserDomainConcept;
      goto LABEL_21;
    }
  }
  else if (*(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_13;
  }
  swift_bridgeObjectRelease();
  id v43 = objc_msgSend(v21, sel_secondInteractionClass);
  id v44 = objc_msgSend(v43, sel_ancestorIdentifier);

  id v45 = (id)HKDrugInteractionLifestyleFactorForHKConceptIdentifier();
  uint64_t v46 = v45;
  if (!v45)
  {
    sub_1C1F12718(0, &qword_1EBF0C908);
    uint64_t v46 = (void *)sub_1C214B200();
  }
  id v47 = v45;
  uint64_t v38 = sub_1C214B520();

  uint64_t *v15 = v38;
  swift_storeEnumTagMultiPayload();
  LOBYTE(v78[0]) = 0;
  uint64_t v67 = HKDrugInteractionLifestyleFactor.localizedString(variant:)((uint64_t)v78, v38);
  uint64_t v41 = v48;
  type metadata accessor for HKDrugInteractionLifestyleFactor(0);
  uint64_t v79 = v49;
  uint64_t v80 = &protocol witness table for HKDrugInteractionLifestyleFactor;

LABEL_21:
  v78[0] = v38;
  id v50 = objc_msgSend(v21, sel_severity, v67);
  id v51 = objc_msgSend(v50, sel_severityLevel);

  uint64_t v52 = v75;
  sub_1C2036B04((uint64_t)v17, (uint64_t)v11 + *(int *)(v75 + 20), type metadata accessor for DrugInteractionVisualizationConfig);
  sub_1C2036B04((uint64_t)v15, (uint64_t)v11 + *(int *)(v52 + 24), type metadata accessor for DrugInteractionVisualizationConfig);
  *uint64_t v11 = v51;
  sub_1C1F0ED28();
  uint64_t v53 = swift_allocObject();
  *(_OWORD *)(v53 + 16) = xmmword_1C214E170;
  *(void *)(v53 + 32) = v21;
  *(void *)&v77[0] = v53;
  sub_1C214A7A0();
  unint64_t v54 = *(void *)&v77[0];
  type metadata accessor for HKDrugInteractionResultCollection();
  uint64_t v55 = swift_allocObject();
  if (!(v54 >> 62))
  {
    uint64_t v56 = *(void *)((v54 & 0xFFFFFFFFFFFFFF8) + 0x10);
    id v57 = v21;
    if (v56) {
      goto LABEL_23;
    }
LABEL_26:
    swift_bridgeObjectRelease();
    swift_deallocPartialClassInstance();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_27;
  }
  id v63 = v21;
  swift_bridgeObjectRetain();
  uint64_t v64 = sub_1C214B930();
  swift_bridgeObjectRelease();
  if (!v64) {
    goto LABEL_26;
  }
LABEL_23:
  *(void *)(v55 + 16) = v54;
  sub_1C1F236D8((uint64_t)v81, (uint64_t)v77);
  sub_1C1F236D8((uint64_t)v78, (uint64_t)v76);
  type metadata accessor for InteractionMedicationItem();
  uint64_t v58 = swift_allocObject();
  uint64_t v59 = v70;
  sub_1C2036B04((uint64_t)v11, v70, type metadata accessor for InteractionStackedMedmojiDataProvider);
  swift_retain();
  id v60 = v69;
  *((void *)&v66 + 1) = swift_retain();
  *(void *)&long long v66 = v60;
  sub_1C20363B4(v55, v59, v68, v74, v77, v67, v41, v76, v66, v71, v58);
  uint64_t v61 = swift_retain();
  uint64_t v62 = v73;
  MEMORY[0x1C87528E0](v61);
  if (*(void *)((*v62 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v62 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
LABEL_32:
  }
    sub_1C214A7D0();
  sub_1C214A820();
  sub_1C214A7A0();
  swift_release();
  swift_release();
LABEL_27:
  sub_1C2036B6C((uint64_t)v11, type metadata accessor for InteractionStackedMedmojiDataProvider);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v78);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v81);
  sub_1C2036B6C((uint64_t)v15, type metadata accessor for DrugInteractionVisualizationConfig);
  return sub_1C2036B6C((uint64_t)v17, type metadata accessor for DrugInteractionVisualizationConfig);
}

void InteractionSeverityDataSource.__allocating_init(arrangedSections:isHidden:)()
{
}

void InteractionSeverityDataSource.init(arrangedSections:isHidden:)()
{
}

uint64_t sub_1C2034FDC()
{
  swift_release();
  swift_release();

  swift_release();
  sub_1C1F374E4(v0 + qword_1EA2C5988);

  return swift_bridgeObjectRelease();
}

uint64_t InteractionSeverityDataSource.deinit()
{
  uint64_t v0 = _s19HealthMedicationsUI34InteractionSeperatorLineDataSourceCfd_0();

  swift_release();
  swift_release();

  swift_release();
  sub_1C1F374E4(v0 + qword_1EA2C5988);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t InteractionSeverityDataSource.__deallocating_deinit()
{
  InteractionSeverityDataSource.deinit();

  return swift_deallocClassInstance();
}

uint64_t sub_1C2035154()
{
  return sub_1C2148B80();
}

Swift::Void __swiftcall InteractionSeverityDataSource.registerCells(for:)(UICollectionView *a1)
{
}

uint64_t sub_1C2035270(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C20352B8()
{
  return sub_1C214ACC0();
}

uint64_t InteractionSeverityDataSource.supplementaryItem(ofKind:at:)@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = sub_1C2149BE0();
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v4 = v1 + qword_1EA2C5988;
  swift_beginAccess();
  sub_1C1F2116C(v4, (uint64_t)&v9);
  if (v10)
  {
    sub_1C1F31280(&v9, (uint64_t)v11);
    return sub_1C1F31280(v11, (uint64_t)a1);
  }
  else
  {
    sub_1C1F374E4((uint64_t)&v9);
    sub_1C20DB3B0(0xD000000000000015, 0x80000001C21665A0, *(void *)(v1 + qword_1EA2C5998));
    if (qword_1EBF0CA00 != -1) {
      swift_once();
    }
    id v6 = (id)qword_1EBF0CA18;
    swift_bridgeObjectRetain();
    sub_1C2147730();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    sub_1C2149B50();
    uint64_t v7 = sub_1C2148180();
    swift_allocObject();
    uint64_t v8 = sub_1C2148170();
    a1[3] = v7;
    uint64_t result = sub_1C2035270((unint64_t *)&qword_1EA2C3550, MEMORY[0x1E4F66208]);
    a1[4] = result;
    *a1 = v8;
  }
  return result;
}

uint64_t sub_1C20355B8@<X0>(uint64_t *a1@<X8>)
{
  return InteractionSeverityDataSource.supplementaryItem(ofKind:at:)(a1);
}

uint64_t sub_1C20355DC()
{
  return sub_1C2035270(&qword_1EA2C59A0, (void (*)(uint64_t))type metadata accessor for InteractionSeverityDataSource);
}

uint64_t type metadata accessor for InteractionSeverityDataSource()
{
  uint64_t result = qword_1EA2C59B0;
  if (!qword_1EA2C59B0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C2035670()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for InteractionSeverityDataSource(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for InteractionSeverityDataSource);
}

uint64_t dispatch thunk of InteractionSeverityDataSource.layout(for:environment:)()
{
  return (*(uint64_t (**)(void))(class metadata base offset for InteractionSeverityDataSource + *v0 + 184))();
}

uint64_t sub_1C203575C()
{
  return type metadata accessor for InteractionSeverityDataSource();
}

void sub_1C2035764()
{
  if (!qword_1EA2C59C0)
  {
    sub_1C2006250();
    sub_1C200646C(255, &qword_1EA2C5208, (void (*)(uint64_t))sub_1C1F35D28);
    sub_1C2035270(&qword_1EBF0C638, (void (*)(uint64_t))sub_1C2006250);
    sub_1C203585C(&qword_1EA2C5210, &qword_1EA2C5208, (void (*)(uint64_t))sub_1C1F35D28);
    unint64_t v0 = sub_1C2149CA0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C59C0);
    }
  }
}

uint64_t sub_1C203585C(unint64_t *a1, unint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C200646C(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C20358AC()
{
  if (!qword_1EA2C59C8)
  {
    unint64_t v0 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))MEMORY[0x1E4F1AAE0];
    sub_1C20375D8(255, &qword_1EBF0C6B0, MEMORY[0x1E4F1AAE0]);
    sub_1C2035A28();
    sub_1C2035AF4((unint64_t *)&qword_1EBF0C6A8, &qword_1EBF0C6B0, v0);
    sub_1C2035270(&qword_1EA2C59E0, (void (*)(uint64_t))sub_1C2035A28);
    unint64_t v1 = sub_1C2149DA0();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_1EA2C59C8);
    }
  }
}

void sub_1C20359B8()
{
  if (!qword_1EBF0C780)
  {
    sub_1C1F30D40(255, &qword_1EBF0C778, (unint64_t *)&qword_1EBF0C8A8);
    unint64_t v0 = sub_1C214B4F0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBF0C780);
    }
  }
}

void sub_1C2035A28()
{
  if (!qword_1EA2C59D0)
  {
    sub_1C2035764();
    sub_1C1F23804(255, (unint64_t *)&qword_1EBF0C9C0);
    sub_1C2035270(&qword_1EA2C59D8, (void (*)(uint64_t))sub_1C2035764);
    unint64_t v0 = sub_1C2149D30();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C59D0);
    }
  }
}

uint64_t sub_1C2035AF4(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C20375D8(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C2035B38()
{
  if (!qword_1EA2C59E8)
  {
    sub_1C20358AC();
    sub_1C1F30D40(255, &qword_1EBF0C778, (unint64_t *)&qword_1EBF0C8A8);
    sub_1C2035270(&qword_1EA2C59F0, (void (*)(uint64_t))sub_1C20358AC);
    unint64_t v0 = sub_1C2149D00();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C59E8);
    }
  }
}

void sub_1C2035BFC()
{
  if (!qword_1EA2C59F8)
  {
    sub_1C20358AC();
    sub_1C20359B8();
    sub_1C2035270(&qword_1EA2C59F0, (void (*)(uint64_t))sub_1C20358AC);
    unint64_t v0 = sub_1C2149D00();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C59F8);
    }
  }
}

void sub_1C2035CA8()
{
  if (!qword_1EA2C5A00)
  {
    sub_1C2035BFC();
    sub_1C2035270(&qword_1EA2C5A08, (void (*)(uint64_t))sub_1C2035BFC);
    unint64_t v0 = sub_1C2149D20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C5A00);
    }
  }
}

void sub_1C2035D3C()
{
  if (!qword_1EA2C5A10)
  {
    sub_1C2035CA8();
    sub_1C1F12718(255, (unint64_t *)&qword_1EBF0CB10);
    sub_1C2035270(&qword_1EA2C5A18, (void (*)(uint64_t))sub_1C2035CA8);
    sub_1C1F2F9D0((unint64_t *)&qword_1EBF0C7F0, (unint64_t *)&qword_1EBF0CB10);
    unint64_t v0 = sub_1C2149DF0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C5A10);
    }
  }
}

uint64_t sub_1C2035E3C(unint64_t a1, uint64_t a2)
{
  return sub_1C2033714(a1, a2, v2);
}

uint64_t sub_1C2035E44()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C2035E7C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void, void))(v2 + 16))(*a1, a1[1]);
  *a2 = result;
  return result;
}

uint64_t sub_1C2035EB4()
{
  return sub_1C2033A5C();
}

uint64_t sub_1C2035EBC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v2 + 16))(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1C2035EF0()
{
  swift_weakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C2035F28(unint64_t *a1)
{
  return sub_1C2033AC4(a1);
}

void sub_1C2035F30(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = sub_1C1F23804(255, (unint64_t *)&qword_1EBF0C2F0);
    unint64_t v7 = a3(a1, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

void sub_1C2035FA0()
{
  if (!qword_1EA2C5A28)
  {
    sub_1C2035F30(255, (unint64_t *)&qword_1EBF0C300, MEMORY[0x1E4FBB718]);
    sub_1C2035F30(255, &qword_1EA2C5A30, MEMORY[0x1E4FBB320]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA2C5A28);
    }
  }
}

uint64_t sub_1C203604C(uint64_t isStackAllocationSafe, void *a2)
{
  uint64_t v4 = isStackAllocationSafe;
  v13[1] = *MEMORY[0x1E4F143B8];
  char v5 = *(unsigned char *)(isStackAllocationSafe + 32);
  unint64_t v6 = (unint64_t)((1 << v5) + 63) >> 6;
  size_t v7 = 8 * v6;
  if ((v5 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1F4188790](isStackAllocationSafe);
    bzero((char *)v13 - ((v7 + 15) & 0x3FFFFFFFFFFFFFF0), v7);
    sub_1C20361C4((void *)((char *)v13 - ((v7 + 15) & 0x3FFFFFFFFFFFFFF0)), v6, v4, a2);
    uint64_t v9 = v8;
    swift_release();
    if (v2) {
      swift_willThrow();
    }
  }
  else
  {
    uint64_t v10 = (void *)swift_slowAlloc();
    bzero(v10, v7);
    sub_1C20361C4((unint64_t *)v10, v6, v4, a2);
    uint64_t v9 = v11;
    swift_release();
    MEMORY[0x1C8754730](v10, -1, -1);
  }
  return v9;
}

void sub_1C20361C4(unint64_t *a1, uint64_t a2, uint64_t a3, id a4)
{
  uint64_t v20 = a2;
  int64_t v6 = 0;
  uint64_t v23 = a3 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a3 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  while (1)
  {
    if (v9)
    {
      unint64_t v11 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v12 = v11 | (v6 << 6);
      goto LABEL_5;
    }
    int64_t v16 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v16 >= v10) {
      goto LABEL_24;
    }
    unint64_t v17 = *(void *)(v23 + 8 * v16);
    ++v6;
    if (!v17)
    {
      int64_t v6 = v16 + 1;
      if (v16 + 1 >= v10) {
        goto LABEL_24;
      }
      unint64_t v17 = *(void *)(v23 + 8 * v6);
      if (!v17)
      {
        int64_t v6 = v16 + 2;
        if (v16 + 2 >= v10) {
          goto LABEL_24;
        }
        unint64_t v17 = *(void *)(v23 + 8 * v6);
        if (!v17) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v9 = (v17 - 1) & v17;
    unint64_t v12 = __clz(__rbit64(v17)) + (v6 << 6);
LABEL_5:
    id v13 = *(id *)(*(void *)(a3 + 48) + 8 * v12);
    id v14 = objc_msgSend(v13, sel_severity, v20);
    id v15 = objc_msgSend(v14, sel_severityLevel);

    if (v15 == a4)
    {
      *(unint64_t *)((char *)a1 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      if (__OFADD__(v22++, 1))
      {
        __break(1u);
LABEL_24:
        swift_retain();
        sub_1C2058908(a1, v20, v22, a3);
        return;
      }
    }
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v10) {
    goto LABEL_24;
  }
  unint64_t v17 = *(void *)(v23 + 8 * v18);
  if (v17)
  {
    int64_t v6 = v18;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v6 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v6 >= v10) {
      goto LABEL_24;
    }
    unint64_t v17 = *(void *)(v23 + 8 * v6);
    ++v18;
    if (v17) {
      goto LABEL_20;
    }
  }
LABEL_26:
  __break(1u);
}

uint64_t sub_1C20363B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, long long *a5, uint64_t a6, uint64_t a7, long long *a8, long long a9, uint64_t a10, uint64_t a11)
{
  uint64_t v17 = type metadata accessor for InteractionStackedMedmojiDataProvider(0);
  v30[3] = v17;
  uint64_t v24 = sub_1C2035270(&qword_1EA2C4B70, (void (*)(uint64_t))type metadata accessor for InteractionStackedMedmojiDataProvider);
  void v30[4] = v24;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v30);
  sub_1C2036BCC(a2, (uint64_t)boxed_opaque_existential_1);
  type metadata accessor for InteractionMedicationCell();
  sub_1C2035270(&qword_1EA2C3E60, (void (*)(uint64_t))type metadata accessor for InteractionMedicationCell);
  *(void *)(a11 + 176) = sub_1C21481D0();
  *(void *)(a11 + 184) = v19;
  *(void *)(a11 + 216) = MEMORY[0x1E4FBC870];
  *(void *)(a11 + 224) = 0;
  *(_OWORD *)(a11 + 192) = a9;
  *(void *)(a11 + 208) = a10;
  *(void *)(a11 + 16) = a1;
  if (a6 == a3 && a7 == a4 || (sub_1C214BA80() & 1) == 0)
  {
    *(void *)(a11 + 64) = a3;
    *(void *)(a11 + 72) = a4;
    sub_1C1F31280(a5, a11 + 80);
    *(void *)(a11 + 160) = a6;
    *(void *)(a11 + 168) = a7;
    sub_1C1F31280(a8, a11 + 120);
    sub_1C1F236D8((uint64_t)v30, a11 + 24);
  }
  else
  {
    *(void *)(a11 + 64) = a6;
    *(void *)(a11 + 72) = a7;
    sub_1C1F236D8((uint64_t)a8, a11 + 80);
    *(void *)(a11 + 160) = a3;
    *(void *)(a11 + 168) = a4;
    sub_1C1F236D8((uint64_t)a5, a11 + 120);
    uint64_t v20 = *boxed_opaque_existential_1;
    uint64_t v21 = (uint64_t)boxed_opaque_existential_1 + *(int *)(v17 + 24);
    uint64_t v28 = v17;
    uint64_t v29 = v24;
    uint64_t v22 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v27);
    sub_1C2036B04(v21, (uint64_t)v22 + *(int *)(v17 + 20), type metadata accessor for DrugInteractionVisualizationConfig);
    sub_1C2036B04((uint64_t)boxed_opaque_existential_1 + *(int *)(v17 + 20), (uint64_t)v22 + *(int *)(v17 + 24), type metadata accessor for DrugInteractionVisualizationConfig);
    *uint64_t v22 = v20;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a8);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a5);
    sub_1C1F31280(&v27, a11 + 24);
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v30);
  return a11;
}

uint64_t sub_1C20365FC(unint64_t a1, void *a2, SEL *a3)
{
  uint64_t v17 = MEMORY[0x1E4FBC860];
  if (a1 >> 62) {
    goto LABEL_17;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v4)
  {
    while (1)
    {
      unint64_t v5 = 0;
      while ((a1 & 0xC000000000000001) != 0)
      {
        id v6 = (id)MEMORY[0x1C8753960](v5, a1);
LABEL_9:
        uint64_t v7 = v6;
        unint64_t v8 = v5 + 1;
        if (__OFADD__(v5, 1)) {
          goto LABEL_16;
        }
        id v9 = objc_msgSend(v6, sel_firstConceptIdentifier);
        if (!v9) {
          goto LABEL_4;
        }
        int64_t v10 = v9;
        sub_1C1F12718(0, (unint64_t *)&qword_1EA2C4AA0);
        id v11 = [a2 *a3];
        id v12 = objc_msgSend(v11, sel_ancestorIdentifier);

        char v13 = sub_1C214B220();
        if (v13)
        {
          sub_1C214B820();
          sub_1C214B860();
          sub_1C214B870();
          sub_1C214B830();
        }
        else
        {
LABEL_4:
        }
        ++v5;
        if (v8 == v4) {
          return v17;
        }
      }
      if (v5 < *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        break;
      }
      __break(1u);
LABEL_16:
      __break(1u);
LABEL_17:
      uint64_t v4 = sub_1C214B930();
      if (!v4) {
        return MEMORY[0x1E4FBC860];
      }
    }
    id v6 = *(id *)(a1 + 8 * v5 + 32);
    goto LABEL_9;
  }
  return MEMORY[0x1E4FBC860];
}

void sub_1C20367D0(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v7 = v6;
  uint64_t v9 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1C214B680();
    sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C880);
    sub_1C1F2F9D0((unint64_t *)&unk_1EBF0C888, (unint64_t *)&qword_1EBF0C880);
    sub_1C214AAA0();
    uint64_t v9 = v30;
    uint64_t v25 = v31;
    uint64_t v10 = v32;
    int64_t v11 = v33;
    unint64_t v12 = v34;
  }
  else
  {
    uint64_t v13 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v25 = a1 + 56;
    uint64_t v14 = ~v13;
    uint64_t v15 = -v13;
    if (v15 < 64) {
      uint64_t v16 = ~(-1 << v15);
    }
    else {
      uint64_t v16 = -1;
    }
    unint64_t v12 = v16 & *(void *)(a1 + 56);
    swift_bridgeObjectRetain();
    uint64_t v10 = v14;
    int64_t v11 = 0;
  }
  int64_t v24 = (unint64_t)(v10 + 64) >> 6;
  if ((v9 & 0x8000000000000000) == 0) {
    goto LABEL_11;
  }
LABEL_8:
  if (sub_1C214B700())
  {
    sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C880);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    id v17 = v35;
    swift_unknownObjectRelease();
    int64_t v18 = v11;
    uint64_t v19 = v12;
    while (v17)
    {
      id v35 = v17;
      sub_1C2034738(&v35, a2, a3, a4, a5, a6);

      if (v7) {
        break;
      }
      int64_t v11 = v18;
      unint64_t v12 = v19;
      if (v9 < 0) {
        goto LABEL_8;
      }
LABEL_11:
      if (v12)
      {
        uint64_t v19 = (v12 - 1) & v12;
        unint64_t v20 = __clz(__rbit64(v12)) | (v11 << 6);
        int64_t v18 = v11;
      }
      else
      {
        int64_t v18 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
          __break(1u);
          return;
        }
        if (v18 >= v24) {
          break;
        }
        unint64_t v21 = *(void *)(v25 + 8 * v18);
        if (!v21)
        {
          int64_t v22 = v11 + 2;
          if (v11 + 2 >= v24) {
            break;
          }
          unint64_t v21 = *(void *)(v25 + 8 * v22);
          if (v21) {
            goto LABEL_22;
          }
          int64_t v22 = v11 + 3;
          if (v11 + 3 >= v24) {
            break;
          }
          unint64_t v21 = *(void *)(v25 + 8 * v22);
          if (v21) {
            goto LABEL_22;
          }
          int64_t v22 = v11 + 4;
          if (v11 + 4 >= v24) {
            break;
          }
          unint64_t v21 = *(void *)(v25 + 8 * v22);
          if (v21)
          {
LABEL_22:
            int64_t v18 = v22;
          }
          else
          {
            int64_t v18 = v11 + 5;
            if (v11 + 5 >= v24) {
              break;
            }
            unint64_t v21 = *(void *)(v25 + 8 * v18);
            if (!v21)
            {
              int64_t v23 = v11 + 6;
              while (v24 != v23)
              {
                unint64_t v21 = *(void *)(v25 + 8 * v23++);
                if (v21)
                {
                  int64_t v18 = v23 - 1;
                  goto LABEL_23;
                }
              }
              break;
            }
          }
        }
LABEL_23:
        uint64_t v19 = (v21 - 1) & v21;
        unint64_t v20 = __clz(__rbit64(v21)) + (v18 << 6);
      }
      id v17 = *(id *)(*(void *)(v9 + 48) + 8 * v20);
    }
  }
  sub_1C1F495B8();
}

uint64_t sub_1C2036B04(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C2036B6C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C2036BCC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for InteractionStackedMedmojiDataProvider(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C2036C30(uint64_t result, uint64_t a2, uint64_t a3)
{
  unint64_t v21 = (unint64_t *)result;
  uint64_t v4 = 0;
  int64_t v5 = 0;
  uint64_t v23 = a3 + 56;
  uint64_t v6 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(a3 + 56);
  int64_t v24 = (unint64_t)(v6 + 63) >> 6;
LABEL_4:
  uint64_t v22 = v4;
  while (1)
  {
    if (v8)
    {
      unint64_t v9 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v10 = v9 | (v5 << 6);
      goto LABEL_18;
    }
    if (__OFADD__(v5++, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v5 >= v24) {
      goto LABEL_28;
    }
    unint64_t v12 = *(void *)(v23 + 8 * v5);
    if (!v12) {
      break;
    }
LABEL_17:
    unint64_t v8 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v5 << 6);
LABEL_18:
    uint64_t v14 = *(void **)(*(void *)(a3 + 48) + 8 * v10);
    swift_beginAccess();
    uint64_t result = swift_weakLoadStrong();
    if (result)
    {
      uint64_t v15 = result;
      id v16 = v14;
      id v17 = objc_msgSend(v16, sel_severity);
      id v18 = objc_msgSend(v17, sel_severityLevel);

      id v19 = *(id *)(v15 + qword_1EA2C5998);
      uint64_t result = swift_release();
      if (v18 == v19)
      {
        *(unint64_t *)((char *)v21 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
        uint64_t v4 = v22 + 1;
        if (!__OFADD__(v22, 1)) {
          goto LABEL_4;
        }
        __break(1u);
LABEL_28:
        swift_retain();
        return sub_1C2058908(v21, a2, v22, a3);
      }
    }
  }
  int64_t v13 = v5 + 1;
  if (v5 + 1 >= v24) {
    goto LABEL_28;
  }
  unint64_t v12 = *(void *)(v23 + 8 * v13);
  if (v12) {
    goto LABEL_16;
  }
  int64_t v13 = v5 + 2;
  if (v5 + 2 >= v24) {
    goto LABEL_28;
  }
  unint64_t v12 = *(void *)(v23 + 8 * v13);
  if (v12) {
    goto LABEL_16;
  }
  int64_t v13 = v5 + 3;
  if (v5 + 3 >= v24) {
    goto LABEL_28;
  }
  unint64_t v12 = *(void *)(v23 + 8 * v13);
  if (v12)
  {
LABEL_16:
    int64_t v5 = v13;
    goto LABEL_17;
  }
  while (1)
  {
    int64_t v5 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v5 >= v24) {
      goto LABEL_28;
    }
    unint64_t v12 = *(void *)(v23 + 8 * v5);
    ++v13;
    if (v12) {
      goto LABEL_17;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1C2036E70(uint64_t a1)
{
  uint64_t v2 = v1;
  v12[1] = *MEMORY[0x1E4F143B8];
  char v4 = *(unsigned char *)(a1 + 32);
  unsigned int v5 = v4 & 0x3F;
  unint64_t v6 = (unint64_t)((1 << v4) + 63) >> 6;
  size_t v7 = 8 * v6;
  uint64_t isStackAllocationSafe = swift_retain_n();
  if (v5 <= 0xD || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1F4188790](isStackAllocationSafe);
    bzero((char *)v12 - ((v7 + 15) & 0x3FFFFFFFFFFFFFF0), v7);
    swift_retain();
    uint64_t v9 = sub_1C2036C30((uint64_t)v12 - ((v7 + 15) & 0x3FFFFFFFFFFFFFF0), v6, a1);
    swift_release();
    swift_release();
    if (v2) {
      swift_willThrow();
    }
    swift_release_n();
  }
  else
  {
    unint64_t v10 = (void *)swift_slowAlloc();
    bzero(v10, v7);
    swift_retain();
    uint64_t v9 = sub_1C2036C30((uint64_t)v10, v6, a1);
    swift_release();
    swift_release();
    MEMORY[0x1C8754730](v10, -1, -1);
    swift_release_n();
  }
  return v9;
}

uint64_t sub_1C203703C(uint64_t a1)
{
  if ((a1 & 0xC000000000000001) == 0) {
    return sub_1C2036E70(a1);
  }
  uint64_t v1 = MEMORY[0x1E4FBC870];
  uint64_t v20 = MEMORY[0x1E4FBC870];
  swift_retain();
  sub_1C214B680();
  if (sub_1C214B700())
  {
    sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C880);
    do
    {
      swift_dynamicCast();
      swift_beginAccess();
      uint64_t Strong = swift_weakLoadStrong();
      if (Strong
        && (uint64_t v3 = Strong,
            id v4 = objc_msgSend(v19, sel_severity),
            id v5 = objc_msgSend(v4, sel_severityLevel),
            v4,
            id v6 = *(id *)(v3 + qword_1EA2C5998),
            swift_release(),
            v5 == v6))
      {
        uint64_t v7 = v20;
        unint64_t v8 = *(void *)(v20 + 16);
        if (*(void *)(v20 + 24) <= v8)
        {
          sub_1C208F2D4(v8 + 1);
          uint64_t v7 = v20;
        }
        uint64_t result = sub_1C214B210();
        uint64_t v10 = v7 + 56;
        uint64_t v11 = -1 << *(unsigned char *)(v7 + 32);
        unint64_t v12 = result & ~v11;
        unint64_t v13 = v12 >> 6;
        if (((-1 << v12) & ~*(void *)(v7 + 56 + 8 * (v12 >> 6))) != 0)
        {
          unint64_t v14 = __clz(__rbit64((-1 << v12) & ~*(void *)(v7 + 56 + 8 * (v12 >> 6)))) | v12 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v15 = 0;
          unint64_t v16 = (unint64_t)(63 - v11) >> 6;
          do
          {
            if (++v13 == v16 && (v15 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v17 = v13 == v16;
            if (v13 == v16) {
              unint64_t v13 = 0;
            }
            v15 |= v17;
            uint64_t v18 = *(void *)(v10 + 8 * v13);
          }
          while (v18 == -1);
          unint64_t v14 = __clz(__rbit64(~v18)) + (v13 << 6);
        }
        *(void *)(v10 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
        *(void *)(*(void *)(v7 + 48) + 8 * v14) = v19;
        ++*(void *)(v7 + 16);
      }
      else
      {
      }
    }
    while (sub_1C214B700());
    uint64_t v1 = v20;
  }
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1C20372D4(unint64_t a1)
{
  uint64_t v13 = MEMORY[0x1E4FBC860];
  if (a1 >> 62) {
    goto LABEL_19;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = 0;
      uint64_t v12 = v2;
      while ((a1 & 0xC000000000000001) != 0)
      {
        id v4 = (id)MEMORY[0x1C8753960](v3, a1);
LABEL_9:
        id v5 = v4;
        unint64_t v6 = v3 + 1;
        if (__OFADD__(v3, 1)) {
          goto LABEL_18;
        }
        id v7 = objc_msgSend(v4, sel_interactions);
        sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C880);
        sub_1C1F2F9D0((unint64_t *)&unk_1EBF0C888, (unint64_t *)&qword_1EBF0C880);
        uint64_t v8 = sub_1C214AA60();

        swift_allocObject();
        swift_weakInit();
        uint64_t v9 = sub_1C203703C(v8);
        swift_release();
        if ((v9 & 0xC000000000000001) != 0) {
          uint64_t v10 = sub_1C214B6D0();
        }
        else {
          uint64_t v10 = *(void *)(v9 + 16);
        }
        swift_release();
        if (v10)
        {
          sub_1C214B820();
          sub_1C214B860();
          sub_1C214B870();
          sub_1C214B830();
        }
        else
        {
        }
        ++v3;
        if (v6 == v12) {
          return v13;
        }
      }
      if (v3 < *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        break;
      }
      __break(1u);
LABEL_18:
      __break(1u);
LABEL_19:
      uint64_t v2 = sub_1C214B930();
      if (!v2) {
        return MEMORY[0x1E4FBC860];
      }
    }
    id v4 = *(id *)(a1 + 8 * v3 + 32);
    goto LABEL_9;
  }
  return MEMORY[0x1E4FBC860];
}

void sub_1C2037504()
{
  if (!qword_1EBF0C718)
  {
    uint64_t v0 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))MEMORY[0x1E4F1AAE0];
    sub_1C20375D8(255, &qword_1EBF0C6B0, MEMORY[0x1E4F1AAE0]);
    sub_1C2035AF4((unint64_t *)&qword_1EBF0C6A8, &qword_1EBF0C6B0, v0);
    unint64_t v1 = sub_1C2149F30();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_1EBF0C718);
    }
  }
}

uint64_t sub_1C20375BC@<X0>(uint64_t *a1@<X8>)
{
  return sub_1C2032698(v1[2], v1[3], v1[4], a1);
}

void sub_1C20375CC(uint64_t a1, uint64_t a2)
{
  sub_1C20327D4(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void **)(v2 + 32));
}

void sub_1C20375D8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, void))
{
  if (!*a2)
  {
    sub_1C20359B8();
    uint64_t v7 = v6;
    uint64_t v8 = sub_1C1F23804(255, (unint64_t *)&qword_1EBF0C9C0);
    unint64_t v9 = a3(a1, v7, v8, MEMORY[0x1E4FBC0F0]);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

uint64_t sub_1C2037660(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  sub_1C2038198();
  uint64_t result = sub_1C214AA70();
  uint64_t v10 = result;
  if (v2)
  {
    id v4 = (uint64_t *)(a1 + 56);
    do
    {
      uint64_t v5 = *(v4 - 3);
      uint64_t v6 = *(v4 - 2);
      uint64_t v7 = *(v4 - 1);
      uint64_t v8 = *v4;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1C208DC08(&v9, v5, v6, v7, v8);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v4 += 4;
      --v2;
    }
    while (v2);
    return v10;
  }
  return result;
}

uint64_t sub_1C203771C(unint64_t a1)
{
  unint64_t v2 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_1C214B930();
    swift_bridgeObjectRelease();
  }
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8C0);
  sub_1C1F2F9D0((unint64_t *)&qword_1EBF0C8C8, (unint64_t *)&qword_1EBF0C8C0);
  uint64_t result = sub_1C214AA70();
  uint64_t v10 = result;
  if (v2)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_1C214B930();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v4) {
      return v10;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v4) {
      return v10;
    }
  }
  if (v4 >= 1)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v4; ++i)
      {
        uint64_t v6 = (void *)MEMORY[0x1C8753960](i, a1);
        sub_1C208DE10(&v9, v6);
      }
    }
    else
    {
      uint64_t v7 = (void **)(a1 + 32);
      do
      {
        uint64_t v8 = *v7++;
        sub_1C208DE10(&v9, v8);

        --v4;
      }
      while (v4);
    }
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C20378A4()
{
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1C20378E4(uint64_t a1, void *a2)
{
  return sub_1C2032A60(a1, a2, *(void *)(v2 + 16), *(void (**)(void *, uint64_t))(v2 + 24));
}

void sub_1C20378F0(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v32 = 0;
  int64_t v3 = 0;
  uint64_t v6 = *(void *)(a3 + 56);
  uint64_t v4 = a3 + 56;
  uint64_t v5 = v6;
  uint64_t v7 = 1 << *(unsigned char *)(v4 - 24);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & v5;
  uint64_t v33 = v4;
  int64_t v34 = (unint64_t)(v7 + 63) >> 6;
  while (1)
  {
    if (v9)
    {
      uint64_t v37 = (v9 - 1) & v9;
      int64_t v38 = v3;
      unint64_t v10 = __clz(__rbit64(v9)) | (v3 << 6);
      goto LABEL_21;
    }
    int64_t v11 = v3 + 1;
    if (__OFADD__(v3, 1)) {
      goto LABEL_47;
    }
    if (v11 >= v34)
    {
LABEL_44:
      swift_retain();
      sub_1C20588E4(a1, a2, v32, a3);
      return;
    }
    unint64_t v12 = *(void *)(v33 + 8 * v11);
    int64_t v13 = v3 + 1;
    if (!v12)
    {
      int64_t v13 = v3 + 2;
      if (v3 + 2 >= v34) {
        goto LABEL_44;
      }
      unint64_t v12 = *(void *)(v33 + 8 * v13);
      if (!v12)
      {
        int64_t v13 = v3 + 3;
        if (v3 + 3 >= v34) {
          goto LABEL_44;
        }
        unint64_t v12 = *(void *)(v33 + 8 * v13);
        if (!v12) {
          break;
        }
      }
    }
LABEL_20:
    uint64_t v37 = (v12 - 1) & v12;
    int64_t v38 = v13;
    unint64_t v10 = __clz(__rbit64(v12)) + (v13 << 6);
LABEL_21:
    unint64_t v36 = v10;
    id v15 = *(id *)(*(void *)(a3 + 48) + 8 * v10);
    id v16 = objc_msgSend(v15, sel_conceptIdentifiers);
    sub_1C1F12718(0, (unint64_t *)&qword_1EA2C2FA0);
    unint64_t v17 = sub_1C214A780();

    if (v17 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v18 = sub_1C214B930();
      if (!v18) {
        goto LABEL_4;
      }
    }
    else
    {
      uint64_t v18 = *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v18) {
        goto LABEL_4;
      }
    }
    if ((v17 & 0xC000000000000001) != 0) {
      id v19 = (id)MEMORY[0x1C8753960](0, v17);
    }
    else {
      id v19 = *(id *)(v17 + 32);
    }
    uint64_t v20 = v19;
    char v21 = sub_1C214B220();

    if (v21)
    {
LABEL_38:
      swift_bridgeObjectRelease_n();

      *(unint64_t *)((char *)a1 + ((v36 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v36;
      BOOL v29 = __OFADD__(v32++, 1);
      int64_t v3 = v38;
      unint64_t v9 = v37;
      if (v29) {
        goto LABEL_48;
      }
    }
    else
    {
      if (v18 != 1)
      {
        if ((v17 & 0xC000000000000001) != 0)
        {
          uint64_t v22 = 1;
          while (1)
          {
            MEMORY[0x1C8753960](v22, v17);
            uint64_t v23 = v22 + 1;
            if (__OFADD__(v22, 1)) {
              break;
            }
            char v24 = sub_1C214B220();
            swift_unknownObjectRelease();
            if (v24) {
              goto LABEL_38;
            }
            ++v22;
            if (v23 == v18) {
              goto LABEL_4;
            }
          }
          __break(1u);
        }
        else
        {
          uint64_t v25 = 5;
          while (1)
          {
            uint64_t v26 = v25 - 3;
            if (__OFADD__(v25 - 4, 1)) {
              break;
            }
            id v27 = *(id *)(v17 + 8 * v25);
            char v28 = sub_1C214B220();

            if (v28) {
              goto LABEL_38;
            }
            ++v25;
            if (v26 == v18) {
              goto LABEL_4;
            }
          }
        }
        __break(1u);
LABEL_47:
        __break(1u);
LABEL_48:
        __break(1u);
        goto LABEL_49;
      }
LABEL_4:
      swift_bridgeObjectRelease_n();

      int64_t v3 = v38;
      unint64_t v9 = v37;
    }
  }
  uint64_t v14 = v3 + 4;
  if (v3 + 4 >= v34) {
    goto LABEL_44;
  }
  unint64_t v12 = *(void *)(v33 + 8 * v14);
  if (v12)
  {
    int64_t v13 = v3 + 4;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v13 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v13 >= v34) {
      goto LABEL_44;
    }
    unint64_t v12 = *(void *)(v33 + 8 * v13);
    ++v14;
    if (v12) {
      goto LABEL_20;
    }
  }
LABEL_49:
  __break(1u);
}

uint64_t sub_1C2037C68(uint64_t a1, void *a2)
{
  v17[1] = *MEMORY[0x1E4F143B8];
  char v4 = *(unsigned char *)(a1 + 32);
  unsigned int v5 = v4 & 0x3F;
  unint64_t v6 = (unint64_t)((1 << v4) + 63) >> 6;
  uint64_t isStackAllocationSafe = a2;
  uint64_t v8 = (void *)isStackAllocationSafe;
  if (v5 <= 0xD || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1F4188790](isStackAllocationSafe);
    unint64_t v9 = (char *)v17 - ((8 * v6 + 15) & 0x3FFFFFFFFFFFFFF0);
    bzero(v9, 8 * v6);
    id v10 = v8;
    sub_1C20378F0((unint64_t *)v9, v6, a1);
    uint64_t v12 = v11;
    swift_release();

    if (v2) {
      swift_willThrow();
    }
  }
  else
  {
    int64_t v13 = (void *)swift_slowAlloc();
    bzero(v13, 8 * v6);
    id v14 = v8;
    sub_1C20378F0((unint64_t *)v13, v6, a1);
    uint64_t v12 = v15;
    swift_release();

    MEMORY[0x1C8754730](v13, -1, -1);
  }
  return v12;
}

void sub_1C2037E1C(uint64_t a1, void *a2)
{
  if ((a1 & 0xC000000000000001) == 0)
  {
    sub_1C2037C68(a1, a2);
    return;
  }
  uint64_t v29 = MEMORY[0x1E4FBC870];
  id v2 = a2;
  sub_1C214B680();
  if (!sub_1C214B700())
  {
LABEL_40:

    swift_release();
    return;
  }
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8A8);
  while (1)
  {
    swift_dynamicCast();
    id v3 = objc_msgSend(v28, sel_conceptIdentifiers);
    sub_1C1F12718(0, (unint64_t *)&qword_1EA2C2FA0);
    unint64_t v4 = sub_1C214A780();

    if (v4 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v5 = sub_1C214B930();
      if (!v5) {
        goto LABEL_4;
      }
    }
    else
    {
      uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v5) {
        goto LABEL_4;
      }
    }
    if ((v4 & 0xC000000000000001) != 0) {
      id v6 = (id)MEMORY[0x1C8753960](0, v4);
    }
    else {
      id v6 = *(id *)(v4 + 32);
    }
    uint64_t v7 = v6;
    char v8 = sub_1C214B220();

    if (v8)
    {
LABEL_11:
      swift_bridgeObjectRelease_n();
      uint64_t v9 = v29;
      unint64_t v10 = *(void *)(v29 + 16);
      if (*(void *)(v29 + 24) <= v10)
      {
        sub_1C208F014(v10 + 1);
        uint64_t v9 = v29;
      }
      uint64_t v11 = sub_1C214B210();
      uint64_t v12 = v9 + 56;
      uint64_t v13 = -1 << *(unsigned char *)(v9 + 32);
      unint64_t v14 = v11 & ~v13;
      unint64_t v15 = v14 >> 6;
      if (((-1 << v14) & ~*(void *)(v9 + 56 + 8 * (v14 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v9 + 56 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v20 = 0;
        unint64_t v21 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v21 && (v20 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v22 = v15 == v21;
          if (v15 == v21) {
            unint64_t v15 = 0;
          }
          v20 |= v22;
          uint64_t v23 = *(void *)(v12 + 8 * v15);
        }
        while (v23 == -1);
        unint64_t v16 = __clz(__rbit64(~v23)) + (v15 << 6);
      }
      *(void *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(void *)(*(void *)(v9 + 48) + 8 * v16) = v28;
      ++*(void *)(v9 + 16);
      goto LABEL_5;
    }
    if (v5 != 1) {
      break;
    }
LABEL_4:
    swift_bridgeObjectRelease_n();

LABEL_5:
    if (!sub_1C214B700()) {
      goto LABEL_40;
    }
  }
  if ((v4 & 0xC000000000000001) != 0)
  {
    uint64_t v17 = 1;
    while (1)
    {
      MEMORY[0x1C8753960](v17, v4);
      uint64_t v18 = v17 + 1;
      if (__OFADD__(v17, 1)) {
        break;
      }
      char v19 = sub_1C214B220();
      swift_unknownObjectRelease();
      if (v19) {
        goto LABEL_11;
      }
      ++v17;
      if (v18 == v5) {
        goto LABEL_4;
      }
    }
LABEL_41:
    __break(1u);
  }
  else
  {
    uint64_t v24 = 5;
    while (1)
    {
      uint64_t v25 = v24 - 3;
      if (__OFADD__(v24 - 4, 1)) {
        break;
      }
      id v26 = *(id *)(v4 + 8 * v24);
      char v27 = sub_1C214B220();

      if (v27) {
        goto LABEL_11;
      }
      ++v24;
      if (v25 == v5) {
        goto LABEL_4;
      }
    }
  }
  __break(1u);
}

unint64_t sub_1C2038198()
{
  unint64_t result = qword_1EA2C5A40;
  if (!qword_1EA2C5A40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C5A40);
  }
  return result;
}

void static UIImage.collectionViewChevron.getter()
{
}

id Symbol.ImageConfiguration.style.getter()
{
  return *v0;
}

double Symbol.ImageConfiguration.weight.getter()
{
  return *(double *)(v0 + 8);
}

uint64_t Symbol.ImageConfiguration.scale.getter()
{
  return *(void *)(v0 + 16);
}

uint64_t Symbol.ImageConfiguration.init(style:weight:scale:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  *(void *)a3 = result;
  *(double *)(a3 + 8) = a4;
  *(void *)(a3 + 16) = a2;
  return result;
}

unint64_t Symbol.systemName.getter()
{
  unint64_t result = 1937075312;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x2E6E6F7276656863;
      break;
    case 2:
      unint64_t result = 0xD000000000000010;
      break;
    case 3:
      unint64_t result = 0x69632E6B72616D78;
      break;
    case 4:
      unint64_t result = 0x6B636F6C63;
      break;
    default:
      return result;
  }
  return result;
}

id Symbol.uiImage.getter()
{
  uint64_t v0 = (void *)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  id v1 = objc_msgSend(self, sel_systemImageNamed_withConfiguration_, v0, 0);

  if (!v1)
  {
    __break(1u);
    JUMPOUT(0x1C2038404);
  }
  return v1;
}

UIImage __swiftcall Symbol.uiImage(configuration:)(UIImageConfiguration_optional configuration)
{
  id v1 = configuration.value.super.isa;
  id v2 = (void *)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  id v3 = objc_msgSend(self, sel_systemImageNamed_withConfiguration_, v2, v1);

  if (!v3)
  {
    __break(1u);
    JUMPOUT(0x1C203853CLL);
  }
  return (UIImage)v3;
}

UIImage Symbol.uiImage(imageConfiguration:)(uint64_t a1)
{
  return Symbol.uiImage(style:weight:scale:)(*(UIFontTextStyle *)a1, *(UIFontWeight *)(a1 + 8), *(UIImageSymbolScale *)(a1 + 16));
}

UIImage __swiftcall Symbol.uiImage(style:weight:scale:)(UIFontTextStyle style, UIFontWeight weight, UIImageSymbolScale scale)
{
  id v4 = objc_msgSend(self, sel__preferredFontForTextStyle_weight_, style, weight);
  if (!v4)
  {
    __break(1u);
    goto LABEL_5;
  }
  uint64_t v5 = v4;
  id v6 = objc_msgSend(self, sel_configurationWithFont_scale_, v4, scale);
  uint64_t v7 = (void *)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  id v8 = objc_msgSend(self, sel_systemImageNamed_withConfiguration_, v7, v6);

  if (!v8)
  {
LABEL_5:
    __break(1u);
    JUMPOUT(0x1C203873CLL);
  }

  return (UIImage)v8;
}

uint64_t Symbol.hash(into:)()
{
  return sub_1C214BB40();
}

BOOL static Symbol.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t Symbol.hashValue.getter()
{
  return sub_1C214BB80();
}

void static UIImage.dayHistoryViewChevron.getter()
{
}

void _sSo7UIImageC19HealthMedicationsUIE26collectionViewCellPlusSignABvgZ_0()
{
  uint64_t v0 = (void *)*MEMORY[0x1E4FB28C8];
  double v1 = *MEMORY[0x1E4FB09E0];
  id v2 = self;
  id v3 = v0;
  id v4 = objc_msgSend(v2, sel__preferredFontForTextStyle_weight_, v3, v1);
  if (v4)
  {
    uint64_t v5 = v4;
    id v6 = objc_msgSend(self, sel_configurationWithFont_scale_, v4, 2);
    uint64_t v7 = (void *)sub_1C214A5B0();
    id v8 = objc_msgSend(self, sel_systemImageNamed_withConfiguration_, v7, v6);

    if (v8)
    {

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_1C2038918()
{
}

void sub_1C2038924()
{
}

void sub_1C2038930(double *a1)
{
  double v1 = (void *)*MEMORY[0x1E4FB28C8];
  double v2 = *a1;
  id v3 = self;
  id v4 = v1;
  id v5 = objc_msgSend(v3, sel__preferredFontForTextStyle_weight_, v4, v2);
  if (v5)
  {
    id v6 = v5;
    id v7 = objc_msgSend(self, sel_configurationWithFont_scale_, v5, 1);
    id v8 = (void *)sub_1C214A5B0();
    id v9 = objc_msgSend(self, sel_systemImageNamed_withConfiguration_, v8, v7);

    if (v9)
    {

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

unint64_t sub_1C2038A60()
{
  unint64_t result = qword_1EA2C5A48;
  if (!qword_1EA2C5A48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C5A48);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for Symbol(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 4 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 4) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 4;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v8 = v6 - 5;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for Symbol(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C2038C10);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Symbol()
{
  return &type metadata for Symbol;
}

uint64_t initializeBufferWithCopyOfBuffer for Symbol.ImageConfiguration(uint64_t a1, uint64_t a2)
{
  int v3 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  id v4 = v3;
  return a1;
}

uint64_t assignWithCopy for Symbol.ImageConfiguration(uint64_t a1, uint64_t a2)
{
  id v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  return a1;
}

uint64_t assignWithTake for Symbol.ImageConfiguration(uint64_t a1, void *a2)
{
  id v4 = *(void **)a1;
  *(void *)a1 = *a2;

  *(void *)(a1 + 8) = a2[1];
  *(void *)(a1 + 16) = a2[2];
  return a1;
}

ValueMetadata *type metadata accessor for Symbol.ImageConfiguration()
{
  return &type metadata for Symbol.ImageConfiguration;
}

uint64_t sub_1C2038D30(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  uint64_t v4 = *a2;
  swift_beginAccess();
  *(void *)(v4 + 32) = v3;
  *(void *)(v4 + 40) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C2038D90()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1C2038DDC(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1C2038E30())()
{
  return j__swift_endAccess;
}

uint64_t sub_1C2038E84()
{
  id v1 = objc_msgSend(*(id *)(v0 + 16), sel_semanticIdentifier);
  id v2 = objc_msgSend(v1, sel_stringValue);

  uint64_t v3 = sub_1C214A5F0();
  return v3;
}

uint64_t sub_1C2038EFC()
{
  sub_1C1F0E374(0, &qword_1EBF0B7A0, MEMORY[0x1E4F66CD8], MEMORY[0x1E4FBB718]);
  uint64_t v2 = MEMORY[0x1F4188790](v1 - 8);
  uint64_t v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v2);
  id v6 = (char *)&v17 - v5;
  if (*(unsigned char *)(v0 + 24))
  {
    BOOL v7 = *(void **)(v0 + 16);
    if (*(unsigned char *)(v0 + 24) == 1)
    {
      id v8 = v7;
      sub_1C214AFE0();
      uint64_t v9 = sub_1C21494D0();
      uint64_t v10 = *(void *)(v9 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v6, 1, v9) != 1)
      {
        char v12 = sub_1C21494B0();
        (*(void (**)(char *, uint64_t))(v10 + 8))(v6, v9);
        goto LABEL_11;
      }
      uint64_t v11 = (uint64_t)v6;
    }
    else
    {
      id v13 = v7;
      sub_1C214AFE0();
      uint64_t v14 = sub_1C21494D0();
      uint64_t v15 = *(void *)(v14 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v4, 1, v14) != 1)
      {
        char v12 = sub_1C21494C0();
        (*(void (**)(char *, uint64_t))(v15 + 8))(v4, v14);
        goto LABEL_11;
      }
      uint64_t v11 = (uint64_t)v4;
    }
    sub_1C1FAEB7C(v11);
    char v12 = 0;
LABEL_11:

    return v12 & 1;
  }
  char v12 = 0;
  return v12 & 1;
}

uint64_t sub_1C203911C()
{
  return _sSo29HKMedicationUserDomainConceptC19HealthMedicationsUIE7medmoji0eF10Experience29MedicationVisualizationConfigVSgvg_0();
}

uint64_t sub_1C2039140()
{
  return sub_1C21494A0();
}

BOOL sub_1C2039194()
{
  char v1 = *(unsigned char *)(v0 + 24);
  id v2 = *(id *)(v0 + 16);
  sub_1C203B8A4(v2, v1);
  uint64_t v4 = v3;

  if (v4) {
    swift_bridgeObjectRelease();
  }
  return v4 != 0;
}

uint64_t sub_1C20391E4()
{
  char v1 = *(unsigned char *)(v0 + 24);
  id v2 = *(id *)(v0 + 16);
  uint64_t v3 = sub_1C203B8A4(v2, v1);
  uint64_t v5 = v4;

  if (!v5)
  {
    if (qword_1EA2C2710 != -1) {
      swift_once();
    }
    id v6 = (id)qword_1EA2C5D90;
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_1C2147730();
    swift_bridgeObjectRelease();
  }
  return v3;
}

void *sub_1C20392E0()
{
  id v1 = *(id *)(v0 + 16);
  id v2 = objc_msgSend(v1, sel_localizedOntologyEducationContent);
  uint64_t v3 = v2;
  if (v2)
  {
    id v4 = objc_msgSend(v2, sel_primarySection);

    if (v4)
    {
      sub_1C214B060();

      sub_1C203C458(0, (unint64_t *)&qword_1EA2C3A40, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
      sub_1C1F64558();
      uint64_t v3 = (void *)sub_1C214A580();

      swift_bridgeObjectRelease();
    }
    else
    {

      return 0;
    }
  }
  else
  {
  }
  return v3;
}

uint64_t sub_1C20393F0()
{
  id v1 = *(id *)(v0 + 16);
  sub_1C214B230();

  return sub_1C214BB40();
}

uint64_t MedicationInformationOverviewItem.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t MedicationInformationOverviewItem.__deallocating_deinit()
{
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_1C20394A8()
{
  return sub_1C214BB80();
}

uint64_t sub_1C20394FC()
{
  uint64_t v1 = *v0;
  swift_beginAccess();
  uint64_t v2 = *(void *)(v1 + 32);
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1C203954C()
{
  id v1 = objc_msgSend(*(id *)(*(void *)v0 + 16), sel_semanticIdentifier);
  id v2 = objc_msgSend(v1, sel_stringValue);

  uint64_t v3 = sub_1C214A5F0();
  return v3;
}

uint64_t sub_1C20395C8(uint64_t *a1, uint64_t *a2)
{
  return _s19HealthMedicationsUI33MedicationInformationOverviewItemC2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

uint64_t sub_1C20395D4()
{
  return sub_1C214BB80();
}

uint64_t sub_1C2039628()
{
  return sub_1C214BB40();
}

uint64_t sub_1C2039668()
{
  return sub_1C214BB80();
}

Swift::Void __swiftcall MedicationInformationOverviewItem.didSelectCell(_:in:)(UIView *_, UIViewController *in)
{
}

uint64_t MedicationInformationOverviewItem.deselectionBehavior(in:)()
{
  type metadata accessor for MedicationInformationOverviewItem();
  sub_1C203BD04(&qword_1EA2C5A50, v0, (void (*)(uint64_t))type metadata accessor for MedicationInformationOverviewItem);
  return sub_1C21484D0();
}

void sub_1C203974C(uint64_t a1, void *a2)
{
}

uint64_t sub_1C2039774()
{
  return sub_1C21484D0();
}

id sub_1C20397D0()
{
  uint64_t v1 = OBJC_IVAR____TtC19HealthMedicationsUI33MedicationInformationOverviewCell____lazy_storage___mainStackView;
  id v2 = *(void **)(v0
                + OBJC_IVAR____TtC19HealthMedicationsUI33MedicationInformationOverviewCell____lazy_storage___mainStackView);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC19HealthMedicationsUI33MedicationInformationOverviewCell____lazy_storage___mainStackView);
  }
  else
  {
    id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1C60]), sel_init);
    objc_msgSend(v4, sel_setAxis_, 1);
    objc_msgSend(v4, sel_setAlignment_, 0);
    objc_msgSend(v4, sel_setDistribution_, 0);
    objc_msgSend(v4, sel_setSpacing_, 8.0);
    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    id v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_1C20398A8()
{
  uint64_t v1 = OBJC_IVAR____TtC19HealthMedicationsUI33MedicationInformationOverviewCell____lazy_storage___criticalButtonStackView;
  id v2 = *(void **)(v0
                + OBJC_IVAR____TtC19HealthMedicationsUI33MedicationInformationOverviewCell____lazy_storage___criticalButtonStackView);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC19HealthMedicationsUI33MedicationInformationOverviewCell____lazy_storage___criticalButtonStackView);
  }
  else
  {
    id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1C60]), sel_init);
    objc_msgSend(v4, sel_setAxis_, 0);
    objc_msgSend(v4, sel_setAlignment_, 3);
    objc_msgSend(v4, sel_setDistribution_, 0);
    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    id v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_1C203996C()
{
  uint64_t v1 = OBJC_IVAR____TtC19HealthMedicationsUI33MedicationInformationOverviewCell____lazy_storage___criticalInformationButton;
  id v2 = *(void **)(v0
                + OBJC_IVAR____TtC19HealthMedicationsUI33MedicationInformationOverviewCell____lazy_storage___criticalInformationButton);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC19HealthMedicationsUI33MedicationInformationOverviewCell____lazy_storage___criticalInformationButton);
  }
  else
  {
    if (qword_1EA2C2710 != -1) {
      swift_once();
    }
    id v4 = (id)qword_1EA2C5D90;
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_1C2147730();
    uint64_t v7 = v6;
    swift_bridgeObjectRelease();

    _sSo8UIButtonC19HealthMedicationsUIE21makeExclamationButton5title29accessibilityIdentifierSuffixABSS_SStFZ_0(v5, v7, 0x616369746972432ELL, 0xE90000000000006CLL);
    uint64_t v9 = v8;
    swift_bridgeObjectRelease();
    LODWORD(v10) = 1148846080;
    objc_msgSend(v9, sel_setContentHuggingPriority_forAxis_, 0, v10, 0xE000000000000000);
    uint64_t v11 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v9;
    id v3 = v9;

    id v2 = 0;
  }
  id v12 = v2;
  return v3;
}

id sub_1C2039AC4()
{
  return sub_1C2039C48(&OBJC_IVAR____TtC19HealthMedicationsUI33MedicationInformationOverviewCell____lazy_storage___criticalInformationChevron);
}

id sub_1C2039AD0()
{
  uint64_t v1 = OBJC_IVAR____TtC19HealthMedicationsUI33MedicationInformationOverviewCell____lazy_storage___medmojiNameStackView;
  id v2 = *(void **)(v0
                + OBJC_IVAR____TtC19HealthMedicationsUI33MedicationInformationOverviewCell____lazy_storage___medmojiNameStackView);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC19HealthMedicationsUI33MedicationInformationOverviewCell____lazy_storage___medmojiNameStackView);
  }
  else
  {
    id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1C60]), sel_init);
    objc_msgSend(v4, sel_setDistribution_, 0);
    objc_msgSend(v4, sel_setSpacing_, 8.0);
    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    id v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_1C2039B80()
{
  uint64_t v1 = OBJC_IVAR____TtC19HealthMedicationsUI33MedicationInformationOverviewCell____lazy_storage___medmojiChevronStack;
  id v2 = *(void **)(v0
                + OBJC_IVAR____TtC19HealthMedicationsUI33MedicationInformationOverviewCell____lazy_storage___medmojiChevronStack);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC19HealthMedicationsUI33MedicationInformationOverviewCell____lazy_storage___medmojiChevronStack);
  }
  else
  {
    id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1C60]), sel_init);
    objc_msgSend(v4, sel_setAxis_, 0);
    objc_msgSend(v4, sel_setDistribution_, 0);
    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    id v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_1C2039C30()
{
  return sub_1C2039EAC(&OBJC_IVAR____TtC19HealthMedicationsUI33MedicationInformationOverviewCell____lazy_storage___medmojiChevronSpacer);
}

id sub_1C2039C3C()
{
  return sub_1C2039C48(&OBJC_IVAR____TtC19HealthMedicationsUI33MedicationInformationOverviewCell____lazy_storage___medmojiChevron);
}

id sub_1C2039C48(uint64_t *a1)
{
  uint64_t v2 = *a1;
  id v3 = *(void **)(v1 + *a1);
  if (v3)
  {
    id v4 = *(id *)(v1 + *a1);
  }
  else
  {
    uint64_t v5 = v1;
    sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8F0);
    id v6 = (void *)MEMORY[0x1C8753230]();
    LODWORD(v7) = 1148846080;
    objc_msgSend(v6, sel_setContentHuggingPriority_forAxis_, 0, v7);
    objc_msgSend(v6, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    id v8 = *(void **)(v5 + v2);
    *(void *)(v5 + v2) = v6;
    id v4 = v6;

    id v3 = 0;
  }
  id v9 = v3;
  return v4;
}

id sub_1C2039CF4()
{
  uint64_t v1 = OBJC_IVAR____TtC19HealthMedicationsUI33MedicationInformationOverviewCell____lazy_storage___medmojiChevronStackWidthConstraint;
  uint64_t v2 = *(void **)(v0
                + OBJC_IVAR____TtC19HealthMedicationsUI33MedicationInformationOverviewCell____lazy_storage___medmojiChevronStackWidthConstraint);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC19HealthMedicationsUI33MedicationInformationOverviewCell____lazy_storage___medmojiChevronStackWidthConstraint);
  }
  else
  {
    id v4 = sub_1C2039B80();
    id v5 = objc_msgSend(v4, sel_widthAnchor);

    id v6 = sub_1C2039AD0();
    id v7 = objc_msgSend(v6, sel_widthAnchor);

    id v8 = objc_msgSend(v5, sel_constraintEqualToAnchor_, v7);
    id v9 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v8;
    id v3 = v8;

    uint64_t v2 = 0;
  }
  id v10 = v2;
  return v3;
}

id sub_1C2039DC4()
{
  uint64_t v1 = OBJC_IVAR____TtC19HealthMedicationsUI33MedicationInformationOverviewCell____lazy_storage___medmojiView;
  uint64_t v2 = *(void **)(v0
                + OBJC_IVAR____TtC19HealthMedicationsUI33MedicationInformationOverviewCell____lazy_storage___medmojiView);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC19HealthMedicationsUI33MedicationInformationOverviewCell____lazy_storage___medmojiView);
  }
  else
  {
    uint64_t v4 = v0;
    id v5 = objc_msgSend(objc_allocWithZone((Class)sub_1C2148EF0()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
    id v6 = (id)*MEMORY[0x1E4F39EA8];
    sub_1C214B0D0();

    objc_msgSend(v5, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    id v7 = *(void **)(v4 + v1);
    *(void *)(v4 + v1) = v5;
    id v3 = v5;

    uint64_t v2 = 0;
  }
  id v8 = v2;
  return v3;
}

id sub_1C2039E90()
{
  return sub_1C2039F38(&OBJC_IVAR____TtC19HealthMedicationsUI33MedicationInformationOverviewCell____lazy_storage___nameLabel);
}

id sub_1C2039EA0()
{
  return sub_1C2039EAC(&OBJC_IVAR____TtC19HealthMedicationsUI33MedicationInformationOverviewCell____lazy_storage___medNameChevronSpacer);
}

id sub_1C2039EAC(uint64_t *a1)
{
  uint64_t v2 = *a1;
  id v3 = *(void **)(v1 + *a1);
  if (v3)
  {
    id v4 = *(id *)(v1 + *a1);
  }
  else
  {
    id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1EB0]), sel_init);
    id v6 = *(void **)(v1 + v2);
    *(void *)(v1 + v2) = v5;
    id v4 = v5;

    id v3 = 0;
  }
  id v7 = v3;
  return v4;
}

id sub_1C2039F1C()
{
  return sub_1C2039C48(&OBJC_IVAR____TtC19HealthMedicationsUI33MedicationInformationOverviewCell____lazy_storage___medNameChevron);
}

id sub_1C2039F28()
{
  return sub_1C2039F38(&OBJC_IVAR____TtC19HealthMedicationsUI33MedicationInformationOverviewCell____lazy_storage___informationContentLabel);
}

id sub_1C2039F38(uint64_t *a1)
{
  uint64_t v2 = *a1;
  id v3 = *(void **)(v1 + *a1);
  if (v3)
  {
    id v4 = *(id *)(v1 + *a1);
  }
  else
  {
    uint64_t v5 = v1;
    id v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
    sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8E0);
    id v7 = (void *)sub_1C214B0A0();
    objc_msgSend(v6, sel_setFont_, v7);

    objc_msgSend(v6, sel_setAdjustsFontForContentSizeCategory_, 1);
    objc_msgSend(v6, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    objc_msgSend(v6, sel_setNumberOfLines_, 3);
    id v8 = *(void **)(v5 + v2);
    *(void *)(v5 + v2) = v6;
    id v4 = v6;

    id v3 = 0;
  }
  id v9 = v3;
  return v4;
}

uint64_t sub_1C203A058(uint64_t a1, void *a2)
{
  sub_1C1F2116C(a1, (uint64_t)v5);
  uint64_t v3 = *a2 + OBJC_IVAR____TtC19HealthMedicationsUI33MedicationInformationOverviewCell_item;
  swift_beginAccess();
  sub_1C1F32DDC((uint64_t)v5, v3);
  swift_endAccess();
  sub_1C203AC04();
  return sub_1C1F374E4((uint64_t)v5);
}

uint64_t sub_1C203A0CC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI33MedicationInformationOverviewCell_item;
  swift_beginAccess();
  return sub_1C1F2116C(v3, a1);
}

uint64_t sub_1C203A120(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI33MedicationInformationOverviewCell_item;
  swift_beginAccess();
  sub_1C1F32DDC(a1, v3);
  swift_endAccess();
  sub_1C203AC04();
  return sub_1C1F374E4(a1);
}

uint64_t (*sub_1C203A190(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1C203A1F0;
}

uint64_t sub_1C203A1F0(uint64_t a1, char a2)
{
  uint64_t result = swift_endAccess();
  if ((a2 & 1) == 0) {
    return sub_1C203AC04();
  }
  return result;
}

id sub_1C203A224(double a1, double a2, double a3, double a4)
{
  v86[1] = swift_getObjectType();
  uint64_t v9 = sub_1C2149BE0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  id v12 = (char *)v86 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4[OBJC_IVAR____TtC19HealthMedicationsUI33MedicationInformationOverviewCell_state] = 2;
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI33MedicationInformationOverviewCell____lazy_storage___mainStackView] = 0;
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI33MedicationInformationOverviewCell____lazy_storage___criticalButtonStackView] = 0;
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI33MedicationInformationOverviewCell____lazy_storage___criticalInformationButton] = 0;
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI33MedicationInformationOverviewCell____lazy_storage___criticalInformationChevron] = 0;
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI33MedicationInformationOverviewCell____lazy_storage___medmojiNameStackView] = 0;
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI33MedicationInformationOverviewCell____lazy_storage___medmojiChevronStack] = 0;
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI33MedicationInformationOverviewCell____lazy_storage___medmojiChevronSpacer] = 0;
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI33MedicationInformationOverviewCell____lazy_storage___medmojiChevron] = 0;
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI33MedicationInformationOverviewCell____lazy_storage___medmojiChevronStackWidthConstraint] = 0;
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI33MedicationInformationOverviewCell____lazy_storage___medmojiView] = 0;
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI33MedicationInformationOverviewCell____lazy_storage___nameLabel] = 0;
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI33MedicationInformationOverviewCell____lazy_storage___medNameChevronSpacer] = 0;
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI33MedicationInformationOverviewCell____lazy_storage___medNameChevron] = 0;
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI33MedicationInformationOverviewCell____lazy_storage___informationContentLabel] = 0;
  id v13 = &v4[OBJC_IVAR____TtC19HealthMedicationsUI33MedicationInformationOverviewCell_item];
  uint64_t v14 = (objc_class *)type metadata accessor for MedicationInformationOverviewCell();
  *(_OWORD *)id v13 = 0u;
  *((_OWORD *)v13 + 1) = 0u;
  *((void *)v13 + 4) = 0;
  v89.receiver = v4;
  v89.super_class = v14;
  id v15 = objc_msgSendSuper2(&v89, sel_initWithFrame_, a1, a2, a3, a4);
  uint64_t v87 = sub_1C214A5F0();
  uint64_t v88 = v16;
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  v86[0] = v87;
  id v17 = v15;
  swift_bridgeObjectRelease();
  id v18 = sub_1C20398A8();
  id v19 = sub_1C203996C();
  objc_msgSend(v18, sel_addArrangedSubview_, v19);

  id v20 = sub_1C20398A8();
  id v21 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1EB0]), sel_init);
  objc_msgSend(v20, sel_addArrangedSubview_, v21);

  id v22 = sub_1C20398A8();
  id v23 = sub_1C2039AC4();
  objc_msgSend(v22, sel_addArrangedSubview_, v23);

  id v24 = sub_1C2039B80();
  id v25 = sub_1C2039DC4();
  objc_msgSend(v24, sel_addArrangedSubview_, v25);

  id v26 = sub_1C2039B80();
  id v27 = sub_1C2039C30();
  objc_msgSend(v26, sel_addArrangedSubview_, v27);

  id v28 = sub_1C2039B80();
  id v29 = sub_1C2039C3C();
  objc_msgSend(v28, sel_addArrangedSubview_, v29);

  id v30 = sub_1C2039AD0();
  id v31 = sub_1C2039B80();
  objc_msgSend(v30, sel_addArrangedSubview_, v31);

  id v32 = sub_1C2039AD0();
  id v33 = sub_1C2039E90();
  objc_msgSend(v32, sel_addArrangedSubview_, v33);

  id v34 = sub_1C2039AD0();
  id v35 = sub_1C2039EA0();
  objc_msgSend(v34, sel_addArrangedSubview_, v35);

  id v36 = sub_1C2039AD0();
  id v37 = sub_1C2039F1C();
  objc_msgSend(v36, sel_addArrangedSubview_, v37);

  id v38 = sub_1C20397D0();
  id v39 = sub_1C20398A8();
  objc_msgSend(v38, sel_addArrangedSubview_, v39);

  id v40 = sub_1C20397D0();
  id v41 = sub_1C2039AD0();
  objc_msgSend(v40, sel_addArrangedSubview_, v41);

  id v42 = sub_1C20397D0();
  id v43 = sub_1C2039F28();
  objc_msgSend(v42, sel_addArrangedSubview_, v43);

  id v44 = sub_1C20397D0();
  id v45 = sub_1C2039AD0();
  objc_msgSend(v44, sel_setCustomSpacing_afterView_, v45, 12.0);

  id v46 = objc_msgSend(v17, sel_contentView);
  id v47 = sub_1C20397D0();
  objc_msgSend(v46, sel_addSubview_, v47);

  sub_1C2149B70();
  sub_1C2149B20();
  double v49 = v48;
  double v51 = v50;
  double v53 = v52;
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  id v54 = sub_1C20397D0();
  id v55 = objc_msgSend(v17, sel_contentView);
  objc_msgSend(v54, sel_hk_alignHorizontalConstraintsWithView_insets_, v55, v49, v51, v53, 16.0);

  uint64_t v56 = self;
  sub_1C203C458(0, (unint64_t *)&qword_1EBF0CA10, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
  uint64_t v57 = swift_allocObject();
  *(_OWORD *)(v57 + 16) = xmmword_1C21510C0;
  id v58 = sub_1C20397D0();
  id v59 = objc_msgSend(v58, sel_topAnchor);

  id v60 = objc_msgSend(v17, sel_contentView);
  id v61 = objc_msgSend(v60, sel_topAnchor);

  id v62 = objc_msgSend(v59, sel_constraintEqualToAnchor_constant_, v61, 16.0);
  *(void *)(v57 + 32) = v62;
  id v63 = sub_1C20397D0();
  id v64 = objc_msgSend(v63, sel_bottomAnchor);

  id v65 = objc_msgSend(v17, sel_contentView);
  id v66 = objc_msgSend(v65, sel_bottomAnchor);

  id v67 = objc_msgSend(v64, sel_constraintEqualToAnchor_constant_, v66, -16.0);
  *(void *)(v57 + 40) = v67;
  id v68 = sub_1C2039DC4();
  id v69 = objc_msgSend(v68, sel_widthAnchor);

  id v70 = objc_msgSend(v69, sel_constraintEqualToConstant_, 33.0);
  *(void *)(v57 + 48) = v70;
  id v71 = sub_1C2039DC4();
  id v72 = objc_msgSend(v71, sel_heightAnchor);

  id v73 = objc_msgSend(v72, sel_constraintEqualToConstant_, 33.0);
  *(void *)(v57 + 56) = v73;
  uint64_t v87 = v57;
  sub_1C214A7A0();
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C810);
  uint64_t v74 = (void *)sub_1C214A770();
  swift_bridgeObjectRelease();
  objc_msgSend(v56, sel_activateConstraints_, v74);

  id v75 = sub_1C203996C();
  swift_bridgeObjectRetain();
  uint64_t v76 = (void *)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  objc_msgSend(v75, sel_setAccessibilityIdentifier_, v76);

  id v77 = sub_1C2039F28();
  swift_bridgeObjectRetain();
  unsigned int v78 = (void *)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  objc_msgSend(v77, sel_setAccessibilityIdentifier_, v78);
  swift_bridgeObjectRelease();

  id v79 = objc_msgSend(v17, sel_traitCollection);
  id v80 = objc_msgSend(v79, sel_preferredContentSizeCategory);

  *((unsigned char *)v17 + OBJC_IVAR____TtC19HealthMedicationsUI33MedicationInformationOverviewCell_state) = sub_1C214AE80() & 1;
  sub_1C1F0E374(0, (unint64_t *)&qword_1EA2C3D80, (uint64_t (*)(uint64_t))sub_1C1F7C864, MEMORY[0x1E4FBBE00]);
  uint64_t v81 = swift_allocObject();
  *(_OWORD *)(v81 + 16) = xmmword_1C214FCD0;
  uint64_t v82 = sub_1C2149C70();
  uint64_t v83 = MEMORY[0x1E4FB1138];
  *(void *)(v81 + 32) = v82;
  *(void *)(v81 + 40) = v83;
  id v84 = v17;
  sub_1C214B120();

  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  return v84;
}

uint64_t sub_1C203AC04()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1C21497F0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1F0E374(0, (unint64_t *)&qword_1EBF0B690, MEMORY[0x1E4F66C80], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v7 = (uint64_t)v1 + OBJC_IVAR____TtC19HealthMedicationsUI33MedicationInformationOverviewCell_item;
  swift_beginAccess();
  sub_1C1F2116C(v7, (uint64_t)v36);
  if (!v36[3])
  {
    sub_1C1F374E4((uint64_t)v36);
LABEL_6:
    sub_1C21497A0();
    id v20 = v1;
    id v21 = sub_1C21497E0();
    os_log_type_t v22 = sub_1C214ABD0();
    if (os_log_type_enabled(v21, v22))
    {
      id v23 = (uint8_t *)swift_slowAlloc();
      uint64_t v24 = swift_slowAlloc();
      uint64_t v34 = v2;
      uint64_t v35 = v24;
      uint64_t v25 = v24;
      *(_DWORD *)id v23 = 136446210;
      sub_1C1F2116C(v7, (uint64_t)v36);
      sub_1C1F24488();
      uint64_t v26 = sub_1C214A630();
      v36[0] = sub_1C1F6FD54(v26, v27, &v35);
      sub_1C214B530();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C1F0B000, v21, v22, "Incorrect view model for MedicationInformationOverviewItem: %{public}s", v23, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C8754730](v25, -1, -1);
      MEMORY[0x1C8754730](v23, -1, -1);

      return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v34);
    }
    else
    {

      return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    }
  }
  sub_1C1F248B4(0, (unint64_t *)&qword_1EBF0C2F0);
  type metadata accessor for MedicationInformationOverviewItem();
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_6;
  }
  uint64_t v8 = v35;
  id v9 = sub_1C20398A8();
  objc_msgSend(v9, sel_setHidden_, (sub_1C2038EFC() & 1) == 0);

  sub_1C203B0F0();
  id v10 = sub_1C2039DC4();
  _sSo29HKMedicationUserDomainConceptC19HealthMedicationsUIE7medmoji0eF10Experience29MedicationVisualizationConfigVSgvg_0();
  sub_1C2148ED0();

  id v11 = sub_1C2039E90();
  v36[0] = *(void *)(v8 + 16);
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8C0);
  sub_1C21494A0();
  id v12 = (void *)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  objc_msgSend(v11, sel_setText_, v12);

  id v13 = sub_1C2039F28();
  sub_1C20391E4();
  uint64_t v14 = (void *)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  objc_msgSend(v13, sel_setText_, v14);

  id v15 = sub_1C2039F28();
  LOBYTE(v13) = *(unsigned char *)(v8 + 24);
  id v16 = *(id *)(v8 + 16);
  sub_1C203B8A4(v16, (char)v13);
  uint64_t v18 = v17;

  if (v18)
  {
    swift_bridgeObjectRelease();
    id v19 = &selRef_labelColor;
  }
  else
  {
    id v19 = &selRef_secondaryLabelColor;
  }
  id v29 = [self *v19];
  objc_msgSend(v15, sel_setTextColor_, v29);

  char v30 = *(unsigned char *)(v8 + 24);
  id v31 = *(id *)(v8 + 16);
  sub_1C203B8A4(v31, v30);
  uint64_t v33 = v32;

  if (v33) {
    swift_bridgeObjectRelease();
  }
  objc_msgSend(v1, sel_setUserInteractionEnabled_, v33 != 0);
  return swift_release();
}

uint64_t sub_1C203B0F0()
{
  uint64_t v1 = v0;
  uint64_t v2 = v0 + OBJC_IVAR____TtC19HealthMedicationsUI33MedicationInformationOverviewCell_item;
  swift_beginAccess();
  sub_1C1F2116C(v2, (uint64_t)v35);
  if (!v36) {
    return sub_1C1F374E4((uint64_t)v35);
  }
  sub_1C1F248B4(0, (unint64_t *)&qword_1EBF0C2F0);
  type metadata accessor for MedicationInformationOverviewItem();
  uint64_t result = swift_dynamicCast();
  if (result)
  {
    if (!*(unsigned char *)(v1 + OBJC_IVAR____TtC19HealthMedicationsUI33MedicationInformationOverviewCell_state))
    {
      id v4 = sub_1C2039AD0();
      objc_msgSend(v4, sel_setAxis_, 0);

      id v5 = sub_1C2039AD0();
      objc_msgSend(v5, sel_setAlignment_, 3);

      LOBYTE(v5) = *(unsigned char *)(v34 + 24);
      id v6 = *(id *)(v34 + 16);
      sub_1C203B8A4(v6, (char)v5);
      uint64_t v8 = v7;

      if (v8)
      {
        swift_bridgeObjectRelease();
        char v9 = sub_1C2038EFC();
        id v10 = sub_1C2039AC4();
        id v11 = v10;
        if ((v9 & 1) == 0)
        {
          objc_msgSend(v10, sel_setHidden_, 1);

          id v12 = sub_1C2039F1C();
          id v13 = v12;
          uint64_t v24 = 0;
          goto LABEL_17;
        }
        objc_msgSend(v10, sel_setHidden_, 0);

        id v12 = sub_1C2039F1C();
        id v13 = v12;
      }
      else
      {
        id v23 = sub_1C2039AC4();
        objc_msgSend(v23, sel_setHidden_, 1);

        id v12 = sub_1C2039F1C();
        id v13 = v12;
      }
      uint64_t v24 = 1;
LABEL_17:
      objc_msgSend(v12, sel_setHidden_, v24);

      id v27 = sub_1C2039C3C();
      objc_msgSend(v27, sel_setHidden_, 1);

      id v28 = sub_1C2039CF4();
      objc_msgSend(v28, sel_setActive_, 0);

      id v29 = sub_1C2039C30();
      objc_msgSend(v29, sel_setHidden_, 1);

      id v30 = sub_1C2039EA0();
      objc_msgSend(v30, sel_setHidden_, 0);
LABEL_20:

      return swift_release();
    }
    if (*(unsigned char *)(v1 + OBJC_IVAR____TtC19HealthMedicationsUI33MedicationInformationOverviewCell_state) != 1)
    {
      uint64_t result = sub_1C214B910();
      __break(1u);
      return result;
    }
    id v14 = sub_1C2039AD0();
    objc_msgSend(v14, sel_setAxis_, 1);

    id v15 = sub_1C2039AD0();
    objc_msgSend(v15, sel_setAlignment_, 1);

    LOBYTE(v15) = *(unsigned char *)(v34 + 24);
    id v16 = *(id *)(v34 + 16);
    sub_1C203B8A4(v16, (char)v15);
    uint64_t v18 = v17;

    if (v18)
    {
      swift_bridgeObjectRelease();
      char v19 = sub_1C2038EFC();
      id v20 = sub_1C2039AC4();
      id v21 = v20;
      if ((v19 & 1) == 0)
      {
        objc_msgSend(v20, sel_setHidden_, 1);

        id v31 = sub_1C2039F1C();
        objc_msgSend(v31, sel_setHidden_, 1);

        id v26 = sub_1C2039C3C();
        objc_msgSend(v26, sel_setHidden_, 0);
        goto LABEL_19;
      }
      uint64_t v22 = 0;
    }
    else
    {
      id v20 = sub_1C2039AC4();
      id v21 = v20;
      uint64_t v22 = 1;
    }
    objc_msgSend(v20, sel_setHidden_, v22);

    id v25 = sub_1C2039F1C();
    objc_msgSend(v25, sel_setHidden_, 1);

    id v26 = sub_1C2039C3C();
    objc_msgSend(v26, sel_setHidden_, 1);
LABEL_19:

    id v32 = sub_1C2039CF4();
    objc_msgSend(v32, sel_setActive_, 1);

    id v33 = sub_1C2039C30();
    objc_msgSend(v33, sel_setHidden_, 0);

    id v30 = sub_1C2039EA0();
    objc_msgSend(v30, sel_setHidden_, 1);
    goto LABEL_20;
  }
  return result;
}

void sub_1C203B520(uint64_t a1, uint64_t a2)
{
  id v3 = sub_1C203996C();
  if (!a2)
  {
    sub_1C214A5F0();
    swift_bridgeObjectRetain();
    sub_1C214A6C0();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  id v4 = (void *)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setAccessibilityIdentifier_, v4);

  id v5 = sub_1C2039F28();
  if (!a2)
  {
    sub_1C214A5F0();
    swift_bridgeObjectRetain();
    sub_1C214A6C0();
    swift_bridgeObjectRelease();
    id v6 = sub_1C2039F28();
    id v7 = objc_msgSend(v6, sel_text);

    if (v7)
    {
      sub_1C214A5F0();
    }
    swift_bridgeObjectRetain();
    sub_1C214A6C0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  id v8 = (id)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  objc_msgSend(v5, sel_setAccessibilityIdentifier_, v8);
}

id MedicationInformationOverviewCell.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MedicationInformationOverviewCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1C203B880(uint64_t a1, uint64_t a2)
{
}

uint64_t sub_1C203B8A4(void *a1, char a2)
{
  if (!a2)
  {
    id v2 = a1;
    id v6 = objc_msgSend(v2, sel_localizedOntologyEducationContent);
    if (v6)
    {
      id v4 = v6;
      sub_1C1F12718(0, (unint64_t *)&unk_1EA2C4680);
      uint64_t v5 = sub_1C21480A0();
      goto LABEL_9;
    }
LABEL_10:

    return 0;
  }
  if (a2 != 1)
  {
    id v2 = a1;
    id v7 = objc_msgSend(v2, sel_localizedOntologyEducationContent);
    if (v7)
    {
      id v4 = v7;
      sub_1C1F12718(0, (unint64_t *)&unk_1EA2C4680);
      uint64_t v5 = sub_1C21480B0();
      goto LABEL_9;
    }
    goto LABEL_10;
  }
  id v2 = a1;
  id v3 = objc_msgSend(v2, sel_localizedOntologyEducationContent);
  if (!v3) {
    goto LABEL_10;
  }
  id v4 = v3;
  sub_1C1F12718(0, (unint64_t *)&unk_1EA2C4680);
  uint64_t v5 = sub_1C21480C0();
LABEL_9:
  uint64_t v8 = v5;

  return v8;
}

uint64_t _s19HealthMedicationsUI33MedicationInformationOverviewItemC2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  id v3 = objc_msgSend(*(id *)(a1 + 16), sel_semanticIdentifier);
  id v4 = objc_msgSend(v3, sel_stringValue);

  uint64_t v5 = sub_1C214A5F0();
  uint64_t v7 = v6;

  id v8 = objc_msgSend(*(id *)(a2 + 16), sel_semanticIdentifier);
  id v9 = objc_msgSend(v8, sel_stringValue);

  uint64_t v10 = sub_1C214A5F0();
  uint64_t v12 = v11;

  if (v5 == v10 && v7 == v12) {
    char v14 = 1;
  }
  else {
    char v14 = sub_1C214BA80();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v14 & 1;
}

void sub_1C203BB0C(void *a1)
{
  char v3 = *(unsigned char *)(v1 + 24);
  id v4 = *(id *)(v1 + 16);
  uint64_t v5 = sub_1C20391E4();
  uint64_t v7 = v6;
  id v8 = sub_1C20392E0();
  uint64_t v10 = v9;
  uint64_t v11 = objc_allocWithZone((Class)type metadata accessor for MedicationSecondaryEducationViewController());
  v11[qword_1EA2C47E0] = v3;
  type metadata accessor for MedicationSecondaryEducationCompoundDataSource(0);
  swift_allocObject();
  type metadata accessor for MedicationSecondaryEducationDataSource(0);
  uint64_t v12 = swift_allocObject();
  id v13 = v11;
  uint64_t v14 = sub_1C20D8758(v3, v4, v5, v7, (uint64_t)v8, v10, v12);
  sub_1C1F24848();
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1C214FCD0;
  uint64_t v16 = sub_1C203BD04((unint64_t *)&qword_1EA2C47F8, 255, (void (*)(uint64_t))type metadata accessor for MedicationSecondaryEducationDataSource);
  *(void *)(v15 + 32) = v14;
  *(void *)(v15 + 40) = v16;
  sub_1C2148840();

  swift_retain();
  id v19 = (id)sub_1C2148AC0();
  objc_msgSend(v19, sel_setModalPresentationStyle_, 2);

  swift_release();
  id v17 = objc_msgSend(a1, sel_navigationController);
  if (v17)
  {
    uint64_t v18 = v17;
    objc_msgSend(v17, sel_pushViewController_animated_, v19, 1);
  }
}

uint64_t type metadata accessor for MedicationInformationOverviewItem()
{
  return self;
}

uint64_t sub_1C203BD04(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for MedicationInformationOverviewCell()
{
  return self;
}

uint64_t sub_1C203BD70(uint64_t a1, uint64_t a2)
{
  return sub_1C203BD04(&qword_1EA2C5A60, a2, (void (*)(uint64_t))type metadata accessor for MedicationInformationOverviewItem);
}

uint64_t sub_1C203BDB8@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 40);
  *a2 = *(void *)(v3 + 32);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C203BE08@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC19HealthMedicationsUI33MedicationInformationOverviewCell_item;
  swift_beginAccess();
  return sub_1C1F2116C(v3, a2);
}

uint64_t method lookup function for MedicationInformationOverviewItem(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MedicationInformationOverviewItem);
}

uint64_t dispatch thunk of MedicationInformationOverviewItem.reuseIdentifier.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t dispatch thunk of MedicationInformationOverviewItem.reuseIdentifier.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of MedicationInformationOverviewItem.reuseIdentifier.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of MedicationInformationOverviewItem.uniqueIdentifier.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of MedicationInformationOverviewItem.isCritical.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of MedicationInformationOverviewItem.medmoji.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t dispatch thunk of MedicationInformationOverviewItem.name.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t dispatch thunk of MedicationInformationOverviewItem.hasContent.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t dispatch thunk of MedicationInformationOverviewItem.informationContent.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t dispatch thunk of MedicationInformationOverviewItem.attribution.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t dispatch thunk of MedicationInformationOverviewItem.hash(into:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

uint64_t dispatch thunk of MedicationInformationOverviewItem.hashValue.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t method lookup function for MedicationInformationOverviewCell(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MedicationInformationOverviewCell);
}

uint64_t dispatch thunk of MedicationInformationOverviewCell.item.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x238))();
}

uint64_t dispatch thunk of MedicationInformationOverviewCell.item.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x240))();
}

uint64_t dispatch thunk of MedicationInformationOverviewCell.item.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x248))();
}

uint64_t dispatch thunk of MedicationInformationOverviewCell.updateAutomationIdentifiers(with:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x280))();
}

unsigned char *storeEnumTagSinglePayload for MedicationInformationOverviewCell.PresentationStyle(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C203C200);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MedicationInformationOverviewCell.PresentationStyle()
{
  return &type metadata for MedicationInformationOverviewCell.PresentationStyle;
}

unint64_t sub_1C203C23C()
{
  unint64_t result = qword_1EA2C5AE0;
  if (!qword_1EA2C5AE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C5AE0);
  }
  return result;
}

void sub_1C203C290(unsigned __int8 *a1)
{
  id v2 = objc_msgSend(a1, sel_traitCollection);
  id v5 = objc_msgSend(v2, sel_preferredContentSizeCategory);

  char v3 = sub_1C214AE80();
  int v4 = a1[OBJC_IVAR____TtC19HealthMedicationsUI33MedicationInformationOverviewCell_state];
  a1[OBJC_IVAR____TtC19HealthMedicationsUI33MedicationInformationOverviewCell_state] = v3 & 1;
  if (v4 != (v3 & 1)) {
    sub_1C203B0F0();
  }
}

void sub_1C203C328()
{
  v0[OBJC_IVAR____TtC19HealthMedicationsUI33MedicationInformationOverviewCell_state] = 2;
  *(void *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI33MedicationInformationOverviewCell____lazy_storage___mainStackView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI33MedicationInformationOverviewCell____lazy_storage___criticalButtonStackView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI33MedicationInformationOverviewCell____lazy_storage___criticalInformationButton] = 0;
  *(void *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI33MedicationInformationOverviewCell____lazy_storage___criticalInformationChevron] = 0;
  *(void *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI33MedicationInformationOverviewCell____lazy_storage___medmojiNameStackView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI33MedicationInformationOverviewCell____lazy_storage___medmojiChevronStack] = 0;
  *(void *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI33MedicationInformationOverviewCell____lazy_storage___medmojiChevronSpacer] = 0;
  *(void *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI33MedicationInformationOverviewCell____lazy_storage___medmojiChevron] = 0;
  *(void *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI33MedicationInformationOverviewCell____lazy_storage___medmojiChevronStackWidthConstraint] = 0;
  *(void *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI33MedicationInformationOverviewCell____lazy_storage___medmojiView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI33MedicationInformationOverviewCell____lazy_storage___nameLabel] = 0;
  *(void *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI33MedicationInformationOverviewCell____lazy_storage___medNameChevronSpacer] = 0;
  *(void *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI33MedicationInformationOverviewCell____lazy_storage___medNameChevron] = 0;
  *(void *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI33MedicationInformationOverviewCell____lazy_storage___informationContentLabel] = 0;
  uint64_t v1 = &v0[OBJC_IVAR____TtC19HealthMedicationsUI33MedicationInformationOverviewCell_item];
  *(_OWORD *)uint64_t v1 = 0u;
  *((_OWORD *)v1 + 1) = 0u;
  *((void *)v1 + 4) = 0;

  sub_1C214B910();
  __break(1u);
}

void sub_1C203C458(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1C203C4A4()
{
  sub_1C1F13C84(0, (unint64_t *)&qword_1EA2C3298);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1C214FCC0;
  *(void *)(v0 + 32) = sub_1C214A5F0();
  *(void *)(v0 + 40) = v1;
  strcpy((char *)(v0 + 48), "DayHistoryView");
  *(unsigned char *)(v0 + 63) = -18;
  id v2 = (void *)sub_1C214A770();
  swift_bridgeObjectRelease();
  id v3 = (id)HKUIJoinStringsForAutomationIdentifier();

  if (v3)
  {
    uint64_t v4 = sub_1C214A5F0();
    uint64_t v6 = v5;

    qword_1EA2C7FD8 = v4;
    unk_1EA2C7FE0 = v6;
  }
  else
  {
    __break(1u);
  }
}

void sub_1C203C590()
{
  qword_1EA2C5AE8 = 0x4014000000000000;
}

void sub_1C203C5A0()
{
  qword_1EA2C5AF0 = 0x4000000000000000;
}

void sub_1C203C5B0()
{
  qword_1EA2C5AF8 = 0x4020000000000000;
}

id sub_1C203C5C0()
{
  return sub_1C203C784(&OBJC_IVAR____TtC19HealthMedicationsUI25MedicationsDayHistoryView____lazy_storage___doseStatusImageView, (Class *)0x1E4FB1838);
}

id sub_1C203C5D4()
{
  return sub_1C203C634(&OBJC_IVAR____TtC19HealthMedicationsUI25MedicationsDayHistoryView____lazy_storage___timeLabel, (uint64_t (*)(void))sub_1C2040208);
}

id sub_1C203C5F4()
{
  return sub_1C203C634(&OBJC_IVAR____TtC19HealthMedicationsUI25MedicationsDayHistoryView____lazy_storage___elapsedTimeLabel, (uint64_t (*)(void))sub_1C20403AC);
}

id sub_1C203C614()
{
  return sub_1C203C634(&OBJC_IVAR____TtC19HealthMedicationsUI25MedicationsDayHistoryView____lazy_storage___chevronImage, (uint64_t (*)(void))sub_1C203C694);
}

id sub_1C203C634(uint64_t *a1, uint64_t (*a2)(void))
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(void **)(v2 + *a1);
  if (v4)
  {
    id v5 = *(id *)(v2 + *a1);
  }
  else
  {
    uint64_t v6 = (void *)a2();
    uint64_t v7 = *(void **)(v2 + v3);
    *(void *)(v2 + v3) = v6;
    id v5 = v6;

    uint64_t v4 = 0;
  }
  id v8 = v4;
  return v5;
}

id sub_1C203C694()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1838]), sel_init);
  sub_1C2038924();
  uint64_t v2 = v1;
  objc_msgSend(v0, sel_setImage_, v1);

  objc_msgSend(v0, sel_setContentMode_, 1);
  objc_msgSend(v0, sel_setAdjustsImageSizeForAccessibilityContentSizeCategory_, 1);
  LODWORD(v3) = 1148846080;
  objc_msgSend(v0, sel_setContentCompressionResistancePriority_forAxis_, 0, v3);
  id v4 = objc_msgSend(self, sel_systemGrayColor);
  objc_msgSend(v0, sel_setTintColor_, v4);

  return v0;
}

id sub_1C203C770()
{
  return sub_1C203C784(&OBJC_IVAR____TtC19HealthMedicationsUI25MedicationsDayHistoryView____lazy_storage___headerStackView, (Class *)0x1E4FB1C60);
}

id sub_1C203C784(uint64_t *a1, Class *a2)
{
  uint64_t v3 = *a1;
  id v4 = *(void **)(v2 + *a1);
  if (v4)
  {
    id v5 = *(id *)(v2 + *a1);
  }
  else
  {
    id v6 = objc_msgSend(objc_allocWithZone(*a2), sel_init);
    uint64_t v7 = *(void **)(v2 + v3);
    *(void *)(v2 + v3) = v6;
    id v5 = v6;

    id v4 = 0;
  }
  id v8 = v4;
  return v5;
}

id sub_1C203C7F0()
{
  uint64_t v1 = OBJC_IVAR____TtC19HealthMedicationsUI25MedicationsDayHistoryView____lazy_storage___lineItemsStackView;
  uint64_t v2 = *(void **)(v0
                + OBJC_IVAR____TtC19HealthMedicationsUI25MedicationsDayHistoryView____lazy_storage___lineItemsStackView);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC19HealthMedicationsUI25MedicationsDayHistoryView____lazy_storage___lineItemsStackView);
  }
  else
  {
    id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1C60]), sel_init);
    objc_msgSend(v4, sel_setAxis_, 1);
    objc_msgSend(v4, sel_setAlignment_, 1);
    objc_msgSend(v4, sel_setDistribution_, 0);
    objc_msgSend(v4, sel_setSpacing_, 8.0);
    id v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

void sub_1C203C8B4(unsigned __int8 a1)
{
  int v2 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC19HealthMedicationsUI25MedicationsDayHistoryView_state);
  *(unsigned char *)(v1 + OBJC_IVAR____TtC19HealthMedicationsUI25MedicationsDayHistoryView_state) = a1;
  if (a1 == 2)
  {
    __break(1u);
  }
  else if (v2 != a1)
  {
    sub_1C203D1C8();
    if (*(void *)(v1 + OBJC_IVAR____TtC19HealthMedicationsUI25MedicationsDayHistoryView_lineItems))
    {
      if (*(unsigned char *)(v1 + OBJC_IVAR____TtC19HealthMedicationsUI25MedicationsDayHistoryView_previousDisplayContext))
      {
        uint64_t v3 = swift_bridgeObjectRetain();
        sub_1C203E7B4(v3);
        swift_bridgeObjectRelease();
      }
    }
  }
}

char *sub_1C203C948(double a1, double a2, double a3, double a4)
{
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI25MedicationsDayHistoryView____lazy_storage___doseStatusImageView] = 0;
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI25MedicationsDayHistoryView____lazy_storage___timeLabel] = 0;
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI25MedicationsDayHistoryView____lazy_storage___elapsedTimeLabel] = 0;
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI25MedicationsDayHistoryView____lazy_storage___chevronImage] = 0;
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI25MedicationsDayHistoryView____lazy_storage___headerStackView] = 0;
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI25MedicationsDayHistoryView____lazy_storage___lineItemsStackView] = 0;
  v4[OBJC_IVAR____TtC19HealthMedicationsUI25MedicationsDayHistoryView_state] = 2;
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI25MedicationsDayHistoryView_lineItems] = 0;
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI25MedicationsDayHistoryView_timer] = 0;
  uint64_t v9 = &v4[OBJC_IVAR____TtC19HealthMedicationsUI25MedicationsDayHistoryView_timeTextCache];
  *uint64_t v9 = 0;
  v9[1] = 0;
  uint64_t v10 = &v4[OBJC_IVAR____TtC19HealthMedicationsUI25MedicationsDayHistoryView_elapsedTimeCache];
  uint64_t v11 = sub_1C2147AC0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v10, 1, 1, v11);
  v4[OBJC_IVAR____TtC19HealthMedicationsUI25MedicationsDayHistoryView_previousDisplayContext] = 2;
  v20.receiver = v4;
  v20.super_class = (Class)type metadata accessor for MedicationsDayHistoryView();
  uint64_t v12 = (char *)objc_msgSendSuper2(&v20, sel_initWithFrame_, a1, a2, a3, a4);
  sub_1C203CD70();
  id v13 = self;
  uint64_t v14 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v19[4] = sub_1C2040708;
  v19[5] = v14;
  v19[0] = MEMORY[0x1E4F143A8];
  v19[1] = 1107296256;
  v19[2] = sub_1C203D9F8;
  void v19[3] = &block_descriptor_17;
  uint64_t v15 = _Block_copy(v19);
  swift_release();
  id v16 = objc_msgSend(v13, sel_scheduledTimerWithTimeInterval_repeats_block_, 1, v15, 60.0);
  _Block_release(v15);
  id v17 = *(void **)&v12[OBJC_IVAR____TtC19HealthMedicationsUI25MedicationsDayHistoryView_timer];
  *(void *)&v12[OBJC_IVAR____TtC19HealthMedicationsUI25MedicationsDayHistoryView_timer] = v16;

  return v12;
}

id sub_1C203CBDC()
{
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC19HealthMedicationsUI25MedicationsDayHistoryView_timer];
  if (v1) {
    objc_msgSend(v1, sel_invalidate);
  }
  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for MedicationsDayHistoryView();
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t sub_1C203CD70()
{
  uint64_t v1 = v0;
  swift_getObjectType();
  sub_1C1F13C84(0, (unint64_t *)&qword_1EBF0CA10);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1C214FCB0;
  *(void *)(v2 + 32) = sub_1C203C770();
  *(void *)(v2 + 40) = sub_1C203C7F0();
  sub_1C214A7A0();
  id v3 = objc_allocWithZone(MEMORY[0x1E4FB1C60]);
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8F0);
  id v4 = (void *)sub_1C214A770();
  swift_bridgeObjectRelease();
  id v5 = objc_msgSend(v3, sel_initWithArrangedSubviews_, v4);

  objc_msgSend(v5, sel_setAxis_, 1);
  objc_msgSend(v5, sel_setSpacing_, 12.0);
  objc_msgSend(v0, sel_addSubview_, v5);
  objc_msgSend(v5, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  id v6 = self;
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1C21510C0;
  id v8 = objc_msgSend(v5, sel_leadingAnchor);
  id v9 = objc_msgSend(v1, sel_leadingAnchor);
  id v10 = objc_msgSend(v8, sel_constraintEqualToAnchor_, v9);

  *(void *)(v7 + 32) = v10;
  id v11 = objc_msgSend(v5, sel_trailingAnchor);
  id v12 = objc_msgSend(v1, sel_trailingAnchor);
  id v13 = objc_msgSend(v11, sel_constraintEqualToAnchor_, v12);

  *(void *)(v7 + 40) = v13;
  id v14 = objc_msgSend(v5, sel_topAnchor);
  id v15 = objc_msgSend(v1, sel_topAnchor);
  id v16 = objc_msgSend(v14, sel_constraintEqualToAnchor_, v15);

  *(void *)(v7 + 48) = v16;
  id v17 = objc_msgSend(v5, sel_bottomAnchor);
  id v18 = objc_msgSend(v1, sel_bottomAnchor);
  id v19 = objc_msgSend(v17, sel_constraintEqualToAnchor_, v18);

  *(void *)(v7 + 56) = v19;
  sub_1C214A7A0();
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C810);
  objc_super v20 = (void *)sub_1C214A770();
  swift_bridgeObjectRelease();
  objc_msgSend(v6, sel_activateConstraints_, v20);

  id v21 = objc_msgSend(v1, sel_traitCollection);
  id v22 = objc_msgSend(v21, sel_preferredContentSizeCategory);

  char v23 = sub_1C214AE80();
  sub_1C203C8B4(v23 & 1);
  sub_1C1F173BC(0, (unint64_t *)&qword_1EA2C3D80, (uint64_t (*)(uint64_t))sub_1C1F7C864, MEMORY[0x1E4FBBE00]);
  uint64_t v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_1C214FCD0;
  uint64_t v25 = sub_1C2149C70();
  uint64_t v26 = MEMORY[0x1E4FB1138];
  *(void *)(v24 + 32) = v25;
  *(void *)(v24 + 40) = v26;
  sub_1C214B120();

  swift_unknownObjectRelease();

  return swift_bridgeObjectRelease();
}

void sub_1C203D1C8()
{
  uint64_t v1 = v0;
  id v2 = sub_1C203C770();
  sub_1C214B0E0();

  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC19HealthMedicationsUI25MedicationsDayHistoryView_state))
  {
    if (*(unsigned char *)(v1 + OBJC_IVAR____TtC19HealthMedicationsUI25MedicationsDayHistoryView_state) != 1)
    {
      sub_1C214B910();
      __break(1u);
      return;
    }
    sub_1C1F13C84(0, (unint64_t *)&qword_1EBF0CA10);
    uint64_t v28 = swift_allocObject();
    *(_OWORD *)(v28 + 16) = xmmword_1C21544C0;
    *(void *)(v28 + 32) = sub_1C203C5C0();
    *(void *)(v28 + 40) = sub_1C203C5D4();
    *(void *)(v28 + 48) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1EB0]), sel_init);
    *(void *)(v28 + 56) = sub_1C203C614();
    sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8F0);
    if (qword_1EA2C26F8 != -1) {
      swift_once();
    }
    *(void *)(v28 + 64) = sub_1C214B100();
    sub_1C214A7A0();
    id v29 = objc_allocWithZone(MEMORY[0x1E4FB1C60]);
    id v30 = (void *)sub_1C214A770();
    swift_bridgeObjectRelease();
    id v31 = objc_msgSend(v29, sel_initWithArrangedSubviews_, v30);

    if (qword_1EA2C26E8 != -1) {
      swift_once();
    }
    double v32 = *(double *)&qword_1EA2C5AE8;
    id v33 = sub_1C203C5C0();
    objc_msgSend(v31, sel_setCustomSpacing_afterView_, v33, v32);

    objc_msgSend(v31, sel_setAxis_, 0);
    objc_msgSend(v31, sel_setAlignment_, 1);
    id v34 = v31;
    id v35 = sub_1C203C5F4();
    id v36 = v34;
    id v37 = sub_1C203C770();
    objc_msgSend(v37, sel_addArrangedSubview_, v36);

    id v38 = v35;
    id v39 = sub_1C203C770();
    objc_msgSend(v39, sel_addArrangedSubview_, v38);

    id v40 = sub_1C203C770();
    objc_msgSend(v40, sel_setAxis_, 1);

    id v41 = sub_1C203C770();
    objc_msgSend(v41, sel_setAlignment_, 0);
  }
  else
  {
    id v3 = sub_1C203C5C0();
    id v4 = sub_1C203C5D4();
    id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1EB0]), sel_init);
    id v6 = sub_1C203C5F4();
    id v7 = sub_1C203C614();
    sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8F0);
    if (qword_1EA2C26F8 != -1) {
      swift_once();
    }
    id v8 = (void *)sub_1C214B100();
    id v9 = v3;
    id v10 = sub_1C203C770();
    objc_msgSend(v10, sel_addArrangedSubview_, v9);

    id v11 = v4;
    id v12 = sub_1C203C770();
    objc_msgSend(v12, sel_addArrangedSubview_, v11);

    id v13 = v5;
    id v14 = sub_1C203C770();
    objc_msgSend(v14, sel_addArrangedSubview_, v13);

    id v15 = v6;
    id v16 = sub_1C203C770();
    objc_msgSend(v16, sel_addArrangedSubview_, v15);

    id v17 = v7;
    id v18 = sub_1C203C770();
    objc_msgSend(v18, sel_addArrangedSubview_, v17);

    id v19 = v8;
    id v20 = sub_1C203C770();
    objc_msgSend(v20, sel_addArrangedSubview_, v19);

    id v21 = sub_1C203C770();
    if (qword_1EA2C26E8 != -1) {
      swift_once();
    }
    double v22 = *(double *)&qword_1EA2C5AE8;
    id v23 = sub_1C203C5C0();
    objc_msgSend(v21, sel_setCustomSpacing_afterView_, v23, v22);

    id v24 = sub_1C203C770();
    if (qword_1EA2C26F0 != -1) {
      swift_once();
    }
    double v25 = *(double *)&qword_1EA2C5AF0;
    id v26 = sub_1C203C5F4();
    objc_msgSend(v24, sel_setCustomSpacing_afterView_, v26, v25);

    id v27 = sub_1C203C770();
    objc_msgSend(v27, sel_setAxis_, 0);

    id v41 = sub_1C203C770();
    objc_msgSend(v41, sel_setAlignment_, 1);
  }
}

void sub_1C203D7BC(uint64_t a1, uint64_t a2)
{
  sub_1C1F173BC(0, &qword_1EBF0B1F0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  uint64_t v4 = MEMORY[0x1F4188790](v3 - 8);
  id v6 = &v22[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v4);
  id v8 = &v22[-v7];
  swift_beginAccess();
  id v9 = (char *)MEMORY[0x1C8754850](a2 + 16);
  if (v9)
  {
    id v10 = v9;
    int v11 = v9[OBJC_IVAR____TtC19HealthMedicationsUI25MedicationsDayHistoryView_previousDisplayContext];
    if (v11 == 2)
    {
    }
    else
    {
      id v12 = (uint64_t *)&v9[OBJC_IVAR____TtC19HealthMedicationsUI25MedicationsDayHistoryView_timeTextCache];
      uint64_t v13 = *(void *)&v9[OBJC_IVAR____TtC19HealthMedicationsUI25MedicationsDayHistoryView_timeTextCache + 8];
      if (v11)
      {
        if (v13)
        {
          uint64_t v16 = *v12;
          uint64_t v17 = *(void *)&v9[OBJC_IVAR____TtC19HealthMedicationsUI25MedicationsDayHistoryView_timeTextCache + 8];
        }
        else
        {
          uint64_t v16 = 0;
          uint64_t v17 = 0xE000000000000000;
        }
        uint64_t v21 = (uint64_t)&v9[OBJC_IVAR____TtC19HealthMedicationsUI25MedicationsDayHistoryView_elapsedTimeCache];
        swift_beginAccess();
        sub_1C1FE0174(v21, (uint64_t)v6);
        swift_bridgeObjectRetain();
        sub_1C203DA60(v16, v17, (uint64_t)v6);
        swift_bridgeObjectRelease();

        uint64_t v20 = (uint64_t)v6;
      }
      else
      {
        if (v13)
        {
          uint64_t v14 = *v12;
          uint64_t v15 = *(void *)&v9[OBJC_IVAR____TtC19HealthMedicationsUI25MedicationsDayHistoryView_timeTextCache + 8];
        }
        else
        {
          uint64_t v14 = 0;
          uint64_t v15 = 0xE000000000000000;
        }
        uint64_t v18 = (uint64_t)&v9[OBJC_IVAR____TtC19HealthMedicationsUI25MedicationsDayHistoryView_elapsedTimeCache];
        swift_beginAccess();
        sub_1C1FE0174(v18, (uint64_t)v8);
        if (*(void *)&v10[OBJC_IVAR____TtC19HealthMedicationsUI25MedicationsDayHistoryView_lineItems]) {
          uint64_t v19 = *(void *)&v10[OBJC_IVAR____TtC19HealthMedicationsUI25MedicationsDayHistoryView_lineItems];
        }
        else {
          uint64_t v19 = MEMORY[0x1E4FBC860];
        }
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1C203E108(v14, v15, (uint64_t)v8, v19);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        uint64_t v20 = (uint64_t)v8;
      }
      sub_1C1F394F8(v20);
    }
  }
}

void sub_1C203D9F8(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3();
  swift_release();
}

void sub_1C203DA60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  sub_1C1F173BC(0, &qword_1EBF0B1F0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  uint64_t v9 = MEMORY[0x1F4188790](v8 - 8);
  int v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v25 - v12;
  uint64_t v14 = (void *)(v4 + OBJC_IVAR____TtC19HealthMedicationsUI25MedicationsDayHistoryView_timeTextCache);
  *uint64_t v14 = a1;
  v14[1] = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_1C1FE0174(a3, (uint64_t)v13);
  uint64_t v15 = v4 + OBJC_IVAR____TtC19HealthMedicationsUI25MedicationsDayHistoryView_elapsedTimeCache;
  swift_beginAccess();
  sub_1C1FE024C((uint64_t)v13, v15);
  swift_endAccess();
  id v16 = sub_1C203C5D4();
  uint64_t v17 = (void *)sub_1C214A5B0();
  objc_msgSend(v16, sel_setText_, v17);

  id v18 = sub_1C203C5F4();
  sub_1C1FE0174(a3, (uint64_t)v11);
  uint64_t v19 = sub_1C2147AC0();
  uint64_t v20 = *(void *)(v19 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v11, 1, v19) == 1)
  {
    sub_1C1F394F8((uint64_t)v11);
LABEL_5:
    id v23 = 0;
    goto LABEL_6;
  }
  Date.timeElapsedToNow.getter();
  uint64_t v22 = v21;
  (*(void (**)(char *, uint64_t))(v20 + 8))(v11, v19);
  if (!v22) {
    goto LABEL_5;
  }
  id v23 = (void *)sub_1C214A5B0();
  swift_bridgeObjectRelease();
LABEL_6:
  objc_msgSend(v18, sel_setText_, v23);

  id v24 = sub_1C203C5C0();
  objc_msgSend(v24, sel_setHidden_, 1);
}

uint64_t Date.timeElapsedToNow.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1C2147AC0();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  id v6 = (char *)v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)v27 - v7;
  uint64_t v9 = sub_1C2147CF0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)v27 - v14;
  id v16 = objc_msgSend(self, sel_currentCalendar);
  sub_1C2147C60();

  sub_1C2147A70();
  sub_1C21479E0();
  double v18 = v17;
  LOBYTE(v16) = sub_1C2147BD0();
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v15, v9);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, v1, v2);
  v27[0] = v10;
  v27[1] = v3;
  if (v16)
  {
    uint64_t v19 = *(void (**)(char *, uint64_t))(v3 + 8);
    v19(v6, v2);
    uint64_t v20 = *(void (**)(char *, uint64_t))(v10 + 8);
    v20(v13, v9);
  }
  else
  {
    char v21 = sub_1C2147C10();
    uint64_t v19 = *(void (**)(char *, uint64_t))(v3 + 8);
    v19(v6, v2);
    uint64_t v20 = *(void (**)(char *, uint64_t))(v10 + 8);
    v20(v13, v9);
    if ((v21 & 1) == 0)
    {
      uint64_t v24 = 0;
      goto LABEL_11;
    }
  }
  sub_1C214A9D0();
  if (v18 >= v22)
  {
    id v25 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28FE0]), sel_init);
    objc_msgSend(v25, sel_setDateTimeStyle_, 0);
    objc_msgSend(v25, sel_setUnitsStyle_, 3);
    sub_1C21479E0();
    id v23 = objc_msgSend(v25, sel_localizedStringFromTimeInterval_);
    uint64_t v24 = sub_1C214A5F0();
  }
  else
  {
    if (qword_1EBF0CA00 != -1) {
      swift_once();
    }
    id v23 = (id)qword_1EBF0CA18;
    swift_bridgeObjectRetain();
    uint64_t v24 = sub_1C2147730();
    swift_bridgeObjectRelease();
  }

LABEL_11:
  v19(v8, v2);
  v20(v15, v9);
  return v24;
}

void sub_1C203E108(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = sub_1C21497F0();
  uint64_t v35 = *(void *)(v10 - 8);
  uint64_t v36 = v10;
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1F173BC(0, &qword_1EBF0B1F0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  uint64_t v14 = MEMORY[0x1F4188790](v13 - 8);
  id v16 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  double v18 = (char *)&v34 - v17;
  uint64_t v19 = (void *)(v5 + OBJC_IVAR____TtC19HealthMedicationsUI25MedicationsDayHistoryView_timeTextCache);
  *uint64_t v19 = a1;
  v19[1] = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_1C1FE0174(a3, (uint64_t)v18);
  uint64_t v20 = v5 + OBJC_IVAR____TtC19HealthMedicationsUI25MedicationsDayHistoryView_elapsedTimeCache;
  swift_beginAccess();
  sub_1C1FE024C((uint64_t)v18, v20);
  swift_endAccess();
  *(void *)(v5 + OBJC_IVAR____TtC19HealthMedicationsUI25MedicationsDayHistoryView_lineItems) = a4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  id v21 = sub_1C203C5D4();
  double v22 = (void *)sub_1C214A5B0();
  objc_msgSend(v21, sel_setText_, v22);

  id v23 = sub_1C203C5F4();
  sub_1C1FE0174(a3, (uint64_t)v16);
  uint64_t v24 = sub_1C2147AC0();
  uint64_t v25 = *(void *)(v24 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v16, 1, v24) == 1)
  {
    sub_1C1F394F8((uint64_t)v16);
  }
  else
  {
    Date.timeElapsedToNow.getter();
    uint64_t v27 = v26;
    (*(void (**)(char *, uint64_t))(v25 + 8))(v16, v24);
    if (v27)
    {
      uint64_t v28 = (void *)sub_1C214A5B0();
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
  }
  uint64_t v28 = 0;
LABEL_6:
  objc_msgSend(v23, sel_setText_, v28);

  if (*(void *)(a4 + 16) == 1)
  {
    id v29 = sub_1C203C5C0();
    sub_1C203E4E8((void *)(a4 + 32));

    id v30 = sub_1C203C5C0();
    objc_msgSend(v30, sel_setHidden_, 0);
  }
  else
  {
    sub_1C21497A0();
    id v31 = sub_1C21497E0();
    os_log_type_t v32 = sub_1C214ABD0();
    if (os_log_type_enabled(v31, v32))
    {
      id v33 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v33 = 0;
      _os_log_impl(&dword_1C1F0B000, v31, v32, "Expected 1 lineItem to exist for [MedicationDoseEvent] since we do not group\ndoses by time in the Medication Detail Room.", v33, 2u);
      MEMORY[0x1C8754730](v33, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v35 + 8))(v12, v36);
  }
}

void sub_1C203E4E8(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = a1[3];
  uint64_t v5 = a1[4];
  __swift_project_boxed_opaque_existential_0(a1, v4);
  char v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 24))(v4, v5);
  uint64_t v7 = self;
  uint64_t v8 = &selRef_systemGrayColor;
  if ((v6 & 1) == 0) {
    uint64_t v8 = &selRef_systemCyanColor;
  }
  id v9 = [v7 *v8];
  sub_1C1F13C84(0, (unint64_t *)&qword_1EBF0CA10);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1C214FCB0;
  *(void *)(v10 + 32) = objc_msgSend(self, sel_systemWhiteColor);
  *(void *)(v10 + 40) = v9;
  sub_1C214A7A0();
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C900);
  id v11 = v9;
  uint64_t v12 = (void *)sub_1C214A770();
  swift_bridgeObjectRelease();
  uint64_t v13 = self;
  id v14 = objc_msgSend(v13, sel_configurationWithPaletteColors_, v12);

  id v15 = objc_msgSend(self, sel_preferredFontForTextStyle_, *MEMORY[0x1E4FB28C8]);
  id v16 = objc_msgSend(v13, sel_configurationWithFont_, v15);

  id v22 = objc_msgSend(v14, sel_configurationByApplyingConfiguration_, v16);
  uint64_t v17 = a1[3];
  uint64_t v18 = a1[4];
  __swift_project_boxed_opaque_existential_0(a1, v17);
  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v18);
  uint64_t v19 = (void *)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  id v20 = objc_msgSend(self, sel_systemImageNamed_, v19);

  objc_msgSend(v2, sel_setImage_, v20);
  objc_msgSend(v2, sel_setPreferredSymbolConfiguration_, v22);
  LODWORD(v21) = 1148846080;
  objc_msgSend(v2, sel_setContentCompressionResistancePriority_forAxis_, 0, v21);
}

uint64_t sub_1C203E7B4(uint64_t a1)
{
  uint64_t v2 = v1;
  *(void *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI25MedicationsDayHistoryView_lineItems] = a1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  id v4 = sub_1C203C7F0();
  sub_1C214B0E0();

  id v5 = v2;
  unint64_t v6 = sub_1C204014C(a1);

  if (!(v6 >> 62))
  {
    uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v7) {
      goto LABEL_3;
    }
    return swift_bridgeObjectRelease_n();
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_1C214B930();
  uint64_t v7 = result;
  if (!result) {
    return swift_bridgeObjectRelease_n();
  }
LABEL_3:
  if (v7 >= 1)
  {
    uint64_t v9 = 0;
    do
    {
      if ((v6 & 0xC000000000000001) != 0) {
        id v10 = (id)MEMORY[0x1C8753960](v9, v6);
      }
      else {
        id v10 = *(id *)(v6 + 8 * v9 + 32);
      }
      id v11 = v10;
      ++v9;
      id v12 = sub_1C203C7F0();
      objc_msgSend(v12, sel_addArrangedSubview_, v11);
    }
    while (v7 != v9);
    return swift_bridgeObjectRelease_n();
  }
  __break(1u);
  return result;
}

uint64_t sub_1C203E900(void *a1)
{
  sub_1C1F173BC(0, (unint64_t *)&qword_1EA2C4AA8, MEMORY[0x1E4F67900], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v85 = (char *)&v84 - v3;
  uint64_t v4 = a1[3];
  uint64_t v5 = a1[4];
  __swift_project_boxed_opaque_existential_0(a1, v4);
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v5 + 24))(v4, v5))
  {
    uint64_t v6 = MEMORY[0x1E4FBB1A0];
    if (qword_1EBF0CA00 != -1) {
      swift_once();
    }
    id v7 = (id)qword_1EBF0CA18;
    swift_bridgeObjectRetain();
    sub_1C2147730();
    swift_bridgeObjectRelease();

    sub_1C1F5236C(0, qword_1EBF0B8A0, (unint64_t *)&qword_1EBF0C9F0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
    uint64_t v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_1C214FCD0;
    uint64_t v9 = a1[3];
    uint64_t v10 = a1[4];
    __swift_project_boxed_opaque_existential_0(a1, v9);
    uint64_t v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 16))(v9, v10);
    uint64_t v13 = v12;
    *(void *)(v8 + 56) = v6;
    *(void *)(v8 + 64) = sub_1C1F31298();
    *(void *)(v8 + 32) = v11;
    *(void *)(v8 + 40) = v13;
    id v90 = (id)sub_1C214A5C0();
    *(void *)&long long v89 = v14;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v15 = a1[3];
    uint64_t v16 = a1[4];
    __swift_project_boxed_opaque_existential_0(a1, v15);
    id v90 = (id)(*(uint64_t (**)(uint64_t, uint64_t))(v16 + 16))(v15, v16);
    *(void *)&long long v89 = v17;
  }
  id v18 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
  sub_1C1F13C84(0, (unint64_t *)&qword_1EA2C3298);
  uint64_t v19 = swift_allocObject();
  long long v86 = xmmword_1C214FCC0;
  *(_OWORD *)(v19 + 16) = xmmword_1C214FCC0;
  uint64_t v20 = qword_1EA2C26E0;
  id v21 = v18;
  if (v20 != -1) {
    swift_once();
  }
  uint64_t v22 = unk_1EA2C7FE0;
  *(void *)(v19 + 32) = qword_1EA2C7FD8;
  *(void *)(v19 + 40) = v22;
  *(void *)(v19 + 48) = 0x65736F447473614CLL;
  *(void *)(v19 + 56) = 0xE800000000000000;
  swift_bridgeObjectRetain();
  id v23 = (void *)sub_1C214A770();
  swift_bridgeObjectRelease();
  id v24 = (id)HKUIJoinStringsForAutomationIdentifier();

  objc_msgSend(v21, sel_setAccessibilityIdentifier_, v24);
  objc_msgSend(v21, sel_setAdjustsFontForContentSizeCategory_, 1);
  uint64_t v25 = self;
  uint64_t v26 = *MEMORY[0x1E4FB28F0];
  double v27 = *MEMORY[0x1E4FB09E0];
  id v87 = v25;
  id v28 = objc_msgSend(v25, sel__preferredFontForTextStyle_weight_, v26, v27);
  objc_msgSend(v21, sel_setFont_, v28);

  id v29 = self;
  id v30 = objc_msgSend(v29, sel_secondaryLabelColor);
  objc_msgSend(v21, sel_setTextColor_, v30);

  if (qword_1EBF0CA00 != -1) {
    swift_once();
  }
  id v31 = (id)qword_1EBF0CA18;
  swift_bridgeObjectRetain();
  sub_1C2147730();
  swift_bridgeObjectRelease();

  sub_1C214A640();
  swift_bridgeObjectRelease();
  os_log_type_t v32 = (void *)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  objc_msgSend(v21, sel_setText_, v32);

  uint64_t v33 = a1[3];
  uint64_t v34 = a1[4];
  __swift_project_boxed_opaque_existential_0(a1, v33);
  uint64_t v35 = *(uint64_t (**)(uint64_t, uint64_t))(v34 + 32);
  id v36 = v21;
  objc_msgSend(v36, sel_setHidden_, (v35(v33, v34) & 1) == 0);

  if (!*(unsigned char *)(v88 + OBJC_IVAR____TtC19HealthMedicationsUI25MedicationsDayHistoryView_state))
  {
    id v37 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1838]), sel_init);
    sub_1C203E4E8(a1);
    id v38 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
    uint64_t v39 = swift_allocObject();
    *(_OWORD *)(v39 + 16) = v86;
    uint64_t v40 = unk_1EA2C7FE0;
    *(void *)(v39 + 32) = qword_1EA2C7FD8;
    *(void *)(v39 + 40) = v40;
    strcpy((char *)(v39 + 48), "MedicationName");
    *(unsigned char *)(v39 + 63) = -18;
    id v41 = v38;
    swift_bridgeObjectRetain();
    id v42 = (void *)sub_1C214A770();
    swift_bridgeObjectRelease();
    id v43 = (id)HKUIJoinStringsForAutomationIdentifier();

    objc_msgSend(v41, sel_setAccessibilityIdentifier_, v43);
    objc_msgSend(v41, sel_setAdjustsFontForContentSizeCategory_, 1);
    objc_msgSend(v41, sel_setNumberOfLines_, 0);
    id v44 = objc_msgSend(v87, sel_preferredFontForTextStyle_, *MEMORY[0x1E4FB28C8]);
    objc_msgSend(v41, sel_setFont_, v44);

    id v45 = objc_msgSend(v29, sel_labelColor);
    objc_msgSend(v41, sel_setTextColor_, v45);

    id v46 = (void *)sub_1C214A5B0();
    swift_bridgeObjectRelease();
    objc_msgSend(v41, sel_setText_, v46);

    sub_1C1F13C84(0, (unint64_t *)&qword_1EBF0CA10);
    uint64_t v47 = swift_allocObject();
    long long v89 = xmmword_1C214FCB0;
    *(_OWORD *)(v47 + 16) = xmmword_1C214FCB0;
    *(void *)(v47 + 32) = v41;
    *(void *)(v47 + 40) = v36;
    uint64_t v91 = v47;
    sub_1C214A7A0();
    id v48 = objc_allocWithZone(MEMORY[0x1E4FB1C60]);
    sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8F0);
    id v90 = v36;
    id v49 = v41;
    double v50 = (void *)sub_1C214A770();
    swift_bridgeObjectRelease();
    id v51 = objc_msgSend(v48, sel_initWithArrangedSubviews_, v50);

    objc_msgSend(v51, sel_setAxis_, 1);
    uint64_t v52 = swift_allocObject();
    *(_OWORD *)(v52 + 16) = v89;
    *(void *)(v52 + 32) = v37;
    *(void *)(v52 + 40) = v51;
    uint64_t v91 = v52;
    sub_1C214A7A0();
    id v53 = objc_allocWithZone(MEMORY[0x1E4FB1C60]);
    id v54 = v37;
    id v55 = v51;
    uint64_t v56 = (void *)sub_1C214A770();
    swift_bridgeObjectRelease();
    id v57 = objc_msgSend(v53, sel_initWithArrangedSubviews_, v56);

    objc_msgSend(v57, sel_setAxis_, 0);
    objc_msgSend(v57, sel_setAlignment_, 1);
    objc_msgSend(v57, sel_setDistribution_, 0);
    objc_msgSend(v57, sel_setSpacing_, 6.0);

    return (uint64_t)v57;
  }
  if (*(unsigned char *)(v88 + OBJC_IVAR____TtC19HealthMedicationsUI25MedicationsDayHistoryView_state) == 1)
  {
    id v58 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
    objc_msgSend(v58, sel_setAdjustsFontForContentSizeCategory_, 1);
    objc_msgSend(v58, sel_setNumberOfLines_, 0);
    id v59 = objc_msgSend(v29, sel_labelColor);
    objc_msgSend(v58, sel_setTextColor_, v59);

    objc_msgSend(v58, sel_setLineBreakMode_, 0);
    uint64_t v60 = swift_allocObject();
    *(_OWORD *)(v60 + 16) = v86;
    uint64_t v61 = unk_1EA2C7FE0;
    *(void *)(v60 + 32) = qword_1EA2C7FD8;
    *(void *)(v60 + 40) = v61;
    strcpy((char *)(v60 + 48), "MedicationName");
    *(unsigned char *)(v60 + 63) = -18;
    id v62 = v58;
    swift_bridgeObjectRetain();
    id v63 = (void *)sub_1C214A770();
    swift_bridgeObjectRelease();
    id v64 = (id)HKUIJoinStringsForAutomationIdentifier();

    objc_msgSend(v62, sel_setAccessibilityIdentifier_, v64);
    uint64_t v65 = a1[3];
    uint64_t v66 = a1[4];
    __swift_project_boxed_opaque_existential_0(a1, v65);
    char v67 = (*(uint64_t (**)(uint64_t, uint64_t))(v66 + 24))(v65, v66);
    id v68 = &selRef_systemGrayColor;
    if ((v67 & 1) == 0) {
      id v68 = &selRef_systemCyanColor;
    }
    id v69 = [v29 *v68];
    id v70 = objc_msgSend(v87, sel_preferredFontForTextStyle_, *MEMORY[0x1E4FB28C8]);
    sub_1C1F12718(0, (unint64_t *)&unk_1EBF0C800);
    uint64_t v71 = a1[3];
    uint64_t v72 = a1[4];
    __swift_project_boxed_opaque_existential_0(a1, v71);
    (*(void (**)(uint64_t, uint64_t))(v72 + 8))(v71, v72);
    sub_1C1F13C84(0, (unint64_t *)&qword_1EBF0CA10);
    uint64_t v73 = swift_allocObject();
    *(_OWORD *)(v73 + 16) = xmmword_1C214E170;
    *(void *)(v73 + 32) = v69;
    uint64_t v91 = v73;
    sub_1C214A7A0();
    uint64_t v74 = sub_1C214ADF0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v74 - 8) + 56))(v85, 1, 1, v74);
    id v75 = v69;
    id v83 = v70;
    uint64_t v76 = (void *)sub_1C214ADE0();
    objc_msgSend(v62, sel_setAttributedText_, v76);

    uint64_t v77 = swift_allocObject();
    *(_OWORD *)(v77 + 16) = xmmword_1C214FCB0;
    *(void *)(v77 + 32) = v62;
    *(void *)(v77 + 40) = v36;
    uint64_t v91 = v77;
    sub_1C214A7A0();
    id v78 = objc_allocWithZone(MEMORY[0x1E4FB1C60]);
    sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8F0);
    id v79 = v36;
    id v80 = v62;
    uint64_t v81 = (void *)sub_1C214A770();
    swift_bridgeObjectRelease();
    id v57 = objc_msgSend(v78, sel_initWithArrangedSubviews_, v81);

    objc_msgSend(v57, sel_setAxis_, 1);
    return (uint64_t)v57;
  }
  uint64_t result = sub_1C214B910();
  __break(1u);
  return result;
}

uint64_t sub_1C203F668(uint64_t a1)
{
  sub_1C1F173BC(0, &qword_1EBF0B1F0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v18 - v3;
  id v5 = sub_1C203C5F4();
  id v6 = objc_msgSend(v5, sel_text);

  if (v6)
  {
    uint64_t v7 = sub_1C214A5F0();
    uint64_t v9 = v8;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v9 = 0;
  }
  sub_1C1FE0174(a1, (uint64_t)v4);
  uint64_t v10 = sub_1C2147AC0();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v4, 1, v10) == 1)
  {
    sub_1C1F394F8((uint64_t)v4);
    if (!v9) {
      return 0;
    }
LABEL_17:
    swift_bridgeObjectRelease();
    return 1;
  }
  uint64_t v12 = Date.timeElapsedToNow.getter();
  uint64_t v14 = v13;
  (*(void (**)(char *, uint64_t))(v11 + 8))(v4, v10);
  if (v9)
  {
    if (v14)
    {
      if (v7 == v12 && v9 == v14)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        char v16 = sub_1C214BA80();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v16 & 1) == 0) {
          return 1;
        }
      }
      return 0;
    }
    goto LABEL_17;
  }
  if (v14) {
    goto LABEL_17;
  }
  return 0;
}

uint64_t sub_1C203F87C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(v3 + OBJC_IVAR____TtC19HealthMedicationsUI25MedicationsDayHistoryView_lineItems);
  if (!v4) {
    return 1;
  }
  swift_bridgeObjectRetain();
  id v8 = sub_1C203C5D4();
  id v9 = objc_msgSend(v8, sel_text);

  if (!v9) {
    goto LABEL_36;
  }
  uint64_t v10 = sub_1C214A5F0();
  uint64_t v12 = v11;

  if (v10 == a1 && v12 == a2)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v14 = sub_1C214BA80();
    swift_bridgeObjectRelease();
    if ((v14 & 1) == 0) {
      goto LABEL_36;
    }
  }
  unint64_t v15 = *(void *)(v4 + 16);
  if (v15 != *(void *)(a3 + 16))
  {
LABEL_36:
    swift_bridgeObjectRelease();
    return 1;
  }
  uint64_t v43 = a3 + 32;
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRetain();
  unint64_t v17 = 0;
  unint64_t v18 = 0;
  while (1)
  {
    if (v18 == v15)
    {
      uint64_t v69 = 0;
      unint64_t v18 = v15;
      memset(v68, 0, sizeof(v68));
      if (v17 == v15) {
        goto LABEL_16;
      }
      goto LABEL_19;
    }
    if (v18 >= v15) {
      break;
    }
    uint64_t result = sub_1C1F236D8(v43 + 40 * v18++, (uint64_t)v68);
    if (v17 == v15)
    {
LABEL_16:
      uint64_t v67 = 0;
      unint64_t v17 = v15;
      memset(v66, 0, sizeof(v66));
      goto LABEL_21;
    }
LABEL_19:
    if (v17 >= *(void *)(v4 + 16)) {
      goto LABEL_43;
    }
    sub_1C1F236D8(v4 + 32 + 40 * v17++, (uint64_t)v66);
LABEL_21:
    sub_1C204003C((uint64_t)v68, (uint64_t)&v62);
    sub_1C204003C((uint64_t)v66, (uint64_t)&v64);
    if (!v63)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v65)
      {
        sub_1C1F3A7FC((uint64_t)&v64);
        goto LABEL_36;
      }
      swift_bridgeObjectRelease();
      return 0;
    }
    if (!v65)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_0((uint64_t)&v62);
      goto LABEL_36;
    }
    sub_1C1F31280(&v62, (uint64_t)v59);
    sub_1C1F31280(&v64, (uint64_t)v56);
    uint64_t v25 = v60;
    uint64_t v26 = v61;
    __swift_project_boxed_opaque_existential_0(v59, v60);
    uint64_t v27 = (*(uint64_t (**)(uint64_t, uint64_t))(v26 + 8))(v25, v26);
    uint64_t v29 = v28;
    uint64_t v30 = v57;
    uint64_t v31 = v58;
    __swift_project_boxed_opaque_existential_0(v56, v57);
    if (v27 == (*(uint64_t (**)(uint64_t, uint64_t))(v31 + 8))(v30, v31) && v29 == v32)
    {
      swift_bridgeObjectRelease_n();
      sub_1C1F236D8((uint64_t)v59, (uint64_t)v53);
      sub_1C1F236D8((uint64_t)v56, (uint64_t)v50);
    }
    else
    {
      char v34 = sub_1C214BA80();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1C1F236D8((uint64_t)v59, (uint64_t)v53);
      sub_1C1F236D8((uint64_t)v56, (uint64_t)v50);
      if ((v34 & 1) == 0)
      {
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v53);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v50);
        sub_1C1F236D8((uint64_t)v59, (uint64_t)v47);
        sub_1C1F236D8((uint64_t)v56, (uint64_t)v44);
LABEL_39:
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v47);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v44);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v56);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v59);
LABEL_40:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        return 1;
      }
    }
    uint64_t v35 = v54;
    uint64_t v36 = v55;
    __swift_project_boxed_opaque_existential_0(v53, v54);
    uint64_t v37 = (*(uint64_t (**)(uint64_t, uint64_t))(v36 + 16))(v35, v36);
    uint64_t v39 = v38;
    uint64_t v40 = v51;
    uint64_t v41 = v52;
    __swift_project_boxed_opaque_existential_0(v50, v51);
    if (v37 == (*(uint64_t (**)(uint64_t, uint64_t))(v41 + 16))(v40, v41) && v39 == v42)
    {
      swift_bridgeObjectRelease_n();
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v53);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v50);
      sub_1C1F236D8((uint64_t)v59, (uint64_t)v47);
      sub_1C1F236D8((uint64_t)v56, (uint64_t)v44);
    }
    else
    {
      char v19 = sub_1C214BA80();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v53);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v50);
      sub_1C1F236D8((uint64_t)v59, (uint64_t)v47);
      sub_1C1F236D8((uint64_t)v56, (uint64_t)v44);
      if ((v19 & 1) == 0) {
        goto LABEL_39;
      }
    }
    uint64_t v20 = v48;
    uint64_t v21 = v49;
    __swift_project_boxed_opaque_existential_0(v47, v48);
    LOBYTE(v20) = (*(uint64_t (**)(uint64_t, uint64_t))(v21 + 24))(v20, v21);
    uint64_t v22 = v45;
    uint64_t v23 = v46;
    __swift_project_boxed_opaque_existential_0(v44, v45);
    char v24 = v20 ^ (*(uint64_t (**)(uint64_t, uint64_t))(v23 + 24))(v22, v23);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v47);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v44);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v56);
    uint64_t result = __swift_destroy_boxed_opaque_existential_0((uint64_t)v59);
    if (v24) {
      goto LABEL_40;
    }
  }
  __break(1u);
LABEL_43:
  __break(1u);
  return result;
}

uint64_t sub_1C203FDA0()
{
  return type metadata accessor for MedicationsDayHistoryView();
}

uint64_t type metadata accessor for MedicationsDayHistoryView()
{
  uint64_t result = qword_1EA2C5B60;
  if (!qword_1EA2C5B60) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1C203FDF4()
{
  sub_1C1F173BC(319, &qword_1EBF0B1F0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

unsigned char *storeEnumTagSinglePayload for MedicationsDayHistoryView.PresentationStyle(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C203FFACLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MedicationsDayHistoryView.PresentationStyle()
{
  return &type metadata for MedicationsDayHistoryView.PresentationStyle;
}

unint64_t sub_1C203FFE8()
{
  unint64_t result = qword_1EA2C5B70;
  if (!qword_1EA2C5B70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C5B70);
  }
  return result;
}

uint64_t sub_1C204003C(uint64_t a1, uint64_t a2)
{
  sub_1C1F5236C(0, &qword_1EA2C31A0, &qword_1EA2C31A8, (uint64_t)&protocol descriptor for DayHistoryLineItemDisplayable, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1C20400CC(void *a1)
{
  id v1 = objc_msgSend(a1, sel_traitCollection);
  id v3 = objc_msgSend(v1, sel_preferredContentSizeCategory);

  char v2 = sub_1C214AE80();
  sub_1C203C8B4(v2 & 1);
}

uint64_t sub_1C204014C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x1E4FBC860];
  if (v2)
  {
    uint64_t v5 = MEMORY[0x1E4FBC860];
    sub_1C214B850();
    uint64_t v4 = (void *)(a1 + 32);
    do
    {
      sub_1C203E900(v4);
      sub_1C214B820();
      sub_1C214B860();
      sub_1C214B870();
      sub_1C214B830();
      v4 += 5;
      --v2;
    }
    while (v2);
    return v5;
  }
  return result;
}

id sub_1C2040208()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
  objc_msgSend(v0, sel_setAdjustsFontForContentSizeCategory_, 1);
  objc_msgSend(v0, sel_setNumberOfLines_, 0);
  sub_1C1F13C84(0, (unint64_t *)&qword_1EA2C3298);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1C214FCC0;
  uint64_t v2 = qword_1EA2C26E0;
  id v3 = v0;
  if (v2 != -1) {
    swift_once();
  }
  uint64_t v4 = unk_1EA2C7FE0;
  *(void *)(v1 + 32) = qword_1EA2C7FD8;
  *(void *)(v1 + 40) = v4;
  strcpy((char *)(v1 + 48), "TimeTakenLabel");
  *(unsigned char *)(v1 + 63) = -18;
  swift_bridgeObjectRetain();
  uint64_t v5 = (void *)sub_1C214A770();
  swift_bridgeObjectRelease();
  id v6 = (id)HKUIJoinStringsForAutomationIdentifier();

  objc_msgSend(v3, sel_setAccessibilityIdentifier_, v6);
  id v7 = objc_msgSend(self, sel_preferredFontForTextStyle_, *MEMORY[0x1E4FB2908]);
  objc_msgSend(v3, sel_setFont_, v7);

  return v3;
}

id sub_1C20403AC()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
  objc_msgSend(v0, sel_setAdjustsFontForContentSizeCategory_, 1);
  objc_msgSend(v0, sel_setNumberOfLines_, 0);
  sub_1C1F13C84(0, (unint64_t *)&qword_1EA2C3298);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1C214FCC0;
  uint64_t v2 = qword_1EA2C26E0;
  id v3 = v0;
  if (v2 != -1) {
    swift_once();
  }
  uint64_t v4 = unk_1EA2C7FE0;
  *(void *)(v1 + 32) = qword_1EA2C7FD8;
  *(void *)(v1 + 40) = v4;
  *(void *)(v1 + 48) = 0xD000000000000010;
  *(void *)(v1 + 56) = 0x80000001C2166D40;
  swift_bridgeObjectRetain();
  uint64_t v5 = (void *)sub_1C214A770();
  swift_bridgeObjectRelease();
  id v6 = (id)HKUIJoinStringsForAutomationIdentifier();

  objc_msgSend(v3, sel_setAccessibilityIdentifier_, v6);
  id v7 = objc_msgSend(self, sel__preferredFontForTextStyle_weight_, *MEMORY[0x1E4FB2908], *MEMORY[0x1E4FB09D8]);
  objc_msgSend(v3, sel_setFont_, v7);

  id v8 = objc_msgSend(self, sel_systemGrayColor);
  objc_msgSend(v3, sel_setTextColor_, v8);

  return v3;
}

void sub_1C2040590()
{
  *(void *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI25MedicationsDayHistoryView____lazy_storage___doseStatusImageView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI25MedicationsDayHistoryView____lazy_storage___timeLabel] = 0;
  *(void *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI25MedicationsDayHistoryView____lazy_storage___elapsedTimeLabel] = 0;
  *(void *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI25MedicationsDayHistoryView____lazy_storage___chevronImage] = 0;
  *(void *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI25MedicationsDayHistoryView____lazy_storage___headerStackView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI25MedicationsDayHistoryView____lazy_storage___lineItemsStackView] = 0;
  v0[OBJC_IVAR____TtC19HealthMedicationsUI25MedicationsDayHistoryView_state] = 2;
  *(void *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI25MedicationsDayHistoryView_lineItems] = 0;
  *(void *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI25MedicationsDayHistoryView_timer] = 0;
  uint64_t v1 = &v0[OBJC_IVAR____TtC19HealthMedicationsUI25MedicationsDayHistoryView_timeTextCache];
  void *v1 = 0;
  v1[1] = 0;
  uint64_t v2 = &v0[OBJC_IVAR____TtC19HealthMedicationsUI25MedicationsDayHistoryView_elapsedTimeCache];
  uint64_t v3 = sub_1C2147AC0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 1, v3);
  v0[OBJC_IVAR____TtC19HealthMedicationsUI25MedicationsDayHistoryView_previousDisplayContext] = 2;

  sub_1C214B910();
  __break(1u);
}

uint64_t sub_1C20406D0()
{
  swift_unknownObjectWeakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

void sub_1C2040708(uint64_t a1)
{
  sub_1C203D7BC(a1, v1);
}

uint64_t dispatch thunk of MedicationEducationDisplayable.isOntologyBacked.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of MedicationEducationDisplayable.medmoji.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of MedicationEducationDisplayable.title.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of MedicationEducationDisplayable.doseFormStrength.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of MedicationEducationDisplayable.ingredientComponents.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of MedicationEducationDisplayable.educationContentProviding.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t MedicationSummaryView.body.getter@<X0>(uint64_t a1@<X8>)
{
  sub_1C204089C();
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v1;
  uint64_t v7 = v1[1];
  *(void *)uint64_t v5 = sub_1C214A250();
  *((void *)v5 + 1) = 0;
  v5[16] = 0;
  sub_1C204135C();
  sub_1C20410F0(v6, v7, (uint64_t)&v5[*(int *)(v8 + 44)]);
  uint64_t v9 = sub_1C214A350();
  LOBYTE(v6) = sub_1C214A290();
  sub_1C20420BC((uint64_t)v5, a1, (uint64_t (*)(void))sub_1C204089C);
  sub_1C20413F4();
  uint64_t v11 = a1 + *(int *)(v10 + 36);
  *(void *)uint64_t v11 = v9;
  *(unsigned char *)(v11 + 8) = v6;
  return sub_1C2042134((uint64_t)v5, (uint64_t (*)(void))sub_1C204089C);
}

void sub_1C204089C()
{
  if (!qword_1EA2C5B78)
  {
    sub_1C2040A74(255, &qword_1EA2C5B80, (uint64_t (*)(uint64_t))sub_1C2040950, MEMORY[0x1E4F3F108]);
    sub_1C204108C(&qword_1EA2C5C28, &qword_1EA2C5B80, (uint64_t (*)(uint64_t))sub_1C2040950);
    unint64_t v0 = sub_1C214A390();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C5B78);
    }
  }
}

void sub_1C2040950()
{
  if (!qword_1EA2C5B88)
  {
    sub_1C20409C0();
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1) {
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_1EA2C5B88);
    }
  }
}

void sub_1C20409C0()
{
  if (!qword_1EA2C5B90)
  {
    sub_1C2040A74(255, &qword_1EA2C5B98, (uint64_t (*)(uint64_t))sub_1C2040AD8, MEMORY[0x1E4F3F108]);
    sub_1C204108C(&qword_1EA2C5C20, &qword_1EA2C5B98, (uint64_t (*)(uint64_t))sub_1C2040AD8);
    unint64_t v0 = sub_1C214A3A0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C5B90);
    }
  }
}

void sub_1C2040A74(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1C2040AD8()
{
  if (!qword_1EA2C5BA0)
  {
    sub_1C2040B48();
    sub_1C2040C78();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA2C5BA0);
    }
  }
}

void sub_1C2040B48()
{
  if (!qword_1EA2C5BA8)
  {
    sub_1C2040BA8();
    unint64_t v0 = sub_1C214A200();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C5BA8);
    }
  }
}

void sub_1C2040BA8()
{
  if (!qword_1EA2C5BB0)
  {
    sub_1C2040C24();
    unint64_t v0 = sub_1C214A1B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C5BB0);
    }
  }
}

unint64_t sub_1C2040C24()
{
  unint64_t result = qword_1EA2C5BB8;
  if (!qword_1EA2C5BB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C5BB8);
  }
  return result;
}

void sub_1C2040C78()
{
  if (!qword_1EA2C5BC0)
  {
    sub_1C2041488(255, &qword_1EA2C5BC8, MEMORY[0x1E4F3C9B0], MEMORY[0x1E4F3C7D8], MEMORY[0x1E4F3CC10]);
    sub_1C2040D0C();
    unint64_t v0 = sub_1C214A200();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C5BC0);
    }
  }
}

void sub_1C2040D0C()
{
  if (!qword_1EA2C5BD0)
  {
    sub_1C2040D70();
    sub_1C2040EE4();
    unint64_t v0 = sub_1C214A1C0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C5BD0);
    }
  }
}

void sub_1C2040D70()
{
  if (!qword_1EA2C5BD8)
  {
    sub_1C2040E08();
    sub_1C2040A74(255, &qword_1EA2C5BF8, MEMORY[0x1E4F3EC78], MEMORY[0x1E4F3DF18]);
    unint64_t v0 = sub_1C214A200();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C5BD8);
    }
  }
}

void sub_1C2040E08()
{
  if (!qword_1EA2C5BE0)
  {
    sub_1C2040E68();
    unint64_t v0 = sub_1C214A200();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C5BE0);
    }
  }
}

void sub_1C2040E68()
{
  if (!qword_1EA2C5BE8)
  {
    sub_1C2042194(255, &qword_1EA2C5BF0, MEMORY[0x1E4F3E1B0], MEMORY[0x1E4FBB718]);
    unint64_t v0 = sub_1C214A280();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C5BE8);
    }
  }
}

unint64_t sub_1C2040EE4()
{
  unint64_t result = qword_1EA2C5C00;
  if (!qword_1EA2C5C00)
  {
    sub_1C2040D70();
    sub_1C2040F5C();
    sub_1C2041004();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C5C00);
  }
  return result;
}

unint64_t sub_1C2040F5C()
{
  unint64_t result = qword_1EA2C5C08;
  if (!qword_1EA2C5C08)
  {
    sub_1C2040E08();
    sub_1C2041F48(&qword_1EA2C5C10, (void (*)(uint64_t))sub_1C2040E68);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C5C08);
  }
  return result;
}

unint64_t sub_1C2041004()
{
  unint64_t result = qword_1EA2C5C18;
  if (!qword_1EA2C5C18)
  {
    sub_1C2040A74(255, &qword_1EA2C5BF8, MEMORY[0x1E4F3EC78], MEMORY[0x1E4F3DF18]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C5C18);
  }
  return result;
}

uint64_t sub_1C204108C(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C2040A74(255, a2, a3, MEMORY[0x1E4F3F108]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C20410F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v36 = a3;
  sub_1C20409C0();
  uint64_t v6 = MEMORY[0x1F4188790](v5 - 8);
  uint64_t v35 = (uint64_t)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (uint64_t *)((char *)&v35 - v8);
  *uint64_t v9 = sub_1C214A3C0();
  v9[1] = v10;
  sub_1C2042014();
  sub_1C20414F4((uint64_t *)((char *)v9 + *(int *)(v11 + 44)));
  uint64_t v37 = a1;
  uint64_t v38 = a2;
  sub_1C1F40B78();
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_1C214A310();
  uint64_t v14 = v13;
  char v16 = v15 & 1;
  sub_1C214A2E0();
  uint64_t v17 = sub_1C214A300();
  uint64_t v19 = v18;
  char v21 = v20;
  swift_release();
  sub_1C20420AC(v12, v14, v16);
  swift_bridgeObjectRelease();
  sub_1C214A2C0();
  uint64_t v22 = sub_1C214A2F0();
  uint64_t v24 = v23;
  uint64_t v26 = v25;
  char v28 = v27 & 1;
  sub_1C20420AC(v17, v19, v21 & 1);
  swift_bridgeObjectRelease();
  uint64_t v29 = v35;
  sub_1C20420BC((uint64_t)v9, v35, (uint64_t (*)(void))sub_1C20409C0);
  uint64_t v30 = v36;
  sub_1C20420BC(v29, v36, (uint64_t (*)(void))sub_1C20409C0);
  sub_1C2040950();
  uint64_t v32 = v30 + *(int *)(v31 + 48);
  *(void *)uint64_t v32 = 0x402E000000000000;
  *(unsigned char *)(v32 + 8) = 0;
  uint64_t v33 = v30 + *(int *)(v31 + 64);
  *(void *)uint64_t v33 = v22;
  *(void *)(v33 + 8) = v24;
  *(unsigned char *)(v33 + 16) = v28;
  *(void *)(v33 + 24) = v26;
  sub_1C2042124(v22, v24, v28);
  swift_bridgeObjectRetain();
  sub_1C2042134((uint64_t)v9, (uint64_t (*)(void))sub_1C20409C0);
  sub_1C20420AC(v22, v24, v28);
  swift_bridgeObjectRelease();
  return sub_1C2042134(v29, (uint64_t (*)(void))sub_1C20409C0);
}

void sub_1C204135C()
{
  if (!qword_1EA2C5C30)
  {
    sub_1C2040A74(255, &qword_1EA2C5B80, (uint64_t (*)(uint64_t))sub_1C2040950, MEMORY[0x1E4F3F108]);
    unint64_t v0 = sub_1C214A1E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C5C30);
    }
  }
}

void sub_1C20413F4()
{
  if (!qword_1EA2C5C38)
  {
    sub_1C204089C();
    sub_1C2041488(255, &qword_1EA2C5C40, MEMORY[0x1E4F3EB98], MEMORY[0x1E4F3EB78], MEMORY[0x1E4F3DBF8]);
    unint64_t v0 = sub_1C214A200();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C5C38);
    }
  }
}

void sub_1C2041488(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, uint64_t, uint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = a5(0, a3, a4);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_1C20414D8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1C20414F4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v63 = a1;
  sub_1C2040D0C();
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v66 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F3EC78];
  uint64_t v67 = (uint64_t)&v42 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4F3DF18];
  sub_1C2040A74(0, &qword_1EA2C5BF8, MEMORY[0x1E4F3EC78], MEMORY[0x1E4F3DF18]);
  uint64_t v51 = v3 - 8;
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v61 = (uint64_t *)((char *)&v42 - v4);
  uint64_t v53 = sub_1C214A380();
  uint64_t v5 = *(void *)(v53 - 8);
  MEMORY[0x1F4188790](v53);
  uint64_t v7 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F3E0A0];
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C2040A74(0, &qword_1EA2C5C68, MEMORY[0x1E4F3E0A0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v42 - v11;
  sub_1C2040D70();
  uint64_t v52 = v13 - 8;
  MEMORY[0x1F4188790](v13 - 8);
  char v15 = (uint64_t *)((char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C2040C78();
  uint64_t v60 = v16 - 8;
  uint64_t v17 = MEMORY[0x1F4188790](v16 - 8);
  uint64_t v19 = (char *)&v42 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v64 = (uint64_t)&v42 - v20;
  char v21 = self;
  uint64_t v62 = MEMORY[0x1C87524E0](objc_msgSend(v21, sel_secondarySystemBackgroundColor));
  sub_1C214A3C0();
  sub_1C214A1D0();
  uint64_t v59 = v68;
  int v58 = v69;
  uint64_t v57 = v70;
  int v56 = v71;
  uint64_t v55 = v72;
  uint64_t v54 = v73;
  sub_1C2042194(0, &qword_1EA2C5C70, MEMORY[0x1E4F3EB98], MEMORY[0x1E4FBBE00]);
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_1C214FCC0;
  *(void *)(v22 + 32) = MEMORY[0x1C87524E0](objc_msgSend(v21, sel_systemCyanColor));
  *(void *)(v22 + 40) = MEMORY[0x1C87524E0](objc_msgSend(v21, sel_systemBlueColor));
  uint64_t v78 = v22;
  sub_1C214A7A0();
  MEMORY[0x1C8752530](v78);
  sub_1C214A3D0();
  sub_1C214A3E0();
  sub_1C214A1F0();
  uint64_t v49 = v74;
  long long v50 = v75;
  uint64_t v23 = v76;
  uint64_t v24 = v77;
  sub_1C214A3C0();
  sub_1C214A1D0();
  uint64_t v48 = v78;
  int v47 = v79;
  uint64_t v46 = v80;
  int v45 = v81;
  uint64_t v44 = v82;
  uint64_t v43 = v83;
  uint64_t v25 = sub_1C214A370();
  uint64_t v26 = sub_1C214A2B0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v12, 1, 1, v26);
  sub_1C214A2D0();
  sub_1C20423BC((uint64_t)v12, &qword_1EA2C5C68, v8, v9);
  uint64_t v27 = sub_1C214A2A0();
  swift_release();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v29 = v7;
  uint64_t v30 = v7;
  uint64_t v31 = v53;
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v30, *MEMORY[0x1E4F3EC48], v53);
  uint64_t v32 = swift_getKeyPath();
  uint64_t v33 = v61;
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))((char *)v61 + *(int *)(v51 + 36), v29, v31);
  *uint64_t v33 = v32;
  sub_1C2042328((uint64_t)v33, (uint64_t)v15 + *(int *)(v52 + 44));
  uint64_t *v15 = v25;
  v15[1] = KeyPath;
  void v15[2] = v27;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1C20423BC((uint64_t)v33, &qword_1EA2C5BF8, v66, v65);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v29, v31);
  swift_release();
  swift_release();
  swift_release();
  uint64_t v34 = v67;
  sub_1C20420BC((uint64_t)v15, v67, (uint64_t (*)(void))sub_1C2040D70);
  sub_1C20420BC(v34, (uint64_t)&v19[*(int *)(v60 + 44)], (uint64_t (*)(void))sub_1C2040D0C);
  *(void *)uint64_t v19 = v49;
  *(_OWORD *)(v19 + 8) = v50;
  *((void *)v19 + 3) = v23;
  *((void *)v19 + 4) = v24;
  *((void *)v19 + 5) = v48;
  v19[48] = v47;
  *((void *)v19 + 7) = v46;
  v19[64] = v45;
  uint64_t v35 = v43;
  *((void *)v19 + 9) = v44;
  *((void *)v19 + 10) = v35;
  swift_bridgeObjectRetain();
  sub_1C2042134(v34, (uint64_t (*)(void))sub_1C2040D0C);
  sub_1C2042134((uint64_t)v15, (uint64_t (*)(void))sub_1C2040D70);
  sub_1C2042418((uint64_t)&v74);
  uint64_t v36 = v64;
  sub_1C2042444((uint64_t)v19, v64);
  sub_1C20420BC(v36, (uint64_t)v19, (uint64_t (*)(void))sub_1C2040C78);
  uint64_t v37 = v63;
  *uint64_t v63 = v62;
  *((_WORD *)v37 + 4) = 256;
  v37[2] = v59;
  *((unsigned char *)v37 + 24) = v58;
  v37[4] = v57;
  *((unsigned char *)v37 + 40) = v56;
  uint64_t v38 = v54;
  v37[6] = v55;
  v37[7] = v38;
  uint64_t v39 = v37;
  sub_1C2040AD8();
  sub_1C20420BC((uint64_t)v19, (uint64_t)v39 + *(int *)(v40 + 48), (uint64_t (*)(void))sub_1C2040C78);
  swift_retain();
  sub_1C2042134(v36, (uint64_t (*)(void))sub_1C2040C78);
  sub_1C2042134((uint64_t)v19, (uint64_t (*)(void))sub_1C2040C78);
  return swift_release();
}

uint64_t sub_1C2041D5C()
{
  return sub_1C214A340();
}

uint64_t sub_1C2041D78@<X0>(uint64_t a1@<X8>)
{
  sub_1C204089C();
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v1;
  uint64_t v7 = v1[1];
  *(void *)uint64_t v5 = sub_1C214A250();
  *((void *)v5 + 1) = 0;
  v5[16] = 0;
  sub_1C204135C();
  sub_1C20410F0(v6, v7, (uint64_t)&v5[*(int *)(v8 + 44)]);
  uint64_t v9 = sub_1C214A350();
  LOBYTE(v6) = sub_1C214A290();
  sub_1C20420BC((uint64_t)v5, a1, (uint64_t (*)(void))sub_1C204089C);
  sub_1C20413F4();
  uint64_t v11 = a1 + *(int *)(v10 + 36);
  *(void *)uint64_t v11 = v9;
  *(unsigned char *)(v11 + 8) = v6;
  return sub_1C2042134((uint64_t)v5, (uint64_t (*)(void))sub_1C204089C);
}

ValueMetadata *type metadata accessor for MedicationSummaryView()
{
  return &type metadata for MedicationSummaryView;
}

unint64_t sub_1C2041EA0()
{
  unint64_t result = qword_1EA2C5C48;
  if (!qword_1EA2C5C48)
  {
    sub_1C20413F4();
    sub_1C2041F48(&qword_1EA2C5C50, (void (*)(uint64_t))sub_1C204089C);
    sub_1C2041F90();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C5C48);
  }
  return result;
}

uint64_t sub_1C2041F48(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C2041F90()
{
  unint64_t result = qword_1EA2C5C58;
  if (!qword_1EA2C5C58)
  {
    sub_1C2041488(255, &qword_1EA2C5C40, MEMORY[0x1E4F3EB98], MEMORY[0x1E4F3EB78], MEMORY[0x1E4F3DBF8]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C5C58);
  }
  return result;
}

void sub_1C2042014()
{
  if (!qword_1EA2C5C60)
  {
    sub_1C2040A74(255, &qword_1EA2C5B98, (uint64_t (*)(uint64_t))sub_1C2040AD8, MEMORY[0x1E4F3F108]);
    unint64_t v0 = sub_1C214A1E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C5C60);
    }
  }
}

uint64_t sub_1C20420AC(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_release();
  }
  else {
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1C20420BC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C2042124(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_retain();
  }
  else {
    return swift_bridgeObjectRetain();
  }
}

uint64_t sub_1C2042134(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_1C2042194(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_1C20421E0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1C214A230();
  *a1 = result;
  return result;
}

uint64_t sub_1C204220C()
{
  return sub_1C214A240();
}

uint64_t sub_1C2042238()
{
  return sub_1C214A210();
}

uint64_t sub_1C204225C(uint64_t a1)
{
  uint64_t v2 = sub_1C214A380();
  MEMORY[0x1F4188790](v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return sub_1C214A220();
}

uint64_t sub_1C2042328(uint64_t a1, uint64_t a2)
{
  sub_1C2040A74(0, &qword_1EA2C5BF8, MEMORY[0x1E4F3EC78], MEMORY[0x1E4F3DF18]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C20423BC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  sub_1C2040A74(0, a2, a3, a4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

uint64_t sub_1C2042418(uint64_t a1)
{
  return a1;
}

uint64_t sub_1C2042444(uint64_t a1, uint64_t a2)
{
  sub_1C2040C78();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for DDIOnboardingDataSource()
{
  uint64_t result = qword_1EA2C5C90;
  if (!qword_1EA2C5C90) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1C20424F4()
{
  sub_1C20435D0(319, (unint64_t *)&qword_1EA2C2CC8, type metadata accessor for MedicationSearchItem, MEMORY[0x1E4FBB718]);
  if (v0 <= 0x3F) {
    swift_initClassMetadata2();
  }
}

uint64_t sub_1C20425D8()
{
  uint64_t v11 = sub_1C2147B20();
  uint64_t v1 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(void *)(v0 + qword_1EA2C5C80);
  swift_allocObject();
  uint64_t v10 = v0;
  swift_weakInit();
  sub_1C2043520();
  sub_1C2043588((unint64_t *)&qword_1EA2C5CC0, (void (*)(uint64_t))sub_1C2043520);
  swift_retain();
  sub_1C214A0F0();
  swift_release();
  swift_release();
  swift_beginAccess();
  sub_1C2149E20();
  swift_endAccess();
  swift_release();
  sub_1C20435D0(0, (unint64_t *)&qword_1EA2C2DD0, MEMORY[0x1E4F66468], MEMORY[0x1E4FBBE00]);
  sub_1C2148540();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1C214FCC0;
  sub_1C2042CD4();
  sub_1C2147B10();
  sub_1C2147AD0();
  uint64_t v4 = *(void (**)(char *, uint64_t))(v1 + 8);
  uint64_t v5 = v11;
  v4(v3, v11);
  sub_1C2148520();
  uint64_t v6 = v10;
  swift_retain();
  unint64_t v7 = sub_1C2042F3C((uint64_t)&unk_1F1D73B58, v6);
  swift_release();
  sub_1C1F37B5C(v7);
  swift_bridgeObjectRelease();
  sub_1C2147B10();
  sub_1C2147AD0();
  v4(v3, v5);
  sub_1C2148520();
  sub_1C21485B0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C2042944()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = result;
    sub_1C2042CD4();
    sub_1C21485C0();
    swift_bridgeObjectRelease();
    swift_retain();
    unint64_t v2 = sub_1C2042F3C((uint64_t)&unk_1F1D73E88, v1);
    swift_release();
    sub_1C1F37B5C(v2);
    swift_bridgeObjectRelease();
    sub_1C21485C0();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1C2042A18()
{
}

uint64_t sub_1C2042A48()
{
  swift_release();
  swift_release();
  sub_1C2043414(v0 + qword_1EA2C7FE8);

  return swift_bridgeObjectRelease();
}

uint64_t sub_1C2042AA8()
{
  uint64_t v0 = sub_1C2148610();
  swift_release();
  swift_release();
  sub_1C2043414(v0 + qword_1EA2C7FE8);
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_1C2042B4C()
{
  return type metadata accessor for DDIOnboardingDataSource();
}

uint64_t sub_1C2042B54()
{
  return sub_1C214ACC0();
}

uint64_t sub_1C2042BF4()
{
  return swift_retain();
}

uint64_t sub_1C2042C08()
{
  return sub_1C2148B80();
}

uint64_t sub_1C2042C80()
{
  return sub_1C2043588(&qword_1EA2C5CA0, (void (*)(uint64_t))type metadata accessor for DDIOnboardingDataSource);
}

uint64_t sub_1C2042CC8()
{
  return MEMORY[0x1E4FBB3A8];
}

uint64_t sub_1C2042CD4()
{
  sub_1C20435D0(0, (unint64_t *)&qword_1EBF0C958, (uint64_t (*)(uint64_t))sub_1C1F1CB5C, MEMORY[0x1E4FBBE00]);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1C214FCC0;
  if (qword_1EBF0CA00 != -1) {
    swift_once();
  }
  id v1 = (id)qword_1EBF0CA18;
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_1C2147730();
  uint64_t v4 = v3;
  swift_bridgeObjectRelease();

  *(void *)(v0 + 56) = &type metadata for InteractionsOnboardingEducationItem;
  unint64_t v5 = sub_1C2043634();
  *(void *)(v0 + 64) = v5;
  uint64_t v6 = (void *)swift_allocObject();
  *(void *)(v0 + 32) = v6;
  type metadata accessor for InteractionsOnboardingEducationCell();
  sub_1C2043588((unint64_t *)&qword_1EA2C5CA8, (void (*)(uint64_t))type metadata accessor for InteractionsOnboardingEducationCell);
  uint64_t v7 = sub_1C21481D0();
  void v6[2] = v2;
  v6[3] = v4;
  v6[4] = v7;
  v6[5] = v8;
  id v9 = (id)qword_1EBF0CA18;
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_1C2147730();
  uint64_t v12 = v11;
  swift_bridgeObjectRelease();

  *(void *)(v0 + 96) = &type metadata for InteractionsOnboardingEducationItem;
  *(void *)(v0 + 104) = v5;
  uint64_t v13 = (void *)swift_allocObject();
  *(void *)(v0 + 72) = v13;
  uint64_t v14 = sub_1C21481D0();
  void v13[2] = v10;
  v13[3] = v12;
  v13[4] = v14;
  v13[5] = v15;
  return v0;
}

uint64_t sub_1C2042F3C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x1E4FBC860];
  if (v3)
  {
    uint64_t v9 = MEMORY[0x1E4FBC860];
    sub_1C214B850();
    uint64_t v6 = (uint64_t *)(a1 + 32);
    uint64_t v7 = *(void *)(a2 + qword_1EA2C5C78);
    type metadata accessor for OnboardingLifestyleInteractionSwitchItem();
    do
    {
      uint64_t v8 = *v6++;
      swift_allocObject();
      swift_retain();
      sub_1C213D24C(v8, v7);
      swift_release();
      sub_1C214B820();
      sub_1C214B860();
      sub_1C214B870();
      sub_1C214B830();
      --v3;
    }
    while (v3);
    return v9;
  }
  return result;
}

uint64_t sub_1C2043040(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_1C2147B20();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = qword_1EA2C5C78;
  sub_1C2148E10();
  swift_retain();
  sub_1C2148E00();
  sub_1C2148DB0();
  swift_release();
  sub_1C20434A0();
  sub_1C214AC00();
  sub_1C2148D70();
  swift_allocObject();
  *(void *)(v2 + v9) = sub_1C2148C90();
  *(void *)(v2 + qword_1EA2C5C88) = MEMORY[0x1E4FBC870];
  sub_1C1F246EC(a1, v2 + qword_1EA2C7FE8);
  *(void *)(v2 + qword_1EA2C5C80) = a2;
  swift_retain();
  swift_release();
  v12[0] = 0;
  v12[1] = 0xE000000000000000;
  sub_1C214B7C0();
  swift_bridgeObjectRelease();
  strcpy((char *)v12, "MutableArray<");
  HIWORD(v12[1]) = -4864;
  sub_1C2147B10();
  sub_1C2147AD0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  sub_1C214A6C0();
  uint64_t v10 = sub_1C2148590();
  swift_retain();
  sub_1C20425D8();
  swift_release();
  sub_1C2043414(a1);
  return v10;
}

void *sub_1C204328C(uint64_t a1)
{
  uint64_t v2 = sub_1C2148710();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 == 1)
  {
    sub_1C2148690();
    sub_1C21486C0();
    sub_1C21486F0();
LABEL_6:
    uint64_t v6 = (void *)sub_1C2148700();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    return v6;
  }
  if (a1)
  {
    sub_1C2148690();
    goto LABEL_6;
  }
  sub_1C2148690();
  uint64_t v6 = (void *)sub_1C2148700();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  objc_msgSend(v6, sel_setContentInsetsReference_, 1);
  objc_msgSend(v6, sel_setContentInsets_, 0.0, 24.0, 0.0, 24.0);
  objc_msgSend(v6, sel_setInterGroupSpacing_, 15.0);
  return v6;
}

uint64_t sub_1C2043414(uint64_t a1)
{
  sub_1C20435D0(0, (unint64_t *)&qword_1EA2C2CC8, type metadata accessor for MedicationSearchItem, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1C20434A0()
{
  unint64_t result = qword_1EBF0C7C8;
  if (!qword_1EBF0C7C8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBF0C7C8);
  }
  return result;
}

uint64_t sub_1C20434E0()
{
  swift_weakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C2043518()
{
  return sub_1C2042944();
}

void sub_1C2043520()
{
  if (!qword_1EA2C5CB8)
  {
    sub_1C1F35A04();
    unint64_t v0 = sub_1C2149EA0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C5CB8);
    }
  }
}

uint64_t sub_1C2043588(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C20435D0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_1C2043634()
{
  unint64_t result = qword_1EA2C5CC8;
  if (!qword_1EA2C5CC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C5CC8);
  }
  return result;
}

uint64_t sub_1C2043688()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1C20436C8(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  uint64_t v4 = *a2;
  swift_beginAccess();
  *(void *)(v4 + 56) = v3;
  *(void *)(v4 + 64) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C2043728()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 56);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1C2043774(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 56) = a1;
  *(void *)(v2 + 64) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1C20437C8())()
{
  return j__swift_endAccess;
}

uint64_t sub_1C204381C()
{
  sub_1C2147B20();
  sub_1C2043A9C(&qword_1EA2C39F8, 255, MEMORY[0x1E4F27990]);
  uint64_t v1 = sub_1C214BA40();
  sub_1C214A6C0();
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t MedicationEducationItem.__allocating_init(primaryContent:attribution:alternateRenderingMode:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v10 = swift_allocObject();
  type metadata accessor for MedicationEducationItemCell();
  sub_1C2043A9C(&qword_1EA2C5CD8, v11, (void (*)(uint64_t))type metadata accessor for MedicationEducationItemCell);
  *(void *)(v10 + 56) = sub_1C21481D0();
  *(void *)(v10 + 64) = v12;
  sub_1C2147B10();
  *(void *)(v10 + 16) = a1;
  *(void *)(v10 + 24) = a2;
  *(void *)(v10 + 32) = a3;
  *(void *)(v10 + 40) = a4;
  *(unsigned char *)(v10 + 48) = a5;
  return v10;
}

uint64_t MedicationEducationItem.init(primaryContent:attribution:alternateRenderingMode:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  type metadata accessor for MedicationEducationItemCell();
  sub_1C2043A9C(&qword_1EA2C5CD8, v11, (void (*)(uint64_t))type metadata accessor for MedicationEducationItemCell);
  *(void *)(v5 + 56) = sub_1C21481D0();
  *(void *)(v5 + 64) = v12;
  sub_1C2147B10();
  *(void *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = a2;
  *(void *)(v5 + 32) = a3;
  *(void *)(v5 + 40) = a4;
  *(unsigned char *)(v5 + 48) = a5;
  return v5;
}

uint64_t type metadata accessor for MedicationEducationItemCell()
{
  return self;
}

uint64_t sub_1C2043A9C(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t MedicationEducationItem.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC19HealthMedicationsUI23MedicationEducationItem_uuid;
  uint64_t v2 = sub_1C2147B20();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t MedicationEducationItem.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC19HealthMedicationsUI23MedicationEducationItem_uuid;
  uint64_t v2 = sub_1C2147B20();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_1C2043C18()
{
  uint64_t v1 = *v0;
  swift_beginAccess();
  uint64_t v2 = *(void *)(v1 + 56);
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1C2043C68()
{
  sub_1C2147B20();
  sub_1C2043A9C(&qword_1EA2C39F8, 255, MEMORY[0x1E4F27990]);
  uint64_t v1 = sub_1C214BA40();
  sub_1C214A6C0();
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1C2043D44(uint64_t a1, void *a2)
{
  sub_1C1F2116C(a1, (uint64_t)v5);
  uint64_t v3 = *a2 + OBJC_IVAR____TtC19HealthMedicationsUI27MedicationEducationItemCell_item;
  swift_beginAccess();
  sub_1C1F32DDC((uint64_t)v5, v3);
  swift_endAccess();
  sub_1C20443D8();
  return sub_1C1F374E4((uint64_t)v5);
}

uint64_t sub_1C2043DB8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI27MedicationEducationItemCell_item;
  swift_beginAccess();
  return sub_1C1F2116C(v3, a1);
}

uint64_t sub_1C2043E0C(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI27MedicationEducationItemCell_item;
  swift_beginAccess();
  sub_1C1F32DDC(a1, v3);
  swift_endAccess();
  sub_1C20443D8();
  return sub_1C1F374E4(a1);
}

uint64_t (*sub_1C2043E7C(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1C2043EDC;
}

uint64_t sub_1C2043EDC(uint64_t a1, char a2)
{
  uint64_t result = swift_endAccess();
  if ((a2 & 1) == 0) {
    return sub_1C20443D8();
  }
  return result;
}

id sub_1C2043F10()
{
  uint64_t v1 = OBJC_IVAR____TtC19HealthMedicationsUI27MedicationEducationItemCell____lazy_storage___primaryLabel;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI27MedicationEducationItemCell____lazy_storage___primaryLabel);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI27MedicationEducationItemCell____lazy_storage___primaryLabel);
  }
  else
  {
    id v4 = sub_1C2043F70();
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_1C2043F70()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
  id v1 = objc_msgSend(self, sel_preferredFontForTextStyle_, *MEMORY[0x1E4FB28C8]);
  objc_msgSend(v0, sel_setFont_, v1);

  objc_msgSend(v0, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  uint64_t v7 = sub_1C214A5F0();
  uint64_t v8 = v2;
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  id v3 = v0;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  id v4 = (void *)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setAccessibilityIdentifier_, v4, v7, v8);

  objc_msgSend(v3, sel_setNumberOfLines_, 0);
  LODWORD(v5) = 1148846080;
  objc_msgSend(v3, sel_setContentCompressionResistancePriority_forAxis_, 1, v5);
  objc_msgSend(v3, sel_setAdjustsFontForContentSizeCategory_, 1);
  return v3;
}

id sub_1C2044120()
{
  uint64_t v1 = OBJC_IVAR____TtC19HealthMedicationsUI27MedicationEducationItemCell____lazy_storage___attributionLabel;
  uint64_t v2 = *(void **)(v0
                + OBJC_IVAR____TtC19HealthMedicationsUI27MedicationEducationItemCell____lazy_storage___attributionLabel);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC19HealthMedicationsUI27MedicationEducationItemCell____lazy_storage___attributionLabel);
  }
  else
  {
    swift_getObjectType();
    id v4 = sub_1C2044188();
    double v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_1C2044188()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
  objc_msgSend(v0, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  uint64_t v1 = sub_1C214A5F0();
  uint64_t v3 = v2;
  sub_1C2043A9C(&qword_1EA2C5CD8, v2, (void (*)(uint64_t))type metadata accessor for MedicationEducationItemCell);
  id v4 = v0;
  sub_1C21481D0();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  uint64_t v10 = v1;
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  double v5 = (void *)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_setAccessibilityIdentifier_, v5, v10, v3);

  objc_msgSend(v4, sel_setNumberOfLines_, 0);
  id v6 = objc_msgSend(self, sel_preferredFontForTextStyle_, *MEMORY[0x1E4FB2950]);
  objc_msgSend(v4, sel_setFont_, v6);

  id v7 = objc_msgSend(self, sel_secondaryLabelColor);
  objc_msgSend(v4, sel_setTextColor_, v7);

  LODWORD(v8) = 1148846080;
  objc_msgSend(v4, sel_setContentCompressionResistancePriority_forAxis_, 1, v8);
  objc_msgSend(v4, sel_setAdjustsFontForContentSizeCategory_, 1);
  return v4;
}

uint64_t sub_1C20443D8()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1C21497F0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  double v5 = (char *)&v98 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1F1CC40(0, &qword_1EBF0C620, MEMORY[0x1E4FB0F28]);
  MEMORY[0x1F4188790](v6 - 8);
  double v8 = (char *)&v98 - v7;
  uint64_t v9 = sub_1C21499D0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v98 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = (uint64_t)v1 + OBJC_IVAR____TtC19HealthMedicationsUI27MedicationEducationItemCell_item;
  swift_beginAccess();
  sub_1C1F2116C(v13, (uint64_t)v104);
  if (!v104[3])
  {
    sub_1C1F374E4((uint64_t)v104);
LABEL_24:
    sub_1C21497A0();
    id v89 = v1;
    id v90 = sub_1C21497E0();
    os_log_type_t v91 = sub_1C214ABD0();
    if (os_log_type_enabled(v90, v91))
    {
      uint64_t v92 = swift_slowAlloc();
      uint64_t v102 = v2;
      uint64_t v93 = (uint8_t *)v92;
      uint64_t v94 = swift_slowAlloc();
      uint64_t v103 = v94;
      *(_DWORD *)uint64_t v93 = 136446210;
      sub_1C1F2116C(v13, (uint64_t)v104);
      sub_1C1F1CC40(0, (unint64_t *)&qword_1EBF0C300, (void (*)(uint64_t))sub_1C1F1CB5C);
      uint64_t v95 = sub_1C214A630();
      v104[0] = sub_1C1F6FD54(v95, v96, &v103);
      sub_1C214B530();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C1F0B000, v90, v91, "Incorrect view model for MedicationEducationItemCell: %{public}s", v93, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C8754730](v94, -1, -1);
      MEMORY[0x1C8754730](v93, -1, -1);

      return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v102);
    }
    else
    {

      return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    }
  }
  sub_1C1F1CB5C();
  type metadata accessor for MedicationEducationItem();
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_24;
  }
  uint64_t v14 = v103;
  sub_1C21499A0();
  char v15 = *(unsigned char *)(v14 + 48);
  uint64_t v16 = self;
  uint64_t v17 = &selRef_tertiarySystemBackgroundColor;
  if (v15) {
    uint64_t v17 = &selRef_tertiarySystemFillColor;
  }
  id v18 = [v16 *v17];
  sub_1C2149990();
  uint64_t v19 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
  uint64_t v100 = v12;
  v19(v8, v12, v9);
  uint64_t v101 = v9;
  uint64_t v102 = v10;
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
  MEMORY[0x1C8752FF0](v8);
  sub_1C1F0ED28();
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_1C2151E40;
  id v21 = sub_1C2043F10();
  id v22 = objc_msgSend(v21, sel_topAnchor);

  id v23 = objc_msgSend(v1, sel_contentView);
  id v24 = objc_msgSend(v23, sel_topAnchor);

  sub_1C2147DF0();
  id v25 = objc_msgSend(v22, sel_constraintEqualToAnchor_constant_, v24);

  *(void *)(v20 + 32) = v25;
  id v26 = sub_1C2043F10();
  id v27 = objc_msgSend(v26, sel_leadingAnchor);

  id v28 = objc_msgSend(v1, sel_contentView);
  id v29 = objc_msgSend(v28, sel_layoutMarginsGuide);

  id v30 = objc_msgSend(v29, sel_leadingAnchor);
  id v31 = objc_msgSend(v27, sel_constraintEqualToAnchor_, v30);

  *(void *)(v20 + 40) = v31;
  id v32 = sub_1C2043F10();
  id v33 = objc_msgSend(v32, sel_trailingAnchor);

  id v34 = objc_msgSend(v1, sel_contentView);
  id v35 = objc_msgSend(v34, sel_layoutMarginsGuide);

  id v36 = objc_msgSend(v35, sel_trailingAnchor);
  id v37 = objc_msgSend(v33, sel_constraintEqualToAnchor_, v36);

  *(void *)(v20 + 48) = v37;
  uint64_t v103 = v20;
  sub_1C214A7A0();
  unint64_t v38 = v103;
  v104[0] = v103;
  uint64_t v39 = v14;
  id v40 = objc_msgSend(v1, sel_contentView);
  id v41 = sub_1C2043F10();
  objc_msgSend(v40, sel_addSubview_, v41);

  if (!*(void *)(v14 + 40)) {
    goto LABEL_17;
  }
  swift_bridgeObjectRetain();
  sub_1C214A680();
  uint64_t v43 = v42;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v43) {
    goto LABEL_17;
  }
  uint64_t v99 = v14;
  id v44 = objc_msgSend(v1, sel_contentView);
  id v45 = sub_1C2044120();
  objc_msgSend(v44, sel_addSubview_, v45);

  id v46 = sub_1C2044120();
  id v47 = objc_msgSend(v46, sel_topAnchor);

  id v48 = sub_1C2043F10();
  id v49 = objc_msgSend(v48, sel_bottomAnchor);

  sub_1C2147DF0();
  id v50 = objc_msgSend(v47, sel_constraintEqualToAnchor_constant_, v49);

  id v51 = sub_1C2044120();
  id v52 = objc_msgSend(v51, sel_leadingAnchor);

  id v53 = sub_1C2043F10();
  id v54 = objc_msgSend(v53, sel_leadingAnchor);

  id v98 = objc_msgSend(v52, sel_constraintEqualToAnchor_, v54);
  id v55 = sub_1C2044120();
  id v56 = objc_msgSend(v55, sel_trailingAnchor);

  id v57 = sub_1C2043F10();
  id v58 = objc_msgSend(v57, sel_trailingAnchor);

  id v59 = objc_msgSend(v56, sel_constraintEqualToAnchor_, v58);
  id v60 = sub_1C2044120();
  id v61 = objc_msgSend(v60, sel_bottomAnchor);

  id v62 = objc_msgSend(v1, sel_contentView);
  id v63 = objc_msgSend(v62, sel_bottomAnchor);

  sub_1C2147E00();
  id v65 = objc_msgSend(v61, sel_constraintEqualToAnchor_constant_, v63, -v64);

  if (!(v38 >> 62))
  {
    uint64_t v66 = *(void *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v67 = v66 + 4;
    if (!__OFADD__(v66, 4)) {
      goto LABEL_9;
    }
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  swift_bridgeObjectRetain();
  uint64_t v97 = sub_1C214B930();
  swift_bridgeObjectRelease();
  uint64_t v67 = v97 + 4;
  if (__OFADD__(v97, 4)) {
    goto LABEL_30;
  }
LABEL_9:
  sub_1C1FCDE1C(v67, 1);
  sub_1C214A7A0();
  unint64_t v38 = (unint64_t)v50;
  MEMORY[0x1C87528E0]();
  if (*(void *)((v104[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v104[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
LABEL_31:
  }
    sub_1C214A7D0();
  sub_1C214A820();
  sub_1C214A7A0();
  id v68 = v98;
  MEMORY[0x1C87528E0]();
  if (*(void *)((v104[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v104[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1C214A7D0();
  }
  sub_1C214A820();
  sub_1C214A7A0();
  id v69 = v59;
  MEMORY[0x1C87528E0]();
  if (*(void *)((v104[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v104[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1C214A7D0();
  }
  sub_1C214A820();
  sub_1C214A7A0();
  id v70 = v65;
  MEMORY[0x1C87528E0]();
  if (*(void *)((v104[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v104[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1C214A7D0();
  }
  sub_1C214A820();
  sub_1C214A7A0();

  uint64_t v39 = v99;
LABEL_17:
  uint64_t v71 = v101;
  uint64_t v72 = v102;
  uint64_t v73 = v100;
  if (*(unsigned char *)(v39 + 48))
  {
    id v74 = sub_1C2043F10();
    id v75 = objc_msgSend(self, sel_secondaryLabelColor);
    objc_msgSend(v74, sel_setTextColor_, v75);

    id v76 = sub_1C2043F10();
    id v77 = objc_msgSend(v76, sel_bottomAnchor);

    id v78 = objc_msgSend(v1, sel_contentView);
    id v79 = objc_msgSend(v78, sel_bottomAnchor);

    sub_1C2147DF0();
    id v81 = objc_msgSend(v77, sel_constraintEqualToAnchor_constant_, v79, -v80);

    MEMORY[0x1C87528E0]();
    if (*(void *)((v104[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v104[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C214A7D0();
    }
    sub_1C214A820();
    sub_1C214A7A0();
  }
  uint64_t v82 = self;
  sub_1C1F645D4();
  uint64_t v83 = (void *)sub_1C214A770();
  swift_bridgeObjectRelease();
  objc_msgSend(v82, sel_activateConstraints_, v83);

  id v84 = sub_1C2043F10();
  swift_bridgeObjectRetain();
  uint64_t v85 = (void *)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  objc_msgSend(v84, sel_setText_, v85);

  if (*(void *)(v39 + 40))
  {
    swift_bridgeObjectRetain();
    id v86 = sub_1C2044120();
    id v87 = (void *)sub_1C214A5B0();
    swift_bridgeObjectRelease();
    objc_msgSend(v86, sel_setText_, v87);
    swift_release();

    return (*(uint64_t (**)(char *, uint64_t))(v72 + 8))(v73, v71);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v72 + 8))(v73, v71);
    return swift_release();
  }
}

id MedicationEducationItemCell.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  id v9 = objc_allocWithZone(v4);

  return objc_msgSend(v9, sel_initWithFrame_, a1, a2, a3, a4);
}

id MedicationEducationItemCell.init(frame:)(double a1, double a2, double a3, double a4)
{
  id v9 = &v4[OBJC_IVAR____TtC19HealthMedicationsUI27MedicationEducationItemCell_item];
  *(_OWORD *)id v9 = 0u;
  *((_OWORD *)v9 + 1) = 0u;
  *((void *)v9 + 4) = 0;
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI27MedicationEducationItemCell____lazy_storage___primaryLabel] = 0;
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI27MedicationEducationItemCell____lazy_storage___attributionLabel] = 0;
  v11.receiver = v4;
  v11.super_class = (Class)type metadata accessor for MedicationEducationItemCell();
  return objc_msgSendSuper2(&v11, sel_initWithFrame_, a1, a2, a3, a4);
}

id MedicationEducationItemCell.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id MedicationEducationItemCell.init(coder:)(void *a1)
{
  id v3 = &v1[OBJC_IVAR____TtC19HealthMedicationsUI27MedicationEducationItemCell_item];
  *(_OWORD *)id v3 = 0u;
  *((_OWORD *)v3 + 1) = 0u;
  *((void *)v3 + 4) = 0;
  *(void *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI27MedicationEducationItemCell____lazy_storage___primaryLabel] = 0;
  *(void *)&v1[OBJC_IVAR____TtC19HealthMedicationsUI27MedicationEducationItemCell____lazy_storage___attributionLabel] = 0;
  v6.receiver = v1;
  v6.super_class = (Class)type metadata accessor for MedicationEducationItemCell();
  id v4 = objc_msgSendSuper2(&v6, sel_initWithCoder_, a1);

  return v4;
}

id MedicationEducationItemCell.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MedicationEducationItemCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1C20453F8@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 64);
  *a2 = *(void *)(v3 + 56);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C2045448@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC19HealthMedicationsUI27MedicationEducationItemCell_item;
  swift_beginAccess();
  return sub_1C1F2116C(v3, a2);
}

uint64_t sub_1C20454A4()
{
  return type metadata accessor for MedicationEducationItem();
}

uint64_t type metadata accessor for MedicationEducationItem()
{
  uint64_t result = qword_1EA2C5CF8;
  if (!qword_1EA2C5CF8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C20454F8()
{
  uint64_t result = sub_1C2147B20();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for MedicationEducationItem(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MedicationEducationItem);
}

uint64_t dispatch thunk of MedicationEducationItem.reuseIdentifier.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of MedicationEducationItem.reuseIdentifier.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of MedicationEducationItem.reuseIdentifier.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of MedicationEducationItem.uniqueIdentifier.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t dispatch thunk of MedicationEducationItem.__allocating_init(primaryContent:attribution:alternateRenderingMode:)()
{
  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t method lookup function for MedicationEducationItemCell(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MedicationEducationItemCell);
}

uint64_t dispatch thunk of MedicationEducationItemCell.item.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of MedicationEducationItemCell.item.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of MedicationEducationItemCell.item.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x78))();
}

uint64_t type metadata accessor for InteractionFactorsDataSourceProvider()
{
  return self;
}

uint64_t sub_1C2045740()
{
  sub_1C1F24848();
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1C214FCC0;
  type metadata accessor for InteractionFactorsHeaderDataSource();
  swift_allocObject();
  uint64_t v1 = sub_1C20D2EA4();
  uint64_t v2 = sub_1C2045884(&qword_1EA2C5D08, (void (*)(uint64_t))type metadata accessor for InteractionFactorsHeaderDataSource);
  *(void *)(v0 + 32) = v1;
  *(void *)(v0 + 40) = v2;
  sub_1C2148E10();
  sub_1C2148E00();
  sub_1C2148DB0();
  swift_release();
  sub_1C20434A0();
  sub_1C214AC00();
  sub_1C2148D70();
  swift_allocObject();
  uint64_t v3 = sub_1C2148C90();
  type metadata accessor for InteractionFactorsLifestyleOptionsDataSource();
  swift_allocObject();
  uint64_t v4 = sub_1C1FC4040(v3);
  uint64_t v5 = sub_1C2045884(&qword_1EA2C5D10, (void (*)(uint64_t))type metadata accessor for InteractionFactorsLifestyleOptionsDataSource);
  *(void *)(v0 + 48) = v4;
  *(void *)(v0 + 56) = v5;
  return v0;
}

uint64_t sub_1C2045884(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

__n128 UITextFieldWithInsets.insets.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI21UITextFieldWithInsets_insets;
  swift_beginAccess();
  char v4 = *(unsigned char *)(v3 + 32);
  __n128 result = *(__n128 *)v3;
  long long v6 = *(_OWORD *)(v3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v3;
  *(_OWORD *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 32) = v4;
  return result;
}

uint64_t UITextFieldWithInsets.insets.setter(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI21UITextFieldWithInsets_insets;
  swift_beginAccess();
  return sub_1C2045984(a1, v3);
}

uint64_t sub_1C2045984(uint64_t a1, uint64_t a2)
{
  sub_1C20459E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1C20459E8()
{
  if (!qword_1EA2C5D20)
  {
    type metadata accessor for UIEdgeInsets(255);
    unint64_t v0 = sub_1C214B4F0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C5D20);
    }
  }
}

uint64_t (*UITextFieldWithInsets.insets.modify())()
{
  return j__swift_endAccess;
}

__C::CGRect __swiftcall UITextFieldWithInsets.textRect(forBounds:)(__C::CGRect forBounds)
{
  sub_1C2045ADC((SEL *)&selRef_textRectForBounds_, forBounds.origin.x, forBounds.origin.y, forBounds.size.width, forBounds.size.height);
  result.size.height = v4;
  result.size.width = v3;
  result.origin.y = v2;
  result.origin.x = v1;
  return result;
}

double UIEdgeInsetsInsetRect(double a1, double a2, double a3, double a4, double a5, double a6)
{
  return a1 + a6;
}

__C::CGRect __swiftcall UITextFieldWithInsets.editingRect(forBounds:)(__C::CGRect forBounds)
{
  sub_1C2045ADC((SEL *)&selRef_editingRectForBounds_, forBounds.origin.x, forBounds.origin.y, forBounds.size.width, forBounds.size.height);
  result.size.height = v4;
  result.size.width = v3;
  result.origin.y = v2;
  result.origin.x = v1;
  return result;
}

void sub_1C2045ADC(SEL *a1, double a2, double a3, double a4, double a5)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v12 = (double *)&v5[OBJC_IVAR____TtC19HealthMedicationsUI21UITextFieldWithInsets_insets];
  swift_beginAccess();
  if ((_BYTE)v12[4])
  {
    v20.receiver = v5;
    v20.super_class = ObjectType;
    objc_msgSendSuper2(&v20, *a1, a2, a3, a4, a5);
  }
  else
  {
    double v14 = *v12;
    double v13 = v12[1];
    v19.receiver = v5;
    v19.super_class = ObjectType;
    objc_msgSendSuper2(&v19, *a1, a2, a3, a4, a5);
    UIEdgeInsetsInsetRect(v15, v16, v17, v18, v14, v13);
  }
}

void sub_1C2045BDC(char *a1, double a2, double a3, double a4, double a5, uint64_t a6, SEL *a7)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  double v14 = (double *)&a1[OBJC_IVAR____TtC19HealthMedicationsUI21UITextFieldWithInsets_insets];
  swift_beginAccess();
  if ((_BYTE)v14[4])
  {
    v28.receiver = a1;
    v28.super_class = ObjectType;
    objc_msgSendSuper2(&v28, *a7, a2, a3, a4, a5);
  }
  else
  {
    double v16 = *v14;
    double v15 = v14[1];
    v27.receiver = a1;
    v27.super_class = ObjectType;
    double v17 = *a7;
    double v18 = a1;
    objc_msgSendSuper2(&v27, v17, a2, a3, a4, a5);
    double v20 = v19;
    double v22 = v21;
    double v24 = v23;
    double v26 = v25;

    UIEdgeInsetsInsetRect(v20, v22, v24, v26, v16, v15);
  }
}

id UITextFieldWithInsets.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  id v9 = objc_allocWithZone(v4);

  return objc_msgSend(v9, sel_initWithFrame_, a1, a2, a3, a4);
}

id UITextFieldWithInsets.init(frame:)(double a1, double a2, double a3, double a4)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v10 = &v4[OBJC_IVAR____TtC19HealthMedicationsUI21UITextFieldWithInsets_insets];
  *(_OWORD *)uint64_t v10 = 0u;
  *((_OWORD *)v10 + 1) = 0u;
  v10[32] = 1;
  v12.receiver = v4;
  v12.super_class = ObjectType;
  return objc_msgSendSuper2(&v12, sel_initWithFrame_, a1, a2, a3, a4);
}

id UITextFieldWithInsets.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id UITextFieldWithInsets.init(coder:)(void *a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  double v4 = &v1[OBJC_IVAR____TtC19HealthMedicationsUI21UITextFieldWithInsets_insets];
  *(_OWORD *)double v4 = 0u;
  *((_OWORD *)v4 + 1) = 0u;
  unsigned char v4[32] = 1;
  v7.receiver = v1;
  v7.super_class = ObjectType;
  id v5 = objc_msgSendSuper2(&v7, sel_initWithCoder_, a1);

  return v5;
}

id UITextFieldWithInsets.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for UITextFieldWithInsets()
{
  return self;
}

uint64_t sub_1C2045FE8(uint64_t a1)
{
  uint64_t v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1C214B680();
    sub_1C2149E40();
    sub_1C2049314(&qword_1EA2C3570, MEMORY[0x1E4F1AB18]);
    uint64_t result = sub_1C214AAA0();
    uint64_t v1 = v18;
    uint64_t v17 = v19;
    uint64_t v3 = v20;
    uint64_t v4 = v21;
    unint64_t v5 = v22;
  }
  else
  {
    uint64_t v6 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v17 = a1 + 56;
    uint64_t v3 = ~v6;
    uint64_t v7 = -v6;
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v5 = v8 & *(void *)(a1 + 56);
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v4 = 0;
  }
  int64_t v9 = (unint64_t)(v3 + 64) >> 6;
  if (v1 < 0) {
    goto LABEL_10;
  }
  while (1)
  {
    if (v5)
    {
      uint64_t v10 = (v5 - 1) & v5;
      unint64_t v11 = __clz(__rbit64(v5)) | (v4 << 6);
      uint64_t v12 = v4;
      goto LABEL_29;
    }
    int64_t v13 = v4 + 1;
    if (__OFADD__(v4, 1)) {
      break;
    }
    if (v13 >= v9) {
      return sub_1C1F495B8();
    }
    unint64_t v14 = *(void *)(v17 + 8 * v13);
    uint64_t v12 = v4 + 1;
    if (!v14)
    {
      uint64_t v12 = v4 + 2;
      if (v4 + 2 >= v9) {
        return sub_1C1F495B8();
      }
      unint64_t v14 = *(void *)(v17 + 8 * v12);
      if (!v14)
      {
        uint64_t v12 = v4 + 3;
        if (v4 + 3 >= v9) {
          return sub_1C1F495B8();
        }
        unint64_t v14 = *(void *)(v17 + 8 * v12);
        if (!v14)
        {
          uint64_t v12 = v4 + 4;
          if (v4 + 4 >= v9) {
            return sub_1C1F495B8();
          }
          unint64_t v14 = *(void *)(v17 + 8 * v12);
          if (!v14)
          {
            uint64_t v12 = v4 + 5;
            if (v4 + 5 >= v9) {
              return sub_1C1F495B8();
            }
            unint64_t v14 = *(void *)(v17 + 8 * v12);
            if (!v14)
            {
              uint64_t v15 = v4 + 6;
              while (v9 != v15)
              {
                unint64_t v14 = *(void *)(v17 + 8 * v15++);
                if (v14)
                {
                  uint64_t v12 = v15 - 1;
                  goto LABEL_28;
                }
              }
              return sub_1C1F495B8();
            }
          }
        }
      }
    }
LABEL_28:
    uint64_t v10 = (v14 - 1) & v14;
    unint64_t v11 = __clz(__rbit64(v14)) + (v12 << 6);
LABEL_29:
    uint64_t v16 = *(void *)(*(void *)(v1 + 48) + 8 * v11);
    swift_retain();
    if (!v16) {
      return sub_1C1F495B8();
    }
    while (1)
    {
      sub_1C2149E30();
      uint64_t result = swift_release();
      uint64_t v4 = v12;
      unint64_t v5 = v10;
      if ((v1 & 0x8000000000000000) == 0) {
        break;
      }
LABEL_10:
      if (sub_1C214B700())
      {
        sub_1C2149E40();
        swift_unknownObjectRetain();
        swift_dynamicCast();
        swift_unknownObjectRelease();
        uint64_t v12 = v4;
        uint64_t v10 = v5;
        if (v23) {
          continue;
        }
      }
      return sub_1C1F495B8();
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1C20462A4()
{
  uint64_t v1 = qword_1EBF0C568;
  if (*(void *)(v0 + qword_1EBF0C568))
  {
    uint64_t v2 = *(void *)(v0 + qword_1EBF0C568);
  }
  else
  {
    uint64_t v3 = v0;
    sub_1C2148E10();
    sub_1C2148E00();
    sub_1C2148DB0();
    swift_release();
    sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C7C8);
    sub_1C214AC00();
    sub_1C2148D70();
    swift_allocObject();
    uint64_t v2 = sub_1C2148C90();
    *(void *)(v3 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

void *sub_1C2046378()
{
  uint64_t v1 = qword_1EBF0C570;
  if (*(void *)(v0 + qword_1EBF0C570))
  {
    uint64_t v2 = *(void **)(v0 + qword_1EBF0C570);
  }
  else
  {
    uint64_t v3 = v0;
    id v4 = *(id *)(v0 + qword_1EBF0C548);
    uint64_t v5 = sub_1C20462A4();
    type metadata accessor for MedicationsInteractionEngine();
    swift_allocObject();
    uint64_t v2 = sub_1C1F34F68(v4, v5);

    swift_release();
    *(void *)(v3 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

uint64_t InteractionSummaryDataSource.__allocating_init(filteringMedication:listManager:healthStore:analyticsManager:roomType:)(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  return InteractionSummaryDataSource.init(filteringMedication:listManager:healthStore:analyticsManager:roomType:)(a1, a2, a3, a4, a5);
}

uint64_t InteractionSummaryDataSource.init(filteringMedication:listManager:healthStore:analyticsManager:roomType:)(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + qword_1EBF0C568) = 0;
  *(void *)(v5 + qword_1EBF0C570) = 0;
  *(void *)(v5 + qword_1EBF0C558) = MEMORY[0x1E4FBC870];
  *(void *)(v5 + qword_1EA2C5D28) = 0;
  *(void *)(v5 + qword_1EBF0C560) = a1;
  *(void *)(v5 + qword_1EBF0C550) = a2;
  *(void *)(v5 + qword_1EBF0C548) = a3;
  *(void *)(v5 + qword_1EA2C5D30) = a4;
  *(void *)(v5 + qword_1EBF0C578) = a5;
  id v7 = a1;
  swift_retain();
  id v8 = a3;
  swift_retain();
  uint64_t v9 = sub_1C2147F50();
  swift_retain();
  sub_1C2047030();
  swift_release();

  swift_release();
  swift_release();
  return v9;
}

uint64_t sub_1C20465AC()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t InteractionSummaryDataSource.deinit()
{
  swift_beginAccess();
  uint64_t v0 = swift_bridgeObjectRetain();
  sub_1C2045FE8(v0);
  swift_bridgeObjectRelease();
  uint64_t v1 = _s19HealthMedicationsUI34InteractionSeperatorLineDataSourceCfd_0();

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return v1;
}

uint64_t InteractionSummaryDataSource.__deallocating_deinit()
{
  InteractionSummaryDataSource.deinit();

  return swift_deallocClassInstance();
}

uint64_t sub_1C204676C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  id v8 = (void *)swift_allocObject();
  v8[2] = a1;
  v8[3] = a2;
  v8[4] = a3;
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))MEMORY[0x1E4F1AC28];
  sub_1C204935C(0, &qword_1EBF0C6E8, MEMORY[0x1E4F1AC28]);
  swift_allocObject();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1C2149F10();
  sub_1C20494A0(&qword_1EBF0C6E0, &qword_1EBF0C6E8, v9);
  uint64_t v10 = sub_1C2149FC0();
  uint64_t result = swift_release();
  *a4 = v10;
  return result;
}

void sub_1C20468A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a1;
  *(void *)(v8 + 24) = a2;
  swift_retain();
  sub_1C2046378();
  id v9 = sub_1C1F349B8();
  swift_release();
  unint64_t v10 = swift_bridgeObjectRetain();
  sub_1C203771C(v10);
  swift_bridgeObjectRelease();
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8C0);
  sub_1C1F2F9D0((unint64_t *)&qword_1EBF0C8C8, (unint64_t *)&qword_1EBF0C8C0);
  unint64_t v11 = (void *)sub_1C214AA50();
  swift_bridgeObjectRelease();
  if (a5)
  {
    sub_1C1F12718(0, &qword_1EBF0C908);
    sub_1C1F2F9D0((unint64_t *)&qword_1EBF0C910, &qword_1EBF0C908);
    a5 = (void *)sub_1C214AA50();
  }
  uint64_t v12 = swift_allocObject();
  swift_weakInit();
  int64_t v13 = (void *)swift_allocObject();
  void v13[2] = v12;
  v13[3] = sub_1C1F30CF8;
  v13[4] = v8;
  v15[4] = sub_1C204955C;
  void v15[5] = v13;
  v15[0] = MEMORY[0x1E4F143A8];
  v15[1] = 1107296256;
  void v15[2] = sub_1C2032288;
  void v15[3] = &block_descriptor_18;
  unint64_t v14 = _Block_copy(v15);
  swift_release();
  objc_msgSend(v9, sel_interactionResultsForMedications_lifestyleFactors_completion_, v11, a5, v14);
  _Block_release(v14);
}

void sub_1C2046B08(uint64_t a1, void *a2, uint64_t a3, void (*a4)(uint64_t, void))
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v8 = Strong;
    if (a2)
    {
      id v36 = a2;
      id v9 = a2;
      sub_1C1F23804(0, (unint64_t *)&qword_1EBF0C9C0);
      sub_1C1F12718(0, &qword_1EA2C52C0);
      if (swift_dynamicCast())
      {
        if (objc_msgSend(v35, sel_code) == (id)1003)
        {
          id v10 = objc_msgSend(self, sel_sharedBehavior);
          if (v10)
          {
            unint64_t v11 = v10;
            unsigned int v12 = objc_msgSend(v10, sel_isAppleInternalInstall);

            if (v12)
            {
              id v34 = a4;

              unint64_t v13 = 1;
LABEL_17:
              uint64_t v20 = *(void **)(v8 + qword_1EBF0C560);
              uint64_t v21 = *(void *)(v8 + qword_1EBF0C550);
              unint64_t v22 = *(void **)(v8 + qword_1EBF0C548);
              uint64_t v23 = swift_allocObject();
              swift_weakInit();
              type metadata accessor for InteractionSummaryItem();
              double v24 = (void *)swift_allocObject();
              type metadata accessor for InteractionSummaryItemCell();
              sub_1C2049314(&qword_1EBF0C4E0, (void (*)(uint64_t))type metadata accessor for InteractionSummaryItemCell);
              id v25 = v20;
              swift_retain();
              id v26 = v22;
              v24[8] = sub_1C21481D0();
              v24[9] = v27;
              void v24[2] = v13;
              v24[3] = v20;
              v24[4] = v21;
              uint64_t v24[5] = v26;
              void v24[6] = sub_1C2049568;
              v24[7] = v23;
              uint64_t v28 = swift_retain();
              v34(v28, 0);
              swift_release_n();
              swift_release();
              return;
            }
            id v32 = v35;
            a4((uint64_t)v35, 1);

            swift_release();
            id v31 = v36;
            goto LABEL_20;
          }
LABEL_26:
          __break(1u);
          return;
        }
      }
      id v29 = a2;
      id v30 = a2;
      a4((uint64_t)a2, 1);
      swift_release();

      id v31 = a2;
LABEL_20:

      return;
    }
    sub_1C20462A4();
    uint64_t v14 = sub_1C2148CC0();
    swift_release();
    if (v14)
    {
      id v15 = objc_msgSend(self, sel_sharedBehavior);
      if (!v15)
      {
        __break(1u);
        goto LABEL_26;
      }
      uint64_t v16 = v15;
      char v17 = objc_msgSend(v15, sel_isAppleInternalInstall);

      if (!a1) {
        goto LABEL_11;
      }
    }
    else
    {
      char v17 = 0;
      if (!a1)
      {
LABEL_11:
        unint64_t v13 = MEMORY[0x1E4FBC860];
        goto LABEL_14;
      }
    }
    uint64_t v18 = *(void **)(v8 + qword_1EBF0C560);
    id v19 = v18;
    unint64_t v13 = Set<>.severities(filtering:includeMinorInteractions:)(v18, v17);

LABEL_14:
    if (v13 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v33 = sub_1C214B930();
      swift_bridgeObjectRelease();
      id v34 = a4;
      if (v33) {
        goto LABEL_17;
      }
    }
    else
    {
      id v34 = a4;
      if (*(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_17;
      }
    }
    swift_bridgeObjectRelease();
    unint64_t v13 = 0;
    goto LABEL_17;
  }
}

uint64_t sub_1C2046EEC(void *a1)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v3 = result;
    id v4 = *(void **)(result + qword_1EBF0C560);
    uint64_t v5 = *(void *)(result + qword_1EBF0C550);
    uint64_t v6 = *(void **)(result + qword_1EBF0C548);
    uint64_t v7 = *(void *)(result + qword_1EA2C5D30);
    uint64_t v8 = *(void *)(result + qword_1EBF0C578);
    objc_allocWithZone((Class)type metadata accessor for InteractionSummaryOverviewViewController());
    id v9 = v4;
    swift_retain();
    id v10 = v6;
    swift_retain();
    id v11 = InteractionSummaryOverviewViewController.init(filteringMedication:listManager:healthStore:analyticsManager:roomType:)(v4, v5, v10, v7, v8);
    objc_msgSend(v11, sel_setModalPresentationStyle_, 2);
    objc_msgSend(a1, sel_showAdaptively_sender_, v11, v3);
    swift_retain();
    sub_1C2149550();
    swift_release();

    return swift_release();
  }
  return result;
}

uint64_t sub_1C2047030()
{
  sub_1C2048E24(0, &qword_1EBF0C7E8, MEMORY[0x1E4FBCC28], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v66 = (char *)&v44 - v2;
  uint64_t v64 = sub_1C214AD60();
  uint64_t v61 = *(void *)(v64 - 8);
  MEMORY[0x1F4188790](v64);
  id v50 = (char *)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C20491E0(0, &qword_1EBF0C740, MEMORY[0x1E4F1AC60]);
  id v48 = v4;
  uint64_t v49 = *((void *)v4 - 1);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v44 - v5;
  sub_1C2006250();
  uint64_t v46 = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  id v10 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C200631C();
  uint64_t v51 = v11;
  uint64_t v53 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  unint64_t v13 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C20490C8(0, &qword_1EA2C5218, (uint64_t (*)(uint64_t))sub_1C200631C, sub_1C200654C, MEMORY[0x1E4F1AA50]);
  uint64_t v56 = v14;
  uint64_t v59 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  id v47 = (char *)&v44 - v15;
  sub_1C2048E88();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v57 = v16;
  uint64_t v58 = v17;
  MEMORY[0x1F4188790](v16);
  id v52 = (char *)&v44 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2048FCC(0);
  uint64_t v60 = v19;
  uint64_t v63 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19);
  id v54 = (char *)&v44 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C20490C8(0, &qword_1EA2C5D58, (uint64_t (*)(uint64_t))sub_1C2048FCC, sub_1C20491AC, MEMORY[0x1E4F1AAB0]);
  uint64_t v62 = v21;
  uint64_t v65 = *(void *)(v21 - 8);
  MEMORY[0x1F4188790](v21);
  id v55 = (char *)&v44 - v22;
  id v67 = (id)sub_1C2149730();
  uint64_t v23 = (void (*)(uint64_t))MEMORY[0x1E4F677F0];
  sub_1C200646C(0, (unint64_t *)&qword_1EBF0C690, MEMORY[0x1E4F677F0]);
  sub_1C1F43CE8();
  sub_1C203585C((unint64_t *)&qword_1EBF0C688, (unint64_t *)&qword_1EBF0C690, v23);
  sub_1C2149FD0();
  swift_release();
  uint64_t v45 = v0;
  uint64_t v24 = sub_1C2046378()[5];
  swift_retain();
  swift_release();
  uint64_t v68 = v24;
  sub_1C2046378();
  sub_1C1F34A2C();
  swift_release();
  swift_beginAccess();
  sub_1C20491E0(0, &qword_1EBF0C750, MEMORY[0x1E4F1AC70]);
  sub_1C2149F50();
  swift_endAccess();
  swift_release();
  sub_1C200646C(0, &qword_1EA2C5208, (void (*)(uint64_t))sub_1C1F35D28);
  sub_1C2049314(&qword_1EBF0C638, (void (*)(uint64_t))sub_1C2006250);
  sub_1C203585C(&qword_1EA2C5210, &qword_1EA2C5208, (void (*)(uint64_t))sub_1C1F35D28);
  sub_1C20064D0();
  uint64_t v25 = v46;
  id v26 = v48;
  sub_1C2149FF0();
  (*(void (**)(char *, void (*)(void, void, void, void)))(v49 + 8))(v6, v26);
  swift_release();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v25);
  uint64_t v27 = v50;
  sub_1C214AD40();
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0CB10);
  id v67 = (id)sub_1C214AD80();
  uint64_t v28 = sub_1C214AD20();
  uint64_t v29 = *(void *)(v28 - 8);
  id v48 = *(void (**)(void, void, void, void))(v29 + 56);
  uint64_t v49 = v29 + 56;
  uint64_t v30 = (uint64_t)v66;
  v48(v66, 1, 1, v28);
  sub_1C200654C();
  uint64_t v46 = sub_1C1F2F9D0((unint64_t *)&qword_1EBF0C7F0, (unint64_t *)&qword_1EBF0CB10);
  id v31 = v47;
  uint64_t v32 = v51;
  sub_1C214A0B0();
  sub_1C1F441C8(v30);

  (*(void (**)(char *, uint64_t))(v61 + 8))(v27, v64);
  (*(void (**)(char *, uint64_t))(v53 + 8))(v13, v32);
  uint64_t v33 = swift_allocObject();
  swift_weakInit();
  uint64_t v34 = swift_allocObject();
  *(void *)(v34 + 16) = sub_1C2049268;
  *(void *)(v34 + 24) = v33;
  sub_1C2149E00();
  sub_1C2048F44(0);
  sub_1C2006770();
  sub_1C2048F98();
  id v35 = v52;
  uint64_t v36 = v56;
  sub_1C214A120();
  swift_release();
  (*(void (**)(char *, uint64_t))(v59 + 8))(v31, v36);
  id v67 = 0;
  sub_1C2049094();
  id v37 = v54;
  uint64_t v38 = v57;
  sub_1C2149FE0();
  (*(void (**)(char *, uint64_t))(v58 + 8))(v35, v38);
  id v67 = (id)sub_1C214AD80();
  uint64_t v39 = (uint64_t)v66;
  v48(v66, 1, 1, v28);
  sub_1C20491AC();
  id v40 = v55;
  uint64_t v41 = v60;
  sub_1C214A0A0();
  sub_1C1F441C8(v39);

  (*(void (**)(char *, uint64_t))(v63 + 8))(v37, v41);
  swift_allocObject();
  swift_weakInit();
  sub_1C2049278();
  uint64_t v42 = v62;
  sub_1C214A0F0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v65 + 8))(v40, v42);
  swift_beginAccess();
  sub_1C2149E20();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1C2047B64(unint64_t a1, uint64_t a2, char a3)
{
  uint64_t v39 = a2;
  sub_1C2049014(0, &qword_1EBF0C708, (uint64_t (*)(uint64_t))sub_1C2048F44, sub_1C2048F98, MEMORY[0x1E4F1AC50]);
  uint64_t v6 = v5;
  uint64_t v40 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v38 = &v33[-v7];
  sub_1C2048E24(0, &qword_1EBF0C6C8, (uint64_t (*)(uint64_t))sub_1C2048F64, MEMORY[0x1E4F1AC08]);
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = &v33[-v11];
  sub_1C204935C(0, &qword_1EBF0C9C8, MEMORY[0x1E4F1ACE0]);
  uint64_t v14 = v13;
  uint64_t v15 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v17 = &v33[-v16];
  if ((a3 & 1) == 0) {
    goto LABEL_22;
  }
  if (!(a1 >> 62))
  {
    uint64_t v18 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v18) {
      goto LABEL_4;
    }
LABEL_22:
    uint64_t v42 = 0;
    sub_1C2048F64(0);
    goto LABEL_23;
  }
  swift_bridgeObjectRetain();
  uint64_t v18 = sub_1C214B930();
  swift_bridgeObjectRelease();
  if (!v18) {
    goto LABEL_22;
  }
LABEL_4:
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (!result)
  {
    uint64_t v41 = 0;
    sub_1C2048F64(0);
LABEL_23:
    sub_1C2149EE0();
    sub_1C1F23804(0, (unint64_t *)&qword_1EBF0C9C0);
    sub_1C2149EC0();
    (*(void (**)(unsigned char *, uint64_t))(v10 + 8))(v12, v9);
    sub_1C20494A0(&qword_1EA2C5D70, &qword_1EBF0C9C8, MEMORY[0x1E4F1ACE0]);
    uint64_t v32 = sub_1C2149FC0();
    goto LABEL_24;
  }
  uint64_t v35 = v6;
  uint64_t v20 = *(void **)(result + qword_1EBF0C560);
  if (!v20) {
    goto LABEL_9;
  }
  uint64_t v37 = result;
  id v36 = v20;
  id v21 = objc_msgSend(v36, sel_firstOntologyCoding);

  if (!v21 || (swift_retain(), int v34 = sub_1C2149720(), swift_release(), (v34 & 1) == 0))
  {
    uint64_t v41 = 0;
    sub_1C2048F64(0);
    sub_1C2149EE0();
    sub_1C1F23804(0, (unint64_t *)&qword_1EBF0C9C0);
    sub_1C2149EC0();
    (*(void (**)(unsigned char *, uint64_t))(v10 + 8))(v12, v9);
    sub_1C20494A0(&qword_1EA2C5D70, &qword_1EBF0C9C8, MEMORY[0x1E4F1ACE0]);
    uint64_t v32 = sub_1C2149FC0();
    swift_release();

LABEL_24:
    (*(void (**)(unsigned char *, uint64_t))(v15 + 8))(v17, v14);
    return v32;
  }

  uint64_t result = v37;
LABEL_9:
  uint64_t v41 = MEMORY[0x1E4FBC860];
  if (v18 >= 1)
  {
    uint64_t v22 = result;
    swift_bridgeObjectRetain();
    for (uint64_t i = 0; i != v18; ++i)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v24 = (id)MEMORY[0x1C8753960](i, a1);
      }
      else {
        id v24 = *(id *)(a1 + 8 * i + 32);
      }
      uint64_t v25 = v24;
      id v26 = objc_msgSend(v24, sel_firstOntologyCoding);

      if (v26)
      {
        sub_1C214B820();
        sub_1C214B860();
        sub_1C214B870();
        sub_1C214B830();
      }
      else
      {
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v27 = v41;
    uint64_t v28 = (void *)swift_allocObject();
    void v28[2] = v22;
    v28[3] = v27;
    v28[4] = v39;
    sub_1C2048F44(0);
    sub_1C2048F98();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    uint64_t v29 = v38;
    sub_1C2149F20();
    sub_1C20493F4();
    uint64_t v30 = v35;
    uint64_t v31 = sub_1C2149FC0();
    (*(void (**)(unsigned char *, uint64_t))(v40 + 8))(v29, v30);
    swift_release();
    uint64_t v41 = v31;
    uint64_t v32 = sub_1C2149FC0();
    swift_release();
    swift_release();
    return v32;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C20481E8(uint64_t *a1)
{
  uint64_t v2 = sub_1C2147B20();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *a1;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v8 = result;
    if (v6)
    {
      *(void *)(result + qword_1EA2C5D28) = v6;
      swift_retain_n();
      swift_release();
      swift_retain();
      sub_1C2147F40();
      swift_release();
      uint64_t v12 = sub_1C21482F0();
      swift_release();
      sub_1C2048E24(0, (unint64_t *)&qword_1EA2C2DD0, MEMORY[0x1E4F66468], MEMORY[0x1E4FBBE00]);
      sub_1C2148540();
      uint64_t v9 = swift_allocObject();
      long long v11 = xmmword_1C214FCD0;
      *(_OWORD *)(v9 + 16) = xmmword_1C214FCD0;
      sub_1C1F5FE64(0, (unint64_t *)&qword_1EBF0C958, (unint64_t *)&qword_1EBF0C2F0);
      uint64_t v10 = swift_allocObject();
      *(_OWORD *)(v10 + 16) = v11;
      *(void *)(v10 + 56) = type metadata accessor for InteractionSummaryItem();
      *(void *)(v10 + 64) = sub_1C2049314(&qword_1EBF0C4C8, (void (*)(uint64_t))type metadata accessor for InteractionSummaryItem);
      *(void *)(v10 + 32) = v6;
      swift_retain();
      sub_1C2147B10();
      sub_1C2147AD0();
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      sub_1C2148520();
      sub_1C21485B0();
      swift_release();
      swift_release();
      swift_release();
      return swift_bridgeObjectRelease();
    }
    else
    {
      swift_retain();
      sub_1C2147F40();
      swift_release();
      sub_1C21482F0();
      swift_release();
      sub_1C21485B0();
      swift_release();
      *(void *)(v8 + qword_1EA2C5D28) = 0;
      swift_release();
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_1C2048554()
{
  uint64_t v0 = sub_1C2148710();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = MEMORY[0x1F4188790](v0);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v11 - v5;
  sub_1C2148690();
  sub_1C2148650();
  uint64_t v7 = *(void (**)(char *, uint64_t))(v1 + 8);
  v7(v4, v0);
  id v8 = objc_msgSend(self, sel_secondarySystemBackgroundColor);
  sub_1C21486A0();
  uint64_t v9 = sub_1C2148700();
  v7(v6, v0);
  return v9;
}

void InteractionSummaryDataSource.__allocating_init(arrangedSections:isHidden:)()
{
}

void InteractionSummaryDataSource.init(arrangedSections:isHidden:)()
{
}

uint64_t sub_1C20486F4()
{
  return sub_1C2148B80();
}

uint64_t InteractionSummaryDataSource.supplementaryItem(ofKind:at:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v7 = sub_1C2147B20();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (sub_1C214A5F0() == a1 && v11 == a2)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v13 = sub_1C214BA80();
    swift_bridgeObjectRelease();
    if ((v13 & 1) == 0)
    {
      a3[3] = sub_1C2148220();
      a3[4] = sub_1C2049314(&qword_1EA2C2D28, MEMORY[0x1E4F66330]);
      __swift_allocate_boxed_opaque_existential_1(a3);
      return sub_1C2148210();
    }
  }
  if (*(void *)(v3 + qword_1EBF0C560))
  {
    uint64_t v15 = 1;
  }
  else
  {
    unint64_t v16 = sub_1C2149710();
    unint64_t v17 = sub_1C1F6501C(v16);
    swift_bridgeObjectRelease();
    if (v17)
    {
      if (v17 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v15 = sub_1C214B930();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v15 = *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v15 = 0;
    }
  }
  if (qword_1EBF0CA00 != -1) {
    swift_once();
  }
  uint64_t v18 = (void *)qword_1EBF0CA18;
  sub_1C1F5FE64(0, qword_1EBF0B8A0, (unint64_t *)&qword_1EBF0C9F0);
  uint64_t v19 = swift_allocObject();
  uint64_t v20 = MEMORY[0x1E4FBB550];
  *(_OWORD *)(v19 + 16) = xmmword_1C214FCD0;
  uint64_t v21 = MEMORY[0x1E4FBB5C8];
  *(void *)(v19 + 56) = v20;
  *(void *)(v19 + 64) = v21;
  *(void *)(v19 + 32) = v15;
  id v22 = v18;
  swift_bridgeObjectRetain();
  sub_1C2147730();
  sub_1C214A5C0();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v23[0] = 0x74497265746F6F46;
  v23[1] = 0xEB000000005F6D65;
  sub_1C2147B10();
  sub_1C2147AD0();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  a3[3] = sub_1C2148960();
  a3[4] = sub_1C2049314(&qword_1EA2C2D38, MEMORY[0x1E4F665E8]);
  __swift_allocate_boxed_opaque_existential_1(a3);
  return sub_1C2148950();
}

uint64_t sub_1C2048B24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return InteractionSummaryDataSource.supplementaryItem(ofKind:at:)(a1, a2, a3);
}

Swift::Void __swiftcall InteractionSummaryDataSource.registerCells(for:)(UICollectionView *a1)
{
}

uint64_t sub_1C2048BE8()
{
  return sub_1C214ACC0();
}

uint64_t sub_1C2048C88()
{
  return sub_1C2049314(&qword_1EA2C5D38, (void (*)(uint64_t))type metadata accessor for InteractionSummaryDataSource);
}

uint64_t type metadata accessor for InteractionSummaryDataSource()
{
  uint64_t result = qword_1EBF0C580;
  if (!qword_1EBF0C580) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C2048D1C()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for InteractionSummaryDataSource(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for InteractionSummaryDataSource);
}

uint64_t dispatch thunk of InteractionSummaryDataSource.__allocating_init(filteringMedication:listManager:healthStore:analyticsManager:roomType:)()
{
  return (*(uint64_t (**)(void))(class metadata base offset for InteractionSummaryDataSource + v0 + 168))();
}

uint64_t dispatch thunk of InteractionSummaryDataSource.layout(for:environment:)()
{
  return (*(uint64_t (**)(void))(class metadata base offset for InteractionSummaryDataSource + *v0 + 192))();
}

uint64_t sub_1C2048E1C()
{
  return type metadata accessor for InteractionSummaryDataSource();
}

void sub_1C2048E24(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1C2048E88()
{
  if (!qword_1EA2C5D40)
  {
    sub_1C2048F44(255);
    sub_1C200668C();
    sub_1C2048F98();
    sub_1C2049314(&qword_1EA2C5258, (void (*)(uint64_t))sub_1C200668C);
    unint64_t v0 = sub_1C2149DA0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C5D40);
    }
  }
}

void sub_1C2048F44(uint64_t a1)
{
}

void sub_1C2048F64(uint64_t a1)
{
}

uint64_t sub_1C2048F98()
{
  return sub_1C2049314(&qword_1EBF0C678, sub_1C2048F44);
}

void sub_1C2048FCC(uint64_t a1)
{
}

void sub_1C2049014(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    uint64_t v10 = a4();
    unint64_t v11 = a5(a1, v9, v10);
    if (!v12) {
      atomic_store(v11, a2);
    }
  }
}

uint64_t sub_1C2049094()
{
  return sub_1C2049314(&qword_1EA2C5D50, (void (*)(uint64_t))sub_1C2048E88);
}

void sub_1C20490C8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, void *))
{
  if (!*a2)
  {
    v11[0] = a3(255);
    v11[1] = sub_1C1F12718(255, (unint64_t *)&qword_1EBF0CB10);
    long long v11[2] = a4();
    v11[3] = sub_1C1F2F9D0((unint64_t *)&qword_1EBF0C7F0, (unint64_t *)&qword_1EBF0CB10);
    unint64_t v9 = a5(a1, v11);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

uint64_t sub_1C20491AC()
{
  return sub_1C2049314(&qword_1EA2C5D60, sub_1C2048FCC);
}

void sub_1C20491E0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void, void))
{
  if (!*a2)
  {
    unint64_t v4 = a3(0, MEMORY[0x1E4FBB390]);
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1C2049230()
{
  swift_weakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C2049268(unint64_t a1, uint64_t a2, char a3)
{
  return sub_1C2047B64(a1, a2, a3);
}

uint64_t sub_1C2049270(uint64_t *a1)
{
  return sub_1C20481E8(a1);
}

unint64_t sub_1C2049278()
{
  unint64_t result = qword_1EA2C5D68;
  if (!qword_1EA2C5D68)
  {
    sub_1C20490C8(255, &qword_1EA2C5D58, (uint64_t (*)(uint64_t))sub_1C2048FCC, sub_1C20491AC, MEMORY[0x1E4F1AAB0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C5D68);
  }
  return result;
}

uint64_t sub_1C2049314(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C204935C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, void))
{
  if (!*a2)
  {
    sub_1C2048F64(255);
    uint64_t v7 = v6;
    uint64_t v8 = sub_1C1F23804(255, (unint64_t *)&qword_1EBF0C9C0);
    unint64_t v9 = a3(a1, v7, v8, MEMORY[0x1E4FBC0F0]);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

uint64_t sub_1C20493E8@<X0>(uint64_t *a1@<X8>)
{
  return sub_1C204676C(v1[2], v1[3], v1[4], a1);
}

unint64_t sub_1C20493F4()
{
  unint64_t result = qword_1EBF0C700;
  if (!qword_1EBF0C700)
  {
    sub_1C2049014(255, &qword_1EBF0C708, (uint64_t (*)(uint64_t))sub_1C2048F44, sub_1C2048F98, MEMORY[0x1E4F1AC50]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBF0C700);
  }
  return result;
}

void sub_1C2049494(uint64_t a1, uint64_t a2)
{
  sub_1C20468A8(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void **)(v2 + 32));
}

uint64_t sub_1C20494A0(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C204935C(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C20494E4()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C204951C()
{
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

void sub_1C204955C(uint64_t a1, void *a2)
{
  sub_1C2046B08(a1, a2, *(void *)(v2 + 16), *(void (**)(uint64_t, void))(v2 + 24));
}

uint64_t sub_1C2049568(void *a1)
{
  return sub_1C2046EEC(a1);
}

uint64_t localized(_:locale:source:value:comment:arguments:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t result = sub_1C2147730();
  if (*(void *)(a9 + 16))
  {
    uint64_t v10 = sub_1C214A5C0();
    swift_bridgeObjectRelease();
    return v10;
  }
  return result;
}

id LocalizationSource.bundle.getter()
{
  return *v0;
}

uint64_t LocalizationSource.table.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

HealthMedicationsUI::LocalizationSource __swiftcall LocalizationSource.init(bundle:table:)(NSBundle bundle, Swift::String table)
{
  *(NSBundle *)uint64_t v2 = bundle;
  *(Swift::String *)(v2 + 8) = table;
  result.table = table;
  result.bundle = bundle;
  return result;
}

id sub_1C2049640()
{
  if (qword_1EBF0CA38 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_1EBF0CA30;
  qword_1EBF0CA18 = qword_1EBF0CA30;
  qword_1EBF0CA20 = 0xD00000000000001FLL;
  qword_1EBF0CA28 = 0x80000001C2167110;

  return v0;
}

uint64_t sub_1C20496C4()
{
  sub_1C1F346B8();
  uint64_t result = sub_1C214B1E0();
  qword_1EA2C5D78 = result;
  unk_1EA2C5D80 = 0xD000000000000014;
  qword_1EA2C5D88 = 0x80000001C21670C0;
  return result;
}

uint64_t static LocalizationSource.healthUI.getter@<X0>(void *a1@<X8>)
{
  if (qword_1EA2C2708 != -1) {
    swift_once();
  }
  uint64_t v2 = (void *)qword_1EA2C5D78;
  uint64_t v3 = unk_1EA2C5D80;
  uint64_t v4 = qword_1EA2C5D88;
  *a1 = qword_1EA2C5D78;
  a1[1] = v3;
  a1[2] = v4;
  id v5 = v2;

  return swift_bridgeObjectRetain();
}

id sub_1C2049798()
{
  if (qword_1EBF0CA38 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_1EBF0CA30;
  qword_1EA2C5D90 = qword_1EBF0CA30;
  qword_1EA2C5D98 = 0xD000000000000029;
  qword_1EA2C5DA0 = 0x80000001C21670E0;

  return v0;
}

uint64_t static LocalizationSource.healthMedicationsUI_Pregnancy.getter@<X0>(void *a1@<X8>)
{
  if (qword_1EA2C2710 != -1) {
    swift_once();
  }
  uint64_t v2 = (void *)qword_1EA2C5D90;
  uint64_t v3 = qword_1EA2C5D98;
  uint64_t v4 = qword_1EA2C5DA0;
  *a1 = qword_1EA2C5D90;
  a1[1] = v3;
  a1[2] = v4;
  id v5 = v2;

  return swift_bridgeObjectRetain();
}

uint64_t String.localized(source:locale:value:comment:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t result = sub_1C2147730();
  if (*(void *)(a7 + 16))
  {
    uint64_t v9 = sub_1C214A5C0();
    swift_bridgeObjectRelease();
    return v9;
  }
  return result;
}

uint64_t LocalizationSource.localized(_:locale:value:comment:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t result = sub_1C2147730();
  if (*(void *)(a8 + 16))
  {
    uint64_t v10 = sub_1C214A5C0();
    swift_bridgeObjectRelease();
    return v10;
  }
  return result;
}

void sub_1C20499F8(uint64_t a1, uint64_t a2, void *a3, void *a4, void *a5)
{
  id v7 = a3;
  id v8 = a4;
  id v9 = a5;
  sub_1C214B7C0();
  swift_bridgeObjectRelease();
  sub_1C214B910();
  __break(1u);
}

id sub_1C2049B08()
{
  uint64_t v1 = v0;
  id v2 = objc_msgSend(v0, sel_object);
  self;
  uint64_t v3 = swift_dynamicCastObjCClass();
  if (v3)
  {
    uint64_t v4 = (void *)v3;
    sub_1C1F452BC();
    id v5 = (void *)sub_1C214A5B0();
    swift_bridgeObjectRelease();
    if (qword_1EBF0CA00 != -1) {
      swift_once();
    }
    id v6 = (id)qword_1EBF0CA18;
    swift_bridgeObjectRetain();
    sub_1C2147730();
    swift_bridgeObjectRelease();

    id v7 = (void *)sub_1C214A5B0();
    swift_bridgeObjectRelease();
    sub_1C204A108();
    uint64_t v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_1C214FCC0;
    *(void *)(v8 + 32) = sub_1C214A5F0();
    *(void *)(v8 + 40) = v9;
    *(void *)(v8 + 48) = 1702063940;
    *(void *)(v8 + 56) = 0xE400000000000000;
    uint64_t v10 = (void *)sub_1C214A770();
    swift_bridgeObjectRelease();
    id v11 = (id)HKUIJoinStringsForAutomationIdentifier();

    objc_msgSend(v1, sel_addText_detail_baseIdentifier_, v5, v7, v11, 0xE000000000000000);
    sub_1C2049EBC(v4);
    if (v12)
    {
      char v13 = (void *)sub_1C214A5B0();
      swift_bridgeObjectRelease();
      id v14 = (id)qword_1EBF0CA18;
      swift_bridgeObjectRetain();
      sub_1C2147730();
      swift_bridgeObjectRelease();

      uint64_t v15 = (void *)sub_1C214A5B0();
      swift_bridgeObjectRelease();
      uint64_t v16 = swift_allocObject();
      *(_OWORD *)(v16 + 16) = xmmword_1C214FCC0;
      *(void *)(v16 + 32) = sub_1C214A5F0();
      *(void *)(v16 + 40) = v17;
      *(void *)(v16 + 48) = 0x67676F4C61746144;
      *(void *)(v16 + 56) = 0xEA00000000006465;
      uint64_t v18 = (void *)sub_1C214A770();
      swift_bridgeObjectRelease();
      id v19 = (id)HKUIJoinStringsForAutomationIdentifier();

      objc_msgSend(v1, (SEL)&selRef_initWithDisplayType_profile_dataProvider_usingInsetStyling_ + 7, v13, v15, v19, 0xE000000000000000);
    }
  }
  swift_unknownObjectRelease();
  v21.receiver = v1;
  v21.super_class = (Class)type metadata accessor for MedicationDoseEventMetadataDetailSection();
  return objc_msgSendSuper2(&v21, sel_addSampleDetailValues);
}

uint64_t sub_1C2049EBC(void *a1)
{
  id v2 = objc_msgSend(a1, sel_doseQuantity);
  if (!v2) {
    return 0;
  }
  uint64_t v3 = v2;
  uint64_t v4 = *(void **)(v1 + OBJC_IVAR____TtC19HealthMedicationsUI40MedicationDoseEventMetadataDetailSection_medication);
  if (v4)
  {
    id v5 = v4;
    objc_msgSend(v3, sel_doubleValue);
    sub_1C204A0C8();
    uint64_t v6 = sub_1C2149030();
  }
  else
  {
    objc_msgSend(v2, sel_doubleValue);
    sub_1C204A074();
    uint64_t v6 = sub_1C214A4F0();
  }

  return v6;
}

id sub_1C204A00C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MedicationDoseEventMetadataDetailSection();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for MedicationDoseEventMetadataDetailSection()
{
  return self;
}

unint64_t sub_1C204A074()
{
  unint64_t result = qword_1EA2C5DB0;
  if (!qword_1EA2C5DB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C5DB0);
  }
  return result;
}

unint64_t sub_1C204A0C8()
{
  unint64_t result = qword_1EBF0C8C0;
  if (!qword_1EBF0C8C0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBF0C8C0);
  }
  return result;
}

void sub_1C204A108()
{
  if (!qword_1EA2C3298)
  {
    unint64_t v0 = sub_1C214BA50();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C3298);
    }
  }
}

BOOL static DisplayUnit.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t PauseUsePeriod.text.getter()
{
  uint64_t v1 = *v0;
  if (v0[1])
  {
    if (qword_1EBF0CA00 != -1) {
      swift_once();
    }
    objc_super v2 = (void *)qword_1EBF0CA18;
    sub_1C1FF8EAC();
    uint64_t v3 = swift_allocObject();
    uint64_t v4 = MEMORY[0x1E4FBB550];
    *(_OWORD *)(v3 + 16) = xmmword_1C214FCD0;
    uint64_t v5 = MEMORY[0x1E4FBB5C8];
    *(void *)(v3 + 56) = v4;
    *(void *)(v3 + 64) = v5;
    *(void *)(v3 + 32) = v1;
    id v6 = v2;
    swift_bridgeObjectRetain();
  }
  else
  {
    if (qword_1EBF0CA00 != -1) {
      swift_once();
    }
    id v7 = (void *)qword_1EBF0CA18;
    sub_1C1FF8EAC();
    uint64_t v8 = swift_allocObject();
    uint64_t v9 = MEMORY[0x1E4FBB550];
    *(_OWORD *)(v8 + 16) = xmmword_1C214FCD0;
    uint64_t v10 = MEMORY[0x1E4FBB5C8];
    *(void *)(v8 + 56) = v9;
    *(void *)(v8 + 64) = v10;
    *(void *)(v8 + 32) = v1;
    id v6 = v7;
    swift_bridgeObjectRetain();
  }
  sub_1C2147730();
  sub_1C214A5C0();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v11 = sub_1C214A5C0();
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t PauseUsePeriod.count.getter()
{
  return *(void *)v0;
}

uint64_t static PauseUsePeriod.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return (*(void *)a1 == *(void *)a2) & ~(*(unsigned __int8 *)(a1 + 8) ^ *(unsigned __int8 *)(a2 + 8));
}

uint64_t sub_1C204A3B4(uint64_t a1, uint64_t a2)
{
  return (*(void *)a1 == *(void *)a2) & ~(*(unsigned __int8 *)(a1 + 8) ^ *(unsigned __int8 *)(a2 + 8));
}

uint64_t DisplayUnit.text.getter()
{
  if (*v0)
  {
    if (qword_1EBF0CA00 != -1) {
      swift_once();
    }
  }
  else if (qword_1EBF0CA00 != -1)
  {
    swift_once();
  }
  id v1 = (id)qword_1EBF0CA18;
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_1C2147730();
  swift_bridgeObjectRelease();

  return v2;
}

uint64_t DisplayUnit.hash(into:)()
{
  return sub_1C214BB40();
}

void *static DisplayUnit.allCases.getter()
{
  return &unk_1F1D73EC0;
}

uint64_t DisplayUnit.hashValue.getter()
{
  return sub_1C214BB80();
}

unint64_t sub_1C204A5AC()
{
  unint64_t result = qword_1EA2C5DB8;
  if (!qword_1EA2C5DB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C5DB8);
  }
  return result;
}

unint64_t sub_1C204A604()
{
  unint64_t result = qword_1EA2C5DC0;
  if (!qword_1EA2C5DC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C5DC0);
  }
  return result;
}

unint64_t sub_1C204A660()
{
  unint64_t result = qword_1EA2C5DC8;
  if (!qword_1EA2C5DC8)
  {
    sub_1C204A6B8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C5DC8);
  }
  return result;
}

void sub_1C204A6B8()
{
  if (!qword_1EA2C5DD0)
  {
    unint64_t v0 = sub_1C214A830();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C5DD0);
    }
  }
}

void sub_1C204A710(void *a1@<X8>)
{
  *a1 = &unk_1F1D73EE8;
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)unint64_t result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for PauseUsePeriod(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for PauseUsePeriod(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)unint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1C204A7C0(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 8);
}

uint64_t sub_1C204A7C8(uint64_t result, char a2)
{
  *(unsigned char *)(result + 8) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for PauseUsePeriod()
{
  return &type metadata for PauseUsePeriod;
}

unsigned char *storeEnumTagSinglePayload for DisplayUnit(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C204A8B0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DisplayUnit()
{
  return &type metadata for DisplayUnit;
}

uint64_t sub_1C204A8E8(unsigned char *a1)
{
  if (*a1 == 1)
  {
    uint64_t v15 = MEMORY[0x1E4FBC860];
    uint64_t v1 = 99;
    sub_1C1F70834(0, 99, 0);
    BOOL v2 = 0;
    uint64_t v3 = 1;
    uint64_t result = v15;
    while (!v2)
    {
      uint64_t v16 = result;
      unint64_t v6 = *(void *)(result + 16);
      unint64_t v5 = *(void *)(result + 24);
      if (v6 >= v5 >> 1)
      {
        sub_1C1F70834(v5 > 1, v6 + 1, 1);
        uint64_t result = v16;
      }
      *(void *)(result + 16) = v6 + 1;
      uint64_t v7 = result + 16 * v6;
      *(void *)(v7 + 32) = v3;
      *(unsigned char *)(v7 + 40) = 0;
      BOOL v2 = v3 == 99;
      if (v3 == 99)
      {
        uint64_t v3 = 0;
      }
      else
      {
        BOOL v8 = __OFADD__(v3++, 1);
        if (v8)
        {
          __break(1u);
          goto LABEL_23;
        }
      }
      if (!--v1) {
        return result;
      }
    }
LABEL_24:
    __break(1u);
  }
  else
  {
    uint64_t v17 = MEMORY[0x1E4FBC860];
    uint64_t v9 = 99;
    sub_1C1F70834(0, 99, 0);
    BOOL v10 = 0;
    uint64_t result = v17;
    uint64_t v11 = 1;
    while (!v10)
    {
      uint64_t v18 = result;
      unint64_t v13 = *(void *)(result + 16);
      unint64_t v12 = *(void *)(result + 24);
      if (v13 >= v12 >> 1)
      {
        sub_1C1F70834(v12 > 1, v13 + 1, 1);
        uint64_t result = v18;
      }
      *(void *)(result + 16) = v13 + 1;
      uint64_t v14 = result + 16 * v13;
      *(void *)(v14 + 32) = v11;
      *(unsigned char *)(v14 + 40) = 1;
      BOOL v10 = v11 == 99;
      if (v11 == 99)
      {
        uint64_t v11 = 0;
      }
      else
      {
        BOOL v8 = __OFADD__(v11++, 1);
        if (v8)
        {
LABEL_23:
          __break(1u);
          goto LABEL_24;
        }
      }
      if (!--v9) {
        return result;
      }
    }
  }
  __break(1u);
  return result;
}

uint64_t OntologyShardStateObserver.__allocating_init(identifier:healthStore:settingsManager:)(void *a1, void *a2, void *a3)
{
  uint64_t v6 = swift_allocObject();
  OntologyShardStateObserver.init(identifier:healthStore:settingsManager:)(a1, a2, a3);
  return v6;
}

uint64_t OntologyShardStateObserver.$isImported.getter()
{
  return swift_endAccess();
}

uint64_t OntologyShardStateObserver.shardState.getter()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1C2149F80();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1C204ABCC@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1C2149F80();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1C204AC4C()
{
  return sub_1C2149F90();
}

uint64_t OntologyShardStateObserver.$shardState.getter()
{
  return swift_endAccess();
}

uint64_t sub_1C204AD50()
{
  return swift_endAccess();
}

uint64_t sub_1C204ADE4(uint64_t a1)
{
  sub_1C204DC1C(0, &qword_1EA2C5E38, (uint64_t (*)(uint64_t))type metadata accessor for HKOntologyShardState, MEMORY[0x1E4F1AC60]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](v2);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v12 - v8;
  BOOL v10 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v10((char *)&v12 - v8, a1, v3);
  v10(v7, (uint64_t)v9, v3);
  swift_beginAccess();
  sub_1C204DC1C(0, &qword_1EBF0C758, (uint64_t (*)(uint64_t))type metadata accessor for HKOntologyShardState, MEMORY[0x1E4F1AC70]);
  sub_1C2149F60();
  swift_endAccess();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v9, v3);
}

uint64_t OntologyShardStateObserver.isImported.getter()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1C2149F80();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1C204B024@<X0>(unsigned char *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1C2149F80();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1C204B0A4()
{
  return sub_1C2149F90();
}

uint64_t sub_1C204B118()
{
  return swift_endAccess();
}

uint64_t sub_1C204B1A0(uint64_t a1)
{
  uint64_t v2 = MEMORY[0x1E4FBB390];
  sub_1C204DC80(0, &qword_1EBF0C740, MEMORY[0x1E4FBB390], MEMORY[0x1E4F1AC60]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v3);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  BOOL v10 = (char *)&v13 - v9;
  uint64_t v11 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v11((char *)&v13 - v9, a1, v4);
  v11(v8, (uint64_t)v10, v4);
  swift_beginAccess();
  sub_1C204DC80(0, &qword_1EBF0C750, v2, MEMORY[0x1E4F1AC70]);
  sub_1C2149F60();
  swift_endAccess();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v10, v4);
}

id OntologyShardStateObserver.identifier.getter()
{
  unsigned __int8 v1 = (void **)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI26OntologyShardStateObserver_identifier);
  swift_beginAccess();
  uint64_t v2 = *v1;

  return v2;
}

id *OntologyShardStateObserver.init(identifier:healthStore:settingsManager:)(void *a1, void *a2, void *a3)
{
  uint64_t v4 = v3;
  uint64_t v35 = a3;
  v32[1] = *v4;
  uint64_t v7 = sub_1C21497F0();
  uint64_t v33 = *(void *)(v7 - 8);
  uint64_t v34 = v7;
  MEMORY[0x1F4188790](v7);
  id v36 = (char *)v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C204DC80(0, &qword_1EBF0C750, MEMORY[0x1E4FBB390], MEMORY[0x1E4F1AC70]);
  uint64_t v10 = v9;
  uint64_t v11 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)v32 - v12;
  sub_1C204DC1C(0, &qword_1EBF0C758, (uint64_t (*)(uint64_t))type metadata accessor for HKOntologyShardState, MEMORY[0x1E4F1AC70]);
  uint64_t v15 = v14;
  uint64_t v16 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v18 = (char *)v32 - v17;
  id v19 = (char *)v4 + OBJC_IVAR____TtC19HealthMedicationsUI26OntologyShardStateObserver__shardState;
  uint64_t v38 = 0;
  type metadata accessor for HKOntologyShardState(0);
  sub_1C2149F40();
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v19, v18, v15);
  uint64_t v20 = (char *)v4 + OBJC_IVAR____TtC19HealthMedicationsUI26OntologyShardStateObserver__isImported;
  LOBYTE(v38) = 0;
  sub_1C2149F40();
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v20, v13, v10);
  objc_super v21 = v35;
  *(id *)((char *)v4 + OBJC_IVAR____TtC19HealthMedicationsUI26OntologyShardStateObserver_identifier) = a1;
  id v22 = objc_allocWithZone(MEMORY[0x1E4F2B300]);
  id v23 = a1;
  id v24 = objc_msgSend(v22, sel_initWithHealthStore_, a2);
  *(id *)((char *)v4 + OBJC_IVAR____TtC19HealthMedicationsUI26OntologyShardStateObserver_ontologyStore) = v24;
  *(id *)((char *)v4 + OBJC_IVAR____TtC19HealthMedicationsUI26OntologyShardStateObserver_settingsManager) = v21;
  swift_retain();
  if (sub_1C2148CD0())
  {
    swift_getKeyPath();
    swift_getKeyPath();
    LOBYTE(v38) = 1;
    swift_retain();
    sub_1C2149F90();
    sub_1C21497A0();
    uint64_t v25 = sub_1C21497E0();
    os_log_type_t v26 = sub_1C214ABF0();
    if (os_log_type_enabled(v25, v26))
    {
      v32[0] = a2;
      uint64_t v27 = (uint8_t *)swift_slowAlloc();
      uint64_t v28 = swift_slowAlloc();
      uint64_t v38 = v28;
      *(_DWORD *)uint64_t v27 = 136446210;
      uint64_t v29 = sub_1C214BC10();
      uint64_t v37 = sub_1C1F6FD54(v29, v30, &v38);
      sub_1C214B530();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C1F0B000, v25, v26, "[%{public}s] Shard check override enabled. Skipping registering for shard updates", v27, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C8754730](v28, -1, -1);
      MEMORY[0x1C8754730](v27, -1, -1);
    }
    else
    {
    }
    swift_release();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v36, v34);
  }
  else
  {
    sub_1C204B89C();
    sub_1C204BB00();

    swift_release();
  }
  return v4;
}

void sub_1C204B89C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1C21497F0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C21497A0();
  uint64_t v6 = sub_1C21497E0();
  os_log_type_t v7 = sub_1C214ABF0();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = swift_slowAlloc();
    uint64_t v16 = v2;
    uint64_t v9 = (uint8_t *)v8;
    uint64_t v10 = swift_slowAlloc();
    uint64_t v18 = v10;
    *(_DWORD *)uint64_t v9 = 136446210;
    uint64_t v11 = sub_1C214BC10();
    uint64_t v17 = sub_1C1F6FD54(v11, v12, &v18);
    sub_1C214B530();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C1F0B000, v6, v7, "[%{public}s] Registering for shard updates.", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C8754730](v10, -1, -1);
    MEMORY[0x1C8754730](v9, -1, -1);

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v16);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  uint64_t v13 = *(void **)(v1 + OBJC_IVAR____TtC19HealthMedicationsUI26OntologyShardStateObserver_ontologyStore);
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0CB10);
  uint64_t v14 = (void *)sub_1C214AD80();
  objc_msgSend(v13, sel_registerObserver_queue_, v1, v14);
}

void sub_1C204BB00()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C21497F0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C21497A0();
  os_log_type_t v7 = sub_1C21497E0();
  os_log_type_t v8 = sub_1C214ABF0();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v20 = v3;
    uint64_t v9 = swift_slowAlloc();
    uint64_t v21 = v2;
    uint64_t v10 = (uint8_t *)v9;
    uint64_t v11 = swift_slowAlloc();
    aBlock[0] = v11;
    *(_DWORD *)uint64_t v10 = 136446210;
    uint64_t v12 = sub_1C214BC10();
    uint64_t v22 = sub_1C1F6FD54(v12, v13, aBlock);
    sub_1C214B530();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C1F0B000, v7, v8, "[%{public}s] Querying for ontology shard registry entries.", v10, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C8754730](v11, -1, -1);
    uint64_t v14 = v10;
    uint64_t v2 = v21;
    MEMORY[0x1C8754730](v14, -1, -1);

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v20);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  uint64_t v15 = *(void **)((char *)v1 + OBJC_IVAR____TtC19HealthMedicationsUI26OntologyShardStateObserver_ontologyStore);
  uint64_t v16 = swift_allocObject();
  swift_weakInit();
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = v16;
  *(void *)(v17 + 24) = v2;
  aBlock[4] = (uint64_t)sub_1C204DDE0;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1C204C524;
  void aBlock[3] = (uint64_t)&block_descriptor_24;
  uint64_t v18 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(v15, sel_ontologyShardRegistryEntriesWithCompletion_, v18);
  _Block_release(v18);
}

uint64_t sub_1C204BDF0(uint64_t a1, void *a2)
{
  uint64_t v4 = sub_1C21497F0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  os_log_type_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v31 - v9;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    if (a2)
    {
      id v12 = a2;
      sub_1C21497A0();
      id v13 = a2;
      id v14 = a2;
      uint64_t v15 = sub_1C21497E0();
      os_log_type_t v16 = sub_1C214ABD0();
      if (os_log_type_enabled(v15, v16))
      {
        uint64_t v17 = swift_slowAlloc();
        uint64_t v31 = swift_slowAlloc();
        uint64_t v33 = v31;
        *(_DWORD *)uint64_t v17 = 136446466;
        uint64_t v18 = sub_1C214BC10();
        uint64_t v32 = sub_1C1F6FD54(v18, v19, &v33);
        sub_1C214B530();
        swift_bridgeObjectRelease();
        *(_WORD *)(v17 + 12) = 2082;
        uint64_t v32 = (uint64_t)a2;
        id v20 = a2;
        sub_1C1F35A5C();
        uint64_t v21 = sub_1C214A610();
        uint64_t v32 = sub_1C1F6FD54(v21, v22, &v33);
        sub_1C214B530();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_1C1F0B000, v15, v16, "[%{public}s] Failed to get ontology shard registry entries, error: %{public}s", (uint8_t *)v17, 0x16u);
        uint64_t v23 = v31;
        swift_arrayDestroy();
        MEMORY[0x1C8754730](v23, -1, -1);
        MEMORY[0x1C8754730](v17, -1, -1);
      }
      else
      {
      }
      (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
      sub_1C204C214(MEMORY[0x1E4FBC860]);
    }
    else
    {
      if (a1)
      {
        uint64_t v24 = a1;
      }
      else
      {
        sub_1C21497A0();
        uint64_t v25 = sub_1C21497E0();
        uint64_t v26 = sub_1C214ABD0();
        if (os_log_type_enabled(v25, (os_log_type_t)v26))
        {
          uint64_t v27 = (uint8_t *)swift_slowAlloc();
          uint64_t v28 = swift_slowAlloc();
          uint64_t v33 = v28;
          *(_DWORD *)uint64_t v27 = 136446210;
          uint64_t v31 = (uint64_t)(v27 + 4);
          uint64_t v29 = sub_1C214BC10();
          uint64_t v32 = sub_1C1F6FD54(v29, v30, &v33);
          sub_1C214B530();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1C1F0B000, v25, (os_log_type_t)v26, "[%{public}s] Failed to get ontology shard registry entries, entries were unexpectedly nil.", v27, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1C8754730](v28, -1, -1);
          MEMORY[0x1C8754730](v27, -1, -1);
        }

        (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
        uint64_t v24 = MEMORY[0x1E4FBC860];
      }
      sub_1C204C214(v24);
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_1C204C214(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = sub_1C214A3F0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1C214A420();
  uint64_t v8 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0CB10);
  uint64_t v11 = (void *)sub_1C214AD80();
  uint64_t v12 = swift_allocObject();
  swift_weakInit();
  id v13 = (void *)swift_allocObject();
  void v13[2] = v12;
  v13[3] = a1;
  v13[4] = v3;
  aBlock[4] = sub_1C204DD44;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C1F0E42C;
  void aBlock[3] = &block_descriptor_19;
  id v14 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_release();
  sub_1C214A410();
  aBlock[0] = MEMORY[0x1E4FBC860];
  sub_1C204DD50();
  sub_1C204DC1C(0, (unint64_t *)&qword_1EBF0CAF0, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
  sub_1C1F12754();
  sub_1C214B640();
  MEMORY[0x1C8752F10](0, v10, v7, v14);
  _Block_release(v14);

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v17);
}

uint64_t sub_1C204C524(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = a2;
  uint64_t v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2)
  {
    sub_1C1F12718(0, &qword_1EA2C5E40);
    uint64_t v4 = sub_1C214A780();
  }
  swift_retain();
  id v6 = a3;
  v5(v4, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

void sub_1C204C5C8(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = sub_1C21497F0();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v42 - v8;
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v11 = Strong;
    swift_beginAccess();
    id v12 = (id)HKOntologyShardSchemaTypeForShardIdentifier();
    id v13 = (void *)HKCurrentSchemaVersionForShardIdentifier();
    swift_retain();
    id v14 = v12;
    uint64_t v15 = sub_1C204CFE4(a2, v11, (uint64_t)v14, v13);
    swift_release();

    if (v15)
    {
      id v49 = v14;
      id v16 = objc_msgSend(v15, sel_currentVersion);
      sub_1C21497A0();
      swift_retain_n();
      id v17 = v15;
      uint64_t v18 = sub_1C21497E0();
      os_log_type_t v19 = sub_1C214ABF0();
      int v20 = v19;
      if (os_log_type_enabled(v18, v19))
      {
        BOOL v44 = (uint64_t)v16 > 0;
        uint64_t v21 = swift_slowAlloc();
        uint64_t v48 = v4;
        uint64_t v22 = v21;
        uint64_t v45 = swift_slowAlloc();
        v51[0] = v45;
        *(_DWORD *)uint64_t v22 = 136446978;
        id v46 = v16;
        uint64_t v23 = sub_1C214BC10();
        uint64_t v47 = v3;
        uint64_t v50 = sub_1C1F6FD54(v23, v24, v51);
        sub_1C214B530();
        swift_bridgeObjectRelease();
        int v43 = v20;
        *(_WORD *)(v22 + 12) = 2082;
        uint64_t v25 = sub_1C214A5F0();
        uint64_t v50 = sub_1C1F6FD54(v25, v26, v51);
        sub_1C214B530();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v22 + 22) = 2082;
        objc_msgSend(v17, sel_availableState);
        id v27 = (id)HKStringFromOntologyShardState();
        uint64_t v28 = sub_1C214A5F0();
        unint64_t v30 = v29;

        id v16 = v46;
        uint64_t v50 = sub_1C1F6FD54(v28, v30, v51);
        sub_1C214B530();

        swift_bridgeObjectRelease();
        *(_WORD *)(v22 + 32) = 1026;
        LODWORD(v50) = v44;
        sub_1C214B530();
        _os_log_impl(&dword_1C1F0B000, v18, (os_log_type_t)v43, "[%{public}s] Current %{public}s availability state: %{public}s isImported: %{BOOL,public}d", (uint8_t *)v22, 0x26u);
        uint64_t v31 = v45;
        swift_arrayDestroy();
        MEMORY[0x1C8754730](v31, -1, -1);
        MEMORY[0x1C8754730](v22, -1, -1);

        (*(void (**)(char *, uint64_t))(v48 + 8))(v7, v47);
      }
      else
      {

        swift_release_n();
        (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
      }
      id v41 = objc_msgSend(v17, sel_availableState);
      swift_getKeyPath();
      swift_getKeyPath();
      v51[0] = (uint64_t)v41;
      swift_retain();
      sub_1C2149F90();
      swift_getKeyPath();
      swift_getKeyPath();
      LOBYTE(v51[0]) = (uint64_t)v16 > 0;
      swift_retain();
      sub_1C2149F90();
      swift_release();
    }
    else
    {
      sub_1C21497A0();
      swift_retain_n();
      uint64_t v32 = sub_1C21497E0();
      os_log_type_t v33 = sub_1C214ABD0();
      if (os_log_type_enabled(v32, v33))
      {
        uint64_t v34 = swift_slowAlloc();
        uint64_t v35 = swift_slowAlloc();
        uint64_t v48 = v4;
        uint64_t v36 = v35;
        v51[0] = v35;
        *(_DWORD *)uint64_t v34 = 136446466;
        uint64_t v47 = v3;
        uint64_t v37 = sub_1C214BC10();
        id v49 = v14;
        uint64_t v50 = sub_1C1F6FD54(v37, v38, v51);
        sub_1C214B530();
        swift_bridgeObjectRelease();
        *(_WORD *)(v34 + 12) = 2082;
        uint64_t v39 = sub_1C214A5F0();
        uint64_t v50 = sub_1C1F6FD54(v39, v40, v51);
        sub_1C214B530();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1C1F0B000, v32, v33, "[%{public}s] Failed to find %{public}s shard in registry entries.", (uint8_t *)v34, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1C8754730](v36, -1, -1);
        MEMORY[0x1C8754730](v34, -1, -1);
        swift_release();

        (*(void (**)(char *, uint64_t))(v48 + 8))(v9, v47);
      }
      else
      {

        swift_release_n();
        (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
      }
    }
  }
}

uint64_t OntologyShardStateObserver.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC19HealthMedicationsUI26OntologyShardStateObserver__shardState;
  sub_1C204DC1C(0, &qword_1EBF0C758, (uint64_t (*)(uint64_t))type metadata accessor for HKOntologyShardState, MEMORY[0x1E4F1AC70]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtC19HealthMedicationsUI26OntologyShardStateObserver__isImported;
  sub_1C204DC80(0, &qword_1EBF0C750, MEMORY[0x1E4FBB390], MEMORY[0x1E4F1AC70]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);

  swift_release();
  return v0;
}

uint64_t OntologyShardStateObserver.__deallocating_deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC19HealthMedicationsUI26OntologyShardStateObserver__shardState;
  sub_1C204DC1C(0, &qword_1EBF0C758, (uint64_t (*)(uint64_t))type metadata accessor for HKOntologyShardState, MEMORY[0x1E4F1AC70]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtC19HealthMedicationsUI26OntologyShardStateObserver__isImported;
  sub_1C204DC80(0, &qword_1EBF0C750, MEMORY[0x1E4FBB390], MEMORY[0x1E4F1AC70]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);

  swift_release();

  return swift_deallocClassInstance();
}

uint64_t OntologyShardStateObserver.ontologyStore(_:didStage:)(uint64_t a1, void *a2)
{
  return sub_1C204D268(a2);
}

uint64_t OntologyShardStateObserver.ontologyStore(_:didImport:)(uint64_t a1, void *a2)
{
  return sub_1C204D508(a2);
}

uint64_t sub_1C204CF18(uint64_t a1, uint64_t a2, void *a3, void *a4, void (*a5)(id))
{
  id v7 = a3;
  id v8 = a4;
  swift_retain();
  a5(v8);

  return swift_release();
}

void *sub_1C204CFE4(unint64_t a1, uint64_t a2, uint64_t a3, id a4)
{
  if (a1 >> 62)
  {
LABEL_25:
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_1C214B930();
    if (v5) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v5)
    {
LABEL_3:
      swift_beginAccess();
      uint64_t v6 = 4;
      do
      {
        if ((a1 & 0xC000000000000001) != 0) {
          id v7 = (id)MEMORY[0x1C8753960](v6 - 4, a1);
        }
        else {
          id v7 = *(id *)(a1 + 8 * v6);
        }
        id v8 = v7;
        uint64_t v9 = v6 - 3;
        if (__OFADD__(v6 - 4, 1))
        {
          __break(1u);
          goto LABEL_25;
        }
        uint64_t v10 = v5;
        id v11 = objc_msgSend(v7, sel_identifier);
        uint64_t v12 = sub_1C214A5F0();
        uint64_t v14 = v13;
        if (v12 == sub_1C214A5F0() && v14 == v15)
        {

          swift_bridgeObjectRelease_n();
        }
        else
        {
          char v17 = sub_1C214BA80();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v17 & 1) == 0) {
            goto LABEL_6;
          }
        }
        id v18 = objc_msgSend(v8, sel_schemaType);
        uint64_t v19 = sub_1C214A5F0();
        uint64_t v21 = v20;
        if (v19 == sub_1C214A5F0() && v21 == v22)
        {

          swift_bridgeObjectRelease_n();
        }
        else
        {
          char v23 = sub_1C214BA80();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v23 & 1) == 0) {
            goto LABEL_6;
          }
        }
        if (objc_msgSend(v8, sel_schemaVersion) == a4)
        {
          swift_bridgeObjectRelease();
          return v8;
        }
LABEL_6:

        ++v6;
        uint64_t v5 = v10;
      }
      while (v9 != v10);
    }
  }
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1C204D268(void *a1)
{
  uint64_t v2 = sub_1C21497F0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C21497A0();
  id v6 = a1;
  id v7 = sub_1C21497E0();
  os_log_type_t v8 = sub_1C214ABF0();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = swift_slowAlloc();
    id v18 = (void *)swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    uint64_t v22 = v19;
    *(_DWORD *)uint64_t v9 = 136446467;
    uint64_t v10 = sub_1C214BC10();
    uint64_t v12 = sub_1C1F6FD54(v10, v11, &v22);
    uint64_t v20 = v2;
    uint64_t v21 = v12;
    sub_1C214B530();
    swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 12) = 2117;
    uint64_t v21 = (uint64_t)v6;
    id v13 = v6;
    sub_1C214B530();
    uint64_t v14 = v18;
    void *v18 = v6;

    _os_log_impl(&dword_1C1F0B000, v7, v8, "[%{public}s] Did stage registry entry: %{sensitive}@", (uint8_t *)v9, 0x16u);
    sub_1C1F3603C();
    swift_arrayDestroy();
    MEMORY[0x1C8754730](v14, -1, -1);
    uint64_t v15 = v19;
    swift_arrayDestroy();
    MEMORY[0x1C8754730](v15, -1, -1);
    MEMORY[0x1C8754730](v9, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v20);
  }
  else
  {

    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
}

uint64_t sub_1C204D508(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1C21497F0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  id v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C21497A0();
  id v8 = a1;
  uint64_t v9 = sub_1C21497E0();
  os_log_type_t v10 = sub_1C214ABF0();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = swift_slowAlloc();
    uint64_t v21 = (void *)swift_slowAlloc();
    uint64_t v22 = swift_slowAlloc();
    uint64_t v26 = v22;
    *(_DWORD *)uint64_t v11 = 136446467;
    uint64_t v24 = v2;
    uint64_t v12 = sub_1C214BC10();
    uint64_t v25 = sub_1C1F6FD54(v12, v13, &v26);
    uint64_t v23 = v4;
    sub_1C214B530();
    swift_bridgeObjectRelease();
    *(_WORD *)(v11 + 12) = 2117;
    uint64_t v25 = (uint64_t)v8;
    id v14 = v8;
    sub_1C214B530();
    uint64_t v15 = v21;
    *uint64_t v21 = v8;

    _os_log_impl(&dword_1C1F0B000, v9, v10, "[%{public}s] Did import registry entry: %{sensitive}@", (uint8_t *)v11, 0x16u);
    sub_1C1F3603C();
    swift_arrayDestroy();
    MEMORY[0x1C8754730](v15, -1, -1);
    uint64_t v16 = v22;
    swift_arrayDestroy();
    MEMORY[0x1C8754730](v16, -1, -1);
    MEMORY[0x1C8754730](v11, -1, -1);

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v23);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  sub_1C204DC80(0, (unint64_t *)&qword_1EBF0CA10, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_1C214E170;
  *(void *)(v17 + 32) = v8;
  uint64_t v26 = v17;
  sub_1C214A7A0();
  uint64_t v18 = v26;
  id v19 = v8;
  sub_1C204C214(v18);
  return swift_bridgeObjectRelease();
}

void _s19HealthMedicationsUI26OntologyShardStateObserverC13ontologyStore12didReconnectySo010HKOntologyI0C_tF_0()
{
  uint64_t v0 = sub_1C21497F0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C21497A0();
  uint64_t v4 = sub_1C21497E0();
  os_log_type_t v5 = sub_1C214ABF0();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = swift_slowAlloc();
    uint64_t v12 = v0;
    id v7 = (uint8_t *)v6;
    uint64_t v8 = swift_slowAlloc();
    uint64_t v14 = v8;
    *(_DWORD *)id v7 = 136446210;
    uint64_t v9 = sub_1C214BC10();
    uint64_t v13 = sub_1C1F6FD54(v9, v10, &v14);
    sub_1C214B530();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C1F0B000, v4, v5, "[%{public}s] did reconnect to healthd", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C8754730](v8, -1, -1);
    MEMORY[0x1C8754730](v7, -1, -1);

    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v12);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  }
  sub_1C204BB00();
}

uint64_t sub_1C204DA5C()
{
  return type metadata accessor for OntologyShardStateObserver();
}

uint64_t type metadata accessor for OntologyShardStateObserver()
{
  uint64_t result = qword_1EBF0C508;
  if (!qword_1EBF0C508) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1C204DAB0()
{
  sub_1C204DC1C(319, &qword_1EBF0C758, (uint64_t (*)(uint64_t))type metadata accessor for HKOntologyShardState, MEMORY[0x1E4F1AC70]);
  if (v0 <= 0x3F)
  {
    sub_1C204DC80(319, &qword_1EBF0C750, MEMORY[0x1E4FBB390], MEMORY[0x1E4F1AC70]);
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

uint64_t method lookup function for OntologyShardStateObserver(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for OntologyShardStateObserver);
}

uint64_t dispatch thunk of OntologyShardStateObserver.__allocating_init(identifier:healthStore:settingsManager:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

void sub_1C204DC1C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1C204DC80(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_1C204DCCC()
{
  swift_weakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C204DD04()
{
  swift_release();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

void sub_1C204DD44()
{
  sub_1C204C5C8(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

unint64_t sub_1C204DD50()
{
  unint64_t result = qword_1EBF0CAE0;
  if (!qword_1EBF0CAE0)
  {
    sub_1C214A3F0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBF0CAE0);
  }
  return result;
}

uint64_t sub_1C204DDA8()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C204DDE0(uint64_t a1, void *a2)
{
  return sub_1C204BDF0(a1, a2);
}

uint64_t type metadata accessor for NicknameAndNotesDataSource()
{
  uint64_t result = qword_1EA2C5E60;
  if (!qword_1EA2C5E60) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C204DE3C()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1C204DE9C(uint64_t a1, void *a2)
{
  uint64_t v5 = sub_1C2147B20();
  uint64_t v14 = *(void *)(v5 - 8);
  uint64_t v15 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(v2 + qword_1EA2C5E50) = *MEMORY[0x1E4F66968];
  *(void *)(v2 + qword_1EA2C5E58) = *MEMORY[0x1E4F66970];
  *(void *)(v2 + qword_1EA2C5E48) = a1;
  swift_retain();
  uint64_t v16 = a2;
  if (sub_1C204F63C(a2))
  {
    v13[1] = v2;
    void v13[2] = a1;
    sub_1C204FC0C(0, (unint64_t *)&qword_1EA2C2DD0, MEMORY[0x1E4F66468], MEMORY[0x1E4FBBE00]);
    sub_1C2148540();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1C214FCC0;
    if (qword_1EBF0CA00 != -1) {
      swift_once();
    }
    id v8 = (id)qword_1EBF0CA18;
    swift_bridgeObjectRetain();
    sub_1C2147730();
    swift_bridgeObjectRelease();

    sub_1C2148520();
    id v9 = (id)qword_1EBF0CA18;
    swift_bridgeObjectRetain();
    sub_1C2147730();
    swift_bridgeObjectRelease();

    sub_1C2148520();
    v17[0] = 0;
    v17[1] = 0xE000000000000000;
    sub_1C214B7C0();
    swift_bridgeObjectRelease();
    strcpy((char *)v17, "MutableArray<");
    HIWORD(v17[1]) = -4864;
    sub_1C2147B10();
    sub_1C2147AD0();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v7, v15);
    sub_1C214A6C0();
    swift_bridgeObjectRelease();
    sub_1C214A6C0();
    uint64_t v10 = sub_1C2148590();
    swift_retain();
    sub_1C204E540();
    sub_1C21485C0();
  }
  else
  {
    sub_1C204FC0C(0, (unint64_t *)&qword_1EA2C2DD0, MEMORY[0x1E4F66468], MEMORY[0x1E4FBBE00]);
    sub_1C2148540();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1C214FCD0;
    if (qword_1EBF0CA00 != -1) {
      swift_once();
    }
    id v11 = (id)qword_1EBF0CA18;
    swift_bridgeObjectRetain();
    sub_1C2147730();
    swift_bridgeObjectRelease();

    sub_1C2148520();
    v17[0] = 0;
    v17[1] = 0xE000000000000000;
    sub_1C214B7C0();
    swift_bridgeObjectRelease();
    strcpy((char *)v17, "MutableArray<");
    HIWORD(v17[1]) = -4864;
    sub_1C2147B10();
    sub_1C2147AD0();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v7, v15);
    sub_1C214A6C0();
    swift_bridgeObjectRelease();
    sub_1C214A6C0();
    uint64_t v10 = sub_1C2148590();
    swift_retain();
    sub_1C204E540();
    sub_1C21485C0();
  }
  sub_1C204FCB0(v16, (void (*)(void, void, void, void, void, void))sub_1C204F928);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return v10;
}

uint64_t sub_1C204E540()
{
  uint64_t v57 = (int *)type metadata accessor for TextViewItem();
  MEMORY[0x1F4188790](v57);
  uint64_t v58 = (char *)&v49 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = (int *)type metadata accessor for FieldItem();
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (char *)&v49 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = *(void *)(v0 + qword_1EA2C5E48);
  sub_1C2149E90();
  uint64_t v5 = v60;
  if (v60 == 1 || (uint64_t v6 = v59, swift_bridgeObjectRetain(), sub_1C204FA70(v6, v5), !v5))
  {
    swift_bridgeObjectRelease();
    uint64_t v6 = 0;
    uint64_t v5 = 0xE000000000000000;
  }
  uint64_t v52 = v6;
  unint64_t v53 = v5;
  if (qword_1EBF0CA00 != -1) {
    swift_once();
  }
  id v7 = (id)qword_1EBF0CA18;
  swift_bridgeObjectRetain();
  uint64_t v8 = sub_1C2147730();
  uint64_t v50 = v9;
  uint64_t v51 = v8;
  swift_bridgeObjectRelease();

  uint64_t v49 = *(void *)(v0 + qword_1EA2C5E50);
  uint64_t v10 = swift_allocObject();
  uint64_t v55 = v0;
  swift_weakInit();
  swift_retain();
  sub_1C2147B10();
  id v11 = &v4[v2[5]];
  uint64_t v12 = &v4[v2[6]];
  uint64_t v13 = &v4[v2[10]];
  uint64_t v14 = &v4[v2[14]];
  uint64_t v15 = (uint64_t *)&v4[v2[15]];
  type metadata accessor for FieldCell();
  sub_1C204FD5C(&qword_1EA2C7930, (void (*)(uint64_t))type metadata accessor for FieldCell);
  uint64_t v16 = sub_1C21481D0();
  uint64_t v18 = v17;
  swift_release();
  uint64_t *v15 = v16;
  v15[1] = v18;
  unint64_t v19 = v53;
  *(void *)id v11 = v52;
  *((void *)v11 + 1) = v19;
  uint64_t v20 = v50;
  *(void *)uint64_t v12 = v51;
  *((void *)v12 + 1) = v20;
  *(void *)&v4[v2[7]] = 0x4046000000000000;
  *(void *)uint64_t v13 = v49;
  v13[8] = 0;
  v4[v2[9]] = 0;
  v4[v2[8]] = 1;
  *(void *)&v4[v2[12]] = 0;
  *(void *)uint64_t v14 = 0;
  *((void *)v14 + 1) = 0;
  uint64_t v21 = (uint64_t (**)())&v4[v2[13]];
  *uint64_t v21 = sub_1C204F9A0;
  v21[1] = (uint64_t (*)())v10;
  v4[v2[11]] = 0;
  sub_1C2149E90();
  uint64_t v22 = v60;
  uint64_t v56 = v4;
  if (v60 == 1)
  {
    uint64_t v54 = 0;
    unint64_t v23 = 0xE000000000000000;
  }
  else
  {
    uint64_t v25 = v61;
    unint64_t v24 = v62;
    uint64_t v26 = v59;
    swift_bridgeObjectRetain();
    sub_1C204FA70(v26, v22);
    if (v24) {
      uint64_t v27 = v25;
    }
    else {
      uint64_t v27 = 0;
    }
    uint64_t v54 = v27;
    unint64_t v23 = 0xE000000000000000;
    if (v24) {
      unint64_t v23 = v24;
    }
  }
  unint64_t v53 = v23;
  id v28 = (id)qword_1EBF0CA18;
  swift_bridgeObjectRetain();
  uint64_t v29 = sub_1C2147730();
  uint64_t v51 = v30;
  uint64_t v52 = v29;
  swift_bridgeObjectRelease();

  uint64_t v50 = *(void *)(v55 + qword_1EA2C5E58);
  uint64_t v31 = swift_allocObject();
  swift_weakInit();
  swift_retain();
  uint64_t v32 = (uint64_t)v58;
  sub_1C2147B10();
  os_log_type_t v33 = v57;
  uint64_t v34 = (void *)(v32 + v57[5]);
  uint64_t v35 = (uint64_t *)(v32 + v57[6]);
  uint64_t v36 = v32 + v57[7];
  uint64_t v37 = (uint64_t *)(v32 + v57[11]);
  type metadata accessor for TextItemCell();
  sub_1C204FD5C(&qword_1EA2C56B0, (void (*)(uint64_t))type metadata accessor for TextItemCell);
  uint64_t v38 = sub_1C21481D0();
  uint64_t v40 = v39;
  swift_release();
  uint64_t *v37 = v38;
  v37[1] = v40;
  unint64_t v41 = v53;
  *uint64_t v34 = v54;
  v34[1] = v41;
  *(void *)(v32 + v33[8]) = 0x4064800000000000;
  uint64_t v42 = v51;
  *uint64_t v35 = v52;
  v35[1] = v42;
  *(void *)uint64_t v36 = v50;
  *(unsigned char *)(v36 + 8) = 0;
  *(unsigned char *)(v32 + v33[9]) = 1;
  int v43 = (uint64_t (**)())(v32 + v33[10]);
  void *v43 = sub_1C204F9A8;
  v43[1] = (uint64_t (*)())v31;
  sub_1C204FC0C(0, (unint64_t *)&qword_1EBF0C958, (uint64_t (*)(uint64_t))sub_1C1F1CB5C, MEMORY[0x1E4FBBE00]);
  uint64_t v44 = swift_allocObject();
  *(_OWORD *)(v44 + 16) = xmmword_1C214FCC0;
  *(void *)(v44 + 56) = v2;
  *(void *)(v44 + 64) = sub_1C204FD5C(&qword_1EA2C5028, (void (*)(uint64_t))type metadata accessor for FieldItem);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v44 + 32));
  uint64_t v46 = (uint64_t)v56;
  sub_1C204F9B0((uint64_t)v56, (uint64_t)boxed_opaque_existential_1);
  *(void *)(v44 + 96) = v33;
  *(void *)(v44 + 104) = sub_1C204FD5C(&qword_1EA2C5E80, (void (*)(uint64_t))type metadata accessor for TextViewItem);
  uint64_t v47 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v44 + 72));
  sub_1C204FAB8(v32, (uint64_t)v47, (uint64_t (*)(void))type metadata accessor for TextViewItem);
  sub_1C204FA14(v46);
  return v44;
}

uint64_t sub_1C204EB80()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1C2149E90();
    if (v3 == 1)
    {
      sub_1C2149E90();
      if (v2 != 1)
      {
        swift_bridgeObjectRetain();
        sub_1C204FA70(v1, v2);
      }
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C2149E70();
    swift_release();
    swift_bridgeObjectRelease_n();
    return swift_bridgeObjectRelease_n();
  }
  return result;
}

uint64_t sub_1C204ECC0()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1C2149E90();
    if (v3 == 1)
    {
      sub_1C2149E90();
      if (v2 != 1)
      {
        swift_bridgeObjectRetain();
        sub_1C204FA70(v1, v2);
      }
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C2149E70();
    swift_release();
    swift_bridgeObjectRelease_n();
    return swift_bridgeObjectRelease_n();
  }
  return result;
}

unint64_t sub_1C204EE04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  sub_1C204FC0C(0, (unint64_t *)&qword_1EA2C2FE8, MEMORY[0x1E4F664F8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v21 - v7;
  uint64_t v9 = sub_1C2148540();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (sub_1C214A5F0() == a1 && v13 == a2)
  {
    swift_bridgeObjectRelease();
LABEL_8:
    uint64_t v16 = sub_1C21485A0();
    unint64_t result = sub_1C2147D80();
    if ((result & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (result < *(void *)(v16 + 16))
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v10 + 16))(v12, v16+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(void *)(v10 + 72) * result, v9);
      swift_bridgeObjectRelease();
      sub_1C2148530();
      uint64_t v19 = v18;
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      if (v19)
      {
        uint64_t v20 = sub_1C2148770();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v8, 1, 1, v20);
        a3[3] = sub_1C2148790();
        a3[4] = sub_1C204FD5C((unint64_t *)&qword_1EA2C3000, MEMORY[0x1E4F66500]);
        __swift_allocate_boxed_opaque_existential_1(a3);
        return sub_1C2148780();
      }
      goto LABEL_12;
    }
    __break(1u);
    return result;
  }
  char v15 = sub_1C214BA80();
  swift_bridgeObjectRelease();
  if (v15) {
    goto LABEL_8;
  }
LABEL_12:
  a3[3] = sub_1C2148220();
  a3[4] = sub_1C204FD5C(&qword_1EA2C2D28, MEMORY[0x1E4F66330]);
  __swift_allocate_boxed_opaque_existential_1(a3);
  return sub_1C2148210();
}

uint64_t sub_1C204F13C(unint64_t a1)
{
  uint64_t v2 = sub_1C2148710();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = sub_1C2148360();
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)(result + 16) > a1)
  {
    uint64_t v7 = result + 16 * a1;
    uint64_t v9 = *(void *)(v7 + 32);
    uint64_t v8 = *(void *)(v7 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    if (v9 == 0x656C756465686373 && v8 == 0xEF6E6F6974636553)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v11 = sub_1C214BA80();
      swift_bridgeObjectRelease();
      if ((v11 & 1) == 0)
      {
        sub_1C2148660();
        sub_1C21486B0();
LABEL_11:
        uint64_t v12 = sub_1C20F270C();
        (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
        return v12;
      }
    }
    sub_1C2148660();
    goto LABEL_11;
  }
  __break(1u);
  return result;
}

void sub_1C204F334()
{
}

uint64_t sub_1C204F364()
{
  return swift_release();
}

uint64_t sub_1C204F374()
{
  sub_1C2148610();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_1C204F3C4()
{
  return type metadata accessor for NicknameAndNotesDataSource();
}

uint64_t sub_1C204F3CC()
{
  return sub_1C214ACC0();
}

uint64_t sub_1C204F524()
{
  return swift_retain();
}

uint64_t sub_1C204F534(unint64_t a1)
{
  return sub_1C204F13C(a1);
}

unint64_t sub_1C204F558@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1C204EE04(a1, a2, a3);
}

uint64_t sub_1C204F57C()
{
  return sub_1C2148B80();
}

uint64_t sub_1C204F5F4()
{
  return sub_1C204FD5C(&qword_1EA2C5E70, (void (*)(uint64_t))type metadata accessor for NicknameAndNotesDataSource);
}

uint64_t sub_1C204F63C(void *a1)
{
  uint64_t v2 = sub_1C2148540();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C204FAB8((uint64_t)a1, (uint64_t)v24, (uint64_t (*)(void))sub_1C204FB20);
  if (!*((void *)&v25 + 1)) {
    return 0;
  }
  v26[0] = v24[0];
  v26[1] = v24[1];
  long long v27 = v25;
  sub_1C204FB78((uint64_t)&v27, (uint64_t)&v28);
  uint64_t v6 = (void *)*((void *)&v27 + 1);
  sub_1C2148E10();
  sub_1C204FCB0(a1, (void (*)(void, void, void, void, void, void))sub_1C204FCF0);
  sub_1C204FD30(&v28);
  id v7 = v6;
  sub_1C2148E00();
  uint64_t v8 = (void *)sub_1C2148DB0();
  swift_release();
  sub_1C2149590();
  swift_allocObject();
  uint64_t v9 = sub_1C2149560();
  type metadata accessor for ScheduleDataSource(0);
  uint64_t v10 = swift_allocObject();
  sub_1C211B354((uint64_t)v26, v8, 0, v9, 1, v10);
  sub_1C204FD5C(&qword_1EA2C5E90, (void (*)(uint64_t))type metadata accessor for ScheduleDataSource);
  uint64_t v11 = sub_1C2148340();
  swift_release();
  uint64_t v23 = MEMORY[0x1E4FBC860];
  uint64_t v12 = *(void *)(v11 + 16);
  if (v12)
  {
    v21[1] = v11;
    id v22 = v7;
    char v15 = *(void (**)(char *, unint64_t, uint64_t))(v3 + 16);
    uint64_t v13 = v3 + 16;
    uint64_t v14 = v15;
    unint64_t v16 = v11 + ((*(unsigned __int8 *)(v13 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 64));
    uint64_t v17 = *(void *)(v13 + 56);
    swift_bridgeObjectRetain();
    do
    {
      v14(v5, v16, v2);
      uint64_t v18 = sub_1C2148510();
      (*(void (**)(char *, uint64_t))(v13 - 8))(v5, v2);
      sub_1C1F7D1D0(v18);
      v16 += v17;
      --v12;
    }
    while (v12);
    swift_bridgeObjectRelease();
    sub_1C204FDA4(&v28);

    uint64_t v19 = v23;
  }
  else
  {
    sub_1C204FDA4(&v28);

    uint64_t v19 = MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRelease();
  return v19;
}

void sub_1C204F928(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void *a6)
{
  if (a6)
  {
  }
}

uint64_t sub_1C204F968()
{
  swift_weakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C204F9A0()
{
  return sub_1C204EB80();
}

uint64_t sub_1C204F9A8()
{
  return sub_1C204ECC0();
}

uint64_t sub_1C204F9B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FieldItem();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C204FA14(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FieldItem();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C204FA70(uint64_t a1, uint64_t a2)
{
  if (a2 != 1)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C204FAB8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_1C204FB20()
{
  if (!qword_1EA2C5E88)
  {
    unint64_t v0 = sub_1C214B4F0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C5E88);
    }
  }
}

uint64_t sub_1C204FB78(uint64_t a1, uint64_t a2)
{
  sub_1C204FC0C(0, &qword_1EA2C3588, (uint64_t (*)(uint64_t))sub_1C204FC70, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1C204FC0C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_1C204FC70()
{
  unint64_t result = qword_1EA2C6A20;
  if (!qword_1EA2C6A20)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA2C6A20);
  }
  return result;
}

void *sub_1C204FCB0(void *a1, void (*a2)(void, void, void, void, void, void))
{
  return a1;
}

void sub_1C204FCF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void *a6)
{
  if (a6)
  {
    id v6 = a5;
    id v7 = a6;
  }
}

id *sub_1C204FD30(id *a1)
{
  id v2 = *a1;
  return a1;
}

uint64_t sub_1C204FD5C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id *sub_1C204FDA4(id *a1)
{
  return a1;
}

void __swiftcall MedicationIconItem.init(image:)(HealthMedicationsUI::MedicationIconItem *__return_ptr retstr, UIImage image)
{
  uint64_t v4 = sub_1C2147B20();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  id v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2147B10();
  uint64_t v8 = sub_1C2147AD0();
  uint64_t v10 = v9;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  type metadata accessor for MedicationIconCell();
  sub_1C204FEFC();
  uint64_t v11 = sub_1C21481D0();
  retstr->uniqueIdentifier._countAndFlagsBits = v8;
  retstr->uniqueIdentifier._object = v10;
  retstr->image = image;
  retstr->reuseIdentifier._countAndFlagsBits = v11;
  retstr->reuseIdentifier._object = v12;
}

uint64_t type metadata accessor for MedicationIconCell()
{
  return self;
}

unint64_t sub_1C204FEFC()
{
  unint64_t result = qword_1EA2C2FF8;
  if (!qword_1EA2C2FF8)
  {
    type metadata accessor for MedicationIconCell();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C2FF8);
  }
  return result;
}

uint64_t MedicationIconItem.uniqueIdentifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

id MedicationIconItem.image.getter()
{
  return *(id *)(v0 + 16);
}

uint64_t MedicationIconItem.reuseIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t static MedicationIconItem.== infix(_:_:)(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return 1;
  }
  else {
    return sub_1C214BA80();
  }
}

void MedicationIconItem.hash(into:)()
{
  uint64_t v1 = *(void **)(v0 + 16);
  swift_bridgeObjectRetain();
  sub_1C214A690();
  swift_bridgeObjectRelease();
  id v2 = v1;
  sub_1C214B230();
}

uint64_t MedicationIconItem.hashValue.getter()
{
  return sub_1C214BB80();
}

uint64_t sub_1C20500CC()
{
  return sub_1C214BB80();
}

uint64_t sub_1C205012C()
{
  return sub_1C214B230();
}

uint64_t sub_1C2050160()
{
  return sub_1C214BB80();
}

unint64_t sub_1C20501C0()
{
  unint64_t result = qword_1EA2C5E98;
  if (!qword_1EA2C5E98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C5E98);
  }
  return result;
}

uint64_t destroy for MedicationIconItem(uint64_t a1)
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for MedicationIconItem(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v5 = (void *)a2[2];
  uint64_t v4 = a2[3];
  a1[2] = v5;
  a1[3] = v4;
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  id v6 = v5;
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for MedicationIconItem(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (void *)a2[2];
  uint64_t v5 = (void *)a1[2];
  a1[2] = v4;
  id v6 = v4;

  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for MedicationIconItem(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void **)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);

  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for MedicationIconItem()
{
  return &type metadata for MedicationIconItem;
}

id sub_1C2050450()
{
  uint64_t v1 = OBJC_IVAR____TtC19HealthMedicationsUI18MedicationIconCell____lazy_storage___imageView;
  id v2 = *(void **)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI18MedicationIconCell____lazy_storage___imageView);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI18MedicationIconCell____lazy_storage___imageView);
  }
  else
  {
    id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1838]), sel_init);
    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    objc_msgSend(v4, sel_setContentMode_, 1);
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    id v2 = 0;
  }
  id v6 = v2;
  return v3;
}

void sub_1C205057C()
{
  id v1 = objc_msgSend(v0, sel_contentView);
  id v2 = sub_1C2050450();
  objc_msgSend(v1, sel_addSubview_, v2);

  id v3 = self;
  sub_1C1F0ED28();
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1C21544C0;
  id v5 = sub_1C2050450();
  id v6 = objc_msgSend(v5, sel_heightAnchor);

  id v7 = objc_msgSend(v6, sel_constraintEqualToConstant_, 80.0);
  *(void *)(v4 + 32) = v7;
  id v8 = sub_1C2050450();
  id v9 = objc_msgSend(v8, sel_widthAnchor);

  id v10 = objc_msgSend(v9, sel_constraintEqualToConstant_, 80.0);
  *(void *)(v4 + 40) = v10;
  id v11 = objc_msgSend(v0, sel_contentView);
  id v12 = objc_msgSend(v11, sel_heightAnchor);

  id v13 = objc_msgSend(v12, sel_constraintEqualToConstant_, 100.0);
  *(void *)(v4 + 48) = v13;
  id v14 = objc_msgSend(v0, sel_contentView);
  id v15 = objc_msgSend(v14, sel_bottomAnchor);

  id v16 = sub_1C2050450();
  id v17 = objc_msgSend(v16, sel_bottomAnchor);

  id v18 = objc_msgSend(v15, sel_constraintEqualToAnchor_, v17);
  *(void *)(v4 + 56) = v18;
  id v19 = objc_msgSend(v0, sel_contentView);
  id v20 = objc_msgSend(v19, sel_centerXAnchor);

  id v21 = sub_1C2050450();
  id v22 = objc_msgSend(v21, sel_centerXAnchor);

  id v23 = objc_msgSend(v20, sel_constraintEqualToAnchor_, v22);
  *(void *)(v4 + 64) = v23;
  sub_1C214A7A0();
  sub_1C1F645D4();
  id v24 = (id)sub_1C214A770();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_activateConstraints_, v24);
}

uint64_t sub_1C205087C(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI18MedicationIconCell_item;
  swift_beginAccess();
  sub_1C1F32DDC(a1, v3);
  swift_endAccess();
  id v4 = sub_1C2050450();
  sub_1C1F2116C(v3, (uint64_t)v8);
  if (!v9)
  {
    sub_1C1F374E4((uint64_t)v8);
    goto LABEL_5;
  }
  sub_1C1F1CB5C();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_5:
    id v5 = 0;
    goto LABEL_6;
  }
  id v5 = v7;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_6:
  objc_msgSend(v4, sel_setImage_, v5);

  return sub_1C1F374E4(a1);
}

void (*sub_1C205096C(void *a1))(void **a1, char a2)
{
  uint64_t v3 = malloc(0x60uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC19HealthMedicationsUI18MedicationIconCell_item;
  v3[10] = v1;
  v3[11] = v4;
  swift_beginAccess();
  return sub_1C20509D8;
}

void sub_1C20509D8(void **a1, char a2)
{
  uint64_t v3 = *a1;
  swift_endAccess();
  if ((a2 & 1) == 0)
  {
    uint64_t v4 = v3[10] + v3[11];
    id v5 = sub_1C2050450();
    sub_1C1F2116C(v4, (uint64_t)v3);
    if (v3[3])
    {
      sub_1C1F1CB5C();
      if (swift_dynamicCast())
      {
        id v6 = (void *)v3[7];
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_7:
        objc_msgSend(v5, sel_setImage_, v6);

        goto LABEL_8;
      }
    }
    else
    {
      sub_1C1F374E4((uint64_t)v3);
    }
    id v6 = 0;
    goto LABEL_7;
  }
LABEL_8:

  free(v3);
}

id sub_1C2050AB4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MedicationIconCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1C2050B34@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI18MedicationIconCell_item;
  swift_beginAccess();
  return sub_1C1F2116C(v3, a1);
}

void (*sub_1C2050B8C(void *a1))(void *a1)
{
  objc_super v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1C205096C(v2);
  return sub_1C1F37460;
}

uint64_t sub_1C2050BE4(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  uint64_t v4 = (void *)(*a2 + qword_1EA2C5EB0);
  swift_beginAccess();
  *uint64_t v4 = v3;
  v4[1] = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C2050C50()
{
  uint64_t v1 = (uint64_t *)(v0 + qword_1EA2C5EB0);
  swift_beginAccess();
  uint64_t v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1C2050CA8(uint64_t a1, uint64_t a2)
{
  id v5 = (void *)(v2 + qword_1EA2C5EB0);
  swift_beginAccess();
  *id v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1C2050D08())()
{
  return j__swift_endAccess;
}

uint64_t FrequencyPickerDataSource.__allocating_init(frequencyPublisher:frequencyIntervalPublisher:cycleUnitPublisher:context:)(uint64_t a1, uint64_t a2, uint64_t a3, long long *a4)
{
  return FrequencyPickerDataSource.init(frequencyPublisher:frequencyIntervalPublisher:cycleUnitPublisher:context:)(a1, a2, a3, a4);
}

uint64_t FrequencyPickerDataSource.init(frequencyPublisher:frequencyIntervalPublisher:cycleUnitPublisher:context:)(uint64_t a1, uint64_t a2, uint64_t a3, long long *a4)
{
  long long v15 = *a4;
  uint64_t v8 = *((void *)a4 + 2);
  uint64_t v9 = *((void *)a4 + 3);
  id v10 = (uint64_t *)(v4 + qword_1EA2C5EB0);
  uint64_t v16 = sub_1C214A5F0();
  uint64_t v17 = v11;
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  swift_retain();
  swift_bridgeObjectRelease();
  *id v10 = v16;
  v10[1] = v17;
  *(void *)(v4 + qword_1EA2C5EB8) = 0;
  *(void *)(v4 + qword_1EA2C5EC0) = a1;
  *(void *)(v4 + qword_1EA2C5EC8) = a2;
  *(void *)(v4 + qword_1EA2C5ED0) = a3;
  uint64_t v12 = v4 + qword_1EA2C5ED8;
  *(_OWORD *)uint64_t v12 = v15;
  *(void *)(v12 + 16) = v8;
  *(void *)(v12 + 24) = v9;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_release();
  uint64_t v13 = sub_1C21489B0();
  swift_retain();
  sub_1C205240C();
  sub_1C21485C0();
  swift_bridgeObjectRelease();
  sub_1C20527F4();
  sub_1C2051090();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v13;
}

void *sub_1C2050F74()
{
  uint64_t v0 = sub_1C2148710();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2148660();
  uint64_t v4 = (void *)sub_1C2148700();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  sub_1C214AEA0();
  objc_msgSend(v4, sel_setContentInsets_);
  objc_msgSend(v4, sel_contentInsets);
  objc_msgSend(v4, sel_setContentInsets_);
  objc_msgSend(v4, sel_setContentInsetsReference_, 1);
  return v4;
}

uint64_t sub_1C2051090()
{
  uint64_t v1 = v0;
  sub_1C2053590(0, &qword_1EBF0C7E8, MEMORY[0x1E4FBCC28]);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)v13 - v3;
  sub_1C20535E4();
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13[1] = *(id *)(v0 + qword_1EA2C5EC0);
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0CB10);
  swift_retain();
  v13[0] = (id)sub_1C214AD80();
  uint64_t v10 = sub_1C214AD20();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v4, 1, 1, v10);
  sub_1C20536B0();
  sub_1C2053074((unint64_t *)&qword_1EA2C4CA0, (void (*)(uint64_t))sub_1C20536B0);
  sub_1C1F43FD4();
  sub_1C214A0A0();
  sub_1C1F441C8((uint64_t)v4);

  swift_release();
  swift_allocObject();
  swift_weakInit();
  sub_1C2053074(&qword_1EA2C5F48, (void (*)(uint64_t))sub_1C20535E4);
  uint64_t v11 = sub_1C214A0F0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  *(void *)(v1 + qword_1EA2C5EB8) = v11;
  return swift_release();
}

uint64_t sub_1C2051368()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1C20527F4();
    return swift_release();
  }
  return result;
}

uint64_t sub_1C20513C0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v38 = a1;
  uint64_t v31 = *v1;
  uint64_t v3 = sub_1C2148A70();
  uint64_t v36 = *(void *)(v3 - 8);
  uint64_t v37 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v35 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2053590(0, &qword_1EBF0C620, MEMORY[0x1E4FB0F28]);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v30 - v6;
  uint64_t v32 = sub_1C2148620();
  uint64_t v8 = *(void *)(v32 - 8);
  MEMORY[0x1F4188790](v32);
  uint64_t v34 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = sub_1C2149BE0();
  uint64_t v30 = *(void *)(v33 - 8);
  MEMORY[0x1F4188790](v33);
  uint64_t v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2149E90();
  sub_1C1FA2324(v41);
  sub_1C2149BD0();
  id v12 = objc_msgSend(self, sel_linkColor);
  uint64_t v13 = (void (*)(uint64_t *, void))sub_1C2149AF0();
  sub_1C2149A60();
  v13(&v41, 0);
  sub_1C2149B90();
  if (qword_1EBF0CA00 != -1) {
    swift_once();
  }
  id v14 = (id)qword_1EBF0CA18;
  swift_bridgeObjectRetain();
  sub_1C2147730();
  swift_bridgeObjectRelease();

  sub_1C2149A00();
  long long v15 = (void (*)(uint64_t *, void))sub_1C2149B10();
  double *v16 = *v16 + 4.0;
  v15(&v41, 0);
  uint64_t v17 = (void (*)(uint64_t *, void))sub_1C2149B10();
  *(double *)(v18 + 16) = *(double *)(v18 + 16) + 4.0;
  v17(&v41, 0);
  uint64_t v41 = 0;
  unint64_t v42 = 0xE000000000000000;
  sub_1C214B7C0();
  uint64_t v19 = sub_1C214BC10();
  unint64_t v21 = v20;
  swift_bridgeObjectRelease();
  uint64_t v41 = v19;
  unint64_t v42 = v21;
  sub_1C214A6C0();
  uint64_t v31 = v41;
  uint64_t v22 = v33;
  uint64_t v43 = v33;
  uint64_t v44 = MEMORY[0x1E4FB0F88];
  id v23 = __swift_allocate_boxed_opaque_existential_1(&v41);
  uint64_t v24 = v30;
  (*(void (**)(uint64_t *, char *, uint64_t))(v30 + 16))(v23, v11, v22);
  swift_allocObject();
  swift_weakInit();
  long long v25 = v34;
  *uint64_t v34 = 1;
  (*(void (**)(unsigned char *, void, uint64_t))(v8 + 104))(v25, *MEMORY[0x1E4F66478], v32);
  swift_retain();
  sub_1C21499A0();
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C900);
  sub_1C214B1A0();
  sub_1C2149990();
  uint64_t v26 = sub_1C21499D0();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v7, 0, 1, v26);
  long long v27 = (uint64_t *)((char *)v2 + qword_1EA2C5EB0);
  swift_beginAccess();
  uint64_t v28 = v27[1];
  uint64_t v39 = *v27;
  uint64_t v40 = v28;
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  (*(void (**)(char *, void, uint64_t))(v36 + 104))(v35, *MEMORY[0x1E4F66678], v37);
  sub_1C21487A0();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v11, v22);
  return swift_release();
}

void sub_1C20519F8(void *a1)
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v3 = *(void *)(Strong + qword_1EA2C5EC0);
    uint64_t v4 = *(void *)(Strong + qword_1EA2C5ED8 + 8);
    uint64_t v5 = *(void *)(Strong + qword_1EA2C5ED8 + 16);
    uint64_t v6 = *(void *)(Strong + qword_1EA2C5ED8 + 24);
    v9[0] = *(void *)(Strong + qword_1EA2C5ED8);
    v9[1] = v4;
    v9[2] = v5;
    v9[3] = v6;
    objc_allocWithZone((Class)type metadata accessor for ScheduleTypePickerViewController(0));
    swift_retain();
    sub_1C2021590(v9[0], v4);
    id v7 = sub_1C2021F98(v3, v9);
    id v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F67B78]), sel_initWithRootViewController_, v7);
    objc_msgSend(v8, sel_setModalPresentationStyle_, 2);
    objc_msgSend(v8, sel_setModalInPresentation_, 1);
    objc_msgSend(a1, sel_presentViewController_animated_completion_, v8, 1, 0);
    swift_release();
  }
}

uint64_t sub_1C2051B38@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_1C2147B20();
  MEMORY[0x1F4188790](v2 - 8);
  sub_1C2053590(0, &qword_1EBF0C620, MEMORY[0x1E4FB0F28]);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)v11 - v4;
  v11[1] = sub_1C20C753C();
  if (qword_1EBF0CA00 != -1) {
    swift_once();
  }
  id v6 = (id)qword_1EBF0CA18;
  swift_bridgeObjectRetain();
  sub_1C2147730();
  swift_bridgeObjectRelease();

  sub_1C21499A0();
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C900);
  sub_1C214B1A0();
  sub_1C2149990();
  uint64_t v7 = sub_1C21499D0();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v5, 0, 1, v7);
  swift_allocObject();
  swift_weakInit();
  swift_allocObject();
  swift_weakInit();
  sub_1C2147B10();
  id v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4F66218];
  sub_1C2053520(0, &qword_1EA2C5F30, (uint64_t (*)(void))sub_1C2053104, (uint64_t)&type metadata for FrequencyInterval, MEMORY[0x1E4F66218]);
  a1[3] = v9;
  a1[4] = sub_1C2053158(&qword_1EA2C5F38, &qword_1EA2C5F30, v8);
  __swift_allocate_boxed_opaque_existential_1(a1);
  sub_1C2053104();
  return sub_1C2148190();
}

uint64_t sub_1C2051E80@<X0>(uint64_t a1@<X8>)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1C2149E90();
    return swift_release();
  }
  else
  {
    *(void *)a1 = 0;
    *(unsigned char *)(a1 + 8) = 1;
  }
  return result;
}

uint64_t sub_1C2051F04()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1C2149E70();
    return swift_release();
  }
  return result;
}

uint64_t sub_1C2051F84@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_1C2147B20();
  MEMORY[0x1F4188790](v2 - 8);
  sub_1C2053590(0, &qword_1EBF0C620, MEMORY[0x1E4FB0F28]);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v11 - v4;
  if (qword_1EBF0CA00 != -1) {
    swift_once();
  }
  id v6 = (id)qword_1EBF0CA18;
  swift_bridgeObjectRetain();
  sub_1C2147730();
  swift_bridgeObjectRelease();

  sub_1C21499A0();
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C900);
  sub_1C214B1A0();
  sub_1C2149990();
  uint64_t v7 = sub_1C21499D0();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v5, 0, 1, v7);
  swift_allocObject();
  swift_weakInit();
  swift_allocObject();
  swift_weakInit();
  sub_1C2147B10();
  id v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4F66218];
  sub_1C2053520(0, &qword_1EA2C5F20, (uint64_t (*)(void))sub_1C20531BC, (uint64_t)&type metadata for DisplayUnit, MEMORY[0x1E4F66218]);
  a1[3] = v9;
  a1[4] = sub_1C20534AC(&qword_1EA2C5F28, &qword_1EA2C5F20, v8);
  __swift_allocate_boxed_opaque_existential_1(a1);
  sub_1C20531BC();
  return sub_1C2148190();
}

uint64_t sub_1C20522BC@<X0>(unsigned char *a1@<X8>)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1C2149E90();
    return swift_release();
  }
  else
  {
    *a1 = 2;
  }
  return result;
}

uint64_t sub_1C205233C(uint64_t a1, unsigned __int8 *a2)
{
  int v2 = *a2;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1C2149E70();
    uint64_t result = swift_release();
  }
  if (v2 != 2)
  {
    swift_beginAccess();
    uint64_t result = swift_weakLoadStrong();
    if (result)
    {
      sub_1C2149E70();
      return swift_release();
    }
  }
  return result;
}

void *sub_1C205240C()
{
  uint64_t v0 = sub_1C21487B0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v26 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C20513C0((uint64_t)v3);
  uint64_t v4 = sub_1C1F3AAC4(0, 1, 1, MEMORY[0x1E4FBC860]);
  uint64_t v29 = v4;
  unint64_t v6 = v4[2];
  unint64_t v5 = v4[3];
  if (v6 >= v5 >> 1)
  {
    uint64_t v4 = sub_1C1F3AAC4((void *)(v5 > 1), v6 + 1, 1, v4);
    uint64_t v29 = v4;
  }
  uint64_t v27 = v0;
  uint64_t v28 = sub_1C2053074((unint64_t *)&qword_1EA2C2E68, MEMORY[0x1E4F66510]);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v26);
  (*(void (**)(uint64_t *, char *, uint64_t))(v1 + 16))(boxed_opaque_existential_1, v3, v0);
  v4[2] = v6 + 1;
  sub_1C1F31280(&v26, (uint64_t)&v4[5 * v6 + 4]);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  id v8 = v29;
  sub_1C2149E90();
  if ((void)v26 == 1)
  {
    sub_1C2051B38((uint64_t *)&v26);
    unint64_t v10 = v8[2];
    unint64_t v9 = v8[3];
    if (v10 >= v9 >> 1) {
      uint64_t v29 = sub_1C1F3AAC4((void *)(v9 > 1), v10 + 1, 1, v8);
    }
    uint64_t v11 = v27;
    uint64_t v12 = v28;
    uint64_t v13 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v26, v27);
    MEMORY[0x1F4188790](v13);
    long long v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v16 + 16))(v15);
    sub_1C20FB164(v10, (uint64_t)v15, (uint64_t *)&v29, v11, v12);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)&v26);
    id v8 = v29;
  }
  sub_1C2149E90();
  if ((unint64_t)(v26 - 7) <= 1)
  {
    sub_1C2051F84((uint64_t *)&v26);
    uint64_t v29 = v8;
    unint64_t v18 = v8[2];
    unint64_t v17 = v8[3];
    if (v18 >= v17 >> 1) {
      uint64_t v29 = sub_1C1F3AAC4((void *)(v17 > 1), v18 + 1, 1, v8);
    }
    uint64_t v19 = v27;
    uint64_t v20 = v28;
    uint64_t v21 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v26, v27);
    MEMORY[0x1F4188790](v21);
    id v23 = (char *)&v26 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v24 + 16))(v23);
    sub_1C20FB164(v18, (uint64_t)v23, (uint64_t *)&v29, v19, v20);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)&v26);
    return v29;
  }
  return v8;
}

uint64_t sub_1C20527F4()
{
  sub_1C205240C();
  sub_1C21485C0();
  swift_bridgeObjectRelease();
  uint64_t result = sub_1C2149E90();
  if (v1 == 1)
  {
    uint64_t result = sub_1C2149E90();
    if (v2 == 1) {
      return sub_1C2149E70();
    }
  }
  return result;
}

BOOL sub_1C2052898(uint64_t a1)
{
  return a1 == 1;
}

BOOL sub_1C20528A4(uint64_t a1)
{
  return (unint64_t)(a1 - 7) < 2;
}

void FrequencyPickerDataSource.__allocating_init(arrangedSections:collapseEmptySections:layoutConstructor:)()
{
}

void FrequencyPickerDataSource.init(arrangedSections:collapseEmptySections:layoutConstructor:)()
{
}

void FrequencyPickerDataSource.__allocating_init(arrangedSections:collapseEmptySections:layoutSectionProvider:)()
{
}

void sub_1C2052908()
{
}

void FrequencyPickerDataSource.init(arrangedSections:collapseEmptySections:layoutSectionProvider:)()
{
}

uint64_t sub_1C2052950()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  sub_1C20215D4(*(void *)(v0 + qword_1EA2C5ED8), *(void *)(v0 + qword_1EA2C5ED8 + 8));

  return swift_release();
}

uint64_t FrequencyPickerDataSource.deinit()
{
  uint64_t v0 = sub_1C21489E0();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  sub_1C20215D4(*(void *)(v0 + qword_1EA2C5ED8), *(void *)(v0 + qword_1EA2C5ED8 + 8));
  swift_release();
  return v0;
}

uint64_t FrequencyPickerDataSource.__deallocating_deinit()
{
  uint64_t v0 = sub_1C21489E0();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  sub_1C20215D4(*(void *)(v0 + qword_1EA2C5ED8), *(void *)(v0 + qword_1EA2C5ED8 + 8));
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t FrequencyPickerDataSource.supplementaryItem(ofKind:at:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  if (sub_1C214A5F0() == a1 && v5 == a2)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v7 = sub_1C214BA80();
    swift_bridgeObjectRelease();
    if ((v7 & 1) == 0)
    {
      a3[3] = sub_1C2148220();
      a3[4] = sub_1C2053074(&qword_1EA2C2D28, MEMORY[0x1E4F66330]);
      __swift_allocate_boxed_opaque_existential_1(a3);
      return sub_1C2148210();
    }
  }
  if (qword_1EBF0CA00 != -1) {
    swift_once();
  }
  id v9 = (id)qword_1EBF0CA18;
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_1C2147730();
  uint64_t v12 = v11;
  swift_bridgeObjectRelease();

  type metadata accessor for ScheduleHeaderCell();
  sub_1C2053074(&qword_1EA2C4C60, (void (*)(uint64_t))type metadata accessor for ScheduleHeaderCell);
  uint64_t v13 = sub_1C21481D0();
  uint64_t v15 = v14;
  sub_1C21481D0();
  swift_bridgeObjectRelease();
  a3[3] = (uint64_t)&type metadata for ScheduleHeaderItem;
  a3[4] = sub_1C1FDDC00();
  uint64_t result = swift_allocObject();
  *a3 = result;
  *(void *)(result + 16) = v10;
  *(void *)(result + 24) = v12;
  *(unsigned char *)(result + 32) = 0;
  *(void *)(result + 40) = nullsub_1;
  *(void *)(result + 48) = 0;
  *(void *)(result + 56) = v13;
  *(void *)(result + 64) = v15;
  return result;
}

uint64_t sub_1C2052D5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return FrequencyPickerDataSource.supplementaryItem(ofKind:at:)(a1, a2, a3);
}

Swift::Void __swiftcall FrequencyPickerDataSource.registerCells(for:)(UICollectionView *a1)
{
  type metadata accessor for ScheduleHeaderCell();
  sub_1C2053074(&qword_1EA2C4C60, (void (*)(uint64_t))type metadata accessor for ScheduleHeaderCell);
  sub_1C214ACE0();
  sub_1C2148B30();
  sub_1C214ACC0();
  uint64_t v1 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4F66538];
  sub_1C2053520(0, &qword_1EA2C5EE0, (uint64_t (*)(void))sub_1C2053104, (uint64_t)&type metadata for FrequencyInterval, MEMORY[0x1E4F66538]);
  sub_1C2053158(&qword_1EA2C5EF0, &qword_1EA2C5EE0, v1);
  sub_1C214ACC0();
  sub_1C2053520(0, &qword_1EA2C5EF8, (uint64_t (*)(void))sub_1C20531BC, (uint64_t)&type metadata for DisplayUnit, v1);
  sub_1C20534AC(&qword_1EA2C5F08, &qword_1EA2C5EF8, v1);
  sub_1C214ACC0();
}

uint64_t sub_1C2052EF4()
{
  type metadata accessor for ScheduleHeaderCell();
  sub_1C2053074(&qword_1EA2C4C60, (void (*)(uint64_t))type metadata accessor for ScheduleHeaderCell);
  sub_1C214ACE0();
  sub_1C2148B30();
  sub_1C214ACC0();
  uint64_t v0 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4F66538];
  sub_1C2053520(0, &qword_1EA2C5EE0, (uint64_t (*)(void))sub_1C2053104, (uint64_t)&type metadata for FrequencyInterval, MEMORY[0x1E4F66538]);
  sub_1C2053158(&qword_1EA2C5EF0, &qword_1EA2C5EE0, v0);
  sub_1C214ACC0();
  sub_1C2053520(0, &qword_1EA2C5EF8, (uint64_t (*)(void))sub_1C20531BC, (uint64_t)&type metadata for DisplayUnit, v0);
  sub_1C20534AC(&qword_1EA2C5F08, &qword_1EA2C5EF8, v0);
  return sub_1C214ACC0();
}

uint64_t sub_1C2053074(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C20530BC()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 72, 7);
}

unint64_t sub_1C2053104()
{
  unint64_t result = qword_1EA2C5EE8;
  if (!qword_1EA2C5EE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C5EE8);
  }
  return result;
}

uint64_t sub_1C2053158(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C2053520(255, a2, (uint64_t (*)(void))sub_1C2053104, (uint64_t)&type metadata for FrequencyInterval, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C20531BC()
{
  unint64_t result = qword_1EA2C5F00;
  if (!qword_1EA2C5F00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C5F00);
  }
  return result;
}

uint64_t sub_1C2053210@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (void *)(*a1 + qword_1EA2C5EB0);
  swift_beginAccess();
  uint64_t v4 = v3[1];
  *a2 = *v3;
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for FrequencyPickerDataSource()
{
  uint64_t result = qword_1EA2C5F10;
  if (!qword_1EA2C5F10) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C20532B8()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for FrequencyPickerDataSource(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FrequencyPickerDataSource);
}

uint64_t dispatch thunk of FrequencyPickerDataSource.baseIdentifier.getter()
{
  return (*(uint64_t (**)(void))(class metadata base offset for FrequencyPickerDataSource + *v0 + 48))();
}

uint64_t dispatch thunk of FrequencyPickerDataSource.baseIdentifier.setter()
{
  return (*(uint64_t (**)(void))(class metadata base offset for FrequencyPickerDataSource + *v0 + 56))();
}

uint64_t dispatch thunk of FrequencyPickerDataSource.baseIdentifier.modify()
{
  return (*(uint64_t (**)(void))(class metadata base offset for FrequencyPickerDataSource + *v0 + 64))();
}

uint64_t dispatch thunk of FrequencyPickerDataSource.__allocating_init(frequencyPublisher:frequencyIntervalPublisher:cycleUnitPublisher:context:)()
{
  return (*(uint64_t (**)(void))(class metadata base offset for FrequencyPickerDataSource + v0 + 192))();
}

uint64_t dispatch thunk of static FrequencyPickerDataSource.shouldAddDaysIntervalItem(for:)()
{
  return (*(uint64_t (**)(void))(class metadata base offset for FrequencyPickerDataSource + v0 + 264))();
}

uint64_t dispatch thunk of static FrequencyPickerDataSource.shouldAddCyclicalUnitPickerItem(for:)()
{
  return (*(uint64_t (**)(void))(class metadata base offset for FrequencyPickerDataSource + v0 + 272))();
}

uint64_t sub_1C205345C()
{
  return type metadata accessor for FrequencyPickerDataSource();
}

uint64_t sub_1C2053464()
{
  swift_weakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C205349C@<X0>(unsigned char *a1@<X8>)
{
  return sub_1C20522BC(a1);
}

uint64_t sub_1C20534A4(uint64_t a1, unsigned __int8 *a2)
{
  return sub_1C205233C(a1, a2);
}

uint64_t sub_1C20534AC(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C2053520(255, a2, (uint64_t (*)(void))sub_1C20531BC, (uint64_t)&type metadata for DisplayUnit, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C2053510@<X0>(uint64_t a1@<X8>)
{
  return sub_1C2051E80(a1);
}

uint64_t sub_1C2053518()
{
  return sub_1C2051F04();
}

void sub_1C2053520(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

void sub_1C2053588(void *a1)
{
}

void sub_1C2053590(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C214B4F0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1C20535E4()
{
  if (!qword_1EA2C5F40)
  {
    sub_1C20536B0();
    sub_1C1F12718(255, (unint64_t *)&qword_1EBF0CB10);
    sub_1C2053074((unint64_t *)&qword_1EA2C4CA0, (void (*)(uint64_t))sub_1C20536B0);
    sub_1C1F43FD4();
    unint64_t v0 = sub_1C2149DF0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C5F40);
    }
  }
}

void sub_1C20536B0()
{
  if (!qword_1EA2C4C88)
  {
    type metadata accessor for HKMedicationScheduleType(255);
    unint64_t v0 = sub_1C2149EA0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C4C88);
    }
  }
}

uint64_t sub_1C2053718()
{
  return sub_1C2051368();
}

uint64_t sub_1C2053720(uint64_t a1)
{
  uint64_t v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1C214B680();
    sub_1C2149E40();
    sub_1C205A068(&qword_1EA2C3570, MEMORY[0x1E4F1AB18]);
    uint64_t result = sub_1C214AAA0();
    uint64_t v1 = v18;
    uint64_t v17 = v19;
    uint64_t v3 = v20;
    uint64_t v4 = v21;
    unint64_t v5 = v22;
  }
  else
  {
    uint64_t v6 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v17 = a1 + 56;
    uint64_t v3 = ~v6;
    uint64_t v7 = -v6;
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v5 = v8 & *(void *)(a1 + 56);
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v4 = 0;
  }
  int64_t v9 = (unint64_t)(v3 + 64) >> 6;
  if (v1 < 0) {
    goto LABEL_10;
  }
  while (1)
  {
    if (v5)
    {
      uint64_t v10 = (v5 - 1) & v5;
      unint64_t v11 = __clz(__rbit64(v5)) | (v4 << 6);
      uint64_t v12 = v4;
      goto LABEL_29;
    }
    int64_t v13 = v4 + 1;
    if (__OFADD__(v4, 1)) {
      break;
    }
    if (v13 >= v9) {
      return sub_1C1F495B8();
    }
    unint64_t v14 = *(void *)(v17 + 8 * v13);
    uint64_t v12 = v4 + 1;
    if (!v14)
    {
      uint64_t v12 = v4 + 2;
      if (v4 + 2 >= v9) {
        return sub_1C1F495B8();
      }
      unint64_t v14 = *(void *)(v17 + 8 * v12);
      if (!v14)
      {
        uint64_t v12 = v4 + 3;
        if (v4 + 3 >= v9) {
          return sub_1C1F495B8();
        }
        unint64_t v14 = *(void *)(v17 + 8 * v12);
        if (!v14)
        {
          uint64_t v12 = v4 + 4;
          if (v4 + 4 >= v9) {
            return sub_1C1F495B8();
          }
          unint64_t v14 = *(void *)(v17 + 8 * v12);
          if (!v14)
          {
            uint64_t v12 = v4 + 5;
            if (v4 + 5 >= v9) {
              return sub_1C1F495B8();
            }
            unint64_t v14 = *(void *)(v17 + 8 * v12);
            if (!v14)
            {
              uint64_t v15 = v4 + 6;
              while (v9 != v15)
              {
                unint64_t v14 = *(void *)(v17 + 8 * v15++);
                if (v14)
                {
                  uint64_t v12 = v15 - 1;
                  goto LABEL_28;
                }
              }
              return sub_1C1F495B8();
            }
          }
        }
      }
    }
LABEL_28:
    uint64_t v10 = (v14 - 1) & v14;
    unint64_t v11 = __clz(__rbit64(v14)) + (v12 << 6);
LABEL_29:
    uint64_t v16 = *(void *)(*(void *)(v1 + 48) + 8 * v11);
    swift_retain();
    if (!v16) {
      return sub_1C1F495B8();
    }
    while (1)
    {
      sub_1C2149E30();
      uint64_t result = swift_release();
      uint64_t v4 = v12;
      unint64_t v5 = v10;
      if ((v1 & 0x8000000000000000) == 0) {
        break;
      }
LABEL_10:
      if (sub_1C214B700())
      {
        sub_1C2149E40();
        swift_unknownObjectRetain();
        swift_dynamicCast();
        swift_unknownObjectRelease();
        uint64_t v12 = v4;
        uint64_t v10 = v5;
        if (v23) {
          continue;
        }
      }
      return sub_1C1F495B8();
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1C20539DC()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1C2149F80();
  swift_release();
  swift_release();
  return v1;
}

uint64_t InteractionCriticalAlertDataSource.__allocating_init(listManager:healthStore:viewController:analyticsManager:)(uint64_t a1, void *a2, void *a3, uint64_t a4)
{
  return InteractionCriticalAlertDataSource.init(listManager:healthStore:viewController:analyticsManager:)(a1, a2, a3, a4);
}

uint64_t InteractionCriticalAlertDataSource.init(listManager:healthStore:viewController:analyticsManager:)(uint64_t a1, void *a2, void *a3, uint64_t a4)
{
  uint64_t v22 = a4;
  sub_1C2059984(0, &qword_1EBF0C748, MEMORY[0x1E4F1AC70]);
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v21 - v11;
  swift_unknownObjectWeakInit();
  uint64_t v13 = v4 + qword_1EBF0C5B0;
  aBlock[0] = MEMORY[0x1E4FBC860];
  sub_1C1F30D40(0, &qword_1EBF0C7A0, &qword_1EBF0C8D0);
  swift_retain();
  sub_1C2149F40();
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v13, v12, v9);
  *(void *)(v4 + qword_1EBF0C5E0) = 0;
  *(void *)(v4 + qword_1EA2C5F50) = 0;
  *(void *)(v4 + qword_1EBF0C5D8) = 0;
  *(void *)(v4 + qword_1EA2C5F58) = 0;
  *(void *)(v4 + qword_1EBF0C5C8) = MEMORY[0x1E4FBC870];
  *(void *)(v4 + qword_1EBF0C5C0) = a1;
  *(void *)(v4 + qword_1EBF0C5B8) = a2;
  swift_unknownObjectWeakAssign();
  *(void *)(v4 + qword_1EA2C5F60) = v22;
  swift_retain();
  id v14 = a2;
  swift_retain();
  swift_release();
  uint64_t v15 = sub_1C2147F50();
  swift_retain();
  id v16 = sub_1C20541C4();
  uint64_t v17 = swift_allocObject();
  swift_weakInit();
  aBlock[4] = sub_1C2054D78;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C2054E74;
  void aBlock[3] = &block_descriptor_20;
  uint64_t v18 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(v16, sel_allDismissedDrugInteractionsWithCompletion_, v18);
  _Block_release(v18);

  sub_1C2054F18();
  sub_1C2147F40();
  sub_1C21482F0();
  swift_release();
  uint64_t v19 = (void *)sub_1C2148580();
  swift_release();
  objc_msgSend(v19, sel_registerObserver_, v15);
  swift_release();
  swift_release();

  swift_release();
  return v15;
}

uint64_t sub_1C2053E00()
{
  swift_unknownObjectWeakDestroy();
  swift_release();
  uint64_t v1 = v0 + qword_1EBF0C5B0;
  sub_1C2059984(0, &qword_1EBF0C748, MEMORY[0x1E4F1AC70]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();

  swift_release();
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t InteractionCriticalAlertDataSource.deinit()
{
  swift_beginAccess();
  uint64_t v0 = swift_bridgeObjectRetain();
  sub_1C2053720(v0);
  swift_bridgeObjectRelease();
  uint64_t v1 = _s19HealthMedicationsUI34InteractionSeperatorLineDataSourceCfd_0();
  swift_unknownObjectWeakDestroy();
  swift_release();
  uint64_t v2 = v1 + qword_1EBF0C5B0;
  sub_1C2059984(0, &qword_1EBF0C748, MEMORY[0x1E4F1AC70]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  swift_release();

  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t InteractionCriticalAlertDataSource.__deallocating_deinit()
{
  InteractionCriticalAlertDataSource.deinit();

  return swift_deallocClassInstance();
}

uint64_t sub_1C20540CC()
{
  uint64_t v0 = sub_1C2148710();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2148690();
  id v4 = objc_msgSend(self, sel_systemBackgroundColor);
  sub_1C21486A0();
  uint64_t v5 = sub_1C2148700();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v5;
}

id sub_1C20541C4()
{
  return sub_1C2054224(&qword_1EBF0C5E0, (Class *)0x1E4F66AE8);
}

uint64_t sub_1C20541D8()
{
  swift_weakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

id sub_1C2054210()
{
  return sub_1C2054224(&qword_1EBF0C5D8, (Class *)0x1E4F66AC0);
}

id sub_1C2054224(uint64_t *a1, Class *a2)
{
  uint64_t v3 = *a1;
  id v4 = *(void **)(v2 + *a1);
  if (v4)
  {
    id v5 = *(id *)(v2 + *a1);
  }
  else
  {
    id v6 = objc_msgSend(objc_allocWithZone(*a2), sel_initWithHealthStore_, *(void *)(v2 + qword_1EBF0C5B8));
    uint64_t v7 = *(void **)(v2 + v3);
    *(void *)(v2 + v3) = v6;
    id v5 = v6;

    id v4 = 0;
  }
  id v8 = v4;
  return v5;
}

void *sub_1C20542A0()
{
  uint64_t v1 = qword_1EA2C5F58;
  if (*(void *)(v0 + qword_1EA2C5F58))
  {
    uint64_t v2 = *(void **)(v0 + qword_1EA2C5F58);
  }
  else
  {
    uint64_t v3 = v0;
    id v4 = *(void **)(v0 + qword_1EBF0C5B8);
    sub_1C2148E10();
    id v5 = v4;
    sub_1C2148E00();
    sub_1C2148DB0();
    swift_release();
    sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C7C8);
    sub_1C214AC00();
    sub_1C2148D70();
    swift_allocObject();
    uint64_t v6 = sub_1C2148C90();
    type metadata accessor for MedicationsInteractionEngine();
    swift_allocObject();
    uint64_t v2 = sub_1C1F34F68(v5, v6);

    swift_release();
    *(void *)(v3 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

uint64_t sub_1C20543C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  id v8 = (void *)swift_allocObject();
  v8[2] = a1;
  v8[3] = a2;
  v8[4] = a3;
  sub_1C2059F24(0, &qword_1EBF0C6F8, (uint64_t (*)(uint64_t))sub_1C20359B8, MEMORY[0x1E4F1AC28]);
  swift_allocObject();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1C2149F10();
  sub_1C2059FB0();
  uint64_t v9 = sub_1C2149FC0();
  uint64_t result = swift_release();
  *a4 = v9;
  return result;
}

void sub_1C20544E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a1;
  *(void *)(v8 + 24) = a2;
  swift_retain();
  id v9 = sub_1C2054210();
  unint64_t v10 = swift_bridgeObjectRetain();
  sub_1C203771C(v10);
  swift_bridgeObjectRelease();
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8C0);
  sub_1C1F2F9D0((unint64_t *)&qword_1EBF0C8C8, (unint64_t *)&qword_1EBF0C8C0);
  uint64_t v11 = (void *)sub_1C214AA50();
  swift_bridgeObjectRelease();
  if (a5)
  {
    sub_1C1F12718(0, &qword_1EBF0C908);
    sub_1C1F2F9D0((unint64_t *)&qword_1EBF0C910, &qword_1EBF0C908);
    a5 = (void *)sub_1C214AA50();
  }
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = sub_1C205A038;
  *(void *)(v12 + 24) = v8;
  void v14[4] = sub_1C205A044;
  v14[5] = v12;
  v14[0] = MEMORY[0x1E4F143A8];
  v14[1] = 1107296256;
  void v14[2] = sub_1C2032288;
  void v14[3] = &block_descriptor_45_0;
  uint64_t v13 = _Block_copy(v14);
  swift_release();
  objc_msgSend(v9, sel_interactionResultsForMedications_lifestyleFactors_completion_, v11, a5, v13);
  _Block_release(v13);
}

void sub_1C2054708(uint64_t a1, id a2, void (*a3)(id, uint64_t))
{
  if (a2)
  {
    id v5 = a2;
    a3(a2, 1);
  }
  else
  {
    if (a1)
    {
      uint64_t v6 = swift_bridgeObjectRetain();
      uint64_t v7 = sub_1C1F7F9B8(v6);
      swift_bridgeObjectRelease();
      a3((id)v7, 0);
    }
    else
    {
      uint64_t v8 = (void *)MEMORY[0x1E4FBC860];
      if ((MEMORY[0x1E4FBC860] & 0xC000000000000000) != 0) {
        uint64_t v8 = sub_1C1F7F9D4(MEMORY[0x1E4FBC860]);
      }
      a3(v8, 0);
    }
    swift_release();
  }
}

uint64_t sub_1C20547F8()
{
  sub_1C1FF8494();
  uint64_t result = sub_1C2149C00();
  if (result >= 1) {
    return sub_1C2149550();
  }
  return result;
}

uint64_t sub_1C2054848()
{
  sub_1C1FF8494();
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  id v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2149C20();
  swift_retain();
  if (sub_1C2149C00() >= 1) {
    sub_1C2149550();
  }
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

uint64_t sub_1C2054970(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C214A3F0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1C214A420();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v13 = result;
    uint64_t v18 = v8;
    if (a2)
    {
      sub_1C1F12718(0, (unint64_t *)&qword_1EBF0CB10);
      id v14 = (void *)sub_1C214AD80();
      uint64_t v23 = sub_1C205A04C;
      uint64_t v24 = v13;
      uint64_t aBlock = MEMORY[0x1E4F143A8];
      uint64_t v20 = 1107296256;
      uint64_t v15 = &block_descriptor_57;
    }
    else
    {
      sub_1C1F12718(0, (unint64_t *)&qword_1EBF0CB10);
      if (a1)
      {
        swift_bridgeObjectRetain();
        id v14 = (void *)sub_1C214AD80();
        uint64_t v16 = swift_allocObject();
        *(void *)(v16 + 16) = v13;
        *(void *)(v16 + 24) = a1;
        uint64_t v23 = sub_1C205A17C;
        uint64_t v24 = v16;
        uint64_t aBlock = MEMORY[0x1E4F143A8];
        uint64_t v20 = 1107296256;
        uint64_t v15 = &block_descriptor_54;
      }
      else
      {
        id v14 = (void *)sub_1C214AD80();
        uint64_t v23 = sub_1C205A04C;
        uint64_t v24 = v13;
        uint64_t aBlock = MEMORY[0x1E4F143A8];
        uint64_t v20 = 1107296256;
        uint64_t v15 = &block_descriptor_48;
      }
    }
    uint64_t v21 = sub_1C1F0E42C;
    uint64_t v22 = v15;
    uint64_t v17 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    sub_1C214A410();
    uint64_t aBlock = MEMORY[0x1E4FBC860];
    sub_1C205A068((unint64_t *)&qword_1EBF0CAE0, MEMORY[0x1E4FBCB00]);
    sub_1C205A0B0(0, (unint64_t *)&qword_1EBF0CAF0, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
    sub_1C1F12754();
    sub_1C214B640();
    MEMORY[0x1C8752F10](0, v11, v7, v17);
    _Block_release(v17);
    swift_release();

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v18);
  }
  return result;
}

uint64_t sub_1C2054D78(uint64_t a1, uint64_t a2)
{
  return sub_1C2054970(a1, a2);
}

uint64_t sub_1C2054D80()
{
  return sub_1C2149F90();
}

uint64_t sub_1C2054DF8()
{
  return sub_1C2149F90();
}

uint64_t sub_1C2054E74(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = a2;
  uint64_t v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2)
  {
    sub_1C1F12718(0, &qword_1EBF0C8D0);
    uint64_t v4 = sub_1C214A780();
  }
  swift_retain();
  id v6 = a3;
  v5(v4, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1C2054F18()
{
  sub_1C205A0B0(0, &qword_1EBF0C7E8, MEMORY[0x1E4FBCC28], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v88 = (char *)&v59 - v2;
  sub_1C2059984(0, &qword_1EBF0C728, MEMORY[0x1E4F1AC60]);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v86 = v3;
  uint64_t v87 = v4;
  MEMORY[0x1F4188790](v3);
  uint64_t v83 = (char *)&v59 - v5;
  sub_1C2006250();
  uint64_t v61 = v6;
  uint64_t v62 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2035764();
  uint64_t v65 = v9;
  uint64_t v67 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C20358AC();
  uint64_t v68 = v12;
  uint64_t v71 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v63 = (char *)&v59 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2035B38();
  uint64_t v15 = v14;
  uint64_t v69 = *(void *)(v14 - 8);
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  uint64_t v18 = (char *)&v59 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v66 = (char *)&v59 - v19;
  sub_1C2059594(0, &qword_1EA2C5F80, (void (*)(uint64_t))sub_1C2035B38, (void (*)(void))sub_1C2059604);
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v74 = v20;
  uint64_t v75 = v21;
  MEMORY[0x1F4188790](v20);
  uint64_t v64 = (char *)&v59 - v22;
  sub_1C2059638();
  uint64_t v76 = v23;
  uint64_t v79 = *(void *)(v23 - 8);
  MEMORY[0x1F4188790](v23);
  id v70 = (char *)&v59 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C205980C();
  uint64_t v78 = v25;
  uint64_t v80 = *(void *)(v25 - 8);
  MEMORY[0x1F4188790](v25);
  uint64_t v73 = (char *)&v59 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2059594(0, &qword_1EA2C5FC0, (void (*)(uint64_t))sub_1C205980C, (void (*)(void))sub_1C2059BE8);
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t v81 = v27;
  uint64_t v82 = v28;
  MEMORY[0x1F4188790](v27);
  uint64_t v72 = (char *)&v59 - v29;
  sub_1C2059C1C();
  uint64_t v31 = *(void *)(v30 - 8);
  uint64_t v84 = v30;
  uint64_t v85 = v31;
  MEMORY[0x1F4188790](v30);
  id v77 = (char *)&v59 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v89 = (id)sub_1C2149730();
  uint64_t v33 = (void (*)(uint64_t))MEMORY[0x1E4F677F0];
  sub_1C200646C(0, (unint64_t *)&qword_1EBF0C690, MEMORY[0x1E4F677F0]);
  sub_1C1F30D40(0, (unint64_t *)&qword_1EBF0C790, (unint64_t *)&qword_1EBF0C8C0);
  sub_1C203585C((unint64_t *)&qword_1EBF0C688, (unint64_t *)&qword_1EBF0C690, v33);
  sub_1C2149FD0();
  swift_release();
  uint64_t v60 = v0;
  uint64_t v34 = (void *)sub_1C20542A0()[5];
  swift_retain();
  swift_release();
  id v89 = v34;
  sub_1C200646C(0, &qword_1EA2C5208, (void (*)(uint64_t))sub_1C1F35D28);
  sub_1C205A068(&qword_1EBF0C638, (void (*)(uint64_t))sub_1C2006250);
  sub_1C203585C(&qword_1EA2C5210, &qword_1EA2C5208, (void (*)(uint64_t))sub_1C1F35D28);
  uint64_t v35 = v61;
  sub_1C214A010();
  swift_release();
  (*(void (**)(char *, uint64_t))(v62 + 8))(v8, v35);
  uint64_t v36 = swift_allocObject();
  swift_weakInit();
  uint64_t v37 = swift_allocObject();
  *(void *)(v37 + 16) = sub_1C2059DA4;
  *(void *)(v37 + 24) = v36;
  sub_1C2149E00();
  uint64_t v38 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))MEMORY[0x1E4F1AAE0];
  sub_1C2059F24(0, &qword_1EBF0C6B0, (uint64_t (*)(uint64_t))sub_1C20359B8, MEMORY[0x1E4F1AAE0]);
  sub_1C20594D8();
  sub_1C205950C();
  uint64_t v39 = v63;
  uint64_t v40 = v65;
  sub_1C214A120();
  swift_release();
  (*(void (**)(char *, uint64_t))(v67 + 8))(v11, v40);
  sub_1C1F30D40(0, &qword_1EBF0C778, (unint64_t *)&qword_1EBF0C8A8);
  sub_1C205A068(&qword_1EA2C59F0, (void (*)(uint64_t))sub_1C20358AC);
  uint64_t v41 = v68;
  sub_1C2149FD0();
  (*(void (**)(char *, uint64_t))(v71 + 8))(v39, v41);
  unint64_t v42 = v66;
  sub_1C2149CF0();
  uint64_t v43 = *(void (**)(char *, uint64_t))(v69 + 8);
  v43(v18, v15);
  id v89 = (id)MEMORY[0x1E4FBC860];
  sub_1C2059604();
  uint64_t v44 = v64;
  sub_1C2149FE0();
  v43(v42, v15);
  swift_beginAccess();
  sub_1C2059984(0, &qword_1EBF0C748, MEMORY[0x1E4F1AC70]);
  uint64_t v45 = v83;
  sub_1C2149F50();
  swift_endAccess();
  sub_1C2059710();
  sub_1C2059798();
  uint64_t v46 = v70;
  uint64_t v47 = v74;
  uint64_t v48 = v86;
  sub_1C214A010();
  (*(void (**)(char *, uint64_t))(v87 + 8))(v45, v48);
  (*(void (**)(char *, uint64_t))(v75 + 8))(v44, v47);
  sub_1C2149E00();
  sub_1C2059F24(0, &qword_1EBF0C6A0, (uint64_t (*)(uint64_t))sub_1C20598F8, v38);
  sub_1C2059AA4();
  sub_1C2059AD8();
  uint64_t v49 = v73;
  uint64_t v50 = v76;
  sub_1C214A120();
  (*(void (**)(char *, uint64_t))(v79 + 8))(v46, v50);
  sub_1C2059BE8();
  id v89 = 0;
  uint64_t v90 = 0;
  uint64_t v51 = v72;
  uint64_t v52 = v78;
  sub_1C2149FE0();
  (*(void (**)(char *, uint64_t))(v80 + 8))(v49, v52);
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0CB10);
  id v89 = (id)sub_1C214AD80();
  uint64_t v53 = sub_1C214AD20();
  uint64_t v54 = (uint64_t)v88;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v53 - 8) + 56))(v88, 1, 1, v53);
  sub_1C2059D1C();
  sub_1C1F2F9D0((unint64_t *)&qword_1EBF0C7F0, (unint64_t *)&qword_1EBF0CB10);
  uint64_t v55 = v77;
  uint64_t v56 = v81;
  sub_1C214A0A0();
  sub_1C1F441C8(v54);

  (*(void (**)(char *, uint64_t))(v82 + 8))(v51, v56);
  swift_allocObject();
  swift_weakInit();
  sub_1C205A068(&qword_1EA2C5FE0, (void (*)(uint64_t))sub_1C2059C1C);
  uint64_t v57 = v84;
  sub_1C214A0F0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v85 + 8))(v55, v57);
  swift_beginAccess();
  sub_1C2149E20();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1C2055CE8(unint64_t a1, uint64_t a2)
{
  sub_1C205A0B0(0, &qword_1EBF0C6D0, (uint64_t (*)(uint64_t))sub_1C20359B8, MEMORY[0x1E4F1AC08]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v29 - v7;
  sub_1C2059F24(0, (unint64_t *)&unk_1EBF0C9E0, (uint64_t (*)(uint64_t))sub_1C20359B8, MEMORY[0x1E4F1ACE0]);
  uint64_t v10 = v9;
  uint64_t v11 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v29 - v12;
  sub_1C2037504();
  uint64_t v31 = *(void *)(v14 - 8);
  uint64_t v32 = v14;
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    uint64_t v33 = 0;
    sub_1C20359B8();
    sub_1C2149EE0();
    sub_1C1F23804(0, (unint64_t *)&qword_1EBF0C9C0);
    sub_1C2149EC0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    sub_1C2059E8C();
    uint64_t v26 = sub_1C2149FC0();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    return v26;
  }
  uint64_t v18 = Strong;
  uint64_t v33 = MEMORY[0x1E4FBC860];
  if (!(a1 >> 62))
  {
    uint64_t v19 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v19) {
      goto LABEL_4;
    }
LABEL_16:
    swift_bridgeObjectRelease();
    uint64_t v25 = MEMORY[0x1E4FBC860];
LABEL_17:
    uint64_t v27 = (void *)swift_allocObject();
    void v27[2] = v18;
    void v27[3] = v25;
    v27[4] = a2;
    sub_1C2059F24(0, &qword_1EBF0C6B0, (uint64_t (*)(uint64_t))sub_1C20359B8, MEMORY[0x1E4F1AAE0]);
    sub_1C205950C();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1C2149F20();
    sub_1C205A068(&qword_1EBF0C710, (void (*)(uint64_t))sub_1C2037504);
    uint64_t v28 = v32;
    uint64_t v26 = sub_1C2149FC0();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v16, v28);
    swift_release();
    swift_release();
    return v26;
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_1C214B930();
  uint64_t v19 = result;
  if (!result) {
    goto LABEL_16;
  }
LABEL_4:
  if (v19 >= 1)
  {
    uint64_t v30 = a2;
    for (uint64_t i = 0; i != v19; ++i)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v22 = (id)MEMORY[0x1C8753960](i, a1);
      }
      else {
        id v22 = *(id *)(a1 + 8 * i + 32);
      }
      uint64_t v23 = v22;
      id v24 = objc_msgSend(v22, sel_firstOntologyCoding);

      if (v24)
      {
        sub_1C214B820();
        sub_1C214B860();
        sub_1C214B870();
        sub_1C214B830();
      }
      else
      {
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v25 = v33;
    a2 = v30;
    goto LABEL_17;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C20561DC@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v3 = *a1;
  uint64_t v43 = MEMORY[0x1E4FBC860];
  if (v3 >> 62) {
    goto LABEL_41;
  }
  uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v4; uint64_t v4 = sub_1C214B930())
  {
    uint64_t v34 = a2;
    unint64_t v5 = 0;
    uint64_t v6 = 0;
    unint64_t v39 = v3 & 0xC000000000000001;
    uint64_t v36 = (char *)(v3 + 32);
    uint64_t v37 = v3 & 0xFFFFFFFFFFFFFF8;
    unint64_t v7 = 0x1F8902000uLL;
    uint64_t v35 = v4;
    while (v39)
    {
      id v8 = (id)MEMORY[0x1C8753960](v5, v3);
      BOOL v9 = __OFADD__(v5++, 1);
      if (v9) {
        goto LABEL_39;
      }
LABEL_11:
      unint64_t v10 = v7;
      uint64_t v11 = v4;
      unint64_t v12 = v3;
      uint64_t v40 = v8;
      id v13 = objc_msgSend(v8, sel_interactions, v34);
      sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C880);
      sub_1C1F2F9D0((unint64_t *)&unk_1EBF0C888, (unint64_t *)&qword_1EBF0C880);
      uint64_t v14 = sub_1C214AA60();

      if ((v14 & 0xC000000000000001) != 0)
      {
        uint64_t v15 = MEMORY[0x1E4FBC870];
        uint64_t v42 = MEMORY[0x1E4FBC870];
        sub_1C214B680();
        if (sub_1C214B700())
        {
          uint64_t v38 = v6;
          unint64_t v16 = v12;
          unint64_t v7 = v10;
          do
          {
            swift_dynamicCast();
            id v17 = objc_msgSend(v41, sel_severity);
            id v18 = [v17 (SEL)(v10 + 3768)];

            unint64_t v3 = (unint64_t)v41;
            if (v18 == (id)1)
            {
              uint64_t v19 = v42;
              unint64_t v20 = *(void *)(v42 + 16);
              if (*(void *)(v42 + 24) <= v20)
              {
                sub_1C208F2D4(v20 + 1);
                uint64_t v19 = v42;
              }
              a2 = (uint64_t)v41;
              uint64_t v21 = sub_1C214B210();
              uint64_t v22 = v19 + 56;
              uint64_t v23 = -1 << *(unsigned char *)(v19 + 32);
              unint64_t v24 = v21 & ~v23;
              unint64_t v25 = v24 >> 6;
              if (((-1 << v24) & ~*(void *)(v19 + 56 + 8 * (v24 >> 6))) != 0)
              {
                unint64_t v26 = __clz(__rbit64((-1 << v24) & ~*(void *)(v19 + 56 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
              }
              else
              {
                char v27 = 0;
                unint64_t v28 = (unint64_t)(63 - v23) >> 6;
                do
                {
                  if (++v25 == v28 && (v27 & 1) != 0)
                  {
                    __break(1u);
                    goto LABEL_39;
                  }
                  BOOL v29 = v25 == v28;
                  if (v25 == v28) {
                    unint64_t v25 = 0;
                  }
                  v27 |= v29;
                  uint64_t v30 = *(void *)(v22 + 8 * v25);
                }
                while (v30 == -1);
                unint64_t v26 = __clz(__rbit64(~v30)) + (v25 << 6);
              }
              *(void *)(v22 + ((v26 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v26;
              *(void *)(*(void *)(v19 + 48) + 8 * v26) = v41;
              ++*(void *)(v19 + 16);
            }
            else
            {
            }
          }
          while (sub_1C214B700());
          a2 = v42;
          unint64_t v3 = v16;
          uint64_t v4 = v35;
          uint64_t v6 = v38;
        }
        else
        {
          a2 = v15;
          unint64_t v3 = v12;
          uint64_t v4 = v11;
          unint64_t v7 = v10;
        }
        swift_release();
        if ((a2 & 0xC000000000000001) != 0)
        {
LABEL_35:
          uint64_t v31 = sub_1C214B6D0();
          goto LABEL_36;
        }
      }
      else
      {
        a2 = sub_1C2058588(v14);
        uint64_t v4 = v11;
        unint64_t v7 = v10;
        if ((a2 & 0xC000000000000001) != 0) {
          goto LABEL_35;
        }
      }
      uint64_t v31 = *(void *)(a2 + 16);
LABEL_36:
      swift_release();
      if (v31)
      {
        sub_1C214B820();
        sub_1C214B860();
        sub_1C214B870();
        a2 = (uint64_t)&v43;
        sub_1C214B830();
        if (v5 == v4) {
          goto LABEL_38;
        }
      }
      else
      {

        if (v5 == v4)
        {
LABEL_38:
          uint64_t result = swift_bridgeObjectRelease();
          uint64_t v33 = v43;
          a2 = v34;
          goto LABEL_43;
        }
      }
    }
    if (v5 >= *(void *)(v37 + 16)) {
      goto LABEL_40;
    }
    id v8 = *(id *)&v36[8 * v5];
    BOOL v9 = __OFADD__(v5++, 1);
    if (!v9) {
      goto LABEL_11;
    }
LABEL_39:
    __break(1u);
LABEL_40:
    __break(1u);
LABEL_41:
    swift_bridgeObjectRetain();
  }
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v33 = MEMORY[0x1E4FBC860];
LABEL_43:
  *(void *)a2 = v33;
  return result;
}

uint64_t sub_1C2056608@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1C205A0B0(0, &qword_1EBF0C6D8, (uint64_t (*)(uint64_t))sub_1C20598F8, MEMORY[0x1E4F1AC08]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  id v8 = (char *)v18 - v7;
  sub_1C2059F24(0, &qword_1EBF0C9D8, (uint64_t (*)(uint64_t))sub_1C20598F8, MEMORY[0x1E4F1ACE0]);
  uint64_t v10 = v9;
  uint64_t v11 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  id v13 = (char *)v18 - v12;
  uint64_t v15 = *a1;
  uint64_t v14 = a1[1];
  v18[0] = v15;
  v18[1] = v14;
  sub_1C20598F8();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C2149EE0();
  sub_1C1F23804(0, (unint64_t *)&qword_1EBF0C9C0);
  sub_1C2149EC0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  sub_1C2059DF4();
  uint64_t v16 = sub_1C2149FC0();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  *a2 = v16;
  return result;
}

uint64_t sub_1C205684C(unint64_t *a1)
{
  uint64_t v31 = sub_1C2147B20();
  uint64_t v2 = *(void *)(v31 - 8);
  MEMORY[0x1F4188790](v31);
  uint64_t v4 = (char *)v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_1C2148540();
  uint64_t v5 = *(void *)(v30 - 8);
  MEMORY[0x1F4188790](v30);
  uint64_t v7 = (char *)v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v8 = *a1;
  unint64_t v9 = a1[1];
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v11 = result;
    unint64_t v12 = sub_1C2149710();
    uint64_t v13 = sub_1C1F6501C(v12);
    swift_bridgeObjectRelease();
    uint64_t v14 = MEMORY[0x1E4FBC860];
    if (v13) {
      uint64_t v15 = (void *)v13;
    }
    else {
      uint64_t v15 = (void *)MEMORY[0x1E4FBC860];
    }
    unint64_t v16 = sub_1C2056CA8(v8, v9, v15);
    swift_bridgeObjectRelease();
    unint64_t v29 = v16;
    if (v16 >> 62)
    {
      swift_bridgeObjectRetain();
      unint64_t v16 = v29;
      uint64_t v17 = sub_1C214B930();
      swift_bridgeObjectRelease();
      if (v17) {
        goto LABEL_7;
      }
    }
    else
    {
      uint64_t v17 = *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v17)
      {
LABEL_7:
        uint64_t v32 = v14;
        uint64_t result = sub_1C1F7098C(0, v17 & ~(v17 >> 63), 0);
        if (v17 < 0)
        {
          __break(1u);
          return result;
        }
        v25[1] = v11;
        uint64_t v18 = 0;
        unint64_t v27 = v16 & 0xC000000000000001;
        uint64_t v28 = v17;
        uint64_t v19 = (void (**)(char *, uint64_t))(v2 + 8);
        long long v26 = xmmword_1C214FCD0;
        do
        {
          if (v27)
          {
            uint64_t v20 = MEMORY[0x1C8753960](v18, v16);
          }
          else
          {
            uint64_t v20 = *(void *)(v16 + 8 * v18 + 32);
            swift_retain();
          }
          sub_1C1FF344C();
          uint64_t v21 = swift_allocObject();
          *(_OWORD *)(v21 + 16) = v26;
          *(void *)(v21 + 56) = type metadata accessor for InteractionCriticalAlertItem();
          *(void *)(v21 + 64) = sub_1C205A068(&qword_1EA2C5FE8, (void (*)(uint64_t))type metadata accessor for InteractionCriticalAlertItem);
          *(void *)(v21 + 32) = v20;
          swift_retain();
          sub_1C2147B10();
          sub_1C2147AD0();
          (*v19)(v4, v31);
          sub_1C2148520();
          swift_release();
          uint64_t v22 = v32;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1C1F7098C(0, *(void *)(v22 + 16) + 1, 1);
            uint64_t v22 = v32;
          }
          unint64_t v24 = *(void *)(v22 + 16);
          unint64_t v23 = *(void *)(v22 + 24);
          if (v24 >= v23 >> 1)
          {
            sub_1C1F7098C(v23 > 1, v24 + 1, 1);
            uint64_t v22 = v32;
          }
          ++v18;
          *(void *)(v22 + 16) = v24 + 1;
          (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v22+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(void *)(v5 + 72) * v24, v7, v30);
          uint64_t v32 = v22;
          unint64_t v16 = v29;
        }
        while (v28 != v18);
      }
    }
    swift_bridgeObjectRelease();
    swift_retain();
    sub_1C2147F40();
    swift_release();
    sub_1C21482F0();
    swift_release();
    sub_1C21485B0();
    swift_release();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

uint64_t sub_1C2056CA8(unint64_t a1, unint64_t a2, void *a3)
{
  uint64_t v4 = v3;
  uint64_t result = MEMORY[0x1E4FBC860];
  uint64_t v37 = MEMORY[0x1E4FBC860];
  if (a1)
  {
    if (a1 >> 62) {
      goto LABEL_35;
    }
    uint64_t v7 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    for (; v7; uint64_t v7 = sub_1C214B930())
    {
      uint64_t v8 = 0;
      unint64_t v31 = a1 & 0xC000000000000001;
      unint64_t v28 = a1 + 32;
      unint64_t v29 = a1;
      uint64_t v27 = v4;
      uint64_t v30 = v7;
      while (v31)
      {
        id v9 = (id)MEMORY[0x1C8753960](v8, v29);
        BOOL v10 = __OFADD__(v8++, 1);
        if (v10) {
          goto LABEL_34;
        }
LABEL_12:
        uint64_t v34 = v9;
        id v11 = objc_msgSend(v9, sel_interactions);
        sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C880);
        sub_1C1F2F9D0((unint64_t *)&unk_1EBF0C888, (unint64_t *)&qword_1EBF0C880);
        uint64_t v12 = sub_1C214AA60();

        if ((v12 & 0xC000000000000001) != 0)
        {
          unint64_t v13 = MEMORY[0x1E4FBC870];
          unint64_t v36 = MEMORY[0x1E4FBC870];
          sub_1C214B680();
          if (sub_1C214B700())
          {
            do
            {
              swift_dynamicCast();
              id v14 = objc_msgSend(v35, sel_severity);
              id v15 = objc_msgSend(v14, sel_severityLevel);

              if (v15 == (id)1)
              {
                uint64_t v4 = v36;
                unint64_t v16 = *(void *)(v36 + 16);
                if (*(void *)(v36 + 24) <= v16)
                {
                  sub_1C208F2D4(v16 + 1);
                  uint64_t v4 = v36;
                }
                a1 = (unint64_t)v35;
                uint64_t v17 = sub_1C214B210();
                uint64_t v18 = v4 + 56;
                uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
                unint64_t v20 = v17 & ~v19;
                unint64_t v21 = v20 >> 6;
                if (((-1 << v20) & ~*(void *)(v4 + 56 + 8 * (v20 >> 6))) != 0)
                {
                  unint64_t v22 = __clz(__rbit64((-1 << v20) & ~*(void *)(v4 + 56 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
                }
                else
                {
                  char v23 = 0;
                  unint64_t v24 = (unint64_t)(63 - v19) >> 6;
                  do
                  {
                    if (++v21 == v24 && (v23 & 1) != 0)
                    {
                      __break(1u);
                      goto LABEL_34;
                    }
                    BOOL v25 = v21 == v24;
                    if (v21 == v24) {
                      unint64_t v21 = 0;
                    }
                    v23 |= v25;
                    uint64_t v26 = *(void *)(v18 + 8 * v21);
                  }
                  while (v26 == -1);
                  unint64_t v22 = __clz(__rbit64(~v26)) + (v21 << 6);
                }
                *(void *)(v18 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
                *(void *)(*(void *)(v4 + 48) + 8 * v22) = v35;
                ++*(void *)(v4 + 16);
              }
              else
              {
              }
            }
            while (sub_1C214B700());
            a1 = v36;
            uint64_t v4 = v27;
          }
          else
          {
            a1 = v13;
          }
          swift_release();
        }
        else
        {
          a1 = sub_1C2058588(v12);
        }
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1C2058E54(a1, v4, a2, a3, &v37);

        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v8 == v30)
        {
          swift_bridgeObjectRelease();
          return v37;
        }
      }
      id v9 = *(id *)(v28 + 8 * v8);
      BOOL v10 = __OFADD__(v8++, 1);
      if (!v10) {
        goto LABEL_12;
      }
LABEL_34:
      __break(1u);
LABEL_35:
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease();
    return MEMORY[0x1E4FBC860];
  }
  return result;
}

void sub_1C2057070(void **a1, uint64_t a2, unint64_t a3, void *a4, void *a5)
{
  void (*v66)(void *__return_ptr, uint64_t, uint64_t);
  id v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  id v71;
  long long v72;
  long long v73;
  long long v74;
  long long v75;
  long long v76;
  long long v77;
  uint64_t v78;
  id v79;
  id v80;
  id v81;
  void *v82;
  void *v83;
  uint64_t v84;
  id v85;
  id v86;
  uint64_t v87;
  uint64_t v88;
  void *v89;
  void v90[2];
  void (*v91)(void *__return_ptr, uint64_t, uint64_t);
  uint64_t v92;
  uint64_t v93;
  int *v94;
  uint64_t v95;
  void *v96;
  unint64_t v97;
  uint64_t *v98;
  void *v99;
  uint64_t v100;
  uint64_t *v101;
  _OWORD v102[13];
  id v103;
  uint64_t v104[3];
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  void v109[8];
  void v110[10];
  int *v111;
  void v112[7];
  void v113[8];
  void v114[10];
  void v115[3];
  uint64_t v116;
  _UNKNOWN **v117;
  void v118[3];
  uint64_t v119;
  _UNKNOWN **v120;
  id v121;

  unint64_t v6 = v5;
  unint64_t v96 = a5;
  uint64_t v121 = a4;
  uint64_t v95 = a2;
  uint64_t v94 = (int *)type metadata accessor for InteractionStackedMedmojiDataProvider(0);
  MEMORY[0x1F4188790](v94);
  uint64_t v99 = (void *)((char *)v90 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v100 = type metadata accessor for DrugInteractionVisualizationConfig(0);
  uint64_t v10 = MEMORY[0x1F4188790](v100);
  id v98 = (void *)((char *)v90 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v10);
  uint64_t v101 = (void *)((char *)v90 - v12);
  unint64_t v13 = *a1;
  if (!a3) {
    goto LABEL_20;
  }
  if (a3 >> 62)
  {
LABEL_18:
    swift_bridgeObjectRetain();
    uint64_t v14 = sub_1C214B930();
    if (v14) {
      goto LABEL_4;
    }
    goto LABEL_19;
  }
  uint64_t v14 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v14)
  {
LABEL_19:
    swift_bridgeObjectRelease();
LABEL_20:
    id v21 = v13;
    unint64_t v22 = swift_bridgeObjectRetain();
    unint64_t v23 = sub_1C20365FC(v22, v21, (SEL *)&selRef_firstInteractionClass);
    swift_bridgeObjectRelease();

    id v24 = v21;
    unint64_t v25 = swift_bridgeObjectRetain();
    unint64_t v26 = sub_1C20365FC(v25, v24, (SEL *)&selRef_secondInteractionClass);
    swift_bridgeObjectRelease();
    uint64_t v121 = v24;

    if (v23 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v27 = sub_1C214B930();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v27 = *(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    if (v27)
    {
      if ((v23 & 0xC000000000000001) != 0)
      {
        id v28 = (id)MEMORY[0x1C8753960](0, v23);
      }
      else
      {
        if (!*(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          goto LABEL_52;
        }
        id v28 = *(id *)(v23 + 32);
      }
      uint64_t v29 = (uint64_t)v28;
      swift_bridgeObjectRelease();
      _sSo29HKMedicationUserDomainConceptC19HealthMedicationsUIE7medmoji0eF10Experience29MedicationVisualizationConfigVSgvg_0();
      swift_storeEnumTagMultiPayload();
      long long v111 = (int *)v29;
      uint64_t v30 = sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8C0);
      uint64_t v31 = sub_1C21494A0();
      uint64_t v92 = v32;
      uint64_t v119 = v30;
      unint64_t v120 = &protocol witness table for HKMedicationUserDomainConcept;
    }
    else
    {
      swift_bridgeObjectRelease();
      id v33 = objc_msgSend(v121, sel_firstInteractionClass);
      id v34 = objc_msgSend(v33, sel_ancestorIdentifier);

      id v35 = (id)HKDrugInteractionLifestyleFactorForHKConceptIdentifier();
      unint64_t v36 = v35;
      if (!v35)
      {
        sub_1C1F12718(0, &qword_1EBF0C908);
        unint64_t v36 = (void *)sub_1C214B200();
      }
      id v37 = v35;
      uint64_t v29 = sub_1C214B520();

      *uint64_t v101 = v29;
      swift_storeEnumTagMultiPayload();
      LOBYTE(v111) = 0;
      uint64_t v31 = HKDrugInteractionLifestyleFactor.localizedString(variant:)((uint64_t)&v111, v29);
      uint64_t v92 = v38;
      type metadata accessor for HKDrugInteractionLifestyleFactor(0);
      uint64_t v119 = v39;
      unint64_t v120 = &protocol witness table for HKDrugInteractionLifestyleFactor;
    }
    v118[0] = v29;
    if (v26 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v40 = sub_1C214B930();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v40 = *(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    uint64_t v97 = v6;
    uint64_t v93 = v31;
    if (!v40)
    {
      swift_bridgeObjectRelease();
      id v48 = objc_msgSend(v121, sel_secondInteractionClass);
      id v49 = objc_msgSend(v48, sel_ancestorIdentifier);

      id v50 = (id)HKDrugInteractionLifestyleFactorForHKConceptIdentifier();
      uint64_t v51 = v50;
      if (!v50)
      {
        sub_1C1F12718(0, &qword_1EBF0C908);
        uint64_t v51 = (void *)sub_1C214B200();
      }
      id v52 = v50;
      uint64_t v42 = sub_1C214B520();

      uint64_t v47 = v98;
      *id v98 = v42;
      swift_storeEnumTagMultiPayload();
      LOBYTE(v111) = 0;
      uint64_t v45 = HKDrugInteractionLifestyleFactor.localizedString(variant:)((uint64_t)&v111, v42);
      uint64_t v100 = v53;
      type metadata accessor for HKDrugInteractionLifestyleFactor(0);
      unint64_t v116 = v54;
      uint64_t v117 = &protocol witness table for HKDrugInteractionLifestyleFactor;

      goto LABEL_40;
    }
    if ((v26 & 0xC000000000000001) == 0)
    {
      if (!*(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        return;
      }
      id v41 = *(id *)(v26 + 32);
      goto LABEL_36;
    }
LABEL_52:
    id v41 = (id)MEMORY[0x1C8753960](0, v26);
LABEL_36:
    uint64_t v42 = (uint64_t)v41;
    swift_bridgeObjectRelease();
    uint64_t v43 = v98;
    _sSo29HKMedicationUserDomainConceptC19HealthMedicationsUIE7medmoji0eF10Experience29MedicationVisualizationConfigVSgvg_0();
    swift_storeEnumTagMultiPayload();
    long long v111 = (int *)v42;
    uint64_t v44 = sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8C0);
    uint64_t v45 = sub_1C21494A0();
    uint64_t v100 = v46;
    unint64_t v116 = v44;
    uint64_t v117 = &protocol witness table for HKMedicationUserDomainConcept;
    uint64_t v47 = v43;
LABEL_40:
    v115[0] = v42;
    id v55 = v121;
    id v56 = objc_msgSend(v121, sel_severity);
    id v57 = objc_msgSend(v56, sel_severityLevel);

    uint64_t v58 = (uint64_t)v94;
    uint64_t v59 = v99;
    sub_1C2036B04((uint64_t)v101, (uint64_t)v99 + v94[5], type metadata accessor for DrugInteractionVisualizationConfig);
    sub_1C2036B04((uint64_t)v47, (uint64_t)v59 + *(int *)(v58 + 24), type metadata accessor for DrugInteractionVisualizationConfig);
    *uint64_t v59 = v57;
    uint64_t v105 = v58;
    uint64_t v106 = sub_1C205A068(&qword_1EA2C4B70, (void (*)(uint64_t))type metadata accessor for InteractionStackedMedmojiDataProvider);
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v104);
    sub_1C2036B04((uint64_t)v59, (uint64_t)boxed_opaque_existential_1, type metadata accessor for InteractionStackedMedmojiDataProvider);
    sub_1C1F236D8((uint64_t)v118, (uint64_t)v109);
    sub_1C1F236D8((uint64_t)v115, (uint64_t)v110);
    uint64_t v103 = v55;
    uint64_t v61 = v92;
    uint64_t v107 = v93;
    uint64_t v108 = v92;
    v109[5] = 0;
    v109[6] = v45;
    uint64_t v62 = v100;
    v109[7] = v100;
    v110[5] = 0;
    v110[6] = 0;
    v110[8] = 0;
    v110[9] = 0;
    v110[7] = 0xE000000000000000;
    if (v45 == v93 && v100 == v92 || (sub_1C214BA80() & 1) == 0)
    {
      sub_1C1F412E4((uint64_t)&v103, (uint64_t)&v111);
      uint64_t v67 = v121;
    }
    else
    {
      uint64_t v100 = v62;
      uint64_t v63 = v105;
      uint64_t v64 = v106;
      uint64_t v65 = __swift_project_boxed_opaque_existential_0(v104, v105);
      uint64_t v66 = *(void (**)(void *__return_ptr, uint64_t, uint64_t))(v64 + 40);
      v90[1] = v65;
      os_log_type_t v91 = v66;
      uint64_t v94 = (int *)v121;
      v91(v112, v63, v64);
      sub_1C1F236D8((uint64_t)v110, (uint64_t)v113);
      sub_1C1F236D8((uint64_t)v109, (uint64_t)v114);
      long long v111 = v94;
      v112[5] = v45;
      v112[6] = v100;
      v113[5] = 0;
      v113[6] = v93;
      v113[7] = v61;
      v114[6] = 0;
      v114[5] = 0;
      v114[9] = 0;
      v114[7] = 0xE000000000000000;
      v114[8] = 0;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_1C2059188((uint64_t)&v103);
    sub_1C1F412E4((uint64_t)&v111, (uint64_t)&v103);
    uint64_t v68 = swift_allocObject();
    uint64_t v69 = v95;
    swift_weakInit();
    sub_1C1F412E4((uint64_t)&v111, (uint64_t)v102);
    id v70 = swift_allocObject();
    uint64_t v100 = v68;
    uint64_t v71 = v121;
    *(void *)(v70 + 16) = v68;
    *(void *)(v70 + 24) = v71;
    uint64_t v72 = v102[11];
    *(_OWORD *)(v70 + 192) = v102[10];
    *(_OWORD *)(v70 + 208) = v72;
    *(_OWORD *)(v70 + 224) = v102[12];
    uint64_t v73 = v102[7];
    *(_OWORD *)(v70 + 128) = v102[6];
    *(_OWORD *)(v70 + 144) = v73;
    uint64_t v74 = v102[9];
    *(_OWORD *)(v70 + 160) = v102[8];
    *(_OWORD *)(v70 + 176) = v74;
    uint64_t v75 = v102[3];
    *(_OWORD *)(v70 + 64) = v102[2];
    *(_OWORD *)(v70 + 80) = v75;
    uint64_t v76 = v102[5];
    *(_OWORD *)(v70 + 96) = v102[4];
    *(_OWORD *)(v70 + 112) = v76;
    id v77 = v102[1];
    *(_OWORD *)(v70 + 32) = v102[0];
    *(_OWORD *)(v70 + 48) = v77;
    uint64_t v78 = swift_allocObject();
    swift_weakInit();
    uint64_t v79 = v71;
    swift_retain();
    uint64_t v80 = sub_1C20541C4();
    uint64_t v121 = *(id *)(v69 + qword_1EA2C5F60);
    uint64_t v81 = v121;
    uint64_t v82 = (void *)swift_allocObject();
    v82[2] = v80;
    v82[3] = v79;
    v82[4] = v78;
    v82[5] = v81;
    type metadata accessor for InteractionCriticalAlertItem();
    uint64_t v83 = (void *)swift_allocObject();
    v83[5] = &type metadata for InteractionResultDetailDataProvider;
    v83[6] = &protocol witness table for InteractionResultDetailDataProvider;
    uint64_t v84 = swift_allocObject();
    v83[2] = v84;
    sub_1C1F412E4((uint64_t)&v103, v84 + 16);
    type metadata accessor for InteractionCriticalAlertCell();
    sub_1C205A068(&qword_1EBF0C540, (void (*)(uint64_t))type metadata accessor for InteractionCriticalAlertCell);
    uint64_t v85 = v79;
    uint64_t v86 = v80;
    swift_retain();
    swift_retain();
    v83[7] = sub_1C21481D0();
    v83[8] = v87;
    v83[9] = sub_1C205926C;
    v83[10] = v70;
    v83[11] = sub_1C20592C8;
    v83[12] = v82;
    sub_1C2059188((uint64_t)&v103);
    swift_release();
    swift_release();

    uint64_t v88 = swift_retain();
    id v89 = v96;
    MEMORY[0x1C87528E0](v88);
    if (*(void *)((*v89 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v89 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C214A7D0();
    }
    sub_1C214A820();
    sub_1C214A7A0();
    swift_release();
    sub_1C2059188((uint64_t)&v111);
    sub_1C2059354((uint64_t)v99, type metadata accessor for InteractionStackedMedmojiDataProvider);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v115);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v118);
    sub_1C2059354((uint64_t)v98, type metadata accessor for DrugInteractionVisualizationConfig);
    sub_1C2059354((uint64_t)v101, type metadata accessor for DrugInteractionVisualizationConfig);
    return;
  }
LABEL_4:
  uint64_t v97 = v6;
  uint64_t v15 = 0;
  int v16 = 0;
  unint64_t v6 = a3 & 0xC000000000000001;
LABEL_5:
  LODWORD(v93) = v16;
  do
  {
    if (v6) {
      id v17 = (id)MEMORY[0x1C8753960](v15, a3);
    }
    else {
      id v17 = *(id *)(a3 + 8 * v15 + 32);
    }
    uint64_t v18 = v17;
    uint64_t v19 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      goto LABEL_18;
    }
    unsigned int v20 = objc_msgSend(v17, sel_isEqualToDrugInteractionResult_, v13);

    if (v20)
    {
      int v16 = 1;
      ++v15;
      if (v19 != v14) {
        goto LABEL_5;
      }
      swift_bridgeObjectRelease();
      return;
    }
    ++v15;
  }
  while (v19 != v14);
  swift_bridgeObjectRelease();
  unint64_t v6 = v97;
  if ((v93 & 1) == 0) {
    goto LABEL_20;
  }
}

uint64_t sub_1C2057BC4(uint64_t a1, void *a2, void *a3)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v6 = result;
    sub_1C1F0ED28();
    uint64_t v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_1C214E170;
    *(void *)(v7 + 32) = a2;
    v31[0] = v7;
    sub_1C214A7A0();
    type metadata accessor for HKDrugInteractionResultCollection();
    uint64_t v8 = swift_allocObject();
    if (v31[0] >> 62)
    {
      id v25 = a2;
      swift_bridgeObjectRetain();
      uint64_t v26 = sub_1C214B930();
      swift_bridgeObjectRelease();
      if (v26) {
        goto LABEL_4;
      }
    }
    else
    {
      uint64_t v9 = *(void *)((v31[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
      id v10 = a2;
      if (v9)
      {
LABEL_4:
        *(void *)(v8 + 16) = v31[0];
        sub_1C1F236D8((uint64_t)(a3 + 1), (uint64_t)v31);
        uint64_t v11 = a3[7];
        uint64_t v28 = a3[6];
        sub_1C1F236D8((uint64_t)(a3 + 8), (uint64_t)v30);
        uint64_t v12 = a3[11];
        uint64_t v13 = a3[12];
        __swift_project_boxed_opaque_existential_0(a3 + 8, v12);
        uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t))(v13 + 48);
        swift_retain();
        swift_bridgeObjectRetain();
        uint64_t v27 = v14(v12, v13);
        uint64_t v15 = a3[14];
        uint64_t v16 = a3[15];
        sub_1C1F236D8((uint64_t)(a3 + 16), (uint64_t)v29);
        uint64_t v18 = a3[19];
        uint64_t v17 = a3[20];
        __swift_project_boxed_opaque_existential_0(a3 + 16, v18);
        uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t))(v17 + 48);
        swift_bridgeObjectRetain();
        uint64_t v20 = v19(v18, v17);
        id v21 = objc_allocWithZone((Class)type metadata accessor for InteractionResultDetailViewController());
        id v22 = sub_1C1F4F79C(v8, (uint64_t)v31, v28, v11, (uint64_t)v30, v27, v15, v16, (uint64_t)v29, v20);
        swift_release();
        objc_msgSend(v22, sel_setModalPresentationStyle_, 2);
        unint64_t v23 = (void *)MEMORY[0x1C8754850](v6 + qword_1EBF0C5D0);
        if (v23)
        {
          id v24 = v23;
          objc_msgSend(v23, sel_showAdaptively_sender_, v22, v6);
        }
        swift_retain();
        sub_1C2149550();
        swift_release();

        swift_release();
        return swift_release();
      }
    }
    swift_bridgeObjectRelease();
    swift_deallocPartialClassInstance();
    return swift_release();
  }
  return result;
}

void sub_1C2057E78(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a3;
  *(void *)(v8 + 24) = a4;
  v10[4] = sub_1C20593CC;
  v10[5] = v8;
  v10[0] = MEMORY[0x1E4F143A8];
  v10[1] = 1107296256;
  void v10[2] = sub_1C20E218C;
  v10[3] = &block_descriptor_18;
  uint64_t v9 = _Block_copy(v10);
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_markDrugInteractionAsDismissed_completion_, a2, v9);
  _Block_release(v9);
}

uint64_t sub_1C2057F74()
{
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    id v0 = sub_1C20541C4();
    uint64_t v1 = swift_allocObject();
    swift_weakInit();
    aBlock[4] = sub_1C2054D78;
    aBlock[5] = v1;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1C2054E74;
    void aBlock[3] = &block_descriptor_23;
    uint64_t v2 = _Block_copy(aBlock);
    swift_release();
    objc_msgSend(v0, sel_allDismissedDrugInteractionsWithCompletion_, v2);
    _Block_release(v2);
    swift_release();
  }
  return sub_1C2149550();
}

void InteractionCriticalAlertDataSource.__allocating_init(arrangedSections:isHidden:)()
{
}

void InteractionCriticalAlertDataSource.init(arrangedSections:isHidden:)()
{
}

uint64_t sub_1C20580FC()
{
  return sub_1C2148B80();
}

Swift::Void __swiftcall InteractionCriticalAlertDataSource.registerCells(for:)(UICollectionView *a1)
{
}

uint64_t sub_1C20581C8()
{
  return sub_1C205A068(&qword_1EA2C5F68, (void (*)(uint64_t))type metadata accessor for InteractionCriticalAlertDataSource);
}

uint64_t type metadata accessor for InteractionCriticalAlertDataSource()
{
  uint64_t result = qword_1EBF0B880;
  if (!qword_1EBF0B880) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C205825C()
{
  return sub_1C214ACC0();
}

void sub_1C20582CC()
{
  sub_1C2059984(319, &qword_1EBF0C748, MEMORY[0x1E4F1AC70]);
  if (v0 <= 0x3F) {
    swift_initClassMetadata2();
  }
}

uint64_t method lookup function for InteractionCriticalAlertDataSource(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for InteractionCriticalAlertDataSource);
}

uint64_t dispatch thunk of InteractionCriticalAlertDataSource.__allocating_init(listManager:healthStore:viewController:analyticsManager:)()
{
  return (*(uint64_t (**)(void))(class metadata base offset for InteractionCriticalAlertDataSource + v0 + 152))();
}

uint64_t dispatch thunk of InteractionCriticalAlertDataSource.layout(for:environment:)()
{
  return (*(uint64_t (**)(void))(class metadata base offset for InteractionCriticalAlertDataSource + *v0 + 160))();
}

uint64_t dispatch thunk of InteractionCriticalAlertDataSource.snapshotDidChange(dataSourceID:snapshot:animated:)()
{
  return (*(uint64_t (**)(void))(class metadata base offset for InteractionCriticalAlertDataSource + *v0 + 304))();
}

uint64_t sub_1C2058484()
{
  return type metadata accessor for InteractionCriticalAlertDataSource();
}

uint64_t sub_1C205848C@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1C2149F80();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1C205850C()
{
  return sub_1C2149F90();
}

uint64_t sub_1C2058588(uint64_t isStackAllocationSafe)
{
  uint64_t v2 = isStackAllocationSafe;
  v11[1] = *MEMORY[0x1E4F143B8];
  char v3 = *(unsigned char *)(isStackAllocationSafe + 32);
  unint64_t v4 = (unint64_t)((1 << v3) + 63) >> 6;
  size_t v5 = 8 * v4;
  if ((v3 & 0x3Fu) <= 0xD
    || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1F4188790](isStackAllocationSafe);
    bzero((char *)v11 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0), v5);
    sub_1C20586EC((void *)((char *)v11 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0)), v4, v2);
    uint64_t v7 = v6;
    swift_release();
    if (v1) {
      swift_willThrow();
    }
  }
  else
  {
    uint64_t v8 = (void *)swift_slowAlloc();
    bzero(v8, v5);
    sub_1C20586EC((unint64_t *)v8, v4, v2);
    uint64_t v7 = v9;
    swift_release();
    MEMORY[0x1C8754730](v8, -1, -1);
  }
  return v7;
}

void sub_1C20586EC(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v21 = 0;
  int64_t v4 = 0;
  uint64_t v5 = a3 + 56;
  uint64_t v6 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(a3 + 56);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      unint64_t v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v11 = v10 | (v4 << 6);
      goto LABEL_5;
    }
    int64_t v15 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v15 >= v9) {
      goto LABEL_24;
    }
    unint64_t v16 = *(void *)(v5 + 8 * v15);
    ++v4;
    if (!v16)
    {
      int64_t v4 = v15 + 1;
      if (v15 + 1 >= v9) {
        goto LABEL_24;
      }
      unint64_t v16 = *(void *)(v5 + 8 * v4);
      if (!v16)
      {
        int64_t v4 = v15 + 2;
        if (v15 + 2 >= v9) {
          goto LABEL_24;
        }
        unint64_t v16 = *(void *)(v5 + 8 * v4);
        if (!v16) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v8 = (v16 - 1) & v16;
    unint64_t v11 = __clz(__rbit64(v16)) + (v4 << 6);
LABEL_5:
    id v12 = *(id *)(*(void *)(a3 + 48) + 8 * v11);
    id v13 = objc_msgSend(v12, sel_severity);
    id v14 = objc_msgSend(v13, sel_severityLevel);

    if (v14 == (id)1)
    {
      *(unint64_t *)((char *)a1 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      if (__OFADD__(v21++, 1))
      {
        __break(1u);
LABEL_24:
        swift_retain();
        sub_1C205892C(a1, a2, v21, a3, &qword_1EA2C5F70, (unint64_t *)&qword_1EBF0C880, 0x1E4F66AC8, (unint64_t *)&unk_1EBF0C888);
        return;
      }
    }
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v9) {
    goto LABEL_24;
  }
  unint64_t v16 = *(void *)(v5 + 8 * v17);
  if (v16)
  {
    int64_t v4 = v17;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v4 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v4 >= v9) {
      goto LABEL_24;
    }
    unint64_t v16 = *(void *)(v5 + 8 * v4);
    ++v17;
    if (v16) {
      goto LABEL_20;
    }
  }
LABEL_26:
  __break(1u);
}

uint64_t sub_1C20588E4(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C205892C(a1, a2, a3, a4, (unint64_t *)&qword_1EBF0C948, (unint64_t *)&qword_1EBF0C8A8, 0x1E4F66B08, (unint64_t *)&unk_1EBF0C8B0);
}

uint64_t sub_1C2058908(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C205892C(a1, a2, a3, a4, &qword_1EA2C5F70, (unint64_t *)&qword_1EBF0C880, 0x1E4F66AC8, (unint64_t *)&unk_1EBF0C888);
}

uint64_t sub_1C205892C(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t *a5, unint64_t *a6, uint64_t a7, unint64_t *a8)
{
  uint64_t v8 = a4;
  if (!a3)
  {
    uint64_t v13 = MEMORY[0x1E4FBC870];
LABEL_36:
    swift_release();
    return v13;
  }
  uint64_t v9 = a3;
  if (*(void *)(a4 + 16) == a3) {
    return v8;
  }
  sub_1C20593DC(0, a5, a6, a7, a8);
  uint64_t result = sub_1C214B7A0();
  uint64_t v13 = result;
  uint64_t v32 = a1;
  if (a2 < 1) {
    unint64_t v14 = 0;
  }
  else {
    unint64_t v14 = *a1;
  }
  uint64_t v15 = 0;
  uint64_t v16 = result + 56;
  while (1)
  {
    if (v14)
    {
      unint64_t v17 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v18 = v17 | (v15 << 6);
      goto LABEL_24;
    }
    uint64_t v19 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      goto LABEL_39;
    }
    if (v19 >= a2) {
      goto LABEL_36;
    }
    unint64_t v20 = v32[v19];
    ++v15;
    if (!v20)
    {
      uint64_t v15 = v19 + 1;
      if (v19 + 1 >= a2) {
        goto LABEL_36;
      }
      unint64_t v20 = v32[v15];
      if (!v20)
      {
        uint64_t v15 = v19 + 2;
        if (v19 + 2 >= a2) {
          goto LABEL_36;
        }
        unint64_t v20 = v32[v15];
        if (!v20) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v14 = (v20 - 1) & v20;
    unint64_t v18 = __clz(__rbit64(v20)) + (v15 << 6);
LABEL_24:
    id v22 = *(id *)(*(void *)(v8 + 48) + 8 * v18);
    uint64_t result = sub_1C214B210();
    uint64_t v23 = -1 << *(unsigned char *)(v13 + 32);
    unint64_t v24 = result & ~v23;
    unint64_t v25 = v24 >> 6;
    if (((-1 << v24) & ~*(void *)(v16 + 8 * (v24 >> 6))) != 0)
    {
      unint64_t v26 = __clz(__rbit64((-1 << v24) & ~*(void *)(v16 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v29 = v25 == v28;
        if (v25 == v28) {
          unint64_t v25 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v16 + 8 * v25);
      }
      while (v30 == -1);
      unint64_t v26 = __clz(__rbit64(~v30)) + (v25 << 6);
    }
    *(void *)(v16 + ((v26 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v26;
    *(void *)(*(void *)(v13 + 48) + 8 * v26) = v22;
    ++*(void *)(v13 + 16);
    if (__OFSUB__(v9--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v9) {
      goto LABEL_36;
    }
  }
  uint64_t v21 = v19 + 3;
  if (v21 >= a2) {
    goto LABEL_36;
  }
  unint64_t v20 = v32[v21];
  if (v20)
  {
    uint64_t v15 = v21;
    goto LABEL_23;
  }
  while (1)
  {
    uint64_t v15 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v15 >= a2) {
      goto LABEL_36;
    }
    unint64_t v20 = v32[v15];
    ++v21;
    if (v20) {
      goto LABEL_23;
    }
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_1C2058B98(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  if (!a3)
  {
    uint64_t v8 = MEMORY[0x1E4FBC870];
LABEL_36:
    swift_release();
    return v8;
  }
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3) {
    return v4;
  }
  sub_1C205947C();
  uint64_t result = sub_1C214B7A0();
  uint64_t v8 = result;
  uint64_t v32 = a2;
  if (a2 < 1) {
    unint64_t v9 = 0;
  }
  else {
    unint64_t v9 = *a1;
  }
  uint64_t v10 = 0;
  uint64_t v11 = result + 56;
  uint64_t v34 = v4;
  while (1)
  {
    if (v9)
    {
      unint64_t v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v13 = v12 | (v10 << 6);
      goto LABEL_24;
    }
    uint64_t v14 = v10 + 1;
    if (__OFADD__(v10, 1)) {
      goto LABEL_39;
    }
    if (v14 >= v32) {
      goto LABEL_36;
    }
    unint64_t v15 = a1[v14];
    ++v10;
    if (!v15)
    {
      uint64_t v10 = v14 + 1;
      if (v14 + 1 >= v32) {
        goto LABEL_36;
      }
      unint64_t v15 = a1[v10];
      if (!v15)
      {
        uint64_t v10 = v14 + 2;
        if (v14 + 2 >= v32) {
          goto LABEL_36;
        }
        unint64_t v15 = a1[v10];
        if (!v15) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_24:
    unint64_t v17 = (uint64_t *)(*(void *)(v4 + 48) + 32 * v13);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    uint64_t v20 = v17[2];
    uint64_t v21 = v17[3];
    sub_1C214BB30();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C214A690();
    sub_1C214A690();
    uint64_t result = sub_1C214BB80();
    uint64_t v22 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v11 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v25 = __clz(__rbit64((-1 << v23) & ~*(void *)(v11 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v28 = v24 == v27;
        if (v24 == v27) {
          unint64_t v24 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v11 + 8 * v24);
      }
      while (v29 == -1);
      unint64_t v25 = __clz(__rbit64(~v29)) + (v24 << 6);
    }
    *(void *)(v11 + ((v25 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v25;
    uint64_t v30 = (void *)(*(void *)(v8 + 48) + 32 * v25);
    *uint64_t v30 = v18;
    v30[1] = v19;
    uint64_t v30[2] = v20;
    v30[3] = v21;
    ++*(void *)(v8 + 16);
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    uint64_t v4 = v34;
    if (!v5) {
      goto LABEL_36;
    }
  }
  uint64_t v16 = v14 + 3;
  if (v16 >= v32) {
    goto LABEL_36;
  }
  unint64_t v15 = a1[v16];
  if (v15)
  {
    uint64_t v10 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    uint64_t v10 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v10 >= v32) {
      goto LABEL_36;
    }
    unint64_t v15 = a1[v10];
    ++v16;
    if (v15) {
      goto LABEL_23;
    }
  }
LABEL_40:
  __break(1u);
  return result;
}

void sub_1C2058E54(uint64_t a1, uint64_t a2, unint64_t a3, void *a4, void *a5)
{
  uint64_t v6 = v5;
  uint64_t v8 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1C214B680();
    sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C880);
    sub_1C1F2F9D0((unint64_t *)&unk_1EBF0C888, (unint64_t *)&qword_1EBF0C880);
    sub_1C214AAA0();
    uint64_t v8 = v28;
    uint64_t v24 = v29;
    uint64_t v9 = v30;
    int64_t v10 = v31;
    unint64_t v11 = v32;
  }
  else
  {
    uint64_t v12 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v24 = a1 + 56;
    uint64_t v13 = ~v12;
    uint64_t v14 = -v12;
    if (v14 < 64) {
      uint64_t v15 = ~(-1 << v14);
    }
    else {
      uint64_t v15 = -1;
    }
    unint64_t v11 = v15 & *(void *)(a1 + 56);
    swift_bridgeObjectRetain();
    uint64_t v9 = v13;
    int64_t v10 = 0;
  }
  int64_t v23 = (unint64_t)(v9 + 64) >> 6;
  if ((v8 & 0x8000000000000000) == 0) {
    goto LABEL_11;
  }
LABEL_8:
  if (sub_1C214B700())
  {
    sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C880);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    id v16 = v33;
    swift_unknownObjectRelease();
    int64_t v17 = v10;
    uint64_t v18 = v11;
    while (v16)
    {
      id v33 = v16;
      sub_1C2057070(&v33, a2, a3, a4, a5);

      if (v6) {
        break;
      }
      int64_t v10 = v17;
      unint64_t v11 = v18;
      if (v8 < 0) {
        goto LABEL_8;
      }
LABEL_11:
      if (v11)
      {
        uint64_t v18 = (v11 - 1) & v11;
        unint64_t v19 = __clz(__rbit64(v11)) | (v10 << 6);
        int64_t v17 = v10;
      }
      else
      {
        int64_t v17 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
          __break(1u);
          return;
        }
        if (v17 >= v23) {
          break;
        }
        unint64_t v20 = *(void *)(v24 + 8 * v17);
        if (!v20)
        {
          int64_t v21 = v10 + 2;
          if (v10 + 2 >= v23) {
            break;
          }
          unint64_t v20 = *(void *)(v24 + 8 * v21);
          if (v20) {
            goto LABEL_22;
          }
          int64_t v21 = v10 + 3;
          if (v10 + 3 >= v23) {
            break;
          }
          unint64_t v20 = *(void *)(v24 + 8 * v21);
          if (v20) {
            goto LABEL_22;
          }
          int64_t v21 = v10 + 4;
          if (v10 + 4 >= v23) {
            break;
          }
          unint64_t v20 = *(void *)(v24 + 8 * v21);
          if (v20)
          {
LABEL_22:
            int64_t v17 = v21;
          }
          else
          {
            int64_t v17 = v10 + 5;
            if (v10 + 5 >= v23) {
              break;
            }
            unint64_t v20 = *(void *)(v24 + 8 * v17);
            if (!v20)
            {
              int64_t v22 = v10 + 6;
              while (v23 != v22)
              {
                unint64_t v20 = *(void *)(v24 + 8 * v22++);
                if (v20)
                {
                  int64_t v17 = v22 - 1;
                  goto LABEL_23;
                }
              }
              break;
            }
          }
        }
LABEL_23:
        uint64_t v18 = (v20 - 1) & v20;
        unint64_t v19 = __clz(__rbit64(v20)) + (v17 << 6);
      }
      id v16 = *(id *)(*(void *)(v8 + 48) + 8 * v19);
    }
  }
  sub_1C1F495B8();
}

uint64_t sub_1C2059188(uint64_t a1)
{
  return a1;
}

uint64_t sub_1C20591DC()
{
  swift_release();

  __swift_destroy_boxed_opaque_existential_0(v0 + 40);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(v0 + 96);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(v0 + 160);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 240, 7);
}

uint64_t sub_1C205926C()
{
  return sub_1C2057BC4(*(void *)(v0 + 16), *(void **)(v0 + 24), (void *)(v0 + 32));
}

uint64_t sub_1C2059278()
{
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 48, 7);
}

void sub_1C20592C8()
{
  sub_1C2057E78(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_1C20592D4()
{
  __swift_destroy_boxed_opaque_existential_0(v0 + 24);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(v0 + 80);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(v0 + 144);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 224, 7);
}

uint64_t sub_1C2059354(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C20593B4()
{
  return objectdestroy_14Tm_0(MEMORY[0x1E4FBC8D0]);
}

uint64_t sub_1C20593CC()
{
  return sub_1C2057F74();
}

void sub_1C20593DC(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, unint64_t *a5)
{
  if (!*a2)
  {
    sub_1C1F12718(255, a3);
    sub_1C1F2F9D0(a5, a3);
    unint64_t v8 = sub_1C214B7B0();
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1C205947C()
{
  if (!qword_1EA2C5F78)
  {
    sub_1C2038198();
    unint64_t v0 = sub_1C214B7B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C5F78);
    }
  }
}

uint64_t sub_1C20594D8()
{
  return sub_1C205A068(&qword_1EA2C59D8, (void (*)(uint64_t))sub_1C2035764);
}

unint64_t sub_1C205950C()
{
  unint64_t result = qword_1EBF0C6A8;
  if (!qword_1EBF0C6A8)
  {
    sub_1C2059F24(255, &qword_1EBF0C6B0, (uint64_t (*)(uint64_t))sub_1C20359B8, MEMORY[0x1E4F1AAE0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBF0C6A8);
  }
  return result;
}

void sub_1C2059594(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  if (!*a2)
  {
    a3(255);
    a4();
    unint64_t v6 = sub_1C2149D20();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_1C2059604()
{
  return sub_1C205A068(&qword_1EA2C5F88, (void (*)(uint64_t))sub_1C2035B38);
}

void sub_1C2059638()
{
  if (!qword_1EA2C5F90)
  {
    sub_1C2059594(255, &qword_1EA2C5F80, (void (*)(uint64_t))sub_1C2035B38, (void (*)(void))sub_1C2059604);
    sub_1C2059984(255, &qword_1EBF0C728, MEMORY[0x1E4F1AC60]);
    sub_1C2059710();
    sub_1C2059798();
    unint64_t v0 = sub_1C2149CA0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C5F90);
    }
  }
}

unint64_t sub_1C2059710()
{
  unint64_t result = qword_1EA2C5F98;
  if (!qword_1EA2C5F98)
  {
    sub_1C2059594(255, &qword_1EA2C5F80, (void (*)(uint64_t))sub_1C2035B38, (void (*)(void))sub_1C2059604);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C5F98);
  }
  return result;
}

unint64_t sub_1C2059798()
{
  unint64_t result = qword_1EBF0C720;
  if (!qword_1EBF0C720)
  {
    sub_1C2059984(255, &qword_1EBF0C728, MEMORY[0x1E4F1AC60]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBF0C720);
  }
  return result;
}

void sub_1C205980C()
{
  if (!qword_1EA2C5FA0)
  {
    sub_1C2059F24(255, &qword_1EBF0C6A0, (uint64_t (*)(uint64_t))sub_1C20598F8, MEMORY[0x1E4F1AAE0]);
    sub_1C20599FC(255, &qword_1EA2C5FA8, (void (*)(uint64_t))sub_1C2059638, (void (*)(void))sub_1C2059AA4);
    sub_1C2059AD8();
    sub_1C2059B60();
    unint64_t v0 = sub_1C2149DA0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C5FA0);
    }
  }
}

void sub_1C20598F8()
{
  if (!qword_1EBF0C788)
  {
    sub_1C20359B8();
    sub_1C2059984(255, &qword_1EBF0C7A8, MEMORY[0x1E4FBB718]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EBF0C788);
    }
  }
}

void sub_1C2059984(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    sub_1C1F30D40(255, &qword_1EBF0C7A0, &qword_1EBF0C8D0);
    unint64_t v7 = a3(a1, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

void sub_1C20599FC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  if (!*a2)
  {
    a3(255);
    sub_1C1F23804(255, (unint64_t *)&qword_1EBF0C9C0);
    a4();
    unint64_t v6 = sub_1C2149D30();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_1C2059AA4()
{
  return sub_1C205A068(&qword_1EA2C5FB0, (void (*)(uint64_t))sub_1C2059638);
}

unint64_t sub_1C2059AD8()
{
  unint64_t result = qword_1EBF0C698;
  if (!qword_1EBF0C698)
  {
    sub_1C2059F24(255, &qword_1EBF0C6A0, (uint64_t (*)(uint64_t))sub_1C20598F8, MEMORY[0x1E4F1AAE0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBF0C698);
  }
  return result;
}

unint64_t sub_1C2059B60()
{
  unint64_t result = qword_1EA2C5FB8;
  if (!qword_1EA2C5FB8)
  {
    sub_1C20599FC(255, &qword_1EA2C5FA8, (void (*)(uint64_t))sub_1C2059638, (void (*)(void))sub_1C2059AA4);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C5FB8);
  }
  return result;
}

uint64_t sub_1C2059BE8()
{
  return sub_1C205A068(&qword_1EA2C5FC8, (void (*)(uint64_t))sub_1C205980C);
}

void sub_1C2059C1C()
{
  if (!qword_1EA2C5FD0)
  {
    sub_1C2059594(255, &qword_1EA2C5FC0, (void (*)(uint64_t))sub_1C205980C, (void (*)(void))sub_1C2059BE8);
    sub_1C1F12718(255, (unint64_t *)&qword_1EBF0CB10);
    sub_1C2059D1C();
    sub_1C1F2F9D0((unint64_t *)&qword_1EBF0C7F0, (unint64_t *)&qword_1EBF0CB10);
    unint64_t v0 = sub_1C2149DF0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C5FD0);
    }
  }
}

unint64_t sub_1C2059D1C()
{
  unint64_t result = qword_1EA2C5FD8;
  if (!qword_1EA2C5FD8)
  {
    sub_1C2059594(255, &qword_1EA2C5FC0, (void (*)(uint64_t))sub_1C205980C, (void (*)(void))sub_1C2059BE8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C5FD8);
  }
  return result;
}

uint64_t sub_1C2059DA4(unint64_t a1, uint64_t a2)
{
  return sub_1C2055CE8(a1, a2);
}

uint64_t sub_1C2059DAC()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C2059DE4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1C2033A14(a1, *(uint64_t (**)(void, void))(v2 + 16), a2);
}

uint64_t sub_1C2059DEC(unint64_t *a1)
{
  return sub_1C205684C(a1);
}

unint64_t sub_1C2059DF4()
{
  unint64_t result = qword_1EBF0C9D0;
  if (!qword_1EBF0C9D0)
  {
    sub_1C2059F24(255, &qword_1EBF0C9D8, (uint64_t (*)(uint64_t))sub_1C20598F8, MEMORY[0x1E4F1ACE0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBF0C9D0);
  }
  return result;
}

uint64_t sub_1C2059E80@<X0>(uint64_t *a1@<X8>)
{
  return sub_1C20543C8(v1[2], v1[3], v1[4], a1);
}

unint64_t sub_1C2059E8C()
{
  unint64_t result = qword_1EA2C5FF0;
  if (!qword_1EA2C5FF0)
  {
    sub_1C2059F24(255, (unint64_t *)&unk_1EBF0C9E0, (uint64_t (*)(uint64_t))sub_1C20359B8, MEMORY[0x1E4F1ACE0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C5FF0);
  }
  return result;
}

void sub_1C2059F18(uint64_t a1, uint64_t a2)
{
  sub_1C20544E4(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void **)(v2 + 32));
}

void sub_1C2059F24(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t, uint64_t, void))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    uint64_t v8 = sub_1C1F23804(255, (unint64_t *)&qword_1EBF0C9C0);
    unint64_t v9 = a4(a1, v7, v8, MEMORY[0x1E4FBC0F0]);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

unint64_t sub_1C2059FB0()
{
  unint64_t result = qword_1EBF0C6F0;
  if (!qword_1EBF0C6F0)
  {
    sub_1C2059F24(255, &qword_1EBF0C6F8, (uint64_t (*)(uint64_t))sub_1C20359B8, MEMORY[0x1E4F1AC28]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBF0C6F0);
  }
  return result;
}

uint64_t sub_1C205A038(uint64_t a1, char a2)
{
  return sub_1C2032A20(a1, a2 & 1, *(uint64_t (**)(uint64_t *))(v2 + 16));
}

void sub_1C205A044(uint64_t a1, void *a2)
{
  sub_1C2054708(a1, a2, *(void (**)(id, uint64_t))(v2 + 16));
}

uint64_t sub_1C205A04C()
{
  return sub_1C2054D80();
}

uint64_t sub_1C205A068(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C205A0B0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C205A114()
{
  return objectdestroy_14Tm_0(MEMORY[0x1E4FBC898]);
}

uint64_t objectdestroy_14Tm_0(void (*a1)(void))
{
  swift_release();
  a1(*(void *)(v1 + 24));

  return MEMORY[0x1F4186498](v1, 32, 7);
}

uint64_t sub_1C205A17C()
{
  return sub_1C2054DF8();
}

uint64_t type metadata accessor for ListOfWeekdaysAndDosagesPickerDataSource(uint64_t a1)
{
  return sub_1C1F20D10(a1, (uint64_t *)&unk_1EA2C6020);
}

uint64_t sub_1C205A1D4()
{
  return swift_initClassMetadata2();
}

unint64_t sub_1C205A250(void (*a1)(id *), uint64_t a2, unint64_t a3)
{
  uint64_t v28 = a1;
  sub_1C2062448(0, &qword_1EA2C6080, type metadata accessor for ScheduleDataSource.DoseItem, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v21 - v6;
  uint64_t v27 = type metadata accessor for ScheduleDataSource.DoseItem(0);
  uint64_t v23 = *(void *)(v27 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v27);
  uint64_t v26 = (uint64_t)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v22 = (uint64_t)&v21 - v10;
  if (a3 >> 62) {
    goto LABEL_20;
  }
  uint64_t v11 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v11; uint64_t v11 = sub_1C214B930())
  {
    uint64_t v24 = (unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48);
    unint64_t v25 = a3 & 0xC000000000000001;
    unint64_t v12 = MEMORY[0x1E4FBC860];
    uint64_t v13 = 4;
    unint64_t v21 = a3;
    while (1)
    {
      id v14 = v25 ? (id)MEMORY[0x1C8753960](v13 - 4, a3) : *(id *)(a3 + 8 * v13);
      uint64_t v15 = v14;
      uint64_t v16 = v13 - 3;
      if (__OFADD__(v13 - 4, 1)) {
        break;
      }
      id v29 = v14;
      v28(&v29);
      if (v3)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        return v12;
      }

      if ((*v24)(v7, 1, v27) == 1)
      {
        sub_1C2063820((uint64_t)v7, &qword_1EA2C6080, type metadata accessor for ScheduleDataSource.DoseItem);
      }
      else
      {
        uint64_t v17 = v22;
        sub_1C2063890((uint64_t)v7, v22, type metadata accessor for ScheduleDataSource.DoseItem);
        sub_1C2063890(v17, v26, type metadata accessor for ScheduleDataSource.DoseItem);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v12 = sub_1C1F3AD74(0, *(void *)(v12 + 16) + 1, 1, v12);
        }
        unint64_t v19 = *(void *)(v12 + 16);
        unint64_t v18 = *(void *)(v12 + 24);
        if (v19 >= v18 >> 1) {
          unint64_t v12 = sub_1C1F3AD74(v18 > 1, v19 + 1, 1, v12);
        }
        *(void *)(v12 + 16) = v19 + 1;
        sub_1C2063890(v26, v12+ ((*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80))+ *(void *)(v23 + 72) * v19, type metadata accessor for ScheduleDataSource.DoseItem);
        a3 = v21;
      }
      ++v13;
      if (v16 == v11)
      {
        swift_bridgeObjectRelease();
        return v12;
      }
    }
    __break(1u);
LABEL_20:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x1E4FBC860];
}

unint64_t sub_1C205A5E0(void (*a1)(void), uint64_t a2, uint64_t a3)
{
  uint64_t v29 = a2;
  sub_1C2062448(0, &qword_1EA2C5650, (uint64_t (*)(uint64_t))type metadata accessor for Dosage, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v23 - v7;
  uint64_t v28 = type metadata accessor for Dosage();
  uint64_t v9 = MEMORY[0x1F4188790](v28);
  uint64_t v27 = (uint64_t)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v26 = (uint64_t)&v23 - v12;
  uint64_t v13 = *(void *)(a3 + 16);
  if (!v13) {
    return MEMORY[0x1E4FBC860];
  }
  unint64_t v14 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v23 = a3;
  unint64_t v24 = v14;
  uint64_t v15 = a3 + v14;
  uint64_t v16 = (unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  uint64_t v17 = *(void *)(v11 + 72);
  swift_bridgeObjectRetain();
  unint64_t v18 = MEMORY[0x1E4FBC860];
  unint64_t v25 = a1;
  do
  {
    a1(v15);
    if (v3)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v18;
    }
    if ((*v16)(v8, 1, v28) == 1)
    {
      sub_1C2063820((uint64_t)v8, &qword_1EA2C5650, (uint64_t (*)(uint64_t))type metadata accessor for Dosage);
    }
    else
    {
      uint64_t v19 = v26;
      sub_1C2063890((uint64_t)v8, v26, (uint64_t (*)(void))type metadata accessor for Dosage);
      sub_1C2063890(v19, v27, (uint64_t (*)(void))type metadata accessor for Dosage);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v18 = sub_1C1F3AA7C(0, *(void *)(v18 + 16) + 1, 1, v18);
      }
      unint64_t v21 = *(void *)(v18 + 16);
      unint64_t v20 = *(void *)(v18 + 24);
      if (v21 >= v20 >> 1) {
        unint64_t v18 = sub_1C1F3AA7C(v20 > 1, v21 + 1, 1, v18);
      }
      *(void *)(v18 + 16) = v21 + 1;
      sub_1C2063890(v27, v18 + v24 + v21 * v17, (uint64_t (*)(void))type metadata accessor for Dosage);
      a1 = v25;
    }
    v15 += v17;
    --v13;
  }
  while (v13);
  swift_bridgeObjectRelease();
  return v18;
}

uint64_t sub_1C205A8F8@<X0>(void *a1@<X8>)
{
  sub_1C20624AC();
  uint64_t v4 = v3;
  uint64_t result = MEMORY[0x1F4188790](v3);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v1;
  unint64_t v9 = v1[1];
  unint64_t v11 = *(void *)(*v1 + 16);
  if (v9 == v11)
  {
    uint64_t v12 = *(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t))(v6 + 56);
    return v12(a1, 1, 1, v4);
  }
  else
  {
    if (v9 >= v11)
    {
      __break(1u);
    }
    else
    {
      uint64_t v19 = v6;
      uint64_t v13 = *(void *)(type metadata accessor for WeekdaysAndDosages(0) - 8);
      uint64_t v14 = v10
          + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80))
          + *(void *)(v13 + 72) * v9;
      v1[1] = v9 + 1;
      uint64_t v15 = (uint64_t)&v8[*(int *)(v4 + 48)];
      uint64_t v16 = v1[2];
      uint64_t result = sub_1C206363C(v14, v15, type metadata accessor for WeekdaysAndDosages);
      if (!__OFADD__(v16, 1))
      {
        void v1[2] = v16 + 1;
        uint64_t v17 = (uint64_t)a1 + *(int *)(v4 + 48);
        *a1 = v16;
        sub_1C2063890(v15, v17, type metadata accessor for WeekdaysAndDosages);
        return (*(uint64_t (**)(void *, void, uint64_t, uint64_t))(v19 + 56))(a1, 0, 1, v4);
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1C205AAEC@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v5 = *v2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v5 = sub_1C1F814D8(v5);
  }
  unint64_t v6 = *(void *)(v5 + 16);
  if (v6 <= a1)
  {
    __break(1u);
    goto LABEL_15;
  }
  unint64_t v7 = v6 - 1;
  uint64_t v8 = *(void *)(type metadata accessor for WeekdaysAndDosages(0) - 8);
  uint64_t v9 = *(void *)(v8 + 72);
  unint64_t v10 = v5 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80)) + v9 * a1;
  uint64_t result = sub_1C2063890(v10, a2, type metadata accessor for WeekdaysAndDosages);
  if ((uint64_t)(v7 - a1) < 0)
  {
LABEL_15:
    uint64_t result = sub_1C214B990();
    __break(1u);
    return result;
  }
  if (v9 > 0 || v10 >= v10 + v9 + v9 * (v7 - a1))
  {
    uint64_t result = swift_arrayInitWithTakeFrontToBack();
  }
  else if (v9)
  {
    uint64_t result = swift_arrayInitWithTakeBackToFront();
  }
  *(void *)(v5 + 16) = v7;
  *uint64_t v2 = v5;
  return result;
}

uint64_t sub_1C205AC74(unint64_t a1)
{
  uint64_t v3 = *v1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v3 = sub_1C1F8157C((uint64_t)v3);
  }
  unint64_t v4 = *((void *)v3 + 2);
  if (v4 <= a1)
  {
    __break(1u);
  }
  else
  {
    unint64_t v5 = v4 - 1;
    int64_t v6 = v4 - 1 - a1;
    if (v6 >= 0)
    {
      unint64_t v7 = &v3[a1 + 32];
      uint64_t v8 = *v7;
      memmove(v7, v7 + 1, v6);
      *((void *)v3 + 2) = v5;
      void *v1 = v3;
      return v8;
    }
  }
  uint64_t result = sub_1C214B990();
  __break(1u);
  return result;
}

uint64_t sub_1C205AD44(void **a1)
{
  uint64_t v2 = *(void *)(type metadata accessor for Dosage() - 8);
  uint64_t v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v3 = (void *)sub_1C20FB260(v3);
  }
  uint64_t v4 = v3[2];
  v6[0] = (char *)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v4;
  uint64_t result = sub_1C206118C(v6);
  *a1 = v3;
  return result;
}

uint64_t sub_1C205ADEC()
{
  uint64_t v0 = sub_1C21496A0();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = MEMORY[0x1F4188790](v0);
  uint64_t v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = MEMORY[0x1F4188790](v2);
  unint64_t v7 = (char *)&v26 - v6;
  uint64_t v8 = MEMORY[0x1F4188790](v5);
  unint64_t v10 = (char *)&v26 - v9;
  uint64_t v11 = MEMORY[0x1F4188790](v8);
  uint64_t v13 = (char *)&v26 - v12;
  uint64_t v14 = MEMORY[0x1F4188790](v11);
  uint64_t v16 = (char *)&v26 - v15;
  uint64_t v17 = MEMORY[0x1F4188790](v14);
  uint64_t v19 = (char *)&v26 - v18;
  MEMORY[0x1F4188790](v17);
  uint64_t v27 = (char *)&v26 - v20;
  sub_1C2149630();
  sub_1C205B0F8((uint64_t)v16);
  unint64_t v21 = *(void (**)(char *, char *, uint64_t))(v1 + 16);
  v21(v13, v19, v0);
  v21(v7, v19, v0);
  v21(v4, v16, v0);
  uint64_t v26 = (void (*)(uint64_t))MEMORY[0x1E4F66D28];
  sub_1C2063998(&qword_1EA2C3B98, MEMORY[0x1E4F66D28]);
  sub_1C214B5E0();
  uint64_t v22 = v27;
  sub_1C214B5C0();
  uint64_t v23 = *(void (**)(char *, uint64_t))(v1 + 8);
  v23(v10, v0);
  v23(v16, v0);
  v23(v19, v0);
  sub_1C214B630();
  sub_1C2063998(&qword_1EBF0C5E8, v26);
  char v24 = sub_1C214A5A0();
  v23(v19, v0);
  v23(v22, v0);
  return v24 & 1;
}

uint64_t sub_1C205B0F8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v37 = type metadata accessor for WeekdaysAndDosages(0);
  uint64_t v39 = *(void *)(v37 - 8);
  MEMORY[0x1F4188790](v37);
  uint64_t v3 = (char *)v27 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1C21496A0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  int64_t v31 = (char *)v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  unint64_t v32 = (char *)v27 - v9;
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)v27 - v11;
  MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)v27 - v13;
  sub_1C2149E90();
  uint64_t v15 = v41;
  uint64_t v40 = 0;
  uint64_t v38 = sub_1C2063998(&qword_1EBF0C5F0, MEMORY[0x1E4F66D28]);
  sub_1C214BC00();
  uint64_t v16 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
  v16(v12, v14, v4);
  uint64_t v17 = *(void *)(v15 + 16);
  if (v17)
  {
    uint64_t v28 = v14;
    uint64_t v29 = v5;
    uint64_t v30 = a1;
    uint64_t v18 = v15;
    uint64_t v19 = v15 + ((*(unsigned __int8 *)(v39 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80));
    uint64_t v20 = *(void *)(v39 + 72);
    id v35 = (void (**)(char *, uint64_t))(v5 + 8);
    uint64_t v36 = v20;
    uint64_t v39 = v5 + 32;
    v27[1] = v18;
    swift_bridgeObjectRetain();
    uint64_t v22 = v31;
    unint64_t v21 = v32;
    uint64_t v33 = v5 + 16;
    uint64_t v34 = v16;
    do
    {
      sub_1C206363C(v19, (uint64_t)v3, type metadata accessor for WeekdaysAndDosages);
      uint64_t v23 = &v3[*(int *)(v37 + 20)];
      char v24 = (void (*)(uint64_t))MEMORY[0x1E4F66D28];
      sub_1C2063998(&qword_1EA2C3B90, MEMORY[0x1E4F66D28]);
      sub_1C214A750();
      sub_1C214BC00();
      v34(v22, v23, v4);
      sub_1C2063998(&qword_1EA2C3B98, v24);
      sub_1C214B610();
      sub_1C20636A4((uint64_t)v3, type metadata accessor for WeekdaysAndDosages);
      (*v35)(v12, v4);
      unint64_t v25 = *(void (**)(uint64_t, char *, uint64_t))v39;
      (*(void (**)(char *, char *, uint64_t))v39)(v12, v21, v4);
      v19 += v36;
      --v17;
    }
    while (v17);
    uint64_t v39 = v39 & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
    swift_bridgeObjectRelease();
    uint64_t v5 = v29;
    a1 = v30;
    uint64_t v14 = v28;
  }
  else
  {
    unint64_t v25 = *(void (**)(uint64_t, char *, uint64_t))(v5 + 32);
    uint64_t v39 = (v5 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
  }
  v25(a1, v12, v4);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v14, v4);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C205B528(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v28 = a3;
  uint64_t v7 = sub_1C2147B20();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(v3 + qword_1EA2C6010) = 0;
  uint64_t v11 = (void *)(v3 + qword_1EA2C6018);
  v29[0] = sub_1C214A5F0();
  v29[1] = v12;
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  uint64_t v13 = v29[0];
  uint64_t v14 = v29[1];
  swift_retain();
  swift_bridgeObjectRelease();
  *uint64_t v11 = v13;
  v11[1] = v14;
  *(void *)(v4 + qword_1EA2C5FF8) = a1;
  id v27 = a1;
  if (a2)
  {
    id v15 = a2;
    uint64_t v16 = sub_1C201A1E8();
    uint64_t v18 = v17;
    uint64_t v20 = v19;
    uint64_t v22 = v21;
  }
  else
  {
    uint64_t v16 = 0;
    uint64_t v18 = 0;
    uint64_t v20 = 0;
    uint64_t v22 = 0;
  }
  uint64_t v23 = (uint64_t *)(v4 + qword_1EA2C6000);
  *uint64_t v23 = v16;
  v23[1] = v18;
  void v23[2] = v20;
  void v23[3] = v22;
  *(void *)(v4 + qword_1EA2C6008) = v28;
  swift_retain();
  swift_release();
  v29[0] = 0;
  v29[1] = 0xE000000000000000;
  sub_1C214B7C0();
  swift_bridgeObjectRelease();
  strcpy((char *)v29, "MutableArray<");
  HIWORD(v29[1]) = -4864;
  sub_1C2147B10();
  sub_1C2147AD0();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  sub_1C214A6C0();
  uint64_t v24 = sub_1C2148590();
  v29[0] = *(void *)(v24 + qword_1EA2C6008);
  swift_allocObject();
  swift_weakInit();
  sub_1C2063900();
  sub_1C2063998((unint64_t *)&qword_1EA2C6098, (void (*)(uint64_t))sub_1C2063900);
  swift_retain();
  swift_retain();
  uint64_t v25 = sub_1C214A0F0();
  swift_release();
  swift_release();
  *(void *)(v24 + qword_1EA2C6010) = v25;
  swift_release();

  swift_release();
  swift_release();
  return v24;
}

uint64_t sub_1C205B888()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1C205B8E0();
    return swift_release();
  }
  return result;
}

uint64_t sub_1C205B8E0()
{
  uint64_t v1 = v0;
  uint64_t v131 = sub_1C2148750();
  uint64_t v130 = *(void *)(v131 - 8);
  MEMORY[0x1F4188790](v131);
  unint64_t v133 = (char *)&v129 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v160 = sub_1C2148540();
  uint64_t v161 = *(void *)(v160 - 8);
  uint64_t v3 = MEMORY[0x1F4188790](v160);
  uint64_t v129 = (char *)&v129 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  id v174 = (char *)&v129 - v5;
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C2062448(0, &qword_1EBF0C620, MEMORY[0x1E4FB0F28], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v151 = (char *)&v129 - v8;
  uint64_t v173 = type metadata accessor for DayPickerItem();
  MEMORY[0x1F4188790](v173);
  uint64_t v179 = (char *)&v129 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2062448(0, &qword_1EA2C6060, (uint64_t (*)(uint64_t))sub_1C20624AC, v6);
  uint64_t v11 = MEMORY[0x1F4188790](v10 - 8);
  id v157 = (char **)((char *)&v129 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (uint64_t *)((char *)&v129 - v13);
  uint64_t v180 = sub_1C2147B20();
  unint64_t v171 = *(void *)(v180 - 8);
  MEMORY[0x1F4188790](v180);
  id v170 = (char **)((char *)&v129 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v167 = sub_1C2147AC0();
  uint64_t v166 = *(void *)(v167 - 8);
  MEMORY[0x1F4188790](v167);
  uint64_t v165 = (uint64_t)&v129 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v176 = type metadata accessor for WeekdaysAndDosages(0);
  uint64_t v153 = *(void *)(v176 - 8);
  uint64_t v17 = MEMORY[0x1F4188790](v176);
  uint64_t v149 = (uint64_t)&v129 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = MEMORY[0x1F4188790](v17);
  uint64_t v178 = (uint64_t)&v129 - v20;
  uint64_t v21 = MEMORY[0x1F4188790](v19);
  uint64_t v169 = (uint64_t)&v129 - v22;
  uint64_t v150 = v23;
  MEMORY[0x1F4188790](v21);
  id v168 = (uint64_t *)((char *)&v129 - v24);
  uint64_t v25 = sub_1C21496A0();
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v27 = MEMORY[0x1F4188790](v25);
  id v148 = (char *)&v129 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = MEMORY[0x1F4188790](v27);
  id v147 = (char *)&v129 - v30;
  uint64_t v31 = MEMORY[0x1F4188790](v29);
  id v146 = (char *)&v129 - v32;
  uint64_t v33 = MEMORY[0x1F4188790](v31);
  id v145 = (char *)&v129 - v34;
  uint64_t v35 = MEMORY[0x1F4188790](v33);
  uint64_t v144 = (uint64_t)&v129 - v36;
  uint64_t v37 = MEMORY[0x1F4188790](v35);
  uint64_t v39 = (char *)&v129 - v38;
  MEMORY[0x1F4188790](v37);
  uint64_t v41 = (char *)&v129 - v40;
  uint64_t v159 = sub_1C21499D0();
  uint64_t v132 = *(void *)(v159 - 8);
  MEMORY[0x1F4188790](v159);
  uint64_t v43 = (char *)&v129 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C21499C0();
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C900);
  sub_1C214B1A0();
  id v158 = v43;
  sub_1C2149990();
  sub_1C205B0F8((uint64_t)v41);
  sub_1C21495E0();
  sub_1C2063998(&qword_1EA2C3B90, MEMORY[0x1E4F66D28]);
  sub_1C214A750();
  sub_1C214A750();
  uint64_t v44 = v181[0];
  uint64_t v45 = v182[0];
  uint64_t v46 = *(void (**)(void, void))(v26 + 8);
  uint64_t v172 = v39;
  v46(v39, v25);
  id v175 = v41;
  uint64_t v152 = v25;
  uint64_t v143 = v26 + 8;
  uint64_t v142 = v46;
  v46(v41, v25);
  uint64_t v47 = v1;
  uint64_t v177 = v1;
  id v154 = v14;
  if (v44 == v45)
  {
    id v48 = v175;
    sub_1C205EF80(v175);
    sub_1C2062448(0, (unint64_t *)&qword_1EA2C3220, (uint64_t (*)(uint64_t))type metadata accessor for Dosage, MEMORY[0x1E4FBBE00]);
    id v49 = (int *)(type metadata accessor for Dosage() - 8);
    unint64_t v50 = (*(unsigned __int8 *)(*(void *)v49 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v49 + 80);
    uint64_t v51 = swift_allocObject();
    *(_OWORD *)(v51 + 16) = xmmword_1C214FCD0;
    unint64_t v52 = v51 + v50;
    uint64_t v53 = v165;
    sub_1C2147AB0();
    uint64_t v54 = v170;
    sub_1C2147B10();
    unint64_t v55 = v171;
    uint64_t v56 = v180;
    (*(void (**)(unint64_t, void *, uint64_t))(v171 + 32))(v52, v54, v180);
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v166 + 32))(v52 + v49[7], v53, v167);
    *(void *)(v52 + v49[8]) = 0x3FF0000000000000;
    sub_1C2147B10();
    uint64_t v57 = sub_1C2147AD0();
    uint64_t v59 = v58;
    (*(void (**)(void *, uint64_t))(v55 + 8))(v54, v56);
    uint64_t v60 = (char *)v168;
    *id v168 = v57;
    *((void *)v60 + 1) = v59;
    uint64_t v61 = v176;
    (*(void (**)(char *, char *, uint64_t))(v26 + 32))(&v60[*(int *)(v176 + 20)], v48, v152);
    *(void *)&v60[*(int *)(v61 + 24)] = v51;
    uint64_t v62 = v169;
    sub_1C206363C((uint64_t)v60, v169, type metadata accessor for WeekdaysAndDosages);
    uint64_t v63 = (void (*)(void, void))sub_1C2149E80();
    uint64_t v65 = v64;
    unint64_t v66 = *v64;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t *v65 = v66;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      unint64_t v66 = sub_1C1F3AA34(0, *(void *)(v66 + 16) + 1, 1, v66);
      unint64_t *v65 = v66;
    }
    unint64_t v69 = *(void *)(v66 + 16);
    unint64_t v68 = *(void *)(v66 + 24);
    if (v69 >= v68 >> 1)
    {
      unint64_t v66 = sub_1C1F3AA34(v68 > 1, v69 + 1, 1, v66);
      unint64_t *v65 = v66;
    }
    uint64_t v14 = v154;
    *(void *)(v66 + 16) = v69 + 1;
    sub_1C2063890(v62, v66+ ((*(unsigned __int8 *)(v153 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v153 + 80))+ *(void *)(v153 + 72) * v69, type metadata accessor for WeekdaysAndDosages);
    v63(v181, 0);
    sub_1C20636A4((uint64_t)v60, type metadata accessor for WeekdaysAndDosages);
    uint64_t v47 = v177;
  }
  sub_1C2149E90();
  uint64_t v141 = (uint64_t *)(v47 + qword_1EA2C6000);
  id v140 = (uint64_t *)(v47 + qword_1EA2C6018);
  uint64_t v139 = (void (**)(char *, uint64_t, uint64_t))(v26 + 16);
  uint64_t v138 = (void (**)(char *, char *, uint64_t))(v132 + 16);
  uint64_t v137 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v132 + 56);
  v181[1] = 0;
  v181[2] = 0;
  uint64_t v136 = (void (**)(char *, char *, uint64_t))(v26 + 32);
  uint64_t v156 = v161 + 32;
  unint64_t v70 = MEMORY[0x1E4FBC860];
  uint64_t v135 = qword_1EA2C5FF8;
  uint64_t v134 = 0x80000001C2167AD0;
  long long v155 = xmmword_1C214FCD0;
  while (1)
  {
    uint64_t v71 = v157;
    sub_1C205A8F8(v157);
    sub_1C206269C((uint64_t)v71, (uint64_t)v14, &qword_1EA2C6060, (uint64_t (*)(uint64_t))sub_1C20624AC);
    sub_1C20624AC();
    uint64_t v73 = v72;
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v72 - 8) + 48))(v14, 1, v72) == 1) {
      break;
    }
    uint64_t v180 = *v14;
    uint64_t v74 = (uint64_t)v14 + *(int *)(v73 + 48);
    id v170 = type metadata accessor for WeekdaysAndDosages;
    uint64_t v75 = v178;
    sub_1C2063890(v74, v178, type metadata accessor for WeekdaysAndDosages);
    v182[0] = 0;
    v182[1] = 0xE000000000000000;
    sub_1C214B7C0();
    swift_bridgeObjectRelease();
    strcpy((char *)v182, "DayPickerItem-");
    HIBYTE(v182[1]) = -18;
    swift_bridgeObjectRetain();
    sub_1C214A6C0();
    swift_bridgeObjectRelease();
    id v168 = (uint64_t *)v182[1];
    uint64_t v169 = v182[0];
    uint64_t v76 = v75 + *(int *)(v176 + 20);
    id v77 = *v139;
    uint64_t v78 = v152;
    (*v139)(v175, v76, v152);
    uint64_t v79 = v144;
    sub_1C205B0F8(v144);
    v77(v145, v79, v78);
    unint64_t v171 = v70;
    v77(v147, v79, v78);
    v77(v148, v76, v78);
    sub_1C2063998(&qword_1EA2C3B98, MEMORY[0x1E4F66D28]);
    uint64_t v80 = v146;
    sub_1C214B5E0();
    sub_1C214B5C0();
    uint64_t v81 = v142;
    v142(v80, v78);
    v81(v79, v78);
    uint64_t v82 = (uint64_t)v151;
    uint64_t v83 = v159;
    (*v138)(v151, v158, v159);
    (*v137)(v82, 0, 1, v83);
    uint64_t v84 = swift_allocObject();
    swift_weakInit();
    uint64_t v85 = v149;
    sub_1C206363C(v75, v149, type metadata accessor for WeekdaysAndDosages);
    unint64_t v86 = (*(unsigned __int8 *)(v153 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v153 + 80);
    uint64_t v87 = swift_allocObject();
    uint64_t v88 = v180;
    *(void *)(v87 + 16) = v84;
    *(void *)(v87 + 24) = v88;
    sub_1C2063890(v85, v87 + v86, (uint64_t (*)(void))v170);
    type metadata accessor for DayPickerCollectionViewCell();
    sub_1C2063998(&qword_1EA2C6050, (void (*)(uint64_t))type metadata accessor for DayPickerCollectionViewCell);
    swift_retain();
    uint64_t v89 = sub_1C21481D0();
    uint64_t v91 = v90;
    uint64_t v92 = v179;
    uint64_t v93 = v168;
    *(void *)uint64_t v179 = v169;
    *((void *)v92 + 1) = v93;
    uint64_t v94 = (int *)v173;
    uint64_t v95 = v92;
    unint64_t v96 = *v136;
    (*v136)(&v92[*(int *)(v173 + 20)], v175, v78);
    v96(&v95[v94[6]], v172, v78);
    sub_1C206269C(v82, (uint64_t)&v95[v94[7]], &qword_1EBF0C620, MEMORY[0x1E4FB0F28]);
    swift_release();
    uint64_t v97 = (uint64_t (**)(char *))&v95[v94[8]];
    *uint64_t v97 = sub_1C2062628;
    v97[1] = (uint64_t (*)(char *))v87;
    id v98 = (uint64_t *)&v95[v94[9]];
    *id v98 = v89;
    v98[1] = v91;
    uint64_t v163 = *(void *)(v178 + *(int *)(v176 + 24));
    uint64_t v99 = v177;
    id v170 = *(void **)(v177 + v135);
    uint64_t v100 = *v141;
    id v168 = (uint64_t *)v141[1];
    uint64_t v169 = v100;
    uint64_t v101 = v141[3];
    uint64_t v167 = v141[2];
    uint64_t v166 = v101;
    uint64_t v102 = swift_allocObject();
    swift_weakInit();
    uint64_t v103 = swift_allocObject();
    uint64_t v165 = v103;
    uint64_t v164 = v102;
    uint64_t v104 = v180;
    *(void *)(v103 + 16) = v102;
    *(void *)(v103 + 24) = v104;
    uint64_t v105 = swift_allocObject();
    *(void *)(v105 + 16) = v99;
    *(void *)(v105 + 24) = v104;
    uint64_t v106 = v104;
    uint64_t v107 = swift_allocObject();
    swift_weakInit();
    uint64_t v108 = swift_allocObject();
    *(void *)(v108 + 16) = v107;
    *(void *)(v108 + 24) = v106;
    uint64_t v109 = v106;
    uint64_t v110 = swift_allocObject();
    swift_weakInit();
    uint64_t v111 = swift_allocObject();
    *(void *)(v111 + 16) = v110;
    *(void *)(v111 + 24) = v109;
    uint64_t v112 = v109;
    uint64_t v113 = v140[1];
    uint64_t v162 = *v140;
    v182[0] = 0;
    v182[1] = 0xE000000000000000;
    uint64_t v114 = v163;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1C214B7C0();
    swift_bridgeObjectRelease();
    v181[4] = v112;
    v182[0] = 0xD000000000000011;
    v182[1] = v134;
    sub_1C214BA40();
    sub_1C214A6C0();
    swift_bridgeObjectRelease();
    id v170 = sub_1C201C1C0(v170, v169, (uint64_t)v168, v167, v166, (uint64_t)sub_1C205D898, 0, (uint64_t)sub_1C2062754, v165, (uint64_t)sub_1C206275C, v105, (uint64_t)sub_1C2062764, v108, (uint64_t)sub_1C206276C, v111, v162, v113, v182[0], v182[1],
             v114);
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    unint64_t v70 = v171;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C2062448(0, (unint64_t *)&qword_1EBF0C958, (uint64_t (*)(uint64_t))sub_1C1F1CB5C, MEMORY[0x1E4FBBE00]);
    uint64_t v115 = swift_allocObject();
    *(_OWORD *)(v115 + 16) = v155;
    *(void *)(v115 + 56) = v173;
    *(void *)(v115 + 64) = sub_1C2063998(&qword_1EA2C6078, (void (*)(uint64_t))type metadata accessor for DayPickerItem);
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v115 + 32));
    sub_1C206363C((uint64_t)v179, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(void))type metadata accessor for DayPickerItem);
    v182[0] = v115;
    sub_1C1F7D1D0((uint64_t)v170);
    v182[0] = v180;
    sub_1C214BA40();
    sub_1C2148520();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v70 = sub_1C1F3AD2C(0, *(void *)(v70 + 16) + 1, 1, v70);
    }
    unint64_t v118 = *(void *)(v70 + 16);
    unint64_t v117 = *(void *)(v70 + 24);
    uint64_t v14 = v154;
    if (v118 >= v117 >> 1) {
      unint64_t v70 = sub_1C1F3AD2C(v117 > 1, v118 + 1, 1, v70);
    }
    *(void *)(v70 + 16) = v118 + 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v161 + 32))(v70+ ((*(unsigned __int8 *)(v161 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v161 + 80))+ *(void *)(v161 + 72) * v118, v174, v160);
    sub_1C20636A4((uint64_t)v179, (uint64_t (*)(void))type metadata accessor for DayPickerItem);
    sub_1C20636A4(v178, type metadata accessor for WeekdaysAndDosages);
  }
  swift_bridgeObjectRelease();
  if (qword_1EBF0CA00 != -1) {
    swift_once();
  }
  id v119 = (id)qword_1EBF0CA18;
  swift_bridgeObjectRetain();
  sub_1C2147730();
  swift_bridgeObjectRelease();

  sub_1C205ADEC();
  swift_allocObject();
  swift_weakInit();
  type metadata accessor for ButtonBackgroundColorCell(0);
  swift_retain();
  sub_1C21481D0();
  unint64_t v120 = v133;
  sub_1C2148740();
  swift_release();
  sub_1C2062448(0, (unint64_t *)&qword_1EBF0C958, (uint64_t (*)(uint64_t))sub_1C1F1CB5C, MEMORY[0x1E4FBBE00]);
  uint64_t v121 = swift_allocObject();
  *(_OWORD *)(v121 + 16) = v155;
  uint64_t v122 = v131;
  *(void *)(v121 + 56) = v131;
  *(void *)(v121 + 64) = sub_1C2063998(&qword_1EA2C6070, MEMORY[0x1E4F664E0]);
  unint64_t v123 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v121 + 32));
  uint64_t v124 = v130;
  (*(void (**)(uint64_t *, char *, uint64_t))(v130 + 16))(v123, v120, v122);
  uint64_t v125 = v129;
  sub_1C2148520();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v70 = sub_1C1F3AD2C(0, *(void *)(v70 + 16) + 1, 1, v70);
  }
  unint64_t v127 = *(void *)(v70 + 16);
  unint64_t v126 = *(void *)(v70 + 24);
  if (v127 >= v126 >> 1) {
    unint64_t v70 = sub_1C1F3AD2C(v126 > 1, v127 + 1, 1, v70);
  }
  *(void *)(v70 + 16) = v127 + 1;
  (*(void (**)(unint64_t, char *, uint64_t))(v161 + 32))(v70+ ((*(unsigned __int8 *)(v161 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v161 + 80))+ *(void *)(v161 + 72) * v127, v125, v160);
  sub_1C21485B0();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v124 + 8))(v133, v122);
  return (*(uint64_t (**)(char *, uint64_t))(v132 + 8))(v158, v159);
}

uint64_t sub_1C205D140(char *a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v50 = a4;
  uint64_t v53 = a1;
  uint64_t v52 = type metadata accessor for WeekdaysAndDosages(0);
  uint64_t v5 = *(void *)(v52 - 8);
  MEMORY[0x1F4188790](v52);
  uint64_t v7 = (uint64_t *)((char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = sub_1C21496A0();
  uint64_t v51 = *(void *)(v8 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x1F4188790](v9);
  uint64_t v14 = (char *)&v42 - v13;
  uint64_t v15 = MEMORY[0x1F4188790](v12);
  uint64_t v17 = (char *)&v42 - v16;
  uint64_t v18 = MEMORY[0x1F4188790](v15);
  uint64_t v20 = (char *)&v42 - v19;
  uint64_t v21 = MEMORY[0x1F4188790](v18);
  unint64_t v55 = (char *)&v42 - v22;
  MEMORY[0x1F4188790](v21);
  uint64_t v54 = (char *)&v42 - v23;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v25 = result;
    uint64_t v45 = qword_1EA2C6008;
    uint64_t v26 = *(void (**)(void *, void))(result + qword_1EA2C6008);
    sub_1C2149E90();
    if ((a3 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else
    {
      uint64_t v26 = (void (*)(void *, void))v56[0];
      if (*(void *)(v56[0] + 16) > a3)
      {
        unint64_t v43 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
        unint64_t v44 = a3;
        uint64_t v42 = *(void *)(v5 + 72) * a3;
        sub_1C206363C(v56[0] + v43 + v42, (uint64_t)v7, type metadata accessor for WeekdaysAndDosages);
        swift_bridgeObjectRelease();
        uint64_t v27 = v51;
        uint64_t v28 = (char *)v7 + *(int *)(v52 + 20);
        uint64_t v29 = *(void (**)(char *, char *, uint64_t))(v51 + 16);
        uint64_t v47 = v25;
        uint64_t v30 = v20;
        uint64_t v31 = v54;
        v29(v54, v28, v8);
        sub_1C20636A4((uint64_t)v7, type metadata accessor for WeekdaysAndDosages);
        uint64_t v46 = v30;
        uint64_t v32 = v53;
        v29(v30, v53, v8);
        v29(v14, v32, v8);
        v29(v11, v31, v8);
        id v49 = (void (*)(uint64_t))MEMORY[0x1E4F66D28];
        uint64_t v48 = sub_1C2063998(&qword_1EA2C3B98, MEMORY[0x1E4F66D28]);
        sub_1C214B5E0();
        sub_1C214B5C0();
        uint64_t v33 = *(void (**)(char *, uint64_t))(v27 + 8);
        v33(v17, v8);
        sub_1C204A108();
        uint64_t v34 = swift_allocObject();
        *(_OWORD *)(v34 + 16) = xmmword_1C214FCD0;
        v56[0] = 0;
        v56[1] = 0xE000000000000000;
        swift_retain();
        sub_1C214B7C0();
        swift_bridgeObjectRelease();
        strcpy((char *)v56, "DayPickerItem-");
        HIBYTE(v56[1]) = -18;
        swift_bridgeObjectRetain();
        sub_1C214A6C0();
        uint64_t v35 = v46;
        swift_bridgeObjectRelease();
        uint64_t v36 = v56[1];
        *(void *)(v34 + 32) = v56[0];
        *(void *)(v34 + 40) = v36;
        uint64_t v37 = (void (*)(void *, void))sub_1C21485F0();
        sub_1C1FF8494();
        sub_1C2149C10();
        swift_bridgeObjectRelease();
        v37(v56, 0);
        swift_release();
        sub_1C205B0F8((uint64_t)v17);
        uint64_t v38 = v49;
        sub_1C2063998(&qword_1EA2C3B90, v49);
        sub_1C214A750();
        sub_1C2063998(&qword_1EBF0C5F0, v38);
        sub_1C214BC00();
        sub_1C214B5D0();
        v33(v17, v8);
        sub_1C214B630();
        sub_1C2063998(&qword_1EBF0C5E8, v38);
        char v39 = sub_1C214A5A0();
        v33(v17, v8);
        uint64_t v17 = (char *)v33;
        v33(v35, v8);
        if (v39 & 1) == 0 || (sub_1C214B630(), char v40 = sub_1C214A5A0(), v33(v35, v8), (v40))
        {
          type metadata accessor for ListOfWeekdaysAndDosagesPickerDataSource(0);
          sub_1C2148320();
          swift_release();
          v33(v55, v8);
          return ((uint64_t (*)(char *, uint64_t))v33)(v54, v8);
        }
        uint64_t v26 = (void (*)(void *, void))sub_1C2149E80();
        uint64_t v7 = v41;
        uint64_t v11 = (char *)*v41;
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        *uint64_t v7 = (uint64_t)v11;
        if (result) {
          goto LABEL_8;
        }
        goto LABEL_13;
      }
    }
    __break(1u);
LABEL_13:
    uint64_t result = sub_1C1F814D8((unint64_t)v11);
    uint64_t v11 = (char *)result;
    *uint64_t v7 = result;
LABEL_8:
    if (*((void *)v11 + 2) <= v44)
    {
      __break(1u);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v51 + 24))(&v11[v43 + v42 + *(int *)(v52 + 20)], v53, v8);
      v26(v56, 0);
      ((void (*)(char *, uint64_t))v17)(v55, v8);
      ((void (*)(char *, uint64_t))v17)(v54, v8);
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_1C205D898@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  return sub_1C206363C(a1, a2, (uint64_t (*)(void))type metadata accessor for Dosage);
}

uint64_t sub_1C205D8CC(uint64_t a1, unint64_t a2)
{
  unint64_t v41 = a2;
  uint64_t v42 = (void *)type metadata accessor for Dosage();
  uint64_t v3 = (char *)*(v42 - 1);
  MEMORY[0x1F4188790](v42);
  uint64_t v40 = (uint64_t)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for WeekdaysAndDosages(0);
  uint64_t v38 = *(void *)(v5 - 8);
  uint64_t v39 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C2062448(0, &qword_1EA2C5650, (uint64_t (*)(uint64_t))type metadata accessor for Dosage, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (uint64_t)&v37 - v10;
  sub_1C2062448(0, &qword_1EBF0B1F0, MEMORY[0x1E4F27928], v8);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = (char *)&v37 - v13;
  uint64_t v15 = sub_1C2147AC0();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  uint64_t v19 = (char *)&v37 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v21 = (char *)&v37 - v20;
  uint64_t v22 = (char *)(a1 + 16);
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong) {
    goto LABEL_9;
  }
  uint64_t v37 = v21;
  uint64_t v21 = v3;
  uint64_t v3 = *(char **)(Strong + qword_1EA2C6008);
  swift_retain();
  swift_release();
  sub_1C2149E90();
  swift_release();
  if ((v41 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (*(void *)(v43[0] + 16) <= v41)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  sub_1C206363C(v43[0]+ ((*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80))+ *(void *)(v38 + 72) * v41, (uint64_t)v7, type metadata accessor for WeekdaysAndDosages);
  swift_bridgeObjectRelease();
  uint64_t v24 = *(void *)&v7[*(int *)(v39 + 24)];
  swift_bridgeObjectRetain();
  sub_1C20636A4((uint64_t)v7, type metadata accessor for WeekdaysAndDosages);
  uint64_t v25 = *(void *)(v24 + 16);
  if (v25)
  {
    uint64_t v3 = v21;
    sub_1C206363C(v24+ ((v21[80] + 32) & ~(unint64_t)v21[80])+ *((void *)v21 + 9) * (v25 - 1), v11, (uint64_t (*)(void))type metadata accessor for Dosage);
    uint64_t v26 = 0;
  }
  else
  {
    uint64_t v26 = 1;
    uint64_t v3 = v21;
  }
  uint64_t v27 = v42;
  (*((void (**)(uint64_t, uint64_t, uint64_t, void *))v3 + 7))(v11, v26, 1, v42);
  swift_bridgeObjectRelease();
  int v28 = (*((uint64_t (**)(uint64_t, uint64_t, void *))v3 + 6))(v11, 1, v27);
  uint64_t v21 = v37;
  if (v28 == 1)
  {
    sub_1C2063820(v11, &qword_1EA2C5650, (uint64_t (*)(uint64_t))type metadata accessor for Dosage);
LABEL_9:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v14, 1, 1, v15);
    uint64_t v27 = v42;
LABEL_10:
    sub_1C2147AB0();
    sub_1C2063820((uint64_t)v14, &qword_1EBF0B1F0, MEMORY[0x1E4F27928]);
    goto LABEL_11;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v19, v11 + *((int *)v27 + 5), v15);
  sub_1C20636A4(v11, (uint64_t (*)(void))type metadata accessor for Dosage);
  sub_1C21479D0();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v19, v15);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v14, 0, 1, v15);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1) {
    goto LABEL_10;
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v21, v14, v15);
LABEL_11:
  swift_beginAccess();
  if (!swift_weakLoadStrong()) {
    return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v21, v15);
  }
  swift_retain();
  swift_release();
  uint64_t v29 = v40;
  (*(void (**)(uint64_t, char *, uint64_t))(v16 + 16))(v40 + *((int *)v27 + 5), v21, v15);
  sub_1C2147B10();
  *(void *)(v29 + *((int *)v27 + 6)) = 0x3FF0000000000000;
  uint64_t v19 = (char *)sub_1C2149E80();
  uint64_t v22 = v30;
  uint64_t v7 = *(char **)v30;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)uint64_t v22 = v7;
  if (isUniquelyReferenced_nonNull_native)
  {
    unint64_t v32 = v41;
    if ((v41 & 0x8000000000000000) == 0) {
      goto LABEL_14;
    }
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
LABEL_24:
  uint64_t v7 = (char *)sub_1C1F814D8((unint64_t)v7);
  *(void *)uint64_t v22 = v7;
  unint64_t v32 = v41;
  if ((v41 & 0x8000000000000000) != 0) {
    goto LABEL_25;
  }
LABEL_14:
  if (*((void *)v7 + 2) <= v32)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  uint64_t v42 = v19;
  uint64_t v22 = &v7[((*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80))
          + *(void *)(v38 + 72) * v32];
  uint64_t v11 = *(int *)(v39 + 24);
  uint64_t v7 = *(char **)&v22[v11];
  char v33 = swift_isUniquelyReferenced_nonNull_native();
  *(void *)&v22[v11] = v7;
  uint64_t v19 = v21;
  uint64_t v14 = v3;
  if ((v33 & 1) == 0)
  {
LABEL_27:
    uint64_t v7 = (char *)sub_1C1F3AA7C(0, *((void *)v7 + 2) + 1, 1, (unint64_t)v7);
    *(void *)&v22[v11] = v7;
  }
  unint64_t v35 = *((void *)v7 + 2);
  unint64_t v34 = *((void *)v7 + 3);
  if (v35 >= v34 >> 1)
  {
    uint64_t v7 = (char *)sub_1C1F3AA7C(v34 > 1, v35 + 1, 1, (unint64_t)v7);
    *(void *)&v22[v11] = v7;
  }
  *((void *)v7 + 2) = v35 + 1;
  sub_1C2063890(v40, (uint64_t)&v7[((v14[80] + 32) & ~(unint64_t)v14[80])+ *((void *)v14 + 9) * v35], (uint64_t (*)(void))type metadata accessor for Dosage);
  ((void (*)(uint64_t *, void))v42)(v43, 0);
  swift_release();
  uint64_t v21 = v19;
  return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v21, v15);
}

uint64_t sub_1C205E060(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8 = sub_1C214A3F0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v40 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1C214A420();
  uint64_t v39 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v38 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = type metadata accessor for WeekdaysAndDosages(0);
  uint64_t v13 = *(void *)(v42 - 8);
  uint64_t v14 = MEMORY[0x1F4188790](v42);
  uint64_t v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v18 = (char *)&v33 - v17;
  uint64_t v37 = a3;
  sub_1C2149E90();
  if ((a4 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v36 = v11;
  if (*(void *)(v44 + 16) <= a4)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v34 = v9;
  uint64_t v35 = v8;
  unint64_t v41 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v19 = *(void *)(v13 + 72) * a4;
  sub_1C206363C(v44 + v41 + v19, (uint64_t)v18, type metadata accessor for WeekdaysAndDosages);
  uint64_t v20 = swift_bridgeObjectRelease();
  uint64_t v21 = *(void *)&v18[*(int *)(v42 + 24)];
  MEMORY[0x1F4188790](v20);
  *(&v33 - 2) = a1;
  *(&v33 - 1) = a2;
  swift_bridgeObjectRetain();
  uint64_t v22 = (void *)sub_1C205A5E0((void (*)(void))sub_1C2063738, (uint64_t)(&v33 - 4), v21);
  swift_bridgeObjectRelease();
  sub_1C20636A4((uint64_t)v18, type metadata accessor for WeekdaysAndDosages);
  aBlock[0] = v22;
  swift_bridgeObjectRetain();
  sub_1C205AD44(aBlock);
  swift_bridgeObjectRelease();
  uint64_t v23 = aBlock[0];
  sub_1C2149E90();
  if (aBlock[0][2] <= a4)
  {
LABEL_10:
    __break(1u);
    uint64_t result = swift_release();
    __break(1u);
    return result;
  }
  sub_1C206363C((uint64_t)aBlock[0] + v41 + v19, (uint64_t)v16, type metadata accessor for WeekdaysAndDosages);
  swift_bridgeObjectRelease();
  uint64_t v24 = *(void *)&v16[*(int *)(v42 + 24)];
  swift_bridgeObjectRetain();
  sub_1C20636A4((uint64_t)v16, type metadata accessor for WeekdaysAndDosages);
  BOOL v25 = sub_1C1FC1E38((uint64_t)v23, v24);
  swift_bridgeObjectRelease();
  if (v25) {
    return swift_release();
  }
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0CB10);
  uint64_t v27 = (void *)sub_1C214AD80();
  int v28 = (void *)swift_allocObject();
  void v28[2] = v37;
  v28[3] = a4;
  v28[4] = v23;
  aBlock[4] = sub_1C2063794;
  aBlock[5] = v28;
  aBlock[0] = (void *)MEMORY[0x1E4F143A8];
  aBlock[1] = (void *)1107296256;
  aBlock[2] = sub_1C1F0E42C;
  void aBlock[3] = &block_descriptor_21;
  uint64_t v29 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  uint64_t v30 = v38;
  sub_1C214A410();
  aBlock[0] = (void *)MEMORY[0x1E4FBC860];
  sub_1C2063998((unint64_t *)&qword_1EBF0CAE0, MEMORY[0x1E4FBCB00]);
  sub_1C2062448(0, (unint64_t *)&qword_1EBF0CAF0, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
  sub_1C1F12754();
  uint64_t v31 = v40;
  uint64_t v32 = v35;
  sub_1C214B640();
  MEMORY[0x1C8752F10](0, v30, v31, v29);
  _Block_release(v29);

  (*(void (**)(char *, uint64_t))(v34 + 8))(v31, v32);
  return (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v30, v36);
}

uint64_t sub_1C205E5F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  type metadata accessor for DosageItem(0);
  if (sub_1C2147AF0()) {
    return sub_1C20637A0(a2, a3, &qword_1EA2C5650, (uint64_t (*)(uint64_t))type metadata accessor for Dosage);
  }
  sub_1C206363C(a1, a3, (uint64_t (*)(void))type metadata accessor for Dosage);
  uint64_t v7 = type metadata accessor for Dosage();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(a3, 0, 1, v7);
}

uint64_t sub_1C205E6E4(uint64_t a1, unint64_t a2, uint64_t a3)
{
  swift_bridgeObjectRetain();
  uint64_t v5 = (uint64_t (*)(uint64_t *, void))sub_1C2149E80();
  uint64_t v7 = v6;
  unint64_t v8 = *v6;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v7 = v8;
  if (result)
  {
    if ((a2 & 0x8000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  uint64_t result = sub_1C1F814D8(v8);
  unint64_t v8 = result;
  *uint64_t v7 = result;
  if ((a2 & 0x8000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if (*(void *)(v8 + 16) > a2)
  {
    uint64_t v10 = type metadata accessor for WeekdaysAndDosages(0);
    *(void *)(v8
              + ((*(unsigned __int8 *)(*(void *)(v10 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v10 - 8) + 80))
              + *(void *)(*(void *)(v10 - 8) + 72) * a2
              + *(int *)(v10 + 24)) = a3;
    swift_bridgeObjectRelease();
    return v5(&v11, 0);
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1C205E808(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    swift_retain();
    uint64_t v6 = swift_release();
    MEMORY[0x1F4188790](v6);
    uint64_t v7 = (void (*)(unsigned char *, void))sub_1C2149E80();
    uint64_t v9 = v8;
    unint64_t v10 = *v8;
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    *uint64_t v9 = v10;
    if (result)
    {
      if ((a4 & 0x8000000000000000) == 0) {
        goto LABEL_4;
      }
    }
    else
    {
      uint64_t result = sub_1C1F814D8(v10);
      unint64_t v10 = result;
      *uint64_t v9 = result;
      if ((a4 & 0x8000000000000000) == 0)
      {
LABEL_4:
        if (*(void *)(v10 + 16) > a4)
        {
          uint64_t v11 = type metadata accessor for WeekdaysAndDosages(0);
          unint64_t v12 = v10
              + ((*(unsigned __int8 *)(*(void *)(v11 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v11 - 8) + 80))
              + *(void *)(*(void *)(v11 - 8) + 72) * a4
              + *(int *)(v11 + 24);
          uint64_t result = sub_1C2062774((uint64_t (*)(unint64_t))sub_1C2063704);
          int64_t v13 = *(void *)(*(void *)v12 + 16);
          if (v13 >= result)
          {
            sub_1C1F84828(result, v13);
            v7(v14, 0);
            return swift_release();
          }
LABEL_11:
          __break(1u);
          return result;
        }
LABEL_10:
        __break(1u);
        goto LABEL_11;
      }
    }
    __break(1u);
    goto LABEL_10;
  }
  return result;
}

uint64_t sub_1C205E9CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    uint64_t v9 = type metadata accessor for DosageItem(0);
    char v10 = sub_1C2062AF8(a6, a1 + *(int *)(v9 + 28), a2);
    swift_release();
  }
  else
  {
    char v10 = 0;
  }
  return v10 & 1;
}

uint64_t sub_1C205EA64()
{
  uint64_t v0 = sub_1C2147B20();
  uint64_t v43 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v2 = (char *)v36 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1C2147AC0();
  uint64_t v39 = *(void *)(v3 - 8);
  uint64_t v40 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1C21496A0();
  uint64_t v41 = *(void *)(v6 - 8);
  uint64_t v42 = v6;
  MEMORY[0x1F4188790](v6);
  unint64_t v8 = (char *)v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for WeekdaysAndDosages(0);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  int64_t v13 = (char *)v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v15 = (void *)((char *)v36 - v14);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v17 = result;
    uint64_t v38 = v10;
    sub_1C205EF80(v8);
    sub_1C2062448(0, (unint64_t *)&qword_1EA2C3220, (uint64_t (*)(uint64_t))type metadata accessor for Dosage, MEMORY[0x1E4FBBE00]);
    uint64_t v18 = type metadata accessor for Dosage();
    v36[1] = v17;
    uint64_t v19 = v18 - 8;
    unint64_t v20 = (*(unsigned __int8 *)(*(void *)(v18 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v18 - 8) + 80);
    uint64_t v21 = swift_allocObject();
    uint64_t v37 = v13;
    uint64_t v22 = v21;
    *(_OWORD *)(v21 + 16) = xmmword_1C214FCD0;
    unint64_t v23 = v21 + v20;
    sub_1C2147AB0();
    sub_1C2147B10();
    uint64_t v24 = v43;
    (*(void (**)(unint64_t, char *, uint64_t))(v43 + 32))(v23, v2, v0);
    (*(void (**)(unint64_t, char *, uint64_t))(v39 + 32))(v23 + *(int *)(v19 + 28), v5, v40);
    *(void *)(v23 + *(int *)(v19 + 32)) = 0x3FF0000000000000;
    sub_1C2147B10();
    uint64_t v25 = sub_1C2147AD0();
    uint64_t v27 = v26;
    (*(void (**)(char *, uint64_t))(v24 + 8))(v2, v0);
    uint64_t *v15 = v25;
    v15[1] = v27;
    (*(void (**)(char *, char *, uint64_t))(v41 + 32))((char *)v15 + *(int *)(v9 + 20), v8, v42);
    *(uint64_t *)((char *)v15 + *(int *)(v9 + 24)) = v22;
    uint64_t v28 = (uint64_t)v37;
    sub_1C206363C((uint64_t)v15, (uint64_t)v37, type metadata accessor for WeekdaysAndDosages);
    uint64_t v29 = (void (*)(char *, void))sub_1C2149E80();
    uint64_t v31 = v30;
    unint64_t v32 = *v30;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *uint64_t v31 = v32;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      unint64_t v32 = sub_1C1F3AA34(0, *(void *)(v32 + 16) + 1, 1, v32);
      *uint64_t v31 = v32;
    }
    unint64_t v35 = *(void *)(v32 + 16);
    unint64_t v34 = *(void *)(v32 + 24);
    if (v35 >= v34 >> 1)
    {
      unint64_t v32 = sub_1C1F3AA34(v34 > 1, v35 + 1, 1, v32);
      *uint64_t v31 = v32;
    }
    *(void *)(v32 + 16) = v35 + 1;
    sub_1C2063890(v28, v32+ ((*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80))+ *(void *)(v38 + 72) * v35, type metadata accessor for WeekdaysAndDosages);
    v29(v44, 0);
    sub_1C20636A4((uint64_t)v15, type metadata accessor for WeekdaysAndDosages);
    return swift_release();
  }
  return result;
}

uint64_t sub_1C205EF80@<X0>(char *a1@<X8>)
{
  uint64_t v48 = a1;
  uint64_t v52 = sub_1C2147CF0();
  uint64_t v50 = *(void *)(v52 - 8);
  MEMORY[0x1F4188790](v52);
  id v49 = (char *)&v47 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C2062448(0, &qword_1EA2C3940, MEMORY[0x1E4F66D20], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v51 = (char *)&v47 - v4;
  sub_1C2062448(0, (unint64_t *)&qword_1EBF0C5F8, MEMORY[0x1E4F66D28], v2);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v53 = (char *)&v47 - v6;
  uint64_t v7 = sub_1C21496A0();
  uint64_t v54 = *(void *)(v7 - 8);
  uint64_t v8 = v54;
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v47 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  int64_t v13 = (char *)&v47 - v12;
  uint64_t v14 = MEMORY[0x1F4188790](v11);
  uint64_t v16 = (char *)&v47 - v15;
  uint64_t v17 = MEMORY[0x1F4188790](v14);
  uint64_t v19 = (char *)&v47 - v18;
  uint64_t v20 = MEMORY[0x1F4188790](v17);
  uint64_t v22 = (char *)&v47 - v21;
  uint64_t v23 = MEMORY[0x1F4188790](v20);
  uint64_t v25 = (char *)&v47 - v24;
  uint64_t v26 = MEMORY[0x1F4188790](v23);
  uint64_t v28 = (char *)&v47 - v27;
  MEMORY[0x1F4188790](v26);
  uint64_t v30 = (char *)&v47 - v29;
  sub_1C2149630();
  sub_1C205B0F8((uint64_t)v25);
  uint64_t v31 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
  v31(v22, v28, v7);
  v31(v16, v28, v7);
  v31(v13, v25, v7);
  sub_1C2063998(&qword_1EA2C3B98, MEMORY[0x1E4F66D28]);
  sub_1C214B5E0();
  sub_1C214B5C0();
  unint64_t v32 = *(void (**)(char *, uint64_t))(v54 + 8);
  v32(v19, v7);
  v32(v25, v7);
  v32(v28, v7);
  uint64_t v33 = v49;
  sub_1C2147CB0();
  uint64_t v34 = sub_1C21495A0();
  (*(void (**)(char *, uint64_t))(v50 + 8))(v33, v52);
  uint64_t v35 = *(void *)(v34 + 16);
  uint64_t v36 = sub_1C21495D0();
  uint64_t v37 = *(void *)(v36 - 8);
  if (v35)
  {
    uint64_t v38 = (uint64_t)v51;
    (*(void (**)(char *, unint64_t, uint64_t))(*(void *)(v36 - 8) + 16))(v51, v34+ ((*(unsigned __int8 *)(*(void *)(v36 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v36 - 8) + 80)), v36);
    uint64_t v39 = 0;
  }
  else
  {
    uint64_t v39 = 1;
    uint64_t v38 = (uint64_t)v51;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v37 + 56))(v38, v39, 1, v36);
  swift_bridgeObjectRelease();
  int v40 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v37 + 48))(v38, 1, v36);
  uint64_t v41 = (uint64_t)v53;
  if (v40 == 1)
  {
    sub_1C2063820(v38, &qword_1EA2C3940, MEMORY[0x1E4F66D20]);
    uint64_t v42 = 1;
  }
  else
  {
    sub_1C21495B0();
    (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v38, v36);
    uint64_t v42 = 0;
  }
  uint64_t v43 = v47;
  uint64_t v44 = v54;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v54 + 56))(v41, v42, 1, v7);
  uint64_t v45 = *(void (**)(char *, char *, uint64_t))(v44 + 32);
  v45(v43, v30, v7);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v44 + 48))(v41, 1, v7) == 1)
  {
    v45(v48, v43, v7);
    return sub_1C2063820(v41, (unint64_t *)&qword_1EBF0C5F8, MEMORY[0x1E4F66D28]);
  }
  else
  {
    v32(v43, v7);
    return ((uint64_t (*)(char *, uint64_t, uint64_t))v45)(v48, v41, v7);
  }
}

void sub_1C205F5C4()
{
}

uint64_t sub_1C205F5F4()
{
  sub_1C20215D4(*(void *)(v0 + qword_1EA2C6000), *(void *)(v0 + qword_1EA2C6000 + 8));
  swift_release();
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1C205F670()
{
  uint64_t v0 = sub_1C2148610();

  sub_1C20215D4(*(void *)(v0 + qword_1EA2C6000), *(void *)(v0 + qword_1EA2C6000 + 8));
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_1C205F70C()
{
  return type metadata accessor for ListOfWeekdaysAndDosagesPickerDataSource(0);
}

uint64_t type metadata accessor for ButtonBackgroundColorCell(uint64_t a1)
{
  return sub_1C1F20D10(a1, (uint64_t *)&unk_1EA2C6030);
}

uint64_t sub_1C205F734()
{
  return swift_initClassMetadata2();
}

id sub_1C205F778()
{
  sub_1C2062448(0, &qword_1EBF0C920, MEMORY[0x1E4FB1290], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v34 = (char *)&v31 - v1;
  uint64_t v33 = sub_1C214B2C0();
  uint64_t v2 = *(void *)(v33 - 8);
  MEMORY[0x1F4188790](v33);
  uint64_t v4 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1C214B280();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1C214B350();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1C214B3D0();
  uint64_t v32 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C214B3B0();
  (*(void (**)(char *, void, uint64_t))(v10 + 104))(v12, *MEMORY[0x1E4FB1268], v9);
  sub_1C214B270();
  uint64_t v16 = v5;
  uint64_t v17 = v15;
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E4FB1218], v16);
  sub_1C214B290();
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E4FB1238], v33);
  uint64_t v18 = v32;
  sub_1C214B2E0();
  id v19 = objc_msgSend(self, sel_buttonWithType_, 1);
  uint64_t v20 = v34;
  (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v34, v17, v13);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v20, 0, 1, v13);
  sub_1C214B400();
  objc_msgSend(v19, sel_setAdjustsImageSizeForAccessibilityContentSizeCategory_, 1);
  id v21 = objc_msgSend(self, sel_systemBlueColor);
  objc_msgSend(v19, sel_setTintColor_, v21);

  id v22 = objc_msgSend(v19, sel_titleLabel);
  objc_msgSend(v22, sel_setAdjustsFontForContentSizeCategory_, 1);

  id v23 = objc_msgSend(v19, sel_titleLabel);
  if (v23)
  {
    uint64_t v24 = v23;
    id v25 = objc_msgSend(self, sel_preferredFontForTextStyle_, *MEMORY[0x1E4FB28C8]);
    objc_msgSend(v24, sel_setFont_, v25);
  }
  id v26 = objc_msgSend(v19, sel_titleLabel);
  if (v26)
  {
    uint64_t v27 = v26;
    objc_msgSend(v26, sel_setTextAlignment_, 1);
  }
  id v28 = objc_msgSend(v19, sel_titleLabel);
  if (v28)
  {
    uint64_t v29 = v28;
    objc_msgSend(v28, sel_setNumberOfLines_, 1);
  }
  objc_msgSend(v19, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v17, v13);
  return v19;
}

id sub_1C205FC94(void *a1, uint64_t a2, uint64_t a3)
{
  v5.receiver = a1;
  v5.super_class = (Class)type metadata accessor for ButtonBackgroundColorCell(0);
  return objc_msgSendSuper2(&v5, sel_initWithCoder_, a3);
}

id sub_1C205FCE0()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ButtonBackgroundColorCell(0);
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1C205FD18()
{
  return type metadata accessor for ButtonBackgroundColorCell(0);
}

uint64_t *sub_1C205FD20(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1C21496A0();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    *(uint64_t *)((char *)v4 + *(int *)(a3 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 24));
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_1C205FE28(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_1C21496A0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);

  return swift_bridgeObjectRelease();
}

void *sub_1C205FEB4(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1C21496A0();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  *(void *)((char *)a1 + *(int *)(a3 + 24)) = *(void *)((char *)a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_1C205FF6C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1C21496A0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  *(void *)((char *)a1 + *(int *)(a3 + 24)) = *(void *)((char *)a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *sub_1C206002C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1C21496A0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  *(void *)((char *)a1 + *(int *)(a3 + 24)) = *(void *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

void *sub_1C20600C4(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1C21496A0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  *(void *)((char *)a1 + *(int *)(a3 + 24)) = *(void *)((char *)a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C206016C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C2060180);
}

uint64_t sub_1C2060180(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1C21496A0();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1C2060230(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C2060244);
}

uint64_t sub_1C2060244(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1C21496A0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for WeekdaysAndDosages(uint64_t a1)
{
  return sub_1C1F20D10(a1, (uint64_t *)&unk_1EA2C6040);
}

uint64_t sub_1C206030C()
{
  uint64_t result = sub_1C21496A0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1C20603B0()
{
  return sub_1C214ACC0();
}

uint64_t sub_1C20604F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v5;
  uint64_t v32 = sub_1C2147D90();
  uint64_t v11 = *(void *)(v32 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  MEMORY[0x1F4188790](v32);
  if (sub_1C214A5F0() == a1 && v13 == a2)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v15 = sub_1C214BA80();
    swift_bridgeObjectRelease();
    if ((v15 & 1) == 0)
    {
      a4[3] = sub_1C2148220();
      a4[4] = sub_1C2063998(&qword_1EA2C2D28, MEMORY[0x1E4F66330]);
      __swift_allocate_boxed_opaque_existential_1(a4);
      return sub_1C2148210();
    }
  }
  uint64_t v30 = v10;
  uint64_t v31 = a4;
  sub_1C2147D80();
  if (qword_1EBF0CA00 != -1) {
    swift_once();
  }
  id v17 = (id)qword_1EBF0CA18;
  swift_bridgeObjectRetain();
  uint64_t v29 = sub_1C2147730();
  uint64_t v19 = v18;
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  BOOL v20 = sub_1C2147D80() != 0;
  uint64_t v21 = swift_allocObject();
  swift_weakInit();
  uint64_t v22 = v32;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), a3, v32);
  unint64_t v23 = (*(unsigned __int8 *)(v11 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v24 = swift_allocObject();
  *(void *)(v24 + 16) = v21;
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v24 + v23, (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v22);
  *(void *)(v24 + ((v12 + v23 + 7) & 0xFFFFFFFFFFFFFFF8)) = v30;
  type metadata accessor for ScheduleHeaderCell();
  sub_1C2063998(&qword_1EA2C4C60, (void (*)(uint64_t))type metadata accessor for ScheduleHeaderCell);
  swift_retain();
  uint64_t v25 = sub_1C21481D0();
  uint64_t v27 = v26;
  sub_1C21481D0();
  swift_release();
  swift_bridgeObjectRelease();
  id v28 = v31;
  v31[3] = (uint64_t)&type metadata for ScheduleHeaderItem;
  v28[4] = sub_1C1FDDC00();
  uint64_t result = swift_allocObject();
  *id v28 = result;
  *(void *)(result + 16) = v29;
  *(void *)(result + 24) = v19;
  *(unsigned char *)(result + 32) = v20;
  *(void *)(result + 40) = sub_1C20610B4;
  *(void *)(result + 48) = v24;
  *(void *)(result + 56) = v25;
  *(void *)(result + 64) = v27;
  return result;
}

uint64_t sub_1C20608E4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_1C2147D90();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1C21497F0();
  uint64_t v29 = *(void *)(v7 - 8);
  uint64_t v30 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2062448(0, &qword_1EA2C6058, type metadata accessor for WeekdaysAndDosages, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v27 - v11;
  swift_beginAccess();
  if (!swift_weakLoadStrong()
    || (swift_retain(),
        swift_release(),
        sub_1C2149E90(),
        swift_release(),
        uint64_t v13 = *(void *)(v31[0] + 16),
        swift_bridgeObjectRelease(),
        uint64_t v14 = sub_1C2147D80(),
        v14 < 0)
    || v14 >= v13)
  {
    sub_1C21497A0();
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a2, v3);
    uint64_t v18 = sub_1C21497E0();
    os_log_type_t v19 = sub_1C214ABD0();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = swift_slowAlloc();
      uint64_t v21 = swift_slowAlloc();
      v31[0] = v21;
      *(_DWORD *)uint64_t v20 = 136446466;
      uint64_t v22 = sub_1C214BC10();
      uint64_t v28 = v3;
      uint64_t v32 = sub_1C1F6FD54(v22, v23, v31);
      sub_1C214B530();
      swift_bridgeObjectRelease();
      *(_WORD *)(v20 + 12) = 2050;
      uint64_t v24 = sub_1C2147D80();
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v28);
      uint64_t v32 = v24;
      sub_1C214B530();
      _os_log_impl(&dword_1C1F0B000, v18, v19, "%{public}s Attempting to remove out of bounds section: %{public}ld ", (uint8_t *)v20, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C8754730](v21, -1, -1);
      MEMORY[0x1C8754730](v20, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v9, v30);
  }
  else
  {
    swift_beginAccess();
    if (swift_weakLoadStrong())
    {
      swift_retain();
      swift_release();
      unint64_t v15 = sub_1C2147D80();
      uint64_t v16 = (void (*)(uint64_t *, void))sub_1C2149E80();
      sub_1C205AAEC(v15, (uint64_t)v12);
      v16(v31, 0);
      swift_release();
      uint64_t v17 = type metadata accessor for WeekdaysAndDosages(0);
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v12, 0, 1, v17);
    }
    else
    {
      uint64_t v26 = type metadata accessor for WeekdaysAndDosages(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v12, 1, 1, v26);
    }
    return sub_1C2063820((uint64_t)v12, &qword_1EA2C6058, type metadata accessor for WeekdaysAndDosages);
  }
}

uint64_t sub_1C2060DCC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  return sub_1C20604F0(a1, a2, a3, a4);
}

uint64_t sub_1C2060DF0()
{
  uint64_t v0 = sub_1C2148710();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1C2148800();
  type metadata accessor for ListOfWeekdaysAndDosagesPickerDataSource(0);
  uint64_t result = sub_1C2148350();
  if (__OFSUB__(result, 1))
  {
    __break(1u);
  }
  else
  {
    if (v4 == result - 1) {
      sub_1C2148690();
    }
    else {
      sub_1C2148660();
    }
    sub_1C21487F0();
    uint64_t v6 = (void *)sub_1C2148700();
    swift_unknownObjectRelease();
    sub_1C214AEA0();
    objc_msgSend(v6, sel_setContentInsets_);
    objc_msgSend(v6, sel_contentInsets);
    objc_msgSend(v6, sel_setContentInsets_);
    objc_msgSend(v6, sel_setContentInsetsReference_, 1);
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    return (uint64_t)v6;
  }
  return result;
}

uint64_t sub_1C2060F80()
{
  return sub_1C2060DF0();
}

uint64_t sub_1C2060FA4()
{
  swift_weakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C2060FDC()
{
  uint64_t v1 = sub_1C2147D90();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x1F4186498](v0, v6, v5);
}

uint64_t sub_1C20610B4()
{
  uint64_t v1 = *(void *)(sub_1C2147D90() - 8);
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  return sub_1C20608E4(v2, v3);
}

uint64_t sub_1C2061144()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 72, 7);
}

uint64_t sub_1C206118C(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v141 = type metadata accessor for Dosage();
  uint64_t v134 = *(void *)(v141 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v141);
  uint64_t v131 = (uint64_t)&v125 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  uint64_t v142 = (uint64_t)&v125 - v7;
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v138 = (uint64_t)&v125 - v9;
  MEMORY[0x1F4188790](v8);
  uint64_t v137 = (uint64_t)&v125 - v10;
  uint64_t v11 = a1[1];
  uint64_t result = sub_1C214BA30();
  if (result >= v11)
  {
    if (v11 < 0) {
      goto LABEL_142;
    }
    if (v11) {
      return sub_1C2061C68(0, v11, 1, a1);
    }
    return result;
  }
  if (v11 >= 0) {
    uint64_t v13 = v11;
  }
  else {
    uint64_t v13 = v11 + 1;
  }
  if (v11 < -1) {
    goto LABEL_150;
  }
  uint64_t v127 = result;
  if (v11 < 2)
  {
    uint64_t v17 = MEMORY[0x1E4FBC860];
    unint64_t v133 = MEMORY[0x1E4FBC860]
         + ((*(unsigned __int8 *)(v134 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v134 + 80));
    if (v11 != 1)
    {
      unint64_t v20 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      os_log_type_t v19 = (char *)MEMORY[0x1E4FBC860];
LABEL_107:
      uint64_t v126 = v17;
      if (v20 >= 2)
      {
        uint64_t v117 = *a1;
        do
        {
          unint64_t v118 = v20 - 2;
          if (v20 < 2) {
            goto LABEL_137;
          }
          if (!v117) {
            goto LABEL_149;
          }
          id v119 = v19;
          unint64_t v120 = v19 + 32;
          uint64_t v121 = *(void *)&v19[16 * v118 + 32];
          uint64_t v122 = *(void *)&v19[16 * v20 + 24];
          sub_1C2061F2C(v117 + *(void *)(v134 + 72) * v121, v117 + *(void *)(v134 + 72) * *(void *)&v120[16 * v20 - 16], v117 + *(void *)(v134 + 72) * v122, v133);
          if (v2) {
            break;
          }
          if (v122 < v121) {
            goto LABEL_138;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            id v119 = sub_1C20FB150((uint64_t)v119);
          }
          if (v118 >= *((void *)v119 + 2)) {
            goto LABEL_139;
          }
          unint64_t v123 = &v119[16 * v118 + 32];
          *(void *)unint64_t v123 = v121;
          *((void *)v123 + 1) = v122;
          unint64_t v124 = *((void *)v119 + 2);
          if (v20 > v124) {
            goto LABEL_140;
          }
          os_log_type_t v19 = v119;
          memmove(&v119[16 * v20 + 16], &v119[16 * v20 + 32], 16 * (v124 - v20));
          *((void *)v119 + 2) = v124 - 1;
          unint64_t v20 = v124 - 1;
        }
        while (v124 > 2);
      }
LABEL_118:
      swift_bridgeObjectRelease();
      *(void *)(v126 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v126 = MEMORY[0x1E4FBC860];
  }
  else
  {
    uint64_t v14 = v13 >> 1;
    uint64_t v15 = sub_1C214A810();
    *(void *)(v15 + 16) = v14;
    uint64_t v16 = *(unsigned __int8 *)(v134 + 80);
    uint64_t v126 = v15;
    unint64_t v133 = v15 + ((v16 + 32) & ~v16);
  }
  uint64_t v18 = 0;
  os_log_type_t v19 = (char *)MEMORY[0x1E4FBC860];
  id v140 = a1;
  while (1)
  {
    uint64_t v21 = v18;
    uint64_t v22 = v18 + 1;
    uint64_t v132 = v18;
    if (v18 + 1 >= v11)
    {
      uint64_t v39 = v18 + 1;
      goto LABEL_59;
    }
    uint64_t v129 = v2;
    uint64_t v23 = *(void *)(v134 + 72);
    uint64_t v24 = *a1 + v23 * v22;
    uint64_t v136 = *a1;
    uint64_t v25 = v136;
    uint64_t v26 = v137;
    sub_1C206363C(v24, v137, (uint64_t (*)(void))type metadata accessor for Dosage);
    uint64_t v27 = v25 + v23 * v21;
    uint64_t v28 = v138;
    sub_1C206363C(v27, v138, (uint64_t (*)(void))type metadata accessor for Dosage);
    LODWORD(v139) = sub_1C2147A20();
    sub_1C20636A4(v28, (uint64_t (*)(void))type metadata accessor for Dosage);
    uint64_t v29 = v26;
    uint64_t v30 = v136;
    sub_1C20636A4(v29, (uint64_t (*)(void))type metadata accessor for Dosage);
    uint64_t v143 = v23;
    if (v21 + 2 >= v11)
    {
      uint64_t v33 = v21 + 2;
    }
    else
    {
      uint64_t v31 = v23;
      uint64_t v128 = v19;
      uint64_t v32 = v23 * v22;
      uint64_t v33 = v21 + 2;
      uint64_t v34 = v31 * (v21 + 2);
      while (1)
      {
        uint64_t v35 = v11;
        uint64_t v36 = v137;
        sub_1C206363C(v30 + v34, v137, (uint64_t (*)(void))type metadata accessor for Dosage);
        uint64_t v37 = v138;
        sub_1C206363C(v30 + v32, v138, (uint64_t (*)(void))type metadata accessor for Dosage);
        int v38 = sub_1C2147A20();
        sub_1C20636A4(v37, (uint64_t (*)(void))type metadata accessor for Dosage);
        sub_1C20636A4(v36, (uint64_t (*)(void))type metadata accessor for Dosage);
        if ((v139 ^ v38)) {
          break;
        }
        v30 += v143;
        ++v33;
        uint64_t v11 = v35;
        if (v35 == v33)
        {
          uint64_t v33 = v35;
          os_log_type_t v19 = v128;
          uint64_t v21 = v132;
          goto LABEL_25;
        }
      }
      os_log_type_t v19 = v128;
      uint64_t v21 = v132;
      uint64_t v11 = v35;
    }
LABEL_25:
    a1 = v140;
    if ((v139 & 1) == 0)
    {
      uint64_t v39 = v33;
      goto LABEL_39;
    }
    if (v33 < v21) {
      goto LABEL_143;
    }
    uint64_t v39 = v33;
    if (v21 < v33) {
      break;
    }
LABEL_39:
    uint64_t v2 = v129;
    if (v39 < v11) {
      goto LABEL_42;
    }
LABEL_59:
    if (v39 < v21) {
      goto LABEL_136;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v139 = v39;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      os_log_type_t v19 = sub_1C20FADDC(0, *((void *)v19 + 2) + 1, 1, v19);
    }
    unint64_t v66 = *((void *)v19 + 2);
    unint64_t v65 = *((void *)v19 + 3);
    unint64_t v20 = v66 + 1;
    if (v66 >= v65 >> 1) {
      os_log_type_t v19 = sub_1C20FADDC((char *)(v65 > 1), v66 + 1, 1, v19);
    }
    *((void *)v19 + 2) = v20;
    uint64_t v67 = v19 + 32;
    unint64_t v68 = &v19[16 * v66 + 32];
    uint64_t v69 = v139;
    *(void *)unint64_t v68 = v21;
    *((void *)v68 + 1) = v69;
    if (v66)
    {
      while (1)
      {
        unint64_t v70 = v20 - 1;
        if (v20 >= 4)
        {
          uint64_t v75 = &v67[16 * v20];
          uint64_t v76 = *((void *)v75 - 8);
          uint64_t v77 = *((void *)v75 - 7);
          BOOL v81 = __OFSUB__(v77, v76);
          uint64_t v78 = v77 - v76;
          if (v81) {
            goto LABEL_125;
          }
          uint64_t v80 = *((void *)v75 - 6);
          uint64_t v79 = *((void *)v75 - 5);
          BOOL v81 = __OFSUB__(v79, v80);
          uint64_t v73 = v79 - v80;
          char v74 = v81;
          if (v81) {
            goto LABEL_126;
          }
          unint64_t v82 = v20 - 2;
          uint64_t v83 = &v67[16 * v20 - 32];
          uint64_t v85 = *(void *)v83;
          uint64_t v84 = *((void *)v83 + 1);
          BOOL v81 = __OFSUB__(v84, v85);
          uint64_t v86 = v84 - v85;
          if (v81) {
            goto LABEL_128;
          }
          BOOL v81 = __OFADD__(v73, v86);
          uint64_t v87 = v73 + v86;
          if (v81) {
            goto LABEL_131;
          }
          if (v87 >= v78)
          {
            uint64_t v105 = &v67[16 * v70];
            uint64_t v107 = *(void *)v105;
            uint64_t v106 = *((void *)v105 + 1);
            BOOL v81 = __OFSUB__(v106, v107);
            uint64_t v108 = v106 - v107;
            if (v81) {
              goto LABEL_135;
            }
            BOOL v98 = v73 < v108;
            goto LABEL_96;
          }
        }
        else
        {
          if (v20 != 3)
          {
            uint64_t v99 = *((void *)v19 + 4);
            uint64_t v100 = *((void *)v19 + 5);
            BOOL v81 = __OFSUB__(v100, v99);
            uint64_t v92 = v100 - v99;
            char v93 = v81;
            goto LABEL_90;
          }
          uint64_t v72 = *((void *)v19 + 4);
          uint64_t v71 = *((void *)v19 + 5);
          BOOL v81 = __OFSUB__(v71, v72);
          uint64_t v73 = v71 - v72;
          char v74 = v81;
        }
        if (v74) {
          goto LABEL_127;
        }
        unint64_t v82 = v20 - 2;
        uint64_t v88 = &v67[16 * v20 - 32];
        uint64_t v90 = *(void *)v88;
        uint64_t v89 = *((void *)v88 + 1);
        BOOL v91 = __OFSUB__(v89, v90);
        uint64_t v92 = v89 - v90;
        char v93 = v91;
        if (v91) {
          goto LABEL_130;
        }
        uint64_t v94 = &v67[16 * v70];
        uint64_t v96 = *(void *)v94;
        uint64_t v95 = *((void *)v94 + 1);
        BOOL v81 = __OFSUB__(v95, v96);
        uint64_t v97 = v95 - v96;
        if (v81) {
          goto LABEL_133;
        }
        if (__OFADD__(v92, v97)) {
          goto LABEL_134;
        }
        if (v92 + v97 >= v73)
        {
          BOOL v98 = v73 < v97;
LABEL_96:
          if (v98) {
            unint64_t v70 = v82;
          }
          goto LABEL_98;
        }
LABEL_90:
        if (v93) {
          goto LABEL_129;
        }
        uint64_t v101 = &v67[16 * v70];
        uint64_t v103 = *(void *)v101;
        uint64_t v102 = *((void *)v101 + 1);
        BOOL v81 = __OFSUB__(v102, v103);
        uint64_t v104 = v102 - v103;
        if (v81) {
          goto LABEL_132;
        }
        if (v104 < v92) {
          goto LABEL_15;
        }
LABEL_98:
        unint64_t v109 = v70 - 1;
        if (v70 - 1 >= v20)
        {
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
          goto LABEL_145;
        }
        uint64_t v110 = *a1;
        if (!*a1) {
          goto LABEL_147;
        }
        uint64_t v111 = v19;
        uint64_t v112 = &v67[16 * v109];
        uint64_t v113 = *(void *)v112;
        uint64_t v114 = &v67[16 * v70];
        uint64_t v115 = *((void *)v114 + 1);
        sub_1C2061F2C(v110 + *(void *)(v134 + 72) * *(void *)v112, v110 + *(void *)(v134 + 72) * *(void *)v114, v110 + *(void *)(v134 + 72) * v115, v133);
        if (v2) {
          goto LABEL_118;
        }
        if (v115 < v113) {
          goto LABEL_122;
        }
        if (v70 > *((void *)v111 + 2)) {
          goto LABEL_123;
        }
        *(void *)uint64_t v112 = v113;
        *(void *)&v67[16 * v109 + 8] = v115;
        unint64_t v116 = *((void *)v111 + 2);
        if (v70 >= v116) {
          goto LABEL_124;
        }
        os_log_type_t v19 = v111;
        unint64_t v20 = v116 - 1;
        memmove(&v67[16 * v70], v114 + 16, 16 * (v116 - 1 - v70));
        *((void *)v111 + 2) = v116 - 1;
        a1 = v140;
        if (v116 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v20 = 1;
LABEL_15:
    uint64_t v11 = a1[1];
    uint64_t v18 = v139;
    if (v139 >= v11)
    {
      uint64_t v17 = v126;
      goto LABEL_107;
    }
  }
  uint64_t v139 = v11;
  uint64_t v128 = v19;
  uint64_t v40 = 0;
  uint64_t v41 = v143;
  uint64_t v42 = v143 * (v33 - 1);
  uint64_t v43 = v33 * v143;
  uint64_t v44 = v21;
  uint64_t v45 = v21 * v143;
  do
  {
    if (v44 != v39 + v40 - 1)
    {
      uint64_t v46 = v136;
      if (!v136) {
        goto LABEL_148;
      }
      unint64_t v47 = v136 + v45;
      uint64_t v48 = v136 + v42;
      sub_1C2063890(v136 + v45, v131, (uint64_t (*)(void))type metadata accessor for Dosage);
      if (v45 < v42 || v47 >= v46 + v43)
      {
        swift_arrayInitWithTakeFrontToBack();
        uint64_t v41 = v143;
      }
      else
      {
        uint64_t v41 = v143;
        if (v45 != v42) {
          swift_arrayInitWithTakeBackToFront();
        }
      }
      sub_1C2063890(v131, v48, (uint64_t (*)(void))type metadata accessor for Dosage);
      a1 = v140;
      uint64_t v39 = v33;
    }
    ++v44;
    --v40;
    v42 -= v41;
    v43 -= v41;
    v45 += v41;
  }
  while (v44 < v39 + v40);
  os_log_type_t v19 = v128;
  uint64_t v2 = v129;
  uint64_t v21 = v132;
  uint64_t v11 = v139;
  if (v39 >= v139) {
    goto LABEL_59;
  }
LABEL_42:
  if (__OFSUB__(v39, v21)) {
    goto LABEL_141;
  }
  if (v39 - v21 >= v127) {
    goto LABEL_59;
  }
  if (__OFADD__(v21, v127)) {
    goto LABEL_144;
  }
  if (v21 + v127 >= v11) {
    uint64_t v49 = v11;
  }
  else {
    uint64_t v49 = v21 + v127;
  }
  if (v49 >= v21)
  {
    if (v39 != v49)
    {
      uint64_t v128 = v19;
      uint64_t v129 = v2;
      uint64_t v50 = *(void *)(v134 + 72);
      uint64_t v51 = v50 * (v39 - 1);
      uint64_t v135 = v50;
      uint64_t v52 = v39 * v50;
      uint64_t v130 = v49;
      do
      {
        uint64_t v54 = 0;
        uint64_t v139 = v39;
        uint64_t v136 = v52;
        while (1)
        {
          uint64_t v143 = v21;
          uint64_t v55 = *a1;
          uint64_t v56 = v137;
          sub_1C206363C(v52 + v54 + *a1, v137, (uint64_t (*)(void))type metadata accessor for Dosage);
          uint64_t v57 = v51;
          uint64_t v58 = v51 + v54 + v55;
          uint64_t v59 = a1;
          uint64_t v60 = v138;
          sub_1C206363C(v58, v138, (uint64_t (*)(void))type metadata accessor for Dosage);
          char v61 = sub_1C2147A20();
          sub_1C20636A4(v60, (uint64_t (*)(void))type metadata accessor for Dosage);
          sub_1C20636A4(v56, (uint64_t (*)(void))type metadata accessor for Dosage);
          if ((v61 & 1) == 0) {
            break;
          }
          uint64_t v62 = *v59;
          if (!*v59) {
            goto LABEL_146;
          }
          uint64_t v52 = v136;
          uint64_t v51 = v57;
          uint64_t v63 = v62 + v57 + v54;
          sub_1C2063890(v62 + v136 + v54, v142, (uint64_t (*)(void))type metadata accessor for Dosage);
          swift_arrayInitWithTakeFrontToBack();
          sub_1C2063890(v142, v63, (uint64_t (*)(void))type metadata accessor for Dosage);
          v54 -= v135;
          uint64_t v21 = v143 + 1;
          uint64_t v53 = v139;
          a1 = v140;
          if (v139 == v143 + 1) {
            goto LABEL_52;
          }
        }
        uint64_t v53 = v139;
        a1 = v59;
        uint64_t v51 = v57;
        uint64_t v52 = v136;
LABEL_52:
        uint64_t v39 = v53 + 1;
        v51 += v135;
        v52 += v135;
        uint64_t v21 = v132;
      }
      while (v39 != v130);
      uint64_t v39 = v130;
      os_log_type_t v19 = v128;
      uint64_t v2 = v129;
    }
    goto LABEL_59;
  }
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  __break(1u);
LABEL_149:
  __break(1u);
LABEL_150:
  uint64_t result = sub_1C214B900();
  __break(1u);
  return result;
}

uint64_t sub_1C2061C68(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v26 = a1;
  uint64_t v29 = type metadata accessor for Dosage();
  uint64_t v7 = MEMORY[0x1F4188790](v29);
  uint64_t v30 = (uint64_t)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v24 - v10;
  uint64_t result = MEMORY[0x1F4188790](v9);
  uint64_t v15 = (char *)&v24 - v14;
  uint64_t v28 = a3;
  uint64_t v25 = a2;
  if (a3 != a2)
  {
    uint64_t v16 = *(void *)(v13 + 72);
    uint64_t v32 = v16 * (v28 - 1);
    uint64_t v27 = v16;
    uint64_t v31 = v16 * v28;
LABEL_5:
    uint64_t v17 = 0;
    uint64_t v18 = v26;
    while (1)
    {
      os_log_type_t v19 = a4;
      uint64_t v20 = *a4;
      sub_1C206363C(v31 + v17 + v20, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for Dosage);
      sub_1C206363C(v32 + v17 + v20, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for Dosage);
      char v21 = sub_1C2147A20();
      sub_1C20636A4((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for Dosage);
      a4 = v19;
      uint64_t result = sub_1C20636A4((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for Dosage);
      if ((v21 & 1) == 0)
      {
LABEL_4:
        v32 += v27;
        v31 += v27;
        if (++v28 == v25) {
          return result;
        }
        goto LABEL_5;
      }
      uint64_t v22 = *v19;
      if (!*v19) {
        break;
      }
      uint64_t v23 = v22 + v32 + v17;
      sub_1C2063890(v22 + v31 + v17, v30, (uint64_t (*)(void))type metadata accessor for Dosage);
      swift_arrayInitWithTakeFrontToBack();
      uint64_t result = sub_1C2063890(v30, v23, (uint64_t (*)(void))type metadata accessor for Dosage);
      v17 -= v27;
      ++v18;
      a4 = v19;
      if (v28 == v18) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1C2061F2C(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v44 = type metadata accessor for Dosage();
  uint64_t v8 = MEMORY[0x1F4188790](v44);
  uint64_t v43 = (uint64_t)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v40 - v10;
  uint64_t v13 = *(void *)(v12 + 72);
  if (!v13)
  {
    __break(1u);
LABEL_61:
    __break(1u);
LABEL_62:
    __break(1u);
    goto LABEL_63;
  }
  if (a2 - a1 == 0x8000000000000000 && v13 == -1) {
    goto LABEL_61;
  }
  int64_t v14 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v13 == -1) {
    goto LABEL_62;
  }
  uint64_t v15 = (uint64_t)(a2 - a1) / v13;
  unint64_t v47 = a1;
  unint64_t v46 = a4;
  uint64_t v16 = v14 / v13;
  if (v15 >= v14 / v13)
  {
    if ((v16 & 0x8000000000000000) == 0)
    {
      uint64_t v18 = v16 * v13;
      if (a4 < a2 || a2 + v18 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v26 = a4 + v18;
      unint64_t v45 = a4 + v18;
      unint64_t v47 = a2;
      if (v18 >= 1 && a1 < a2)
      {
        unint64_t v41 = a4;
        unint64_t v42 = a1;
        do
        {
          unint64_t v28 = a3 - v13;
          sub_1C206363C(v26 - v13, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for Dosage);
          unint64_t v29 = a2 - v13;
          unint64_t v30 = a3;
          uint64_t v31 = (uint64_t)v11;
          uint64_t v32 = v43;
          sub_1C206363C(a2 - v13, v43, (uint64_t (*)(void))type metadata accessor for Dosage);
          char v33 = sub_1C2147A20();
          uint64_t v34 = v32;
          uint64_t v11 = (char *)v31;
          sub_1C20636A4(v34, (uint64_t (*)(void))type metadata accessor for Dosage);
          sub_1C20636A4(v31, (uint64_t (*)(void))type metadata accessor for Dosage);
          if (v33)
          {
            if (v30 < a2 || v28 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v36 = v41;
              unint64_t v37 = v42;
            }
            else
            {
              BOOL v35 = v30 == a2;
              unint64_t v36 = v41;
              unint64_t v37 = v42;
              if (!v35) {
                swift_arrayInitWithTakeBackToFront();
              }
            }
            v47 -= v13;
          }
          else
          {
            unint64_t v38 = v45;
            v45 -= v13;
            if (v30 < v38 || v28 >= v38)
            {
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v29 = a2;
              unint64_t v36 = v41;
              unint64_t v37 = v42;
            }
            else
            {
              unint64_t v37 = v42;
              if (v30 != v38) {
                swift_arrayInitWithTakeBackToFront();
              }
              unint64_t v29 = a2;
              unint64_t v36 = v41;
            }
          }
          unint64_t v26 = v45;
          if (v45 <= v36) {
            break;
          }
          a2 = v29;
          a3 = v28;
        }
        while (v29 > v37);
      }
      goto LABEL_59;
    }
  }
  else if ((v15 & 0x8000000000000000) == 0)
  {
    uint64_t v17 = v15 * v13;
    if (a4 < a1 || a1 + v17 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v19 = a4 + v17;
    unint64_t v45 = a4 + v17;
    if (v17 >= 1 && a2 < a3)
    {
      do
      {
        sub_1C206363C(a2, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for Dosage);
        uint64_t v21 = v43;
        sub_1C206363C(a4, v43, (uint64_t (*)(void))type metadata accessor for Dosage);
        char v22 = sub_1C2147A20();
        sub_1C20636A4(v21, (uint64_t (*)(void))type metadata accessor for Dosage);
        sub_1C20636A4((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for Dosage);
        unint64_t v23 = v47;
        if (v22)
        {
          unint64_t v24 = a2 + v13;
          if (v47 < a2 || v47 >= v24)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v47 == a2)
          {
            unint64_t v23 = a2;
          }
          else
          {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        else
        {
          unint64_t v25 = v46 + v13;
          if (v47 < v46 || v47 >= v25)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v47 != v46)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          unint64_t v46 = v25;
          unint64_t v24 = a2;
        }
        unint64_t v47 = v23 + v13;
        a4 = v46;
        if (v46 >= v19) {
          break;
        }
        a2 = v24;
      }
      while (v24 < a3);
    }
LABEL_59:
    sub_1C20FAFDC(&v47, &v46, (uint64_t *)&v45);
    return 1;
  }
LABEL_63:
  uint64_t result = sub_1C214B990();
  __break(1u);
  return result;
}

void sub_1C2062448(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1C20624AC()
{
  if (!qword_1EA2C6068)
  {
    type metadata accessor for WeekdaysAndDosages(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA2C6068);
    }
  }
}

uint64_t sub_1C2062518()
{
  return sub_1C205EA64();
}

uint64_t sub_1C2062520()
{
  uint64_t v1 = (int *)(type metadata accessor for WeekdaysAndDosages(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = v3 + *(void *)(*(void *)v1 + 64);
  uint64_t v5 = v2 | 7;
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v6 = v0 + v3 + v1[7];
  uint64_t v7 = sub_1C21496A0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, v4, v5);
}

uint64_t sub_1C2062628(char *a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for WeekdaysAndDosages(0) - 8);
  uint64_t v4 = *(void *)(v1 + 16);
  unint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_1C205D140(a1, v4, v5, v6);
}

uint64_t sub_1C206269C(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_1C2062448(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_1C206271C()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C2062754()
{
  return sub_1C205D8CC(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1C206275C(uint64_t a1, uint64_t a2)
{
  return sub_1C205E060(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_1C2062764(uint64_t a1, uint64_t a2)
{
  return sub_1C205E808(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_1C206276C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C205E9CC(a1, a2, a3, a4, *(void *)(v4 + 16), *(void *)(v4 + 24));
}

uint64_t sub_1C2062774(uint64_t (*a1)(unint64_t))
{
  uint64_t v3 = v1;
  uint64_t v5 = type metadata accessor for Dosage() - 8;
  uint64_t v6 = MEMORY[0x1F4188790](v5);
  uint64_t v34 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v33 = (uint64_t)&v30 - v9;
  MEMORY[0x1F4188790](v8);
  uint64_t v35 = (uint64_t)&v30 - v11;
  unint64_t v12 = *v1;
  uint64_t v13 = *(void *)(*v1 + 16);
  if (!v13) {
    return 0;
  }
  unint64_t v14 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v15 = *(void *)(v10 + 72);
  swift_bridgeObjectRetain();
  unint64_t v16 = 0;
  unint64_t v31 = v14;
  while (1)
  {
    char v17 = a1(v12 + v14);
    if (v2)
    {
      swift_bridgeObjectRelease();
      return v16;
    }
    if (v17) {
      break;
    }
    ++v16;
    v14 += v15;
    if (v13 == v16)
    {
      swift_bridgeObjectRelease();
      return *(void *)(v12 + 16);
    }
  }
  uint64_t result = swift_bridgeObjectRelease();
  if (!__OFADD__(v16, 1))
  {
    unint64_t v19 = *(void *)(v12 + 16);
    if (v16 + 1 == v19) {
      return v16;
    }
    uint64_t v20 = v15 + v14;
    unint64_t v21 = v16 + 1;
    unint64_t v30 = v1;
    uint64_t v32 = v15;
    while (v21 < v19)
    {
      char v22 = v3;
      uint64_t v36 = v20;
      uint64_t v23 = v35;
      sub_1C206363C(v12 + v20, v35, (uint64_t (*)(void))type metadata accessor for Dosage);
      char v24 = a1(v23);
      uint64_t result = sub_1C20636A4(v23, (uint64_t (*)(void))type metadata accessor for Dosage);
      if (v24)
      {
        uint64_t v3 = v22;
        uint64_t v25 = v32;
      }
      else
      {
        uint64_t v3 = v22;
        uint64_t v25 = v32;
        if (v21 != v16)
        {
          if ((v16 & 0x8000000000000000) != 0) {
            goto LABEL_32;
          }
          unint64_t v26 = *v3;
          unint64_t v27 = *(void *)(*v3 + 16);
          if (v16 >= v27) {
            goto LABEL_33;
          }
          uint64_t result = sub_1C206363C(v26 + v31 + v16 * v32, v33, (uint64_t (*)(void))type metadata accessor for Dosage);
          if (v21 >= v27) {
            goto LABEL_34;
          }
          sub_1C206363C(v26 + v36, v34, (uint64_t (*)(void))type metadata accessor for Dosage);
          uint64_t result = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v3 = v30;
          *unint64_t v30 = v26;
          if ((result & 1) == 0)
          {
            uint64_t result = sub_1C1F81568(v26);
            unint64_t v26 = result;
            *uint64_t v3 = result;
          }
          if (v16 >= *(void *)(v26 + 16)) {
            goto LABEL_35;
          }
          uint64_t result = sub_1C20219D4(v34, v26 + v31 + v16 * v25);
          if (v21 >= *(void *)(*v3 + 16)) {
            goto LABEL_36;
          }
          uint64_t result = sub_1C20219D4(v33, *v3 + v36);
        }
        if (__OFADD__(v16++, 1)) {
          goto LABEL_31;
        }
      }
      unint64_t v29 = v21 + 1;
      if (__OFADD__(v21, 1)) {
        goto LABEL_30;
      }
      unint64_t v12 = *v3;
      unint64_t v19 = *(void *)(*v3 + 16);
      ++v21;
      uint64_t v20 = v36 + v25;
      if (v29 == v19) {
        return v16;
      }
    }
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1C2062AF8(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v94 = a3;
  uint64_t v88 = a2;
  unint64_t v92 = a1;
  uint64_t v3 = sub_1C2147B20();
  uint64_t v73 = *(void (***)(char *, uint64_t))(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v95 = (char *)v69 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1C2147CD0();
  uint64_t v83 = *(void (***)(char *, uint64_t))(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)v69 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v98 = sub_1C2147CF0();
  uint64_t v75 = *(void (***)(char *, uint64_t))(v98 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v98);
  uint64_t v97 = (char *)v69 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v96 = (char *)v69 - v10;
  uint64_t v87 = type metadata accessor for Dosage();
  uint64_t v72 = *(void *)(v87 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v87);
  uint64_t v86 = (uint64_t)v69 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v89 = (uint64_t)v69 - v13;
  uint64_t v91 = type metadata accessor for WeekdaysAndDosages(0);
  uint64_t v14 = *(void *)(v91 - 8);
  MEMORY[0x1F4188790](v91);
  uint64_t v90 = (char *)v69 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v16 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27928];
  sub_1C2062448(0, &qword_1EBF0B1F0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v17 - 8);
  unint64_t v19 = (char *)v69 - v18;
  uint64_t v20 = sub_1C2147AC0();
  uint64_t v21 = MEMORY[0x1F4188790](v20);
  uint64_t v23 = (char *)v69 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = MEMORY[0x1F4188790](v21);
  uint64_t v99 = (char *)v69 - v25;
  MEMORY[0x1F4188790](v24);
  unint64_t v27 = (char *)v69 - v26;
  unint64_t v28 = v16;
  uint64_t v30 = v29;
  sub_1C20637A0(v94, (uint64_t)v19, &qword_1EBF0B1F0, v28);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v19, 1, v20) != 1)
  {
    unint64_t v31 = *(void (**)(char *, char *, uint64_t))(v30 + 32);
    uint64_t v84 = v27;
    uint64_t v85 = v20;
    v31(v27, v19, v20);
    uint64_t result = sub_1C2149E90();
    if ((v92 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (*(void *)(v100 + 16) > v92)
    {
      uint64_t v33 = v90;
      sub_1C206363C(v100+ ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80))+ *(void *)(v14 + 72) * v92, (uint64_t)v90, type metadata accessor for WeekdaysAndDosages);
      swift_bridgeObjectRelease();
      uint64_t v34 = *(void *)&v33[*(int *)(v91 + 24)];
      swift_bridgeObjectRetain();
      sub_1C20636A4((uint64_t)v33, type metadata accessor for WeekdaysAndDosages);
      unint64_t v35 = *(void *)(v34 + 16);
      if (!v35)
      {
        swift_bridgeObjectRelease();
        uint64_t v40 = *(void (**)(char *, uint64_t))(v30 + 8);
LABEL_16:
        v40(v84, v85);
        return 1;
      }
      BOOL v81 = v23;
      unint64_t v36 = (*(unsigned __int8 *)(v72 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v72 + 80);
      v69[1] = v34;
      uint64_t v37 = v34 + v36;
      unsigned int v80 = *MEMORY[0x1E4F27C10];
      uint64_t v79 = (void (**)(char *, uint64_t, uint64_t))(v83 + 13);
      uint64_t v78 = v83 + 1;
      uint64_t v77 = (void (**)(char *, char *, uint64_t))(v75 + 2);
      uint64_t v76 = (void (**)(char *, uint64_t, uint64_t))(v30 + 16);
      uint64_t v83 = (void (**)(char *, uint64_t))(v30 + 8);
      ++v75;
      char v74 = (void (**)(char *, uint64_t, uint64_t))(v73 + 2);
      unsigned int v70 = *MEMORY[0x1E4F27C48];
      ++v73;
      uint64_t v72 = *(void *)(v72 + 72);
      uint64_t v38 = v98;
      uint64_t v71 = v7;
      uint64_t v39 = v89;
      uint64_t v82 = v3;
      while (1)
      {
        unint64_t v92 = v35;
        uint64_t v93 = v37;
        sub_1C206363C(v37, v39, (uint64_t (*)(void))type metadata accessor for Dosage);
        uint64_t v46 = v39 + *(int *)(v87 + 20);
        unint64_t v47 = v96;
        sub_1C2147CB0();
        uint64_t v48 = *v79;
        uint64_t v49 = v80;
        uint64_t v50 = v5;
        (*v79)(v7, v80, v5);
        uint64_t v94 = sub_1C2147CE0();
        uint64_t v51 = *v78;
        (*v78)(v7, v50);
        uint64_t v91 = (uint64_t)v48;
        v48(v7, v49, v50);
        uint64_t v52 = v84;
        uint64_t v53 = sub_1C2147CE0();
        uint64_t v90 = (char *)v51;
        v51(v7, v50);
        (*v77)(v97, v47, v38);
        uint64_t v54 = v50;
        uint64_t v55 = *v76;
        uint64_t v56 = v46;
        uint64_t v57 = v85;
        (*v76)(v99, v56, v85);
        uint64_t v58 = v81;
        v55(v81, (uint64_t)v52, v57);
        if (v94 != v53) {
          break;
        }
        uint64_t v59 = v70;
        uint64_t v60 = (void (*)(char *, uint64_t, uint64_t))v91;
        ((void (*)(char *, void, uint64_t))v91)(v7, v70, v54);
        uint64_t v5 = v54;
        char v61 = v97;
        uint64_t v62 = v57;
        uint64_t v94 = sub_1C2147CE0();
        uint64_t v63 = v90;
        ((void (*)(char *, uint64_t))v90)(v7, v5);
        v60(v7, v59, v5);
        uint64_t v64 = sub_1C2147CE0();
        ((void (*)(char *, uint64_t))v63)(v7, v5);
        uint64_t v40 = *v83;
        (*v83)(v58, v62);
        v40(v99, v62);
        unint64_t v65 = *v75;
        uint64_t v66 = v98;
        (*v75)(v61, v98);
        v65(v96, v66);
        uint64_t v43 = v82;
        (*v74)(v95, v88, v82);
        uint64_t v39 = v89;
        uint64_t v44 = v86;
        sub_1C206363C(v89, v86, (uint64_t (*)(void))type metadata accessor for Dosage);
        if (v94 != v64) {
          goto LABEL_8;
        }
        sub_1C2063998(&qword_1EA2C5648, MEMORY[0x1E4F27990]);
        uint64_t v67 = v95;
        char v68 = sub_1C214A5A0();
        sub_1C20636A4(v44, (uint64_t (*)(void))type metadata accessor for Dosage);
        (*v73)(v67, v43);
        sub_1C20636A4(v39, (uint64_t (*)(void))type metadata accessor for Dosage);
        if ((v68 & 1) == 0)
        {
          swift_bridgeObjectRelease();
          v40(v84, v85);
          return 0;
        }
        uint64_t v38 = v98;
        uint64_t v7 = v71;
        unint64_t v45 = v92;
LABEL_9:
        uint64_t v37 = v93 + v72;
        unint64_t v35 = v45 - 1;
        if (!v35)
        {
          swift_bridgeObjectRelease();
          goto LABEL_16;
        }
      }
      uint64_t v5 = v50;
      uint64_t v40 = *v83;
      (*v83)(v58, v57);
      v40(v99, v57);
      unint64_t v41 = *v75;
      uint64_t v42 = v98;
      (*v75)(v97, v98);
      v41(v96, v42);
      uint64_t v43 = v82;
      (*v74)(v95, v88, v82);
      uint64_t v39 = v89;
      uint64_t v44 = v86;
      sub_1C206363C(v89, v86, (uint64_t (*)(void))type metadata accessor for Dosage);
LABEL_8:
      unint64_t v45 = v92;
      sub_1C20636A4(v44, (uint64_t (*)(void))type metadata accessor for Dosage);
      (*v73)(v95, v43);
      sub_1C20636A4(v39, (uint64_t (*)(void))type metadata accessor for Dosage);
      uint64_t v38 = v98;
      uint64_t v7 = v71;
      goto LABEL_9;
    }
    __break(1u);
    return result;
  }
  sub_1C2063820((uint64_t)v19, &qword_1EBF0B1F0, MEMORY[0x1E4F27928]);
  return 1;
}

uint64_t sub_1C206363C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C20636A4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C2063704()
{
  return sub_1C2147AF0() & 1;
}

uint64_t sub_1C2063738@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C205E5F8(a1, *(void *)(v2 + 24), a2);
}

uint64_t sub_1C2063754()
{
  swift_release();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1C2063794()
{
  return sub_1C205E6E4(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_1C20637A0(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_1C2062448(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_1C2063820(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1C2062448(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1C2063890(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C20638F8()
{
  return sub_1C205B888();
}

void sub_1C2063900()
{
  if (!qword_1EA2C6088)
  {
    sub_1C2062448(255, &qword_1EA2C6090, type metadata accessor for WeekdaysAndDosages, MEMORY[0x1E4FBB320]);
    unint64_t v0 = sub_1C2149EA0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2C6088);
    }
  }
}

uint64_t sub_1C2063998(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C20639EC(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v29 = a5;
  uint64_t v30 = a8;
  uint64_t v10 = v9;
  uint64_t v38 = a1;
  uint64_t v39 = a2;
  uint64_t v28 = *(void *)(a5 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v40 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  unint64_t v36 = *(void (***)(char *, uint64_t))(AssociatedTypeWitness - 8);
  uint64_t v13 = MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v15 = (char *)&v26 - v14;
  MEMORY[0x1F4188790](v13);
  uint64_t v33 = (char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = swift_getAssociatedTypeWitness();
  uint64_t v31 = *(void *)(v17 - 8);
  uint64_t v32 = v17;
  MEMORY[0x1F4188790](v17);
  unint64_t v19 = (char *)&v26 - v18;
  uint64_t v34 = v8;
  uint64_t v20 = sub_1C214AAE0();
  if (!v20) {
    return sub_1C214A7E0();
  }
  uint64_t v21 = v20;
  unint64_t v27 = v15;
  uint64_t v43 = sub_1C214B890();
  uint64_t v35 = sub_1C214B8A0();
  sub_1C214B840();
  unint64_t v41 = v19;
  uint64_t result = sub_1C214AAD0();
  if (v21 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v23 = (void (**)(char *))(v36 + 2);
    ++v36;
    uint64_t v37 = v23;
    uint64_t v24 = v27;
    while (1)
    {
      uint64_t v25 = (void (*)(char *, void))sub_1C214AB10();
      (*v37)(v24);
      v25(v42, 0);
      v38(v24, v40);
      if (v10) {
        break;
      }
      uint64_t v10 = 0;
      (*v36)(v24, AssociatedTypeWitness);
      sub_1C214B880();
      sub_1C214AB00();
      if (!--v21)
      {
        (*(void (**)(char *, uint64_t))(v31 + 8))(v41, v32);
        return v43;
      }
    }
    (*v36)(v24, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v31 + 8))(v41, v32);
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v28 + 32))(v30, v40, v29);
  }
  return result;
}

id sub_1C2063DE8()
{
  unint64_t v0 = (void *)sub_1C2065968();

  return v0;
}

void sub_1C2063E10(uint64_t a1)
{
  swift_beginAccess();
  uint64_t v3 = *(void **)(v1 + 16);
  *(void *)(v1 + 16) = a1;
}

uint64_t (*sub_1C2063E58())()
{
  return j__swift_endAccess;
}

uint64_t DynamicDataSource.identifier.getter()
{
  uint64_t v0 = sub_1C2065960();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_1C2063EE4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = (uint64_t)v1 + *(void *)(*v1 + 136);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(v3 + 80) - 8) + 16))(a1, v4);
}

uint64_t sub_1C2063F88(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = (uint64_t)v1 + *(void *)(*v1 + 136);
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(*(void *)(v3 + 80) - 8) + 40))(v4, a1);
  return swift_endAccess();
}

uint64_t sub_1C2064034(uint64_t a1)
{
  *(void *)(v1 + *(void *)(*(void *)v1 + 144)) = a1;
  return swift_release();
}

uint64_t sub_1C2064058()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_1C2064084()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_1C20640B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)(v3 + *(void *)(*(void *)v3 + 152));
  swift_beginAccess();
  *uint64_t v7 = a1;
  v7[1] = a2;
  _OWORD v7[2] = a3;
  return swift_unknownObjectRelease();
}

char *DynamicDataSource.__allocating_init(dataSources:determinerPublisher:defaultDataSource:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  swift_allocObject();
  uint64_t v10 = sub_1C2065A4C(a1, a2, a3, a4, a5);
  swift_release();
  swift_unknownObjectRelease();
  return v10;
}

char *DynamicDataSource.init(dataSources:determinerPublisher:defaultDataSource:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = sub_1C2065A4C(a1, a2, a3, a4, a5);
  swift_release();
  swift_unknownObjectRelease();
  return v5;
}

uint64_t sub_1C20641F8@<X0>(uint64_t *a1@<X8>)
{
  swift_getObjectType();
  uint64_t result = sub_1C2148300();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1C2064244()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  uint64_t v3 = swift_allocObject();
  swift_weakInit();
  uint64_t v4 = (void *)swift_allocObject();
  v4[2] = *(void *)(v2 + 80);
  v4[3] = *(void *)(v2 + 88);
  v4[4] = v3;
  sub_1C2149EA0();
  swift_retain();
  swift_retain();
  swift_getWitnessTable();
  uint64_t v5 = sub_1C214A0F0();
  swift_release();
  swift_release();
  swift_release();
  *(void *)((char *)v1 + *(void *)(*v1 + 144)) = v5;
  return swift_release();
}

uint64_t sub_1C20643A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v46 = a4;
  uint64_t v7 = *(void *)(a3 - 8);
  MEMORY[0x1F4188790](a1);
  unint64_t v45 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1C214B4F0();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v49 = *(void *)(TupleTypeMetadata2 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](TupleTypeMetadata2);
  uint64_t v57 = (char *)&v43 - v12;
  uint64_t v53 = v9;
  uint64_t v55 = *(void *)(v9 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  uint64_t v48 = (char *)&v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  uint64_t v17 = (char *)&v43 - v16;
  MEMORY[0x1F4188790](v15);
  unint64_t v19 = (char *)&v43 - v18;
  uint64_t v54 = (char *)&v43 - v18;
  uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  uint64_t v47 = a1;
  v20((char *)&v43 - v18, a1, a3);
  uint64_t v56 = v7;
  uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
  uint64_t v22 = 1;
  v21(v19, 0, 1, a3);
  swift_beginAccess();
  uint64_t v51 = a2 + 16;
  if (swift_weakLoadStrong())
  {
    sub_1C2063EE4((uint64_t)v17);
    swift_release();
    uint64_t v22 = 0;
  }
  v21(v17, v22, 1, a3);
  uint64_t v50 = TupleTypeMetadata2;
  uint64_t v23 = *(int *)(TupleTypeMetadata2 + 48);
  uint64_t v24 = v57;
  uint64_t v25 = &v57[v23];
  uint64_t v26 = v17;
  uint64_t v28 = v54;
  uint64_t v27 = v55;
  uint64_t v29 = *(void (**)(char *, char *, uint64_t))(v55 + 16);
  uint64_t v30 = v53;
  v29(v57, v54, v53);
  uint64_t v52 = v25;
  v29(v25, v26, v30);
  uint64_t v31 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v56 + 48);
  if (v31(v24, 1, a3) == 1)
  {
    uint64_t v32 = *(void (**)(char *, uint64_t))(v27 + 8);
    v32(v26, v30);
    v32(v28, v30);
    if (v31(v52, 1, a3) == 1) {
      return ((uint64_t (*)(char *, uint64_t))v32)(v57, v30);
    }
  }
  else
  {
    uint64_t v44 = v26;
    uint64_t v34 = v48;
    v29(v48, v24, v30);
    uint64_t v35 = v52;
    uint64_t v36 = v30;
    if (v31(v52, 1, a3) != 1)
    {
      uint64_t v38 = v56;
      uint64_t v39 = v45;
      (*(void (**)(char *, char *, uint64_t))(v56 + 32))(v45, v35, a3);
      char v40 = sub_1C214A5A0();
      unint64_t v41 = *(void (**)(char *, uint64_t))(v38 + 8);
      v41(v39, a3);
      uint64_t v42 = *(void (**)(char *, uint64_t))(v55 + 8);
      v42(v44, v36);
      v42(v54, v36);
      v41(v34, a3);
      uint64_t result = ((uint64_t (*)(char *, uint64_t))v42)(v24, v36);
      if (v40) {
        return result;
      }
      goto LABEL_10;
    }
    uint64_t v37 = *(void (**)(char *, uint64_t))(v55 + 8);
    v37(v44, v36);
    v37(v54, v36);
    (*(void (**)(char *, uint64_t))(v56 + 8))(v34, a3);
  }
  (*(void (**)(char *, uint64_t))(v49 + 8))(v57, v50);
LABEL_10:
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1C2064D5C(v47);
    return swift_release();
  }
  return result;
}

void sub_1C20648E4(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = *v1;
  uint64_t v4 = *(void *)(*v1 + 80);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v7 = &v17[-v6];
  swift_beginAccess();
  swift_getObjectType();
  swift_unknownObjectRetain();
  uint64_t v8 = (void *)sub_1C2148310();
  swift_unknownObjectRelease();
  objc_msgSend(v8, sel_unregisterObserver_, v2);

  uint64_t v9 = v2[8];
  sub_1C2063EE4((uint64_t)v7);
  unint64_t v10 = sub_1C1F4C4E4();
  MEMORY[0x1C87526C0](v18, v7, v9, v4, v10, *(void *)(v3 + 88));
  (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t v11 = v18[0];
  if (v18[0])
  {
    uint64_t v12 = v18[1];
    uint64_t v13 = v18[2];
  }
  else
  {
    uint64_t v14 = v2[6];
    uint64_t v15 = v2[7];
    uint64_t v11 = swift_unknownObjectRetain();
    uint64_t v12 = v14;
    uint64_t v13 = v15;
  }
  sub_1C20640B8(v11, v12, v13);
  swift_beginAccess();
  swift_getObjectType();
  swift_unknownObjectRetain();
  uint64_t v16 = (void *)sub_1C2148310();
  swift_unknownObjectRelease();
  objc_msgSend(v16, sel_registerObserver_, v2);
}

uint64_t sub_1C2064B2C()
{
  return sub_1C2148A40() & 1;
}

uint64_t sub_1C2064BB0()
{
  return sub_1C2148A50();
}

uint64_t sub_1C2064C40()
{
  return sub_1C2065E98();
}

uint64_t sub_1C2064C4C()
{
  sub_1C1FF8494();
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2149C20();
  swift_retain();
  sub_1C2065E98();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

uint64_t sub_1C2064D5C(uint64_t a1)
{
  MEMORY[0x1F4188790](a1);
  uint64_t v2 = (char *)&v6 - v1;
  (*(void (**)(char *))(v3 + 16))((char *)&v6 - v1);
  uint64_t v4 = sub_1C2063F88((uint64_t)v2);
  return sub_1C2064E1C(v4);
}

uint64_t sub_1C2064E1C(uint64_t a1)
{
  sub_1C20648E4(a1);
  type metadata accessor for DynamicDataSource();
  swift_getWitnessTable();

  return sub_1C2148320();
}

id *DynamicDataSource.deinit()
{
  uint64_t v1 = *v0;
  swift_beginAccess();
  swift_getObjectType();
  swift_unknownObjectRetain();
  uint64_t v2 = (void *)sub_1C2148310();
  swift_unknownObjectRelease();
  objc_msgSend(v2, sel_unregisterObserver_, v0);

  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  (*(void (**)(char *))(*(void *)(v1[10] - 8) + 8))((char *)v0 + *((void *)*v0 + 17));
  swift_release();
  swift_unknownObjectRelease();
  return v0;
}

uint64_t DynamicDataSource.__deallocating_deinit()
{
  DynamicDataSource.deinit();

  return swift_deallocClassInstance();
}

uint64_t sub_1C206505C()
{
  return sub_1C2064BB0();
}

uint64_t sub_1C2065080()
{
  return sub_1C2064B2C() & 1;
}

uint64_t sub_1C20650A8()
{
  uint64_t v0 = sub_1C2065960();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_1C20650E0(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F411E5D0](a1, WitnessTable);
}

uint64_t sub_1C2065144(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F411E5C8](a1, a2, a3, WitnessTable);
}

uint64_t sub_1C20651C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F411E5C0](a1, a2, a3, WitnessTable);
}

uint64_t DynamicDataSource.supplementaryItem(ofKind:at:)@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  uint64_t v5 = sub_1C21497F0();
  uint64_t v22 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (char *)v2 + *(void *)(v4 + 152);
  swift_beginAccess();
  uint64_t v9 = *((void *)v8 + 2);
  long long v23 = *(_OWORD *)v8;
  long long v27 = v23;
  uint64_t v28 = v9;
  sub_1C1F4C4E4();
  sub_1C1F23804(0, &qword_1EA2C60A0);
  swift_unknownObjectRetain();
  if (swift_dynamicCast())
  {
    sub_1C1F31280(&v24, (uint64_t)v29);
    __swift_project_boxed_opaque_existential_0(v29, v29[3]);
    sub_1C21488A0();
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)v29);
  }
  else
  {
    uint64_t v26 = 0;
    long long v24 = 0u;
    long long v25 = 0u;
    sub_1C1F23854((uint64_t)&v24, qword_1EA2C60A8, &qword_1EA2C60A0);
    sub_1C21497A0();
    swift_retain_n();
    uint64_t v11 = sub_1C21497E0();
    os_log_type_t v12 = sub_1C214ABD0();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = swift_slowAlloc();
      *(void *)&long long v23 = swift_slowAlloc();
      *(void *)&long long v27 = v23;
      *(_DWORD *)uint64_t v13 = 136315394;
      uint64_t v14 = sub_1C214BC10();
      v29[0] = sub_1C1F6FD54(v14, v15, (uint64_t *)&v27);
      sub_1C214B530();
      swift_bridgeObjectRelease();
      *(_WORD *)(v13 + 12) = 2080;
      uint64_t v16 = (char *)v2 + *(void *)(*v2 + 152);
      swift_beginAccess();
      uint64_t v17 = *((void *)v16 + 2);
      long long v24 = *(_OWORD *)v16;
      *(void *)&long long v25 = v17;
      swift_unknownObjectRetain();
      uint64_t v18 = sub_1C214A610();
      *(void *)&long long v24 = sub_1C1F6FD54(v18, v19, (uint64_t *)&v27);
      sub_1C214B530();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C1F0B000, v11, v12, "[%s]: Cannot fetch supplementary item because child data source is not SupplementaryItemDataSource: %s", (uint8_t *)v13, 0x16u);
      uint64_t v20 = v23;
      swift_arrayDestroy();
      MEMORY[0x1C8754730](v20, -1, -1);
      MEMORY[0x1C8754730](v13, -1, -1);
    }
    else
    {

      swift_release_n();
    }
    (*(void (**)(char *, uint64_t))(v22 + 8))(v7, v5);
    a1[3] = sub_1C21482E0();
    a1[4] = sub_1C20663A4(&qword_1EA2C5330, MEMORY[0x1E4F663A8]);
    __swift_allocate_boxed_opaque_existential_1(a1);
    return sub_1C21482D0();
  }
}

uint64_t sub_1C2065654@<X0>(uint64_t *a1@<X8>)
{
  return DynamicDataSource.supplementaryItem(ofKind:at:)(a1);
}

Swift::Void __swiftcall DynamicDataSource.registerCells(for:)(UICollectionView *a1)
{
  uint64_t v2 = *(void *)(v1 + 56);
  long long v17 = *(_OWORD *)(v1 + 40);
  *(void *)&long long v18 = v2;
  sub_1C1F4C4E4();
  sub_1C1F23804(0, &qword_1EA2C3790);
  swift_unknownObjectRetain();
  if (swift_dynamicCast())
  {
    __swift_project_boxed_opaque_existential_0(&v22, *((uint64_t *)&v23 + 1));
    sub_1C21488E0();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)&v22);
  }
  else
  {
    uint64_t v24 = 0;
    long long v22 = 0u;
    long long v23 = 0u;
    sub_1C1F23854((uint64_t)&v22, &qword_1EA2C3798, &qword_1EA2C3790);
  }
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t v4 = v3 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(v3 + 64);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v9 = 0;
  if (v7) {
    goto LABEL_9;
  }
LABEL_10:
  int64_t v12 = v9 + 1;
  if (!__OFADD__(v9, 1))
  {
    if (v12 < v8)
    {
      unint64_t v13 = *(void *)(v4 + 8 * v12);
      ++v9;
      if (v13) {
        goto LABEL_23;
      }
      int64_t v9 = v12 + 1;
      if (v12 + 1 >= v8) {
        goto LABEL_27;
      }
      unint64_t v13 = *(void *)(v4 + 8 * v9);
      if (v13) {
        goto LABEL_23;
      }
      int64_t v9 = v12 + 2;
      if (v12 + 2 >= v8) {
        goto LABEL_27;
      }
      unint64_t v13 = *(void *)(v4 + 8 * v9);
      if (v13)
      {
LABEL_23:
        unint64_t v7 = (v13 - 1) & v13;
        for (unint64_t i = __clz(__rbit64(v13)) + (v9 << 6); ; unint64_t i = v10 | (v9 << 6))
        {
          uint64_t v15 = *(void *)(v3 + 56) + 24 * i;
          uint64_t v16 = *(void *)(v15 + 16);
          long long v20 = *(_OWORD *)v15;
          uint64_t v21 = v16;
          swift_unknownObjectRetain();
          if (swift_dynamicCast())
          {
            sub_1C1F31280(&v17, (uint64_t)&v22);
            __swift_project_boxed_opaque_existential_0(&v22, *((uint64_t *)&v23 + 1));
            sub_1C21488E0();
            __swift_destroy_boxed_opaque_existential_0((uint64_t)&v22);
            if (!v7) {
              goto LABEL_10;
            }
          }
          else
          {
            uint64_t v19 = 0;
            long long v17 = 0u;
            long long v18 = 0u;
            sub_1C1F23854((uint64_t)&v17, &qword_1EA2C3798, &qword_1EA2C3790);
            if (!v7) {
              goto LABEL_10;
            }
          }
LABEL_9:
          unint64_t v10 = __clz(__rbit64(v7));
          v7 &= v7 - 1;
        }
      }
      int64_t v14 = v12 + 3;
      if (v14 < v8)
      {
        unint64_t v13 = *(void *)(v4 + 8 * v14);
        if (v13)
        {
          int64_t v9 = v14;
          goto LABEL_23;
        }
        while (1)
        {
          int64_t v9 = v14 + 1;
          if (__OFADD__(v14, 1)) {
            goto LABEL_29;
          }
          if (v9 >= v8) {
            break;
          }
          unint64_t v13 = *(void *)(v4 + 8 * v9);
          ++v14;
          if (v13) {
            goto LABEL_23;
          }
        }
      }
    }
LABEL_27:
    swift_release();
    return;
  }
  __break(1u);
LABEL_29:
  __break(1u);
}

void sub_1C206593C(UICollectionView *a1)
{
}

uint64_t sub_1C2065960()
{
  return *(void *)(v0 + 24);
}

uint64_t sub_1C2065968()
{
  swift_beginAccess();
  return *(void *)(v0 + 16);
}

uint64_t sub_1C206599C()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 152);
  swift_beginAccess();
  return *(void *)v1;
}

uint64_t sub_1C20659F4()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 152);
  swift_beginAccess();
  return *(void *)v1;
}

char *sub_1C2065A4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v39 = a4;
  uint64_t v40 = a5;
  uint64_t v41 = a2;
  uint64_t v42 = a3;
  uint64_t v8 = *(void *)v5;
  uint64_t v9 = sub_1C2148410();
  uint64_t v37 = *(void *)(v9 - 8);
  uint64_t v38 = v9;
  uint64_t v10 = MEMORY[0x1F4188790](v9);
  uint64_t v36 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(void *)(v8 + 80);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v15 = (char *)&v35 - v14;
  sub_1C2066364();
  uint64_t v16 = (void *)sub_1C214B4C0();
  id v17 = objc_allocWithZone(MEMORY[0x1E4F2B5F0]);
  long long v18 = (void *)sub_1C214A5B0();
  id v19 = objc_msgSend(v17, sel_initWithName_loggingCategory_, v18, v16);

  *((void *)v6 + 2) = v19;
  *(void *)&v6[*(void *)(*(void *)v6 + 144)] = 0;
  unint64_t v44 = 0;
  unint64_t v45 = 0xE000000000000000;
  sub_1C214B7C0();
  swift_bridgeObjectRelease();
  unint64_t v44 = 0xD000000000000012;
  unint64_t v45 = 0x80000001C2167BD0;
  sub_1C1F4C4E4();
  uint64_t v43 = a1;
  uint64_t v20 = sub_1C214A520();
  swift_bridgeObjectRetain();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v23 = sub_1C20639EC((void (*)(char *, char *))sub_1C20641F8, 0, v20, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBC248], WitnessTable, MEMORY[0x1E4FBC278], v22);
  swift_bridgeObjectRelease();
  uint64_t v43 = v23;
  sub_1C1FE7550();
  sub_1C20663A4((unint64_t *)&qword_1EA2C44D0, (void (*)(uint64_t))sub_1C1FE7550);
  sub_1C214A580();
  swift_bridgeObjectRelease();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  sub_1C214A6C0();
  unint64_t v24 = v45;
  *((void *)v6 + 3) = v44;
  *((void *)v6 + 4) = v24;
  uint64_t v25 = v41;
  *((void *)v6 + 8) = a1;
  *((void *)v6 + 9) = v25;
  swift_retain();
  sub_1C2149E90();
  uint64_t v26 = v15;
  uint64_t v27 = v42;
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(&v6[*(void *)(*(void *)v6 + 136)], v26, v12);
  if (v27)
  {
    uint64_t v28 = v27;
    uint64_t v30 = v39;
    uint64_t v29 = v40;
  }
  else
  {
    sub_1C21489D0();
    uint64_t v31 = v36;
    sub_1C2148400();
    sub_1C21483A0();
    (*(void (**)(char *, uint64_t))(v37 + 8))(v31, v38);
    uint64_t v28 = sub_1C21489A0();
    uint64_t v29 = MEMORY[0x1E4F66470];
    uint64_t v30 = MEMORY[0x1E4F66610];
  }
  *((void *)v6 + 5) = v28;
  *((void *)v6 + 6) = v30;
  *((void *)v6 + 7) = v29;
  uint64_t v32 = (uint64_t *)&v6[*(void *)(*(void *)v6 + 152)];
  *uint64_t v32 = v28;
  v32[1] = v30;
  id v32[2] = v29;
  swift_unknownObjectRetain();
  uint64_t v33 = swift_unknownObjectRetain();
  sub_1C2064E1C(v33);
  sub_1C2064244();
  return v6;
}

uint64_t sub_1C2065E98()
{
  type metadata accessor for DynamicDataSource();
  swift_getWitnessTable();

  return sub_1C2148320();
}

uint64_t sub_1C2065F30()
{
  return swift_getWitnessTable();
}

id sub_1C2065F4C@<X0>(void *a1@<X8>)
{
  uint64_t v2 = (void *)sub_1C2065968();
  *a1 = v2;

  return v2;
}

void sub_1C2065F88(id *a1)
{
}

uint64_t sub_1C2065FB4()
{
  return 16;
}

__n128 sub_1C2065FC0(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1C2065FCC@<X0>(uint64_t *a1@<X8>)
{
  *a1 = sub_1C206599C();
  a1[1] = v2;
  a1[2] = v3;

  return swift_unknownObjectRetain();
}

uint64_t sub_1C206600C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = swift_unknownObjectRetain();
  return sub_1C20640B8(v3, v1, v2);
}

uint64_t sub_1C2066050()
{
  return 16;
}

__n128 sub_1C206605C(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1C2066068()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for DynamicDataSource()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for DynamicDataSource(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for DynamicDataSource);
}

uint64_t dispatch thunk of DynamicDataSource.changeObservers.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t dispatch thunk of DynamicDataSource.changeObservers.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t dispatch thunk of DynamicDataSource.changeObservers.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t dispatch thunk of DynamicDataSource.resolvedDataSource.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 256))();
}

uint64_t dispatch thunk of DynamicDataSource.currentDataSource.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 264))();
}

uint64_t dispatch thunk of DynamicDataSource.__allocating_init(dataSources:determinerPublisher:defaultDataSource:)()
{
  return (*(uint64_t (**)(void))(v0 + 288))();
}

uint64_t dispatch thunk of DynamicDataSource.shouldCollapseEmptySection(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 312))();
}

uint64_t dispatch thunk of DynamicDataSource.layout(for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 320))();
}

uint64_t dispatch thunk of DynamicDataSource.snapshotDidChange(dataSourceID:snapshot:animated:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 328))();
}

uint64_t sub_1C20662E8()
{
  swift_weakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C2066320()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1C2066358(uint64_t a1)
{
  return sub_1C20643A4(a1, v1[4], v1[2], v1[3]);
}

unint64_t sub_1C2066364()
{
  unint64_t result = qword_1EA2C6130;
  if (!qword_1EA2C6130)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA2C6130);
  }
  return result;
}

uint64_t sub_1C20663A4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C20663EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C2147BB0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)v31 - v9;
  sub_1C1FA2240();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C2150000;
  sub_1C2147BA0();
  uint64_t v12 = sub_1C2147B80();
  uint64_t v14 = v13;
  uint64_t v15 = *(void (**)(char *, uint64_t))(v5 + 8);
  v15(v10, v4);
  *(void *)(inited + 32) = v12;
  *(void *)(inited + 40) = v14;
  v31[0] = a1;
  *(void *)(inited + 48) = a1;
  *(void *)(inited + 56) = a2;
  swift_bridgeObjectRetain();
  sub_1C2147BA0();
  uint64_t v16 = sub_1C2147B70();
  uint64_t v18 = v17;
  v15(v8, v4);
  *(void *)(inited + 64) = v16;
  *(void *)(inited + 72) = v18;
  if (v14)
  {
    swift_bridgeObjectRetain();
    id v19 = sub_1C1F3AAE0(0, 1, 1, MEMORY[0x1E4FBC860]);
    unint64_t v21 = v19[2];
    unint64_t v20 = v19[3];
    if (v21 >= v20 >> 1) {
      id v19 = sub_1C1F3AAE0((void *)(v20 > 1), v21 + 1, 1, v19);
    }
    v19[2] = v21 + 1;
    uint64_t v22 = &v19[2 * v21];
    v22[4] = v12;
    v22[5] = v14;
  }
  else
  {
    id v19 = (void *)MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    id v19 = sub_1C1F3AAE0(0, v19[2] + 1, 1, v19);
  }
  unint64_t v24 = v19[2];
  unint64_t v23 = v19[3];
  unint64_t v25 = v24 + 1;
  if (v24 >= v23 >> 1) {
    id v19 = sub_1C1F3AAE0((void *)(v23 > 1), v24 + 1, 1, v19);
  }
  v19[2] = v25;
  uint64_t v26 = &v19[2 * v24];
  v26[4] = v31[0];
  v26[5] = a2;
  if (v18)
  {
    unint64_t v27 = v19[3];
    swift_bridgeObjectRetain();
    if (v25 >= v27 >> 1) {
      id v19 = sub_1C1F3AAE0((void *)(v27 > 1), v24 + 2, 1, v19);
    }
    v19[2] = v24 + 2;
    uint64_t v28 = &v19[2 * v25];
    v28[4] = v16;
    void v28[5] = v18;
  }
  swift_release();
  v31[1] = v19;
  sub_1C2007584(0, (unint64_t *)&qword_1EA2C3A40, MEMORY[0x1E4FBB320]);
  sub_1C1F64558();
  uint64_t v29 = sub_1C214A580();
  swift_bridgeObjectRelease();
  return v29;
}

uint64_t type metadata accessor for DDIStepViewController()
{
  uint64_t result = qword_1EA2C6138;
  if (!qword_1EA2C6138) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C2066740()
{
  return swift_initClassMetadata2();
}

void sub_1C2066780(unsigned char *a1@<X8>)
{
  *a1 = -96;
}

void sub_1C206678C()
{
}

void sub_1C20667E8()
{
}

id sub_1C2066818()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DDIStepViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1C2066850()
{
  return type metadata accessor for DDIStepViewController();
}

uint64_t FrequencyIntervalPickerItem.reuseIdentifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FrequencyIntervalPickerItem.reuseIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *objc_super v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*FrequencyIntervalPickerItem.reuseIdentifier.modify())()
{
  return nullsub_1;
}

unint64_t FrequencyIntervalPickerItem.uniqueIdentifier.getter()
{
  return 0xD00000000000001CLL;
}

uint64_t type metadata accessor for FrequencyIntervalPickerItem()
{
  uint64_t result = qword_1EA2C6180;
  if (!qword_1EA2C6180) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t FrequencyIntervalPickerItem.title.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for FrequencyIntervalPickerItem() + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FrequencyIntervalPickerItem.title.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for FrequencyIntervalPickerItem() + 24));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*FrequencyIntervalPickerItem.title.modify())()
{
  return nullsub_1;
}

uint64_t FrequencyIntervalPickerItem.placeholderText.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for FrequencyIntervalPickerItem() + 28));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FrequencyIntervalPickerItem.placeholderText.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for FrequencyIntervalPickerItem() + 28));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*FrequencyIntervalPickerItem.placeholderText.modify())()
{
  return nullsub_1;
}

uint64_t FrequencyIntervalPickerItem.isEditEnabled.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for FrequencyIntervalPickerItem() + 32));
}

uint64_t FrequencyIntervalPickerItem.isEditEnabled.setter(char a1)
{
  uint64_t result = type metadata accessor for FrequencyIntervalPickerItem();
  *(unsigned char *)(v1 + *(int *)(result + 32)) = a1;
  return result;
}

uint64_t (*FrequencyIntervalPickerItem.isEditEnabled.modify())()
{
  return nullsub_1;
}

uint64_t sub_1C2066BD4(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  if (*a1) {
    uint64_t v3 = a1[1];
  }
  else {
    uint64_t v3 = 0;
  }
  uint64_t v4 = (uint64_t *)(a2 + *(int *)(type metadata accessor for FrequencyIntervalPickerItem() + 36));
  uint64_t v5 = *v4;
  sub_1C1F1325C(v2);
  uint64_t result = sub_1C1F31118(v5);
  *uint64_t v4 = v2;
  v4[1] = v3;
  return result;
}

uint64_t FrequencyIntervalPickerItem.dataProvider.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for FrequencyIntervalPickerItem() + 36));
  sub_1C1F1325C(v1);
  return v1;
}

uint64_t FrequencyIntervalPickerItem.dataProvider.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (uint64_t *)(v2 + *(int *)(type metadata accessor for FrequencyIntervalPickerItem() + 36));
  uint64_t result = sub_1C1F31118(*v5);
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*FrequencyIntervalPickerItem.dataProvider.modify())()
{
  return nullsub_1;
}

uint64_t sub_1C2066D14@<X0>(uint64_t a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v3 = (uint64_t *)(a1 + *(int *)(type metadata accessor for FrequencyIntervalPickerItem() + 40));
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  if (*v3)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    *(void *)(v6 + 24) = v5;
    uint64_t v7 = sub_1C1FE4A38;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;

  return sub_1C1F1325C(v4);
}

uint64_t sub_1C2066DA8(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = sub_1C1FE4A10;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v7 = (uint64_t *)(a2 + *(int *)(type metadata accessor for FrequencyIntervalPickerItem() + 40));
  uint64_t v8 = *v7;
  sub_1C1F1325C(v3);
  uint64_t result = sub_1C1F31118(v8);
  *uint64_t v7 = (uint64_t)v6;
  v7[1] = v5;
  return result;
}

uint64_t FrequencyIntervalPickerItem.updateHandler.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for FrequencyIntervalPickerItem() + 40));
  sub_1C1F1325C(v1);
  return v1;
}

uint64_t FrequencyIntervalPickerItem.updateHandler.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (uint64_t *)(v2 + *(int *)(type metadata accessor for FrequencyIntervalPickerItem() + 40));
  uint64_t result = sub_1C1F31118(*v5);
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*FrequencyIntervalPickerItem.updateHandler.modify())()
{
  return nullsub_1;
}

uint64_t FrequencyIntervalPickerItem.init(title:dataProvider:updateHandler:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X8>)
{
  type metadata accessor for FrequencyIntervalCollectionViewCell();
  sub_1C206935C(&qword_1EA2C6158, v14, (void (*)(uint64_t))type metadata accessor for FrequencyIntervalCollectionViewCell);
  *a7 = sub_1C21481D0();
  a7[1] = v15;
  uint64_t v16 = (int *)type metadata accessor for FrequencyIntervalPickerItem();
  uint64_t result = sub_1C2147B10();
  uint64_t v18 = (uint64_t *)((char *)a7 + v16[7]);
  id v19 = (uint64_t *)((char *)a7 + v16[9]);
  unint64_t v20 = (uint64_t *)((char *)a7 + v16[10]);
  unint64_t v21 = (uint64_t *)((char *)a7 + v16[6]);
  *unint64_t v21 = a1;
  v21[1] = a2;
  void *v18 = 0;
  v18[1] = 0;
  *((unsigned char *)a7 + v16[8]) = 1;
  *id v19 = a3;
  v19[1] = a4;
  void *v20 = a5;
  v20[1] = a6;
  return result;
}

uint64_t type metadata accessor for FrequencyIntervalCollectionViewCell()
{
  return self;
}

uint64_t sub_1C2067034(uint64_t a1)
{
  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 32));
}

uint64_t sub_1C2067040(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 36));
  sub_1C1F1325C(v2);
  return v2;
}

uint64_t sub_1C2067080(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1) {
    uint64_t v5 = a2;
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = (uint64_t *)(v3 + *(int *)(a3 + 36));
  uint64_t result = sub_1C1F31118(*v6);
  *uint64_t v6 = a1;
  v6[1] = v5;
  return result;
}

uint64_t (*sub_1C20670C4(uint64_t a1, uint64_t a2))()
{
  uint64_t v3 = *(int *)(a2 + 36);
  *(_DWORD *)(a1 + 24) = v3;
  uint64_t v4 = (uint64_t *)(v2 + v3);
  uint64_t v6 = *v4;
  uint64_t v5 = v4[1];
  if (!v6) {
    uint64_t v5 = 0;
  }
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v2;
  return sub_1C1FE0734;
}

unint64_t sub_1C2067108()
{
  return 0xD00000000000001CLL;
}

uint64_t sub_1C206716C(uint64_t a1, void **a2)
{
  sub_1C1F2116C(a1, (uint64_t)v7);
  uint64_t v3 = *a2;
  uint64_t v4 = (uint64_t)*a2 + OBJC_IVAR____TtC19HealthMedicationsUI35FrequencyIntervalCollectionViewCell_item;
  swift_beginAccess();
  sub_1C1F32DDC((uint64_t)v7, v4);
  uint64_t v5 = swift_endAccess();
  (*(void (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & *v3) + 0xF0))(v5);
  return sub_1C2068DB4((uint64_t)v7, (unint64_t *)&qword_1EBF0C300, (void (*)(uint64_t))sub_1C1F1CB5C);
}

uint64_t sub_1C206722C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI35FrequencyIntervalCollectionViewCell_item;
  swift_beginAccess();
  return sub_1C1F2116C(v3, a1);
}

uint64_t sub_1C2067280(uint64_t a1)
{
  uint64_t v3 = (uint64_t)v1 + OBJC_IVAR____TtC19HealthMedicationsUI35FrequencyIntervalCollectionViewCell_item;
  swift_beginAccess();
  sub_1C1F32DDC(a1, v3);
  uint64_t v4 = swift_endAccess();
  (*(void (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & *v1) + 0xF0))(v4);
  return sub_1C2068DB4(a1, (unint64_t *)&qword_1EBF0C300, (void (*)(uint64_t))sub_1C1F1CB5C);
}

uint64_t (*sub_1C206733C(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1C206739C;
}

uint64_t sub_1C206739C(uint64_t a1, char a2)
{
  uint64_t result = swift_endAccess();
  if ((a2 & 1) == 0) {
    return (*(uint64_t (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & **(void **)(a1 + 24)) + 0xF0))(result);
  }
  return result;
}

id sub_1C2067400()
{
  return sub_1C2067638(&OBJC_IVAR____TtC19HealthMedicationsUI35FrequencyIntervalCollectionViewCell____lazy_storage___titleLabel, (uint64_t (*)(uint64_t))sub_1C2067420);
}

id sub_1C2067420()
{
  sub_1C1F12718(0, &qword_1EA2C6278);
  id v0 = objc_msgSend(self, sel_preferredFontForTextStyle_, *MEMORY[0x1E4FB28C8]);
  id v1 = objc_msgSend(self, sel_labelColor);
  uint64_t v2 = (void *)sub_1C214B1D0();
  uint64_t v3 = sub_1C214A5F0();
  uint64_t v5 = v4;
  sub_1C206935C(&qword_1EA2C6158, v4, (void (*)(uint64_t))type metadata accessor for FrequencyIntervalCollectionViewCell);
  id v6 = v2;
  sub_1C21481D0();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  uint64_t v7 = (void *)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  objc_msgSend(v6, sel_setAccessibilityIdentifier_, v7, v3, v5);

  objc_msgSend(v6, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  return v6;
}

id sub_1C2067618()
{
  return sub_1C2067638(&OBJC_IVAR____TtC19HealthMedicationsUI35FrequencyIntervalCollectionViewCell____lazy_storage___valueLabel, (uint64_t (*)(uint64_t))sub_1C20676A4);
}

id sub_1C2067638(uint64_t *a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(void **)(v2 + *a1);
  if (v4)
  {
    id v5 = *(id *)(v2 + *a1);
  }
  else
  {
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v8 = (void *)a2(ObjectType);
    uint64_t v9 = *(void **)(v2 + v3);
    *(void *)(v2 + v3) = v8;
    id v5 = v8;

    uint64_t v4 = 0;
  }
  id v10 = v4;
  return v5;
}

id sub_1C20676A4()
{
  sub_1C1F12718(0, &qword_1EA2C6278);
  id v0 = objc_msgSend(self, sel_preferredFontForTextStyle_, *MEMORY[0x1E4FB28C8]);
  id v1 = objc_msgSend(self, sel_systemBlueColor);
  uint64_t v2 = (void *)sub_1C214B1D0();
  uint64_t v3 = sub_1C214A5F0();
  uint64_t v5 = v4;
  sub_1C206935C(&qword_1EA2C6158, v4, (void (*)(uint64_t))type metadata accessor for FrequencyIntervalCollectionViewCell);
  id v6 = v2;
  sub_1C21481D0();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  swift_bridgeObjectRelease();
  uint64_t v7 = (void *)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  objc_msgSend(v6, sel_setAccessibilityIdentifier_, v7, v3, v5);

  objc_msgSend(v6, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v6, sel_setTextAlignment_, 2);
  return v6;
}

id sub_1C20678B0()
{
  uint64_t v1 = OBJC_IVAR____TtC19HealthMedicationsUI35FrequencyIntervalCollectionViewCell____lazy_storage___pickerView;
  uint64_t v2 = *(void **)(v0
                + OBJC_IVAR____TtC19HealthMedicationsUI35FrequencyIntervalCollectionViewCell____lazy_storage___pickerView);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC19HealthMedicationsUI35FrequencyIntervalCollectionViewCell____lazy_storage___pickerView);
  }
  else
  {
    id v4 = sub_1C2067910();
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_1C2067910()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1A98]), sel_init);
  objc_msgSend(v0, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  uint64_t v1 = self;
  id v2 = v0;
  id v3 = objc_msgSend(v1, sel_systemBackgroundColor);
  objc_msgSend(v2, sel_setBackgroundColor_, v3);

  uint64_t v8 = sub_1C214A5F0();
  uint64_t v9 = v4;
  swift_bridgeObjectRetain();
  sub_1C214A6C0();
  id v5 = v2;
  swift_bridgeObjectRelease();
  id v6 = (void *)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  objc_msgSend(v5, sel_setAccessibilityIdentifier_, v6, v8, v9);

  return v5;
}

char *sub_1C2067A44(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = &v4[OBJC_IVAR____TtC19HealthMedicationsUI35FrequencyIntervalCollectionViewCell_item];
  *(_OWORD *)uint64_t v9 = 0u;
  *((_OWORD *)v9 + 1) = 0u;
  *((void *)v9 + 4) = 0;
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI35FrequencyIntervalCollectionViewCell____lazy_storage___titleLabel] = 0;
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI35FrequencyIntervalCollectionViewCell____lazy_storage___valueLabel] = 0;
  uint64_t v10 = OBJC_IVAR____TtC19HealthMedicationsUI35FrequencyIntervalCollectionViewCell_separatorView;
  id v11 = objc_allocWithZone(MEMORY[0x1E4FB1EB0]);
  uint64_t v12 = v4;
  id v13 = objc_msgSend(v11, sel_init);
  uint64_t v14 = self;
  id v15 = objc_msgSend(v14, sel_separatorColor);
  objc_msgSend(v13, sel_setBackgroundColor_, v15);

  objc_msgSend(v13, sel_setTranslatesAutoresizingMaskIntoConstraints_, 1);
  *(void *)&v4[v10] = v13;
  *(void *)&v12[OBJC_IVAR____TtC19HealthMedicationsUI35FrequencyIntervalCollectionViewCell____lazy_storage___pickerView] = 0;

  v29.receiver = v12;
  v29.super_class = (Class)type metadata accessor for FrequencyIntervalCollectionViewCell();
  uint64_t v16 = (char *)objc_msgSendSuper2(&v29, sel_initWithFrame_, a1, a2, a3, a4);
  id v17 = objc_msgSend(v16, sel_contentView);
  id v18 = objc_msgSend(v14, sel_systemBackgroundColor);
  objc_msgSend(v17, sel_setBackgroundColor_, v18);

  id v19 = objc_msgSend(v16, sel_contentView);
  id v20 = sub_1C2067400();
  objc_msgSend(v19, sel_addSubview_, v20);

  id v21 = objc_msgSend(v16, sel_contentView);
  id v22 = sub_1C2067618();
  objc_msgSend(v21, sel_addSubview_, v22);

  id v23 = objc_msgSend(v16, sel_contentView);
  objc_msgSend(v23, sel_addSubview_, *(void *)&v16[OBJC_IVAR____TtC19HealthMedicationsUI35FrequencyIntervalCollectionViewCell_separatorView]);

  id v24 = sub_1C20678B0();
  objc_msgSend(v24, sel_setDelegate_, v16);

  id v25 = sub_1C20678B0();
  objc_msgSend(v25, sel_setDataSource_, v16);

  id v26 = objc_msgSend(v16, sel_contentView);
  id v27 = sub_1C20678B0();
  objc_msgSend(v26, sel_addSubview_, v27);

  sub_1C20680DC();
  return v16;
}

id FrequencyIntervalCollectionViewCell.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void sub_1C2067D98()
{
  void (*v13)(uint64_t *__return_ptr, unsigned char *);
  uint64_t v14;
  id v15;
  void *v16;
  id v17;
  unsigned char v18[24];
  uint64_t v19;
  char v20;
  uint64_t v21;

  uint64_t v1 = v0;
  sub_1C2068D60(0, &qword_1EA2C6168, (void (*)(uint64_t))type metadata accessor for FrequencyIntervalPickerItem);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = &v18[-v3];
  uint64_t v5 = type metadata accessor for FrequencyIntervalPickerItem();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = &v18[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI35FrequencyIntervalCollectionViewCell_item;
  swift_beginAccess();
  sub_1C1F2116C(v9, (uint64_t)&v19);
  if (!v21)
  {
    sub_1C2068DB4((uint64_t)&v19, (unint64_t *)&qword_1EBF0C300, (void (*)(uint64_t))sub_1C1F1CB5C);
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
    goto LABEL_9;
  }
  sub_1C1F1CB5C();
  int v10 = swift_dynamicCast();
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v6 + 56))(v4, v10 ^ 1u, 1, v5);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
LABEL_9:
    sub_1C2068DB4((uint64_t)v4, &qword_1EA2C6168, (void (*)(uint64_t))type metadata accessor for FrequencyIntervalPickerItem);
    return;
  }
  sub_1C2068E10((uint64_t)v4, (uint64_t)v8);
  id v11 = sub_1C2067400();
  swift_bridgeObjectRetain();
  uint64_t v12 = (void *)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  objc_msgSend(v11, sel_setText_, v12);

  id v13 = *(void (**)(uint64_t *__return_ptr, unsigned char *))&v8[*(int *)(v5 + 36)];
  if (!v13) {
    goto LABEL_7;
  }
  swift_retain();
  v13(&v19, v8);
  sub_1C1F31118((uint64_t)v13);
  if (v20) {
    goto LABEL_7;
  }
  uint64_t v14 = v19;
  id v15 = sub_1C2067618();
  id v19 = v14;
  sub_1C20C71E4(0);
  uint64_t v16 = (void *)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  objc_msgSend(v15, sel_setText_, v16);

  if (!__OFSUB__(v14, 1))
  {
    id v17 = sub_1C20678B0();
    objc_msgSend(v17, sel_selectRow_inComponent_animated_, v14 - 1, 0, 1);

LABEL_7:
    sub_1C2068E74((uint64_t)v8);
    return;
  }
  __break(1u);
}

void sub_1C20680DC()
{
  id v1 = sub_1C2067400();
  id v2 = sub_1C2067618();
  uint64_t v3 = OBJC_IVAR____TtC19HealthMedicationsUI35FrequencyIntervalCollectionViewCell_separatorView;
  id v4 = *(id *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI35FrequencyIntervalCollectionViewCell_separatorView];
  id v5 = sub_1C20678B0();
  objc_msgSend(v1, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v2, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v5, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);

  uint64_t v69 = self;
  sub_1C1F0ED28();
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1C21532C0;
  id v7 = sub_1C2067400();
  id v8 = objc_msgSend(v7, sel_topAnchor);

  id v9 = objc_msgSend(v0, sel_contentView);
  id v10 = objc_msgSend(v9, sel_topAnchor);

  id v11 = objc_msgSend(v8, sel_constraintEqualToAnchor_constant_, v10, 12.0);
  *(void *)(v6 + 32) = v11;
  id v12 = sub_1C2067400();
  id v13 = objc_msgSend(v12, sel_leadingAnchor);

  id v14 = objc_msgSend(v0, sel_contentView);
  id v15 = objc_msgSend(v14, sel_leadingAnchor);

  if (qword_1EA2C2718 != -1) {
    swift_once();
  }
  id v16 = objc_msgSend(v13, sel_constraintEqualToAnchor_constant_, v15, *(double *)&qword_1EA2C6150);

  *(void *)(v6 + 40) = v16;
  id v17 = sub_1C2067618();
  id v18 = objc_msgSend(v17, sel_topAnchor);

  id v19 = sub_1C2067400();
  id v20 = objc_msgSend(v19, sel_topAnchor);

  id v21 = objc_msgSend(v18, sel_constraintEqualToAnchor_, v20);
  *(void *)(v6 + 48) = v21;
  id v22 = sub_1C2067618();
  id v23 = objc_msgSend(v22, sel_leadingAnchor);

  id v24 = sub_1C2067400();
  id v25 = objc_msgSend(v24, sel_trailingAnchor);

  id v26 = objc_msgSend(v23, sel_constraintGreaterThanOrEqualToAnchor_constant_, v25, *(double *)&qword_1EA2C6150);
  *(void *)(v6 + 56) = v26;
  id v27 = sub_1C2067618();
  id v28 = objc_msgSend(v27, sel_trailingAnchor);

  id v29 = objc_msgSend(v0, sel_contentView);
  id v30 = objc_msgSend(v29, sel_trailingAnchor);

  id v31 = objc_msgSend(v28, sel_constraintEqualToAnchor_constant_, v30, -*(double *)&qword_1EA2C6150);
  *(void *)(v6 + 64) = v31;
  id v32 = objc_msgSend(*(id *)&v0[v3], sel_topAnchor);
  id v33 = sub_1C2067400();
  id v34 = objc_msgSend(v33, sel_bottomAnchor);

  id v35 = objc_msgSend(v32, sel_constraintEqualToAnchor_constant_, v34, 12.0);
  *(void *)(v6 + 72) = v35;
  id v36 = objc_msgSend(*(id *)&v0[v3], sel_topAnchor);
  id v37 = sub_1C2067618();
  id v38 = objc_msgSend(v37, sel_bottomAnchor);

  id v39 = objc_msgSend(v36, sel_constraintEqualToAnchor_constant_, v38, 12.0);
  *(void *)(v6 + 80) = v39;
  id v40 = objc_msgSend(*(id *)&v0[v3], sel_leadingAnchor);
  id v41 = sub_1C2067400();
  id v42 = objc_msgSend(v41, sel_leadingAnchor);

  id v43 = objc_msgSend(v40, sel_constraintEqualToAnchor_, v42);
  *(void *)(v6 + 88) = v43;
  id v44 = objc_msgSend(*(id *)&v0[v3], sel_trailingAnchor);
  id v45 = objc_msgSend(v0, sel_contentView);
  id v46 = objc_msgSend(v45, sel_trailingAnchor);

  id v47 = objc_msgSend(v44, sel_constraintEqualToAnchor_, v46);
  *(void *)(v6 + 96) = v47;
  id v48 = objc_msgSend(*(id *)&v0[v3], sel_heightAnchor);
  id v49 = objc_msgSend(v48, sel_constraintEqualToConstant_, 0.5);

  *(void *)(v6 + 104) = v49;
  id v50 = sub_1C20678B0();
  id v51 = objc_msgSend(v50, sel_topAnchor);

  id v52 = objc_msgSend(*(id *)&v0[v3], sel_bottomAnchor);
  id v53 = objc_msgSend(v51, sel_constraintEqualToAnchor_constant_, v52, 12.0);

  *(void *)(v6 + 112) = v53;
  id v54 = sub_1C20678B0();
  id v55 = objc_msgSend(v54, sel_leadingAnchor);

  id v56 = objc_msgSend(v0, sel_contentView);
  id v57 = objc_msgSend(v56, sel_leadingAnchor);

  id v58 = objc_msgSend(v55, sel_constraintEqualToAnchor_, v57);
  *(void *)(v6 + 120) = v58;
  id v59 = sub_1C20678B0();
  id v60 = objc_msgSend(v59, sel_trailingAnchor);

  id v61 = objc_msgSend(v0, sel_contentView);
  id v62 = objc_msgSend(v61, sel_trailingAnchor);

  id v63 = objc_msgSend(v60, sel_constraintEqualToAnchor_, v62);
  *(void *)(v6 + 128) = v63;
  id v64 = sub_1C20678B0();
  id v65 = objc_msgSend(v64, sel_bottomAnchor);

  id v66 = objc_msgSend(v0, sel_contentView);
  id v67 = objc_msgSend(v66, sel_bottomAnchor);

  id v68 = objc_msgSend(v65, sel_constraintEqualToAnchor_constant_, v67, -12.0);
  *(void *)(v6 + 136) = v68;
  sub_1C214A7A0();
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C810);
  id v70 = (id)sub_1C214A770();
  swift_bridgeObjectRelease();
  objc_msgSend(v69, sel_activateConstraints_, v70);
}

id FrequencyIntervalCollectionViewCell.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FrequencyIntervalCollectionViewCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

Swift::Int __swiftcall FrequencyIntervalCollectionViewCell.numberOfComponents(in:)(UIPickerView *in)
{
  return 1;
}

Swift::Int __swiftcall FrequencyIntervalCollectionViewCell.pickerView(_:numberOfRowsInComponent:)(UIPickerView *_, Swift::Int numberOfRowsInComponent)
{
  Swift::Int v2 = *(void *)(sub_1C20C753C() + 16);
  swift_bridgeObjectRelease();
  return v2;
}

Swift::String_optional __swiftcall FrequencyIntervalCollectionViewCell.pickerView(_:titleForRow:forComponent:)(UIPickerView *_, Swift::Int titleForRow, Swift::Int forComponent)
{
  uint64_t v4 = sub_1C20C753C();
  if (titleForRow < 0)
  {
    __break(1u);
    goto LABEL_5;
  }
  if (*(void *)(v4 + 16) <= (unint64_t)titleForRow)
  {
LABEL_5:
    __break(1u);
    goto LABEL_6;
  }
  swift_bridgeObjectRelease();
  uint64_t v4 = sub_1C20C71E4(0);
LABEL_6:
  result.value._object = v5;
  result.value._countAndFlagsBits = v4;
  return result;
}

Swift::Void __swiftcall FrequencyIntervalCollectionViewCell.pickerView(_:didSelectRow:inComponent:)(UIPickerView *_, Swift::Int didSelectRow, Swift::Int inComponent)
{
}

uint64_t FrequencyIntervalCollectionViewCell.deselectionBehavior.getter@<X0>(unsigned char *a1@<X8>)
{
  *a1 = 1;
  uint64_t v2 = *MEMORY[0x1E4F66478];
  uint64_t v3 = sub_1C2148620();
  uint64_t v4 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104);

  return v4(a1, v2, v3);
}

uint64_t sub_1C2068C10()
{
  sub_1C2148990();
  uint64_t result = sub_1C2148980();
  qword_1EA2C6150 = v1;
  return result;
}

void _s19HealthMedicationsUI35FrequencyIntervalCollectionViewCellC5coderACSgSo7NSCoderC_tcfc_0()
{
  uint64_t v1 = &v0[OBJC_IVAR____TtC19HealthMedicationsUI35FrequencyIntervalCollectionViewCell_item];
  *(_OWORD *)uint64_t v1 = 0u;
  *((_OWORD *)v1 + 1) = 0u;
  *((void *)v1 + 4) = 0;
  *(void *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI35FrequencyIntervalCollectionViewCell____lazy_storage___titleLabel] = 0;
  *(void *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI35FrequencyIntervalCollectionViewCell____lazy_storage___valueLabel] = 0;
  uint64_t v2 = OBJC_IVAR____TtC19HealthMedicationsUI35FrequencyIntervalCollectionViewCell_separatorView;
  id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1EB0]), sel_init);
  id v4 = objc_msgSend(self, sel_separatorColor);
  objc_msgSend(v3, sel_setBackgroundColor_, v4);

  objc_msgSend(v3, sel_setTranslatesAutoresizingMaskIntoConstraints_, 1);
  *(void *)&v0[v2] = v3;
  *(void *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI35FrequencyIntervalCollectionViewCell____lazy_storage___pickerView] = 0;

  sub_1C214B910();
  __break(1u);
}

void sub_1C2068D60(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C214B4F0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1C2068DB4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1C2068D60(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1C2068E10(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FrequencyIntervalPickerItem();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C2068E74(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FrequencyIntervalPickerItem();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C2068ED0(unint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1C21497F0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  id v7 = &v26[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1C2068D60(0, &qword_1EA2C6168, (void (*)(uint64_t))type metadata accessor for FrequencyIntervalPickerItem);
  MEMORY[0x1F4188790](v8 - 8);
  id v10 = &v26[-v9];
  uint64_t v11 = type metadata accessor for FrequencyIntervalPickerItem();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  id v14 = &v26[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v15 = (uint64_t)v2 + OBJC_IVAR____TtC19HealthMedicationsUI35FrequencyIntervalCollectionViewCell_item;
  swift_beginAccess();
  sub_1C1F2116C(v15, (uint64_t)&v27);
  if (!v29)
  {
    sub_1C2068DB4((uint64_t)&v27, (unint64_t *)&qword_1EBF0C300, (void (*)(uint64_t))sub_1C1F1CB5C);
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, 1, 1, v11);
    goto LABEL_8;
  }
  sub_1C1F1CB5C();
  int v16 = swift_dynamicCast();
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v12 + 56))(v10, v16 ^ 1u, 1, v11);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
LABEL_8:
    sub_1C2068DB4((uint64_t)v10, &qword_1EA2C6168, (void (*)(uint64_t))type metadata accessor for FrequencyIntervalPickerItem);
LABEL_9:
    sub_1C21497A0();
    id v23 = sub_1C21497E0();
    os_log_type_t v24 = sub_1C214ABD0();
    if (os_log_type_enabled(v23, v24))
    {
      id v25 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v25 = 0;
      _os_log_impl(&dword_1C1F0B000, v23, v24, "Item is not a FrequencyIntervalPickerItem. Unable to update.", v25, 2u);
      MEMORY[0x1C8754730](v25, -1, -1);
    }

    return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
  }
  sub_1C2068E10((uint64_t)v10, (uint64_t)v14);
  id v17 = *(void (**)(unsigned char *, uint64_t *))&v14[*(int *)(v11 + 40)];
  if (!v17)
  {
    sub_1C2068E74((uint64_t)v14);
    goto LABEL_9;
  }
  swift_retain();
  uint64_t result = sub_1C20C753C();
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)(result + 16) > a1)
  {
    uint64_t v19 = *(void *)(result + 8 * a1 + 32);
    swift_bridgeObjectRelease();
    id v20 = sub_1C2067618();
    uint64_t v27 = v19;
    sub_1C20C71E4(0);
    id v21 = (void *)sub_1C214A5B0();
    swift_bridgeObjectRelease();
    objc_msgSend(v20, sel_setText_, v21);

    id v22 = sub_1C2067618();
    objc_msgSend(v22, sel_sizeToFit);

    objc_msgSend(v2, sel_invalidateIntrinsicContentSize);
    objc_msgSend(v2, sel_setNeedsLayout);
    uint64_t v27 = v19;
    char v28 = 0;
    v17(v14, &v27);
    sub_1C1F31118((uint64_t)v17);
    return sub_1C2068E74((uint64_t)v14);
  }
  __break(1u);
  return result;
}

uint64_t sub_1C2069310()
{
  return sub_1C206935C((unint64_t *)&unk_1EA2C6170, 255, (void (*)(uint64_t))type metadata accessor for FrequencyIntervalPickerItem);
}

uint64_t sub_1C206935C(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C20693A4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  id v3 = (uint64_t *)(a1 + *(int *)(type metadata accessor for FrequencyIntervalPickerItem() + 36));
  uint64_t v4 = *v3;
  if (*v3) {
    uint64_t v5 = v3[1];
  }
  else {
    uint64_t v5 = 0;
  }
  *a2 = v4;
  a2[1] = v5;

  return sub_1C1F1325C(v4);
}

uint64_t sub_1C2069404@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC19HealthMedicationsUI35FrequencyIntervalCollectionViewCell_item;
  swift_beginAccess();
  return sub_1C1F2116C(v3, a2);
}

void *initializeBufferWithCopyOfBuffer for FrequencyIntervalPickerItem(void *a1, void *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v29 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v29 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    id v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1C2147B20();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = a3[6];
    uint64_t v14 = a3[7];
    uint64_t v15 = (void *)((char *)v4 + v13);
    int v16 = (void *)((char *)a2 + v13);
    uint64_t v17 = v16[1];
    void *v15 = *v16;
    v15[1] = v17;
    id v18 = (void *)((char *)v4 + v14);
    uint64_t v19 = (void *)((char *)a2 + v14);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    uint64_t v22 = a3[8];
    uint64_t v23 = a3[9];
    char v24 = *((unsigned char *)a2 + v22);
    void *v18 = v20;
    v18[1] = v21;
    *((unsigned char *)v4 + v22) = v24;
    id v25 = (void *)((char *)v4 + v23);
    id v26 = (char *)a2 + v23;
    uint64_t v27 = *(void *)((char *)a2 + v23);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v27)
    {
      uint64_t v28 = *((void *)v26 + 1);
      *id v25 = v27;
      v25[1] = v28;
      swift_retain();
    }
    else
    {
      *(_OWORD *)id v25 = *(_OWORD *)v26;
    }
    uint64_t v30 = a3[10];
    id v31 = (void *)((char *)v4 + v30);
    id v32 = (void *)((char *)a2 + v30);
    if (*v32)
    {
      uint64_t v33 = v32[1];
      *id v31 = *v32;
      v31[1] = v33;
      swift_retain();
    }
    else
    {
      *(_OWORD *)id v31 = *(_OWORD *)v32;
    }
  }
  return v4;
}

uint64_t destroy for FrequencyIntervalPickerItem(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = sub_1C2147B20();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (*(void *)(a1 + a2[9])) {
    uint64_t result = swift_release();
  }
  if (*(void *)(a1 + a2[10]))
  {
    return swift_release();
  }
  return result;
}

void *initializeWithCopy for FrequencyIntervalPickerItem(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1C2147B20();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  uint64_t v12 = a3[6];
  uint64_t v13 = a3[7];
  uint64_t v14 = (void *)((char *)a1 + v12);
  uint64_t v15 = (void *)((char *)a2 + v12);
  uint64_t v16 = v15[1];
  *uint64_t v14 = *v15;
  v14[1] = v16;
  uint64_t v17 = (void *)((char *)a1 + v13);
  id v18 = (void *)((char *)a2 + v13);
  uint64_t v19 = *v18;
  uint64_t v20 = v18[1];
  uint64_t v21 = a3[8];
  uint64_t v22 = a3[9];
  char v23 = *((unsigned char *)a2 + v21);
  *uint64_t v17 = v19;
  v17[1] = v20;
  *((unsigned char *)a1 + v21) = v23;
  char v24 = (void *)((char *)a1 + v22);
  id v25 = (char *)a2 + v22;
  uint64_t v26 = *(void *)((char *)a2 + v22);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v26)
  {
    uint64_t v27 = *((void *)v25 + 1);
    *char v24 = v26;
    v24[1] = v27;
    swift_retain();
  }
  else
  {
    *(_OWORD *)char v24 = *(_OWORD *)v25;
  }
  uint64_t v28 = a3[10];
  uint64_t v29 = (void *)((char *)a1 + v28);
  uint64_t v30 = (void *)((char *)a2 + v28);
  if (*v30)
  {
    uint64_t v31 = v30[1];
    *uint64_t v29 = *v30;
    v29[1] = v31;
    swift_retain();
  }
  else
  {
    *(_OWORD *)uint64_t v29 = *(_OWORD *)v30;
  }
  return a1;
}

void *assignWithCopy for FrequencyIntervalPickerItem(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1C2147B20();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = (void *)((char *)a1 + v10);
  uint64_t v12 = (void *)((char *)a2 + v10);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v13 = a3[7];
  uint64_t v14 = (void *)((char *)a1 + v13);
  uint64_t v15 = (void *)((char *)a2 + v13);
  *uint64_t v14 = *v15;
  v14[1] = v15[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  uint64_t v16 = a3[9];
  uint64_t v17 = (void *)((char *)a1 + v16);
  id v18 = (char *)a2 + v16;
  uint64_t v19 = *(void *)((char *)a1 + v16);
  uint64_t v20 = *(void *)((char *)a2 + v16);
  if (v19)
  {
    if (v20)
    {
      uint64_t v21 = *((void *)v18 + 1);
      *uint64_t v17 = v20;
      v17[1] = v21;
      swift_retain();
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v20)
  {
    uint64_t v22 = *((void *)v18 + 1);
    *uint64_t v17 = v20;
    v17[1] = v22;
    swift_retain();
    goto LABEL_8;
  }
  *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
LABEL_8:
  uint64_t v23 = a3[10];
  char v24 = (void *)((char *)a1 + v23);
  id v25 = (void *)((char *)a2 + v23);
  uint64_t v26 = *(void *)((char *)a1 + v23);
  uint64_t v27 = *v25;
  if (!v26)
  {
    if (v27)
    {
      uint64_t v29 = v25[1];
      *char v24 = v27;
      v24[1] = v29;
      swift_retain();
      return a1;
    }
LABEL_14:
    *(_OWORD *)char v24 = *(_OWORD *)v25;
    return a1;
  }
  if (!v27)
  {
    swift_release();
    goto LABEL_14;
  }
  uint64_t v28 = v25[1];
  *char v24 = v27;
  v24[1] = v28;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *initializeWithTake for FrequencyIntervalPickerItem(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1C2147B20();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[7];
  *(_OWORD *)((char *)a1 + a3[6]) = *(_OWORD *)((char *)a2 + a3[6]);
  *(_OWORD *)((char *)a1 + v10) = *(_OWORD *)((char *)a2 + v10);
  uint64_t v11 = a3[9];
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  uint64_t v12 = (void *)((char *)a1 + v11);
  uint64_t v13 = (uint64_t *)((char *)a2 + v11);
  uint64_t v14 = *v13;
  if (*v13)
  {
    uint64_t v15 = v13[1];
    *uint64_t v12 = v14;
    v12[1] = v15;
  }
  else
  {
    *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
  }
  uint64_t v16 = a3[10];
  uint64_t v17 = (void *)((char *)a1 + v16);
  id v18 = (uint64_t *)((char *)a2 + v16);
  uint64_t v19 = *v18;
  if (*v18)
  {
    uint64_t v20 = v18[1];
    *uint64_t v17 = v19;
    v17[1] = v20;
  }
  else
  {
    *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
  }
  return a1;
}

void *assignWithTake for FrequencyIntervalPickerItem(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1C2147B20();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = (void *)((char *)a1 + v11);
  uint64_t v13 = (void *)((char *)a2 + v11);
  uint64_t v15 = *v13;
  uint64_t v14 = v13[1];
  *uint64_t v12 = v15;
  v12[1] = v14;
  swift_bridgeObjectRelease();
  uint64_t v16 = a3[7];
  uint64_t v17 = (void *)((char *)a1 + v16);
  id v18 = (void *)((char *)a2 + v16);
  uint64_t v20 = *v18;
  uint64_t v19 = v18[1];
  *uint64_t v17 = v20;
  v17[1] = v19;
  swift_bridgeObjectRelease();
  uint64_t v21 = a3[9];
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  uint64_t v22 = (void *)((char *)a1 + v21);
  uint64_t v23 = (char *)a2 + v21;
  uint64_t v24 = *(void *)((char *)a2 + v21);
  if (*(void *)((char *)a1 + v21))
  {
    if (v24)
    {
      uint64_t v25 = *((void *)v23 + 1);
      *uint64_t v22 = v24;
      v22[1] = v25;
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v24)
  {
    uint64_t v26 = *((void *)v23 + 1);
    *uint64_t v22 = v24;
    v22[1] = v26;
    goto LABEL_8;
  }
  *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
LABEL_8:
  uint64_t v27 = a3[10];
  uint64_t v28 = (void *)((char *)a1 + v27);
  uint64_t v29 = (void *)((char *)a2 + v27);
  uint64_t v30 = *(void *)((char *)a1 + v27);
  uint64_t v31 = *v29;
  if (!v30)
  {
    if (v31)
    {
      uint64_t v33 = v29[1];
      *uint64_t v28 = v31;
      v28[1] = v33;
      return a1;
    }
LABEL_14:
    *(_OWORD *)uint64_t v28 = *(_OWORD *)v29;
    return a1;
  }
  if (!v31)
  {
    swift_release();
    goto LABEL_14;
  }
  uint64_t v32 = v29[1];
  *uint64_t v28 = v31;
  v28[1] = v32;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for FrequencyIntervalPickerItem(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C2069C40);
}

uint64_t sub_1C2069C40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1C2147B20();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for FrequencyIntervalPickerItem(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C2069D04);
}

uint64_t sub_1C2069D04(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1C2147B20();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1C2069DAC()
{
  uint64_t result = sub_1C2147B20();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t method lookup function for FrequencyIntervalCollectionViewCell(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FrequencyIntervalCollectionViewCell);
}

uint64_t dispatch thunk of FrequencyIntervalCollectionViewCell.item.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of FrequencyIntervalCollectionViewCell.item.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of FrequencyIntervalCollectionViewCell.item.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of FrequencyIntervalCollectionViewCell.itemUpdated()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xF0))();
}

uint64_t sub_1C2069F44()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t MedicationDoseEventDataSource.__allocating_init(healthStore:forMedication:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  swift_defaultActor_initialize();
  *(void *)(v4 + 112) = a1;
  *(void *)(v4 + 120) = a2;
  return v4;
}

uint64_t MedicationDoseEventDataSource.init(healthStore:forMedication:)(uint64_t a1, uint64_t a2)
{
  swift_defaultActor_initialize();
  *(void *)(v2 + 112) = a1;
  *(void *)(v2 + 120) = a2;
  return v2;
}

uint64_t sub_1C206A008(uint64_t a1)
{
  v2[3] = a1;
  v2[4] = v1;
  v2[5] = *v1;
  uint64_t v3 = sub_1C21497F0();
  v2[6] = v3;
  v2[7] = *(void *)(v3 - 8);
  v2[8] = swift_task_alloc();
  sub_1C206AA58(0, &qword_1EA2C6288, MEMORY[0x1E4F29558]);
  v2[9] = v4;
  v2[10] = *(void *)(v4 - 8);
  v2[11] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C206A168, v1, 0);
}

uint64_t sub_1C206A168()
{
  unint64_t v1 = *(void **)(v0[4] + 120);
  if (v1)
  {
    sub_1C1F0ED28();
    uint64_t v2 = swift_allocObject();
    *(_OWORD *)(v2 + 16) = xmmword_1C214FCB0;
    uint64_t v3 = self;
    id v4 = v1;
    uint64_t v5 = (void *)sub_1C2147550();
    id v6 = objc_msgSend(v3, sel_predicateForSamplesWithinDateInterval_options_, v5, 0);

    *(void *)(v2 + 32) = v6;
    id v7 = objc_msgSend(v4, sel_semanticIdentifier);
    id v8 = objc_msgSend(v7, sel_stringValue);

    if (!v8)
    {
      sub_1C214A5F0();
      id v8 = (id)sub_1C214A5B0();
      swift_bridgeObjectRelease();
    }
    id v9 = objc_msgSend(v3, sel_predicateForMedicationDoseEventWithMedicationIdentifier_, v8);

    *(void *)(v2 + 40) = v9;
    sub_1C214A7A0();
    sub_1C1F12718(0, &qword_1EBF0B4B0);
    uint64_t v10 = (void *)sub_1C214A770();
    swift_bridgeObjectRelease();
    id v11 = objc_msgSend(self, sel_andPredicateWithSubpredicates_, v10);
  }
  else
  {
    uint64_t v12 = self;
    uint64_t v10 = (void *)sub_1C2147550();
    id v11 = objc_msgSend(v12, sel_predicateForSamplesWithinDateInterval_options_, v10, 0);
  }
  v0[12] = v11;
  uint64_t v13 = v0[4];

  uint64_t v14 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4F29540];
  sub_1C206AA00(0, &qword_1EA2C6298, &qword_1EA2C62A0, MEMORY[0x1E4F29540]);
  sub_1C206AA58(0, &qword_1EA2C62A0, v14);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1C214FCD0;
  id v15 = objc_msgSend(self, sel_medicationDoseEventType);
  sub_1C1F12718(0, &qword_1EA2C6290);
  id v16 = v11;
  sub_1C214A490();

  uint64_t v17 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4F26FC8];
  sub_1C206AA00(0, &qword_1EA2C62A8, &qword_1EA2C62B0, MEMORY[0x1E4F26FC8]);
  sub_1C206AA58(0, &qword_1EA2C62B0, v17);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1C214FCD0;
  uint64_t KeyPath = swift_getKeyPath();
  MEMORY[0x1C874F860](KeyPath, 0);
  sub_1C214A4A0();
  uint64_t v19 = *(void *)(v13 + 112);
  uint64_t v20 = (void *)swift_task_alloc();
  v0[13] = v20;
  void *v20 = v0;
  v20[1] = sub_1C206A5E8;
  uint64_t v21 = v0[9];
  return MEMORY[0x1F40E7850](v19, v21);
}

uint64_t sub_1C206A5E8(uint64_t a1)
{
  id v4 = (void *)*v2;
  v4[14] = v1;
  swift_task_dealloc();
  uint64_t v5 = v4[4];
  if (v1)
  {
    id v6 = sub_1C206A964;
  }
  else
  {
    v4[15] = a1;
    id v6 = sub_1C206A724;
  }
  return MEMORY[0x1F4188298](v6, v5, 0);
}

uint64_t sub_1C206A724()
{
  id v18 = v0;
  uint64_t v1 = sub_1C1F6520C(v0[15]);
  swift_bridgeObjectRelease();
  if (v1)
  {
    uint64_t v2 = (void *)v0[12];
    (*(void (**)(void, void))(v0[10] + 8))(v0[11], v0[9]);
  }
  else
  {
    sub_1C21497D0();
    uint64_t v3 = sub_1C21497E0();
    os_log_type_t v4 = sub_1C214ABD0();
    BOOL v5 = os_log_type_enabled(v3, v4);
    id v6 = (void *)v0[12];
    uint64_t v8 = v0[7];
    uint64_t v7 = v0[8];
    uint64_t v9 = v0[6];
    if (v5)
    {
      uint64_t v16 = v0[6];
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      uint64_t v11 = swift_slowAlloc();
      uint64_t v17 = v11;
      *(_DWORD *)uint64_t v10 = 136315138;
      uint64_t v12 = sub_1C214BC10();
      v0[2] = sub_1C1F6FD54(v12, v13, &v17);
      sub_1C214B530();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C1F0B000, v3, v4, "[%s] Error fetching medication dose event samples", v10, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C8754730](v11, -1, -1);
      MEMORY[0x1C8754730](v10, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v16);
    }
    else
    {

      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
    }
    (*(void (**)(void, void))(v0[10] + 8))(v0[11], v0[9]);
    uint64_t v1 = MEMORY[0x1E4FBC860];
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v14 = (uint64_t (*)(uint64_t))v0[1];
  return v14(v1);
}

uint64_t sub_1C206A964()
{
  uint64_t v1 = *(void *)(v0 + 88);
  uint64_t v2 = *(void *)(v0 + 72);
  uint64_t v3 = *(void *)(v0 + 80);

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  os_log_type_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

void sub_1C206AA00(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    sub_1C206AA58(255, a3, a4);
    unint64_t v5 = sub_1C214BA50();
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1C206AA58(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = sub_1C1F12718(255, &qword_1EA2C6290);
    unint64_t v7 = a3(a1, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

char *keypath_get_selector_startDate()
{
  return sel_startDate;
}

void sub_1C206AAD4(id *a1)
{
  id v1 = objc_msgSend(*a1, sel_startDate);
  sub_1C2147A60();
}

uint64_t sub_1C206AB38(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  sub_1C206AA58(0, &qword_1EA2C62C0, MEMORY[0x1E4F29580]);
  v3[5] = v4;
  void v3[6] = *(void *)(v4 - 8);
  v3[7] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C206AC18, v2, 0);
}

uint64_t sub_1C206AC18()
{
  id v1 = *(void **)(v0[4] + 120);
  if (v1)
  {
    sub_1C1F0ED28();
    uint64_t v2 = swift_allocObject();
    *(_OWORD *)(v2 + 16) = xmmword_1C214FCB0;
    uint64_t v3 = self;
    id v4 = v1;
    unint64_t v5 = (void *)sub_1C2147550();
    id v6 = objc_msgSend(v3, sel_predicateForSamplesWithinDateInterval_options_, v5, 0);

    *(void *)(v2 + 32) = v6;
    id v7 = objc_msgSend(v4, sel_semanticIdentifier);
    id v8 = objc_msgSend(v7, sel_stringValue);

    if (!v8)
    {
      sub_1C214A5F0();
      id v8 = (id)sub_1C214A5B0();
      swift_bridgeObjectRelease();
    }
    id v9 = objc_msgSend(v3, sel_predicateForMedicationDoseEventWithMedicationIdentifier_, v8);

    *(void *)(v2 + 40) = v9;
    sub_1C214A7A0();
    sub_1C1F12718(0, &qword_1EBF0B4B0);
    uint64_t v10 = (void *)sub_1C214A770();
    swift_bridgeObjectRelease();
    id v11 = objc_msgSend(self, sel_andPredicateWithSubpredicates_, v10);
  }
  else
  {
    uint64_t v12 = self;
    uint64_t v10 = (void *)sub_1C2147550();
    id v11 = objc_msgSend(v12, sel_predicateForSamplesWithinDateInterval_options_, v10, 0);
  }
  uint64_t v14 = v0[6];
  uint64_t v13 = v0[7];
  uint64_t v15 = v0[5];
  uint64_t v21 = v0[4];

  uint64_t v16 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4F29540];
  sub_1C206AA00(0, &qword_1EA2C6298, &qword_1EA2C62A0, MEMORY[0x1E4F29540]);
  sub_1C206AA58(0, &qword_1EA2C62A0, v16);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1C214FCD0;
  id v17 = objc_msgSend(self, sel_medicationDoseEventType, v21);
  sub_1C1F12718(0, &qword_1EA2C6290);
  id v18 = v11;
  sub_1C214A490();

  sub_1C214A4C0();
  sub_1C214A4E0();

  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
  swift_task_dealloc();
  uint64_t v19 = (uint64_t (*)(void))v0[1];
  return v19();
}

uint64_t MedicationDoseEventDataSource.deinit()
{
  swift_defaultActor_destroy();
  return v0;
}

uint64_t MedicationDoseEventDataSource.__deallocating_deinit()
{
  swift_defaultActor_destroy();

  return MEMORY[0x1F4188210](v0);
}

uint64_t MedicationDoseEventDataSource.unownedExecutor.getter()
{
  return v0;
}

uint64_t sub_1C206B03C()
{
  return v0;
}

uint64_t type metadata accessor for MedicationDoseEventDataSource()
{
  return self;
}

uint64_t method lookup function for MedicationDoseEventDataSource(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MedicationDoseEventDataSource);
}

uint64_t dispatch thunk of MedicationDoseEventDataSource.__allocating_init(healthStore:forMedication:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of MedicationDoseEventDataSource.fetchDoseEvents(in:)(uint64_t a1)
{
  id v6 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)v1 + 120) + **(int **)(*(void *)v1 + 120));
  id v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *id v4 = v2;
  v4[1] = sub_1C206B19C;
  return v6(a1);
}

uint64_t sub_1C206B19C(uint64_t a1)
{
  uint64_t v5 = *v1;
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v5 + 8);
  return v3(a1);
}

uint64_t dispatch thunk of MedicationDoseEventDataSource.observeDoseEvents(in:)(uint64_t a1, uint64_t a2)
{
  id v8 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(*(void *)v2 + 128) + **(int **)(*(void *)v2 + 128));
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_1C1F40400;
  return v8(a1, a2);
}

id sub_1C206B3A8(double a1, double a2, double a3, double a4)
{
  sub_1C206CA30(0, &qword_1EBF0C620, MEMORY[0x1E4FB0F28]);
  MEMORY[0x1F4188790](v9 - 8);
  id v11 = (char *)&v21 - v10;
  uint64_t v12 = &v4[OBJC_IVAR____TtC19HealthMedicationsUI21ConnectivityIssueCell_item];
  *(_OWORD *)uint64_t v12 = 0u;
  *((_OWORD *)v12 + 1) = 0u;
  *((void *)v12 + 4) = 0;
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI21ConnectivityIssueCell____lazy_storage___boltIconImageView] = 0;
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI21ConnectivityIssueCell____lazy_storage___labelView] = 0;
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI21ConnectivityIssueCell____lazy_storage___secondaryLabel] = 0;
  *(void *)&v4[OBJC_IVAR____TtC19HealthMedicationsUI21ConnectivityIssueCell____lazy_storage___settingsButton] = 0;
  uint64_t v13 = (objc_class *)type metadata accessor for ConnectivityIssueCell();
  v21.receiver = v4;
  v21.super_class = v13;
  id v14 = objc_msgSendSuper2(&v21, sel_initWithFrame_, a1, a2, a3, a4);
  objc_msgSend(v14, sel_setSelectedBackgroundView_, 0);
  uint64_t v15 = self;
  id v16 = v14;
  id v17 = objc_msgSend(v15, sel_secondarySystemGroupedBackgroundColor);
  objc_msgSend(v16, sel_setBackgroundColor_, v17);

  id v18 = v16;
  sub_1C21499B0();
  uint64_t v19 = sub_1C21499D0();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v11, 0, 1, v19);
  MEMORY[0x1C8752FF0](v11);

  sub_1C206C1B8();
  return v18;
}

id sub_1C206B5DC()
{
  return sub_1C206BA88(&OBJC_IVAR____TtC19HealthMedicationsUI21ConnectivityIssueCell____lazy_storage___boltIconImageView, (uint64_t (*)(void))sub_1C206B5FC);
}

id sub_1C206B5FC()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1838]), sel_init);
  objc_msgSend(v0, sel_setContentMode_, 4);
  uint64_t v1 = self;
  id v2 = objc_msgSend(v1, sel_configurationWithPointSize_, 48.0);
  uint64_t v3 = (void *)sub_1C214A5B0();
  id v4 = objc_msgSend(self, sel_systemImageNamed_withConfiguration_, v3, v2);

  if (v4)
  {
    id v5 = objc_msgSend(self, sel_secondarySystemFillColor);
    id v6 = objc_msgSend(v1, sel_configurationWithHierarchicalColor_, v5);

    id v7 = objc_msgSend(v4, sel_imageByApplyingSymbolConfiguration_, v6);
  }
  else
  {
    id v7 = 0;
  }
  objc_msgSend(v0, sel_setImage_, v7);

  return v0;
}

id sub_1C206B770()
{
  return sub_1C206BA88(&OBJC_IVAR____TtC19HealthMedicationsUI21ConnectivityIssueCell____lazy_storage___labelView, (uint64_t (*)(void))sub_1C206B790);
}

id sub_1C206B790()
{
  uint64_t v14 = sub_1C2149A80();
  uint64_t v0 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  id v2 = (char *)&v13 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1C2149BE0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  id v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
  objc_msgSend(v7, sel_setNumberOfLines_, 0);
  id v8 = objc_msgSend(self, sel_labelColor);
  objc_msgSend(v7, sel_setTextColor_, v8);

  if (qword_1EBF0CA00 != -1) {
    swift_once();
  }
  id v9 = (id)qword_1EBF0CA18;
  swift_bridgeObjectRetain();
  sub_1C2147730();
  swift_bridgeObjectRelease();

  uint64_t v10 = (void *)sub_1C214A5B0();
  swift_bridgeObjectRelease();
  objc_msgSend(v7, sel_setText_, v10);

  sub_1C2149B50();
  sub_1C2149AB0();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  id v11 = (void *)sub_1C2149A40();
  (*(void (**)(char *, uint64_t))(v0 + 8))(v2, v14);
  objc_msgSend(v7, sel_setFont_, v11);

  return v7;
}

id sub_1C206BA68()
{
  return sub_1C206BA88(&OBJC_IVAR____TtC19HealthMedicationsUI21ConnectivityIssueCell____lazy_storage___secondaryLabel, (uint64_t (*)(void))sub_1C206BAE8);
}

id sub_1C206BA88(uint64_t *a1, uint64_t (*a2)(void))
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(void **)(v2 + *a1);
  if (v4)
  {
    id v5 = *(id *)(v2 + *a1);
  }
  else
  {
    id v6 = (void *)a2();
    id v7 = *(void **)(v2 + v3);
    *(void *)(v2 + v3) = v6;
    id v5 = v6;

    uint64_t v4 = 0;
  }
  id v8 = v4;
  return v5;
}

id sub_1C206BAE8()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
  objc_msgSend(v0, sel_setNumberOfLines_, 0);
  id v1 = objc_msgSend(self, sel_secondaryLabelColor);
  objc_msgSend(v0, sel_setTextColor_, v1);

  objc_msgSend(v0, sel_setTextAlignment_, 1);
  id result = (id)MobileGestalt_get_current_device();
  if (result)
  {
    uint64_t v3 = result;
    MobileGestalt_get_wapiCapability();

    if (qword_1EBF0CA00 != -1) {
      swift_once();
    }
    id v4 = (id)qword_1EBF0CA18;
    swift_bridgeObjectRetain();
    sub_1C2147730();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    id v5 = (void *)sub_1C214A5B0();
    swift_bridgeObjectRelease();
    objc_msgSend(v0, sel_setText_, v5, 0xE000000000000000);

    return v0;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1C206BCAC()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1C214B3D0();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  id v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  id v8 = (char *)&v19 - v7;
  uint64_t v9 = OBJC_IVAR____TtC19HealthMedicationsUI21ConnectivityIssueCell____lazy_storage___settingsButton;
  uint64_t v10 = *(void **)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI21ConnectivityIssueCell____lazy_storage___settingsButton);
  if (v10)
  {
    id v11 = *(id *)(v0 + OBJC_IVAR____TtC19HealthMedicationsUI21ConnectivityIssueCell____lazy_storage___settingsButton);
  }
  else
  {
    sub_1C214B380();
    if (qword_1EBF0CA00 != -1) {
      swift_once();
    }
    id v12 = (id)qword_1EBF0CA18;
    swift_bridgeObjectRetain();
    sub_1C2147730();
    swift_bridgeObjectRelease();

    sub_1C214B390();
    id v13 = objc_msgSend(self, sel_tintColor);
    sub_1C214B320();
    sub_1C1F12718(0, &qword_1EBF0C928);
    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v8, v2);
    uint64_t v14 = (void *)sub_1C214B3E0();
    sub_1C1F12718(0, &qword_1EA2C3198);
    uint64_t v15 = (void *)sub_1C214B250();
    objc_msgSend(v14, sel_addAction_forControlEvents_, v15, 64);

    (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
    id v16 = *(void **)(v1 + v9);
    *(void *)(v1 + v9) = v14;
    id v11 = v14;

    uint64_t v10 = 0;
  }
  id v17 = v10;
  return v11;
}

id sub_1C206BF84()
{
  sub_1C206CA30(0, &qword_1EA2C38F8, MEMORY[0x1E4F276F0]);
  uint64_t v1 = MEMORY[0x1F4188790](v0 - 8);
  uint64_t v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v1);
  uint64_t v5 = (char *)&v12 - v4;
  sub_1C2147860();
  id result = objc_msgSend(self, sel_defaultWorkspace);
  if (result)
  {
    uint64_t v7 = result;
    sub_1C206C91C((uint64_t)v5, (uint64_t)v3, &qword_1EA2C38F8, MEMORY[0x1E4F276F0]);
    uint64_t v8 = sub_1C2147870();
    uint64_t v9 = *(void *)(v8 - 8);
    uint64_t v10 = 0;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v3, 1, v8) != 1)
    {
      uint64_t v10 = (void *)sub_1C2147840();
      (*(void (**)(char *, uint64_t))(v9 + 8))(v3, v8);
    }
    sub_1C1F49F60(MEMORY[0x1E4FBC860]);
    id v11 = (void *)sub_1C214A500();
    swift_bridgeObjectRelease();
    objc_msgSend(v7, sel_openSensitiveURL_withOptions_, v10, v11);

    return (id)sub_1C206CA84((uint64_t)v5, &qword_1EA2C38F8, MEMORY[0x1E4F276F0]);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1C206C1B8()
{
  uint64_t v1 = v0;
  sub_1C1F0ED28();
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1C21510C0;
  *(void *)(v2 + 32) = sub_1C206B5DC();
  *(void *)(v2 + 40) = sub_1C206B770();
  *(void *)(v2 + 48) = sub_1C206BA68();
  *(void *)(v2 + 56) = sub_1C206BCAC();
  sub_1C214A7A0();
  id v3 = objc_allocWithZone(MEMORY[0x1E4FB1C60]);
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C8F0);
  uint64_t v4 = (void *)sub_1C214A770();
  swift_bridgeObjectRelease();
  id v5 = objc_msgSend(v3, sel_initWithArrangedSubviews_, v4);

  objc_msgSend(v5, sel_setAlignment_, 3);
  objc_msgSend(v5, sel_setAxis_, 1);
  objc_msgSend(v5, sel_setSpacing_, 16.0);
  objc_msgSend(v5, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  id v6 = objc_msgSend(v1, sel_contentView);
  objc_msgSend(v6, sel_addSubview_, v5);

  uint64_t v26 = self;
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1C21510C0;
  id v8 = objc_msgSend(v5, sel_centerXAnchor);
  id v9 = objc_msgSend(v1, sel_contentView);
  id v10 = objc_msgSend(v9, sel_centerXAnchor);

  id v11 = objc_msgSend(v8, sel_constraintEqualToAnchor_, v10);
  *(void *)(v7 + 32) = v11;
  id v12 = objc_msgSend(v5, sel_centerYAnchor);
  id v13 = objc_msgSend(v1, sel_contentView);
  id v14 = objc_msgSend(v13, sel_centerYAnchor);

  id v15 = objc_msgSend(v12, sel_constraintEqualToAnchor_, v14);
  *(void *)(v7 + 40) = v15;
  id v16 = objc_msgSend(v5, sel_leadingAnchor);
  id v17 = objc_msgSend(v1, sel_contentView);
  id v18 = objc_msgSend(v17, sel_layoutMarginsGuide);

  id v19 = objc_msgSend(v18, sel_leadingAnchor);
  id v20 = objc_msgSend(v16, sel_constraintEqualToAnchor_, v19);

  *(void *)(v7 + 48) = v20;
  id v21 = objc_msgSend(v5, sel_trailingAnchor);
  id v22 = objc_msgSend(v1, sel_contentView);
  id v23 = objc_msgSend(v22, sel_layoutMarginsGuide);

  id v24 = objc_msgSend(v23, sel_trailingAnchor);
  id v25 = objc_msgSend(v21, sel_constraintEqualToAnchor_, v24);

  *(void *)(v7 + 56) = v25;
  sub_1C214A7A0();
  sub_1C1F12718(0, (unint64_t *)&qword_1EBF0C810);
  uint64_t v27 = (void *)sub_1C214A770();
  swift_bridgeObjectRelease();
  objc_msgSend(v26, sel_activateConstraints_, v27);
}

id sub_1C206C5E0()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ConnectivityIssueCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for ConnectivityIssueCell()
{
  return self;
}

uint64_t sub_1C206C6D0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI21ConnectivityIssueCell_item;
  swift_beginAccess();
  return sub_1C206C91C(v3, a1, (unint64_t *)&qword_1EBF0C300, (void (*)(uint64_t))sub_1C1F1CB5C);
}

uint64_t sub_1C206C740(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC19HealthMedicationsUI21ConnectivityIssueCell_item;
  swift_beginAccess();
  sub_1C1F1CADC(a1, v3);
  return swift_endAccess();
}

uint64_t (*sub_1C206C79C())()
{
  return j__swift_endAccess;
}

uint64_t sub_1C206C7F8()
{
  type metadata accessor for ConnectivityIssueCell();
  sub_1C206C8C8();
  uint64_t result = sub_1C21481D0();
  qword_1EA2C8050 = result;
  *(void *)algn_1EA2C8058 = v1;
  return result;
}

uint64_t type metadata accessor for ConnectivityIssueItem()
{
  return self;
}

uint64_t sub_1C206C860()
{
  if (qword_1EA2C2720 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_1EA2C8050;
  swift_bridgeObjectRetain();
  return v0;
}

unint64_t sub_1C206C8C8()
{
  unint64_t result = qword_1EA2C3038;
  if (!qword_1EA2C3038)
  {
    type metadata accessor for ConnectivityIssueCell();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2C3038);
  }
  return result;
}

uint64_t sub_1C206C91C(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_1C206CA30(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

void sub_1C206C988()
{
  uint64_t v1 = &v0[OBJC_IVAR____TtC19HealthMedicationsUI21ConnectivityIssueCell_item];
  *(_OWORD *)uint64_t v1 = 0u;
  *((_OWORD *)v1 + 1) = 0u;
  *((void *)v1 + 4) = 0;
  *(void *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI21ConnectivityIssueCell____lazy_storage___boltIconImageView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI21ConnectivityIssueCell____lazy_storage___labelView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI21ConnectivityIssueCell____lazy_storage___secondaryLabel] = 0;
  *(void *)&v0[OBJC_IVAR____TtC19HealthMedicationsUI21ConnectivityIssueCell____lazy_storage___settingsButton] = 0;

  sub_1C214B910();
  __break(1u);
}

void sub_1C206CA30(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C214B4F0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1C206CA84(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1C206CA30(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t type metadata accessor for MedicationSourceListDataSource()
{
  uint64_t result = qword_1EA2C6328;
  if (!qword_1EA2C6328) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C206CB2C()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1C206CBA0(uint64_t a1)
{
  uint64_t v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1C214B680();
    sub_1C2149E40();
    sub_1C206F5F0(&qword_1EA2C3570, MEMORY[0x1E4F1AB18]);
    uint64_t result = sub_1C214AAA0();
    uint64_t v1 = v18;
    uint64_t v17 = v19;
    uint64_t v3 = v20;
    uint64_t v4 = v21;
    unint64_t v5 = v22;
  }
  else
  {
    uint64_t v6 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v17 = a1 + 56;
    uint64_t v3 = ~v6;
    uint64_t v7 = -v6;
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v5 = v8 & *(void *)(a1 + 56);
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v4 = 0;
  }
  int64_t v9 = (unint64_t)(v3 + 64) >> 6;
  if (v1 < 0) {
    goto LABEL_10;
  }
  while (1)
  {
    if (v5)
    {
      uint64_t v10 = (v5 - 1) & v5;
      unint64_t v11 = __clz(__rbit64(v5)) | (v4 << 6);
      uint64_t v12 = v4;
      goto LABEL_29;
    }
    int64_t v13 = v4 + 1;
    if (__OFADD__(v4, 1)) {
      break;
    }
    if (v13 >= v9) {
      return sub_1C1F495B8();
    }
    unint64_t v14 = *(void *)(v17 + 8 * v13);
    uint64_t v12 = v4 + 1;
    if (!v14)
    {
      uint64_t v12 = v4 + 2;
      if (v4 + 2 >= v9) {
        return sub_1C1F495B8();
      }
      unint64_t v14 = *(void *)(v17 + 8 * v12);
      if (!v14)
      {
        uint64_t v12 = v4 + 3;
        if (v4 + 3 >= v9) {
          return sub_1C1F495B8();
        }
        unint64_t v14 = *(void *)(v17 + 8 * v12);
        if (!v14)
        {
          uint64_t v12 = v4 + 4;
          if (v4 + 4 >= v9) {
            return sub_1C1F495B8();
          }
          unint64_t v14 = *(void *)(v17 + 8 * v12);
          if (!v14)
          {
            uint64_t v12 = v4 + 5;
            if (v4 + 5 >= v9) {
              return sub_1C1F495B8();
            }
            unint64_t v14 = *(void *)(v17 + 8 * v12);
            if (!v14)
            {
              uint64_t v15 = v4 + 6;
              while (v9 != v15)
              {
                unint64_t v14 = *(void *)(v17 + 8 * v15++);
                if (v14)
                {
                  uint64_t v12 = v15 - 1;
                  goto LABEL_28;
                }
              }
              return sub_1C1F495B8();
            }
          }
        }
      }
    }
LABEL_28:
    uint64_t v10 = (v14 - 1) & v14;
    unint64_t v11 = __clz(__rbit64(v14)) + (v12 << 6);
LABEL_29:
    uint64_t v16 = *(void *)(*(void *)(v1 + 48) + 8 * v11);
    swift_retain();
    if (!v16) {
      return sub_1C1F495B8();
    }
    while (1)
    {
      sub_1C2149E30();
      uint64_t result = swift_release();
      uint64_t v4 = v12;
      unint64_t v5 = v10;
      if ((v1 & 0x8000000000000000) == 0) {
        break;
      }
LABEL_10:
      if (sub_1C214B700())
      {
        sub_1C2149E40();
        swift_unknownObjectRetain();
        swift_dynamicCast();
        swift_unknownObjectRelease();
        uint64_t v12 = v4;
        uint64_t v10 = v5;
        if (v23) {
          continue;
        }
      }
      return sub_1C1F495B8();
    }
  }
  __break(1u);
  return result;
}