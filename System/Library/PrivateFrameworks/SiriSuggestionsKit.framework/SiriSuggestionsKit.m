void static InvocationType.WritingTool.getter(_WORD *a1@<X8>)
{
  *a1 = 259;
}

void sub_1C6496F48()
{
  if (qword_1EBBFB530 != -1) {
    swift_once();
  }
  v0 = (unsigned __int16 *)off_1EBBFB528;
  uint64_t v1 = *((void *)off_1EBBFB528 + 2);
  if (v1)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = 0;
    uint64_t v3 = MEMORY[0x1E4FBC860];
    do
    {
      unsigned int v4 = v0[v2 + 16];
      if ((v4 >> 8) - 2 >= 5)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_1C64A23A0(0, *(void *)(v3 + 16) + 1, 1);
        }
        unint64_t v6 = *(void *)(v3 + 16);
        unint64_t v5 = *(void *)(v3 + 24);
        if (v6 >= v5 >> 1) {
          sub_1C64A23A0((char *)(v5 > 1), v6 + 1, 1);
        }
        *(void *)(v3 + 16) = v6 + 1;
        *(_WORD *)(v3 + 2 * v6 + 32) = v4;
      }
      ++v2;
    }
    while (v1 != v2);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = MEMORY[0x1E4FBC860];
  }
  off_1EBBFB518 = (_UNKNOWN *)v3;
}

BOOL InvocationType.isAssistantTurn.getter()
{
  return *(unsigned __int8 *)(v0 + 1) - 7 < 0xFFFFFFFB;
}

uint64_t static InvocationType.assistantTurns.getter()
{
  return sub_1C649767C(&qword_1EBBFB520);
}

uint64_t InvocationType.description.getter()
{
  unsigned int v1 = *v0;
  uint64_t result = 0x706C654869726973;
  switch(v1 >> 8)
  {
    case 2u:
      return result;
    case 3u:
      uint64_t result = 0xD000000000000016;
      break;
    case 4u:
      uint64_t result = OUTLINED_FUNCTION_18();
      break;
    case 5u:
      uint64_t result = 0xD000000000000011;
      break;
    case 6u:
      uint64_t result = OUTLINED_FUNCTION_5();
      break;
    default:
      sub_1C6576C60();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_31();
      if (v1 == 2)
      {
        OUTLINED_FUNCTION_15();
      }
      else if (v1 == 3)
      {
        OUTLINED_FUNCTION_11();
      }
      else
      {
        OUTLINED_FUNCTION_35();
        sub_1C6576620();
        swift_bridgeObjectRelease();
      }
      sub_1C6576620();
      swift_bridgeObjectRelease();
      sub_1C6576620();
      sub_1C6576620();
      swift_bridgeObjectRelease();
      uint64_t result = 0x6E61747369737361;
      break;
  }
  return result;
}

uint64_t AssistantTurnState.description.getter()
{
  int v1 = *v0;
  if (v1 == 2) {
    return OUTLINED_FUNCTION_15();
  }
  if (v1 == 3) {
    return OUTLINED_FUNCTION_11();
  }
  strcpy((char *)v3, "taskComplete_");
  sub_1C6576620();
  swift_bridgeObjectRelease();
  return v3[0];
}

uint64_t InvocationModality.rawValue.getter()
{
  if (*v0) {
    return 0x6465707974;
  }
  else {
    return 0x6563696F76;
  }
}

void *sub_1C6497394()
{
  if (qword_1EBBFB660 != -1) {
    goto LABEL_30;
  }
  while (1)
  {
    swift_beginAccess();
    uint64_t v0 = (unsigned __int8 *)off_1EBBFB3B8;
    uint64_t v1 = *((void *)off_1EBBFB3B8 + 2);
    uint64_t v2 = MEMORY[0x1E4FBC860];
    if (!v1) {
      break;
    }
    swift_bridgeObjectRetain();
    uint64_t v3 = 0;
    uint64_t v4 = v2;
    while (1)
    {
      __int16 v5 = v0[v3 + 32];
      sub_1C64A23A0(0, 2, 0);
      uint64_t v6 = v2;
      unint64_t v8 = *(void *)(v2 + 16);
      unint64_t v7 = *(void *)(v2 + 24);
      int64_t v9 = v7 >> 1;
      unint64_t v10 = v8 + 1;
      if (v7 >> 1 <= v8)
      {
        sub_1C64A23A0((char *)(v7 > 1), v8 + 1, 1);
        uint64_t v6 = v2;
        unint64_t v7 = *(void *)(v2 + 24);
        int64_t v9 = v7 >> 1;
      }
      *(void *)(v6 + 16) = v10;
      *(_WORD *)(v6 + 2 * v8 + 32) = v5;
      int64_t v11 = v8 + 2;
      if (v9 < v11)
      {
        sub_1C64A23A0((char *)(v7 > 1), v11, 1);
        uint64_t v6 = v2;
      }
      *(void *)(v6 + 16) = v11;
      unint64_t v12 = v6 + 32;
      *(_WORD *)(v6 + 32 + 2 * v10) = v5 | 0x100;
      uint64_t v13 = *(void *)(v6 + 16);
      uint64_t v14 = *(void *)(v4 + 16);
      if (__OFADD__(v14, v13)) {
        break;
      }
      if (!swift_isUniquelyReferenced_nonNull_native() || v14 + v13 > *(void *)(v4 + 24) >> 1)
      {
        sub_1C64ACAC4();
        uint64_t v4 = v15;
      }
      if (*(void *)(v6 + 16))
      {
        uint64_t v16 = *(void *)(v4 + 16);
        if ((*(void *)(v4 + 24) >> 1) - v16 < v13) {
          goto LABEL_28;
        }
        v17 = (void *)(v4 + 2 * v16 + 32);
        if (v12 < (unint64_t)v17 + 2 * v13 && (unint64_t)v17 < v12 + 2 * v13)
        {
          uint64_t result = (void *)sub_1C6576E50();
          __break(1u);
          return result;
        }
        memcpy(v17, (const void *)(v6 + 32), 2 * v13);
        if (v13)
        {
          uint64_t v19 = *(void *)(v4 + 16);
          BOOL v20 = __OFADD__(v19, v13);
          uint64_t v21 = v19 + v13;
          if (v20) {
            goto LABEL_29;
          }
          *(void *)(v4 + 16) = v21;
        }
      }
      else if (v13)
      {
        goto LABEL_27;
      }
      ++v3;
      swift_release();
      if (v1 == v3)
      {
        swift_bridgeObjectRelease();
        goto LABEL_25;
      }
    }
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    swift_once();
  }
LABEL_25:
  sub_1C649FF08();
  return &unk_1F2156A08;
}

void *static InvocationModality.allCases.getter()
{
  return &unk_1F2156A38;
}

void *sub_1C6497638()
{
  uint64_t result = sub_1C6497394();
  off_1EBBFB528 = result;
  return result;
}

uint64_t static InvocationType.allCases.getter()
{
  return sub_1C649767C(&qword_1EBBFB530);
}

uint64_t sub_1C649767C(void *a1)
{
  if (*a1 != -1) {
    swift_once();
  }

  return swift_bridgeObjectRetain();
}

uint64_t static InvocationType.invocationType(from:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, _WORD *a3@<X8>)
{
  uint64_t v4 = result;
  if (qword_1EBBFB530 != -1) {
    uint64_t result = swift_once();
  }
  uint64_t v6 = (unsigned __int16 *)off_1EBBFB528;
  uint64_t v7 = *((void *)off_1EBBFB528 + 2);
  if (v7)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = 0;
    while (1)
    {
      unsigned int v9 = v6[v8 + 16];
      unint64_t v10 = 0xE800000000000000;
      uint64_t v11 = 0x706C654869726973;
      switch(v9 >> 8)
      {
        case 2u:
          break;
        case 3u:
          uint64_t v11 = 0xD000000000000016;
          unint64_t v10 = 0x80000001C6587A60;
          break;
        case 4u:
          unint64_t v10 = 0xE500000000000000;
          uint64_t v11 = OUTLINED_FUNCTION_18();
          break;
        case 5u:
          unint64_t v10 = 0x80000001C6587A40;
          uint64_t v11 = 0xD000000000000011;
          break;
        case 6u:
          unint64_t v10 = 0xE700000000000000;
          uint64_t v11 = OUTLINED_FUNCTION_5();
          break;
        default:
          sub_1C6576C60();
          swift_bridgeObjectRelease();
          OUTLINED_FUNCTION_31();
          unint64_t v15 = v12;
          if (v9 == 2)
          {
            OUTLINED_FUNCTION_15();
          }
          else if (v9 == 3)
          {
            OUTLINED_FUNCTION_11();
          }
          else
          {
            OUTLINED_FUNCTION_35();
            sub_1C6576620();
            swift_bridgeObjectRelease();
          }
          sub_1C6576620();
          swift_bridgeObjectRelease();
          sub_1C6576620();
          sub_1C6576620();
          swift_bridgeObjectRelease();
          uint64_t v11 = 0x6E61747369737361;
          unint64_t v10 = v15;
          break;
      }
      if (v11 == v4 && v10 == a2) {
        break;
      }
      char v14 = sub_1C6577090();
      swift_bridgeObjectRelease();
      if (v14) {
        goto LABEL_25;
      }
      if (v7 == ++v8)
      {
        uint64_t result = swift_bridgeObjectRelease();
        LOWORD(v9) = 1536;
        goto LABEL_26;
      }
    }
    swift_bridgeObjectRelease();
LABEL_25:
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    LOWORD(v9) = 1536;
  }
LABEL_26:
  *a3 = v9;
  return result;
}

uint64_t InvocationType.hash(into:)()
{
  unsigned int v1 = *v0;
  switch(v1 >> 8)
  {
    case 2u:
    case 3u:
    case 4u:
    case 5u:
    case 6u:
      uint64_t result = sub_1C6577160();
      break;
    default:
      sub_1C6577160();
      if (v1 == 2 || v1 == 3)
      {
        sub_1C6577160();
      }
      else
      {
        sub_1C6577160();
        sub_1C65765E0();
        swift_bridgeObjectRelease();
      }
      sub_1C65765E0();
      uint64_t result = swift_bridgeObjectRelease();
      break;
  }
  return result;
}

uint64_t static InvocationType.== infix(_:_:)(_WORD *a1, __int16 *a2)
{
  unsigned int v2 = (unsigned __int16)*a1;
  __int16 v3 = *a2;
  switch(v2 >> 8)
  {
    case 2u:
      return (v3 & 0xFF00) == 0x200;
    case 3u:
      return (v3 & 0xFF00) == 0x300;
    case 4u:
      return (v3 & 0xFF00) == 0x400;
    case 5u:
      return (v3 & 0xFF00) == 0x500;
    case 6u:
      return (v3 & 0xFF00) == 0x600;
    default:
      if ((HIBYTE(v3) - 2) < 5u) {
        return 0;
      }
      if (*a1 == 2)
      {
        if (*a2 != 2) {
          return 0;
        }
      }
      else if (*a1 == 3)
      {
        if (*a2 != 3) {
          return 0;
        }
      }
      else if ((v3 & 0xFE) == 2 || (sub_1C6498278(v2 & 1, v3 & 1) & 1) == 0)
      {
        return 0;
      }
      return sub_1C6498200(BYTE1(v2) & 1, HIBYTE(v3) & 1);
  }
}

uint64_t static AssistantTurnState.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2 = *a1;
  int v3 = *a2;
  if (v2 == 2) {
    return v3 == 2;
  }
  if (v2 == 3) {
    return v3 == 3;
  }
  if ((v3 & 0xFE) == 2) {
    return 0;
  }
  if (v2) {
    uint64_t v5 = 0x6E61747369737361;
  }
  else {
    uint64_t v5 = 1919251317;
  }
  if (v2) {
    unint64_t v6 = 0xE900000000000074;
  }
  else {
    unint64_t v6 = 0xE400000000000000;
  }
  if (v3) {
    uint64_t v7 = 0x6E61747369737361;
  }
  else {
    uint64_t v7 = 1919251317;
  }
  if (v3) {
    unint64_t v8 = 0xE900000000000074;
  }
  else {
    unint64_t v8 = 0xE400000000000000;
  }
  if (v5 != v7 || v6 != v8)
  {
    char v10 = OUTLINED_FUNCTION_2();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v10 & 1;
  }
  swift_bridgeObjectRelease_n();
  return 1;
}

uint64_t sub_1C6497D54(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xE90000000000006ELL;
  uint64_t v3 = 0x7552746F6E646964;
  int v4 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v5 = 0x7553646E416E6172;
    }
    else {
      uint64_t v5 = 0x6146646E416E6172;
    }
    if (v4 == 1) {
      unint64_t v6 = 0xEF6C756673656363;
    }
    else {
      unint64_t v6 = 0xEC00000064656C69;
    }
  }
  else
  {
    uint64_t v5 = 0x7552746F6E646964;
    unint64_t v6 = 0xE90000000000006ELL;
  }
  if (a2)
  {
    if (a2 == 1) {
      uint64_t v3 = 0x7553646E416E6172;
    }
    else {
      uint64_t v3 = 0x6146646E416E6172;
    }
    if (a2 == 1) {
      unint64_t v2 = 0xEF6C756673656363;
    }
    else {
      unint64_t v2 = 0xEC00000064656C69;
    }
  }
  if (v5 == v3 && v6 == v2) {
    char v8 = 1;
  }
  else {
    char v8 = OUTLINED_FUNCTION_29();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1C6497E80()
{
  OUTLINED_FUNCTION_30();
  uint64_t v3 = 0x6F6853746F6E6F64;
  int v4 = v1;
  if (v1)
  {
    if (v1 == 1) {
      uint64_t v5 = 0x6568744F776F6873;
    }
    else {
      uint64_t v5 = 1701736302;
    }
    if (v4 == 1) {
      unint64_t v6 = 0xE900000000000072;
    }
    else {
      unint64_t v6 = 0xE400000000000000;
    }
  }
  else
  {
    uint64_t v5 = 0x6F6853746F6E6F64;
    unint64_t v6 = 0xEE00726568744F77;
  }
  if (v2)
  {
    if (v2 == 1) {
      uint64_t v3 = 0x6568744F776F6873;
    }
    else {
      uint64_t v3 = 1701736302;
    }
    if (v2 == 1) {
      unint64_t v0 = 0xE900000000000072;
    }
    else {
      unint64_t v0 = 0xE400000000000000;
    }
  }
  if (v5 == v3 && v6 == v0) {
    char v8 = 1;
  }
  else {
    char v8 = OUTLINED_FUNCTION_29();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1C6497F80(unsigned __int8 a1, char a2)
{
  uint64_t v3 = 0x64656C62616E65;
  int v4 = a1;
  if (a1)
  {
    if (a1 == 1) {
      unint64_t v5 = 0xD000000000000010;
    }
    else {
      unint64_t v5 = 0x64656C6261736964;
    }
    if (v4 == 1) {
      unint64_t v6 = 0x80000001C6587960;
    }
    else {
      unint64_t v6 = 0xE800000000000000;
    }
  }
  else
  {
    unint64_t v6 = 0xE700000000000000;
    unint64_t v5 = 0x64656C62616E65;
  }
  if (a2)
  {
    OUTLINED_FUNCTION_13();
    if (v8 == 1) {
      uint64_t v3 = v9;
    }
    else {
      uint64_t v3 = v11;
    }
    if (v8 == 1) {
      unint64_t v12 = v7;
    }
    else {
      unint64_t v12 = v10;
    }
  }
  else
  {
    unint64_t v12 = 0xE700000000000000;
  }
  if (v5 == v3 && v6 == v12) {
    OUTLINED_FUNCTION_7();
  }
  else {
    char v2 = OUTLINED_FUNCTION_2();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1C6498064(unsigned __int8 a1, char a2)
{
  uint64_t v3 = 5459817;
  unint64_t v4 = 0xE300000000000000;
  uint64_t v5 = a1;
  uint64_t v6 = 5459817;
  switch(v5)
  {
    case 1:
      unint64_t v4 = 0xE500000000000000;
      uint64_t v6 = 0x534F63616DLL;
      break;
    case 2:
      unint64_t v4 = 0xE400000000000000;
      uint64_t v6 = 1397716596;
      break;
    case 3:
      unint64_t v4 = 0xE700000000000000;
      uint64_t v6 = 0x534F6863746177;
      break;
    case 4:
      unint64_t v4 = 0xE800000000000000;
      uint64_t v6 = 0x534F6E6F69736976;
      break;
    case 5:
      unint64_t v4 = 0xE700000000000000;
      uint64_t v6 = OUTLINED_FUNCTION_5();
      break;
    default:
      break;
  }
  unint64_t v7 = 0xE300000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v7 = 0xE500000000000000;
      uint64_t v3 = 0x534F63616DLL;
      break;
    case 2:
      unint64_t v7 = 0xE400000000000000;
      uint64_t v3 = 1397716596;
      break;
    case 3:
      unint64_t v7 = 0xE700000000000000;
      uint64_t v3 = 0x534F6863746177;
      break;
    case 4:
      unint64_t v7 = 0xE800000000000000;
      uint64_t v3 = 0x534F6E6F69736976;
      break;
    case 5:
      unint64_t v7 = 0xE700000000000000;
      OUTLINED_FUNCTION_9();
      break;
    default:
      break;
  }
  if (v6 == v3 && v4 == v7) {
    OUTLINED_FUNCTION_7();
  }
  else {
    char v2 = OUTLINED_FUNCTION_2();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1C6498200(char a1, char a2)
{
  if (a1) {
    uint64_t v2 = 0x6465707974;
  }
  else {
    uint64_t v2 = 0x6563696F76;
  }
  if (a2) {
    uint64_t v3 = 0x6465707974;
  }
  else {
    uint64_t v3 = 0x6563696F76;
  }
  if (v2 == v3) {
    char v4 = 1;
  }
  else {
    char v4 = sub_1C6577090();
  }
  swift_bridgeObjectRelease_n();
  return v4 & 1;
}

uint64_t sub_1C6498278(char a1, char a2)
{
  BOOL v3 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v4 = 0x6E61747369737361;
  }
  else {
    uint64_t v4 = 1919251317;
  }
  if (v3) {
    unint64_t v5 = 0xE400000000000000;
  }
  else {
    unint64_t v5 = 0xE900000000000074;
  }
  if (a2) {
    uint64_t v6 = 0x6E61747369737361;
  }
  else {
    uint64_t v6 = 1919251317;
  }
  if (a2) {
    unint64_t v7 = 0xE900000000000074;
  }
  else {
    unint64_t v7 = 0xE400000000000000;
  }
  if (v4 == v6 && v5 == v7) {
    OUTLINED_FUNCTION_7();
  }
  else {
    char v2 = OUTLINED_FUNCTION_2();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1C6498308(unsigned __int8 a1, char a2)
{
  unint64_t v3 = 0xD00000000000001FLL;
  unint64_t v4 = (unint64_t)"ntinuer";
  unint64_t v5 = 0x80000001C6587400;
  uint64_t v6 = a1;
  unint64_t v7 = "atx_timeline_donation";
  int v8 = "atx_app_predictions_spotlight";
  uint64_t v9 = 0xD00000000000001FLL;
  unint64_t v10 = "atx_app_predictions_homescreen";
  uint64_t v11 = "atx_app_predictions_app_library";
  switch(v6)
  {
    case 1:
      unint64_t v12 = "atx_action_fallbacks_homescreen";
      goto LABEL_6;
    case 2:
      uint64_t v9 = 0xD00000000000001ELL;
      unint64_t v12 = "atx_app_predictions_app_library";
      goto LABEL_6;
    case 3:
      uint64_t v9 = 0xD00000000000001DLL;
      unint64_t v12 = "atx_app_predictions_homescreen";
      goto LABEL_6;
    case 4:
      uint64_t v9 = 0xD000000000000015;
      unint64_t v12 = "atx_app_predictions_spotlight";
LABEL_6:
      unint64_t v5 = (unint64_t)v12 | 0x8000000000000000;
      break;
    case 5:
      unint64_t v5 = 0xE700000000000000;
      uint64_t v9 = OUTLINED_FUNCTION_5();
      break;
    default:
      break;
  }
  unint64_t v13 = v4 | 0x8000000000000000;
  switch(a2)
  {
    case 1:
      char v14 = v11 - 32;
      goto LABEL_13;
    case 2:
      --v3;
      char v14 = v10 - 32;
      goto LABEL_13;
    case 3:
      v3 -= 2;
      char v14 = v8 - 32;
      goto LABEL_13;
    case 4:
      v3 -= 10;
      char v14 = v7 - 32;
LABEL_13:
      unint64_t v13 = (unint64_t)v14 | 0x8000000000000000;
      break;
    case 5:
      unint64_t v13 = 0xE700000000000000;
      OUTLINED_FUNCTION_9();
      break;
    default:
      break;
  }
  if (v9 == v3 && v5 == v13) {
    OUTLINED_FUNCTION_7();
  }
  else {
    char v2 = OUTLINED_FUNCTION_2();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

unint64_t sub_1C6498488()
{
  unint64_t v0 = AppBundleIdentifier.rawValue.getter();
  uint64_t v2 = v1;
  if (v0 == AppBundleIdentifier.rawValue.getter() && v2 == v3) {
    OUTLINED_FUNCTION_7();
  }
  else {
    LOBYTE(v0) = OUTLINED_FUNCTION_2();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0 & 1;
}

uint64_t OUTLINED_FUNCTION_55()
{
  return 1;
}

uint64_t sub_1C6498518(unsigned __int8 a1, char a2)
{
  unint64_t v3 = 0x7070416E65706FLL;
  unint64_t v4 = 0xE700000000000000;
  uint64_t v5 = a1;
  uint64_t v6 = "retrievedContext";
  uint64_t v7 = 0x7070416E65706FLL;
  switch(v5)
  {
    case 1:
      uint64_t v7 = 0x6F48657669746361;
      unint64_t v4 = 0xEA0000000000656DLL;
      break;
    case 2:
      unint64_t v4 = 0x80000001C6587370;
      uint64_t v7 = 0xD000000000000010;
      break;
    case 3:
      uint64_t v7 = OUTLINED_FUNCTION_5();
      break;
    default:
      break;
  }
  unint64_t v8 = 0xE700000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v3 = 0x6F48657669746361;
      unint64_t v8 = 0xEA0000000000656DLL;
      break;
    case 2:
      unint64_t v8 = (unint64_t)(v6 - 32) | 0x8000000000000000;
      unint64_t v3 = 0xD000000000000010;
      break;
    case 3:
      OUTLINED_FUNCTION_9();
      break;
    default:
      break;
  }
  if (v7 == v3 && v4 == v8) {
    OUTLINED_FUNCTION_7();
  }
  else {
    char v2 = OUTLINED_FUNCTION_2();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1C649866C(uint64_t a1, uint64_t a2)
{
  sub_1C649FB10(a1, (uint64_t)v10);
  sub_1C649FB10(a2, (uint64_t)&v9);
  uint64_t v3 = DeliveryVehicle.rawValue.getter();
  uint64_t v5 = v4;
  if (v3 == DeliveryVehicle.rawValue.getter() && v5 == v6) {
    OUTLINED_FUNCTION_7();
  }
  else {
    LOBYTE(v3) = OUTLINED_FUNCTION_2();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1C6498704(char a1, char a2)
{
  BOOL v3 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v4 = 0x656C7069746C756DLL;
  }
  else {
    uint64_t v4 = 0x656C676E6973;
  }
  if (v3) {
    unint64_t v5 = 0xE600000000000000;
  }
  else {
    unint64_t v5 = 0xE800000000000000;
  }
  if (a2) {
    uint64_t v6 = 0x656C7069746C756DLL;
  }
  else {
    uint64_t v6 = 0x656C676E6973;
  }
  if (a2) {
    unint64_t v7 = 0xE800000000000000;
  }
  else {
    unint64_t v7 = 0xE600000000000000;
  }
  if (v4 == v6 && v5 == v7) {
    OUTLINED_FUNCTION_7();
  }
  else {
    char v2 = OUTLINED_FUNCTION_2();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1C6498794(char a1, char a2)
{
  BOOL v3 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v4 = 0x64656B636F6C6E75;
  }
  else {
    uint64_t v4 = 0x64656B636F6CLL;
  }
  if (v3) {
    unint64_t v5 = 0xE600000000000000;
  }
  else {
    unint64_t v5 = 0xE800000000000000;
  }
  if (a2) {
    uint64_t v6 = 0x64656B636F6C6E75;
  }
  else {
    uint64_t v6 = 0x64656B636F6CLL;
  }
  if (a2) {
    unint64_t v7 = 0xE800000000000000;
  }
  else {
    unint64_t v7 = 0xE600000000000000;
  }
  if (v4 == v6 && v5 == v7) {
    OUTLINED_FUNCTION_7();
  }
  else {
    char v2 = OUTLINED_FUNCTION_2();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1C6498824(unsigned __int8 a1, char a2)
{
  unint64_t v3 = 0x77656956707061;
  unint64_t v4 = 0xE700000000000000;
  uint64_t v5 = a1;
  uint64_t v6 = "conversationalContinuer";
  uint64_t v7 = 0x77656956707061;
  switch(v5)
  {
    case 1:
      unint64_t v4 = 0xE300000000000000;
      uint64_t v7 = 7368801;
      break;
    case 2:
      uint64_t v7 = 0x6765746143707061;
      uint64_t v8 = 7959151;
      goto LABEL_10;
    case 3:
      uint64_t v7 = 0x65726373656D6F68;
      unint64_t v4 = 0xEA00000000006E65;
      break;
    case 4:
      unint64_t v4 = 0xE800000000000000;
      uint64_t v7 = 0x6B6361626C6C6166;
      break;
    case 5:
      uint64_t v7 = 0x6F4C656369766564;
      unint64_t v4 = 0xEC00000064656B63;
      break;
    case 6:
      unint64_t v4 = 0x80000001C65873D0;
      uint64_t v7 = 0xD000000000000017;
      break;
    case 7:
      unint64_t v4 = 0xE500000000000000;
      uint64_t v7 = OUTLINED_FUNCTION_18();
      break;
    case 8:
      uint64_t v7 = 0x6769725469726973;
      uint64_t v8 = 7497063;
LABEL_10:
      unint64_t v4 = v8 & 0xFFFFFFFFFFFFLL | 0xEB00000000000000;
      break;
    default:
      break;
  }
  unint64_t v9 = 0xE700000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v9 = 0xE300000000000000;
      unint64_t v3 = 7368801;
      break;
    case 2:
      unint64_t v3 = 0x6765746143707061;
      uint64_t v10 = 7959151;
      goto LABEL_20;
    case 3:
      unint64_t v3 = 0x65726373656D6F68;
      unint64_t v9 = 0xEA00000000006E65;
      break;
    case 4:
      unint64_t v9 = 0xE800000000000000;
      unint64_t v3 = 0x6B6361626C6C6166;
      break;
    case 5:
      unint64_t v3 = 0x6F4C656369766564;
      unint64_t v9 = 0xEC00000064656B63;
      break;
    case 6:
      unint64_t v9 = (unint64_t)(v6 - 32) | 0x8000000000000000;
      unint64_t v3 = 0xD000000000000017;
      break;
    case 7:
      unint64_t v9 = 0xE500000000000000;
      unint64_t v3 = 0x7070416E69;
      break;
    case 8:
      unint64_t v3 = 0x6769725469726973;
      uint64_t v10 = 7497063;
LABEL_20:
      unint64_t v9 = v10 & 0xFFFFFFFFFFFFLL | 0xEB00000000000000;
      break;
    default:
      break;
  }
  if (v7 == v3 && v4 == v9) {
    OUTLINED_FUNCTION_7();
  }
  else {
    char v2 = OUTLINED_FUNCTION_2();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1C6498AB8(char a1, char a2)
{
  BOOL v3 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v4 = 0x66654472656E776FLL;
  }
  else {
    uint64_t v4 = 0x6E65746E49707061;
  }
  if (v3) {
    unint64_t v5 = 0xEC00000069704174;
  }
  else {
    unint64_t v5 = 0xEF6E6F6974696E69;
  }
  if (a2) {
    uint64_t v6 = 0x66654472656E776FLL;
  }
  else {
    uint64_t v6 = 0x6E65746E49707061;
  }
  if (a2) {
    unint64_t v7 = 0xEF6E6F6974696E69;
  }
  else {
    unint64_t v7 = 0xEC00000069704174;
  }
  if (v4 == v6 && v5 == v7) {
    OUTLINED_FUNCTION_7();
  }
  else {
    char v2 = OUTLINED_FUNCTION_2();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1C6498B60(unsigned __int8 a1, char a2)
{
  uint64_t v3 = 0x656E6F685069;
  unint64_t v4 = 0xE600000000000000;
  uint64_t v5 = a1;
  uint64_t v6 = 0x656E6F685069;
  switch(v5)
  {
    case 1:
      uint64_t v6 = 0x72506E6F69736976;
      unint64_t v4 = 0xE90000000000006FLL;
      break;
    case 2:
      unint64_t v4 = 0xE400000000000000;
      uint64_t v6 = 1684099177;
      break;
    case 3:
      unint64_t v4 = 0xE700000000000000;
      uint64_t v6 = 0x79616C50726163;
      break;
    case 4:
      unint64_t v4 = 0xE500000000000000;
      uint64_t v6 = 0x6863746177;
      break;
    case 5:
      unint64_t v4 = 0xE700000000000000;
      uint64_t v6 = 0x5654656C707061;
      break;
    case 6:
      unint64_t v4 = 0xE700000000000000;
      uint64_t v6 = 0x646F70656D6F68;
      break;
    case 7:
      unint64_t v4 = 0xE300000000000000;
      uint64_t v6 = 6513005;
      break;
    case 8:
      unint64_t v4 = 0xE300000000000000;
      uint64_t v6 = 6582128;
      break;
    default:
      break;
  }
  unint64_t v7 = 0xE600000000000000;
  switch(a2)
  {
    case 1:
      uint64_t v3 = 0x72506E6F69736976;
      unint64_t v7 = 0xE90000000000006FLL;
      break;
    case 2:
      unint64_t v7 = 0xE400000000000000;
      uint64_t v3 = 1684099177;
      break;
    case 3:
      unint64_t v7 = 0xE700000000000000;
      uint64_t v3 = 0x79616C50726163;
      break;
    case 4:
      unint64_t v7 = 0xE500000000000000;
      uint64_t v3 = 0x6863746177;
      break;
    case 5:
      unint64_t v7 = 0xE700000000000000;
      uint64_t v3 = 0x5654656C707061;
      break;
    case 6:
      unint64_t v7 = 0xE700000000000000;
      uint64_t v3 = 0x646F70656D6F68;
      break;
    case 7:
      unint64_t v7 = 0xE300000000000000;
      uint64_t v3 = 6513005;
      break;
    case 8:
      unint64_t v7 = 0xE300000000000000;
      uint64_t v3 = 6582128;
      break;
    default:
      break;
  }
  if (v6 == v3 && v4 == v7) {
    OUTLINED_FUNCTION_7();
  }
  else {
    char v2 = OUTLINED_FUNCTION_2();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1C6498DAC(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xEB00000000796C6ELL;
  uint64_t v3 = 0x4F79616C70736964;
  uint64_t v4 = a1;
  uint64_t v5 = 0x4F79616C70736964;
  unint64_t v6 = 0xEB00000000796C6ELL;
  switch(v4)
  {
    case 1:
      uint64_t v5 = 0x4679616C70736964;
      unint64_t v6 = 0xEE0064726177726FLL;
      break;
    case 2:
      uint64_t v5 = 0x6C6E4F6563696F76;
      unint64_t v6 = 0xE900000000000079;
      break;
    case 3:
      uint64_t v5 = 0x726F466563696F76;
      unint64_t v6 = 0xEC00000064726177;
      break;
    case 4:
      unint64_t v6 = 0xE700000000000000;
      uint64_t v5 = OUTLINED_FUNCTION_5();
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      OUTLINED_FUNCTION_32();
      break;
    case 2:
      uint64_t v3 = 0x6C6E4F6563696F76;
      unint64_t v2 = 0xE900000000000079;
      break;
    case 3:
      uint64_t v3 = 0x726F466563696F76;
      unint64_t v2 = 0xEC00000064726177;
      break;
    case 4:
      unint64_t v2 = 0xE700000000000000;
      OUTLINED_FUNCTION_9();
      break;
    default:
      break;
  }
  if (v5 == v3 && v6 == v2) {
    char v8 = 1;
  }
  else {
    char v8 = OUTLINED_FUNCTION_29();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

BOOL sub_1C6498F70(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t sub_1C6498F80()
{
  return sub_1C6577160();
}

uint64_t sub_1C6498FA8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6574617473 && a2 == 0xE500000000000000;
  if (v2 || (sub_1C6577090() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7974696C61646F6DLL && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_1C6577090();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1C6499090()
{
  return 2;
}

uint64_t sub_1C6499098()
{
  return sub_1C6577190();
}

uint64_t sub_1C64990E0(char a1)
{
  if (a1) {
    return 0x7974696C61646F6DLL;
  }
  else {
    return 0x6574617473;
  }
}

BOOL sub_1C6499114(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1C6498F70(*a1, *a2);
}

uint64_t sub_1C6499120()
{
  return sub_1C6499098();
}

uint64_t sub_1C6499128()
{
  return sub_1C6498F80();
}

uint64_t sub_1C6499130()
{
  return sub_1C6577190();
}

uint64_t sub_1C6499174()
{
  return sub_1C64990E0(*v0);
}

uint64_t sub_1C649917C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C6498FA8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C64991A4()
{
  return OUTLINED_FUNCTION_19();
}

uint64_t sub_1C64991C4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C6499090();
  *a1 = result;
  return result;
}

uint64_t sub_1C64991EC(uint64_t a1)
{
  unint64_t v2 = sub_1C649C884();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C6499228(uint64_t a1)
{
  unint64_t v2 = sub_1C649C884();

  return MEMORY[0x1F41862B0](a1, v2);
}

BOOL sub_1C6499264(char a1, char a2)
{
  return a1 == a2;
}

uint64_t sub_1C6499274()
{
  return sub_1C6577160();
}

uint64_t sub_1C649929C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x706C654869726973 && a2 == 0xE800000000000000;
  if (v2 || (sub_1C6577090() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001C6587A60 || (sub_1C6577090() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    BOOL v6 = a1 == 0x7070416E69 && a2 == 0xE500000000000000;
    if (v6 || (sub_1C6577090() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      BOOL v7 = a1 == 0x6E61747369737361 && a2 == 0xED00006E72755474;
      if (v7 || (sub_1C6577090() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else if (a1 == 0xD000000000000011 && a2 == 0x80000001C6587A40 || (sub_1C6577090() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 4;
      }
      else if (a1 == 0x6E776F6E6B6E75 && a2 == 0xE700000000000000)
      {
        swift_bridgeObjectRelease();
        return 5;
      }
      else
      {
        char v9 = sub_1C6577090();
        swift_bridgeObjectRelease();
        if (v9) {
          return 5;
        }
        else {
          return 6;
        }
      }
    }
  }
}

uint64_t sub_1C6499524()
{
  return 6;
}

uint64_t OUTLINED_FUNCTION_19()
{
  return 0;
}

unint64_t sub_1C6499538(char a1)
{
  unint64_t result = 0x706C654869726973;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000016;
      break;
    case 2:
      unint64_t result = 0x7070416E69;
      break;
    case 3:
      unint64_t result = 0x6E61747369737361;
      break;
    case 4:
      unint64_t result = 0xD000000000000011;
      break;
    case 5:
      unint64_t result = 0x6E776F6E6B6E75;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C6499618()
{
  return 1;
}

uint64_t sub_1C6499638()
{
  return 0;
}

BOOL sub_1C6499644(char *a1, char *a2)
{
  return sub_1C6499264(*a1, *a2);
}

uint64_t sub_1C6499650()
{
  return sub_1C649B79C();
}

uint64_t sub_1C649966C()
{
  return sub_1C6499274();
}

unint64_t sub_1C6499678()
{
  return sub_1C6499538(*v0);
}

uint64_t sub_1C6499680@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C649929C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C64996A8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C6499524();
  *a1 = result;
  return result;
}

uint64_t sub_1C64996D0(uint64_t a1)
{
  unint64_t v2 = sub_1C649C7A0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C649970C(uint64_t a1)
{
  unint64_t v2 = sub_1C649C7A0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C649974C(uint64_t a1)
{
  unint64_t v2 = sub_1C649C968();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C6499788(uint64_t a1)
{
  unint64_t v2 = sub_1C649C968();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C64997C4(uint64_t a1)
{
  unint64_t v2 = sub_1C649C838();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C6499800(uint64_t a1)
{
  unint64_t v2 = sub_1C649C838();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C649983C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C6499618();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1C6499868()
{
  return OUTLINED_FUNCTION_19();
}

uint64_t sub_1C6499884@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = OUTLINED_FUNCTION_55();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1C64998B0(uint64_t a1)
{
  unint64_t v2 = sub_1C649CA00();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C64998EC(uint64_t a1)
{
  unint64_t v2 = sub_1C649CA00();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C6499928(uint64_t a1)
{
  unint64_t v2 = sub_1C649C9B4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C6499964(uint64_t a1)
{
  unint64_t v2 = sub_1C649C9B4();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C64999A0(uint64_t a1)
{
  unint64_t v2 = sub_1C649C7EC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C64999DC(uint64_t a1)
{
  unint64_t v2 = sub_1C649C7EC();

  return MEMORY[0x1F41862B0](a1, v2);
}

void InvocationType.encode(to:)()
{
  OUTLINED_FUNCTION_25();
  uint64_t v3 = v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBBFB4F8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790]();
  OUTLINED_FUNCTION_16(v4, v11);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFB510);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790]();
  OUTLINED_FUNCTION_3();
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFB508);
  OUTLINED_FUNCTION_0();
  uint64_t v12 = v5;
  MEMORY[0x1F4188790]();
  OUTLINED_FUNCTION_3();
  uint64_t v13 = v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFB4F0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790]();
  OUTLINED_FUNCTION_3();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBBFB4D8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790]();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFB4D0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790]();
  OUTLINED_FUNCTION_23();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFB4E8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790]();
  OUTLINED_FUNCTION_10();
  unsigned int v7 = *v0;
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  sub_1C649C7A0();
  sub_1C6577240();
  switch(v7 >> 8)
  {
    case 2u:
      sub_1C649CA00();
      OUTLINED_FUNCTION_6();
      goto LABEL_10;
    case 3u:
      sub_1C649C9B4();
      OUTLINED_FUNCTION_6();
      goto LABEL_10;
    case 4u:
      sub_1C649C968();
      OUTLINED_FUNCTION_6();
      goto LABEL_10;
    case 5u:
      sub_1C649C838();
      OUTLINED_FUNCTION_6();
      goto LABEL_10;
    case 6u:
      sub_1C649C7EC();
      OUTLINED_FUNCTION_6();
LABEL_10:
      OUTLINED_FUNCTION_1();
      v9();
      OUTLINED_FUNCTION_27();
      OUTLINED_FUNCTION_1();
      v10();
      break;
    default:
      sub_1C649C884();
      sub_1C6576F70();
      sub_1C649C8D0();
      sub_1C6577010();
      if (!v1)
      {
        sub_1C649C91C();
        sub_1C6577010();
      }
      (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v13, v14);
      OUTLINED_FUNCTION_27();
      OUTLINED_FUNCTION_1();
      v8();
      break;
  }
  OUTLINED_FUNCTION_26();
}

uint64_t InvocationType.hashValue.getter()
{
  return sub_1C6577190();
}

void InvocationType.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, __int16 a10, char a11, char a12, unsigned __int8 a13)
{
  OUTLINED_FUNCTION_25();
  uint64_t v16 = v15;
  v50 = v17;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBBFB498);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790]();
  OUTLINED_FUNCTION_16(v18, v49);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFB4B0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790]();
  OUTLINED_FUNCTION_3();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFB4A8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790]();
  OUTLINED_FUNCTION_3();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFB490);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790]();
  OUTLINED_FUNCTION_3();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBBFB478);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790]();
  OUTLINED_FUNCTION_20();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFB470);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790]();
  OUTLINED_FUNCTION_22();
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFB488);
  OUTLINED_FUNCTION_0();
  uint64_t v21 = v20;
  MEMORY[0x1F4188790]();
  OUTLINED_FUNCTION_10();
  v51 = v16;
  __swift_project_boxed_opaque_existential_1(v16, v16[3]);
  sub_1C649C7A0();
  sub_1C6577210();
  if (v13) {
    goto LABEL_14;
  }
  uint64_t v52 = v21;
  uint64_t v22 = sub_1C6576F40();
  uint64_t v23 = *(void *)(v22 + 16);
  if (!v23)
  {
    uint64_t v32 = v14;
LABEL_8:
    uint64_t v33 = sub_1C6576CE0();
    swift_allocError();
    v35 = v34;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F0140);
    void *v35 = &type metadata for InvocationType;
    sub_1C6576E90();
    sub_1C6576CD0();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v33 - 8) + 104))(v35, *MEMORY[0x1E4FBBA70], v33);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v32, v19);
LABEL_14:
    uint64_t v42 = (uint64_t)v51;
    goto LABEL_15;
  }
  uint64_t v24 = *(unsigned __int8 *)(v22 + 32);
  sub_1C649FA94(1, v23, v22, v22 + 32, 0, (2 * v23) | 1);
  uint64_t v26 = v25;
  unint64_t v28 = v27;
  swift_bridgeObjectRelease();
  if (v26 != v28 >> 1)
  {
    uint64_t v32 = v14;
    goto LABEL_8;
  }
  switch(v24)
  {
    case 1:
      sub_1C649C9B4();
      OUTLINED_FUNCTION_4();
      OUTLINED_FUNCTION_1();
      v36();
      swift_unknownObjectRelease();
      OUTLINED_FUNCTION_1();
      v37();
      __int16 v31 = 768;
      break;
    case 2:
      sub_1C649C968();
      OUTLINED_FUNCTION_4();
      OUTLINED_FUNCTION_1();
      v38();
      swift_unknownObjectRelease();
      OUTLINED_FUNCTION_1();
      v39();
      __int16 v31 = 1024;
      break;
    case 3:
      sub_1C649C884();
      sub_1C6576E80();
      sub_1C649DF74();
      OUTLINED_FUNCTION_34();
      sub_1C649DFC0();
      OUTLINED_FUNCTION_34();
      OUTLINED_FUNCTION_1();
      v45();
      swift_unknownObjectRelease();
      uint64_t v46 = OUTLINED_FUNCTION_19_0();
      v47(v46);
      if (a11) {
        __int16 v48 = 256;
      }
      else {
        __int16 v48 = 0;
      }
      __int16 v31 = v48 | a13;
      break;
    case 4:
      sub_1C649C838();
      OUTLINED_FUNCTION_4();
      OUTLINED_FUNCTION_1();
      v40();
      swift_unknownObjectRelease();
      OUTLINED_FUNCTION_1();
      v41();
      __int16 v31 = 1280;
      break;
    case 5:
      sub_1C649C7EC();
      OUTLINED_FUNCTION_4();
      OUTLINED_FUNCTION_1();
      v43();
      swift_unknownObjectRelease();
      OUTLINED_FUNCTION_1();
      v44();
      __int16 v31 = 1536;
      break;
    default:
      sub_1C649CA00();
      OUTLINED_FUNCTION_4();
      OUTLINED_FUNCTION_1();
      v29();
      swift_unknownObjectRelease();
      OUTLINED_FUNCTION_1();
      v30();
      __int16 v31 = 512;
      break;
  }
  uint64_t v42 = (uint64_t)v51;
  __int16 *v50 = v31;
LABEL_15:
  __swift_destroy_boxed_opaque_existential_1(v42);
  OUTLINED_FUNCTION_26();
}

void sub_1C649A684(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  InvocationType.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, *(__int16 *)vars8, vars8[2], vars8[3], vars8[4]);
}

void sub_1C649A69C()
{
}

uint64_t sub_1C649A6BC()
{
  return sub_1C6577190();
}

SiriSuggestionsKit::InvocationModality_optional __swiftcall InvocationModality.init(rawValue:)(Swift::String rawValue)
{
  return (SiriSuggestionsKit::InvocationModality_optional)sub_1C649C5A8(v1);
}

uint64_t sub_1C649A718(char *a1, char *a2)
{
  return sub_1C6498200(*a1, *a2);
}

SiriSuggestionsKit::InvocationModality_optional sub_1C649A724(Swift::String *a1)
{
  return InvocationModality.init(rawValue:)(*a1);
}

uint64_t sub_1C649A730@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = InvocationModality.rawValue.getter();
  *a1 = result;
  a1[1] = 0xE500000000000000;
  return result;
}

uint64_t sub_1C649A75C()
{
  return sub_1C6576760();
}

uint64_t sub_1C649A7BC()
{
  return sub_1C6576750();
}

void sub_1C649A80C(void *a1@<X8>)
{
  *a1 = &unk_1F2156A38;
}

uint64_t sub_1C649A81C()
{
  return sub_1C655AC6C();
}

uint64_t sub_1C649A824()
{
  return sub_1C649AB60();
}

uint64_t sub_1C649A82C()
{
  sub_1C65765E0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1C649A8D0(uint64_t a1, char a2)
{
  if (!a2) {
    OUTLINED_FUNCTION_30();
  }
  sub_1C65765E0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1C649A958(uint64_t a1, char a2)
{
  if (a2) {
    OUTLINED_FUNCTION_13();
  }
  sub_1C65765E0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1C649A9D0(uint64_t a1, char a2)
{
  switch(a2)
  {
    case 5:
      OUTLINED_FUNCTION_8();
      break;
    default:
      break;
  }
  sub_1C65765E0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1C649AAAC()
{
  AppBundleIdentifier.rawValue.getter();
  OUTLINED_FUNCTION_17();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1C649AAF8()
{
  sub_1C65765E0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1C649AB60()
{
  sub_1C65765E0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1C649ABB0()
{
  return sub_1C65765E0();
}

uint64_t sub_1C649ABC4(uint64_t a1, char a2)
{
  switch(a2)
  {
    case 3:
      OUTLINED_FUNCTION_8();
      break;
    default:
      break;
  }
  sub_1C65765E0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1C649AC84()
{
  sub_1C649FB10(v0, (uint64_t)v2);
  DeliveryVehicle.rawValue.getter();
  OUTLINED_FUNCTION_17();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C649ACCC()
{
  sub_1C65765E0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1C649AD34()
{
  sub_1C65765E0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1C649AD9C()
{
  sub_1C65765E0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1C649AF04()
{
  sub_1C65765E0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1C649AF84()
{
  sub_1C65765E0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1C649B0BC(uint64_t a1, char a2)
{
  switch(a2)
  {
    case 1:
      OUTLINED_FUNCTION_32();
      break;
    case 4:
      OUTLINED_FUNCTION_8();
      break;
    default:
      break;
  }
  sub_1C65765E0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1C649B1A8(uint64_t a1, char a2)
{
  switch(a2)
  {
    case 5:
      OUTLINED_FUNCTION_8();
      break;
    default:
      break;
  }
  sub_1C65765E0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1C649B288()
{
  return sub_1C64EBC7C();
}

void *sub_1C649B290()
{
  uint64_t result = sub_1C649B2B0();
  off_1EBBFB3B8 = result;
  return result;
}

void *sub_1C649B2B0()
{
  uint64_t v6 = MEMORY[0x1E4FBC860];
  sub_1C64A2350();
  uint64_t v0 = v6;
  unint64_t v1 = *(void *)(v6 + 16);
  unint64_t v2 = *(void *)(v6 + 24) >> 1;
  unint64_t v3 = v1 + 1;
  if (v2 <= v1)
  {
    sub_1C64A2350();
    uint64_t v0 = v6;
    unint64_t v2 = *(void *)(v6 + 24) >> 1;
  }
  *(void *)(v0 + 16) = v3;
  *(unsigned char *)(v0 + v1 + 32) = 0;
  uint64_t v4 = v1 + 2;
  if ((uint64_t)v2 < v4)
  {
    sub_1C64A2350();
    uint64_t v0 = v6;
  }
  *(void *)(v0 + 16) = v4;
  *(unsigned char *)(v0 + v3 + 32) = 1;
  sub_1C649FEDC();
  return &unk_1F21569E0;
}

uint64_t static AssistantTurnState.allCases.getter()
{
  if (qword_1EBBFB660 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t static AssistantTurnState.allCases.setter(void *a1)
{
  if (qword_1EBBFB660 != -1) {
    swift_once();
  }
  swift_beginAccess();
  off_1EBBFB3B8 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*static AssistantTurnState.allCases.modify())()
{
  if (qword_1EBBFB660 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j__swift_endAccess;
}

void *static TaskInitiatedParty.allCases.getter()
{
  return &unk_1F2156AB0;
}

uint64_t TaskInitiatedParty.rawValue.getter()
{
  if (*v0) {
    return 0x6E61747369737361;
  }
  else {
    return 1919251317;
  }
}

uint64_t AssistantTurnState.hash(into:)()
{
  int v1 = *v0;
  if (v1 == 2 || v1 == 3) {
    return sub_1C6577160();
  }
  sub_1C6577160();
  sub_1C65765E0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1C649B620(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E7275546F72657ALL && a2 == 0xE800000000000000;
  if (v2 || (sub_1C6577090() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x61546E6968746977 && a2 == 0xEA00000000006B73;
    if (v6 || (sub_1C6577090() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x706D6F436B736174 && a2 == 0xEC0000006574656CLL)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      char v8 = sub_1C6577090();
      swift_bridgeObjectRelease();
      if (v8) {
        return 2;
      }
      else {
        return 3;
      }
    }
  }
}

uint64_t sub_1C649B794()
{
  return 3;
}

uint64_t sub_1C649B79C()
{
  return sub_1C6577190();
}

uint64_t sub_1C649B7E4(char a1)
{
  if (!a1) {
    return 0x6E7275546F72657ALL;
  }
  if (a1 == 1) {
    return 0x61546E6968746977;
  }
  return 0x706D6F436B736174;
}

uint64_t sub_1C649B848()
{
  return sub_1C6577160();
}

uint64_t sub_1C649B870(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x6574616974696E69 && a2 == 0xEE00797472615064)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_1C6577090();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1C649B91C()
{
  return sub_1C6577190();
}

uint64_t sub_1C649B960()
{
  return 0x6574616974696E69;
}

uint64_t sub_1C649B984()
{
  return sub_1C649B7E4(*v0);
}

uint64_t sub_1C649B98C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C649B620(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C649B9B4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C649B794();
  *a1 = result;
  return result;
}

uint64_t sub_1C649B9DC(uint64_t a1)
{
  unint64_t v2 = sub_1C649E00C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C649BA18(uint64_t a1)
{
  unint64_t v2 = sub_1C649E00C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C649BA60()
{
  return sub_1C6577190();
}

uint64_t sub_1C649BAA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C649B870(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1C649BAD0(uint64_t a1)
{
  unint64_t v2 = sub_1C649E058();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C649BB0C(uint64_t a1)
{
  unint64_t v2 = sub_1C649E058();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C649BB48(uint64_t a1)
{
  unint64_t v2 = sub_1C649E0F0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C649BB84(uint64_t a1)
{
  unint64_t v2 = sub_1C649E0F0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C649BBC0(uint64_t a1)
{
  unint64_t v2 = sub_1C649E13C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C649BBFC(uint64_t a1)
{
  unint64_t v2 = sub_1C649E13C();

  return MEMORY[0x1F41862B0](a1, v2);
}

void AssistantTurnState.encode(to:)()
{
  OUTLINED_FUNCTION_25();
  int v1 = v0;
  char v3 = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F0158);
  OUTLINED_FUNCTION_0();
  ((void (*)(void))MEMORY[0x1F4188790])();
  OUTLINED_FUNCTION_3();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F0160);
  OUTLINED_FUNCTION_0();
  ((void (*)(void))MEMORY[0x1F4188790])();
  OUTLINED_FUNCTION_21();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F0168);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v4);
  OUTLINED_FUNCTION_10();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F0170);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_22();
  int v6 = *v1;
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  sub_1C649E00C();
  sub_1C6577240();
  if (v6 == 2)
  {
    sub_1C649E13C();
    OUTLINED_FUNCTION_28();
  }
  else
  {
    if (v6 != 3)
    {
      sub_1C649E058();
      OUTLINED_FUNCTION_28();
      sub_1C649E0A4();
      sub_1C6577010();
      OUTLINED_FUNCTION_1();
      v10();
      uint64_t v11 = OUTLINED_FUNCTION_33();
      v12(v11);
      goto LABEL_7;
    }
    sub_1C649E0F0();
    OUTLINED_FUNCTION_28();
  }
  OUTLINED_FUNCTION_1();
  v7();
  uint64_t v8 = OUTLINED_FUNCTION_33();
  v9(v8);
LABEL_7:
  OUTLINED_FUNCTION_26();
}

uint64_t AssistantTurnState.hashValue.getter()
{
  int v1 = *v0;
  sub_1C6577150();
  if (v1 == 2 || v1 == 3)
  {
    sub_1C6577160();
  }
  else
  {
    sub_1C6577160();
    sub_1C65765E0();
    swift_bridgeObjectRelease();
  }
  return sub_1C6577190();
}

void AssistantTurnState.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12)
{
  OUTLINED_FUNCTION_25();
  unint64_t v15 = v14;
  v45 = v16;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F01A0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790]();
  OUTLINED_FUNCTION_3();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F01A8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790]();
  OUTLINED_FUNCTION_20();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F01B0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790]();
  OUTLINED_FUNCTION_21();
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F01B8);
  OUTLINED_FUNCTION_0();
  uint64_t v46 = v18;
  MEMORY[0x1F4188790]();
  OUTLINED_FUNCTION_23();
  __swift_project_boxed_opaque_existential_1(v15, v15[3]);
  sub_1C649E00C();
  sub_1C6577210();
  if (v12) {
    goto LABEL_10;
  }
  uint64_t v19 = v13;
  uint64_t v20 = sub_1C6576F40();
  uint64_t v21 = *(void *)(v20 + 16);
  if (!v21)
  {
    uint64_t v32 = v46;
LABEL_9:
    uint64_t v33 = sub_1C6576CE0();
    swift_allocError();
    v35 = v34;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F0140);
    void *v35 = &type metadata for AssistantTurnState;
    sub_1C6576E90();
    sub_1C6576CD0();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v33 - 8) + 104))(v35, *MEMORY[0x1E4FBBA70], v33);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v19, v17);
LABEL_10:
    uint64_t v36 = (uint64_t)v15;
    goto LABEL_11;
  }
  int v22 = *(unsigned __int8 *)(v20 + 32);
  sub_1C649FA94(1, v21, v20, v20 + 32, 0, (2 * v21) | 1);
  uint64_t v24 = v23;
  unint64_t v26 = v25;
  swift_bridgeObjectRelease();
  if (v24 != v26 >> 1)
  {
    uint64_t v32 = v46;
    uint64_t v19 = v13;
    goto LABEL_9;
  }
  if (v22)
  {
    if (v22 == 1)
    {
      sub_1C649E0F0();
      OUTLINED_FUNCTION_14();
      OUTLINED_FUNCTION_1();
      v28(v27);
      swift_unknownObjectRelease();
      OUTLINED_FUNCTION_1();
      v30(v29);
      char v31 = 3;
    }
    else
    {
      sub_1C649E058();
      OUTLINED_FUNCTION_14();
      sub_1C649E188();
      sub_1C6576F30();
      OUTLINED_FUNCTION_1();
      v42(v41);
      swift_unknownObjectRelease();
      uint64_t v43 = OUTLINED_FUNCTION_24();
      v44(v43);
      char v31 = a12;
    }
  }
  else
  {
    sub_1C649E13C();
    OUTLINED_FUNCTION_14();
    OUTLINED_FUNCTION_1();
    v38(v37);
    swift_unknownObjectRelease();
    OUTLINED_FUNCTION_1();
    v40(v39);
    char v31 = 2;
  }
  char *v45 = v31;
  uint64_t v36 = (uint64_t)v15;
LABEL_11:
  __swift_destroy_boxed_opaque_existential_1(v36);
  OUTLINED_FUNCTION_26();
}

void sub_1C649C488(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  AssistantTurnState.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, *(int *)vars8, *(__int16 *)&vars8[4], vars8[6]);
}

void sub_1C649C4A0()
{
}

uint64_t sub_1C649C4B8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = static AssistantTurnState.allCases.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1C649C4E8()
{
  int v1 = *v0;
  sub_1C6577150();
  if (v1 == 2 || v1 == 3)
  {
    sub_1C6577160();
  }
  else
  {
    sub_1C6577160();
    sub_1C65765E0();
    swift_bridgeObjectRelease();
  }
  return sub_1C6577190();
}

SiriSuggestionsKit::TaskInitiatedParty_optional __swiftcall TaskInitiatedParty.init(rawValue:)(Swift::String rawValue)
{
  return (SiriSuggestionsKit::TaskInitiatedParty_optional)sub_1C649C5A8(v1);
}

uint64_t sub_1C649C5A8@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1C6576E60();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_1C649C608(char *a1, char *a2)
{
  return sub_1C6498278(*a1, *a2);
}

SiriSuggestionsKit::TaskInitiatedParty_optional sub_1C649C614(Swift::String *a1)
{
  return TaskInitiatedParty.init(rawValue:)(*a1);
}

uint64_t sub_1C649C620@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = TaskInitiatedParty.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1C649C648()
{
  return sub_1C6576760();
}

uint64_t sub_1C649C6A8()
{
  return sub_1C6576750();
}

void sub_1C649C6F8(void *a1@<X8>)
{
  *a1 = &unk_1F2156AB0;
}

uint64_t sub_1C649C708()
{
  return sub_1C655AC78();
}

uint64_t sub_1C649C710()
{
  return sub_1C649AAF8();
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

void *__swift_project_boxed_opaque_existential_1(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

unint64_t sub_1C649C7A0()
{
  unint64_t result = qword_1EBBFC040;
  if (!qword_1EBBFC040)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBBFC040);
  }
  return result;
}

unint64_t sub_1C649C7EC()
{
  unint64_t result = qword_1EBBFC078;
  if (!qword_1EBBFC078)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBBFC078);
  }
  return result;
}

unint64_t sub_1C649C838()
{
  unint64_t result = qword_1EA3F0100;
  if (!qword_1EA3F0100)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F0100);
  }
  return result;
}

unint64_t sub_1C649C884()
{
  unint64_t result = qword_1EA3F0108;
  if (!qword_1EA3F0108)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F0108);
  }
  return result;
}

unint64_t sub_1C649C8D0()
{
  unint64_t result = qword_1EA3F0110;
  if (!qword_1EA3F0110)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F0110);
  }
  return result;
}

unint64_t sub_1C649C91C()
{
  unint64_t result = qword_1EA3F0118;
  if (!qword_1EA3F0118)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F0118);
  }
  return result;
}

unint64_t sub_1C649C968()
{
  unint64_t result = qword_1EA3F0120;
  if (!qword_1EA3F0120)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F0120);
  }
  return result;
}

unint64_t sub_1C649C9B4()
{
  unint64_t result = qword_1EA3F0128;
  if (!qword_1EA3F0128)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F0128);
  }
  return result;
}

unint64_t sub_1C649CA00()
{
  unint64_t result = qword_1EA3F0130;
  if (!qword_1EA3F0130)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F0130);
  }
  return result;
}

uint64_t __swift_destroy_boxed_opaque_existential_1(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_1C649CA9C()
{
  return sub_1C64EBC10();
}

double VersionedInvocation.init(invocationType:versions:)@<D0>(__int16 *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  __int16 v5 = *a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF8FC8);
  uint64_t v6 = swift_allocObject();
  *(void *)&double result = 1;
  *(_OWORD *)(v6 + 16) = xmmword_1C6577AD0;
  *(_WORD *)(v6 + 32) = v5;
  *a3 = v6;
  a3[1] = a2;
  return result;
}

uint64_t VersionedInvocation.init(invocationTypes:versions:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t VersionedInvocation.hash(into:)(uint64_t a1)
{
  uint64_t v4 = *v1;
  uint64_t v3 = v1[1];
  swift_bridgeObjectRetain();
  sub_1C649DDEC(a1, v4);
  swift_bridgeObjectRelease();
  if (!v3) {
    return sub_1C6577170();
  }
  sub_1C6577170();
  swift_bridgeObjectRetain();
  sub_1C649DCC0(a1, v3);

  return swift_bridgeObjectRelease();
}

uint64_t static VersionedInvocation.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = a2[1];
  if (sub_1C649CC28(*a1, *a2))
  {
    if (v2)
    {
      if (v3)
      {
        swift_bridgeObjectRetain();
        uint64_t v4 = swift_bridgeObjectRetain();
        char v5 = sub_1C649CE78(v4, v3);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v5) {
          return 1;
        }
      }
    }
    else if (!v3)
    {
      return 1;
    }
  }
  return 0;
}

uint64_t sub_1C649CC28(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = (unsigned __int16 *)(a1 + 32);
    uint64_t v4 = (unsigned __int16 *)(a2 + 32);
    while (2)
    {
      unsigned int v6 = *v3++;
      unsigned int v5 = v6;
      unsigned int v8 = *v4++;
      unsigned int v7 = v8;
      switch(v5 >> 8)
      {
        case 2u:
          if ((v7 & 0xFF00) != 0x200) {
            return 0;
          }
          goto LABEL_52;
        case 3u:
          if ((v7 & 0xFF00) != 0x300) {
            return 0;
          }
          goto LABEL_52;
        case 4u:
          if ((v7 & 0xFF00) != 0x400) {
            return 0;
          }
          goto LABEL_52;
        case 5u:
          if ((v7 & 0xFF00) != 0x500) {
            return 0;
          }
          goto LABEL_52;
        case 6u:
          if ((v7 & 0xFF00) != 0x600) {
            return 0;
          }
          goto LABEL_52;
        default:
          if ((v7 >> 8) - 2 < 5) {
            return 0;
          }
          if (v5 == 2)
          {
            if (v7 != 2) {
              return 0;
            }
          }
          else if (v5 == 3)
          {
            if (v7 != 3) {
              return 0;
            }
          }
          else
          {
            if ((v7 & 0xFE) == 2) {
              return 0;
            }
            if (v5) {
              uint64_t v9 = 0x6E61747369737361;
            }
            else {
              uint64_t v9 = 1919251317;
            }
            if (v5) {
              unint64_t v10 = 0xE900000000000074;
            }
            else {
              unint64_t v10 = 0xE400000000000000;
            }
            if (v7) {
              uint64_t v11 = 0x6E61747369737361;
            }
            else {
              uint64_t v11 = 1919251317;
            }
            if (v7) {
              unint64_t v12 = 0xE900000000000074;
            }
            else {
              unint64_t v12 = 0xE400000000000000;
            }
            if (v9 == v11 && v10 == v12)
            {
              swift_bridgeObjectRelease_n();
            }
            else
            {
              char v14 = sub_1C6577090();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if ((v14 & 1) == 0) {
                return 0;
              }
            }
          }
          if ((v5 & 0x100) != 0) {
            uint64_t v15 = 0x6465707974;
          }
          else {
            uint64_t v15 = 0x6563696F76;
          }
          if ((v7 & 0x100) != 0) {
            uint64_t v16 = 0x6465707974;
          }
          else {
            uint64_t v16 = 0x6563696F76;
          }
          if (v15 == v16)
          {
            swift_bridgeObjectRelease_n();
          }
          else
          {
            char v17 = sub_1C6577090();
            swift_bridgeObjectRelease_n();
            if ((v17 & 1) == 0) {
              return 0;
            }
          }
LABEL_52:
          if (!--v2) {
            return 1;
          }
          continue;
      }
    }
  }
  return 1;
}

uint64_t sub_1C649CE78(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = (uint64_t *)(a2 + 48);
    uint64_t v4 = (uint64_t *)(a1 + 48);
    do
    {
      uint64_t v5 = *(v4 - 1);
      uint64_t v6 = *v4;
      uint64_t v7 = *((unsigned __int8 *)v3 - 16);
      uint64_t v9 = *(v3 - 1);
      uint64_t v8 = *v3;
      v3 += 3;
      uint64_t v10 = *((unsigned __int8 *)v4 - 16);
      v4 += 3;
      unint64_t v11 = 0xE300000000000000;
      uint64_t v12 = 5459817;
      switch(v10)
      {
        case 1:
          unint64_t v11 = 0xE500000000000000;
          uint64_t v12 = 0x534F63616DLL;
          break;
        case 2:
          unint64_t v11 = 0xE400000000000000;
          uint64_t v12 = 1397716596;
          break;
        case 3:
          unint64_t v11 = 0xE700000000000000;
          uint64_t v12 = 0x534F6863746177;
          break;
        case 4:
          unint64_t v11 = 0xE800000000000000;
          uint64_t v12 = 0x534F6E6F69736976;
          break;
        case 5:
          unint64_t v11 = 0xE700000000000000;
          uint64_t v12 = 0x6E776F6E6B6E75;
          break;
        default:
          break;
      }
      unint64_t v13 = 0xE300000000000000;
      uint64_t v14 = 5459817;
      switch(v7)
      {
        case 1:
          unint64_t v13 = 0xE500000000000000;
          uint64_t v14 = 0x534F63616DLL;
          break;
        case 2:
          unint64_t v13 = 0xE400000000000000;
          uint64_t v14 = 1397716596;
          break;
        case 3:
          unint64_t v13 = 0xE700000000000000;
          uint64_t v14 = 0x534F6863746177;
          break;
        case 4:
          unint64_t v13 = 0xE800000000000000;
          uint64_t v14 = 0x534F6E6F69736976;
          break;
        case 5:
          unint64_t v13 = 0xE700000000000000;
          uint64_t v14 = 0x6E776F6E6B6E75;
          break;
        default:
          break;
      }
      if (v12 == v14 && v11 == v13)
      {
        swift_bridgeObjectRelease_n();
        if (v5 != v9 || v6 != v8) {
          return 0;
        }
      }
      else
      {
        char v16 = sub_1C6577090();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t result = 0;
        if ((v16 & 1) == 0) {
          return result;
        }
        if (v5 != v9 || v6 != v8) {
          return result;
        }
      }
      --v2;
    }
    while (v2);
  }
  return 1;
}

uint64_t sub_1C649D0C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = a1 + 32;
    uint64_t v4 = a2 + 32;
    do
    {
      sub_1C649F980(v3, (uint64_t)v20);
      sub_1C649F980(v4, (uint64_t)v19);
      if (v20[0] == v19[0] && v20[1] == v19[1])
      {
        sub_1C649F980((uint64_t)v20, (uint64_t)v17);
        sub_1C649F980((uint64_t)v19, (uint64_t)v15);
      }
      else
      {
        char v6 = sub_1C6577090();
        sub_1C649F980((uint64_t)v20, (uint64_t)v17);
        sub_1C649F980((uint64_t)v19, (uint64_t)v15);
        if ((v6 & 1) == 0)
        {
          sub_1C649F9DC((uint64_t)v15);
          sub_1C649F9DC((uint64_t)v17);
          sub_1C649F9DC((uint64_t)v19);
          sub_1C649F9DC((uint64_t)v20);
          return 0;
        }
      }
      sub_1C649FA30((uint64_t)&v18, (uint64_t)v14);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFB8F8);
      uint64_t v7 = sub_1C65765A0();
      uint64_t v9 = v8;
      sub_1C649FA30((uint64_t)&v16, (uint64_t)v14);
      if (v7 == sub_1C65765A0() && v9 == v10)
      {
        swift_bridgeObjectRelease_n();
        sub_1C649F9DC((uint64_t)v15);
        sub_1C649F9DC((uint64_t)v17);
        sub_1C649F9DC((uint64_t)v19);
        sub_1C649F9DC((uint64_t)v20);
      }
      else
      {
        char v12 = sub_1C6577090();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1C649F9DC((uint64_t)v15);
        sub_1C649F9DC((uint64_t)v17);
        sub_1C649F9DC((uint64_t)v19);
        sub_1C649F9DC((uint64_t)v20);
        if ((v12 & 1) == 0) {
          return 0;
        }
      }
      v3 += 56;
      v4 += 56;
      --v2;
    }
    while (v2);
  }
  return 1;
}

uint64_t VersionedInvocation.hashValue.getter()
{
  uint64_t v2 = *v0;
  uint64_t v1 = v0[1];
  sub_1C6577150();
  swift_bridgeObjectRetain();
  sub_1C649DDEC((uint64_t)v4, v2);
  swift_bridgeObjectRelease();
  sub_1C6577170();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_1C649DCC0((uint64_t)v4, v1);
    swift_bridgeObjectRelease();
  }
  return sub_1C6577190();
}

uint64_t sub_1C649D360()
{
  uint64_t v2 = *v0;
  uint64_t v1 = v0[1];
  sub_1C6577150();
  swift_bridgeObjectRetain();
  sub_1C649DDEC((uint64_t)v4, v2);
  swift_bridgeObjectRelease();
  sub_1C6577170();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_1C649DCC0((uint64_t)v4, v1);
    swift_bridgeObjectRelease();
  }
  return sub_1C6577190();
}

uint64_t sub_1C649D3F8()
{
  if (qword_1EBBFB658 != -1) {
    swift_once();
  }
  qword_1EBBF9D18 = (uint64_t)off_1EBBFB648;
  unk_1EBBF9D20 = &unk_1F2156B28;

  return swift_bridgeObjectRetain();
}

uint64_t static VersionedInvocations.HintsDawnA.getter@<X0>(void *a1@<X8>)
{
  return sub_1C649DC54(&qword_1EBBF9D30, &qword_1EBBF9D18, (uint64_t *)&unk_1EBBF9D20, a1);
}

uint64_t sub_1C649D490()
{
  if (qword_1EBBFB658 != -1) {
    swift_once();
  }
  qword_1EA3EFF60 = (uint64_t)off_1EBBFB648;
  unk_1EA3EFF68 = &unk_1F2156B78;

  return swift_bridgeObjectRetain();
}

uint64_t static VersionedInvocations.HintsDawnB.getter@<X0>(void *a1@<X8>)
{
  return sub_1C649DC54(&qword_1EA3EFF58, &qword_1EA3EFF60, (uint64_t *)&unk_1EA3EFF68, a1);
}

uint64_t sub_1C649D528()
{
  if (qword_1EBBFB658 != -1) {
    swift_once();
  }
  qword_1EBBF9D38 = (uint64_t)off_1EBBFB648;
  unk_1EBBF9D40 = &unk_1F2156BC8;

  return swift_bridgeObjectRetain();
}

uint64_t static VersionedInvocations.HintsDawnC.getter@<X0>(void *a1@<X8>)
{
  return sub_1C649DC54(&qword_1EBBF8090, &qword_1EBBF9D38, (uint64_t *)&unk_1EBBF9D40, a1);
}

uint64_t sub_1C649D5C0()
{
  if (qword_1EBBFB658 != -1) {
    swift_once();
  }
  qword_1EA3EFF80 = (uint64_t)off_1EBBFB648;
  unk_1EA3EFF88 = &unk_1F2156C18;

  return swift_bridgeObjectRetain();
}

uint64_t static VersionedInvocations.HintsDawnD.getter@<X0>(void *a1@<X8>)
{
  return sub_1C649DC54(&qword_1EA3EFF78, &qword_1EA3EFF80, (uint64_t *)&unk_1EA3EFF88, a1);
}

uint64_t sub_1C649D658()
{
  if (qword_1EBBFB658 != -1) {
    swift_once();
  }
  qword_1EBBF8E38 = (uint64_t)off_1EBBFB648;
  unk_1EBBF8E40 = &unk_1F2156C68;

  return swift_bridgeObjectRetain();
}

uint64_t static VersionedInvocations.HintsDawnE.getter@<X0>(void *a1@<X8>)
{
  return sub_1C649DC54(&qword_1EBBF8E50, &qword_1EBBF8E38, (uint64_t *)&unk_1EBBF8E40, a1);
}

uint64_t sub_1C649D6F0()
{
  if (qword_1EBBFB658 != -1) {
    swift_once();
  }
  qword_1EA3EFFA0 = (uint64_t)off_1EBBFB648;
  *(void *)algn_1EA3EFFA8 = &unk_1F2156CB8;

  return swift_bridgeObjectRetain();
}

uint64_t static VersionedInvocations.HintsDawnF.getter@<X0>(void *a1@<X8>)
{
  return sub_1C649DC54(&qword_1EA3EFF98, &qword_1EA3EFFA0, (uint64_t *)algn_1EA3EFFA8, a1);
}

uint64_t sub_1C649D788()
{
  if (qword_1EBBFB658 != -1) {
    swift_once();
  }
  qword_1EA3EFFB8 = (uint64_t)off_1EBBFB648;
  unk_1EA3EFFC0 = &unk_1F2156CF0;

  return swift_bridgeObjectRetain();
}

uint64_t static VersionedInvocations.HintsDawnFAligned.getter@<X0>(void *a1@<X8>)
{
  return sub_1C649DC54(&qword_1EA3EFFB0, &qword_1EA3EFFB8, &qword_1EA3EFFC0, a1);
}

uint64_t sub_1C649D820()
{
  if (qword_1EBBFB658 != -1) {
    swift_once();
  }
  qword_1EA3EFFD0 = (uint64_t)off_1EBBFB648;
  *(void *)algn_1EA3EFFD8 = &unk_1F2156D40;

  return swift_bridgeObjectRetain();
}

uint64_t static VersionedInvocations.HintsCrystalA.getter@<X0>(void *a1@<X8>)
{
  return sub_1C649DC54(&qword_1EA3EFFC8, &qword_1EA3EFFD0, (uint64_t *)algn_1EA3EFFD8, a1);
}

uint64_t sub_1C649D8B8()
{
  if (qword_1EBBFB658 != -1) {
    swift_once();
  }
  qword_1EA3EFFE8 = (uint64_t)off_1EBBFB648;
  unk_1EA3EFFF0 = &unk_1F2156D78;

  return swift_bridgeObjectRetain();
}

uint64_t static VersionedInvocations.HintsCrystalAAligned.getter@<X0>(void *a1@<X8>)
{
  return sub_1C649DC54(&qword_1EA3EFFE0, &qword_1EA3EFFE8, &qword_1EA3EFFF0, a1);
}

uint64_t sub_1C649D950()
{
  if (qword_1EBBFB658 != -1) {
    swift_once();
  }
  qword_1EA3F0000 = (uint64_t)off_1EBBFB648;
  *(void *)algn_1EA3F0008 = &unk_1F2156DC8;

  return swift_bridgeObjectRetain();
}

uint64_t static VersionedInvocations.HintsBorealis.getter@<X0>(void *a1@<X8>)
{
  return sub_1C649DC54(&qword_1EA3EFFF8, &qword_1EA3F0000, (uint64_t *)algn_1EA3F0008, a1);
}

uint64_t sub_1C649D9E8()
{
  if (qword_1EBBFB658 != -1) {
    swift_once();
  }
  qword_1EA3F0018 = (uint64_t)off_1EBBFB648;
  unk_1EA3F0020 = &unk_1F2156E00;

  return swift_bridgeObjectRetain();
}

uint64_t static VersionedInvocations.HintsBorealisE.getter@<X0>(void *a1@<X8>)
{
  return sub_1C649DC54(&qword_1EA3F0010, &qword_1EA3F0018, &qword_1EA3F0020, a1);
}

uint64_t sub_1C649DA80()
{
  if (qword_1EBBFB658 != -1) {
    swift_once();
  }
  qword_1EA3F0030 = (uint64_t)off_1EBBFB648;
  *(void *)algn_1EA3F0038 = &unk_1F2156E38;

  return swift_bridgeObjectRetain();
}

uint64_t static VersionedInvocations.HintsBorealisF.getter@<X0>(void *a1@<X8>)
{
  return sub_1C649DC54(&qword_1EA3F0028, &qword_1EA3F0030, (uint64_t *)algn_1EA3F0038, a1);
}

uint64_t sub_1C649DB18()
{
  if (qword_1EBBFB658 != -1) {
    swift_once();
  }
  qword_1EA3F0048 = (uint64_t)off_1EBBFB648;
  unk_1EA3F0050 = &unk_1F2156E70;

  return swift_bridgeObjectRetain();
}

uint64_t static VersionedInvocations.HintsConstellationA.getter@<X0>(void *a1@<X8>)
{
  return sub_1C649DC54(&qword_1EA3F0040, &qword_1EA3F0048, &qword_1EA3F0050, a1);
}

uint64_t sub_1C649DBB0()
{
  if (qword_1EBBF9D30 != -1) {
    swift_once();
  }
  qword_1EBBF9D50 = qword_1EBBF9D18;
  unk_1EBBF9D58 = unk_1EBBF9D20;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t static VersionedInvocations.latest.getter@<X0>(void *a1@<X8>)
{
  return sub_1C649DC54(&qword_1EBBF9D68, &qword_1EBBF9D50, (uint64_t *)&unk_1EBBF9D58, a1);
}

uint64_t sub_1C649DC54@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t *a3@<X2>, void *a4@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v7 = *a3;
  *a4 = *a2;
  a4[1] = v7;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t sub_1C649DCC0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t result = sub_1C6577160();
  if (v3)
  {
    uint64_t v5 = a2 + 48;
    do
    {
      v5 += 24;
      sub_1C65765E0();
      swift_bridgeObjectRelease();
      sub_1C6577160();
      uint64_t result = sub_1C6577160();
      --v3;
    }
    while (v3);
  }
  return result;
}

uint64_t sub_1C649DDEC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t result = sub_1C6577160();
  if (v3)
  {
    uint64_t v5 = (unsigned __int16 *)(a2 + 32);
    do
    {
      unsigned int v7 = *v5++;
      char v6 = v7;
      switch(v7 >> 8)
      {
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          uint64_t result = sub_1C6577160();
          break;
        default:
          sub_1C6577160();
          if (v6 == 2 || v6 == 3)
          {
            sub_1C6577160();
          }
          else
          {
            sub_1C6577160();
            sub_1C65765E0();
            swift_bridgeObjectRelease();
          }
          sub_1C65765E0();
          uint64_t result = swift_bridgeObjectRelease();
          break;
      }
      --v3;
    }
    while (v3);
  }
  return result;
}

unint64_t sub_1C649DF74()
{
  unint64_t result = qword_1EA3F0148;
  if (!qword_1EA3F0148)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F0148);
  }
  return result;
}

unint64_t sub_1C649DFC0()
{
  unint64_t result = qword_1EA3F0150;
  if (!qword_1EA3F0150)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F0150);
  }
  return result;
}

unint64_t sub_1C649E00C()
{
  unint64_t result = qword_1EA3F0178;
  if (!qword_1EA3F0178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F0178);
  }
  return result;
}

unint64_t sub_1C649E058()
{
  unint64_t result = qword_1EA3F0180;
  if (!qword_1EA3F0180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F0180);
  }
  return result;
}

unint64_t sub_1C649E0A4()
{
  unint64_t result = qword_1EA3F0188;
  if (!qword_1EA3F0188)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F0188);
  }
  return result;
}

unint64_t sub_1C649E0F0()
{
  unint64_t result = qword_1EA3F0190;
  if (!qword_1EA3F0190)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F0190);
  }
  return result;
}

unint64_t sub_1C649E13C()
{
  unint64_t result = qword_1EA3F0198;
  if (!qword_1EA3F0198)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F0198);
  }
  return result;
}

unint64_t sub_1C649E188()
{
  unint64_t result = qword_1EA3F01C0;
  if (!qword_1EA3F01C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F01C0);
  }
  return result;
}

unint64_t sub_1C649E1D8()
{
  unint64_t result = qword_1EBBF7FC0;
  if (!qword_1EBBF7FC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBBF7FC0);
  }
  return result;
}

uint64_t sub_1C649E224()
{
  return sub_1C649E384(&qword_1EA3F01C8, &qword_1EA3F01D0);
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

unint64_t sub_1C649E298()
{
  unint64_t result = qword_1EA3F01D8;
  if (!qword_1EA3F01D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F01D8);
  }
  return result;
}

uint64_t sub_1C649E2E4()
{
  return sub_1C649E384(&qword_1EA3F01E0, &qword_1EA3F01E8);
}

unint64_t sub_1C649E310()
{
  unint64_t result = qword_1EA3F01F0;
  if (!qword_1EA3F01F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F01F0);
  }
  return result;
}

uint64_t sub_1C649E35C()
{
  return sub_1C649E384(&qword_1EA3F01F8, &qword_1EA3F0200);
}

uint64_t sub_1C649E384(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C649E3D8()
{
  unint64_t result = qword_1EA3F0208;
  if (!qword_1EA3F0208)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F0208);
  }
  return result;
}

unint64_t sub_1C649E428()
{
  unint64_t result = qword_1EA3F0210;
  if (!qword_1EA3F0210)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F0210);
  }
  return result;
}

_WORD *__swift_memcpy2_1(_WORD *result, _WORD *a2)
{
  *unint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for InvocationType(unsigned __int16 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFA)
  {
    unsigned int v2 = a2 + 65286;
    if (a2 + 65286 <= 0xFFFEFFFF) {
      unsigned int v3 = 2;
    }
    else {
      unsigned int v3 = 4;
    }
    if (v2 < 0xFF0000) {
      unsigned int v3 = 1;
    }
    if (v2 >= 0x10000) {
      uint64_t v4 = v3;
    }
    else {
      uint64_t v4 = 0;
    }
    switch(v4)
    {
      case 1:
        int v5 = *((unsigned __int8 *)a1 + 2);
        if (!*((unsigned char *)a1 + 2)) {
          break;
        }
        return (*a1 | (v5 << 16)) - 65286;
      case 2:
        int v5 = a1[1];
        if (a1[1]) {
          return (*a1 | (v5 << 16)) - 65286;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1C649E538);
      case 4:
        int v5 = *(_DWORD *)(a1 + 1);
        if (!v5) {
          break;
        }
        return (*a1 | (v5 << 16)) - 65286;
      default:
        break;
    }
  }
  unsigned int v7 = *((unsigned __int8 *)a1 + 1);
  if (v7 >= 2) {
    unsigned int v8 = v7 - 1;
  }
  else {
    unsigned int v8 = 0;
  }
  if (v8 >= 6) {
    return v8 - 5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for InvocationType(uint64_t result, unsigned int a2, unsigned int a3)
{
  unsigned int v3 = a3 + 65286;
  if (a3 + 65286 <= 0xFFFEFFFF) {
    int v4 = 2;
  }
  else {
    int v4 = 4;
  }
  if (v3 < 0xFF0000) {
    int v4 = 1;
  }
  if (v3 >= 0x10000) {
    unsigned int v5 = v4;
  }
  else {
    unsigned int v5 = 0;
  }
  if (a3 >= 0xFA) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v7 = ((a2 - 250) >> 16) + 1;
    *(_WORD *)unint64_t result = a2 - 250;
    switch(v6)
    {
      case 1:
        *(unsigned char *)(result + 2) = v7;
        break;
      case 2:
        *(_WORD *)(result + 2) = v7;
        break;
      case 3:
LABEL_25:
        __break(1u);
        JUMPOUT(0x1C649E620);
      case 4:
        *(_DWORD *)(result + 2) = v7;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v6)
    {
      case 1:
        *(unsigned char *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      case 2:
        *(_WORD *)(result + 2) = 0;
        goto LABEL_19;
      case 3:
        goto LABEL_25;
      case 4:
        *(_DWORD *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      default:
LABEL_19:
        if (a2) {
LABEL_20:
        }
          *(unsigned char *)(result + 1) = a2 + 6;
        break;
    }
  }
  return result;
}

uint64_t sub_1C649E648(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int8 *)(a1 + 1);
  if (v1 >= 2) {
    return v1 - 1;
  }
  else {
    return 0;
  }
}

uint64_t sub_1C649E660(uint64_t result, unsigned int a2)
{
  if (a2 > 0xFE)
  {
    *(_WORD *)unint64_t result = a2 - 255;
  }
  else if (a2)
  {
    *(unsigned char *)(result + 1) = a2 + 1;
  }
  return result;
}

void type metadata accessor for InvocationType()
{
}

unsigned char *__swift_memcpy1_1(unsigned char *result, unsigned char *a2)
{
  *unint64_t result = *a2;
  return result;
}

void type metadata accessor for InvocationModality()
{
}

uint64_t getEnumTagSinglePayload for AssistantTurnState(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFD)
  {
    unsigned int v2 = a2 + 3;
    if (a2 + 3 >= 0xFFFF00) {
      unsigned int v3 = 4;
    }
    else {
      unsigned int v3 = 2;
    }
    if (v2 >> 8 < 0xFF) {
      unsigned int v3 = 1;
    }
    if (v2 >= 0x100) {
      uint64_t v4 = v3;
    }
    else {
      uint64_t v4 = 0;
    }
    switch(v4)
    {
      case 1:
        int v5 = a1[1];
        if (!a1[1]) {
          break;
        }
        return (*a1 | (v5 << 8)) - 3;
      case 2:
        int v5 = *(unsigned __int16 *)(a1 + 1);
        if (*(_WORD *)(a1 + 1)) {
          return (*a1 | (v5 << 8)) - 3;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1C649E760);
      case 4:
        int v5 = *(_DWORD *)(a1 + 1);
        if (!v5) {
          break;
        }
        return (*a1 | (v5 << 8)) - 3;
      default:
        break;
    }
  }
  unsigned int v7 = *a1;
  if (v7 >= 2) {
    unsigned int v8 = v7 - 1;
  }
  else {
    unsigned int v8 = 0;
  }
  if (v8 >= 3) {
    return v8 - 2;
  }
  else {
    return 0;
  }
}

unsigned char *storeEnumTagSinglePayload for AssistantTurnState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  unsigned int v3 = a3 + 3;
  if (a3 + 3 >= 0xFFFF00) {
    int v4 = 4;
  }
  else {
    int v4 = 2;
  }
  if (v3 >> 8 < 0xFF) {
    int v4 = 1;
  }
  if (v3 >= 0x100) {
    unsigned int v5 = v4;
  }
  else {
    unsigned int v5 = 0;
  }
  if (a3 >= 0xFD) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v7 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v6)
    {
      case 1:
        result[1] = v7;
        break;
      case 2:
        *(_WORD *)(result + 1) = v7;
        break;
      case 3:
LABEL_25:
        __break(1u);
        JUMPOUT(0x1C649E848);
      case 4:
        *(_DWORD *)(result + 1) = v7;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v6)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_19;
      case 3:
        goto LABEL_25;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      default:
LABEL_19:
        if (a2) {
LABEL_20:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

uint64_t sub_1C649E870(unsigned __int8 *a1)
{
  unsigned int v1 = *a1;
  if (v1 >= 2) {
    return v1 - 1;
  }
  else {
    return 0;
  }
}

unsigned char *sub_1C649E884(unsigned char *result, int a2)
{
  if (a2) {
    *unint64_t result = a2 + 1;
  }
  return result;
}

void type metadata accessor for AssistantTurnState()
{
}

void type metadata accessor for TaskInitiatedParty()
{
}

uint64_t destroy for VersionedInvocation()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *_s18SiriSuggestionsKit19VersionedInvocationVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for VersionedInvocation(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

_OWORD *assignWithTake for VersionedInvocation(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for VersionedInvocation(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((unsigned char *)a1 + 16))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for VersionedInvocation(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for VersionedInvocation()
{
}

void type metadata accessor for VersionedInvocations()
{
}

uint64_t getEnumTagSinglePayload for AssistantTurnState.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFE)
  {
    if (a2 + 2 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 2) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 3;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v5 = v6 - 3;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for AssistantTurnState.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C649EBB8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AssistantTurnState.CodingKeys()
{
  return &type metadata for AssistantTurnState.CodingKeys;
}

ValueMetadata *type metadata accessor for AssistantTurnState.ZeroTurnCodingKeys()
{
  return &type metadata for AssistantTurnState.ZeroTurnCodingKeys;
}

ValueMetadata *type metadata accessor for AssistantTurnState.WithinTaskCodingKeys()
{
  return &type metadata for AssistantTurnState.WithinTaskCodingKeys;
}

uint64_t getEnumTagSinglePayload for AssistantTurnState.TaskCompleteCodingKeys(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *storeEnumTagSinglePayload for AssistantTurnState.TaskCompleteCodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *__n128 result = a2;
        return result;
      case 2:
        *(_WORD *)__n128 result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)__n128 result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *__n128 result = 0;
      break;
    case 2:
      *(_WORD *)__n128 result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C649ED00);
    case 4:
      *(_DWORD *)__n128 result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C649ED28()
{
  return 0;
}

ValueMetadata *type metadata accessor for AssistantTurnState.TaskCompleteCodingKeys()
{
  return &type metadata for AssistantTurnState.TaskCompleteCodingKeys;
}

uint64_t getEnumTagSinglePayload for SuggestionsOSType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFB)
  {
    if (a2 + 5 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 5) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 6;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 6;
  int v5 = v6 - 6;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for InvocationType.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *__n128 result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C649EE94);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 5;
        break;
    }
  }
  return result;
}

uint64_t sub_1C649EEBC(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_1C649EEC4(unsigned char *result, char a2)
{
  *__n128 result = a2;
  return result;
}

ValueMetadata *type metadata accessor for InvocationType.CodingKeys()
{
  return &type metadata for InvocationType.CodingKeys;
}

ValueMetadata *type metadata accessor for InvocationType.SiriHelpCodingKeys()
{
  return &type metadata for InvocationType.SiriHelpCodingKeys;
}

ValueMetadata *type metadata accessor for InvocationType.SiriSocialConversationCodingKeys()
{
  return &type metadata for InvocationType.SiriSocialConversationCodingKeys;
}

ValueMetadata *type metadata accessor for InvocationType.InAppCodingKeys()
{
  return &type metadata for InvocationType.InAppCodingKeys;
}

uint64_t getEnumTagSinglePayload for AppInView.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFF)
  {
    if (a2 + 1 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 1) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 2;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v5 = v6 - 2;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *_s18SiriSuggestionsKit18TaskInitiatedPartyOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C649F060);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

unsigned char *sub_1C649F088(unsigned char *result, char a2)
{
  *__n128 result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for InvocationType.AssistantTurnCodingKeys()
{
  return &type metadata for InvocationType.AssistantTurnCodingKeys;
}

ValueMetadata *type metadata accessor for InvocationType.OfflineGenerationCodingKeys()
{
  return &type metadata for InvocationType.OfflineGenerationCodingKeys;
}

ValueMetadata *type metadata accessor for InvocationType.UnknownCodingKeys()
{
  return &type metadata for InvocationType.UnknownCodingKeys;
}

unint64_t sub_1C649F0C8()
{
  unint64_t result = qword_1EA3F0218;
  if (!qword_1EA3F0218)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F0218);
  }
  return result;
}

unint64_t sub_1C649F118()
{
  unint64_t result = qword_1EA3F0220;
  if (!qword_1EA3F0220)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F0220);
  }
  return result;
}

unint64_t sub_1C649F168()
{
  unint64_t result = qword_1EA3F0228;
  if (!qword_1EA3F0228)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F0228);
  }
  return result;
}

unint64_t sub_1C649F1B8()
{
  unint64_t result = qword_1EA3F0230;
  if (!qword_1EA3F0230)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F0230);
  }
  return result;
}

unint64_t sub_1C649F208()
{
  unint64_t result = qword_1EA3F0238;
  if (!qword_1EA3F0238)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F0238);
  }
  return result;
}

unint64_t sub_1C649F258()
{
  unint64_t result = qword_1EA3F0240;
  if (!qword_1EA3F0240)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F0240);
  }
  return result;
}

unint64_t sub_1C649F2A8()
{
  unint64_t result = qword_1EA3F0248;
  if (!qword_1EA3F0248)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F0248);
  }
  return result;
}

unint64_t sub_1C649F2F8()
{
  unint64_t result = qword_1EA3F0250;
  if (!qword_1EA3F0250)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F0250);
  }
  return result;
}

unint64_t sub_1C649F348()
{
  unint64_t result = qword_1EA3F0258;
  if (!qword_1EA3F0258)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F0258);
  }
  return result;
}

unint64_t sub_1C649F398()
{
  unint64_t result = qword_1EA3F0260;
  if (!qword_1EA3F0260)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F0260);
  }
  return result;
}

unint64_t sub_1C649F3E8()
{
  unint64_t result = qword_1EA3F0268;
  if (!qword_1EA3F0268)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F0268);
  }
  return result;
}

unint64_t sub_1C649F438()
{
  unint64_t result = qword_1EA3F0270;
  if (!qword_1EA3F0270)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F0270);
  }
  return result;
}

unint64_t sub_1C649F488()
{
  unint64_t result = qword_1EBBFC028;
  if (!qword_1EBBFC028)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBBFC028);
  }
  return result;
}

unint64_t sub_1C649F4D8()
{
  unint64_t result = qword_1EBBFC020;
  if (!qword_1EBBFC020)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBBFC020);
  }
  return result;
}

unint64_t sub_1C649F528()
{
  unint64_t result = qword_1EBBFC038;
  if (!qword_1EBBFC038)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBBFC038);
  }
  return result;
}

unint64_t sub_1C649F578()
{
  unint64_t result = qword_1EBBFC030;
  if (!qword_1EBBFC030)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBBFC030);
  }
  return result;
}

unint64_t sub_1C649F5C8()
{
  unint64_t result = qword_1EBBFC068;
  if (!qword_1EBBFC068)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBBFC068);
  }
  return result;
}

unint64_t sub_1C649F618()
{
  unint64_t result = qword_1EBBFC060;
  if (!qword_1EBBFC060)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBBFC060);
  }
  return result;
}

unint64_t sub_1C649F668()
{
  unint64_t result = qword_1EBBFC098;
  if (!qword_1EBBFC098)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBBFC098);
  }
  return result;
}

unint64_t sub_1C649F6B8()
{
  unint64_t result = qword_1EBBFC090;
  if (!qword_1EBBFC090)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBBFC090);
  }
  return result;
}

unint64_t sub_1C649F708()
{
  unint64_t result = qword_1EBBFC0A8;
  if (!qword_1EBBFC0A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBBFC0A8);
  }
  return result;
}

unint64_t sub_1C649F758()
{
  unint64_t result = qword_1EBBFC0A0;
  if (!qword_1EBBFC0A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBBFC0A0);
  }
  return result;
}

unint64_t sub_1C649F7A8()
{
  unint64_t result = qword_1EBBFC3D8;
  if (!qword_1EBBFC3D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBBFC3D8);
  }
  return result;
}

unint64_t sub_1C649F7F8()
{
  unint64_t result = qword_1EBBFC080;
  if (!qword_1EBBFC080)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBBFC080);
  }
  return result;
}

unint64_t sub_1C649F848()
{
  unint64_t result = qword_1EBBFC058;
  if (!qword_1EBBFC058)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBBFC058);
  }
  return result;
}

unint64_t sub_1C649F898()
{
  unint64_t result = qword_1EBBFC050;
  if (!qword_1EBBFC050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBBFC050);
  }
  return result;
}

unint64_t sub_1C649F8E4()
{
  unint64_t result = qword_1EA3F0278;
  if (!qword_1EA3F0278)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F0278);
  }
  return result;
}

unint64_t sub_1C649F930()
{
  unint64_t result = qword_1EA3F0280;
  if (!qword_1EA3F0280)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F0280);
  }
  return result;
}

uint64_t sub_1C649F980(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1C649F9DC(uint64_t a1)
{
  return a1;
}

uint64_t sub_1C649FA30(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_1C649FA94(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  if (result < a5)
  {
    __break(1u);
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if ((uint64_t)(a6 >> 1) < result || (uint64_t)(a6 >> 1) < a2) {
    goto LABEL_10;
  }
  if (a2 < a5)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if ((a2 & 0x8000000000000000) == 0) {
    return swift_unknownObjectRetain();
  }
LABEL_12:
  __break(1u);
  return result;
}

uint64_t sub_1C649FB10(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t OUTLINED_FUNCTION_2()
{
  return sub_1C6577090();
}

uint64_t OUTLINED_FUNCTION_4()
{
  return sub_1C6576E80();
}

uint64_t OUTLINED_FUNCTION_5()
{
  return 0x6E776F6E6B6E75;
}

uint64_t OUTLINED_FUNCTION_6()
{
  return sub_1C6576F70();
}

uint64_t OUTLINED_FUNCTION_11()
{
  return 0x61546E6968746977;
}

uint64_t OUTLINED_FUNCTION_14()
{
  return sub_1C6576E80();
}

uint64_t OUTLINED_FUNCTION_15()
{
  return 0x6E7275546F72657ALL;
}

void OUTLINED_FUNCTION_16(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 152) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t OUTLINED_FUNCTION_17()
{
  return sub_1C65765E0();
}

uint64_t OUTLINED_FUNCTION_18()
{
  return 0x7070416E69;
}

uint64_t OUTLINED_FUNCTION_19_0()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_24()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_27()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_28()
{
  return sub_1C6576F70();
}

uint64_t OUTLINED_FUNCTION_29()
{
  return sub_1C6577090();
}

uint64_t OUTLINED_FUNCTION_33()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_34()
{
  return sub_1C6576F30();
}

void sub_1C649FEDC()
{
}

void sub_1C649FF08()
{
  OUTLINED_FUNCTION_32_0();
  if (v5)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v6 = v4;
  if (!swift_isUniquelyReferenced_nonNull_native() || v3 > *(void *)(v1 + 24) >> 1)
  {
    OUTLINED_FUNCTION_26_0();
    sub_1C64ACAC4();
    uint64_t v1 = v7;
  }
  if (!*(void *)(v6 + 16))
  {
    if (!v2) {
      goto LABEL_11;
    }
    goto LABEL_13;
  }
  OUTLINED_FUNCTION_4_0();
  if (v8 != v5)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  unint64_t v9 = OUTLINED_FUNCTION_13_0();
  sub_1C650552C(v9, v10, v11);
  if (!v2)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    void *v0 = v1;
    return;
  }
  OUTLINED_FUNCTION_23_0();
  if (!v5)
  {
    *(void *)(v1 + 16) = v12;
    goto LABEL_11;
  }
LABEL_15:
  __break(1u);
}

void sub_1C649FFBC()
{
}

void sub_1C649FFE8()
{
  OUTLINED_FUNCTION_30_0();
  OUTLINED_FUNCTION_17_0();
  if (v7)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (!OUTLINED_FUNCTION_14_0() || v6 > *(void *)(v2 + 24) >> 1)
  {
    OUTLINED_FUNCTION_26_0();
    uint64_t v2 = v5();
  }
  if (!*(void *)(v0 + 16))
  {
    if (!v3) {
      goto LABEL_11;
    }
    goto LABEL_13;
  }
  OUTLINED_FUNCTION_4_0();
  if (v8 != v7)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v9 = OUTLINED_FUNCTION_13_0();
  v4(v9);
  if (!v3)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    *uint64_t v1 = v2;
    OUTLINED_FUNCTION_33_0();
    return;
  }
  OUTLINED_FUNCTION_23_0();
  if (!v7)
  {
    *(void *)(v2 + 16) = v10;
    goto LABEL_11;
  }
LABEL_15:
  __break(1u);
}

void sub_1C64A00A0()
{
}

void sub_1C64A00CC()
{
  OUTLINED_FUNCTION_30_0();
  OUTLINED_FUNCTION_17_0();
  if (v7)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (!OUTLINED_FUNCTION_14_0() || v6 > *(void *)(v2 + 24) >> 1)
  {
    OUTLINED_FUNCTION_26_0();
    uint64_t v2 = v5();
  }
  if (!*(void *)(v0 + 16))
  {
    if (!v3) {
      goto LABEL_11;
    }
    goto LABEL_13;
  }
  OUTLINED_FUNCTION_4_0();
  if (v8 != v7)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v9 = OUTLINED_FUNCTION_13_0();
  v4(v9);
  if (!v3)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    *uint64_t v1 = v2;
    OUTLINED_FUNCTION_33_0();
    return;
  }
  OUTLINED_FUNCTION_23_0();
  if (!v7)
  {
    *(void *)(v2 + 16) = v10;
    goto LABEL_11;
  }
LABEL_15:
  __break(1u);
}

void sub_1C64A0180()
{
}

void sub_1C64A01AC()
{
  OUTLINED_FUNCTION_32_0();
  if (v5)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v6 = v4;
  if (!swift_isUniquelyReferenced_nonNull_native() || v3 > *(void *)(v1 + 24) >> 1)
  {
    OUTLINED_FUNCTION_26_0();
    sub_1C64AE360();
    uint64_t v1 = v7;
  }
  if (!*(void *)(v6 + 16))
  {
    if (!v2) {
      goto LABEL_11;
    }
    goto LABEL_13;
  }
  OUTLINED_FUNCTION_4_0();
  if (v8 != v5)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  OUTLINED_FUNCTION_13_0();
  sub_1C6506848();
  if (!v2)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    void *v0 = v1;
    return;
  }
  OUTLINED_FUNCTION_23_0();
  if (!v5)
  {
    *(void *)(v1 + 16) = v9;
    goto LABEL_11;
  }
LABEL_15:
  __break(1u);
}

void sub_1C64A0264()
{
}

void sub_1C64A0290()
{
  OUTLINED_FUNCTION_30_0();
  OUTLINED_FUNCTION_17_0();
  if (v7)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (!OUTLINED_FUNCTION_14_0() || v6 > *(void *)(v2 + 24) >> 1)
  {
    OUTLINED_FUNCTION_26_0();
    uint64_t v2 = v5();
  }
  if (!*(void *)(v0 + 16))
  {
    if (!v3) {
      goto LABEL_11;
    }
    goto LABEL_13;
  }
  OUTLINED_FUNCTION_4_0();
  if (v8 != v7)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v9 = OUTLINED_FUNCTION_13_0();
  v4(v9);
  if (!v3)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    *uint64_t v1 = v2;
    OUTLINED_FUNCTION_33_0();
    return;
  }
  OUTLINED_FUNCTION_23_0();
  if (!v7)
  {
    *(void *)(v2 + 16) = v10;
    goto LABEL_11;
  }
LABEL_15:
  __break(1u);
}

uint64_t sub_1C64A0348()
{
  OUTLINED_FUNCTION_30_0();
  unint64_t v2 = v1;
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_1C6576E10();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  unint64_t v4 = *v0;
  if (*v0 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_1C6576E10();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v6 = v5 + v3;
  if (__OFADD__(v5, v3))
  {
    __break(1u);
    goto LABEL_26;
  }
  unint64_t v4 = *v0;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  unint64_t *v0 = v4;
  uint64_t v5 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v4 & 0x8000000000000000) == 0 && (v4 & 0x4000000000000000) == 0)
  {
    uint64_t v8 = v4 & 0xFFFFFFFFFFFFFF8;
    if (v6 <= *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      goto LABEL_16;
    }
    uint64_t v5 = 1;
  }
  if (v4 >> 62) {
    goto LABEL_27;
  }
  uint64_t v9 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v9 <= v6) {
      uint64_t v9 = v6;
    }
    swift_bridgeObjectRetain();
    unint64_t v4 = MEMORY[0x1C879F390](v5, v9, 1, v4);
    swift_bridgeObjectRelease();
    unint64_t *v0 = v4;
    uint64_t v8 = v4 & 0xFFFFFFFFFFFFFF8;
LABEL_16:
    uint64_t result = sub_1C64A3578(v8 + 8 * *(void *)(v8 + 16) + 32, (*(void *)(v8 + 24) >> 1) - *(void *)(v8 + 16), v2);
    if (v11 >= v3) {
      break;
    }
LABEL_26:
    __break(1u);
LABEL_27:
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_1C6576E10();
    swift_bridgeObjectRelease();
  }
  if (v11 >= 1)
  {
    uint64_t v12 = *(void *)((*v0 & 0xFFFFFFFFFFFFFF8) + 0x10);
    BOOL v13 = __OFADD__(v12, v11);
    uint64_t v14 = v12 + v11;
    if (v13)
    {
      __break(1u);
      return result;
    }
    *(void *)((*v0 & 0xFFFFFFFFFFFFFF8) + 0x10) = v14;
  }
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_33_0();
  return sub_1C65767C0();
}

uint64_t ObservedActionDTO.actionId.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

double ObservedActionDTO.observedTS.getter()
{
  return *(double *)(v0 + 16);
}

uint64_t ObservedActionDTO.type.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 24);
  uint64_t v3 = *(void *)(v1 + 32);
  uint64_t v4 = *(void *)(v1 + 40);
  uint64_t v5 = *(void *)(v1 + 48);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  char v6 = *(unsigned char *)(v1 + 56);
  *(unsigned char *)(a1 + 32) = v6;
  return sub_1C64A055C(v2, v3, v4, v5, v6);
}

uint64_t sub_1C64A055C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5 <= 0xFCu) {
    return sub_1C64A0570(a1, a2, a3, a4, a5);
  }
  return a1;
}

uint64_t sub_1C64A0570(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (!a5)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

__n128 ObservedActionDTO.init(actionId:observedTS:type:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>, double a5@<D0>)
{
  char v5 = *(unsigned char *)(a3 + 32);
  *(void *)a4 = a1;
  *(void *)(a4 + 8) = a2;
  *(double *)(a4 + 16) = a5;
  __n128 result = *(__n128 *)a3;
  long long v7 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)(a4 + 24) = *(_OWORD *)a3;
  *(_OWORD *)(a4 + 40) = v7;
  *(unsigned char *)(a4 + 56) = v5;
  return result;
}

uint64_t ObservedActionDTO.description.getter()
{
  sub_1C6576C60();
  sub_1C6576620();
  swift_bridgeObjectRetain();
  sub_1C6576620();
  swift_bridgeObjectRelease();
  sub_1C6576620();
  sub_1C6576990();
  sub_1C6576620();
  uint64_t v0 = OUTLINED_FUNCTION_20_0();
  sub_1C64A055C(v0, v1, v2, v3, v4);
  ObservedActionType.description.getter();
  sub_1C6576620();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_21_0();
  return 0;
}

uint64_t static ObservedActionDTO.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  double v2 = *(double *)(a1 + 16);
  long long v3 = *(_OWORD *)(a1 + 24);
  long long v4 = *(_OWORD *)(a1 + 40);
  char v5 = *(unsigned char *)(a1 + 56);
  double v6 = *(double *)(a2 + 16);
  long long v7 = *(_OWORD *)(a2 + 24);
  long long v8 = *(_OWORD *)(a2 + 40);
  char v9 = *(unsigned char *)(a2 + 56);
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8))
  {
    if (v2 != v6)
    {
      char v12 = 0;
      return v12 & 1;
    }
    goto LABEL_9;
  }
  long long v14 = *(_OWORD *)(a2 + 40);
  long long v15 = *(_OWORD *)(a2 + 24);
  long long v16 = *(_OWORD *)(a1 + 40);
  long long v17 = *(_OWORD *)(a1 + 24);
  char v11 = sub_1C6577090();
  char v12 = 0;
  if (v11)
  {
    long long v4 = v16;
    long long v3 = v17;
    long long v8 = v14;
    long long v7 = v15;
    if (v2 == v6)
    {
LABEL_9:
      v20[0] = v3;
      v20[1] = v4;
      char v21 = v5;
      v18[0] = v7;
      v18[1] = v8;
      char v19 = v9;
      char v12 = static ObservedActionType.== infix(_:_:)((uint64_t)v20, (uint64_t *)v18);
    }
  }
  return v12 & 1;
}

uint64_t static ObservedActionType.== infix(_:_:)(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *(void *)a1;
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  int v6 = *(unsigned __int8 *)(a1 + 32);
  uint64_t v8 = *a2;
  uint64_t v7 = a2[1];
  uint64_t v10 = a2[2];
  uint64_t v9 = a2[3];
  unsigned int v11 = *((unsigned __int8 *)a2 + 32);
  if (v6 == 253)
  {
    if (v11 == 253)
    {
      uint64_t v21 = OUTLINED_FUNCTION_18_0();
      uint64_t v16 = OUTLINED_FUNCTION_11_0(v21, v22, v23, v24, 253);
      char v20 = -3;
      goto LABEL_10;
    }
    goto LABEL_12;
  }
  if (v6 == 254)
  {
    if (v11 == 254)
    {
      uint64_t v25 = OUTLINED_FUNCTION_18_0();
      uint64_t v16 = OUTLINED_FUNCTION_11_0(v25, v26, v27, v28, 254);
      char v20 = -2;
      goto LABEL_10;
    }
    goto LABEL_12;
  }
  if (v6 != 255)
  {
    if (v11 <= 0xFC)
    {
      v55[0] = *(void *)a1;
      v55[1] = v2;
      v55[2] = v5;
      v55[3] = v4;
      char v56 = v6;
      v57[0] = v8;
      v57[1] = v7;
      v57[2] = v10;
      v57[3] = v9;
      char v58 = v11;
      OUTLINED_FUNCTION_1_0();
      OUTLINED_FUNCTION_1_0();
      uint64_t v53 = v9;
      char v29 = sub_1C649866C((uint64_t)v55, (uint64_t)v57);
      uint64_t v35 = sub_1C64A21B0(v3, v2, v5, v4, v6);
      uint64_t v43 = OUTLINED_FUNCTION_25_0(v35, v36, v37, v38, v39, v40, v41, v42, v51, v53);
      OUTLINED_FUNCTION_25_0(v43, v44, v45, v46, v47, v48, v49, v50, v52, v54);
      sub_1C64A21B0(v3, v2, v5, v4, v6);
      return v29 & 1;
    }
    goto LABEL_12;
  }
  if (v11 != 255)
  {
LABEL_12:
    OUTLINED_FUNCTION_1_0();
    uint64_t v30 = OUTLINED_FUNCTION_11_0(v3, v2, v5, v4, v6);
    sub_1C64A21B0(v30, v31, v32, v33, v11);
    char v29 = 0;
    return v29 & 1;
  }
  uint64_t v12 = OUTLINED_FUNCTION_18_0();
  uint64_t v16 = OUTLINED_FUNCTION_11_0(v12, v13, v14, v15, 255);
  char v20 = -1;
LABEL_10:
  sub_1C64A21B0(v16, v17, v18, v19, v20);
  char v29 = 1;
  return v29 & 1;
}

uint64_t ObservedActionDTO.hash(into:)()
{
  int v1 = *(unsigned __int8 *)(v0 + 56);
  swift_bridgeObjectRetain();
  sub_1C65765E0();
  swift_bridgeObjectRelease();
  sub_1C6577180();
  if (v1 == 253 || v1 == 254 || v1 == 255) {
    return sub_1C6577160();
  }
  sub_1C6577160();
  uint64_t v3 = OUTLINED_FUNCTION_28_0();
  sub_1C64A0570(v3, v4, v5, v6, v7);
  DeliveryVehicle.rawValue.getter();
  OUTLINED_FUNCTION_17();
  swift_bridgeObjectRelease();
  uint64_t v8 = OUTLINED_FUNCTION_28_0();

  return sub_1C64A21B0(v8, v9, v10, v11, v12);
}

uint64_t ObservedActionDTO.hashValue.getter()
{
  int v1 = *(unsigned __int8 *)(v0 + 56);
  sub_1C6577150();
  swift_bridgeObjectRetain();
  sub_1C65765E0();
  swift_bridgeObjectRelease();
  sub_1C6577180();
  if (v1 == 253 || v1 == 254 || v1 == 255)
  {
    sub_1C6577160();
  }
  else
  {
    sub_1C6577160();
    uint64_t v2 = OUTLINED_FUNCTION_20_0();
    sub_1C64A0570(v2, v3, v4, v5, v6);
    DeliveryVehicle.rawValue.getter();
    sub_1C65765E0();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_21_0();
  }
  return sub_1C6577190();
}

uint64_t sub_1C64A0BB8()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = *(void *)(v0 + 40);
  uint64_t v4 = *(void *)(v0 + 48);
  int v5 = *(unsigned __int8 *)(v0 + 56);
  sub_1C6577150();
  swift_bridgeObjectRetain();
  sub_1C65765E0();
  swift_bridgeObjectRelease();
  sub_1C6577180();
  if (v5 == 253 || v5 == 254 || v5 == 255)
  {
    sub_1C6577160();
  }
  else
  {
    sub_1C6577160();
    sub_1C64A0570(v1, v2, v3, v4, v5);
    DeliveryVehicle.rawValue.getter();
    sub_1C65765E0();
    swift_bridgeObjectRelease();
    sub_1C64A21B0(v1, v2, v3, v4, v5);
  }
  return sub_1C6577190();
}

void *static ObservedActionType.allCases.getter()
{
  uint64_t v0 = (char *)static DeliveryVehicle.allCases.getter();
  uint64_t v1 = *((void *)v0 + 2);
  if (v1)
  {
    uint64_t v12 = MEMORY[0x1E4FBC860];
    sub_1C64A2410();
    uint64_t v2 = v0 + 64;
    do
    {
      uint64_t v3 = *((void *)v2 - 4);
      uint64_t v4 = *((void *)v2 - 3);
      uint64_t v5 = *((void *)v2 - 2);
      uint64_t v6 = *((void *)v2 - 1);
      char v7 = *v2;
      sub_1C64A0570(v3, v4, v5, v6, *v2);
      unint64_t v8 = *(void *)(v12 + 16);
      unint64_t v9 = v8 + 1;
      if (v8 >= *(void *)(v12 + 24) >> 1)
      {
        sub_1C64A2410();
        unint64_t v9 = v8 + 1;
      }
      v2 += 40;
      *(void *)(v12 + 16) = v9;
      uint64_t v10 = v12 + 40 * v8;
      *(void *)(v10 + 32) = v3;
      *(void *)(v10 + 40) = v4;
      *(void *)(v10 + 48) = v5;
      *(void *)(v10 + 56) = v6;
      *(unsigned char *)(v10 + 64) = v7;
      --v1;
    }
    while (v1);
  }
  swift_bridgeObjectRelease();
  sub_1C649FFE8();
  return &unk_1F2157068;
}

unint64_t ObservedActionType.description.getter()
{
  int v1 = *(unsigned __int8 *)(v0 + 32);
  switch(v1)
  {
    case 253:
      return 0xD00000000000001ALL;
    case 255:
      unsigned int v2 = 1769105779;
      return v2 | 0x6974634100000000;
    case 254:
      unsigned int v2 = 1802398060;
      return v2 | 0x6974634100000000;
  }
  sub_1C6576C60();
  swift_bridgeObjectRelease();
  DeliveryVehicle.rawValue.getter();
  sub_1C6576620();
  swift_bridgeObjectRelease();
  sub_1C6576620();
  return 0xD000000000000011;
}

uint64_t ObservedActionType.hash(into:)()
{
  int v1 = *(unsigned __int8 *)(v0 + 32);
  if (v1 == 253 || v1 == 254 || v1 == 255) {
    return sub_1C6577160();
  }
  sub_1C6577160();
  DeliveryVehicle.rawValue.getter();
  OUTLINED_FUNCTION_17();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1C64A1040(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6974634169726973 && a2 == 0xEA00000000006E6FLL;
  if (v2 || (sub_1C6577090() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x697463416B6E696CLL && a2 == 0xEA00000000006E6FLL;
    if (v6 || (sub_1C6577090() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0xD000000000000010 && a2 == 0x80000001C6587B50 || (sub_1C6577090() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001C6587B10)
    {
      swift_bridgeObjectRelease();
      return 3;
    }
    else
    {
      char v7 = sub_1C6577090();
      swift_bridgeObjectRelease();
      if (v7) {
        return 3;
      }
      else {
        return 4;
      }
    }
  }
}

uint64_t sub_1C64A11FC()
{
  return 4;
}

unint64_t sub_1C64A1204(char a1)
{
  unint64_t result = 0x6974634169726973;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x697463416B6E696CLL;
      break;
    case 2:
      unint64_t result = 0xD000000000000010;
      break;
    case 3:
      unint64_t result = 0xD00000000000001ALL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C64A12A8(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x676E697375 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_1C6577090();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1C64A1328()
{
  return 0x676E697375;
}

uint64_t sub_1C64A133C()
{
  return sub_1C649B79C();
}

unint64_t sub_1C64A1344()
{
  return sub_1C64A1204(*v0);
}

uint64_t sub_1C64A134C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C64A1040(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C64A1374@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C64A11FC();
  *a1 = result;
  return result;
}

uint64_t sub_1C64A139C(uint64_t a1)
{
  unint64_t v2 = sub_1C64A2460();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C64A13D8(uint64_t a1)
{
  unint64_t v2 = sub_1C64A2460();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C64A1414(uint64_t a1)
{
  unint64_t v2 = sub_1C64A2590();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C64A1450(uint64_t a1)
{
  unint64_t v2 = sub_1C64A2590();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C64A148C(uint64_t a1)
{
  unint64_t v2 = sub_1C64A25DC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C64A14C8(uint64_t a1)
{
  unint64_t v2 = sub_1C64A25DC();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C64A1508@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C64A12A8(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1C64A1534(uint64_t a1)
{
  unint64_t v2 = sub_1C64A24F8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C64A1570(uint64_t a1)
{
  unint64_t v2 = sub_1C64A24F8();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C64A15AC(uint64_t a1)
{
  unint64_t v2 = sub_1C64A24AC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C64A15E8(uint64_t a1)
{
  unint64_t v2 = sub_1C64A24AC();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t ObservedActionType.encode(to:)(void *a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F0590);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v3);
  OUTLINED_FUNCTION_3();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F0598);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v4);
  OUTLINED_FUNCTION_3();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F05A0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_15_0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F05A8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_21();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F05B0);
  OUTLINED_FUNCTION_0();
  uint64_t v15 = v7;
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_15_0();
  int v8 = *(unsigned __int8 *)(v1 + 32);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C64A2460();
  sub_1C6577240();
  switch(v8)
  {
    case 253:
      sub_1C64A24AC();
      OUTLINED_FUNCTION_31_0();
LABEL_7:
      OUTLINED_FUNCTION_1();
      v11();
      OUTLINED_FUNCTION_27_0();
      OUTLINED_FUNCTION_1();
      return v12();
    case 254:
      sub_1C64A2590();
      OUTLINED_FUNCTION_31_0();
      goto LABEL_7;
    case 255:
      sub_1C64A25DC();
      sub_1C6576F70();
      break;
    default:
      sub_1C64A24F8();
      sub_1C6576F70();
      sub_1C64A2544();
      sub_1C6577010();
      break;
  }
  OUTLINED_FUNCTION_1();
  v9();
  uint64_t v10 = OUTLINED_FUNCTION_27_0();
  return v14(v10, v15);
}

uint64_t ObservedActionType.hashValue.getter()
{
  int v1 = *(unsigned __int8 *)(v0 + 32);
  sub_1C6577150();
  if (v1 == 253 || v1 == 254 || v1 == 255)
  {
    sub_1C6577160();
  }
  else
  {
    sub_1C6577160();
    DeliveryVehicle.rawValue.getter();
    sub_1C65765E0();
    swift_bridgeObjectRelease();
  }
  return sub_1C6577190();
}

uint64_t ObservedActionType.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F05E8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v3);
  OUTLINED_FUNCTION_3();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F05F0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v4);
  OUTLINED_FUNCTION_3();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F05F8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_21();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F0600);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_15_0();
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F0608);
  OUTLINED_FUNCTION_0();
  uint64_t v9 = v8;
  MEMORY[0x1F4188790](v10);
  OUTLINED_FUNCTION_15_0();
  uint64_t v13 = v12 - v11;
  uint64_t v47 = (uint64_t)a1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C64A2460();
  sub_1C6577210();
  if (v51) {
    return __swift_destroy_boxed_opaque_existential_1(v47);
  }
  uint64_t v52 = v9;
  uint64_t v14 = v13;
  uint64_t v15 = sub_1C6576F40();
  uint64_t v16 = *(void *)(v15 + 16);
  if (!v16)
  {
LABEL_7:
    uint64_t v29 = sub_1C6576CE0();
    swift_allocError();
    uint64_t v31 = v30;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F0140);
    *uint64_t v31 = &type metadata for ObservedActionType;
    sub_1C6576E90();
    sub_1C6576CD0();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v29 - 8) + 104))(v31, *MEMORY[0x1E4FBBA70], v29);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v14, v7);
    return __swift_destroy_boxed_opaque_existential_1(v47);
  }
  uint64_t v17 = v13;
  uint64_t v18 = *(unsigned __int8 *)(v15 + 32);
  sub_1C649F97C(1, v16, v15, v15 + 32, 0, (2 * v16) | 1);
  uint64_t v20 = v19;
  unint64_t v22 = v21;
  swift_bridgeObjectRelease();
  if (v20 != v22 >> 1)
  {
    uint64_t v14 = v17;
    goto LABEL_7;
  }
  switch(v18)
  {
    case 1:
      sub_1C64A2590();
      OUTLINED_FUNCTION_10_0();
      OUTLINED_FUNCTION_1();
      v34(v33);
      swift_unknownObjectRelease();
      uint64_t v35 = OUTLINED_FUNCTION_3_0();
      v36(v35);
      long long v27 = 0uLL;
      char v28 = -2;
      goto LABEL_12;
    case 2:
      LOBYTE(v48) = 2;
      sub_1C64A24F8();
      OUTLINED_FUNCTION_10_0();
      sub_1C64A3714();
      sub_1C6576F30();
      OUTLINED_FUNCTION_1();
      v42(v41);
      swift_unknownObjectRelease();
      uint64_t v43 = OUTLINED_FUNCTION_19_1();
      v44(v43);
      long long v27 = v48;
      long long v45 = v49;
      char v28 = v50;
      goto LABEL_13;
    case 3:
      sub_1C64A24AC();
      OUTLINED_FUNCTION_10_0();
      OUTLINED_FUNCTION_1();
      v38(v37);
      swift_unknownObjectRelease();
      uint64_t v39 = OUTLINED_FUNCTION_3_0();
      v40(v39);
      long long v27 = 0uLL;
      char v28 = -3;
      goto LABEL_12;
    default:
      sub_1C64A25DC();
      OUTLINED_FUNCTION_10_0();
      OUTLINED_FUNCTION_1();
      v24(v23);
      swift_unknownObjectRelease();
      uint64_t v25 = OUTLINED_FUNCTION_3_0();
      v26(v25);
      long long v27 = 0uLL;
      char v28 = -1;
LABEL_12:
      long long v45 = 0uLL;
LABEL_13:
      *(_OWORD *)a2 = v27;
      *(_OWORD *)(a2 + 16) = v45;
      *(unsigned char *)(a2 + 32) = v28;
      uint64_t result = __swift_destroy_boxed_opaque_existential_1(v47);
      break;
  }
  return result;
}

uint64_t sub_1C64A2088@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ObservedActionType.init(from:)(a1, a2);
}

uint64_t sub_1C64A20A0(void *a1)
{
  return ObservedActionType.encode(to:)(a1);
}

uint64_t sub_1C64A20C0()
{
  int v1 = *(unsigned __int8 *)(v0 + 32);
  sub_1C6577150();
  if (v1 == 253 || v1 == 254 || v1 == 255)
  {
    sub_1C6577160();
  }
  else
  {
    sub_1C6577160();
    DeliveryVehicle.rawValue.getter();
    sub_1C65765E0();
    swift_bridgeObjectRelease();
  }
  return sub_1C6577190();
}

void *sub_1C64A2184@<X0>(void *a1@<X8>)
{
  uint64_t result = static ObservedActionType.allCases.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1C64A21B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5 <= 0xFCu) {
    return sub_1C64A21C4(a1, a2, a3, a4, a5);
  }
  return a1;
}

uint64_t sub_1C64A21C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (!a5)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1C64A2210()
{
  sub_1C64A315C();
  void *v0 = v1;
}

void sub_1C64A2260()
{
  sub_1C64A2BA8();
  void *v0 = v1;
}

void sub_1C64A22B0()
{
  sub_1C64A2F80();
  void *v0 = v1;
}

void sub_1C64A2300()
{
  sub_1C64A2BA8();
  void *v0 = v1;
}

void sub_1C64A2350()
{
  sub_1C64A2E5C();
  void *v0 = v1;
}

char *sub_1C64A23A0(char *a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C64A2C6C(a1, a2, a3, *v3);
  *uint64_t v3 = (uint64_t)result;
  return result;
}

void sub_1C64A23C0()
{
  sub_1C64A34B4();
  void *v0 = v1;
}

void sub_1C64A2410()
{
  sub_1C64A34B4();
  void *v0 = v1;
}

unint64_t sub_1C64A2460()
{
  unint64_t result = qword_1EA3F05B8;
  if (!qword_1EA3F05B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F05B8);
  }
  return result;
}

unint64_t sub_1C64A24AC()
{
  unint64_t result = qword_1EA3F05C0;
  if (!qword_1EA3F05C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F05C0);
  }
  return result;
}

unint64_t sub_1C64A24F8()
{
  unint64_t result = qword_1EA3F05C8;
  if (!qword_1EA3F05C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F05C8);
  }
  return result;
}

unint64_t sub_1C64A2544()
{
  unint64_t result = qword_1EA3F05D0;
  if (!qword_1EA3F05D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F05D0);
  }
  return result;
}

unint64_t sub_1C64A2590()
{
  unint64_t result = qword_1EA3F05D8;
  if (!qword_1EA3F05D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F05D8);
  }
  return result;
}

unint64_t sub_1C64A25DC()
{
  unint64_t result = qword_1EA3F05E0;
  if (!qword_1EA3F05E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F05E0);
  }
  return result;
}

void sub_1C64A2628()
{
  sub_1C64A34B4();
  void *v0 = v1;
}

void sub_1C64A2678()
{
  sub_1C64A2F80();
  void *v0 = v1;
}

void sub_1C64A26C8(char a1, uint64_t a2, char a3)
{
  sub_1C64A2D84(a1, a2, a3, *v3);
  *uint64_t v3 = v4;
}

void sub_1C64A26E8()
{
  sub_1C64A2E5C();
  void *v0 = v1;
}

void sub_1C64A2738()
{
  sub_1C64A3220();
  void *v0 = v1;
}

void sub_1C64A2788()
{
  sub_1C64A2E5C();
  void *v0 = v1;
}

void sub_1C64A27D8()
{
  sub_1C64A3220();
  void *v0 = v1;
}

void sub_1C64A2828()
{
  sub_1C64A34B4();
  void *v0 = v1;
}

void sub_1C64A2878()
{
  sub_1C64A3220();
  void *v0 = v1;
}

void sub_1C64A28C8()
{
  sub_1C64A2F80();
  void *v0 = v1;
}

char *sub_1C64A2918(char *a1, int64_t a2, char a3)
{
  unint64_t result = sub_1C64A3044(a1, a2, a3, *v3);
  *uint64_t v3 = (uint64_t)result;
  return result;
}

void sub_1C64A2938()
{
  sub_1C64A3220();
  void *v0 = v1;
}

void sub_1C64A2988()
{
  sub_1C64A315C();
  void *v0 = v1;
}

void sub_1C64A29D8()
{
  sub_1C64A3220();
  void *v0 = v1;
}

void sub_1C64A2A28()
{
  sub_1C64A34B4();
  void *v0 = v1;
}

void sub_1C64A2A78()
{
  sub_1C64A34B4();
  void *v0 = v1;
}

uint64_t sub_1C64A2AC8(uint64_t a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C64A32E4(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

void sub_1C64A2AE8()
{
  sub_1C64A34B4();
  void *v0 = v1;
}

uint64_t sub_1C64A2B38(uint64_t a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C64A33D0(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

void sub_1C64A2B58()
{
  sub_1C64A34B4();
  void *v0 = v1;
}

void sub_1C64A2BA8()
{
  OUTLINED_FUNCTION_2_0();
  if (v5)
  {
    OUTLINED_FUNCTION_7_0();
    if (v6 != v7)
    {
      OUTLINED_FUNCTION_16_0();
      if (v6)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_5_0();
    }
  }
  OUTLINED_FUNCTION_9_0();
  if (v4)
  {
    __swift_instantiateConcreteTypeFromMangledName(v8);
    uint64_t v9 = (const void *)swift_allocObject();
    size_t v10 = _swift_stdlib_malloc_size(v9);
    OUTLINED_FUNCTION_22_0((uint64_t)(v10 - 32) / 8);
  }
  uint64_t v11 = OUTLINED_FUNCTION_8_0();
  if (v3)
  {
    v2(v11);
    *(void *)(v0 + 16) = 0;
  }
  else
  {
    v1(v11);
  }
  swift_release();
}

char *sub_1C64A2C6C(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF8FC8);
    size_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 2);
  }
  else
  {
    size_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = (char *)(a4 + 32);
  if (v5)
  {
    sub_1C64AFB0C(v13, v8, v12);
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_1C650552C((unint64_t)v13, v8, (unint64_t)v12);
  }
  swift_release();
  return v10;
}

void sub_1C64A2D50()
{
}

void sub_1C64A2D84(char a1, uint64_t a2, char a3, uint64_t a4)
{
  if (a3)
  {
    OUTLINED_FUNCTION_7_0();
    if (v7 != v8)
    {
      OUTLINED_FUNCTION_16_0();
      if (v7)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_5_0();
    }
  }
  else
  {
    uint64_t v6 = a2;
  }
  uint64_t v9 = *(void *)(a4 + 16);
  if (v6 <= v9) {
    uint64_t v10 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v10 = v6;
  }
  if (v10)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F06B8);
    uint64_t v11 = swift_allocObject();
    size_t v12 = _swift_stdlib_malloc_size((const void *)v11);
    *(void *)(v11 + 16) = v9;
    *(void *)(v11 + 24) = 2 * ((uint64_t)(v12 - 32) / 56);
  }
  else
  {
    uint64_t v11 = MEMORY[0x1E4FBC860];
  }
  if (a1)
  {
    sub_1C64AFC64((char *)(a4 + 32), v9, (char *)(v11 + 32));
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_1C65056A0();
  }
  swift_release();
}

void sub_1C64A2E5C()
{
  OUTLINED_FUNCTION_2_0();
  if (v6)
  {
    OUTLINED_FUNCTION_7_0();
    if (v7 != v8)
    {
      OUTLINED_FUNCTION_16_0();
      if (v7)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_5_0();
    }
  }
  OUTLINED_FUNCTION_9_0();
  if (v5)
  {
    __swift_instantiateConcreteTypeFromMangledName(v9);
    uint64_t v10 = (void *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v4;
    v10[3] = 2 * v11 - 64;
  }
  uint64_t v12 = OUTLINED_FUNCTION_8_0();
  if (v3)
  {
    v2(v12);
    *(void *)(v0 + 16) = 0;
  }
  else
  {
    v1(v12);
  }
  swift_release();
}

void sub_1C64A2F18()
{
}

void sub_1C64A2F4C()
{
}

void sub_1C64A2F80()
{
  OUTLINED_FUNCTION_2_0();
  if (v5)
  {
    OUTLINED_FUNCTION_7_0();
    if (v6 != v7)
    {
      OUTLINED_FUNCTION_16_0();
      if (v6)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_5_0();
    }
  }
  OUTLINED_FUNCTION_9_0();
  if (v4)
  {
    __swift_instantiateConcreteTypeFromMangledName(v8);
    uint64_t v9 = (const void *)swift_allocObject();
    size_t v10 = _swift_stdlib_malloc_size(v9);
    OUTLINED_FUNCTION_22_0((uint64_t)(v10 - 32) / 32);
  }
  uint64_t v11 = OUTLINED_FUNCTION_8_0();
  if (v3)
  {
    v2(v11);
    *(void *)(v0 + 16) = 0;
  }
  else
  {
    v1(v11);
  }
  swift_release();
}

char *sub_1C64A3044(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFB8C0);
    size_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 128);
  }
  else
  {
    size_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = (char *)(a4 + 32);
  if (v5)
  {
    sub_1C64B013C(v13, v8, v12);
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_1C65066C8((unint64_t)v13, v8, (unint64_t)v12);
  }
  swift_release();
  return v10;
}

void sub_1C64A3128()
{
}

void sub_1C64A315C()
{
  OUTLINED_FUNCTION_2_0();
  if (v5)
  {
    OUTLINED_FUNCTION_7_0();
    if (v6 != v7)
    {
      OUTLINED_FUNCTION_16_0();
      if (v6)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_5_0();
    }
  }
  OUTLINED_FUNCTION_9_0();
  if (v4)
  {
    __swift_instantiateConcreteTypeFromMangledName(v8);
    uint64_t v9 = (const void *)swift_allocObject();
    size_t v10 = _swift_stdlib_malloc_size(v9);
    OUTLINED_FUNCTION_22_0((uint64_t)(v10 - 32) / 16);
  }
  uint64_t v11 = OUTLINED_FUNCTION_8_0();
  if (v3)
  {
    v2(v11);
    *(void *)(v0 + 16) = 0;
  }
  else
  {
    v1(v11);
  }
  swift_release();
}

void sub_1C64A3220()
{
  OUTLINED_FUNCTION_30_0();
  OUTLINED_FUNCTION_2_0();
  if (v5)
  {
    OUTLINED_FUNCTION_7_0();
    if (v6 != v7)
    {
      OUTLINED_FUNCTION_16_0();
      if (v6)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_5_0();
    }
  }
  OUTLINED_FUNCTION_9_0();
  if (v4)
  {
    __swift_instantiateConcreteTypeFromMangledName(v8);
    uint64_t v9 = (const void *)swift_allocObject();
    size_t v10 = _swift_stdlib_malloc_size(v9);
    OUTLINED_FUNCTION_22_0((uint64_t)(v10 - 32) / 24);
  }
  uint64_t v11 = OUTLINED_FUNCTION_8_0();
  if (v3)
  {
    v2(v11);
    *(void *)(v0 + 16) = 0;
  }
  else
  {
    v1(v11);
  }
  swift_release();
  OUTLINED_FUNCTION_33_0();
}

uint64_t sub_1C64A32E4(uint64_t result, int64_t a2, char a3, uint64_t a4)
{
  char v5 = result;
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFB8B8);
    uint64_t v10 = swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size((const void *)v10);
    *(void *)(v10 + 16) = v8;
    *(void *)(v10 + 24) = 2 * ((uint64_t)(v11 - 32) / 120);
  }
  else
  {
    uint64_t v10 = MEMORY[0x1E4FBC860];
  }
  if (v5)
  {
    sub_1C64B0198((char *)(a4 + 32), v8, (char *)(v10 + 32));
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_1C6506848();
  }
  swift_release();
  return v10;
}

uint64_t sub_1C64A33D0(uint64_t result, int64_t a2, char a3, uint64_t a4)
{
  char v5 = result;
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF8FC0);
    uint64_t v10 = swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size((const void *)v10);
    *(void *)(v10 + 16) = v8;
    *(void *)(v10 + 24) = 2 * ((uint64_t)(v11 - 32) / 64);
  }
  else
  {
    uint64_t v10 = MEMORY[0x1E4FBC860];
  }
  if (v5)
  {
    sub_1C64B0334((char *)(a4 + 32), v8, (char *)(v10 + 32));
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_1C6506B18();
  }
  swift_release();
  return v10;
}

void sub_1C64A34B4()
{
  OUTLINED_FUNCTION_30_0();
  OUTLINED_FUNCTION_2_0();
  if (v5)
  {
    OUTLINED_FUNCTION_7_0();
    if (v6 != v7)
    {
      OUTLINED_FUNCTION_16_0();
      if (v6)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_5_0();
    }
  }
  OUTLINED_FUNCTION_9_0();
  if (v4)
  {
    __swift_instantiateConcreteTypeFromMangledName(v8);
    uint64_t v9 = (const void *)swift_allocObject();
    size_t v10 = _swift_stdlib_malloc_size(v9);
    OUTLINED_FUNCTION_22_0((uint64_t)(v10 - 32) / 40);
  }
  uint64_t v11 = OUTLINED_FUNCTION_8_0();
  if (v3)
  {
    v2(v11);
    *(void *)(v0 + 16) = 0;
  }
  else
  {
    v1(v11);
  }
  swift_release();
  OUTLINED_FUNCTION_33_0();
}

uint64_t sub_1C64A3578(uint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v5 = result;
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1C6576E10();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (v5)
  {
    if (v6)
    {
      swift_bridgeObjectRetain();
      uint64_t v8 = sub_1C6576E10();
      uint64_t result = swift_bridgeObjectRelease();
      if (v8 <= a2)
      {
        if (v7 >= 1)
        {
          sub_1C649E384(&qword_1EA3F06A8, &qword_1EBBF8F20);
          swift_bridgeObjectRetain();
          for (unint64_t i = 0; i != v7; ++i)
          {
            __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF8F20);
            size_t v10 = sub_1C653DDF8(v13, i, a3);
            uint64_t v12 = *v11;
            swift_retain();
            ((void (*)(uint64_t **, void))v10)(v13, 0);
            *(void *)(v5 + 8 * i) = v12;
          }
          swift_bridgeObjectRelease();
          return a3;
        }
        goto LABEL_16;
      }
    }
    else
    {
      if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) <= a2)
      {
        sub_1C6506BC4((a3 & 0xFFFFFFFFFFFFFF8) + 32, *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10));
        return a3;
      }
      __break(1u);
    }
    __break(1u);
LABEL_16:
    __break(1u);
  }
  __break(1u);
  return result;
}

unint64_t sub_1C64A3714()
{
  unint64_t result = qword_1EA3F0610;
  if (!qword_1EA3F0610)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F0610);
  }
  return result;
}

unint64_t sub_1C64A3764()
{
  unint64_t result = qword_1EA3F0618;
  if (!qword_1EA3F0618)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F0618);
  }
  return result;
}

unint64_t sub_1C64A37B4()
{
  unint64_t result = qword_1EA3F0620;
  if (!qword_1EA3F0620)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F0620);
  }
  return result;
}

uint64_t sub_1C64A3800()
{
  return sub_1C649E384(&qword_1EA3F0628, &qword_1EA3F0630);
}

uint64_t initializeBufferWithCopyOfBuffer for DeliveryVehicle(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t destroy for ObservedActionDTO(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  unsigned int v3 = *(unsigned __int8 *)(a1 + 56);
  if (v3 <= 0xFC)
  {
    uint64_t v4 = *(void *)(a1 + 24);
    uint64_t v5 = *(void *)(a1 + 32);
    uint64_t v6 = *(void *)(a1 + 40);
    uint64_t v7 = *(void *)(a1 + 48);
    return sub_1C64A21C4(v4, v5, v6, v7, v3);
  }
  return result;
}

uint64_t initializeWithCopy for ObservedActionDTO(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  unsigned int v5 = *(unsigned __int8 *)(a2 + 56);
  swift_bridgeObjectRetain();
  if (v5 <= 0xFC)
  {
    uint64_t v7 = *(void *)(a2 + 24);
    uint64_t v8 = *(void *)(a2 + 32);
    uint64_t v10 = *(void *)(a2 + 40);
    uint64_t v9 = *(void *)(a2 + 48);
    sub_1C64A0570(v7, v8, v10, v9, v5);
    *(void *)(a1 + 24) = v7;
    *(void *)(a1 + 32) = v8;
    *(void *)(a1 + 40) = v10;
    *(void *)(a1 + 48) = v9;
    *(unsigned char *)(a1 + 56) = v5;
  }
  else
  {
    long long v6 = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 40) = v6;
    *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  }
  return a1;
}

uint64_t assignWithCopy for ObservedActionDTO(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v4 = (_OWORD *)(a1 + 24);
  unsigned int v5 = (_OWORD *)(a2 + 24);
  unsigned int v6 = *(unsigned __int8 *)(a2 + 56);
  if (*(unsigned __int8 *)(a1 + 56) <= 0xFCu)
  {
    if (v6 <= 0xFC)
    {
      uint64_t v15 = *(void *)(a2 + 24);
      uint64_t v16 = *(void *)(a2 + 32);
      uint64_t v18 = *(void *)(a2 + 40);
      uint64_t v17 = *(void *)(a2 + 48);
      sub_1C64A0570(v15, v16, v18, v17, v6);
      uint64_t v19 = *(void *)(a1 + 24);
      uint64_t v20 = *(void *)(a1 + 32);
      uint64_t v21 = *(void *)(a1 + 40);
      uint64_t v22 = *(void *)(a1 + 48);
      *(void *)(a1 + 24) = v15;
      *(void *)(a1 + 32) = v16;
      *(void *)(a1 + 40) = v18;
      *(void *)(a1 + 48) = v17;
      char v23 = *(unsigned char *)(a1 + 56);
      *(unsigned char *)(a1 + 56) = v6;
      sub_1C64A21C4(v19, v20, v21, v22, v23);
    }
    else
    {
      sub_1C64A3A78(a1 + 24);
      char v9 = *(unsigned char *)(a2 + 56);
      long long v10 = *(_OWORD *)(a2 + 40);
      *uint64_t v4 = *v5;
      *(_OWORD *)(a1 + 40) = v10;
      *(unsigned char *)(a1 + 56) = v9;
    }
  }
  else if (v6 <= 0xFC)
  {
    uint64_t v11 = *(void *)(a2 + 24);
    uint64_t v12 = *(void *)(a2 + 32);
    uint64_t v14 = *(void *)(a2 + 40);
    uint64_t v13 = *(void *)(a2 + 48);
    sub_1C64A0570(v11, v12, v14, v13, v6);
    *(void *)(a1 + 24) = v11;
    *(void *)(a1 + 32) = v12;
    *(void *)(a1 + 40) = v14;
    *(void *)(a1 + 48) = v13;
    *(unsigned char *)(a1 + 56) = v6;
  }
  else
  {
    long long v7 = *v5;
    long long v8 = *(_OWORD *)(a2 + 40);
    *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
    *uint64_t v4 = v7;
    *(_OWORD *)(a1 + 40) = v8;
  }
  return a1;
}

uint64_t sub_1C64A3A78(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F0638);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

__n128 __swift_memcpy57_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for ObservedActionDTO(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  unsigned int v5 = *(unsigned __int8 *)(a1 + 56);
  if (v5 <= 0xFC)
  {
    unsigned int v6 = *(unsigned __int8 *)(a2 + 56);
    if (v6 <= 0xFC)
    {
      uint64_t v8 = *(void *)(a1 + 24);
      uint64_t v9 = *(void *)(a1 + 32);
      uint64_t v10 = *(void *)(a1 + 40);
      uint64_t v11 = *(void *)(a1 + 48);
      *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
      *(unsigned char *)(a1 + 56) = v6;
      sub_1C64A21C4(v8, v9, v10, v11, v5);
      return a1;
    }
    sub_1C64A3A78(a1 + 24);
  }
  long long v7 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = v7;
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  return a1;
}

uint64_t getEnumTagSinglePayload for ObservedActionDTO(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 57))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ObservedActionDTO(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 56) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 57) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 57) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ObservedActionDTO()
{
  return &type metadata for ObservedActionDTO;
}

uint64_t destroy for ObservedActionType(uint64_t result)
{
  unsigned int v1 = *(unsigned __int8 *)(result + 32);
  if (v1 <= 2) {
    return sub_1C64A21C4(*(void *)result, *(void *)(result + 8), *(void *)(result + 16), *(void *)(result + 24), v1);
  }
  return result;
}

uint64_t initializeWithCopy for ObservedActionType(uint64_t a1, uint64_t *a2)
{
  unsigned int v3 = *((unsigned __int8 *)a2 + 32);
  if (v3 > 2)
  {
    long long v8 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v8;
    *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
  }
  else
  {
    uint64_t v4 = *a2;
    uint64_t v5 = a2[1];
    uint64_t v6 = a2[2];
    uint64_t v7 = a2[3];
    sub_1C64A0570(*a2, v5, v6, v7, v3);
    *(void *)a1 = v4;
    *(void *)(a1 + 8) = v5;
    *(void *)(a1 + 16) = v6;
    *(void *)(a1 + 24) = v7;
    *(unsigned char *)(a1 + 32) = v3;
  }
  return a1;
}

uint64_t assignWithCopy for ObservedActionType(uint64_t a1, long long *a2)
{
  unsigned int v4 = *(unsigned __int8 *)(a1 + 32);
  unsigned int v5 = *((unsigned __int8 *)a2 + 32);
  if (v4 > 2)
  {
    if (v5 <= 2)
    {
      uint64_t v15 = *(void *)a2;
      uint64_t v16 = *((void *)a2 + 1);
      uint64_t v18 = *((void *)a2 + 2);
      uint64_t v17 = *((void *)a2 + 3);
      sub_1C64A0570(*(void *)a2, v16, v18, v17, v5);
      *(void *)a1 = v15;
      *(void *)(a1 + 8) = v16;
      *(void *)(a1 + 16) = v18;
      *(void *)(a1 + 24) = v17;
      *(unsigned char *)(a1 + 32) = v5;
      return a1;
    }
LABEL_7:
    long long v19 = *a2;
    long long v20 = a2[1];
    *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
    *(_OWORD *)a1 = v19;
    *(_OWORD *)(a1 + 16) = v20;
    return a1;
  }
  if (v5 > 2)
  {
    sub_1C64A21C4(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), v4);
    goto LABEL_7;
  }
  uint64_t v6 = *(void *)a2;
  uint64_t v7 = *((void *)a2 + 1);
  uint64_t v9 = *((void *)a2 + 2);
  uint64_t v8 = *((void *)a2 + 3);
  sub_1C64A0570(*(void *)a2, v7, v9, v8, v5);
  uint64_t v10 = *(void *)a1;
  uint64_t v11 = *(void *)(a1 + 8);
  uint64_t v12 = *(void *)(a1 + 16);
  uint64_t v13 = *(void *)(a1 + 24);
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  *(void *)(a1 + 16) = v9;
  *(void *)(a1 + 24) = v8;
  char v14 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v5;
  sub_1C64A21C4(v10, v11, v12, v13, v14);
  return a1;
}

__n128 __swift_memcpy33_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for ObservedActionType(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = *(unsigned __int8 *)(a1 + 32);
  if (v4 > 2) {
    goto LABEL_5;
  }
  unsigned int v5 = *(unsigned __int8 *)(a2 + 32);
  if (v5 > 2)
  {
    sub_1C64A21C4(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), v4);
LABEL_5:
    long long v11 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v11;
    *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
    return a1;
  }
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v8 = *(void *)(a1 + 16);
  uint64_t v9 = *(void *)(a1 + 24);
  long long v10 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v10;
  *(unsigned char *)(a1 + 32) = v5;
  sub_1C64A21C4(v6, v7, v8, v9, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for ObservedActionType(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFB && *(unsigned char *)(a1 + 33)) {
    return (*(_DWORD *)a1 + 251);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 32);
  if (v3 > 2) {
    unsigned int v4 = (v3 ^ 0xFF) + 1;
  }
  else {
    unsigned int v4 = 0;
  }
  if (v4 >= 4) {
    return v4 - 3;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ObservedActionType(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFA)
  {
    *(unsigned char *)(result + 32) = 0;
    *(_OWORD *)__n128 result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)__n128 result = a2 - 251;
    if (a3 >= 0xFB) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFB) {
      *(unsigned char *)(result + 33) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 32) = -3 - a2;
    }
  }
  return result;
}

uint64_t sub_1C64A3EE0(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int8 *)(a1 + 32);
  if (v1 > 2) {
    return (v1 ^ 0xFF) + 1;
  }
  else {
    return 0;
  }
}

uint64_t sub_1C64A3EF4(uint64_t result, unsigned int a2)
{
  if (a2 > 0xFD)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)__n128 result = a2 - 254;
    *(void *)(result + 8) = 0;
  }
  else if (a2)
  {
    *(unsigned char *)(result + 32) = -(char)a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for ObservedActionType()
{
  return &type metadata for ObservedActionType;
}

uint64_t getEnumTagSinglePayload for ObservedActionType.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFD)
  {
    if (a2 + 3 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 3) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 4;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v5 = v6 - 4;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for ObservedActionType.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *__n128 result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C64A4084);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ObservedActionType.CodingKeys()
{
  return &type metadata for ObservedActionType.CodingKeys;
}

ValueMetadata *type metadata accessor for ObservedActionType.SiriActionCodingKeys()
{
  return &type metadata for ObservedActionType.SiriActionCodingKeys;
}

ValueMetadata *type metadata accessor for ObservedActionType.LinkActionCodingKeys()
{
  return &type metadata for ObservedActionType.LinkActionCodingKeys;
}

unsigned char *storeEnumTagSinglePayload for ObservedActionType.SuggestionActionCodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *__n128 result = a2;
        return result;
      case 2:
        *(_WORD *)__n128 result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)__n128 result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *__n128 result = 0;
      break;
    case 2:
      *(_WORD *)__n128 result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C64A4178);
    case 4:
      *(_DWORD *)__n128 result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ObservedActionType.SuggestionActionCodingKeys()
{
  return &type metadata for ObservedActionType.SuggestionActionCodingKeys;
}

ValueMetadata *type metadata accessor for ObservedActionType.SuppressedSuggestionActionCodingKeys()
{
  return &type metadata for ObservedActionType.SuppressedSuggestionActionCodingKeys;
}

unint64_t sub_1C64A41C4()
{
  unint64_t result = qword_1EA3F0640;
  if (!qword_1EA3F0640)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F0640);
  }
  return result;
}

unint64_t sub_1C64A4214()
{
  unint64_t result = qword_1EA3F0648;
  if (!qword_1EA3F0648)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F0648);
  }
  return result;
}

unint64_t sub_1C64A4264()
{
  unint64_t result = qword_1EA3F0650;
  if (!qword_1EA3F0650)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F0650);
  }
  return result;
}

unint64_t sub_1C64A42B4()
{
  unint64_t result = qword_1EA3F0658;
  if (!qword_1EA3F0658)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F0658);
  }
  return result;
}

unint64_t sub_1C64A4304()
{
  unint64_t result = qword_1EA3F0660;
  if (!qword_1EA3F0660)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F0660);
  }
  return result;
}

unint64_t sub_1C64A4354()
{
  unint64_t result = qword_1EA3F0668;
  if (!qword_1EA3F0668)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F0668);
  }
  return result;
}

unint64_t sub_1C64A43A4()
{
  unint64_t result = qword_1EA3F0670;
  if (!qword_1EA3F0670)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F0670);
  }
  return result;
}

unint64_t sub_1C64A43F4()
{
  unint64_t result = qword_1EA3F0678;
  if (!qword_1EA3F0678)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F0678);
  }
  return result;
}

unint64_t sub_1C64A4444()
{
  unint64_t result = qword_1EA3F0680;
  if (!qword_1EA3F0680)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F0680);
  }
  return result;
}

unint64_t sub_1C64A4494()
{
  unint64_t result = qword_1EA3F0688;
  if (!qword_1EA3F0688)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F0688);
  }
  return result;
}

unint64_t sub_1C64A44E4()
{
  unint64_t result = qword_1EA3F0690;
  if (!qword_1EA3F0690)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F0690);
  }
  return result;
}

unint64_t sub_1C64A4534()
{
  unint64_t result = qword_1EA3F0698;
  if (!qword_1EA3F0698)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F0698);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_1_0()
{
  sub_1C64A055C(v3, v2, v1, v0, v9);
  return sub_1C64A055C(v7, v6, v5, v4, v8);
}

uint64_t OUTLINED_FUNCTION_3_0()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_8_0()
{
  return v0 + 32;
}

uint64_t OUTLINED_FUNCTION_10_0()
{
  return sub_1C6576E80();
}

uint64_t OUTLINED_FUNCTION_11_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  sub_1C64A21B0(a1, a2, a3, a4, a5);
  return v5;
}

uint64_t OUTLINED_FUNCTION_13_0()
{
  return v0 + 32;
}

uint64_t OUTLINED_FUNCTION_14_0()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t OUTLINED_FUNCTION_18_0()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_19_1()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_20_0()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_21_0()
{
  return sub_1C64A21B0(v0, v1, v2, v3, v4);
}

void OUTLINED_FUNCTION_22_0(uint64_t a1@<X8>)
{
  *(void *)(v2 + 16) = v1;
  *(void *)(v2 + 24) = 2 * a1;
}

uint64_t OUTLINED_FUNCTION_25_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return sub_1C64A21B0(v12, v11, v10, a10, v13);
}

uint64_t OUTLINED_FUNCTION_27_0()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_28_0()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_31_0()
{
  return sub_1C6576F70();
}

uint64_t static Resolvers.cascadeResolvers(type:resolvers:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  return sub_1C64A4894(a1, a2, a3, type metadata accessor for Resolvers.CascadeResolvers, (uint64_t)&off_1F2158998, a4);
}

uint64_t type metadata accessor for Resolvers.CascadeResolvers()
{
  return self;
}

uint64_t static Resolvers.unionResolvers(type:resolvers:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  return sub_1C64A4894(a1, a2, a3, type metadata accessor for Resolvers.UnionResolvers, (uint64_t)&off_1F2158988, a4);
}

uint64_t sub_1C64A4894@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t (*a4)(void)@<X3>, uint64_t a5@<X4>, void *a6@<X8>)
{
  uint64_t v11 = a4();
  uint64_t v12 = (void *)swift_allocObject();
  v12[3] = a2;
  v12[4] = a3;
  v12[2] = a1;
  a6[3] = v11;
  a6[4] = a5;
  *a6 = v12;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for Resolvers.UnionResolvers()
{
  return self;
}

ValueMetadata *type metadata accessor for Resolvers()
{
  return &type metadata for Resolvers;
}

uint64_t sub_1C64A494C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[10] = a4;
  v5[11] = v4;
  v5[8] = a2;
  v5[9] = a3;
  v5[7] = a1;
  return OUTLINED_FUNCTION_4_1((uint64_t)sub_1C64A496C);
}

uint64_t sub_1C64A496C()
{
  OUTLINED_FUNCTION_7_1();
  uint64_t v1 = *(void *)(v0[11] + 32);
  v0[12] = v1;
  uint64_t v2 = *(void *)(v1 + 16);
  v0[13] = v2;
  if (v2)
  {
    v0[14] = 0;
    uint64_t v3 = v1 + 32;
    swift_bridgeObjectRetain();
    sub_1C649FA30(v3, (uint64_t)(v0 + 2));
    OUTLINED_FUNCTION_1_1(v0 + 2);
    uint64_t v4 = (void *)swift_task_alloc();
    v0[15] = v4;
    *uint64_t v4 = v0;
    v4[1] = sub_1C64A4AC0;
    uint64_t v5 = OUTLINED_FUNCTION_2_1(v0[7]);
    return v6(v5);
  }
  else
  {
    char v8 = (uint64_t (*)(uint64_t))v0[1];
    uint64_t v9 = MEMORY[0x1E4FBC860];
    return v8(v9);
  }
}

uint64_t sub_1C64A4AC0()
{
  OUTLINED_FUNCTION_6_0();
  OUTLINED_FUNCTION_0_0();
  *(void *)(v1 + 128) = v0;
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1C64A4B98, 0, 0);
}

uint64_t sub_1C64A4B98()
{
  OUTLINED_FUNCTION_7_1();
  if (*(void *)(v0[16] + 16))
  {
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 2));
    uint64_t v1 = v0[16];
LABEL_5:
    uint64_t v5 = (uint64_t (*)(uint64_t))v0[1];
    return v5(v1);
  }
  uint64_t v3 = v0[13];
  uint64_t v2 = v0[14];
  swift_bridgeObjectRelease();
  uint64_t v4 = v2 + 1;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 2));
  if (v4 == v3)
  {
    swift_bridgeObjectRelease();
    uint64_t v1 = MEMORY[0x1E4FBC860];
    goto LABEL_5;
  }
  v0[14] = v4;
  sub_1C649FA30(v0[12] + 40 * v4 + 32, (uint64_t)(v0 + 2));
  OUTLINED_FUNCTION_1_1(v0 + 2);
  uint64_t v7 = (void *)swift_task_alloc();
  v0[15] = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_1C64A4AC0;
  uint64_t v8 = OUTLINED_FUNCTION_2_1(v0[7]);
  return v9(v8);
}

uint64_t sub_1C64A4D24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_1C64A5630;
  return sub_1C64A494C(a1, a2, a3, a4);
}

uint64_t sub_1C64A4DE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[20] = a4;
  v5[21] = v4;
  v5[18] = a2;
  v5[19] = a3;
  v5[17] = a1;
  return OUTLINED_FUNCTION_4_1((uint64_t)sub_1C64A4E04);
}

uint64_t sub_1C64A4E04()
{
  uint64_t v1 = *(void *)(v0 + 160);
  uint64_t v2 = *(void *)(v0 + 152);
  uint64_t v3 = *(void *)(v0 + 136);
  uint64_t v4 = *(void *)(*(void *)(v0 + 168) + 32);
  sub_1C649FA30(*(void *)(v0 + 144), v0 + 16);
  sub_1C649FA30(v2, v0 + 56);
  sub_1C649FA30(v1, v0 + 96);
  uint64_t v5 = swift_allocObject();
  *(void *)(v0 + 176) = v5;
  *(void *)(v5 + 16) = v3;
  sub_1C64A5488((long long *)(v0 + 16), v5 + 24);
  sub_1C64A5488((long long *)(v0 + 56), v5 + 64);
  sub_1C64A5488((long long *)(v0 + 96), v5 + 104);
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1EA3F0CB0
                                                                                    + dword_1EA3F0CB0);
  swift_retain();
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v0 + 184) = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_1C64A4F70;
  return v8(v4, 0, 0, 0, (uint64_t)&unk_1EA3F0708, v5);
}

uint64_t sub_1C64A4F70()
{
  OUTLINED_FUNCTION_6_0();
  OUTLINED_FUNCTION_0_0();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_3_1();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  swift_release();
  uint64_t v3 = OUTLINED_FUNCTION_5_1();
  return v4(v3);
}

uint64_t sub_1C64A5050(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[5] = a4;
  v5[6] = a5;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  return MEMORY[0x1F4188298](sub_1C64A5078, 0, 0);
}

uint64_t sub_1C64A5078()
{
  OUTLINED_FUNCTION_7_1();
  OUTLINED_FUNCTION_1_1(*(void **)(v0 + 16));
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1C64A515C;
  uint64_t v2 = OUTLINED_FUNCTION_2_1(*(void *)(v0 + 24));
  return v3(v2);
}

uint64_t sub_1C64A515C()
{
  OUTLINED_FUNCTION_6_0();
  OUTLINED_FUNCTION_0_0();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_3_1();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  uint64_t v3 = OUTLINED_FUNCTION_5_1();
  return v4(v3);
}

uint64_t sub_1C64A5224()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1C64A524C()
{
  sub_1C64A5224();

  return MEMORY[0x1F4186488](v0, 40, 7);
}

uint64_t sub_1C64A5280()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1C64A52B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_1C64A5374;
  return sub_1C64A4DE4(a1, a2, a3, a4);
}

uint64_t sub_1C64A5374()
{
  OUTLINED_FUNCTION_6_0();
  OUTLINED_FUNCTION_0_0();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_3_1();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  uint64_t v3 = OUTLINED_FUNCTION_5_1();
  return v4(v3);
}

uint64_t sub_1C64A5438()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  __swift_destroy_boxed_opaque_existential_1(v0 + 64);
  __swift_destroy_boxed_opaque_existential_1(v0 + 104);

  return MEMORY[0x1F4186498](v0, 144, 7);
}

uint64_t sub_1C64A5488(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_1C64A54A0()
{
  OUTLINED_FUNCTION_7_1();
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v0 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  v5[1] = sub_1C64A5560;
  return sub_1C64A5050(v3, v4, v0 + 24, v0 + 64, v0 + 104);
}

uint64_t sub_1C64A5560()
{
  OUTLINED_FUNCTION_6_0();
  uint64_t v2 = v1;
  OUTLINED_FUNCTION_0_0();
  uint64_t v3 = *v0;
  OUTLINED_FUNCTION_3_1();
  *uint64_t v4 = v3;
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(uint64_t))(v3 + 8);
  return v5(v2);
}

uint64_t OUTLINED_FUNCTION_1_1(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, v1);
  return *(void *)(v2 + 8) + 24;
}

uint64_t OUTLINED_FUNCTION_2_1@<X0>(uint64_t a1@<X8>)
{
  return a1;
}

uint64_t OUTLINED_FUNCTION_4_1(uint64_t a1)
{
  return MEMORY[0x1F4188298](a1, 0, 0);
}

uint64_t OUTLINED_FUNCTION_5_1()
{
  return v0;
}

uint64_t Action.actionId.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Action.params.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Action.associatedAppId.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 48);
  char v3 = *(unsigned char *)(v1 + 56);
  *(void *)a1 = *(void *)(v1 + 40);
  *(void *)(a1 + 8) = v2;
  *(unsigned char *)(a1 + 16) = v3;
  return swift_bridgeObjectRetain();
}

uint64_t Action.description.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

void __swiftcall Action.init(actionId:params:)(SiriSuggestionsKit::Action *__return_ptr retstr, Swift::String actionId, Swift::OpaquePointer params)
{
  OUTLINED_FUNCTION_3_2();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_1C64A5864(v5);
  uint64_t v9 = v8;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)uint64_t v6 = v5;
  *(void *)(v6 + 8) = v4;
  *(void *)(v6 + 16) = v3;
  *(void *)(v6 + 24) = v7;
  *(void *)(v6 + 40) = 0;
  *(void *)(v6 + 48) = 0;
  *(void *)(v6 + 32) = v9;
  *(unsigned char *)(v6 + 56) = 0;
}

void __swiftcall Action.init(actionId:params:associatedAppId:)(SiriSuggestionsKit::Action *__return_ptr retstr, Swift::String actionId, Swift::OpaquePointer params, SiriSuggestionsKit::AppIdDetails_optional associatedAppId)
{
  OUTLINED_FUNCTION_3_2();
  uint64_t v9 = *v8;
  uint64_t v10 = v8[1];
  char v11 = *((unsigned char *)v8 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_1C64A5864(v6);
  uint64_t v14 = v13;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)uint64_t v7 = v6;
  *(void *)(v7 + 8) = v5;
  *(void *)(v7 + 16) = v4;
  *(void *)(v7 + 24) = v12;
  *(void *)(v7 + 32) = v14;
  *(void *)(v7 + 40) = v9;
  *(void *)(v7 + 48) = v10;
  *(unsigned char *)(v7 + 56) = v11;
}

uint64_t sub_1C64A5864(uint64_t a1)
{
  uint64_t v2 = sub_1C64A5910();
  uint64_t v4 = HIBYTE(v3) & 0xF;
  if ((v3 & 0x2000000000000000) == 0) {
    uint64_t v4 = v2 & 0xFFFFFFFFFFFFLL;
  }
  if (v4)
  {
    swift_bridgeObjectRetain();
    sub_1C6576620();
    sub_1C6576620();
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C64A5910()
{
  uint64_t v0 = swift_bridgeObjectRetain();
  uint64_t v1 = sub_1C6558C0C(v0);
  swift_bridgeObjectRelease();
  uint64_t v13 = v1;
  sub_1C64A69A8((uint64_t *)&v13);
  uint64_t v2 = (uint64_t)v13;
  uint64_t v3 = v13[2];
  if (v3)
  {
    uint64_t v15 = MEMORY[0x1E4FBC860];
    sub_1C64A2210();
    uint64_t v4 = v15;
    uint64_t v5 = v2 + 56;
    do
    {
      uint64_t v6 = *(void *)(v5 - 16);
      uint64_t v13 = *(void **)(v5 - 24);
      uint64_t v14 = v6;
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      sub_1C6576620();
      sub_1C6576620();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v7 = (uint64_t)v13;
      uint64_t v8 = v14;
      uint64_t v15 = v4;
      unint64_t v9 = *(void *)(v4 + 16);
      if (v9 >= *(void *)(v4 + 24) >> 1)
      {
        sub_1C64A2210();
        uint64_t v4 = v15;
      }
      v5 += 32;
      *(void *)(v4 + 16) = v9 + 1;
      uint64_t v10 = v4 + 16 * v9;
      *(void *)(v10 + 32) = v7;
      *(void *)(v10 + 40) = v8;
      --v3;
    }
    while (v3);
    swift_release();
  }
  else
  {
    swift_release();
    uint64_t v4 = MEMORY[0x1E4FBC860];
  }
  uint64_t v13 = (void *)v4;
  __swift_instantiateConcreteTypeFromMangledName(qword_1EBBFC1F0);
  sub_1C64A7A58();
  uint64_t v11 = sub_1C6576520();
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t Action.hash(into:)(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 48);
  swift_bridgeObjectRetain();
  sub_1C65765E0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1C64A732C(a1, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1C65765E0();
  swift_bridgeObjectRelease();
  if (!v4) {
    return sub_1C6577170();
  }
  sub_1C6577170();
  swift_bridgeObjectRetain();
  sub_1C65765E0();

  return swift_bridgeObjectRelease();
}

BOOL static Action.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v6 = *(void *)(a1 + 40);
  uint64_t v5 = *(void *)(a1 + 48);
  uint64_t v8 = *(void **)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  uint64_t v10 = *(void *)(a2 + 32);
  uint64_t v9 = *(void *)(a2 + 40);
  uint64_t v11 = *(void *)(a2 + 48);
  BOOL v12 = *(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8);
  int v19 = *(unsigned __int8 *)(a2 + 56);
  int v20 = *(unsigned __int8 *)(a1 + 56);
  if (v12 || (v13 = sub_1C6577090(), BOOL result = 0, (v13 & 1) != 0))
  {
    sub_1C64A5D18(v2, v8);
    if ((v15 & 1) == 0) {
      return 0;
    }
    BOOL v16 = v3 == v7 && v4 == v10;
    if (v16 || (v17 = sub_1C6577090(), BOOL result = 0, (v17 & 1) != 0))
    {
      if (v5)
      {
        if (v11)
        {
          BOOL v18 = v6 == v9 && v5 == v11;
          return (v18 || (sub_1C6577090() & 1) != 0) && v20 == v19;
        }
        swift_bridgeObjectRetain();
      }
      else if (!v11)
      {
        return 1;
      }
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  return result;
}

void sub_1C64A5D18(void *a1, void *a2)
{
  if (a1 == a2 || a1[2] != a2[2]) {
    return;
  }
  int64_t v4 = 0;
  uint64_t v5 = a1 + 8;
  OUTLINED_FUNCTION_2_2();
  unint64_t v8 = v7 & v6;
  int64_t v27 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      unint64_t v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v11 = v10 | (v4 << 6);
      goto LABEL_20;
    }
    int64_t v12 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v12 >= v27) {
      return;
    }
    unint64_t v13 = v5[v12];
    ++v4;
    if (!v13)
    {
      int64_t v4 = v12 + 1;
      if (v12 + 1 >= v27) {
        return;
      }
      unint64_t v13 = v5[v4];
      if (!v13)
      {
        int64_t v4 = v12 + 2;
        if (v12 + 2 >= v27) {
          return;
        }
        unint64_t v13 = v5[v4];
        if (!v13) {
          break;
        }
      }
    }
LABEL_19:
    unint64_t v8 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v4 << 6);
LABEL_20:
    char v15 = (uint64_t *)(a1[6] + 16 * v11);
    uint64_t v16 = *v15;
    uint64_t v17 = v15[1];
    BOOL v18 = (uint64_t *)(a1[7] + 16 * v11);
    uint64_t v20 = *v18;
    uint64_t v19 = v18[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v21 = sub_1C657476C(v16, v17);
    char v23 = v22;
    swift_bridgeObjectRelease();
    if ((v23 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      return;
    }
    uint64_t v24 = (void *)(a2[7] + 16 * v21);
    if (*v24 == v20 && v24[1] == v19)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v26 = sub_1C6577090();
      swift_bridgeObjectRelease();
      if ((v26 & 1) == 0) {
        return;
      }
    }
  }
  int64_t v14 = v12 + 3;
  if (v14 >= v27) {
    return;
  }
  unint64_t v13 = v5[v14];
  if (v13)
  {
    int64_t v4 = v14;
    goto LABEL_19;
  }
  while (1)
  {
    int64_t v4 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v4 >= v27) {
      return;
    }
    unint64_t v13 = v5[v4];
    ++v14;
    if (v13) {
      goto LABEL_19;
    }
  }
LABEL_32:
  __break(1u);
}

uint64_t sub_1C64A5F08(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x64496E6F69746361 && a2 == 0xE800000000000000;
  if (v2 || (sub_1C6577090() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x736D61726170 && a2 == 0xE600000000000000;
    if (v6 || (sub_1C6577090() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x49676E6967676F6CLL && a2 == 0xE900000000000064;
      if (v7 || (sub_1C6577090() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0x746169636F737361 && a2 == 0xEF64497070416465)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        char v9 = sub_1C6577090();
        swift_bridgeObjectRelease();
        if (v9) {
          return 3;
        }
        else {
          return 4;
        }
      }
    }
  }
}

uint64_t sub_1C64A60E0(char a1)
{
  uint64_t result = 0x64496E6F69746361;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x736D61726170;
      break;
    case 2:
      uint64_t result = 0x49676E6967676F6CLL;
      break;
    case 3:
      uint64_t result = 0x746169636F737361;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C64A6180()
{
  return sub_1C64A60E0(*v0);
}

uint64_t sub_1C64A6188@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C64A5F08(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C64A61B0(uint64_t a1)
{
  unint64_t v2 = sub_1C64A74E0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C64A61EC(uint64_t a1)
{
  unint64_t v2 = sub_1C64A74E0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t Action.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF8FA8);
  OUTLINED_FUNCTION_0();
  uint64_t v5 = v4;
  MEMORY[0x1F4188790](v6);
  unint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(v1 + 16);
  uint64_t v19 = *(void *)(v1 + 24);
  uint64_t v20 = v9;
  uint64_t v10 = *(void *)(v1 + 32);
  uint64_t v17 = *(void *)(v1 + 40);
  uint64_t v18 = v10;
  uint64_t v16 = *(void *)(v1 + 48);
  int v25 = *(unsigned __int8 *)(v1 + 56);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C64A74E0();
  sub_1C6577240();
  LOBYTE(v22) = 0;
  uint64_t v11 = v21;
  sub_1C6576FD0();
  if (!v11)
  {
    uint64_t v13 = v16;
    uint64_t v12 = v17;
    uint64_t v22 = v20;
    char v26 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFC2A0);
    sub_1C64A7578(&qword_1EBBF8EF0);
    sub_1C6577010();
    LOBYTE(v22) = 2;
    sub_1C6576FD0();
    uint64_t v22 = v12;
    uint64_t v23 = v13;
    char v24 = v25;
    char v26 = 3;
    sub_1C64A752C();
    sub_1C6576FC0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v3);
}

uint64_t Action.hashValue.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 48);
  sub_1C6577150();
  swift_bridgeObjectRetain();
  sub_1C65765E0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1C64A732C((uint64_t)v4, v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1C65765E0();
  swift_bridgeObjectRelease();
  sub_1C6577170();
  if (v2)
  {
    swift_bridgeObjectRetain();
    sub_1C65765E0();
    swift_bridgeObjectRelease();
  }
  return sub_1C6577190();
}

uint64_t Action.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFC2A8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v5);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C64A74E0();
  sub_1C6577210();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  LOBYTE(v18) = 0;
  uint64_t v6 = sub_1C6576EF0();
  uint64_t v8 = v7;
  uint64_t v17 = v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFC2A0);
  sub_1C64A7578(&qword_1EBBFBE08);
  swift_bridgeObjectRetain();
  sub_1C6576F30();
  uint64_t v9 = v18;
  LOBYTE(v18) = 2;
  uint64_t v16 = v9;
  swift_bridgeObjectRetain();
  uint64_t v15 = sub_1C6576EF0();
  uint64_t v11 = v10;
  sub_1C64A75DC();
  swift_bridgeObjectRetain();
  sub_1C6576EE0();
  uint64_t v13 = OUTLINED_FUNCTION_0_1();
  v14(v13);
  swift_bridgeObjectRetain();
  *(void *)a2 = v17;
  *(void *)(a2 + 8) = v8;
  *(void *)(a2 + 16) = v16;
  *(void *)(a2 + 24) = v15;
  *(void *)(a2 + 32) = v11;
  *(void *)(a2 + 40) = v18;
  *(void *)(a2 + 48) = v19;
  *(unsigned char *)(a2 + 56) = v20;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C64A6878@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return Action.init(from:)(a1, a2);
}

uint64_t sub_1C64A6890(void *a1)
{
  return Action.encode(to:)(a1);
}

uint64_t sub_1C64A68B0()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 48);
  sub_1C6577150();
  swift_bridgeObjectRetain();
  sub_1C65765E0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1C64A732C((uint64_t)v4, v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1C65765E0();
  swift_bridgeObjectRelease();
  sub_1C6577170();
  if (v2)
  {
    swift_bridgeObjectRetain();
    sub_1C65765E0();
    swift_bridgeObjectRelease();
  }
  return sub_1C6577190();
}

uint64_t sub_1C64A69A8(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_1C65232C8();
    uint64_t v2 = v3;
  }
  uint64_t v4 = *(void *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  uint64_t result = sub_1C64A6A14(v6);
  *a1 = v2;
  return result;
}

uint64_t sub_1C64A6A14(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_1C6577030();
  if (result >= v3)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if (v3) {
        return sub_1C64A70A0(0, v3, 1, a1);
      }
      return result;
    }
    goto LABEL_144;
  }
  uint64_t v5 = result;
  uint64_t result = sub_1C654AC68(v3 / 2);
  uint64_t v104 = result;
  uint64_t v105 = v3;
  v106 = v6;
  v102 = a1;
  if (v3 <= 0)
  {
    uint64_t v107 = MEMORY[0x1E4FBC860];
    unint64_t v35 = *(void *)(MEMORY[0x1E4FBC860] + 16);
LABEL_110:
    if (v35 < 2)
    {
LABEL_121:
      uint64_t result = swift_bridgeObjectRelease();
      if (v3 >= -1)
      {
        *(void *)(v104 + 16) = 0;
        return swift_bridgeObjectRelease();
      }
      goto LABEL_149;
    }
    uint64_t v93 = *v102;
    while (1)
    {
      unint64_t v94 = v35 - 2;
      if (v35 < 2) {
        break;
      }
      if (!v93) {
        goto LABEL_153;
      }
      uint64_t v95 = v107;
      uint64_t v96 = *(void *)(v107 + 32 + 16 * v94);
      uint64_t v97 = *(void *)(v107 + 32 + 16 * (v35 - 1) + 8);
      uint64_t result = sub_1C64A717C((char *)(v93 + 32 * v96), (char *)(v93 + 32 * *(void *)(v107 + 32 + 16 * (v35 - 1))), v93 + 32 * v97, v106);
      if (v1) {
        goto LABEL_106;
      }
      if (v97 < v96) {
        goto LABEL_139;
      }
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_1C6520EAC(v107);
        uint64_t v95 = result;
      }
      if (v94 >= *(void *)(v95 + 16)) {
        goto LABEL_140;
      }
      v98 = (void *)(v95 + 32 + 16 * v94);
      void *v98 = v96;
      v98[1] = v97;
      unint64_t v99 = *(void *)(v95 + 16);
      if (v35 > v99) {
        goto LABEL_141;
      }
      uint64_t result = (uint64_t)memmove((void *)(v95 + 32 + 16 * (v35 - 1)), (const void *)(v95 + 32 + 16 * v35), 16 * (v99 - v35));
      uint64_t v107 = v95;
      *(void *)(v95 + 16) = v99 - 1;
      unint64_t v35 = v99 - 1;
      uint64_t v3 = v105;
      if (v99 <= 2) {
        goto LABEL_121;
      }
    }
LABEL_138:
    __break(1u);
LABEL_139:
    __break(1u);
LABEL_140:
    __break(1u);
LABEL_141:
    __break(1u);
LABEL_142:
    __break(1u);
LABEL_143:
    __break(1u);
LABEL_144:
    __break(1u);
LABEL_145:
    __break(1u);
LABEL_146:
    __break(1u);
LABEL_147:
    __break(1u);
LABEL_148:
    __break(1u);
LABEL_149:
    __break(1u);
LABEL_150:
    __break(1u);
LABEL_151:
    __break(1u);
LABEL_152:
    __break(1u);
LABEL_153:
    __break(1u);
    return result;
  }
  uint64_t v103 = v5;
  uint64_t v7 = 0;
  uint64_t v8 = *a1;
  uint64_t v100 = *a1 + 24;
  uint64_t v101 = *a1 + 8;
  uint64_t v107 = MEMORY[0x1E4FBC860];
  while (1)
  {
    uint64_t v9 = v7++;
    if (v7 >= v3) {
      goto LABEL_32;
    }
    uint64_t v10 = (uint64_t *)(v8 + 32 * v7);
    uint64_t result = *v10;
    uint64_t v11 = v10[1];
    uint64_t v12 = (void *)(v8 + 32 * v9);
    if (result == *v12 && v11 == v12[1])
    {
      uint64_t v15 = v9 + 2;
      if (v9 + 2 >= v3) {
        goto LABEL_31;
      }
      int v14 = 0;
LABEL_13:
      uint64_t v16 = (void *)(v101 + 32 * v15);
      do
      {
        uint64_t result = *(v16 - 1);
        uint64_t v17 = (void *)(v8 + 32 * v7);
        if (result == *v17 && *v16 == v17[1])
        {
          if (v14) {
            goto LABEL_24;
          }
        }
        else
        {
          uint64_t result = sub_1C6577090();
          if ((v14 ^ result)) {
            goto LABEL_23;
          }
        }
        v16 += 4;
        uint64_t v19 = v15 + 1;
        uint64_t v7 = v15;
        uint64_t v15 = v19;
      }
      while (v19 < v3);
      uint64_t v15 = v19;
      goto LABEL_23;
    }
    uint64_t result = sub_1C6577090();
    int v14 = result;
    uint64_t v15 = v9 + 2;
    if (v9 + 2 < v3) {
      goto LABEL_13;
    }
LABEL_23:
    uint64_t v7 = v15;
    if ((v14 & 1) == 0) {
      goto LABEL_32;
    }
LABEL_24:
    if (v15 < v9) {
      goto LABEL_148;
    }
    if (v9 < v15)
    {
      uint64_t v20 = 32 * v15;
      uint64_t v21 = 32 * v9;
      uint64_t v22 = v15;
      uint64_t v23 = v9;
      do
      {
        if (v23 != --v22)
        {
          if (!v8) {
            goto LABEL_152;
          }
          char v24 = (_OWORD *)(v8 + v21);
          uint64_t v25 = v8 + v20;
          long long v26 = *(_OWORD *)(v8 + v21);
          uint64_t v27 = *(void *)(v8 + v21 + 16);
          uint64_t v28 = *(void *)(v8 + v21 + 24);
          long long v29 = *(_OWORD *)(v8 + v20 - 16);
          *char v24 = *(_OWORD *)(v8 + v20 - 32);
          v24[1] = v29;
          *(_OWORD *)(v25 - 32) = v26;
          *(void *)(v25 - 16) = v27;
          *(void *)(v25 - 8) = v28;
        }
        ++v23;
        v20 -= 32;
        v21 += 32;
      }
      while (v23 < v22);
    }
LABEL_31:
    uint64_t v7 = v15;
LABEL_32:
    if (v7 >= v3) {
      goto LABEL_41;
    }
    if (__OFSUB__(v7, v9)) {
      goto LABEL_143;
    }
    if (v7 - v9 >= v103) {
      goto LABEL_41;
    }
    if (__OFADD__(v9, v103)) {
      goto LABEL_146;
    }
    if (v9 + v103 >= v3) {
      uint64_t v30 = v3;
    }
    else {
      uint64_t v30 = v9 + v103;
    }
    if (v30 < v9) {
      goto LABEL_147;
    }
    if (v7 == v30)
    {
LABEL_41:
      uint64_t v31 = v107;
    }
    else
    {
      v83 = (void *)(v100 + 32 * v7);
      uint64_t v31 = v107;
      do
      {
        v84 = (uint64_t *)(v8 + 32 * v7);
        uint64_t result = *v84;
        uint64_t v85 = v84[1];
        uint64_t v86 = v9;
        v87 = v83;
        do
        {
          v88 = (long long *)(v87 - 7);
          if (result == *(v87 - 7) && v85 == *(v87 - 6)) {
            break;
          }
          uint64_t result = sub_1C6577090();
          if ((result & 1) == 0) {
            break;
          }
          if (!v8) {
            goto LABEL_150;
          }
          long long v91 = *v88;
          long long v90 = *(_OWORD *)(v87 - 5);
          *(v87 - 4) = *v87;
          v87 -= 4;
          uint64_t result = v87[1];
          uint64_t v85 = v87[2];
          uint64_t v92 = v87[3];
          v88[2] = v91;
          v88[3] = v90;
          *(v87 - 3) = result;
          *(v87 - 2) = v85;
          *(v87 - 1) = v92;
          ++v86;
        }
        while (v7 != v86);
        ++v7;
        v83 += 4;
      }
      while (v7 != v30);
      uint64_t v7 = v30;
    }
    if (v7 < v9) {
      goto LABEL_142;
    }
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v32 = v9;
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_1C6520DB4(0, *(void *)(v31 + 16) + 1, 1, (char *)v31);
      uint64_t v31 = result;
    }
    unint64_t v34 = *(void *)(v31 + 16);
    unint64_t v33 = *(void *)(v31 + 24);
    unint64_t v35 = v34 + 1;
    if (v34 >= v33 >> 1)
    {
      uint64_t result = (uint64_t)sub_1C6520DB4((char *)(v33 > 1), v34 + 1, 1, (char *)v31);
      uint64_t v31 = result;
    }
    *(void *)(v31 + 16) = v35;
    uint64_t v36 = v31 + 32;
    uint64_t v37 = (uint64_t *)(v31 + 32 + 16 * v34);
    *uint64_t v37 = v32;
    v37[1] = v7;
    uint64_t v107 = v31;
    if (v34) {
      break;
    }
    unint64_t v35 = 1;
LABEL_90:
    uint64_t v3 = v105;
    if (v7 >= v105) {
      goto LABEL_110;
    }
  }
  while (1)
  {
    unint64_t v38 = v35 - 1;
    if (v35 >= 4)
    {
      unint64_t v43 = v36 + 16 * v35;
      uint64_t v44 = *(void *)(v43 - 64);
      uint64_t v45 = *(void *)(v43 - 56);
      BOOL v49 = __OFSUB__(v45, v44);
      uint64_t v46 = v45 - v44;
      if (v49) {
        goto LABEL_127;
      }
      uint64_t v48 = *(void *)(v43 - 48);
      uint64_t v47 = *(void *)(v43 - 40);
      BOOL v49 = __OFSUB__(v47, v48);
      uint64_t v41 = v47 - v48;
      char v42 = v49;
      if (v49) {
        goto LABEL_128;
      }
      unint64_t v50 = v35 - 2;
      uint64_t v51 = (uint64_t *)(v36 + 16 * (v35 - 2));
      uint64_t v53 = *v51;
      uint64_t v52 = v51[1];
      BOOL v49 = __OFSUB__(v52, v53);
      uint64_t v54 = v52 - v53;
      if (v49) {
        goto LABEL_129;
      }
      BOOL v49 = __OFADD__(v41, v54);
      uint64_t v55 = v41 + v54;
      if (v49) {
        goto LABEL_131;
      }
      if (v55 >= v46)
      {
        v73 = (uint64_t *)(v36 + 16 * v38);
        uint64_t v75 = *v73;
        uint64_t v74 = v73[1];
        BOOL v49 = __OFSUB__(v74, v75);
        uint64_t v76 = v74 - v75;
        if (v49) {
          goto LABEL_137;
        }
        BOOL v66 = v41 < v76;
        goto LABEL_79;
      }
    }
    else
    {
      if (v35 != 3)
      {
        uint64_t v67 = *(void *)(v31 + 32);
        uint64_t v68 = *(void *)(v31 + 40);
        BOOL v49 = __OFSUB__(v68, v67);
        uint64_t v60 = v68 - v67;
        char v61 = v49;
        goto LABEL_73;
      }
      uint64_t v40 = *(void *)(v31 + 32);
      uint64_t v39 = *(void *)(v31 + 40);
      BOOL v49 = __OFSUB__(v39, v40);
      uint64_t v41 = v39 - v40;
      char v42 = v49;
    }
    if (v42) {
      goto LABEL_130;
    }
    unint64_t v50 = v35 - 2;
    char v56 = (uint64_t *)(v36 + 16 * (v35 - 2));
    uint64_t v58 = *v56;
    uint64_t v57 = v56[1];
    BOOL v59 = __OFSUB__(v57, v58);
    uint64_t v60 = v57 - v58;
    char v61 = v59;
    if (v59) {
      goto LABEL_132;
    }
    v62 = (uint64_t *)(v36 + 16 * v38);
    uint64_t v64 = *v62;
    uint64_t v63 = v62[1];
    BOOL v49 = __OFSUB__(v63, v64);
    uint64_t v65 = v63 - v64;
    if (v49) {
      goto LABEL_134;
    }
    if (__OFADD__(v60, v65)) {
      goto LABEL_136;
    }
    if (v60 + v65 >= v41)
    {
      BOOL v66 = v41 < v65;
LABEL_79:
      if (v66) {
        unint64_t v38 = v50;
      }
      goto LABEL_81;
    }
LABEL_73:
    if (v61) {
      goto LABEL_133;
    }
    v69 = (uint64_t *)(v36 + 16 * v38);
    uint64_t v71 = *v69;
    uint64_t v70 = v69[1];
    BOOL v49 = __OFSUB__(v70, v71);
    uint64_t v72 = v70 - v71;
    if (v49) {
      goto LABEL_135;
    }
    if (v72 < v60) {
      goto LABEL_90;
    }
LABEL_81:
    unint64_t v77 = v38 - 1;
    if (v38 - 1 >= v35)
    {
      __break(1u);
LABEL_124:
      __break(1u);
LABEL_125:
      __break(1u);
LABEL_126:
      __break(1u);
LABEL_127:
      __break(1u);
LABEL_128:
      __break(1u);
LABEL_129:
      __break(1u);
LABEL_130:
      __break(1u);
LABEL_131:
      __break(1u);
LABEL_132:
      __break(1u);
LABEL_133:
      __break(1u);
LABEL_134:
      __break(1u);
LABEL_135:
      __break(1u);
LABEL_136:
      __break(1u);
LABEL_137:
      __break(1u);
      goto LABEL_138;
    }
    if (!v8) {
      goto LABEL_151;
    }
    v78 = (uint64_t *)(v36 + 16 * v77);
    uint64_t v79 = *v78;
    v80 = (void *)(v36 + 16 * v38);
    uint64_t v81 = v80[1];
    uint64_t result = sub_1C64A717C((char *)(v8 + 32 * *v78), (char *)(v8 + 32 * *v80), v8 + 32 * v81, v106);
    if (v1) {
      break;
    }
    if (v81 < v79) {
      goto LABEL_124;
    }
    if (v38 > *(void *)(v107 + 16)) {
      goto LABEL_125;
    }
    uint64_t *v78 = v79;
    *(void *)(v36 + 16 * v77 + 8) = v81;
    unint64_t v82 = *(void *)(v107 + 16);
    if (v38 >= v82) {
      goto LABEL_126;
    }
    uint64_t v31 = v107;
    unint64_t v35 = v82 - 1;
    uint64_t result = (uint64_t)memmove((void *)(v36 + 16 * v38), v80 + 2, 16 * (v82 - 1 - v38));
    *(void *)(v107 + 16) = v82 - 1;
    if (v82 <= 2) {
      goto LABEL_90;
    }
  }
LABEL_106:
  uint64_t result = swift_bridgeObjectRelease();
  if (v105 < -1) {
    goto LABEL_145;
  }
  *(void *)(v104 + 16) = 0;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C64A70A0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v6 = result;
    uint64_t v7 = *a4;
    uint64_t v8 = *a4 + 32 * a3 + 24;
    while (2)
    {
      uint64_t v9 = (uint64_t *)(v7 + 32 * v4);
      uint64_t result = *v9;
      uint64_t v10 = v9[1];
      uint64_t v11 = v6;
      uint64_t v12 = (void *)v8;
      do
      {
        uint64_t v13 = (long long *)(v12 - 7);
        if (result == *(v12 - 7) && v10 == *(v12 - 6)) {
          break;
        }
        uint64_t result = sub_1C6577090();
        if ((result & 1) == 0) {
          break;
        }
        if (!v7)
        {
          __break(1u);
          return result;
        }
        long long v16 = *v13;
        long long v15 = *(_OWORD *)(v12 - 5);
        *(v12 - 4) = *v12;
        v12 -= 4;
        uint64_t result = v12[1];
        uint64_t v10 = v12[2];
        uint64_t v17 = v12[3];
        v13[2] = v16;
        v13[3] = v15;
        *(v12 - 3) = result;
        *(v12 - 2) = v10;
        *(v12 - 1) = v17;
        ++v11;
      }
      while (v4 != v11);
      ++v4;
      v8 += 32;
      if (v4 != a2) {
        continue;
      }
      break;
    }
  }
  return result;
}

uint64_t sub_1C64A717C(char *a1, char *a2, unint64_t a3, char *a4)
{
  uint64_t v4 = a4;
  uint64_t v6 = a2;
  uint64_t v7 = a1;
  uint64_t v8 = a2 - a1;
  uint64_t v9 = (a2 - a1) / 32;
  uint64_t v10 = a3 - (void)a2;
  uint64_t v11 = (uint64_t)(a3 - (void)a2) / 32;
  if (v9 >= v11)
  {
    sub_1C64AFC60(a2, (uint64_t)(a3 - (void)a2) / 32, a4);
    uint64_t v12 = &v4[32 * v11];
    if (v7 >= v6 || v10 < 32) {
      goto LABEL_43;
    }
    uint64_t v17 = (char *)(a3 - 32);
    while (1)
    {
      uint64_t v18 = v17 + 32;
      uint64_t v19 = v12 - 32;
      BOOL v20 = *((void *)v12 - 4) == *((void *)v6 - 4) && *((void *)v12 - 3) == *((void *)v6 - 3);
      if (v20 || (sub_1C6577090() & 1) == 0)
      {
        BOOL v22 = v18 != v12 || v17 >= v12;
        v12 -= 32;
        if (!v22) {
          goto LABEL_39;
        }
      }
      else
      {
        BOOL v21 = v18 != v6 || v17 >= v6;
        uint64_t v19 = v6 - 32;
        v6 -= 32;
        if (!v21) {
          goto LABEL_39;
        }
      }
      long long v23 = *((_OWORD *)v19 + 1);
      *(_OWORD *)uint64_t v17 = *(_OWORD *)v19;
      *((_OWORD *)v17 + 1) = v23;
LABEL_39:
      v17 -= 32;
      if (v6 <= v7 || v12 <= v4) {
        goto LABEL_43;
      }
    }
  }
  sub_1C64AFC60(a1, (a2 - a1) / 32, a4);
  uint64_t v12 = &v4[32 * v9];
  if ((unint64_t)v6 < a3 && v8 >= 32)
  {
    while (1)
    {
      BOOL v13 = *(void *)v6 == *(void *)v4 && *((void *)v6 + 1) == *((void *)v4 + 1);
      if (!v13 && (sub_1C6577090() & 1) != 0) {
        break;
      }
      int v14 = v4;
      BOOL v13 = v7 == v4;
      v4 += 32;
      if (!v13) {
        goto LABEL_13;
      }
LABEL_14:
      v7 += 32;
      if (v4 >= v12 || (unint64_t)v6 >= a3) {
        goto LABEL_19;
      }
    }
    int v14 = v6;
    BOOL v13 = v7 == v6;
    v6 += 32;
    if (v13) {
      goto LABEL_14;
    }
LABEL_13:
    long long v15 = *((_OWORD *)v14 + 1);
    *(_OWORD *)uint64_t v7 = *(_OWORD *)v14;
    *((_OWORD *)v7 + 1) = v15;
    goto LABEL_14;
  }
LABEL_19:
  uint64_t v6 = v7;
LABEL_43:
  sub_1C64AFC60(v4, (v12 - v4) / 32, v6);
  return 1;
}

uint64_t sub_1C64A732C(uint64_t a1, uint64_t a2)
{
  uint64_t v13 = a2 + 64;
  OUTLINED_FUNCTION_2_2();
  uint64_t v4 = v3 & v2;
  int64_t v6 = (unint64_t)(v5 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v8 = 0;
  int64_t v9 = 0;
  if (!v4) {
    goto LABEL_3;
  }
LABEL_2:
  for (v4 &= v4 - 1; ; uint64_t v4 = (v11 - 1) & v11)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C65765E0();
    swift_bridgeObjectRelease();
    sub_1C65765E0();
    swift_bridgeObjectRelease();
    uint64_t result = sub_1C6577190();
    v8 ^= result;
    if (v4) {
      goto LABEL_2;
    }
LABEL_3:
    int64_t v10 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_19;
    }
    if (v10 >= v6) {
      goto LABEL_17;
    }
    uint64_t v11 = *(void *)(v13 + 8 * v10);
    ++v9;
    if (!v11)
    {
      int64_t v9 = v10 + 1;
      if (v10 + 1 >= v6) {
        goto LABEL_17;
      }
      uint64_t v11 = *(void *)(v13 + 8 * v9);
      if (!v11) {
        break;
      }
    }
LABEL_14:
    ;
  }
  int64_t v12 = v10 + 2;
  if (v12 >= v6)
  {
LABEL_17:
    swift_release();
    return sub_1C6577160();
  }
  uint64_t v11 = *(void *)(v13 + 8 * v12);
  if (v11)
  {
    int64_t v9 = v12;
    goto LABEL_14;
  }
  while (1)
  {
    int64_t v9 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      break;
    }
    if (v9 >= v6) {
      goto LABEL_17;
    }
    uint64_t v11 = *(void *)(v13 + 8 * v9);
    ++v12;
    if (v11) {
      goto LABEL_14;
    }
  }
LABEL_19:
  __break(1u);
  return result;
}

unint64_t sub_1C64A74E0()
{
  unint64_t result = qword_1EBBFC290;
  if (!qword_1EBBFC290)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBBFC290);
  }
  return result;
}

unint64_t sub_1C64A752C()
{
  unint64_t result = qword_1EBBFB938;
  if (!qword_1EBBFB938)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBBFB938);
  }
  return result;
}

uint64_t sub_1C64A7578(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBBFC2A0);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C64A75DC()
{
  unint64_t result = qword_1EBBFC3E0;
  if (!qword_1EBBFC3E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBBFC3E0);
  }
  return result;
}

unint64_t sub_1C64A762C()
{
  unint64_t result = qword_1EA3F0710;
  if (!qword_1EA3F0710)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F0710);
  }
  return result;
}

uint64_t destroy for Action()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for Action(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for Action(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  return a1;
}

uint64_t assignWithTake for Action(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  return a1;
}

ValueMetadata *type metadata accessor for Action()
{
  return &type metadata for Action;
}

unsigned char *storeEnumTagSinglePayload for Action.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C64A7930);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Action.CodingKeys()
{
  return &type metadata for Action.CodingKeys;
}

unint64_t sub_1C64A796C()
{
  unint64_t result = qword_1EA3F0718;
  if (!qword_1EA3F0718)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F0718);
  }
  return result;
}

unint64_t sub_1C64A79BC()
{
  unint64_t result = qword_1EBBFC450;
  if (!qword_1EBBFC450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBBFC450);
  }
  return result;
}

unint64_t sub_1C64A7A0C()
{
  unint64_t result = qword_1EBBFC298;
  if (!qword_1EBBFC298)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBBFC298);
  }
  return result;
}

unint64_t sub_1C64A7A58()
{
  unint64_t result = qword_1EBBFC3C8;
  if (!qword_1EBBFC3C8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1EBBFC1F0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBBFC3C8);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_0_1()
{
  return v0;
}

uint64_t SalientEntity.value.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C64A7B04(v1, a1);
}

uint64_t sub_1C64A7B04(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(_OWORD *)(a2 + 32) = *(_OWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

void SalientEntity.type.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 48);
}

double SalientEntity.score.getter()
{
  return *(double *)(v0 + 56);
}

_OWORD *SalientEntity.init(value:type:score:)@<X0>(long long *a1@<X0>, char *a2@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  char v6 = *a2;
  unint64_t result = sub_1C64A7BBC(a1, (_OWORD *)a3);
  *(unsigned char *)(a3 + 48) = v6;
  *(double *)(a3 + 56) = a4;
  return result;
}

_OWORD *sub_1C64A7BBC(long long *a1, _OWORD *a2)
{
  long long v2 = *a1;
  long long v3 = a1[2];
  a2[1] = a1[1];
  a2[2] = v3;
  *a2 = v2;
  return a2;
}

uint64_t SalientEntity.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F0720);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v5);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C64A7DA0();
  sub_1C6577210();
  if (!v2)
  {
    sub_1C64AA4AC(0, v11);
    sub_1C64AAA3C();
    sub_1C6576F30();
    sub_1C6576F10();
    uint64_t v8 = v7;
    OUTLINED_FUNCTION_41();
    v9();
    sub_1C64A7BBC(v11, (_OWORD *)a2);
    *(unsigned char *)(a2 + 48) = v10;
    *(void *)(a2 + 56) = v8;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1C64A7DA0()
{
  unint64_t result = qword_1EA3F0728;
  if (!qword_1EA3F0728)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F0728);
  }
  return result;
}

void sub_1C64A7DEC()
{
  OUTLINED_FUNCTION_25();
  uint64_t v3 = sub_1C6576320();
  OUTLINED_FUNCTION_0();
  uint64_t v5 = v4;
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_22();
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFC3A0);
  OUTLINED_FUNCTION_0();
  uint64_t v9 = v8;
  MEMORY[0x1F4188790](v10);
  OUTLINED_FUNCTION_10();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F08B0);
  sub_1C64B03F4();
  sub_1C6576E80();
  if (!v0)
  {
    LOBYTE(v31[0]) = 0;
    sub_1C64B0524(&qword_1EBBFC2B0, MEMORY[0x1E4FA5210]);
    OUTLINED_FUNCTION_7_2();
    uint64_t v30 = v5;
    sub_1C6576300();
    uint64_t v11 = sub_1C6576C80();
    swift_bridgeObjectRelease();
    if (v11)
    {
      uint64_t v12 = OUTLINED_FUNCTION_49();
      if (v12)
      {
        uint64_t v14 = v12;
        uint64_t v15 = v13;
        OUTLINED_FUNCTION_32_1();
        v31[3] = v14;
        v31[4] = v15;
        __swift_allocate_boxed_opaque_existential_1Tm(v31);
        sub_1C65769A0();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFC398);
        if (swift_dynamicCast())
        {
          if (v32)
          {
            BOOL v20 = *(void (**)(void))(v30 + 8);
            swift_bridgeObjectRetain();
            OUTLINED_FUNCTION_35_0();
            v20();
            OUTLINED_FUNCTION_41();
            v21();
            swift_bridgeObjectRelease();
            goto LABEL_6;
          }
        }
        else
        {
          v31[5] = 0;
          uint64_t v32 = 0;
        }
        uint64_t v22 = type metadata accessor for CodingErrors();
        sub_1C64B0524(&qword_1EA3F07C8, (void (*)(uint64_t))type metadata accessor for CodingErrors);
        OUTLINED_FUNCTION_11_1();
        OUTLINED_FUNCTION_44();
        uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F07D0);
        OUTLINED_FUNCTION_17_1(v22, v24, v25, v23);
        uint64_t v26 = OUTLINED_FUNCTION_4_2();
        v27(v26);
        OUTLINED_FUNCTION_41();
        v28();
        swift_bridgeObjectRelease();
        goto LABEL_6;
      }
    }
    uint64_t v16 = type metadata accessor for CodingErrors();
    sub_1C64B0524(&qword_1EA3F07C8, (void (*)(uint64_t))type metadata accessor for CodingErrors);
    OUTLINED_FUNCTION_11_1();
    OUTLINED_FUNCTION_44();
    uint64_t v29 = v16 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F07D0) + 48);
    *(void *)(v16 + 24) = &type metadata for Continuer.CodingKeys;
    unint64_t v17 = sub_1C64B08C4();
    OUTLINED_FUNCTION_61(v17);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v29, v2, v3);
    OUTLINED_FUNCTION_9_1();
    uint64_t v18 = OUTLINED_FUNCTION_22_1();
    v19(v18);
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v1, v7);
  }
LABEL_6:
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_26();
}

void sub_1C64A81D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  OUTLINED_FUNCTION_25();
  OUTLINED_FUNCTION_72(v15);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v16);
  OUTLINED_FUNCTION_22();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFC3A0);
  OUTLINED_FUNCTION_0();
  uint64_t v18 = v17;
  MEMORY[0x1F4188790](v19);
  OUTLINED_FUNCTION_23_1();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F0870);
  sub_1C64B03F4();
  OUTLINED_FUNCTION_27_1();
  if (!v13)
  {
    v46[0] = 0;
    sub_1C64B0524(&qword_1EBBFC2B0, MEMORY[0x1E4FA5210]);
    OUTLINED_FUNCTION_7_2();
    sub_1C6576300();
    sub_1C6576C80();
    OUTLINED_FUNCTION_60();
    if (v14 && (uint64_t v20 = OUTLINED_FUNCTION_49()) != 0)
    {
      uint64_t v22 = v20;
      uint64_t v23 = v21;
      OUTLINED_FUNCTION_32_1();
      uint64_t v44 = v22;
      uint64_t v45 = v23;
      __swift_allocate_boxed_opaque_existential_1Tm((uint64_t *)&v43);
      OUTLINED_FUNCTION_26_1();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFC398);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFB930);
      if ((OUTLINED_FUNCTION_71() & 1) == 0)
      {
        uint64_t v47 = 0;
        memset(v46, 0, sizeof(v46));
      }
      sub_1C64B07F8((uint64_t)v46, (uint64_t)&v43, &qword_1EA3F0880);
      if (v44)
      {
        uint64_t v31 = OUTLINED_FUNCTION_5_2();
        v32(v31);
        uint64_t v33 = OUTLINED_FUNCTION_31_1();
        v34(v33);
        sub_1C64A5488(&v43, v42);
      }
      else
      {
        sub_1C64B0858((uint64_t)&v43, &qword_1EA3F0880);
        type metadata accessor for CodingErrors();
        sub_1C64B0524(&qword_1EA3F07C8, (void (*)(uint64_t))type metadata accessor for CodingErrors);
        OUTLINED_FUNCTION_25_1();
        OUTLINED_FUNCTION_38();
        uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F07D0);
        OUTLINED_FUNCTION_17_1(v18, v36, v37, v35);
        uint64_t v38 = OUTLINED_FUNCTION_5_2();
        v39(v38);
        uint64_t v40 = OUTLINED_FUNCTION_30_1();
        v41(v40);
      }
      sub_1C64B0858((uint64_t)v46, &qword_1EA3F0880);
    }
    else
    {
      uint64_t v24 = type metadata accessor for CodingErrors();
      sub_1C64B0524(&qword_1EA3F07C8, (void (*)(uint64_t))type metadata accessor for CodingErrors);
      OUTLINED_FUNCTION_11_1();
      OUTLINED_FUNCTION_44();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F07D0);
      OUTLINED_FUNCTION_40();
      *(void *)(v24 + 24) = &unk_1F21595F0;
      *(void *)(v24 + 32) = sub_1C64B0760();
      *(unsigned char *)uint64_t v24 = a13;
      uint64_t v25 = OUTLINED_FUNCTION_6_1();
      v26(v25);
      OUTLINED_FUNCTION_9_1();
      uint64_t v27 = OUTLINED_FUNCTION_22_1();
      v28(v27);
      uint64_t v29 = OUTLINED_FUNCTION_18_1();
      v30(v29);
    }
  }
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_26();
}

void sub_1C64A8578()
{
  OUTLINED_FUNCTION_25();
  uint64_t v29 = v2;
  sub_1C6576320();
  OUTLINED_FUNCTION_0();
  uint64_t v4 = v3;
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_22();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFC3A0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_23_1();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF8F90);
  sub_1C64B03F4();
  OUTLINED_FUNCTION_27_1();
  if (!v0)
  {
    LOBYTE(v30[0]) = 0;
    sub_1C64B0524(&qword_1EBBFC2B0, MEMORY[0x1E4FA5210]);
    OUTLINED_FUNCTION_7_2();
    sub_1C6576300();
    uint64_t v8 = v7;
    sub_1C6576C80();
    OUTLINED_FUNCTION_60();
    if (v1 && OUTLINED_FUNCTION_49())
    {
      OUTLINED_FUNCTION_84();
      OUTLINED_FUNCTION_32_1();
      v30[3] = v8;
      v30[4] = v4;
      __swift_allocate_boxed_opaque_existential_1Tm(v30);
      OUTLINED_FUNCTION_26_1();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFC398);
      if (swift_dynamicCast())
      {
        uint64_t v17 = v31;
        if (v31)
        {
          uint64_t v18 = *(void (**)(uint64_t))(v4 + 8);
          swift_unknownObjectRetain();
          uint64_t v19 = OUTLINED_FUNCTION_93();
          v18(v19);
          OUTLINED_FUNCTION_1();
          v20();
          *uint64_t v29 = v17;
LABEL_12:
          swift_unknownObjectRelease();
          goto LABEL_6;
        }
      }
      else
      {
        uint64_t v31 = 0;
      }
      uint64_t v21 = type metadata accessor for CodingErrors();
      sub_1C64B0524(&qword_1EA3F07C8, (void (*)(uint64_t))type metadata accessor for CodingErrors);
      OUTLINED_FUNCTION_11_1();
      OUTLINED_FUNCTION_44();
      uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F07D0);
      OUTLINED_FUNCTION_17_1(v21, v23, v24, v22);
      uint64_t v25 = OUTLINED_FUNCTION_4_2();
      v26(v25);
      uint64_t v27 = OUTLINED_FUNCTION_18_1();
      v28(v27);
      goto LABEL_12;
    }
    uint64_t v9 = type metadata accessor for CodingErrors();
    sub_1C64B0524(&qword_1EA3F07C8, (void (*)(uint64_t))type metadata accessor for CodingErrors);
    OUTLINED_FUNCTION_11_1();
    OUTLINED_FUNCTION_44();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F07D0);
    OUTLINED_FUNCTION_40();
    *(void *)(v9 + 24) = &unk_1F215D2A0;
    unint64_t v10 = sub_1C64B06D4();
    OUTLINED_FUNCTION_61(v10);
    uint64_t v11 = OUTLINED_FUNCTION_6_1();
    v12(v11);
    OUTLINED_FUNCTION_9_1();
    uint64_t v13 = OUTLINED_FUNCTION_22_1();
    v14(v13);
    uint64_t v15 = OUTLINED_FUNCTION_18_1();
    v16(v15);
  }
LABEL_6:
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_26();
}

void sub_1C64A88F0()
{
  OUTLINED_FUNCTION_25();
  unint64_t v34 = v2;
  sub_1C6576320();
  OUTLINED_FUNCTION_0();
  uint64_t v4 = v3;
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_22();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFC3A0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_23_1();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF8F90);
  sub_1C64B03F4();
  OUTLINED_FUNCTION_27_1();
  if (!v0)
  {
    uint64_t v33 = v4;
    LOBYTE(v35[0]) = 0;
    sub_1C64B0524(&qword_1EBBFC2B0, MEMORY[0x1E4FA5210]);
    OUTLINED_FUNCTION_7_2();
    sub_1C6576300();
    sub_1C6576C80();
    OUTLINED_FUNCTION_60();
    if (v1)
    {
      uint64_t v7 = OUTLINED_FUNCTION_49();
      if (v7)
      {
        uint64_t v9 = v7;
        uint64_t v10 = v8;
        OUTLINED_FUNCTION_32_1();
        v35[3] = v9;
        v35[4] = v10;
        __swift_allocate_boxed_opaque_existential_1Tm(v35);
        OUTLINED_FUNCTION_26_1();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFC398);
        if (swift_dynamicCast())
        {
          uint64_t v19 = v36;
          if (v36)
          {
            uint64_t v20 = v38;
            uint64_t v32 = v37;
            uint64_t v21 = *(void (**)(uint64_t))(v33 + 8);
            swift_unknownObjectRetain();
            swift_bridgeObjectRetain();
            uint64_t v22 = OUTLINED_FUNCTION_93();
            v21(v22);
            OUTLINED_FUNCTION_1();
            v23();
            uint64_t *v34 = v19;
            v34[1] = v32;
            v34[2] = v20;
LABEL_12:
            sub_1C64B0720(v36);
            goto LABEL_6;
          }
        }
        else
        {
          uint64_t v36 = 0;
          uint64_t v37 = 0;
          uint64_t v38 = 0;
        }
        uint64_t v24 = type metadata accessor for CodingErrors();
        sub_1C64B0524(&qword_1EA3F07C8, (void (*)(uint64_t))type metadata accessor for CodingErrors);
        OUTLINED_FUNCTION_11_1();
        OUTLINED_FUNCTION_44();
        uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F07D0);
        OUTLINED_FUNCTION_17_1(v24, v26, v27, v25);
        uint64_t v28 = OUTLINED_FUNCTION_4_2();
        v29(v28);
        uint64_t v30 = OUTLINED_FUNCTION_18_1();
        v31(v30);
        goto LABEL_12;
      }
    }
    uint64_t v11 = type metadata accessor for CodingErrors();
    sub_1C64B0524(&qword_1EA3F07C8, (void (*)(uint64_t))type metadata accessor for CodingErrors);
    OUTLINED_FUNCTION_11_1();
    OUTLINED_FUNCTION_44();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F07D0);
    OUTLINED_FUNCTION_40();
    *(void *)(v11 + 24) = &unk_1F215D2A0;
    unint64_t v12 = sub_1C64B06D4();
    OUTLINED_FUNCTION_61(v12);
    uint64_t v13 = OUTLINED_FUNCTION_6_1();
    v14(v13);
    OUTLINED_FUNCTION_9_1();
    uint64_t v15 = OUTLINED_FUNCTION_22_1();
    v16(v15);
    uint64_t v17 = OUTLINED_FUNCTION_18_1();
    v18(v17);
  }
LABEL_6:
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_26();
}

void sub_1C64A8C94()
{
}

void sub_1C64A8CD0()
{
  OUTLINED_FUNCTION_25();
  uint64_t v29 = v2;
  sub_1C6576320();
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v3);
  OUTLINED_FUNCTION_22();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFC3A0);
  OUTLINED_FUNCTION_0();
  uint64_t v5 = v4;
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_10();
  __swift_instantiateConcreteTypeFromMangledName(qword_1EBBFBE80);
  sub_1C64B03F4();
  OUTLINED_FUNCTION_27_1();
  if (!v0)
  {
    v33[0] = 0;
    sub_1C64B0524(&qword_1EBBFC2B0, MEMORY[0x1E4FA5210]);
    OUTLINED_FUNCTION_7_2();
    sub_1C6576300();
    sub_1C6576C80();
    OUTLINED_FUNCTION_60();
    if (v1 && (uint64_t v7 = OUTLINED_FUNCTION_49()) != 0)
    {
      uint64_t v9 = v7;
      uint64_t v10 = v8;
      OUTLINED_FUNCTION_76();
      OUTLINED_FUNCTION_86();
      uint64_t v31 = v9;
      uint64_t v32 = v10;
      __swift_allocate_boxed_opaque_existential_1Tm((uint64_t *)&v30);
      OUTLINED_FUNCTION_26_1();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFC398);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFBE68);
      if ((OUTLINED_FUNCTION_71() & 1) == 0) {
        memset(v33, 0, 48);
      }
      sub_1C64B07F8((uint64_t)v33, (uint64_t)&v30, &qword_1EBBFBE70);
      if (v31)
      {
        uint64_t v18 = OUTLINED_FUNCTION_5_2();
        v19(v18);
        uint64_t v20 = OUTLINED_FUNCTION_31_1();
        v21(v20);
        sub_1C64A7BBC(&v30, v29);
      }
      else
      {
        sub_1C64B0858((uint64_t)&v30, &qword_1EBBFBE70);
        type metadata accessor for CodingErrors();
        sub_1C64B0524(&qword_1EA3F07C8, (void (*)(uint64_t))type metadata accessor for CodingErrors);
        OUTLINED_FUNCTION_25_1();
        OUTLINED_FUNCTION_38();
        uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F07D0);
        OUTLINED_FUNCTION_17_1(v5, v23, v24, v22);
        uint64_t v25 = OUTLINED_FUNCTION_5_2();
        v26(v25);
        uint64_t v27 = OUTLINED_FUNCTION_30_1();
        v28(v27);
      }
      sub_1C64B0858((uint64_t)v33, &qword_1EBBFBE70);
    }
    else
    {
      uint64_t v11 = type metadata accessor for CodingErrors();
      sub_1C64B0524(&qword_1EA3F07C8, (void (*)(uint64_t))type metadata accessor for CodingErrors);
      OUTLINED_FUNCTION_11_1();
      OUTLINED_FUNCTION_44();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F07D0);
      OUTLINED_FUNCTION_40();
      *(void *)(v11 + 24) = &unk_1F215F968;
      *(void *)(v11 + 32) = sub_1C64B063C();
      uint64_t v12 = OUTLINED_FUNCTION_6_1();
      v13(v12);
      OUTLINED_FUNCTION_9_1();
      uint64_t v14 = OUTLINED_FUNCTION_22_1();
      v15(v14);
      uint64_t v16 = OUTLINED_FUNCTION_18_1();
      v17(v16);
    }
  }
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_26();
}

void sub_1C64A9078()
{
  OUTLINED_FUNCTION_25();
  OUTLINED_FUNCTION_64();
  uint64_t v32 = v2;
  sub_1C6576320();
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v3);
  OUTLINED_FUNCTION_23();
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFC3A0);
  OUTLINED_FUNCTION_0();
  uint64_t v33 = v5;
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_47();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFBE78);
  sub_1C64B03F4();
  OUTLINED_FUNCTION_73();
  if (!v0)
  {
    v38[0] = 0;
    sub_1C64B0524(&qword_1EBBFC2B0, MEMORY[0x1E4FA5210]);
    OUTLINED_FUNCTION_65();
    sub_1C6576300();
    uint64_t v7 = sub_1C6576C80();
    swift_bridgeObjectRelease();
    if (v7 && (uint64_t v8 = OUTLINED_FUNCTION_49()) != 0)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v9;
      OUTLINED_FUNCTION_76();
      OUTLINED_FUNCTION_87();
      *((void *)&v35 + 1) = v10;
      *(void *)&long long v36 = v11;
      __swift_allocate_boxed_opaque_existential_1Tm((uint64_t *)&v34);
      OUTLINED_FUNCTION_83();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFC398);
      if ((swift_dynamicCast() & 1) == 0) {
        memset(v38, 0, 64);
      }
      sub_1C64B07F8((uint64_t)v38, (uint64_t)&v34, &qword_1EA3F0818);
      if (*((void *)&v34 + 1))
      {
        uint64_t v18 = OUTLINED_FUNCTION_80();
        v19(v18);
        uint64_t v20 = OUTLINED_FUNCTION_0_1();
        v21(v20);
        long long v22 = v35;
        *uint64_t v32 = v34;
        v32[1] = v22;
        long long v23 = v37;
        v32[2] = v36;
        v32[3] = v23;
      }
      else
      {
        sub_1C64B0858((uint64_t)&v34, &qword_1EA3F0818);
        uint64_t v24 = type metadata accessor for CodingErrors();
        sub_1C64B0524(&qword_1EA3F07C8, (void (*)(uint64_t))type metadata accessor for CodingErrors);
        OUTLINED_FUNCTION_25_1();
        OUTLINED_FUNCTION_90();
        uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F07D0);
        OUTLINED_FUNCTION_17_1(v24, v26, v27, v25);
        uint64_t v28 = OUTLINED_FUNCTION_80();
        v29(v28);
        uint64_t v30 = OUTLINED_FUNCTION_0_1();
        v31(v30);
      }
      sub_1C64B0858((uint64_t)v38, &qword_1EA3F0818);
    }
    else
    {
      uint64_t v12 = type metadata accessor for CodingErrors();
      sub_1C64B0524(&qword_1EA3F07C8, (void (*)(uint64_t))type metadata accessor for CodingErrors);
      OUTLINED_FUNCTION_25_1();
      OUTLINED_FUNCTION_90();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F07D0);
      *(void *)(v12 + 24) = &unk_1F215FA70;
      *(void *)(v12 + 32) = sub_1C64B05B8();
      uint64_t v13 = swift_allocObject();
      OUTLINED_FUNCTION_63(v13);
      uint64_t v14 = OUTLINED_FUNCTION_57();
      v15(v14);
      OUTLINED_FUNCTION_88();
      swift_willThrow();
      uint64_t v16 = OUTLINED_FUNCTION_79();
      v17(v16);
      (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v1, v4);
    }
  }
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_26();
}

void sub_1C64A94D8()
{
  OUTLINED_FUNCTION_25();
  uint64_t v30 = v2;
  sub_1C6576320();
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v3);
  OUTLINED_FUNCTION_22();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFC3A0);
  OUTLINED_FUNCTION_0();
  uint64_t v5 = v4;
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_23_1();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F07C0);
  sub_1C64B03F4();
  OUTLINED_FUNCTION_27_1();
  if (!v0)
  {
    v34[0] = 0;
    sub_1C64B0524(&qword_1EBBFC2B0, MEMORY[0x1E4FA5210]);
    OUTLINED_FUNCTION_7_2();
    sub_1C6576300();
    sub_1C6576C80();
    OUTLINED_FUNCTION_60();
    if (v1 && (uint64_t v7 = OUTLINED_FUNCTION_49()) != 0)
    {
      uint64_t v9 = v7;
      uint64_t v10 = v8;
      OUTLINED_FUNCTION_32_1();
      uint64_t v32 = v9;
      uint64_t v33 = v10;
      __swift_allocate_boxed_opaque_existential_1Tm((uint64_t *)&v31);
      OUTLINED_FUNCTION_26_1();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFC398);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFBE68);
      if ((OUTLINED_FUNCTION_71() & 1) == 0) {
        memset(v34, 0, 48);
      }
      sub_1C64B07F8((uint64_t)v34, (uint64_t)&v31, &qword_1EBBFBE70);
      if (v32)
      {
        uint64_t v19 = OUTLINED_FUNCTION_5_2();
        v20(v19);
        uint64_t v21 = OUTLINED_FUNCTION_31_1();
        v22(v21);
        sub_1C64A7BBC(&v31, v30);
      }
      else
      {
        sub_1C64B0858((uint64_t)&v31, &qword_1EBBFBE70);
        type metadata accessor for CodingErrors();
        sub_1C64B0524(&qword_1EA3F07C8, (void (*)(uint64_t))type metadata accessor for CodingErrors);
        OUTLINED_FUNCTION_25_1();
        OUTLINED_FUNCTION_38();
        uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F07D0);
        OUTLINED_FUNCTION_17_1(v5, v24, v25, v23);
        uint64_t v26 = OUTLINED_FUNCTION_5_2();
        v27(v26);
        uint64_t v28 = OUTLINED_FUNCTION_30_1();
        v29(v28);
      }
      sub_1C64B0858((uint64_t)v34, &qword_1EBBFBE70);
    }
    else
    {
      uint64_t v11 = type metadata accessor for CodingErrors();
      sub_1C64B0524(&qword_1EA3F07C8, (void (*)(uint64_t))type metadata accessor for CodingErrors);
      OUTLINED_FUNCTION_11_1();
      OUTLINED_FUNCTION_44();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F07D0);
      OUTLINED_FUNCTION_40();
      *(void *)(v11 + 24) = &unk_1F215F208;
      unint64_t v12 = sub_1C64B0440();
      OUTLINED_FUNCTION_61(v12);
      uint64_t v13 = OUTLINED_FUNCTION_6_1();
      v14(v13);
      OUTLINED_FUNCTION_9_1();
      uint64_t v15 = OUTLINED_FUNCTION_22_1();
      v16(v15);
      uint64_t v17 = OUTLINED_FUNCTION_18_1();
      v18(v17);
    }
  }
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_26();
}

void sub_1C64A988C()
{
  OUTLINED_FUNCTION_25();
  uint64_t v29 = v2;
  sub_1C6576320();
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v3);
  OUTLINED_FUNCTION_22();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFC3A0);
  OUTLINED_FUNCTION_0();
  uint64_t v5 = v4;
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_10();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F0890);
  sub_1C64B03F4();
  OUTLINED_FUNCTION_27_1();
  if (!v0)
  {
    v33[0] = 0;
    sub_1C64B0524(&qword_1EBBFC2B0, MEMORY[0x1E4FA5210]);
    OUTLINED_FUNCTION_7_2();
    sub_1C6576300();
    sub_1C6576C80();
    OUTLINED_FUNCTION_60();
    if (v1 && (uint64_t v7 = OUTLINED_FUNCTION_49()) != 0)
    {
      uint64_t v9 = v7;
      uint64_t v10 = v8;
      OUTLINED_FUNCTION_76();
      OUTLINED_FUNCTION_86();
      uint64_t v31 = v9;
      uint64_t v32 = v10;
      __swift_allocate_boxed_opaque_existential_1Tm((uint64_t *)&v30);
      OUTLINED_FUNCTION_26_1();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFC398);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFB8A8);
      if ((OUTLINED_FUNCTION_71() & 1) == 0) {
        memset(v33, 0, 64);
      }
      sub_1C64B07F8((uint64_t)v33, (uint64_t)&v30, &qword_1EA3F08A0);
      if (v31)
      {
        uint64_t v18 = OUTLINED_FUNCTION_5_2();
        v19(v18);
        uint64_t v20 = OUTLINED_FUNCTION_31_1();
        v21(v20);
        sub_1C64B08AC(&v30, v29);
      }
      else
      {
        sub_1C64B0858((uint64_t)&v30, &qword_1EA3F08A0);
        type metadata accessor for CodingErrors();
        sub_1C64B0524(&qword_1EA3F07C8, (void (*)(uint64_t))type metadata accessor for CodingErrors);
        OUTLINED_FUNCTION_25_1();
        OUTLINED_FUNCTION_38();
        uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F07D0);
        OUTLINED_FUNCTION_17_1(v5, v23, v24, v22);
        uint64_t v25 = OUTLINED_FUNCTION_5_2();
        v26(v25);
        uint64_t v27 = OUTLINED_FUNCTION_30_1();
        v28(v27);
      }
      sub_1C64B0858((uint64_t)v33, &qword_1EA3F08A0);
    }
    else
    {
      uint64_t v11 = type metadata accessor for CodingErrors();
      sub_1C64B0524(&qword_1EA3F07C8, (void (*)(uint64_t))type metadata accessor for CodingErrors);
      OUTLINED_FUNCTION_11_1();
      OUTLINED_FUNCTION_44();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F07D0);
      OUTLINED_FUNCTION_40();
      *(void *)(v11 + 24) = &unk_1F2159680;
      *(void *)(v11 + 32) = sub_1C64B07AC();
      uint64_t v12 = OUTLINED_FUNCTION_6_1();
      v13(v12);
      OUTLINED_FUNCTION_9_1();
      uint64_t v14 = OUTLINED_FUNCTION_22_1();
      v15(v14);
      uint64_t v16 = OUTLINED_FUNCTION_18_1();
      v17(v16);
    }
  }
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_26();
}

void sub_1C64A9C68()
{
}

void sub_1C64A9CA4()
{
  OUTLINED_FUNCTION_25();
  uint64_t v33 = v2;
  long long v34 = v3;
  uint64_t v32 = v4;
  OUTLINED_FUNCTION_64();
  uint64_t v31 = v5;
  sub_1C6576320();
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_23();
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFC3A0);
  OUTLINED_FUNCTION_0();
  uint64_t v35 = v8;
  MEMORY[0x1F4188790](v9);
  OUTLINED_FUNCTION_47();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFBE78);
  sub_1C64B03F4();
  OUTLINED_FUNCTION_73();
  if (!v0)
  {
    v39[0] = 0;
    sub_1C64B0524(&qword_1EBBFC2B0, MEMORY[0x1E4FA5210]);
    OUTLINED_FUNCTION_65();
    sub_1C6576300();
    uint64_t v10 = sub_1C6576C80();
    swift_bridgeObjectRelease();
    if (v10 && (uint64_t v11 = OUTLINED_FUNCTION_49()) != 0)
    {
      uint64_t v13 = v11;
      uint64_t v14 = v12;
      OUTLINED_FUNCTION_76();
      OUTLINED_FUNCTION_87();
      uint64_t v37 = v13;
      uint64_t v38 = v14;
      __swift_allocate_boxed_opaque_existential_1Tm(v36);
      OUTLINED_FUNCTION_83();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFC398);
      __swift_instantiateConcreteTypeFromMangledName(v32);
      if ((swift_dynamicCast() & 1) == 0) {
        memset(v39, 0, 48);
      }
      sub_1C64B07F8((uint64_t)v39, (uint64_t)v36, v34);
      if (v37)
      {
        uint64_t v21 = OUTLINED_FUNCTION_75();
        v22(v21);
        uint64_t v23 = OUTLINED_FUNCTION_0_1();
        v24(v23);
        v33(v36, v31);
      }
      else
      {
        sub_1C64B0858((uint64_t)v36, v34);
        uint64_t v25 = type metadata accessor for CodingErrors();
        sub_1C64B0524(&qword_1EA3F07C8, (void (*)(uint64_t))type metadata accessor for CodingErrors);
        OUTLINED_FUNCTION_25_1();
        OUTLINED_FUNCTION_90();
        uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F07D0);
        OUTLINED_FUNCTION_17_1(v25, v27, v28, v26);
        uint64_t v29 = OUTLINED_FUNCTION_75();
        v30(v29);
        (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v1, v7);
      }
      sub_1C64B0858((uint64_t)v39, v34);
    }
    else
    {
      uint64_t v15 = type metadata accessor for CodingErrors();
      sub_1C64B0524(&qword_1EA3F07C8, (void (*)(uint64_t))type metadata accessor for CodingErrors);
      OUTLINED_FUNCTION_25_1();
      OUTLINED_FUNCTION_90();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F07D0);
      *(void *)(v15 + 24) = &unk_1F215FA70;
      *(void *)(v15 + 32) = sub_1C64B05B8();
      uint64_t v16 = swift_allocObject();
      OUTLINED_FUNCTION_63(v16);
      uint64_t v17 = OUTLINED_FUNCTION_57();
      v18(v17);
      OUTLINED_FUNCTION_88();
      swift_willThrow();
      uint64_t v19 = OUTLINED_FUNCTION_79();
      v20(v19);
      (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v1, v7);
    }
  }
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_26();
}

void sub_1C64AA104(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  OUTLINED_FUNCTION_25();
  OUTLINED_FUNCTION_72(v15);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v16);
  OUTLINED_FUNCTION_22();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFC3A0);
  OUTLINED_FUNCTION_0();
  uint64_t v18 = v17;
  MEMORY[0x1F4188790](v19);
  OUTLINED_FUNCTION_23_1();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F0830);
  sub_1C64B03F4();
  OUTLINED_FUNCTION_27_1();
  if (!v13)
  {
    v46[0] = 0;
    sub_1C64B0524(&qword_1EBBFC2B0, MEMORY[0x1E4FA5210]);
    OUTLINED_FUNCTION_7_2();
    sub_1C6576300();
    sub_1C6576C80();
    OUTLINED_FUNCTION_60();
    if (v14 && (uint64_t v20 = OUTLINED_FUNCTION_49()) != 0)
    {
      uint64_t v22 = v20;
      uint64_t v23 = v21;
      OUTLINED_FUNCTION_32_1();
      uint64_t v44 = v22;
      uint64_t v45 = v23;
      __swift_allocate_boxed_opaque_existential_1Tm((uint64_t *)&v43);
      OUTLINED_FUNCTION_26_1();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFC398);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F0840);
      if ((OUTLINED_FUNCTION_71() & 1) == 0)
      {
        uint64_t v47 = 0;
        memset(v46, 0, sizeof(v46));
      }
      sub_1C64B07F8((uint64_t)v46, (uint64_t)&v43, &qword_1EBBF8DA0);
      if (v44)
      {
        uint64_t v31 = OUTLINED_FUNCTION_5_2();
        v32(v31);
        uint64_t v33 = OUTLINED_FUNCTION_31_1();
        v34(v33);
        sub_1C64A5488(&v43, v42);
      }
      else
      {
        sub_1C64B0858((uint64_t)&v43, &qword_1EBBF8DA0);
        type metadata accessor for CodingErrors();
        sub_1C64B0524(&qword_1EA3F07C8, (void (*)(uint64_t))type metadata accessor for CodingErrors);
        OUTLINED_FUNCTION_25_1();
        OUTLINED_FUNCTION_38();
        uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F07D0);
        OUTLINED_FUNCTION_17_1(v18, v36, v37, v35);
        uint64_t v38 = OUTLINED_FUNCTION_5_2();
        v39(v38);
        uint64_t v40 = OUTLINED_FUNCTION_30_1();
        v41(v40);
      }
      sub_1C64B0858((uint64_t)v46, &qword_1EBBF8DA0);
    }
    else
    {
      uint64_t v24 = type metadata accessor for CodingErrors();
      sub_1C64B0524(&qword_1EA3F07C8, (void (*)(uint64_t))type metadata accessor for CodingErrors);
      OUTLINED_FUNCTION_11_1();
      OUTLINED_FUNCTION_44();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F07D0);
      OUTLINED_FUNCTION_40();
      *(void *)(v24 + 24) = &unk_1F215ED20;
      *(void *)(v24 + 32) = sub_1C64B0688();
      *(unsigned char *)uint64_t v24 = a13;
      uint64_t v25 = OUTLINED_FUNCTION_6_1();
      v26(v25);
      OUTLINED_FUNCTION_9_1();
      uint64_t v27 = OUTLINED_FUNCTION_22_1();
      v28(v27);
      uint64_t v29 = OUTLINED_FUNCTION_18_1();
      v30(v29);
    }
  }
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_26();
}

uint64_t sub_1C64AA4AC@<X0>(char a1@<W0>, _OWORD *a2@<X8>)
{
  long long v34 = a2;
  uint64_t v4 = sub_1C6576320();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFC3A0);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v40 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F0720);
  sub_1C64B03F4();
  uint64_t result = sub_1C6576E80();
  if (!v2)
  {
    uint64_t v32 = v5;
    uint64_t v33 = v9;
    uint64_t v13 = v34;
    LOBYTE(v38[0]) = 0;
    sub_1C64B0524(&qword_1EBBFC2B0, MEMORY[0x1E4FA5210]);
    sub_1C6576F30();
    sub_1C6576300();
    uint64_t v14 = sub_1C6576C80();
    swift_bridgeObjectRelease();
    if (v14 && (uint64_t v15 = dynamic_cast_existential_1_conditional(v14)) != 0)
    {
      uint64_t v17 = v15;
      uint64_t v18 = v16;
      char v39 = 1;
      sub_1C6576EA0();
      uint64_t v36 = v17;
      uint64_t v37 = v18;
      __swift_allocate_boxed_opaque_existential_1Tm((uint64_t *)&v35);
      sub_1C65769A0();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFC398);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFBE10);
      char v24 = swift_dynamicCast();
      uint64_t v26 = v32;
      uint64_t v25 = v33;
      if ((v24 & 1) == 0) {
        memset(v38, 0, 48);
      }
      sub_1C64B07F8((uint64_t)v38, (uint64_t)&v35, &qword_1EA3F0800);
      if (v36)
      {
        (*(void (**)(char *, uint64_t))(v26 + 8))(v7, v4);
        (*(void (**)(char *, uint64_t))(v25 + 8))(v11, v8);
        sub_1C64A7BBC(&v35, v13);
      }
      else
      {
        sub_1C64B0858((uint64_t)&v35, &qword_1EA3F0800);
        type metadata accessor for CodingErrors();
        sub_1C64B0524(&qword_1EA3F07C8, (void (*)(uint64_t))type metadata accessor for CodingErrors);
        swift_allocError();
        uint64_t v27 = v8;
        uint64_t v28 = v25;
        uint64_t v30 = v29;
        uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F07D0);
        __swift_storeEnumTagSinglePayload(v30, 1, 1, v31);
        swift_willThrow();
        (*(void (**)(char *, uint64_t))(v26 + 8))(v7, v4);
        (*(void (**)(char *, uint64_t))(v28 + 8))(v11, v27);
      }
      return sub_1C64B0858((uint64_t)v38, &qword_1EA3F0800);
    }
    else
    {
      type metadata accessor for CodingErrors();
      sub_1C64B0524(&qword_1EA3F07C8, (void (*)(uint64_t))type metadata accessor for CodingErrors);
      swift_allocError();
      uint64_t v20 = v19;
      uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F07D0);
      uint64_t v22 = v20 + *(int *)(v21 + 48);
      *(void *)(v20 + 24) = &unk_1F2158D90;
      *(void *)(v20 + 32) = sub_1C64A7DA0();
      *(unsigned char *)uint64_t v20 = v40;
      uint64_t v23 = v32;
      (*(void (**)(uint64_t, char *, uint64_t))(v32 + 16))(v22, v7, v4);
      __swift_storeEnumTagSinglePayload(v20, 0, 1, v21);
      swift_willThrow();
      (*(void (**)(char *, uint64_t))(v23 + 8))(v7, v4);
      return (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v11, v8);
    }
  }
  return result;
}

unint64_t sub_1C64AAA3C()
{
  unint64_t result = qword_1EA3F0730;
  if (!qword_1EA3F0730)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F0730);
  }
  return result;
}

void SalientEntity.encode(to:)()
{
  OUTLINED_FUNCTION_25();
  uint64_t v3 = v0;
  uint64_t v5 = v4;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F0738);
  OUTLINED_FUNCTION_0();
  uint64_t v8 = v7;
  MEMORY[0x1F4188790](v9);
  OUTLINED_FUNCTION_23();
  __swift_project_boxed_opaque_existential_1(v5, v5[3]);
  sub_1C64A7DA0();
  sub_1C6577240();
  uint64_t v10 = *(void *)(v3 + 24);
  uint64_t v11 = *(void *)(v3 + 40);
  __swift_project_boxed_opaque_existential_1((void *)v3, v10);
  v14[3] = v10;
  v14[4] = v11;
  __swift_allocate_boxed_opaque_existential_1Tm(v14);
  OUTLINED_FUNCTION_67();
  (*(void (**)(void))(v12 + 16))();
  sub_1C64AACBC();
  if (v1)
  {
    OUTLINED_FUNCTION_41();
    v13();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
    LOBYTE(v14[0]) = *(unsigned char *)(v3 + 48);
    OUTLINED_FUNCTION_76();
    sub_1C64AB218();
    sub_1C6577010();
    LOBYTE(v14[0]) = 2;
    sub_1C6576FF0();
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v2, v6);
  }
  OUTLINED_FUNCTION_26();
}

void sub_1C64AAC5C()
{
}

void sub_1C64AAC7C()
{
}

void sub_1C64AAC9C()
{
}

void sub_1C64AACBC()
{
  OUTLINED_FUNCTION_25();
  sub_1C6576320();
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v1);
  OUTLINED_FUNCTION_20();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFC448);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v2);
  OUTLINED_FUNCTION_62();
  sub_1C64B03F4();
  sub_1C6576F70();
  OUTLINED_FUNCTION_46();
  sub_1C65762F0();
  char v6 = 0;
  sub_1C64B0524(&qword_1EBBFC458, MEMORY[0x1E4FA5210]);
  OUTLINED_FUNCTION_59();
  uint64_t v3 = OUTLINED_FUNCTION_24_0();
  v4(v3);
  if (!v0)
  {
    OUTLINED_FUNCTION_56();
    OUTLINED_FUNCTION_50();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v6);
  }
  OUTLINED_FUNCTION_35_0();
  v5();
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_26();
}

void sub_1C64AAE44()
{
}

void sub_1C64AAE64()
{
}

void sub_1C64AAE84()
{
  OUTLINED_FUNCTION_25();
  sub_1C6576320();
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v1);
  OUTLINED_FUNCTION_20();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFC448);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v2);
  OUTLINED_FUNCTION_62();
  sub_1C64B03F4();
  sub_1C6576F70();
  OUTLINED_FUNCTION_46();
  sub_1C65762F0();
  char v6 = 0;
  sub_1C64B0524(&qword_1EBBFC458, MEMORY[0x1E4FA5210]);
  OUTLINED_FUNCTION_59();
  uint64_t v3 = OUTLINED_FUNCTION_24_0();
  v4(v3);
  if (!v0)
  {
    OUTLINED_FUNCTION_56();
    OUTLINED_FUNCTION_50();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v6);
  }
  OUTLINED_FUNCTION_35_0();
  v5();
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_26();
}

void sub_1C64AB00C()
{
}

void sub_1C64AB02C()
{
  OUTLINED_FUNCTION_25();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  sub_1C6576320();
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_20();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFC448);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_10();
  __swift_instantiateConcreteTypeFromMangledName(v2);
  sub_1C64B03F4();
  sub_1C6576F70();
  OUTLINED_FUNCTION_46();
  sub_1C65762F0();
  char v12 = 0;
  sub_1C64B0524(&qword_1EBBFC458, MEMORY[0x1E4FA5210]);
  sub_1C6577010();
  uint64_t v7 = OUTLINED_FUNCTION_24_0();
  v8(v7);
  if (!v0)
  {
    __swift_project_boxed_opaque_existential_1(v4, v4[3]);
    sub_1C6576F80();
    OUTLINED_FUNCTION_50();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v12);
  }
  OUTLINED_FUNCTION_35_0();
  v11(v9, v10);
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_26();
}

void sub_1C64AB1F8()
{
}

unint64_t sub_1C64AB218()
{
  unint64_t result = qword_1EA3F0740;
  if (!qword_1EA3F0740)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F0740);
  }
  return result;
}

uint64_t SalientEntity.debugValue.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFB7D0);
  uint64_t v6 = OUTLINED_FUNCTION_92(v5);
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_23();
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFB7D8);
  uint64_t v8 = OUTLINED_FUNCTION_92(v7);
  MEMORY[0x1F4188790](v8);
  OUTLINED_FUNCTION_68();
  switch(v9)
  {
    case 1:
      OUTLINED_FUNCTION_55_0();
      goto LABEL_5;
    case 2:
      swift_bridgeObjectRelease();
      goto LABEL_6;
    case 3:
      OUTLINED_FUNCTION_5();
      goto LABEL_5;
    default:
LABEL_5:
      char v10 = sub_1C6577090();
      swift_bridgeObjectRelease();
      if (v10)
      {
LABEL_6:
        sub_1C64A7B04(v1, (uint64_t)v22);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFBE10);
        uint64_t v11 = sub_1C6576340();
        if ((swift_dynamicCast() & 1) == 0)
        {
          OUTLINED_FUNCTION_85();
          __swift_storeEnumTagSinglePayload(v17, v18, v19, v11);
          uint64_t v14 = &qword_1EBBFB7D0;
          uint64_t v15 = v3;
          goto LABEL_13;
        }
        __swift_storeEnumTagSinglePayload(v3, 0, 1, v11);
        sub_1C6576330();
        OUTLINED_FUNCTION_67();
        OUTLINED_FUNCTION_1();
        v12();
        uint64_t v13 = sub_1C65763B0();
        if (__swift_getEnumTagSinglePayload(v2, 1, v13) == 1)
        {
          uint64_t v14 = &qword_1EBBFB7D8;
          uint64_t v15 = v2;
LABEL_13:
          uint64_t result = sub_1C64B0858(v15, v14);
          *(_OWORD *)(a1 + 16) = 0u;
          *(_OWORD *)(a1 + 32) = 0u;
          *(_OWORD *)a1 = 0u;
          return result;
        }
        *(void *)(a1 + 24) = v13;
        uint64_t v20 = (void (*)(uint64_t))MEMORY[0x1E4FAFAB0];
        *(void *)(a1 + 32) = sub_1C64B0524(&qword_1EA3F0748, MEMORY[0x1E4FAFAB0]);
        *(void *)(a1 + 40) = sub_1C64B0524(&qword_1EA3F0750, v20);
        __swift_allocate_boxed_opaque_existential_1Tm((uint64_t *)a1);
        OUTLINED_FUNCTION_67();
        return (*(uint64_t (**)(void))(v21 + 32))();
      }
      else
      {
        return sub_1C64A7B04(v1, a1);
      }
  }
}

uint64_t sub_1C64AB564(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x65756C6176 && a2 == 0xE500000000000000;
  if (v2 || (OUTLINED_FUNCTION_70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 1701869940 && a2 == 0xE400000000000000;
    if (v6 || (OUTLINED_FUNCTION_70() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x65726F6373 && a2 == 0xE500000000000000)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      char v8 = OUTLINED_FUNCTION_70();
      swift_bridgeObjectRelease();
      if (v8) {
        return 2;
      }
      else {
        return 3;
      }
    }
  }
}

uint64_t sub_1C64AB670(char a1)
{
  if (!a1) {
    return 0x65756C6176;
  }
  if (a1 == 1) {
    return 1701869940;
  }
  return 0x65726F6373;
}

uint64_t sub_1C64AB6B8()
{
  return sub_1C64AB670(*v0);
}

uint64_t sub_1C64AB6C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C64AB564(a1, a2);
  *a3 = result;
  return result;
}

void sub_1C64AB6E8(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_1C64AB6F4(uint64_t a1)
{
  unint64_t v2 = sub_1C64A7DA0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C64AB730(uint64_t a1)
{
  unint64_t v2 = sub_1C64A7DA0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C64AB76C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return SalientEntity.init(from:)(a1, a2);
}

void sub_1C64AB784()
{
}

uint64_t AppInView.appBundleID.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AppInView.appBundleID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *unint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*AppInView.appBundleID.modify())()
{
  return nullsub_1;
}

uint64_t AppInView.isInFocus.getter()
{
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t AppInView.isInFocus.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 16) = result;
  return result;
}

uint64_t (*AppInView.isInFocus.modify())()
{
  return nullsub_1;
}

SiriSuggestionsKit::AppInView __swiftcall AppInView.init(appBundleID:isInFocus:)(Swift::String appBundleID, Swift::Bool isInFocus)
{
  *(Swift::String *)uint64_t v2 = appBundleID;
  *(unsigned char *)(v2 + 16) = isInFocus;
  result.appBundleID = appBundleID;
  result.isInFocus = isInFocus;
  return result;
}

uint64_t sub_1C64AB860(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6C646E7542707061 && a2 == 0xEB00000000444965;
  if (v2 || (sub_1C6577090() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x75636F466E497369 && a2 == 0xE900000000000073)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_1C6577090();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1C64AB974(char a1)
{
  if (a1) {
    return 0x75636F466E497369;
  }
  else {
    return 0x6C646E7542707061;
  }
}

uint64_t sub_1C64AB9B8()
{
  return sub_1C64AB974(*v0);
}

uint64_t sub_1C64AB9C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C64AB860(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C64AB9E8(uint64_t a1)
{
  unint64_t v2 = sub_1C64ABF48();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C64ABA24(uint64_t a1)
{
  unint64_t v2 = sub_1C64ABF48();

  return MEMORY[0x1F41862B0](a1, v2);
}

void AppInView.encode(to:)()
{
  OUTLINED_FUNCTION_25();
  uint64_t v3 = v2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F0758);
  OUTLINED_FUNCTION_0();
  uint64_t v6 = v5;
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_23();
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  sub_1C64ABF48();
  sub_1C6577240();
  sub_1C6576FD0();
  if (!v0) {
    sub_1C6576FE0();
  }
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v1, v4);
  OUTLINED_FUNCTION_26();
}

void AppInView.init(from:)()
{
  OUTLINED_FUNCTION_25();
  unint64_t v2 = v1;
  uint64_t v4 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F0768);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v5);
  uint64_t v6 = v2[3];
  uint64_t v7 = v2[4];
  __swift_project_boxed_opaque_existential_1(v2, v6);
  sub_1C64ABF48();
  sub_1C6577210();
  if (v0)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v2);
  }
  else
  {
    sub_1C6576EF0();
    OUTLINED_FUNCTION_84();
    swift_bridgeObjectRetain();
    char v8 = sub_1C6576F00();
    OUTLINED_FUNCTION_41();
    v9();
    *(void *)uint64_t v4 = v7;
    *(void *)(v4 + 8) = v6;
    *(unsigned char *)(v4 + 16) = v8 & 1;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v2);
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_26();
}

void sub_1C64ABD24()
{
}

void sub_1C64ABD3C()
{
}

SiriSuggestionsKit::SalientEntityType_optional __swiftcall SalientEntityType.init(rawValue:)(Swift::String rawValue)
{
  unint64_t v2 = v1;
  unint64_t v3 = sub_1C6576E60();
  result.value = swift_bridgeObjectRelease();
  char v5 = 4;
  if (v3 < 4) {
    char v5 = v3;
  }
  *unint64_t v2 = v5;
  return result;
}

uint64_t SalientEntityType.rawValue.getter()
{
  uint64_t result = 0x7070416E65706FLL;
  switch(*v0)
  {
    case 1:
      uint64_t result = OUTLINED_FUNCTION_55_0();
      break;
    case 2:
      uint64_t result = 0xD000000000000010;
      break;
    case 3:
      uint64_t result = OUTLINED_FUNCTION_5();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C64ABE3C(unsigned __int8 *a1, char *a2)
{
  return sub_1C6498518(*a1, *a2);
}

uint64_t sub_1C64ABE48()
{
  return sub_1C655AC84(*v0);
}

uint64_t sub_1C64ABE50(uint64_t a1)
{
  return sub_1C649ABC4(a1, *v1);
}

uint64_t sub_1C64ABE58(uint64_t a1)
{
  return sub_1C64EBD30(a1, *v1);
}

SiriSuggestionsKit::SalientEntityType_optional sub_1C64ABE60(Swift::String *a1)
{
  return SalientEntityType.init(rawValue:)(*a1);
}

uint64_t sub_1C64ABE6C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = SalientEntityType.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t __swift_storeEnumTagSinglePayload(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(void *)(a4 - 8) + 56))();
}

uint64_t __swift_getEnumTagSinglePayload(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(void *)(a3 - 8) + 48))();
}

uint64_t *__swift_allocate_boxed_opaque_existential_1Tm(uint64_t *a1)
{
  uint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

unint64_t sub_1C64ABF48()
{
  unint64_t result = qword_1EA3F0760;
  if (!qword_1EA3F0760)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F0760);
  }
  return result;
}

uint64_t sub_1C64ABF94()
{
  return sub_1C6576760();
}

uint64_t sub_1C64ABFF4()
{
  return sub_1C6576750();
}

SiriSuggestionsKit::AppInView_optional __swiftcall SalientEntity.asAppInView()()
{
  uint64_t v2 = v0;
  switch(*(unsigned char *)(v1 + 48))
  {
    case 1:
    case 2:
      goto LABEL_4;
    case 3:
      OUTLINED_FUNCTION_5();
LABEL_4:
      char v3 = OUTLINED_FUNCTION_66();
      uint64_t v4 = swift_bridgeObjectRelease();
      if (v3) {
        goto LABEL_5;
      }
      goto LABEL_7;
    default:
      swift_bridgeObjectRelease();
LABEL_5:
      sub_1C64A7B04(v1, (uint64_t)v10);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFBE10);
      uint64_t v4 = swift_dynamicCast();
      if (v4)
      {
        *(void *)uint64_t v2 = v7;
        *(void *)(v2 + 8) = v8;
        *(unsigned char *)(v2 + 16) = v9;
      }
      else
      {
LABEL_7:
        *(void *)uint64_t v2 = 0;
        *(void *)(v2 + 8) = 0;
        *(unsigned char *)(v2 + 16) = 0;
      }
      result.value.appBundleID._object = v5;
      result.value.appBundleID._countAndFlagsBits = v4;
      result.value.isInFocus = v6;
      return result;
  }
}

uint64_t SalientEntity.asRetrievedContext()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFB7D0);
  uint64_t v5 = OUTLINED_FUNCTION_92(v4);
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_68();
  switch(v6)
  {
    case 1:
      OUTLINED_FUNCTION_55_0();
      goto LABEL_5;
    case 2:
      swift_bridgeObjectRelease();
      goto LABEL_6;
    case 3:
      OUTLINED_FUNCTION_5();
      goto LABEL_5;
    default:
LABEL_5:
      char v7 = sub_1C6577090();
      swift_bridgeObjectRelease();
      if ((v7 & 1) == 0) {
        goto LABEL_9;
      }
LABEL_6:
      sub_1C64A7B04(v1, (uint64_t)v18);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFBE10);
      uint64_t v8 = sub_1C6576340();
      if (swift_dynamicCast())
      {
        __swift_storeEnumTagSinglePayload(v2, 0, 1, v8);
        OUTLINED_FUNCTION_67();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 32))(a1, v2, v8);
        uint64_t v10 = a1;
        uint64_t v11 = 0;
        uint64_t v12 = 1;
        uint64_t v13 = v8;
      }
      else
      {
        OUTLINED_FUNCTION_85();
        __swift_storeEnumTagSinglePayload(v14, v15, v16, v8);
        sub_1C64B0858(v2, &qword_1EBBFB7D0);
LABEL_9:
        sub_1C6576340();
        OUTLINED_FUNCTION_85();
      }
      return __swift_storeEnumTagSinglePayload(v10, v11, v12, v13);
  }
}

uint64_t Array<A>.getValues<A>(transformer:)()
{
  return sub_1C6576710();
}

unint64_t sub_1C64AC3B8()
{
  unint64_t result = qword_1EA3F0778;
  if (!qword_1EA3F0778)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA3F0770);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F0778);
  }
  return result;
}

uint64_t Array<A>.getRetrievedContext()(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFB7D0);
  uint64_t v3 = OUTLINED_FUNCTION_92(v2);
  uint64_t v4 = MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)v30 - v7;
  uint64_t v9 = sub_1C6576340();
  OUTLINED_FUNCTION_0();
  uint64_t v11 = MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v33 = (char *)v30 - v15;
  uint64_t v16 = *(void *)(a1 + 16);
  if (!v16) {
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v17 = a1 + 32;
  uint64_t v32 = v14;
  uint64_t v18 = (void (**)(void))(v14 + 32);
  v30[1] = a1;
  swift_bridgeObjectRetain();
  uint64_t v19 = MEMORY[0x1E4FBC860];
  v30[2] = "";
  uint64_t v31 = v13;
  unint64_t v34 = 0x80000001C6587370;
  while (2)
  {
    sub_1C64AC7C8(v17, (uint64_t)v36);
    switch(v36[48])
    {
      case 1:
        OUTLINED_FUNCTION_55_0();
        goto LABEL_7;
      case 2:
        swift_bridgeObjectRelease();
        goto LABEL_8;
      case 3:
        OUTLINED_FUNCTION_5();
        goto LABEL_7;
      default:
LABEL_7:
        char v20 = sub_1C6577090();
        swift_bridgeObjectRelease();
        if (v20)
        {
LABEL_8:
          sub_1C64A7B04((uint64_t)v36, (uint64_t)v35);
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFBE10);
          if (swift_dynamicCast())
          {
            __swift_storeEnumTagSinglePayload((uint64_t)v6, 0, 1, v9);
            OUTLINED_FUNCTION_74();
            v21();
            uint64_t v22 = 0;
          }
          else
          {
            uint64_t v22 = 1;
            OUTLINED_FUNCTION_85();
            __swift_storeEnumTagSinglePayload(v23, v24, v25, v9);
            sub_1C64B0858((uint64_t)v6, &qword_1EBBFB7D0);
          }
        }
        else
        {
          uint64_t v22 = 1;
        }
        __swift_storeEnumTagSinglePayload((uint64_t)v8, v22, 1, v9);
        sub_1C64AC800((uint64_t)v36);
        if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9) == 1)
        {
          sub_1C64B0858((uint64_t)v8, &qword_1EBBFB7D0);
        }
        else
        {
          uint64_t v26 = *v18;
          OUTLINED_FUNCTION_74();
          v26();
          OUTLINED_FUNCTION_74();
          v26();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v19 = sub_1C64AD174(0, *(void *)(v19 + 16) + 1, 1, v19);
          }
          unint64_t v28 = *(void *)(v19 + 16);
          unint64_t v27 = *(void *)(v19 + 24);
          if (v28 >= v27 >> 1) {
            uint64_t v19 = sub_1C64AD174(v27 > 1, v28 + 1, 1, v19);
          }
          *(void *)(v19 + 16) = v28 + 1;
          ((void (*)(unint64_t, char *, uint64_t))v26)(v19+ ((*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80))+ *(void *)(v32 + 72) * v28, v31, v9);
        }
        v17 += 64;
        if (--v16) {
          continue;
        }
        swift_bridgeObjectRelease();
        break;
    }
    return v19;
  }
}

uint64_t sub_1C64AC7C8(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1C64AC800(uint64_t a1)
{
  return a1;
}

uint64_t Array<A>.getAppInViewIds()(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v2 = a1 + 32;
  swift_bridgeObjectRetain();
  uint64_t v3 = MEMORY[0x1E4FBC860];
  while (2)
  {
    sub_1C64AC7C8(v2, (uint64_t)v13);
    switch(v13[48])
    {
      case 1:
      case 2:
        goto LABEL_6;
      case 3:
        OUTLINED_FUNCTION_5();
LABEL_6:
        char v4 = OUTLINED_FUNCTION_66();
        swift_bridgeObjectRelease();
        if (v4) {
          goto LABEL_7;
        }
        goto LABEL_13;
      default:
        swift_bridgeObjectRelease();
LABEL_7:
        sub_1C64A7B04((uint64_t)v13, (uint64_t)v12);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFBE10);
        if (swift_dynamicCast())
        {
          sub_1C64AC800((uint64_t)v13);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1C64AD0CC();
            uint64_t v3 = v7;
          }
          unint64_t v5 = *(void *)(v3 + 16);
          if (v5 >= *(void *)(v3 + 24) >> 1)
          {
            sub_1C64AD0CC();
            uint64_t v3 = v8;
          }
          *(void *)(v3 + 16) = v5 + 1;
          uint64_t v6 = v3 + 16 * v5;
          *(void *)(v6 + 32) = v10;
          *(void *)(v6 + 40) = v11;
        }
        else
        {
LABEL_13:
          sub_1C64AC800((uint64_t)v13);
        }
        v2 += 64;
        if (--v1) {
          continue;
        }
        swift_bridgeObjectRelease();
        break;
    }
    return v3;
  }
}

void sub_1C64ACA10()
{
  OUTLINED_FUNCTION_43();
  if (v2)
  {
    OUTLINED_FUNCTION_7_0();
    if (v3 != v4)
    {
      OUTLINED_FUNCTION_16_0();
      if (v3)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_5_0();
    }
  }
  OUTLINED_FUNCTION_21_1();
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFB8E0);
    unint64_t v5 = (const void *)OUTLINED_FUNCTION_81();
    OUTLINED_FUNCTION_91(v5);
    OUTLINED_FUNCTION_48(v6 / 8);
  }
  if (v0)
  {
    uint64_t v7 = (char *)OUTLINED_FUNCTION_42();
    sub_1C64AFA50(v7, v8, v9);
    OUTLINED_FUNCTION_33_1();
  }
  else
  {
    uint64_t v10 = OUTLINED_FUNCTION_19_2();
    sub_1C64AE63C(v10, v11, v12, v13);
  }
}

void sub_1C64ACAB8()
{
}

void sub_1C64ACAC4()
{
  OUTLINED_FUNCTION_43();
  if (v2)
  {
    OUTLINED_FUNCTION_7_0();
    if (v3 != v4)
    {
      OUTLINED_FUNCTION_16_0();
      if (v3)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_5_0();
    }
  }
  OUTLINED_FUNCTION_21_1();
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF8FC8);
    unint64_t v5 = (const void *)OUTLINED_FUNCTION_81();
    OUTLINED_FUNCTION_91(v5);
    OUTLINED_FUNCTION_48(v6 / 2);
  }
  if (v0)
  {
    uint64_t v7 = (char *)OUTLINED_FUNCTION_42();
    sub_1C64AFB0C(v7, v8, v9);
    OUTLINED_FUNCTION_33_1();
  }
  else
  {
    uint64_t v10 = OUTLINED_FUNCTION_19_2();
    sub_1C64AE754(v10, v11, v12, v13);
  }
}

void sub_1C64ACB6C()
{
}

void sub_1C64ACBA8()
{
}

void sub_1C64ACBE4()
{
  OUTLINED_FUNCTION_78();
  if (v6)
  {
    OUTLINED_FUNCTION_7_0();
    if (v8 != v9)
    {
      OUTLINED_FUNCTION_16_0();
      if (v8)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_5_0();
    }
  }
  else
  {
    uint64_t v7 = v4;
  }
  uint64_t v10 = *(void *)(v0 + 16);
  if (v7 <= v10) {
    uint64_t v11 = *(void *)(v0 + 16);
  }
  else {
    uint64_t v11 = v7;
  }
  if (v11)
  {
    __swift_instantiateConcreteTypeFromMangledName(v5);
    unint64_t v12 = (char *)swift_allocObject();
    size_t v13 = _swift_stdlib_malloc_size(v12);
    OUTLINED_FUNCTION_94(v13);
  }
  else
  {
    unint64_t v12 = (char *)MEMORY[0x1E4FBC860];
  }
  if (v3)
  {
    v2(v0 + 32, v10, v12 + 32);
    OUTLINED_FUNCTION_33_1();
  }
  else
  {
    uint64_t v14 = OUTLINED_FUNCTION_82();
    v1(v14);
  }
}

void sub_1C64ACCB4()
{
}

void sub_1C64ACCE8()
{
  OUTLINED_FUNCTION_43();
  if (v2)
  {
    OUTLINED_FUNCTION_7_0();
    if (v3 != v4)
    {
      OUTLINED_FUNCTION_16_0();
      if (v3)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_5_0();
    }
  }
  OUTLINED_FUNCTION_21_1();
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F06B8);
    unint64_t v5 = (void *)OUTLINED_FUNCTION_45();
    OUTLINED_FUNCTION_20_1(v5);
  }
  if (v0)
  {
    char v6 = (char *)OUTLINED_FUNCTION_42();
    sub_1C64AFC64(v6, v7, v8);
    OUTLINED_FUNCTION_33_1();
  }
  else
  {
    uint64_t v9 = OUTLINED_FUNCTION_19_2();
    sub_1C64AEA10(v9, v10, v11, v12);
  }
}

void sub_1C64ACD8C()
{
}

void sub_1C64ACDC8()
{
}

void sub_1C64ACE04()
{
  OUTLINED_FUNCTION_78();
  if (v6)
  {
    OUTLINED_FUNCTION_7_0();
    if (v8 != v9)
    {
      OUTLINED_FUNCTION_16_0();
      if (v8)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_5_0();
    }
  }
  else
  {
    uint64_t v7 = v4;
  }
  uint64_t v10 = *(void *)(v0 + 16);
  if (v7 <= v10) {
    uint64_t v11 = *(void *)(v0 + 16);
  }
  else {
    uint64_t v11 = v7;
  }
  if (v11)
  {
    __swift_instantiateConcreteTypeFromMangledName(v5);
    uint64_t v12 = (char *)swift_allocObject();
    size_t v13 = _swift_stdlib_malloc_size(v12);
    OUTLINED_FUNCTION_94(v13);
  }
  else
  {
    uint64_t v12 = (char *)MEMORY[0x1E4FBC860];
  }
  if (v3)
  {
    v2(v0 + 32, v10, v12 + 32);
    OUTLINED_FUNCTION_33_1();
  }
  else
  {
    uint64_t v14 = OUTLINED_FUNCTION_82();
    v1(v14);
  }
}

void sub_1C64ACED4()
{
}

void sub_1C64ACF08()
{
}

void sub_1C64ACF3C()
{
  OUTLINED_FUNCTION_89();
  if (v6)
  {
    OUTLINED_FUNCTION_7_0();
    if (v8 != v9)
    {
      OUTLINED_FUNCTION_16_0();
      if (v8)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_5_0();
    }
  }
  else
  {
    uint64_t v7 = v4;
  }
  uint64_t v10 = *(void *)(v0 + 16);
  if (v7 <= v10) {
    uint64_t v11 = *(void *)(v0 + 16);
  }
  else {
    uint64_t v11 = v7;
  }
  if (v11)
  {
    __swift_instantiateConcreteTypeFromMangledName(v5);
    uint64_t v12 = (void *)swift_allocObject();
    size_t v13 = _swift_stdlib_malloc_size(v12);
    v12[2] = v10;
    v12[3] = 2 * ((uint64_t)(v13 - 32) / 64);
  }
  else
  {
    uint64_t v12 = (void *)MEMORY[0x1E4FBC860];
  }
  uint64_t v14 = v12 + 4;
  if (v3)
  {
    v2(v0 + 32, v10, v14);
    OUTLINED_FUNCTION_33_1();
  }
  else
  {
    v1(0, v10, v14, v0);
  }
}

void sub_1C64AD018()
{
}

void sub_1C64AD054()
{
}

void sub_1C64AD090()
{
}

void sub_1C64AD0CC()
{
  OUTLINED_FUNCTION_43();
  if (v2)
  {
    OUTLINED_FUNCTION_7_0();
    if (v3 != v4)
    {
      OUTLINED_FUNCTION_16_0();
      if (v3)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_5_0();
    }
  }
  OUTLINED_FUNCTION_21_1();
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFB3A8);
    unint64_t v5 = (const void *)OUTLINED_FUNCTION_81();
    OUTLINED_FUNCTION_91(v5);
    OUTLINED_FUNCTION_48(v6 / 16);
  }
  if (v0)
  {
    uint64_t v7 = (char *)OUTLINED_FUNCTION_42();
    sub_1C64AF9F0(v7, v8, v9);
    OUTLINED_FUNCTION_33_1();
  }
  else
  {
    uint64_t v10 = OUTLINED_FUNCTION_19_2();
    sub_1C64AEDE0(v10, v11, v12, v13);
  }
}

uint64_t sub_1C64AD174(char a1, int64_t a2, char a3, uint64_t a4)
{
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_24;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    uint64_t v13 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F08A8);
  uint64_t v10 = *(void *)(sub_1C6576340() - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (void *)swift_allocObject();
  size_t v14 = _swift_stdlib_malloc_size(v13);
  if (!v11 || (v14 - v12 == 0x8000000000000000 ? (BOOL v15 = v11 == -1) : (BOOL v15 = 0), v15))
  {
LABEL_24:
    uint64_t result = sub_1C6576DB0();
    __break(1u);
    return result;
  }
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  uint64_t v16 = *(void *)(sub_1C6576340() - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  unint64_t v18 = (unint64_t)v13 + v17;
  if (a1)
  {
    sub_1C64AFDC4(a4 + v17, v8, v18);
    *(void *)(a4 + 16) = 0;
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1C64AEED8(0, v8, v18, a4);
  }
  return (uint64_t)v13;
}

unint64_t sub_1C64AD3A4()
{
  unint64_t result = qword_1EA3F0780;
  if (!qword_1EA3F0780)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F0780);
  }
  return result;
}

uint64_t destroy for SalientEntity(uint64_t a1)
{
  return __swift_destroy_boxed_opaque_existential_1(a1);
}

uint64_t initializeWithCopy for SalientEntity(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 40);
  long long v5 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v5;
  *(void *)(a1 + 40) = v4;
  (**(void (***)(void))(v5 - 8))();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  return a1;
}

uint64_t assignWithCopy for SalientEntity(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  return a1;
}

uint64_t *__swift_assign_boxed_opaque_existential_2(uint64_t *result, uint64_t *a2)
{
  if (result != a2)
  {
    char v3 = result;
    uint64_t v4 = result[3];
    uint64_t v5 = a2[3];
    if (v4 == v5)
    {
      uint64_t v10 = *(void *)(v4 - 8);
      if ((*(unsigned char *)(v10 + 82) & 2) != 0)
      {
        uint64_t v12 = *a2;
        swift_retain();
        unint64_t result = (uint64_t *)swift_release();
        *char v3 = v12;
      }
      else
      {
        uint64_t v11 = *(uint64_t (**)(void))(v10 + 24);
        return (uint64_t *)v11();
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      result[5] = a2[5];
      uint64_t v6 = *(void *)(v4 - 8);
      uint64_t v7 = *(void *)(v5 - 8);
      uint64_t v8 = v7;
      int v9 = *(_DWORD *)(v7 + 80);
      if ((*(unsigned char *)(v6 + 82) & 2) != 0)
      {
        if ((v9 & 0x20000) != 0)
        {
          *unint64_t result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t *, uint64_t))(v6 + 32))(v13, result, v4);
        if ((v9 & 0x20000) != 0)
        {
          *char v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v13, v4);
      }
    }
  }
  return result;
}

__n128 __swift_memcpy64_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for SalientEntity(uint64_t a1, uint64_t a2)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  return a1;
}

uint64_t getEnumTagSinglePayload for SalientEntity(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 64))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 24);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SalientEntity(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for SalientEntity()
{
}

uint64_t destroy for AppIdDetails()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s18SiriSuggestionsKit12AppIdDetailsVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AppIdDetails(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for AppIdDetails(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for AppIdDetails(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 17))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AppIdDetails(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 17) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for AppInView()
{
}

unsigned char *storeEnumTagSinglePayload for SalientEntityType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *__n128 result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C64ADA34);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 3;
        break;
    }
  }
  return result;
}

void type metadata accessor for SalientEntityType()
{
}

unsigned char *storeEnumTagSinglePayload for AppInView.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C64ADB34);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AppInView.CodingKeys()
{
  return &type metadata for AppInView.CodingKeys;
}

unsigned char *sub_1C64ADB6C(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C64ADC38);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

void type metadata accessor for SalientEntity.CodingKeys()
{
}

unint64_t sub_1C64ADC70()
{
  unint64_t result = qword_1EA3F0788;
  if (!qword_1EA3F0788)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F0788);
  }
  return result;
}

unint64_t sub_1C64ADCC0()
{
  unint64_t result = qword_1EA3F0790;
  if (!qword_1EA3F0790)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F0790);
  }
  return result;
}

unint64_t sub_1C64ADD10()
{
  unint64_t result = qword_1EA3F0798;
  if (!qword_1EA3F0798)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F0798);
  }
  return result;
}

unint64_t sub_1C64ADD60()
{
  unint64_t result = qword_1EA3F07A0;
  if (!qword_1EA3F07A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F07A0);
  }
  return result;
}

unint64_t sub_1C64ADDB0()
{
  unint64_t result = qword_1EA3F07A8;
  if (!qword_1EA3F07A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F07A8);
  }
  return result;
}

unint64_t sub_1C64ADE00()
{
  unint64_t result = qword_1EA3F07B0;
  if (!qword_1EA3F07B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F07B0);
  }
  return result;
}

void sub_1C64ADE4C()
{
  OUTLINED_FUNCTION_43();
  if (v2)
  {
    OUTLINED_FUNCTION_7_0();
    if (v3 != v4)
    {
      OUTLINED_FUNCTION_16_0();
      if (v3)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_5_0();
    }
  }
  OUTLINED_FUNCTION_21_1();
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF8FF0);
    uint64_t v5 = (const void *)OUTLINED_FUNCTION_81();
    OUTLINED_FUNCTION_91(v5);
    OUTLINED_FUNCTION_48(v6 / 32);
  }
  if (v0)
  {
    uint64_t v7 = (char *)OUTLINED_FUNCTION_42();
    sub_1C64AFAAC(v7, v8, v9);
    OUTLINED_FUNCTION_33_1();
  }
  else
  {
    uint64_t v10 = OUTLINED_FUNCTION_19_2();
    sub_1C64AF038(v10, v11, v12, v13);
  }
}

void sub_1C64ADEF4()
{
}

void sub_1C64ADF30()
{
  OUTLINED_FUNCTION_43();
  if (v2)
  {
    OUTLINED_FUNCTION_7_0();
    if (v3 != v4)
    {
      OUTLINED_FUNCTION_16_0();
      if (v3)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_5_0();
    }
  }
  OUTLINED_FUNCTION_21_1();
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFB8B0);
    uint64_t v5 = (void *)OUTLINED_FUNCTION_45();
    OUTLINED_FUNCTION_20_1(v5);
  }
  if (v0)
  {
    uint64_t v6 = (char *)OUTLINED_FUNCTION_42();
    sub_1C64AFEF4(v6, v7, v8);
    OUTLINED_FUNCTION_33_1();
  }
  else
  {
    uint64_t v9 = OUTLINED_FUNCTION_19_2();
    sub_1C64AF150(v9, v10, v11, v12);
  }
}

void sub_1C64ADFD4()
{
}

void sub_1C64ADFE0()
{
  OUTLINED_FUNCTION_43();
  if (v3)
  {
    OUTLINED_FUNCTION_7_0();
    if (v4 != v5)
    {
      OUTLINED_FUNCTION_16_0();
      if (v4)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_5_0();
    }
  }
  OUTLINED_FUNCTION_21_1();
  if (v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(v6);
    uint64_t v7 = (void *)swift_allocObject();
    size_t v8 = _swift_stdlib_malloc_size(v7);
    v7[2] = v1;
    v7[3] = 2 * v8 - 64;
  }
  if (v0)
  {
    uint64_t v9 = (char *)OUTLINED_FUNCTION_42();
    sub_1C64AFF8C(v9, v10, v11);
    OUTLINED_FUNCTION_33_1();
  }
  else
  {
    uint64_t v12 = OUTLINED_FUNCTION_19_2();
    sub_1C64AF250(v12, v13, v14, v15);
  }
}

void sub_1C64AE08C()
{
  OUTLINED_FUNCTION_43();
  if (v2)
  {
    OUTLINED_FUNCTION_7_0();
    if (v3 != v4)
    {
      OUTLINED_FUNCTION_16_0();
      if (v3)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_5_0();
    }
  }
  OUTLINED_FUNCTION_21_1();
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F06C8);
    char v5 = (void *)OUTLINED_FUNCTION_45();
    OUTLINED_FUNCTION_20_1(v5);
  }
  if (v0)
  {
    uint64_t v6 = (char *)OUTLINED_FUNCTION_42();
    sub_1C64AFFE8(v6, v7, v8);
    OUTLINED_FUNCTION_33_1();
  }
  else
  {
    uint64_t v9 = OUTLINED_FUNCTION_19_2();
    sub_1C64AF310(v9, v10, v11, v12);
  }
}

void sub_1C64AE130()
{
}

void sub_1C64AE16C()
{
  OUTLINED_FUNCTION_43();
  if (v3)
  {
    OUTLINED_FUNCTION_7_0();
    if (v4 != v5)
    {
      OUTLINED_FUNCTION_16_0();
      if (v4)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_5_0();
    }
  }
  OUTLINED_FUNCTION_21_1();
  if (v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F07B8);
    uint64_t v6 = (void *)swift_allocObject();
    size_t v7 = _swift_stdlib_malloc_size(v6);
    uint64_t v6[2] = v1;
    v6[3] = 2 * v7 - 64;
  }
  if (v0)
  {
    size_t v8 = (char *)OUTLINED_FUNCTION_42();
    sub_1C64B00AC(v8, v9, v10);
    OUTLINED_FUNCTION_33_1();
  }
  else
  {
    uint64_t v11 = OUTLINED_FUNCTION_19_2();
    sub_1C64AF40C(v11, v12, v13, v14);
  }
}

void sub_1C64AE21C()
{
}

void sub_1C64AE250()
{
  OUTLINED_FUNCTION_89();
  if (v6)
  {
    OUTLINED_FUNCTION_7_0();
    if (v8 != v9)
    {
      OUTLINED_FUNCTION_16_0();
      if (v8)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_5_0();
    }
  }
  else
  {
    uint64_t v7 = v4;
  }
  uint64_t v10 = *(void *)(v0 + 16);
  if (v7 <= v10) {
    uint64_t v11 = *(void *)(v0 + 16);
  }
  else {
    uint64_t v11 = v7;
  }
  if (v11)
  {
    __swift_instantiateConcreteTypeFromMangledName(v5);
    uint64_t v12 = (void *)OUTLINED_FUNCTION_81();
    size_t v13 = _swift_stdlib_malloc_size(v12);
    v12[2] = v10;
    v12[3] = 2 * ((uint64_t)(v13 - 32) / 32);
  }
  else
  {
    uint64_t v12 = (void *)MEMORY[0x1E4FBC860];
  }
  uint64_t v14 = v12 + 4;
  if (v3)
  {
    v2(v0 + 32, v10, v14);
    OUTLINED_FUNCTION_33_1();
  }
  else
  {
    v1(0, v10, v14, v0);
  }
}

void sub_1C64AE324()
{
}

void sub_1C64AE360()
{
  OUTLINED_FUNCTION_43();
  if (v2)
  {
    OUTLINED_FUNCTION_7_0();
    if (v3 != v4)
    {
      OUTLINED_FUNCTION_16_0();
      if (v3)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_5_0();
    }
  }
  OUTLINED_FUNCTION_21_1();
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFB8B8);
    char v5 = (void *)OUTLINED_FUNCTION_45();
    OUTLINED_FUNCTION_20_1(v5);
  }
  if (v0)
  {
    char v6 = (char *)OUTLINED_FUNCTION_42();
    sub_1C64B0198(v6, v7, v8);
    OUTLINED_FUNCTION_33_1();
  }
  else
  {
    uint64_t v9 = OUTLINED_FUNCTION_19_2();
    sub_1C64AF5F0(v9, v10, v11, v12);
  }
}

void sub_1C64AE404()
{
}

void sub_1C64AE440()
{
  OUTLINED_FUNCTION_43();
  if (v2)
  {
    OUTLINED_FUNCTION_7_0();
    if (v3 != v4)
    {
      OUTLINED_FUNCTION_16_0();
      if (v3)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_5_0();
    }
  }
  OUTLINED_FUNCTION_21_1();
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF8220);
    char v5 = (void *)OUTLINED_FUNCTION_45();
    OUTLINED_FUNCTION_20_1(v5);
  }
  if (v0)
  {
    char v6 = (char *)OUTLINED_FUNCTION_42();
    sub_1C64B01FC(v6, v7, v8);
    OUTLINED_FUNCTION_33_1();
  }
  else
  {
    uint64_t v9 = OUTLINED_FUNCTION_19_2();
    sub_1C64AF6F4(v9, v10, v11, v12);
  }
}

void sub_1C64AE4E4()
{
  OUTLINED_FUNCTION_43();
  if (v2)
  {
    OUTLINED_FUNCTION_7_0();
    if (v3 != v4)
    {
      OUTLINED_FUNCTION_16_0();
      if (v3)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_5_0();
    }
  }
  OUTLINED_FUNCTION_21_1();
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFB390);
    char v5 = (void *)OUTLINED_FUNCTION_45();
    OUTLINED_FUNCTION_20_1(v5);
  }
  if (v0)
  {
    char v6 = (char *)OUTLINED_FUNCTION_42();
    sub_1C64B0298(v6, v7, v8);
    OUTLINED_FUNCTION_33_1();
  }
  else
  {
    uint64_t v9 = OUTLINED_FUNCTION_19_2();
    sub_1C64AF814(v9, v10, v11, v12);
  }
}

void sub_1C64AE588()
{
}

void sub_1C64AE5C4()
{
}

void sub_1C64AE600()
{
}

uint64_t sub_1C64AE63C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 8 * a1 + 32;
    unint64_t v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFB800);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_1C6576E50();
  __break(1u);
  return result;
}

char *sub_1C64AE754(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + 2 * a1 + 32);
    unint64_t v6 = &__dst[2 * v4];
    if (v5 >= v6 || &v5[2 * v4] <= __dst)
    {
      memcpy(__dst, v5, 2 * v4);
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = (char *)sub_1C6576E50();
  __break(1u);
  return result;
}

uint64_t sub_1C64AE848(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v4 < 0)
  {
LABEL_9:
    OUTLINED_FUNCTION_2_3();
    OUTLINED_FUNCTION_53();
    goto LABEL_11;
  }
  unint64_t v5 = a4 + 40 * a1 + 32;
  unint64_t v6 = a3 + 40 * v4;
  if (v5 >= v6 || v5 + 40 * v4 <= a3)
  {
    swift_arrayInitWithCopy();
    swift_bridgeObjectRelease();
    return v6;
  }
  OUTLINED_FUNCTION_2_3();
  OUTLINED_FUNCTION_52();
LABEL_11:
  uint64_t result = OUTLINED_FUNCTION_16_1();
  __break(1u);
  return result;
}

uint64_t sub_1C64AE914(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_1C6576E50();
  __break(1u);
  return result;
}

uint64_t sub_1C64AEA10(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 56 * a1 + 32;
    unint64_t v6 = a3 + 56 * v4;
    if (v5 >= v6 || v5 + 56 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_1C6576E50();
  __break(1u);
  return result;
}

uint64_t sub_1C64AEB14(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + (a1 << 6) + 32;
    unint64_t v6 = a3 + (v4 << 6);
    if (v5 >= v6 || v5 + (v4 << 6) <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F0818);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_1C6576E50();
  __break(1u);
  return result;
}

uint64_t sub_1C64AEC2C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + (a1 << 6) + 32;
    unint64_t v6 = a3 + (v4 << 6);
    if (v5 >= v6 || v5 + (v4 << 6) <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_1C6576E50();
  __break(1u);
  return result;
}

uint64_t sub_1C64AED24(uint64_t a1, uint64_t a2)
{
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (a2 - a1 < 0)
  {
LABEL_9:
    OUTLINED_FUNCTION_2_3();
    OUTLINED_FUNCTION_53();
    goto LABEL_11;
  }
  OUTLINED_FUNCTION_54();
  if (v6) {
    BOOL v7 = 0;
  }
  else {
    BOOL v7 = v5 > v3;
  }
  if (!v7)
  {
    __swift_instantiateConcreteTypeFromMangledName(v4);
    OUTLINED_FUNCTION_58();
    swift_bridgeObjectRelease();
    return v2;
  }
  OUTLINED_FUNCTION_2_3();
  OUTLINED_FUNCTION_52();
LABEL_11:
  uint64_t result = OUTLINED_FUNCTION_16_1();
  __break(1u);
  return result;
}

uint64_t sub_1C64AEDE0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_1C6576E50();
  __break(1u);
  return result;
}

uint64_t sub_1C64AEED8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v8 = *(void *)(sub_1C6576340() - 8);
    uint64_t v9 = a4 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v10 = *(void *)(v8 + 72);
    unint64_t v11 = v9 + v10 * a1;
    unint64_t v12 = a3 + v10 * v4;
    if (v11 >= v12 || v11 + v10 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v12;
    }
  }
  uint64_t result = sub_1C6576E50();
  __break(1u);
  return result;
}

uint64_t sub_1C64AF038(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF8F08);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_1C6576E50();
  __break(1u);
  return result;
}

uint64_t sub_1C64AF150(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 48 * a1 + 32;
    unint64_t v6 = a3 + 48 * v4;
    if (v5 >= v6 || v5 + 48 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_1C6576E50();
  __break(1u);
  return result;
}

char *sub_1C64AF250(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  size_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if ((v4 & 0x8000000000000000) != 0)
  {
LABEL_9:
    OUTLINED_FUNCTION_2_3();
    OUTLINED_FUNCTION_53();
    goto LABEL_11;
  }
  unint64_t v5 = (char *)(a4 + a1 + 32);
  unint64_t v6 = &__dst[v4];
  if (v5 >= &__dst[v4] || &v5[v4] <= __dst)
  {
    memcpy(__dst, v5, v4);
    swift_bridgeObjectRelease();
    return v6;
  }
  OUTLINED_FUNCTION_2_3();
  OUTLINED_FUNCTION_52();
LABEL_11:
  uint64_t result = (char *)OUTLINED_FUNCTION_16_1();
  __break(1u);
  return result;
}

char *sub_1C64AF310(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + 24 * a1 + 32);
    uint64_t v6 = 3 * v4;
    BOOL v7 = &__dst[8 * v6];
    if (v5 >= v7 || &v5[8 * v6] <= __dst)
    {
      memcpy(__dst, v5, 8 * v6);
      swift_bridgeObjectRelease();
      return v7;
    }
  }
  uint64_t result = (char *)sub_1C6576E50();
  __break(1u);
  return result;
}

char *sub_1C64AF40C(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  size_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + a1 + 32);
    uint64_t v6 = &__dst[v4];
    if (v5 >= &__dst[v4] || &v5[v4] <= __dst)
    {
      memcpy(__dst, v5, v4);
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = (char *)sub_1C6576E50();
  __break(1u);
  return result;
}

char *sub_1C64AF4FC(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + 32 * a1 + 32);
    uint64_t v6 = &__dst[32 * v4];
    if (v5 >= v6 || &v5[32 * v4] <= __dst)
    {
      memcpy(__dst, v5, 32 * v4);
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = (char *)sub_1C6576E50();
  __break(1u);
  return result;
}

uint64_t sub_1C64AF5F0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 120 * a1 + 32;
    unint64_t v6 = a3 + 120 * v4;
    if (v5 >= v6 || v5 + 120 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_1C6576E50();
  __break(1u);
  return result;
}

uint64_t sub_1C64AF6F4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 80 * a1 + 32;
    unint64_t v6 = a3 + 80 * v4;
    if (v5 >= v6 || v5 + 80 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBBF8170);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_1C6576E50();
  __break(1u);
  return result;
}

uint64_t sub_1C64AF814(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 296 * a1 + 32;
    unint64_t v6 = a3 + 296 * v4;
    if (v5 >= v6 || v5 + 296 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_1C6576E50();
  __break(1u);
  return result;
}

uint64_t sub_1C64AF914(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v5 < 0)
  {
LABEL_9:
    OUTLINED_FUNCTION_2_3();
    OUTLINED_FUNCTION_53();
    goto LABEL_11;
  }
  unint64_t v6 = a4 + 40 * a1 + 32;
  unint64_t v7 = a3 + 40 * v5;
  if (v6 >= v7 || v6 + 40 * v5 <= a3)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    OUTLINED_FUNCTION_58();
    swift_bridgeObjectRelease();
    return v7;
  }
  OUTLINED_FUNCTION_2_3();
  OUTLINED_FUNCTION_52();
LABEL_11:
  uint64_t result = OUTLINED_FUNCTION_16_1();
  __break(1u);
  return result;
}

char *sub_1C64AF9F0(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_2_3();
    uint64_t result = (char *)OUTLINED_FUNCTION_3_3();
    __break(1u);
  }
  else if (a3 != result || &result[16 * a2] <= a3)
  {
    return (char *)OUTLINED_FUNCTION_1_2(a3, result);
  }
  return result;
}

char *sub_1C64AFA50(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_2_3();
    uint64_t result = (char *)OUTLINED_FUNCTION_3_3();
    __break(1u);
  }
  else if (a3 != result || &result[8 * a2] <= a3)
  {
    return (char *)OUTLINED_FUNCTION_1_2(a3, result);
  }
  return result;
}

char *sub_1C64AFAAC(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_2_3();
    uint64_t result = (char *)OUTLINED_FUNCTION_3_3();
    __break(1u);
  }
  else if (a3 != result || &result[32 * a2] <= a3)
  {
    return (char *)OUTLINED_FUNCTION_1_2(a3, result);
  }
  return result;
}

char *sub_1C64AFB0C(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_2_3();
    uint64_t result = (char *)OUTLINED_FUNCTION_3_3();
    __break(1u);
  }
  else if (a3 != result || &result[2 * a2] <= a3)
  {
    return (char *)OUTLINED_FUNCTION_1_2(a3, result);
  }
  return result;
}

char *sub_1C64AFB6C(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_2_3();
    uint64_t result = (char *)OUTLINED_FUNCTION_3_3();
    __break(1u);
  }
  else if (a3 != result || &result[40 * a2] <= a3)
  {
    return (char *)OUTLINED_FUNCTION_1_2(a3, result);
  }
  return result;
}

char *sub_1C64AFBCC(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_1C6576E50();
    __break(1u);
  }
  else if (__dst != __src || &__src[32 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 32 * a2);
  }
  return __src;
}

char *sub_1C64AFC64(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_2_3();
    uint64_t result = (char *)OUTLINED_FUNCTION_3_3();
    __break(1u);
  }
  else if (a3 != result || &result[56 * a2] <= a3)
  {
    return (char *)OUTLINED_FUNCTION_1_2(a3, result);
  }
  return result;
}

char *sub_1C64AFCC8(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_1C6576E50();
    __break(1u);
  }
  else if (__dst != __src || &__src[64 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, a2 << 6);
  }
  return __src;
}

char *sub_1C64AFD5C(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_2_3();
    uint64_t result = (char *)OUTLINED_FUNCTION_3_3();
    __break(1u);
  }
  else if (a3 != result || &result[48 * a2] <= a3)
  {
    return (char *)OUTLINED_FUNCTION_1_2(a3, result);
  }
  return result;
}

uint64_t sub_1C64AFDC4(unint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a2 < 0)
  {
    uint64_t v8 = sub_1C6576E50();
    __break(1u);
    return MEMORY[0x1F4186420](v8, v9, v10, v7);
  }
  if (a3 < a1 || (uint64_t result = sub_1C6576340(), a1 + *(void *)(*(void *)(result - 8) + 72) * a2 <= a3))
  {
    uint64_t v11 = sub_1C6576340();
    return MEMORY[0x1F4186428](a3, a1, a2, v11);
  }
  else if (a3 != a1)
  {
    uint64_t v7 = result;
    uint64_t v8 = a3;
    unint64_t v9 = a1;
    uint64_t v10 = a2;
    return MEMORY[0x1F4186420](v8, v9, v10, v7);
  }
  return result;
}

char *sub_1C64AFEF4(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_1C6576E50();
    __break(1u);
  }
  else if (__dst != __src || &__src[48 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 48 * a2);
  }
  return __src;
}

char *sub_1C64AFF8C(char *result, size_t a2, char *a3)
{
  if ((a2 & 0x8000000000000000) != 0)
  {
    OUTLINED_FUNCTION_2_3();
    uint64_t result = (char *)OUTLINED_FUNCTION_3_3();
    __break(1u);
  }
  else if (a3 != result || &result[a2] <= a3)
  {
    return (char *)OUTLINED_FUNCTION_69(a3, result, a2);
  }
  return result;
}

char *sub_1C64AFFE8(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_2_3();
    uint64_t result = (char *)OUTLINED_FUNCTION_3_3();
    __break(1u);
  }
  else if (a3 != result || &result[24 * a2] <= a3)
  {
    return (char *)OUTLINED_FUNCTION_1_2(a3, result);
  }
  return result;
}

char *sub_1C64B004C(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_2_3();
    uint64_t result = (char *)OUTLINED_FUNCTION_3_3();
    __break(1u);
  }
  else if (a3 != result || &result[24 * a2] <= a3)
  {
    return (char *)OUTLINED_FUNCTION_1_2(a3, result);
  }
  return result;
}

char *sub_1C64B00AC(char *__src, size_t __len, char *__dst)
{
  if ((__len & 0x8000000000000000) != 0)
  {
    __src = (char *)sub_1C6576E50();
    __break(1u);
  }
  else if (__dst != __src || &__src[__len] <= __dst)
  {
    return (char *)memmove(__dst, __src, __len);
  }
  return __src;
}

char *sub_1C64B013C(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_2_3();
    uint64_t result = (char *)OUTLINED_FUNCTION_3_3();
    __break(1u);
  }
  else if (a3 != result || &result[128 * a2] <= a3)
  {
    return (char *)OUTLINED_FUNCTION_1_2(a3, result);
  }
  return result;
}

char *sub_1C64B0198(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_2_3();
    uint64_t result = (char *)OUTLINED_FUNCTION_3_3();
    __break(1u);
  }
  else if (a3 != result || &result[120 * a2] <= a3)
  {
    return (char *)OUTLINED_FUNCTION_1_2(a3, result);
  }
  return result;
}

char *sub_1C64B01FC(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_1C6576E50();
    __break(1u);
  }
  else if (__dst != __src || &__src[80 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 80 * a2);
  }
  return __src;
}

char *sub_1C64B0298(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_1C6576E50();
    __break(1u);
  }
  else if (__dst != __src || &__src[296 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 296 * a2);
  }
  return __src;
}

char *sub_1C64B0334(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_2_3();
    uint64_t result = (char *)OUTLINED_FUNCTION_3_3();
    __break(1u);
  }
  else if (a3 != result || &result[64 * a2] <= a3)
  {
    return (char *)OUTLINED_FUNCTION_1_2(a3, result);
  }
  return result;
}

char *sub_1C64B0390(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_2_3();
    uint64_t result = (char *)OUTLINED_FUNCTION_3_3();
    __break(1u);
  }
  else if (a3 != result || &result[40 * a2] <= a3)
  {
    return (char *)OUTLINED_FUNCTION_1_2(a3, result);
  }
  return result;
}

unint64_t sub_1C64B03F4()
{
  unint64_t result = qword_1EBBFC470;
  if (!qword_1EBBFC470)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBBFC470);
  }
  return result;
}

unint64_t sub_1C64B0440()
{
  unint64_t result = qword_1EA3F07D8;
  if (!qword_1EA3F07D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F07D8);
  }
  return result;
}

uint64_t dynamic_cast_existential_1_conditional(uint64_t a1)
{
  if (swift_conformsToProtocol2()) {
    return a1;
  }
  else {
    return 0;
  }
}

uint64_t __swift_deallocate_boxed_opaque_existential_1(uint64_t result)
{
  if ((*(_DWORD *)(*(void *)(*(void *)(result + 24) - 8) + 80) & 0x20000) != 0) {
    JUMPOUT(0x1C87A0050);
  }
  return result;
}

uint64_t sub_1C64B0524(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C64B056C()
{
  unint64_t result = qword_1EA3F07E8;
  if (!qword_1EA3F07E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F07E8);
  }
  return result;
}

unint64_t sub_1C64B05B8()
{
  unint64_t result = qword_1EBBFC3C0;
  if (!qword_1EBBFC3C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBBFC3C0);
  }
  return result;
}

uint64_t sub_1C64B0604()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 41, 7);
}

unint64_t sub_1C64B063C()
{
  unint64_t result = qword_1EBBFC478;
  if (!qword_1EBBFC478)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBBFC478);
  }
  return result;
}

unint64_t sub_1C64B0688()
{
  unint64_t result = qword_1EA3F0838;
  if (!qword_1EA3F0838)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F0838);
  }
  return result;
}

unint64_t sub_1C64B06D4()
{
  unint64_t result = qword_1EBBFBDC8;
  if (!qword_1EBBFBDC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBBFBDC8);
  }
  return result;
}

uint64_t sub_1C64B0720(uint64_t result)
{
  if (result)
  {
    swift_unknownObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_1C64B0760()
{
  unint64_t result = qword_1EA3F0878;
  if (!qword_1EA3F0878)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F0878);
  }
  return result;
}

unint64_t sub_1C64B07AC()
{
  unint64_t result = qword_1EA3F0898;
  if (!qword_1EA3F0898)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F0898);
  }
  return result;
}

uint64_t sub_1C64B07F8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  __swift_instantiateConcreteTypeFromMangledName(a3);
  OUTLINED_FUNCTION_67();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

uint64_t sub_1C64B0858(uint64_t a1, uint64_t *a2)
{
  __swift_instantiateConcreteTypeFromMangledName(a2);
  OUTLINED_FUNCTION_67();
  OUTLINED_FUNCTION_1();
  v3();
  return a1;
}

_OWORD *sub_1C64B08AC(long long *a1, _OWORD *a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  long long v4 = a1[3];
  a2[2] = a1[2];
  a2[3] = v4;
  *a2 = v2;
  a2[1] = v3;
  return a2;
}

unint64_t sub_1C64B08C4()
{
  unint64_t result = qword_1EA3F08B8;
  if (!qword_1EA3F08B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F08B8);
  }
  return result;
}

void *OUTLINED_FUNCTION_1_2@<X0>(void *__dst@<X2>, const void *a2@<X8>)
{
  return memmove(__dst, a2, v2);
}

uint64_t OUTLINED_FUNCTION_3_3()
{
  return sub_1C6576E50();
}

uint64_t OUTLINED_FUNCTION_4_2()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_5_2()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_6_1()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_7_2()
{
  return sub_1C6576F30();
}

uint64_t OUTLINED_FUNCTION_9_1()
{
  __swift_storeEnumTagSinglePayload(v0, 0, 1, v1);
  return swift_willThrow();
}

uint64_t OUTLINED_FUNCTION_11_1()
{
  return swift_allocError();
}

uint64_t OUTLINED_FUNCTION_16_1()
{
  return sub_1C6576E50();
}

uint64_t OUTLINED_FUNCTION_17_1(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __swift_storeEnumTagSinglePayload(a1, 1, 1, a4);
  return swift_willThrow();
}

uint64_t OUTLINED_FUNCTION_18_1()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_19_2()
{
  return 0;
}

size_t OUTLINED_FUNCTION_20_1(void *a1)
{
  size_t result = _swift_stdlib_malloc_size(a1);
  a1[2] = v1;
  a1[3] = 2 * ((uint64_t)(result - 32) / v2);
  return result;
}

uint64_t OUTLINED_FUNCTION_22_1()
{
  return v0;
}

void OUTLINED_FUNCTION_23_1()
{
  *(unsigned char *)(v1 - 65) = v0;
}

uint64_t OUTLINED_FUNCTION_24_0()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_25_1()
{
  return swift_allocError();
}

uint64_t OUTLINED_FUNCTION_26_1()
{
  return sub_1C65769A0();
}

uint64_t OUTLINED_FUNCTION_27_1()
{
  return sub_1C6576E80();
}

uint64_t OUTLINED_FUNCTION_30_1()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_31_1()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_32_1()
{
  return sub_1C6576EA0();
}

uint64_t OUTLINED_FUNCTION_33_1()
{
  *(void *)(v0 + 16) = 0;
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_42()
{
  return v0 + 32;
}

uint64_t OUTLINED_FUNCTION_45()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_46()
{
  __swift_project_boxed_opaque_existential_1(v0, v0[3]);
  return swift_getDynamicType();
}

void OUTLINED_FUNCTION_47()
{
  *(void *)(v4 - 120) = v0;
  *(void *)(v4 - 112) = v1;
  *(void *)(v4 - 104) = v3;
  *(unsigned char *)(v4 - 96) = v2 & 1;
}

void OUTLINED_FUNCTION_48(uint64_t a1@<X8>)
{
  *(void *)(v2 + 16) = v1;
  *(void *)(v2 + 24) = 2 * a1;
}

uint64_t OUTLINED_FUNCTION_49()
{
  return dynamic_cast_existential_1_conditional(v0);
}

uint64_t OUTLINED_FUNCTION_50()
{
  return sub_1C65764D0();
}

uint64_t OUTLINED_FUNCTION_55_0()
{
  return 0x6F48657669746361;
}

uint64_t OUTLINED_FUNCTION_56()
{
  __swift_project_boxed_opaque_existential_1(v0, v0[3]);
  *(unsigned char *)(v2 - 66) = v1;
  return sub_1C6576F80();
}

uint64_t OUTLINED_FUNCTION_57()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_58()
{
  return swift_arrayInitWithCopy();
}

uint64_t OUTLINED_FUNCTION_59()
{
  return sub_1C6577010();
}

uint64_t OUTLINED_FUNCTION_60()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_61(uint64_t result)
{
  *(void *)(v1 + 32) = result;
  *(unsigned char *)uint64_t v1 = *(unsigned char *)(v2 - 65);
  return result;
}

uint64_t OUTLINED_FUNCTION_62()
{
  *(unsigned char *)(v2 - 65) = v0;
  return __swift_instantiateConcreteTypeFromMangledName(v1);
}

uint64_t OUTLINED_FUNCTION_63(uint64_t result)
{
  *uint64_t v1 = result;
  uint64_t v3 = *(void *)(v2 - 112);
  uint64_t v4 = *(void *)(v2 - 104);
  char v5 = *(unsigned char *)(v2 - 96);
  *(void *)(result + 16) = *(void *)(v2 - 120);
  *(void *)(result + 24) = v3;
  *(void *)(result + 32) = v4;
  *(unsigned char *)(result + 40) = v5;
  return result;
}

uint64_t OUTLINED_FUNCTION_65()
{
  return sub_1C6576F30();
}

uint64_t OUTLINED_FUNCTION_66()
{
  return sub_1C6577090();
}

void *OUTLINED_FUNCTION_69@<X0>(void *__dst@<X2>, const void *a2@<X1>, size_t a3@<X8>)
{
  return memmove(__dst, a2, a3);
}

uint64_t OUTLINED_FUNCTION_70()
{
  return sub_1C6577090();
}

uint64_t OUTLINED_FUNCTION_71()
{
  return swift_dynamicCast();
}

uint64_t OUTLINED_FUNCTION_72@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 - 216) = a1;
  return sub_1C6576320();
}

uint64_t OUTLINED_FUNCTION_73()
{
  return sub_1C6576E80();
}

uint64_t OUTLINED_FUNCTION_75()
{
  return v0;
}

void OUTLINED_FUNCTION_76()
{
  *(unsigned char *)(v0 - 65) = 1;
}

uint64_t OUTLINED_FUNCTION_79()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_80()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_81()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_82()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_83()
{
  return sub_1C65769A0();
}

void OUTLINED_FUNCTION_84()
{
  *(unsigned char *)(v0 - 66) = 1;
}

uint64_t OUTLINED_FUNCTION_86()
{
  return sub_1C6576EA0();
}

uint64_t OUTLINED_FUNCTION_87()
{
  return sub_1C6576EA0();
}

uint64_t OUTLINED_FUNCTION_88()
{
  __swift_storeEnumTagSinglePayload(v0, 0, 1, v1);
  return swift_bridgeObjectRetain();
}

size_t OUTLINED_FUNCTION_91(const void *a1)
{
  return _swift_stdlib_malloc_size(a1);
}

uint64_t OUTLINED_FUNCTION_92(uint64_t a1)
{
  return a1 - 8;
}

uint64_t OUTLINED_FUNCTION_93()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_94(uint64_t result)
{
  *(void *)(v2 + 16) = v1;
  *(void *)(v2 + 24) = 2 * ((result - 32) / v3);
  return result;
}

uint64_t AnySignalValue.value.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C64B11A4(v1, a1);
}

uint64_t sub_1C64B11A4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  long long v4 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(a2 + 32) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a2 + 48) = v4;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_1C64B1208@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = a2;
  *a3 = a1;
  a3[1] = a2;
  uint64_t v7 = MEMORY[0x1E4FBB208];
  a3[3] = MEMORY[0x1E4FBB1A0];
  a3[4] = v7;
  uint64_t v8 = MEMORY[0x1E4FBB1A8];
  a3[5] = MEMORY[0x1E4FBB1D8];
  a3[6] = v8;
  a3[7] = MEMORY[0x1E4FBB1B0];
  a3[8] = sub_1C64BA774;
  a3[9] = v6;

  return swift_bridgeObjectRetain();
}

uint64_t sub_1C64B12B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  unint64_t v10 = sub_1C64BA8F4();
  unint64_t v11 = sub_1C64BA940();
  unint64_t v12 = sub_1C64BA98C();
  unint64_t v13 = sub_1C64BA9D8();
  uint64_t v14 = (void *)swift_allocObject();
  v14[2] = a1;
  v14[3] = a2;
  v14[4] = a3;
  uint64_t v14[5] = a4;
  uint64_t v15 = (void *)swift_allocObject();
  v15[2] = a1;
  v15[3] = a2;
  v15[4] = a3;
  v15[5] = a4;
  *a5 = v14;
  a5[3] = &type metadata for InAppIdentifier;
  a5[4] = v10;
  a5[5] = v11;
  a5[6] = v12;
  a5[7] = v13;
  a5[8] = sub_1C64BAA78;
  a5[9] = v15;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t sub_1C64B13A4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  unint64_t v4 = sub_1C64BA77C();
  unint64_t v5 = sub_1C64BA7C8();
  unint64_t v6 = sub_1C64BA814();
  unint64_t v7 = sub_1C64BA860();
  uint64_t v8 = swift_allocObject();
  long long v9 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v8 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v8 + 32) = v9;
  *(unsigned char *)(v8 + 48) = *(unsigned char *)(a1 + 32);
  uint64_t v10 = swift_allocObject();
  long long v11 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v10 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v10 + 32) = v11;
  *(unsigned char *)(v10 + 48) = *(unsigned char *)(a1 + 32);
  *a2 = v8;
  a2[3] = (uint64_t)&type metadata for AppEntityDetails;
  a2[4] = v4;
  a2[5] = v5;
  a2[6] = v6;
  a2[7] = v7;
  a2[8] = (uint64_t)sub_1C64BA8EC;
  a2[9] = v10;

  return sub_1C64B7C68(a1);
}

void AnySignalValue.init<A>(_:)()
{
  OUTLINED_FUNCTION_49_0();
  uint64_t v27 = v0;
  uint64_t v28 = v1;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  long long v11 = v10;
  OUTLINED_FUNCTION_0_2();
  uint64_t v13 = v12;
  uint64_t v15 = *(void *)(v14 + 64);
  MEMORY[0x1F4188790](v16);
  long long v11[3] = v17;
  v11[4] = v18;
  v11[5] = v19;
  v11[6] = v20;
  v11[7] = v21;
  boxed_opaque_existential_4Tm = __swift_allocate_boxed_opaque_existential_4Tm(v11);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v13 + 16))(boxed_opaque_existential_4Tm, v9, v7);
  uint64_t v23 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 32);
  v23((char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), v9, v7);
  unint64_t v24 = (*(unsigned __int8 *)(v13 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v25 = (char *)swift_allocObject();
  *((void *)v25 + 2) = v7;
  *((void *)v25 + 3) = v5;
  uint64_t v26 = v27;
  *((void *)v25 + 4) = v3;
  *((void *)v25 + 5) = v26;
  *((void *)v25 + 6) = v28;
  v23(&v25[v24], (uint64_t)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
  v11[8] = (uint64_t)sub_1C64B1858;
  v11[9] = (uint64_t)v25;
  OUTLINED_FUNCTION_39_0();
}

uint64_t sub_1C64B15D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_1C6576AE0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  uint64_t v9 = &v15[-v8];
  uint64_t v10 = *(void *)(a3 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v12 = &v15[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1C64BAACC(a1, (uint64_t)v15);
  if (swift_dynamicCast())
  {
    __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, a3);
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 32))(v12, v9, a3);
    char v13 = sub_1C6576530();
    (*(void (**)(unsigned char *, uint64_t))(v10 + 8))(v12, a3);
  }
  else
  {
    __swift_storeEnumTagSinglePayload((uint64_t)v9, 1, 1, a3);
    (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v9, v5);
    char v13 = 0;
  }
  return v13 & 1;
}

uint64_t sub_1C64B17D4()
{
  OUTLINED_FUNCTION_67();
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 56) & ~v2;
  uint64_t v4 = v3 + *(void *)(v1 + 64);
  uint64_t v5 = v2 | 7;
  (*(void (**)(uint64_t))(v1 + 8))(v0 + v3);

  return MEMORY[0x1F4186498](v0, v4, v5);
}

uint64_t sub_1C64B1858()
{
  OUTLINED_FUNCTION_19_3();
  return sub_1C64B15D0(v2, v0 + ((*(unsigned __int8 *)(v1 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80)), v3);
}

void AnySignalValue.init(from:)()
{
  OUTLINED_FUNCTION_25();
  uint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F0890);
  OUTLINED_FUNCTION_0_2();
  MEMORY[0x1F4188790](v3);
  OUTLINED_FUNCTION_9_2();
  sub_1C64B07AC();
  sub_1C6577210();
  if (!v0)
  {
    sub_1C64A988C();
    __swift_project_boxed_opaque_existential_1(v9, v9[3]);
    OUTLINED_FUNCTION_0_2();
    MEMORY[0x1F4188790](v4);
    OUTLINED_FUNCTION_13_1(v5, v8);
    OUTLINED_FUNCTION_47_0();
    v6();
    AnySignalValue.init<A>(_:)();
    OUTLINED_FUNCTION_41();
    v7();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
  }
  __swift_destroy_boxed_opaque_existential_1(v2);
  OUTLINED_FUNCTION_26();
}

uint64_t AnySignalValue.description.getter()
{
  __swift_project_boxed_opaque_existential_1(v0, v0[3]);
  return sub_1C6577040();
}

uint64_t static AnySignalValue.== infix(_:_:)(uint64_t a1, void *a2)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t *))(a1 + 64);
  uint64_t v3 = __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  OUTLINED_FUNCTION_43_0((uint64_t)v3, v4, v5, v6, v7, v8, v9, v10, v14[0], v14[1], v14[2], v14[3]);
  OUTLINED_FUNCTION_67();
  OUTLINED_FUNCTION_22_2();
  v11();
  char v12 = v2(v14);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
  return v12 & 1;
}

uint64_t AnySignalValue.hash(into:)()
{
  __swift_project_boxed_opaque_existential_1(v0, v0[3]);
  return sub_1C6576500();
}

uint64_t AnySignalValue.encode(to:)(void *a1)
{
  uint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F0888);
  OUTLINED_FUNCTION_0_2();
  MEMORY[0x1F4188790](v4);
  OUTLINED_FUNCTION_10();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C64B07AC();
  OUTLINED_FUNCTION_51();
  uint64_t v5 = v2[3];
  uint64_t v6 = v2[6];
  __swift_project_boxed_opaque_existential_1(v2, v5);
  v10[3] = v5;
  v10[4] = v6;
  __swift_allocate_boxed_opaque_existential_4Tm(v10);
  OUTLINED_FUNCTION_67();
  (*(void (**)(void))(v7 + 16))();
  sub_1C64AB00C();
  OUTLINED_FUNCTION_5_3();
  v8();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
}

uint64_t *__swift_allocate_boxed_opaque_existential_4Tm(uint64_t *a1)
{
  OUTLINED_FUNCTION_19_3();
  if ((*(unsigned char *)(v2 + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v3;
  }
  return a1;
}

uint64_t sub_1C64B1CD4(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x65756C6176 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_1C6577090();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1C64B1D54()
{
  return sub_1C6577190();
}

uint64_t sub_1C64B1D94()
{
  return 0x65756C6176;
}

uint64_t sub_1C64B1DAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, BOOL *a3@<X8>)
{
  uint64_t result = sub_1C64B1CD4(a1, a2);
  *a3 = result != 0;
  return result;
}

void sub_1C64B1DDC(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_1C64B1DE8(uint64_t a1)
{
  unint64_t v2 = sub_1C64B07AC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C64B1E24(uint64_t a1)
{
  unint64_t v2 = sub_1C64B07AC();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t AnySignalValue.hashValue.getter()
{
  OUTLINED_FUNCTION_15_1();
  __swift_project_boxed_opaque_existential_1(v0, v0[3]);
  OUTLINED_FUNCTION_65_0();
  return sub_1C6577190();
}

uint64_t sub_1C64B1EB8()
{
  sub_1C6577150();
  __swift_project_boxed_opaque_existential_1(v0, v0[3]);
  OUTLINED_FUNCTION_65_0();
  return sub_1C6577190();
}

void sub_1C64B1F0C()
{
}

uint64_t sub_1C64B1F24(void *a1)
{
  return AnySignalValue.encode(to:)(a1);
}

uint64_t Signal.signalType.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C64B7FD8(v1 + 16, a1);
}

uint64_t Signal.anySignalValue.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C64B1F70(v1 + 56, a1);
}

uint64_t sub_1C64B1F70(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t Signal.signalValue.getter()
{
  sub_1C64B1F70(v0 + 56, (uint64_t)v3);
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  uint64_t v1 = sub_1C6577040();
  sub_1C64B2018((uint64_t)v3);
  return v1;
}

uint64_t sub_1C64B2018(uint64_t a1)
{
  return a1;
}

uint64_t Signal.fallbackSignals.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Signal.context.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 152);
  *a1 = *(void *)(v1 + 144);
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t Signal.Constants.deinit()
{
  return v0;
}

uint64_t Signal.Constants.__deallocating_deinit()
{
  return MEMORY[0x1F4186488](v0, 16, 7);
}

void *sub_1C64B2074()
{
  uint64_t v0 = OUTLINED_FUNCTION_42_0();
  sub_1C64B1208(v0, 0xEA00000000006E65, v1);
  type metadata accessor for Signal();
  uint64_t v2 = (void *)OUTLINED_FUNCTION_38_0();
  uint64_t result = sub_1C64B7674(3, v4, MEMORY[0x1E4FBC860], 0, 0, v2);
  qword_1EBBFB138 = (uint64_t)result;
  return result;
}

void Signal.__allocating_init(signalType:signalValue:fallbackSignals:context:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  OUTLINED_FUNCTION_49_0();
  a19 = v21;
  a20 = v22;
  uint64_t v24 = v23;
  uint64_t v26 = v25;
  uint64_t v28 = v27;
  uint64_t v30 = v29;
  uint64_t v32 = v31;
  uint64_t v33 = *(void *)(v31 + 24);
  uint64_t v34 = *(void *)(v31 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v31, v33);
  OUTLINED_FUNCTION_0_2();
  MEMORY[0x1F4188790](v35);
  uint64_t v37 = (char *)&a9 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_47_0();
  v38();
  sub_1C64B74D4((uint64_t)v37, v30, v28, v26, v24, v20, v33, v34);
  __swift_destroy_boxed_opaque_existential_1(v32);
  OUTLINED_FUNCTION_39_0();
}

uint64_t static Signal.HomeScreen.getter()
{
  return sub_1C64B2618(&qword_1EBBF81D0);
}

void *sub_1C64B21DC()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFB3B0);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1C6579810;
  if (qword_1EBBF81D0 != -1) {
    swift_once();
  }
  *(void *)(v0 + 32) = qword_1EBBFB138;
  v3[0] = v0;
  sub_1C65767C0();
  swift_retain();
  sub_1C64B1208(0xD000000000000010, 0x80000001C6587E00, v3);
  type metadata accessor for Signal();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_38_0();
  uint64_t result = sub_1C64B7674(3, v3, v0, 0, 0, v1);
  qword_1EBBFB150 = (uint64_t)result;
  return result;
}

uint64_t static Signal.HomeScreenTier1.getter()
{
  return sub_1C64B2618(&qword_1EBBF81D8);
}

void *sub_1C64B22F4()
{
  sub_1C64B1208(0x6B6361626C6C6166, 0xE800000000000000, v2);
  type metadata accessor for Signal();
  uint64_t v0 = (void *)swift_allocObject();
  uint64_t result = sub_1C64B7674(4, v2, MEMORY[0x1E4FBC860], 0, 0, v0);
  qword_1EBBFB158 = (uint64_t)result;
  return result;
}

uint64_t static Signal.Fallback.getter()
{
  return sub_1C64B2618(&qword_1EBBFB160);
}

void *sub_1C64B2388()
{
  sub_1C64B1208(0x6F4C656369766564, 0xEC00000064656B63, v2);
  type metadata accessor for Signal();
  uint64_t v0 = (void *)swift_allocObject();
  uint64_t result = sub_1C64B7674(5, v2, MEMORY[0x1E4FBC860], 0, 0, v0);
  qword_1EBBFB140 = (uint64_t)result;
  return result;
}

uint64_t static Signal.DeviceLocked.getter()
{
  return sub_1C64B2618(&qword_1EBBFB148);
}

void *sub_1C64B2424()
{
  sub_1C64B1208(0xD000000000000013, 0x80000001C6587DE0, v2);
  type metadata accessor for Signal();
  uint64_t v0 = (void *)swift_allocObject();
  uint64_t result = sub_1C64B7674(8, v2, MEMORY[0x1E4FBC860], 0, 0, v0);
  qword_1EBBFB7B0 = (uint64_t)result;
  return result;
}

uint64_t static Signal.WritingToolsTrigger.getter()
{
  return sub_1C64B2618(&qword_1EBBFB7C0);
}

void *sub_1C64B24BC()
{
  sub_1C64B1208(0x6E776F6E6B6E75, 0xE700000000000000, v2);
  type metadata accessor for Signal();
  uint64_t v0 = (void *)swift_allocObject();
  uint64_t result = sub_1C64B7768(v2, MEMORY[0x1E4FBC860], 0, 0, v0);
  qword_1EA3F08C8 = (uint64_t)result;
  return result;
}

void *Signal.__allocating_init(signalType:signalValue:fallbackSignals:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v10 = *(void *)(a1 + 24);
  uint64_t v11 = *(void *)(a1 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(a1, v10);
  OUTLINED_FUNCTION_0_2();
  MEMORY[0x1F4188790](v12);
  OUTLINED_FUNCTION_13_1(v13, v17);
  OUTLINED_FUNCTION_47_0();
  v14();
  uint64_t v15 = sub_1C64B7988(v5, a2, a3, a4, v4, v10, v11);
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v15;
}

uint64_t static Signal.UnknownSignal.getter()
{
  return sub_1C64B2618(&qword_1EA3F0058);
}

uint64_t sub_1C64B2618(void *a1)
{
  if (*a1 != -1) {
    swift_once();
  }

  return swift_retain();
}

void *static Signal.inAppSignal(inAppIdentifier:fallbackSignals:context:)(uint64_t *a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v4 = *a1;
  uint64_t v5 = a1[1];
  uint64_t v6 = a1[2];
  uint64_t v7 = a1[3];
  uint64_t v8 = *a3;
  uint64_t v9 = a3[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C64B12B0(v4, v5, v6, v7, v12);
  uint64_t v10 = (void *)OUTLINED_FUNCTION_38_0();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_1C64B7674(7, v12, a2, v8, v9, v10);
}

void static Signal.appEntitySignalLookup(_:)()
{
  OUTLINED_FUNCTION_49_0();
  uint64_t v1 = v0;
  uint64_t v4 = *v2;
  uint64_t v3 = v2[1];
  uint64_t v6 = v2[2];
  uint64_t v5 = v2[3];
  *(void *)(v0 + 104) = &type metadata for CoreSignalTypes;
  *(void *)(v0 + 112) = sub_1C64B7ABC();
  *(unsigned char *)(v1 + 80) = 0;
  unint64_t v7 = sub_1C64B7B08();
  unint64_t v8 = sub_1C64B7B54();
  unint64_t v9 = sub_1C64B7BA0();
  unint64_t v10 = sub_1C64B7BEC();
  uint64_t v11 = (void *)swift_allocObject();
  v11[2] = v4;
  long long v11[3] = v3;
  v11[4] = v6;
  v11[5] = v5;
  uint64_t v12 = (void *)swift_allocObject();
  v12[2] = v4;
  v12[3] = v3;
  v12[4] = v6;
  v12[5] = v5;
  *(void *)uint64_t v1 = v11;
  *(void *)(v1 + 24) = &type metadata for AppEntitySignalValue;
  *(void *)(v1 + 32) = v7;
  *(void *)(v1 + 40) = v8;
  *(void *)(v1 + 48) = v9;
  *(void *)(v1 + 56) = v10;
  *(void *)(v1 + 64) = sub_1C64B7C60;
  *(void *)(v1 + 72) = v12;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  OUTLINED_FUNCTION_39_0();
}

void *static Signal.appEntitySignal(appEntityDetails:fallbackSignals:context:)(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  long long v4 = *(_OWORD *)(a1 + 16);
  v10[0] = *(_OWORD *)a1;
  v10[1] = v4;
  char v11 = *(unsigned char *)(a1 + 32);
  uint64_t v5 = *a3;
  uint64_t v6 = a3[1];
  sub_1C64B7C68((uint64_t)v10);
  sub_1C64B13A4((uint64_t)v10, v9);
  unint64_t v7 = (void *)OUTLINED_FUNCTION_38_0();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_1C64B7674(0, v9, a2, v5, v6, v7);
}

uint64_t Signal.__allocating_init(copy:context:)(void *a1, unsigned __int8 *a2)
{
  uint64_t v4 = OUTLINED_FUNCTION_38_0();
  Signal.init(copy:context:)(a1, a2);
  return v4;
}

void *Signal.init(copy:context:)(void *a1, unsigned __int8 *a2)
{
  uint64_t v4 = *a2;
  int v5 = a2[1];
  uint64_t v6 = *((void *)a2 + 1);
  sub_1C64B7FD8((uint64_t)(a1 + 2), (uint64_t)(v2 + 2));
  sub_1C64B1F70((uint64_t)(a1 + 7), (uint64_t)(v2 + 7));
  v2[17] = a1[17];
  uint64_t v8 = a1[20];
  uint64_t v7 = a1[21];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_release();
  v2[20] = v8;
  v2[21] = v7;
  uint64_t v9 = 256;
  if (!v5) {
    uint64_t v9 = 0;
  }
  v2[18] = v9 | v4;
  v2[19] = v6;
  return v2;
}

void Signal.__allocating_init(from:)()
{
  OUTLINED_FUNCTION_25();
  uint64_t v31 = v0;
  uint64_t v4 = v3;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F0870);
  OUTLINED_FUNCTION_0_2();
  uint64_t v7 = v6;
  MEMORY[0x1F4188790](v8);
  OUTLINED_FUNCTION_23();
  uint64_t v39 = (uint64_t)v4;
  __swift_project_boxed_opaque_existential_1(v4, v4[3]);
  sub_1C64B0760();
  uint64_t v9 = v2;
  OUTLINED_FUNCTION_66_0();
  sub_1C6577210();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
  }
  else
  {
    uint64_t v16 = v7;
    sub_1C64A81D0(0, v2, v10, v11, v12, v13, v14, v15, v29, v30, SWORD2(v30), SBYTE6(v30), SHIBYTE(v30));
    LOBYTE(v33[0]) = 1;
    sub_1C64B7CA0();
    uint64_t v17 = v5;
    sub_1C6576F30();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF8F20);
    v34[0] = 2;
    sub_1C64B7D5C(&qword_1EA3F08F8, &qword_1EA3F0900);
    sub_1C6576F30();
    uint64_t v18 = v33[0];
    sub_1C64B3110(3, (uint64_t)v33);
    uint64_t v19 = v16;
    uint64_t v20 = v9;
    uint64_t v21 = v33[0];
    uint64_t v22 = v33[1];
    sub_1C64B7FD8((uint64_t)v38, (uint64_t)v34);
    sub_1C64B1F70((uint64_t)v37, (uint64_t)v33);
    v32[0] = v21;
    v32[1] = v22;
    uint64_t v23 = (void *)swift_allocObject();
    uint64_t v24 = v35;
    uint64_t v30 = v36;
    uint64_t v31 = v23;
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v34, v35);
    OUTLINED_FUNCTION_0_2();
    MEMORY[0x1F4188790](v25);
    uint64_t v27 = (char *)&v29 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
    OUTLINED_FUNCTION_47_0();
    v28();
    sub_1C64B7850((uint64_t)v27, v33, v18, v32, v31, v24, v30);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
    sub_1C64B2018((uint64_t)v37);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v20, v17);
    __swift_destroy_boxed_opaque_existential_1(v39);
  }
  OUTLINED_FUNCTION_52_0();
  OUTLINED_FUNCTION_26();
}

void sub_1C64B2CA4()
{
  OUTLINED_FUNCTION_25();
  uint64_t v29 = v2;
  sub_1C6576320();
  OUTLINED_FUNCTION_0_2();
  MEMORY[0x1F4188790](v3);
  OUTLINED_FUNCTION_10();
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFC3A0);
  OUTLINED_FUNCTION_0_2();
  uint64_t v6 = v5;
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_35_1();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F08B0);
  sub_1C64B03F4();
  OUTLINED_FUNCTION_44_0();
  if (!v0)
  {
    v33[0] = 1;
    if (sub_1C6576F50())
    {
      v33[0] = 0;
      sub_1C64BA558(&qword_1EBBFC2B0, 255, MEMORY[0x1E4FA5210]);
      OUTLINED_FUNCTION_30_2();
      sub_1C6576300();
      uint64_t v10 = sub_1C6576C80();
      swift_bridgeObjectRelease();
      if (v10 && (uint64_t v11 = dynamic_cast_existential_1_conditional(v10)) != 0)
      {
        uint64_t v13 = v11;
        uint64_t v14 = v12;
        OUTLINED_FUNCTION_27_2();
        sub_1C6576EA0();
        uint64_t v31 = v13;
        uint64_t v32 = v14;
        __swift_allocate_boxed_opaque_existential_4Tm((uint64_t *)&v30);
        OUTLINED_FUNCTION_54_0();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFC398);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF8168);
        if ((swift_dynamicCast() & 1) == 0)
        {
          uint64_t v34 = 0;
          memset(v33, 0, sizeof(v33));
        }
        sub_1C64B07F8((uint64_t)v33, (uint64_t)&v30, &qword_1EBBF8EB8);
        if (v31)
        {
          OUTLINED_FUNCTION_5_3();
          v20();
          OUTLINED_FUNCTION_41();
          v21();
          sub_1C64A5488(&v30, v29);
        }
        else
        {
          sub_1C64BAE80((uint64_t)&v30, &qword_1EBBF8EB8);
          type metadata accessor for CodingErrors();
          sub_1C64BA558(&qword_1EA3F07C8, 255, (void (*)(uint64_t))type metadata accessor for CodingErrors);
          swift_allocError();
          uint64_t v23 = v22;
          uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F07D0);
          OUTLINED_FUNCTION_45_0(v23, v25, v26, v24);
          OUTLINED_FUNCTION_5_3();
          v27();
          OUTLINED_FUNCTION_41();
          v28();
        }
        sub_1C64BAE80((uint64_t)v33, &qword_1EBBF8EB8);
      }
      else
      {
        uint64_t v15 = type metadata accessor for CodingErrors();
        sub_1C64BA558(&qword_1EA3F07C8, 255, (void (*)(uint64_t))type metadata accessor for CodingErrors);
        OUTLINED_FUNCTION_11_1();
        OUTLINED_FUNCTION_37();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F07D0);
        *(void *)(v15 + 24) = &type metadata for Continuer.CodingKeys;
        unint64_t v16 = sub_1C64B08C4();
        OUTLINED_FUNCTION_61(v16);
        uint64_t v17 = OUTLINED_FUNCTION_20_2();
        v18(v17);
        OUTLINED_FUNCTION_18_2();
        OUTLINED_FUNCTION_5_3();
        v19();
        (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v1, v4);
      }
    }
    else
    {
      uint64_t v8 = OUTLINED_FUNCTION_10_1();
      v9(v8);
      *(void *)(v29 + 32) = 0;
      *(_OWORD *)uint64_t v29 = 0u;
      *(_OWORD *)(v29 + 16) = 0u;
    }
  }
  OUTLINED_FUNCTION_52_0();
  OUTLINED_FUNCTION_26();
}

uint64_t sub_1C64B3110@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v36 = a2;
  uint64_t v4 = sub_1C6576320();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFC3A0);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v41 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F0870);
  sub_1C64B03F4();
  uint64_t result = sub_1C6576E80();
  if (!v2)
  {
    uint64_t v34 = v5;
    uint64_t v35 = v9;
    uint64_t v13 = v36;
    LOBYTE(v37[0]) = 1;
    if ((sub_1C6576F50() & 1) == 0)
    {
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v11, v8);
      *(void *)uint64_t v13 = 0;
      *(void *)(v13 + 8) = 0;
      return result;
    }
    LOBYTE(v37[0]) = 0;
    sub_1C64BA558(&qword_1EBBFC2B0, 255, MEMORY[0x1E4FA5210]);
    uint64_t v14 = v7;
    uint64_t v15 = v4;
    sub_1C6576F30();
    sub_1C6576300();
    uint64_t v16 = sub_1C6576C80();
    swift_bridgeObjectRelease();
    if (v16)
    {
      uint64_t v17 = dynamic_cast_existential_1_conditional(v16);
      if (v17)
      {
        uint64_t v19 = v17;
        uint64_t v20 = v18;
        char v40 = 1;
        sub_1C6576EA0();
        v37[3] = v19;
        v37[4] = v20;
        __swift_allocate_boxed_opaque_existential_4Tm(v37);
        sub_1C65769A0();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFC398);
        if (swift_dynamicCast())
        {
          uint64_t v27 = v39;
          if (v39)
          {
            __int16 v28 = v38;
            uint64_t v29 = *(void (**)(char *, uint64_t))(v34 + 8);
            swift_bridgeObjectRetain();
            v29(v14, v15);
            (*(void (**)(char *, uint64_t))(v35 + 8))(v11, v8);
            *(unsigned char *)uint64_t v13 = v28 & 1;
            *(unsigned char *)(v13 + 1) = HIBYTE(v28) & 1;
            *(void *)(v13 + 8) = v27;
            return swift_bridgeObjectRelease();
          }
        }
        else
        {
          uint64_t v38 = 0;
          uint64_t v39 = 0;
        }
        type metadata accessor for CodingErrors();
        sub_1C64BA558(&qword_1EA3F07C8, 255, (void (*)(uint64_t))type metadata accessor for CodingErrors);
        swift_allocError();
        uint64_t v31 = v30;
        uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F07D0);
        __swift_storeEnumTagSinglePayload(v31, 1, 1, v32);
        swift_willThrow();
        (*(void (**)(char *, uint64_t))(v34 + 8))(v14, v15);
        (*(void (**)(char *, uint64_t))(v35 + 8))(v11, v8);
        return swift_bridgeObjectRelease();
      }
    }
    type metadata accessor for CodingErrors();
    sub_1C64BA558(&qword_1EA3F07C8, 255, (void (*)(uint64_t))type metadata accessor for CodingErrors);
    swift_allocError();
    uint64_t v22 = v21;
    uint64_t v23 = v8;
    uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F07D0);
    uint64_t v25 = v22 + *(int *)(v24 + 48);
    *(void *)(v22 + 24) = &unk_1F21595F0;
    *(void *)(v22 + 32) = sub_1C64B0760();
    *(unsigned char *)uint64_t v22 = v41;
    uint64_t v26 = v34;
    (*(void (**)(uint64_t, char *, uint64_t))(v34 + 16))(v25, v14, v15);
    __swift_storeEnumTagSinglePayload(v22, 0, 1, v24);
    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v14, v15);
    return (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v11, v23);
  }
  return result;
}

void sub_1C64B36D8()
{
  OUTLINED_FUNCTION_25();
  uint64_t v3 = sub_1C6576320();
  OUTLINED_FUNCTION_0_2();
  uint64_t v5 = v4;
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_17_2();
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFC3A0);
  OUTLINED_FUNCTION_0_2();
  uint64_t v9 = v8;
  MEMORY[0x1F4188790](v10);
  OUTLINED_FUNCTION_23();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F0A90);
  sub_1C64B03F4();
  sub_1C6576E80();
  if (!v0)
  {
    LOBYTE(v30[0]) = 1;
    if (sub_1C6576F50())
    {
      LOBYTE(v30[0]) = 0;
      sub_1C64BA558(&qword_1EBBFC2B0, 255, MEMORY[0x1E4FA5210]);
      sub_1C6576F30();
      sub_1C6576300();
      uint64_t v11 = sub_1C6576C80();
      swift_bridgeObjectRelease();
      if (v11)
      {
        uint64_t v12 = dynamic_cast_existential_1_conditional(v11);
        if (v12)
        {
          uint64_t v14 = v12;
          uint64_t v28 = v13;
          OUTLINED_FUNCTION_27_2();
          sub_1C6576EA0();
          void v30[3] = v14;
          v30[4] = v28;
          __swift_allocate_boxed_opaque_existential_4Tm(v30);
          sub_1C65769A0();
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFC398);
          if (swift_dynamicCast())
          {
            if (v31)
            {
              uint64_t v18 = *(void (**)(uint64_t))(v5 + 8);
              swift_bridgeObjectRetain();
              uint64_t v19 = OUTLINED_FUNCTION_23_2();
              v18(v19);
              OUTLINED_FUNCTION_41();
              v20();
              swift_bridgeObjectRelease();
              goto LABEL_8;
            }
          }
          else
          {
            uint64_t v30[5] = 0;
            uint64_t v31 = 0;
          }
          uint64_t v21 = type metadata accessor for CodingErrors();
          sub_1C64BA558(&qword_1EA3F07C8, 255, (void (*)(uint64_t))type metadata accessor for CodingErrors);
          OUTLINED_FUNCTION_11_1();
          OUTLINED_FUNCTION_37();
          uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F07D0);
          OUTLINED_FUNCTION_45_0(v21, v23, v24, v22);
          uint64_t v25 = OUTLINED_FUNCTION_23_2();
          v26(v25);
          OUTLINED_FUNCTION_41();
          v27();
          swift_bridgeObjectRelease();
          goto LABEL_8;
        }
      }
      uint64_t v16 = type metadata accessor for CodingErrors();
      sub_1C64BA558(&qword_1EA3F07C8, 255, (void (*)(uint64_t))type metadata accessor for CodingErrors);
      OUTLINED_FUNCTION_11_1();
      OUTLINED_FUNCTION_37();
      uint64_t v29 = v16 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F07D0) + 48);
      *(void *)(v16 + 24) = &type metadata for AppIntentFilter.CodingKeys;
      unint64_t v17 = sub_1C64BA6F0();
      OUTLINED_FUNCTION_61(v17);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v29, v2, v3);
      OUTLINED_FUNCTION_18_2();
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v2, v3);
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v1, v7);
    }
    else
    {
      OUTLINED_FUNCTION_41();
      v15();
    }
  }
LABEL_8:
  OUTLINED_FUNCTION_52_0();
  OUTLINED_FUNCTION_26();
}

void sub_1C64B3B28()
{
  OUTLINED_FUNCTION_25();
  uint64_t v31 = v2;
  sub_1C6576320();
  OUTLINED_FUNCTION_0_2();
  MEMORY[0x1F4188790](v3);
  OUTLINED_FUNCTION_10();
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFC3A0);
  OUTLINED_FUNCTION_0_2();
  uint64_t v6 = v5;
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_35_1();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F0A78);
  sub_1C64B03F4();
  OUTLINED_FUNCTION_44_0();
  if (!v0)
  {
    LOBYTE(v32[0]) = 1;
    if (sub_1C6576F50())
    {
      LOBYTE(v32[0]) = 0;
      sub_1C64BA558(&qword_1EBBFC2B0, 255, MEMORY[0x1E4FA5210]);
      OUTLINED_FUNCTION_30_2();
      sub_1C6576300();
      uint64_t v10 = sub_1C6576C80();
      swift_bridgeObjectRelease();
      if (v10)
      {
        uint64_t v11 = dynamic_cast_existential_1_conditional(v10);
        if (v11)
        {
          uint64_t v13 = v11;
          uint64_t v14 = v12;
          OUTLINED_FUNCTION_27_2();
          sub_1C6576EA0();
          v32[3] = v13;
          v32[4] = v14;
          __swift_allocate_boxed_opaque_existential_4Tm(v32);
          OUTLINED_FUNCTION_54_0();
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFC398);
          if (swift_dynamicCast())
          {
            unsigned __int8 v20 = v36;
            if (v36 != 255)
            {
              uint64_t v22 = v34;
              uint64_t v21 = v35;
              uint64_t v23 = v33;
              sub_1C64BA678(v33, v34, v35, v36);
              OUTLINED_FUNCTION_7_3();
              v24();
              OUTLINED_FUNCTION_41();
              v25();
              *(void *)uint64_t v31 = v23;
              *(void *)(v31 + 8) = v22;
              *(void *)(v31 + 16) = v21;
              *(unsigned char *)(v31 + 24) = v20;
LABEL_15:
              sub_1C64BA5EC(v33, v34, v35, v36);
              goto LABEL_9;
            }
          }
          else
          {
            uint64_t v33 = 0;
            uint64_t v34 = 0;
            uint64_t v35 = 0;
            unsigned __int8 v36 = -1;
          }
          uint64_t v26 = type metadata accessor for CodingErrors();
          sub_1C64BA558(&qword_1EA3F07C8, 255, (void (*)(uint64_t))type metadata accessor for CodingErrors);
          OUTLINED_FUNCTION_11_1();
          OUTLINED_FUNCTION_37();
          uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F07D0);
          OUTLINED_FUNCTION_45_0(v26, v28, v29, v27);
          OUTLINED_FUNCTION_7_3();
          v30();
          (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v1, v4);
          goto LABEL_15;
        }
      }
      uint64_t v15 = type metadata accessor for CodingErrors();
      sub_1C64BA558(&qword_1EA3F07C8, 255, (void (*)(uint64_t))type metadata accessor for CodingErrors);
      OUTLINED_FUNCTION_11_1();
      OUTLINED_FUNCTION_37();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F07D0);
      *(void *)(v15 + 24) = &unk_1F2160AD0;
      unint64_t v16 = sub_1C64BA5A0();
      OUTLINED_FUNCTION_61(v16);
      uint64_t v17 = OUTLINED_FUNCTION_20_2();
      v18(v17);
      OUTLINED_FUNCTION_18_2();
      OUTLINED_FUNCTION_5_3();
      v19();
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v1, v4);
    }
    else
    {
      uint64_t v8 = OUTLINED_FUNCTION_10_1();
      v9(v8);
      *(void *)uint64_t v31 = 0;
      *(void *)(v31 + 8) = 0;
      *(void *)(v31 + 16) = 0;
      *(unsigned char *)(v31 + 24) = -1;
    }
  }
LABEL_9:
  OUTLINED_FUNCTION_52_0();
  OUTLINED_FUNCTION_26();
}

uint64_t static Signal.== infix(_:_:)(void *a1, void *a2)
{
  __swift_project_boxed_opaque_existential_1(a1 + 2, a1[5]);
  uint64_t v4 = OUTLINED_FUNCTION_24_1();
  uint64_t v6 = v5(v4);
  uint64_t v8 = v7;
  __swift_project_boxed_opaque_existential_1(a2 + 2, a2[5]);
  uint64_t v9 = OUTLINED_FUNCTION_26_3();
  if (v6 == v10(v9) && v8 == v11)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v13 = OUTLINED_FUNCTION_32_2();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v14 = 0;
    if ((v13 & 1) == 0) {
      return v14 & 1;
    }
  }
  uint64_t v15 = (uint64_t (*)(uint64_t *))a1[15];
  unint64_t v16 = __swift_project_boxed_opaque_existential_1(a2 + 7, a2[10]);
  OUTLINED_FUNCTION_43_0((uint64_t)v16, v17, v18, v19, v20, v21, v22, v23, v26[0], v26[1], v26[2], v26[3]);
  OUTLINED_FUNCTION_67();
  OUTLINED_FUNCTION_22_2();
  v24();
  char v14 = v15(v26);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
  return v14 & 1;
}

uint64_t Signal.hash(into:)()
{
  OUTLINED_FUNCTION_58_0((void *)(v0 + 16));
  OUTLINED_FUNCTION_15_1();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_71_0();
  __swift_project_boxed_opaque_existential_1(v1, v2);
  sub_1C6576500();
  sub_1C6577190();
  return sub_1C6577160();
}

uint64_t Signal.description.getter()
{
  uint64_t v1 = *(void *)(v0 + 160);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Signal.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F0868);
  OUTLINED_FUNCTION_0_2();
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_23();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C64B0760();
  OUTLINED_FUNCTION_51();
  uint64_t v6 = *(void *)(v3 + 40);
  uint64_t v7 = *(void *)(v3 + 48);
  __swift_project_boxed_opaque_existential_1((void *)(v3 + 16), v6);
  *((void *)&v16 + 1) = v6;
  unint64_t v17 = *(void *)(v7 + 24);
  __swift_allocate_boxed_opaque_existential_4Tm((uint64_t *)&v15);
  OUTLINED_FUNCTION_67();
  (*(void (**)(void))(v8 + 16))();
  sub_1C64AAC7C();
  if (v2)
  {
    OUTLINED_FUNCTION_5_3();
    v9();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v15);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v15);
    LOBYTE(v15) = 1;
    sub_1C64B7D10();
    sub_1C6577010();
    *(void *)&long long v15 = *(void *)(v3 + 136);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF8F20);
    sub_1C64B7D5C(&qword_1EA3F0910, &qword_1EA3F0918);
    OUTLINED_FUNCTION_21_2();
    uint64_t v11 = *(void *)(v3 + 152);
    if (v11)
    {
      int v12 = *(_DWORD *)(v3 + 144);
      *((void *)&v16 + 1) = &type metadata for SignalContext;
      unint64_t v13 = sub_1C64B7DF0();
      LOWORD(v15) = v12 & 0x101;
      unint64_t v17 = v13;
      *((void *)&v15 + 1) = v11;
    }
    else
    {
      unint64_t v17 = 0;
      long long v15 = 0u;
      long long v16 = 0u;
    }
    swift_bridgeObjectRetain();
    sub_1C64B460C();
    OUTLINED_FUNCTION_5_3();
    v14();
    return sub_1C64BAE80((uint64_t)&v15, &qword_1EBBFBE40);
  }
}

void sub_1C64B43D0()
{
  OUTLINED_FUNCTION_25();
  uint64_t v2 = v1;
  sub_1C6576320();
  OUTLINED_FUNCTION_0_2();
  MEMORY[0x1F4188790](v3);
  OUTLINED_FUNCTION_17_2();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFC448);
  OUTLINED_FUNCTION_0_2();
  MEMORY[0x1F4188790](v4);
  OUTLINED_FUNCTION_10();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F08C0);
  sub_1C64B03F4();
  sub_1C6576F70();
  sub_1C64B07F8(v2, (uint64_t)v11, &qword_1EBBFBE40);
  if (v12)
  {
    OUTLINED_FUNCTION_57_0();
    swift_getDynamicType();
    sub_1C65762F0();
    v11[0] = 0;
    sub_1C64BA558(&qword_1EBBFC458, 255, MEMORY[0x1E4FA5210]);
    OUTLINED_FUNCTION_31_2();
    sub_1C6577010();
    uint64_t v5 = OUTLINED_FUNCTION_11_2();
    v6(v5);
    if (!v0)
    {
      __swift_project_boxed_opaque_existential_1(v13, v13[3]);
      OUTLINED_FUNCTION_55_1();
      sub_1C65764D0();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
    }
    uint64_t v9 = OUTLINED_FUNCTION_41_0();
    v10(v9);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
  }
  else
  {
    uint64_t v7 = OUTLINED_FUNCTION_41_0();
    v8(v7);
    sub_1C64BAE80((uint64_t)v11, &qword_1EBBFBE40);
  }
  OUTLINED_FUNCTION_26();
}

void sub_1C64B45EC()
{
}

void sub_1C64B460C()
{
  OUTLINED_FUNCTION_25();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  sub_1C6576320();
  OUTLINED_FUNCTION_0_2();
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_17_2();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFC448);
  OUTLINED_FUNCTION_0_2();
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_10();
  __swift_instantiateConcreteTypeFromMangledName(v2);
  sub_1C64B03F4();
  sub_1C6576F70();
  sub_1C64B07F8(v4, (uint64_t)v13, &qword_1EBBFBE40);
  if (v14)
  {
    OUTLINED_FUNCTION_57_0();
    swift_getDynamicType();
    sub_1C65762F0();
    v13[0] = 0;
    sub_1C64BA558(&qword_1EBBFC458, 255, MEMORY[0x1E4FA5210]);
    OUTLINED_FUNCTION_31_2();
    sub_1C6577010();
    uint64_t v7 = OUTLINED_FUNCTION_11_2();
    v8(v7);
    if (!v0)
    {
      __swift_project_boxed_opaque_existential_1(v15, v15[3]);
      OUTLINED_FUNCTION_55_1();
      sub_1C65764D0();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
    }
    uint64_t v11 = OUTLINED_FUNCTION_40_0();
    v12(v11);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
  }
  else
  {
    uint64_t v9 = OUTLINED_FUNCTION_40_0();
    v10(v9);
    sub_1C64BAE80((uint64_t)v13, &qword_1EBBFBE40);
  }
  OUTLINED_FUNCTION_26();
}

void sub_1C64B482C()
{
}

uint64_t sub_1C64B484C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x79546C616E676973 && a2 == 0xEA00000000006570;
  if (v2 || (OUTLINED_FUNCTION_70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x61566C616E676973 && a2 == 0xEB0000000065756CLL;
    if (v6 || (OUTLINED_FUNCTION_70() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x6B6361626C6C6166 && a2 == 0xEF736C616E676953;
      if (v7 || (OUTLINED_FUNCTION_34_0(), (OUTLINED_FUNCTION_70() & 1) != 0))
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0x747865746E6F63 && a2 == 0xE700000000000000)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        char v9 = OUTLINED_FUNCTION_70();
        swift_bridgeObjectRelease();
        if (v9) {
          return 3;
        }
        else {
          return 4;
        }
      }
    }
  }
}

uint64_t sub_1C64B4A0C(char a1)
{
  uint64_t result = 0x79546C616E676973;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x61566C616E676973;
      break;
    case 2:
      uint64_t result = OUTLINED_FUNCTION_34_0();
      break;
    case 3:
      uint64_t result = 0x747865746E6F63;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C64B4AA8()
{
  return sub_1C64B4A0C(*v0);
}

uint64_t sub_1C64B4AB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C64B484C(a1, a2);
  *a3 = result;
  return result;
}

void sub_1C64B4AD8(unsigned char *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_1C64B4AE4(uint64_t a1)
{
  unint64_t v2 = sub_1C64B0760();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C64B4B20(uint64_t a1)
{
  unint64_t v2 = sub_1C64B0760();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t Signal.deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  sub_1C64B2018(v0 + 56);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t Signal.__deallocating_deinit()
{
  Signal.deinit();

  return MEMORY[0x1F4186488](v0, 176, 7);
}

uint64_t Signal.hashValue.getter()
{
  return sub_1C6577190();
}

uint64_t sub_1C64B4C08()
{
  return Signal.hashValue.getter();
}

uint64_t sub_1C64B4C2C()
{
  return Signal.hash(into:)();
}

uint64_t sub_1C64B4C50()
{
  return sub_1C6577190();
}

uint64_t sub_1C64B4C90()
{
  return Signal.description.getter();
}

void sub_1C64B4CB4(void *a1@<X8>)
{
  Signal.__allocating_init(from:)();
  if (!v1) {
    *a1 = v3;
  }
}

uint64_t sub_1C64B4CE0(void *a1)
{
  return Signal.encode(to:)(a1);
}

uint64_t sub_1C64B4D04(void **a1, void **a2)
{
  return static Signal.== infix(_:_:)(*a1, *a2) & 1;
}

SiriSuggestionsKit::SignalContext::ViewEntityIdentifier __swiftcall SignalContext.ViewEntityIdentifier.init(typeIdentifier:instanceIdentifier:)(Swift::String typeIdentifier, Swift::String instanceIdentifier)
{
  *unint64_t v2 = typeIdentifier;
  v2[1] = instanceIdentifier;
  result.instanceIdentifier = instanceIdentifier;
  result.typeIdentifier = typeIdentifier;
  return result;
}

uint64_t sub_1C64B4D34(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E65644965707974 && a2 == 0xEE00726569666974;
  if (v2 || (sub_1C6577090() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001C6587D80)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1C6577090();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1C64B4E48(char a1)
{
  if (a1) {
    return 0xD000000000000012;
  }
  else {
    return 0x6E65644965707974;
  }
}

uint64_t sub_1C64B4E90()
{
  return sub_1C64B4E48(*v0);
}

uint64_t sub_1C64B4E98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C64B4D34(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C64B4EC0(uint64_t a1)
{
  unint64_t v2 = sub_1C64B7E3C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C64B4EFC(uint64_t a1)
{
  unint64_t v2 = sub_1C64B7E3C();

  return MEMORY[0x1F41862B0](a1, v2);
}

void SignalContext.ViewEntityIdentifier.encode(to:)()
{
  OUTLINED_FUNCTION_25();
  unint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F0928);
  OUTLINED_FUNCTION_0_2();
  MEMORY[0x1F4188790](v3);
  OUTLINED_FUNCTION_23();
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  sub_1C64B7E3C();
  OUTLINED_FUNCTION_66_0();
  sub_1C6577240();
  sub_1C6576FD0();
  if (!v0)
  {
    OUTLINED_FUNCTION_27_2();
    sub_1C6576FD0();
  }
  OUTLINED_FUNCTION_5_3();
  v4();
  OUTLINED_FUNCTION_50_0();
  OUTLINED_FUNCTION_26();
}

void SignalContext.ViewEntityIdentifier.init(from:)()
{
  OUTLINED_FUNCTION_25();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F0938);
  OUTLINED_FUNCTION_0_2();
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_9_2();
  sub_1C64B7E3C();
  OUTLINED_FUNCTION_48_0();
  if (v0)
  {
    __swift_destroy_boxed_opaque_existential_1(v2);
  }
  else
  {
    OUTLINED_FUNCTION_56_0();
    uint64_t v6 = sub_1C6576EF0();
    uint64_t v8 = v7;
    OUTLINED_FUNCTION_27_2();
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_1C6576EF0();
    uint64_t v11 = v10;
    uint64_t v13 = v9;
    OUTLINED_FUNCTION_41();
    v12();
    *uint64_t v4 = v6;
    v4[1] = v8;
    v4[2] = v13;
    v4[3] = v11;
    swift_bridgeObjectRetain();
    __swift_destroy_boxed_opaque_existential_1(v2);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_26();
}

void sub_1C64B51E0()
{
}

void sub_1C64B51F8()
{
}

uint64_t SignalContext.onScreen.getter()
{
  return *v0;
}

uint64_t SignalContext.explicitRequest.getter()
{
  return *(unsigned __int8 *)(v0 + 1);
}

uint64_t SignalContext.viewEntities.getter()
{
  return swift_bridgeObjectRetain();
}

SiriSuggestionsKit::SignalContext __swiftcall SignalContext.init(onScreen:explicitRequest:)(Swift::Bool onScreen, Swift::Bool explicitRequest)
{
  *(unsigned char *)uint64_t v2 = onScreen;
  *(unsigned char *)(v2 + 1) = explicitRequest;
  *(void *)(v2 + 8) = MEMORY[0x1E4FBC860];
  LOBYTE(result.viewEntities._rawValue) = explicitRequest;
  result.onScreen = onScreen;
  return result;
}

SiriSuggestionsKit::SignalContext __swiftcall SignalContext.init(onScreen:explicitRequest:viewEntities:)(Swift::Bool onScreen, Swift::Bool explicitRequest, Swift::OpaquePointer viewEntities)
{
  *(unsigned char *)uint64_t v3 = onScreen;
  *(unsigned char *)(v3 + 1) = explicitRequest;
  *(Swift::OpaquePointer *)(v3 + 8) = viewEntities;
  LOBYTE(result.viewEntities._rawValue) = explicitRequest;
  result.onScreen = onScreen;
  return result;
}

uint64_t sub_1C64B5250(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E65657263536E6FLL && a2 == 0xE800000000000000;
  if (v2 || (sub_1C6577090() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x746963696C707865 && a2 == 0xEF74736575716552;
    if (v6 || (sub_1C6577090() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x69746E4577656976 && a2 == 0xEC00000073656974)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      char v8 = sub_1C6577090();
      swift_bridgeObjectRelease();
      if (v8) {
        return 2;
      }
      else {
        return 3;
      }
    }
  }
}

uint64_t sub_1C64B53DC(char a1)
{
  if (!a1) {
    return 0x6E65657263536E6FLL;
  }
  if (a1 == 1) {
    return 0x746963696C707865;
  }
  return 0x69746E4577656976;
}

uint64_t sub_1C64B5448()
{
  return sub_1C64B630C();
}

uint64_t sub_1C64B5464()
{
  return sub_1C64B53DC(*v0);
}

uint64_t sub_1C64B546C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C64B5250(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C64B5494(uint64_t a1)
{
  unint64_t v2 = sub_1C64B7E88();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C64B54D0(uint64_t a1)
{
  unint64_t v2 = sub_1C64B7E88();

  return MEMORY[0x1F41862B0](a1, v2);
}

void SignalContext.encode(to:)()
{
  OUTLINED_FUNCTION_25();
  uint64_t v3 = v2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F0940);
  OUTLINED_FUNCTION_0_2();
  uint64_t v6 = v5;
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_23();
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  sub_1C64B7E88();
  OUTLINED_FUNCTION_66_0();
  sub_1C6577240();
  sub_1C6576FE0();
  if (!v0)
  {
    OUTLINED_FUNCTION_27_2();
    sub_1C6576FE0();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F0950);
    sub_1C64B7ED4(&qword_1EA3F0958, (void (*)(void))sub_1C64B7F40);
    OUTLINED_FUNCTION_21_2();
  }
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v1, v4);
  OUTLINED_FUNCTION_50_0();
  OUTLINED_FUNCTION_26();
}

void SignalContext.init(from:)()
{
  OUTLINED_FUNCTION_25();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F0968);
  OUTLINED_FUNCTION_0_2();
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_9_2();
  sub_1C64B7E88();
  sub_1C6577210();
  if (!v0)
  {
    OUTLINED_FUNCTION_56_0();
    char v6 = sub_1C6576F00();
    OUTLINED_FUNCTION_27_2();
    char v7 = sub_1C6576F00();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F0950);
    sub_1C64B7ED4(&qword_1EA3F0970, (void (*)(void))sub_1C64B7F8C);
    sub_1C6576F30();
    OUTLINED_FUNCTION_41();
    v8();
    *(unsigned char *)uint64_t v4 = v6 & 1;
    *(unsigned char *)(v4 + 1) = v7 & 1;
    *(void *)(v4 + 8) = v9;
  }
  __swift_destroy_boxed_opaque_existential_1(v2);
  OUTLINED_FUNCTION_52_0();
  OUTLINED_FUNCTION_26();
}

void sub_1C64B5864()
{
}

void sub_1C64B587C()
{
}

BOOL static SignalSource.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t SignalSource.hash(into:)()
{
  return sub_1C6577160();
}

uint64_t SignalSource.hashValue.getter()
{
  return sub_1C6577190();
}

void sub_1C64B5920(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_1C64B5928()
{
  return 0x6E776F6E6B6E75;
}

BOOL sub_1C64B5940()
{
  uint64_t v0 = sub_1C6576E60();
  swift_bridgeObjectRelease();
  return v0 != 0;
}

BOOL sub_1C64B5994@<W0>(unsigned char *a1@<X8>)
{
  BOOL result = sub_1C64B5940();
  *a1 = result;
  return result;
}

uint64_t sub_1C64B59C8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1C64B5928();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1C64B59F8()
{
  return sub_1C6576760();
}

uint64_t sub_1C64B5A58()
{
  return sub_1C6576750();
}

SiriSuggestionsKit::SignalSource __swiftcall CoreSignalTypes.getSource()()
{
  unsigned char *v0 = byte_1C657A75A[*v1];
  return result;
}

uint64_t CoreSignalTypes.description.getter()
{
  switch(*v0)
  {
    case 3:
      OUTLINED_FUNCTION_42_0();
      break;
    case 4:
      OUTLINED_FUNCTION_34_0();
      break;
    default:
      break;
  }
  sub_1C6576620();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t CoreSignalTypes.rawValue.getter()
{
  uint64_t result = 0x77656956707061;
  switch(*v0)
  {
    case 1:
      uint64_t result = 7368801;
      break;
    case 2:
      uint64_t result = 0x6765746143707061;
      break;
    case 3:
      uint64_t result = OUTLINED_FUNCTION_42_0();
      break;
    case 4:
      uint64_t result = OUTLINED_FUNCTION_34_0();
      break;
    case 5:
      uint64_t result = 0x6F4C656369766564;
      break;
    case 6:
      uint64_t result = 0xD000000000000017;
      break;
    case 7:
      uint64_t result = 0x7070416E69;
      break;
    case 8:
      uint64_t result = 0x6769725469726973;
      break;
    default:
      return result;
  }
  return result;
}

SiriSuggestionsKit::CoreSignalTypes_optional __swiftcall CoreSignalTypes.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1C6576E60();
  result.value = swift_bridgeObjectRelease();
  char v5 = 9;
  if (v3 < 9) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t sub_1C64B5D90(unsigned __int8 *a1, char *a2)
{
  return sub_1C6498824(*a1, *a2);
}

uint64_t sub_1C64B5D9C()
{
  return sub_1C655ACE8(*v0);
}

uint64_t sub_1C64B5DA4()
{
  return sub_1C649AD9C();
}

uint64_t sub_1C64B5DAC(uint64_t a1)
{
  return sub_1C64EBE88(a1, *v1);
}

SiriSuggestionsKit::CoreSignalTypes_optional sub_1C64B5DB4(Swift::String *a1)
{
  return CoreSignalTypes.init(rawValue:)(*a1);
}

uint64_t sub_1C64B5DC0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = CoreSignalTypes.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1C64B5DF4()
{
  return sub_1C6576760();
}

uint64_t sub_1C64B5E54()
{
  return sub_1C6576750();
}

uint64_t EnvironmentAwareSignal.environment.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C64B7FD8(v1, a1);
}

uint64_t EnvironmentAwareSignal.subscribedSignal.getter()
{
  return swift_retain();
}

uint64_t EnvironmentAwareSignal.activeSignal.getter()
{
  return swift_retain();
}

uint64_t EnvironmentAwareSignal.deliveryVehicle.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 56);
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t v4 = *(void *)(v1 + 72);
  uint64_t v5 = *(void *)(v1 + 80);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  char v6 = *(unsigned char *)(v1 + 88);
  *(unsigned char *)(a1 + 32) = v6;
  return sub_1C64B8038(v2, v3, v4, v5, v6);
}

double EnvironmentAwareSignal.init(environment:subscribedSignal:activeSignal:)@<D0>(long long *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_1C64A5488(a1, a4);
  *(void *)(a4 + 40) = a2;
  *(void *)(a4 + 48) = a3;
  double result = 0.0;
  *(_OWORD *)(a4 + 56) = 0u;
  *(_OWORD *)(a4 + 72) = 0u;
  *(unsigned char *)(a4 + 88) = -1;
  return result;
}

__n128 EnvironmentAwareSignal.init(environment:subscribedSignal:activeSignal:deliveryVehicle:)@<Q0>(long long *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, __n128 *a4@<X3>, uint64_t a5@<X8>)
{
  __n128 v12 = *a4;
  unint64_t v8 = a4[1].n128_u64[0];
  unint64_t v9 = a4[1].n128_u64[1];
  unsigned __int8 v10 = a4[2].n128_u8[0];
  sub_1C64A5488(a1, a5);
  *(void *)(a5 + 40) = a2;
  *(void *)(a5 + 48) = a3;
  __n128 result = v12;
  *(__n128 *)(a5 + 56) = v12;
  *(void *)(a5 + 72) = v8;
  *(void *)(a5 + 80) = v9;
  *(unsigned char *)(a5 + 88) = v10;
  return result;
}

uint64_t SignalDetails.subscribedSignal.getter@<X0>(void *a1@<X8>)
{
  return OUTLINED_FUNCTION_29_0(*v1, a1);
}

uint64_t SignalDetails.activeSignal.getter@<X0>(void *a1@<X8>)
{
  return OUTLINED_FUNCTION_29_0(*(void *)(v1 + 16), a1);
}

double SignalDetails.distanceFromActive.getter()
{
  return *(double *)(v0 + 32);
}

void *SignalDetails.init(subscribedSignal:activeSignal:distanceFromActive:)@<X0>(void *result@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  uint64_t v4 = result[1];
  uint64_t v5 = *a2;
  uint64_t v6 = a2[1];
  *(void *)a3 = *result;
  *(void *)(a3 + 8) = v4;
  *(void *)(a3 + 16) = v5;
  *(void *)(a3 + 24) = v6;
  *(double *)(a3 + 32) = a4;
  return result;
}

uint64_t SignalDetails.hash(into:)()
{
  return sub_1C6577180();
}

uint64_t static SignalDetails.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t v4 = *(void **)(a1 + 16);
  uint64_t v5 = *(void *)(a1 + 24);
  double v6 = *(double *)(a1 + 32);
  char v7 = *(void **)a2;
  uint64_t v8 = *(void *)(a2 + 8);
  unint64_t v9 = *(void **)(a2 + 16);
  uint64_t v10 = *(void *)(a2 + 24);
  double v11 = *(double *)(a2 + 32);
  type metadata accessor for Signal();
  swift_retain();
  swift_retain();
  char v12 = static Signal.== infix(_:_:)(v2, v7);
  swift_release();
  swift_release();
  uint64_t result = 0;
  if ((v12 & 1) != 0 && v3 == v8)
  {
    swift_retain();
    swift_retain();
    unsigned __int8 v14 = static Signal.== infix(_:_:)(v4, v9);
    swift_release();
    swift_release();
    if (v6 == v11) {
      return v14 & (v5 == v10);
    }
    else {
      return 0;
    }
  }
  return result;
}

uint64_t static SignalStats.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  type metadata accessor for Signal();
  return static Signal.== infix(_:_:)(v2, v4) & (v3 == v5);
}

uint64_t sub_1C64B61A8(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000010 && a2 == 0x80000001C6587DA0 || (sub_1C6577090() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v5 = a1 == 0x6953657669746361 && a2 == 0xEC0000006C616E67;
    if (v5 || (sub_1C6577090() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0xD000000000000012 && a2 == 0x80000001C6587DC0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      char v6 = sub_1C6577090();
      swift_bridgeObjectRelease();
      if (v6) {
        return 2;
      }
      else {
        return 3;
      }
    }
  }
}

uint64_t sub_1C64B630C()
{
  return sub_1C6577190();
}

uint64_t sub_1C64B634C(char a1)
{
  uint64_t result = 0xD000000000000010;
  if (a1)
  {
    if (a1 == 1) {
      return 0x6953657669746361;
    }
    else {
      return 0xD000000000000012;
    }
  }
  return result;
}

uint64_t sub_1C64B63B4()
{
  return sub_1C64B634C(*v0);
}

uint64_t sub_1C64B63BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C64B61A8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C64B63E4(uint64_t a1)
{
  unint64_t v2 = sub_1C64B804C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C64B6420(uint64_t a1)
{
  unint64_t v2 = sub_1C64B804C();

  return MEMORY[0x1F41862B0](a1, v2);
}

void SignalDetails.encode(to:)(void *a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F0980);
  OUTLINED_FUNCTION_0_2();
  MEMORY[0x1F4188790](v2);
  OUTLINED_FUNCTION_23();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C64B804C();
  OUTLINED_FUNCTION_51();
  sub_1C64B8098();
  OUTLINED_FUNCTION_46_0();
  sub_1C6577010();
  if (!v4)
  {
    OUTLINED_FUNCTION_46_0();
    sub_1C6577010();
    sub_1C6576FF0();
  }
  OUTLINED_FUNCTION_5_3();
  v3();
  OUTLINED_FUNCTION_50_0();
}

uint64_t SignalDetails.hashValue.getter()
{
  return sub_1C6577190();
}

uint64_t SignalDetails.init(from:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F0998);
  OUTLINED_FUNCTION_0_2();
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_9_2();
  sub_1C64B804C();
  OUTLINED_FUNCTION_48_0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1(a1);
  }
  sub_1C64B80E4();
  OUTLINED_FUNCTION_25_2();
  swift_retain();
  OUTLINED_FUNCTION_25_2();
  swift_retain();
  sub_1C6576F10();
  uint64_t v7 = v6;
  OUTLINED_FUNCTION_41();
  v8();
  *a2 = v10;
  a2[1] = v11;
  a2[2] = v10;
  a2[3] = v11;
  a2[4] = v7;
  __swift_destroy_boxed_opaque_existential_1(a1);
  swift_release();
  return swift_release();
}

uint64_t sub_1C64B6874@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return SignalDetails.init(from:)(a1, a2);
}

void sub_1C64B688C(void *a1)
{
}

uint64_t sub_1C64B68AC()
{
  return sub_1C6577190();
}

uint64_t SignalStats.signal.getter()
{
  return swift_retain();
}

uint64_t SignalStats.numSuggestions.getter()
{
  return *(void *)(v0 + 8);
}

uint64_t SignalStats.init(signal:numSuggestions:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t SignalStats.hash(into:)()
{
  return sub_1C6577160();
}

uint64_t sub_1C64B69CC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6C616E676973 && a2 == 0xE600000000000000;
  if (v2 || (sub_1C6577090() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65676775536D756ELL && a2 == 0xEE00736E6F697473)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_1C6577090();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1C64B6AD8()
{
  return sub_1C6577190();
}

uint64_t sub_1C64B6B18(char a1)
{
  if (a1) {
    return 0x65676775536D756ELL;
  }
  else {
    return 0x6C616E676973;
  }
}

uint64_t sub_1C64B6B58()
{
  return sub_1C64B6AD8();
}

uint64_t sub_1C64B6B74()
{
  return sub_1C64B6B18(*v0);
}

uint64_t sub_1C64B6B7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C64B69CC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C64B6BA4(uint64_t a1)
{
  unint64_t v2 = sub_1C64B8130();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C64B6BE0(uint64_t a1)
{
  unint64_t v2 = sub_1C64B8130();

  return MEMORY[0x1F41862B0](a1, v2);
}

void SignalStats.encode(to:)()
{
  OUTLINED_FUNCTION_25();
  unint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F09A8);
  OUTLINED_FUNCTION_0_2();
  MEMORY[0x1F4188790](v3);
  OUTLINED_FUNCTION_23();
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  sub_1C64B8130();
  OUTLINED_FUNCTION_66_0();
  sub_1C6577240();
  type metadata accessor for Signal();
  sub_1C64BA558(&qword_1EA3F0918, v4, (void (*)(uint64_t))type metadata accessor for Signal);
  OUTLINED_FUNCTION_21_2();
  if (!v0) {
    sub_1C6577000();
  }
  OUTLINED_FUNCTION_41();
  v5();
  OUTLINED_FUNCTION_50_0();
  OUTLINED_FUNCTION_26();
}

uint64_t SignalStats.hashValue.getter()
{
  return sub_1C6577190();
}

void SignalStats.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  OUTLINED_FUNCTION_25();
  uint64_t v12 = v11;
  unsigned __int8 v14 = v13;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F09B8);
  OUTLINED_FUNCTION_0_2();
  MEMORY[0x1F4188790](v15);
  OUTLINED_FUNCTION_9_2();
  sub_1C64B8130();
  sub_1C6577210();
  if (v10)
  {
    __swift_destroy_boxed_opaque_existential_1(v12);
  }
  else
  {
    type metadata accessor for Signal();
    sub_1C64BA558(&qword_1EA3F0900, v16, (void (*)(uint64_t))type metadata accessor for Signal);
    sub_1C6576F30();
    swift_retain();
    uint64_t v17 = sub_1C6576F20();
    OUTLINED_FUNCTION_41();
    v18();
    *unsigned __int8 v14 = a10;
    v14[1] = v17;
    __swift_destroy_boxed_opaque_existential_1(v12);
    swift_release();
  }
  OUTLINED_FUNCTION_50_0();
  OUTLINED_FUNCTION_26();
}

void sub_1C64B6F8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  SignalStats.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

void sub_1C64B6FA4()
{
}

uint64_t sub_1C64B6FC4()
{
  return sub_1C6577190();
}

uint64_t static SignalLookupKey.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  __swift_project_boxed_opaque_existential_1((void *)(a1 + 80), *(void *)(a1 + 104));
  uint64_t v4 = OUTLINED_FUNCTION_24_1();
  uint64_t v6 = v5(v4);
  uint64_t v8 = v7;
  __swift_project_boxed_opaque_existential_1((void *)(a2 + 80), *(void *)(a2 + 104));
  uint64_t v9 = OUTLINED_FUNCTION_26_3();
  if (v6 == v10(v9) && v8 == v11)
  {
    swift_bridgeObjectRelease_n();
    sub_1C64B817C(a1, (uint64_t)v28);
    sub_1C64B817C(a2, (uint64_t)v27);
  }
  else
  {
    char v13 = OUTLINED_FUNCTION_32_2();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C64B817C(a1, (uint64_t)v28);
    sub_1C64B817C(a2, (uint64_t)v27);
    char v14 = 0;
    if ((v13 & 1) == 0) {
      goto LABEL_9;
    }
  }
  uint64_t v15 = v29;
  uint64_t v16 = __swift_project_boxed_opaque_existential_1(v27, v27[3]);
  OUTLINED_FUNCTION_43_0((uint64_t)v16, v17, v18, v19, v20, v21, v22, v23, v26[0], v26[1], v26[2], v26[3]);
  OUTLINED_FUNCTION_67();
  OUTLINED_FUNCTION_22_2();
  v24();
  char v14 = v15(v26);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
LABEL_9:
  sub_1C64B81B4((uint64_t)v27);
  sub_1C64B81B4((uint64_t)v28);
  return v14 & 1;
}

uint64_t SignalLookupKey.hash(into:)()
{
  OUTLINED_FUNCTION_58_0(v0 + 10);
  OUTLINED_FUNCTION_15_1();
  __swift_project_boxed_opaque_existential_1(v0, v0[3]);
  sub_1C6576500();
  sub_1C6577190();
  return sub_1C6577160();
}

void static SignalLookupKey.getLookupKey(for:)()
{
  OUTLINED_FUNCTION_49_0();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v4 = v0 + 56;
  sub_1C64B11A4(v0 + 56, (uint64_t)v16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFB8A8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFB670);
  if (swift_dynamicCast())
  {
    sub_1C64A5488(&v10, (uint64_t)v13);
    uint64_t v5 = v14;
    uint64_t v6 = v15;
    __swift_project_boxed_opaque_existential_1(v13, v14);
    (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v6 + 8))(&v10, v5, v6);
    __swift_project_boxed_opaque_existential_1(&v10, *((uint64_t *)&v11 + 1));
    OUTLINED_FUNCTION_0_2();
    MEMORY[0x1F4188790](v7);
    OUTLINED_FUNCTION_13_1(v8, v10);
    OUTLINED_FUNCTION_47_0();
    v9();
    AnySignalValue.init<A>(_:)();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v10);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
  }
  else
  {
    uint64_t v12 = 0;
    long long v11 = 0u;
    long long v10 = 0u;
    sub_1C64BAE80((uint64_t)&v10, qword_1EBBFB678);
    sub_1C64B1F70(v4, (uint64_t)v16);
  }
  sub_1C64B7FD8(v1 + 16, (uint64_t)v3 + 80);
  memcpy(v3, v16, 0x50uLL);
  OUTLINED_FUNCTION_39_0();
}

uint64_t SignalLookupKey.hashValue.getter()
{
  sub_1C6577150();
  __swift_project_boxed_opaque_existential_1(v0 + 10, v0[13]);
  OUTLINED_FUNCTION_64_0();
  sub_1C6577150();
  __swift_project_boxed_opaque_existential_1(v0, v0[3]);
  OUTLINED_FUNCTION_63_0();
  sub_1C6577190();
  sub_1C6577160();
  return sub_1C6577190();
}

uint64_t sub_1C64B7440()
{
  sub_1C6577150();
  __swift_project_boxed_opaque_existential_1(v0 + 10, v0[13]);
  OUTLINED_FUNCTION_64_0();
  sub_1C6577150();
  __swift_project_boxed_opaque_existential_1(v0, v0[3]);
  OUTLINED_FUNCTION_63_0();
  sub_1C6577190();
  sub_1C6577160();
  return sub_1C6577190();
}

void Signal.lookupKey.getter()
{
}

void *sub_1C64B74D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v12 = *(void *)(a7 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v14 = (char *)v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *v15;
  uint64_t v17 = v15[1];
  sub_1C64B1208(v18, v19, v24);
  v23[0] = v16;
  v23[1] = v17;
  uint64_t v20 = (void *)swift_allocObject();
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, a1, a7);
  uint64_t v21 = sub_1C64B7850((uint64_t)v14, v24, a4, v23, v20, a7, a8);
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(a1, a7);
  return v21;
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

void *sub_1C64B7674(char a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v17 = &type metadata for CoreSignalTypes;
  unint64_t v18 = sub_1C64B7ABC();
  v16[0] = a1;
  sub_1C64B7FD8((uint64_t)v16, (uint64_t)(a6 + 2));
  sub_1C64B1F70((uint64_t)a2, (uint64_t)(a6 + 7));
  a6[17] = a3;
  a6[18] = a4;
  a6[19] = a5;
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  uint64_t v14 = sub_1C6577040();
  uint64_t v15 = v12;
  sub_1C6576620();
  CoreSignalTypes.description.getter();
  sub_1C6576620();
  swift_bridgeObjectRelease();
  sub_1C64B2018((uint64_t)a2);
  a6[20] = v14;
  a6[21] = v15;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
  return a6;
}

void *sub_1C64B7768(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v15 = &type metadata for UnknownSignalType;
  unint64_t v16 = sub_1C64BAA80();
  sub_1C64B7FD8((uint64_t)v14, (uint64_t)(a5 + 2));
  sub_1C64B1F70((uint64_t)a1, (uint64_t)(a5 + 7));
  a5[17] = a2;
  a5[18] = a3;
  a5[19] = a4;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v12 = sub_1C6577040();
  uint64_t v13 = v10;
  sub_1C6576620();
  sub_1C6576620();
  sub_1C64B2018((uint64_t)a1);
  a5[20] = v12;
  a5[21] = v13;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
  return a5;
}

void *sub_1C64B7850(uint64_t a1, void *a2, uint64_t a3, uint64_t *a4, void *a5, uint64_t a6, uint64_t a7)
{
  v15[3] = a6;
  v15[4] = a7;
  __swift_allocate_boxed_opaque_existential_4Tm(v15);
  (*(void (**)(void))(*(void *)(a6 - 8) + 32))();
  uint64_t v13 = *a4;
  uint64_t v12 = a4[1];
  sub_1C64B7FD8((uint64_t)v15, (uint64_t)(a5 + 2));
  sub_1C64B1F70((uint64_t)a2, (uint64_t)(a5 + 7));
  a5[17] = a3;
  a5[18] = v13;
  a5[19] = v12;
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1C6577040();
  sub_1C6576620();
  swift_bridgeObjectRelease();
  sub_1C6576620();
  sub_1C6577070();
  sub_1C64B2018((uint64_t)a2);
  a5[20] = 0;
  a5[21] = 0xE000000000000000;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
  return a5;
}

void *sub_1C64B7988(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14 = *(void *)(a6 - 8);
  MEMORY[0x1F4188790](a1);
  unint64_t v16 = (char *)v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20[0] = 0;
  v20[1] = 0;
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, a1, v17);
  unint64_t v18 = sub_1C64B74D4((uint64_t)v16, a2, a3, a4, (uint64_t)v20, a5, a6, a7);
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(a1, a6);
  return v18;
}

unint64_t sub_1C64B7ABC()
{
  unint64_t result = qword_1EBBF9598;
  if (!qword_1EBBF9598)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBBF9598);
  }
  return result;
}

unint64_t sub_1C64B7B08()
{
  unint64_t result = qword_1EA3F08D0;
  if (!qword_1EA3F08D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F08D0);
  }
  return result;
}

unint64_t sub_1C64B7B54()
{
  unint64_t result = qword_1EA3F08D8;
  if (!qword_1EA3F08D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F08D8);
  }
  return result;
}

unint64_t sub_1C64B7BA0()
{
  unint64_t result = qword_1EA3F08E0;
  if (!qword_1EA3F08E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F08E0);
  }
  return result;
}

unint64_t sub_1C64B7BEC()
{
  unint64_t result = qword_1EA3F08E8;
  if (!qword_1EA3F08E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F08E8);
  }
  return result;
}

uint64_t sub_1C64B7C3C(uint64_t a1, uint64_t *a2)
{
  return sub_1C6531B50(a1, *a2, a2[1], a2[2], a2[3]);
}

uint64_t sub_1C64B7C4C(uint64_t a1, uint64_t *a2)
{
  return sub_1C6531C64(a1, *a2, a2[1], a2[2], a2[3]);
}

uint64_t sub_1C64B7C60(uint64_t a1)
{
  return sub_1C64B7C4C(a1, (uint64_t *)(v1 + 16));
}

uint64_t sub_1C64B7C68(uint64_t a1)
{
  return a1;
}

unint64_t sub_1C64B7CA0()
{
  unint64_t result = qword_1EA3F08F0;
  if (!qword_1EA3F08F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F08F0);
  }
  return result;
}

uint64_t type metadata accessor for Signal()
{
  return self;
}

unint64_t sub_1C64B7D10()
{
  unint64_t result = qword_1EA3F0908;
  if (!qword_1EA3F0908)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F0908);
  }
  return result;
}

uint64_t sub_1C64B7D5C(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBBF8F20);
    sub_1C64BA558(a2, v5, (void (*)(uint64_t))type metadata accessor for Signal);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C64B7DF0()
{
  unint64_t result = qword_1EA3F0920;
  if (!qword_1EA3F0920)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F0920);
  }
  return result;
}

unint64_t sub_1C64B7E3C()
{
  unint64_t result = qword_1EA3F0930;
  if (!qword_1EA3F0930)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F0930);
  }
  return result;
}

unint64_t sub_1C64B7E88()
{
  unint64_t result = qword_1EA3F0948;
  if (!qword_1EA3F0948)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F0948);
  }
  return result;
}

uint64_t sub_1C64B7ED4(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA3F0950);
    a2();
    OUTLINED_FUNCTION_71_0();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C64B7F40()
{
  unint64_t result = qword_1EA3F0960;
  if (!qword_1EA3F0960)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F0960);
  }
  return result;
}

unint64_t sub_1C64B7F8C()
{
  unint64_t result = qword_1EA3F0978;
  if (!qword_1EA3F0978)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F0978);
  }
  return result;
}

uint64_t sub_1C64B7FD8(uint64_t a1, uint64_t a2)
{
  *(void *)(a2 + 24) = *(void *)(a1 + 24);
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  OUTLINED_FUNCTION_67();
  (*v3)(a2);
  return a2;
}

uint64_t sub_1C64B8038(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5 != -1) {
    return sub_1C64A0570(a1, a2, a3, a4, a5);
  }
  return a1;
}

unint64_t sub_1C64B804C()
{
  unint64_t result = qword_1EA3F0988;
  if (!qword_1EA3F0988)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F0988);
  }
  return result;
}

unint64_t sub_1C64B8098()
{
  unint64_t result = qword_1EA3F0990;
  if (!qword_1EA3F0990)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F0990);
  }
  return result;
}

unint64_t sub_1C64B80E4()
{
  unint64_t result = qword_1EA3F09A0;
  if (!qword_1EA3F09A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F09A0);
  }
  return result;
}

unint64_t sub_1C64B8130()
{
  unint64_t result = qword_1EA3F09B0;
  if (!qword_1EA3F09B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F09B0);
  }
  return result;
}

uint64_t sub_1C64B817C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1C64B81B4(uint64_t a1)
{
  return a1;
}

unint64_t sub_1C64B81E8()
{
  unint64_t result = qword_1EA3F09C0;
  if (!qword_1EA3F09C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F09C0);
  }
  return result;
}

uint64_t sub_1C64B8234(uint64_t a1, uint64_t a2)
{
  return sub_1C64BA558(&qword_1EBBFB170, a2, (void (*)(uint64_t))type metadata accessor for Signal);
}

unint64_t sub_1C64B8280()
{
  unint64_t result = qword_1EA3F09C8;
  if (!qword_1EA3F09C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F09C8);
  }
  return result;
}

unint64_t sub_1C64B82D0()
{
  unint64_t result = qword_1EBBF9580;
  if (!qword_1EBBF9580)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBBF9580);
  }
  return result;
}

uint64_t sub_1C64B831C(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C64BACA0(a1, a2, a3, (uint64_t (*)(void))sub_1C64B8370, (uint64_t (*)(void))sub_1C64B83BC, (uint64_t (*)(void))sub_1C64B8408, (uint64_t (*)(void))sub_1C64B8454);
}

unint64_t sub_1C64B8370()
{
  unint64_t result = qword_1EBBF9590;
  if (!qword_1EBBF9590)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBBF9590);
  }
  return result;
}

unint64_t sub_1C64B83BC()
{
  unint64_t result = qword_1EBBF9588;
  if (!qword_1EBBF9588)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBBF9588);
  }
  return result;
}

unint64_t sub_1C64B8408()
{
  unint64_t result = qword_1EBBF9570;
  if (!qword_1EBBF9570)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBBF9570);
  }
  return result;
}

unint64_t sub_1C64B8454()
{
  unint64_t result = qword_1EBBF9578;
  if (!qword_1EBBF9578)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBBF9578);
  }
  return result;
}

unint64_t sub_1C64B84A4()
{
  unint64_t result = qword_1EA3F09D0;
  if (!qword_1EA3F09D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F09D0);
  }
  return result;
}

unint64_t sub_1C64B84F4()
{
  unint64_t result = qword_1EA3F09D8;
  if (!qword_1EA3F09D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F09D8);
  }
  return result;
}

unint64_t sub_1C64B8544()
{
  unint64_t result = qword_1EBBFB540;
  if (!qword_1EBBFB540)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBBFB540);
  }
  return result;
}

uint64_t destroy for AnySignalValue(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_1(a1);

  return swift_release();
}

uint64_t initializeWithCopy for AnySignalValue(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 56);
  long long v5 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v5;
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = v4;
  (**(void (***)(void))(v5 - 8))();
  uint64_t v6 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v6;
  swift_retain();
  return a1;
}

uint64_t *assignWithCopy for AnySignalValue(uint64_t *a1, uint64_t *a2)
{
  __swift_assign_boxed_opaque_existential_4(a1, a2);
  uint64_t v4 = a2[9];
  a1[8] = a2[8];
  a1[9] = v4;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t *__swift_assign_boxed_opaque_existential_4(uint64_t *result, uint64_t *a2)
{
  if (result != a2)
  {
    uint64_t v3 = result;
    uint64_t v4 = result[3];
    uint64_t v5 = a2[3];
    if (v4 == v5)
    {
      uint64_t v10 = *(void *)(v4 - 8);
      if ((*(unsigned char *)(v10 + 82) & 2) != 0)
      {
        uint64_t v12 = *a2;
        swift_retain();
        unint64_t result = (uint64_t *)swift_release();
        *uint64_t v3 = v12;
      }
      else
      {
        long long v11 = *(uint64_t (**)(void))(v10 + 24);
        return (uint64_t *)v11();
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      result[5] = a2[5];
      result[6] = a2[6];
      result[7] = a2[7];
      uint64_t v6 = *(void *)(v4 - 8);
      uint64_t v7 = *(void *)(v5 - 8);
      uint64_t v8 = v7;
      int v9 = *(_DWORD *)(v7 + 80);
      if ((*(unsigned char *)(v6 + 82) & 2) != 0)
      {
        if ((v9 & 0x20000) != 0)
        {
          *unint64_t result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t *, uint64_t))(v6 + 32))(v13, result, v4);
        if ((v9 & 0x20000) != 0)
        {
          *uint64_t v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v13, v4);
      }
    }
  }
  return result;
}

void *__swift_memcpy80_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x50uLL);
}

_OWORD *assignWithTake for AnySignalValue(_OWORD *a1, _OWORD *a2)
{
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  long long v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  a1[4] = a2[4];
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for AnySignalValue(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 80))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 24);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AnySignalValue(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 80) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 80) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for AnySignalValue()
{
}

uint64_t method lookup function for Signal(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for Signal);
}

uint64_t dispatch thunk of Signal.__allocating_init(copy:context:)()
{
  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t type metadata accessor for Signal.Constants()
{
  return self;
}

uint64_t method lookup function for Signal.Constants(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for Signal.Constants);
}

uint64_t sub_1C64B8A2C(uint64_t a1, uint64_t a2)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SignalContext(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for SignalContext(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SignalContext(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 16))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SignalContext(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for SignalContext()
{
}

uint64_t destroy for InAppIdentifier()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for InAppIdentifier(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for InAppIdentifier(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

void *assignWithTake for InAppIdentifier(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for InAppIdentifier(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 32))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for InAppIdentifier(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for SignalContext.ViewEntityIdentifier()
{
}

void type metadata accessor for SignalSource()
{
}

uint64_t dispatch thunk of SignalType.rawValue.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of SignalType.getSource()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t getEnumTagSinglePayload for CoreSignalTypes(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF8)
  {
    if (a2 + 8 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 8) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 9;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 9;
  int v5 = v6 - 9;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for CoreSignalTypes(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *__n128 result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C64B8ED8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 8;
        break;
    }
  }
  return result;
}

void type metadata accessor for CoreSignalTypes()
{
}

uint64_t destroy for EnvironmentAwareSignal(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  swift_release();
  uint64_t result = swift_release();
  int v3 = *(unsigned __int8 *)(a1 + 88);
  if (v3 != 255)
  {
    uint64_t v4 = *(void *)(a1 + 56);
    uint64_t v5 = *(void *)(a1 + 64);
    uint64_t v6 = *(void *)(a1 + 72);
    uint64_t v7 = *(void *)(a1 + 80);
    return sub_1C64A21C4(v4, v5, v6, v7, v3);
  }
  return result;
}

uint64_t initializeWithCopy for EnvironmentAwareSignal(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  int v6 = *(unsigned __int8 *)(a2 + 88);
  swift_retain();
  swift_retain();
  if (v6 == 255)
  {
    long long v11 = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 72) = v11;
    *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  }
  else
  {
    uint64_t v7 = *(void *)(a2 + 56);
    uint64_t v8 = *(void *)(a2 + 64);
    uint64_t v10 = *(void *)(a2 + 72);
    uint64_t v9 = *(void *)(a2 + 80);
    sub_1C64A0570(v7, v8, v10, v9, v6);
    *(void *)(a1 + 56) = v7;
    *(void *)(a1 + 64) = v8;
    *(void *)(a1 + 72) = v10;
    *(void *)(a1 + 80) = v9;
    *(unsigned char *)(a1 + 88) = v6;
  }
  return a1;
}

uint64_t assignWithCopy for EnvironmentAwareSignal(uint64_t a1, uint64_t a2)
{
  __swift_assign_boxed_opaque_existential_1((uint64_t *)a1, (uint64_t *)a2);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_retain();
  swift_release();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_retain();
  swift_release();
  long long v4 = (long long *)(a1 + 56);
  uint64_t v5 = (long long *)(a2 + 56);
  int v6 = *(unsigned __int8 *)(a2 + 88);
  if (*(unsigned __int8 *)(a1 + 88) == 255)
  {
    if (v6 == 255)
    {
      long long v22 = *v5;
      long long v23 = *(_OWORD *)(a2 + 72);
      *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
      *long long v4 = v22;
      *(_OWORD *)(a1 + 72) = v23;
    }
    else
    {
      uint64_t v16 = *(void *)(a2 + 56);
      uint64_t v17 = *(void *)(a2 + 64);
      uint64_t v19 = *(void *)(a2 + 72);
      uint64_t v18 = *(void *)(a2 + 80);
      sub_1C64A0570(v16, v17, v19, v18, v6);
      *(void *)(a1 + 56) = v16;
      *(void *)(a1 + 64) = v17;
      *(void *)(a1 + 72) = v19;
      *(void *)(a1 + 80) = v18;
      *(unsigned char *)(a1 + 88) = v6;
    }
  }
  else if (v6 == 255)
  {
    sub_1C64B93A4(a1 + 56);
    char v20 = *(unsigned char *)(a2 + 88);
    long long v21 = *(_OWORD *)(a2 + 72);
    *long long v4 = *v5;
    *(_OWORD *)(a1 + 72) = v21;
    *(unsigned char *)(a1 + 88) = v20;
  }
  else
  {
    uint64_t v7 = *(void *)(a2 + 56);
    uint64_t v8 = *(void *)(a2 + 64);
    uint64_t v10 = *(void *)(a2 + 72);
    uint64_t v9 = *(void *)(a2 + 80);
    sub_1C64A0570(v7, v8, v10, v9, v6);
    uint64_t v11 = *(void *)(a1 + 56);
    uint64_t v12 = *(void *)(a1 + 64);
    uint64_t v13 = *(void *)(a1 + 72);
    uint64_t v14 = *(void *)(a1 + 80);
    *(void *)(a1 + 56) = v7;
    *(void *)(a1 + 64) = v8;
    *(void *)(a1 + 72) = v10;
    *(void *)(a1 + 80) = v9;
    char v15 = *(unsigned char *)(a1 + 88);
    *(unsigned char *)(a1 + 88) = v6;
    sub_1C64A21C4(v11, v12, v13, v14, v15);
  }
  return a1;
}

uint64_t *__swift_assign_boxed_opaque_existential_1(uint64_t *result, uint64_t *a2)
{
  if (result != a2)
  {
    int v3 = result;
    uint64_t v4 = result[3];
    uint64_t v5 = a2[3];
    if (v4 == v5)
    {
      uint64_t v10 = *(void *)(v4 - 8);
      if ((*(unsigned char *)(v10 + 82) & 2) != 0)
      {
        uint64_t v12 = *a2;
        swift_retain();
        uint64_t result = (uint64_t *)swift_release();
        *int v3 = v12;
      }
      else
      {
        uint64_t v11 = *(uint64_t (**)(void))(v10 + 24);
        return (uint64_t *)v11();
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      uint64_t v6 = *(void *)(v4 - 8);
      uint64_t v7 = *(void *)(v5 - 8);
      uint64_t v8 = v7;
      int v9 = *(_DWORD *)(v7 + 80);
      if ((*(unsigned char *)(v6 + 82) & 2) != 0)
      {
        if ((v9 & 0x20000) != 0)
        {
          *uint64_t result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t *, uint64_t))(v6 + 32))(v13, result, v4);
        if ((v9 & 0x20000) != 0)
        {
          *int v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v13, v4);
      }
    }
  }
  return result;
}

uint64_t sub_1C64B93A4(uint64_t a1)
{
  return a1;
}

void *__swift_memcpy89_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x59uLL);
}

uint64_t assignWithTake for EnvironmentAwareSignal(uint64_t a1, uint64_t a2)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  swift_release();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_release();
  int v6 = *(unsigned __int8 *)(a1 + 88);
  if (v6 == 255) {
    goto LABEL_5;
  }
  int v7 = *(unsigned __int8 *)(a2 + 88);
  if (v7 == 255)
  {
    sub_1C64B93A4(a1 + 56);
LABEL_5:
    long long v12 = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 72) = v12;
    *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
    return a1;
  }
  uint64_t v8 = *(void *)(a1 + 56);
  uint64_t v9 = *(void *)(a1 + 64);
  uint64_t v10 = *(void *)(a1 + 72);
  uint64_t v11 = *(void *)(a1 + 80);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(unsigned char *)(a1 + 88) = v7;
  sub_1C64A21C4(v8, v9, v10, v11, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for EnvironmentAwareSignal(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 89))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 24);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for EnvironmentAwareSignal(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 88) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 89) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 89) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for EnvironmentAwareSignal()
{
}

uint64_t destroy for SignalDetails()
{
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for SignalDetails(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for SignalDetails(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  a1[4] = a2[4];
  return a1;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

void *assignWithTake for SignalDetails(void *a1, void *a2)
{
  *a1 = *a2;
  swift_release();
  uint64_t v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_release();
  a1[3] = a2[3];
  a1[4] = a2[4];
  return a1;
}

uint64_t getEnumTagSinglePayload for SignalDetails(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((unsigned char *)a1 + 40))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SignalDetails(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for SignalDetails()
{
}

void *initializeBufferWithCopyOfBuffer for SignalStats(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  return a1;
}

uint64_t OUTLINED_FUNCTION_26_2()
{
  return swift_release();
}

void *assignWithCopy for SignalStats(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  return a1;
}

void *assignWithTake for SignalStats(void *a1, void *a2)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  return a1;
}

void type metadata accessor for SignalStats()
{
}

uint64_t destroy for SignalLookupKey(uint64_t a1)
{
  return __swift_destroy_boxed_opaque_existential_1(a1 + 80);
}

uint64_t initializeWithCopy for SignalLookupKey(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 56);
  long long v5 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v5;
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = v4;
  (**(void (***)(void))(v5 - 8))();
  uint64_t v6 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v6;
  uint64_t v7 = a2 + 80;
  long long v8 = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 104) = v8;
  uint64_t v9 = v8;
  uint64_t v10 = **(void (***)(uint64_t, uint64_t, uint64_t))(v8 - 8);
  swift_retain();
  v10(a1 + 80, v7, v9);
  return a1;
}

uint64_t *assignWithCopy for SignalLookupKey(uint64_t *a1, uint64_t *a2)
{
  __swift_assign_boxed_opaque_existential_4(a1, a2);
  uint64_t v4 = a2[9];
  a1[8] = a2[8];
  a1[9] = v4;
  swift_retain();
  swift_release();
  __swift_assign_boxed_opaque_existential_1(a1 + 10, a2 + 10);
  return a1;
}

void *__swift_memcpy120_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x78uLL);
}

uint64_t assignWithTake for SignalLookupKey(uint64_t a1, uint64_t a2)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  long long v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(a1 + 80);
  long long v6 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v6;
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  return a1;
}

uint64_t getEnumTagSinglePayload for SignalLookupKey(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 120))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 24);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SignalLookupKey(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 120) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 120) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for SignalLookupKey()
{
}

uint64_t dispatch thunk of SignalValueLookupKeyProvider.getLookupValue()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

ValueMetadata *type metadata accessor for SignalStats.CodingKeys()
{
  return &type metadata for SignalStats.CodingKeys;
}

ValueMetadata *type metadata accessor for SignalDetails.CodingKeys()
{
  return &type metadata for SignalDetails.CodingKeys;
}

uint64_t _s18SiriSuggestionsKit13SignalDetailsV10CodingKeysOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return OUTLINED_FUNCTION_53_0(-1);
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return OUTLINED_FUNCTION_53_0((*a1 | (v4 << 8)) - 3);
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return OUTLINED_FUNCTION_53_0((*a1 | (v4 << 8)) - 3);
    }
    int v4 = a1[1];
    if (a1[1]) {
      return OUTLINED_FUNCTION_53_0((*a1 | (v4 << 8)) - 3);
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return OUTLINED_FUNCTION_53_0(v8);
}

unsigned char *_s18SiriSuggestionsKit13SignalDetailsV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        __n128 result = (unsigned char *)OUTLINED_FUNCTION_70_0((uint64_t)result, v6);
        break;
      case 2:
        __n128 result = (unsigned char *)OUTLINED_FUNCTION_67_0((uint64_t)result, v6);
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C64B9C34);
      case 4:
        __n128 result = (unsigned char *)OUTLINED_FUNCTION_68_0((uint64_t)result, v6);
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          __n128 result = OUTLINED_FUNCTION_69_0(result, a2 + 2);
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SignalContext.CodingKeys()
{
  return &type metadata for SignalContext.CodingKeys;
}

uint64_t _s18SiriSuggestionsKit11SignalStatsV10CodingKeysOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return OUTLINED_FUNCTION_53_0(-1);
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return OUTLINED_FUNCTION_53_0((*a1 | (v4 << 8)) - 2);
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return OUTLINED_FUNCTION_53_0((*a1 | (v4 << 8)) - 2);
    }
    int v4 = a1[1];
    if (a1[1]) {
      return OUTLINED_FUNCTION_53_0((*a1 | (v4 << 8)) - 2);
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return OUTLINED_FUNCTION_53_0(v8);
}

unsigned char *_s18SiriSuggestionsKit11SignalStatsV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        __n128 result = (unsigned char *)OUTLINED_FUNCTION_70_0((uint64_t)result, v6);
        break;
      case 2:
        __n128 result = (unsigned char *)OUTLINED_FUNCTION_67_0((uint64_t)result, v6);
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C64B9DACLL);
      case 4:
        __n128 result = (unsigned char *)OUTLINED_FUNCTION_68_0((uint64_t)result, v6);
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          __n128 result = OUTLINED_FUNCTION_69_0(result, a2 + 1);
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SignalContext.ViewEntityIdentifier.CodingKeys()
{
  return &type metadata for SignalContext.ViewEntityIdentifier.CodingKeys;
}

uint64_t _s18SiriSuggestionsKit12SignalSourceOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return OUTLINED_FUNCTION_53_0(-1);
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return OUTLINED_FUNCTION_53_0((*a1 | (v4 << 8)) - 4);
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return OUTLINED_FUNCTION_53_0((*a1 | (v4 << 8)) - 4);
    }
    int v4 = a1[1];
    if (a1[1]) {
      return OUTLINED_FUNCTION_53_0((*a1 | (v4 << 8)) - 4);
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return OUTLINED_FUNCTION_53_0(v8);
}

unsigned char *_s18SiriSuggestionsKit12SignalSourceOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *__n128 result = a2 + 3;
    switch(v5)
    {
      case 1:
        __n128 result = (unsigned char *)OUTLINED_FUNCTION_70_0((uint64_t)result, v6);
        break;
      case 2:
        __n128 result = (unsigned char *)OUTLINED_FUNCTION_67_0((uint64_t)result, v6);
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C64B9F24);
      case 4:
        __n128 result = (unsigned char *)OUTLINED_FUNCTION_68_0((uint64_t)result, v6);
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          __n128 result = OUTLINED_FUNCTION_69_0(result, a2 + 3);
        break;
    }
  }
  return result;
}

void type metadata accessor for Signal.CodingKeys()
{
}

void type metadata accessor for AnySignalValue.CodingKeys()
{
}

unint64_t sub_1C64B9F70()
{
  unint64_t result = qword_1EA3F09E0;
  if (!qword_1EA3F09E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F09E0);
  }
  return result;
}

unint64_t sub_1C64B9FC0()
{
  unint64_t result = qword_1EA3F09E8;
  if (!qword_1EA3F09E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F09E8);
  }
  return result;
}

unint64_t sub_1C64BA010()
{
  unint64_t result = qword_1EA3F09F0;
  if (!qword_1EA3F09F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F09F0);
  }
  return result;
}

unint64_t sub_1C64BA060()
{
  unint64_t result = qword_1EA3F09F8;
  if (!qword_1EA3F09F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F09F8);
  }
  return result;
}

unint64_t sub_1C64BA0B0()
{
  unint64_t result = qword_1EA3F0A00;
  if (!qword_1EA3F0A00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F0A00);
  }
  return result;
}

unint64_t sub_1C64BA100()
{
  unint64_t result = qword_1EA3F0A08;
  if (!qword_1EA3F0A08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F0A08);
  }
  return result;
}

unint64_t sub_1C64BA150()
{
  unint64_t result = qword_1EA3F0A10;
  if (!qword_1EA3F0A10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F0A10);
  }
  return result;
}

unint64_t sub_1C64BA1A0()
{
  unint64_t result = qword_1EA3F0A18;
  if (!qword_1EA3F0A18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F0A18);
  }
  return result;
}

unint64_t sub_1C64BA1F0()
{
  unint64_t result = qword_1EA3F0A20;
  if (!qword_1EA3F0A20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F0A20);
  }
  return result;
}

unint64_t sub_1C64BA240()
{
  unint64_t result = qword_1EA3F0A28;
  if (!qword_1EA3F0A28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F0A28);
  }
  return result;
}

unint64_t sub_1C64BA290()
{
  unint64_t result = qword_1EA3F0A30;
  if (!qword_1EA3F0A30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F0A30);
  }
  return result;
}

unint64_t sub_1C64BA2E0()
{
  unint64_t result = qword_1EA3F0A38;
  if (!qword_1EA3F0A38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F0A38);
  }
  return result;
}

unint64_t sub_1C64BA330()
{
  unint64_t result = qword_1EA3F0A40;
  if (!qword_1EA3F0A40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F0A40);
  }
  return result;
}

unint64_t sub_1C64BA380()
{
  unint64_t result = qword_1EA3F0A48;
  if (!qword_1EA3F0A48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F0A48);
  }
  return result;
}

unint64_t sub_1C64BA3D0()
{
  unint64_t result = qword_1EA3F0A50;
  if (!qword_1EA3F0A50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F0A50);
  }
  return result;
}

unint64_t sub_1C64BA420()
{
  unint64_t result = qword_1EA3F0A58;
  if (!qword_1EA3F0A58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F0A58);
  }
  return result;
}

unint64_t sub_1C64BA470()
{
  unint64_t result = qword_1EA3F0A60;
  if (!qword_1EA3F0A60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F0A60);
  }
  return result;
}

unint64_t sub_1C64BA4C0()
{
  unint64_t result = qword_1EA3F0A68;
  if (!qword_1EA3F0A68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F0A68);
  }
  return result;
}

unint64_t sub_1C64BA50C()
{
  unint64_t result = qword_1EA3F0A70;
  if (!qword_1EA3F0A70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F0A70);
  }
  return result;
}

uint64_t sub_1C64BA558(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C64BA5A0()
{
  unint64_t result = qword_1EA3F0A80;
  if (!qword_1EA3F0A80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F0A80);
  }
  return result;
}

void sub_1C64BA5EC(void *a1, uint64_t a2, uint64_t a3, char a4)
{
  if (a4 != -1) {
    sub_1C64BA600(a1, a2, a3, a4);
  }
}

void sub_1C64BA600(void *a1, uint64_t a2, uint64_t a3, char a4)
{
  if (a4 == 2 || a4 == 1)
  {

    swift_bridgeObjectRelease();
  }
  else if (!a4)
  {
  }
}

id sub_1C64BA678(id result, uint64_t a2, uint64_t a3, char a4)
{
  if (a4 == 2 || a4 == 1)
  {
    id v4 = result;
    return (id)swift_bridgeObjectRetain();
  }
  else if (!a4)
  {
    return result;
  }
  return result;
}

unint64_t sub_1C64BA6F0()
{
  unint64_t result = qword_1EA3F0A98;
  if (!qword_1EA3F0A98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F0A98);
  }
  return result;
}

uint64_t sub_1C64BA73C()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C64BA774(uint64_t a1)
{
  return sub_1C6534FA8(a1, (uint64_t *)(v1 + 16));
}

unint64_t sub_1C64BA77C()
{
  unint64_t result = qword_1EBBF7E60;
  if (!qword_1EBBF7E60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBBF7E60);
  }
  return result;
}

unint64_t sub_1C64BA7C8()
{
  unint64_t result = qword_1EBBF8DC8;
  if (!qword_1EBBF8DC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBBF8DC8);
  }
  return result;
}

unint64_t sub_1C64BA814()
{
  unint64_t result = qword_1EBBF8DB0;
  if (!qword_1EBBF8DB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBBF8DB0);
  }
  return result;
}

unint64_t sub_1C64BA860()
{
  unint64_t result = qword_1EBBF8DB8;
  if (!qword_1EBBF8DB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBBF8DB8);
  }
  return result;
}

uint64_t sub_1C64BA8B0(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  v4[0] = *(_OWORD *)a2;
  v4[1] = v2;
  char v5 = *(unsigned char *)(a2 + 32);
  return sub_1C6531D58(a1, (uint64_t)v4) & 1;
}

uint64_t sub_1C64BA8EC(uint64_t a1)
{
  return sub_1C64BA8B0(a1, v1 + 16);
}

unint64_t sub_1C64BA8F4()
{
  unint64_t result = qword_1EA3F0AA0;
  if (!qword_1EA3F0AA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F0AA0);
  }
  return result;
}

unint64_t sub_1C64BA940()
{
  unint64_t result = qword_1EBBF82D0;
  if (!qword_1EBBF82D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBBF82D0);
  }
  return result;
}

unint64_t sub_1C64BA98C()
{
  unint64_t result = qword_1EBBF8D98;
  if (!qword_1EBBF8D98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBBF8D98);
  }
  return result;
}

unint64_t sub_1C64BA9D8()
{
  unint64_t result = qword_1EA3F0AA8;
  if (!qword_1EA3F0AA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F0AA8);
  }
  return result;
}

uint64_t objectdestroy_2Tm(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v1, a1, 7);
}

uint64_t sub_1C64BAA78(uint64_t a1)
{
  return sub_1C64B7C3C(a1, (uint64_t *)(v1 + 16));
}

unint64_t sub_1C64BAA80()
{
  unint64_t result = qword_1EA3F0AB0;
  if (!qword_1EA3F0AB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F0AB0);
  }
  return result;
}

uint64_t sub_1C64BAACC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

unsigned char *_s18SiriSuggestionsKit17UnknownSignalTypeOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C64BABC4);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for UnknownSignalType()
{
  return &type metadata for UnknownSignalType;
}

unint64_t sub_1C64BAC00()
{
  unint64_t result = qword_1EA3F0AB8;
  if (!qword_1EA3F0AB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F0AB8);
  }
  return result;
}

uint64_t sub_1C64BAC4C(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C64BACA0(a1, a2, a3, (uint64_t (*)(void))sub_1C64BAD04, (uint64_t (*)(void))sub_1C64BAD50, (uint64_t (*)(void))sub_1C64BAD9C, (uint64_t (*)(void))sub_1C64BADE8);
}

uint64_t sub_1C64BACA0(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void), uint64_t (*a6)(void), uint64_t (*a7)(void))
{
  a1[1] = a4();
  a1[2] = a5();
  a1[3] = a6();
  uint64_t result = a7();
  a1[4] = result;
  return result;
}

unint64_t sub_1C64BAD04()
{
  unint64_t result = qword_1EA3F0AC0;
  if (!qword_1EA3F0AC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F0AC0);
  }
  return result;
}

unint64_t sub_1C64BAD50()
{
  unint64_t result = qword_1EA3F0AC8;
  if (!qword_1EA3F0AC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F0AC8);
  }
  return result;
}

unint64_t sub_1C64BAD9C()
{
  unint64_t result = qword_1EA3F0AD0;
  if (!qword_1EA3F0AD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F0AD0);
  }
  return result;
}

unint64_t sub_1C64BADE8()
{
  unint64_t result = qword_1EA3F0AD8;
  if (!qword_1EA3F0AD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F0AD8);
  }
  return result;
}

unint64_t sub_1C64BAE34()
{
  unint64_t result = qword_1EA3F0AE0;
  if (!qword_1EA3F0AE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F0AE0);
  }
  return result;
}

uint64_t sub_1C64BAE80(uint64_t a1, uint64_t *a2)
{
  __swift_instantiateConcreteTypeFromMangledName(a2);
  OUTLINED_FUNCTION_67();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t OUTLINED_FUNCTION_8_1()
{
  return objectdestroy_2Tm(48);
}

void *OUTLINED_FUNCTION_9_2()
{
  return __swift_project_boxed_opaque_existential_1(v0, v0[3]);
}

uint64_t OUTLINED_FUNCTION_10_1()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_11_2()
{
  return v0;
}

char *OUTLINED_FUNCTION_13_1@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  return (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t OUTLINED_FUNCTION_15_1()
{
  return sub_1C6577150();
}

uint64_t OUTLINED_FUNCTION_18_2()
{
  __swift_storeEnumTagSinglePayload(v0, 0, 1, v1);
  return swift_willThrow();
}

uint64_t OUTLINED_FUNCTION_20_2()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_21_2()
{
  return sub_1C6577010();
}

uint64_t OUTLINED_FUNCTION_23_2()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_24_1()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_25_2()
{
  return sub_1C6576F30();
}

uint64_t OUTLINED_FUNCTION_26_3()
{
  return v0;
}

void OUTLINED_FUNCTION_27_2()
{
  *(unsigned char *)(v0 - 66) = 1;
}

uint64_t OUTLINED_FUNCTION_29_0@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = a1;
  a2[1] = v2;
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_30_2()
{
  return sub_1C6576F30();
}

uint64_t OUTLINED_FUNCTION_31_2()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_32_2()
{
  return sub_1C6577090();
}

uint64_t OUTLINED_FUNCTION_33_2()
{
  return objectdestroy_2Tm(49);
}

uint64_t OUTLINED_FUNCTION_34_0()
{
  return 0x6B6361626C6C6166;
}

void OUTLINED_FUNCTION_35_1()
{
  *(unsigned char *)(v1 - 65) = v0;
}

uint64_t OUTLINED_FUNCTION_38_0()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_40_0()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_41_0()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_42_0()
{
  return 0x65726373656D6F68;
}

uint64_t *OUTLINED_FUNCTION_43_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  a12 = v12;
  return __swift_allocate_boxed_opaque_existential_4Tm(&a9);
}

uint64_t OUTLINED_FUNCTION_44_0()
{
  return sub_1C6576E80();
}

uint64_t OUTLINED_FUNCTION_45_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __swift_storeEnumTagSinglePayload(a1, 1, 1, a4);
  return swift_willThrow();
}

uint64_t OUTLINED_FUNCTION_46_0()
{
  return v0 - 96;
}

uint64_t OUTLINED_FUNCTION_48_0()
{
  return sub_1C6577210();
}

uint64_t OUTLINED_FUNCTION_51()
{
  return sub_1C6577240();
}

uint64_t OUTLINED_FUNCTION_53_0@<X0>(int a1@<W8>)
{
  return (a1 + 1);
}

uint64_t OUTLINED_FUNCTION_54_0()
{
  return sub_1C65769A0();
}

uint64_t OUTLINED_FUNCTION_55_1()
{
  return sub_1C6576F80();
}

uint64_t OUTLINED_FUNCTION_56_0()
{
  *(unsigned char *)(v0 - 65) = 0;
  return v0 - 65;
}

void *OUTLINED_FUNCTION_57_0()
{
  sub_1C64A5488((long long *)(v0 - 160), v0 - 120);
  uint64_t v1 = *(void *)(v0 - 96);
  return __swift_project_boxed_opaque_existential_1((void *)(v0 - 120), v1);
}

uint64_t OUTLINED_FUNCTION_58_0(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, v1);
  return sub_1C6576500();
}

uint64_t OUTLINED_FUNCTION_59_0()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_60_0()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_63_0()
{
  return sub_1C6576500();
}

uint64_t OUTLINED_FUNCTION_64_0()
{
  return sub_1C6576500();
}

uint64_t OUTLINED_FUNCTION_65_0()
{
  return sub_1C6576500();
}

uint64_t OUTLINED_FUNCTION_67_0@<X0>(uint64_t result@<X0>, __int16 a2@<W8>)
{
  *(_WORD *)(result + 1) = a2;
  return result;
}

uint64_t OUTLINED_FUNCTION_68_0@<X0>(uint64_t result@<X0>, int a2@<W8>)
{
  *(_DWORD *)(result + 1) = a2;
  return result;
}

unsigned char *OUTLINED_FUNCTION_69_0@<X0>(unsigned char *result@<X0>, char a2@<W8>)
{
  *unint64_t result = a2;
  return result;
}

uint64_t OUTLINED_FUNCTION_70_0@<X0>(uint64_t result@<X0>, char a2@<W8>)
{
  *(unsigned char *)(result + 1) = a2;
  return result;
}

uint64_t OUTLINED_FUNCTION_71_0()
{
  return v0;
}

uint64_t sub_1C64BB4CC()
{
  return swift_bridgeObjectRetain();
}

uint64_t Cache.__allocating_init(store:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  swift_defaultActor_initialize();
  *(void *)(v2 + 112) = a1;
  return v2;
}

uint64_t Cache.init(store:)(uint64_t a1)
{
  swift_defaultActor_initialize();
  *(void *)(v1 + 112) = a1;
  return v1;
}

uint64_t sub_1C64BB574(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v8[41] = a7;
  v8[42] = v7;
  v8[39] = a5;
  v8[40] = a6;
  v8[37] = a3;
  v8[38] = a4;
  v8[35] = a1;
  v8[36] = a2;
  uint64_t v9 = *v7;
  v8[43] = *v7;
  uint64_t v10 = *(void *)(v9 + 80);
  v8[44] = v10;
  v8[45] = *(void *)(v10 - 8);
  v8[46] = swift_task_alloc();
  uint64_t v11 = sub_1C6576AE0();
  v8[47] = v11;
  v8[48] = *(void *)(v11 - 8);
  v8[49] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C64BB6DC, v7, 0);
}

uint64_t sub_1C64BB6DC()
{
  uint64_t v2 = *(void *)(v0 + 344);
  uint64_t v1 = *(void *)(v0 + 352);
  uint64_t v3 = *(void *)(v0 + 288);
  uint64_t v4 = sub_1C64BB4CC();
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFBE68);
  *(void *)(v0 + 400) = v5;
  *(void *)(v0 + 408) = *(void *)(v2 + 104);
  MEMORY[0x1C879EB80](v3, v4, v1, v5);
  swift_bridgeObjectRelease();
  sub_1C64BBBB8(v0 + 16, v0 + 112);
  if (*(void *)(v0 + 136))
  {
    sub_1C64A7BBC((long long *)(v0 + 112), (_OWORD *)(v0 + 64));
    sub_1C64A7BBC((long long *)(v0 + 64), (_OWORD *)(v0 + 208));
    int v6 = swift_dynamicCast();
    uint64_t v7 = *(void *)(v0 + 392);
    if (v6)
    {
      uint64_t v8 = *(void *)(v0 + 312);
      uint64_t v9 = *(void *)(v0 + 280);
      __swift_storeEnumTagSinglePayload(*(void *)(v0 + 392), 0, 1, v8);
      sub_1C64BBC20(v0 + 16);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(v9, v7, v8);
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
      return v10();
    }
    uint64_t v12 = *(void *)(v0 + 376);
    uint64_t v13 = *(void *)(v0 + 384);
    __swift_storeEnumTagSinglePayload(*(void *)(v0 + 392), 1, 1, *(void *)(v0 + 312));
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v7, v12);
  }
  else
  {
    sub_1C64BBC20(v0 + 112);
  }
  uint64_t v16 = (uint64_t (*)(uint64_t))(*(void *)(v0 + 296) + **(int **)(v0 + 296));
  uint64_t v14 = (void *)swift_task_alloc();
  *(void *)(v0 + 416) = v14;
  *uint64_t v14 = v0;
  v14[1] = sub_1C64BB960;
  uint64_t v15 = *(void *)(v0 + 280);
  return v16(v15);
}

uint64_t sub_1C64BB960()
{
  OUTLINED_FUNCTION_0_0();
  uint64_t v1 = *(void *)(v0 + 336);
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1C64BBA4C, v1, 0);
}

uint64_t sub_1C64BBA4C()
{
  uint64_t v1 = *(void *)(v0 + 328);
  uint64_t v2 = *(void *)(v0 + 280);
  long long v6 = *(_OWORD *)(v0 + 312);
  (*(void (**)(void, void, void))(*(void *)(v0 + 360) + 16))(*(void *)(v0 + 368), *(void *)(v0 + 288), *(void *)(v0 + 352));
  *(_OWORD *)(v0 + 184) = v6;
  *(void *)(v0 + 200) = v1;
  boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm((uint64_t *)(v0 + 160));
  (*(void (**)(uint64_t *, uint64_t))(*(void *)(v6 - 8) + 16))(boxed_opaque_existential_1Tm, v2);
  swift_beginAccess();
  sub_1C6576490();
  sub_1C65764C0();
  swift_endAccess();
  sub_1C64BBC20(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_1C64BBBB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFBE70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C64BBC20(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFBE70);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t Cache.deinit()
{
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t Cache.__deallocating_deinit()
{
  Cache.deinit();

  return MEMORY[0x1F4188210](v0);
}

uint64_t Cache.unownedExecutor.getter()
{
  return v0;
}

uint64_t sub_1C64BBCE0()
{
  return Cache.unownedExecutor.getter();
}

uint64_t sub_1C64BBD00()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for Cache()
{
  return swift_getGenericMetadata();
}

uint64_t method lookup function for Cache(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for Cache);
}

uint64_t dispatch thunk of Cache.__allocating_init(store:)()
{
  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t dispatch thunk of Cache.getCachedValue<A>(_:valueProvider:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v18 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)v7 + 160)
                                                                                              + **(int **)(*(void *)v7 + 160));
  uint64_t v16 = (void *)swift_task_alloc();
  *(void *)(v8 + 16) = v16;
  *uint64_t v16 = v8;
  v16[1] = sub_1C64BBEE4;
  return v18(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t sub_1C64BBEE4()
{
  OUTLINED_FUNCTION_0_0();
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t PreGenerationKeyProvider.description.getter()
{
  return sub_1C65765A0();
}

uint64_t KeyedPreGenerationProvider.key.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C649FA30(v1, a1);
}

uint64_t KeyedPreGenerationProvider.generator.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C649FA30(v1 + 40, a1);
}

uint64_t KeyedPreGenerationProvider.init(key:generator:)@<X0>(long long *a1@<X0>, long long *a2@<X1>, uint64_t a3@<X8>)
{
  sub_1C64A5488(a1, a3);

  return sub_1C64A5488(a2, a3 + 40);
}

uint64_t dispatch thunk of PreGenerationKeyProvider.getPreGenerationKey(interaction:environment:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 + 16) + **(int **)(a4 + 16));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_1C64BC194;
  return v11(a1, a2, a3, a4);
}

uint64_t sub_1C64BC194(uint64_t a1)
{
  uint64_t v5 = *v1;
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v5 + 8);
  return v3(a1);
}

uint64_t destroy for KeyedPreGenerationProvider(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_1(a1);

  return __swift_destroy_boxed_opaque_existential_1(a1 + 40);
}

uint64_t initializeWithCopy for KeyedPreGenerationProvider(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  long long v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 64) = v5;
  (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1 + 40, a2 + 40);
  return a1;
}

uint64_t *assignWithCopy for KeyedPreGenerationProvider(uint64_t *a1, uint64_t *a2)
{
  return a1;
}

uint64_t assignWithTake for KeyedPreGenerationProvider(uint64_t a1, uint64_t a2)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  __swift_destroy_boxed_opaque_existential_1(a1 + 40);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  return a1;
}

ValueMetadata *type metadata accessor for KeyedPreGenerationProvider()
{
  return &type metadata for KeyedPreGenerationProvider;
}

uint64_t static NoOpSuggestionFilter.Instance.getter()
{
  return swift_initStaticObject();
}

uint64_t NoOpSuggestionFilter.filter(suggestion:environment:)()
{
  return sub_1C64BC460(*(uint64_t (**)(uint64_t))(v0 + 8), v0, 1);
}

uint64_t sub_1C64BC460(uint64_t (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  return a1(a3);
}

uint64_t NoOpSuggestionFilter.deinit()
{
  return v0;
}

uint64_t sub_1C64BC478()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1C64BD840;
  return NoOpSuggestionFilter.filter(suggestion:environment:)();
}

uint64_t static PerSuggestionFilter.instance.getter()
{
  return swift_initStaticObject();
}

uint64_t PerSuggestionFilter.filter(suggestion:environment:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 464) = a1;
  *(void *)(v2 + 472) = a2;
  return MEMORY[0x1F4188298](sub_1C64BC534, 0, 0);
}

uint64_t sub_1C64BC534()
{
  uint64_t v1 = *(void **)(v0 + 464);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  uint64_t v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 16))(v2, v3);
  sub_1C64BCBC8(v4 + 56, v0 + 16);
  swift_release();
  sub_1C64BCC24(v0 + 264, v0 + 416);
  sub_1C64BCC8C(v0 + 16);
  if (*(void *)(v0 + 440))
  {
    sub_1C64A5488((long long *)(v0 + 416), v0 + 376);
    uint64_t v5 = *(void *)(v0 + 400);
    uint64_t v6 = *(void *)(v0 + 408);
    __swift_project_boxed_opaque_existential_1((void *)(v0 + 376), v5);
    uint64_t v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 + 8) + **(int **)(v6 + 8));
    uint64_t v7 = (void *)swift_task_alloc();
    *(void *)(v0 + 480) = v7;
    *uint64_t v7 = v0;
    v7[1] = sub_1C64BC7C4;
    uint64_t v9 = *(void *)(v0 + 464);
    uint64_t v8 = *(void *)(v0 + 472);
    return v15(v9, v8, v5, v6);
  }
  else
  {
    uint64_t v11 = *(void **)(v0 + 464);
    sub_1C64BCCE0(v0 + 416);
    uint64_t v12 = v1[3];
    uint64_t v13 = v1[4];
    __swift_project_boxed_opaque_existential_1(v11, v12);
    uint64_t v16 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 + 56) + **(int **)(v13 + 56));
    uint64_t v14 = (void *)swift_task_alloc();
    *(void *)(v0 + 488) = v14;
    *uint64_t v14 = v0;
    v14[1] = sub_1C64BC8FC;
    return v16(v0 + 312, v12, v13);
  }
}

uint64_t sub_1C64BC7C4()
{
  OUTLINED_FUNCTION_6_0();
  OUTLINED_FUNCTION_0_0();
  *(unsigned char *)(v1 + 369) = v0;
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1C64BC89C, 0, 0);
}

uint64_t sub_1C64BC89C()
{
  OUTLINED_FUNCTION_6_0();
  __swift_destroy_boxed_opaque_existential_1(v0 + 376);
  uint64_t v1 = *(unsigned __int8 *)(v0 + 369);
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_1C64BC8FC()
{
  OUTLINED_FUNCTION_6_0();
  OUTLINED_FUNCTION_0_0();
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1C64BC9D0, 0, 0);
}

uint64_t sub_1C64BC9D0()
{
  uint64_t v11 = v0;
  uint64_t v2 = v0[42];
  unint64_t v1 = v0[43];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (qword_1EBBFC428 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_1C65763A0();
  __swift_project_value_buffer(v3, (uint64_t)qword_1EBBFC278);
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_1C6576380();
  os_log_type_t v5 = sub_1C6576A50();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v10 = v7;
    *(_DWORD *)uint64_t v6 = 136315138;
    swift_bridgeObjectRetain();
    v0[57] = sub_1C64BCF18(v2, v1, &v10);
    sub_1C6576B40();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1C6494000, v4, v5, "No pooled suggestion filter on %s", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C87A0050](v7, -1, -1);
    MEMORY[0x1C87A0050](v6, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  uint64_t v8 = (uint64_t (*)(uint64_t))v0[1];
  return v8(1);
}

uint64_t sub_1C64BCBC8(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1C64BCC24(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF8DD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C64BCC8C(uint64_t a1)
{
  return a1;
}

uint64_t sub_1C64BCCE0(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF8DD0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t PerSuggestionFilter.deinit()
{
  return v0;
}

uint64_t PerSuggestionFilter.__deallocating_deinit()
{
  return MEMORY[0x1F4186488](v0, 16, 7);
}

uint64_t sub_1C64BCD58(uint64_t a1, uint64_t a2)
{
  os_log_type_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *os_log_type_t v5 = v2;
  v5[1] = sub_1C64BD840;
  return PerSuggestionFilter.filter(suggestion:environment:)(a1, a2);
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

uint64_t sub_1C64BCE2C(uint64_t result, unsigned char **a2)
{
  uint64_t v2 = *a2;
  *uint64_t v2 = result;
  *a2 = v2 + 1;
  return result;
}

uint64_t sub_1C64BCE3C(uint64_t (**a1)(uint64_t, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*a1)(a2, a3, a4);
}

uint64_t sub_1C64BCE78(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1C64BCEA0(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t v6 = a4();
  sub_1C64BCF18(v6, v7, a3);
  uint64_t v8 = *a1 + 8;
  sub_1C6576B40();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v8;
  return result;
}

uint64_t sub_1C64BCF18(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_1C64BCFEC(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    uint64_t ObjectType = swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_1C64BAACC((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    uint64_t ObjectType = MEMORY[0x1E4FBB9B0];
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_1C64BAACC((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  return v7;
}

uint64_t sub_1C64BCFEC(void *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0 && __dst && a3 - (uint64_t)__dst > (uint64_t)(HIBYTE(a6) & 0xF))
    {
      __src[0] = a5;
      __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
      sub_1C64BD144((char *)__src, HIBYTE(a6) & 0xF, __dst);
      sub_1C6576B50();
      uint64_t result = 0;
      *a1 = __dst;
      return result;
    }
    goto LABEL_11;
  }
  if ((a6 & 0x1000000000000000) != 0)
  {
LABEL_11:
    uint64_t result = sub_1C64BD21C(a5, a6);
    *a1 = v11;
    return result;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
  }
  else
  {
    uint64_t v8 = sub_1C6576CF0();
    if (!v8)
    {
      uint64_t result = sub_1C6576DB0();
      __break(1u);
      return result;
    }
  }
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

void *sub_1C64BD144(char *__src, size_t __n, char *__dst)
{
  if ((__n & 0x8000000000000000) != 0 || (&__dst[__n] > __src ? (BOOL v3 = &__src[__n] > __dst) : (BOOL v3 = 0), v3))
  {
    uint64_t result = (void *)sub_1C6576E50();
    __break(1u);
  }
  else
  {
    return memcpy(__dst, __src, __n);
  }
  return result;
}

uint64_t sub_1C64BD21C(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = sub_1C64BD2B4(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = (uint64_t)sub_1C64BD428(0, *(void *)(v2 + 16) + 1, 1, v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = (uint64_t)sub_1C64BD428((char *)(v3 > 1), v4 + 1, 1, v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_1C64BD2B4(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0)
  {
    uint64_t v2 = sub_1C6576640();
    if (v2) {
      goto LABEL_6;
    }
    return MEMORY[0x1E4FBC860];
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (!v2) {
    return MEMORY[0x1E4FBC860];
  }
LABEL_6:
  unint64_t v3 = sub_1C65203E8(v2, 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    unint64_t v4 = v3;
    uint64_t v5 = sub_1C6576C70();
    if ((v6 & 1) != 0 || v5 != v2) {
      goto LABEL_14;
    }
    return (uint64_t)v4;
  }
  sub_1C6576E50();
  __break(1u);
LABEL_14:
  uint64_t result = sub_1C6576DB0();
  __break(1u);
  return result;
}

char *sub_1C64BD428(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    int64_t v9 = *(void *)(a4 + 16);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF8250);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = (char *)(a4 + 32);
  if (v5)
  {
    sub_1C64B00AC(v13, v8, v12);
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_1C64BD500(v13, v8, v12);
  }
  swift_bridgeObjectRelease();
  return v10;
}

void *sub_1C64BD500(char *__src, size_t __n, char *__dst)
{
  if ((__n & 0x8000000000000000) != 0 || (&__dst[__n] > __src ? (BOOL v3 = &__src[__n] > __dst) : (BOOL v3 = 0), v3))
  {
    uint64_t result = (void *)sub_1C6576E50();
    __break(1u);
  }
  else
  {
    return memcpy(__dst, __src, __n);
  }
  return result;
}

unsigned char **sub_1C64BD5D8(unsigned char **result, uint64_t a2, uint64_t a3, char a4)
{
  unint64_t v4 = *result;
  *unint64_t v4 = a4;
  *uint64_t result = v4 + 1;
  return result;
}

uint64_t dispatch thunk of SuggestionFilter.filter(suggestion:environment:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  size_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 + 8) + **(int **)(a4 + 8));
  int64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *int64_t v9 = v4;
  v9[1] = sub_1C64BD6F4;
  return v11(a1, a2, a3, a4);
}

uint64_t sub_1C64BD6F4()
{
  OUTLINED_FUNCTION_6_0();
  uint64_t v2 = v1;
  OUTLINED_FUNCTION_0_0();
  uint64_t v5 = *v0;
  swift_task_dealloc();
  BOOL v3 = *(uint64_t (**)(uint64_t))(v5 + 8);
  return v3(v2);
}

uint64_t type metadata accessor for NoOpSuggestionFilter()
{
  return self;
}

uint64_t method lookup function for NoOpSuggestionFilter(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for NoOpSuggestionFilter);
}

uint64_t type metadata accessor for PerSuggestionFilter()
{
  return self;
}

uint64_t method lookup function for PerSuggestionFilter(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for PerSuggestionFilter);
}

double sub_1C64BD848@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X3>, uint64_t a5@<X4>, _OWORD *a6@<X5>, uint64_t a7@<X7>, uint64_t a8@<X8>, uint64_t a9)
{
  return CandidateSuggestionFactory.create(suggestionId:params:objective:deliveryVehicle:preference:invocationType:)(a1, a2, a3, a4, a5, a6, a7, a8, a9);
}

double CandidateSuggestionFactory.create(suggestionId:params:objective:deliveryVehicle:preference:invocationType:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X3>, uint64_t a5@<X4>, _OWORD *a6@<X5>, uint64_t a7@<X7>, uint64_t a8@<X8>, uint64_t a9)
{
  char v12 = *a4;
  char v13 = *(unsigned char *)(a5 + 32);
  v23[0] = a1;
  v23[1] = a2;
  memset(&v23[2], 0, 24);
  char v24 = 0;
  char v22 = v12;
  long long v14 = *(_OWORD *)(a5 + 16);
  v20[0] = *(_OWORD *)a5;
  v20[1] = v14;
  char v21 = v13;
  long long v15 = a6[1];
  v19[0] = *a6;
  v19[1] = v15;
  uint64_t v16 = *(uint64_t (**)(void *, uint64_t, char *, _OWORD *, _OWORD *, uint64_t, uint64_t))(a9 + 16);
  swift_bridgeObjectRetain();
  uint64_t v17 = v16(v23, a3, &v22, v20, v19, a7, a9);
  swift_bridgeObjectRelease();
  if (v17)
  {
    sub_1C64BDBA4(v17, a8);
    swift_bridgeObjectRelease();
  }
  else
  {
    *(void *)(a8 + 32) = 0;
    double result = 0.0;
    *(_OWORD *)a8 = 0u;
    *(_OWORD *)(a8 + 16) = 0u;
  }
  return result;
}

uint64_t sub_1C64BD964()
{
  return 0;
}

uint64_t CandidateSuggestionFactory.create(identifier:params:objective:deliveryVehicle:preference:)()
{
  return 0;
}

uint64_t CandidateSuggestionFactory.create(suggestionId:params:objective:)(uint64_t a1, uint64_t a2, uint64_t a3, char *a4, uint64_t a5, uint64_t a6)
{
  char v10 = *a4;
  memset(v8, 0, sizeof(v8));
  char v9 = -1;
  v7[0] = 0uLL;
  v7[1] = xmmword_1C657A940;
  return CandidateSuggestionFactory.create(suggestionId:params:objective:deliveryVehicle:preference:)(a1, a2, a3, &v10, (uint64_t)v8, v7, a5, a6);
}

uint64_t CandidateSuggestionFactory.create(suggestionId:params:objective:deliveryVehicle:preference:)(uint64_t a1, uint64_t a2, uint64_t a3, char *a4, uint64_t a5, _OWORD *a6, uint64_t a7, uint64_t a8)
{
  char v8 = *(unsigned char *)(a5 + 32);
  char v16 = *a4;
  long long v9 = *(_OWORD *)(a5 + 16);
  v14[0] = *(_OWORD *)a5;
  v14[1] = v9;
  char v15 = v8;
  long long v10 = a6[1];
  v13[0] = *a6;
  v13[1] = v10;
  __int16 v12 = 1536;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, char *, _OWORD *, _OWORD *, __int16 *, uint64_t, uint64_t))(a8 + 8))(a1, a2, a3, &v16, v14, v13, &v12, a7, a8);
}

uint64_t dispatch thunk of InternalGenerator.generateCandidateSuggestions(interaction:environment:factory:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a5 + 16) + **(int **)(a5 + 16));
  size_t v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v11;
  *size_t v11 = v5;
  v11[1] = sub_1C64BC194;
  return v13(a1, a2, a3, a4, a5);
}

uint64_t dispatch thunk of static InternalGeneratorFactory.createGenerators()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of CandidateSuggestionFactory.create(suggestionId:params:objective:deliveryVehicle:preference:invocationType:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return (*(uint64_t (**)(void))(a9 + 8))();
}

uint64_t dispatch thunk of CandidateSuggestionFactory.create(identifier:params:objective:deliveryVehicle:preference:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 16))();
}

double sub_1C64BDBA4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (*(void *)(a1 + 16))
  {
    sub_1C649FA30(a1 + 32, a2);
  }
  else
  {
    *(void *)(a2 + 32) = 0;
    double result = 0.0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  return result;
}

uint64_t sub_1C64BDBE0@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3 = a1[2];
  uint64_t v4 = a1[3];
  uint64_t v5 = a1[4];
  uint64_t v6 = a1[5];
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  LOBYTE(v6) = MEMORY[0x1C879F920](v3, v4, v5, v6);
  swift_unknownObjectRelease();
  if (v6)
  {
    uint64_t result = swift_unknownObjectRelease();
    a2[1] = 0u;
    a2[2] = 0u;
    *a2 = 0u;
  }
  else
  {
    sub_1C6576D70();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1C64BDCA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[7] = a5;
  v6[8] = a6;
  v6[5] = a3;
  v6[6] = a4;
  v6[3] = a1;
  v6[4] = a2;
  return OUTLINED_FUNCTION_4_1((uint64_t)sub_1C64BDCC0);
}

uint64_t sub_1C64BDCC0()
{
  OUTLINED_FUNCTION_46_1();
  OUTLINED_FUNCTION_38_1();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF7ED0);
  uint64_t v0 = OUTLINED_FUNCTION_100();
  OUTLINED_FUNCTION_22_3(v0, v1, v2, v3, v4, v5, v6, v7, v13);
  uint64_t v8 = swift_task_alloc();
  long long v9 = (void *)OUTLINED_FUNCTION_61_0(v8);
  *long long v9 = v10;
  v9[1] = sub_1C64BDD84;
  OUTLINED_FUNCTION_16_2();
  OUTLINED_FUNCTION_77();
  return MEMORY[0x1F4188080]();
}

uint64_t sub_1C64BDD84()
{
  OUTLINED_FUNCTION_6_0();
  OUTLINED_FUNCTION_0_0();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_3_4();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_3_1();
  *uint64_t v6 = v5;
  *(void *)(v3 + 88) = v0;
  swift_task_dealloc();
  if (!v0) {
    swift_task_dealloc();
  }
  OUTLINED_FUNCTION_24_2();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t sub_1C64BDE68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[7] = a5;
  v6[8] = a6;
  v6[5] = a3;
  v6[6] = a4;
  v6[3] = a1;
  v6[4] = a2;
  return MEMORY[0x1F4188298](sub_1C64BDE90, 0, 0);
}

uint64_t sub_1C64BDE90()
{
  OUTLINED_FUNCTION_46_1();
  OUTLINED_FUNCTION_38_1();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF8F18);
  uint64_t v0 = OUTLINED_FUNCTION_100();
  OUTLINED_FUNCTION_22_3(v0, v1, v2, v3, v4, v5, v6, v7, v13);
  uint64_t v8 = swift_task_alloc();
  uint64_t v9 = (void *)OUTLINED_FUNCTION_61_0(v8);
  *uint64_t v9 = v10;
  v9[1] = sub_1C64BDD84;
  OUTLINED_FUNCTION_16_2();
  OUTLINED_FUNCTION_77();
  return MEMORY[0x1F4188080]();
}

uint64_t sub_1C64BDF54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[7] = a5;
  v6[8] = a6;
  v6[5] = a3;
  v6[6] = a4;
  v6[3] = a1;
  v6[4] = a2;
  return OUTLINED_FUNCTION_4_1((uint64_t)sub_1C64BDF74);
}

uint64_t sub_1C64BDF74()
{
  OUTLINED_FUNCTION_46_1();
  OUTLINED_FUNCTION_38_1();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F0C58);
  uint64_t v0 = OUTLINED_FUNCTION_100();
  OUTLINED_FUNCTION_22_3(v0, v1, v2, v3, v4, v5, v6, v7, v13);
  uint64_t v8 = swift_task_alloc();
  uint64_t v9 = (void *)OUTLINED_FUNCTION_61_0(v8);
  *uint64_t v9 = v10;
  v9[1] = sub_1C64BDD84;
  OUTLINED_FUNCTION_16_2();
  OUTLINED_FUNCTION_77();
  return MEMORY[0x1F4188080]();
}

uint64_t sub_1C64BE038(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[7] = a5;
  v6[8] = a6;
  v6[5] = a3;
  v6[6] = a4;
  v6[3] = a1;
  v6[4] = a2;
  return OUTLINED_FUNCTION_4_1((uint64_t)sub_1C64BE058);
}

uint64_t sub_1C64BE058()
{
  OUTLINED_FUNCTION_46_1();
  OUTLINED_FUNCTION_38_1();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF8F20);
  uint64_t v0 = OUTLINED_FUNCTION_100();
  OUTLINED_FUNCTION_22_3(v0, v1, v2, v3, v4, v5, v6, v7, v13);
  uint64_t v8 = swift_task_alloc();
  uint64_t v9 = (void *)OUTLINED_FUNCTION_61_0(v8);
  *uint64_t v9 = v10;
  v9[1] = sub_1C64BE11C;
  OUTLINED_FUNCTION_16_2();
  OUTLINED_FUNCTION_77();
  return MEMORY[0x1F4188080]();
}

uint64_t sub_1C64BE11C()
{
  OUTLINED_FUNCTION_6_0();
  OUTLINED_FUNCTION_0_0();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_3_4();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_3_1();
  *uint64_t v6 = v5;
  *(void *)(v3 + 88) = v0;
  swift_task_dealloc();
  if (!v0) {
    swift_task_dealloc();
  }
  OUTLINED_FUNCTION_24_2();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t sub_1C64BE200()
{
  return (*(uint64_t (**)(void))(v0 + 8))(*(void *)(v0 + 16));
}

uint64_t sub_1C64BE21C()
{
  OUTLINED_FUNCTION_6_0();
  swift_task_dealloc();
  OUTLINED_FUNCTION_63_1();
  return v0();
}

uint64_t ChannelGenerator.generateCandidateSuggestions(interaction:environment:factory:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v6[11] = a5;
  v6[12] = v5;
  v6[9] = a3;
  v6[10] = a4;
  v6[7] = a1;
  v6[8] = a2;
  return OUTLINED_FUNCTION_4_1((uint64_t)sub_1C64BE298);
}

uint64_t sub_1C64BE298()
{
  OUTLINED_FUNCTION_46_1();
  uint64_t v14 = v0;
  uint64_t v12 = v0[11];
  uint64_t v2 = v0[9];
  uint64_t v1 = v0[10];
  type metadata accessor for ChannelCandidateSuggestionFactory();
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(v12 + 16))(&v13, v1);
  sub_1C649FA30(v2, (uint64_t)(v0 + 2));
  type metadata accessor for IntentService();
  uint64_t inited = swift_initStaticObject();
  uint64_t v4 = sub_1C64BE504((char *)&v13, (uint64_t)(v0 + 2), inited);
  v0[13] = v4;
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 + 24)
                                                                            + **(int **)(v12 + 24));
  uint64_t v5 = (void *)swift_task_alloc();
  v0[14] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_1C64BE400;
  uint64_t v6 = v0[11];
  uint64_t v7 = v0[10];
  uint64_t v9 = v0[7];
  uint64_t v8 = v0[8];
  return v11(v9, v8, v4, v7, v6);
}

uint64_t sub_1C64BE400()
{
  OUTLINED_FUNCTION_6_0();
  OUTLINED_FUNCTION_0_0();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_3_1();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  swift_release();
  uint64_t v3 = OUTLINED_FUNCTION_5_1();
  return v4(v3);
}

uint64_t type metadata accessor for ChannelCandidateSuggestionFactory()
{
  return self;
}

uint64_t sub_1C64BE504(char *a1, uint64_t a2, uint64_t a3)
{
  char v14 = *a1;
  sub_1C649FA30(a2, (uint64_t)v13);
  uint64_t v5 = type metadata accessor for DefaultCoreAnalyticsClient();
  uint64_t v6 = swift_allocObject();
  type metadata accessor for ChannelGeneratorConfidenceLogger();
  uint64_t v7 = swift_allocObject();
  uint64_t v11 = v5;
  uint64_t v12 = &protocol witness table for DefaultCoreAnalyticsClient;
  *(void *)&long long v10 = v6;
  sub_1C64A5488(&v10, v7 + 16);
  type metadata accessor for ChannelCandidateSuggestionFactory();
  uint64_t v8 = OUTLINED_FUNCTION_67_1();
  sub_1C64BE5D4(&v14, (uint64_t)v13, a3, v7);
  __swift_destroy_boxed_opaque_existential_1(a2);
  return v8;
}

uint64_t sub_1C64BE5D4(unsigned char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(unsigned char *)(v4 + 16) = *a1;
  sub_1C649FA30(a2, v4 + 24);
  *(void *)(v4 + 64) = a3;
  uint64_t v10 = type metadata accessor for ChannelGeneratorConfidenceLogger();
  uint64_t v11 = &off_1F215C820;
  *(void *)&long long v9 = a4;
  __swift_destroy_boxed_opaque_existential_1(a2);
  sub_1C64A5488(&v9, v4 + 72);
  return v4;
}

uint64_t sub_1C64BE654(uint64_t *a1, uint64_t a2, unsigned __int8 *a3, char *a4, uint64_t *a5, double a6)
{
  uint64_t v24 = *a1;
  uint64_t v22 = a1[2];
  uint64_t v23 = a1[1];
  uint64_t v20 = a1[4];
  uint64_t v21 = a1[3];
  unsigned int v8 = *a3;
  char v18 = *a4;
  char v19 = *((unsigned char *)a1 + 40);
  uint64_t v9 = *a5;
  uint64_t v10 = a5[1];
  uint64_t v11 = a5[2];
  uint64_t v12 = a5[3];
  char v13 = *((unsigned char *)a5 + 32);
  sub_1C649FA30(v6 + 72, (uint64_t)v32);
  __swift_project_boxed_opaque_existential_1(v32, v33);
  if (v8 <= 0xF7) {
    LOBYTE(v36[0]) = v8;
  }
  else {
    LOBYTE(v36[0]) = *(unsigned char *)(v6 + 16);
  }
  Channel.description.getter();
  sub_1C6500FC4();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v32);
  sub_1C649FA30(v6 + 24, (uint64_t)v36);
  uint64_t v14 = v37;
  uint64_t v15 = v38;
  __swift_project_boxed_opaque_existential_1(v36, v37);
  v32[0] = v24;
  v32[1] = v23;
  uint64_t v32[2] = v22;
  uint64_t v33 = v21;
  uint64_t v34 = v20;
  char v35 = v19;
  char v31 = v18;
  v29[0] = v9;
  v29[1] = v10;
  v29[2] = v11;
  v29[3] = v12;
  char v30 = v13;
  if (v8 >= 0xF8) {
    unsigned int v8 = *(unsigned __int8 *)(v6 + 16);
  }
  long long v26 = xmmword_1C657A9F0;
  uint64_t v27 = v8;
  double v28 = a6;
  uint64_t v16 = (*(uint64_t (**)(void *, uint64_t, char *, void *, long long *, uint64_t, uint64_t))(v15 + 16))(v32, a2, &v31, v29, &v26, v14, v15);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
  return v16;
}

uint64_t Channel.description.getter()
{
  unsigned int v1 = *v0;
  if (!(v1 >> 6))
  {
    sub_1C6576C60();
    swift_bridgeObjectRelease();
    unint64_t v4 = 0xD000000000000011;
    goto LABEL_7;
  }
  if (v1 >> 6 == 1)
  {
    OUTLINED_FUNCTION_96();
    unint64_t v4 = v2;
LABEL_7:
    sub_1C6576620();
    swift_bridgeObjectRelease();
    return v4;
  }
  uint64_t result = 0xD000000000000010;
  switch(*v0)
  {
    case 0x81:
      uint64_t result = OUTLINED_FUNCTION_95();
      break;
    case 0x82:
      uint64_t result = OUTLINED_FUNCTION_93_0();
      break;
    case 0x83:
      uint64_t result = OUTLINED_FUNCTION_91_0();
      break;
    case 0x84:
      uint64_t result = OUTLINED_FUNCTION_90_0();
      break;
    case 0x85:
      uint64_t result = OUTLINED_FUNCTION_86_0();
      break;
    case 0x86:
      uint64_t result = OUTLINED_FUNCTION_85_0();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C64BEA74()
{
  OUTLINED_FUNCTION_46_1();
  long long v2 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(v0 + 16) = *(_OWORD *)v1;
  long long v4 = *(_OWORD *)(v3 + 16);
  *(_OWORD *)(v0 + 64) = *(_OWORD *)v3;
  *(_OWORD *)(v0 + 32) = v2;
  char v5 = *(unsigned char *)(v1 + 40);
  char v7 = *v6;
  char v8 = *(unsigned char *)(v3 + 32);
  *(void *)(v0 + 48) = *(void *)(v1 + 32);
  *(unsigned char *)(v0 + 56) = v5;
  *(unsigned char *)(v0 + 57) = -8;
  *(unsigned char *)(v0 + 58) = v7;
  *(_OWORD *)(v0 + 80) = v4;
  *(unsigned char *)(v0 + 96) = v8;
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v0 + 104) = v9;
  *uint64_t v9 = v0;
  v9[1] = sub_1C64BEB9C;
  return sub_1C64BEC94();
}

uint64_t sub_1C64BEB9C()
{
  OUTLINED_FUNCTION_6_0();
  OUTLINED_FUNCTION_0_0();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_3_1();
  *long long v2 = v1;
  swift_task_dealloc();
  uint64_t v3 = OUTLINED_FUNCTION_5_1();
  return v4(v3);
}

uint64_t sub_1C64BEC60()
{
  return sub_1C64C7EA0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C64BEC94()
{
  OUTLINED_FUNCTION_49_1();
  uint64_t v3 = v2;
  char v5 = v4;
  char v7 = v6;
  *(void *)(v1 + 216) = v8;
  *(void *)(v1 + 224) = v0;
  *(void *)(v1 + 208) = v9;
  *(void *)(v1 + 200) = v10;
  *(void *)(v1 + 192) = v11;
  sub_1C64C2888(v12, v1 + 16);
  *(unsigned char *)(v1 + 57) = *v7;
  *(unsigned char *)(v1 + 58) = *v5;
  long long v13 = *(_OWORD *)(v3 + 16);
  *(_OWORD *)(v1 + 232) = *(_OWORD *)v3;
  *(_OWORD *)(v1 + 248) = v13;
  *(unsigned char *)(v1 + 59) = *(unsigned char *)(v3 + 32);
  OUTLINED_FUNCTION_24_2();
  return MEMORY[0x1F4188298](v14, v15, v16);
}

uint64_t sub_1C64BED3C()
{
  uint64_t v48 = v0;
  uint64_t v2 = (char *)(v0 + 57);
  unsigned int v1 = *(unsigned __int8 *)(v0 + 57);
  sub_1C649FA30(*(void *)(v0 + 224) + 72, v0 + 112);
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 112), *(void *)(v0 + 136));
  if (v1 <= 0xF7) {
    char v3 = *v2;
  }
  else {
    char v3 = *(unsigned char *)(*(void *)(v0 + 224) + 16);
  }
  LOBYTE(v38[0]) = v3;
  Channel.description.getter();
  char v27 = *(unsigned char *)(v0 + 59);
  uint64_t v25 = *(void *)(v0 + 248);
  uint64_t v26 = *(void *)(v0 + 256);
  long long v24 = *(_OWORD *)(v0 + 232);
  char v23 = *(unsigned char *)(v0 + 58);
  uint64_t v4 = *(void *)(v0 + 224);
  sub_1C6500FC4();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 112);
  sub_1C649FA30(v4 + 24, v0 + 152);
  uint64_t v5 = *(void *)(v0 + 184);
  uint64_t v28 = *(void *)(v0 + 176);
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 152), v28);
  uint64_t v30 = v0 + 16;
  sub_1C64C2888(v0 + 16, v0 + 64);
  sub_1C64BF70C((uint64_t *)(v0 + 64), (uint64_t)&v32);
  uint64_t v6 = v32;
  uint64_t v7 = v33;
  uint64_t v9 = v34;
  uint64_t v8 = v35;
  uint64_t v10 = v36;
  char v11 = v37;
  v38[0] = v32;
  v38[1] = v33;
  v38[2] = v34;
  v38[3] = v35;
  _OWORD v38[4] = v36;
  char v39 = v37;
  char v40 = v23;
  long long v41 = v24;
  uint64_t v42 = v25;
  uint64_t v43 = v26;
  char v44 = v27;
  if (v1 >= 0xF8) {
    uint64_t v2 = (char *)(*(void *)(v0 + 224) + 16);
  }
  uint64_t v12 = *v2;
  uint64_t v13 = *(void *)(v0 + 216);
  uint64_t v29 = *(void *)(v0 + 208);
  uint64_t v14 = *(void *)(v0 + 200);
  uint64_t v15 = *(void *)(v0 + 192);
  long long v45 = xmmword_1C657A9F0;
  uint64_t v46 = v12;
  uint64_t v47 = v14;
  *(void *)(v0 + 264) = (*(uint64_t (**)(void *, uint64_t, char *, long long *, long long *, uint64_t, uint64_t))(v5 + 16))(v38, v15, &v40, &v41, &v45, v28, v5);
  sub_1C64C28E4(v6, v7, v9, v8, v10, v11);
  __swift_destroy_boxed_opaque_existential_1(v0 + 152);
  uint64_t v16 = swift_allocObject();
  *(void *)(v0 + 272) = v16;
  sub_1C64C2888(v30, v16 + 16);
  *(void *)(v16 + 64) = v29;
  *(void *)(v16 + 72) = v13;
  sub_1C64C7E60(v30, (void (*)(void, void, void, void, void, void))sub_1C64C2A9C);
  char v31 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1EA3F0B60
                                                                                     + dword_1EA3F0B60);
  swift_retain();
  uint64_t v17 = (void *)swift_task_alloc();
  *(void *)(v0 + 280) = v17;
  void *v17 = v0;
  v17[1] = sub_1C64BF04C;
  OUTLINED_FUNCTION_24_2();
  return v31(v18, v19, v20, 0, v21, v16);
}

uint64_t sub_1C64BF04C()
{
  OUTLINED_FUNCTION_49_1();
  OUTLINED_FUNCTION_0_0();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_3_1();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v3 = OUTLINED_FUNCTION_5_1();
  return v4(v3);
}

uint64_t sub_1C64BF160(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 264) = a3;
  *(void *)(v4 + 272) = a4;
  *(void *)(v4 + 248) = a1;
  *(void *)(v4 + 256) = a2;
  sub_1C64C2888(a2, v4 + 112);
  long long v5 = *(_OWORD *)(v4 + 128);
  *(_OWORD *)(v4 + 280) = *(_OWORD *)(v4 + 112);
  *(_OWORD *)(v4 + 296) = v5;
  *(void *)(v4 + 312) = *(void *)(v4 + 144);
  *(unsigned char *)(v4 + 57) = *(unsigned char *)(v4 + 152);
  return MEMORY[0x1F4188298](sub_1C64BF1F4, 0, 0);
}

uint64_t sub_1C64BF1F4()
{
  uint64_t v1 = *(void *)(v0 + 256);
  sub_1C649FA30(*(void *)(v0 + 248), v0 + 208);
  sub_1C64C2888(v1, v0 + 64);
  int v2 = *(char *)(v0 + 104);
  if (v2 < 0)
  {
    char v6 = *(unsigned char *)(v0 + 57);
    uint64_t v7 = *(void *)(v0 + 296);
    uint64_t v14 = *(void *)(v0 + 304);
    uint64_t v15 = *(void *)(v0 + 312);
    uint64_t v9 = *(void **)(v0 + 280);
    uint64_t v8 = *(void **)(v0 + 288);
    *(unsigned char *)(v0 + 104) = v2 & 0x7F;
    sub_1C64C7E04(v0 + 64, v0 + 16);
    uint64_t v11 = *(void *)(v0 + 232);
    uint64_t v10 = *(void *)(v0 + 240);
    __swift_project_boxed_opaque_existential_1((void *)(v0 + 208), v11);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8);
    sub_1C64C2AB0(v9, v8, v7, v14, v15, v6 & 0x7F);
    *(void *)(v0 + 320) = v12(v11, v10);
    swift_getObjectType();
    sub_1C64C7E04(v0 + 16, v0 + 160);
    uint64_t v13 = (void *)swift_task_alloc();
    *(void *)(v0 + 328) = v13;
    *uint64_t v13 = v0;
    v13[1] = sub_1C64BF400;
    OUTLINED_FUNCTION_87_0();
    return Context.setIntentType(_:)();
  }
  else
  {
    OUTLINED_FUNCTION_41_1();
    uint64_t v16 = (uint64_t (*)(uint64_t))((char *)v3 + *v3);
    uint64_t v4 = (void *)swift_task_alloc();
    *(void *)(v0 + 336) = v4;
    *uint64_t v4 = v0;
    v4[1] = sub_1C64BF5B8;
    return v16(v0 + 208);
  }
}

uint64_t sub_1C64BF400()
{
  OUTLINED_FUNCTION_6_0();
  OUTLINED_FUNCTION_0_0();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_3_1();
  *int v2 = v1;
  swift_task_dealloc();
  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_24_2();
  return MEMORY[0x1F4188298](v3, v4, v5);
}

uint64_t sub_1C64BF4E4()
{
  OUTLINED_FUNCTION_49_1();
  sub_1C64C7E60(*(void *)(v0 + 256), (void (*)(void, void, void, void, void, void))sub_1C64C28E4);
  OUTLINED_FUNCTION_41_1();
  uint64_t v4 = (uint64_t (*)(uint64_t))((char *)v1 + *v1);
  int v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 336) = v2;
  *int v2 = v0;
  v2[1] = sub_1C64BF5B8;
  return v4(v0 + 208);
}

uint64_t sub_1C64BF5B8()
{
  OUTLINED_FUNCTION_6_0();
  OUTLINED_FUNCTION_0_0();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_3_1();
  *int v2 = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_24_2();
  return MEMORY[0x1F4188298](v3, v4, v5);
}

uint64_t sub_1C64BF680()
{
  OUTLINED_FUNCTION_6_0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF8FD8);
  uint64_t v1 = OUTLINED_FUNCTION_72_0();
  *(_OWORD *)(v1 + 16) = xmmword_1C6577AD0;
  sub_1C64A5488((long long *)(v0 + 208), v1 + 32);
  int v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_1C64BF70C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  uint64_t v5 = a1[2];
  uint64_t v6 = a1[3];
  uint64_t v7 = a1[4];
  int v8 = *((unsigned __int8 *)a1 + 40);
  if (v8 == 130)
  {
    type metadata accessor for AppIntentFilter.Builder();
    swift_initStackObject();
    uint64_t v9 = (void *)OUTLINED_FUNCTION_42_1();
    sub_1C64C2AB0(v9, v10, v11, v12, v13, 2);
    sub_1C6548060();
    sub_1C6547C64(v25);
    uint64_t v14 = (void *)OUTLINED_FUNCTION_42_1();
    sub_1C64C28E4(v14, v15, v16, v17, v18, 130);
    uint64_t result = swift_release();
    uint64_t v3 = v25[0];
    uint64_t v4 = v25[1];
    uint64_t v5 = v25[2];
    uint64_t v6 = v25[3];
    uint64_t v7 = v25[4];
  }
  else
  {
    uint64_t v20 = (void *)OUTLINED_FUNCTION_42_1();
    uint64_t result = (uint64_t)sub_1C64C2A9C(v20, v21, v22, v23, v24, v8);
  }
  *(void *)a2 = v3;
  *(void *)(a2 + 8) = v4;
  *(void *)(a2 + 16) = v5;
  *(void *)(a2 + 24) = v6;
  *(void *)(a2 + 32) = v7;
  *(unsigned char *)(a2 + 40) = v8;
  return result;
}

uint64_t ChannelCandidateSuggestionFactory.deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 72);
  return v0;
}

uint64_t ChannelCandidateSuggestionFactory.__deallocating_deinit()
{
  ChannelCandidateSuggestionFactory.deinit();

  return MEMORY[0x1F4186488](v0, 112, 7);
}

uint64_t ChannelCandidateSuggestionFactory.create(intent:channelOverride:objective:confidenceScore:deliveryVehicle:)(uint64_t a1, unsigned char *a2, unsigned char *a3, uint64_t a4, double a5)
{
  *(void *)(v6 + 160) = v5;
  *(double *)(v6 + 152) = a5;
  *(_OWORD *)(v6 + 168) = *(_OWORD *)a1;
  *(void *)(v6 + 184) = *(void *)(a1 + 16);
  *(unsigned char *)(v6 + 59) = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(v6 + 60) = *a2;
  *(unsigned char *)(v6 + 61) = *a3;
  long long v7 = *(_OWORD *)(a4 + 16);
  *(_OWORD *)(v6 + 192) = *(_OWORD *)a4;
  *(_OWORD *)(v6 + 208) = v7;
  *(unsigned char *)(v6 + 62) = *(unsigned char *)(a4 + 32);
  return OUTLINED_FUNCTION_4_1((uint64_t)sub_1C64BF88C);
}

uint64_t sub_1C64BF88C()
{
  char v15 = *(unsigned char *)(v0 + 62);
  uint64_t v1 = *(void *)(v0 + 208);
  uint64_t v14 = *(void *)(v0 + 216);
  long long v13 = *(_OWORD *)(v0 + 192);
  __int16 v2 = *(_WORD *)(v0 + 60);
  uint64_t v4 = *(void *)(v0 + 176);
  uint64_t v3 = *(void *)(v0 + 184);
  uint64_t v5 = *(void **)(v0 + 168);
  uint64_t v16 = *(void *)(v0 + 160);
  char v6 = *(unsigned char *)(v0 + 59);
  Intent.getType()(v0 + 16);
  uint64_t v7 = *(void *)(v0 + 48);
  char v8 = *(unsigned char *)(v0 + 56) | 0x80;
  long long v9 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v0 + 64) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v0 + 80) = v9;
  *(void *)(v0 + 96) = v7;
  *(unsigned char *)(v0 + 104) = v8;
  *(void *)(v0 + 224) = sub_1C6576460();
  *(_WORD *)(v0 + 57) = v2;
  *(_OWORD *)(v0 + 112) = v13;
  *(void *)(v0 + 128) = v1;
  *(void *)(v0 + 136) = v14;
  *(unsigned char *)(v0 + 144) = v15;
  uint64_t v10 = swift_allocObject();
  *(void *)(v0 + 232) = v10;
  *(void *)(v10 + 16) = v16;
  *(void *)(v10 + 24) = v5;
  *(void *)(v10 + 32) = v4;
  *(void *)(v10 + 40) = v3;
  *(unsigned char *)(v10 + 48) = v6;
  swift_retain();
  sub_1C64BA678(v5, v4, v3, v6);
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v0 + 240) = v11;
  *uint64_t v11 = v0;
  v11[1] = sub_1C64BFA6C;
  return sub_1C64BEC94();
}

uint64_t sub_1C64BFA6C()
{
  OUTLINED_FUNCTION_7_1();
  uint64_t v2 = v1;
  uint64_t v3 = *v0;
  uint64_t v4 = *v0;
  OUTLINED_FUNCTION_3_1();
  *uint64_t v5 = v4;
  uint64_t v6 = *v0;
  *uint64_t v5 = *v0;
  swift_task_dealloc();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1C64C28E4(*(void **)(v3 + 64), *(void *)(v3 + 72), *(void *)(v3 + 80), *(void *)(v3 + 88), *(void *)(v3 + 96), *(unsigned char *)(v4 + 104));
  uint64_t v7 = *(uint64_t (**)(uint64_t))(v6 + 8);
  return v7(v2);
}

uint64_t sub_1C64BFC10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  *(unsigned char *)(v6 + 41) = a6;
  *(void *)(v6 + 72) = a4;
  *(void *)(v6 + 80) = a5;
  *(void *)(v6 + 56) = a2;
  *(void *)(v6 + 64) = a3;
  *(void *)(v6 + 48) = a1;
  return MEMORY[0x1F4188298](sub_1C64BFC3C, 0, 0);
}

uint64_t sub_1C64BFC3C()
{
  OUTLINED_FUNCTION_26_4();
  uint64_t v16 = v0;
  char v1 = *(unsigned char *)(v0 + 41);
  uint64_t v2 = *(void *)(v0 + 80);
  uint64_t v3 = *(void **)(v0 + 48);
  long long v13 = *(_OWORD *)(v0 + 64);
  uint64_t v14 = v2;
  char v15 = v1;
  uint64_t v4 = v3[3];
  uint64_t v5 = v3[4];
  __swift_project_boxed_opaque_existential_1(v3, v4);
  uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 16))(v4, v5);
  *(void *)(v0 + 88) = IntentService.getParametersFromIntent(intent:suggestion:checkForAllMandatoryParams:)((uint64_t)&v13, v6, 0);
  swift_release();
  uint64_t v7 = v3[3];
  uint64_t v8 = v3[4];
  __swift_project_boxed_opaque_existential_1(v3, v7);
  *(void *)(v0 + 96) = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v7, v8);
  *(void *)(v0 + 104) = v9;
  *(void *)(v0 + 112) = swift_getObjectType();
  uint64_t v11 = sub_1C65768C0();
  return MEMORY[0x1F4188298](sub_1C64BFD74, v11, v10);
}

uint64_t sub_1C64BFD74()
{
  OUTLINED_FUNCTION_6_0();
  Context.setSuggestionParameters(from:)(v0[11]);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_24_2();
  return MEMORY[0x1F4188298](v1, v2, v3);
}

uint64_t sub_1C64BFDEC()
{
  OUTLINED_FUNCTION_46_1();
  char v1 = *(unsigned char *)(v0 + 41);
  uint64_t v2 = *(void *)(v0 + 80);
  long long v8 = *(_OWORD *)(v0 + 64);
  uint64_t v3 = *(void **)(v0 + 48);
  uint64_t v4 = v3[3];
  uint64_t v5 = v3[4];
  __swift_project_boxed_opaque_existential_1(v3, v4);
  *(void *)(v0 + 120) = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v4, v5);
  swift_getObjectType();
  *(_OWORD *)(v0 + 16) = v8;
  *(void *)(v0 + 32) = v2;
  *(unsigned char *)(v0 + 40) = v1;
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v0 + 128) = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_1C64BFEF8;
  OUTLINED_FUNCTION_87_0();
  return Context.setIntent(_:)();
}

uint64_t sub_1C64BFEF8()
{
  OUTLINED_FUNCTION_6_0();
  OUTLINED_FUNCTION_0_0();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_3_1();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_63_1();
  return v3();
}

unint64_t HabitualClientModel.rawValue.getter()
{
  unint64_t result = 0xD00000000000001FLL;
  switch(*v0)
  {
    case 2:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case 3:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 4:
      unint64_t result = 0xD000000000000015;
      break;
    case 5:
      unint64_t result = 0x6E776F6E6B6E75;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t SignalChannel.rawValue.getter()
{
  if (*v0) {
    return 0x66654472656E776FLL;
  }
  else {
    return 0x6E65746E49707061;
  }
}

void *static Channel.allCases.getter()
{
  uint64_t v0 = MEMORY[0x1E4FBC860];
  uint64_t v16 = MEMORY[0x1E4FBC860];
  sub_1C64A26E8();
  uint64_t v1 = v16;
  char v2 = byte_1F2157320;
  unint64_t v4 = *(void *)(v16 + 16);
  unint64_t v3 = *(void *)(v16 + 24);
  int64_t v5 = v3 >> 1;
  unint64_t v6 = v4 + 1;
  if (v3 >> 1 <= v4)
  {
    OUTLINED_FUNCTION_71_1(v3);
    sub_1C64A26E8();
    uint64_t v1 = v16;
    unint64_t v3 = *(void *)(v16 + 24);
    int64_t v5 = v3 >> 1;
  }
  *(void *)(v1 + 16) = v6;
  *(unsigned char *)(v1 + v4 + 32) = v2 | 0x40;
  char v7 = byte_1F2157321;
  int64_t v8 = v4 + 2;
  if (v5 < v8)
  {
    OUTLINED_FUNCTION_71_1(v3);
    sub_1C64A26E8();
    uint64_t v1 = v16;
  }
  *(void *)(v1 + 16) = v8;
  *(unsigned char *)(v1 + v6 + 32) = v7 | 0x40;
  sub_1C64A00A0();
  uint64_t v9 = qword_1F21572C0;
  if (qword_1F21572C0)
  {
    sub_1C64A26E8();
    unint64_t v10 = *(void *)(v0 + 16);
    uint64_t v11 = &byte_1F21572D0;
    do
    {
      char v13 = *v11++;
      char v12 = v13;
      unint64_t v14 = *(void *)(v0 + 24);
      if (v10 >= v14 >> 1)
      {
        OUTLINED_FUNCTION_71_1(v14);
        sub_1C64A26E8();
      }
      *(void *)(v0 + 16) = v10 + 1;
      *(unsigned char *)(v0 + v10++ + 32) = v12;
      --v9;
    }
    while (v9);
  }
  swift_bridgeObjectRelease();
  sub_1C64A00A0();
  return &unk_1F21572D8;
}

void *static SignalChannel.allCases.getter()
{
  return &unk_1F2157328;
}

void *static HabitualClientModel.allCases.getter()
{
  return &unk_1F21572B0;
}

uint64_t static Channel.findChannel(withName:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  unint64_t v6 = static Channel.allCases.getter();
  uint64_t v7 = v6[2];
  if (v7)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = 0;
    while (1)
    {
      unsigned int v9 = *((unsigned __int8 *)v6 + v8 + 32);
      if (!(v9 >> 6)) {
        break;
      }
      if (v9 >> 6 == 1)
      {
        OUTLINED_FUNCTION_96();
        unint64_t v16 = v10;
        unint64_t v17 = 0xE700000000000000;
LABEL_9:
        sub_1C6576620();
        swift_bridgeObjectRelease();
        uint64_t v11 = v16;
        unint64_t v12 = v17;
        goto LABEL_10;
      }
      uint64_t v11 = 0xD000000000000010;
      unint64_t v12 = 0x80000001C65880D0;
      switch(*((unsigned char *)v6 + v8 + 32))
      {
        case 0x81:
          unint64_t v12 = 0xEC00000073657669;
          uint64_t v11 = OUTLINED_FUNCTION_95();
          break;
        case 0x82:
          unint64_t v12 = 0xE800000000000000;
          uint64_t v11 = OUTLINED_FUNCTION_93_0();
          break;
        case 0x83:
          unint64_t v12 = 0xEA00000000006C61;
          uint64_t v11 = OUTLINED_FUNCTION_91_0();
          break;
        case 0x84:
          unint64_t v12 = 0xEE00776569567070;
          uint64_t v11 = OUTLINED_FUNCTION_90_0();
          break;
        case 0x85:
          unint64_t v12 = 0xED00007370695469;
          uint64_t v11 = OUTLINED_FUNCTION_86_0();
          break;
        case 0x86:
          unint64_t v12 = 0xEB000000006C616ELL;
          uint64_t v11 = OUTLINED_FUNCTION_85_0();
          break;
        default:
          break;
      }
LABEL_10:
      if (v11 == a1 && v12 == a2)
      {
        swift_bridgeObjectRelease_n();
        uint64_t result = swift_bridgeObjectRelease();
        goto LABEL_25;
      }
      char v14 = sub_1C6577090();
      swift_bridgeObjectRelease();
      if (v14)
      {
        uint64_t result = swift_bridgeObjectRelease_n();
        goto LABEL_25;
      }
      if (v7 == ++v8)
      {
        uint64_t result = swift_bridgeObjectRelease_n();
        LOBYTE(v9) = -8;
        goto LABEL_25;
      }
    }
    sub_1C6576C60();
    swift_bridgeObjectRelease();
    unint64_t v16 = 0xD000000000000011;
    unint64_t v17 = 0x80000001C65880B0;
    goto LABEL_9;
  }
  uint64_t result = swift_bridgeObjectRelease();
  LOBYTE(v9) = -8;
LABEL_25:
  *a3 = v9;
  return result;
}

uint64_t Channel.hash(into:)(uint64_t a1)
{
  unsigned int v3 = *v1;
  if (v3 >> 6)
  {
    if (v3 >> 6 == 1)
    {
      sub_1C6577160();
      sub_1C65765E0();
      return swift_bridgeObjectRelease();
    }
    else
    {
      return sub_1C6577160();
    }
  }
  else
  {
    sub_1C6577160();
    return sub_1C649A9D0(a1, v3);
  }
}

uint64_t static Channel.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned int v2 = *a1;
  unsigned int v3 = *a2;
  if (v2 >> 6)
  {
    if (v2 >> 6 != 1)
    {
      switch(v2)
      {
        case 0x81u:
          return v3 == 129;
        case 0x82u:
          return v3 == 130;
        case 0x83u:
          return v3 == 131;
        case 0x84u:
          return v3 == 132;
        case 0x85u:
          return v3 == 133;
        case 0x86u:
          return v3 == 134;
        default:
          return v3 == 128;
      }
    }
    if ((v3 & 0xC0) == 0x40)
    {
      BOOL v4 = (v2 & 1) == 0;
      if (v2) {
        uint64_t v5 = 0x66654472656E776FLL;
      }
      else {
        uint64_t v5 = 0x6E65746E49707061;
      }
      if (v4) {
        unint64_t v6 = 0xEC00000069704174;
      }
      else {
        unint64_t v6 = 0xEF6E6F6974696E69;
      }
      if (v3) {
        uint64_t v7 = 0x66654472656E776FLL;
      }
      else {
        uint64_t v7 = 0x6E65746E49707061;
      }
      if (v3) {
        unint64_t v8 = 0xEF6E6F6974696E69;
      }
      else {
        unint64_t v8 = 0xEC00000069704174;
      }
      if (v5 == v7 && v6 == v8)
      {
        swift_bridgeObjectRelease_n();
        return 1;
      }
      else
      {
        char v10 = sub_1C6577090();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return v10 & 1;
      }
    }
    return 0;
  }
  if (v3 > 0x3F) {
    return 0;
  }

  return sub_1C6498308(v2, v3);
}

uint64_t sub_1C64C0934(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000010 && a2 == 0x80000001C65880D0 || (sub_1C6577090() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v5 = a1 == 0x74616E7265746C61 && a2 == 0xEC00000073657669;
    if (v5 || (sub_1C6577090() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v6 = a1 == 0x6E7275547478656ELL && a2 == 0xE800000000000000;
      if (v6 || (sub_1C6577090() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0xD000000000000010 && a2 == 0x80000001C6588160 || (sub_1C6577090() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        BOOL v7 = a1 == 0x75747865746E6F63 && a2 == 0xEA00000000006C61;
        if (v7 || (sub_1C6577090() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else
        {
          BOOL v8 = a1 == 0x41746E6572727563 && a2 == 0xEE00776569567070;
          if (v8 || (sub_1C6577090() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 5;
          }
          else
          {
            BOOL v9 = a1 == 0x6C616E676973 && a2 == 0xE600000000000000;
            if (v9 || (sub_1C6577090() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 6;
            }
            else
            {
              BOOL v10 = a1 == 0x6E694D7070416E69 && a2 == 0xED00007370695469;
              if (v10 || (sub_1C6577090() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 7;
              }
              else if (a1 == 0x6F69746163756465 && a2 == 0xEB000000006C616ELL)
              {
                swift_bridgeObjectRelease();
                return 8;
              }
              else
              {
                char v12 = sub_1C6577090();
                swift_bridgeObjectRelease();
                if (v12) {
                  return 8;
                }
                else {
                  return 9;
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t sub_1C64C0D38()
{
  return 9;
}

unint64_t sub_1C64C0D40(char a1)
{
  unint64_t result = 0xD000000000000010;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x74616E7265746C61;
      break;
    case 2:
      unint64_t result = 0x6E7275547478656ELL;
      break;
    case 4:
      unint64_t result = 0x75747865746E6F63;
      break;
    case 5:
      unint64_t result = 0x41746E6572727563;
      break;
    case 6:
      unint64_t result = 0x6C616E676973;
      break;
    case 7:
      unint64_t result = 0x6E694D7070416E69;
      break;
    case 8:
      unint64_t result = 0x6F69746163756465;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C64C0E88(uint64_t a1, uint64_t a2)
{
  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_1C6577090();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1C64C0EF8()
{
  return 12383;
}

uint64_t sub_1C64C0F04(uint64_t a1)
{
  unint64_t v2 = sub_1C64C55C4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C64C0F40(uint64_t a1)
{
  unint64_t v2 = sub_1C64C55C4();

  return MEMORY[0x1F41862B0](a1, v2);
}

unint64_t sub_1C64C0F7C()
{
  return sub_1C64C0D40(*v0);
}

uint64_t sub_1C64C0F84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C64C0934(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C64C0FAC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C64C0D38();
  *a1 = result;
  return result;
}

uint64_t sub_1C64C0FD4(uint64_t a1)
{
  unint64_t v2 = sub_1C64C52CC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C64C1010(uint64_t a1)
{
  unint64_t v2 = sub_1C64C52CC();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C64C104C(uint64_t a1)
{
  unint64_t v2 = sub_1C64C5494();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C64C1088(uint64_t a1)
{
  unint64_t v2 = sub_1C64C5494();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C64C10C4(uint64_t a1)
{
  unint64_t v2 = sub_1C64C5448();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C64C1100(uint64_t a1)
{
  unint64_t v2 = sub_1C64C5448();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C64C113C(uint64_t a1)
{
  unint64_t v2 = sub_1C64C5318();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C64C1178(uint64_t a1)
{
  unint64_t v2 = sub_1C64C5318();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C64C11B4()
{
  return sub_1C649B91C();
}

uint64_t sub_1C64C11D4(uint64_t a1)
{
  unint64_t v2 = sub_1C64C54E0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C64C1210(uint64_t a1)
{
  unint64_t v2 = sub_1C64C54E0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C64C124C(uint64_t a1)
{
  unint64_t v2 = sub_1C64C5364();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C64C1288(uint64_t a1)
{
  unint64_t v2 = sub_1C64C5364();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C64C12C4(uint64_t a1)
{
  unint64_t v2 = sub_1C64C5578();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C64C1300(uint64_t a1)
{
  unint64_t v2 = sub_1C64C5578();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C64C133C(uint64_t a1)
{
  unint64_t v2 = sub_1C64C5610();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C64C1378(uint64_t a1)
{
  unint64_t v2 = sub_1C64C5610();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C64C13B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C64C0E88(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1C64C13E0(uint64_t a1)
{
  unint64_t v2 = sub_1C64C53B0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C64C141C(uint64_t a1)
{
  unint64_t v2 = sub_1C64C53B0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t Channel.encode(to:)(void *a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFB850);
  OUTLINED_FUNCTION_0();
  uint64_t v61 = v4;
  uint64_t v62 = v3;
  MEMORY[0x1F4188790](v3);
  OUTLINED_FUNCTION_3();
  uint64_t v60 = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFB860);
  OUTLINED_FUNCTION_0();
  uint64_t v58 = v7;
  uint64_t v59 = v6;
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_3();
  uint64_t v57 = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFB838);
  OUTLINED_FUNCTION_0();
  uint64_t v65 = v10;
  uint64_t v66 = v9;
  MEMORY[0x1F4188790](v9);
  OUTLINED_FUNCTION_16(v11, v46);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFB868);
  OUTLINED_FUNCTION_0();
  uint64_t v55 = v13;
  uint64_t v56 = v12;
  MEMORY[0x1F4188790](v12);
  OUTLINED_FUNCTION_3();
  uint64_t v54 = v14;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFB848);
  OUTLINED_FUNCTION_0();
  uint64_t v52 = v16;
  uint64_t v53 = v15;
  MEMORY[0x1F4188790](v15);
  OUTLINED_FUNCTION_3();
  uint64_t v51 = v17;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFB870);
  OUTLINED_FUNCTION_0();
  uint64_t v63 = v19;
  uint64_t v64 = v18;
  MEMORY[0x1F4188790](v18);
  OUTLINED_FUNCTION_21();
  uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFB840);
  OUTLINED_FUNCTION_0();
  uint64_t v49 = v20;
  MEMORY[0x1F4188790](v21);
  OUTLINED_FUNCTION_3();
  uint64_t v48 = v22;
  uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFB858);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v23);
  OUTLINED_FUNCTION_75_0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFB878);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v24);
  OUTLINED_FUNCTION_15_0();
  uint64_t v27 = v26 - v25;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFB830);
  OUTLINED_FUNCTION_0();
  uint64_t v68 = v28;
  uint64_t v69 = v29;
  MEMORY[0x1F4188790](v28);
  OUTLINED_FUNCTION_15_0();
  uint64_t v32 = (void *)(v31 - v30);
  unsigned int v33 = *v1;
  uint64_t v34 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C64C52CC();
  uint64_t v67 = v32;
  sub_1C6577240();
  if (!(v33 >> 6))
  {
    char v74 = 3;
    sub_1C64C54E0();
    sub_1C6576F70();
    char v73 = v33;
    sub_1C64C552C();
    sub_1C6577010();
    OUTLINED_FUNCTION_1();
    v36();
    goto LABEL_5;
  }
  if (v33 >> 6 == 1)
  {
    char v78 = 6;
    sub_1C64C53B0();
    sub_1C6576F70();
    char v77 = v33 & 1;
    sub_1C64C53FC();
    sub_1C6577010();
    OUTLINED_FUNCTION_1();
    v35();
LABEL_5:
    OUTLINED_FUNCTION_1();
    return v37();
  }
  switch(v33)
  {
    case 0x81u:
      char v71 = 1;
      sub_1C64C55C4();
      uint64_t v34 = v67;
      uint64_t v27 = v68;
      sub_1C6576F70();
      uint64_t v40 = OUTLINED_FUNCTION_68_1();
      uint64_t v42 = &v81;
      goto LABEL_10;
    case 0x82u:
      char v72 = 2;
      sub_1C64C5578();
      OUTLINED_FUNCTION_29_1();
      long long v41 = *(void (**)(uint64_t, uint64_t))(v49 + 8);
      uint64_t v40 = v48;
      uint64_t v42 = &v82;
LABEL_10:
      uint64_t v43 = *(v42 - 32);
      goto LABEL_16;
    case 0x83u:
      char v75 = 4;
      sub_1C64C5494();
      uint64_t v44 = v51;
      OUTLINED_FUNCTION_29_1();
      uint64_t v45 = v52;
      uint64_t v43 = v53;
      goto LABEL_15;
    case 0x84u:
      char v76 = 5;
      sub_1C64C5448();
      uint64_t v44 = v54;
      OUTLINED_FUNCTION_29_1();
      uint64_t v45 = v55;
      uint64_t v43 = v56;
      goto LABEL_15;
    case 0x85u:
      char v79 = 7;
      sub_1C64C5364();
      uint64_t v44 = v57;
      OUTLINED_FUNCTION_29_1();
      uint64_t v45 = v58;
      uint64_t v43 = v59;
      goto LABEL_15;
    case 0x86u:
      char v80 = 8;
      sub_1C64C5318();
      uint64_t v44 = v60;
      OUTLINED_FUNCTION_29_1();
      uint64_t v45 = v61;
      uint64_t v43 = v62;
LABEL_15:
      long long v41 = *(void (**)(uint64_t, uint64_t))(v45 + 8);
      uint64_t v40 = v44;
LABEL_16:
      v41(v40, v43);
      uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v69 + 8))(v34, v27);
      break;
    default:
      char v70 = 0;
      sub_1C64C5610();
      sub_1C6576F70();
      OUTLINED_FUNCTION_70_1();
      OUTLINED_FUNCTION_1();
      v39();
      uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v69 + 8))(v67, v68);
      break;
  }
  return result;
}

uint64_t Channel.hashValue.getter()
{
  v2[79] = *v0;
  sub_1C6577150();
  Channel.hash(into:)((uint64_t)v2);
  return sub_1C6577190();
}

uint64_t Channel.init(from:)@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFB418);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v3);
  OUTLINED_FUNCTION_16(v4, v60);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFB428);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_3();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFB400);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_3();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFB430);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_3();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFB410);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v8);
  OUTLINED_FUNCTION_3();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFB438);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v9);
  OUTLINED_FUNCTION_3();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFB408);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v10);
  OUTLINED_FUNCTION_3();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFB420);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v11);
  OUTLINED_FUNCTION_75_0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFB440);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v12);
  OUTLINED_FUNCTION_21();
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFB3F8);
  OUTLINED_FUNCTION_0();
  uint64_t v15 = v14;
  MEMORY[0x1F4188790](v16);
  OUTLINED_FUNCTION_15_0();
  uint64_t v19 = v18 - v17;
  uint64_t v64 = a1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C64C52CC();
  sub_1C6577210();
  if (v65) {
    goto LABEL_17;
  }
  uint64_t v62 = v15;
  uint64_t v66 = v19;
  uint64_t v20 = sub_1C6576F40();
  uint64_t v21 = *(void *)(v20 + 16);
  uint64_t v22 = v13;
  if (!v21)
  {
LABEL_8:
    uint64_t v31 = sub_1C6576CE0();
    swift_allocError();
    unsigned int v33 = v32;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F0140);
    *unsigned int v33 = &type metadata for Channel;
    sub_1C6576E90();
    sub_1C6576CD0();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v31 - 8) + 104))(v33, *MEMORY[0x1E4FBBA70], v31);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v62 + 8))(v66, v22);
LABEL_17:
    uint64_t v49 = (uint64_t)v64;
    return __swift_destroy_boxed_opaque_existential_1(v49);
  }
  uint64_t v61 = *(unsigned __int8 *)(v20 + 32);
  sub_1C649F97C(1, v21, v20, v20 + 32, 0, (2 * v21) | 1);
  uint64_t v24 = v23;
  unint64_t v26 = v25;
  swift_bridgeObjectRelease();
  if (v24 != v26 >> 1)
  {
    uint64_t v22 = v13;
    goto LABEL_8;
  }
  switch(v61)
  {
    case 1:
      sub_1C64C55C4();
      OUTLINED_FUNCTION_12_0();
      OUTLINED_FUNCTION_70_1();
      OUTLINED_FUNCTION_1();
      v34();
      swift_unknownObjectRelease();
      uint64_t v35 = OUTLINED_FUNCTION_4_3();
      v36(v35);
      char v30 = -127;
      break;
    case 2:
      sub_1C64C5578();
      OUTLINED_FUNCTION_12_0();
      OUTLINED_FUNCTION_69_1();
      OUTLINED_FUNCTION_1();
      v37();
      swift_unknownObjectRelease();
      uint64_t v38 = OUTLINED_FUNCTION_4_3();
      v39(v38);
      char v30 = -126;
      break;
    case 3:
      sub_1C64C54E0();
      OUTLINED_FUNCTION_12_0();
      sub_1C64C56A8();
      sub_1C6576F30();
      OUTLINED_FUNCTION_69_1();
      OUTLINED_FUNCTION_1();
      v54();
      swift_unknownObjectRelease();
      uint64_t v55 = OUTLINED_FUNCTION_43_1();
      v56(v55);
      char v30 = v67;
      break;
    case 4:
      sub_1C64C5494();
      OUTLINED_FUNCTION_12_0();
      OUTLINED_FUNCTION_1();
      v40();
      swift_unknownObjectRelease();
      uint64_t v41 = OUTLINED_FUNCTION_4_3();
      v42(v41);
      char v30 = -125;
      break;
    case 5:
      sub_1C64C5448();
      OUTLINED_FUNCTION_12_0();
      OUTLINED_FUNCTION_1();
      v43();
      swift_unknownObjectRelease();
      uint64_t v44 = OUTLINED_FUNCTION_4_3();
      v45(v44);
      char v30 = -124;
      break;
    case 6:
      sub_1C64C53B0();
      OUTLINED_FUNCTION_12_0();
      sub_1C64C565C();
      sub_1C6576F30();
      OUTLINED_FUNCTION_68_1();
      OUTLINED_FUNCTION_1();
      v57();
      swift_unknownObjectRelease();
      uint64_t v58 = OUTLINED_FUNCTION_43_1();
      v59(v58);
      char v30 = v68 | 0x40;
      break;
    case 7:
      sub_1C64C5364();
      OUTLINED_FUNCTION_12_0();
      OUTLINED_FUNCTION_1();
      v46();
      swift_unknownObjectRelease();
      uint64_t v47 = OUTLINED_FUNCTION_4_3();
      v48(v47);
      char v30 = -123;
      break;
    case 8:
      sub_1C64C5318();
      OUTLINED_FUNCTION_12_0();
      OUTLINED_FUNCTION_1();
      v51();
      swift_unknownObjectRelease();
      uint64_t v52 = OUTLINED_FUNCTION_4_3();
      v53(v52);
      char v30 = -122;
      break;
    default:
      sub_1C64C5610();
      OUTLINED_FUNCTION_12_0();
      OUTLINED_FUNCTION_70_1();
      OUTLINED_FUNCTION_1();
      v27();
      swift_unknownObjectRelease();
      uint64_t v28 = OUTLINED_FUNCTION_4_3();
      v29(v28);
      char v30 = 0x80;
      break;
  }
  uint64_t v49 = (uint64_t)v64;
  *a2 = v30;
  return __swift_destroy_boxed_opaque_existential_1(v49);
}

uint64_t sub_1C64C24E8@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  return Channel.init(from:)(a1, a2);
}

uint64_t sub_1C64C2500(void *a1)
{
  return Channel.encode(to:)(a1);
}

uint64_t sub_1C64C2520()
{
  v2[79] = *v0;
  sub_1C6577150();
  Channel.hash(into:)((uint64_t)v2);
  return sub_1C6577190();
}

void *sub_1C64C256C@<X0>(void *a1@<X8>)
{
  uint64_t result = static Channel.allCases.getter();
  *a1 = result;
  return result;
}

SiriSuggestionsKit::HabitualClientModel_optional __swiftcall HabitualClientModel.init(rawValue:)(Swift::String rawValue)
{
  unint64_t v2 = v1;
  unint64_t v3 = sub_1C6576E60();
  result.value = swift_bridgeObjectRelease();
  char v5 = 6;
  if (v3 < 6) {
    char v5 = v3;
  }
  *unint64_t v2 = v5;
  return result;
}

uint64_t sub_1C64C25F4(unsigned __int8 *a1, char *a2)
{
  return sub_1C6498308(*a1, *a2);
}

SiriSuggestionsKit::HabitualClientModel_optional sub_1C64C2600(Swift::String *a1)
{
  return HabitualClientModel.init(rawValue:)(*a1);
}

unint64_t sub_1C64C260C@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = HabitualClientModel.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1C64C2634()
{
  return sub_1C6576760();
}

uint64_t sub_1C64C2694()
{
  return sub_1C6576750();
}

uint64_t sub_1C64C26E4()
{
  return sub_1C655AD00(*v0);
}

uint64_t sub_1C64C26EC(uint64_t a1)
{
  return sub_1C649A9D0(a1, *v1);
}

uint64_t sub_1C64C26F4(uint64_t a1)
{
  return sub_1C64EBB9C(a1, *v1);
}

void sub_1C64C26FC(void *a1@<X8>)
{
  *a1 = &unk_1F21572B0;
}

SiriSuggestionsKit::SignalChannel_optional __swiftcall SignalChannel.init(rawValue:)(Swift::String rawValue)
{
  unint64_t v2 = v1;
  uint64_t v3 = sub_1C6576E60();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  *unint64_t v2 = v5;
  return result;
}

uint64_t sub_1C64C2770(char *a1, char *a2)
{
  return sub_1C6498AB8(*a1, *a2);
}

SiriSuggestionsKit::SignalChannel_optional sub_1C64C277C(Swift::String *a1)
{
  return SignalChannel.init(rawValue:)(*a1);
}

uint64_t sub_1C64C2788@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = SignalChannel.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1C64C27B0()
{
  return sub_1C6576760();
}

uint64_t sub_1C64C2810()
{
  return sub_1C6576750();
}

uint64_t sub_1C64C2860()
{
  return sub_1C655AD18();
}

uint64_t sub_1C64C2868()
{
  return sub_1C649AF04();
}

uint64_t sub_1C64C2870()
{
  return sub_1C64EBEA0();
}

void sub_1C64C2878(void *a1@<X8>)
{
  *a1 = &unk_1F2157328;
}

uint64_t sub_1C64C2888(uint64_t a1, uint64_t a2)
{
  return a2;
}

void sub_1C64C28E4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  if (a6 < 0) {
    sub_1C64C28F8(a1, a2, a3, a4, a5, a6 & 0x7F);
  }
  else {
    swift_bridgeObjectRelease();
  }
}

void sub_1C64C28F8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  switch(a6)
  {
    case 0:
    case 4:
      goto LABEL_3;
    case 1:

      break;
    case 2:
    case 3:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_3:
      swift_bridgeObjectRelease();
      break;
    default:
      return;
  }
}

uint64_t sub_1C64C29B4()
{
  sub_1C64C28E4(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(unsigned char *)(v0 + 56));
  swift_release();

  return MEMORY[0x1F4186498](v0, 80, 7);
}

uint64_t sub_1C64C2A00()
{
  OUTLINED_FUNCTION_49_1();
  uint64_t v1 = *(void *)(v0 + 72);
  uint64_t v2 = swift_task_alloc();
  uint64_t v3 = (void *)OUTLINED_FUNCTION_25_3(v2);
  *uint64_t v3 = v4;
  v3[1] = sub_1C64A5560;
  uint64_t v5 = OUTLINED_FUNCTION_88_0();
  return sub_1C64BF160(v5, v6, v7, v1);
}

id sub_1C64C2A9C(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  if (a6 < 0) {
    return sub_1C64C2AB0(a1, a2, a3, a4, a5, a6 & 0x7F);
  }
  else {
    return (id)swift_bridgeObjectRetain();
  }
}

id sub_1C64C2AB0(id result, id a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  switch(a6)
  {
    case 0:
    case 4:
      goto LABEL_3;
    case 1:
      uint64_t result = result;
      break;
    case 2:
    case 3:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
LABEL_3:
      uint64_t result = (id)swift_bridgeObjectRetain();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C64C2B64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[21] = a6;
  v7[22] = a7;
  v7[19] = a4;
  v7[20] = a5;
  v7[17] = a2;
  v7[18] = a3;
  v7[16] = a1;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F0CD0);
  v7[23] = v8;
  v7[24] = *(void *)(v8 - 8);
  v7[25] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFBEF8);
  v7[26] = swift_task_alloc();
  v7[27] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C64C2C74, 0, 0);
}

#error "1C64C2CB0: call analysis failed (funcsize=111)"

uint64_t sub_1C64C2E38()
{
  OUTLINED_FUNCTION_6_0();
  OUTLINED_FUNCTION_0_0();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_3_4();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_3_1();
  *uint64_t v6 = v5;
  swift_task_dealloc();
  if (v0) {
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_24_2();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

void sub_1C64C2F18()
{
  OUTLINED_FUNCTION_26_4();
  uint64_t v3 = *(void *)(v1 + 112);
  if (!v3)
  {
    uint64_t v14 = OUTLINED_FUNCTION_27_3();
    v15(v14);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_59_1();
    OUTLINED_FUNCTION_45_1();
    __asm { BRAA            X2, X16 }
  }
  OUTLINED_FUNCTION_79_0();
  if (v4)
  {
    __break(1u);
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v6 = *(void *)(v1 + 224);
  if (!isUniquelyReferenced_nonNull_native || v2 > *(void *)(v6 + 24) >> 1)
  {
    OUTLINED_FUNCTION_78_0();
    sub_1C64ACCB4();
    uint64_t v6 = v7;
  }
  if (!*(void *)(v3 + 16))
  {
    if (!v0) {
      goto LABEL_20;
    }
    goto LABEL_24;
  }
  OUTLINED_FUNCTION_54_1();
  if (v9 != v4)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  unint64_t v10 = v6 + 32 * v8 + 32;
  if (v3 + 32 < v10 + 32 * v0 && v10 < v3 + 32 + 32 * v0) {
    goto LABEL_27;
  }
  swift_arrayInitWithCopy();
  if (v0)
  {
    uint64_t v12 = *(void *)(v6 + 16);
    BOOL v4 = __OFADD__(v12, v0);
    uint64_t v13 = v12 + v0;
    if (!v4)
    {
      *(void *)(v6 + 16) = v13;
      goto LABEL_20;
    }
LABEL_26:
    __break(1u);
LABEL_27:
    OUTLINED_FUNCTION_39_1();
    OUTLINED_FUNCTION_47_1();
    OUTLINED_FUNCTION_45_1();
    return;
  }
LABEL_20:
  swift_bridgeObjectRelease();
  *(void *)(v1 + 224) = v6;
  uint64_t v18 = swift_task_alloc();
  uint64_t v19 = (void *)OUTLINED_FUNCTION_28_1(v18);
  *uint64_t v19 = v20;
  v19[1] = sub_1C64C2E38;
  OUTLINED_FUNCTION_21_3();
  OUTLINED_FUNCTION_45_1();
  MEMORY[0x1F4187E48]();
}

uint64_t sub_1C64C30FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[21] = a6;
  v7[22] = a7;
  v7[19] = a4;
  v7[20] = a5;
  v7[17] = a2;
  v7[18] = a3;
  v7[16] = a1;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF8F38);
  v7[23] = v8;
  v7[24] = *(void *)(v8 - 8);
  v7[25] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFBEF8);
  v7[26] = swift_task_alloc();
  v7[27] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C64C320C, 0, 0);
}

#error "1C64C3248: call analysis failed (funcsize=111)"

uint64_t sub_1C64C33D0()
{
  OUTLINED_FUNCTION_6_0();
  OUTLINED_FUNCTION_0_0();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_3_4();
  *BOOL v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_3_1();
  *uint64_t v6 = v5;
  swift_task_dealloc();
  if (v0) {
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_24_2();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t sub_1C64C34B0()
{
  OUTLINED_FUNCTION_26_4();
  uint64_t v1 = *(void *)(v0 + 112);
  if (v1)
  {
    uint64_t v2 = *(void *)(v1 + 16);
    uint64_t v3 = *(void *)(*(void *)(v0 + 224) + 16);
    if (__OFADD__(v3, v2))
    {
      __break(1u);
    }
    else
    {
      int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v5 = *(void *)(v0 + 224);
      if (!isUniquelyReferenced_nonNull_native || v3 + v2 > *(void *)(v5 + 24) >> 1)
      {
        sub_1C64ADEF4();
        uint64_t v5 = v6;
      }
      if (*(void *)(v1 + 16))
      {
        OUTLINED_FUNCTION_54_1();
        if (v8 == v9)
        {
          unint64_t v10 = v5 + 40 * v7 + 32;
          if (v1 + 32 < v10 + 40 * v2 && v10 < v1 + 32 + 40 * v2) {
            goto LABEL_27;
          }
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBBF8DD8);
          swift_arrayInitWithCopy();
          if (!v2) {
            goto LABEL_20;
          }
          uint64_t v12 = *(void *)(v5 + 16);
          BOOL v9 = __OFADD__(v12, v2);
          uint64_t v13 = v12 + v2;
          if (!v9)
          {
            *(void *)(v5 + 16) = v13;
LABEL_20:
            swift_bridgeObjectRelease();
            *(void *)(v0 + 224) = v5;
            uint64_t v19 = swift_task_alloc();
            uint64_t v20 = (void *)OUTLINED_FUNCTION_28_1(v19);
            *uint64_t v20 = v21;
            v20[1] = sub_1C64C33D0;
            OUTLINED_FUNCTION_21_3();
            return MEMORY[0x1F4187E48]();
          }
LABEL_26:
          __break(1u);
LABEL_27:
          OUTLINED_FUNCTION_39_1();
          return OUTLINED_FUNCTION_47_1();
        }
LABEL_25:
        __break(1u);
        goto LABEL_26;
      }
      if (!v2) {
        goto LABEL_20;
      }
    }
    __break(1u);
    goto LABEL_25;
  }
  uint64_t v14 = OUTLINED_FUNCTION_27_3();
  v15(v14);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v16 = OUTLINED_FUNCTION_59_1();
  return v17(v16);
}

uint64_t sub_1C64C36D8()
{
  OUTLINED_FUNCTION_49_1();
  uint64_t v0 = OUTLINED_FUNCTION_27_3();
  v1(v0);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_63_1();
  return v2();
}

uint64_t sub_1C64C3758(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[21] = a6;
  v7[22] = a7;
  v7[19] = a4;
  v7[20] = a5;
  v7[17] = a2;
  v7[18] = a3;
  v7[16] = a1;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F0C78);
  v7[23] = v8;
  v7[24] = *(void *)(v8 - 8);
  v7[25] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFBEF8);
  v7[26] = swift_task_alloc();
  v7[27] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C64C3868, 0, 0);
}

#error "1C64C38A4: call analysis failed (funcsize=111)"

uint64_t sub_1C64C3A2C()
{
  OUTLINED_FUNCTION_6_0();
  OUTLINED_FUNCTION_0_0();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_3_4();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_3_1();
  *uint64_t v6 = v5;
  swift_task_dealloc();
  if (v0) {
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_24_2();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

void sub_1C64C3B0C()
{
  OUTLINED_FUNCTION_26_4();
  uint64_t v3 = *(void *)(v1 + 112);
  if (!v3)
  {
    uint64_t v14 = OUTLINED_FUNCTION_27_3();
    v15(v14);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_59_1();
    OUTLINED_FUNCTION_45_1();
    __asm { BRAA            X2, X16 }
  }
  OUTLINED_FUNCTION_79_0();
  if (v4)
  {
    __break(1u);
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v6 = *(void *)(v1 + 224);
  if (!isUniquelyReferenced_nonNull_native || v2 > *(void *)(v6 + 24) >> 1)
  {
    OUTLINED_FUNCTION_78_0();
    sub_1C64AE16C();
    uint64_t v6 = v7;
  }
  if (!*(void *)(v3 + 16))
  {
    if (!v0) {
      goto LABEL_20;
    }
    goto LABEL_24;
  }
  OUTLINED_FUNCTION_54_1();
  if (v9 != v4)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v10 = (void *)(v6 + v8 + 32);
  if (v3 + 32 < (unint64_t)v10 + v0 && (unint64_t)v10 < v3 + 32 + v0) {
    goto LABEL_27;
  }
  memcpy(v10, (const void *)(v3 + 32), v0);
  if (v0)
  {
    uint64_t v12 = *(void *)(v6 + 16);
    BOOL v4 = __OFADD__(v12, v0);
    size_t v13 = v12 + v0;
    if (!v4)
    {
      *(void *)(v6 + 16) = v13;
      goto LABEL_20;
    }
LABEL_26:
    __break(1u);
LABEL_27:
    OUTLINED_FUNCTION_39_1();
    OUTLINED_FUNCTION_47_1();
    OUTLINED_FUNCTION_45_1();
    return;
  }
LABEL_20:
  swift_bridgeObjectRelease();
  *(void *)(v1 + 224) = v6;
  uint64_t v18 = swift_task_alloc();
  uint64_t v19 = (void *)OUTLINED_FUNCTION_28_1(v18);
  *uint64_t v19 = v20;
  v19[1] = sub_1C64C3A2C;
  OUTLINED_FUNCTION_21_3();
  OUTLINED_FUNCTION_45_1();
  MEMORY[0x1F4187E48]();
}

uint64_t sub_1C64C3CE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[22] = a6;
  v7[23] = a7;
  v7[20] = a4;
  v7[21] = a5;
  v7[18] = a2;
  v7[19] = a3;
  v7[17] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFBEF8);
  v7[24] = swift_task_alloc();
  v7[25] = swift_task_alloc();
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF8F40);
  v7[26] = v8;
  v7[27] = *(void *)(v8 - 8);
  v7[28] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C64C3DF4, 0, 0);
}

#error "1C64C3E88: call analysis failed (funcsize=137)"

uint64_t sub_1C64C4020()
{
  OUTLINED_FUNCTION_6_0();
  OUTLINED_FUNCTION_0_0();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_3_4();
  *BOOL v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_3_1();
  *uint64_t v6 = v5;
  swift_task_dealloc();
  if (v0) {
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_24_2();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t sub_1C64C4100()
{
  OUTLINED_FUNCTION_49_1();
  if (v0[15])
  {
    sub_1C64A0348();
    uint64_t v1 = swift_task_alloc();
    uint64_t v2 = (void *)OUTLINED_FUNCTION_28_1(v1);
    *uint64_t v2 = v3;
    v2[1] = sub_1C64C4020;
    OUTLINED_FUNCTION_24_2();
    return MEMORY[0x1F4187E48]();
  }
  else
  {
    (*(void (**)(void, void))(v0[27] + 8))(v0[28], v0[26]);
    uint64_t v4 = v0[14];
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = (uint64_t (*)(uint64_t))v0[1];
    return v5(v4);
  }
}

uint64_t sub_1C64C4234()
{
  OUTLINED_FUNCTION_49_1();
  (*(void (**)(void, void))(v0[27] + 8))(v0[28], v0[26]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_63_1();
  return v1();
}

uint64_t sub_1C64C42C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[14] = a7;
  v8[15] = a8;
  v8[12] = a5;
  v8[13] = a6;
  v8[10] = a3;
  v8[11] = a4;
  return MEMORY[0x1F4188298](sub_1C64C42F0, 0, 0);
}

uint64_t sub_1C64C42F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  OUTLINED_FUNCTION_51_0();
  OUTLINED_FUNCTION_26_4();
  if (*(void *)(v12 + 88))
  {
    OUTLINED_FUNCTION_20_3();
    uint64_t v13 = OUTLINED_FUNCTION_72_0();
    OUTLINED_FUNCTION_14_1(v13);
    uint64_t v14 = (void *)*(unsigned int *)(MEMORY[0x1E4FA51B8] + 4);
    swift_retain();
    uint64_t v15 = swift_task_alloc();
    OUTLINED_FUNCTION_99(v15);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF7ED0);
    OUTLINED_FUNCTION_57_1();
    *uint64_t v14 = v16;
    v14[1] = sub_1C64C4464;
    OUTLINED_FUNCTION_37_0();
    OUTLINED_FUNCTION_50_1();
    return MEMORY[0x1F415AC08](v17, v18, v19, v20, v21, v22, v23, v24, a9, a10, a11, a12);
  }
  else
  {
    uint64_t v37 = *(void *)(v12 + 104) + **(int **)(v12 + 104);
    uint64_t v25 = swift_task_alloc();
    unint64_t v26 = (void *)OUTLINED_FUNCTION_97(v25);
    *unint64_t v26 = v27;
    v26[1] = sub_1C64C7EA8;
    OUTLINED_FUNCTION_36();
    OUTLINED_FUNCTION_76_0();
    return v29(v28, v29, v30, v31, v32, v33, v34, v35, a9, v37, a11, a12);
  }
}

uint64_t sub_1C64C4464()
{
  OUTLINED_FUNCTION_6_0();
  OUTLINED_FUNCTION_0_0();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_3_4();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_3_1();
  *uint64_t v6 = v5;
  *(void *)(v3 + 144) = v0;
  swift_task_dealloc();
  if (!v0) {
    swift_release();
  }
  OUTLINED_FUNCTION_24_2();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t sub_1C64C4548(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[14] = a7;
  v8[15] = a8;
  v8[12] = a5;
  v8[13] = a6;
  v8[10] = a3;
  v8[11] = a4;
  return MEMORY[0x1F4188298](sub_1C64C4570, 0, 0);
}

uint64_t sub_1C64C4570(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  OUTLINED_FUNCTION_51_0();
  OUTLINED_FUNCTION_26_4();
  if (*(void *)(v12 + 88))
  {
    OUTLINED_FUNCTION_20_3();
    uint64_t v13 = OUTLINED_FUNCTION_72_0();
    OUTLINED_FUNCTION_14_1(v13);
    uint64_t v14 = (void *)*(unsigned int *)(MEMORY[0x1E4FA51B8] + 4);
    swift_retain();
    uint64_t v15 = swift_task_alloc();
    OUTLINED_FUNCTION_99(v15);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF8F18);
    OUTLINED_FUNCTION_57_1();
    *uint64_t v14 = v16;
    v14[1] = sub_1C64C4464;
    OUTLINED_FUNCTION_37_0();
    OUTLINED_FUNCTION_50_1();
    return MEMORY[0x1F415AC08](v17, v18, v19, v20, v21, v22, v23, v24, a9, a10, a11, a12);
  }
  else
  {
    uint64_t v37 = *(void *)(v12 + 104) + **(int **)(v12 + 104);
    uint64_t v25 = swift_task_alloc();
    unint64_t v26 = (void *)OUTLINED_FUNCTION_97(v25);
    *unint64_t v26 = v27;
    v26[1] = sub_1C64C7EA8;
    OUTLINED_FUNCTION_36();
    OUTLINED_FUNCTION_76_0();
    return v29(v28, v29, v30, v31, v32, v33, v34, v35, a9, v37, a11, a12);
  }
}

uint64_t sub_1C64C46E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[14] = a7;
  v8[15] = a8;
  v8[12] = a5;
  v8[13] = a6;
  v8[10] = a3;
  v8[11] = a4;
  return MEMORY[0x1F4188298](sub_1C64C470C, 0, 0);
}

uint64_t sub_1C64C470C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  OUTLINED_FUNCTION_51_0();
  OUTLINED_FUNCTION_26_4();
  if (*(void *)(v12 + 88))
  {
    OUTLINED_FUNCTION_20_3();
    uint64_t v13 = OUTLINED_FUNCTION_72_0();
    OUTLINED_FUNCTION_14_1(v13);
    uint64_t v14 = (void *)*(unsigned int *)(MEMORY[0x1E4FA51B8] + 4);
    swift_retain();
    uint64_t v15 = swift_task_alloc();
    OUTLINED_FUNCTION_99(v15);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F0C58);
    OUTLINED_FUNCTION_57_1();
    *uint64_t v14 = v16;
    v14[1] = sub_1C64C4464;
    OUTLINED_FUNCTION_37_0();
    OUTLINED_FUNCTION_50_1();
    return MEMORY[0x1F415AC08](v17, v18, v19, v20, v21, v22, v23, v24, a9, a10, a11, a12);
  }
  else
  {
    uint64_t v37 = *(void *)(v12 + 104) + **(int **)(v12 + 104);
    uint64_t v25 = swift_task_alloc();
    unint64_t v26 = (void *)OUTLINED_FUNCTION_97(v25);
    *unint64_t v26 = v27;
    v26[1] = sub_1C64C7EA8;
    OUTLINED_FUNCTION_36();
    OUTLINED_FUNCTION_76_0();
    return v29(v28, v29, v30, v31, v32, v33, v34, v35, a9, v37, a11, a12);
  }
}

uint64_t sub_1C64C4880(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[14] = a7;
  v8[15] = a8;
  v8[12] = a5;
  v8[13] = a6;
  v8[10] = a3;
  v8[11] = a4;
  return MEMORY[0x1F4188298](sub_1C64C48A8, 0, 0);
}

uint64_t sub_1C64C48A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  OUTLINED_FUNCTION_51_0();
  OUTLINED_FUNCTION_26_4();
  if (*(void *)(v12 + 88))
  {
    OUTLINED_FUNCTION_20_3();
    uint64_t v13 = OUTLINED_FUNCTION_72_0();
    OUTLINED_FUNCTION_14_1(v13);
    uint64_t v14 = (void *)*(unsigned int *)(MEMORY[0x1E4FA51B8] + 4);
    swift_retain();
    uint64_t v15 = swift_task_alloc();
    OUTLINED_FUNCTION_99(v15);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF8F20);
    OUTLINED_FUNCTION_57_1();
    *uint64_t v14 = v16;
    v14[1] = sub_1C64C4A1C;
    OUTLINED_FUNCTION_37_0();
    OUTLINED_FUNCTION_50_1();
    return MEMORY[0x1F415AC08](v17, v18, v19, v20, v21, v22, v23, v24, a9, a10, a11, a12);
  }
  else
  {
    uint64_t v37 = *(void *)(v12 + 104) + **(int **)(v12 + 104);
    uint64_t v25 = swift_task_alloc();
    unint64_t v26 = (void *)OUTLINED_FUNCTION_97(v25);
    *unint64_t v26 = v27;
    v26[1] = sub_1C64C4B00;
    OUTLINED_FUNCTION_36();
    OUTLINED_FUNCTION_76_0();
    return v29(v28, v29, v30, v31, v32, v33, v34, v35, a9, v37, a11, a12);
  }
}

uint64_t sub_1C64C4A1C()
{
  OUTLINED_FUNCTION_6_0();
  OUTLINED_FUNCTION_0_0();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_3_4();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_3_1();
  *uint64_t v6 = v5;
  *(void *)(v3 + 144) = v0;
  swift_task_dealloc();
  if (!v0) {
    swift_release();
  }
  OUTLINED_FUNCTION_24_2();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t sub_1C64C4B00()
{
  OUTLINED_FUNCTION_6_0();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_0_0();
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_3_1();
  *uint64_t v5 = v4;
  uint64_t v6 = swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(uint64_t))(v4 + 8);
  if (!v0) {
    uint64_t v6 = v3;
  }
  return v7(v6);
}

uint64_t sub_1C64C4BD0()
{
  OUTLINED_FUNCTION_6_0();
  sub_1C64C7B90(v0[10], v0[11]);
  uint64_t v1 = v0[7];
  uint64_t v2 = (uint64_t (*)(uint64_t))v0[1];
  return v2(v1);
}

uint64_t sub_1C64C4C38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18, uint64_t a19, uint64_t a20)
{
  OUTLINED_FUNCTION_34_1();
  a19 = v21;
  a20 = v22;
  OUTLINED_FUNCTION_26_4();
  a18 = v20;
  swift_release();
  if (qword_1EBBFC428 != -1) {
    swift_once();
  }
  uint64_t v23 = (void *)v20[18];
  uint64_t v24 = sub_1C65763A0();
  __swift_project_value_buffer(v24, (uint64_t)qword_1EBBFC278);
  id v25 = v23;
  id v26 = v23;
  uint64_t v27 = sub_1C6576380();
  os_log_type_t v28 = sub_1C6576A60();
  BOOL v29 = os_log_type_enabled(v27, v28);
  uint64_t v30 = (void *)v20[18];
  if (v29)
  {
    uint64_t v31 = (uint8_t *)swift_slowAlloc();
    uint64_t v32 = swift_slowAlloc();
    a9 = v32;
    *(_DWORD *)uint64_t v31 = 136315138;
    v20[8] = v30;
    id v33 = v30;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFBF00);
    uint64_t v34 = sub_1C65765A0();
    v20[9] = sub_1C64BCF18(v34, v35, &a9);
    sub_1C6576B40();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1C6494000, v27, v28, "Timeout occurred. %s", v31, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C87A0050](v32, -1, -1);
    MEMORY[0x1C87A0050](v31, -1, -1);
  }
  else
  {
  }
  uint64_t v36 = (void *)v20[18];
  uint64_t v37 = v20[15];
  uint64_t v38 = (void (*)(uint64_t))v20[11];
  uint64_t v39 = v20[10];
  swift_retain();
  v38(v37);
  sub_1C64C7B90(v39, (uint64_t)v38);

  sub_1C64C7B90(v39, (uint64_t)v38);
  OUTLINED_FUNCTION_5_1();
  OUTLINED_FUNCTION_32_3();
  return v42(v40, v41, v42, v43, v44, v45, v46, v47, a9, a10, a11, a12);
}

uint64_t sub_1C64C4E8C(int *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (uint64_t (*)(uint64_t))((char *)a1 + *a1);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v5;
  *uint64_t v5 = v3;
  v5[1] = sub_1C64C7EB8;
  return v7(a3);
}

uint64_t sub_1C64C4F68(int *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (uint64_t (*)(uint64_t))((char *)a1 + *a1);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v5;
  *uint64_t v5 = v3;
  v5[1] = sub_1C64C5044;
  return v7(a3);
}

uint64_t sub_1C64C5044()
{
  OUTLINED_FUNCTION_6_0();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_0_0();
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_3_1();
  *uint64_t v5 = v4;
  uint64_t v6 = swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(uint64_t))(v4 + 8);
  if (!v0) {
    uint64_t v6 = v3;
  }
  return v7(v6);
}

uint64_t sub_1C64C5114()
{
  swift_release();
  sub_1C64BA600(*(void **)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(unsigned char *)(v0 + 48));

  return MEMORY[0x1F4186498](v0, 49, 7);
}

uint64_t sub_1C64C515C()
{
  OUTLINED_FUNCTION_7_1();
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = *(void *)(v0 + 40);
  char v3 = *(unsigned char *)(v0 + 48);
  uint64_t v4 = swift_task_alloc();
  uint64_t v5 = (void *)OUTLINED_FUNCTION_25_3(v4);
  *uint64_t v5 = v6;
  v5[1] = sub_1C64C520C;
  uint64_t v7 = OUTLINED_FUNCTION_88_0();
  return sub_1C64BFC10(v7, v8, v9, v1, v2, v3);
}

uint64_t sub_1C64C520C()
{
  OUTLINED_FUNCTION_6_0();
  OUTLINED_FUNCTION_0_0();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_3_1();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_63_1();
  return v3();
}

unint64_t sub_1C64C52CC()
{
  unint64_t result = qword_1EBBFBF10;
  if (!qword_1EBBFBF10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBBFBF10);
  }
  return result;
}

unint64_t sub_1C64C5318()
{
  unint64_t result = qword_1EA3F0B80;
  if (!qword_1EA3F0B80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F0B80);
  }
  return result;
}

unint64_t sub_1C64C5364()
{
  unint64_t result = qword_1EBBFBF78;
  if (!qword_1EBBFBF78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBBFBF78);
  }
  return result;
}

unint64_t sub_1C64C53B0()
{
  unint64_t result = qword_1EA3F0B88;
  if (!qword_1EA3F0B88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F0B88);
  }
  return result;
}

unint64_t sub_1C64C53FC()
{
  unint64_t result = qword_1EA3F0B90;
  if (!qword_1EA3F0B90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F0B90);
  }
  return result;
}

unint64_t sub_1C64C5448()
{
  unint64_t result = qword_1EA3F0B98;
  if (!qword_1EA3F0B98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F0B98);
  }
  return result;
}

unint64_t sub_1C64C5494()
{
  unint64_t result = qword_1EA3F0BA0;
  if (!qword_1EA3F0BA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F0BA0);
  }
  return result;
}

unint64_t sub_1C64C54E0()
{
  unint64_t result = qword_1EA3F0BA8;
  if (!qword_1EA3F0BA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F0BA8);
  }
  return result;
}

unint64_t sub_1C64C552C()
{
  unint64_t result = qword_1EA3F0BB0;
  if (!qword_1EA3F0BB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F0BB0);
  }
  return result;
}

unint64_t sub_1C64C5578()
{
  unint64_t result = qword_1EA3F0BB8;
  if (!qword_1EA3F0BB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F0BB8);
  }
  return result;
}

unint64_t sub_1C64C55C4()
{
  unint64_t result = qword_1EA3F0BC0;
  if (!qword_1EA3F0BC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F0BC0);
  }
  return result;
}

unint64_t sub_1C64C5610()
{
  unint64_t result = qword_1EA3F0BC8;
  if (!qword_1EA3F0BC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F0BC8);
  }
  return result;
}

unint64_t sub_1C64C565C()
{
  unint64_t result = qword_1EA3F0BD0;
  if (!qword_1EA3F0BD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F0BD0);
  }
  return result;
}

unint64_t sub_1C64C56A8()
{
  unint64_t result = qword_1EA3F0BD8;
  if (!qword_1EA3F0BD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F0BD8);
  }
  return result;
}

unint64_t sub_1C64C56F8()
{
  unint64_t result = qword_1EBBF7EC8;
  if (!qword_1EBBF7EC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBBF7EC8);
  }
  return result;
}

uint64_t sub_1C64C5744()
{
  return sub_1C649E384(&qword_1EA3F0BE0, &qword_1EA3F0BE8);
}

unint64_t sub_1C64C5770()
{
  unint64_t result = qword_1EA3F0BF0;
  if (!qword_1EA3F0BF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F0BF0);
  }
  return result;
}

uint64_t sub_1C64C57BC()
{
  return sub_1C649E384(&qword_1EA3F0BF8, &qword_1EA3F0C00);
}

unint64_t sub_1C64C57E8()
{
  unint64_t result = qword_1EA3F0C08;
  if (!qword_1EA3F0C08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F0C08);
  }
  return result;
}

uint64_t sub_1C64C5834()
{
  return sub_1C649E384(&qword_1EA3F0C10, &qword_1EA3F0C18);
}

uint64_t dispatch thunk of ChannelGenerator.channel.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of ChannelGenerator.generateCandidateSuggestions(interaction:environment:factory:)()
{
  OUTLINED_FUNCTION_46_1();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  uint64_t v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 24) + **(int **)(v0 + 24));
  uint64_t v10 = swift_task_alloc();
  uint64_t v11 = (void *)OUTLINED_FUNCTION_25_3(v10);
  *uint64_t v11 = v12;
  v11[1] = sub_1C64A5374;
  return v14(v9, v7, v5, v3, v1);
}

uint64_t method lookup function for ChannelCandidateSuggestionFactory(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ChannelCandidateSuggestionFactory);
}

uint64_t dispatch thunk of ChannelCandidateSuggestionFactory.create(identifier:params:channelOverride:objective:confidenceScore:deliveryVehicle:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of ChannelCandidateSuggestionFactory.createAsync(identifier:params:objective:confidenceScore:deliveryVehicle:)()
{
  OUTLINED_FUNCTION_46_1();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  unint64_t v8 = v7;
  uint64_t v10 = v9;
  uint64_t v16 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(*(void *)(*(void *)v0 + 128)
                                                                           + **(int **)(*(void *)v0 + 128));
  uint64_t v11 = swift_task_alloc();
  uint64_t v12 = (void *)OUTLINED_FUNCTION_25_3(v11);
  *uint64_t v12 = v13;
  v12[1] = sub_1C64A5630;
  v14.n128_u64[0] = v8;
  return v16(v10, v6, v4, v2, v14);
}

uint64_t dispatch thunk of ChannelCandidateSuggestionFactory.create(identifier:params:channelOverride:objective:confidenceScore:deliveryVehicle:addAdditionalContextProperties:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, double a8)
{
  uint64_t v22 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, __n128))(*(void *)(*(void *)v8 + 136) + **(int **)(*(void *)v8 + 136));
  uint64_t v17 = swift_task_alloc();
  uint64_t v18 = (void *)OUTLINED_FUNCTION_25_3(v17);
  *uint64_t v18 = v19;
  v18[1] = sub_1C64A5630;
  v20.n128_f64[0] = a8;
  return v22(a1, a2, a3, a4, a5, a6, a7, v20);
}

uint64_t dispatch thunk of ChannelCandidateSuggestionFactory.getPooledSuggestionIdentifier(identifier:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t getEnumTagSinglePayload for Channel(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    unsigned int v5 = -1;
    return v5 + 1;
  }
  if (a2 >= 0x1E)
  {
    if (a2 + 226 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 226) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    unsigned int v5 = (*a1 | (v4 << 8)) - 227;
    return v5 + 1;
  }
LABEL_17:
  unsigned int v5 = ((*a1 >> 1) & 0x1C | (*a1 >> 6)) ^ 0x1F;
  if (v5 >= 0x1D) {
    unsigned int v5 = -1;
  }
  return v5 + 1;
}

unsigned char *storeEnumTagSinglePayload for Channel(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 226 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 226) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0x1E) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0x1D)
  {
    unsigned int v6 = ((a2 - 30) >> 8) + 1;
    *unint64_t result = a2 - 30;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C64C5DD8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = 8 * (((-a2 >> 2) & 7) - 8 * a2);
        break;
    }
  }
  return result;
}

uint64_t sub_1C64C5E00(unsigned char *a1)
{
  int v1 = (char)*a1;
  if (v1 >= 0) {
    return *a1 >> 6;
  }
  else {
    return (v1 & 7u) + 2;
  }
}

unsigned char *sub_1C64C5E1C(unsigned char *result)
{
  *result &= 0x3Fu;
  return result;
}

unsigned char *sub_1C64C5E2C(unsigned char *result, unsigned int a2)
{
  if (a2 < 2) {
    char v2 = *result & 7 | ((_BYTE)a2 << 6);
  }
  else {
    char v2 = (a2 + 6) & 7 | 0x80;
  }
  *unint64_t result = v2;
  return result;
}

void type metadata accessor for Channel()
{
}

unsigned char *storeEnumTagSinglePayload for HabitualClientModel(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C64C5F30);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

void type metadata accessor for HabitualClientModel()
{
}

unsigned char *storeEnumTagSinglePayload for SignalChannel(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C64C6030);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

void type metadata accessor for SignalChannel()
{
}

unsigned char *storeEnumTagSinglePayload for Channel.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *unint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C64C6130);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Channel.CodingKeys()
{
  return &type metadata for Channel.CodingKeys;
}

ValueMetadata *type metadata accessor for Channel.RelatedQuestionsCodingKeys()
{
  return &type metadata for Channel.RelatedQuestionsCodingKeys;
}

ValueMetadata *type metadata accessor for Channel.AlternativesCodingKeys()
{
  return &type metadata for Channel.AlternativesCodingKeys;
}

ValueMetadata *type metadata accessor for Channel.NextTurnCodingKeys()
{
  return &type metadata for Channel.NextTurnCodingKeys;
}

ValueMetadata *type metadata accessor for Channel.HabitualRequestsCodingKeys()
{
  return &type metadata for Channel.HabitualRequestsCodingKeys;
}

ValueMetadata *type metadata accessor for Channel.ContextualCodingKeys()
{
  return &type metadata for Channel.ContextualCodingKeys;
}

ValueMetadata *type metadata accessor for Channel.CurrentAppViewCodingKeys()
{
  return &type metadata for Channel.CurrentAppViewCodingKeys;
}

unsigned char *_s18SiriSuggestionsKit7ChannelO26HabitualRequestsCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C64C6268);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for Channel.SignalCodingKeys()
{
  return &type metadata for Channel.SignalCodingKeys;
}

ValueMetadata *type metadata accessor for Channel.InAppMiniTipsCodingKeys()
{
  return &type metadata for Channel.InAppMiniTipsCodingKeys;
}

ValueMetadata *type metadata accessor for Channel.EducationalCodingKeys()
{
  return &type metadata for Channel.EducationalCodingKeys;
}

unint64_t sub_1C64C62C4()
{
  unint64_t result = qword_1EA3F0C38;
  if (!qword_1EA3F0C38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F0C38);
  }
  return result;
}

unint64_t sub_1C64C6314()
{
  unint64_t result = qword_1EA3F0C40;
  if (!qword_1EA3F0C40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F0C40);
  }
  return result;
}

unint64_t sub_1C64C6364()
{
  unint64_t result = qword_1EA3F0C48;
  if (!qword_1EA3F0C48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F0C48);
  }
  return result;
}

unint64_t sub_1C64C63B4()
{
  unint64_t result = qword_1EBBFBFB8;
  if (!qword_1EBBFBFB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBBFBFB8);
  }
  return result;
}

unint64_t sub_1C64C6404()
{
  unint64_t result = qword_1EBBFBFB0;
  if (!qword_1EBBFBFB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBBFBFB0);
  }
  return result;
}

unint64_t sub_1C64C6454()
{
  unint64_t result = qword_1EBBFBF70;
  if (!qword_1EBBFBF70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBBFBF70);
  }
  return result;
}

unint64_t sub_1C64C64A4()
{
  unint64_t result = qword_1EBBFBF68;
  if (!qword_1EBBFBF68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBBFBF68);
  }
  return result;
}

unint64_t sub_1C64C64F4()
{
  unint64_t result = qword_1EBBFBF40;
  if (!qword_1EBBFBF40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBBFBF40);
  }
  return result;
}

unint64_t sub_1C64C6544()
{
  unint64_t result = qword_1EBBFBF38;
  if (!qword_1EBBFBF38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBBFBF38);
  }
  return result;
}

unint64_t sub_1C64C6594()
{
  unint64_t result = qword_1EBBFBFA8;
  if (!qword_1EBBFBFA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBBFBFA8);
  }
  return result;
}

unint64_t sub_1C64C65E4()
{
  unint64_t result = qword_1EBBFBFA0;
  if (!qword_1EBBFBFA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBBFBFA0);
  }
  return result;
}

unint64_t sub_1C64C6634()
{
  unint64_t result = qword_1EBBFBF50;
  if (!qword_1EBBFBF50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBBFBF50);
  }
  return result;
}

unint64_t sub_1C64C6684()
{
  unint64_t result = qword_1EBBFBF48;
  if (!qword_1EBBFBF48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBBFBF48);
  }
  return result;
}

unint64_t sub_1C64C66D4()
{
  unint64_t result = qword_1EBBFBF98;
  if (!qword_1EBBFBF98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBBFBF98);
  }
  return result;
}

unint64_t sub_1C64C6724()
{
  unint64_t result = qword_1EBBFBF90;
  if (!qword_1EBBFBF90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBBFBF90);
  }
  return result;
}

unint64_t sub_1C64C6774()
{
  unint64_t result = qword_1EBBFBF30;
  if (!qword_1EBBFBF30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBBFBF30);
  }
  return result;
}

unint64_t sub_1C64C67C4()
{
  unint64_t result = qword_1EBBFBF28;
  if (!qword_1EBBFBF28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBBFBF28);
  }
  return result;
}

unint64_t sub_1C64C6814()
{
  unint64_t result = qword_1EBBFBF88;
  if (!qword_1EBBFBF88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBBFBF88);
  }
  return result;
}

unint64_t sub_1C64C6864()
{
  unint64_t result = qword_1EBBFBF80;
  if (!qword_1EBBFBF80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBBFBF80);
  }
  return result;
}

unint64_t sub_1C64C68B4()
{
  unint64_t result = qword_1EBBFBF60;
  if (!qword_1EBBFBF60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBBFBF60);
  }
  return result;
}

unint64_t sub_1C64C6904()
{
  unint64_t result = qword_1EBBFBF58;
  if (!qword_1EBBFBF58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBBFBF58);
  }
  return result;
}

unint64_t sub_1C64C6954()
{
  unint64_t result = qword_1EBBFBF20;
  if (!qword_1EBBFBF20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBBFBF20);
  }
  return result;
}

unint64_t sub_1C64C69A4()
{
  unint64_t result = qword_1EBBFBF18;
  if (!qword_1EBBFBF18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBBFBF18);
  }
  return result;
}

uint64_t sub_1C64C69F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 16) = a1;
  uint64_t v16 = (void *)swift_task_alloc();
  *(void *)(v8 + 24) = v16;
  *uint64_t v16 = v8;
  v16[1] = sub_1C64C7EAC;
  return sub_1C64C2B64(a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_1C64C6AD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 16) = a1;
  uint64_t v16 = (void *)swift_task_alloc();
  *(void *)(v8 + 24) = v16;
  *uint64_t v16 = v8;
  v16[1] = sub_1C64C7EAC;
  return sub_1C64C42C8(a2, a3, a4, a5, a6, a7, a8, v19);
}

uint64_t sub_1C64C6BBC(uint64_t a1, int *a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a1;
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 24) = v8;
  *uint64_t v8 = v4;
  v8[1] = sub_1C64C7EAC;
  return sub_1C64C4E8C(a2, a3, a4);
}

uint64_t sub_1C64C6C6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 16) = a1;
  uint64_t v16 = (void *)swift_task_alloc();
  *(void *)(v8 + 24) = v16;
  *uint64_t v16 = v8;
  v16[1] = sub_1C64C7EAC;
  return sub_1C64C30FC(a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_1C64C6D4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 16) = a1;
  uint64_t v16 = (void *)swift_task_alloc();
  *(void *)(v8 + 24) = v16;
  *uint64_t v16 = v8;
  v16[1] = sub_1C64C7EAC;
  return sub_1C64C4548(a2, a3, a4, a5, a6, a7, a8, v19);
}

uint64_t sub_1C64C6E38(uint64_t a1, int *a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a1;
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 24) = v8;
  *uint64_t v8 = v4;
  v8[1] = sub_1C64C7EAC;
  return sub_1C64C4E8C(a2, a3, a4);
}

uint64_t sub_1C64C6EE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 16) = a1;
  uint64_t v16 = (void *)swift_task_alloc();
  *(void *)(v8 + 24) = v16;
  *uint64_t v16 = v8;
  v16[1] = sub_1C64C7EAC;
  return sub_1C64C3758(a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_1C64C6FC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  OUTLINED_FUNCTION_34_1();
  OUTLINED_FUNCTION_26_4();
  OUTLINED_FUNCTION_30_3();
  uint64_t v12 = swift_task_alloc();
  uint64_t v13 = (void *)OUTLINED_FUNCTION_15_2(v12);
  *uint64_t v13 = v14;
  v13[1] = sub_1C64C7EB4;
  OUTLINED_FUNCTION_7_4();
  OUTLINED_FUNCTION_32_3();
  return v23(v15, v16, v17, v18, v19, v20, v21, v22, a9, a10, a11, a12);
}

uint64_t sub_1C64C705C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 16) = a1;
  uint64_t v16 = (void *)swift_task_alloc();
  *(void *)(v8 + 24) = v16;
  *uint64_t v16 = v8;
  v16[1] = sub_1C64C7EAC;
  return sub_1C64C46E4(a2, a3, a4, a5, a6, a7, a8, v19);
}

uint64_t sub_1C64C714C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  OUTLINED_FUNCTION_52_1();
  OUTLINED_FUNCTION_26_4();
  OUTLINED_FUNCTION_23_3();
  uint64_t v12 = swift_task_alloc();
  uint64_t v13 = (void *)OUTLINED_FUNCTION_15_2(v12);
  *uint64_t v13 = v14;
  v13[1] = sub_1C64C7EB4;
  OUTLINED_FUNCTION_6_2();
  OUTLINED_FUNCTION_33_3();
  return v23(v15, v16, v17, v18, v19, v20, v21, v22, a9, a10, a11, a12);
}

uint64_t sub_1C64C71E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFBEF8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C64C7248(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFBEF8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C64C72A8(uint64_t a1, int *a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a1;
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 24) = v8;
  *uint64_t v8 = v4;
  v8[1] = sub_1C64C7EAC;
  return sub_1C64C4E8C(a2, a3, a4);
}

uint64_t sub_1C64C735C()
{
  OUTLINED_FUNCTION_7_1();
  OUTLINED_FUNCTION_62_0();
  uint64_t v0 = swift_task_alloc();
  int v1 = (void *)OUTLINED_FUNCTION_15_2(v0);
  *int v1 = v2;
  v1[1] = sub_1C64C7EB4;
  uint64_t v3 = OUTLINED_FUNCTION_18_3();
  return v4(v3);
}

uint64_t sub_1C64C73F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  OUTLINED_FUNCTION_34_1();
  OUTLINED_FUNCTION_26_4();
  OUTLINED_FUNCTION_30_3();
  uint64_t v12 = swift_task_alloc();
  uint64_t v13 = (void *)OUTLINED_FUNCTION_15_2(v12);
  *uint64_t v13 = v14;
  v13[1] = sub_1C64C7EB4;
  OUTLINED_FUNCTION_7_4();
  OUTLINED_FUNCTION_32_3();
  return v23(v15, v16, v17, v18, v19, v20, v21, v22, a9, a10, a11, a12);
}

uint64_t sub_1C64C7490(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  OUTLINED_FUNCTION_52_1();
  OUTLINED_FUNCTION_26_4();
  OUTLINED_FUNCTION_23_3();
  uint64_t v12 = swift_task_alloc();
  uint64_t v13 = (void *)OUTLINED_FUNCTION_15_2(v12);
  *uint64_t v13 = v14;
  v13[1] = sub_1C64C7EB4;
  OUTLINED_FUNCTION_6_2();
  OUTLINED_FUNCTION_33_3();
  return v23(v15, v16, v17, v18, v19, v20, v21, v22, a9, a10, a11, a12);
}

uint64_t sub_1C64C7528()
{
  OUTLINED_FUNCTION_7_1();
  OUTLINED_FUNCTION_62_0();
  uint64_t v0 = swift_task_alloc();
  int v1 = (void *)OUTLINED_FUNCTION_15_2(v0);
  *int v1 = v2;
  v1[1] = sub_1C64C7EB4;
  uint64_t v3 = OUTLINED_FUNCTION_18_3();
  return v4(v3);
}

unint64_t sub_1C64C75C4()
{
  unint64_t result = qword_1EA3F0D08;
  if (!qword_1EA3F0D08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F0D08);
  }
  return result;
}

unint64_t sub_1C64C7610()
{
  unint64_t result = qword_1EA3F0D10;
  if (!qword_1EA3F0D10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F0D10);
  }
  return result;
}

uint64_t sub_1C64C765C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 16) = a1;
  uint64_t v16 = (void *)swift_task_alloc();
  *(void *)(v8 + 24) = v16;
  *uint64_t v16 = v8;
  v16[1] = sub_1C64C773C;
  return sub_1C64C3CE4(a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_1C64C773C()
{
  OUTLINED_FUNCTION_49_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_0_0();
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_3_4();
  *uint64_t v6 = v5;
  uint64_t v7 = *v1;
  OUTLINED_FUNCTION_3_1();
  *uint64_t v8 = v7;
  swift_task_dealloc();
  if (!v0) {
    **(void **)(v5 + 16) = v3;
  }
  uint64_t v9 = *(uint64_t (**)(void))(v7 + 8);
  return v9();
}

uint64_t sub_1C64C7818(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  OUTLINED_FUNCTION_34_1();
  OUTLINED_FUNCTION_26_4();
  OUTLINED_FUNCTION_30_3();
  uint64_t v12 = swift_task_alloc();
  uint64_t v13 = (void *)OUTLINED_FUNCTION_15_2(v12);
  *uint64_t v13 = v14;
  v13[1] = sub_1C64C520C;
  OUTLINED_FUNCTION_7_4();
  OUTLINED_FUNCTION_32_3();
  return v23(v15, v16, v17, v18, v19, v20, v21, v22, a9, a10, a11, a12);
}

uint64_t sub_1C64C78AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 16) = a1;
  uint64_t v16 = (void *)swift_task_alloc();
  *(void *)(v8 + 24) = v16;
  *uint64_t v16 = v8;
  v16[1] = sub_1C64C7EAC;
  return sub_1C64C4880(a2, a3, a4, a5, a6, a7, a8, v19);
}

uint64_t sub_1C64C799C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  OUTLINED_FUNCTION_52_1();
  OUTLINED_FUNCTION_26_4();
  OUTLINED_FUNCTION_23_3();
  uint64_t v12 = swift_task_alloc();
  uint64_t v13 = (void *)OUTLINED_FUNCTION_15_2(v12);
  *uint64_t v13 = v14;
  v13[1] = sub_1C64C7EB4;
  OUTLINED_FUNCTION_6_2();
  OUTLINED_FUNCTION_33_3();
  return v23(v15, v16, v17, v18, v19, v20, v21, v22, a9, a10, a11, a12);
}

uint64_t sub_1C64C7A30(uint64_t a1, uint64_t a2)
{
  if (a2) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_1C64C7A40(uint64_t a1, int *a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a1;
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 24) = v8;
  *uint64_t v8 = v4;
  v8[1] = sub_1C64C7EAC;
  return sub_1C64C4F68(a2, a3, a4);
}

uint64_t sub_1C64C7AF4()
{
  OUTLINED_FUNCTION_7_1();
  OUTLINED_FUNCTION_62_0();
  uint64_t v0 = swift_task_alloc();
  int v1 = (void *)OUTLINED_FUNCTION_15_2(v0);
  *int v1 = v2;
  v1[1] = sub_1C64C7EB4;
  uint64_t v3 = OUTLINED_FUNCTION_18_3();
  return v4(v3);
}

uint64_t sub_1C64C7B90(uint64_t a1, uint64_t a2)
{
  if (a2) {
    return swift_release();
  }
  return result;
}

uint64_t sub_1C64C7BA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  OUTLINED_FUNCTION_34_1();
  OUTLINED_FUNCTION_26_4();
  OUTLINED_FUNCTION_30_3();
  uint64_t v12 = swift_task_alloc();
  uint64_t v13 = (void *)OUTLINED_FUNCTION_15_2(v12);
  *uint64_t v13 = v14;
  v13[1] = sub_1C64C7EB4;
  OUTLINED_FUNCTION_7_4();
  OUTLINED_FUNCTION_32_3();
  return v23(v15, v16, v17, v18, v19, v20, v21, v22, a9, a10, a11, a12);
}

uint64_t objectdestroy_66Tm()
{
  swift_unknownObjectRelease();
  if (*(void *)(v0 + 40)) {
    swift_release();
  }
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 72);

  return MEMORY[0x1F4186498](v0, 112, 7);
}

uint64_t sub_1C64C7C90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  OUTLINED_FUNCTION_52_1();
  OUTLINED_FUNCTION_26_4();
  OUTLINED_FUNCTION_23_3();
  uint64_t v12 = swift_task_alloc();
  uint64_t v13 = (void *)OUTLINED_FUNCTION_15_2(v12);
  *uint64_t v13 = v14;
  v13[1] = sub_1C64C7EB4;
  OUTLINED_FUNCTION_6_2();
  OUTLINED_FUNCTION_33_3();
  return v23(v15, v16, v17, v18, v19, v20, v21, v22, a9, a10, a11, a12);
}

uint64_t objectdestroy_76Tm()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);

  return MEMORY[0x1F4186498](v0, 72, 7);
}

uint64_t sub_1C64C7D68()
{
  OUTLINED_FUNCTION_7_1();
  OUTLINED_FUNCTION_62_0();
  uint64_t v0 = swift_task_alloc();
  int v1 = (void *)OUTLINED_FUNCTION_15_2(v0);
  *int v1 = v2;
  v1[1] = sub_1C64C7EB4;
  uint64_t v3 = OUTLINED_FUNCTION_18_3();
  return v4(v3);
}

uint64_t sub_1C64C7E04(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1C64C7E60(uint64_t a1, void (*a2)(void, void, void, void, void, void))
{
  return a1;
}

uint64_t sub_1C64C7EA0(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_4_3()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_5_4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  a1[2] = 0;
  a1[3] = 0;
  a1[4] = v21;
  a1[5] = v17;
  a1[6] = v19;
  a1[7] = a17;
  a1[8] = v23;
  sub_1C64A5488(v20, (uint64_t)(a1 + 9));
  return sub_1C64C71E0(v18, v22);
}

uint64_t OUTLINED_FUNCTION_6_2()
{
  *(void *)(v2 + 16) = v1;
  return v0;
}

uint64_t OUTLINED_FUNCTION_7_4()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_9_3(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  __swift_storeEnumTagSinglePayload(*(void *)(v13 + 216), 1, 1, a11);
  return sub_1C649FA30(v14, a13);
}

uint64_t OUTLINED_FUNCTION_11_3()
{
  __swift_getEnumTagSinglePayload(v2, 1, v3);
  sub_1C64C7A30(v1, v0);
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_12_0()
{
  return sub_1C6576E80();
}

uint64_t OUTLINED_FUNCTION_14_1(uint64_t a1)
{
  *(void *)(v3 + 128) = a1;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v4;
  sub_1C64A5488(v2, a1 + 32);
  return sub_1C64C7A30(v5, v1);
}

uint64_t OUTLINED_FUNCTION_15_2(uint64_t result)
{
  *(void *)(v1 + 16) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_16_2()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_18_3()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_19_4()
{
  return sub_1C6576920();
}

uint64_t OUTLINED_FUNCTION_20_3()
{
  uint64_t v2 = *(void *)(v0 + 120);
  return sub_1C649FA30(v2, v0 + 16);
}

__n128 OUTLINED_FUNCTION_22_3(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, long long a9)
{
  *(void *)(v9 + 72) = a1;
  __n128 result = *(__n128 *)(v9 + 56);
  *(_OWORD *)(a1 + 16) = a9;
  *(void *)(a1 + 32) = v11;
  *(void *)(a1 + 40) = v10;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

void OUTLINED_FUNCTION_23_3()
{
  *(void *)(v1 + 24) = *(void *)(v0 + 16);
}

uint64_t OUTLINED_FUNCTION_25_3(uint64_t result)
{
  *(void *)(v1 + 16) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_27_3()
{
  return *(void *)(v0 + 200);
}

uint64_t OUTLINED_FUNCTION_28_1(uint64_t result)
{
  *(void *)(v1 + 232) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_29_1()
{
  return sub_1C6576F70();
}

uint64_t OUTLINED_FUNCTION_31_3@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = v3 | 0x3100;
  v2[11] = 1;
  v2[12] = a1;
  v2[13] = v1;
  return result;
}

uint64_t OUTLINED_FUNCTION_35_2()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_36()
{
  return *(void *)(v0 + 120);
}

double OUTLINED_FUNCTION_37_0()
{
  return v0;
}

__n128 OUTLINED_FUNCTION_38_1()
{
  return *(__n128 *)(v0 + 24);
}

uint64_t OUTLINED_FUNCTION_42_1()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_43_1()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_47_1()
{
  return sub_1C6576E50();
}

void OUTLINED_FUNCTION_55_2(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  *a10 = 0;
  a10[1] = 0;
  *(void *)(v10 + 72) = v11;
  *(void *)(v10 + 80) = v12;
}

uint64_t OUTLINED_FUNCTION_58_1()
{
  return swift_unknownObjectRelease();
}

uint64_t OUTLINED_FUNCTION_59_1()
{
  return *(void *)(v0 + 224);
}

uint64_t OUTLINED_FUNCTION_60_1()
{
  return sub_1C6576940();
}

uint64_t OUTLINED_FUNCTION_61_0(uint64_t result)
{
  *(void *)(v1 + 80) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_63_1()
{
  return v0 + 8;
}

uint64_t OUTLINED_FUNCTION_67_1()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_68_1()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_69_1()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_70_1()
{
  return v0;
}

BOOL OUTLINED_FUNCTION_71_1@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

uint64_t OUTLINED_FUNCTION_72_0()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_79_0()
{
  return *(void *)(v0 + 224);
}

uint64_t OUTLINED_FUNCTION_81_0()
{
  return swift_task_create();
}

uint64_t OUTLINED_FUNCTION_83_0()
{
  return swift_getObjectType();
}

uint64_t OUTLINED_FUNCTION_85_0()
{
  return 0x6F69746163756465;
}

uint64_t OUTLINED_FUNCTION_86_0()
{
  return 0x6E694D7070416E69;
}

uint64_t OUTLINED_FUNCTION_87_0()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_88_0()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_90_0()
{
  return 0x41746E6572727563;
}

uint64_t OUTLINED_FUNCTION_91_0()
{
  return 0x75747865746E6F63;
}

uint64_t OUTLINED_FUNCTION_93_0()
{
  return 0x6E7275547478656ELL;
}

uint64_t OUTLINED_FUNCTION_94_0()
{
  return sub_1C65768C0();
}

uint64_t OUTLINED_FUNCTION_95()
{
  return 0x74616E7265746C61;
}

uint64_t OUTLINED_FUNCTION_97(uint64_t result)
{
  *(void *)(v1 + 152) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_98()
{
  return swift_unknownObjectRetain();
}

uint64_t OUTLINED_FUNCTION_99(uint64_t result)
{
  *(void *)(v1 + 136) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_100()
{
  return swift_task_alloc();
}

Swift::String __swiftcall DialogIdProvider.getId()()
{
  uint64_t v0 = 0;
  uint64_t v1 = (void *)0xE000000000000000;
  result._object = v1;
  result._countAndFlagsBits = v0;
  return result;
}

uint64_t DialogIdProvider.sectionIdentifier.getter()
{
  return 0;
}

uint64_t DialogIdProvider.isSpeakable.getter()
{
  return 0;
}

uint64_t DialogProperties.globals.getter()
{
  return 0;
}

void *DefaultDialogProperties.globals.getter()
{
  uint64_t v1 = *(void **)(v0 + 8);
  id v2 = v1;
  return v1;
}

uint64_t DefaultDialogProperties.init(params:globals:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t DefaultDialogProperties.getParameters()()
{
  return swift_bridgeObjectRetain();
}

uint64_t dispatch thunk of DialogService.templateDialog(propertyProvider:dialogProperties:environment:viewContext:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a6 + 8)
                                                                                     + **(int **)(a6 + 8));
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v13;
  *uint64_t v13 = v6;
  v13[1] = sub_1C64C8924;
  return v15(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_1C64C8924(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = *v2;
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 8);
  return v5(a1, a2);
}

uint64_t dispatch thunk of DialogIdProvider.templateIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of CATDialogProvider.sectionIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of CATDialogProvider.isSpeakable.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of CATTemplatingDialogProvider.templatingResultCallback.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of DialogTemplateRootProvider.getTemplateLocation()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of DialogProperties.globals.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of DialogProperties.getParameters()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

void *initializeBufferWithCopyOfBuffer for DefaultDialogProperties(void *a1, void *a2)
{
  uint64_t v3 = (void *)a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  id v4 = v3;
  return a1;
}

void destroy for DefaultDialogProperties(uint64_t a1)
{
  swift_bridgeObjectRelease();
  id v2 = *(void **)(a1 + 8);
}

void *assignWithCopy for DefaultDialogProperties(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  id v4 = (void *)a1[1];
  uint64_t v5 = (void *)a2[1];
  a1[1] = v5;
  id v6 = v5;

  return a1;
}

uint64_t assignWithTake for DefaultDialogProperties(uint64_t a1, _OWORD *a2)
{
  swift_bridgeObjectRelease();
  id v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *a2;

  return a1;
}

ValueMetadata *type metadata accessor for DefaultDialogProperties()
{
  return &type metadata for DefaultDialogProperties;
}

uint64_t sub_1C64C8BDC()
{
  return sub_1C6499638();
}

uint64_t OUTLINED_FUNCTION_0_3(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t ExperimentId.name.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

SiriSuggestionsKit::ExperimentId __swiftcall ExperimentId.init(name:)(SiriSuggestionsKit::ExperimentId name)
{
  *uint64_t v1 = name;
  return name;
}

uint64_t sub_1C64C8C54(uint64_t a1, uint64_t a2)
{
  if (a1 == 1701667182 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_1C6577090();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1C64C8CCC()
{
  return 1701667182;
}

uint64_t sub_1C64C8CE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C64C8C54(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1C64C8D0C(uint64_t a1)
{
  unint64_t v2 = sub_1C64C8E80();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C64C8D48(uint64_t a1)
{
  unint64_t v2 = sub_1C64C8E80();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t ExperimentId.encode(to:)(void *a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F0DB8);
  OUTLINED_FUNCTION_0_4();
  uint64_t v5 = v4;
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_22();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C64C8E80();
  sub_1C6577240();
  sub_1C6576FD0();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v2, v1);
}

unint64_t sub_1C64C8E80()
{
  unint64_t result = qword_1EA3F0DC0;
  if (!qword_1EA3F0DC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F0DC0);
  }
  return result;
}

uint64_t ExperimentId.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F0DC8);
  OUTLINED_FUNCTION_0_4();
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_22();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C64C8E80();
  sub_1C6577210();
  if (!v2)
  {
    uint64_t v6 = sub_1C6576EF0();
    uint64_t v8 = v7;
    uint64_t v9 = OUTLINED_FUNCTION_1_3();
    v10(v9);
    *a2 = v6;
    a2[1] = v8;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1C64C8FE0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return ExperimentId.init(from:)(a1, a2);
}

uint64_t sub_1C64C8FF8(void *a1)
{
  return ExperimentId.encode(to:)(a1);
}

void *initializeBufferWithCopyOfBuffer for ExperimentId(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for ExperimentId(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for ExperimentId(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for ExperimentId()
{
  return &type metadata for ExperimentId;
}

unsigned char *storeEnumTagSinglePayload for ExperimentId.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C64C9164);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ExperimentId.CodingKeys()
{
  return &type metadata for ExperimentId.CodingKeys;
}

unint64_t sub_1C64C91A0()
{
  unint64_t result = qword_1EA3F0DD0;
  if (!qword_1EA3F0DD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F0DD0);
  }
  return result;
}

unint64_t sub_1C64C91F0()
{
  unint64_t result = qword_1EA3F0DD8;
  if (!qword_1EA3F0DD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F0DD8);
  }
  return result;
}

unint64_t sub_1C64C9240()
{
  unint64_t result = qword_1EA3F0DE0;
  if (!qword_1EA3F0DE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F0DE0);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_1_3()
{
  return v0;
}

uint64_t static Clocks.getSystemClock()@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for SystemClock();
  uint64_t result = swift_allocObject();
  a1[3] = v2;
  a1[4] = (uint64_t)&off_1F215A1D8;
  *a1 = result;
  return result;
}

uint64_t type metadata accessor for SystemClock()
{
  return self;
}

void *static Clocks.getStaticClock(_:)@<X0>(uint64_t *a1@<X8>, double a2@<D0>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F0DE8);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1C6577AD0;
  *(double *)(v4 + 32) = a2;
  uint64_t v5 = type metadata accessor for StaticClock();
  uint64_t v6 = swift_allocObject();
  uint64_t result = sub_1C64C9728(v4);
  a1[3] = v5;
  a1[4] = (uint64_t)&off_1F215A1C8;
  *a1 = v6;
  return result;
}

uint64_t type metadata accessor for StaticClock()
{
  return self;
}

void *static Clocks.getStaticClock(timeIntervals:)@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for StaticClock();
  uint64_t v3 = swift_allocObject();
  uint64_t v4 = swift_bridgeObjectRetain();
  uint64_t result = sub_1C64C9728(v4);
  a1[3] = v2;
  a1[4] = (uint64_t)&off_1F215A1C8;
  *a1 = v3;
  return result;
}

uint64_t static Clocks.getOffsetClock(clock:offset:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  a4[3] = (uint64_t)&type metadata for OffsetClock;
  a4[4] = (uint64_t)&off_1F215A1B8;
  uint64_t v8 = swift_allocObject();
  *a4 = v8;
  sub_1C649FA30(a1, v8 + 16);
  *(void *)(v8 + 56) = a2;
  *(void *)(v8 + 64) = a3;

  return swift_retain();
}

double sub_1C64C94D8()
{
  uint64_t v0 = sub_1C6576190();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C6576180();
  sub_1C6576140();
  double v5 = v4;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v5;
}

uint64_t sub_1C64C95AC()
{
  return MEMORY[0x1F4186488](v0, 16, 7);
}

double sub_1C64C95BC()
{
  return sub_1C64C94D8();
}

double sub_1C64C95D4()
{
  (*(void (**)(void))(v0 + 40))();
  double v2 = v1;
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = *(void *)(v0 + 32);
  __swift_project_boxed_opaque_existential_1((void *)v0, v3);
  return (*(double (**)(uint64_t, uint64_t))(v4 + 8))(v3, v4) - v2;
}

void *sub_1C64C9728(uint64_t a1)
{
  v1[2] = a1;
  v1[3] = 0;
  v1[4] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28E08]), sel_init);
  return v1;
}

uint64_t sub_1C64C9760()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_release();

  return MEMORY[0x1F4186498](v0, 72, 7);
}

uint64_t dispatch thunk of Clock.getCurrentTime()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

ValueMetadata *type metadata accessor for Clocks()
{
  return &type metadata for Clocks;
}

double sub_1C64C97C4()
{
  double v1 = *(void **)(v0 + 32);
  swift_retain();
  return sub_1C64C9850(v1, v0);
}

uint64_t sub_1C64C980C@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *(void *)(result + 16);
  uint64_t v3 = *(void *)(v2 + 16);
  if (!v3)
  {
    __break(1u);
    goto LABEL_6;
  }
  uint64_t v4 = *(void *)(result + 24);
  uint64_t v5 = v4 % v3;
  if (v5 < 0)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  BOOL v6 = __OFADD__(v4, 1);
  uint64_t v7 = v4 + 1;
  if (!v6)
  {
    uint64_t v8 = *(void *)(v2 + 8 * v5 + 32);
    *(void *)(result + 24) = v7;
    *a2 = v8;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

double sub_1C64C9850(void *a1, uint64_t a2)
{
  objc_msgSend(a1, sel_lock);
  sub_1C64C980C(a2, &v6);
  objc_msgSend(a1, sel_unlock);
  swift_release();
  if (!v2) {
    return v6;
  }
  return result;
}

uint64_t sub_1C64C98DC()
{
  swift_bridgeObjectRelease();

  return v0;
}

uint64_t sub_1C64C9904()
{
  sub_1C64C98DC();

  return MEMORY[0x1F4186488](v0, 40, 7);
}

uint64_t destroy for OffsetClock(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_1(a1);

  return swift_release();
}

uint64_t initializeWithCopy for OffsetClock(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  swift_retain();
  return a1;
}

uint64_t *assignWithCopy for OffsetClock(uint64_t *a1, uint64_t *a2)
{
  __swift_assign_boxed_opaque_existential_1(a1, a2);
  uint64_t v4 = a2[6];
  a1[5] = a2[5];
  a1[6] = v4;
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy56_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for OffsetClock(uint64_t a1, uint64_t a2)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for OffsetClock(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 56))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 24);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for OffsetClock(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for OffsetClock()
{
  return &type metadata for OffsetClock;
}

double sub_1C64C9B20()
{
  return sub_1C64C97C4();
}

uint64_t sub_1C64C9B44()
{
  double v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *double v1 = v0;
  v1[1] = sub_1C64D576C;
  return DialogCallback.getText(dialog:dialogProperties:environment:)();
}

uint64_t sub_1C64C9BD0()
{
  return sub_1C64C9C50(*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8), v0, 0, 0xE000000000000000);
}

uint64_t DialogCallback.getText(dialog:dialogProperties:environment:)()
{
  return sub_1C64C9C50(*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8), v0, 0, 0xE000000000000000);
}

uint64_t sub_1C64C9C50(uint64_t (*a1)(uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return a1(a3, a4);
}

uint64_t sub_1C64C9C68()
{
  double v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *double v1 = v0;
  v1[1] = sub_1C64C9D2C;
  return DialogCallback.getText(dialog:dialogProperties:environment:viewContext:)();
}

uint64_t sub_1C64C9D2C(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_0_0();
  uint64_t v6 = *v3;
  OUTLINED_FUNCTION_3_4();
  *uint64_t v7 = v6;
  swift_task_dealloc();
  OUTLINED_FUNCTION_96_0();
  if (!v2)
  {
    uint64_t v8 = a1;
    uint64_t v9 = a2;
  }
  return v10(v8, v9);
}

uint64_t DialogCallback.getText(dialog:dialogProperties:environment:viewContext:)()
{
  OUTLINED_FUNCTION_45_2();
  OUTLINED_FUNCTION_46_1();
  OUTLINED_FUNCTION_70_2();
  uint64_t v12 = *(void *)(v1 + 8) + **(int **)(v1 + 8);
  uint64_t v13 = v1 + 8;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1C64D576C;
  OUTLINED_FUNCTION_41_2();
  OUTLINED_FUNCTION_38_2();
  return v9(v3, v4, v5, v6, v7, v8, v9, v10, v12, v13);
}

double sub_1C64C9EF8@<D0>(uint64_t a1@<X8>)
{
  return DialogCallbacksProvider.getPreambleOverrideCallback(context:deliveryVehicle:)(a1);
}

double DialogCallbacksProvider.getPreambleOverrideCallback(context:deliveryVehicle:)@<D0>(uint64_t a1@<X8>)
{
  *(void *)(a1 + 32) = 0;
  double result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

uint64_t DialogCallbacksProvider.getPreambleOverrideCallback(context:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = *a1 + OBJC_IVAR____TtC18SiriSuggestionsKit11ViewContext_deliveryVehicle;
  char v6 = *(unsigned char *)(v5 + 32);
  long long v7 = *(_OWORD *)(v5 + 16);
  v9[0] = *(_OWORD *)v5;
  v9[1] = v7;
  char v10 = v6;
  return (*(uint64_t (**)(void *, _OWORD *, uint64_t, uint64_t, uint64_t))(a3 + 32))(a1, v9, a2, a3, a5);
}

uint64_t ViewContext.suggestionId.getter()
{
  return OUTLINED_FUNCTION_36_0();
}

uint64_t ViewContext.locale.getter()
{
  return sub_1C64D0D7C((uint64_t)&OBJC_IVAR____TtC18SiriSuggestionsKit11ViewContext_locale, MEMORY[0x1E4F27A78]);
}

uint64_t ViewContext.deliveryVehicle.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1 + OBJC_IVAR____TtC18SiriSuggestionsKit11ViewContext_deliveryVehicle;
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC18SiriSuggestionsKit11ViewContext_deliveryVehicle);
  uint64_t v4 = *(void *)(v1 + OBJC_IVAR____TtC18SiriSuggestionsKit11ViewContext_deliveryVehicle + 8);
  uint64_t v5 = *(void *)(v1 + OBJC_IVAR____TtC18SiriSuggestionsKit11ViewContext_deliveryVehicle + 16);
  uint64_t v6 = *(void *)(v1 + OBJC_IVAR____TtC18SiriSuggestionsKit11ViewContext_deliveryVehicle + 24);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  char v7 = *(unsigned char *)(v2 + 32);
  *(unsigned char *)(a1 + 32) = v7;
  return sub_1C64A0570(v3, v4, v5, v6, v7);
}

uint64_t sub_1C64C9FF0()
{
  uint64_t v0 = swift_bridgeObjectRetain();
  return sub_1C64CA068(v0);
}

uint64_t sub_1C64CA01C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C64CA068(uint64_t a1)
{
  uint64_t v3 = (void *)(v1 + OBJC_IVAR____TtC18SiriSuggestionsKit11ViewContext_contextMap);
  swift_beginAccess();
  *uint64_t v3 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1C64CA0BC())()
{
  return j__swift_endAccess;
}

uint64_t ViewContext.__allocating_init()()
{
  return ViewContext.__allocating_init(suggestionId:)();
}

uint64_t ViewContext.__allocating_init(suggestionId:)()
{
  uint64_t v1 = sub_1C6576210();
  MEMORY[0x1F4188790](v1 - 8);
  OUTLINED_FUNCTION_60_2();
  sub_1C6576200();
  type metadata accessor for ViewContext(0);
  uint64_t v2 = OUTLINED_FUNCTION_81_1();
  uint64_t v3 = OUTLINED_FUNCTION_85_1();
  ViewContext.init(suggestionId:locale:deliveryVehicle:)(v3, v4, v0, v5);
  return v2;
}

uint64_t ViewContext.__allocating_init(locale:deliveryVehicle:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_1C6576210();
  OUTLINED_FUNCTION_0_2();
  uint64_t v7 = v6;
  MEMORY[0x1F4188790](v8);
  __n128 v13 = OUTLINED_FUNCTION_47_2();
  uint64_t v9 = *(void *)(a2 + 16);
  uint64_t v10 = *(void *)(a2 + 24);
  LOBYTE(a2) = *(unsigned char *)(a2 + 32);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v2, a1, v5);
  __n128 v14 = v13;
  uint64_t v15 = v9;
  uint64_t v16 = v10;
  char v17 = a2;
  type metadata accessor for ViewContext(0);
  uint64_t v11 = OUTLINED_FUNCTION_81_1();
  ViewContext.init(suggestionId:locale:deliveryVehicle:)(0, 0xE000000000000000, v2, (long long *)&v14);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v5);
  return v11;
}

uint64_t ViewContext.__allocating_init(suggestionId:locale:deliveryVehicle:)(uint64_t a1, uint64_t a2, uint64_t a3, long long *a4)
{
  uint64_t v8 = swift_allocObject();
  ViewContext.init(suggestionId:locale:deliveryVehicle:)(a1, a2, a3, a4);
  return v8;
}

uint64_t type metadata accessor for ViewContext(uint64_t a1)
{
  return sub_1C64D38E8(a1, (uint64_t *)&unk_1EBBF8D88);
}

uint64_t ViewContext.init(suggestionId:locale:deliveryVehicle:)(uint64_t a1, uint64_t a2, uint64_t a3, long long *a4)
{
  long long v13 = *a4;
  uint64_t v7 = *((void *)a4 + 2);
  uint64_t v8 = *((void *)a4 + 3);
  char v9 = *((unsigned char *)a4 + 32);
  *(void *)(v4 + OBJC_IVAR____TtC18SiriSuggestionsKit11ViewContext_contextMap) = sub_1C6576460();
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = a2;
  sub_1C6576210();
  OUTLINED_FUNCTION_13_2();
  OUTLINED_FUNCTION_95_0();
  v10();
  uint64_t v11 = v4 + OBJC_IVAR____TtC18SiriSuggestionsKit11ViewContext_deliveryVehicle;
  *(_OWORD *)uint64_t v11 = v13;
  *(void *)(v11 + 16) = v7;
  *(void *)(v11 + 24) = v8;
  *(unsigned char *)(v11 + 32) = v9;
  return v4;
}

uint64_t ViewContext.deinit()
{
  swift_bridgeObjectRelease();
  sub_1C6576210();
  OUTLINED_FUNCTION_13_2();
  OUTLINED_FUNCTION_1();
  v1();
  sub_1C64A21C4(*(void *)(v0 + OBJC_IVAR____TtC18SiriSuggestionsKit11ViewContext_deliveryVehicle), *(void *)(v0 + OBJC_IVAR____TtC18SiriSuggestionsKit11ViewContext_deliveryVehicle + 8), *(void *)(v0 + OBJC_IVAR____TtC18SiriSuggestionsKit11ViewContext_deliveryVehicle + 16), *(void *)(v0 + OBJC_IVAR____TtC18SiriSuggestionsKit11ViewContext_deliveryVehicle + 24), *(unsigned char *)(v0 + OBJC_IVAR____TtC18SiriSuggestionsKit11ViewContext_deliveryVehicle + 32));
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t ViewContext.__deallocating_deinit()
{
  ViewContext.deinit();
  OUTLINED_FUNCTION_2_4();
  uint64_t v2 = *(unsigned int *)(v1 + 48);
  uint64_t v3 = *(unsigned __int16 *)(v1 + 52);

  return MEMORY[0x1F4186488](v0, v2, v3);
}

uint64_t Assets.icon.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void *)v1;
  unint64_t v3 = *(void *)(v1 + 8);
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  *a1 = *(void *)v1;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  return OUTLINED_FUNCTION_54_2(v2, v3, v4, v5, *(_WORD *)(v1 + 32), (uint64_t)a1);
}

uint64_t sub_1C64CA534(uint64_t result, unint64_t a2, uint64_t a3, uint64_t a4, __int16 a5)
{
  if (HIBYTE(a5) != 255) {
    return sub_1C64CA548(result, a2, a3, a4, a5, SHIBYTE(a5));
  }
  return result;
}

uint64_t sub_1C64CA548(uint64_t result, unint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5, char a6)
{
  switch(a6)
  {
    case 0:
      double result = sub_1C64CA604(result, a2);
      break;
    case 1:
      swift_bridgeObjectRetain();
      double result = sub_1C64CA65C(a3, a4, a5);
      break;
    case 2:
    case 3:
      double result = swift_bridgeObjectRetain();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C64CA604(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }

  return swift_retain();
}

uint64_t sub_1C64CA65C(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 != 255) {
    return OUTLINED_FUNCTION_31_4();
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_31_4()
{
  return swift_bridgeObjectRetain();
}

uint64_t Assets.inAppIcon.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 40);
  unint64_t v3 = *(void *)(v1 + 48);
  uint64_t v4 = *(void *)(v1 + 56);
  uint64_t v5 = *(void *)(v1 + 64);
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  return OUTLINED_FUNCTION_54_2(v2, v3, v4, v5, *(_WORD *)(v1 + 72), (uint64_t)a1);
}

uint64_t Assets.init(icon:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)a1;
  unint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *(void *)(a1 + 24);
  *(void *)a2 = *(void *)a1;
  *(void *)(a2 + 8) = v2;
  *(void *)(a2 + 16) = v4;
  *(void *)(a2 + 24) = v5;
  __int16 v6 = *(_WORD *)(a1 + 32);
  *(_WORD *)(a2 + 32) = v6;
  *(void *)(a2 + 40) = v3;
  *(void *)(a2 + 48) = v2;
  *(void *)(a2 + 56) = v4;
  *(void *)(a2 + 64) = v5;
  *(_WORD *)(a2 + 72) = v6;
  return sub_1C64CA534(v3, v2, v4, v5, v6);
}

__n128 Assets.init(icon:inAppIcon:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  long long v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a3 = *(_OWORD *)a1;
  *(_OWORD *)(a3 + 16) = v3;
  __n128 result = *(__n128 *)a2;
  long long v5 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a3 + 40) = *(_OWORD *)a2;
  __int16 v6 = *(_WORD *)(a2 + 32);
  *(_WORD *)(a3 + 32) = *(_WORD *)(a1 + 32);
  *(_OWORD *)(a3 + 56) = v5;
  *(_WORD *)(a3 + 72) = v6;
  return result;
}

BOOL static Assets.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)a1;
  unint64_t v3 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  unsigned int v6 = *(unsigned __int16 *)(a1 + 32);
  uint64_t v8 = *(void *)(a1 + 40);
  unint64_t v7 = *(void *)(a1 + 48);
  uint64_t v10 = *(void *)(a1 + 56);
  uint64_t v9 = *(void *)(a1 + 64);
  unsigned int v11 = *(unsigned __int16 *)(a1 + 72);
  uint64_t v13 = *(void *)a2;
  unint64_t v12 = *(void *)(a2 + 8);
  uint64_t v15 = *(void *)(a2 + 16);
  uint64_t v14 = *(void *)(a2 + 24);
  unsigned int v16 = *(unsigned __int16 *)(a2 + 32);
  uint64_t v17 = *(void *)(a2 + 40);
  unint64_t v18 = *(void *)(a2 + 48);
  uint64_t v20 = *(void *)(a2 + 56);
  uint64_t v19 = *(void *)(a2 + 64);
  unsigned int v21 = *(unsigned __int16 *)(a2 + 72);
  if (v6 >> 8 <= 0xFE)
  {
    uint64_t v89 = v2;
    unint64_t v90 = v3;
    uint64_t v91 = v5;
    uint64_t v92 = v4;
    __int16 v93 = v6;
    if (v16 >> 8 <= 0xFE)
    {
      uint64_t v84 = v13;
      unint64_t v85 = v12;
      uint64_t v86 = v15;
      uint64_t v87 = v14;
      __int16 v88 = v16;
      uint64_t v78 = v10;
      uint64_t v79 = v17;
      uint64_t v82 = v20;
      uint64_t v77 = v9;
      uint64_t v75 = v19;
      unsigned int v76 = v11;
      unsigned int v74 = v21;
      unint64_t v28 = v7;
      uint64_t v29 = v8;
      unint64_t v30 = v18;
      sub_1C64CA534(v2, v3, v5, v4, v6);
      OUTLINED_FUNCTION_49_2();
      char v31 = static Image.== infix(_:_:)(&v89, &v84);
      OUTLINED_FUNCTION_50_2();
      OUTLINED_FUNCTION_63_2();
      uint64_t v17 = v79;
      uint64_t v20 = v82;
      unint64_t v18 = v30;
      uint64_t v19 = v75;
      unsigned int v21 = v74;
      uint64_t v8 = v29;
      unint64_t v7 = v28;
      uint64_t v9 = v77;
      uint64_t v10 = v78;
      unsigned int v11 = v76;
      if ((v31 & 1) == 0) {
        return 0;
      }
      goto LABEL_8;
    }
    uint64_t v81 = v14;
    sub_1C64CA534(v2, v3, v5, v4, v6);
    OUTLINED_FUNCTION_49_2();
    OUTLINED_FUNCTION_50_2();
    uint64_t v14 = v81;
LABEL_6:
    uint64_t v22 = v14;
    sub_1C64CA534(v13, v12, v15, v14, v16);
    OUTLINED_FUNCTION_63_2();
    uint64_t v23 = v13;
    unint64_t v24 = v12;
    uint64_t v25 = v15;
    uint64_t v26 = v22;
    __int16 v27 = v16;
LABEL_14:
    sub_1C64CAA34(v23, v24, v25, v26, v27);
    return 0;
  }
  if (v16 >> 8 <= 0xFE) {
    goto LABEL_6;
  }
LABEL_8:
  unsigned int v32 = v11 >> 8;
  if (v11 >> 8 > 0xFE)
  {
    uint64_t v33 = v8;
    unint64_t v34 = v7;
    uint64_t v35 = v10;
    uint64_t v36 = v9;
    __int16 v37 = v11;
    if (v21 >> 8 > 0xFE) {
      return 1;
    }
    goto LABEL_13;
  }
  uint64_t v89 = v8;
  unint64_t v90 = v7;
  uint64_t v91 = v10;
  uint64_t v92 = v9;
  __int16 v93 = v11;
  if (v21 >> 8 > 0xFE)
  {
    uint64_t v80 = v17;
    uint64_t v83 = v20;
    uint64_t v38 = v10;
    uint64_t v39 = v9;
    uint64_t v40 = v19;
    __int16 v41 = v11;
    __int16 v42 = v21;
    unint64_t v43 = v7;
    uint64_t v44 = v8;
    unint64_t v45 = v18;
    sub_1C64CA534(v8, v7, v10, v9, v11);
    sub_1C64CA548(v44, v43, v38, v39, v41, v32);
    uint64_t v33 = v44;
    uint64_t v46 = v44;
    unint64_t v34 = v43;
    unint64_t v47 = v43;
    uint64_t v35 = v38;
    uint64_t v48 = v38;
    uint64_t v36 = v39;
    uint64_t v49 = v39;
    __int16 v37 = v41;
    sub_1C64CAA48(v46, v47, v48, v49, v41, v32);
    uint64_t v17 = v80;
    uint64_t v20 = v83;
    unint64_t v18 = v45;
    uint64_t v19 = v40;
    LOWORD(v21) = v42;
LABEL_13:
    uint64_t v50 = v17;
    uint64_t v51 = v20;
    uint64_t v52 = v19;
    __int16 v53 = v21;
    unint64_t v54 = v18;
    sub_1C64CA534(v17, v18, v20, v19, v21);
    sub_1C64CAA34(v33, v34, v35, v36, v37);
    uint64_t v23 = v50;
    unint64_t v24 = v54;
    uint64_t v25 = v51;
    uint64_t v26 = v52;
    __int16 v27 = v53;
    goto LABEL_14;
  }
  uint64_t v84 = v17;
  unint64_t v85 = v18;
  uint64_t v86 = v20;
  uint64_t v87 = v19;
  __int16 v88 = v21;
  uint64_t v56 = v10;
  uint64_t v57 = v9;
  __int16 v58 = v11;
  unint64_t v59 = v7;
  uint64_t v60 = v8;
  sub_1C64CA534(v8, v7, v10, v9, v11);
  uint64_t v61 = OUTLINED_FUNCTION_51_1();
  sub_1C64CA548(v61, v62, v63, v64, v65, v66);
  char v67 = static Image.== infix(_:_:)(&v89, &v84);
  uint64_t v68 = OUTLINED_FUNCTION_51_1();
  sub_1C64CAA48(v68, v69, v70, v71, v72, v73);
  sub_1C64CAA34(v60, v59, v56, v57, v58);
  return (v67 & 1) != 0;
}

uint64_t sub_1C64CAA34(uint64_t result, unint64_t a2, uint64_t a3, uint64_t a4, __int16 a5)
{
  if (HIBYTE(a5) != 255) {
    return sub_1C64CAA48(result, a2, a3, a4, a5, SHIBYTE(a5));
  }
  return result;
}

uint64_t sub_1C64CAA48(uint64_t result, unint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5, char a6)
{
  switch(a6)
  {
    case 0:
      __n128 result = sub_1C64CAB04(result, a2);
      break;
    case 1:
      swift_bridgeObjectRelease();
      __n128 result = sub_1C64CAB5C(a3, a4, a5);
      break;
    case 2:
    case 3:
      __n128 result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C64CAB04(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }

  return swift_release();
}

uint64_t sub_1C64CAB5C(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 != 255) {
    return sub_1C64CAB74();
  }
  return result;
}

uint64_t sub_1C64CAB74()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C64CAB7C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1852793705 && a2 == 0xE400000000000000;
  if (v2 || (sub_1C6577090() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6F63497070416E69 && a2 == 0xE90000000000006ELL)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_1C6577090();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1C64CAC68(char a1)
{
  if (a1) {
    return 0x6F63497070416E69;
  }
  else {
    return 1852793705;
  }
}

uint64_t sub_1C64CAC9C()
{
  return sub_1C64CAC68(*v0);
}

uint64_t sub_1C64CACA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C64CAB7C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C64CACCC(uint64_t a1)
{
  unint64_t v2 = sub_1C64CB6BC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C64CAD08(uint64_t a1)
{
  unint64_t v2 = sub_1C64CB6BC();

  return MEMORY[0x1F41862B0](a1, v2);
}

void Assets.encode(to:)()
{
  OUTLINED_FUNCTION_25();
  unint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF8FB0);
  OUTLINED_FUNCTION_0_2();
  MEMORY[0x1F4188790](v3);
  OUTLINED_FUNCTION_47_2();
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  sub_1C64CB6BC();
  sub_1C6577240();
  sub_1C64CB708();
  OUTLINED_FUNCTION_58_2();
  sub_1C6576FC0();
  if (!v0)
  {
    OUTLINED_FUNCTION_58_2();
    sub_1C6576FC0();
  }
  OUTLINED_FUNCTION_1();
  v4();
  OUTLINED_FUNCTION_26();
}

void Assets.init(from:)()
{
  OUTLINED_FUNCTION_25();
  unint64_t v2 = v1;
  uint64_t v4 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF82F8);
  OUTLINED_FUNCTION_0_2();
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_17_2();
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  sub_1C64CB6BC();
  sub_1C6577210();
  if (v0)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v2);
  }
  else
  {
    sub_1C64CB754();
    OUTLINED_FUNCTION_32_4();
    sub_1C64CA534(v8, v9, v10, v11, v12);
    OUTLINED_FUNCTION_32_4();
    uint64_t v6 = OUTLINED_FUNCTION_59_0();
    v7(v6);
    sub_1C64CA534(v8, v9, v10, v11, v12);
    sub_1C64CA534(v8, v9, v10, v11, v12);
    sub_1C64CAA34(v8, v9, v10, v11, v12);
    *(void *)uint64_t v4 = v8;
    *(void *)(v4 + 8) = v9;
    *(void *)(v4 + 16) = v10;
    *(void *)(v4 + 24) = v11;
    *(_WORD *)(v4 + 32) = v12;
    *(void *)(v4 + 40) = v8;
    *(void *)(v4 + 48) = v9;
    *(void *)(v4 + 56) = v10;
    *(void *)(v4 + 64) = v11;
    *(_WORD *)(v4 + 72) = v12;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v2);
    sub_1C64CAA34(v8, v9, v10, v11, v12);
    sub_1C64CAA34(v8, v9, v10, v11, v12);
  }
  OUTLINED_FUNCTION_26();
}

void sub_1C64CB11C()
{
}

void sub_1C64CB134()
{
}

#error "1C64CB634: call analysis failed (funcsize=342)"

unint64_t sub_1C64CB6BC()
{
  unint64_t result = qword_1EBBFBDB0;
  if (!qword_1EBBFBDB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBBFBDB0);
  }
  return result;
}

unint64_t sub_1C64CB708()
{
  unint64_t result = qword_1EBBF8EB0;
  if (!qword_1EBBF8EB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBBF8EB0);
  }
  return result;
}

unint64_t sub_1C64CB754()
{
  unint64_t result = qword_1EBBF82E0;
  if (!qword_1EBBF82E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBBF82E0);
  }
  return result;
}

uint64_t sub_1C64CB7A0(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000013 && a2 == 0x80000001C6588590)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_1C6577090();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

unint64_t sub_1C64CB828()
{
  return 0xD000000000000013;
}

uint64_t sub_1C64CB844(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1635017060 && a2 == 0xE400000000000000;
  if (v2 || (sub_1C6577090() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x6C6F626D7973 && a2 == 0xE600000000000000;
    if (v6 || (sub_1C6577090() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x6E6F6349707061 && a2 == 0xE700000000000000;
      if (v7 || (sub_1C6577090() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0x4963696870617267 && a2 == 0xEB000000006E6F63)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        char v9 = sub_1C6577090();
        swift_bridgeObjectRelease();
        if (v9) {
          return 3;
        }
        else {
          return 4;
        }
      }
    }
  }
}

uint64_t sub_1C64CB9F4(char a1)
{
  uint64_t result = 1635017060;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x6C6F626D7973;
      break;
    case 2:
      uint64_t result = 0x6E6F6349707061;
      break;
    case 3:
      uint64_t result = 0x4963696870617267;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C64CBA84(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x7365747962 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_1C6577090();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1C64CBB04()
{
  return 0x7365747962;
}

uint64_t sub_1C64CBB18(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x6E65644965707974 && a2 == 0xEE00726569666974)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_1C6577090();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1C64CBBC4()
{
  return 0x6E65644965707974;
}

uint64_t sub_1C64CBBE8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_1C6577090() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6F6C6F43746E6974 && a2 == 0xE900000000000072)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_1C6577090();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1C64CBCD4(char a1)
{
  if (a1) {
    return 0x6F6C6F43746E6974;
  }
  else {
    return 1701667182;
  }
}

uint64_t sub_1C64CBD0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C64CB7A0(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1C64CBD38(uint64_t a1)
{
  unint64_t v2 = sub_1C64CCD30();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C64CBD74(uint64_t a1)
{
  unint64_t v2 = sub_1C64CCD30();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C64CBDB0()
{
  return sub_1C64CB9F4(*v0);
}

uint64_t sub_1C64CBDB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C64CB844(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C64CBDE0(uint64_t a1)
{
  unint64_t v2 = sub_1C64CCC98();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C64CBE1C(uint64_t a1)
{
  unint64_t v2 = sub_1C64CCC98();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C64CBE5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C64CBA84(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1C64CBE88(uint64_t a1)
{
  unint64_t v2 = sub_1C64CCE14();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C64CBEC4(uint64_t a1)
{
  unint64_t v2 = sub_1C64CCE14();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C64CBF04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C64CBB18(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1C64CBF30(uint64_t a1)
{
  unint64_t v2 = sub_1C64CCCE4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C64CBF6C(uint64_t a1)
{
  unint64_t v2 = sub_1C64CCCE4();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C64CBFA8()
{
  return sub_1C64CBCD4(*v0);
}

uint64_t sub_1C64CBFB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C64CBBE8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C64CBFD8(uint64_t a1)
{
  unint64_t v2 = sub_1C64CCD7C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C64CC014(uint64_t a1)
{
  unint64_t v2 = sub_1C64CCD7C();

  return MEMORY[0x1F41862B0](a1, v2);
}

void Image.encode(to:)()
{
  OUTLINED_FUNCTION_25();
  char v4 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFBB00);
  OUTLINED_FUNCTION_0_2();
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_3();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFBAF8);
  OUTLINED_FUNCTION_0_2();
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_3();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFBAF0);
  OUTLINED_FUNCTION_0_2();
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_61_1();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFBAE8);
  OUTLINED_FUNCTION_0_2();
  MEMORY[0x1F4188790](v8);
  OUTLINED_FUNCTION_75_0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFBAE0);
  OUTLINED_FUNCTION_0_2();
  uint64_t v25 = v9;
  uint64_t v26 = v10;
  MEMORY[0x1F4188790](v9);
  OUTLINED_FUNCTION_23();
  uint64_t v23 = *(void *)(v0 + 24);
  uint64_t v24 = *(void *)(v0 + 16);
  unsigned __int8 v27 = *(unsigned char *)(v0 + 32);
  uint64_t v11 = *(unsigned __int8 *)(v0 + 33);
  __swift_project_boxed_opaque_existential_1(v4, v4[3]);
  sub_1C64CCC98();
  sub_1C6577240();
  switch(v11)
  {
    case 1:
      sub_1C64CCD7C();
      sub_1C6576F70();
      sub_1C6576FD0();
      if (!v1)
      {
        sub_1C64CCDC8();
        sub_1C6576FC0();
      }
      OUTLINED_FUNCTION_1();
      v18();
      (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v2, v25);
      break;
    case 2:
      sub_1C64CCD30();
      OUTLINED_FUNCTION_33_4();
      sub_1C6576FD0();
      goto LABEL_8;
    case 3:
      sub_1C64CCCE4();
      OUTLINED_FUNCTION_33_4();
      sub_1C6576FD0();
LABEL_8:
      OUTLINED_FUNCTION_90_1();
      OUTLINED_FUNCTION_1();
      v19();
      uint64_t v20 = OUTLINED_FUNCTION_80_1();
      v22(v20, v21);
      break;
    default:
      uint64_t v12 = OUTLINED_FUNCTION_90_1();
      sub_1C64CA604(v12, v13);
      sub_1C64CCE14();
      OUTLINED_FUNCTION_33_4();
      sub_1C64CCE60();
      sub_1C6577010();
      OUTLINED_FUNCTION_1();
      v14();
      OUTLINED_FUNCTION_80_1();
      OUTLINED_FUNCTION_1();
      v15();
      uint64_t v16 = OUTLINED_FUNCTION_90_1();
      sub_1C64CAA48(v16, v17, v24, v23, v27, 0);
      break;
  }
  OUTLINED_FUNCTION_26();
}

void Image.init(from:)()
{
  OUTLINED_FUNCTION_25();
  char v3 = v2;
  uint64_t v43 = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F0E20);
  OUTLINED_FUNCTION_0_2();
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_3();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F0E28);
  OUTLINED_FUNCTION_0_2();
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_3();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F0E30);
  OUTLINED_FUNCTION_0_2();
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_23();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F0E38);
  OUTLINED_FUNCTION_0_2();
  MEMORY[0x1F4188790](v8);
  OUTLINED_FUNCTION_22();
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F0E40);
  OUTLINED_FUNCTION_0_2();
  uint64_t v11 = v10;
  MEMORY[0x1F4188790](v12);
  OUTLINED_FUNCTION_61_1();
  uint64_t v44 = v3;
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  sub_1C64CCC98();
  sub_1C6577210();
  if (v1) {
    goto LABEL_11;
  }
  uint64_t v13 = v0;
  uint64_t v14 = sub_1C6576F40();
  uint64_t v15 = *(void *)(v14 + 16);
  uint64_t v16 = v9;
  if (!v15)
  {
LABEL_7:
    uint64_t v22 = sub_1C6576CE0();
    swift_allocError();
    uint64_t v24 = v23;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F0140);
    *uint64_t v24 = &type metadata for Image;
    sub_1C6576E90();
    sub_1C6576CD0();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v22 - 8) + 104))(v24, *MEMORY[0x1E4FBBA70], v22);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v13, v16);
LABEL_11:
    uint64_t v41 = (uint64_t)v44;
    goto LABEL_12;
  }
  uint64_t v17 = *(unsigned __int8 *)(v14 + 32);
  sub_1C649F97C(1, v15, v14, v14 + 32, 0, (2 * v15) | 1);
  uint64_t v19 = v18;
  unint64_t v21 = v20;
  swift_bridgeObjectRelease();
  if (v19 != v21 >> 1)
  {
    uint64_t v16 = v9;
    goto LABEL_7;
  }
  switch(v17)
  {
    case 1:
      sub_1C64CCD7C();
      OUTLINED_FUNCTION_22_4();
      LOBYTE(v45) = 0;
      uint64_t v28 = sub_1C6576EF0();
      uint64_t v29 = v30;
      sub_1C64D23C0();
      sub_1C6576EE0();
      OUTLINED_FUNCTION_1();
      v37();
      swift_unknownObjectRelease();
      uint64_t v38 = OUTLINED_FUNCTION_73_0();
      v39(v38);
      long long v40 = v45;
      char v27 = v46;
      uint64_t v41 = (uint64_t)v44;
      uint64_t v42 = v43;
      goto LABEL_15;
    case 2:
      sub_1C64CCD30();
      OUTLINED_FUNCTION_22_4();
      uint64_t v28 = sub_1C6576EF0();
      uint64_t v29 = v31;
      uint64_t v32 = OUTLINED_FUNCTION_57_2();
      v33(v32);
      goto LABEL_13;
    case 3:
      sub_1C64CCCE4();
      OUTLINED_FUNCTION_22_4();
      uint64_t v28 = sub_1C6576EF0();
      uint64_t v29 = v34;
      OUTLINED_FUNCTION_95_0();
      v35();
LABEL_13:
      swift_unknownObjectRelease();
      OUTLINED_FUNCTION_1();
      v36();
      char v27 = 0;
      goto LABEL_14;
    default:
      LOBYTE(v45) = 0;
      sub_1C64CCE14();
      OUTLINED_FUNCTION_22_4();
      sub_1C64D240C();
      sub_1C6576F30();
      OUTLINED_FUNCTION_1();
      v25();
      swift_unknownObjectRelease();
      OUTLINED_FUNCTION_1();
      v26();
      char v27 = 0;
      uint64_t v29 = *((void *)&v45 + 1);
      uint64_t v28 = v45;
LABEL_14:
      long long v40 = 0uLL;
      uint64_t v41 = (uint64_t)v44;
      uint64_t v42 = v43;
LABEL_15:
      *(void *)uint64_t v42 = v28;
      *(void *)(v42 + 8) = v29;
      *(_OWORD *)(v42 + 16) = v40;
      *(unsigned char *)(v42 + 32) = v27;
      *(unsigned char *)(v42 + 33) = v17;
      break;
  }
LABEL_12:
  __swift_destroy_boxed_opaque_existential_1(v41);
  OUTLINED_FUNCTION_26();
}

void sub_1C64CCB74()
{
}

void sub_1C64CCB8C()
{
}

uint64_t static Color.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = *a2;
  uint64_t v5 = a2[1];
  if (a1[2])
  {
    if (a2[2])
    {
      if (v2 != v4 || v3 != v5)
      {
LABEL_15:
        char v7 = sub_1C6577090();
        goto LABEL_17;
      }
LABEL_16:
      char v7 = 1;
      goto LABEL_17;
    }
  }
  else if ((a2[2] & 1) == 0)
  {
    if (v2 != v4 || v3 != v5) {
      goto LABEL_15;
    }
    goto LABEL_16;
  }
  char v7 = 0;
LABEL_17:
  OUTLINED_FUNCTION_31_4();
  OUTLINED_FUNCTION_31_4();
  sub_1C64CAB74();
  sub_1C64CAB74();
  return v7 & 1;
}

unint64_t sub_1C64CCC98()
{
  unint64_t result = qword_1EBBFBA88;
  if (!qword_1EBBFBA88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBBFBA88);
  }
  return result;
}

unint64_t sub_1C64CCCE4()
{
  unint64_t result = qword_1EA3F0E00;
  if (!qword_1EA3F0E00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F0E00);
  }
  return result;
}

unint64_t sub_1C64CCD30()
{
  unint64_t result = qword_1EBBFBAC0;
  if (!qword_1EBBFBAC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBBFBAC0);
  }
  return result;
}

unint64_t sub_1C64CCD7C()
{
  unint64_t result = qword_1EA3F0E08;
  if (!qword_1EA3F0E08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F0E08);
  }
  return result;
}

unint64_t sub_1C64CCDC8()
{
  unint64_t result = qword_1EA3F0E10;
  if (!qword_1EA3F0E10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F0E10);
  }
  return result;
}

unint64_t sub_1C64CCE14()
{
  unint64_t result = qword_1EA3F0E18;
  if (!qword_1EA3F0E18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F0E18);
  }
  return result;
}

unint64_t sub_1C64CCE60()
{
  unint64_t result = qword_1EBBF82B8;
  if (!qword_1EBBF82B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBBF82B8);
  }
  return result;
}

uint64_t sub_1C64CCEAC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1633838962 && a2 == 0xE400000000000000;
  if (v2 || (sub_1C6577090() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_1C6577090();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1C64CCF84(char a1)
{
  if (a1) {
    return 1701667182;
  }
  else {
    return 1633838962;
  }
}

uint64_t sub_1C64CCFA4()
{
  return sub_1C6499098();
}

uint64_t sub_1C64CCFC0()
{
  return sub_1C64CCF84(*v0);
}

uint64_t sub_1C64CCFC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C64CCEAC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C64CCFF0(uint64_t a1)
{
  unint64_t v2 = sub_1C64D2458();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C64CD02C(uint64_t a1)
{
  unint64_t v2 = sub_1C64D2458();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C64CD06C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C64B1CD4(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1C64CD098(uint64_t a1)
{
  unint64_t v2 = sub_1C64D24A4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C64CD0D4(uint64_t a1)
{
  unint64_t v2 = sub_1C64D24A4();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C64CD110(uint64_t a1)
{
  unint64_t v2 = sub_1C64D24F0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C64CD14C(uint64_t a1)
{
  unint64_t v2 = sub_1C64D24F0();

  return MEMORY[0x1F41862B0](a1, v2);
}

void Color.encode(to:)()
{
  OUTLINED_FUNCTION_25();
  uint64_t v26 = v1;
  uint64_t v5 = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F0E50);
  OUTLINED_FUNCTION_0_2();
  uint64_t v21 = v7;
  uint64_t v22 = v6;
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_17_2();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F0E58);
  OUTLINED_FUNCTION_0_2();
  uint64_t v19 = v9;
  uint64_t v20 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F0E60);
  OUTLINED_FUNCTION_0_2();
  uint64_t v13 = v12;
  MEMORY[0x1F4188790](v14);
  OUTLINED_FUNCTION_22();
  uint64_t v15 = *v0;
  uint64_t v23 = v0[1];
  uint64_t v24 = v15;
  uint64_t v16 = *((unsigned __int8 *)v0 + 16);
  __swift_project_boxed_opaque_existential_1(v5, v5[3]);
  sub_1C64D2458();
  sub_1C6577240();
  if (v16)
  {
    sub_1C64D24A4();
    OUTLINED_FUNCTION_87_1();
    uint64_t v17 = v22;
    sub_1C6576FD0();
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v3, v17);
  }
  else
  {
    sub_1C64D24F0();
    OUTLINED_FUNCTION_87_1();
    uint64_t v18 = v20;
    sub_1C6576FD0();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v11, v18);
  }
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v2, v16);
  OUTLINED_FUNCTION_26();
}

void Color.init(from:)()
{
  OUTLINED_FUNCTION_25();
  uint64_t v44 = (void *)v0;
  uint64_t v3 = v2;
  uint64_t v39 = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F0E80);
  OUTLINED_FUNCTION_0_2();
  uint64_t v41 = v6;
  uint64_t v42 = v5;
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_22();
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F0E88);
  OUTLINED_FUNCTION_0_2();
  uint64_t v40 = v8;
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F0E90);
  OUTLINED_FUNCTION_0_2();
  uint64_t v43 = v13;
  MEMORY[0x1F4188790](v14);
  OUTLINED_FUNCTION_23();
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  sub_1C64D2458();
  uint64_t v15 = (uint64_t)v44;
  sub_1C6577210();
  if (v15) {
    goto LABEL_8;
  }
  v38[0] = v7;
  v38[1] = v11;
  uint64_t v44 = v3;
  uint64_t v16 = sub_1C6576F40();
  uint64_t v17 = *(void *)(v16 + 16);
  uint64_t v18 = v12;
  if (!v17)
  {
    uint64_t v19 = v1;
    goto LABEL_7;
  }
  uint64_t v19 = v1;
  int v20 = *(unsigned __int8 *)(v16 + 32);
  sub_1C649F97C(1, v17, v16, v16 + 32, 0, (2 * v17) | 1);
  uint64_t v22 = v21;
  unint64_t v24 = v23;
  swift_bridgeObjectRelease();
  if (v22 != v24 >> 1)
  {
LABEL_7:
    uint64_t v25 = v43;
    uint64_t v26 = sub_1C6576CE0();
    swift_allocError();
    uint64_t v28 = v27;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F0140);
    *uint64_t v28 = &type metadata for Color;
    sub_1C6576E90();
    sub_1C6576CD0();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v26 - 8) + 104))(v28, *MEMORY[0x1E4FBBA70], v26);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v19, v18);
    uint64_t v3 = v44;
LABEL_8:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v3);
    goto LABEL_9;
  }
  if (v20)
  {
    LODWORD(v40) = v20;
    sub_1C64D24A4();
    OUTLINED_FUNCTION_66_2();
    uint64_t v29 = sub_1C6576EF0();
    uint64_t v31 = v30;
    OUTLINED_FUNCTION_1();
    v32();
    LOBYTE(v20) = v40;
  }
  else
  {
    sub_1C64D24F0();
    OUTLINED_FUNCTION_66_2();
    uint64_t v29 = sub_1C6576EF0();
    uint64_t v31 = v33;
    OUTLINED_FUNCTION_95_0();
    v34();
  }
  swift_unknownObjectRelease();
  uint64_t v35 = OUTLINED_FUNCTION_82_1();
  v36(v35);
  __int16 v37 = v39;
  *uint64_t v39 = v29;
  v37[1] = v31;
  *((unsigned char *)v37 + 16) = v20;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v44);
LABEL_9:
  OUTLINED_FUNCTION_26();
}

void sub_1C64CD838()
{
}

void sub_1C64CD850()
{
}

void ViewCallbacksWrapper.__allocating_init(delegateSpokenDialogCallback:delegateDisplayedDialogCallback:delegateDescriptionDialogCallback:delegateInvocationActionProvider:assetsProvider:)()
{
  OUTLINED_FUNCTION_49_0();
  uint64_t v28 = v2;
  uint64_t v29 = v0;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 + 24);
  uint64_t v26 = *(void *)(v7 + 32);
  uint64_t v27 = v10;
  __swift_mutable_project_boxed_opaque_existential_1(v7, v9);
  OUTLINED_FUNCTION_0_2();
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_47_0();
  v14();
  uint64_t v15 = *(void *)(v6 + 24);
  uint64_t v25 = *(void *)(v6 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v6, v15);
  OUTLINED_FUNCTION_0_2();
  MEMORY[0x1F4188790](v16);
  OUTLINED_FUNCTION_75_0();
  OUTLINED_FUNCTION_47_0();
  v17();
  uint64_t v18 = *(void *)(v4 + 24);
  uint64_t v19 = *(void *)(v4 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v4, v18);
  OUTLINED_FUNCTION_0_2();
  MEMORY[0x1F4188790](v20);
  uint64_t v22 = (char *)&v24 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_47_0();
  v23();
  sub_1C64D253C((uint64_t)v13, v1, v27, v28, (uint64_t)v22, v29, v9, v18, v15, v26, v19, v25);
  __swift_destroy_boxed_opaque_existential_1(v4);
  __swift_destroy_boxed_opaque_existential_1(v6);
  __swift_destroy_boxed_opaque_existential_1(v8);
  OUTLINED_FUNCTION_39_0();
}

void ViewCallbacksWrapper.__allocating_init(delegateSpokenDialogCallback:delegateDisplayedDialogCallback:delegateDescriptionDialogCallback:delegatedPreambleOverrideCallback:delegateInvocationActionProvider:assetsProvider:)()
{
  OUTLINED_FUNCTION_49_0();
  uint64_t v24 = v3;
  uint64_t v25 = v0;
  unint64_t v23 = v4;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v10 = v9;
  uint64_t v12 = v11;
  uint64_t v14 = *(void *)(v11 + 24);
  uint64_t v13 = *(void *)(v11 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v11, v14);
  OUTLINED_FUNCTION_0_2();
  MEMORY[0x1F4188790](v15);
  OUTLINED_FUNCTION_34_2(v16, v22);
  OUTLINED_FUNCTION_47_0();
  v17();
  uint64_t v19 = *(void *)(v10 + 24);
  uint64_t v18 = *(void *)(v10 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v10, v19);
  OUTLINED_FUNCTION_0_2();
  MEMORY[0x1F4188790](v20);
  OUTLINED_FUNCTION_60_2();
  OUTLINED_FUNCTION_47_0();
  v21();
  sub_1C64D2F08(v2, v1, v8, v6, v23, v24, v25, v14, v19, v13, v18);
  __swift_destroy_boxed_opaque_existential_1(v10);
  __swift_destroy_boxed_opaque_existential_1(v12);
  OUTLINED_FUNCTION_39_0();
}

void ViewCallbacksWrapper.__allocating_init(delegateSpokenDialogCallback:delegateDisplayedDialogCallback:delegateDescriptionDialogCallbackProvider:delegatedPreambleOverrideCallbackProvider:delegateInvocationActionProvider:assetsProvider:)()
{
  OUTLINED_FUNCTION_49_0();
  uint64_t v25 = v0;
  uint64_t v26 = v2;
  uint64_t v28 = v3;
  uint64_t v29 = v4;
  uint64_t v27 = v5;
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  uint64_t v11 = v10;
  uint64_t v13 = v12;
  uint64_t v15 = *(void *)(v12 + 24);
  uint64_t v14 = *(void *)(v12 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v12, v15);
  OUTLINED_FUNCTION_0_2();
  MEMORY[0x1F4188790](v16);
  OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_47_0();
  v17();
  uint64_t v18 = *(void *)(v11 + 24);
  uint64_t v19 = *(void *)(v11 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v11, v18);
  OUTLINED_FUNCTION_0_2();
  MEMORY[0x1F4188790](v20);
  uint64_t v22 = (char *)&v24 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_47_0();
  v23();
  sub_1C64D3434(v1, (uint64_t)v22, v9, v7, v26, v27, v28, v29, v25, v15, v18, v14, v19);
  __swift_destroy_boxed_opaque_existential_1(v11);
  __swift_destroy_boxed_opaque_existential_1(v13);
  OUTLINED_FUNCTION_39_0();
}

void ViewCallbacksWrapper.init(delegateSpokenDialogCallback:delegateDisplayedDialogCallback:delegateDescriptionDialogCallbackProvider:delegatedPreambleOverrideCallbackProvider:delegateInvocationActionProvider:assetsProvider:)()
{
  OUTLINED_FUNCTION_49_0();
  uint64_t v30 = v0;
  uint64_t v31 = v3;
  uint64_t v5 = v4;
  uint64_t v32 = v6;
  uint64_t v33 = v7;
  uint64_t v28 = v8;
  uint64_t v29 = v9;
  uint64_t v11 = v10;
  uint64_t v13 = v12;
  uint64_t v14 = *(void *)(v12 + 24);
  uint64_t v27 = *(void *)(v12 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v12, v14);
  OUTLINED_FUNCTION_0_2();
  MEMORY[0x1F4188790](v15);
  OUTLINED_FUNCTION_23();
  OUTLINED_FUNCTION_47_0();
  v16();
  uint64_t v17 = *(void *)(v11 + 24);
  uint64_t v26 = *(void *)(v11 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v11, v17);
  OUTLINED_FUNCTION_0_2();
  MEMORY[0x1F4188790](v18);
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_47_0();
  v19();
  uint64_t v20 = *(void *)(v5 + 24);
  uint64_t v21 = *(void *)(v5 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v5, v20);
  OUTLINED_FUNCTION_0_2();
  MEMORY[0x1F4188790](v22);
  uint64_t v24 = (char *)&v26 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_47_0();
  v25();
  sub_1C64D2A28(v1, v2, v28, v29, v31, v32, v33, (uint64_t)v24, v30, v14, v17, v20, v27, v26, v21);
  __swift_destroy_boxed_opaque_existential_1(v5);
  __swift_destroy_boxed_opaque_existential_1(v11);
  __swift_destroy_boxed_opaque_existential_1(v13);
  OUTLINED_FUNCTION_39_0();
}

void ViewCallbacksWrapper.getInvocationAction(dialogProperties:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  OUTLINED_FUNCTION_75_1();
  a25 = v27;
  a26 = v28;
  uint64_t v29 = v26;
  uint64_t v31 = v30;
  if (qword_1EBBFC428 != -1) {
    swift_once();
  }
  uint64_t v32 = sub_1C65763A0();
  __swift_project_value_buffer(v32, (uint64_t)qword_1EBBFC278);
  swift_retain_n();
  uint64_t v33 = sub_1C6576380();
  os_log_type_t v34 = sub_1C6576A50();
  if (os_log_type_enabled(v33, v34))
  {
    uint64_t v35 = (uint8_t *)swift_slowAlloc();
    a14 = OUTLINED_FUNCTION_97_0();
    *(_DWORD *)uint64_t v35 = 136315138;
    sub_1C649FA30((uint64_t)(v29 + 16), (uint64_t)&a9);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFA270);
    uint64_t v36 = sub_1C65765A0();
    a9 = sub_1C64BCF18(v36, v37, &a14);
    sub_1C6576B40();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C6494000, v33, v34, "Delegating to provider: %s", v35, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_31_5();
    OUTLINED_FUNCTION_31_5();
  }
  else
  {

    swift_release_n();
  }
  uint64_t v38 = v29 + 16;
  uint64_t v40 = v29[19];
  uint64_t v39 = v29[20];
  __swift_project_boxed_opaque_existential_1(v38, v40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v39 + 8))(v31, v40, v39);
  OUTLINED_FUNCTION_65_1();
}

uint64_t ViewCallbacksWrapper.getAssets(context:suggestion:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = v2[24];
  uint64_t v6 = v2[25];
  __swift_project_boxed_opaque_existential_1(v2 + 21, v5);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 8))(a1, a2, v5, v6);
}

uint64_t ViewCallbacksWrapper.getInvocationActionProvider(context:)()
{
  return sub_1C64D1960();
}

uint64_t ViewCallbacksWrapper.getDescriptionCallback(context:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

double ViewCallbacksWrapper.getPreambleOverrideCallback(context:deliveryVehicle:)@<D0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  if (*(unsigned char *)(a1 + 32) == 1)
  {
    (*(void (**)(void))(v2 + 112))();
  }
  else
  {
    *(void *)(a2 + 32) = 0;
    double result = 0.0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  return result;
}

uint64_t ViewCallbacksWrapper.deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 128);
  __swift_destroy_boxed_opaque_existential_1(v0 + 168);
  return v0;
}

uint64_t ViewCallbacksWrapper.__deallocating_deinit()
{
  ViewCallbacksWrapper.deinit();

  return MEMORY[0x1F4186488](v0, 208, 7);
}

#error "1C64CE238: call analysis failed (funcsize=9)"

uint64_t sub_1C64CE248()
{
  return ViewCallbacksWrapper.getInvocationActionProvider(context:)();
}

uint64_t sub_1C64CE26C()
{
  return ViewCallbacksWrapper.getDescriptionCallback(context:)();
}

double sub_1C64CE290@<D0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  return ViewCallbacksWrapper.getPreambleOverrideCallback(context:deliveryVehicle:)(a1, a2);
}

uint64_t sub_1C64CE2B4(uint64_t a1, uint64_t a2)
{
  return ViewCallbacksWrapper.getAssets(context:suggestion:)(a1, a2);
}

__n128 StaticIconUrlProvider.__allocating_init(icon:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  __int16 v3 = *(_WORD *)(a1 + 32);
  __n128 result = *(__n128 *)a1;
  long long v5 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v2 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v2 + 32) = v5;
  *(_WORD *)(v2 + 48) = v3;
  return result;
}

uint64_t StaticIconUrlProvider.init(icon:)(uint64_t a1)
{
  __int16 v2 = *(_WORD *)(a1 + 32);
  long long v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 32) = v3;
  *(_WORD *)(v1 + 48) = v2;
  return v1;
}

uint64_t StaticIconUrlProvider.getAssets(context:suggestion:)@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  uint64_t v4 = v1[5];
  *a1 = v1[2];
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  uint64_t v5 = OUTLINED_FUNCTION_12_1((uint64_t)a1);

  return sub_1C64CA534(v5, v6, v7, v8, v9);
}

uint64_t StaticIconUrlProvider.deinit()
{
  sub_1C64CAA34(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(_WORD *)(v0 + 48));
  return v0;
}

uint64_t StaticIconUrlProvider.__deallocating_deinit()
{
  sub_1C64CAA34(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(_WORD *)(v0 + 48));

  return MEMORY[0x1F4186488](v0, 50, 7);
}

uint64_t sub_1C64CE3EC@<X0>(void *a1@<X8>)
{
  return StaticIconUrlProvider.getAssets(context:suggestion:)(a1);
}

uint64_t static ViewCallbacksWrapper.SuggestionUtteranceSectionId.getter()
{
  return 0x6974736567677573;
}

uint64_t static ViewCallbacksWrapper.DescriptionSectionId.getter()
{
  return 0x7470697263736564;
}

unint64_t static ViewCallbacksWrapper.PreambleOverrideSectionId.getter()
{
  return 0xD000000000000010;
}

void *ViewCallbacksWrapper.__allocating_init(dialogId:icon:invocationActionProvider:)(uint64_t a1, uint64_t a2, long long *a3, uint64_t a4)
{
  long long v20 = *a3;
  uint64_t v7 = *((void *)a3 + 3);
  uint64_t v19 = *((void *)a3 + 2);
  __int16 v8 = *((_WORD *)a3 + 16);
  uint64_t v9 = type metadata accessor for DialogIdCallback();
  uint64_t v10 = OUTLINED_FUNCTION_35_3();
  *(void *)(v10 + 16) = a1;
  *(void *)(v10 + 24) = a2;
  *(void *)(v10 + 32) = 0x6974736567677573;
  *(void *)(v10 + 40) = 0xEA00000000006E6FLL;
  *(unsigned char *)(v10 + 48) = 1;
  uint64_t v11 = OUTLINED_FUNCTION_35_3();
  *(void *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = a2;
  *(void *)(v11 + 32) = 0x6974736567677573;
  *(void *)(v11 + 40) = 0xEA00000000006E6FLL;
  *(unsigned char *)(v11 + 48) = 0;
  uint64_t v12 = OUTLINED_FUNCTION_35_3();
  *(void *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = a2;
  uint64_t v13 = OUTLINED_FUNCTION_28_2(v12);
  *(unsigned char *)(v13 + 48) = 0;
  v24[3] = v9;
  v24[4] = &protocol witness table for DialogIdCallback;
  v24[0] = v13;
  sub_1C649FA30(a4, (uint64_t)v23);
  type metadata accessor for StaticIconUrlProvider();
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = v20;
  *(void *)(v14 + 32) = v19;
  *(void *)(v14 + 40) = v7;
  *(_WORD *)(v14 + 48) = v8;
  swift_bridgeObjectRetain_n();
  __swift_destroy_boxed_opaque_existential_1(a4);
  uint64_t v22 = 0;
  memset(v21, 0, sizeof(v21));
  uint64_t v15 = OUTLINED_FUNCTION_46_2();
  sub_1C64D37B4((uint64_t)v24, v15 + 16);
  uint64_t v16 = OUTLINED_FUNCTION_46_2();
  sub_1C64D37B4((uint64_t)v21, v16 + 16);
  uint64_t v17 = (void *)swift_allocObject();
  return sub_1C64D2980(v10, v11, (uint64_t)sub_1C64D5788, v15, (uint64_t)sub_1C64D3820, v16, v23, v14, v17);
}

uint64_t DialogIdCallback.__allocating_init(templateId:sectionId:isSpeakable:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t result = OUTLINED_FUNCTION_35_3();
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = a2;
  *(void *)(result + 32) = a3;
  *(void *)(result + 40) = a4;
  *(unsigned char *)(result + 48) = a5;
  return result;
}

void ViewCallbacksWrapper.__allocating_init(dialogId:assetsProvider:invocationActionProvider:)()
{
  OUTLINED_FUNCTION_49_0();
  uint64_t v19 = v0;
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v9 = type metadata accessor for DialogIdCallback();
  uint64_t v10 = OUTLINED_FUNCTION_35_3();
  *(void *)(v10 + 16) = v8;
  *(void *)(v10 + 24) = v6;
  *(void *)(v10 + 32) = 0x6974736567677573;
  *(void *)(v10 + 40) = 0xEA00000000006E6FLL;
  *(unsigned char *)(v10 + 48) = 1;
  uint64_t v11 = OUTLINED_FUNCTION_35_3();
  *(void *)(v11 + 16) = v8;
  *(void *)(v11 + 24) = v6;
  *(void *)(v11 + 32) = 0x6974736567677573;
  *(void *)(v11 + 40) = 0xEA00000000006E6FLL;
  *(unsigned char *)(v11 + 48) = 0;
  uint64_t v12 = OUTLINED_FUNCTION_35_3();
  *(void *)(v12 + 16) = v8;
  *(void *)(v12 + 24) = v6;
  uint64_t v13 = OUTLINED_FUNCTION_28_2(v12);
  *(unsigned char *)(v13 + 48) = 0;
  v23[3] = v9;
  v23[4] = &protocol witness table for DialogIdCallback;
  v23[0] = v13;
  uint64_t v15 = *(void *)(v4 + 24);
  uint64_t v14 = *(void *)(v4 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v4, v15);
  OUTLINED_FUNCTION_0_2();
  MEMORY[0x1F4188790](v16);
  OUTLINED_FUNCTION_34_2(v17, v19);
  OUTLINED_FUNCTION_47_0();
  v18();
  uint64_t v21 = v11;
  uint64_t v22 = v10;
  swift_bridgeObjectRetain_n();
  swift_retain();
  swift_retain();
  sub_1C64D253C((uint64_t)&v22, (uint64_t)&v21, (uint64_t)v23, v2, 0x6974736567677573, v20, v9, v15, v9, (uint64_t)&protocol witness table for DialogIdCallback, v14, (uint64_t)&protocol witness table for DialogIdCallback);
  __swift_destroy_boxed_opaque_existential_1(v4);
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_39_0();
}

void static ViewCallbacks.createCatViewCallback(dialogId:assetsProvider:invocationActionProvider:)(uint64_t a1@<X2>, uint64_t a2@<X3>, void *a3@<X8>)
{
  uint64_t v6 = type metadata accessor for ViewCallbacksWrapper();
  sub_1C649FA30(a1, (uint64_t)v9);
  sub_1C649FA30(a2, (uint64_t)&v8);
  swift_bridgeObjectRetain();
  ViewCallbacksWrapper.__allocating_init(dialogId:assetsProvider:invocationActionProvider:)();
  a3[3] = v6;
  a3[4] = &protocol witness table for ViewCallbacksWrapper;
  *a3 = v7;
}

void *static ViewCallbacks.createCatViewCallback(dialogId:icon:invocationActionProvider:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  uint64_t v9 = *(void *)a3;
  unint64_t v10 = *(void *)(a3 + 8);
  uint64_t v11 = *(void *)(a3 + 16);
  uint64_t v12 = *(void *)(a3 + 24);
  __int16 v13 = *(_WORD *)(a3 + 32);
  uint64_t v14 = type metadata accessor for ViewCallbacksWrapper();
  *(void *)&long long v17 = v9;
  *((void *)&v17 + 1) = v10;
  uint64_t v18 = v11;
  uint64_t v19 = v12;
  __int16 v20 = v13;
  sub_1C649FA30(a4, (uint64_t)v16);
  swift_bridgeObjectRetain();
  sub_1C64CA534(v9, v10, v11, v12, v13);
  uint64_t result = ViewCallbacksWrapper.__allocating_init(dialogId:icon:invocationActionProvider:)(a1, a2, &v17, (uint64_t)v16);
  a5[3] = v14;
  a5[4] = &protocol witness table for ViewCallbacksWrapper;
  *a5 = result;
  return result;
}

#error "1C64CE9D4: call analysis failed (funcsize=21)"

uint64_t static ViewCallbacks.createCatViewCallback(dialogId:templateDirectory:assetsProvider:invocationActionProvider:spokenDialogId:displayedDialogId:descriptionDialogId:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  return sub_1C64CEA64(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))static ViewCallbacks.createCatViewCallback(dialogId:templateDirectory:assetsProvider:invocationActionProvider:spokenDialogId:displayedDialogId:descriptionDialogId:preambleOverrideDialogId:));
}

uint64_t static ViewCallbacks.createCatViewCallback(dialogCallback:templateDirectory:assetsProvider:invocationActionProvider:spokenDialogId:displayedDialogId:descriptionDialogId:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  return sub_1C64CEA64(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))static ViewCallbacks.createCatViewCallback(dialogCallback:templateDirectory:assetsProvider:invocationActionProvider:spokenDialogId:displayedDialogId:descriptionDialogId:preambleOverrideDialogId:));
}

uint64_t sub_1C64CEA64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t (*a12)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  return a12(a1, a2, a3, a4, a5);
}

void static ViewCallbacks.createCatViewCallback(dialogCallback:templateDirectory:assetsProvider:invocationActionProvider:spokenDialogId:displayedDialogId:descriptionDialogId:preambleOverrideDialogId:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  OUTLINED_FUNCTION_49_0();
  uint64_t v29 = v28;
  uint64_t v31 = v30;
  uint64_t v33 = v32;
  uint64_t v63 = v34;
  uint64_t v64 = v35;
  uint64_t v61 = v36;
  uint64_t v62 = v37;
  OUTLINED_FUNCTION_92_1(a22);
  OUTLINED_FUNCTION_0_2();
  MEMORY[0x1F4188790](v38);
  OUTLINED_FUNCTION_48_2();
  uint64_t v40 = MEMORY[0x1F4188790](v39);
  OUTLINED_FUNCTION_74_0(v40, v41, v42, v43, v44, v45, v46, v47, v57);
  OUTLINED_FUNCTION_7_5();
  v25();
  uint64_t v48 = v31;
  if (!v31)
  {
    uint64_t v48 = v65;
    swift_bridgeObjectRetain();
    uint64_t v33 = v29;
  }
  uint64_t v49 = type metadata accessor for TemplateOverrideCATTemplatingCallback(0);
  uint64_t v59 = OUTLINED_FUNCTION_81_1();
  sub_1C64D0580(v26, v33, v48, 1, v62, v61);
  OUTLINED_FUNCTION_7_5();
  v25();
  uint64_t v58 = OUTLINED_FUNCTION_17_3();
  OUTLINED_FUNCTION_76_1(v27, v29, v65);
  OUTLINED_FUNCTION_7_5();
  v25();
  uint64_t v50 = OUTLINED_FUNCTION_17_3();
  OUTLINED_FUNCTION_76_1(v27, v60, a23);
  v67[13] = v49;
  v67[14] = &off_1F215AC58;
  v67[10] = v50;
  OUTLINED_FUNCTION_7_5();
  v25();
  uint64_t v51 = OUTLINED_FUNCTION_17_3();
  OUTLINED_FUNCTION_76_1(v27, a24, a25);
  v67[8] = v49;
  v67[9] = &off_1F215AC58;
  v67[5] = v51;
  sub_1C649FA30(v63, (uint64_t)v67);
  sub_1C649FA30(v64, (uint64_t)&v66);
  swift_retain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_86_1();
  sub_1C64D2D38(v59, v58, v52, v53, v54, v55);
  uint64_t v56 = type metadata accessor for ViewCallbacksWrapper();
  OUTLINED_FUNCTION_83_1(v56, (uint64_t)&protocol witness table for ViewCallbacksWrapper);
  OUTLINED_FUNCTION_39_0();
}

uint64_t static ViewCallbacks.createBespokeViewCallback(dialogProvider:assetsProvider:invocationActionProvider:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t **a4@<X8>)
{
  sub_1C649FA30(a1, (uint64_t)v17);
  uint64_t v8 = OUTLINED_FUNCTION_46_2();
  sub_1C64A5488(v17, v8 + 16);
  sub_1C649FA30(a1, (uint64_t)v17);
  uint64_t v9 = OUTLINED_FUNCTION_46_2();
  sub_1C64A5488(v17, v9 + 16);
  sub_1C649FA30(a1, (uint64_t)v17);
  uint64_t v10 = OUTLINED_FUNCTION_46_2();
  sub_1C64A5488(v17, v10 + 16);
  sub_1C649FA30(a1, (uint64_t)v16);
  uint64_t v11 = OUTLINED_FUNCTION_46_2();
  sub_1C64A5488(v16, v11 + 16);
  sub_1C649FA30(a3, (uint64_t)v15);
  sub_1C649FA30(a2, (uint64_t)v14);
  uint64_t v12 = sub_1C64D32CC((uint64_t)sub_1C64D3870, v8, (uint64_t)sub_1C64D38B0, v9, (uint64_t)sub_1C64D38B8, v10, (uint64_t)sub_1C64D38C0, v11, v15, (uint64_t)v14);
  uint64_t result = type metadata accessor for ViewCallbacksWrapper();
  a4[3] = (uint64_t *)result;
  a4[4] = (uint64_t *)&protocol witness table for ViewCallbacksWrapper;
  *a4 = v12;
  return result;
}

uint64_t sub_1C64CEEE0(uint64_t a1, void *a2)
{
  uint64_t v3 = a2[3];
  uint64_t v4 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v3);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 8))(a1, v3, v4);
}

uint64_t sub_1C64CEF48(uint64_t a1, void *a2)
{
  uint64_t v3 = a2[3];
  uint64_t v4 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v3);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(a1, v3, v4);
}

uint64_t sub_1C64CEFB0(uint64_t a1, void *a2)
{
  uint64_t v3 = a2[3];
  uint64_t v4 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v3);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 24))(a1, v3, v4);
}

uint64_t sub_1C64CF018(void *a1, void *a2)
{
  uint64_t v3 = a2[3];
  uint64_t v4 = a2[4];
  uint64_t v5 = __swift_project_boxed_opaque_existential_1(a2, v3);
  return DialogCallbacksProvider.getPreambleOverrideCallback(context:)(a1, v3, v4, (uint64_t)v5, v6);
}

void static ViewCallbacks.createCatViewCallback(dialogId:templateDirectory:assetsProvider:invocationActionProvider:spokenDialogId:displayedDialogId:descriptionDialogId:preambleOverrideDialogId:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  OUTLINED_FUNCTION_49_0();
  uint64_t v72 = v27;
  uint64_t v29 = v28;
  uint64_t v70 = v30;
  uint64_t v68 = v31;
  uint64_t v69 = v32;
  uint64_t v34 = v33;
  uint64_t v67 = v35;
  OUTLINED_FUNCTION_92_1(a22);
  OUTLINED_FUNCTION_0_2();
  MEMORY[0x1F4188790](v36);
  OUTLINED_FUNCTION_48_2();
  uint64_t v38 = MEMORY[0x1F4188790](v37);
  OUTLINED_FUNCTION_74_0(v38, v39, v40, v41, v42, v43, v44, v45, v64);
  OUTLINED_FUNCTION_7_5();
  v25();
  uint64_t v46 = v29;
  if (!v29)
  {
    uint64_t v46 = v73;
    swift_bridgeObjectRetain();
    uint64_t v70 = v72;
  }
  uint64_t v47 = type metadata accessor for TemplateOverrideDialogIdCallback(0);
  uint64_t v65 = OUTLINED_FUNCTION_81_1();
  sub_1C64D0BB4(v26, v67, v34, v70, v46, 1);
  OUTLINED_FUNCTION_7_5();
  v25();
  uint64_t v71 = OUTLINED_FUNCTION_17_3();
  uint64_t v48 = OUTLINED_FUNCTION_56_2();
  sub_1C64D0BB4(v48, v49, v50, v72, v73, 0);
  OUTLINED_FUNCTION_7_5();
  v25();
  uint64_t v51 = OUTLINED_FUNCTION_17_3();
  uint64_t v52 = OUTLINED_FUNCTION_56_2();
  sub_1C64D0BB4(v52, v53, v54, v66, a23, 0);
  v75[13] = v47;
  v75[14] = &off_1F215AC40;
  v75[10] = v51;
  OUTLINED_FUNCTION_7_5();
  v25();
  uint64_t v55 = OUTLINED_FUNCTION_17_3();
  uint64_t v56 = OUTLINED_FUNCTION_56_2();
  sub_1C64D0BB4(v56, v57, v58, a24, a25, 0);
  v75[8] = v47;
  v75[9] = &off_1F215AC40;
  v75[5] = v55;
  sub_1C649FA30(v68, (uint64_t)v75);
  sub_1C649FA30(v69, (uint64_t)&v74);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_86_1();
  sub_1C64D2B68(v65, v71, v59, v60, v61, v62);
  uint64_t v63 = type metadata accessor for ViewCallbacksWrapper();
  OUTLINED_FUNCTION_83_1(v63, (uint64_t)&protocol witness table for ViewCallbacksWrapper);
  OUTLINED_FUNCTION_39_0();
}

uint64_t CascadingDialogCallback.__allocating_init(sourceDialogCallback:targetDialogCallback:)(uint64_t a1, long long *a2)
{
  uint64_t v4 = swift_allocObject();
  sub_1C64D37B4(a1, v4 + 16);
  sub_1C64A5488(a2, v4 + 56);
  return v4;
}

uint64_t CascadingDialogCallback.init(sourceDialogCallback:targetDialogCallback:)(uint64_t a1, long long *a2)
{
  sub_1C64D37B4(a1, v2 + 16);
  sub_1C64A5488(a2, v2 + 56);
  return v2;
}

uint64_t sub_1C64CF3C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[13] = a3;
  v4[14] = a4;
  v4[11] = a1;
  v4[12] = a2;
  uint64_t v5 = sub_1C6575F70();
  v4[15] = v5;
  v4[16] = *(void *)(v5 - 8);
  v4[17] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C64CF484, 0, 0);
}

uint64_t sub_1C64CF484()
{
  uint64_t v49 = v0;
  v0[2] = v0[11];
  uint64_t v2 = v0[16];
  uint64_t v1 = v0[17];
  uint64_t v3 = v0[15];
  v0[3] = v0[12];
  sub_1C6575F60();
  sub_1C64D5608();
  uint64_t v4 = sub_1C6576B70();
  unint64_t v6 = v5;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  uint64_t v7 = HIBYTE(v6) & 0xF;
  if ((v6 & 0x2000000000000000) == 0) {
    uint64_t v7 = v4 & 0xFFFFFFFFFFFFLL;
  }
  if (!v7)
  {
    swift_bridgeObjectRelease();
    if (qword_1EBBF8EE0 != -1) {
      swift_once();
    }
    uint64_t v21 = sub_1C65763A0();
    __swift_project_value_buffer(v21, (uint64_t)qword_1EBBF8EC0);
    swift_bridgeObjectRetain_n();
    uint64_t v22 = sub_1C6576380();
    os_log_type_t v23 = sub_1C6576A50();
    BOOL v24 = os_log_type_enabled(v22, v23);
    unint64_t v25 = v0[14];
    if (v24)
    {
      uint64_t v46 = v0[13];
      uint64_t v26 = (uint8_t *)swift_slowAlloc();
      uint64_t v47 = OUTLINED_FUNCTION_97_0();
      *(_DWORD *)uint64_t v26 = 136315138;
      swift_bridgeObjectRetain();
      v0[10] = sub_1C64BCF18(v46, v25, &v47);
      sub_1C6576B40();
      swift_bridgeObjectRelease_n();
      OUTLINED_FUNCTION_84_1();
      _os_log_impl(v27, v28, v29, v30, v26, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_31_5();
      OUTLINED_FUNCTION_31_5();
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    uint64_t v13 = v0[13];
    unint64_t v12 = v0[14];
    swift_bridgeObjectRetain();
    goto LABEL_23;
  }
  swift_bridgeObjectRetain();
  sub_1C64CFC44(v4, v6);
  uint64_t v9 = v8;
  uint64_t result = swift_bridgeObjectRelease();
  if (!v9)
  {
    __break(1u);
    return result;
  }
  char v11 = sub_1C6576510();
  swift_bridgeObjectRelease();
  if ((v11 & 1) == 0)
  {
    uint64_t v47 = v4;
    unint64_t v48 = v6;
    swift_bridgeObjectRetain();
    sub_1C6576620();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_1C6576620();
    swift_bridgeObjectRelease();
    uint64_t v13 = v4;
    unint64_t v12 = v6;
    if (qword_1EBBF8EE0 != -1) {
      swift_once();
    }
    uint64_t v31 = sub_1C65763A0();
    __swift_project_value_buffer(v31, (uint64_t)qword_1EBBF8EC0);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    uint64_t v15 = sub_1C6576380();
    os_log_type_t v32 = sub_1C6576A50();
    BOOL v33 = os_log_type_enabled(v15, v32);
    unint64_t v34 = v0[14];
    if (v33)
    {
      unint64_t v35 = v0[12];
      uint64_t v45 = v0[13];
      uint64_t v43 = v0[11];
      uint64_t v36 = OUTLINED_FUNCTION_97_0();
      uint64_t v47 = swift_slowAlloc();
      *(_DWORD *)uint64_t v36 = 136315650;
      swift_bridgeObjectRetain();
      v0[4] = sub_1C64BCF18(v13, v6, &v47);
      sub_1C6576B40();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v36 + 12) = 2080;
      swift_bridgeObjectRetain();
      v0[5] = sub_1C64BCF18(v43, v35, &v47);
      sub_1C6576B40();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v36 + 22) = 2080;
      swift_bridgeObjectRetain();
      v0[6] = sub_1C64BCF18(v45, v34, &v47);
      sub_1C6576B40();
      swift_bridgeObjectRelease_n();
      OUTLINED_FUNCTION_84_1();
      _os_log_impl(v37, v38, v39, v40, (uint8_t *)v36, 0x20u);
      swift_arrayDestroy();
      goto LABEL_18;
    }
LABEL_21:
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    goto LABEL_22;
  }
  uint64_t v47 = v4;
  unint64_t v48 = v6;
  swift_bridgeObjectRetain();
  sub_1C6576620();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1C6576620();
  swift_bridgeObjectRelease();
  uint64_t v13 = v4;
  unint64_t v12 = v6;
  if (qword_1EBBF8EE0 != -1) {
    swift_once();
  }
  uint64_t v14 = sub_1C65763A0();
  __swift_project_value_buffer(v14, (uint64_t)qword_1EBBF8EC0);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v15 = sub_1C6576380();
  os_log_type_t v16 = sub_1C6576A50();
  BOOL v17 = os_log_type_enabled(v15, v16);
  unint64_t v18 = v0[14];
  if (!v17) {
    goto LABEL_21;
  }
  unint64_t v19 = v0[12];
  uint64_t v44 = v0[13];
  uint64_t v42 = v0[11];
  uint64_t v20 = OUTLINED_FUNCTION_97_0();
  uint64_t v47 = swift_slowAlloc();
  *(_DWORD *)uint64_t v20 = 136315650;
  swift_bridgeObjectRetain();
  v0[7] = sub_1C64BCF18(v13, v6, &v47);
  sub_1C6576B40();
  swift_bridgeObjectRelease_n();
  *(_WORD *)(v20 + 12) = 2080;
  swift_bridgeObjectRetain();
  v0[8] = sub_1C64BCF18(v42, v19, &v47);
  sub_1C6576B40();
  swift_bridgeObjectRelease_n();
  *(_WORD *)(v20 + 22) = 2080;
  swift_bridgeObjectRetain();
  v0[9] = sub_1C64BCF18(v44, v18, &v47);
  sub_1C6576B40();
  swift_bridgeObjectRelease_n();
  _os_log_impl(&dword_1C6494000, v15, v16, "CascadingDialogCallback#combined dialog calculated as: %s from source: \"%s\" and target: \"%s\"", (uint8_t *)v20, 0x20u);
  swift_arrayDestroy();
LABEL_18:
  OUTLINED_FUNCTION_31_5();
  OUTLINED_FUNCTION_31_5();
LABEL_22:

LABEL_23:
  swift_task_dealloc();
  OUTLINED_FUNCTION_96_0();
  return v41(v13, v12);
}

uint64_t sub_1C64CFC44(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (!v2) {
    return 0;
  }
  sub_1C6576600();
  return sub_1C65766D0();
}

uint64_t CascadingDialogCallback.getText(dialog:dialogProperties:environment:viewContext:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[15] = a4;
  v5[16] = v4;
  v5[13] = a2;
  v5[14] = a3;
  v5[12] = a1;
  return OUTLINED_FUNCTION_4_1((uint64_t)sub_1C64CFCE4);
}

uint64_t sub_1C64CFCE4()
{
  OUTLINED_FUNCTION_7_1();
  uint64_t v1 = (void *)v0[16];
  uint64_t v2 = v1[10];
  uint64_t v3 = v1[11];
  __swift_project_boxed_opaque_existential_1(v1 + 7, v2);
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 + 16)
                                                                                     + **(int **)(v3 + 16));
  uint64_t v4 = (void *)swift_task_alloc();
  v0[17] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1C64CFDF0;
  uint64_t v5 = v0[14];
  uint64_t v6 = v0[15];
  uint64_t v8 = v0[12];
  uint64_t v7 = v0[13];
  return v10(v8, v7, v5, v6, v2, v3);
}

uint64_t sub_1C64CFDF0()
{
  OUTLINED_FUNCTION_6_0();
  OUTLINED_FUNCTION_0_0();
  OUTLINED_FUNCTION_3_4();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  *uint64_t v3 = v4;
  *(void *)(v2 + 144) = v5;
  *(void *)(v2 + 152) = v6;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v7 = *(uint64_t (**)(void))(v4 + 8);
    return v7();
  }
  else
  {
    return MEMORY[0x1F4188298](sub_1C64CFEF8, 0, 0);
  }
}

uint64_t sub_1C64CFEF8()
{
  OUTLINED_FUNCTION_7_1();
  sub_1C64D391C(v0[16] + 16, (uint64_t)(v0 + 7));
  if (v0[10])
  {
    uint64_t v1 = (long long *)OUTLINED_FUNCTION_85_1();
    sub_1C64A5488(v1, v2);
    OUTLINED_FUNCTION_69_2();
    uint64_t v3 = (void *)swift_task_alloc();
    v0[20] = v3;
    *uint64_t v3 = v0;
    v3[1] = sub_1C64D004C;
    uint64_t v4 = OUTLINED_FUNCTION_68_2(v0[12]);
    return v5(v4);
  }
  else
  {
    sub_1C64D3984((uint64_t)(v0 + 7));
    uint64_t v7 = v0[18];
    uint64_t v8 = v0[19];
    uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
    return v9(v7, v8);
  }
}

uint64_t sub_1C64D004C()
{
  OUTLINED_FUNCTION_7_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_0_0();
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_3_4();
  *uint64_t v6 = v5;
  uint64_t v7 = *v1;
  OUTLINED_FUNCTION_3_4();
  *uint64_t v8 = v7;
  v5[21] = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_23_4();
    OUTLINED_FUNCTION_43_2();
    return MEMORY[0x1F4188298](v9, v10, v11);
  }
  else
  {
    v5[22] = v3;
    uint64_t v13 = (void *)swift_task_alloc();
    v5[23] = v13;
    *uint64_t v13 = v7;
    v13[1] = sub_1C64D01B4;
    OUTLINED_FUNCTION_43_2();
    return sub_1C64CF3C0(v14, v15, v16, v17);
  }
}

uint64_t sub_1C64D01B4()
{
  OUTLINED_FUNCTION_6_0();
  OUTLINED_FUNCTION_0_0();
  OUTLINED_FUNCTION_3_4();
  *uint64_t v2 = v1;
  uint64_t v3 = *v0;
  OUTLINED_FUNCTION_3_4();
  *uint64_t v4 = v3;
  *(void *)(v7 + 192) = v5;
  *(void *)(v7 + 200) = v6;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4188298](sub_1C64D02C0, 0, 0);
}

uint64_t sub_1C64D02C0()
{
  OUTLINED_FUNCTION_6_0();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 2));
  uint64_t v1 = v0[24];
  uint64_t v2 = v0[25];
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
  return v3(v1, v2);
}

uint64_t sub_1C64D0324()
{
  OUTLINED_FUNCTION_6_0();
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t CascadingDialogCallback.deinit()
{
  sub_1C64D3984(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  return v0;
}

uint64_t CascadingDialogCallback.__deallocating_deinit()
{
  sub_1C64D3984(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);

  return MEMORY[0x1F4186488](v0, 96, 7);
}

uint64_t sub_1C64D03EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA3F0FD0 + dword_1EA3F0FD0);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_1C64D576C;
  return v9(a1, a2, a3);
}

uint64_t sub_1C64D04B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_1C64D576C;
  return CascadingDialogCallback.getText(dialog:dialogProperties:environment:viewContext:)(a1, a2, a3, a4);
}

uint64_t sub_1C64D0574()
{
  return sub_1C64D0B80();
}

uint64_t sub_1C64D0580(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8 = (void *)(v6
                + OBJC_IVAR____TtC18SiriSuggestionsKit37TemplateOverrideCATTemplatingCallback_templatingResultCallback);
  *uint64_t v8 = a5;
  v8[1] = a6;
  uint64_t v9 = (void *)(v6 + OBJC_IVAR____TtC18SiriSuggestionsKit37TemplateOverrideCATTemplatingCallback_sectionId);
  *uint64_t v9 = a2;
  v9[1] = a3;
  sub_1C6576050();
  OUTLINED_FUNCTION_13_2();
  uint64_t v10 = OUTLINED_FUNCTION_79_1();
  v11(v10);
  *(unsigned char *)(v6 + OBJC_IVAR____TtC18SiriSuggestionsKit37TemplateOverrideCATTemplatingCallback_isSpeakable) = a4;
  return v6;
}

uint64_t sub_1C64D0610(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[10] = a4;
  v5[11] = v4;
  v5[8] = a2;
  v5[9] = a3;
  v5[7] = a1;
  OUTLINED_FUNCTION_2_4();
  v5[12] = v6;
  return OUTLINED_FUNCTION_4_1((uint64_t)sub_1C64D0640);
}

uint64_t sub_1C64D0640()
{
  OUTLINED_FUNCTION_45_2();
  OUTLINED_FUNCTION_46_1();
  OUTLINED_FUNCTION_29_2();
  OUTLINED_FUNCTION_16_3((uint64_t)&off_1F215ABF0);
  uint64_t v15 = (char *)v1 + *v1;
  uint64_t v16 = v0;
  swift_retain();
  uint64_t v2 = swift_task_alloc();
  uint64_t v3 = (void *)OUTLINED_FUNCTION_91_1(v2);
  *uint64_t v3 = v4;
  v3[1] = sub_1C64D0728;
  OUTLINED_FUNCTION_6_3();
  OUTLINED_FUNCTION_38_2();
  return v12(v5, v6, v7, v8, v9, v10, v11, v12, v15, v16);
}

uint64_t sub_1C64D0728()
{
  OUTLINED_FUNCTION_7_1();
  OUTLINED_FUNCTION_0_0();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_3_4();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_3_4();
  *uint64_t v6 = v5;
  *(void *)(v3 + 112) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    OUTLINED_FUNCTION_21_4();
    OUTLINED_FUNCTION_43_2();
    __asm { BRAA            X3, X16 }
  }
  OUTLINED_FUNCTION_23_4();
  OUTLINED_FUNCTION_43_2();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t sub_1C64D083C()
{
  return sub_1C64D0D7C((uint64_t)&OBJC_IVAR____TtC18SiriSuggestionsKit37TemplateOverrideCATTemplatingCallback_templateDirectory, MEMORY[0x1E4F276F0]);
}

uint64_t sub_1C64D085C()
{
  return sub_1C64D0E14((uint64_t)&OBJC_IVAR____TtC18SiriSuggestionsKit37TemplateOverrideCATTemplatingCallback_templateDirectory, (uint64_t)&OBJC_IVAR____TtC18SiriSuggestionsKit37TemplateOverrideCATTemplatingCallback_sectionId, &OBJC_IVAR____TtC18SiriSuggestionsKit37TemplateOverrideCATTemplatingCallback_templatingResultCallback, MEMORY[0x1E4FBC8D0]);
}

uint64_t sub_1C64D088C()
{
  return sub_1C64D08BC((uint64_t)&OBJC_IVAR____TtC18SiriSuggestionsKit37TemplateOverrideCATTemplatingCallback_templateDirectory, (uint64_t)&OBJC_IVAR____TtC18SiriSuggestionsKit37TemplateOverrideCATTemplatingCallback_sectionId, &OBJC_IVAR____TtC18SiriSuggestionsKit37TemplateOverrideCATTemplatingCallback_templatingResultCallback, MEMORY[0x1E4FBC8D0]);
}

uint64_t sub_1C64D08BC(uint64_t a1, uint64_t a2, void *a3, void (*a4)(void))
{
  sub_1C64D0E14(a1, a2, a3, a4);
  OUTLINED_FUNCTION_2_4();
  uint64_t v6 = *(unsigned int *)(v5 + 48);
  uint64_t v7 = *(unsigned __int16 *)(v5 + 52);

  return MEMORY[0x1F4186488](v4, v6, v7);
}

uint64_t sub_1C64D08F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA3F0FA8 + dword_1EA3F0FA8);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_1C64D576C;
  return v9(a1, a2, a3);
}

uint64_t sub_1C64D09BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_1C64D576C;
  return sub_1C64D0610(a1, a2, a3, a4);
}

uint64_t sub_1C64D0A7C()
{
  return sub_1C64D0B80();
}

uint64_t sub_1C64D0AA8()
{
  return *(unsigned __int8 *)(*v0
                            + OBJC_IVAR____TtC18SiriSuggestionsKit37TemplateOverrideCATTemplatingCallback_isSpeakable);
}

uint64_t sub_1C64D0ABC()
{
  uint64_t v1 = *(void *)(*v0
                 + OBJC_IVAR____TtC18SiriSuggestionsKit37TemplateOverrideCATTemplatingCallback_templatingResultCallback);
  swift_retain();
  return v1;
}

uint64_t sub_1C64D0AFC()
{
  return sub_1C64D0D7C((uint64_t)&OBJC_IVAR____TtC18SiriSuggestionsKit37TemplateOverrideCATTemplatingCallback_templateDirectory, MEMORY[0x1E4F276F0]);
}

uint64_t sub_1C64D0B3C()
{
  return OUTLINED_FUNCTION_36_0();
}

uint64_t sub_1C64D0B74()
{
  return sub_1C64D0B80();
}

uint64_t sub_1C64D0B80()
{
  return OUTLINED_FUNCTION_36_0();
}

uint64_t sub_1C64D0BB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v8 = (void *)(v6 + OBJC_IVAR____TtC18SiriSuggestionsKit32TemplateOverrideDialogIdCallback_templateId);
  *uint64_t v8 = a2;
  v8[1] = a3;
  uint64_t v9 = (void *)(v6 + OBJC_IVAR____TtC18SiriSuggestionsKit32TemplateOverrideDialogIdCallback_sectionId);
  *uint64_t v9 = a4;
  v9[1] = a5;
  sub_1C6576050();
  OUTLINED_FUNCTION_13_2();
  uint64_t v10 = OUTLINED_FUNCTION_79_1();
  v11(v10);
  *(unsigned char *)(v6 + OBJC_IVAR____TtC18SiriSuggestionsKit32TemplateOverrideDialogIdCallback_isSpeakable) = a6;
  return v6;
}

uint64_t sub_1C64D0C44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[10] = a4;
  v5[11] = v4;
  v5[8] = a2;
  v5[9] = a3;
  v5[7] = a1;
  OUTLINED_FUNCTION_2_4();
  v5[12] = v6;
  return OUTLINED_FUNCTION_4_1((uint64_t)sub_1C64D0C74);
}

uint64_t sub_1C64D0C74()
{
  OUTLINED_FUNCTION_45_2();
  OUTLINED_FUNCTION_46_1();
  OUTLINED_FUNCTION_29_2();
  OUTLINED_FUNCTION_16_3((uint64_t)&off_1F215AB98);
  uint64_t v15 = (char *)v1 + *v1;
  uint64_t v16 = v0;
  swift_retain();
  uint64_t v2 = swift_task_alloc();
  uint64_t v3 = (void *)OUTLINED_FUNCTION_91_1(v2);
  *uint64_t v3 = v4;
  v3[1] = sub_1C64D0728;
  OUTLINED_FUNCTION_6_3();
  OUTLINED_FUNCTION_38_2();
  return v12(v5, v6, v7, v8, v9, v10, v11, v12, v15, v16);
}

uint64_t sub_1C64D0D5C()
{
  return sub_1C64D0D7C((uint64_t)&OBJC_IVAR____TtC18SiriSuggestionsKit32TemplateOverrideDialogIdCallback_templateDirectory, MEMORY[0x1E4F276F0]);
}

uint64_t sub_1C64D0D7C(uint64_t a1, void (*a2)(void))
{
  a2(0);
  OUTLINED_FUNCTION_13_2();
  uint64_t v2 = OUTLINED_FUNCTION_36_0();

  return v3(v2);
}

uint64_t sub_1C64D0DE4()
{
  return sub_1C64D0E14((uint64_t)&OBJC_IVAR____TtC18SiriSuggestionsKit32TemplateOverrideDialogIdCallback_templateDirectory, (uint64_t)&OBJC_IVAR____TtC18SiriSuggestionsKit32TemplateOverrideDialogIdCallback_templateId, &OBJC_IVAR____TtC18SiriSuggestionsKit32TemplateOverrideDialogIdCallback_sectionId, MEMORY[0x1E4FBC898]);
}

uint64_t sub_1C64D0E14(uint64_t a1, uint64_t a2, void *a3, void (*a4)(void))
{
  sub_1C6576050();
  OUTLINED_FUNCTION_13_2();
  OUTLINED_FUNCTION_1();
  v7();
  swift_bridgeObjectRelease();
  a4(*(void *)(v4 + *a3 + 8));
  return v4;
}

uint64_t sub_1C64D0EA8()
{
  return sub_1C64D08BC((uint64_t)&OBJC_IVAR____TtC18SiriSuggestionsKit32TemplateOverrideDialogIdCallback_templateDirectory, (uint64_t)&OBJC_IVAR____TtC18SiriSuggestionsKit32TemplateOverrideDialogIdCallback_templateId, &OBJC_IVAR____TtC18SiriSuggestionsKit32TemplateOverrideDialogIdCallback_sectionId, MEMORY[0x1E4FBC898]);
}

uint64_t sub_1C64D0ED8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA3F0FB8 + dword_1EA3F0FB8);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_1C64D576C;
  return v9(a1, a2, a3);
}

uint64_t sub_1C64D0FA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_1C64D576C;
  return sub_1C64D0C44(a1, a2, a3, a4);
}

uint64_t sub_1C64D1060()
{
  return sub_1C64D0B3C();
}

uint64_t sub_1C64D1084()
{
  return sub_1C64D0D7C((uint64_t)&OBJC_IVAR____TtC18SiriSuggestionsKit32TemplateOverrideDialogIdCallback_templateDirectory, MEMORY[0x1E4F276F0]);
}

uint64_t sub_1C64D10C4()
{
  return sub_1C64D0B80();
}

uint64_t sub_1C64D10F0()
{
  return *(unsigned __int8 *)(*v0 + OBJC_IVAR____TtC18SiriSuggestionsKit32TemplateOverrideDialogIdCallback_isSpeakable);
}

uint64_t DialogIdCallback.isSpeakable.getter()
{
  return *(unsigned __int8 *)(v0 + 48);
}

uint64_t DialogIdCallback.init(templateId:sectionId:isSpeakable:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  *(void *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = a2;
  *(void *)(v5 + 32) = a3;
  *(void *)(v5 + 40) = a4;
  *(unsigned char *)(v5 + 48) = a5;
  return v5;
}

uint64_t DialogIdCallback.getText(dialog:dialogProperties:environment:viewContext:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[10] = a4;
  v5[11] = v4;
  v5[8] = a2;
  v5[9] = a3;
  v5[7] = a1;
  OUTLINED_FUNCTION_2_4();
  v5[12] = v6;
  return OUTLINED_FUNCTION_4_1((uint64_t)sub_1C64D1150);
}

uint64_t sub_1C64D1150()
{
  OUTLINED_FUNCTION_45_2();
  OUTLINED_FUNCTION_46_1();
  OUTLINED_FUNCTION_29_2();
  OUTLINED_FUNCTION_16_3((uint64_t)&protocol witness table for DialogIdCallback);
  uint64_t v15 = (char *)v1 + *v1;
  uint64_t v16 = v0;
  swift_retain();
  uint64_t v2 = swift_task_alloc();
  uint64_t v3 = (void *)OUTLINED_FUNCTION_91_1(v2);
  *uint64_t v3 = v4;
  v3[1] = sub_1C64D1238;
  OUTLINED_FUNCTION_6_3();
  OUTLINED_FUNCTION_38_2();
  return v12(v5, v6, v7, v8, v9, v10, v11, v12, v15, v16);
}

uint64_t sub_1C64D1238()
{
  OUTLINED_FUNCTION_7_1();
  OUTLINED_FUNCTION_0_0();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_3_4();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_3_4();
  *uint64_t v6 = v5;
  *(void *)(v3 + 112) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    OUTLINED_FUNCTION_21_4();
    OUTLINED_FUNCTION_43_2();
    __asm { BRAA            X3, X16 }
  }
  OUTLINED_FUNCTION_23_4();
  OUTLINED_FUNCTION_43_2();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t sub_1C64D134C()
{
  OUTLINED_FUNCTION_6_0();
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t DialogIdCallback.sectionIdentifier.getter()
{
  return OUTLINED_FUNCTION_36_0();
}

uint64_t DialogIdCallback.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t DialogIdCallback.__deallocating_deinit()
{
  DialogIdCallback.deinit();

  return MEMORY[0x1F4186488](v0, 49, 7);
}

uint64_t sub_1C64D1434(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA3F0FC8 + dword_1EA3F0FC8);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_1C64D576C;
  return v9(a1, a2, a3);
}

uint64_t sub_1C64D14FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_1C64D576C;
  return DialogIdCallback.getText(dialog:dialogProperties:environment:viewContext:)(a1, a2, a3, a4);
}

uint64_t sub_1C64D15BC()
{
  return ViewContext.suggestionId.getter();
}

uint64_t sub_1C64D15E0()
{
  return DialogIdCallback.sectionIdentifier.getter();
}

uint64_t sub_1C64D1604()
{
  return DialogIdCallback.isSpeakable.getter() & 1;
}

uint64_t StaticViewProvider.__allocating_init(text:icon:description:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  __int16 v5 = *(_WORD *)(a3 + 32);
  long long v6 = *(_OWORD *)(a3 + 16);
  v8[0] = *(_OWORD *)a3;
  v8[1] = v6;
  __int16 v9 = v5;
  return StaticViewProvider.__allocating_init(text:muText:icon:description:)(a1, a2, 0, 0, (uint64_t)v8, a4, a5);
}

uint64_t StaticViewProvider.__allocating_init(text:muText:icon:description:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  OUTLINED_FUNCTION_70_2();
  uint64_t v9 = swift_allocObject();
  OUTLINED_FUNCTION_90_1();
  OUTLINED_FUNCTION_98_0();
  StaticViewProvider.init(displayedText:spokenText:muText:icon:description:preambleOverride:)(v10, v11, v12, v13, v14, v15, v16, a6, a7, 0, 0);
  swift_bridgeObjectRetain();
  return v9;
}

#error "1C64D177C: call analysis failed (funcsize=36)"

uint64_t StaticViewProvider.init(displayedText:spokenText:muText:icon:description:preambleOverride:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t *a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v14 = *a7;
  uint64_t v15 = a7[1];
  uint64_t v16 = a7[2];
  uint64_t v17 = a7[3];
  __int16 v18 = *((_WORD *)a7 + 16);
  *(void *)(v11 + 40) = &type metadata for StaticDialogCallback;
  *(void *)(v11 + 48) = &protocol witness table for StaticDialogCallback;
  *(void *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = a2;
  *(void *)(v11 + 80) = &type metadata for StaticDialogCallback;
  *(void *)(v11 + 88) = &protocol witness table for StaticDialogCallback;
  *(void *)(v11 + 56) = a3;
  *(void *)(v11 + 64) = a4;
  if (a11)
  {
    uint64_t v20 = &protocol witness table for StaticDialogCallback;
    uint64_t v21 = &type metadata for StaticDialogCallback;
  }
  else
  {
    a10 = 0;
    uint64_t v21 = 0;
    uint64_t v20 = 0;
    *(void *)(v11 + 152) = 0;
  }
  *(void *)(v11 + 136) = a10;
  *(void *)(v11 + 144) = a11;
  *(void *)(v11 + 160) = v21;
  *(void *)(v11 + 168) = v20;
  if (a9)
  {
    *((void *)&v24 + 1) = &type metadata for StaticDialogCallback;
    unint64_t v25 = &protocol witness table for StaticDialogCallback;
    *(void *)&long long v23 = a8;
    *((void *)&v23 + 1) = a9;
  }
  else
  {
    unint64_t v25 = 0;
    long long v23 = 0u;
    long long v24 = 0u;
  }
  sub_1C64D37B4((uint64_t)&v23, v11 + 96);
  *(void *)(v11 + 176) = a5;
  *(void *)(v11 + 184) = a6;
  *(void *)(v11 + 192) = v14;
  *(void *)(v11 + 200) = v15;
  *(void *)(v11 + 208) = v16;
  *(void *)(v11 + 216) = v17;
  *(_WORD *)(v11 + 224) = v18;
  return v11;
}

SiriSuggestionsKit::StaticDialogCallback __swiftcall StaticDialogCallback.init(text:)(SiriSuggestionsKit::StaticDialogCallback text)
{
  *uint64_t v1 = text;
  return text;
}

uint64_t StaticViewProvider.getInvocationAction(dialogProperties:)@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v4 = *(void *)(v1 + 176);
  uint64_t v3 = *(void *)(v1 + 184);
  uint64_t v5 = type metadata accessor for UtteranceAction();
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v4;
  *(void *)(v6 + 24) = v3;
  unint64_t v7 = sub_1C64D39E4();
  a1[3] = v5;
  a1[4] = v7;
  *a1 = v6;

  return swift_bridgeObjectRetain();
}

uint64_t StaticViewProvider.getSpokenDialogCallback(context:)@<X0>(uint64_t a1@<X8>)
{
  return sub_1C649FA30(v1 + 56, a1);
}

uint64_t StaticViewProvider.getDisplayedDialogCallback(context:)@<X0>(uint64_t a1@<X8>)
{
  return sub_1C649FA30(v1 + 16, a1);
}

uint64_t StaticViewProvider.getDescriptionCallback(context:)@<X0>(uint64_t a1@<X8>)
{
  return sub_1C64D391C(v1 + 96, a1);
}

uint64_t StaticViewProvider.getPreambleOverrideCallback(context:deliveryVehicle:)@<X0>(uint64_t a1@<X8>)
{
  return sub_1C64D391C(v1 + 136, a1);
}

uint64_t StaticViewProvider.getInvocationActionProvider(context:)()
{
  return sub_1C64D1960();
}

uint64_t sub_1C64D1960()
{
  OUTLINED_FUNCTION_2_4();
  v2[3] = v3;
  v2[4] = v1;
  *uint64_t v2 = v0;
  return swift_retain();
}

uint64_t StaticViewProvider.getAssets(context:suggestion:)@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[25];
  uint64_t v3 = v1[26];
  uint64_t v4 = v1[27];
  *a1 = v1[24];
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  uint64_t v5 = OUTLINED_FUNCTION_12_1((uint64_t)a1);

  return sub_1C64CA534(v5, v6, v7, v8, v9);
}

uint64_t StaticViewProvider.deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  sub_1C64D3984(v0 + 96);
  sub_1C64D3984(v0 + 136);
  swift_bridgeObjectRelease();
  sub_1C64CAA34(*(void *)(v0 + 192), *(void *)(v0 + 200), *(void *)(v0 + 208), *(void *)(v0 + 216), *(_WORD *)(v0 + 224));
  return v0;
}

uint64_t StaticViewProvider.__deallocating_deinit()
{
  StaticViewProvider.deinit();

  return MEMORY[0x1F4186488](v0, 226, 7);
}

uint64_t sub_1C64D1A54@<X0>(uint64_t *a1@<X8>)
{
  return StaticViewProvider.getInvocationAction(dialogProperties:)(a1);
}

uint64_t sub_1C64D1A78()
{
  return StaticViewProvider.getInvocationActionProvider(context:)();
}

uint64_t sub_1C64D1A9C@<X0>(uint64_t a1@<X8>)
{
  return StaticViewProvider.getSpokenDialogCallback(context:)(a1);
}

uint64_t sub_1C64D1AC0@<X0>(uint64_t a1@<X8>)
{
  return StaticViewProvider.getDisplayedDialogCallback(context:)(a1);
}

uint64_t sub_1C64D1AE4@<X0>(uint64_t a1@<X8>)
{
  return StaticViewProvider.getDescriptionCallback(context:)(a1);
}

uint64_t sub_1C64D1B08@<X0>(uint64_t a1@<X8>)
{
  return StaticViewProvider.getPreambleOverrideCallback(context:deliveryVehicle:)(a1);
}

uint64_t sub_1C64D1B2C@<X0>(void *a1@<X8>)
{
  return StaticViewProvider.getAssets(context:suggestion:)(a1);
}

uint64_t StaticDialogCallback.text.getter()
{
  return OUTLINED_FUNCTION_36_0();
}

uint64_t StaticDialogCallback.getText(dialog:dialogProperties:environment:viewContext:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *v2;
  uint64_t v5 = v2[1];
  v3[8] = a2;
  v3[9] = v4;
  void v3[10] = v5;
  return OUTLINED_FUNCTION_4_1((uint64_t)sub_1C64D1B9C);
}

uint64_t sub_1C64D1B9C()
{
  unint64_t v19 = v0;
  if (qword_1EBBF8EE0 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1C65763A0();
  __swift_project_value_buffer(v1, (uint64_t)qword_1EBBF8EC0);
  uint64_t v2 = OUTLINED_FUNCTION_85_1();
  sub_1C649FA30(v2, v3);
  swift_bridgeObjectRetain_n();
  uint64_t v4 = sub_1C6576380();
  os_log_type_t v5 = sub_1C6576A50();
  BOOL v6 = os_log_type_enabled(v4, v5);
  unint64_t v7 = v0[10];
  if (v6)
  {
    uint64_t v8 = v0[9];
    uint64_t v9 = swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 136315394;
    swift_bridgeObjectRetain();
    v0[7] = sub_1C64BCF18(v8, v7, &v18);
    sub_1C6576B40();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v9 + 12) = 2080;
    uint64_t v11 = v0[5];
    uint64_t v10 = v0[6];
    __swift_project_boxed_opaque_existential_1(v0 + 2, v11);
    (*(void (**)(uint64_t, uint64_t))(v10 + 16))(v11, v10);
    uint64_t v12 = sub_1C6576450();
    unint64_t v14 = v13;
    swift_bridgeObjectRelease();
    v0[7] = sub_1C64BCF18(v12, v14, &v18);
    sub_1C6576B40();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 2));
    _os_log_impl(&dword_1C6494000, v4, v5, "Getting text: %s with properties %s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_31_5();
    OUTLINED_FUNCTION_31_5();
  }
  else
  {
    swift_bridgeObjectRelease_n();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 2));
  }

  uint64_t v17 = (uint64_t (*)(uint64_t))v0[1];
  swift_bridgeObjectRetain();
  uint64_t v15 = OUTLINED_FUNCTION_36_0();
  return v17(v15);
}

uint64_t sub_1C64D1E4C()
{
  uint64_t v3 = (uint64_t (__cdecl *)())((char *)&dword_1EA3F0FC0 + dword_1EA3F0FC0);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1C64D576C;
  return v3();
}

uint64_t sub_1C64D1F20(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1C64D576C;
  return StaticDialogCallback.getText(dialog:dialogProperties:environment:viewContext:)((uint64_t)v4, a2);
}

uint64_t sub_1C64D1FB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[11] = a5;
  v6[12] = a6;
  v6[9] = a3;
  v6[10] = a4;
  v6[7] = a1;
  v6[8] = a2;
  return OUTLINED_FUNCTION_4_1((uint64_t)sub_1C64D1FD4);
}

uint64_t sub_1C64D1FD4()
{
  OUTLINED_FUNCTION_7_1();
  (*(void (**)(void))(v0 + 88))(*(void *)(v0 + 80));
  OUTLINED_FUNCTION_69_2();
  uint64_t v1 = swift_task_alloc();
  uint64_t v2 = (void *)OUTLINED_FUNCTION_91_1(v1);
  *uint64_t v2 = v3;
  v2[1] = sub_1C64D20CC;
  uint64_t v4 = OUTLINED_FUNCTION_68_2(*(void *)(v0 + 56));
  return v5(v4);
}

uint64_t sub_1C64D20CC()
{
  OUTLINED_FUNCTION_7_1();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_0_0();
  uint64_t v7 = v6;
  OUTLINED_FUNCTION_3_4();
  *uint64_t v8 = v7;
  uint64_t v9 = *v1;
  OUTLINED_FUNCTION_3_4();
  *uint64_t v10 = v9;
  v7[14] = v0;
  swift_task_dealloc();
  if (!v0)
  {
    v7[15] = v3;
    v7[16] = v5;
  }
  OUTLINED_FUNCTION_23_4();
  OUTLINED_FUNCTION_43_2();
  return MEMORY[0x1F4188298](v11, v12, v13);
}

uint64_t sub_1C64D21C4()
{
  OUTLINED_FUNCTION_6_0();
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  OUTLINED_FUNCTION_96_0();
  uint64_t v3 = *(void *)(v0 + 120);
  uint64_t v2 = *(void *)(v0 + 128);
  return v1(v2, v3);
}

uint64_t sub_1C64D2224()
{
  uint64_t v3 = (uint64_t (__cdecl *)())((char *)&dword_1EA3F0FF0 + dword_1EA3F0FF0);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1C64D576C;
  return v3();
}

uint64_t sub_1C64D22F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v11 = *v4;
  uint64_t v10 = v4[1];
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v12;
  *uint64_t v12 = v5;
  v12[1] = sub_1C64D576C;
  return sub_1C64D1FB4(a1, a2, a3, a4, v11, v10);
}

unint64_t sub_1C64D23C0()
{
  unint64_t result = qword_1EA3F0E48;
  if (!qword_1EA3F0E48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F0E48);
  }
  return result;
}

unint64_t sub_1C64D240C()
{
  unint64_t result = qword_1EBBF8D58;
  if (!qword_1EBBF8D58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBBF8D58);
  }
  return result;
}

unint64_t sub_1C64D2458()
{
  unint64_t result = qword_1EA3F0E68;
  if (!qword_1EA3F0E68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F0E68);
  }
  return result;
}

unint64_t sub_1C64D24A4()
{
  unint64_t result = qword_1EA3F0E70;
  if (!qword_1EA3F0E70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F0E70);
  }
  return result;
}

unint64_t sub_1C64D24F0()
{
  unint64_t result = qword_1EA3F0E78;
  if (!qword_1EA3F0E78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F0E78);
  }
  return result;
}

uint64_t *sub_1C64D253C(uint64_t a1, uint64_t a2, uint64_t a3, long long *a4, uint64_t a5, uint64_t *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v57 = a6;
  uint64_t v53 = a5;
  uint64_t v55 = a3;
  uint64_t v60 = a12;
  uint64_t v61 = a4;
  uint64_t v59 = a11;
  uint64_t v15 = *(void *)(a8 - 8);
  uint64_t v58 = a10;
  uint64_t v16 = MEMORY[0x1F4188790](a1);
  uint64_t v56 = (char *)&v46 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x1F4188790](v16);
  uint64_t v20 = (char *)&v46 - v19;
  uint64_t v49 = a9;
  uint64_t v50 = (char *)&v46 - v19;
  uint64_t v21 = *(void *)(a9 - 8);
  uint64_t v22 = MEMORY[0x1F4188790](v18);
  uint64_t v54 = (char *)&v46 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = MEMORY[0x1F4188790](v22);
  uint64_t v26 = (char *)&v46 - v25;
  uint64_t v51 = (char *)&v46 - v25;
  uint64_t v27 = MEMORY[0x1F4188790](v24);
  uint64_t v52 = (char *)&v46 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v27);
  uint64_t v30 = (char *)&v46 - v29;
  uint64_t v32 = v31;
  uint64_t v47 = (char *)&v46 - v29;
  uint64_t v48 = v31;
  (*(void (**)(char *))(v31 + 32))((char *)&v46 - v29);
  uint64_t v46 = v21;
  (*(void (**)(char *, uint64_t, uint64_t))(v21 + 32))(v26, a2, a9);
  uint64_t v33 = a8;
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 32))(v20, v53, a8);
  uint64_t v63 = 0;
  memset(v62, 0, sizeof(v62));
  uint64_t v53 = swift_allocObject();
  sub_1C64D37B4(v55, v53 + 16);
  uint64_t v34 = swift_allocObject();
  sub_1C64D37B4((uint64_t)v62, v34 + 16);
  uint64_t v57 = (uint64_t *)swift_allocObject();
  uint64_t v35 = (uint64_t)v52;
  (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v52, v30, a7);
  uint64_t v36 = *(void (**)(char *, char *, uint64_t))(v21 + 16);
  uint64_t v37 = (uint64_t)v54;
  os_log_t v38 = v51;
  uint64_t v39 = v49;
  v36(v54, v51, v49);
  uint64_t v40 = v15;
  uint64_t v41 = *(void (**)(char *, char *, uint64_t))(v15 + 16);
  uint64_t v42 = (uint64_t)v56;
  uint64_t v43 = v50;
  v41(v56, v50, v33);
  uint64_t v44 = sub_1C64D2A28(v35, v37, (uint64_t)sub_1C64D5788, v53, (uint64_t)sub_1C64D5788, v34, v61, v42, v57, a7, v39, v33, v58, v60, v59);
  (*(void (**)(char *, uint64_t))(v40 + 8))(v43, v33);
  (*(void (**)(char *, uint64_t))(v46 + 8))(v38, v39);
  (*(void (**)(char *, uint64_t))(v48 + 8))(v47, a7);
  return v44;
}

void *sub_1C64D2980(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, long long *a7, uint64_t a8, void *a9)
{
  uint64_t v17 = type metadata accessor for DialogIdCallback();
  a9[5] = v17;
  a9[6] = &protocol witness table for DialogIdCallback;
  a9[2] = a1;
  a9[10] = v17;
  a9[11] = &protocol witness table for DialogIdCallback;
  a9[7] = a2;
  a9[24] = type metadata accessor for StaticIconUrlProvider();
  a9[25] = &protocol witness table for StaticIconUrlProvider;
  a9[21] = a8;
  a9[12] = a3;
  a9[13] = a4;
  a9[14] = a5;
  a9[15] = a6;
  sub_1C64A5488(a7, (uint64_t)(a9 + 16));
  return a9;
}

uint64_t *sub_1C64D2A28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, long long *a7, uint64_t a8, uint64_t *a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  a9[5] = a10;
  a9[6] = a13;
  boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm(a9 + 2);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a10 - 8) + 32))(boxed_opaque_existential_1Tm, a1, a10);
  a9[10] = a11;
  a9[11] = a14;
  uint64_t v20 = __swift_allocate_boxed_opaque_existential_1Tm(a9 + 7);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a11 - 8) + 32))(v20, a2, a11);
  a9[24] = a12;
  a9[25] = a15;
  uint64_t v21 = __swift_allocate_boxed_opaque_existential_1Tm(a9 + 21);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a12 - 8) + 32))(v21, a8, a12);
  a9[12] = a3;
  a9[13] = a4;
  a9[14] = a5;
  a9[15] = a6;
  sub_1C64A5488(a7, (uint64_t)(a9 + 16));
  return a9;
}

uint64_t *sub_1C64D2B68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, long long *a5, uint64_t a6)
{
  uint64_t v12 = swift_allocObject();
  sub_1C64D37B4(a3, v12 + 16);
  uint64_t v13 = swift_allocObject();
  sub_1C64D37B4(a4, v13 + 16);
  type metadata accessor for ViewCallbacksWrapper();
  uint64_t v14 = (uint64_t *)swift_allocObject();
  uint64_t v15 = *(void *)(a6 + 24);
  uint64_t v16 = *(void *)(a6 + 32);
  uint64_t v17 = __swift_mutable_project_boxed_opaque_existential_1(a6, v15);
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v24 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v20 + 16))(v19);
  uint64_t v24 = a2;
  uint64_t v25 = a1;
  uint64_t v21 = type metadata accessor for TemplateOverrideDialogIdCallback(0);
  uint64_t v22 = sub_1C64D2A28((uint64_t)&v25, (uint64_t)&v24, (uint64_t)sub_1C64D5788, v12, (uint64_t)sub_1C64D5788, v13, a5, (uint64_t)v19, v14, v21, v21, v15, (uint64_t)&off_1F215AC40, (uint64_t)&off_1F215AC40, v16);
  __swift_destroy_boxed_opaque_existential_1(a6);
  return v22;
}

uint64_t *sub_1C64D2D38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, long long *a5, uint64_t a6)
{
  uint64_t v12 = swift_allocObject();
  sub_1C64D37B4(a3, v12 + 16);
  uint64_t v13 = swift_allocObject();
  sub_1C64D37B4(a4, v13 + 16);
  type metadata accessor for ViewCallbacksWrapper();
  uint64_t v14 = (uint64_t *)swift_allocObject();
  uint64_t v15 = *(void *)(a6 + 24);
  uint64_t v16 = *(void *)(a6 + 32);
  uint64_t v17 = __swift_mutable_project_boxed_opaque_existential_1(a6, v15);
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v24 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v20 + 16))(v19);
  uint64_t v24 = a2;
  uint64_t v25 = a1;
  uint64_t v21 = type metadata accessor for TemplateOverrideCATTemplatingCallback(0);
  uint64_t v22 = sub_1C64D2A28((uint64_t)&v25, (uint64_t)&v24, (uint64_t)sub_1C64D5788, v12, (uint64_t)sub_1C64D5788, v13, a5, (uint64_t)v19, v14, v21, v21, v15, (uint64_t)&off_1F215AC58, (uint64_t)&off_1F215AC58, v16);
  __swift_destroy_boxed_opaque_existential_1(a6);
  return v22;
}

uint64_t *sub_1C64D2F08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, long long *a5, uint64_t a6, uint64_t *a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v43 = a7;
  uint64_t v47 = a5;
  uint64_t v48 = a6;
  uint64_t v46 = a10;
  uint64_t v15 = *(void *)(a9 - 8);
  uint64_t v45 = a11;
  uint64_t v16 = MEMORY[0x1F4188790](a1);
  uint64_t v44 = (char *)&v39 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x1F4188790](v16);
  uint64_t v20 = (char *)&v39 - v19;
  uint64_t v41 = (char *)&v39 - v19;
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = MEMORY[0x1F4188790](v18);
  uint64_t v25 = (char *)&v39 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v23);
  uint64_t v27 = (char *)&v39 - v26;
  (*(void (**)(char *))(v22 + 32))((char *)&v39 - v26);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 32))(v20, a2, a9);
  uint64_t v42 = swift_allocObject();
  sub_1C64D37B4(a3, v42 + 16);
  uint64_t v40 = swift_allocObject();
  sub_1C64D37B4(a4, v40 + 16);
  uint64_t v43 = (uint64_t *)swift_allocObject();
  uint64_t v28 = *(void *)(v48 + 24);
  uint64_t v39 = *(void *)(v48 + 32);
  uint64_t v29 = __swift_mutable_project_boxed_opaque_existential_1(v48, v28);
  MEMORY[0x1F4188790](v29);
  uint64_t v31 = (char *)&v39 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v32 + 16))(v31);
  uint64_t v33 = (uint64_t)v25;
  uint64_t v34 = a8;
  (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v25, v27, a8);
  uint64_t v35 = (uint64_t)v44;
  uint64_t v36 = v41;
  (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v44, v41, a9);
  uint64_t v37 = sub_1C64D2A28(v33, v35, (uint64_t)sub_1C64D5788, v42, (uint64_t)sub_1C64D5788, v40, v47, (uint64_t)v31, v43, v34, a9, v28, v46, v45, v39);
  __swift_destroy_boxed_opaque_existential_1(v48);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v36, a9);
  (*(void (**)(char *, uint64_t))(v22 + 8))(v27, v34);
  return v37;
}

uint64_t *sub_1C64D32CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, long long *a9, uint64_t a10)
{
  uint64_t v25 = a7;
  uint64_t v26 = a8;
  uint64_t v23 = a5;
  uint64_t v24 = a6;
  type metadata accessor for ViewCallbacksWrapper();
  uint64_t v14 = (uint64_t *)swift_allocObject();
  uint64_t v15 = *(void *)(a10 + 24);
  uint64_t v16 = *(void *)(a10 + 32);
  uint64_t v17 = __swift_mutable_project_boxed_opaque_existential_1(a10, v15);
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v23 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v20 + 16))(v19);
  v28[0] = a1;
  v28[1] = a2;
  v27[0] = a3;
  v27[1] = a4;
  uint64_t v21 = sub_1C64D2A28((uint64_t)v28, (uint64_t)v27, v23, v24, v25, v26, a9, (uint64_t)v19, v14, (uint64_t)&unk_1F215AE18, (uint64_t)&unk_1F215AE18, v15, (uint64_t)&off_1F215AE30, (uint64_t)&off_1F215AE30, v16);
  __swift_destroy_boxed_opaque_existential_1(a10);
  return v21;
}

uint64_t *sub_1C64D3434(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, long long *a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v42 = a7;
  uint64_t v43 = a8;
  uint64_t v40 = a5;
  uint64_t v41 = a6;
  uint64_t v38 = a3;
  uint64_t v39 = a4;
  uint64_t v36 = a13;
  uint64_t v37 = a12;
  uint64_t v14 = *(void *)(a11 - 8);
  uint64_t v15 = MEMORY[0x1F4188790](a1);
  uint64_t v17 = (char *)&v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x1F4188790](v15);
  uint64_t v20 = (char *)&v34 - v19;
  uint64_t v21 = *(void *)(a10 - 8);
  uint64_t v22 = MEMORY[0x1F4188790](v18);
  uint64_t v24 = (char *)&v34 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v22);
  uint64_t v26 = (char *)&v34 - v25;
  (*(void (**)(char *))(v21 + 32))((char *)&v34 - v25);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 32))(v20, a2, a11);
  uint64_t v35 = (uint64_t *)swift_allocObject();
  uint64_t v27 = *(void *)(v43 + 24);
  uint64_t v34 = *(void *)(v43 + 32);
  uint64_t v28 = __swift_mutable_project_boxed_opaque_existential_1(v43, v27);
  MEMORY[0x1F4188790](v28);
  uint64_t v30 = (char *)&v34 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v31 + 16))(v30);
  (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v24, v26, a10);
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v17, v20, a11);
  uint64_t v32 = sub_1C64D2A28((uint64_t)v24, (uint64_t)v17, v38, v39, v40, v41, v42, (uint64_t)v30, v35, a10, a11, v27, v37, v36, v34);
  __swift_destroy_boxed_opaque_existential_1(v43);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v20, a11);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v26, a10);
  return v32;
}

uint64_t type metadata accessor for DialogIdCallback()
{
  return self;
}

uint64_t type metadata accessor for StaticIconUrlProvider()
{
  return self;
}

uint64_t sub_1C64D37B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF7FB8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C64D3820@<X0>(uint64_t a1@<X8>)
{
  return sub_1C64D391C(v1 + 16, a1);
}

uint64_t type metadata accessor for ViewCallbacksWrapper()
{
  return self;
}

uint64_t type metadata accessor for TemplateOverrideCATTemplatingCallback(uint64_t a1)
{
  return sub_1C64D38E8(a1, (uint64_t *)&unk_1EBBFAEE0);
}

uint64_t sub_1C64D3870(uint64_t a1)
{
  return sub_1C64CEEE0(a1, (void *)(v1 + 16));
}

uint64_t sub_1C64D3878()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);

  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t sub_1C64D38B0(uint64_t a1)
{
  return sub_1C64CEF48(a1, (void *)(v1 + 16));
}

uint64_t sub_1C64D38B8(uint64_t a1)
{
  return sub_1C64CEFB0(a1, (void *)(v1 + 16));
}

uint64_t sub_1C64D38C0(void *a1)
{
  return sub_1C64CF018(a1, (void *)(v1 + 16));
}

uint64_t type metadata accessor for TemplateOverrideDialogIdCallback(uint64_t a1)
{
  return sub_1C64D38E8(a1, (uint64_t *)&unk_1EBBFACB8);
}

uint64_t sub_1C64D38E8(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C64D391C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF7FB8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C64D3984(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF7FB8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1C64D39E4()
{
  unint64_t result = qword_1EBBF8DA8;
  if (!qword_1EBBF8DA8)
  {
    type metadata accessor for UtteranceAction();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBBF8DA8);
  }
  return result;
}

uint64_t sub_1C64D3A34@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1C64CA01C();
  *a1 = result;
  return result;
}

uint64_t dispatch thunk of DialogCallback.getText(dialog:dialogProperties:environment:)()
{
  OUTLINED_FUNCTION_45_2();
  OUTLINED_FUNCTION_46_1();
  OUTLINED_FUNCTION_70_2();
  uint64_t v12 = *(void *)(v1 + 8) + **(int **)(v1 + 8);
  uint64_t v13 = v1 + 8;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1C64D579C;
  OUTLINED_FUNCTION_41_2();
  OUTLINED_FUNCTION_38_2();
  return v9(v3, v4, v5, v6, v7, v8, v9, v10, v12, v13);
}

uint64_t dispatch thunk of DialogCallback.getText(dialog:dialogProperties:environment:viewContext:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a6 + 16)
                                                                                     + **(int **)(a6 + 16));
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v13;
  *uint64_t v13 = v6;
  v13[1] = sub_1C64D3C70;
  return v15(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_1C64D3C70(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_0_0();
  uint64_t v5 = *v2;
  OUTLINED_FUNCTION_3_4();
  *uint64_t v6 = v5;
  swift_task_dealloc();
  OUTLINED_FUNCTION_96_0();
  return v7(a1, a2);
}

uint64_t dispatch thunk of InvocationActionProvider.getInvocationAction(dialogProperties:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of DialogCallbacksProvider.getSpokenDialogCallback(context:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of DialogCallbacksProvider.getDisplayedDialogCallback(context:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of DialogCallbacksProvider.getDescriptionCallback(context:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of DialogCallbacksProvider.getPreambleOverrideCallback(context:deliveryVehicle:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t sub_1C64D3DB4()
{
  return type metadata accessor for ViewContext(0);
}

uint64_t sub_1C64D3DBC()
{
  uint64_t result = sub_1C6576210();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for ViewContext(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ViewContext);
}

uint64_t dispatch thunk of ViewContext.contextMap.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of ViewContext.contextMap.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of ViewContext.contextMap.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of ViewContext.__allocating_init(suggestionId:locale:deliveryVehicle:)()
{
  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t dispatch thunk of AssetProvider.getAssets(context:suggestion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t destroy for Assets(uint64_t result)
{
  uint64_t v1 = result;
  unsigned int v2 = *(unsigned __int16 *)(result + 32);
  if (v2 >> 8 <= 0xFE) {
    uint64_t result = sub_1C64CAA48(*(void *)result, *(void *)(result + 8), *(void *)(result + 16), *(void *)(result + 24), v2, SBYTE1(v2));
  }
  unsigned int v3 = *(unsigned __int16 *)(v1 + 72);
  if (v3 >> 8 <= 0xFE)
  {
    uint64_t v4 = *(void *)(v1 + 40);
    unint64_t v5 = *(void *)(v1 + 48);
    uint64_t v6 = *(void *)(v1 + 56);
    uint64_t v7 = *(void *)(v1 + 64);
    return sub_1C64CAA48(v4, v5, v6, v7, v3, SBYTE1(v3));
  }
  return result;
}

uint64_t initializeWithCopy for Assets(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = *(unsigned __int16 *)(a2 + 32);
  if (v4 >> 8 <= 0xFE)
  {
    uint64_t v6 = *(void *)a2;
    unint64_t v7 = *(void *)(a2 + 8);
    uint64_t v8 = *(void *)(a2 + 16);
    uint64_t v9 = *(void *)(a2 + 24);
    sub_1C64CA548(*(void *)a2, v7, v8, v9, v4, SBYTE1(v4));
    *(void *)a1 = v6;
    *(void *)(a1 + 8) = v7;
    *(void *)(a1 + 16) = v8;
    *(void *)(a1 + 24) = v9;
    *(_WORD *)(a1 + 32) = v4;
  }
  else
  {
    long long v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
    *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  }
  unsigned int v10 = *(unsigned __int16 *)(a2 + 72);
  if (v10 >> 8 <= 0xFE)
  {
    uint64_t v12 = *(void *)(a2 + 40);
    unint64_t v13 = *(void *)(a2 + 48);
    uint64_t v15 = *(void *)(a2 + 56);
    uint64_t v14 = *(void *)(a2 + 64);
    sub_1C64CA548(v12, v13, v15, v14, v10, SBYTE1(v10));
    *(void *)(a1 + 40) = v12;
    *(void *)(a1 + 48) = v13;
    *(void *)(a1 + 56) = v15;
    *(void *)(a1 + 64) = v14;
    *(_WORD *)(a1 + 72) = v10;
  }
  else
  {
    long long v11 = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 56) = v11;
    *(_WORD *)(a1 + 72) = *(_WORD *)(a2 + 72);
  }
  return a1;
}

uint64_t assignWithCopy for Assets(uint64_t a1, long long *a2)
{
  unsigned int v4 = *((unsigned __int16 *)a2 + 16);
  unsigned int v5 = v4 >> 8;
  if (*(unsigned __int8 *)(a1 + 33) == 255)
  {
    if (v5 <= 0xFE)
    {
      uint64_t v10 = *(void *)a2;
      unint64_t v11 = *((void *)a2 + 1);
      uint64_t v12 = *((void *)a2 + 2);
      uint64_t v13 = *((void *)a2 + 3);
      sub_1C64CA548(*(void *)a2, v11, v12, v13, v4, SBYTE1(v4));
      *(void *)a1 = v10;
      *(void *)(a1 + 8) = v11;
      *(void *)(a1 + 16) = v12;
      *(void *)(a1 + 24) = v13;
      *(_WORD *)(a1 + 32) = v4;
    }
    else
    {
      long long v6 = *a2;
      long long v7 = a2[1];
      *(_WORD *)(a1 + 32) = *((_WORD *)a2 + 16);
      *(_OWORD *)a1 = v6;
      *(_OWORD *)(a1 + 16) = v7;
    }
  }
  else if (v5 <= 0xFE)
  {
    uint64_t v14 = *(void *)a2;
    unint64_t v15 = *((void *)a2 + 1);
    uint64_t v16 = *((void *)a2 + 2);
    uint64_t v17 = *((void *)a2 + 3);
    sub_1C64CA548(*(void *)a2, v15, v16, v17, v4, SBYTE1(v4));
    uint64_t v18 = *(void *)a1;
    unint64_t v19 = *(void *)(a1 + 8);
    uint64_t v20 = *(void *)(a1 + 16);
    uint64_t v21 = *(void *)(a1 + 24);
    *(void *)a1 = v14;
    *(void *)(a1 + 8) = v15;
    *(void *)(a1 + 16) = v16;
    *(void *)(a1 + 24) = v17;
    unsigned __int8 v22 = *(unsigned char *)(a1 + 32);
    *(unsigned char *)(a1 + 32) = v4;
    char v23 = *(unsigned char *)(a1 + 33);
    *(unsigned char *)(a1 + 33) = BYTE1(v4);
    sub_1C64CAA48(v18, v19, v20, v21, v22, v23);
  }
  else
  {
    sub_1C64D4274(a1);
    __int16 v8 = *((_WORD *)a2 + 16);
    long long v9 = a2[1];
    *(_OWORD *)a1 = *a2;
    *(_OWORD *)(a1 + 16) = v9;
    *(_WORD *)(a1 + 32) = v8;
  }
  uint64_t v24 = (long long *)(a1 + 40);
  uint64_t v25 = (long long *)((char *)a2 + 40);
  unsigned int v26 = *((unsigned __int16 *)a2 + 36);
  unsigned int v27 = v26 >> 8;
  if (*(unsigned __int8 *)(a1 + 73) == 255)
  {
    if (v27 <= 0xFE)
    {
      uint64_t v32 = *((void *)a2 + 5);
      unint64_t v33 = *((void *)a2 + 6);
      uint64_t v35 = *((void *)a2 + 7);
      uint64_t v34 = *((void *)a2 + 8);
      sub_1C64CA548(v32, v33, v35, v34, v26, SBYTE1(v26));
      *(void *)(a1 + 40) = v32;
      *(void *)(a1 + 48) = v33;
      *(void *)(a1 + 56) = v35;
      *(void *)(a1 + 64) = v34;
      *(_WORD *)(a1 + 72) = v26;
    }
    else
    {
      long long v28 = *v25;
      long long v29 = *(long long *)((char *)a2 + 56);
      *(_WORD *)(a1 + 72) = *((_WORD *)a2 + 36);
      *uint64_t v24 = v28;
      *(_OWORD *)(a1 + 56) = v29;
    }
  }
  else if (v27 <= 0xFE)
  {
    uint64_t v36 = *((void *)a2 + 5);
    unint64_t v37 = *((void *)a2 + 6);
    uint64_t v39 = *((void *)a2 + 7);
    uint64_t v38 = *((void *)a2 + 8);
    sub_1C64CA548(v36, v37, v39, v38, v26, SBYTE1(v26));
    uint64_t v40 = *(void *)(a1 + 40);
    unint64_t v41 = *(void *)(a1 + 48);
    uint64_t v42 = *(void *)(a1 + 56);
    uint64_t v43 = *(void *)(a1 + 64);
    *(void *)(a1 + 40) = v36;
    *(void *)(a1 + 48) = v37;
    *(void *)(a1 + 56) = v39;
    *(void *)(a1 + 64) = v38;
    unsigned __int8 v44 = *(unsigned char *)(a1 + 72);
    *(unsigned char *)(a1 + 72) = v26;
    char v45 = *(unsigned char *)(a1 + 73);
    *(unsigned char *)(a1 + 73) = BYTE1(v26);
    sub_1C64CAA48(v40, v41, v42, v43, v44, v45);
  }
  else
  {
    sub_1C64D4274(a1 + 40);
    __int16 v30 = *((_WORD *)a2 + 36);
    long long v31 = *(long long *)((char *)a2 + 56);
    *uint64_t v24 = *v25;
    *(_OWORD *)(a1 + 56) = v31;
    *(_WORD *)(a1 + 72) = v30;
  }
  return a1;
}

uint64_t sub_1C64D4274(uint64_t a1)
{
  return a1;
}

void *__swift_memcpy74_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x4AuLL);
}

uint64_t assignWithTake for Assets(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = *(unsigned __int16 *)(a1 + 32);
  if (v4 >> 8 > 0xFE) {
    goto LABEL_4;
  }
  unsigned int v5 = *(unsigned __int16 *)(a2 + 32);
  if (v5 >> 8 > 0xFE)
  {
    sub_1C64D4274(a1);
LABEL_4:
    long long v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
    goto LABEL_6;
  }
  uint64_t v7 = *(void *)a1;
  unint64_t v8 = *(void *)(a1 + 8);
  uint64_t v9 = *(void *)(a1 + 16);
  uint64_t v10 = *(void *)(a1 + 24);
  long long v11 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v11;
  *(_WORD *)(a1 + 32) = v5;
  sub_1C64CAA48(v7, v8, v9, v10, v4, SBYTE1(v4));
LABEL_6:
  unsigned int v12 = *(unsigned __int16 *)(a1 + 72);
  if (v12 >> 8 <= 0xFE)
  {
    unsigned int v13 = *(unsigned __int16 *)(a2 + 72);
    if (v13 >> 8 <= 0xFE)
    {
      uint64_t v15 = *(void *)(a1 + 40);
      unint64_t v16 = *(void *)(a1 + 48);
      uint64_t v17 = *(void *)(a1 + 56);
      uint64_t v18 = *(void *)(a1 + 64);
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
      *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
      *(_WORD *)(a1 + 72) = v13;
      sub_1C64CAA48(v15, v16, v17, v18, v12, SBYTE1(v12));
      return a1;
    }
    sub_1C64D4274(a1 + 40);
  }
  long long v14 = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = v14;
  *(_WORD *)(a1 + 72) = *(_WORD *)(a2 + 72);
  return a1;
}

uint64_t getEnumTagSinglePayload for Assets(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFC && *(unsigned char *)(a1 + 74))
    {
      int v2 = *(_DWORD *)a1 + 251;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 33);
      if (v3 <= 3) {
        int v2 = -1;
      }
      else {
        int v2 = (v3 ^ 0xFF) - 1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Assets(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 72) = 0;
    *(void *)uint64_t result = a2 - 252;
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 74) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 74) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 33) = ~(_BYTE)a2;
    }
  }
  return result;
}

void type metadata accessor for Assets()
{
}

uint64_t destroy for Image(uint64_t a1)
{
  return sub_1C64CAA48(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(unsigned char *)(a1 + 32), *(unsigned char *)(a1 + 33));
}

uint64_t initializeWithCopy for Image(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  unint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  char v7 = *(unsigned char *)(a2 + 33);
  unsigned __int8 v8 = *(unsigned char *)(a2 + 32);
  sub_1C64CA548(*(void *)a2, v4, v5, v6, v8, v7);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = v8;
  *(unsigned char *)(a1 + 33) = v7;
  return a1;
}

uint64_t assignWithCopy for Image(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  unint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  char v7 = *(unsigned char *)(a2 + 33);
  unsigned __int8 v8 = *(unsigned char *)(a2 + 32);
  sub_1C64CA548(*(void *)a2, v4, v5, v6, v8, v7);
  uint64_t v9 = *(void *)a1;
  unint64_t v10 = *(void *)(a1 + 8);
  uint64_t v11 = *(void *)(a1 + 16);
  uint64_t v12 = *(void *)(a1 + 24);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  unsigned __int8 v13 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v8;
  char v14 = *(unsigned char *)(a1 + 33);
  *(unsigned char *)(a1 + 33) = v7;
  sub_1C64CAA48(v9, v10, v11, v12, v13, v14);
  return a1;
}

__n128 __swift_memcpy34_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for Image(uint64_t a1, uint64_t a2)
{
  __int16 v3 = *(_WORD *)(a2 + 32);
  uint64_t v4 = *(void *)a1;
  unint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  long long v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
  char v9 = *(unsigned char *)(a1 + 33);
  unsigned __int8 v10 = *(unsigned char *)(a1 + 32);
  *(_WORD *)(a1 + 32) = v3;
  sub_1C64CAA48(v4, v6, v5, v7, v10, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for Image(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFD && *(unsigned char *)(a1 + 34))
    {
      int v2 = *(_DWORD *)a1 + 252;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 33);
      if (v3 <= 3) {
        int v2 = -1;
      }
      else {
        int v2 = v3 ^ 0xFF;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Image(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(_WORD *)(result + 32) = 0;
    *(void *)__n128 result = a2 - 253;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 34) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 34) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 33) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1C64D464C(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 33);
}

uint64_t sub_1C64D4654(uint64_t result, char a2)
{
  *(unsigned char *)(result + 33) = a2;
  return result;
}

void type metadata accessor for Image()
{
}

uint64_t destroy for Color()
{
  return sub_1C64CAB74();
}

uint64_t _s18SiriSuggestionsKit5ColorOwCP_0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  char v5 = *((unsigned char *)a2 + 16);
  OUTLINED_FUNCTION_31_4();
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for Color(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  char v5 = *((unsigned char *)a2 + 16);
  OUTLINED_FUNCTION_31_4();
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  sub_1C64CAB74();
  return a1;
}

uint64_t assignWithTake for Color(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v3;
  sub_1C64CAB74();
  return a1;
}

uint64_t getEnumTagSinglePayload for Color(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFF && *(unsigned char *)(a1 + 17))
    {
      int v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
      if (v3 <= 1) {
        int v2 = -1;
      }
      else {
        int v2 = v3 ^ 0xFF;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Color(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1C64D47EC(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_1C64D47F4(uint64_t result, char a2)
{
  *(unsigned char *)(result + 16) = a2 & 1;
  return result;
}

void type metadata accessor for Color()
{
}

uint64_t dispatch thunk of ViewProvider.getInvocationActionProvider(context:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t method lookup function for ViewCallbacksWrapper(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ViewCallbacksWrapper);
}

uint64_t dispatch thunk of ViewCallbacksWrapper.__allocating_init(delegateSpokenDialogCallback:delegateDisplayedDialogCallback:delegateDescriptionDialogCallbackProvider:delegatedPreambleOverrideCallbackProvider:delegateInvocationActionProvider:assetsProvider:)()
{
  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t method lookup function for StaticIconUrlProvider(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for StaticIconUrlProvider);
}

uint64_t dispatch thunk of StaticIconUrlProvider.__allocating_init(icon:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

void type metadata accessor for ViewCallbacks()
{
}

uint64_t type metadata accessor for CascadingDialogCallback()
{
  return self;
}

uint64_t method lookup function for CascadingDialogCallback(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for CascadingDialogCallback);
}

uint64_t dispatch thunk of CascadingDialogCallback.__allocating_init(sourceDialogCallback:targetDialogCallback:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t sub_1C64D48D4()
{
  return type metadata accessor for TemplateOverrideCATTemplatingCallback(0);
}

uint64_t sub_1C64D48DC()
{
  return sub_1C64D4910();
}

uint64_t sub_1C64D48F4()
{
  return type metadata accessor for TemplateOverrideDialogIdCallback(0);
}

uint64_t sub_1C64D48FC()
{
  return sub_1C64D4910();
}

uint64_t sub_1C64D4910()
{
  uint64_t result = sub_1C6576050();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for DialogIdCallback(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for DialogIdCallback);
}

uint64_t dispatch thunk of DialogIdCallback.__allocating_init(templateId:sectionId:isSpeakable:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t type metadata accessor for StaticViewProvider()
{
  return self;
}

uint64_t method lookup function for StaticViewProvider(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for StaticViewProvider);
}

uint64_t dispatch thunk of StaticViewProvider.__allocating_init(displayedText:spokenText:muText:icon:description:preambleOverride:)()
{
  return (*(uint64_t (**)(void))(v0 + 128))();
}

void type metadata accessor for StaticDialogCallback()
{
}

ValueMetadata *type metadata accessor for Color.CodingKeys()
{
  return &type metadata for Color.CodingKeys;
}

ValueMetadata *type metadata accessor for Color.RgbaCodingKeys()
{
  return &type metadata for Color.RgbaCodingKeys;
}

ValueMetadata *type metadata accessor for Color.NameCodingKeys()
{
  return &type metadata for Color.NameCodingKeys;
}

unsigned char *storeEnumTagSinglePayload for Image.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C64D4B58);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Image.CodingKeys()
{
  return &type metadata for Image.CodingKeys;
}

ValueMetadata *type metadata accessor for Image.DataCodingKeys()
{
  return &type metadata for Image.DataCodingKeys;
}

ValueMetadata *type metadata accessor for Image.SymbolCodingKeys()
{
  return &type metadata for Image.SymbolCodingKeys;
}

ValueMetadata *type metadata accessor for Image.AppIconCodingKeys()
{
  return &type metadata for Image.AppIconCodingKeys;
}

unsigned char *_s18SiriSuggestionsKit5ColorO14RgbaCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C64D4C5CLL);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for Image.GraphicIconCodingKeys()
{
  return &type metadata for Image.GraphicIconCodingKeys;
}

unsigned char *_s18SiriSuggestionsKit5ColorO10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C64D4D60);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Assets.CodingKeys()
{
  return &type metadata for Assets.CodingKeys;
}

unint64_t sub_1C64D4D9C()
{
  unint64_t result = qword_1EA3F0F08;
  if (!qword_1EA3F0F08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F0F08);
  }
  return result;
}

unint64_t sub_1C64D4DEC()
{
  unint64_t result = qword_1EA3F0F10;
  if (!qword_1EA3F0F10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F0F10);
  }
  return result;
}

unint64_t sub_1C64D4E3C()
{
  unint64_t result = qword_1EA3F0F18;
  if (!qword_1EA3F0F18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F0F18);
  }
  return result;
}

unint64_t sub_1C64D4E8C()
{
  unint64_t result = qword_1EA3F0F20;
  if (!qword_1EA3F0F20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F0F20);
  }
  return result;
}

unint64_t sub_1C64D4EDC()
{
  unint64_t result = qword_1EA3F0F28;
  if (!qword_1EA3F0F28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F0F28);
  }
  return result;
}

unint64_t sub_1C64D4F2C()
{
  unint64_t result = qword_1EA3F0F30;
  if (!qword_1EA3F0F30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F0F30);
  }
  return result;
}

unint64_t sub_1C64D4F7C()
{
  unint64_t result = qword_1EA3F0F38;
  if (!qword_1EA3F0F38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F0F38);
  }
  return result;
}

unint64_t sub_1C64D4FCC()
{
  unint64_t result = qword_1EA3F0F40;
  if (!qword_1EA3F0F40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F0F40);
  }
  return result;
}

unint64_t sub_1C64D501C()
{
  unint64_t result = qword_1EA3F0F48;
  if (!qword_1EA3F0F48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F0F48);
  }
  return result;
}

unint64_t sub_1C64D506C()
{
  unint64_t result = qword_1EA3F0F70;
  if (!qword_1EA3F0F70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F0F70);
  }
  return result;
}

unint64_t sub_1C64D50BC()
{
  unint64_t result = qword_1EA3F0F78;
  if (!qword_1EA3F0F78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F0F78);
  }
  return result;
}

unint64_t sub_1C64D510C()
{
  unint64_t result = qword_1EA3F0F80;
  if (!qword_1EA3F0F80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F0F80);
  }
  return result;
}

unint64_t sub_1C64D515C()
{
  unint64_t result = qword_1EA3F0F88;
  if (!qword_1EA3F0F88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F0F88);
  }
  return result;
}

unint64_t sub_1C64D51AC()
{
  unint64_t result = qword_1EA3F0F90;
  if (!qword_1EA3F0F90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F0F90);
  }
  return result;
}

unint64_t sub_1C64D51FC()
{
  unint64_t result = qword_1EA3F0F98;
  if (!qword_1EA3F0F98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1EA3F0F98);
  }
  return result;
}

unint64_t sub_1C64D524C()
{
  unint64_t result = qword_1EBBFBAA8;
  if (!qword_1EBBFBAA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBBFBAA8);
  }
  return result;
}

unint64_t sub_1C64D529C()
{
  unint64_t result = qword_1EBBFBAA0;
  if (!qword_1EBBFBAA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBBFBAA0);
  }
  return result;
}

unint64_t sub_1C64D52EC()
{
  unint64_t result = qword_1EBBFBAB8;
  if (!qword_1EBBFBAB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBBFBAB8);
  }
  return result;
}

unint64_t sub_1C64D533C()
{
  unint64_t result = qword_1EBBFBAB0;
  if (!qword_1EBBFBAB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBBFBAB0);
  }
  return result;
}

unint64_t sub_1C64D538C()
{
  unint64_t result = qword_1EBBFBAD0;
  if (!qword_1EBBFBAD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBBFBAD0);
  }
  return result;
}

unint64_t sub_1C64D53DC()
{
  unint64_t result = qword_1EBBFBAC8;
  if (!qword_1EBBFBAC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBBFBAC8);
  }
  return result;
}

unint64_t sub_1C64D542C()
{
  unint64_t result = qword_1EBBFC1E8;
  if (!qword_1EBBFC1E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBBFC1E8);
  }
  return result;
}

unint64_t sub_1C64D547C()
{
  unint64_t result = qword_1EBBFBAD8;
  if (!qword_1EBBFBAD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBBFBAD8);
  }
  return result;
}

unint64_t sub_1C64D54CC()
{
  unint64_t result = qword_1EBBFBA98;
  if (!qword_1EBBFBA98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBBFBA98);
  }
  return result;
}

unint64_t sub_1C64D551C()
{
  unint64_t result = qword_1EBBFBA90;
  if (!qword_1EBBFBA90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBBFBA90);
  }
  return result;
}

unint64_t sub_1C64D556C()
{
  unint64_t result = qword_1EBBFBDC0;
  if (!qword_1EBBFBDC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBBFBDC0);
  }
  return result;
}

unint64_t sub_1C64D55BC()
{
  unint64_t result = qword_1EBBFBDB8;
  if (!qword_1EBBFBDB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBBFBDB8);
  }
  return result;
}

unint64_t sub_1C64D5608()
{
  unint64_t result = qword_1EBBFC488;
  if (!qword_1EBBFC488)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBBFC488);
  }
  return result;
}

uint64_t objectdestroyTm()
{
  if (*(void *)(v0 + 40)) {
    __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  }

  return MEMORY[0x1F4186498](v0, 56, 7);
}

void *initializeBufferWithCopyOfBuffer for ThirdPartyHomeScreenAppPicker(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  return a1;
}

uint64_t destroy for ThirdPartyHomeScreenAppPicker()
{
  return swift_release();
}

void *assignWithCopy for ThirdPartyHomeScreenAppPicker(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for ThirdPartyHomeScreenAppPicker(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

void type metadata accessor for DelegateDialogCallback()
{
}

uint64_t OUTLINED_FUNCTION_4_4@<X0>(unsigned __int8 a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  sub_1C64CA65C(a7, v8, a1);
  sub_1C64CA65C(v10, v7, v9);
  sub_1C64CA65C(a7, v8, a1);
  return sub_1C64CA548(v12, v11, v10, v7, v9, 1);
}

uint64_t OUTLINED_FUNCTION_6_3()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_11_4(uint64_t a1, unint64_t a2)
{
  return sub_1C64CA548(a1, a2, v4, v3, v2, 1);
}

uint64_t OUTLINED_FUNCTION_12_1@<X0>(uint64_t a1@<X8>)
{
  *(_WORD *)(a1 + 32) = v2;
  *(void *)(a1 + 40) = v1;
  *(void *)(a1 + 48) = v3;
  *(void *)(a1 + 56) = v4;
  *(void *)(a1 + 64) = v5;
  *(_WORD *)(a1 + 72) = v2;
  sub_1C64CA534(v1, v3, v4, v5, v2);
  return v1;
}

uint64_t OUTLINED_FUNCTION_16_3@<X0>(uint64_t a1@<X8>)
{
  v3[5] = v4;
  v3[6] = a1;
  void v3[2] = v1;
  return v2 + 8;
}

uint64_t OUTLINED_FUNCTION_17_3()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_18_4()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_21_4()
{
  __swift_destroy_boxed_opaque_existential_1(v1 + 16);
  return v0;
}

uint64_t OUTLINED_FUNCTION_22_4()
{
  return sub_1C6576E80();
}

uint64_t OUTLINED_FUNCTION_26_5(uint64_t a1)
{
  return sub_1C64CAA48(a1, v4, v3, v2, v1, 1);
}

uint64_t OUTLINED_FUNCTION_28_2(uint64_t result)
{
  *(void *)(result + 32) = 0x7470697263736564;
  *(void *)(result + 40) = 0xEB000000006E6F69;
  return result;
}

void *OUTLINED_FUNCTION_29_2()
{
  return __swift_project_boxed_opaque_existential_1(*(void **)(v0 + 56), *(void *)(*(void *)(v0 + 56) + 24));
}

void OUTLINED_FUNCTION_31_5()
{
  JUMPOUT(0x1C87A0050);
}

uint64_t OUTLINED_FUNCTION_32_4()
{
  return sub_1C6576EE0();
}

uint64_t OUTLINED_FUNCTION_33_4()
{
  return sub_1C6576F70();
}

char *OUTLINED_FUNCTION_34_2@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  return (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t OUTLINED_FUNCTION_35_3()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_36_0()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_37_1()
{
  sub_1C64CA65C(v4, v0, v3);
  sub_1C64CA65C(v5, v2, v1);
  return v5;
}

uint64_t OUTLINED_FUNCTION_39_2()
{
  return sub_1C6577090();
}

uint64_t OUTLINED_FUNCTION_40_2()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_41_2()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_46_2()
{
  return swift_allocObject();
}

__n128 OUTLINED_FUNCTION_47_2()
{
  return *(__n128 *)v0;
}

uint64_t OUTLINED_FUNCTION_49_2()
{
  return sub_1C64CA548(v0, v5, v4, v3, v2, v1);
}

uint64_t OUTLINED_FUNCTION_50_2()
{
  return sub_1C64CAA48(v0, v5, v4, v3, v2, v1);
}

uint64_t OUTLINED_FUNCTION_51_1()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_52_2()
{
  return sub_1C6577090();
}

uint64_t OUTLINED_FUNCTION_53_2()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_54_2@<X0>(uint64_t result@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, __int16 a5@<W4>, uint64_t a6@<X8>)
{
  *(_WORD *)(a6 + 32) = a5;
  return sub_1C64CA534(result, a2, a3, a4, a5);
}

uint64_t OUTLINED_FUNCTION_55_3()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_56_2()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_57_2()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_58_2()
{
  return v0 - 120;
}

uint64_t OUTLINED_FUNCTION_62_1(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  sub_1C64CAB5C(a1, a2, a3);
  sub_1C64CAB5C(v5, v4, v3);
  return v5;
}

uint64_t OUTLINED_FUNCTION_63_2()
{
  return sub_1C64CAA34(v0, v4, v3, v2, v1);
}

uint64_t OUTLINED_FUNCTION_64_1()
{
  sub_1C64CA65C(v4, v2, v0);
  return sub_1C64CA65C(v5, v3, v1);
}

uint64_t OUTLINED_FUNCTION_66_2()
{
  return sub_1C6576E80();
}

uint64_t OUTLINED_FUNCTION_67_2()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_68_2@<X0>(uint64_t a1@<X8>)
{
  return a1;
}

uint64_t OUTLINED_FUNCTION_69_2()
{
  uint64_t v2 = *(void *)(v1 + 48);
  __swift_project_boxed_opaque_existential_1(v0, *(void *)(v1 + 40));
  return v2 + 16;
}

uint64_t OUTLINED_FUNCTION_72_1()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_73_0()
{
  return v0;
}

char *OUTLINED_FUNCTION_74_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return (char *)&a9 - v9;
}

uint64_t OUTLINED_FUNCTION_76_1(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C64D0580(a1, a2, a3, 0, v3, v4);
}

uint64_t OUTLINED_FUNCTION_79_1()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_80_1()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_81_1()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_82_1()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_83_1@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void **)(v2 - 256);
  v4[3] = result;
  v4[4] = a2;
  *uint64_t v4 = v3;
  return result;
}

uint64_t OUTLINED_FUNCTION_85_1()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_87_1()
{
  return sub_1C6576F70();
}

uint64_t OUTLINED_FUNCTION_90_1()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_91_1(uint64_t result)
{
  *(void *)(v1 + 104) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_92_1@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 - 256) = a1;
  *(void *)(v2 - 256) = *(void *)(v2 + 16);
  return sub_1C6576050();
}

uint64_t OUTLINED_FUNCTION_93_1()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_94_1()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_97_0()
{
  return swift_slowAlloc();
}

uint64_t sub_1C64D606C@<X0>(void *a1@<X8>)
{
  a1[3] = *v1;
  *a1 = v1;
  return swift_retain();
}

uint64_t sub_1C64D60A0@<X0>(void *a1@<X8>)
{
  a1[3] = type metadata accessor for DelegatingResolver();
  *a1 = v1;

  return swift_retain();
}

uint64_t Wrappable.getRoot()@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  a2[3] = a1;
  boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm(a2);
  uint64_t v5 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a1 - 8) + 16);

  return v5(boxed_opaque_existential_1Tm, v2, a1);
}

uint64_t dispatch thunk of Wrappable.getRoot()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_1C64D6164@<X0>(void *a1@<X8>)
{
  return sub_1C64D606C(a1);
}

uint64_t sub_1C64D6188@<X0>(void *a1@<X8>)
{
  return sub_1C64D60A0(a1);
}

uint64_t OSFeatureFlagProvider.__allocating_init()()
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = sub_1C64D61E8;
  *(void *)(result + 24) = 0;
  return result;
}

uint64_t OSFeatureFlagProvider.isSiriHelpEnabled(device:)(uint64_t a1)
{
  if (!a1) {
    goto LABEL_13;
  }
  swift_retain();
  if ((sub_1C65762C0() & 1) == 0)
  {
    if (sub_1C65762D0())
    {
      unint64_t v16 = &type metadata for SiriSuggestionsFeatureFlags;
      unint64_t v1 = sub_1C64D6348();
      unint64_t v17 = v1;
      char v9 = 9;
      goto LABEL_6;
    }
    if (sub_1C65762B0() & 1) != 0 || (sub_1C65762A0())
    {
      swift_release();
      char v12 = 1;
      return v12 & 1;
    }
    if (sub_1C6576290())
    {
      unint64_t v16 = &type metadata for SiriSuggestionsFeatureFlags;
      unint64_t v1 = sub_1C64D6348();
      unint64_t v17 = v1;
      char v9 = 10;
      goto LABEL_6;
    }
    swift_release();
LABEL_13:
    char v12 = 0;
    return v12 & 1;
  }
  unint64_t v16 = &type metadata for SiriSuggestionsFeatureFlags;
  unint64_t v1 = sub_1C64D6348();
  unint64_t v17 = v1;
  char v9 = 8;
LABEL_6:
  uint64_t v10 = OUTLINED_FUNCTION_0_5(v1, v2, v3, v4, v5, v6, v7, v8, v14, v9);
  char v12 = v11(v10);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
  swift_release();
  return v12 & 1;
}

uint64_t OSFeatureFlagProvider.isEnabled(flag:)(void *a1)
{
  uint64_t v2 = a1[3];
  uint64_t v3 = a1[4];
  uint64_t v4 = __swift_project_boxed_opaque_existential_1(a1, v2);

  return sub_1C64D6C0C((uint64_t)v4, v1, v2, v3);
}

unint64_t sub_1C64D6348()
{
  unint64_t result = qword_1EBBFC440;
  if (!qword_1EBBFC440)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBBFC440);
  }
  return result;
}

uint64_t OSFeatureFlagProvider.isContinuersEnabled(device:)(uint64_t a1)
{
  if (!a1) {
    goto LABEL_15;
  }
  swift_retain();
  if ((sub_1C65762D0() & 1) == 0)
  {
    if (sub_1C65762C0())
    {
      unint64_t v16 = &type metadata for SiriSuggestionsFeatureFlags;
      unint64_t v1 = sub_1C64D6348();
      unint64_t v17 = v1;
      char v9 = 2;
      goto LABEL_10;
    }
    if (sub_1C65762A0())
    {
      unint64_t v16 = &type metadata for SiriSuggestionsFeatureFlags;
      unint64_t v1 = sub_1C64D6348();
      unint64_t v17 = v1;
      char v9 = 4;
      goto LABEL_10;
    }
    if (sub_1C65762B0())
    {
      unint64_t v16 = &type metadata for SiriSuggestionsFeatureFlags;
      unint64_t v1 = sub_1C64D6348();
      unint64_t v17 = v1;
      char v9 = 1;
      goto LABEL_10;
    }
    if (sub_1C6576290())
    {
      char v12 = OSFeatureFlagProvider.isSAESuggestionsEnabled()();
      goto LABEL_11;
    }
    swift_release();
LABEL_15:
    char v12 = 0;
    return v12 & 1;
  }
  unint64_t v16 = &type metadata for SiriSuggestionsFeatureFlags;
  unint64_t v1 = sub_1C64D6348();
  unint64_t v17 = v1;
  char v9 = 3;
LABEL_10:
  uint64_t v10 = OUTLINED_FUNCTION_0_5(v1, v2, v3, v4, v5, v6, v7, v8, v14, v9);
  char v12 = v11(v10);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
LABEL_11:
  swift_release();
  return v12 & 1;
}

Swift::Bool __swiftcall OSFeatureFlagProvider.isSAESuggestionsEnabled()()
{
  unsigned int v0 = objc_msgSend(self, sel_isSAEEnabled);
  if (v0)
  {
    LOBYTE(v0) = OSFeatureFlagProvider.isSAESuggestionsFeatureFlagEnabled()();
  }
  return v0;
}

Swift::Bool __swiftcall OSFeatureFlagProvider.isInAppEnabled()()
{
  return sub_1C64D6750(6);
}

Swift::Bool __swiftcall OSFeatureFlagProvider.isSAESuggestionsFeatureFlagEnabled()()
{
  return sub_1C64D6750(21);
}

Swift::Bool __swiftcall OSFeatureFlagProvider.isThirdPartyEnabled()()
{
  return sub_1C64D6750(11);
}

Swift::Bool __swiftcall OSFeatureFlagProvider.isExperimentServiceEnabled()()
{
  return sub_1C64D6750(12);
}

Swift::Bool __swiftcall OSFeatureFlagProvider.isCrossDomainHintEnabled()()
{
  return sub_1C64D6750(15);
}

Swift::Bool __swiftcall OSFeatureFlagProvider.isFeatureAnnouncementEnabled()()
{
  uint64_t v14 = &type metadata for SiriSuggestionsFeatureFlags;
  unint64_t v15 = sub_1C64D6348();
  uint64_t v7 = OUTLINED_FUNCTION_0_5(v15, v0, v1, v2, v3, v4, v5, v6, v12, 13);
  char v9 = v8(v7);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
  return (v9 & 1) != 0 && !OSFeatureFlagProvider.isSAEUIEnabled()();
}

Swift::Bool __swiftcall OSFeatureFlagProvider.isSAEUIEnabled()()
{
  if (objc_msgSend(self, sel_isSAEEnabled))
  {
    unint64_t v13 = sub_1C64D6348();
    uint64_t v8 = OUTLINED_FUNCTION_0_5(v13, v1, v2, v3, v4, v5, v6, v7, v12, 28);
    uint64_t v10 = v9(v8);
    OUTLINED_FUNCTION_1_4(v10);
  }
  else
  {
    char v0 = 0;
  }
  return v0 & 1;
}

Swift::Bool __swiftcall OSFeatureFlagProvider.isPanIndiaFeatureAnnouncementEnabled()()
{
  if (OSFeatureFlagProvider.isFeatureAnnouncementEnabled()())
  {
    unint64_t v13 = sub_1C64D6348();
    uint64_t v8 = OUTLINED_FUNCTION_0_5(v13, v1, v2, v3, v4, v5, v6, v7, v12, 14);
    uint64_t v10 = v9(v8);
    OUTLINED_FUNCTION_1_4(v10);
  }
  else
  {
    char v0 = 0;
  }
  return v0 & 1;
}

Swift::Bool __swiftcall OSFeatureFlagProvider.isFeatureExtractionEnabled()()
{
  return sub_1C64D6750(20);
}

Swift::Bool __swiftcall OSFeatureFlagProvider.isVoxHintEnabled()()
{
  return sub_1C64D6750(16);
}

Swift::Bool __swiftcall OSFeatureFlagProvider.isHabitualActionsEnabled()()
{
  return sub_1C64D6750(23);
}

Swift::Bool __swiftcall OSFeatureFlagProvider.isContextualActionsEnabled()()
{
  return sub_1C64D6750(24);
}

Swift::Bool __swiftcall OSFeatureFlagProvider.isCurrentAppViewActionsEnabled()()
{
  return sub_1C64D6750(25);
}

Swift::Bool __swiftcall OSFeatureFlagProvider.isSMARTEnabled()()
{
  unsigned int v26 = &type metadata for SiriSuggestionsFeatureFlags;
  unint64_t v1 = sub_1C64D6348();
  unint64_t v27 = v1;
  v25[0] = 19;
  uint64_t v2 = *(uint64_t (**)(char *))(v0 + 16);
  uint64_t v10 = OUTLINED_FUNCTION_0_5(v1, v3, v4, v5, v6, v7, v8, v9, v23, 19);
  char v11 = v2(v10);
  uint64_t v12 = __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
  if (v11)
  {
    unsigned int v26 = &type metadata for SiriSuggestionsFeatureFlags;
    unint64_t v27 = v1;
    uint64_t v20 = OUTLINED_FUNCTION_0_5(v12, v13, v14, v15, v16, v17, v18, v19, v24, 18);
    uint64_t v21 = v2(v20);
    OUTLINED_FUNCTION_1_4(v21);
  }
  else
  {
    LOBYTE(v1) = 0;
  }
  return v1 & 1;
}

Swift::Bool __swiftcall OSFeatureFlagProvider.isFirstUseSuggestionsEnabled()()
{
  return sub_1C64D6750(26);
}

Swift::Bool __swiftcall OSFeatureFlagProvider.isHandCraftedAppIntentSuggestionsEnabled()()
{
  return sub_1C64D6750(27);
}

uint64_t sub_1C64D6750(char a1)
{
  unint64_t v14 = sub_1C64D6348();
  uint64_t v9 = OUTLINED_FUNCTION_0_5(v14, v2, v3, v4, v5, v6, v7, v8, v13, a1);
  uint64_t v11 = v10(v9);
  OUTLINED_FUNCTION_1_4(v11);
  return a1 & 1;
}

uint64_t OSFeatureFlagProvider.deinit()
{
  swift_release();
  return v0;
}

uint64_t OSFeatureFlagProvider.__deallocating_deinit()
{
  swift_release();

  return MEMORY[0x1F4186488](v0, 32, 7);
}

uint64_t sub_1C64D67FC(void *a1)
{
  uint64_t v2 = *v1;
  uint64_t v3 = a1[3];
  uint64_t v4 = a1[4];
  uint64_t v5 = __swift_project_boxed_opaque_existential_1(a1, v3);

  return sub_1C64D6C0C((uint64_t)v5, v2, v3, v4);
}

uint64_t sub_1C64D684C(uint64_t a1)
{
  return OSFeatureFlagProvider.isSiriHelpEnabled(device:)(a1) & 1;
}

uint64_t sub_1C64D6874(uint64_t a1)
{
  return OSFeatureFlagProvider.isContinuersEnabled(device:)(a1) & 1;
}

BOOL sub_1C64D689C()
{
  return OSFeatureFlagProvider.isInAppEnabled()();
}

BOOL sub_1C64D68C4()
{
  return OSFeatureFlagProvider.isThirdPartyEnabled()();
}

BOOL sub_1C64D68EC()
{
  return OSFeatureFlagProvider.isExperimentServiceEnabled()();
}

BOOL sub_1C64D6914()
{
  return OSFeatureFlagProvider.isCrossDomainHintEnabled()();
}

BOOL sub_1C64D693C()
{
  return OSFeatureFlagProvider.isFeatureAnnouncementEnabled()();
}

BOOL sub_1C64D6964()
{
  return OSFeatureFlagProvider.isPanIndiaFeatureAnnouncementEnabled()();
}

BOOL sub_1C64D698C()
{
  return OSFeatureFlagProvider.isVoxHintEnabled()();
}

BOOL sub_1C64D69B4()
{
  return OSFeatureFlagProvider.isHabitualActionsEnabled()();
}

BOOL sub_1C64D69DC()
{
  return OSFeatureFlagProvider.isCurrentAppViewActionsEnabled()();
}

BOOL sub_1C64D6A04()
{
  return OSFeatureFlagProvider.isFeatureExtractionEnabled()();
}

BOOL sub_1C64D6A2C()
{
  return OSFeatureFlagProvider.isSAESuggestionsEnabled()();
}

BOOL sub_1C64D6A54()
{
  return OSFeatureFlagProvider.isSMARTEnabled()();
}

BOOL sub_1C64D6A7C()
{
  return OSFeatureFlagProvider.isFirstUseSuggestionsEnabled()();
}

BOOL sub_1C64D6AA4()
{
  return OSFeatureFlagProvider.isHandCraftedAppIntentSuggestionsEnabled()();
}

BOOL sub_1C64D6ACC()
{
  return OSFeatureFlagProvider.isSAEUIEnabled()();
}

uint64_t StaticFeatureFlagProvider.isEnabled(flag:)()
{
  return *v0;
}

uint64_t StaticFeatureFlagProvider.isSiriHelpEnabled(device:)()
{
  return *(unsigned __int8 *)(v0 + 1);
}

uint64_t StaticFeatureFlagProvider.isContinuersEnabled(device:)()
{
  return *(unsigned __int8 *)(v0 + 2);
}

Swift::Bool __swiftcall StaticFeatureFlagProvider.isInAppEnabled()()
{
  return *(unsigned char *)(v0 + 3);
}

Swift::Bool __swiftcall StaticFeatureFlagProvider.isThirdPartyEnabled()()
{
  return *(unsigned char *)(v0 + 4);
}

Swift::Bool __swiftcall StaticFeatureFlagProvider.isExperimentServiceEnabled()()
{
  return *(unsigned char *)(v0 + 5);
}

Swift::Bool __swiftcall StaticFeatureFlagProvider.isFeatureAnnouncementEnabled()()
{
  return *(unsigned char *)(v0 + 6);
}

Swift::Bool __swiftcall StaticFeatureFlagProvider.isPanIndiaFeatureAnnouncementEnabled()()
{
  return *(unsigned char *)(v0 + 7);
}

Swift::Bool __swiftcall StaticFeatureFlagProvider.isCrossDomainHintEnabled()()
{
  return *(unsigned char *)(v0 + 8);
}

Swift::Bool __swiftcall StaticFeatureFlagProvider.isVoxHintEnabled()()
{
  return *(unsigned char *)(v0 + 9);
}

Swift::Bool __swiftcall StaticFeatureFlagProvider.isFeatureExtractionEnabled()()
{
  return *(unsigned char *)(v0 + 10);
}

Swift::Bool __swiftcall StaticFeatureFlagProvider.isSAESuggestionsEnabled()()
{
  return *(unsigned char *)(v0 + 11);
}

Swift::Bool __swiftcall StaticFeatureFlagProvider.isHabitualActionsEnabled()()
{
  return *(unsigned char *)(v0 + 12);
}

Swift::Bool __swiftcall StaticFeatureFlagProvider.isContextualActionsEnabled()()
{
  return *(unsigned char *)(v0 + 13);
}

Swift::Bool __swiftcall StaticFeatureFlagProvider.isCurrentAppViewActionsEnabled()()
{
  return *(unsigned char *)(v0 + 16);
}

Swift::Bool __swiftcall StaticFeatureFlagProvider.isSMARTEnabled()()
{
  return *(unsigned char *)(v0 + 14) & *(unsigned char *)(v0 + 15) & 1;
}

Swift::Bool __swiftcall StaticFeatureFlagProvider.isFirstUseSuggestionsEnabled()()
{
  return *(unsigned char *)(v0 + 17);
}

Swift::Bool __swiftcall StaticFeatureFlagProvider.isHandCraftedAppIntentSuggestionsEnabled()()
{
  return *(unsigned char *)(v0 + 18);
}

Swift::Bool __swiftcall StaticFeatureFlagProvider.isSAEUIEnabled()()
{
  return *(unsigned char *)(v0 + 19);
}

double static StaticFeatureFlagProvider.create(enabled:)@<D0>(char a1@<W0>, uint64_t a2@<X8>)
{
  *(unsigned char *)a2 = a1;
  *(void *)(a2 + 1) = 0x101010101010101;
  *(void *)&double result = 16843008;
  *(void *)(a2 + 9) = 16843008;
  *(_WORD *)(a2 + 17) = 1;
  *(unsigned char *)(a2 + 19) = 0;
  return result;
}

uint64_t sub_1C64D6C0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a3;
  v9[3] = a3;
  v9[4] = a4;
  boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm(v9);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(boxed_opaque_existential_1Tm, a1, v4);
  LOBYTE(v4) = (*(uint64_t (**)(uint64_t *))(a2 + 16))(v9);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
  return v4 & 1;
}

uint64_t dispatch thunk of FeatureFlagProvider.isEnabled(flag:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of FeatureFlagProvider.isSiriHelpEnabled(device:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of FeatureFlagProvider.isContinuersEnabled(device:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of FeatureFlagProvider.isInAppEnabled()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of FeatureFlagProvider.isThirdPartyEnabled()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of FeatureFlagProvider.isExperimentServiceEnabled()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of FeatureFlagProvider.isCrossDomainHintEnabled()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of FeatureFlagProvider.isFeatureAnnouncementEnabled()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of FeatureFlagProvider.isPanIndiaFeatureAnnouncementEnabled()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of FeatureFlagProvider.isVoxHintEnabled()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t dispatch thunk of FeatureFlagProvider.isHabitualActionsEnabled()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 88))();
}

uint64_t dispatch thunk of FeatureFlagProvider.isCurrentAppViewActionsEnabled()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 96))();
}

uint64_t dispatch thunk of FeatureFlagProvider.isFeatureExtractionEnabled()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 104))();
}

uint64_t dispatch thunk of FeatureFlagProvider.isSAESuggestionsEnabled()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 112))();
}

uint64_t dispatch thunk of FeatureFlagProvider.isSMARTEnabled()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 120))();
}

uint64_t dispatch thunk of FeatureFlagProvider.isFirstUseSuggestionsEnabled()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 128))();
}

uint64_t dispatch thunk of FeatureFlagProvider.isHandCraftedAppIntentSuggestionsEnabled()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 136))();
}

uint64_t dispatch thunk of FeatureFlagProvider.isSAEUIEnabled()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 144))();
}

uint64_t type metadata accessor for OSFeatureFlagProvider()
{
  return self;
}

uint64_t method lookup function for OSFeatureFlagProvider(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for OSFeatureFlagProvider);
}

__n128 __swift_memcpy20_1(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u32[0] = a2[1].n128_u32[0];
  *a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for StaticFeatureFlagProvider(unsigned __int8 *a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFF && a1[20])
    {
      int v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      unsigned int v3 = *a1;
      BOOL v4 = v3 >= 2;
      int v2 = (v3 + 2147483646) & 0x7FFFFFFF;
      if (!v4) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for StaticFeatureFlagProvider(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_DWORD *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 20) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 20) = 0;
    }
    if (a2) {
      *(unsigned char *)__n128 result = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StaticFeatureFlagProvider()
{
  return &type metadata for StaticFeatureFlagProvider;
}

char *OUTLINED_FUNCTION_0_5(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  return &a10;
}

uint64_t OUTLINED_FUNCTION_1_4(uint64_t a1, ...)
{
  va_start(va, a1);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)va);
}

uint64_t AppEntityDetails.signalValue.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  uint64_t v3 = v1[2];
  uint64_t v4 = v1[3];
  *a1 = *v1;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t AppEntityDetails.bundleId.getter()
{
  return OUTLINED_FUNCTION_36_0();
}

uint64_t AppEntityDetails.appEntityType.getter()
{
  return OUTLINED_FUNCTION_36_0();
}

void AppEntityDetails.appEntityCount.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 32);
}

SiriSuggestionsKit::AppEntityDetails::AppEntityCount_optional __swiftcall AppEntityDetails.AppEntityCount.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  uint64_t v3 = sub_1C6576E60();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t AppEntityDetails.AppEntityCount.rawValue.getter()
{
  if (*v0) {
    return 0x656C7069746C756DLL;
  }
  else {
    return 0x656C676E6973;
  }
}

uint64_t sub_1C64D7060(char *a1, char *a2)
{
  return sub_1C6498704(*a1, *a2);
}

uint64_t sub_1C64D706C()
{
  return sub_1C655AD24();
}

uint64_t sub_1C64D7074()
{
  return sub_1C649ACCC();
}

uint64_t sub_1C64D707C()
{
  return sub_1C64EBD48();
}

SiriSuggestionsKit::AppEntityDetails::AppEntityCount_optional sub_1C64D7084(Swift::String *a1)
{
  return AppEntityDetails.AppEntityCount.init(rawValue:)(*a1);
}

uint64_t sub_1C64D7090@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = AppEntityDetails.AppEntityCount.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1C64D70B8()
{
  return sub_1C6576760();
}

uint64_t sub_1C64D7118()
{
  return sub_1C6576750();
}

void __swiftcall AppEntityDetails.init(bundleId:appEntityType:appEntityCount:)(SiriSuggestionsKit::AppEntityDetails *__return_ptr retstr, Swift::String bundleId, Swift::String appEntityType, SiriSuggestionsKit::AppEntityDetails::AppEntityCount appEntityCount)
{
  SiriSuggestionsKit::AppEntityDetails::AppEntityCount v4 = *(unsigned char *)appEntityCount;
  retstr->signalValue.bundleId = bundleId;
  retstr->signalValue.appEntityType = appEntityType;
  retstr->appEntityCount = v4;
}

SiriSuggestionsKit::AppEntitySignalValue __swiftcall AppEntitySignalValue.init(bundleId:appEntityType:)(Swift::String bundleId, Swift::String appEntityType)
{
  *uint64_t v2 = bundleId;
  v2[1] = appEntityType;
  result.appEntityType = appEntityType;
  result.bundleId = bundleId;
  return result;
}

uint64_t AppEntityDetails.description.getter()
{
  return 0;
}

uint64_t AppEntityDetails.getLookupValue()@<X0>(void *a1@<X8>)
{
  uint64_t v4 = *v1;
  uint64_t v3 = v1[1];
  uint64_t v6 = v1[2];
  uint64_t v5 = v1[3];
  a1[3] = &type metadata for AppEntitySignalValue;
  a1[4] = sub_1C64B7B08();
  a1[5] = sub_1C64B7B54();
  a1[6] = sub_1C64B7BA0();
  a1[7] = sub_1C64B7BEC();
  uint64_t v7 = (void *)swift_allocObject();
  *a1 = v7;
  _OWORD v7[2] = v4;
  v7[3] = v3;
  v7[4] = v6;
  v7[5] = v5;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t sub_1C64D736C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t AppEntityDetails.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_1C65765E0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1C65765E0();
  swift_bridgeObjectRelease();
  sub_1C65765E0();

  return swift_bridgeObjectRelease();
}

uint64_t static AppEntityDetails.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  char v4 = *(unsigned char *)(a1 + 32);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  char v7 = *(unsigned char *)(a2 + 32);
  BOOL v8 = *(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8);
  if (!v8 && (sub_1C6577090() & 1) == 0) {
    return 0;
  }
  BOOL v9 = v2 == v5 && v3 == v6;
  if (!v9 && (sub_1C6577090() & 1) == 0) {
    return 0;
  }

  return sub_1C6498704(v4, v7);
}

uint64_t static AppEntitySignalValue.== infix(_:_:)(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v3 = a1[3];
  uint64_t v4 = a2[2];
  uint64_t v5 = a2[3];
  BOOL v6 = *a1 == *a2 && a1[1] == a2[1];
  if (v6 || (v7 = sub_1C6577090(), uint64_t result = 0, (v7 & 1) != 0))
  {
    if (v2 == v4 && v3 == v5)
    {
      return 1;
    }
    else
    {
      OUTLINED_FUNCTION_36_0();
      return sub_1C6577090();
    }
  }
  return result;
}

uint64_t sub_1C64D75D8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x61566C616E676973 && a2 == 0xEB0000000065756CLL;
  if (v2 || (sub_1C6577090() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7469746E45707061 && a2 == 0xEE00746E756F4379)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_1C6577090();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1C64D7704(char a1)
{
  if (a1) {
    return 0x7469746E45707061;
  }
  else {
    return 0x61566C616E676973;
  }
}

uint64_t sub_1C64D7750()
{
  return sub_1C64D7704(*v0);
}

uint64_t sub_1C64D7758@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C64D75D8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C64D7780(uint64_t a1)
{
  unint64_t v2 = sub_1C64D83EC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C64D77BC(uint64_t a1)
{
  unint64_t v2 = sub_1C64D83EC();

  return MEMORY[0x1F41862B0](a1, v2);
}

void AppEntityDetails.encode(to:)()
{
  OUTLINED_FUNCTION_25();
  unint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F0FF8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v3);
  OUTLINED_FUNCTION_23();
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  sub_1C64D83EC();
  sub_1C6577240();
  sub_1C64B7BA0();
  OUTLINED_FUNCTION_7_6();
  sub_1C6577010();
  if (!v0)
  {
    sub_1C64D8438();
    OUTLINED_FUNCTION_7_6();
    sub_1C6577010();
  }
  uint64_t v4 = OUTLINED_FUNCTION_1_5();
  v5(v4);
  OUTLINED_FUNCTION_26();
}

uint64_t AppEntityDetails.hashValue.getter()
{
  return sub_1C6577190();
}

void AppEntityDetails.init(from:)()
{
  OUTLINED_FUNCTION_25();
  unint64_t v2 = v1;
  uint64_t v4 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F1010);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v5);
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  sub_1C64D83EC();
  OUTLINED_FUNCTION_48_0();
  if (v0)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v2);
  }
  else
  {
    sub_1C64B7B54();
    OUTLINED_FUNCTION_11_5();
    sub_1C6576F30();
    sub_1C64D8484();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_11_5();
    sub_1C6576F30();
    uint64_t v6 = OUTLINED_FUNCTION_59_0();
    v7(v6);
    *(void *)uint64_t v4 = v8;
    *(void *)(v4 + 8) = v9;
    *(void *)(v4 + 16) = v10;
    *(void *)(v4 + 24) = v11;
    *(unsigned char *)(v4 + 32) = v8;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v2);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_26();
}

uint64_t sub_1C64D7BC0()
{
  return sub_1C6577190();
}

void sub_1C64D7C94()
{
}

void sub_1C64D7CAC()
{
}

uint64_t AppEntitySignalValue.bundleId.getter()
{
  return OUTLINED_FUNCTION_36_0();
}

uint64_t AppEntitySignalValue.appEntityType.getter()
{
  return OUTLINED_FUNCTION_36_0();
}

uint64_t AppEntitySignalValue.description.getter()
{
  return 0;
}

uint64_t AppEntitySignalValue.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_1C65765E0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1C65765E0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1C64D7E9C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6449656C646E7562 && a2 == 0xE800000000000000;
  if (v2 || (sub_1C6577090() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7469746E45707061 && a2 == 0xED00006570795479)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_1C6577090();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1C64D7FB0(char a1)
{
  if (a1) {
    return 0x7469746E45707061;
  }
  else {
    return 0x6449656C646E7562;
  }
}

uint64_t sub_1C64D7FF4()
{
  return sub_1C64D7FB0(*v0);
}

uint64_t sub_1C64D7FFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C64D7E9C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C64D8024(uint64_t a1)
{
  unint64_t v2 = sub_1C64D84D0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C64D8060(uint64_t a1)
{
  unint64_t v2 = sub_1C64D84D0();

  return MEMORY[0x1F41862B0](a1, v2);
}

void AppEntitySignalValue.encode(to:)()
{
  OUTLINED_FUNCTION_25();
  unint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F1020);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v3);
  OUTLINED_FUNCTION_23();
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  sub_1C64D84D0();
  sub_1C6577240();
  sub_1C6576FD0();
  if (!v0) {
    sub_1C6576FD0();
  }
  uint64_t v4 = OUTLINED_FUNCTION_1_5();
  v5(v4);
  OUTLINED_FUNCTION_26();
}

uint64_t AppEntitySignalValue.hashValue.getter()
{
  return sub_1C6577190();
}

void AppEntitySignalValue.init(from:)()
{
  OUTLINED_FUNCTION_25();
  unint64_t v2 = v1;
  uint64_t v4 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F1030);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v5);
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  sub_1C64D84D0();
  OUTLINED_FUNCTION_48_0();
  if (v0)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v2);
  }
  else
  {
    uint64_t v6 = sub_1C6576EF0();
    uint64_t v8 = v7;
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_1C6576EF0();
    uint64_t v11 = v10;
    uint64_t v14 = v9;
    uint64_t v12 = OUTLINED_FUNCTION_8_2();
    v13(v12);
    *uint64_t v4 = v6;
    v4[1] = v8;
    _OWORD v4[2] = v14;
    v4[3] = v11;
    swift_bridgeObjectRetain();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v2);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_26();
}

unint64_t sub_1C64D83EC()
{
  unint64_t result = qword_1EA3F1000;
  if (!qword_1EA3F1000)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F1000);
  }
  return result;
}

unint64_t sub_1C64D8438()
{
  unint64_t result = qword_1EA3F1008;
  if (!qword_1EA3F1008)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F1008);
  }
  return result;
}

unint64_t sub_1C64D8484()
{
  unint64_t result = qword_1EA3F1018;
  if (!qword_1EA3F1018)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F1018);
  }
  return result;
}

unint64_t sub_1C64D84D0()
{
  unint64_t result = qword_1EA3F1028;
  if (!qword_1EA3F1028)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F1028);
  }
  return result;
}

uint64_t sub_1C64D851C()
{
  return sub_1C6577190();
}

unint64_t sub_1C64D85A4()
{
  unint64_t result = qword_1EA3F1038;
  if (!qword_1EA3F1038)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F1038);
  }
  return result;
}

unint64_t sub_1C64D85F4()
{
  unint64_t result = qword_1EBBF8DC0;
  if (!qword_1EBBF8DC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBBF8DC0);
  }
  return result;
}

unint64_t sub_1C64D8644()
{
  unint64_t result = qword_1EA3F1040;
  if (!qword_1EA3F1040)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F1040);
  }
  return result;
}

void sub_1C64D8690()
{
}

void sub_1C64D86A8()
{
}

uint64_t initializeWithCopy for AppEntityDetails(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AppEntityDetails(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

uint64_t assignWithTake for AppEntityDetails(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for AppEntityDetails(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 33))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AppEntityDetails(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 33) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for AppEntityDetails()
{
}

void type metadata accessor for AppEntityDetails.AppEntityCount()
{
}

void type metadata accessor for AppEntitySignalValue()
{
}

ValueMetadata *type metadata accessor for AppEntitySignalValue.CodingKeys()
{
  return &type metadata for AppEntitySignalValue.CodingKeys;
}

unsigned char *_s18SiriSuggestionsKit16AppEntityDetailsV14AppEntityCountOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C64D8964);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AppEntityDetails.CodingKeys()
{
  return &type metadata for AppEntityDetails.CodingKeys;
}

unint64_t sub_1C64D89A0()
{
  unint64_t result = qword_1EA3F1048;
  if (!qword_1EA3F1048)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F1048);
  }
  return result;
}

unint64_t sub_1C64D89F0()
{
  unint64_t result = qword_1EA3F1050;
  if (!qword_1EA3F1050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F1050);
  }
  return result;
}

unint64_t sub_1C64D8A40()
{
  unint64_t result = qword_1EA3F1058;
  if (!qword_1EA3F1058)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F1058);
  }
  return result;
}

unint64_t sub_1C64D8A90()
{
  unint64_t result = qword_1EA3F1060;
  if (!qword_1EA3F1060)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F1060);
  }
  return result;
}

unint64_t sub_1C64D8AE0()
{
  unint64_t result = qword_1EA3F1068;
  if (!qword_1EA3F1068)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F1068);
  }
  return result;
}

unint64_t sub_1C64D8B30()
{
  unint64_t result = qword_1EA3F1070;
  if (!qword_1EA3F1070)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F1070);
  }
  return result;
}

unint64_t sub_1C64D8B7C()
{
  unint64_t result = qword_1EA3F1078;
  if (!qword_1EA3F1078)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F1078);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_1_5()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_7_6()
{
  return v0 - 112;
}

uint64_t OUTLINED_FUNCTION_8_2()
{
  return v0;
}

uint64_t dispatch thunk of InternalResolver.resolverTypeOperand.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of InternalResolver.resolveParameter(parameter:suggestion:interaction:environment:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a6 + 24)
                                                                                     + **(int **)(a6 + 24));
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v13;
  *uint64_t v13 = v6;
  v13[1] = sub_1C64BC194;
  return v15(a1, a2, a3, a4, a5, a6);
}

uint64_t dispatch thunk of static InternalResolverFactory.createResolvers()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_1C64D8D68()
{
  return MEMORY[0x1E4FBC860];
}

uint64_t static OwnerDefinitionFactory.createOwnerDefinitions()()
{
  if (qword_1EBBFC428 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_1C65763A0();
  __swift_project_value_buffer(v0, (uint64_t)qword_1EBBFC278);
  uint64_t v1 = sub_1C6576380();
  os_log_type_t v2 = sub_1C6576A60();
  if (os_log_type_enabled(v1, v2))
  {
    int v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)int v3 = 0;
    _os_log_impl(&dword_1C6494000, v1, v2, "Unable to get owner definitions as neither createOwnerDefinitions have been provided", v3, 2u);
    MEMORY[0x1C87A0050](v3, -1, -1);
  }

  return MEMORY[0x1E4FBC860];
}

uint64_t sub_1C64D8E68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = static OwnerDefinitionFactory.createOwnerDefinitions(builderFactory:)(a1, a2, a3, a4);
  uint64_t v6 = *(uint64_t (**)(uint64_t))(v4 + 8);
  return sub_1C64BC460(v6, v4, v5);
}

uint64_t static OwnerDefinitionFactory.createOwnerDefinitions(builderFactory:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return OUTLINED_FUNCTION_0_6(a3, a4, a4);
}

uint64_t dispatch thunk of OwnerDefinition.getSourceGenerator()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of OwnerDefinition.getTargetOwnerDefinition()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of static OwnerDefinitionFactory.createOwnerDefinitions()(uint64_t a1, uint64_t a2)
{
  return OUTLINED_FUNCTION_0_6(a1, a2, a2);
}

uint64_t dispatch thunk of static OwnerDefinitionFactory.createOwnerDefinitions(builderFactory:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 + 16) + **(int **)(a4 + 16));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_1C64BC194;
  return v11(a1, a2, a3, a4);
}

uint64_t OUTLINED_FUNCTION_0_6(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t sub_1C64D9044(void (*a1)(char *, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v44 = a5;
  uint64_t v45 = a8;
  uint64_t v51 = a1;
  uint64_t v52 = a2;
  OUTLINED_FUNCTION_0_2();
  uint64_t v43 = v9;
  MEMORY[0x1F4188790](v10);
  OUTLINED_FUNCTION_3();
  uint64_t v53 = v11;
  swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_0_2();
  uint64_t v54 = v12;
  uint64_t v14 = MEMORY[0x1F4188790](v13);
  uint64_t v47 = (char *)&v39 - v15;
  MEMORY[0x1F4188790](v14);
  OUTLINED_FUNCTION_3();
  uint64_t v48 = v16;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_0_2();
  uint64_t v46 = v18;
  uint64_t v20 = MEMORY[0x1F4188790](v19);
  uint64_t v42 = (char *)&v39 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20);
  uint64_t v23 = (char *)&v39 - v22;
  uint64_t v24 = sub_1C6576A00();
  if (!v24) {
    return sub_1C6576810();
  }
  uint64_t v25 = v24;
  uint64_t v40 = AssociatedTypeWitness;
  uint64_t v57 = sub_1C6576420();
  uint64_t v49 = sub_1C6576D40();
  sub_1C6576D10();
  unint64_t v41 = v23;
  uint64_t result = sub_1C65769E0();
  if (v25 < 0)
  {
    __break(1u);
  }
  else
  {
    unint64_t v27 = (void (**)(char *))(v54 + 16);
    uint64_t v50 = v54 + 8;
    uint64_t v54 = a6;
    long long v28 = v47;
    long long v29 = v41;
    while (1)
    {
      __int16 v30 = (void (*)(char *, void))sub_1C6576A30();
      (*v27)(v28);
      v30(v56, 0);
      uint64_t v31 = v55;
      v51(v28, v53);
      if (v31) {
        break;
      }
      uint64_t v55 = 0;
      uint64_t v32 = OUTLINED_FUNCTION_1_6();
      v33(v32);
      sub_1C6576D20();
      sub_1C6576A10();
      if (!--v25)
      {
        uint64_t v34 = v46;
        uint64_t v35 = v42;
        uint64_t v36 = v40;
        (*(void (**)(char *, char *, uint64_t))(v46 + 32))(v42, v29, v40);
        sub_1C6576BE0();
        (*(void (**)(char *, uint64_t))(v34 + 8))(v35, v36);
        return v57;
      }
    }
    uint64_t v37 = OUTLINED_FUNCTION_1_6();
    v38(v37);
    (*(void (**)(char *, uint64_t))(v46 + 8))(v29, v40);
    swift_release();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v43 + 32))(v45, v53, v44);
  }
  return result;
}

uint64_t *newLineJoined<A>(_:prefix:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = a1;
  _OWORD v8[2] = a4;
  v8[3] = a2;
  v8[4] = a3;
  uint64_t v4 = sub_1C65768A0();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v9 = sub_1C64D9044((void (*)(char *, uint64_t))sub_1C64D95FC, (uint64_t)v8, v4, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBC248], WitnessTable, MEMORY[0x1E4FBC278], v6);
  __swift_instantiateConcreteTypeFromMangledName(qword_1EBBFC1F0);
  sub_1C64A7A58();
  sub_1C6576520();
  OUTLINED_FUNCTION_2_5();
  return &v9;
}

uint64_t sub_1C64D94E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  MEMORY[0x1F4188790](a1);
  (*(void (**)(char *))(v8 + 16))((char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C65765A0();
  uint64_t v11 = a2;
  uint64_t v12 = a3;
  swift_bridgeObjectRetain();
  sub_1C6576620();
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v10 = v12;
  *a4 = v11;
  a4[1] = v10;
  return result;
}

uint64_t sub_1C64D95FC@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_1C64D94E8(a1, *(void *)(v2 + 24), *(void *)(v2 + 32), a2);
}

uint64_t newLineJoined<A, B>(_:prefix:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  swift_bridgeObjectRetain();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  sub_1C6576490();
  swift_getWitnessTable();
  uint64_t v9 = sub_1C65768B0();
  newLineJoined<A>(_:prefix:)(v9, a2, a3, TupleTypeMetadata2);
  OUTLINED_FUNCTION_2_5();
  return a5;
}

uint64_t *commaJoined<A>(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = a1;
  uint64_t v6[2] = a2;
  uint64_t v2 = sub_1C65768A0();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = sub_1C64D9044((void (*)(char *, uint64_t))sub_1C64D98A8, (uint64_t)v6, v2, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBC248], WitnessTable, MEMORY[0x1E4FBC278], v4);
  __swift_instantiateConcreteTypeFromMangledName(qword_1EBBFC1F0);
  sub_1C64A7A58();
  sub_1C6576520();
  OUTLINED_FUNCTION_2_5();
  return &v7;
}

uint64_t sub_1C64D97D8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  MEMORY[0x1F4188790](a1);
  (*(void (**)(char *))(v4 + 16))((char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t result = sub_1C65765A0();
  *a2 = result;
  a2[1] = v6;
  return result;
}

uint64_t sub_1C64D98A8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1C64D97D8(a1, a2);
}

uint64_t prependEachLine<A>(of:with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_0_2();
  MEMORY[0x1F4188790](v5);
  (*(void (**)(char *))(v7 + 16))((char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = sub_1C65765A0();
  uint64_t v12 = v8;
  _OWORD v10[2] = 10;
  v10[3] = 0xE100000000000000;
  v10[0] = 10;
  v10[1] = 0xE100000000000000;
  sub_1C6576620();
  sub_1C64D5608();
  sub_1C6576B80();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v11 = a2;
  uint64_t v12 = a3;
  swift_bridgeObjectRetain();
  sub_1C6576620();
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t OUTLINED_FUNCTION_1_6()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_2_5()
{
  return swift_bridgeObjectRelease();
}

void sub_1C64D9A64(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    uint64_t v20 = MEMORY[0x1E4FBC860];
    sub_1C64A2678();
    uint64_t v3 = sub_1C6524E04(a1);
    if ((v3 & 0x8000000000000000) == 0)
    {
      unint64_t v5 = v3;
      if (v3 < 1 << *(unsigned char *)(a1 + 32))
      {
        uint64_t v6 = a1 + 64;
        while ((*(void *)(v6 + 8 * (v5 >> 6)) & (1 << v5)) != 0)
        {
          if (v4 != *(_DWORD *)(a1 + 36)) {
            goto LABEL_18;
          }
          uint64_t v16 = v1;
          int v17 = v4;
          uint64_t v7 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v5);
          uint64_t v8 = *v7;
          uint64_t v9 = v7[1];
          uint64_t v10 = (uint64_t *)(*(void *)(a1 + 56) + 16 * v5);
          uint64_t v11 = v10[1];
          uint64_t v18 = *v10;
          uint64_t v19 = v8;
          unint64_t v13 = *(void *)(v20 + 16);
          unint64_t v12 = *(void *)(v20 + 24);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v13 >= v12 >> 1) {
            sub_1C64A2678();
          }
          *(void *)(v20 + 16) = v13 + 1;
          uint64_t v14 = (void *)(v20 + 32 * v13);
          uint64_t v14[4] = v18;
          uint64_t v14[5] = v11;
          v14[6] = v19;
          v14[7] = v9;
          if ((uint64_t)v5 >= -(-1 << *(unsigned char *)(a1 + 32))) {
            goto LABEL_19;
          }
          uint64_t v6 = a1 + 64;
          if ((*(void *)(a1 + 64 + 8 * (v5 >> 6)) & (1 << v5)) == 0) {
            goto LABEL_20;
          }
          if (v17 != *(_DWORD *)(a1 + 36)) {
            goto LABEL_21;
          }
          uint64_t v15 = sub_1C6576BC0();
          --v1;
          if (v16 == 1) {
            return;
          }
          unint64_t v5 = v15;
          if ((v15 & 0x8000000000000000) == 0)
          {
            int v4 = *(_DWORD *)(a1 + 36);
            if (v15 < 1 << *(unsigned char *)(a1 + 32)) {
              continue;
            }
          }
          goto LABEL_22;
        }
        __break(1u);
LABEL_18:
        __break(1u);
LABEL_19:
        __break(1u);
LABEL_20:
        __break(1u);
LABEL_21:
        __break(1u);
      }
    }
LABEL_22:
    __break(1u);
  }
}

SiriSuggestionsKit::AppBundleIdentifier_optional __swiftcall AppBundleIdentifier.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  uint64_t v3 = sub_1C65770D0();
  result.value = swift_bridgeObjectRelease();
  char v5 = 0;
  char v6 = 11;
  switch(v3)
  {
    case 0:
      goto LABEL_13;
    case 1:
      char v5 = 1;
      goto LABEL_13;
    case 2:
      char v5 = 2;
      goto LABEL_13;
    case 3:
      char v5 = 3;
      goto LABEL_13;
    case 4:
      char v5 = 4;
      goto LABEL_13;
    case 5:
      char v5 = 5;
      goto LABEL_13;
    case 6:
      char v5 = 6;
      goto LABEL_13;
    case 7:
      char v5 = 7;
      goto LABEL_13;
    case 8:
      char v5 = 8;
      goto LABEL_13;
    case 9:
      char v5 = 9;
      goto LABEL_13;
    case 10:
      char v5 = 10;
LABEL_13:
      char v6 = v5;
      break;
    case 11:
      break;
    case 12:
      char v6 = 12;
      break;
    case 13:
      char v6 = 13;
      break;
    case 14:
      char v6 = 14;
      break;
    case 15:
      char v6 = 15;
      break;
    case 16:
      char v6 = 16;
      break;
    case 17:
      char v6 = 17;
      break;
    case 18:
      char v6 = 18;
      break;
    case 19:
      char v6 = 19;
      break;
    case 20:
      char v6 = 20;
      break;
    case 21:
      char v6 = 21;
      break;
    case 22:
      char v6 = 22;
      break;
    case 23:
      char v6 = 23;
      break;
    case 24:
      char v6 = 24;
      break;
    case 25:
      char v6 = 25;
      break;
    case 26:
      char v6 = 26;
      break;
    case 27:
      char v6 = 27;
      break;
    case 28:
      char v6 = 28;
      break;
    default:
      char v6 = 29;
      break;
  }
  *uint64_t v2 = v6;
  return result;
}

unint64_t AppBundleIdentifier.rawValue.getter()
{
  unint64_t result = 0xD000000000000010;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD000000000000013;
      break;
    case 3:
      unint64_t result = 0xD000000000000015;
      break;
    case 4:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 5:
      unint64_t result = 0xD000000000000012;
      break;
    case 6:
      unint64_t result = 0xD000000000000016;
      break;
    case 8:
      unint64_t result = 0xD000000000000011;
      break;
    case 0xA:
      unint64_t result = 0xD000000000000011;
      break;
    case 0xB:
      unint64_t result = 0xD000000000000012;
      break;
    case 0xC:
      unint64_t result = 0xD000000000000014;
      break;
    case 0xD:
    case 0xF:
    case 0x11:
    case 0x19:
    case 0x1B:
      unint64_t result = 0x6C7070612E6D6F63;
      break;
    case 0xE:
      unint64_t result = 0xD000000000000013;
      break;
    case 0x10:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 0x12:
      unint64_t result = 0xD000000000000015;
      break;
    case 0x13:
      unint64_t result = 0xD000000000000015;
      break;
    case 0x14:
      unint64_t result = 0xD000000000000019;
      break;
    case 0x15:
      unint64_t result = 0xD000000000000012;
      break;
    case 0x16:
      unint64_t result = 0xD000000000000013;
      break;
    case 0x17:
      unint64_t result = 0xD000000000000016;
      break;
    case 0x18:
      unint64_t result = 0xD000000000000015;
      break;
    case 0x1C:
      unint64_t result = 0xD000000000000011;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1C64DA09C()
{
  return sub_1C6498488();
}

uint64_t sub_1C64DA0A8()
{
  return sub_1C655AD30();
}

uint64_t sub_1C64DA0B0()
{
  return sub_1C649AAAC();
}

uint64_t sub_1C64DA0B8()
{
  return sub_1C64EBBB4();
}

SiriSuggestionsKit::AppBundleIdentifier_optional sub_1C64DA0C0(Swift::String *a1)
{
  return AppBundleIdentifier.init(rawValue:)(*a1);
}

unint64_t sub_1C64DA0CC@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = AppBundleIdentifier.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1C64DA0F4()
{
  uint64_t result = sub_1C6576460();
  qword_1EA3F1098 = result;
  return result;
}

uint64_t iOSToMacOSBundleIdMapping.getter()
{
  return sub_1C649767C(&qword_1EA3F0060);
}

uint64_t sub_1C64DA154()
{
  if (qword_1EA3F0060 != -1) {
    swift_once();
  }
  uint64_t v0 = swift_bridgeObjectRetain();
  sub_1C64D9A64(v0);
  uint64_t v2 = v1;
  swift_bridgeObjectRelease();
  uint64_t result = sub_1C6537780(v2);
  qword_1EA3F10A0 = result;
  return result;
}

uint64_t macOSToiOSBundleIdMapping.getter()
{
  return sub_1C649767C(&qword_1EA3F0068);
}

unint64_t sub_1C64DA210()
{
  unint64_t result = qword_1EA3F10A8;
  if (!qword_1EA3F10A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F10A8);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for AppBundleIdentifier(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xE4)
  {
    if (a2 + 28 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 28) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 29;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x1D;
  int v5 = v6 - 29;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for AppBundleIdentifier(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 28 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 28) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xE4) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xE3)
  {
    unsigned int v6 = ((a2 - 228) >> 8) + 1;
    *unint64_t result = a2 + 28;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C64DA3B0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 28;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AppBundleIdentifier()
{
  return &type metadata for AppBundleIdentifier;
}

uint64_t OnInAppConnectionEvent.deliveryVehicle.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)v1;
  uint64_t v3 = *(void *)(v1 + 8);
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  *(void *)a1 = *(void *)v1;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  char v6 = *(unsigned char *)(v1 + 32);
  *(unsigned char *)(a1 + 32) = v6;
  return sub_1C64A0570(v2, v3, v4, v5, v6);
}

double OnInAppConnectionEvent.receivedTS.getter()
{
  return *(double *)(v0 + 40);
}

id OnInAppConnectionEvent.inAppDetails.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 56);
  uint64_t v4 = *(void *)(v1 + 64);
  uint64_t v3 = *(void *)(v1 + 72);
  uint64_t v5 = *(void *)(v1 + 80);
  char v6 = *(void **)(v1 + 88);
  uint64_t v7 = *(void *)(v1 + 96);
  uint64_t v8 = *(void *)(v1 + 104);
  *(void *)a1 = *(void *)(v1 + 48);
  *(void *)(a1 + 8) = v2;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v3;
  *(void *)(a1 + 32) = v5;
  *(void *)(a1 + 40) = v6;
  *(void *)(a1 + 48) = v7;
  *(void *)(a1 + 56) = v8;
  char v9 = *(unsigned char *)(v1 + 112);
  *(unsigned char *)(a1 + 64) = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return sub_1C64DA494(v6, v7, v8, v9);
}

id sub_1C64DA494(id result, uint64_t a2, uint64_t a3, char a4)
{
  if (a4 != -1) {
    return sub_1C64BA678(result, a2, a3, a4);
  }
  return result;
}

unint64_t OnInAppConnectionEvent.description.getter()
{
  uint64_t v1 = *(void *)(v0 + 80);
  sub_1C6576C60();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v2 = (void *)OUTLINED_FUNCTION_4_5();
  sub_1C64DA494(v2, v3, v4, v5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C64DAE84(v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  char v6 = (void *)OUTLINED_FUNCTION_4_5();
  sub_1C64BA5EC(v6, v7, v8, v9);
  InAppDetailsKey.description.getter();
  sub_1C6576620();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 0xD000000000000017;
}

__n128 OnInAppConnectionEvent.init(deliveryVehicle:receivedTS:inAppDetails:)@<Q0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  char v4 = *(unsigned char *)(a1 + 32);
  uint64_t v5 = *a2;
  uint64_t v6 = a2[1];
  uint64_t v7 = a2[4];
  uint64_t v8 = a2[7];
  char v9 = *((unsigned char *)a2 + 64);
  long long v10 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a3 = *(_OWORD *)a1;
  *(_OWORD *)(a3 + 16) = v10;
  *(unsigned char *)(a3 + 32) = v4;
  *(double *)(a3 + 40) = a4;
  *(void *)(a3 + 48) = v5;
  *(void *)(a3 + 56) = v6;
  *(_OWORD *)(a3 + 64) = *((_OWORD *)a2 + 1);
  *(void *)(a3 + 80) = v7;
  __n128 result = *(__n128 *)(a2 + 5);
  *(__n128 *)(a3 + 88) = result;
  *(void *)(a3 + 104) = v8;
  *(unsigned char *)(a3 + 112) = v9;
  return result;
}

uint64_t sub_1C64DA62C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x79726576696C6564 && a2 == 0xEF656C6369686556;
  if (v2 || (sub_1C6577090() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x6465766965636572 && a2 == 0xEA00000000005354;
    if (v6 || (sub_1C6577090() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x7465447070416E69 && a2 == 0xEC000000736C6961)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      char v8 = sub_1C6577090();
      swift_bridgeObjectRelease();
      if (v8) {
        return 2;
      }
      else {
        return 3;
      }
    }
  }
}

uint64_t sub_1C64DA7C4(char a1)
{
  if (!a1) {
    return 0x79726576696C6564;
  }
  if (a1 == 1) {
    return 0x6465766965636572;
  }
  return 0x7465447070416E69;
}

uint64_t sub_1C64DA834()
{
  return sub_1C64DA7C4(*v0);
}

uint64_t sub_1C64DA83C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C64DA62C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C64DA864(uint64_t a1)
{
  unint64_t v2 = sub_1C64DB0BC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C64DA8A0(uint64_t a1)
{
  unint64_t v2 = sub_1C64DB0BC();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t OnInAppConnectionEvent.encode(to:)(void *a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F10B0);
  OUTLINED_FUNCTION_0();
  uint64_t v4 = v3;
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v35 = *v1;
  uint64_t v9 = *((void *)v1 + 2);
  uint64_t v8 = *((void *)v1 + 3);
  char v10 = *((unsigned char *)v1 + 32);
  uint64_t v11 = *((void *)v1 + 6);
  uint64_t v33 = *((void *)v1 + 7);
  uint64_t v34 = v11;
  uint64_t v12 = *((void *)v1 + 8);
  uint64_t v31 = *((void *)v1 + 9);
  uint64_t v32 = v12;
  uint64_t v13 = *((void *)v1 + 10);
  uint64_t v29 = *((void *)v1 + 11);
  uint64_t v30 = v13;
  uint64_t v14 = *((void *)v1 + 12);
  uint64_t v27 = *((void *)v1 + 13);
  uint64_t v28 = v14;
  int v26 = *((unsigned __int8 *)v1 + 112);
  uint64_t v15 = a1[3];
  uint64_t v16 = a1;
  uint64_t v18 = v17;
  __swift_project_boxed_opaque_existential_1(v16, v15);
  sub_1C64DB0BC();
  sub_1C6577240();
  long long v37 = v35;
  uint64_t v38 = v9;
  uint64_t v39 = v8;
  LOBYTE(v40) = v10;
  char v45 = 0;
  sub_1C64A2544();
  OUTLINED_FUNCTION_5_5();
  uint64_t v19 = v36;
  sub_1C6577010();
  if (!v19)
  {
    uint64_t v21 = v31;
    uint64_t v20 = v32;
    uint64_t v23 = v33;
    uint64_t v22 = v34;
    LOBYTE(v37) = 1;
    sub_1C6576FF0();
    *(void *)&long long v37 = v22;
    *((void *)&v37 + 1) = v23;
    uint64_t v38 = v20;
    uint64_t v39 = v21;
    uint64_t v40 = v30;
    uint64_t v41 = v29;
    uint64_t v42 = v28;
    uint64_t v43 = v27;
    char v44 = v26;
    char v45 = 2;
    sub_1C64DB108();
    OUTLINED_FUNCTION_5_5();
    sub_1C6577010();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v18);
}

void OnInAppConnectionEvent.init(from:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F10C8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v5);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C64DB0BC();
  sub_1C6577210();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    sub_1C64A3714();
    OUTLINED_FUNCTION_1_7();
    uint64_t v6 = v12;
    LOBYTE(v12) = 1;
    uint64_t v11 = v6;
    sub_1C64A0570(v6, v13, v14, v15, v16);
    sub_1C6576F10();
    uint64_t v8 = v7;
    sub_1C64DB154();
    OUTLINED_FUNCTION_1_7();
    uint64_t v9 = OUTLINED_FUNCTION_2_6();
    v10(v9);
    sub_1C64A0570(v11, v13, v14, v15, v16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C64DA494(v17, v18, v19, v20);
    sub_1C64A21C4(v11, v13, v14, v15, v16);
    *(void *)a2 = v11;
    *(void *)(a2 + 8) = v13;
    *(void *)(a2 + 16) = v14;
    *(void *)(a2 + 24) = v15;
    *(unsigned char *)(a2 + 32) = v16;
    *(void *)(a2 + 40) = v8;
    *(void *)(a2 + 48) = v12;
    *(void *)(a2 + 56) = v13;
    *(void *)(a2 + 64) = v14;
    *(void *)(a2 + 72) = v15;
    *(void *)(a2 + 80) = v16;
    *(void *)(a2 + 88) = v17;
    *(void *)(a2 + 96) = v18;
    *(void *)(a2 + 104) = v19;
    *(unsigned char *)(a2 + 112) = v20;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    sub_1C64A21C4(v11, v13, v14, v15, v16);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C64BA5EC(v17, v18, v19, v20);
  }
}

void sub_1C64DAE54(void *a1@<X0>, uint64_t a2@<X8>)
{
}

uint64_t sub_1C64DAE6C(void *a1)
{
  return OnInAppConnectionEvent.encode(to:)(a1);
}

uint64_t sub_1C64DAE84(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBBF8F70);
  uint64_t result = sub_1C6576E20();
  uint64_t v3 = (void *)result;
  int64_t v4 = 0;
  uint64_t v30 = a1;
  uint64_t v5 = *(void *)(a1 + 64);
  uint64_t v26 = a1 + 64;
  uint64_t v6 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & v5;
  int64_t v27 = (unint64_t)(v6 + 63) >> 6;
  uint64_t v9 = result + 64;
  if ((v7 & v5) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v10 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (unint64_t i = v10 | (v4 << 6); ; unint64_t i = __clz(__rbit64(v13)) + (v4 << 6))
  {
    uint64_t v15 = (uint64_t *)(*(void *)(v30 + 48) + 16 * i);
    uint64_t v16 = *v15;
    uint64_t v17 = v15[1];
    sub_1C64A7B04(*(void *)(v30 + 56) + 48 * i, (uint64_t)v29);
    sub_1C64A7B04((uint64_t)v29, (uint64_t)v28);
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFBE10);
    uint64_t v18 = sub_1C65765A0();
    uint64_t v20 = v19;
    uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
    *(void *)(v9 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    uint64_t v21 = (void *)(v3[6] + 16 * i);
    *uint64_t v21 = v16;
    v21[1] = v17;
    uint64_t v22 = (uint64_t *)(v3[7] + 16 * i);
    *uint64_t v22 = v18;
    v22[1] = v20;
    uint64_t v23 = v3[2];
    BOOL v24 = __OFADD__(v23, 1);
    uint64_t v25 = v23 + 1;
    if (v24)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    void v3[2] = v25;
    if (v8) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v12 = v4 + 1;
    if (__OFADD__(v4, 1)) {
      goto LABEL_24;
    }
    if (v12 >= v27) {
      return (uint64_t)v3;
    }
    unint64_t v13 = *(void *)(v26 + 8 * v12);
    ++v4;
    if (!v13)
    {
      int64_t v4 = v12 + 1;
      if (v12 + 1 >= v27) {
        return (uint64_t)v3;
      }
      unint64_t v13 = *(void *)(v26 + 8 * v4);
      if (!v13)
      {
        int64_t v4 = v12 + 2;
        if (v12 + 2 >= v27) {
          return (uint64_t)v3;
        }
        unint64_t v13 = *(void *)(v26 + 8 * v4);
        if (!v13) {
          break;
        }
      }
    }
LABEL_18:
    unint64_t v8 = (v13 - 1) & v13;
  }
  int64_t v14 = v12 + 3;
  if (v14 >= v27) {
    return (uint64_t)v3;
  }
  unint64_t v13 = *(void *)(v26 + 8 * v14);
  if (v13)
  {
    int64_t v4 = v14;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v4 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v4 >= v27) {
      return (uint64_t)v3;
    }
    unint64_t v13 = *(void *)(v26 + 8 * v4);
    ++v14;
    if (v13) {
      goto LABEL_18;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

unint64_t sub_1C64DB0BC()
{
  unint64_t result = qword_1EA3F10B8;
  if (!qword_1EA3F10B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F10B8);
  }
  return result;
}

unint64_t sub_1C64DB108()
{
  unint64_t result = qword_1EA3F10C0;
  if (!qword_1EA3F10C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F10C0);
  }
  return result;
}

unint64_t sub_1C64DB154()
{
  unint64_t result = qword_1EA3F10D0;
  if (!qword_1EA3F10D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F10D0);
  }
  return result;
}

unint64_t sub_1C64DB1A0(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1C64DB1D0();
  unint64_t result = sub_1C64DB21C();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C64DB1D0()
{
  unint64_t result = qword_1EBBF8E60;
  if (!qword_1EBBF8E60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBBF8E60);
  }
  return result;
}

unint64_t sub_1C64DB21C()
{
  unint64_t result = qword_1EBBF8E58;
  if (!qword_1EBBF8E58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBBF8E58);
  }
  return result;
}

uint64_t dispatch thunk of Event.deliveryVehicle.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of Event.receivedTS.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

void destroy for OnInAppConnectionEvent(uint64_t a1)
{
  sub_1C64A21C4(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(unsigned char *)(a1 + 32));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  int v2 = *(unsigned __int8 *)(a1 + 112);
  if (v2 != 255)
  {
    uint64_t v3 = *(void **)(a1 + 88);
    uint64_t v4 = *(void *)(a1 + 96);
    uint64_t v5 = *(void *)(a1 + 104);
    sub_1C64BA600(v3, v4, v5, v2);
  }
}

uint64_t initializeWithCopy for OnInAppConnectionEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  char v8 = *(unsigned char *)(a2 + 32);
  sub_1C64A0570(*(void *)a2, v5, v6, v7, v8);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(unsigned char *)(a1 + 32) = v8;
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  uint64_t v9 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v9;
  uint64_t v10 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v10;
  int v11 = *(unsigned __int8 *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v11 == 255)
  {
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 97) = *(_OWORD *)(a2 + 97);
  }
  else
  {
    int64_t v12 = *(void **)(a2 + 88);
    uint64_t v13 = *(void *)(a2 + 96);
    uint64_t v14 = *(void *)(a2 + 104);
    sub_1C64BA678(v12, v13, v14, v11);
    *(void *)(a1 + 88) = v12;
    *(void *)(a1 + 96) = v13;
    *(void *)(a1 + 104) = v14;
    *(unsigned char *)(a1 + 112) = v11;
  }
  return a1;
}

uint64_t assignWithCopy for OnInAppConnectionEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  char v8 = *(unsigned char *)(a2 + 32);
  sub_1C64A0570(*(void *)a2, v5, v6, v7, v8);
  uint64_t v9 = *(void *)a1;
  uint64_t v10 = *(void *)(a1 + 8);
  uint64_t v11 = *(void *)(a1 + 16);
  uint64_t v12 = *(void *)(a1 + 24);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  char v13 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v8;
  sub_1C64A21C4(v9, v10, v11, v12, v13);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v14 = (long long *)(a1 + 88);
  uint64_t v15 = (long long *)(a2 + 88);
  int v16 = *(unsigned __int8 *)(a2 + 112);
  if (*(unsigned __int8 *)(a1 + 112) == 255)
  {
    if (v16 == 255)
    {
      long long v28 = *v15;
      *(_OWORD *)(a1 + 97) = *(_OWORD *)(a2 + 97);
      *uint64_t v14 = v28;
    }
    else
    {
      BOOL v24 = *(void **)(a2 + 88);
      uint64_t v25 = *(void *)(a2 + 96);
      uint64_t v26 = *(void *)(a2 + 104);
      sub_1C64BA678(v24, v25, v26, v16);
      *(void *)(a1 + 88) = v24;
      *(void *)(a1 + 96) = v25;
      *(void *)(a1 + 104) = v26;
      *(unsigned char *)(a1 + 112) = v16;
    }
  }
  else if (v16 == 255)
  {
    sub_1C64DB594(a1 + 88);
    long long v27 = *(_OWORD *)(a2 + 97);
    *uint64_t v14 = *v15;
    *(_OWORD *)(a1 + 97) = v27;
  }
  else
  {
    uint64_t v17 = *(void **)(a2 + 88);
    uint64_t v18 = *(void *)(a2 + 96);
    uint64_t v19 = *(void *)(a2 + 104);
    sub_1C64BA678(v17, v18, v19, v16);
    uint64_t v20 = *(void **)(a1 + 88);
    uint64_t v21 = *(void *)(a1 + 96);
    uint64_t v22 = *(void *)(a1 + 104);
    *(void *)(a1 + 88) = v17;
    *(void *)(a1 + 96) = v18;
    *(void *)(a1 + 104) = v19;
    char v23 = *(unsigned char *)(a1 + 112);
    *(unsigned char *)(a1 + 112) = v16;
    sub_1C64BA600(v20, v21, v22, v23);
  }
  return a1;
}

uint64_t sub_1C64DB594(uint64_t a1)
{
  return a1;
}

void *__swift_memcpy113_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x71uLL);
}

uint64_t assignWithTake for OnInAppConnectionEvent(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 32);
  uint64_t v5 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v7 = *(void *)(a1 + 16);
  uint64_t v8 = *(void *)(a1 + 24);
  long long v9 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v9;
  char v10 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v4;
  sub_1C64A21C4(v5, v6, v7, v8, v10);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  uint64_t v11 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v12;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRelease();
  int v13 = *(unsigned __int8 *)(a1 + 112);
  if (v13 == 255) {
    goto LABEL_5;
  }
  int v14 = *(unsigned __int8 *)(a2 + 112);
  if (v14 == 255)
  {
    sub_1C64DB594(a1 + 88);
LABEL_5:
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 97) = *(_OWORD *)(a2 + 97);
    return a1;
  }
  uint64_t v15 = *(void *)(a2 + 104);
  int v16 = *(void **)(a1 + 88);
  uint64_t v17 = *(void *)(a1 + 96);
  uint64_t v18 = *(void *)(a1 + 104);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(void *)(a1 + 104) = v15;
  *(unsigned char *)(a1 + 112) = v14;
  sub_1C64BA600(v16, v17, v18, v13);
  return a1;
}

uint64_t getEnumTagSinglePayload for OnInAppConnectionEvent(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 113))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 56);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for OnInAppConnectionEvent(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 112) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 113) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 56) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 113) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for OnInAppConnectionEvent()
{
  return &type metadata for OnInAppConnectionEvent;
}

uint64_t dispatch thunk of EventDispatcher.submit(event:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 8) + **(int **)(a3 + 8));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_1C64DB88C;
  return v9(a1, a2, a3);
}

uint64_t sub_1C64DB88C()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

unsigned char *storeEnumTagSinglePayload for OnInAppConnectionEvent.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C64DBA4CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for OnInAppConnectionEvent.CodingKeys()
{
  return &type metadata for OnInAppConnectionEvent.CodingKeys;
}

unint64_t sub_1C64DBA88()
{
  unint64_t result = qword_1EA3F10E0;
  if (!qword_1EA3F10E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F10E0);
  }
  return result;
}

unint64_t sub_1C64DBAD8()
{
  unint64_t result = qword_1EA3F10E8;
  if (!qword_1EA3F10E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F10E8);
  }
  return result;
}

unint64_t sub_1C64DBB28()
{
  unint64_t result = qword_1EA3F10F0;
  if (!qword_1EA3F10F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F10F0);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_1_7()
{
  return sub_1C6576F30();
}

uint64_t OUTLINED_FUNCTION_2_6()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_3_5()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_4_5()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_5_5()
{
  return v0 - 160;
}

uint64_t sub_1C64DBBF0()
{
  uint64_t result = sub_1C65765F0();
  qword_1EA405630 = result;
  return result;
}

uint64_t sub_1C64DBC1C()
{
  uint64_t result = sub_1C65765F0();
  qword_1EA405638 = result;
  return result;
}

uint64_t sub_1C64DBC44()
{
  uint64_t result = sub_1C65765F0();
  qword_1EA405640 = result;
  return result;
}

uint64_t DialogSpeakableString.print.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DialogSpeakableString.speak.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

SiriSuggestionsKit::DialogSpeakableString __swiftcall DialogSpeakableString.init(print:speak:)(Swift::String print, Swift::String_optional speak)
{
  object = print._object;
  uint64_t countAndFlagsBits = print._countAndFlagsBits;
  uint64_t v5 = v2;
  if (!speak.value._object)
  {
    print._uint64_t countAndFlagsBits = swift_bridgeObjectRetain();
    speak.value._uint64_t countAndFlagsBits = countAndFlagsBits;
    speak.value._object = object;
  }
  v5->value._uint64_t countAndFlagsBits = countAndFlagsBits;
  v5->value._object = object;
  v5[1] = speak;
  result.speak = speak.value;
  result.print = print;
  return result;
}

SiriSuggestionsKit::DialogSpeakableString __swiftcall DialogSpeakableString.init(serializedValue:)(Swift::String serializedValue)
{
  object = serializedValue._object;
  unint64_t countAndFlagsBits = serializedValue._countAndFlagsBits;
  unsigned int v4 = v1;
  if (sub_1C65766A0() & 1) != 0 && (sub_1C65766B0())
  {
    if (qword_1EA3F0070 != -1) {
      goto LABEL_32;
    }
    while (1)
    {
      uint64_t v50 = v4;
      unint64_t v5 = sub_1C64DC1C4(qword_1EA405630, countAndFlagsBits, (unint64_t)object);
      if (qword_1EA3F0078 != -1) {
        swift_once();
      }
      unint64_t v6 = sub_1C64DC350(qword_1EA405638, v5);
      unint64_t v10 = v6;
      object = (void *)v7;
      uint64_t v11 = v8;
      uint64_t v12 = v9;
      unint64_t v49 = v6 >> 14;
      if (v6 >> 14 >= v7 >> 14) {
        break;
      }
      unint64_t v13 = v7 >> 14;
      unint64_t countAndFlagsBits = v6;
      unsigned int v4 = (void *)(v6 >> 14);
      uint64_t v47 = v8;
      uint64_t v48 = v9;
      uint64_t v53 = (void *)v7;
      unint64_t v51 = v7 >> 14;
      unint64_t v52 = v6;
      while (v13 >= (unint64_t)v4)
      {
        swift_bridgeObjectRetain();
        unint64_t v14 = sub_1C6576B20();
        unint64_t v16 = v15;
        unint64_t v18 = v17;
        uint64_t v20 = v19;
        swift_bridgeObjectRelease();
        if (v16 >> 14 != v14 >> 14)
        {
          swift_bridgeObjectRetain();
          while (1)
          {
            OUTLINED_FUNCTION_0_7();
            uint64_t v21 = sub_1C6576B10();
            uint64_t v23 = v22;
            OUTLINED_FUNCTION_0_7();
            unint64_t v24 = sub_1C6576AF0();
            uint64_t v25 = sub_1C6576630();
            if (!v26) {
              break;
            }
            if (v21 == v25 && v26 == v23)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            else
            {
              char v28 = sub_1C6577090();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if ((v28 & 1) == 0)
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                uint64_t v11 = v47;
                uint64_t v12 = v48;
                goto LABEL_22;
              }
            }
            if (v16 >> 14 == v24 >> 14)
            {
              swift_bridgeObjectRelease();
              uint64_t v11 = v47;
              uint64_t v12 = v48;
              goto LABEL_21;
            }
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          unint64_t v30 = 0xE500000000000000;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v11 = v47;
LABEL_28:
          if ((unint64_t)v4 < v49)
          {
            __break(1u);
          }
          else
          {
            swift_bridgeObjectRetain();
            uint64_t v36 = sub_1C6576B20();
            uint64_t v38 = v37;
            uint64_t v40 = v39;
            uint64_t v42 = v41;
            swift_bridgeObjectRelease();
            uint64_t v20 = MEMORY[0x1C879EC90](v36, v38, v40, v42);
            uint64_t v11 = v43;
            swift_bridgeObjectRelease();
            unint64_t v30 = sub_1C6576B20();
            unint64_t v18 = v44;
            swift_bridgeObjectRelease();
            unsigned int v4 = v50;
            if (qword_1EA3F0080 == -1)
            {
LABEL_30:
              unint64_t v45 = sub_1C64DC298(qword_1EA405640, v30, v18);
              unint64_t countAndFlagsBits = MEMORY[0x1C879EC90](v45);
              object = v46;
              uint64_t v31 = swift_bridgeObjectRelease();
              goto LABEL_25;
            }
          }
          swift_once();
          goto LABEL_30;
        }
LABEL_21:
        sub_1C6576630();
        unint64_t v30 = v29;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (!v30) {
          goto LABEL_28;
        }
LABEL_22:
        object = v53;
        unint64_t v10 = v52;
        unint64_t countAndFlagsBits = sub_1C6576AF0();
        unsigned int v4 = (void *)(countAndFlagsBits >> 14);
        unint64_t v13 = v51;
        if (countAndFlagsBits >> 14 >= v51) {
          goto LABEL_26;
        }
      }
      __break(1u);
LABEL_32:
      swift_once();
    }
LABEL_26:
    unint64_t countAndFlagsBits = MEMORY[0x1C879EC90](v10, object, v11, v12);
    object = v35;
    swift_bridgeObjectRelease();
    uint64_t v31 = swift_bridgeObjectRetain();
    uint64_t v20 = countAndFlagsBits;
    uint64_t v11 = object;
    unsigned int v4 = v50;
  }
  else
  {
    uint64_t v31 = swift_bridgeObjectRetain();
    uint64_t v20 = countAndFlagsBits;
    uint64_t v11 = object;
  }
LABEL_25:
  *unsigned int v4 = v20;
  v4[1] = v11;
  _OWORD v4[2] = countAndFlagsBits;
  v4[3] = object;
  result.speak._object = v34;
  result.speak._unint64_t countAndFlagsBits = v33;
  result.print._object = v32;
  result.print._unint64_t countAndFlagsBits = v31;
  return result;
}

unint64_t sub_1C64DC1C4(unint64_t result, uint64_t a2, unint64_t a3)
{
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    if ((a3 & 0x2000000000000000) != 0) {
      uint64_t v3 = HIBYTE(a3) & 0xF;
    }
    else {
      uint64_t v3 = a2 & 0xFFFFFFFFFFFFLL;
    }
    uint64_t v4 = 7;
    if (((a3 >> 60) & ((a2 & 0x800000000000000) == 0)) != 0) {
      uint64_t v4 = 11;
    }
    unint64_t v5 = v4 | (v3 << 16);
    SiriSuggestionsKit::DialogSpeakableString result = sub_1C6576610();
    if (v6) {
      SiriSuggestionsKit::DialogSpeakableString result = v5;
    }
    if (4 * v3 >= result >> 14)
    {
      uint64_t v7 = sub_1C65766F0();
      swift_bridgeObjectRelease();
      return v7;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_1C64DC298(unint64_t result, uint64_t a2, unint64_t a3)
{
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    SiriSuggestionsKit::DialogSpeakableString result = sub_1C6576B00();
    if (v4) {
      SiriSuggestionsKit::DialogSpeakableString result = a3;
    }
    if (a3 >> 14 >= result >> 14)
    {
      uint64_t v5 = sub_1C6576B20();
      swift_bridgeObjectRelease();
      return v5;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1C64DC350(uint64_t result, unint64_t a2)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    SiriSuggestionsKit::DialogSpeakableString result = sub_1C6576B00();
    if (v3) {
      unint64_t v4 = a2;
    }
    else {
      unint64_t v4 = result;
    }
    if (v4 >> 14 >= a2 >> 14)
    {
      uint64_t v5 = sub_1C6576B20();
      swift_bridgeObjectRelease();
      return v5;
    }
  }
  __break(1u);
  return result;
}

uint64_t DialogSpeakableString.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  OUTLINED_FUNCTION_1_8();
  sub_1C6577200();
  if (!v2)
  {
    __swift_project_boxed_opaque_existential_1(v10, v10[3]);
    OUTLINED_FUNCTION_1_8();
    v5._unint64_t countAndFlagsBits = sub_1C65770A0();
    DialogSpeakableString.init(serializedValue:)(v5);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
    *(_OWORD *)a2 = v7;
    *(void *)(a2 + 16) = v8;
    *(void *)(a2 + 24) = v9;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t DialogSpeakableString.encode(to:)(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C6577230();
  DialogSpeakableString.toString.getter();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v3);
  sub_1C65770B0();
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v2);
}

uint64_t DialogSpeakableString.toString.getter()
{
  BOOL v1 = *v0 == v0[2] && v0[1] == v0[3];
  if (v1 || (sub_1C6577090() & 1) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1C6576620();
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_1C6576620();
    swift_bridgeObjectRelease();
    sub_1C6576620();
    swift_bridgeObjectRetain();
    sub_1C6576620();
  }
  swift_bridgeObjectRelease();
  sub_1C6576620();
  return 5985107;
}

uint64_t static DialogSpeakableString.== infix(_:_:)(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v3 = a1[3];
  uint64_t v4 = a2[2];
  uint64_t v5 = a2[3];
  BOOL v6 = *a1 == *a2 && a1[1] == a2[1];
  if (v6 || (v7 = sub_1C6577090(), uint64_t result = 0, (v7 & 1) != 0))
  {
    if (v2 == v4 && v3 == v5)
    {
      return 1;
    }
    else
    {
      return sub_1C6577090();
    }
  }
  return result;
}

uint64_t sub_1C64DC740@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return DialogSpeakableString.init(from:)(a1, a2);
}

uint64_t sub_1C64DC758(void *a1)
{
  return DialogSpeakableString.encode(to:)(a1);
}

uint64_t DialogSpeakableString.toDialog(dialogProvider:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = *v2;
  uint64_t v4 = v2[1];
  uint64_t v7 = v2[2];
  uint64_t v6 = v2[3];
  sub_1C649FA30(a1, (uint64_t)v16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F10F8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F1100);
  if (swift_dynamicCast())
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v15);
    if (qword_1EBBF8EE0 != -1) {
      swift_once();
    }
    uint64_t v8 = sub_1C65763A0();
    __swift_project_value_buffer(v8, (uint64_t)qword_1EBBF8EC0);
    uint64_t v9 = sub_1C6576380();
    os_log_type_t v10 = sub_1C6576A50();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v11 = 0;
      _os_log_impl(&dword_1C6494000, v9, v10, "Mapping DialogSpeakableString to CAT instance for dialogging", v11, 2u);
      MEMORY[0x1C87A0050](v11, -1, -1);
    }

    v16[0] = v5;
    v16[1] = v4;
    long long v16[2] = v7;
    v16[3] = v6;
    uint64_t result = DialogSpeakableString.toString.getter();
    a2[3] = MEMORY[0x1E4FBB1A0];
    *a2 = result;
    a2[1] = v13;
  }
  else
  {
    a2[3] = (uint64_t)&type metadata for DialogSpeakableString;
    unint64_t v14 = (void *)swift_allocObject();
    *a2 = (uint64_t)v14;
    _OWORD v14[2] = v5;
    v14[3] = v4;
    uint64_t v14[4] = v7;
    uint64_t v14[5] = v6;
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1C64DC918()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 48, 7);
}

ValueMetadata *type metadata accessor for DialogSpeakableString()
{
  return &type metadata for DialogSpeakableString;
}

uint64_t OUTLINED_FUNCTION_0_7()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_1_8()
{
  return v0;
}

ValueMetadata *type metadata accessor for SiriSuggestions()
{
  return &type metadata for SiriSuggestions;
}

uint64_t sub_1C64DC9A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[14] = a3;
  v4[15] = v3;
  v4[12] = a1;
  v4[13] = a2;
  return MEMORY[0x1F4188298](sub_1C64DC9CC, 0, 0);
}

uint64_t sub_1C64DC9CC()
{
  BOOL v1 = (void *)v0[15];
  uint64_t v2 = v1[5];
  uint64_t v3 = v1[6];
  __swift_project_boxed_opaque_existential_1(v1 + 2, v2);
  uint64_t v4 = *(void *)(v3 + 8);
  os_log_type_t v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 + 16) + **(int **)(v4 + 16));
  uint64_t v5 = (void *)swift_task_alloc();
  v0[16] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_1C64DCAE0;
  uint64_t v6 = v0[13];
  uint64_t v7 = v0[14];
  uint64_t v8 = v0[12];
  return v10(v8, v6, v7, v2, v4);
}

uint64_t sub_1C64DCAE0()
{
  OUTLINED_FUNCTION_0_0();
  OUTLINED_FUNCTION_3_4();
  *uint64_t v2 = v1;
  *uint64_t v2 = *v0;
  *(void *)(v1 + 136) = v3;
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1C64DCBB8, 0, 0);
}

uint64_t sub_1C64DCBB8()
{
  uint64_t v1 = v0[17];
  uint64_t v2 = *(void *)(v1 + 16);
  v0[18] = v2;
  if (v2)
  {
    v0[19] = 0;
    uint64_t v3 = v1 + 32;
    swift_bridgeObjectRetain();
    sub_1C649FA30(v3, (uint64_t)(v0 + 2));
    uint64_t v4 = OUTLINED_FUNCTION_1_9();
    v0[20] = v5(v4);
    swift_getObjectType();
    OUTLINED_FUNCTION_2_7();
    v0[10] = &type metadata for Continuer;
    v0[11] = sub_1C64DD158();
    uint64_t v6 = swift_allocObject();
    OUTLINED_FUNCTION_3_6(v6);
    uint64_t v7 = (void *)swift_task_alloc();
    v0[21] = v7;
    *uint64_t v7 = v0;
    v7[1] = sub_1C64DCD0C;
    OUTLINED_FUNCTION_4_6();
    return Context.setWindowPartition(windowPartition:)();
  }
  else
  {
    uint64_t v9 = (uint64_t (*)(void))v0[1];
    return v9();
  }
}

uint64_t sub_1C64DCD0C()
{
  OUTLINED_FUNCTION_0_0();
  OUTLINED_FUNCTION_3_4();
  *uint64_t v2 = v1;
  uint64_t v3 = v1 + 56;
  uint64_t v4 = *v0;
  OUTLINED_FUNCTION_3_4();
  *uint64_t v5 = v4;
  swift_task_dealloc();
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v3);
  return MEMORY[0x1F4188298](sub_1C64DCE04, 0, 0);
}

uint64_t sub_1C64DCE04()
{
  uint64_t v1 = v0[18];
  uint64_t v2 = v0[19] + 1;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 2));
  if (v2 == v1)
  {
    swift_bridgeObjectRelease();
    uint64_t v3 = (uint64_t (*)(uint64_t))v0[1];
    uint64_t v4 = v0[17];
    return v3(v4);
  }
  else
  {
    uint64_t v6 = v0[19] + 1;
    v0[19] = v6;
    sub_1C649FA30(v0[17] + 40 * v6 + 32, (uint64_t)(v0 + 2));
    uint64_t v7 = OUTLINED_FUNCTION_1_9();
    v0[20] = v8(v7);
    swift_getObjectType();
    OUTLINED_FUNCTION_2_7();
    v0[10] = &type metadata for Continuer;
    v0[11] = sub_1C64DD158();
    uint64_t v9 = swift_allocObject();
    OUTLINED_FUNCTION_3_6(v9);
    uint64_t v10 = (void *)swift_task_alloc();
    v0[21] = v10;
    *uint64_t v10 = v0;
    v10[1] = sub_1C64DCD0C;
    OUTLINED_FUNCTION_4_6();
    return Context.setWindowPartition(windowPartition:)();
  }
}

uint64_t sub_1C64DCF78()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);

  return MEMORY[0x1F4186488](v0, 56, 7);
}

uint64_t type metadata accessor for ContinuerGenerator()
{
  return self;
}

uint64_t sub_1C64DCFD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_1C64DD084;
  return sub_1C64DC9A8(a1, a2, a3);
}

uint64_t sub_1C64DD084(uint64_t a1)
{
  OUTLINED_FUNCTION_0_0();
  uint64_t v3 = *v1;
  OUTLINED_FUNCTION_3_4();
  *uint64_t v4 = v3;
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(uint64_t))(v3 + 8);
  return v5(a1);
}

unint64_t sub_1C64DD158()
{
  unint64_t result = qword_1EA3F1118;
  if (!qword_1EA3F1118)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F1118);
  }
  return result;
}

uint64_t sub_1C64DD1A4()
{
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 56)) {
    __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  }

  return MEMORY[0x1F4186498](v0, 72, 7);
}

uint64_t OUTLINED_FUNCTION_1_9()
{
  uint64_t v2 = *(void *)(v0 + 40);
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return v2;
}

uint64_t OUTLINED_FUNCTION_2_7()
{
  __swift_project_boxed_opaque_existential_1(v1, *(void *)(v0 + 40));
  return CandidateSuggestion.getSuggestionId()()._countAndFlagsBits;
}

double OUTLINED_FUNCTION_3_6(uint64_t a1)
{
  *(void *)(v2 + 56) = a1;
  double result = 0.0;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 16) = v1;
  *(void *)(a1 + 24) = v3;
  return result;
}

uint64_t OUTLINED_FUNCTION_4_6()
{
  return v0;
}

uint64_t DialogConfig.templateDirectory.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

SiriSuggestionsKit::DialogConfig __swiftcall DialogConfig.init(catId:templateDirectory:)(Swift::String catId, Swift::String_optional templateDirectory)
{
  v2->value = catId;
  v2[1] = templateDirectory;
  result.templateDirectory = templateDirectory;
  result.catId = catId;
  return result;
}

uint64_t sub_1C64DD2DC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6449746163 && a2 == 0xE500000000000000;
  if (v2 || (sub_1C6577090() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001C6588460)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1C6577090();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1C64DD3C4(char a1)
{
  if (a1) {
    return 0xD000000000000011;
  }
  else {
    return 0x6449746163;
  }
}

uint64_t sub_1C64DD3FC()
{
  return sub_1C64DD3C4(*v0);
}

uint64_t sub_1C64DD404@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C64DD2DC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C64DD42C(uint64_t a1)
{
  unint64_t v2 = sub_1C64DD5C4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C64DD468(uint64_t a1)
{
  unint64_t v2 = sub_1C64DD5C4();

  return MEMORY[0x1F41862B0](a1, v2);
}

void DialogConfig.encode(to:)()
{
  OUTLINED_FUNCTION_25();
  unint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F1120);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v3);
  OUTLINED_FUNCTION_23();
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  sub_1C64DD5C4();
  sub_1C6577240();
  sub_1C6576FD0();
  if (!v0) {
    sub_1C6576F90();
  }
  uint64_t v4 = OUTLINED_FUNCTION_1_5();
  v5(v4);
  OUTLINED_FUNCTION_26();
}

unint64_t sub_1C64DD5C4()
{
  unint64_t result = qword_1EA3F1128;
  if (!qword_1EA3F1128)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F1128);
  }
  return result;
}

void DialogConfig.init(from:)()
{
  OUTLINED_FUNCTION_25();
  unint64_t v2 = v1;
  uint64_t v4 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F1130);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v5);
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  sub_1C64DD5C4();
  sub_1C6577210();
  if (v0)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v2);
  }
  else
  {
    uint64_t v6 = sub_1C6576EF0();
    uint64_t v8 = v7;
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_1C6576EB0();
    uint64_t v11 = v10;
    uint64_t v14 = v9;
    uint64_t v12 = OUTLINED_FUNCTION_8_2();
    v13(v12);
    *uint64_t v4 = v6;
    v4[1] = v8;
    _OWORD v4[2] = v14;
    v4[3] = v11;
    swift_bridgeObjectRetain();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v2);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_26();
}

void sub_1C64DD7C4()
{
}

void sub_1C64DD7DC()
{
}

SiriSuggestionsKit::HintsDonotShowTreatmentType_optional __swiftcall HintsDonotShowTreatmentType.init(rawValue:)(Swift::String rawValue)
{
  return (SiriSuggestionsKit::HintsDonotShowTreatmentType_optional)sub_1C64DEA5C(v1);
}

uint64_t HintsDonotShowTreatmentType.rawValue.getter()
{
  uint64_t v1 = 0x6568744F776F6873;
  if (*v0 != 1) {
    uint64_t v1 = 1701736302;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6F6853746F6E6F64;
  }
}

uint64_t sub_1C64DD864()
{
  return sub_1C6497E80();
}

uint64_t sub_1C64DD870()
{
  return sub_1C655AD3C();
}

uint64_t sub_1C64DD878(uint64_t a1)
{
  return sub_1C649A8D0(a1, *v1);
}

uint64_t sub_1C64DD880()
{
  return sub_1C64EBA70();
}

SiriSuggestionsKit::HintsDonotShowTreatmentType_optional sub_1C64DD888(Swift::String *a1)
{
  return HintsDonotShowTreatmentType.init(rawValue:)(*a1);
}

uint64_t sub_1C64DD894@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = HintsDonotShowTreatmentType.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1C64DD8BC()
{
  return sub_1C6576760();
}

uint64_t sub_1C64DD91C()
{
  return sub_1C6576750();
}

void EnableDisableExpInfo.suggestionEnablementState.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

void EnableDisableExpInfo.hintsDonotShowTreatmentType.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 1);
}

SiriSuggestionsKit::EnableDisableExpInfo __swiftcall EnableDisableExpInfo.init(suggestionEnablementState:hintsDonotShowTreatmentType:)(SiriSuggestionsKit::SuggestionEnablementState suggestionEnablementState, SiriSuggestionsKit::HintsDonotShowTreatmentType hintsDonotShowTreatmentType)
{
  char v3 = *(unsigned char *)hintsDonotShowTreatmentType;
  *unint64_t v2 = *(unsigned char *)suggestionEnablementState;
  v2[1] = v3;
  result.suggestionEnablementState = suggestionEnablementState;
  return result;
}

uint64_t sub_1C64DD998(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000019 && a2 == 0x80000001C6588730 || (sub_1C6577090() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x80000001C6588750)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = sub_1C6577090();
    swift_bridgeObjectRelease();
    if (v5) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

unint64_t sub_1C64DDA84(char a1)
{
  if (a1) {
    return 0xD00000000000001BLL;
  }
  else {
    return 0xD000000000000019;
  }
}

unint64_t sub_1C64DDAC0()
{
  return sub_1C64DDA84(*v0);
}

uint64_t sub_1C64DDAC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C64DD998(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C64DDAF0(uint64_t a1)
{
  unint64_t v2 = sub_1C64DDCA8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C64DDB2C(uint64_t a1)
{
  unint64_t v2 = sub_1C64DDCA8();

  return MEMORY[0x1F41862B0](a1, v2);
}

void EnableDisableExpInfo.encode(to:)()
{
  OUTLINED_FUNCTION_25();
  unint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F1138);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v3);
  OUTLINED_FUNCTION_23();
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  sub_1C64DDCA8();
  sub_1C6577240();
  sub_1C64DDCF4();
  sub_1C6577010();
  if (!v0)
  {
    sub_1C64DDD40();
    sub_1C6577010();
  }
  uint64_t v4 = OUTLINED_FUNCTION_1_5();
  v5(v4);
  OUTLINED_FUNCTION_26();
}

unint64_t sub_1C64DDCA8()
{
  unint64_t result = qword_1EA3F1140;
  if (!qword_1EA3F1140)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F1140);
  }
  return result;
}

unint64_t sub_1C64DDCF4()
{
  unint64_t result = qword_1EA3F1148;
  if (!qword_1EA3F1148)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F1148);
  }
  return result;
}

unint64_t sub_1C64DDD40()
{
  unint64_t result = qword_1EA3F1150;
  if (!qword_1EA3F1150)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F1150);
  }
  return result;
}

void EnableDisableExpInfo.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, char a11, char a12, char a13, char a14)
{
  OUTLINED_FUNCTION_25();
  unint64_t v16 = v15;
  unint64_t v18 = v17;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F1158);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v19);
  __swift_project_boxed_opaque_existential_1(v16, v16[3]);
  sub_1C64DDCA8();
  sub_1C6577210();
  if (!v14)
  {
    sub_1C64DDEEC();
    OUTLINED_FUNCTION_16_4();
    sub_1C64DDF38();
    OUTLINED_FUNCTION_16_4();
    uint64_t v20 = OUTLINED_FUNCTION_8_2();
    v21(v20);
    *unint64_t v18 = a14;
    v18[1] = a12;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
  OUTLINED_FUNCTION_26();
}

unint64_t sub_1C64DDEEC()
{
  unint64_t result = qword_1EA3F1160;
  if (!qword_1EA3F1160)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F1160);
  }
  return result;
}

unint64_t sub_1C64DDF38()
{
  unint64_t result = qword_1EA3F1168;
  if (!qword_1EA3F1168)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F1168);
  }
  return result;
}

void sub_1C64DDF84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  EnableDisableExpInfo.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8, SBYTE4(vars8), SBYTE5(vars8), SBYTE6(vars8), SHIBYTE(vars8));
}

void sub_1C64DDF9C()
{
}

uint64_t SuggestionDetailsConfig.suggestionId.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

void SuggestionDetailsConfig.enableDisableExpInfo.getter(_WORD *a1@<X8>)
{
  *a1 = *(_WORD *)(v1 + 16);
}

uint64_t SuggestionDetailsConfig.dialogConfig.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  uint64_t v4 = v1[5];
  uint64_t v5 = v1[6];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  return sub_1C64DE004(v2, v3);
}

uint64_t sub_1C64DE004(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

void __swiftcall SuggestionDetailsConfig.init(suggestionId:enableDisableExpInfo:dialogConfig:)(SiriSuggestionsKit::SuggestionDetailsConfig *__return_ptr retstr, Swift::String suggestionId, SiriSuggestionsKit::EnableDisableExpInfo_optional enableDisableExpInfo, SiriSuggestionsKit::DialogConfig_optional dialogConfig)
{
  SiriSuggestionsKit::EnableDisableExpInfo_optional v4 = **(SiriSuggestionsKit::EnableDisableExpInfo_optional **)&enableDisableExpInfo.value.suggestionEnablementState;
  retstr->suggestionId = suggestionId;
  retstr->enableDisableExpInfo = v4;
  Swift::String_optional v5 = *(Swift::String_optional *)(dialogConfig.value.catId._countAndFlagsBits + 16);
  retstr->dialogConfig.value.catId = *(Swift::String *)dialogConfig.value.catId._countAndFlagsBits;
  retstr->dialogConfig.value.templateDirectory = v5;
}

uint64_t sub_1C64DE064(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6974736567677573 && a2 == 0xEC00000064496E6FLL;
  if (v2 || (sub_1C6577090() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001C6588770 || (sub_1C6577090() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6F43676F6C616964 && a2 == 0xEC0000006769666ELL)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v7 = sub_1C6577090();
    swift_bridgeObjectRelease();
    if (v7) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1C64DE1E0(char a1)
{
  if (!a1) {
    return 0x6974736567677573;
  }
  if (a1 == 1) {
    return 0xD000000000000014;
  }
  return 0x6F43676F6C616964;
}

uint64_t sub_1C64DE24C()
{
  return sub_1C64DE1E0(*v0);
}

uint64_t sub_1C64DE254@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C64DE064(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C64DE27C(uint64_t a1)
{
  unint64_t v2 = sub_1C64DE474();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C64DE2B8(uint64_t a1)
{
  unint64_t v2 = sub_1C64DE474();

  return MEMORY[0x1F41862B0](a1, v2);
}

void SuggestionDetailsConfig.encode(to:)()
{
  OUTLINED_FUNCTION_25();
  uint64_t v3 = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F1170);
  OUTLINED_FUNCTION_0();
  uint64_t v5 = v4;
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_23();
  uint64_t v7 = v3[3];
  uint64_t v8 = v3;
  uint64_t v10 = v9;
  __swift_project_boxed_opaque_existential_1(v8, v7);
  sub_1C64DE474();
  sub_1C6577240();
  sub_1C6576FD0();
  if (!v0)
  {
    sub_1C64DE4C0();
    OUTLINED_FUNCTION_13_3();
    sub_1C64DE50C();
    OUTLINED_FUNCTION_13_3();
  }
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v1, v10);
  OUTLINED_FUNCTION_26();
}

unint64_t sub_1C64DE474()
{
  unint64_t result = qword_1EA3F1178;
  if (!qword_1EA3F1178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F1178);
  }
  return result;
}

unint64_t sub_1C64DE4C0()
{
  unint64_t result = qword_1EA3F1180;
  if (!qword_1EA3F1180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F1180);
  }
  return result;
}

unint64_t sub_1C64DE50C()
{
  unint64_t result = qword_1EA3F1188;
  if (!qword_1EA3F1188)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F1188);
  }
  return result;
}

void SuggestionDetailsConfig.init(from:)()
{
  OUTLINED_FUNCTION_25();
  unint64_t v2 = v1;
  uint64_t v4 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F1190);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v5);
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  sub_1C64DE474();
  sub_1C6577210();
  if (v0)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v2);
  }
  else
  {
    LOBYTE(v15) = 0;
    uint64_t v6 = sub_1C6576EF0();
    uint64_t v8 = v7;
    sub_1C64DE76C();
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_11_5();
    sub_1C6576EE0();
    sub_1C64DE7B8();
    OUTLINED_FUNCTION_11_5();
    sub_1C6576EE0();
    uint64_t v9 = OUTLINED_FUNCTION_0_1();
    v10(v9);
    swift_bridgeObjectRetain();
    uint64_t v11 = OUTLINED_FUNCTION_18_5();
    sub_1C64DE004(v11, v12);
    swift_bridgeObjectRelease();
    *(void *)uint64_t v4 = v6;
    *(void *)(v4 + 8) = v8;
    *(_WORD *)(v4 + 16) = v15;
    *(void *)(v4 + 24) = v15;
    *(void *)(v4 + 32) = v16;
    *(void *)(v4 + 40) = v17;
    *(void *)(v4 + 48) = v18;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v2);
    swift_bridgeObjectRelease();
    uint64_t v13 = OUTLINED_FUNCTION_18_5();
    sub_1C64DE804(v13, v14);
  }
  OUTLINED_FUNCTION_26();
}

unint64_t sub_1C64DE76C()
{
  unint64_t result = qword_1EA3F1198;
  if (!qword_1EA3F1198)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F1198);
  }
  return result;
}

unint64_t sub_1C64DE7B8()
{
  unint64_t result = qword_1EA3F11A0;
  if (!qword_1EA3F11A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F11A0);
  }
  return result;
}

uint64_t sub_1C64DE804(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1C64DE848()
{
}

void sub_1C64DE860()
{
}

uint64_t OwnerConfig.ownerId.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t OwnerConfig.suggestionDetailsConfigs.getter()
{
  return swift_bridgeObjectRetain();
}

SiriSuggestionsKit::OwnerConfig __swiftcall OwnerConfig.init(ownerId:suggestionDetailsConfigs:ownerAdopterConfigs:)(Swift::String ownerId, Swift::OpaquePointer suggestionDetailsConfigs, Swift::OpaquePointer ownerAdopterConfigs)
{
  *(Swift::String *)uint64_t v3 = ownerId;
  *(Swift::OpaquePointer *)(v3 + 16) = ownerAdopterConfigs;
  *(Swift::OpaquePointer *)(v3 + 24) = suggestionDetailsConfigs;
  result.ownerId = ownerId;
  result.suggestionDetailsConfigs = ownerAdopterConfigs;
  result.ownerAdopterConfigs = suggestionDetailsConfigs;
  return result;
}

double AllOwnerConfigs.creationTime.getter()
{
  return *(double *)(v0 + 24);
}

uint64_t AllOwnerConfigs.__allocating_init(ownerConfigs:)()
{
  uint64_t v1 = OUTLINED_FUNCTION_14_2();
  AllOwnerConfigs.init(ownerConfigs:)(v0);
  return v1;
}

uint64_t AllOwnerConfigs.init(ownerConfigs:)(uint64_t a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_1C6576190();
  OUTLINED_FUNCTION_0();
  uint64_t v7 = v6;
  MEMORY[0x1F4188790](v8);
  OUTLINED_FUNCTION_23();
  *(void *)(v3 + 16) = a1;
  sub_1C6576180();
  sub_1C6576140();
  uint64_t v10 = v9;
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v2, v5);
  *(void *)(v3 + 24) = v10;
  return v3;
}

uint64_t AllOwnerConfigs.__allocating_init(ownerConfigs:creationTime:)(double a1)
{
  uint64_t result = OUTLINED_FUNCTION_14_2();
  *(void *)(result + 16) = v1;
  *(double *)(result + 24) = a1;
  return result;
}

uint64_t AllOwnerConfigs.init(ownerConfigs:creationTime:)(uint64_t a1, double a2)
{
  *(void *)(v2 + 16) = a1;
  *(double *)(v2 + 24) = a2;
  return v2;
}

uint64_t AllOwnerConfigs.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t AllOwnerConfigs.__deallocating_deinit()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186488](v0, 32, 7);
}

SiriSuggestionsKit::ProviderStatusForOwnerConfig_optional __swiftcall ProviderStatusForOwnerConfig.init(rawValue:)(Swift::String rawValue)
{
  return (SiriSuggestionsKit::ProviderStatusForOwnerConfig_optional)sub_1C64DEA5C(v1);
}

uint64_t sub_1C64DEA5C@<X0>(char *a1@<X8>)
{
  unint64_t v2 = sub_1C6576E60();
  uint64_t result = swift_bridgeObjectRelease();
  char v4 = 3;
  if (v2 < 3) {
    char v4 = v2;
  }
  *a1 = v4;
  return result;
}

void *static ProviderStatusForOwnerConfig.allCases.getter()
{
  return &unk_1F2157B48;
}

uint64_t ProviderStatusForOwnerConfig.rawValue.getter()
{
  uint64_t v1 = 0x7553646E416E6172;
  if (*v0 != 1) {
    uint64_t v1 = 0x6146646E416E6172;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x7552746F6E646964;
  }
}

uint64_t sub_1C64DEB34(unsigned __int8 *a1, char *a2)
{
  return sub_1C6497D54(*a1, *a2);
}

uint64_t sub_1C64DEB40()
{
  return sub_1C655AD48();
}

uint64_t sub_1C64DEB48()
{
  return sub_1C649A82C();
}

uint64_t sub_1C64DEB50()
{
  return sub_1C64EB9C8();
}

SiriSuggestionsKit::ProviderStatusForOwnerConfig_optional sub_1C64DEB58(Swift::String *a1)
{
  return ProviderStatusForOwnerConfig.init(rawValue:)(*a1);
}

uint64_t sub_1C64DEB64@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = ProviderStatusForOwnerConfig.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_1C64DEB8C(void *a1@<X8>)
{
  *a1 = &unk_1F2157B48;
}

uint64_t OwnerConfigProvider.bundleLoaded(globalLifecyclecontainer:)()
{
  OUTLINED_FUNCTION_6_0();
  v1[10] = v2;
  v1[11] = v0;
  v1[8] = v3;
  v1[9] = v4;
  v1[7] = v5;
  uint64_t v7 = sub_1C65768C0();
  v1[12] = v7;
  v1[13] = v6;
  return MEMORY[0x1F4188298](sub_1C64DEC18, v7, v6);
}

uint64_t sub_1C64DEC18()
{
  uint64_t v14 = v0;
  (*(void (**)(uint64_t *__return_ptr, void))(v0[10] + 40))(&v13, v0[9]);
  if ((_BYTE)v13)
  {
    char v1 = sub_1C6577090();
    swift_bridgeObjectRelease();
    if ((v1 & 1) == 0)
    {
      uint64_t v2 = (uint64_t (*)(void))v0[1];
      return v2();
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  if (qword_1EBBFC540 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_1C65763A0();
  v0[14] = __swift_project_value_buffer(v4, (uint64_t)qword_1EBBFC548);
  uint64_t v5 = sub_1C6576380();
  os_log_type_t v6 = sub_1C6576A50();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v7 = 0;
    _os_log_impl(&dword_1C6494000, v5, v6, "loading domain configs on bundle loaded", v7, 2u);
    MEMORY[0x1C87A0050](v7, -1, -1);
  }
  uint64_t v12 = v0[10];

  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v12 + 32) + **(int **)(v12 + 32));
  uint64_t v8 = (void *)swift_task_alloc();
  v0[15] = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_1C64DEEB0;
  uint64_t v9 = v0[10];
  uint64_t v10 = v0[9];
  return v11(v10, v9);
}

uint64_t sub_1C64DEEB0()
{
  OUTLINED_FUNCTION_0_0();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_3_4();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_3_4();
  *os_log_type_t v6 = v5;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v7 = *(uint64_t (**)(void))(v5 + 8);
    return v7();
  }
  else
  {
    uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v3[10] + 24) + **(int **)(v3[10] + 24));
    uint64_t v9 = (void *)swift_task_alloc();
    v3[16] = v9;
    *uint64_t v9 = v5;
    v9[1] = sub_1C64DF048;
    uint64_t v10 = v3[10];
    uint64_t v11 = v3[9];
    return v12(v11, v10);
  }
}

uint64_t sub_1C64DF048()
{
  OUTLINED_FUNCTION_6_0();
  OUTLINED_FUNCTION_4_7();
  OUTLINED_FUNCTION_3_4();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_3_4();
  *uint64_t v5 = v4;
  *(void *)(v7 + 136) = v6;
  swift_task_dealloc();
  uint64_t v8 = *(void *)(v0 + 104);
  uint64_t v9 = *(void *)(v0 + 96);
  return MEMORY[0x1F4188298](sub_1C64DF140, v9, v8);
}

uint64_t sub_1C64DF140()
{
  uint64_t v16 = v0;
  swift_retain_n();
  char v1 = sub_1C6576380();
  os_log_type_t v2 = sub_1C6576A50();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v4 = swift_slowAlloc();
    uint64_t v15 = v4;
    *(_DWORD *)uint64_t v3 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_1C6576480();
    unint64_t v7 = v6;
    swift_bridgeObjectRelease();
    v0[6] = sub_1C64BCF18(v5, v7, &v15);
    sub_1C6576B40();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl(&dword_1C6494000, v1, v2, "allOwnerConfigs - %s", v3, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C87A0050](v4, -1, -1);
    MEMORY[0x1C87A0050](v3, -1, -1);
  }
  else
  {
    swift_release_n();
  }

  uint64_t v8 = v0[17];
  uint64_t v14 = v0[8];
  uint64_t ObjectType = swift_getObjectType();
  v0[5] = type metadata accessor for AllOwnerConfigs();
  v0[2] = v8;
  uint64_t v13 = (uint64_t (*)(void *, uint64_t, uint64_t))(*(void *)(v14 + 64) + **(int **)(v14 + 64));
  swift_retain();
  uint64_t v10 = (void *)swift_task_alloc();
  v0[18] = v10;
  *uint64_t v10 = v0;
  v10[1] = sub_1C64DF3D8;
  uint64_t v11 = v0[8];
  return v13(v0 + 2, ObjectType, v11);
}

uint64_t sub_1C64DF3D8()
{
  OUTLINED_FUNCTION_4_7();
  OUTLINED_FUNCTION_3_4();
  *uint64_t v3 = v2;
  uint64_t v4 = v2 + 16;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_3_4();
  *unint64_t v6 = v5;
  swift_task_dealloc();
  __swift_destroy_boxed_opaque_existential_1(v4);
  uint64_t v7 = *(void *)(v0 + 104);
  uint64_t v8 = *(void *)(v0 + 96);
  return MEMORY[0x1F4188298](sub_1C64DF4E0, v8, v7);
}

uint64_t sub_1C64DF4E0()
{
  OUTLINED_FUNCTION_6_0();
  swift_release();
  char v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t type metadata accessor for AllOwnerConfigs()
{
  return self;
}

unint64_t sub_1C64DF568()
{
  unint64_t result = qword_1EA3F11B0;
  if (!qword_1EA3F11B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F11B0);
  }
  return result;
}

unint64_t sub_1C64DF5B8()
{
  unint64_t result = qword_1EA3F11B8;
  if (!qword_1EA3F11B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F11B8);
  }
  return result;
}

unint64_t sub_1C64DF608()
{
  unint64_t result = qword_1EA3F11C0;
  if (!qword_1EA3F11C0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA3F11C8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F11C0);
  }
  return result;
}

void type metadata accessor for DialogConfig()
{
}

void type metadata accessor for HintsDonotShowTreatmentType()
{
}

uint64_t getEnumTagSinglePayload for EnableDisableExpInfo(unsigned __int16 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFE)
  {
    if (a2 + 65282 <= 0xFFFEFFFF) {
      int v2 = 2;
    }
    else {
      int v2 = 4;
    }
    if (a2 + 65282 < 0xFF0000) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = *((unsigned __int8 *)a1 + 2);
      if (!*((unsigned char *)a1 + 2)) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 16)) - 65283;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *(unsigned __int8 *)a1;
  BOOL v7 = v6 >= 3;
  int v5 = v6 - 3;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for EnableDisableExpInfo(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a3 + 65282 <= 0xFFFEFFFF) {
    int v3 = 2;
  }
  else {
    int v3 = 4;
  }
  if (a3 + 65282 < 0xFF0000) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 16) + 1;
    *(_WORD *)unint64_t result = a2 - 254;
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = v6;
        break;
      case 2:
        *(_WORD *)(result + 2) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C64DF7DCLL);
      case 4:
        *(_DWORD *)(result + 2) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 2) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *(unsigned char *)unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

void type metadata accessor for EnableDisableExpInfo()
{
}

uint64_t destroy for SuggestionDetailsConfig(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t result = *(void *)(a1 + 32);
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for SuggestionDetailsConfig(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  if (v5)
  {
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    *(void *)(a1 + 32) = v5;
    uint64_t v6 = *(void *)(a2 + 40);
    uint64_t v7 = *(void *)(a2 + 48);
    *(void *)(a1 + 40) = v6;
    *(void *)(a1 + 48) = v7;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v8 = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 40) = v8;
  }
  return a1;
}

uint64_t assignWithCopy for SuggestionDetailsConfig(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  uint64_t v4 = (_OWORD *)(a1 + 24);
  uint64_t v5 = (_OWORD *)(a2 + 24);
  uint64_t v6 = *(void *)(a2 + 32);
  if (*(void *)(a1 + 32))
  {
    if (v6)
    {
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1C64DF9EC(a1 + 24);
      long long v7 = *(_OWORD *)(a2 + 40);
      *uint64_t v4 = *v5;
      *(_OWORD *)(a1 + 40) = v7;
    }
  }
  else if (v6)
  {
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v8 = *(_OWORD *)(a2 + 40);
    *uint64_t v4 = *v5;
    *(_OWORD *)(a1 + 40) = v8;
  }
  return a1;
}

uint64_t sub_1C64DF9EC(uint64_t a1)
{
  return a1;
}

uint64_t assignWithTake for SuggestionDetailsConfig(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  if (!*(void *)(a1 + 32)) {
    goto LABEL_5;
  }
  uint64_t v5 = *(void *)(a2 + 32);
  if (!v5)
  {
    sub_1C64DF9EC(a1 + 24);
LABEL_5:
    long long v7 = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 40) = v7;
    return a1;
  }
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SuggestionDetailsConfig(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 56))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SuggestionDetailsConfig(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for SuggestionDetailsConfig()
{
}

uint64_t dispatch thunk of static AdopterConfig.defaultConfig()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of static AdopterConfig.parseConfig(configData:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t destroy for OwnerConfig()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for OwnerConfig(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for OwnerConfig(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for OwnerConfig(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

void type metadata accessor for OwnerConfig()
{
}

uint64_t method lookup function for AllOwnerConfigs(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for AllOwnerConfigs);
}

uint64_t dispatch thunk of AllOwnerConfigs.__allocating_init(ownerConfigs:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of AllOwnerConfigs.__allocating_init(ownerConfigs:creationTime:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

void type metadata accessor for ProviderStatusForOwnerConfig()
{
}

uint64_t dispatch thunk of OwnerConfigProvider.getAllOwnersConfigs()()
{
  char v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *char v1 = v0;
  v1[1] = sub_1C64DFE28;
  uint64_t v2 = OUTLINED_FUNCTION_17_4();
  return v3(v2);
}

uint64_t sub_1C64DFE28()
{
  OUTLINED_FUNCTION_6_0();
  uint64_t v2 = v1;
  OUTLINED_FUNCTION_0_0();
  uint64_t v3 = *v0;
  OUTLINED_FUNCTION_3_4();
  *uint64_t v4 = v3;
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(uint64_t))(v3 + 8);
  return v5(v2);
}

uint64_t dispatch thunk of OwnerConfigProvider.loadAllOwnerConfigs()()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1C64DFFDC;
  uint64_t v2 = OUTLINED_FUNCTION_17_4();
  return v3(v2);
}

uint64_t sub_1C64DFFDC()
{
  OUTLINED_FUNCTION_6_0();
  OUTLINED_FUNCTION_0_0();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_3_4();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v1 + 8);
  return v3();
}

uint64_t dispatch thunk of OwnerConfigProvider.status.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

unsigned char *_s18SiriSuggestionsKit27HintsDonotShowTreatmentTypeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C64E0184);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SuggestionDetailsConfig.CodingKeys()
{
  return &type metadata for SuggestionDetailsConfig.CodingKeys;
}

ValueMetadata *type metadata accessor for EnableDisableExpInfo.CodingKeys()
{
  return &type metadata for EnableDisableExpInfo.CodingKeys;
}

unsigned char *_s18SiriSuggestionsKit20EnableDisableExpInfoV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C64E029CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DialogConfig.CodingKeys()
{
  return &type metadata for DialogConfig.CodingKeys;
}

unint64_t sub_1C64E02D8()
{
  unint64_t result = qword_1EA3F11E0;
  if (!qword_1EA3F11E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F11E0);
  }
  return result;
}

unint64_t sub_1C64E0328()
{
  unint64_t result = qword_1EA3F11E8;
  if (!qword_1EA3F11E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F11E8);
  }
  return result;
}

unint64_t sub_1C64E0378()
{
  unint64_t result = qword_1EA3F11F0;
  if (!qword_1EA3F11F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F11F0);
  }
  return result;
}

unint64_t sub_1C64E03C8()
{
  unint64_t result = qword_1EA3F11F8;
  if (!qword_1EA3F11F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F11F8);
  }
  return result;
}

unint64_t sub_1C64E0418()
{
  unint64_t result = qword_1EA3F1200;
  if (!qword_1EA3F1200)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F1200);
  }
  return result;
}

unint64_t sub_1C64E0468()
{
  unint64_t result = qword_1EA3F1208;
  if (!qword_1EA3F1208)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F1208);
  }
  return result;
}

unint64_t sub_1C64E04B8()
{
  unint64_t result = qword_1EA3F1210;
  if (!qword_1EA3F1210)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F1210);
  }
  return result;
}

unint64_t sub_1C64E0508()
{
  unint64_t result = qword_1EA3F1218;
  if (!qword_1EA3F1218)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F1218);
  }
  return result;
}

unint64_t sub_1C64E0558()
{
  unint64_t result = qword_1EA3F1220;
  if (!qword_1EA3F1220)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F1220);
  }
  return result;
}

unint64_t sub_1C64E05A4()
{
  unint64_t result = qword_1EA3F1228;
  if (!qword_1EA3F1228)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F1228);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_9_4()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_13_3()
{
  return sub_1C6576FC0();
}

uint64_t OUTLINED_FUNCTION_14_2()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_16_4()
{
  return sub_1C6576F30();
}

uint64_t OUTLINED_FUNCTION_17_4()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_18_5()
{
  return v0;
}

double static StatisticalUtils.getStats(values:)@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2)
  {
    int v3 = (double *)(a1 + 32);
    double result = 0.0;
    uint64_t v5 = *(void *)(a1 + 16);
    double v6 = 0.0;
    double v7 = 0.0;
    double v8 = 0.0;
    do
    {
      double v9 = *v3++;
      double v10 = v9;
      double v8 = v8 + v9;
      double v7 = v7 + v10 * v10;
      if (v9 < v6) {
        double v6 = v10;
      }
      if (result < v10) {
        double result = v10;
      }
      --v5;
    }
    while (v5);
  }
  else
  {
    double result = 0.0;
    double v6 = 0.0;
    double v7 = 0.0;
    double v8 = 0.0;
  }
  double v11 = v8 / (double)v2;
  *a2 = v11;
  a2[1] = sqrt(v7 / (double)v2 - v11 * v11);
  a2[2] = v6;
  a2[3] = result;
  return result;
}

double Stats.mean.getter()
{
  return *(double *)v0;
}

double Stats.stdDev.getter()
{
  return *(double *)(v0 + 8);
}

double Stats.min.getter()
{
  return *(double *)(v0 + 16);
}

double Stats.max.getter()
{
  return *(double *)(v0 + 24);
}

ValueMetadata *type metadata accessor for StatisticalUtils()
{
  return &type metadata for StatisticalUtils;
}

uint64_t getEnumTagSinglePayload for Stats(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for Stats(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)double result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 32) = v3;
  return result;
}

ValueMetadata *type metadata accessor for Stats()
{
  return &type metadata for Stats;
}

BOOL static Objective.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t Objective.hash(into:)()
{
  return sub_1C6577160();
}

uint64_t sub_1C64E07EC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7265766F63736964 && a2 == 0xEF7974696C696261;
  if (v2 || (sub_1C6577090() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x706D6F436B736174 && a2 == 0xEE006E6F6974656CLL;
    if (v6 || (sub_1C6577090() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x656D656761676E65 && a2 == 0xEA0000000000746ELL;
      if (v7 || (sub_1C6577090() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0x74616E7265746C61 && a2 == 0xEC00000073657669)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        char v9 = sub_1C6577090();
        swift_bridgeObjectRelease();
        if (v9) {
          return 3;
        }
        else {
          return 4;
        }
      }
    }
  }
}

uint64_t sub_1C64E0A08(char a1)
{
  uint64_t result = 0x7265766F63736964;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x706D6F436B736174;
      break;
    case 2:
      uint64_t result = 0x656D656761676E65;
      break;
    case 3:
      uint64_t result = 0x74616E7265746C61;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C64E0AC0(uint64_t a1)
{
  unint64_t v2 = sub_1C64E10A4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C64E0AFC(uint64_t a1)
{
  unint64_t v2 = sub_1C64E10A4();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C64E0B38()
{
  return sub_1C64E0A08(*v0);
}

uint64_t sub_1C64E0B40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C64E07EC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C64E0B68(uint64_t a1)
{
  unint64_t v2 = sub_1C64E1058();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C64E0BA4(uint64_t a1)
{
  unint64_t v2 = sub_1C64E1058();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C64E0BE0(uint64_t a1)
{
  unint64_t v2 = sub_1C64E1188();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C64E0C1C(uint64_t a1)
{
  unint64_t v2 = sub_1C64E1188();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C64E0C58(uint64_t a1)
{
  unint64_t v2 = sub_1C64E10F0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C64E0C94(uint64_t a1)
{
  unint64_t v2 = sub_1C64E10F0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C64E0CD0(uint64_t a1)
{
  unint64_t v2 = sub_1C64E113C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C64E0D0C(uint64_t a1)
{
  unint64_t v2 = sub_1C64E113C();

  return MEMORY[0x1F41862B0](a1, v2);
}

void *static Objective.allCases.getter()
{
  return &unk_1F2157B70;
}

uint64_t Objective.encode(to:)(void *a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFB890);
  OUTLINED_FUNCTION_0();
  uint64_t v37 = v5;
  uint64_t v38 = v4;
  MEMORY[0x1F4188790](v4);
  OUTLINED_FUNCTION_3();
  uint64_t v36 = v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFB888);
  OUTLINED_FUNCTION_0();
  uint64_t v34 = v8;
  uint64_t v35 = v7;
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_5_6(v9, v27);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFB898);
  OUTLINED_FUNCTION_0();
  uint64_t v31 = v11;
  uint64_t v32 = v10;
  MEMORY[0x1F4188790](v10);
  OUTLINED_FUNCTION_3();
  uint64_t v30 = v12;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFB8A0);
  OUTLINED_FUNCTION_0();
  uint64_t v28 = v14;
  uint64_t v29 = v13;
  MEMORY[0x1F4188790](v13);
  OUTLINED_FUNCTION_22();
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFB880);
  OUTLINED_FUNCTION_0();
  uint64_t v17 = v16;
  MEMORY[0x1F4188790](v18);
  OUTLINED_FUNCTION_15_0();
  uint64_t v21 = v20 - v19;
  uint64_t v22 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C64E1058();
  sub_1C6577240();
  switch(v22)
  {
    case 1:
      sub_1C64E113C();
      uint64_t v23 = v30;
      OUTLINED_FUNCTION_2_8();
      uint64_t v25 = v31;
      uint64_t v24 = v32;
      goto LABEL_6;
    case 2:
      sub_1C64E10F0();
      uint64_t v23 = v33;
      OUTLINED_FUNCTION_2_8();
      uint64_t v25 = v34;
      uint64_t v24 = v35;
      goto LABEL_6;
    case 3:
      sub_1C64E10A4();
      uint64_t v23 = v36;
      OUTLINED_FUNCTION_2_8();
      uint64_t v25 = v37;
      uint64_t v24 = v38;
LABEL_6:
      (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v23, v24);
      break;
    default:
      sub_1C64E1188();
      sub_1C6576F70();
      (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v2, v29);
      break;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 8))(v21, v15);
}

unint64_t sub_1C64E1058()
{
  unint64_t result = qword_1EBBFBFC0;
  if (!qword_1EBBFBFC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBBFBFC0);
  }
  return result;
}

unint64_t sub_1C64E10A4()
{
  unint64_t result = qword_1EA3F1230;
  if (!qword_1EA3F1230)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F1230);
  }
  return result;
}

unint64_t sub_1C64E10F0()
{
  unint64_t result = qword_1EA3F1238;
  if (!qword_1EA3F1238)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F1238);
  }
  return result;
}

unint64_t sub_1C64E113C()
{
  unint64_t result = qword_1EA3F1240;
  if (!qword_1EA3F1240)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F1240);
  }
  return result;
}

unint64_t sub_1C64E1188()
{
  unint64_t result = qword_1EBBFC008;
  if (!qword_1EBBFC008)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBBFC008);
  }
  return result;
}

uint64_t Objective.hashValue.getter()
{
  return sub_1C6577190();
}

uint64_t Objective.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFB458);
  OUTLINED_FUNCTION_0();
  uint64_t v52 = v4;
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_3();
  uint64_t v54 = v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFB450);
  OUTLINED_FUNCTION_0();
  uint64_t v48 = v8;
  uint64_t v49 = v7;
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_5_6(v9, v43);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFB460);
  OUTLINED_FUNCTION_0();
  uint64_t v46 = v11;
  uint64_t v47 = v10;
  MEMORY[0x1F4188790](v10);
  OUTLINED_FUNCTION_15_0();
  uint64_t v14 = v13 - v12;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFB468);
  OUTLINED_FUNCTION_0();
  uint64_t v45 = v16;
  MEMORY[0x1F4188790](v17);
  OUTLINED_FUNCTION_22();
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFB448);
  OUTLINED_FUNCTION_0();
  uint64_t v53 = v19;
  MEMORY[0x1F4188790](v20);
  OUTLINED_FUNCTION_15_0();
  uint64_t v23 = v22 - v21;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C64E1058();
  sub_1C6577210();
  if (v56) {
    goto LABEL_7;
  }
  uint64_t v57 = a1;
  uint64_t v24 = sub_1C6576F40();
  uint64_t v25 = *(void *)(v24 + 16);
  if (!v25
    || (uint64_t v44 = *(unsigned __int8 *)(v24 + 32),
        sub_1C649F97C(1, v25, v24, v24 + 32, 0, (2 * v25) | 1),
        uint64_t v27 = v26,
        unint64_t v29 = v28,
        swift_bridgeObjectRelease(),
        v27 != v29 >> 1))
  {
    uint64_t v30 = sub_1C6576CE0();
    swift_allocError();
    uint64_t v32 = v31;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F0140);
    *uint64_t v32 = &type metadata for Objective;
    sub_1C6576E90();
    sub_1C6576CD0();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v30 - 8) + 104))(v32, *MEMORY[0x1E4FBBA70], v30);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v23, v18);
    a1 = v57;
LABEL_7:
    uint64_t v33 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v33);
  }
  switch(v44)
  {
    case 1:
      sub_1C64E113C();
      uint64_t v35 = v14;
      OUTLINED_FUNCTION_3_7();
      uint64_t v37 = v46;
      uint64_t v36 = v47;
      goto LABEL_12;
    case 2:
      sub_1C64E10F0();
      uint64_t v35 = v50;
      OUTLINED_FUNCTION_3_7();
      uint64_t v37 = v48;
      uint64_t v36 = v49;
LABEL_12:
      (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v35, v36);
      goto LABEL_13;
    case 3:
      sub_1C64E10A4();
      OUTLINED_FUNCTION_3_7();
      (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v54, v55);
      swift_unknownObjectRelease();
      uint64_t v40 = OUTLINED_FUNCTION_1_10();
      v41(v40);
      uint64_t v33 = (uint64_t)v57;
      uint64_t v42 = a2;
      goto LABEL_14;
    default:
      sub_1C64E1188();
      OUTLINED_FUNCTION_3_7();
      (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v2, v15);
LABEL_13:
      swift_unknownObjectRelease();
      uint64_t v38 = OUTLINED_FUNCTION_1_10();
      v39(v38);
      uint64_t v33 = (uint64_t)v57;
      uint64_t v42 = a2;
LABEL_14:
      *uint64_t v42 = v44;
      break;
  }
  return __swift_destroy_boxed_opaque_existential_1(v33);
}

void sub_1C64E1734(void *a1@<X8>)
{
  *a1 = &unk_1F2157B70;
}

uint64_t sub_1C64E1744@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return Objective.init(from:)(a1, a2);
}

uint64_t sub_1C64E175C(void *a1)
{
  return Objective.encode(to:)(a1);
}

unint64_t sub_1C64E1778()
{
  unint64_t result = qword_1EBBF81E0;
  if (!qword_1EBBF81E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBBF81E0);
  }
  return result;
}

unint64_t sub_1C64E17C8()
{
  unint64_t result = qword_1EA3F1248;
  if (!qword_1EA3F1248)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA3F1250);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F1248);
  }
  return result;
}

ValueMetadata *type metadata accessor for Objective()
{
  return &type metadata for Objective;
}

unsigned char *_s18SiriSuggestionsKit9ObjectiveOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C64E1900);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Objective.CodingKeys()
{
  return &type metadata for Objective.CodingKeys;
}

ValueMetadata *type metadata accessor for Objective.DiscoverabilityCodingKeys()
{
  return &type metadata for Objective.DiscoverabilityCodingKeys;
}

ValueMetadata *type metadata accessor for Objective.TaskCompletionCodingKeys()
{
  return &type metadata for Objective.TaskCompletionCodingKeys;
}

ValueMetadata *type metadata accessor for Objective.EngagementCodingKeys()
{
  return &type metadata for Objective.EngagementCodingKeys;
}

ValueMetadata *type metadata accessor for Objective.AlternativesCodingKeys()
{
  return &type metadata for Objective.AlternativesCodingKeys;
}

unint64_t sub_1C64E197C()
{
  unint64_t result = qword_1EA3F1258;
  if (!qword_1EA3F1258)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F1258);
  }
  return result;
}

unint64_t sub_1C64E19CC()
{
  unint64_t result = qword_1EBBFC018;
  if (!qword_1EBBFC018)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBBFC018);
  }
  return result;
}

unint64_t sub_1C64E1A1C()
{
  unint64_t result = qword_1EBBFC010;
  if (!qword_1EBBFC010)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBBFC010);
  }
  return result;
}

unint64_t sub_1C64E1A6C()
{
  unint64_t result = qword_1EBBFC000;
  if (!qword_1EBBFC000)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBBFC000);
  }
  return result;
}

unint64_t sub_1C64E1ABC()
{
  unint64_t result = qword_1EBBFBFF8;
  if (!qword_1EBBFBFF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBBFBFF8);
  }
  return result;
}

unint64_t sub_1C64E1B0C()
{
  unint64_t result = qword_1EBBFBFE0;
  if (!qword_1EBBFBFE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBBFBFE0);
  }
  return result;
}

unint64_t sub_1C64E1B5C()
{
  unint64_t result = qword_1EBBFBFD8;
  if (!qword_1EBBFBFD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBBFBFD8);
  }
  return result;
}

unint64_t sub_1C64E1BAC()
{
  unint64_t result = qword_1EBBFBFF0;
  if (!qword_1EBBFBFF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBBFBFF0);
  }
  return result;
}

unint64_t sub_1C64E1BFC()
{
  unint64_t result = qword_1EBBFBFE8;
  if (!qword_1EBBFBFE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBBFBFE8);
  }
  return result;
}

unint64_t sub_1C64E1C4C()
{
  unint64_t result = qword_1EBBFBFD0;
  if (!qword_1EBBFBFD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBBFBFD0);
  }
  return result;
}

unint64_t sub_1C64E1C9C()
{
  unint64_t result = qword_1EBBFBFC8;
  if (!qword_1EBBFBFC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBBFBFC8);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_1_10()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_2_8()
{
  return sub_1C6576F70();
}

uint64_t OUTLINED_FUNCTION_3_7()
{
  return sub_1C6576E80();
}

void OUTLINED_FUNCTION_5_6(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 136) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t UtteranceAction.__allocating_init(utteranceOverride:)(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = a2;
  return result;
}

uint64_t UtteranceAction.__allocating_init()()
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  return result;
}

uint64_t InvocationAction.getInvocationAction(dialogProperties:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  a3[3] = a1;
  a3[4] = a2;
  boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm(a3);
  unsigned int v6 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a1 - 8) + 16);

  return v6(boxed_opaque_existential_1Tm, v3, a1);
}

uint64_t InvocationContext.init(directInvocationContext:displayedUtterance:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  *a4 = result;
  a4[1] = a2;
  a4[2] = a3;
  return result;
}

void *DirectInvocationAction.__allocating_init(siriKitIdentifier:payload:suggestionId:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t result = (void *)swift_allocObject();
  result[2] = a1;
  result[3] = a2;
  result[4] = a3;
  result[5] = a4;
  result[6] = a5;
  return result;
}

void *DirectInvocationAction.init(siriKitIdentifier:payload:suggestionId:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[2] = a1;
  v5[3] = a2;
  v5[4] = a3;
  v5[5] = a4;
  v5[6] = a5;
  return v5;
}

void DirectInvocationAction.__allocating_init(from:)()
{
  OUTLINED_FUNCTION_25();
  uint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F1260);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v3);
  OUTLINED_FUNCTION_15_0();
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  sub_1C64E4C28();
  sub_1C6577210();
  if (!v0)
  {
    uint64_t v4 = sub_1C6576EF0();
    uint64_t v6 = v5;
    uint64_t v7 = sub_1C6576EF0();
    uint64_t v9 = v8;
    uint64_t v15 = v7;
    sub_1C64E20F8();
    uint64_t v14 = v10;
    uint64_t v11 = OUTLINED_FUNCTION_8_2();
    v12(v11);
    uint64_t v13 = (void *)swift_allocObject();
    _OWORD v13[2] = v4;
    void v13[3] = v6;
    v13[4] = v14;
    void v13[5] = v15;
    v13[6] = v9;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v2);
  OUTLINED_FUNCTION_26();
}

void sub_1C64E20A8()
{
}

void sub_1C64E20F8()
{
  OUTLINED_FUNCTION_25();
  uint64_t v14 = v2;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF8F80);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v9);
  OUTLINED_FUNCTION_10();
  __swift_instantiateConcreteTypeFromMangledName(v8);
  sub_1C64E6F78();
  sub_1C6576E80();
  if (!v0)
  {
    __swift_instantiateConcreteTypeFromMangledName(qword_1EBBFC1F0);
    sub_1C64E6FCC(&qword_1EBBF8F30);
    sub_1C6576F30();
    uint64_t v10 = v6(1, v1);
    size_t v11 = sub_1C64E7030(v15, v10, v4);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v14(v11);
    uint64_t v12 = OUTLINED_FUNCTION_4_8();
    v13(v12);
  }
  OUTLINED_FUNCTION_26();
}

id DirectInvocationAction.getCommand(context:)(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = *a1;
  sub_1C64E4C74();
  swift_bridgeObjectRetain();
  id v4 = sub_1C64E25B0();
  uint64_t v5 = sub_1C64E2934(*(void *)(v1 + 32));
  sub_1C64E5F3C(v5, v4);
  uint64_t v6 = self;
  id v7 = objc_msgSend(v6, sel_runSiriKitExecutorCommandWithContext_payload_, v3, v4);
  if (qword_1EBBFC428 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_1C65763A0();
  __swift_project_value_buffer(v8, (uint64_t)qword_1EBBFC278);
  id v9 = v7;
  swift_retain();
  uint64_t v10 = sub_1C6576380();
  os_log_type_t v11 = sub_1C6576A50();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = swift_slowAlloc();
    uint64_t v13 = (void *)swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    uint64_t v20 = v19;
    *(_DWORD *)uint64_t v12 = 138412546;
    id v14 = v9;
    sub_1C6576B40();
    *uint64_t v13 = v9;

    *(_WORD *)(v12 + 12) = 2080;
    uint64_t v15 = *(void *)(v2 + 40);
    unint64_t v16 = *(void *)(v2 + 48);
    swift_bridgeObjectRetain();
    sub_1C64BCF18(v15, v16, &v20);
    sub_1C6576B40();
    swift_release();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C6494000, v10, v11, "suggestion direct invocation command: %@ for %s", (uint8_t *)v12, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F1278);
    swift_arrayDestroy();
    MEMORY[0x1C87A0050](v13, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x1C87A0050](v19, -1, -1);
    MEMORY[0x1C87A0050](v12, -1, -1);
  }
  else
  {

    swift_release();
  }
  id v17 = objc_msgSend(v6, sel_wrapCommandInStartLocalRequest_, v9);

  return v17;
}

id sub_1C64E25B0()
{
  id v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  uint64_t v1 = (void *)sub_1C6576540();
  swift_bridgeObjectRelease();
  id v2 = objc_msgSend(v0, sel_initWithIdentifier_, v1);

  return v2;
}

void sub_1C64E2624(uint64_t a1)
{
}

void sub_1C64E2644(uint64_t a1, void (*a2)(_OWORD *, char *), uint64_t *a3)
{
  uint64_t v3 = a1;
  if (*(void *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA3F1398);
    uint64_t v4 = OUTLINED_FUNCTION_17_5();
  }
  else
  {
    uint64_t v4 = MEMORY[0x1E4FBC868];
  }
  OUTLINED_FUNCTION_9_5();
  uint64_t v7 = v6 & v5;
  uint64_t v8 = v63;
  id v9 = v61;
  uint64_t v10 = (long long *)&v57;
  OUTLINED_FUNCTION_19_5();
  uint64_t v53 = 0;
  while (1)
  {
    while (1)
    {
      if (v7)
      {
        v7 &= v7 - 1;
      }
      else
      {
        if (__OFADD__(v53, 1)) {
          goto LABEL_36;
        }
        OUTLINED_FUNCTION_13_4();
        if (v11 == v12)
        {
LABEL_33:
          OUTLINED_FUNCTION_41_3();
          sub_1C64E6FC4();
          return;
        }
        OUTLINED_FUNCTION_16_5();
        if (!v13)
        {
          OUTLINED_FUNCTION_2_9();
          if (v11 == v12) {
            goto LABEL_33;
          }
          OUTLINED_FUNCTION_6_4();
          if (!v14)
          {
            OUTLINED_FUNCTION_2_9();
            if (v11 == v12) {
              goto LABEL_33;
            }
            OUTLINED_FUNCTION_6_4();
            if (!v15)
            {
              OUTLINED_FUNCTION_2_9();
              if (v11 == v12) {
                goto LABEL_33;
              }
              OUTLINED_FUNCTION_6_4();
              if (!v16)
              {
                OUTLINED_FUNCTION_13_4();
                if (v11 == v12) {
                  goto LABEL_33;
                }
                OUTLINED_FUNCTION_37_2();
                if (!v18)
                {
                  while (!__OFADD__(v17, 1))
                  {
                    OUTLINED_FUNCTION_2_9();
                    if (v11 == v12) {
                      goto LABEL_33;
                    }
                    OUTLINED_FUNCTION_15_3();
                    if (v19) {
                      goto LABEL_27;
                    }
                  }
                  goto LABEL_37;
                }
              }
            }
          }
        }
LABEL_27:
        OUTLINED_FUNCTION_14_3();
        uint64_t v7 = v21 & v20;
        uint64_t v53 = v22;
      }
      OUTLINED_FUNCTION_35_4();
      uint64_t v25 = *v23;
      uint64_t v24 = v23[1];
      sub_1C64A7B04(v27 + 48 * v26, (uint64_t)v8);
      *(void *)&long long v62 = v25;
      *((void *)&v62 + 1) = v24;
      *(_OWORD *)&v60[5] = v62;
      v61[0] = v63[0];
      v61[1] = v63[1];
      v61[2] = v63[2];
      uint64_t v55 = v25;
      uint64_t v56 = v24;
      a2(v9, v54);
      swift_bridgeObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(a3);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF8318);
      swift_dynamicCast();
      uint64_t v29 = v55;
      uint64_t v28 = v56;
      sub_1C64A5488(v10, (uint64_t)v59);
      sub_1C64A5488(v59, (uint64_t)v60);
      sub_1C64A5488((long long *)v60, (uint64_t)&v58);
      unint64_t v30 = sub_1C657476C(v29, v28);
      unint64_t v31 = v30;
      if ((v32 & 1) == 0) {
        break;
      }
      uint64_t v33 = v10;
      uint64_t v34 = v9;
      uint64_t v35 = v3;
      uint64_t v36 = v8;
      uint64_t v37 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v30);
      swift_bridgeObjectRelease();
      *uint64_t v37 = v29;
      v37[1] = v28;
      uint64_t v8 = v36;
      uint64_t v3 = v35;
      id v9 = v34;
      uint64_t v10 = v33;
      OUTLINED_FUNCTION_45_3();
      uint64_t v40 = v38 + v31 * v39;
      __swift_destroy_boxed_opaque_existential_1(v40);
      sub_1C64A5488(&v58, v40);
    }
    OUTLINED_FUNCTION_44_1();
    if (v41) {
      break;
    }
    OUTLINED_FUNCTION_43_3();
    OUTLINED_FUNCTION_5_7(v42, v48, v49, v50);
    uint64_t v44 = (uint64_t *)(v43 + 16 * v31);
    *uint64_t v44 = v29;
    v44[1] = v28;
    OUTLINED_FUNCTION_45_3();
    sub_1C64A5488(&v58, v45 + v31 * v46);
    OUTLINED_FUNCTION_30_4();
    if (v12) {
      goto LABEL_35;
    }
    *(void *)(v4 + 16) = v47;
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
}

uint64_t sub_1C64E2934(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F1460);
    uint64_t v2 = sub_1C6576E40();
  }
  else
  {
    uint64_t v2 = MEMORY[0x1E4FBC868];
  }
  uint64_t v28 = a1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v27 = (unint64_t)(63 - v3) >> 6;
  uint64_t v6 = v2 + 64;
  swift_bridgeObjectRetain();
  uint64_t result = swift_retain();
  int64_t v8 = 0;
  if (!v5) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v9 = __clz(__rbit64(v5));
  v5 &= v5 - 1;
  unint64_t v10 = v9 | (v8 << 6);
  while (1)
  {
    uint64_t v15 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v10);
    uint64_t v17 = *v15;
    uint64_t v16 = v15[1];
    sub_1C64A7B04(*(void *)(a1 + 56) + 48 * v10, (uint64_t)v42);
    *(void *)&long long v41 = v17;
    *((void *)&v41 + 1) = v16;
    *(_OWORD *)&v39[5] = v41;
    v40[0] = v42[0];
    v40[1] = v42[1];
    v40[2] = v42[2];
    uint64_t v30 = v17;
    uint64_t v31 = v16;
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    sub_1C64A7BBC(v40, v29);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFBE68);
    swift_dynamicCast();
    long long v36 = v32;
    long long v37 = v33;
    uint64_t v38 = v34;
    sub_1C64E740C(&v35, v39);
    long long v32 = v36;
    long long v33 = v37;
    uint64_t v34 = v38;
    sub_1C64E740C(v39, v29);
    sub_1C64E740C(v29, &v36);
    uint64_t result = sub_1C6576BF0();
    uint64_t v18 = -1 << *(unsigned char *)(v2 + 32);
    unint64_t v19 = result & ~v18;
    unint64_t v20 = v19 >> 6;
    if (((-1 << v19) & ~*(void *)(v6 + 8 * (v19 >> 6))) == 0)
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v18) >> 6;
      while (++v20 != v23 || (v22 & 1) == 0)
      {
        BOOL v24 = v20 == v23;
        if (v20 == v23) {
          unint64_t v20 = 0;
        }
        v22 |= v24;
        uint64_t v25 = *(void *)(v6 + 8 * v20);
        if (v25 != -1)
        {
          unint64_t v21 = __clz(__rbit64(~v25)) + (v20 << 6);
          goto LABEL_34;
        }
      }
      __break(1u);
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    unint64_t v21 = __clz(__rbit64((-1 << v19) & ~*(void *)(v6 + 8 * (v19 >> 6)))) | v19 & 0x7FFFFFFFFFFFFFC0;
LABEL_34:
    *(void *)(v6 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    uint64_t v26 = *(void *)(v2 + 48) + 40 * v21;
    *(_OWORD *)uint64_t v26 = v32;
    *(_OWORD *)(v26 + 16) = v33;
    *(void *)(v26 + 32) = v34;
    uint64_t result = (uint64_t)sub_1C64E740C(&v36, (_OWORD *)(*(void *)(v2 + 56) + 32 * v21));
    ++*(void *)(v2 + 16);
    if (v5) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v11 = v8 + 1;
    if (__OFADD__(v8, 1)) {
      goto LABEL_38;
    }
    if (v11 >= v27) {
      goto LABEL_36;
    }
    unint64_t v12 = *(void *)(v28 + 8 * v11);
    int64_t v13 = v8 + 1;
    if (!v12)
    {
      int64_t v13 = v8 + 2;
      if (v8 + 2 >= v27) {
        goto LABEL_36;
      }
      unint64_t v12 = *(void *)(v28 + 8 * v13);
      if (!v12)
      {
        int64_t v13 = v8 + 3;
        if (v8 + 3 >= v27) {
          goto LABEL_36;
        }
        unint64_t v12 = *(void *)(v28 + 8 * v13);
        if (!v12)
        {
          int64_t v13 = v8 + 4;
          if (v8 + 4 >= v27) {
            goto LABEL_36;
          }
          unint64_t v12 = *(void *)(v28 + 8 * v13);
          if (!v12) {
            break;
          }
        }
      }
    }
LABEL_24:
    unint64_t v5 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v13 << 6);
    int64_t v8 = v13;
  }
  int64_t v14 = v8 + 5;
  if (v8 + 5 >= v27)
  {
LABEL_36:
    swift_release();
    sub_1C64E6FC4();
    return v2;
  }
  unint64_t v12 = *(void *)(v28 + 8 * v14);
  if (v12)
  {
    int64_t v13 = v8 + 5;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v13 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v13 >= v27) {
      goto LABEL_36;
    }
    unint64_t v12 = *(void *)(v28 + 8 * v13);
    ++v14;
    if (v12) {
      goto LABEL_24;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

void sub_1C64E2D30(uint64_t a1)
{
  uint64_t v2 = a1;
  if (*(void *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFB368);
    uint64_t v3 = (void *)OUTLINED_FUNCTION_17_5();
  }
  else
  {
    uint64_t v3 = (void *)MEMORY[0x1E4FBC868];
  }
  OUTLINED_FUNCTION_3_8();
  uint64_t v4 = &v42;
  unint64_t v5 = &v44;
  OUTLINED_FUNCTION_19_5();
  uint64_t v6 = 0;
  uint64_t v7 = MEMORY[0x1E4FBC840] + 8;
  while (1)
  {
    while (1)
    {
      if (v1)
      {
        OUTLINED_FUNCTION_38_3();
      }
      else
      {
        if (__OFADD__(v6, 1)) {
          goto LABEL_36;
        }
        OUTLINED_FUNCTION_13_4();
        if (v8 == v9)
        {
LABEL_33:
          OUTLINED_FUNCTION_41_3();
          sub_1C64E6FC4();
          return;
        }
        OUTLINED_FUNCTION_16_5();
        if (!v10)
        {
          OUTLINED_FUNCTION_2_9();
          if (v8 == v9) {
            goto LABEL_33;
          }
          OUTLINED_FUNCTION_6_4();
          if (!v11)
          {
            OUTLINED_FUNCTION_2_9();
            if (v8 == v9) {
              goto LABEL_33;
            }
            OUTLINED_FUNCTION_6_4();
            if (!v12)
            {
              OUTLINED_FUNCTION_2_9();
              if (v8 == v9) {
                goto LABEL_33;
              }
              OUTLINED_FUNCTION_6_4();
              if (!v13)
              {
                OUTLINED_FUNCTION_13_4();
                if (v8 == v9) {
                  goto LABEL_33;
                }
                OUTLINED_FUNCTION_37_2();
                if (!v15)
                {
                  while (!__OFADD__(v14, 1))
                  {
                    OUTLINED_FUNCTION_2_9();
                    if (v8 == v9) {
                      goto LABEL_33;
                    }
                    OUTLINED_FUNCTION_15_3();
                    if (v16) {
                      goto LABEL_27;
                    }
                  }
                  goto LABEL_37;
                }
              }
            }
          }
        }
LABEL_27:
        OUTLINED_FUNCTION_14_3();
        uint64_t v1 = v18 & v17;
        uint64_t v6 = v19;
      }
      OUTLINED_FUNCTION_35_4();
      uint64_t v40 = *v20;
      uint64_t v41 = v20[1];
      type metadata accessor for ResolvableParameter();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_dynamicCast();
      sub_1C64E740C(v4, v5);
      sub_1C64E740C(v5, v45);
      sub_1C64E740C(v45, &v43);
      unint64_t v21 = sub_1C657476C(v40, v41);
      unint64_t v22 = v21;
      if ((v23 & 1) == 0) {
        break;
      }
      uint64_t v39 = v1;
      BOOL v24 = v5;
      uint64_t v25 = v4;
      uint64_t v26 = v2;
      uint64_t v27 = v6;
      uint64_t v28 = v7;
      uint64_t v29 = (uint64_t *)(v3[6] + 16 * v21);
      swift_bridgeObjectRelease();
      *uint64_t v29 = v40;
      v29[1] = v41;
      uint64_t v7 = v28;
      uint64_t v6 = v27;
      uint64_t v2 = v26;
      uint64_t v4 = v25;
      unint64_t v5 = v24;
      uint64_t v1 = v39;
      uint64_t v30 = (_OWORD *)(v3[7] + 32 * v22);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
      sub_1C64E740C(&v43, v30);
    }
    OUTLINED_FUNCTION_44_1();
    if (v31) {
      break;
    }
    OUTLINED_FUNCTION_43_3();
    OUTLINED_FUNCTION_5_7(v32, v36, v37, v38);
    uint64_t v34 = (uint64_t *)(v33 + 16 * v22);
    uint64_t *v34 = v40;
    v34[1] = v41;
    sub_1C64E740C(&v43, (_OWORD *)(v3[7] + 32 * v22));
    OUTLINED_FUNCTION_30_4();
    if (v9) {
      goto LABEL_35;
    }
    void v3[2] = v35;
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
}

void sub_1C64E2FBC(uint64_t a1)
{
  uint64_t v2 = a1;
  if (*(void *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F13C8);
    uint64_t v3 = OUTLINED_FUNCTION_17_5();
  }
  else
  {
    uint64_t v3 = MEMORY[0x1E4FBC868];
  }
  OUTLINED_FUNCTION_3_8();
  uint64_t v4 = &__src[2];
  unint64_t v5 = (long long *)&__dst[2];
  uint64_t v6 = (long long *)&v54;
  uint64_t v7 = (long long *)&v56;
  OUTLINED_FUNCTION_19_5();
  uint64_t v49 = 0;
  while (1)
  {
    while (1)
    {
      if (v1)
      {
        OUTLINED_FUNCTION_38_3();
        uint64_t v50 = v1;
      }
      else
      {
        if (__OFADD__(v49, 1)) {
          goto LABEL_36;
        }
        OUTLINED_FUNCTION_13_4();
        if (v8 == v9)
        {
LABEL_33:
          OUTLINED_FUNCTION_42_2();
          return;
        }
        OUTLINED_FUNCTION_16_5();
        if (!v10)
        {
          OUTLINED_FUNCTION_2_9();
          if (v8 == v9) {
            goto LABEL_33;
          }
          OUTLINED_FUNCTION_6_4();
          if (!v11)
          {
            OUTLINED_FUNCTION_2_9();
            if (v8 == v9) {
              goto LABEL_33;
            }
            OUTLINED_FUNCTION_6_4();
            if (!v12)
            {
              OUTLINED_FUNCTION_2_9();
              if (v8 == v9) {
                goto LABEL_33;
              }
              OUTLINED_FUNCTION_6_4();
              if (!v13)
              {
                OUTLINED_FUNCTION_13_4();
                if (v8 == v9) {
                  goto LABEL_33;
                }
                OUTLINED_FUNCTION_37_2();
                if (!v15)
                {
                  while (!__OFADD__(v14, 1))
                  {
                    OUTLINED_FUNCTION_2_9();
                    if (v8 == v9) {
                      goto LABEL_33;
                    }
                    OUTLINED_FUNCTION_15_3();
                    if (v16) {
                      goto LABEL_27;
                    }
                  }
                  goto LABEL_37;
                }
              }
            }
          }
        }
LABEL_27:
        OUTLINED_FUNCTION_14_3();
        uint64_t v49 = v17;
        uint64_t v50 = v19 & v18;
      }
      OUTLINED_FUNCTION_35_4();
      uint64_t v22 = *v20;
      uint64_t v21 = v20[1];
      sub_1C64E7380(v24 + 56 * v23, (uint64_t)v4);
      __src[0] = v22;
      __src[1] = v21;
      memcpy(__dst, __src, sizeof(__dst));
      uint64_t v52 = __dst[0];
      uint64_t v53 = __dst[1];
      sub_1C64E73EC(v5, (uint64_t)v51);
      swift_bridgeObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA3F1440);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFB8F8);
      swift_dynamicCast();
      uint64_t v25 = v52;
      uint64_t v26 = v53;
      sub_1C64A5488(v6, (uint64_t)v7);
      sub_1C64A5488(v7, (uint64_t)v57);
      sub_1C64A5488(v57, (uint64_t)&v55);
      unint64_t v27 = sub_1C657476C(v25, v26);
      unint64_t v28 = v27;
      if ((v29 & 1) == 0) {
        break;
      }
      uint64_t v30 = v7;
      char v31 = v6;
      uint64_t v32 = v2;
      uint64_t v33 = v5;
      uint64_t v34 = v4;
      uint64_t v35 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v27);
      swift_bridgeObjectRelease();
      uint64_t *v35 = v25;
      v35[1] = v26;
      uint64_t v4 = v34;
      unint64_t v5 = v33;
      uint64_t v2 = v32;
      uint64_t v6 = v31;
      uint64_t v7 = v30;
      OUTLINED_FUNCTION_45_3();
      uint64_t v38 = v36 + v28 * v37;
      __swift_destroy_boxed_opaque_existential_1(v38);
      sub_1C64A5488(&v55, v38);
      uint64_t v1 = v50;
    }
    OUTLINED_FUNCTION_44_1();
    if (v39) {
      break;
    }
    OUTLINED_FUNCTION_43_3();
    OUTLINED_FUNCTION_5_7(v40, v46, v47, v48);
    uint64_t v42 = (uint64_t *)(v41 + 16 * v28);
    *uint64_t v42 = v25;
    v42[1] = v26;
    OUTLINED_FUNCTION_45_3();
    sub_1C64A5488(&v55, v43 + v28 * v44);
    OUTLINED_FUNCTION_30_4();
    if (v9) {
      goto LABEL_35;
    }
    *(void *)(v3 + 16) = v45;
    uint64_t v1 = v50;
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
}

void sub_1C64E3280(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F13C8);
    uint64_t v1 = (void *)OUTLINED_FUNCTION_17_5();
  }
  else
  {
    uint64_t v1 = (void *)MEMORY[0x1E4FBC868];
  }
  OUTLINED_FUNCTION_9_5();
  uint64_t v4 = v3 & v2;
  OUTLINED_FUNCTION_19_5();
  uint64_t v33 = 0;
  unint64_t v5 = (uint64_t *)&unk_1EA3F1430;
  while (1)
  {
    while (1)
    {
      if (v4)
      {
        v4 &= v4 - 1;
      }
      else
      {
        if (__OFADD__(v33, 1)) {
          goto LABEL_36;
        }
        OUTLINED_FUNCTION_13_4();
        if (v6 == v7)
        {
LABEL_33:
          OUTLINED_FUNCTION_42_2();
          return;
        }
        OUTLINED_FUNCTION_16_5();
        if (!v8)
        {
          OUTLINED_FUNCTION_2_9();
          if (v6 == v7) {
            goto LABEL_33;
          }
          OUTLINED_FUNCTION_6_4();
          if (!v9)
          {
            OUTLINED_FUNCTION_2_9();
            if (v6 == v7) {
              goto LABEL_33;
            }
            OUTLINED_FUNCTION_6_4();
            if (!v10)
            {
              OUTLINED_FUNCTION_2_9();
              if (v6 == v7) {
                goto LABEL_33;
              }
              OUTLINED_FUNCTION_6_4();
              if (!v11)
              {
                OUTLINED_FUNCTION_13_4();
                if (v6 == v7) {
                  goto LABEL_33;
                }
                OUTLINED_FUNCTION_37_2();
                if (!v13)
                {
                  while (!__OFADD__(v12, 1))
                  {
                    OUTLINED_FUNCTION_2_9();
                    if (v6 == v7) {
                      goto LABEL_33;
                    }
                    OUTLINED_FUNCTION_15_3();
                    if (v14) {
                      goto LABEL_27;
                    }
                  }
                  goto LABEL_37;
                }
              }
            }
          }
        }
LABEL_27:
        OUTLINED_FUNCTION_14_3();
        uint64_t v4 = v16 & v15;
        uint64_t v33 = v17;
      }
      OUTLINED_FUNCTION_35_4();
      uint64_t v34 = *v18;
      uint64_t v35 = v18[1];
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(v5);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFB8F8);
      swift_dynamicCast();
      sub_1C64A5488(&v36, (uint64_t)v38);
      sub_1C64A5488(v38, (uint64_t)v39);
      sub_1C64A5488(v39, (uint64_t)&v37);
      unint64_t v19 = sub_1C657476C(v34, v35);
      unint64_t v20 = v19;
      if ((v21 & 1) == 0) {
        break;
      }
      uint64_t v22 = v5;
      uint64_t v23 = (uint64_t *)(v1[6] + 16 * v19);
      swift_bridgeObjectRelease();
      *uint64_t v23 = v34;
      v23[1] = v35;
      unint64_t v5 = v22;
      uint64_t v24 = v1[7] + 40 * v20;
      __swift_destroy_boxed_opaque_existential_1(v24);
      sub_1C64A5488(&v37, v24);
    }
    OUTLINED_FUNCTION_44_1();
    if (v25) {
      break;
    }
    OUTLINED_FUNCTION_43_3();
    OUTLINED_FUNCTION_5_7(v26, v30, v31, v32);
    unint64_t v28 = (uint64_t *)(v27 + 16 * v20);
    *unint64_t v28 = v34;
    v28[1] = v35;
    sub_1C64A5488(&v37, v1[7] + 40 * v20);
    OUTLINED_FUNCTION_30_4();
    if (v7) {
      goto LABEL_35;
    }
    v1[2] = v29;
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
}

uint64_t DirectInvocationAction.encode(to:)()
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F1280);
  OUTLINED_FUNCTION_0();
  uint64_t v4 = v3;
  MEMORY[0x1F4188790](v5);
  char v7 = &v12[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  OUTLINED_FUNCTION_10_2();
  sub_1C64E4C28();
  OUTLINED_FUNCTION_51();
  OUTLINED_FUNCTION_24_3();
  if (v1) {
    return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v7, v2);
  }
  v12[14] = 2;
  sub_1C6576FD0();
  sub_1C64E2644(*(void *)(v0 + 32), (void (*)(_OWORD *, char *))sub_1C64A7BBC, &qword_1EBBFBE68);
  sub_1C64E3668((uint64_t)v7, 1, v8);
  uint64_t v9 = OUTLINED_FUNCTION_1_5();
  v10(v9);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C64E3668(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(qword_1EBBF8328);
  v44[0] = *(void *)(v46 - 8);
  MEMORY[0x1F4188790](v46);
  uint64_t v6 = (char *)v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60[63] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F1280);
  sub_1C64E6F78();
  uint64_t v45 = v6;
  sub_1C6576F70();
  sub_1C64AD0CC();
  uint64_t v8 = v7;
  sub_1C64AD090();
  uint64_t v10 = v9;
  uint64_t v11 = *(void *)(a3 + 64);
  uint64_t v47 = a3 + 64;
  uint64_t v12 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & v11;
  int64_t v48 = (unint64_t)(v12 + 63) >> 6;
  uint64_t v49 = v60;
  unint64_t v51 = &v57;
  uint64_t v52 = (long long *)&v55;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v16 = 0;
  if (!v14) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v17 = __clz(__rbit64(v14));
  v14 &= v14 - 1;
  int64_t v50 = v16;
  for (unint64_t i = v17 | (v16 << 6); ; unint64_t i = __clz(__rbit64(v20)) + (v21 << 6))
  {
    uint64_t v23 = *(void *)(a3 + 56);
    uint64_t v24 = a3;
    char v25 = (uint64_t *)(*(void *)(a3 + 48) + 16 * i);
    uint64_t v26 = v25[1];
    uint64_t v58 = *v25;
    uint64_t v27 = v58;
    uint64_t v59 = v26;
    uint64_t v28 = (uint64_t)v49;
    sub_1C649FA30(v23 + 40 * i, (uint64_t)v49);
    v56[0] = v27;
    v56[1] = v26;
    uint64_t v29 = (long long *)v28;
    uint64_t v30 = (uint64_t)v51;
    sub_1C64A5488(v29, (uint64_t)v51);
    uint64_t v53 = v27;
    uint64_t v54 = v26;
    sub_1C649FA30(v30, (uint64_t)v52);
    uint64_t v31 = v8;
    unint64_t v32 = *(void *)(v8 + 16);
    uint64_t v33 = v31;
    unint64_t v34 = *(void *)(v31 + 24);
    swift_bridgeObjectRetain_n();
    if (v32 >= v34 >> 1)
    {
      sub_1C64AD0CC();
      uint64_t v33 = v38;
    }
    *(void *)(v33 + 16) = v32 + 1;
    uint64_t v35 = v33 + 16 * v32;
    uint64_t v8 = v33;
    *(void *)(v35 + 32) = v27;
    *(void *)(v35 + 40) = v26;
    long long v36 = v52;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v52);
    uint64_t v53 = v27;
    uint64_t v54 = v26;
    sub_1C649FA30((uint64_t)v51, (uint64_t)v36);
    swift_bridgeObjectRelease();
    unint64_t v37 = *(void *)(v10 + 16);
    a3 = v24;
    if (v37 >= *(void *)(v10 + 24) >> 1)
    {
      sub_1C64AD090();
      uint64_t v10 = v39;
    }
    *(void *)(v10 + 16) = v37 + 1;
    sub_1C64A5488(v52, v10 + 40 * v37 + 32);
    uint64_t result = sub_1C64E7528((uint64_t)v56, &qword_1EA3F1390);
    int64_t v16 = v50;
    if (v14) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v19 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
      __break(1u);
LABEL_29:
      __break(1u);
      return result;
    }
    if (v19 >= v48) {
      goto LABEL_25;
    }
    unint64_t v20 = *(void *)(v47 + 8 * v19);
    int64_t v21 = v16 + 1;
    if (!v20)
    {
      int64_t v21 = v16 + 2;
      if (v16 + 2 >= v48) {
        goto LABEL_25;
      }
      unint64_t v20 = *(void *)(v47 + 8 * v21);
      if (!v20)
      {
        int64_t v21 = v16 + 3;
        if (v16 + 3 >= v48) {
          goto LABEL_25;
        }
        unint64_t v20 = *(void *)(v47 + 8 * v21);
        if (!v20) {
          break;
        }
      }
    }
LABEL_18:
    unint64_t v14 = (v20 - 1) & v20;
    int64_t v50 = v21;
  }
  uint64_t v22 = v16 + 4;
  if (v16 + 4 < v48)
  {
    unint64_t v20 = *(void *)(v47 + 8 * v22);
    if (!v20)
    {
      while (1)
      {
        int64_t v21 = v22 + 1;
        if (__OFADD__(v22, 1)) {
          goto LABEL_29;
        }
        if (v21 >= v48) {
          goto LABEL_25;
        }
        unint64_t v20 = *(void *)(v47 + 8 * v21);
        ++v22;
        if (v20) {
          goto LABEL_18;
        }
      }
    }
    int64_t v21 = v16 + 4;
    goto LABEL_18;
  }
LABEL_25:
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v58 = v8;
  LOBYTE(v56[0]) = 0;
  __swift_instantiateConcreteTypeFromMangledName(qword_1EBBFC1F0);
  sub_1C64E6FCC(&qword_1EBBF8320);
  uint64_t v40 = v46;
  uint64_t v41 = v45;
  uint64_t v42 = v44[1];
  sub_1C6577010();
  swift_bridgeObjectRelease();
  if (v42) {
    return (*(uint64_t (**)(char *, uint64_t))(v44[0] + 8))(v41, v40);
  }
  uint64_t v43 = swift_bridgeObjectRetain();
  sub_1C6558CB0(v43);
  swift_bridgeObjectRelease();
  sub_1C6557088();
  (*(void (**)(char *, uint64_t))(v44[0] + 8))(v41, v40);
  return swift_release();
}

void sub_1C64E3BB4()
{
  OUTLINED_FUNCTION_25();
  uint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(qword_1EBBF8328);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v3);
  OUTLINED_FUNCTION_23();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA3F1380);
  sub_1C64E6F78();
  sub_1C6576F70();
  sub_1C64AD0CC();
  uint64_t v5 = v4;
  sub_1C64AD090();
  uint64_t v7 = v6;
  uint64_t v40 = v2 + 64;
  uint64_t v8 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & *(void *)(v2 + 64);
  int64_t v41 = (unint64_t)(v8 + 63) >> 6;
  swift_bridgeObjectRetain();
  uint64_t v11 = 0;
  if (!v10) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v12 = __clz(__rbit64(v10));
  v10 &= v10 - 1;
  int64_t v42 = v11;
  for (unint64_t i = v12 | (v11 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v16 << 6))
  {
    uint64_t v22 = *(void *)(v2 + 56);
    uint64_t v23 = v2;
    uint64_t v24 = (uint64_t *)(*(void *)(v2 + 48) + 16 * i);
    uint64_t v25 = v24[1];
    uint64_t v46 = *v24;
    uint64_t v26 = v46;
    uint64_t v47 = v25;
    sub_1C649FA30(v22 + 40 * i, (uint64_t)v48);
    v44[0] = v26;
    v44[1] = v25;
    sub_1C64A5488(v48, (uint64_t)v45);
    sub_1C649FA30((uint64_t)v45, (uint64_t)v43);
    uint64_t v27 = v5;
    unint64_t v28 = *(void *)(v5 + 16);
    uint64_t v29 = v27;
    unint64_t v30 = *(void *)(v27 + 24);
    swift_bridgeObjectRetain_n();
    if (v28 >= v30 >> 1)
    {
      sub_1C64AD0CC();
      uint64_t v29 = v33;
    }
    *(void *)(v29 + 16) = v28 + 1;
    uint64_t v31 = v29 + 16 * v28;
    uint64_t v5 = v29;
    *(void *)(v31 + 32) = v26;
    *(void *)(v31 + 40) = v25;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v43);
    sub_1C649FA30((uint64_t)v45, (uint64_t)v43);
    swift_bridgeObjectRelease();
    unint64_t v32 = *(void *)(v7 + 16);
    uint64_t v2 = v23;
    if (v32 >= *(void *)(v7 + 24) >> 1)
    {
      sub_1C64AD090();
      uint64_t v7 = v34;
    }
    *(void *)(v7 + 16) = v32 + 1;
    sub_1C64A5488(v43, v7 + 40 * v32 + 32);
    sub_1C64E7528((uint64_t)v44, &qword_1EA3F1390);
    uint64_t v11 = v42;
    if (v10) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v14 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
LABEL_36:
      __break(1u);
      return;
    }
    if (v14 >= v41) {
      goto LABEL_31;
    }
    unint64_t v15 = *(void *)(v40 + 8 * v14);
    int64_t v16 = v11 + 1;
    if (!v15)
    {
      OUTLINED_FUNCTION_21_5();
      if (v17 == v18) {
        goto LABEL_31;
      }
      OUTLINED_FUNCTION_20_4();
      if (!v15)
      {
        OUTLINED_FUNCTION_21_5();
        if (v17 == v18) {
          goto LABEL_31;
        }
        OUTLINED_FUNCTION_20_4();
        if (!v15)
        {
          OUTLINED_FUNCTION_21_5();
          if (v17 == v18) {
            goto LABEL_31;
          }
          OUTLINED_FUNCTION_20_4();
          if (!v15) {
            break;
          }
        }
      }
    }
LABEL_24:
    unint64_t v10 = (v15 - 1) & v15;
    int64_t v42 = v16;
  }
  int64_t v20 = v19 + 4;
  if (v20 < v41)
  {
    unint64_t v15 = *(void *)(v40 + 8 * v20);
    if (!v15)
    {
      while (!__OFADD__(v20, 1))
      {
        OUTLINED_FUNCTION_21_5();
        if (v17 == v18) {
          goto LABEL_31;
        }
        OUTLINED_FUNCTION_20_4();
        int64_t v20 = v21 + 1;
        if (v15) {
          goto LABEL_24;
        }
      }
      goto LABEL_36;
    }
    int64_t v16 = v20;
    goto LABEL_24;
  }
LABEL_31:
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v46 = v5;
  LOBYTE(v44[0]) = 0;
  __swift_instantiateConcreteTypeFromMangledName(qword_1EBBFC1F0);
  sub_1C64E6FCC(&qword_1EBBF8320);
  sub_1C6577010();
  swift_bridgeObjectRelease();
  if (v0)
  {
    uint64_t v35 = OUTLINED_FUNCTION_22_5();
    v36(v35);
  }
  else
  {
    uint64_t v37 = swift_bridgeObjectRetain();
    sub_1C6558CB0(v37);
    swift_bridgeObjectRelease();
    sub_1C6557088();
    uint64_t v38 = OUTLINED_FUNCTION_22_5();
    v39(v38);
    swift_release();
  }
  OUTLINED_FUNCTION_26();
}

uint64_t sub_1C64E406C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000011 && a2 == 0x80000001C65887D0 || (OUTLINED_FUNCTION_70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v5 = a1 == 0x64616F6C796170 && a2 == 0xE700000000000000;
    if (v5 || (OUTLINED_FUNCTION_70() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x6974736567677573 && a2 == 0xEC00000064496E6FLL)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      char v7 = OUTLINED_FUNCTION_70();
      swift_bridgeObjectRelease();
      if (v7) {
        return 2;
      }
      else {
        return 3;
      }
    }
  }
}

uint64_t sub_1C64E41AC(char a1)
{
  if (!a1) {
    return 0xD000000000000011;
  }
  if (a1 == 1) {
    return 0x64616F6C796170;
  }
  return 0x6974736567677573;
}

uint64_t sub_1C64E4210()
{
  return sub_1C64E41AC(*v0);
}

uint64_t sub_1C64E4218@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C64E406C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C64E4240(uint64_t a1)
{
  unint64_t v2 = sub_1C64E4C28();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C64E427C(uint64_t a1)
{
  unint64_t v2 = sub_1C64E4C28();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t DirectInvocationAction.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t DirectInvocationAction.__deallocating_deinit()
{
  DirectInvocationAction.deinit();

  return MEMORY[0x1F4186488](v0, 56, 7);
}

id sub_1C64E431C(uint64_t *a1)
{
  return DirectInvocationAction.getCommand(context:)(a1);
}

void sub_1C64E4340(void *a1@<X8>)
{
  DirectInvocationAction.__allocating_init(from:)();
  if (!v1) {
    *a1 = v3;
  }
}

uint64_t sub_1C64E436C()
{
  return DirectInvocationAction.encode(to:)();
}

uint64_t UrlPunchOutInvocationAction.__allocating_init(appBundleId:url:)(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_40_3();
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v2;
  *(void *)(v4 + 24) = a2;
  sub_1C6576050();
  OUTLINED_FUNCTION_13_2();
  uint64_t v5 = OUTLINED_FUNCTION_39_3();
  v6(v5);
  return v4;
}

uint64_t UrlPunchOutInvocationAction.init(appBundleId:url:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  sub_1C6576050();
  OUTLINED_FUNCTION_13_2();
  uint64_t v3 = OUTLINED_FUNCTION_39_3();
  v4(v3);
  return v2;
}

id UrlPunchOutInvocationAction.getCommand(context:)()
{
  id v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F96AC8]), sel_init);
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  sub_1C64E5FBC(v2, v3, v1);
  swift_bridgeObjectRelease();
  uint64_t v4 = (void *)sub_1C6576040();
  objc_msgSend(v1, sel_setPunchOutUri_, v4);

  return v1;
}

uint64_t sub_1C64E44FC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6C646E7542707061 && a2 == 0xEB00000000644965;
  if (v2 || (sub_1C6577090() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 7107189 && a2 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_1C6577090();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1C64E45F4(char a1)
{
  if (a1) {
    return 7107189;
  }
  else {
    return 0x6C646E7542707061;
  }
}

uint64_t sub_1C64E462C()
{
  return sub_1C64E45F4(*v0);
}

uint64_t sub_1C64E4634@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C64E44FC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C64E465C(uint64_t a1)
{
  unint64_t v2 = sub_1C64E6014();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C64E4698(uint64_t a1)
{
  unint64_t v2 = sub_1C64E6014();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t UrlPunchOutInvocationAction.deinit()
{
  swift_bridgeObjectRelease();
  sub_1C6576050();
  OUTLINED_FUNCTION_13_2();
  OUTLINED_FUNCTION_1();
  v1();
  return v0;
}

uint64_t UrlPunchOutInvocationAction.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  sub_1C6576050();
  OUTLINED_FUNCTION_13_2();
  OUTLINED_FUNCTION_1();
  v1();
  uint64_t v2 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v3 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return MEMORY[0x1F4186488](v0, v2, v3);
}

uint64_t UrlPunchOutInvocationAction.encode(to:)()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F1290);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v1);
  OUTLINED_FUNCTION_10_2();
  sub_1C64E6014();
  OUTLINED_FUNCTION_51();
  OUTLINED_FUNCTION_24_3();
  if (!v0)
  {
    sub_1C6576050();
    sub_1C64E64A8(&qword_1EA3F12A0, 255, MEMORY[0x1E4F276F0]);
    sub_1C6577010();
  }
  uint64_t v2 = OUTLINED_FUNCTION_1_5();
  return v3(v2);
}

uint64_t UrlPunchOutInvocationAction.__allocating_init(from:)()
{
  OUTLINED_FUNCTION_40_3();
  swift_allocObject();
  OUTLINED_FUNCTION_26_6();
  UrlPunchOutInvocationAction.init(from:)();
  return v0;
}

void UrlPunchOutInvocationAction.init(from:)()
{
  OUTLINED_FUNCTION_25();
  uint64_t v4 = v3;
  OUTLINED_FUNCTION_2_4();
  uint64_t v5 = sub_1C6576050();
  OUTLINED_FUNCTION_0();
  uint64_t v12 = v6;
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_23();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F12A8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v8);
  OUTLINED_FUNCTION_15_0();
  __swift_project_boxed_opaque_existential_1(v4, v4[3]);
  sub_1C64E6014();
  sub_1C6577210();
  if (v1)
  {
    swift_deallocPartialClassInstance();
  }
  else
  {
    *(void *)(v0 + 16) = sub_1C6576EF0();
    *(void *)(v0 + 24) = v9;
    sub_1C64E64A8(&qword_1EA3F12B0, 255, MEMORY[0x1E4F276F0]);
    sub_1C6576F30();
    uint64_t v10 = OUTLINED_FUNCTION_32_5();
    v11(v10);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 32))(v0 + OBJC_IVAR____TtC18SiriSuggestionsKit27UrlPunchOutInvocationAction_url, v2, v5);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
  OUTLINED_FUNCTION_26();
}

id sub_1C64E4BA8()
{
  return UrlPunchOutInvocationAction.getCommand(context:)();
}

uint64_t sub_1C64E4BCC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = UrlPunchOutInvocationAction.__allocating_init(from:)();
  if (!v1) {
    *a1 = result;
  }
  return result;
}

uint64_t sub_1C64E4BF8()
{
  return UrlPunchOutInvocationAction.encode(to:)();
}

uint64_t UtteranceAction.init(utteranceOverride:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return v2;
}

unint64_t sub_1C64E4C28()
{
  unint64_t result = qword_1EA3F1268;
  if (!qword_1EA3F1268)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F1268);
  }
  return result;
}

unint64_t sub_1C64E4C74()
{
  unint64_t result = qword_1EA3F1270;
  if (!qword_1EA3F1270)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA3F1270);
  }
  return result;
}

id UtteranceAction.getCommand(context:)(long long *a1)
{
  long long v10 = *a1;
  uint64_t v1 = *((void *)a1 + 2);
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F96A78]), sel_init);
  uint64_t v3 = sub_1C6576550();
  sub_1C64E6060(v3, v4, v2, (SEL *)&selRef_setOrigin_);
  long long v11 = v10;
  uint64_t v12 = v1;
  uint64_t v5 = sub_1C64E4DA8((uint64_t)&v11);
  sub_1C64E6060(v5, v6, v2, (SEL *)&selRef_setUtterance_);
  id v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F969F0]), sel_init);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFB3B0);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1C6579810;
  *(void *)(v8 + 32) = v2;
  *(void *)&long long v11 = v8;
  sub_1C65767C0();
  sub_1C64E60CC(v11, v7);
  return v7;
}

uint64_t sub_1C64E4DA8(uint64_t a1)
{
  if (*(void *)(v1 + 24))
  {
    uint64_t v2 = *(void *)(v1 + 16);
  }
  else
  {
    uint64_t v2 = *(void *)(a1 + 8);
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1C64E4DF8(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000011 && a2 == 0x80000001C6588870)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_1C6577090();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

unint64_t sub_1C64E4E80()
{
  return 0xD000000000000011;
}

uint64_t sub_1C64E4EA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C64E4DF8(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1C64E4ECC(uint64_t a1)
{
  unint64_t v2 = sub_1C64E6144();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C64E4F08(uint64_t a1)
{
  unint64_t v2 = sub_1C64E6144();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t UtteranceAction.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t UtteranceAction.__deallocating_deinit()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186488](v0, 32, 7);
}

uint64_t UtteranceAction.encode(to:)()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF8FA0);
  OUTLINED_FUNCTION_0();
  uint64_t v2 = v1;
  MEMORY[0x1F4188790](v3);
  OUTLINED_FUNCTION_15_0();
  uint64_t v6 = v5 - v4;
  OUTLINED_FUNCTION_10_2();
  sub_1C64E6144();
  OUTLINED_FUNCTION_51();
  sub_1C6576F90();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v6, v0);
}

uint64_t UtteranceAction.__allocating_init(from:)()
{
  swift_allocObject();
  OUTLINED_FUNCTION_26_6();
  UtteranceAction.init(from:)();
  return v0;
}

void UtteranceAction.init(from:)()
{
  OUTLINED_FUNCTION_25();
  uint64_t v2 = v0;
  uint64_t v4 = v3;
  OUTLINED_FUNCTION_2_4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF82F0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v5);
  __swift_project_boxed_opaque_existential_1(v4, v4[3]);
  sub_1C64E6144();
  OUTLINED_FUNCTION_25_4();
  if (v1)
  {
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v6 = sub_1C6576EB0();
    uint64_t v8 = v7;
    uint64_t v9 = OUTLINED_FUNCTION_36_1();
    v10(v9);
    *(void *)(v2 + 16) = v6;
    *(void *)(v2 + 24) = v8;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
  OUTLINED_FUNCTION_26();
}

id sub_1C64E51F4(long long *a1)
{
  return UtteranceAction.getCommand(context:)(a1);
}

uint64_t sub_1C64E5218@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = UtteranceAction.__allocating_init(from:)();
  if (!v1) {
    *a1 = result;
  }
  return result;
}

uint64_t sub_1C64E5244()
{
  return UtteranceAction.encode(to:)();
}

uint64_t MachineUtteranceAction.__allocating_init(dialogProperties:)(uint64_t a1)
{
  OUTLINED_FUNCTION_34_3();
  uint64_t v2 = swift_allocObject();
  MachineUtteranceAction.init(dialogProperties:)(a1);
  return v2;
}

uint64_t MachineUtteranceAction.init(dialogProperties:)(uint64_t a1)
{
  uint64_t v2 = v1;
  OUTLINED_FUNCTION_2_4();
  uint64_t v5 = sub_1C64E5304(v4);
  uint64_t v7 = v6;
  __swift_destroy_boxed_opaque_existential_1(a1);
  type metadata accessor for UtteranceAction();
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = v5;
  *(void *)(v8 + 24) = v7;
  *(void *)(v2 + 16) = v8;
  return v2;
}

uint64_t sub_1C64E5304(void *a1)
{
  uint64_t v1 = a1[3];
  uint64_t v2 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 16))(v1, v2);
  uint64_t v4 = *(void *)(v3 + 16);
  if (v4)
  {
    uint64_t v27 = MEMORY[0x1E4FBC860];
    sub_1C64A2210();
    uint64_t v5 = sub_1C6524E04(v3);
    uint64_t v7 = v6;
    char v9 = v8 & 1;
    uint64_t v10 = v27;
    uint64_t v21 = v3;
    do
    {
      uint64_t v11 = v9 & 1;
      v25[0] = sub_1C64E749C((uint64_t)v26, v5, v7, v11, v3);
      v25[1] = v12;
      *(void *)&long long v23 = v25[0];
      *((void *)&v23 + 1) = v12;
      sub_1C64BAACC((uint64_t)v26, (uint64_t)v24);
      v22[0] = v23;
      v22[1] = v24[0];
      v22[2] = v24[1];
      swift_bridgeObjectRetain();
      sub_1C64E7528((uint64_t)v25, &qword_1EBBFB310);
      sub_1C6576620();
      sub_1C6576620();
      sub_1C6576D50();
      sub_1C6576620();
      swift_bridgeObjectRetain();
      sub_1C6576620();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1C64E7528((uint64_t)v22, &qword_1EBBFB310);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C64A2210();
        uint64_t v10 = v27;
      }
      unint64_t v13 = *(void *)(v10 + 16);
      if (v13 >= *(void *)(v10 + 24) >> 1)
      {
        sub_1C64A2210();
        uint64_t v10 = v27;
      }
      *(void *)(v10 + 16) = v13 + 1;
      uint64_t v14 = v10 + 16 * v13;
      *(void *)(v14 + 32) = 94;
      *(void *)(v14 + 40) = 0xE100000000000000;
      uint64_t v3 = v21;
      uint64_t v15 = sub_1C64E741C(v5, v7, v11, v21);
      uint64_t v17 = v16;
      char v9 = v18 & 1;
      sub_1C64E7578(v5, v7, v11);
      uint64_t v5 = v15;
      uint64_t v7 = v17;
      --v4;
    }
    while (v4);
    sub_1C64E7578(v15, v17, v9);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v10 = MEMORY[0x1E4FBC860];
  }
  v25[0] = v10;
  __swift_instantiateConcreteTypeFromMangledName(qword_1EBBFC1F0);
  sub_1C64A7A58();
  uint64_t v19 = sub_1C6576520();
  swift_bridgeObjectRelease();
  return v19;
}

id MachineUtteranceAction.getCommand(context:)(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  long long v3 = *(_OWORD *)a1;
  uint64_t v4 = v1;
  return UtteranceAction.getCommand(context:)(&v3);
}

uint64_t sub_1C64E5658(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x636E617265747475 && a2 == 0xEF6E6F6974634165)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_1C6577090();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1C64E5704()
{
  return 0x636E617265747475;
}

uint64_t sub_1C64E572C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C64E5658(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1C64E5758(uint64_t a1)
{
  unint64_t v2 = sub_1C64E61B4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C64E5794(uint64_t a1)
{
  unint64_t v2 = sub_1C64E61B4();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t MachineUtteranceAction.deinit()
{
  swift_release();
  return v0;
}

uint64_t MachineUtteranceAction.__deallocating_deinit()
{
  swift_release();
  uint64_t v0 = OUTLINED_FUNCTION_34_3();

  return MEMORY[0x1F4186488](v0, v1, v2);
}

uint64_t MachineUtteranceAction.encode(to:)()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F12B8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v0);
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_10_2();
  sub_1C64E61B4();
  OUTLINED_FUNCTION_51();
  type metadata accessor for UtteranceAction();
  sub_1C64E64A8((unint64_t *)&unk_1EBBFBD98, v1, (void (*)(uint64_t))type metadata accessor for UtteranceAction);
  sub_1C6577010();
  uint64_t v2 = OUTLINED_FUNCTION_4_8();
  return v3(v2);
}

uint64_t MachineUtteranceAction.__allocating_init(from:)()
{
  OUTLINED_FUNCTION_34_3();
  swift_allocObject();
  uint64_t v1 = OUTLINED_FUNCTION_26_6();
  MachineUtteranceAction.init(from:)(v1, v2, v3, v4, v5, v6, v7, v8, v10, v11);
  return v0;
}

void MachineUtteranceAction.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  OUTLINED_FUNCTION_25();
  unint64_t v13 = v12;
  OUTLINED_FUNCTION_2_4();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA3F12D0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v14);
  __swift_project_boxed_opaque_existential_1(v13, v13[3]);
  sub_1C64E61B4();
  OUTLINED_FUNCTION_25_4();
  if (v11)
  {
    swift_deallocPartialClassInstance();
  }
  else
  {
    type metadata accessor for UtteranceAction();
    sub_1C64E64A8(&qword_1EBBFBDA8, v15, (void (*)(uint64_t))type metadata accessor for UtteranceAction);
    sub_1C6576F30();
    OUTLINED_FUNCTION_1();
    v16();
    *(void *)(v10 + 16) = a10;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
  OUTLINED_FUNCTION_26();
}

id sub_1C64E5AF0(uint64_t a1)
{
  return MachineUtteranceAction.getCommand(context:)(a1);
}

uint64_t sub_1C64E5B14@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = MachineUtteranceAction.__allocating_init(from:)();
  if (!v1) {
    *a1 = result;
  }
  return result;
}

uint64_t sub_1C64E5B40()
{
  return MachineUtteranceAction.encode(to:)();
}

uint64_t sub_1C64E5B64(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F1468);
    uint64_t v3 = sub_1C6576E40();
  }
  else
  {
    uint64_t v3 = MEMORY[0x1E4FBC868];
  }
  uint64_t v6 = v3;
  sub_1C64E5CF4(a1, 1, &v6, &qword_1EA3F1470, (void (*)(void, void))sub_1C64A7BBC, (void (*)(void))sub_1C6521108, &qword_1EA3F1478);
  uint64_t v4 = v6;
  if (v1) {
    swift_release();
  }
  return v4;
}

uint64_t sub_1C64E5C2C(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F13A8);
    uint64_t v3 = sub_1C6576E40();
  }
  else
  {
    uint64_t v3 = MEMORY[0x1E4FBC868];
  }
  uint64_t v6 = v3;
  sub_1C64E5CF4(a1, 1, &v6, &qword_1EA3F13B0, (void (*)(void, void))sub_1C64A7BBC, (void (*)(void))sub_1C6521128, &qword_1EA3F13B8);
  uint64_t v4 = v6;
  if (v1) {
    swift_release();
  }
  return v4;
}

uint64_t sub_1C64E5CF4(uint64_t a1, char a2, uint64_t *a3, uint64_t *a4, void (*a5)(void, void), void (*a6)(void), uint64_t *a7)
{
  uint64_t v38 = a3;
  uint64_t v7 = *(void *)(a1 + 16);
  if (!v7) {
    return swift_bridgeObjectRelease();
  }
  uint64_t v10 = a1 + 32;
  swift_bridgeObjectRetain();
  while (1)
  {
    sub_1C64E7584(v10, (uint64_t)v36, a4);
    uint64_t v12 = v36[0];
    uint64_t v11 = v36[1];
    unint64_t v13 = a5;
    a5(&v37, v35);
    uint64_t v14 = *v38;
    unint64_t v16 = sub_1C657476C(v12, v11);
    uint64_t v17 = *(void *)(v14 + 16);
    BOOL v18 = (v15 & 1) == 0;
    if (__OFADD__(v17, v18)) {
      break;
    }
    char v19 = v15;
    if (*(void *)(v14 + 24) >= v17 + v18)
    {
      if (a2)
      {
        if (v15) {
          goto LABEL_10;
        }
      }
      else
      {
        __swift_instantiateConcreteTypeFromMangledName(a7);
        sub_1C6576D90();
        if (v19) {
          goto LABEL_10;
        }
      }
    }
    else
    {
      a6();
      unint64_t v20 = sub_1C657476C(v12, v11);
      if ((v19 & 1) != (v21 & 1)) {
        goto LABEL_20;
      }
      unint64_t v16 = v20;
      if (v19)
      {
LABEL_10:
        uint64_t v22 = v38;
        sub_1C64A7B04(*(void *)(*v38 + 56) + 48 * v16, (uint64_t)v33);
        sub_1C64A7B04((uint64_t)v33, (uint64_t)v34);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
        swift_bridgeObjectRelease();
        uint64_t v23 = *(void *)(*v22 + 56) + 48 * v16;
        __swift_destroy_boxed_opaque_existential_1(v23);
        a5 = v13;
        v13(v34, v23);
        goto LABEL_14;
      }
    }
    uint64_t v24 = (void *)*v38;
    v24[(v16 >> 6) + 8] |= 1 << v16;
    uint64_t v25 = (uint64_t *)(v24[6] + 16 * v16);
    *uint64_t v25 = v12;
    v25[1] = v11;
    uint64_t v26 = v24[7] + 48 * v16;
    a5 = v13;
    v13(v35, v26);
    OUTLINED_FUNCTION_30_4();
    if (v28) {
      goto LABEL_19;
    }
    _OWORD v24[2] = v27;
LABEL_14:
    v10 += 64;
    a2 = 1;
    if (!--v7) {
      return swift_bridgeObjectRelease_n();
    }
  }
  __break(1u);
LABEL_19:
  __break(1u);
LABEL_20:
  uint64_t result = sub_1C6577100();
  __break(1u);
  return result;
}

void sub_1C64E5F3C(uint64_t a1, void *a2)
{
  id v3 = (id)sub_1C6576430();
  swift_bridgeObjectRelease();
  objc_msgSend(a2, sel_setUserData_, v3);
}

void sub_1C64E5FBC(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = (id)sub_1C6576540();
  objc_msgSend(a3, sel_setBundleId_, v4);
}

unint64_t sub_1C64E6014()
{
  unint64_t result = qword_1EA3F1298;
  if (!qword_1EA3F1298)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F1298);
  }
  return result;
}

void sub_1C64E6060(uint64_t a1, uint64_t a2, void *a3, SEL *a4)
{
  id v6 = (id)sub_1C6576540();
  swift_bridgeObjectRelease();
  objc_msgSend(a3, *a4, v6);
}

void sub_1C64E60CC(uint64_t a1, void *a2)
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA3F1450);
  id v3 = (id)sub_1C6576780();
  swift_bridgeObjectRelease();
  objc_msgSend(a2, sel_setCommands_, v3);
}

unint64_t sub_1C64E6144()
{
  unint64_t result = qword_1EBBFBD78;
  if (!qword_1EBBFBD78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBBFBD78);
  }
  return result;
}

uint64_t type metadata accessor for UtteranceAction()
{
  return self;
}

unint64_t sub_1C64E61B4()
{
  unint64_t result = qword_1EA3F12C0;
  if (!qword_1EA3F12C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F12C0);
  }
  return result;
}

uint64_t sub_1C64E6200(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = sub_1C64E64A8(&qword_1EA3F12E0, a2, (void (*)(uint64_t))type metadata accessor for DirectInvocationAction);
  uint64_t result = sub_1C64E64A8(&qword_1EA3F12E8, v3, (void (*)(uint64_t))type metadata accessor for DirectInvocationAction);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t type metadata accessor for DirectInvocationAction()
{
  return self;
}

uint64_t sub_1C64E62A8(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1C64E64A8(&qword_1EA3F12F0, 255, (void (*)(uint64_t))type metadata accessor for UrlPunchOutInvocationAction);
  uint64_t result = sub_1C64E64A8(&qword_1EA3F12F8, 255, (void (*)(uint64_t))type metadata accessor for UrlPunchOutInvocationAction);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t type metadata accessor for UrlPunchOutInvocationAction()
{
  uint64_t result = qword_1EA3F1310;
  if (!qword_1EA3F1310) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C64E637C(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = sub_1C64E64A8(&qword_1EBBFBDA8, a2, (void (*)(uint64_t))type metadata accessor for UtteranceAction);
  uint64_t result = sub_1C64E64A8((unint64_t *)&unk_1EBBFBD98, v3, (void (*)(uint64_t))type metadata accessor for UtteranceAction);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1C64E6400(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = sub_1C64E64A8(&qword_1EA3F1300, a2, (void (*)(uint64_t))type metadata accessor for MachineUtteranceAction);
  uint64_t result = sub_1C64E64A8(&qword_1EA3F1308, v3, (void (*)(uint64_t))type metadata accessor for MachineUtteranceAction);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t type metadata accessor for MachineUtteranceAction()
{
  return self;
}

uint64_t sub_1C64E64A8(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t dispatch thunk of InvocationAction.getCommand(context:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t destroy for InvocationContext(id *a1)
{
  return swift_bridgeObjectRelease();
}

void *_s18SiriSuggestionsKit17InvocationContextVwCP_0(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  a1[2] = *(void *)(a2 + 16);
  id v5 = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for InvocationContext(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for InvocationContext(uint64_t a1, void *a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *a2;

  uint64_t v5 = a2[2];
  *(void *)(a1 + 8) = a2[1];
  *(void *)(a1 + 16) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for InvocationContext(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((unsigned char *)a1 + 24))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for InvocationContext(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for InvocationContext()
{
  return &type metadata for InvocationContext;
}

uint64_t method lookup function for DirectInvocationAction(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for DirectInvocationAction);
}

uint64_t dispatch thunk of DirectInvocationAction.__allocating_init(siriKitIdentifier:payload:suggestionId:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of DirectInvocationAction.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t sub_1C64E6728()
{
  return type metadata accessor for UrlPunchOutInvocationAction();
}

uint64_t sub_1C64E6730()
{
  uint64_t result = sub_1C6576050();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for UrlPunchOutInvocationAction(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for UrlPunchOutInvocationAction);
}

uint64_t dispatch thunk of UrlPunchOutInvocationAction.__allocating_init(appBundleId:url:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of UrlPunchOutInvocationAction.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t method lookup function for UtteranceAction(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for UtteranceAction);
}

uint64_t dispatch thunk of UtteranceAction.__allocating_init(utteranceOverride:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of UtteranceAction.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t method lookup function for MachineUtteranceAction(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MachineUtteranceAction);
}

uint64_t dispatch thunk of MachineUtteranceAction.__allocating_init(dialogProperties:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of MachineUtteranceAction.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

ValueMetadata *type metadata accessor for MachineUtteranceAction.CodingKeys()
{
  return &type metadata for MachineUtteranceAction.CodingKeys;
}

unsigned char *_s18SiriSuggestionsKit22MachineUtteranceActionC10CodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C64E6978);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for UtteranceAction.CodingKeys()
{
  return &type metadata for UtteranceAction.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for UrlPunchOutInvocationAction.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C64E6A7CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UrlPunchOutInvocationAction.CodingKeys()
{
  return &type metadata for UrlPunchOutInvocationAction.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for DirectInvocationAction.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C64E6B80);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DirectInvocationAction.CodingKeys()
{
  return &type metadata for DirectInvocationAction.CodingKeys;
}

unint64_t sub_1C64E6BBC()
{
  unint64_t result = qword_1EA3F1328;
  if (!qword_1EA3F1328)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F1328);
  }
  return result;
}

unint64_t sub_1C64E6C0C()
{
  unint64_t result = qword_1EA3F1330;
  if (!qword_1EA3F1330)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F1330);
  }
  return result;
}

unint64_t sub_1C64E6C5C()
{
  unint64_t result = qword_1EA3F1338;
  if (!qword_1EA3F1338)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F1338);
  }
  return result;
}

unint64_t sub_1C64E6CAC()
{
  unint64_t result = qword_1EA3F1340;
  if (!qword_1EA3F1340)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F1340);
  }
  return result;
}

unint64_t sub_1C64E6CFC()
{
  unint64_t result = qword_1EA3F1348;
  if (!qword_1EA3F1348)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F1348);
  }
  return result;
}

unint64_t sub_1C64E6D4C()
{
  unint64_t result = qword_1EA3F1350;
  if (!qword_1EA3F1350)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F1350);
  }
  return result;
}

unint64_t sub_1C64E6D9C()
{
  unint64_t result = qword_1EBBFBD88;
  if (!qword_1EBBFBD88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBBFBD88);
  }
  return result;
}

unint64_t sub_1C64E6DEC()
{
  unint64_t result = qword_1EBBFBD80;
  if (!qword_1EBBFBD80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBBFBD80);
  }
  return result;
}

unint64_t sub_1C64E6E3C()
{
  unint64_t result = qword_1EA3F1358;
  if (!qword_1EA3F1358)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F1358);
  }
  return result;
}

unint64_t sub_1C64E6E8C()
{
  unint64_t result = qword_1EA3F1360;
  if (!qword_1EA3F1360)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F1360);
  }
  return result;
}

unint64_t sub_1C64E6EDC()
{
  unint64_t result = qword_1EA3F1368;
  if (!qword_1EA3F1368)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F1368);
  }
  return result;
}

unint64_t sub_1C64E6F2C()
{
  unint64_t result = qword_1EA3F1370;
  if (!qword_1EA3F1370)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F1370);
  }
  return result;
}

unint64_t sub_1C64E6F78()
{
  unint64_t result = qword_1EBBFBE38;
  if (!qword_1EBBFBE38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBBFBE38);
  }
  return result;
}

uint64_t sub_1C64E6FC4()
{
  return swift_release();
}

uint64_t sub_1C64E6FCC(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1EBBFC1F0);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

size_t sub_1C64E7030(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  int v3 = a3;
  unint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *(_OWORD **)(a2 + 16);
  if ((unint64_t)v5 >= v4) {
    unsigned int v6 = *(_OWORD **)(a1 + 16);
  }
  else {
    unsigned int v6 = *(_OWORD **)(a2 + 16);
  }
  uint64_t v44 = *(void *)(a2 + 16);
  int64_t v41 = v6;
  if (v6)
  {
    __swift_instantiateConcreteTypeFromMangledName(a3);
    uint64_t v7 = swift_allocObject();
    size_t result = _swift_stdlib_malloc_size((const void *)v7);
    uint64_t v9 = (uint64_t)(result - 32) / 64;
    *(void *)(v7 + 16) = v6;
    *(void *)(v7 + 24) = 2 * v9;
    unint64_t v45 = v4;
    uint64_t v46 = (void *)v7;
    if (v4)
    {
      uint64_t v7 = 0;
      uint64_t v10 = a2 + 32;
      uint64_t v39 = v9 & 0x7FFFFFFFFFFFFFFFLL;
      uint64_t v11 = -(uint64_t)v4;
      uint64_t v12 = (uint64_t *)(a1 + 40);
      uint64_t v13 = 1 - (void)v6;
      unsigned int v6 = v46 + 12;
      while (-v44 != v7)
      {
        uint64_t v14 = *v12;
        *(void *)&long long v49 = *(v12 - 1);
        *((void *)&v49 + 1) = v14;
        sub_1C64A7B04(v10, (uint64_t)&v50);
        long long v15 = v50;
        *(v6 - 4) = v49;
        *(v6 - 3) = v15;
        long long v16 = v52;
        *(v6 - 2) = v51;
        *(v6 - 1) = v16;
        if (v13 == v7) {
          goto LABEL_11;
        }
        size_t result = swift_bridgeObjectRetain();
        --v7;
        v10 += 48;
        v12 += 2;
        v6 += 4;
        if (v11 == v7) {
          goto LABEL_10;
        }
      }
      __break(1u);
      goto LABEL_41;
    }
LABEL_10:
    __break(1u);
LABEL_11:
    uint64_t v17 = a1;
    swift_bridgeObjectRetain();
    uint64_t v18 = a2;
    swift_bridgeObjectRetain();
    size_t result = swift_bridgeObjectRetain();
    int v3 = a3;
    uint64_t v19 = v39 + v7 - 1;
    uint64_t v5 = (_OWORD *)v44;
    unint64_t v4 = v45;
  }
  else
  {
    uint64_t v18 = a2;
    uint64_t v17 = a1;
    uint64_t v20 = MEMORY[0x1E4FBC860];
    uint64_t v19 = *(void *)(MEMORY[0x1E4FBC860] + 24) >> 1;
    swift_bridgeObjectRetain();
    size_t result = swift_bridgeObjectRetain();
    uint64_t v46 = (void *)v20;
    unsigned int v6 = (_OWORD *)(v20 + 32);
  }
  char v21 = v41;
  if (v4 > (unint64_t)v5)
  {
    uint64_t v22 = v17 + 16 * (void)v41 + 40;
    uint64_t v23 = v18 + 48 * (void)v41 + 32;
    while ((unint64_t)v21 < v4)
    {
      if (v5 == v21) {
        goto LABEL_36;
      }
      if (v21 >= v5) {
        goto LABEL_42;
      }
      long long v47 = *(_OWORD *)(v22 - 8);
      size_t result = sub_1C64A7B04(v23, (uint64_t)v48);
      long long v49 = v47;
      long long v50 = v48[0];
      long long v51 = v48[1];
      long long v52 = v48[2];
      if (v19)
      {
        size_t result = swift_bridgeObjectRetain();
      }
      else
      {
        unint64_t v24 = v46[3];
        if ((uint64_t)((v24 >> 1) + 0x4000000000000000) < 0) {
          goto LABEL_44;
        }
        int64_t v25 = v24 & 0xFFFFFFFFFFFFFFFELL;
        if (v25 <= 1) {
          uint64_t v26 = 1;
        }
        else {
          uint64_t v26 = v25;
        }
        __swift_instantiateConcreteTypeFromMangledName(v3);
        uint64_t v27 = (void *)swift_allocObject();
        uint64_t v28 = (uint64_t)(_swift_stdlib_malloc_size(v27) - 32) / 64;
        void v27[2] = v26;
        v27[3] = 2 * v28;
        uint64_t v29 = v27 + 4;
        uint64_t v30 = v46[3] >> 1;
        unsigned int v6 = &v27[8 * v30 + 4];
        uint64_t v19 = (v28 & 0x7FFFFFFFFFFFFFFFLL) - v30;
        if (v46[2])
        {
          if (v27 != v46 || v29 >= &v46[8 * v30 + 4]) {
            memmove(v29, v46 + 4, v30 << 6);
          }
          swift_bridgeObjectRetain();
          v46[2] = 0;
        }
        else
        {
          swift_bridgeObjectRetain();
        }
        size_t result = swift_release();
        uint64_t v46 = v27;
        uint64_t v5 = (_OWORD *)v44;
      }
      BOOL v32 = __OFSUB__(v19--, 1);
      if (v32) {
        goto LABEL_43;
      }
      char v21 = (_OWORD *)((char *)v21 + 1);
      long long v33 = v49;
      long long v34 = v50;
      long long v35 = v52;
      uint64_t v6[2] = v51;
      v6[3] = v35;
      *unsigned int v6 = v33;
      v6[1] = v34;
      v6 += 4;
      v22 += 16;
      v23 += 48;
      if ((_OWORD *)v4 == v21) {
        goto LABEL_36;
      }
    }
LABEL_41:
    __break(1u);
LABEL_42:
    __break(1u);
LABEL_43:
    __break(1u);
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
LABEL_36:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  size_t result = (size_t)v46;
  unint64_t v36 = v46[3];
  if (v36 >= 2)
  {
    unint64_t v37 = v36 >> 1;
    BOOL v32 = __OFSUB__(v37, v19);
    unint64_t v38 = v37 - v19;
    if (v32)
    {
LABEL_45:
      __break(1u);
      return result;
    }
    size_t result = (size_t)v46;
    v46[2] = v38;
  }
  return result;
}

uint64_t sub_1C64E7380(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  uint64_t v4 = *(void *)(a1 + 48);
  *(_OWORD *)(a2 + 32) = *(_OWORD *)(a1 + 32);
  *(void *)(a2 + 48) = v4;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_1C64E73EC(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  long long v4 = a1[2];
  *(void *)(a2 + 48) = *((void *)a1 + 6);
  *(_OWORD *)(a2 + 16) = v3;
  *(_OWORD *)(a2 + 32) = v4;
  *(_OWORD *)a2 = v2;
  return a2;
}

_OWORD *sub_1C64E740C(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_1C64E741C(uint64_t result, int a2, uint64_t a3, uint64_t a4)
{
  if (result < 0 || -(-1 << *(unsigned char *)(a4 + 32)) <= result)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(void *)(a4 + 64 + (((unint64_t)result >> 3) & 0x1FFFFFFFFFFFFFF8)) >> result) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a4 + 36) == a2) {
    return sub_1C6576BC0();
  }
LABEL_8:
  __break(1u);
  return result;
}

uint64_t sub_1C64E749C(uint64_t result, uint64_t a2, int a3, uint64_t a4, uint64_t a5)
{
  if (a2 < 0 || 1 << *(unsigned char *)(a5 + 32) <= a2)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(void *)(a5 + 8 * ((unint64_t)a2 >> 6) + 64) >> a2) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a5 + 36) == a3)
  {
    uint64_t v5 = *(void *)(*(void *)(a5 + 48) + 16 * a2);
    sub_1C64BAACC(*(void *)(a5 + 56) + 32 * a2, result);
    swift_bridgeObjectRetain();
    return v5;
  }
LABEL_8:
  __break(1u);
  return result;
}

uint64_t sub_1C64E7528(uint64_t a1, uint64_t *a2)
{
  __swift_instantiateConcreteTypeFromMangledName(a2);
  OUTLINED_FUNCTION_13_2();
  OUTLINED_FUNCTION_1();
  v3();
  return a1;
}

uint64_t sub_1C64E7578(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C64E7584(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  __swift_instantiateConcreteTypeFromMangledName(a3);
  OUTLINED_FUNCTION_13_2();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

uint64_t OUTLINED_FUNCTION_4_8()
{
  return v0;
}

void OUTLINED_FUNCTION_5_7(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(a4 + a1) |= v4;
}

void *OUTLINED_FUNCTION_10_2()
{
  return __swift_project_boxed_opaque_existential_1(v0, v0[3]);
}

uint64_t OUTLINED_FUNCTION_17_5()
{
  return sub_1C6576E40();
}

uint64_t OUTLINED_FUNCTION_19_5()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_22_5()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_24_3()
{
  *(unsigned char *)(v0 - 65) = 0;
  return sub_1C6576FD0();
}

uint64_t OUTLINED_FUNCTION_25_4()
{
  return sub_1C6577210();
}

uint64_t OUTLINED_FUNCTION_26_6()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_32_5()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_34_3()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_36_1()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_39_3()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_40_3()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_41_3()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_42_2()
{
  sub_1C64E6FC4();
  return v0;
}

uint64_t GMAvailableNotificationObserver.notificationName.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t GMAvailableNotificationObserver.lifecycleContainer.getter()
{
  return swift_unknownObjectRetain();
}

uint64_t GMAvailableNotificationObserver.__allocating_init(lifecycleContainer:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  GMAvailableNotificationObserver.init(lifecycleContainer:)(a1, a2);
  return v4;
}

uint64_t GMAvailableNotificationObserver.init(lifecycleContainer:)(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(v2 + 16) = -1;
  *(void *)(v2 + 24) = 0xD000000000000027;
  *(void *)(v2 + 32) = 0x80000001C65888E0;
  *(void *)(v2 + 40) = a1;
  *(void *)(v2 + 48) = a2;
  swift_beginAccess();
  swift_unknownObjectRetain();
  notify_register_check("com.apple.gms.availability.notification", (int *)(v2 + 16));
  swift_endAccess();
  swift_unknownObjectRelease();
  return v2;
}

Swift::Void __swiftcall GMAvailableNotificationObserver.registerNotify()()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1C65763C0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v0 + 24);
  unint64_t v6 = *(void *)(v0 + 32);
  sub_1C64E85DC();
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4FBCB48], v2);
  uint64_t v8 = sub_1C6576A70();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  aBlock[4] = (uint64_t)sub_1C64E861C;
  aBlock[5] = v1;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1C64E82EC;
  aBlock[3] = (uint64_t)&block_descriptor;
  uint64_t v9 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  uint64_t v10 = (const char *)(sub_1C65765B0() + 32);
  swift_beginAccess();
  uint32_t v11 = notify_register_dispatch(v10, (int *)(v1 + 16), v8, v9);
  swift_endAccess();
  swift_release();
  _Block_release(v9);

  if (qword_1EBBFC428 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_1C65763A0();
  __swift_project_value_buffer(v12, (uint64_t)qword_1EBBFC278);
  swift_retain();
  uint64_t v13 = sub_1C6576380();
  os_log_type_t v14 = sub_1C6576A50();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v15 = 136315650;
    swift_bridgeObjectRetain();
    uint64_t v19 = sub_1C64BCF18(v7, v6, aBlock);
    sub_1C6576B40();
    swift_release();
    swift_bridgeObjectRelease();
    *(_WORD *)(v15 + 12) = 1024;
    LODWORD(v19) = v11;
    sub_1C6576B40();
    *(_WORD *)(v15 + 18) = 2080;
    if (v11) {
      uint64_t v16 = 0x64656C696146;
    }
    else {
      uint64_t v16 = 0x73736563637553;
    }
    if (v11) {
      unint64_t v17 = 0xE600000000000000;
    }
    else {
      unint64_t v17 = 0xE700000000000000;
    }
    uint64_t v19 = sub_1C64BCF18(v16, v17, aBlock);
    sub_1C6576B40();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C6494000, v13, v14, "DarwinNotification notify_register for notification: %s. Registration result: %u (i.e %s)", (uint8_t *)v15, 0x1Cu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_31_5();
    OUTLINED_FUNCTION_31_5();
  }
  else
  {

    swift_release();
  }
}

uint64_t sub_1C64E7DD0(int a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFBEF8);
  MEMORY[0x1F4188790](v4 - 8);
  unint64_t v6 = (char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1C6576920();
  __swift_storeEnumTagSinglePayload((uint64_t)v6, 1, 1, v7);
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = 0;
  *(void *)(v8 + 24) = 0;
  *(_DWORD *)(v8 + 32) = a1;
  *(void *)(v8 + 40) = a2;
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v6, 1, v7);
  swift_retain();
  if (EnumTagSinglePayload == 1)
  {
    sub_1C64C7248((uint64_t)v6);
    uint64_t v10 = 0;
    uint64_t v11 = 0;
  }
  else
  {
    sub_1C6576910();
    (*(void (**)(char *, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
    if (*(void *)(v8 + 16))
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v10 = sub_1C65768C0();
      uint64_t v11 = v12;
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v10 = 0;
      uint64_t v11 = 0;
    }
  }
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = &unk_1EA3F1498;
  *(void *)(v13 + 24) = v8;
  if (v11 | v10)
  {
    v15[0] = 0;
    v15[1] = 0;
    long long v15[2] = v10;
    v15[3] = v11;
  }
  swift_task_create();
  return swift_release();
}

uint64_t sub_1C64E7FDC(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5)
{
  *(void *)(v5 + 24) = a5;
  *(_DWORD *)(v5 + 40) = a4;
  return MEMORY[0x1F4188298](sub_1C64E8070, 0, 0);
}

uint64_t sub_1C64E8070()
{
  int v1 = *(_DWORD *)(v0 + 40);
  *(void *)(v0 + 16) = 0;
  notify_get_state(v1, (uint64_t *)(v0 + 16));
  swift_getObjectType();
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1C64E8174;
  return GlobalLifeCycleContainer.gmStatusChanged(status:)();
}

uint64_t sub_1C64E8174()
{
  OUTLINED_FUNCTION_6_0();
  OUTLINED_FUNCTION_0_0();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_3_1();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1C64E826C, 0, 0);
}

uint64_t sub_1C64E826C()
{
  OUTLINED_FUNCTION_6_0();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C64E82EC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);

  return swift_release();
}

Swift::Void __swiftcall GMAvailableNotificationObserver.cancel()()
{
  uint64_t v1 = v0;
  uint64_t v2 = (int *)(v0 + 16);
  swift_beginAccess();
  if (*(_DWORD *)(v0 + 16) != -1)
  {
    if (qword_1EBBFC428 != -1) {
      swift_once();
    }
    uint64_t v3 = sub_1C65763A0();
    __swift_project_value_buffer(v3, (uint64_t)qword_1EBBFC278);
    swift_retain();
    uint64_t v4 = sub_1C6576380();
    os_log_type_t v5 = sub_1C6576A50();
    if (os_log_type_enabled(v4, v5))
    {
      unint64_t v6 = (uint8_t *)swift_slowAlloc();
      uint64_t v9 = swift_slowAlloc();
      *(_DWORD *)unint64_t v6 = 136315138;
      uint64_t v7 = *(void *)(v1 + 24);
      unint64_t v8 = *(void *)(v1 + 32);
      swift_bridgeObjectRetain();
      sub_1C64BCF18(v7, v8, &v9);
      sub_1C6576B40();
      swift_release();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C6494000, v4, v5, "DarwinNotificationObserver notify_cancel for notification: %s", v6, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_31_5();
      OUTLINED_FUNCTION_31_5();
    }
    else
    {

      swift_release();
    }
    notify_cancel(*v2);
    *uint64_t v2 = -1;
  }
}

uint64_t GMAvailableNotificationObserver.deinit()
{
  GMAvailableNotificationObserver.cancel()();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  return v0;
}

uint64_t GMAvailableNotificationObserver.__deallocating_deinit()
{
  GMAvailableNotificationObserver.deinit();

  return MEMORY[0x1F4186488](v0, 56, 7);
}

uint64_t sub_1C64E8570()
{
  return GMAvailableNotificationObserver.notificationName.getter();
}

void sub_1C64E8594()
{
}

void sub_1C64E85B8()
{
}

unint64_t sub_1C64E85DC()
{
  unint64_t result = qword_1EBBFBA50;
  if (!qword_1EBBFBA50)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBBFBA50);
  }
  return result;
}

uint64_t sub_1C64E861C(int a1)
{
  return sub_1C64E7DD0(a1, v1);
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t sub_1C64E863C()
{
  return sub_1C6576B40();
}

uint64_t dispatch thunk of DarwinNotificationObserver.notificationName.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of DarwinNotificationObserver.registerNotify()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of DarwinNotificationObserver.cancel()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t type metadata accessor for GMAvailableNotificationObserver()
{
  return self;
}

uint64_t method lookup function for GMAvailableNotificationObserver(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for GMAvailableNotificationObserver);
}

uint64_t dispatch thunk of GMAvailableNotificationObserver.__allocating_init(lifecycleContainer:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t sub_1C64E86F0()
{
  swift_unknownObjectRelease();
  swift_release();

  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1C64E8730(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  int v6 = *(_DWORD *)(v1 + 32);
  uint64_t v7 = *(void *)(v1 + 40);
  unint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *unint64_t v8 = v2;
  v8[1] = sub_1C64E87F4;
  return sub_1C64E7FDC(a1, v4, v5, v6, v7);
}

uint64_t sub_1C64E87F4()
{
  OUTLINED_FUNCTION_6_0();
  OUTLINED_FUNCTION_0_0();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_3_1();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v1 + 8);
  return v3();
}

uint64_t sub_1C64E88B8()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C64E88F0(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1C64E87F4;
  int v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1EA3F16C8 + dword_1EA3F16C8);
  return v6(a1, v4);
}

double SimpleRNG.init(seed:)@<D0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = a1;
  if (HIDWORD(a1))
  {
    if (qword_1EBBFC428 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_1C65763A0();
    __swift_project_value_buffer(v4, (uint64_t)qword_1EBBFC278);
    uint64_t v5 = sub_1C6576380();
    os_log_type_t v6 = sub_1C6576A40();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = swift_slowAlloc();
      *(_DWORD *)uint64_t v7 = 134218240;
      sub_1C6576B40();
      *(_WORD *)(v7 + 12) = 2048;
      sub_1C6576B40();
      _os_log_impl(&dword_1C6494000, v5, v6, "Truncating seed to avoid overflow: %llu -> %llu", (uint8_t *)v7, 0x16u);
      MEMORY[0x1C87A0050](v7, -1, -1);
    }
  }
  *(void *)a2 = v3;
  *(void *)&double result = 1103515245;
  *(_OWORD *)(a2 + 8) = xmmword_1C657EB90;
  *(void *)(a2 + 24) = 12345;
  return result;
}

Swift::UInt64 __swiftcall SimpleRNG.next()()
{
  unint64_t v1 = v0[1];
  if (!is_mul_ok(v1, *v0))
  {
    __break(1u);
    goto LABEL_7;
  }
  unint64_t v2 = v1 * *v0;
  unint64_t v3 = v0[3];
  BOOL v4 = __CFADD__(v2, v3);
  unint64_t v5 = v2 + v3;
  if (v4)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  unint64_t v6 = v0[2];
  if (!v6)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  unint64_t v7 = v5 % v6;
  unint64_t *v0 = v7;
  if (is_mul_ok(v7, 0x1FB3C4B80uLL)) {
    return 8510000000 * v7;
  }
LABEL_9:
  __break(1u);
  return result;
}

ValueMetadata *type metadata accessor for SimpleRNG()
{
  return &type metadata for SimpleRNG;
}

void *static DeliveryVehicle.allCases.getter()
{
  uint64_t v0 = qword_1F2156F18;
  if (qword_1F2156F18)
  {
    uint64_t v10 = MEMORY[0x1E4FBC860];
    sub_1C64A23C0();
    uint64_t v1 = v10;
    unint64_t v2 = *(void *)(v10 + 16);
    uint64_t v3 = 40 * v2;
    BOOL v4 = &byte_1F2156F28;
    do
    {
      unsigned int v6 = *v4++;
      uint64_t v5 = v6;
      uint64_t v11 = v1;
      unint64_t v7 = v2 + 1;
      if (v2 >= *(void *)(v1 + 24) >> 1)
      {
        sub_1C64A23C0();
        uint64_t v1 = v11;
      }
      *(void *)(v1 + 16) = v7;
      uint64_t v8 = v1 + v3;
      *(void *)(v8 + 32) = v5;
      *(void *)(v8 + 40) = 0;
      *(void *)(v8 + 48) = 0;
      *(void *)(v8 + 56) = 0;
      v3 += 40;
      unint64_t v2 = v7;
      *(unsigned char *)(v8 + 64) = 1;
      --v0;
    }
    while (v0);
  }
  sub_1C649FFBC();
  return &unk_1F2156F30;
}

double DeliveryVehicle.init(rawValue:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_1C64E8FF4((uint64_t)&v39);
  LOBYTE(v6) = v43;
  if (v43 != 255)
  {
    uint64_t v7 = v41;
    uint64_t v8 = v42;
    uint64_t v10 = v39;
    uint64_t v9 = v40;
    swift_bridgeObjectRelease();
    goto LABEL_47;
  }
  unint64_t v12 = (unint64_t)static DeliveryVehicle.allCases.getter();
  uint64_t v13 = *(void *)(v12 + 16);
  if (!v13)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_48:
    double result = 0.0;
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
    *(unsigned char *)(a3 + 32) = -1;
    return result;
  }
  uint64_t v34 = a3;
  swift_bridgeObjectRetain();
  os_log_type_t v14 = (unsigned __int8 *)(v12 + 64);
  uint64_t v35 = a1;
  uint64_t v36 = a2;
  while (1)
  {
    uint64_t v10 = *((void *)v14 - 4);
    uint64_t v9 = *((void *)v14 - 3);
    uint64_t v15 = *((void *)v14 - 2);
    uint64_t v8 = *((void *)v14 - 1);
    int v6 = *v14;
    uint64_t v38 = v15;
    if (v6 != 2)
    {
      if (v6 == 1)
      {
        uint64_t v16 = OUTLINED_FUNCTION_17_6();
        if (!(_BYTE)v10)
        {
          sub_1C64A0570(v16, v17, v18, v19, 1);
          unint64_t v12 = 0xE900000000000073;
          goto LABEL_27;
        }
        if (v10 == 1)
        {
          sub_1C64A0570(v16, v17, v18, v19, 1);
          OUTLINED_FUNCTION_16_6();
LABEL_27:
          uint64_t v23 = OUTLINED_FUNCTION_7_7();
          goto LABEL_31;
        }
        sub_1C64A0570(v16, v17, v18, v19, 1);
        uint64_t v23 = OUTLINED_FUNCTION_10_3();
      }
      else
      {
        OUTLINED_FUNCTION_8_3();
        uint64_t v24 = OUTLINED_FUNCTION_17_6();
        sub_1C64A0570(v24, v25, v26, v27, 0);
        swift_bridgeObjectRetain();
        sub_1C6576620();
        swift_bridgeObjectRelease();
        uint64_t v28 = v8;
        uint64_t v30 = v39;
        unint64_t v29 = v40;
        uint64_t v37 = v28;
        if (v28)
        {
          OUTLINED_FUNCTION_13_5();
          sub_1C6576620();
        }
        uint64_t v39 = v30;
        unint64_t v40 = v29;
        swift_bridgeObjectRetain();
        sub_1C6576620();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v23 = v39;
        unint64_t v12 = v40;
        a1 = v35;
        a2 = v36;
        uint64_t v8 = v37;
      }
      goto LABEL_31;
    }
    if (!(v15 | v9 | v10 | v8))
    {
      OUTLINED_FUNCTION_1_11(0);
      uint64_t v31 = "siriNotification";
LABEL_30:
      unint64_t v12 = (unint64_t)v31 | 0x8000000000000000;
      uint64_t v23 = 0xD000000000000010;
      goto LABEL_31;
    }
    uint64_t v20 = v15 | v9 | v8;
    if (v10 == 1 && v20 == 0)
    {
      OUTLINED_FUNCTION_1_11(1);
      uint64_t v31 = "assistantSuggestions";
      goto LABEL_30;
    }
    if (v10 == 2 && v20 == 0)
    {
      OUTLINED_FUNCTION_1_11(2);
      unint64_t v12 = 0xEE006E6F69746163;
      uint64_t v23 = OUTLINED_FUNCTION_3_9();
    }
    else
    {
      if (v10 == 3 && !v20)
      {
        OUTLINED_FUNCTION_1_11(3);
        unint64_t v12 = 0xE800000000000000;
        uint64_t v23 = OUTLINED_FUNCTION_4_9();
        goto LABEL_31;
      }
      if (v10 != 4 || v20)
      {
        OUTLINED_FUNCTION_1_11(5);
        uint64_t v31 = "lifecycleContainer";
        goto LABEL_30;
      }
      OUTLINED_FUNCTION_1_11(4);
      uint64_t v23 = 0xD000000000000014;
      unint64_t v12 = 0x80000001C65889C0;
    }
LABEL_31:
    if (v23 == a1 && v12 == a2)
    {
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      goto LABEL_46;
    }
    char v33 = sub_1C6577090();
    swift_bridgeObjectRelease();
    if (v33) {
      break;
    }
    v14 += 40;
    sub_1C64A21C4(v10, v9, v38, v8, v6);
    if (!--v13)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      a3 = v34;
      goto LABEL_48;
    }
  }
  swift_bridgeObjectRelease_n();
LABEL_46:
  swift_bridgeObjectRelease();
  a3 = v34;
  uint64_t v7 = v38;
LABEL_47:
  *(void *)a3 = v10;
  *(void *)(a3 + 8) = v9;
  *(void *)(a3 + 16) = v7;
  *(void *)(a3 + 24) = v8;
  *(unsigned char *)(a3 + 32) = v6;
  return result;
}

uint64_t sub_1C64E8FF4@<X0>(uint64_t a1@<X8>)
{
  sub_1C64D5608();
  unint64_t v2 = (void *)sub_1C6576B60();
  uint64_t v3 = v2;
  unint64_t v4 = v2[2];
  if (v4
    && (v2[4] == 0x7070416E69 ? (BOOL v5 = v2[5] == 0xE500000000000000) : (BOOL v5 = 0), v5 || (sub_1C6577090() & 1) != 0))
  {
    if (v4 < 2)
    {
      uint64_t v7 = 0;
      uint64_t v8 = 0;
      uint64_t v9 = 0;
      unint64_t v6 = 0xE000000000000000;
    }
    else
    {
      uint64_t v7 = v3[6];
      unint64_t v6 = v3[7];
      swift_bridgeObjectRetain();
      if (v4 == 2)
      {
        uint64_t v8 = 0;
        uint64_t v9 = 0;
      }
      else
      {
        uint64_t v8 = v3[8];
        uint64_t v9 = v3[9];
        swift_bridgeObjectRetain();
      }
    }
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)a1 = v7;
    *(void *)(a1 + 8) = v6;
    *(void *)(a1 + 16) = v8;
    *(void *)(a1 + 24) = v9;
    *(unsigned char *)(a1 + 32) = 0;
  }
  else
  {
    uint64_t result = swift_bridgeObjectRelease();
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    *(unsigned char *)(a1 + 32) = -1;
  }
  return result;
}

uint64_t DeliveryVehicle.rawValue.getter()
{
  uint64_t v1 = *v0;
  uint64_t v2 = v0[1];
  uint64_t v4 = v0[2];
  uint64_t v3 = v0[3];
  int v5 = *((unsigned __int8 *)v0 + 32);
  if (v5 == 2)
  {
    uint64_t result = 0xD000000000000010;
    if (v4 | v2 | v1 | v3)
    {
      uint64_t v7 = v4 | v2 | v3;
      if (v1 != 1 || v7)
      {
        if (v1 != 2 || v7)
        {
          if (v1 != 3 || v7)
          {
            if (v1 == 4 && v7 == 0) {
              return 0xD000000000000014;
            }
          }
          else
          {
            return OUTLINED_FUNCTION_4_9();
          }
        }
        else
        {
          return OUTLINED_FUNCTION_3_9();
        }
      }
    }
  }
  else if (v5 == 1)
  {
    uint64_t result = OUTLINED_FUNCTION_7_7();
    if (v1 >= 2u) {
      return 0x6E776F6E6B6E75;
    }
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_1C6576620();
    swift_bridgeObjectRelease();
    if (v3) {
      sub_1C6576620();
    }
    swift_bridgeObjectRetain();
    sub_1C6576620();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return 0x5F7070416E69;
  }
  return result;
}

uint64_t DeliveryVehicle.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  OUTLINED_FUNCTION_19_6();
  sub_1C65771F0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v48, v49);
  OUTLINED_FUNCTION_19_6();
  uint64_t v5 = sub_1C6577050();
  uint64_t v7 = v6;
  sub_1C64E8FF4((uint64_t)&v43);
  char v8 = v47;
  if (v47 != 255)
  {
    uint64_t v10 = v45;
    uint64_t v9 = v46;
    uint64_t v12 = v43;
    unint64_t v11 = v44;
    swift_bridgeObjectRelease();
    goto LABEL_47;
  }
  uint64_t v38 = a2;
  unint64_t v13 = (unint64_t)static DeliveryVehicle.allCases.getter();
  uint64_t v14 = *(void *)(v13 + 16);
  if (!v14) {
    goto LABEL_50;
  }
  swift_bridgeObjectRetain();
  uint64_t v15 = (char *)(v13 + 64);
  uint64_t v39 = v5;
  uint64_t v40 = v7;
  while (1)
  {
    uint64_t v12 = *((void *)v15 - 4);
    unint64_t v11 = *((void *)v15 - 3);
    uint64_t v16 = *((void *)v15 - 2);
    uint64_t v17 = *((void *)v15 - 1);
    int v18 = *v15;
    char v42 = *v15;
    uint64_t v50 = v17;
    uint64_t v41 = v16;
    if (v18 != 2)
    {
      if (v18 == 1)
      {
        uint64_t v19 = OUTLINED_FUNCTION_18_6();
        if (!(_BYTE)v12)
        {
          sub_1C64A0570(v19, v20, v21, v22, 1);
          unint64_t v13 = 0xE900000000000073;
          goto LABEL_28;
        }
        if (v12 == 1)
        {
          sub_1C64A0570(v19, v20, v21, v22, 1);
          OUTLINED_FUNCTION_16_6();
LABEL_28:
          uint64_t v26 = OUTLINED_FUNCTION_7_7();
          goto LABEL_32;
        }
        sub_1C64A0570(v19, v20, v21, v22, 1);
        uint64_t v26 = OUTLINED_FUNCTION_10_3();
      }
      else
      {
        OUTLINED_FUNCTION_8_3();
        uint64_t v27 = OUTLINED_FUNCTION_18_6();
        sub_1C64A0570(v27, v28, v29, v50, 0);
        swift_bridgeObjectRetain();
        OUTLINED_FUNCTION_18_6();
        sub_1C6576620();
        swift_bridgeObjectRelease();
        uint64_t v31 = v43;
        unint64_t v30 = v44;
        if (v50)
        {
          OUTLINED_FUNCTION_13_5();
          sub_1C6576620();
        }
        uint64_t v43 = v31;
        unint64_t v44 = v30;
        swift_bridgeObjectRetain();
        sub_1C6576620();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v26 = v43;
        unint64_t v13 = v44;
        uint64_t v5 = v39;
        uint64_t v7 = v40;
      }
      goto LABEL_32;
    }
    if (!(v16 | v11 | v12 | v17))
    {
      OUTLINED_FUNCTION_1_11(0);
      BOOL v32 = "siriNotification";
LABEL_31:
      unint64_t v13 = (unint64_t)v32 | 0x8000000000000000;
      uint64_t v26 = 0xD000000000000010;
      goto LABEL_32;
    }
    uint64_t v23 = v16 | v11 | v17;
    if (v12 == 1 && v23 == 0)
    {
      OUTLINED_FUNCTION_1_11(1);
      BOOL v32 = "assistantSuggestions";
      goto LABEL_31;
    }
    if (v12 == 2 && v23 == 0)
    {
      OUTLINED_FUNCTION_1_11(2);
      unint64_t v13 = 0xEE006E6F69746163;
      uint64_t v26 = OUTLINED_FUNCTION_3_9();
    }
    else
    {
      if (v12 == 3 && !v23)
      {
        OUTLINED_FUNCTION_1_11(3);
        unint64_t v13 = 0xE800000000000000;
        uint64_t v26 = OUTLINED_FUNCTION_4_9();
        goto LABEL_32;
      }
      if (v12 != 4 || v23)
      {
        OUTLINED_FUNCTION_1_11(5);
        BOOL v32 = "lifecycleContainer";
        goto LABEL_31;
      }
      OUTLINED_FUNCTION_1_11(4);
      uint64_t v26 = 0xD000000000000014;
      unint64_t v13 = 0x80000001C65889C0;
    }
LABEL_32:
    if (v26 == v5 && v13 == v7)
    {
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      goto LABEL_46;
    }
    char v34 = sub_1C6577090();
    swift_bridgeObjectRelease();
    if (v34) {
      break;
    }
    v15 += 40;
    uint64_t v35 = OUTLINED_FUNCTION_18_6();
    sub_1C64A21C4(v35, v36, v41, v50, v42);
    if (!--v14)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      while (1)
      {
        __break(1u);
LABEL_50:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
    }
  }
  swift_bridgeObjectRelease_n();
LABEL_46:
  char v8 = v42;
  swift_bridgeObjectRelease();
  a2 = v38;
  uint64_t v9 = v50;
  uint64_t v10 = v41;
LABEL_47:
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v48);
  *(void *)a2 = v12;
  *(void *)(a2 + 8) = v11;
  *(void *)(a2 + 16) = v10;
  *(void *)(a2 + 24) = v9;
  *(unsigned char *)(a2 + 32) = v8;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t DeliveryVehicle.encode(to:)(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C6577220();
  DeliveryVehicle.rawValue.getter();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v3);
  sub_1C6577060();
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v2);
}

uint64_t DeliveryVehicle.deliveryVehicleType.getter()
{
  if (!*((unsigned char *)v0 + 32)) {
    return 0x7070416E69;
  }
  uint64_t v1 = *v0;
  if (*((unsigned char *)v0 + 32) == 1)
  {
    uint64_t result = 0x746E694869726973;
    if (*v0 >= 2u) {
      return 0x6E776F6E6B6E75;
    }
  }
  else
  {
    uint64_t result = 0xD000000000000010;
    uint64_t v3 = v0[1];
    uint64_t v4 = v0[2] | v0[3];
    if (v4 | v1 | v3)
    {
      uint64_t v5 = v4 | v3;
      if (v1 != 1 || v5)
      {
        if (v1 != 2 || v5)
        {
          if (v1 != 3 || v5)
          {
            if (v1 == 4 && v5 == 0) {
              return 0xD000000000000014;
            }
          }
          else
          {
            return OUTLINED_FUNCTION_4_9();
          }
        }
        else
        {
          return OUTLINED_FUNCTION_3_9();
        }
      }
    }
  }
  return result;
}

uint64_t SiriHintsMode.description.getter()
{
  uint64_t v1 = 0x6E776F6E6B6E75;
  if (*v0 == 1) {
    uint64_t v1 = 0x746E694869726973;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x746E694869726973;
  }
}

void *static SiriHintsMode.allCases.getter()
{
  return &unk_1F2156F08;
}

uint64_t DeliveryVehicle.description.getter()
{
  return DeliveryVehicle.rawValue.getter();
}

uint64_t static DeliveryVehicle.siriHints.getter()
{
  uint64_t v0 = (char *)static DeliveryVehicle.allCases.getter();
  uint64_t v1 = *((void *)v0 + 2);
  if (v1)
  {
    uint64_t v2 = v0 + 64;
    uint64_t v3 = MEMORY[0x1E4FBC860];
    do
    {
      if (*v2 == 1)
      {
        long long v7 = *((_OWORD *)v2 - 1);
        long long v8 = *((_OWORD *)v2 - 2);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_1C64A23C0();
        }
        unint64_t v4 = *(void *)(v3 + 16);
        if (v4 >= *(void *)(v3 + 24) >> 1) {
          sub_1C64A23C0();
        }
        *(void *)(v3 + 16) = v4 + 1;
        uint64_t v5 = v3 + 40 * v4;
        *(_OWORD *)(v5 + 32) = v8;
        *(_OWORD *)(v5 + 48) = v7;
        *(unsigned char *)(v5 + 64) = 1;
      }
      v2 += 40;
      --v1;
    }
    while (v1);
  }
  else
  {
    uint64_t v3 = MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRelease();
  return v3;
}

BOOL DeliveryVehicle.isSiriHintsDeliveryVehicle.getter()
{
  return *(unsigned char *)(v0 + 32) == 1;
}

Swift::String __swiftcall DeliveryVehicle.getComponentName(suggestionId:)(Swift::String suggestionId)
{
  uint64_t v2 = *v1;
  uint64_t v3 = v1[3];
  if (*((unsigned char *)v1 + 32))
  {
    if (*((unsigned char *)v1 + 32) != 1)
    {
      uint64_t v4 = v1[2] | v1[1];
      if (v4 | v2 | v3)
      {
        uint64_t v5 = v4 | v3;
        if (v2 != 1 || v5)
        {
          if (v2 != 2 || v5)
          {
            if (v2 == 3 && !v5) {
              OUTLINED_FUNCTION_4_9();
            }
          }
          else
          {
            OUTLINED_FUNCTION_3_9();
          }
        }
      }
    }
  }
  sub_1C6576620();
  swift_bridgeObjectRelease();
  sub_1C6576620();
  sub_1C6576620();
  uint64_t v6 = 0;
  long long v7 = (void *)0xE000000000000000;
  result._object = v7;
  result._unint64_t countAndFlagsBits = v6;
  return result;
}

uint64_t sub_1C64E9CAC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return DeliveryVehicle.init(from:)(a1, a2);
}

uint64_t sub_1C64E9CC4(void *a1)
{
  return DeliveryVehicle.encode(to:)(a1);
}

uint64_t sub_1C64E9CDC()
{
  sub_1C649FB10(v0, (uint64_t)v2);
  return sub_1C655AD54();
}

uint64_t sub_1C64E9D14()
{
  sub_1C649FB10(v0, (uint64_t)v2);
  return sub_1C649AC84();
}

uint64_t sub_1C64E9D54()
{
  sub_1C649FB10(v0, (uint64_t)v2);
  return sub_1C64EBE20();
}

void *sub_1C64E9D98@<X0>(void *a1@<X8>)
{
  Swift::String result = static DeliveryVehicle.allCases.getter();
  *a1 = result;
  return result;
}

double sub_1C64E9DC0@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return DeliveryVehicle.init(rawValue:)(*a1, a1[1], a2);
}

uint64_t sub_1C64E9DCC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = DeliveryVehicle.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1C64E9DF4(uint64_t a1, uint64_t a2)
{
  sub_1C649FB10(a1, (uint64_t)v4);
  sub_1C649FB10(a2, (uint64_t)v5);
  return sub_1C649866C((uint64_t)v4, (uint64_t)v5) & 1;
}

BOOL static SiriHintsMode.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t SiriHintsMode.hash(into:)()
{
  return sub_1C6577160();
}

uint64_t sub_1C64E9E80(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x79616C70736964 && a2 == 0xE700000000000000;
  if (v2 || (sub_1C6577090() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x6E656B6F7073 && a2 == 0xE600000000000000;
    if (v6 || (sub_1C6577090() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x6E776F6E6B6E75 && a2 == 0xE700000000000000)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      char v8 = sub_1C6577090();
      swift_bridgeObjectRelease();
      if (v8) {
        return 2;
      }
      else {
        return 3;
      }
    }
  }
}

uint64_t sub_1C64E9FC8(char a1)
{
  if (!a1) {
    return 0x79616C70736964;
  }
  if (a1 == 1) {
    return 0x6E656B6F7073;
  }
  return 0x6E776F6E6B6E75;
}

uint64_t sub_1C64EA01C()
{
  return sub_1C64E9FC8(*v0);
}

uint64_t sub_1C64EA024@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C64E9E80(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C64EA04C(uint64_t a1)
{
  unint64_t v2 = sub_1C64EA9A0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C64EA088(uint64_t a1)
{
  unint64_t v2 = sub_1C64EA9A0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C64EA0C4(uint64_t a1)
{
  unint64_t v2 = sub_1C64EAA84();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C64EA100(uint64_t a1)
{
  unint64_t v2 = sub_1C64EAA84();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C64EA13C(uint64_t a1)
{
  unint64_t v2 = sub_1C64EAA38();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C64EA178(uint64_t a1)
{
  unint64_t v2 = sub_1C64EAA38();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C64EA1B4(uint64_t a1)
{
  unint64_t v2 = sub_1C64EA9EC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C64EA1F0(uint64_t a1)
{
  unint64_t v2 = sub_1C64EA9EC();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t SiriHintsMode.encode(to:)(void *a1)
{
  unint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F14A8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v4);
  OUTLINED_FUNCTION_3();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F14B0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_21();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F14B8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_15_0();
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F14C0);
  OUTLINED_FUNCTION_0();
  uint64_t v9 = v8;
  MEMORY[0x1F4188790](v10);
  OUTLINED_FUNCTION_15_0();
  uint64_t v13 = v12 - v11;
  int v14 = *v2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C64EA9A0();
  sub_1C6577240();
  if (v14)
  {
    if (v14 == 1) {
      sub_1C64EAA38();
    }
    else {
      sub_1C64EA9EC();
    }
    OUTLINED_FUNCTION_28();
  }
  else
  {
    sub_1C64EAA84();
    OUTLINED_FUNCTION_28();
  }
  OUTLINED_FUNCTION_1();
  v16(v15);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(v13, v7);
}

uint64_t SiriHintsMode.hashValue.getter()
{
  return sub_1C6577190();
}

uint64_t SiriHintsMode.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F14E8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v3);
  OUTLINED_FUNCTION_3();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F14F0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v4);
  OUTLINED_FUNCTION_15_0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F14F8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_15_0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F1500);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_21();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C64EA9A0();
  sub_1C6577210();
  if (v33) {
    goto LABEL_8;
  }
  char v34 = a1;
  uint64_t v7 = sub_1C6576F40();
  uint64_t v8 = *(void *)(v7 + 16);
  if (!v8
    || (int v9 = *(unsigned __int8 *)(v7 + 32),
        sub_1C649F97C(1, v8, v7, v7 + 32, 0, (2 * v8) | 1),
        uint64_t v11 = v10,
        unint64_t v13 = v12,
        swift_bridgeObjectRelease(),
        v11 != v13 >> 1))
  {
    uint64_t v19 = sub_1C6576CE0();
    swift_allocError();
    uint64_t v21 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F0140);
    *uint64_t v21 = &type metadata for SiriHintsMode;
    sub_1C6576E90();
    sub_1C6576CD0();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v19 - 8) + 104))(v21, *MEMORY[0x1E4FBBA70], v19);
    swift_willThrow();
    swift_unknownObjectRelease();
    uint64_t v22 = OUTLINED_FUNCTION_12_2();
    v23(v22);
LABEL_8:
    uint64_t v24 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v24);
  }
  char v14 = v9;
  if (v9)
  {
    if (v9 == 1)
    {
      sub_1C64EAA38();
      OUTLINED_FUNCTION_11_6();
      uint64_t v15 = a2;
      OUTLINED_FUNCTION_1();
      v16();
      swift_unknownObjectRelease();
      uint64_t v17 = OUTLINED_FUNCTION_5_8();
      v18(v17);
    }
    else
    {
      sub_1C64EA9EC();
      OUTLINED_FUNCTION_11_6();
      uint64_t v15 = a2;
      OUTLINED_FUNCTION_1();
      v29();
      swift_unknownObjectRelease();
      uint64_t v30 = OUTLINED_FUNCTION_5_8();
      v31(v30);
      char v14 = v9;
    }
  }
  else
  {
    sub_1C64EAA84();
    OUTLINED_FUNCTION_11_6();
    OUTLINED_FUNCTION_1();
    v26();
    swift_unknownObjectRelease();
    uint64_t v27 = OUTLINED_FUNCTION_12_2();
    v28(v27);
    uint64_t v15 = a2;
  }
  *uint64_t v15 = v14;
  uint64_t v24 = (uint64_t)v34;
  return __swift_destroy_boxed_opaque_existential_1(v24);
}

uint64_t sub_1C64EA954@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return SiriHintsMode.init(from:)(a1, a2);
}

uint64_t sub_1C64EA96C(void *a1)
{
  return SiriHintsMode.encode(to:)(a1);
}

void sub_1C64EA990(void *a1@<X8>)
{
  *a1 = &unk_1F2156F08;
}

unint64_t sub_1C64EA9A0()
{
  unint64_t result = qword_1EA3F14C8;
  if (!qword_1EA3F14C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F14C8);
  }
  return result;
}

unint64_t sub_1C64EA9EC()
{
  unint64_t result = qword_1EA3F14D0;
  if (!qword_1EA3F14D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F14D0);
  }
  return result;
}

unint64_t sub_1C64EAA38()
{
  unint64_t result = qword_1EA3F14D8;
  if (!qword_1EA3F14D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F14D8);
  }
  return result;
}

unint64_t sub_1C64EAA84()
{
  unint64_t result = qword_1EA3F14E0;
  if (!qword_1EA3F14E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F14E0);
  }
  return result;
}

unint64_t sub_1C64EAAD4()
{
  unint64_t result = qword_1EBBFC418;
  if (!qword_1EBBFC418)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBBFC418);
  }
  return result;
}

uint64_t sub_1C64EAB20()
{
  return sub_1C649E384(&qword_1EA3F1508, &qword_1EA3F1510);
}

unint64_t sub_1C64EAB4C()
{
  unint64_t result = qword_1EA3F1518;
  if (!qword_1EA3F1518)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F1518);
  }
  return result;
}

uint64_t sub_1C64EAB98()
{
  return sub_1C649E384(&qword_1EA3F1520, &qword_1EA3F1528);
}

uint64_t destroy for DeliveryVehicle(uint64_t a1)
{
  return sub_1C64A21C4(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(unsigned char *)(a1 + 32));
}

uint64_t initializeWithCopy for DeliveryVehicle(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  char v7 = *(unsigned char *)(a2 + 32);
  sub_1C64A0570(*(void *)a2, v4, v5, v6, v7);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = v7;
  return a1;
}

uint64_t assignWithCopy for DeliveryVehicle(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  char v7 = *(unsigned char *)(a2 + 32);
  sub_1C64A0570(*(void *)a2, v4, v5, v6, v7);
  uint64_t v8 = *(void *)a1;
  uint64_t v9 = *(void *)(a1 + 8);
  uint64_t v10 = *(void *)(a1 + 16);
  uint64_t v11 = *(void *)(a1 + 24);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  char v12 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v7;
  sub_1C64A21C4(v8, v9, v10, v11, v12);
  return a1;
}

uint64_t assignWithTake for DeliveryVehicle(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 32);
  uint64_t v4 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  long long v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
  char v9 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v3;
  sub_1C64A21C4(v4, v6, v5, v7, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for DeliveryVehicle(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFE && *(unsigned char *)(a1 + 33))
    {
      int v2 = *(_DWORD *)a1 + 253;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 32);
      if (v3 <= 2) {
        int v2 = -1;
      }
      else {
        int v2 = v3 ^ 0xFF;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DeliveryVehicle(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)unint64_t result = a2 - 254;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 33) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 32) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1C64EAD80(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 32) <= 1u) {
    return *(unsigned __int8 *)(a1 + 32);
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_1C64EAD98(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(void *)unint64_t result = a2 - 2;
    *(void *)(result + 8) = 0;
    LOBYTE(a2) = 2;
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
  }
  *(unsigned char *)(result + 32) = a2;
  return result;
}

ValueMetadata *type metadata accessor for DeliveryVehicle()
{
  return &type metadata for DeliveryVehicle;
}

ValueMetadata *type metadata accessor for SiriHintsMode()
{
  return &type metadata for SiriHintsMode;
}

unsigned char *_s18SiriSuggestionsKit13SiriHintsModeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C64EAEA4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SiriHintsMode.CodingKeys()
{
  return &type metadata for SiriHintsMode.CodingKeys;
}

ValueMetadata *type metadata accessor for SiriHintsMode.DisplayCodingKeys()
{
  return &type metadata for SiriHintsMode.DisplayCodingKeys;
}

ValueMetadata *type metadata accessor for SiriHintsMode.SpokenCodingKeys()
{
  return &type metadata for SiriHintsMode.SpokenCodingKeys;
}

ValueMetadata *type metadata accessor for SiriHintsMode.UnknownCodingKeys()
{
  return &type metadata for SiriHintsMode.UnknownCodingKeys;
}

unint64_t sub_1C64EAF10()
{
  unint64_t result = qword_1EA3F1530;
  if (!qword_1EA3F1530)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F1530);
  }
  return result;
}

unint64_t sub_1C64EAF60()
{
  unint64_t result = qword_1EA3F1538;
  if (!qword_1EA3F1538)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F1538);
  }
  return result;
}

unint64_t sub_1C64EAFB0()
{
  unint64_t result = qword_1EA3F1540;
  if (!qword_1EA3F1540)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F1540);
  }
  return result;
}

unint64_t sub_1C64EB000()
{
  unint64_t result = qword_1EA3F1548;
  if (!qword_1EA3F1548)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F1548);
  }
  return result;
}

unint64_t sub_1C64EB050()
{
  unint64_t result = qword_1EA3F1550;
  if (!qword_1EA3F1550)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F1550);
  }
  return result;
}

unint64_t sub_1C64EB0A0()
{
  unint64_t result = qword_1EA3F1558;
  if (!qword_1EA3F1558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F1558);
  }
  return result;
}

unint64_t sub_1C64EB0F0()
{
  unint64_t result = qword_1EA3F1560;
  if (!qword_1EA3F1560)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F1560);
  }
  return result;
}

unint64_t sub_1C64EB140()
{
  unint64_t result = qword_1EA3F1568;
  if (!qword_1EA3F1568)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F1568);
  }
  return result;
}

unint64_t sub_1C64EB190()
{
  unint64_t result = qword_1EA3F1570;
  if (!qword_1EA3F1570)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F1570);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_1_11(uint64_t a1)
{
  return sub_1C64A0570(a1, 0, 0, 0, 2);
}

uint64_t OUTLINED_FUNCTION_3_9()
{
  return 0x696669746F4E736FLL;
}

uint64_t OUTLINED_FUNCTION_4_9()
{
  return 0x706C654869726973;
}

uint64_t OUTLINED_FUNCTION_5_8()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_7_7()
{
  return 0x746E694869726973;
}

uint64_t OUTLINED_FUNCTION_10_3()
{
  return 0x6E776F6E6B6E75;
}

uint64_t OUTLINED_FUNCTION_11_6()
{
  return sub_1C6576E80();
}

uint64_t OUTLINED_FUNCTION_12_2()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_17_6()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_18_6()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_19_6()
{
  return v0;
}

void sub_1C64EB318(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = 0;
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v6 = a1 + 40;
  uint64_t v7 = MEMORY[0x1E4FBC860];
LABEL_2:
  long long v8 = (_OWORD *)(v6 + 24 * v4);
  while (1)
  {
    if (v5 == v4)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return;
    }
    if (v4 >= *(void *)(a1 + 16)) {
      break;
    }
    char v9 = (_OWORD *)((char *)v8 + 24);
    ++v4;
    unsigned __int8 v10 = *((unsigned char *)v8 - 8);
    long long v15 = *v8;
    char v11 = sub_1C64EE810(v10, a2);
    long long v8 = v9;
    if (v11)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        sub_1C64A2738();
      }
      long long v12 = v15;
      unint64_t v13 = *(void *)(v7 + 16);
      if (v13 >= *(void *)(v7 + 24) >> 1)
      {
        sub_1C64A2738();
        long long v12 = v15;
      }
      *(void *)(v7 + 16) = v13 + 1;
      uint64_t v14 = v7 + 24 * v13;
      *(unsigned char *)(v14 + 32) = v10;
      *(_OWORD *)(v14 + 40) = v12;
      goto LABEL_2;
    }
  }
  __break(1u);
}

uint64_t sub_1C64EB46C(void (*a1)(uint64_t *__return_ptr, uint64_t *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = MEMORY[0x1E4FBC860];
  if (v5)
  {
    uint64_t v15 = MEMORY[0x1E4FBC860];
    OUTLINED_FUNCTION_38_4();
    sub_1C64A2260();
    uint64_t v6 = v15;
    for (unint64_t i = (uint64_t *)(a3 + 32); ; ++i)
    {
      uint64_t v13 = *i;
      swift_bridgeObjectRetain();
      a1(&v14, &v13);
      if (v4) {
        break;
      }
      uint64_t v4 = 0;
      swift_bridgeObjectRelease();
      uint64_t v10 = v14;
      uint64_t v15 = v6;
      unint64_t v11 = *(void *)(v6 + 16);
      if (v11 >= *(void *)(v6 + 24) >> 1)
      {
        sub_1C64A2260();
        uint64_t v6 = v15;
      }
      *(void *)(v6 + 16) = v11 + 1;
      *(void *)(v6 + 8 * v11 + 32) = v10;
      if (!--v5) {
        return v6;
      }
    }
    swift_release();
    swift_bridgeObjectRelease();
  }
  return v6;
}

uint64_t sub_1C64EB590(void (*a1)(uint64_t *__return_ptr, uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = MEMORY[0x1E4FBC860];
  if (v5)
  {
    uint64_t v20 = MEMORY[0x1E4FBC860];
    sub_1C64A27D8();
    uint64_t v6 = v20;
    for (uint64_t i = a3 + 32; ; i += 40)
    {
      a1(&v17, i);
      if (v4) {
        break;
      }
      uint64_t v4 = 0;
      uint64_t v10 = v17;
      uint64_t v9 = v18;
      char v11 = v19;
      uint64_t v20 = v6;
      unint64_t v12 = *(void *)(v6 + 16);
      if (v12 >= *(void *)(v6 + 24) >> 1)
      {
        uint64_t v14 = v18;
        sub_1C64A27D8();
        uint64_t v9 = v14;
        uint64_t v6 = v20;
      }
      *(void *)(v6 + 16) = v12 + 1;
      uint64_t v13 = v6 + 24 * v12;
      *(void *)(v13 + 32) = v10;
      *(void *)(v13 + 40) = v9;
      *(unsigned char *)(v13 + 48) = v11;
      if (!--v5) {
        return v6;
      }
    }
    swift_release();
  }
  return v6;
}

uint64_t sub_1C64EB6AC(uint64_t a1, uint64_t (*a2)(void *))
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = MEMORY[0x1E4FBC860];
  if (v2)
  {
    uint64_t v14 = MEMORY[0x1E4FBC860];
    sub_1C64A2300();
    uint64_t v3 = v14;
    uint64_t v6 = (unsigned char *)(a1 + 48);
    do
    {
      uint64_t v7 = *((void *)v6 - 1);
      char v8 = *v6;
      v12[0] = *((void *)v6 - 2);
      v12[1] = v7;
      char v13 = v8;
      swift_bridgeObjectRetain();
      uint64_t v9 = a2(v12);
      swift_bridgeObjectRelease();
      uint64_t v14 = v3;
      unint64_t v10 = *(void *)(v3 + 16);
      if (v10 >= *(void *)(v3 + 24) >> 1)
      {
        sub_1C64A2300();
        uint64_t v3 = v14;
      }
      v6 += 24;
      *(void *)(v3 + 16) = v10 + 1;
      *(void *)(v3 + 8 * v10 + 32) = v9;
      --v2;
    }
    while (v2);
  }
  return v3;
}

uint64_t sub_1C64EB7BC(void (*a1)(long long *__return_ptr, uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = MEMORY[0x1E4FBC860];
  if (v5)
  {
    uint64_t v13 = MEMORY[0x1E4FBC860];
    OUTLINED_FUNCTION_38_4();
    sub_1C64A2828();
    uint64_t v6 = v13;
    for (uint64_t i = a3 + 32; ; i += 40)
    {
      a1(v12, i);
      if (v4) {
        break;
      }
      uint64_t v4 = 0;
      uint64_t v13 = v6;
      unint64_t v10 = *(void *)(v6 + 16);
      if (v10 >= *(void *)(v6 + 24) >> 1)
      {
        sub_1C64A2828();
        uint64_t v6 = v13;
      }
      *(void *)(v6 + 16) = v10 + 1;
      sub_1C64A5488(v12, v6 + 40 * v10 + 32);
      if (!--v5) {
        return v6;
      }
    }
    swift_release();
  }
  return v6;
}

uint64_t sub_1C64EB8C8(void (*a1)(void *__return_ptr, uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = MEMORY[0x1E4FBC860];
  if (v5)
  {
    uint64_t v16 = MEMORY[0x1E4FBC860];
    OUTLINED_FUNCTION_38_4();
    sub_1C64A2210();
    uint64_t v6 = v16;
    for (uint64_t i = a3 + 32; ; i += 32)
    {
      a1(v15, i);
      if (v4) {
        break;
      }
      uint64_t v4 = 0;
      uint64_t v10 = v15[0];
      uint64_t v9 = v15[1];
      uint64_t v16 = v6;
      unint64_t v11 = *(void *)(v6 + 16);
      if (v11 >= *(void *)(v6 + 24) >> 1)
      {
        sub_1C64A2210();
        uint64_t v6 = v16;
      }
      *(void *)(v6 + 16) = v11 + 1;
      uint64_t v12 = v6 + 16 * v11;
      *(void *)(v12 + 32) = v10;
      *(void *)(v12 + 40) = v9;
      if (!--v5) {
        return v6;
      }
    }
    swift_release();
  }
  return v6;
}

uint64_t sub_1C64EB9C8()
{
  return sub_1C6577190();
}

uint64_t sub_1C64EBA70()
{
  return sub_1C6577190();
}

uint64_t sub_1C64EBB08()
{
  return sub_1C6577190();
}

uint64_t sub_1C64EBB9C(uint64_t a1, uint64_t a2)
{
  return sub_1C64EBF6C(a1, a2, (void (*)(unsigned char *, uint64_t))sub_1C649A9D0);
}

uint64_t sub_1C64EBBB4()
{
  return sub_1C6577190();
}

uint64_t sub_1C64EBC10()
{
  return sub_1C6577190();
}

uint64_t sub_1C64EBC7C()
{
  return sub_1C6577190();
}

uint64_t sub_1C64EBCE0()
{
  return sub_1C6577190();
}

uint64_t sub_1C64EBD30(uint64_t a1, uint64_t a2)
{
  return sub_1C64EBF6C(a1, a2, (void (*)(unsigned char *, uint64_t))sub_1C649ABC4);
}

uint64_t sub_1C64EBD48()
{
  return sub_1C6577190();
}

uint64_t sub_1C64EBDB4()
{
  return sub_1C6577190();
}

uint64_t sub_1C64EBE20()
{
  sub_1C6577150();
  sub_1C649FB10(v0, (uint64_t)&v2);
  DeliveryVehicle.rawValue.getter();
  sub_1C65765E0();
  swift_bridgeObjectRelease();
  return sub_1C6577190();
}

uint64_t sub_1C64EBE88(uint64_t a1, uint64_t a2)
{
  return sub_1C64EBF6C(a1, a2, (void (*)(unsigned char *, uint64_t))sub_1C649AD9C);
}

uint64_t sub_1C64EBEA0()
{
  return sub_1C6577190();
}

uint64_t sub_1C64EBF24(uint64_t a1, uint64_t a2)
{
  return sub_1C64EBF6C(a1, a2, (void (*)(unsigned char *, uint64_t))sub_1C649AF84);
}

uint64_t sub_1C64EBF3C(uint64_t a1, uint64_t a2)
{
  return sub_1C64EBF6C(a1, a2, (void (*)(unsigned char *, uint64_t))sub_1C649B0BC);
}

uint64_t sub_1C64EBF54(uint64_t a1, uint64_t a2)
{
  return sub_1C64EBF6C(a1, a2, (void (*)(unsigned char *, uint64_t))sub_1C649B1A8);
}

uint64_t sub_1C64EBF6C(uint64_t a1, uint64_t a2, void (*a3)(unsigned char *, uint64_t))
{
  sub_1C6577150();
  a3(v6, a2);
  return sub_1C6577190();
}

double sub_1C64EBFB8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _OWORD *a4@<X8>)
{
  if (*(void *)(a3 + 16) && (unint64_t v6 = sub_1C657476C(a1, a2), (v7 & 1) != 0))
  {
    uint64_t v8 = *(void *)(a3 + 56) + 32 * v6;
    sub_1C64BAACC(v8, (uint64_t)a4);
  }
  else
  {
    double result = 0.0;
    *a4 = 0u;
    a4[1] = 0u;
  }
  return result;
}

uint64_t sub_1C64EC01C(char a1, uint64_t a2)
{
  if (*(void *)(a2 + 16) && (sub_1C6574828(a1), (v2 & 1) != 0)) {
    return swift_bridgeObjectRetain();
  }
  else {
    return 0;
  }
}

uint64_t sub_1C64EC060(__int16 a1, uint64_t a2)
{
  if (*(void *)(a2 + 16) && (unint64_t v3 = sub_1C6574894(a1), (v4 & 1) != 0)) {
    return *(void *)(*(void *)(a2 + 56) + 8 * v3);
  }
  else {
    return 0;
  }
}

uint64_t sub_1C64EC0A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16) && (sub_1C657476C(a1, a2), (v3 & 1) != 0)) {
    return swift_bridgeObjectRetain();
  }
  else {
    return 0;
  }
}

double sub_1C64EC0EC@<D0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (*(void *)(a2 + 16) && (unint64_t v5 = sub_1C65749A0(a1), (v6 & 1) != 0))
  {
    sub_1C649FA30(*(void *)(a2 + 56) + 40 * v5, a3);
  }
  else
  {
    *(void *)(a3 + 32) = 0;
    double result = 0.0;
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
  }
  return result;
}

double sub_1C64EC144@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _OWORD *a4@<X8>)
{
  if (*(void *)(a3 + 16) && (unint64_t v6 = sub_1C657476C(a1, a2), (v7 & 1) != 0))
  {
    uint64_t v8 = *(void *)(a3 + 56) + 48 * v6;
    sub_1C64A7B04(v8, (uint64_t)a4);
  }
  else
  {
    double result = 0.0;
    a4[1] = 0u;
    a4[2] = 0u;
    *a4 = 0u;
  }
  return result;
}

double sub_1C64EC1B0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  if (*(void *)(a2 + 16) && (unint64_t v5 = sub_1C65747E4(a1), (v6 & 1) != 0))
  {
    uint64_t v7 = *(void *)(a2 + 56) + 32 * v5;
    sub_1C64BAACC(v7, (uint64_t)a3);
  }
  else
  {
    double result = 0.0;
    *a3 = 0u;
    a3[1] = 0u;
  }
  return result;
}

uint64_t sub_1C64EC214(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = a3[2];
  if (!v3) {
    return 0;
  }
  if (a3[4] == a1 && a3[5] == a2) {
    return 1;
  }
  uint64_t result = sub_1C6577090();
  if (result) {
    return 1;
  }
  if (v3 == 1) {
    return 0;
  }
  uint64_t v9 = a3 + 7;
  for (uint64_t i = 1; ; ++i)
  {
    uint64_t v11 = i + 1;
    if (__OFADD__(i, 1)) {
      break;
    }
    BOOL v12 = *(v9 - 1) == a1 && *v9 == a2;
    if (v12 || (sub_1C6577090() & 1) != 0) {
      return 1;
    }
    uint64_t result = 0;
    v9 += 2;
    if (v11 == v3) {
      return result;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1C64EC2DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 0;
  }
  swift_bridgeObjectRetain();
  unint64_t v5 = (char *)(a2 + 64);
  uint64_t v51 = (uint64_t)"siriAutoComplete";
  uint64_t v52 = a2;
  uint64_t v50 = (uint64_t)"lifecycleContainer";
  uint64_t v53 = "assistantSuggestions";
  uint64_t v54 = "siriNotification";
  uint64_t v57 = a1;
  while (1)
  {
    uint64_t v6 = *((void *)v5 - 4);
    uint64_t v7 = *((void *)v5 - 3);
    uint64_t v8 = *((void *)v5 - 2);
    uint64_t v9 = *((void *)v5 - 1);
    unint64_t v10 = *v5;
    uint64_t v61 = v9;
    char v60 = *v5;
    if (v10 != 2)
    {
      if (v10 == 1)
      {
        uint64_t v11 = OUTLINED_FUNCTION_51_2();
        if ((_BYTE)v6)
        {
          sub_1C64A0570(v11, v12, v13, v14, 1);
          if (v6 == 1)
          {
            OUTLINED_FUNCTION_50_3();
            unint64_t v15 = 0xEF6E656B6F705373;
          }
          else
          {
            unint64_t v15 = 0xE700000000000000;
            unint64_t v10 = 0x6E776F6E6B6E75;
          }
        }
        else
        {
          sub_1C64A0570(v11, v12, v13, v14, 1);
          OUTLINED_FUNCTION_50_3();
          unint64_t v15 = 0xE900000000000073;
        }
      }
      else
      {
        OUTLINED_FUNCTION_8_3();
        uint64_t v19 = OUTLINED_FUNCTION_51_2();
        sub_1C64A0570(v19, v20, v21, v22, 0);
        swift_bridgeObjectRetain();
        sub_1C6576620();
        swift_bridgeObjectRelease();
        uint64_t v55 = v6;
        uint64_t v58 = v8;
        if (v9)
        {
          OUTLINED_FUNCTION_13_5();
          sub_1C6576620();
        }
        swift_bridgeObjectRetain();
        sub_1C6576620();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v10 = v62;
        unint64_t v15 = v63;
        a1 = v57;
      }
      goto LABEL_28;
    }
    if (!(v8 | v7 | v6 | v9))
    {
      OUTLINED_FUNCTION_1_11(0);
      uint64_t v23 = (uint64_t)v54;
LABEL_27:
      unint64_t v15 = v23 | 0x8000000000000000;
      unint64_t v10 = 0xD000000000000010;
      goto LABEL_28;
    }
    uint64_t v16 = v8 | v7 | v9;
    if (v6 == 1 && v16 == 0)
    {
      OUTLINED_FUNCTION_1_11(1);
      uint64_t v23 = (uint64_t)v53;
      goto LABEL_27;
    }
    if (v6 == 2 && v16 == 0)
    {
      OUTLINED_FUNCTION_1_11(2);
      unint64_t v10 = 0x696669746F4E736FLL;
      unint64_t v15 = 0xEE006E6F69746163;
    }
    else
    {
      if (v6 == 3 && !v16)
      {
        unint64_t v10 = 0x706C654869726973;
        OUTLINED_FUNCTION_1_11(3);
        unint64_t v15 = 0xE800000000000000;
        goto LABEL_28;
      }
      if (v6 != 4 || v16)
      {
        OUTLINED_FUNCTION_1_11(5);
        uint64_t v23 = v50;
        goto LABEL_27;
      }
      OUTLINED_FUNCTION_1_11(4);
      unint64_t v10 = 0xD000000000000014;
      unint64_t v15 = v51 | 0x8000000000000000;
    }
LABEL_28:
    sub_1C649FB10(a1, (uint64_t)v69);
    if (v70)
    {
      sub_1C649FB10(a1, (uint64_t)&v64);
      if (!v68)
      {
        unint64_t v25 = 0xE500000000000000;
        unint64_t v24 = 0x7070416E69;
        goto LABEL_64;
      }
      if (v68 == 1)
      {
        if ((_BYTE)v64)
        {
          if (v64 == 1) {
            unint64_t v24 = 0x746E694869726973;
          }
          else {
            unint64_t v24 = 0x6E776F6E6B6E75;
          }
          if (v64 == 1) {
            unint64_t v25 = 0xEF6E656B6F705373;
          }
          else {
            unint64_t v25 = 0xE700000000000000;
          }
        }
        else
        {
          unint64_t v24 = 0x746E694869726973;
          unint64_t v25 = 0xE900000000000073;
        }
        goto LABEL_64;
      }
      if (!(v66 | v67 | v64 | v65))
      {
        uint64_t v28 = v54;
        goto LABEL_47;
      }
      uint64_t v27 = v66 | v67 | v65;
      if (v64 == 1 && !v27)
      {
        uint64_t v28 = v53;
LABEL_47:
        unint64_t v25 = (unint64_t)v28 | 0x8000000000000000;
        unint64_t v24 = 0xD000000000000010;
        goto LABEL_64;
      }
      if (v64 != 2 || (unint64_t v24 = 0x696669746F4E736FLL, v25 = 0xEE006E6F69746163, v27))
      {
        if (v64 != 3 || v27)
        {
          BOOL v29 = v27 == 0;
          BOOL v30 = v64 == 4;
          if (v30 && v29) {
            unint64_t v24 = 0xD000000000000014;
          }
          else {
            unint64_t v24 = 0xD000000000000010;
          }
          if (v30 && v29) {
            unint64_t v25 = v51 | 0x8000000000000000;
          }
          else {
            unint64_t v25 = v50 | 0x8000000000000000;
          }
        }
        else
        {
          unint64_t v24 = 0x706C654869726973;
          unint64_t v25 = 0xE800000000000000;
        }
      }
    }
    else
    {
      uint64_t v58 = v8;
      uint64_t v56 = v7;
      uint64_t v26 = v69[3];
      OUTLINED_FUNCTION_8_3();
      swift_bridgeObjectRetain();
      sub_1C6576620();
      swift_bridgeObjectRelease();
      if (v26)
      {
        OUTLINED_FUNCTION_13_5();
        sub_1C6576620();
      }
      swift_bridgeObjectRetain();
      sub_1C6576620();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v24 = v62;
      unint64_t v25 = v63;
      a1 = v57;
    }
LABEL_64:
    if (v10 == v24 && v15 == v25) {
      break;
    }
    char v32 = sub_1C6577090();
    swift_bridgeObjectRelease();
    uint64_t v33 = swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_40_4(v33, v34, v35, v36, v37, v38, v39, v40, v50, v51, v52, (uint64_t)v53, (uint64_t)v54, v55, v56, v57, v58, v59, v60,
      v61);
    if (v32) {
      goto LABEL_73;
    }
    v5 += 40;
    if (!--v2)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  uint64_t v41 = swift_bridgeObjectRelease_n();
  OUTLINED_FUNCTION_40_4(v41, v42, v43, v44, v45, v46, v47, v48, v50, v51, v52, (uint64_t)v53, (uint64_t)v54, v55, v56, v57, v58, v59, v60,
    v61);
LABEL_73:
  swift_bridgeObjectRelease();
  return 1;
}

uint64_t sub_1C64EC820(void *a1)
{
  return NetworkPrerequisite.isValid(environment:)(a1) & 1;
}

uint64_t Prerequisite.isValid(environment:invocationType:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a4 + 16))(a1, a3, a4);
}

#error "1C64EC87C: call analysis failed (funcsize=11)"

uint64_t Prerequisite.isValid(environment:invocationType:deliveryVehicle:)(uint64_t a1, __int16 *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  __int16 v6 = *a2;
  return (*(uint64_t (**)(uint64_t, __int16 *, uint64_t, uint64_t))(a5 + 24))(a1, &v6, a4, a5) & 1;
}

uint64_t static NoOpPrerequisite.Instance.getter()
{
  return swift_initStaticObject();
}

uint64_t NoOpPrerequisite.description.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t NoOpPrerequisite.isValid(environment:)()
{
  return 1;
}

uint64_t NoOpPrerequisite.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1C64EC944()
{
  return OUTLINED_FUNCTION_55() & 1;
}

uint64_t sub_1C64EC970(uint64_t a1, unsigned __int16 *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1C64F1C34(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, unsigned char *))OUTLINED_FUNCTION_55);
}

uint64_t sub_1C64EC988()
{
  return NoOpPrerequisite.description.getter();
}

uint64_t UnionPrerequisite.description.getter()
{
  uint64_t v13 = 0x203A6E6F696E55;
  unint64_t v14 = 0xE700000000000000;
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = MEMORY[0x1E4FBC860];
  if (v2)
  {
    uint64_t v12 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_1C64A2210();
    uint64_t v4 = v1 + 32;
    uint64_t v3 = v12;
    do
    {
      sub_1C649FA30(v4, (uint64_t)v11);
      __swift_project_boxed_opaque_existential_1(v11, v11[3]);
      uint64_t v5 = sub_1C6577040();
      uint64_t v7 = v6;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C64A2210();
        uint64_t v3 = v12;
      }
      unint64_t v8 = *(void *)(v3 + 16);
      if (v8 >= *(void *)(v3 + 24) >> 1)
      {
        sub_1C64A2210();
        uint64_t v3 = v12;
      }
      *(void *)(v3 + 16) = v8 + 1;
      uint64_t v9 = v3 + 16 * v8;
      *(void *)(v9 + 32) = v5;
      *(void *)(v9 + 40) = v7;
      v4 += 40;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
  MEMORY[0x1C879EE80](v3, MEMORY[0x1E4FBB1A0]);
  sub_1C6576620();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t UnionPrerequisite.__allocating_init(prerequisites:)(uint64_t a1)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  return result;
}

uint64_t UnionPrerequisite.init(prerequisites:)(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return OUTLINED_FUNCTION_27_4();
}

uint64_t UnionPrerequisite.isValid(environment:invocationType:)(uint64_t a1, __int16 *a2)
{
  uint64_t v3 = *(void *)(v2 + 16);
  uint64_t v4 = *(void *)(v3 + 16);
  if (v4)
  {
    __int16 v6 = *a2;
    uint64_t v7 = (void *)(v3 + 32);
    swift_bridgeObjectRetain();
    uint64_t v8 = v4 - 1;
    do
    {
      uint64_t v9 = v7[3];
      uint64_t v10 = v7[4];
      __swift_project_boxed_opaque_existential_1(v7, v9);
      __int16 v16 = v6;
      char v11 = (*(uint64_t (**)(uint64_t, __int16 *, uint64_t, uint64_t))(v10 + 24))(a1, &v16, v9, v10);
      char v12 = v11;
      BOOL v14 = v8-- != 0;
      if ((v11 & 1) == 0) {
        break;
      }
      v7 += 5;
    }
    while (v14);
    swift_bridgeObjectRelease();
  }
  else
  {
    char v12 = 1;
  }
  return v12 & 1;
}

uint64_t UnionPrerequisite.isValid(environment:)(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = *(void *)(v2 + 16);
  if (v3)
  {
    uint64_t v5 = (void *)(v2 + 32);
    swift_bridgeObjectRetain();
    uint64_t v6 = v3 - 1;
    do
    {
      uint64_t v7 = v5[3];
      uint64_t v8 = v5[4];
      __swift_project_boxed_opaque_existential_1(v5, v7);
      char v9 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(a1, v7, v8);
      char v10 = v9;
      BOOL v12 = v6-- != 0;
      if ((v9 & 1) == 0) {
        break;
      }
      v5 += 5;
    }
    while (v12);
    swift_bridgeObjectRelease();
  }
  else
  {
    char v10 = 1;
  }
  return v10 & 1;
}

void UnionPrerequisite.isValid(environment:invocationType:deliveryVehicle:)()
{
  OUTLINED_FUNCTION_49_0();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v7 = sub_1C65763A0();
  OUTLINED_FUNCTION_0_2();
  uint64_t v9 = v8;
  MEMORY[0x1F4188790](v10);
  OUTLINED_FUNCTION_15_0();
  uint64_t v13 = v12 - v11;
  LOWORD(v4) = *v4;
  sub_1C649FB10(v2, (uint64_t)v31);
  uint64_t v14 = *(void *)(v0 + 16);
  v26[2] = v6;
  __int16 v27 = (__int16)v4;
  uint64_t v28 = v31;
  swift_bridgeObjectRetain();
  uint64_t v15 = sub_1C64EB590((void (*)(uint64_t *__return_ptr, uint64_t))sub_1C64F1F38, (uint64_t)v26, v14);
  swift_bridgeObjectRelease();
  uint64_t v16 = *(void *)(v15 + 16);
  if (v16 && *(unsigned char *)(v15 + 48) == 1 && v16 != 1)
  {
    uint64_t v17 = (unsigned __int8 *)(v15 + 72);
    uint64_t v18 = 1;
    while (1)
    {
      uint64_t v19 = v18 + 1;
      if (__OFADD__(v18, 1)) {
        break;
      }
      int v20 = *v17;
      v17 += 24;
      ++v18;
      if (v20 != 1 || v19 == v16) {
        goto LABEL_13;
      }
    }
    __break(1u);
    goto LABEL_16;
  }
LABEL_13:
  if (qword_1EBBFC428 != -1) {
LABEL_16:
  }
    swift_once();
  uint64_t v22 = __swift_project_value_buffer(v7, (uint64_t)qword_1EBBFC278);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v13, v22, v7);
  unint64_t v29 = 0;
  unint64_t v30 = 0xE000000000000000;
  sub_1C6576C60();
  swift_bridgeObjectRelease();
  unint64_t v29 = 0xD00000000000001BLL;
  unint64_t v30 = 0x80000001C6588A20;
  sub_1C6576620();
  swift_bridgeObjectRelease();
  sub_1C6576620();
  uint64_t v23 = v29;
  unint64_t v24 = v30;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFB3A8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C657F210;
  *(void *)(inited + 32) = 0x7375716572657250;
  *(void *)(inited + 40) = 0xEB00000000657469;
  *(void *)(inited + 48) = 0x746C75736552;
  *(void *)(inited + 56) = 0xE600000000000000;
  sub_1C64ED130(v23, v24, inited, v15, 200, sub_1C64ED0B0);
  swift_setDeallocating();
  sub_1C64F1E64();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v13, v7);
  OUTLINED_FUNCTION_39_0();
}

uint64_t sub_1C64ECFD4@<X0>(void *a1@<X0>, uint64_t a2@<X1>, __int16 a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10 = a1[3];
  uint64_t v11 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v10);
  __int16 v15 = a3;
  sub_1C649FB10(a4, (uint64_t)v14);
  LOBYTE(a3) = (*(uint64_t (**)(uint64_t, __int16 *, unsigned char *, uint64_t, uint64_t))(v11 + 32))(a2, &v15, v14, v10, v11);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t result = sub_1C6577040();
  *(void *)a5 = result;
  *(void *)(a5 + 8) = v13;
  *(unsigned char *)(a5 + 16) = a3 & 1;
  return result;
}

uint64_t sub_1C64ED0B0(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v1 = a1[1];
  char v3 = *((unsigned char *)a1 + 16);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBBFB8E8);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1C657F210;
  *(void *)(v4 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v4 + 32) = v2;
  *(void *)(v4 + 40) = v1;
  *(void *)(v4 + 88) = MEMORY[0x1E4FBB390];
  *(unsigned char *)(v4 + 64) = v3;
  swift_bridgeObjectRetain();
  return v4;
}

void sub_1C64ED130(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(void *))
{
  uint64_t v29 = a1;
  uint64_t v30 = a5;
  uint64_t v11 = sub_1C65763A0();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v6, v11);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  __int16 v15 = sub_1C6576380();
  os_log_type_t v16 = sub_1C6576A50();
  int v17 = v16;
  if (os_log_type_enabled(v15, v16))
  {
    os_log_t v28 = v15;
    uint64_t v18 = swift_slowAlloc();
    int v26 = v17;
    uint64_t v19 = (uint8_t *)v18;
    uint64_t v27 = swift_slowAlloc();
    uint64_t v32 = v27;
    unint64_t v25 = v19;
    *(_DWORD *)uint64_t v19 = 136315138;
    uint64_t v20 = sub_1C64F1D50(v29, a2, a3, a4, v30, a6);
    uint64_t v31 = sub_1C64BCF18(v20, v21, &v32);
    sub_1C6576B40();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    os_log_t v22 = v28;
    uint64_t v23 = v25;
    _os_log_impl(&dword_1C6494000, v28, (os_log_type_t)v26, "%s", v25, 0xCu);
    uint64_t v24 = v27;
    swift_arrayDestroy();
    MEMORY[0x1C87A0050](v24, -1, -1);
    MEMORY[0x1C87A0050](v23, -1, -1);
  }
  else
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

uint64_t UnionPrerequisite.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t UnionPrerequisite.__deallocating_deinit()
{
  return sub_1C64F16B4(24);
}

uint64_t sub_1C64ED458(uint64_t a1)
{
  return UnionPrerequisite.isValid(environment:)(a1) & 1;
}

uint64_t sub_1C64ED480(uint64_t a1, __int16 *a2)
{
  return UnionPrerequisite.isValid(environment:invocationType:)(a1, a2) & 1;
}

uint64_t sub_1C64ED4A8()
{
  UnionPrerequisite.isValid(environment:invocationType:deliveryVehicle:)();
  return v0 & 1;
}

uint64_t sub_1C64ED4D0()
{
  return UnionPrerequisite.description.getter();
}

void LocalePrerequisite.description.getter()
{
  OUTLINED_FUNCTION_49_0();
  uint64_t v35 = sub_1C6576210();
  OUTLINED_FUNCTION_0_2();
  uint64_t v2 = v1;
  MEMORY[0x1F4188790](v3);
  OUTLINED_FUNCTION_47_3();
  uint64_t v34 = v4;
  MEMORY[0x1F4188790](v5);
  uint64_t v33 = (char *)v29 - v6;
  uint64_t v37 = 0;
  unint64_t v38 = 0xE000000000000000;
  sub_1C6576C60();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_21_6();
  uint64_t v37 = v7;
  unint64_t v38 = v8;
  sub_1C6576620();
  swift_bridgeObjectRelease();
  sub_1C6576620();
  uint64_t v9 = *(void *)(v0 + 16);
  uint64_t v10 = MEMORY[0x1E4FBC860];
  if (*(void *)(v9 + 16))
  {
    uint64_t v36 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_39_4();
    int64_t v11 = sub_1C64FA9B8(v9);
    int v13 = v12;
    char v15 = v14 & 1;
    uint64_t v31 = v2;
    uint64_t v32 = v9 + 56;
    v29[1] = v2 + 32;
    v29[2] = v2 + 16;
    v29[0] = v2 + 8;
    uint64_t v30 = v9;
    while ((v11 & 0x8000000000000000) == 0)
    {
      OUTLINED_FUNCTION_19_7();
      if (v16 == v17) {
        break;
      }
      OUTLINED_FUNCTION_8_4();
      if ((v18 & 1) == 0) {
        goto LABEL_17;
      }
      if (*(_DWORD *)(v9 + 36) != v13) {
        goto LABEL_18;
      }
      int64_t v19 = *(void *)(v9 + 48) + *(void *)(v2 + 72) * v11;
      uint64_t v20 = v33;
      uint64_t v21 = v35;
      (*(void (**)(char *, int64_t, uint64_t))(v2 + 16))(v33, v19, v35);
      uint64_t v22 = v34;
      (*(void (**)(uint64_t, char *, uint64_t))(v2 + 32))(v34, v20, v21);
      uint64_t v23 = sub_1C65761F0();
      uint64_t v25 = v24;
      (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v22, v21);
      uint64_t v10 = v36;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C64A2210();
        uint64_t v10 = v36;
      }
      unint64_t v26 = *(void *)(v10 + 16);
      if (v26 >= *(void *)(v10 + 24) >> 1)
      {
        sub_1C64A2210();
        uint64_t v10 = v36;
      }
      *(void *)(v10 + 16) = v26 + 1;
      uint64_t v27 = v10 + 16 * v26;
      *(void *)(v27 + 32) = v23;
      *(void *)(v27 + 40) = v25;
      uint64_t v9 = v30;
      OUTLINED_FUNCTION_18_7(v11, v13, v15 & 1);
      uint64_t v2 = v31;
      if (v28)
      {
        OUTLINED_FUNCTION_25_5();
        goto LABEL_15;
      }
    }
    __break(1u);
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
  }
  else
  {
LABEL_15:
    MEMORY[0x1C879EE80](v10, MEMORY[0x1E4FBB1A0]);
    sub_1C6576620();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_39_0();
  }
}

uint64_t LocalePrerequisite.__allocating_init(locales:includes:)()
{
  uint64_t result = OUTLINED_FUNCTION_34_4();
  *(void *)(result + 16) = v1;
  *(unsigned char *)(result + 24) = v0;
  return result;
}

uint64_t LocalePrerequisite.init(locales:includes:)(uint64_t a1, char a2)
{
  *(void *)(v2 + 16) = a1;
  *(unsigned char *)(v2 + 24) = a2;
  return OUTLINED_FUNCTION_27_4();
}

void LocalePrerequisite.isValid(environment:)()
{
  OUTLINED_FUNCTION_49_0();
  uint64_t v5 = v4;
  sub_1C6576210();
  OUTLINED_FUNCTION_0_2();
  uint64_t v51 = v6;
  uint64_t v52 = v7;
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_47_3();
  uint64_t v48 = v8;
  MEMORY[0x1F4188790](v9);
  uint64_t v50 = (char *)&v46 - v10;
  int v11 = *(unsigned __int8 *)(v0 + 24);
  uint64_t v12 = *(void *)(v0 + 16);
  uint64_t v13 = *(void *)(v12 + 16);
  uint64_t v49 = v12;
  char v14 = (void *)MEMORY[0x1E4FBC860];
  if (v11 != 1)
  {
    if (v13)
    {
      uint64_t v47 = v5;
      uint64_t v53 = (void *)MEMORY[0x1E4FBC860];
      swift_bridgeObjectRetain();
      OUTLINED_FUNCTION_39_4();
      sub_1C64FA9B8(v12);
      OUTLINED_FUNCTION_5_9();
      while ((v1 & 0x8000000000000000) == 0)
      {
        OUTLINED_FUNCTION_19_7();
        if (v15 == v16) {
          break;
        }
        OUTLINED_FUNCTION_8_4();
        if ((v30 & 1) == 0) {
          goto LABEL_35;
        }
        if (*(_DWORD *)(v12 + 36) != v2) {
          goto LABEL_36;
        }
        uint64_t v31 = OUTLINED_FUNCTION_4_10();
        v32(v31);
        uint64_t v33 = OUTLINED_FUNCTION_17_7();
        v34(v33);
        uint64_t v35 = sub_1C65761F0();
        uint64_t v37 = v36;
        uint64_t v38 = OUTLINED_FUNCTION_28_3();
        v39(v38);
        char v14 = v53;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          OUTLINED_FUNCTION_30_5();
          char v14 = v53;
        }
        unint64_t v40 = v14[2];
        if (v40 >= v14[3] >> 1)
        {
          OUTLINED_FUNCTION_35_5();
          char v14 = v53;
        }
        _OWORD v14[2] = v40 + 1;
        uint64_t v41 = &v14[2 * v40];
        v41[4] = v35;
        v41[5] = v37;
        uint64_t v12 = v49;
        OUTLINED_FUNCTION_18_7(v1, v2, v3 & 1);
        if (v29)
        {
LABEL_29:
          OUTLINED_FUNCTION_25_5();
          uint64_t v5 = v47;
          goto LABEL_30;
        }
      }
      goto LABEL_34;
    }
LABEL_30:
    uint64_t v42 = OUTLINED_FUNCTION_7_8();
    v43(v42);
    sub_1C65761F0();
    uint64_t v44 = OUTLINED_FUNCTION_26_7();
    v45(v44);
    sub_1C64EC214(v12, v5, v14);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_39_0();
    return;
  }
  if (!v13) {
    goto LABEL_30;
  }
  uint64_t v47 = v5;
  uint64_t v53 = (void *)MEMORY[0x1E4FBC860];
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_39_4();
  sub_1C64FA9B8(v12);
  OUTLINED_FUNCTION_5_9();
  while ((v1 & 0x8000000000000000) == 0)
  {
    OUTLINED_FUNCTION_19_7();
    if (v15 == v16) {
      break;
    }
    OUTLINED_FUNCTION_8_4();
    if ((v17 & 1) == 0) {
      goto LABEL_32;
    }
    if (*(_DWORD *)(v12 + 36) != v2) {
      goto LABEL_33;
    }
    uint64_t v18 = OUTLINED_FUNCTION_4_10();
    v19(v18);
    uint64_t v20 = OUTLINED_FUNCTION_17_7();
    v21(v20);
    uint64_t v22 = sub_1C65761F0();
    uint64_t v24 = v23;
    uint64_t v25 = OUTLINED_FUNCTION_28_3();
    v26(v25);
    char v14 = v53;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      OUTLINED_FUNCTION_30_5();
      char v14 = v53;
    }
    unint64_t v27 = v14[2];
    if (v27 >= v14[3] >> 1)
    {
      OUTLINED_FUNCTION_35_5();
      char v14 = v53;
    }
    _OWORD v14[2] = v27 + 1;
    char v28 = &v14[2 * v27];
    v28[4] = v22;
    v28[5] = v24;
    uint64_t v12 = v49;
    OUTLINED_FUNCTION_18_7(v1, v2, v3 & 1);
    if (v29) {
      goto LABEL_29;
    }
  }
  __break(1u);
LABEL_32:
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
}

uint64_t sub_1C64EDB20()
{
  LocalePrerequisite.isValid(environment:)();
  return v0 & 1;
}

uint64_t sub_1C64EDB48(uint64_t a1, unsigned __int16 *a2)
{
  return j___s18SiriSuggestionsKit18LocalePrerequisiteC7isValid11environmentSbAA19EnvironmentSnapshot_p_tF(a1, *a2) & 1;
}

uint64_t sub_1C64EDB74(uint64_t a1, unsigned __int16 *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1C64F1C34(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, unsigned char *))j___s18SiriSuggestionsKit18LocalePrerequisiteC7isValid11environmentSbAA19EnvironmentSnapshot_p_tF);
}

void sub_1C64EDB8C()
{
}

uint64_t NetworkPrerequisite.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t static NetworkPrerequisite.instance.getter()
{
  return swift_initStaticObject();
}

unint64_t NetworkPrerequisite.description.getter()
{
  return 0xD000000000000015;
}

uint64_t NetworkPrerequisite.isValid(environment:)(void *a1)
{
  uint64_t v1 = a1[3];
  uint64_t v2 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v1);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v2 + 56))(&v4, v1, v2);
  return v4;
}

uint64_t NetworkPrerequisite.__deallocating_deinit()
{
  return MEMORY[0x1F4186488](v0, 16, 7);
}

uint64_t sub_1C64EDC64(void *a1)
{
  return sub_1C64EC820(a1) & 1;
}

uint64_t sub_1C64EDC90(uint64_t a1, unsigned __int16 *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1C64F1C34(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, unsigned char *))sub_1C64EC820);
}

unint64_t sub_1C64EDCA8()
{
  return 0xD000000000000015;
}

uint64_t DevicePrerequisite.description.getter()
{
  sub_1C6576C60();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_21_6();
  uint64_t v17 = v1;
  sub_1C6576620();
  swift_bridgeObjectRelease();
  sub_1C6576620();
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (*(void *)(*(void *)(v0 + 16) + 16))
  {
    uint64_t v16 = MEMORY[0x1E4FBC860];
    uint64_t v15 = swift_bridgeObjectRetain();
    sub_1C64A2210();
    uint64_t v3 = v15;
    uint64_t v2 = v16;
    int64_t v4 = sub_1C64FA9B8(v15);
    uint64_t v6 = v5;
    char v8 = v7 & 1;
    do
    {
      if (v4 < 0 || v4 >= 1 << *(unsigned char *)(v3 + 32))
      {
        __break(1u);
LABEL_23:
        __break(1u);
LABEL_24:
        __break(1u);
        JUMPOUT(0x1C64EDFC4);
      }
      if (((*(void *)(v15 + 56 + (((unint64_t)v4 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v4) & 1) == 0) {
        goto LABEL_23;
      }
      if (*(_DWORD *)(v3 + 36) != v6) {
        goto LABEL_24;
      }
      unint64_t v9 = 0xE600000000000000;
      uint64_t v10 = 0x656E6F685069;
      switch(*(unsigned char *)(*(void *)(v3 + 48) + v4))
      {
        case 1:
          unint64_t v9 = 0xE90000000000006FLL;
          uint64_t v10 = 0x72506E6F69736976;
          break;
        case 2:
          unint64_t v9 = 0xE400000000000000;
          uint64_t v10 = 1684099177;
          break;
        case 3:
          unint64_t v9 = 0xE700000000000000;
          uint64_t v10 = 0x79616C50726163;
          break;
        case 4:
          unint64_t v9 = 0xE500000000000000;
          uint64_t v10 = 0x6863746177;
          break;
        case 5:
          unint64_t v9 = 0xE700000000000000;
          uint64_t v10 = 0x5654656C707061;
          break;
        case 6:
          unint64_t v9 = 0xE700000000000000;
          uint64_t v10 = 0x646F70656D6F68;
          break;
        case 7:
          unint64_t v9 = 0xE300000000000000;
          uint64_t v10 = 6513005;
          break;
        case 8:
          unint64_t v9 = 0xE300000000000000;
          uint64_t v10 = 6582128;
          break;
        default:
          break;
      }
      unint64_t v11 = *(void *)(v16 + 16);
      if (v11 >= *(void *)(v16 + 24) >> 1)
      {
        sub_1C64A2210();
        uint64_t v3 = v15;
      }
      *(void *)(v16 + 16) = v11 + 1;
      uint64_t v12 = v16 + 16 * v11;
      *(void *)(v12 + 32) = v10;
      *(void *)(v12 + 40) = v9;
      sub_1C64FA8D4(v4, v6, v8 & 1, v3);
      OUTLINED_FUNCTION_49_3();
    }
    while (!v13);
    sub_1C64E7578(v4, v6, v8);
    swift_bridgeObjectRelease();
  }
  MEMORY[0x1C879EE80](v2, MEMORY[0x1E4FBB1A0]);
  sub_1C6576620();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v17;
}

uint64_t DevicePrerequisite.__allocating_init(devices:includes:)()
{
  uint64_t v2 = OUTLINED_FUNCTION_34_4();
  DevicePrerequisite.init(devices:includes:)(v1, v0);
  return v2;
}

uint64_t DevicePrerequisite.init(devices:includes:)(uint64_t a1, char a2)
{
  uint64_t v4 = a1;
  uint64_t v12 = a1;
  if (*(void *)(a1 + 16))
  {
    sub_1C6577150();
    swift_bridgeObjectRetain();
    sub_1C65765E0();
    uint64_t v5 = sub_1C6577190();
    uint64_t v6 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v7 = v5 & ~v6;
    if ((*(void *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7))
    {
      uint64_t v8 = ~v6;
      while (2)
      {
        switch(*(unsigned char *)(*(void *)(v4 + 48) + v7))
        {
          case 1:
          case 2:
          case 3:
          case 4:
          case 5:
          case 6:
          case 7:
          case 8:
            char v9 = sub_1C6577090();
            swift_bridgeObjectRelease();
            if (v9) {
              goto LABEL_9;
            }
            unint64_t v7 = (v7 + 1) & v8;
            if (((*(void *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
              goto LABEL_7;
            }
            continue;
          default:
            swift_bridgeObjectRelease();
LABEL_9:
            swift_bridgeObjectRelease();
            sub_1C64F2C58(v11, 1);
            uint64_t v4 = v12;
            break;
        }
        break;
      }
    }
    else
    {
LABEL_7:
      swift_bridgeObjectRelease();
    }
  }
  *(void *)(v2 + 16) = v4;
  *(unsigned char *)(v2 + 24) = a2 & 1;
  return v2;
}

uint64_t sub_1C64EE250(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    uint64_t v2 = a2;
    uint64_t v4 = sub_1C64EBE20();
    uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
    unint64_t v6 = v4 & ~v5;
    uint64_t v35 = v2 + 56;
    if ((*(void *)(v2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
    {
      uint64_t v34 = ~v5;
      uint64_t v32 = a1;
      uint64_t v33 = v2;
      while (1)
      {
        uint64_t v7 = *(void *)(v2 + 48) + 40 * v6;
        uint64_t v9 = *(void *)v7;
        uint64_t v8 = *(void *)(v7 + 8);
        uint64_t v10 = *(void *)(v7 + 16);
        uint64_t v11 = *(void *)(v7 + 24);
        int v12 = *(unsigned __int8 *)(v7 + 32);
        uint64_t v36 = v11;
        uint64_t v37 = v10;
        if (v12 == 2)
        {
          if (!(v10 | v8 | v9 | v11))
          {
            uint64_t v21 = "siriNotification";
LABEL_35:
            unint64_t v14 = (unint64_t)v21 | 0x8000000000000000;
            unint64_t v13 = 0xD000000000000010;
            goto LABEL_36;
          }
          uint64_t v15 = v10 | v8 | v11;
          if (v9 == 1 && v15 == 0)
          {
            uint64_t v21 = "assistantSuggestions";
            goto LABEL_35;
          }
          BOOL v17 = v9 == 2 && v15 == 0;
          unint64_t v13 = 0x696669746F4E736FLL;
          unint64_t v14 = 0xEE006E6F69746163;
          if (!v17)
          {
            if (v9 == 3 && v15 == 0)
            {
              unint64_t v13 = 0x706C654869726973;
              unint64_t v14 = 0xE800000000000000;
            }
            else
            {
              BOOL v19 = v15 == 0;
              BOOL v20 = v9 == 4;
              if (v20 && v19) {
                unint64_t v13 = 0xD000000000000014;
              }
              else {
                unint64_t v13 = 0xD000000000000010;
              }
              if (v20 && v19) {
                unint64_t v14 = 0x80000001C65889C0;
              }
              else {
                unint64_t v14 = 0x80000001C65889A0;
              }
            }
          }
        }
        else if (v12 == 1)
        {
          if (*(void *)v7)
          {
            if (*(void *)v7 == 1)
            {
              unint64_t v13 = 0x746E694869726973;
              unint64_t v14 = 0xEF6E656B6F705373;
            }
            else
            {
              unint64_t v14 = 0xE700000000000000;
              unint64_t v13 = 0x6E776F6E6B6E75;
            }
          }
          else
          {
            unint64_t v13 = 0x746E694869726973;
            unint64_t v14 = 0xE900000000000073;
          }
        }
        else
        {
          swift_bridgeObjectRetain();
          sub_1C64A0570(v9, v8, v10, v11, 0);
          sub_1C6576620();
          swift_bridgeObjectRelease();
          if (v11) {
            sub_1C6576620();
          }
          swift_bridgeObjectRetain();
          sub_1C6576620();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          unint64_t v13 = 0x5F7070416E69;
          unint64_t v14 = 0xE600000000000000;
          a1 = v32;
          uint64_t v2 = v33;
        }
LABEL_36:
        sub_1C649FB10(a1, (uint64_t)v43);
        if (v44)
        {
          sub_1C649FB10(a1, (uint64_t)&v38);
          if (!v42)
          {
            unint64_t v23 = 0xE500000000000000;
            unint64_t v22 = 0x7070416E69;
            goto LABEL_69;
          }
          if (v42 == 1)
          {
            if ((_BYTE)v38)
            {
              if (v38 == 1) {
                unint64_t v22 = 0x746E694869726973;
              }
              else {
                unint64_t v22 = 0x6E776F6E6B6E75;
              }
              if (v38 == 1) {
                unint64_t v23 = 0xEF6E656B6F705373;
              }
              else {
                unint64_t v23 = 0xE700000000000000;
              }
            }
            else
            {
              unint64_t v22 = 0x746E694869726973;
              unint64_t v23 = 0xE900000000000073;
            }
          }
          else
          {
            if (!(v40 | v41 | v38 | v39))
            {
              unint64_t v26 = "siriNotification";
              goto LABEL_55;
            }
            uint64_t v25 = v40 | v41 | v39;
            if (v38 == 1 && !v25)
            {
              unint64_t v26 = "assistantSuggestions";
LABEL_55:
              unint64_t v23 = (unint64_t)v26 | 0x8000000000000000;
              unint64_t v22 = 0xD000000000000010;
              goto LABEL_69;
            }
            if (v38 != 2 || (unint64_t v22 = 0x696669746F4E736FLL, v23 = 0xEE006E6F69746163, v25))
            {
              if (v38 != 3 || v25)
              {
                BOOL v27 = v25 == 0;
                BOOL v28 = v38 == 4;
                if (v28 && v27) {
                  unint64_t v22 = 0xD000000000000014;
                }
                else {
                  unint64_t v22 = 0xD000000000000010;
                }
                if (v28 && v27) {
                  unint64_t v23 = 0x80000001C65889C0;
                }
                else {
                  unint64_t v23 = 0x80000001C65889A0;
                }
              }
              else
              {
                unint64_t v22 = 0x706C654869726973;
                unint64_t v23 = 0xE800000000000000;
              }
            }
          }
        }
        else
        {
          uint64_t v24 = v43[3];
          swift_bridgeObjectRetain();
          sub_1C6576620();
          swift_bridgeObjectRelease();
          if (v24) {
            sub_1C6576620();
          }
          swift_bridgeObjectRetain();
          sub_1C6576620();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          unint64_t v22 = 0x5F7070416E69;
          unint64_t v23 = 0xE600000000000000;
          a1 = v32;
          uint64_t v2 = v33;
        }
LABEL_69:
        if (v13 == v22 && v14 == v23)
        {
          swift_bridgeObjectRelease_n();
          sub_1C64A21C4(v9, v8, v37, v36, v12);
          char v30 = 1;
          return v30 & 1;
        }
        char v30 = sub_1C6577090();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1C64A21C4(v9, v8, v37, v36, v12);
        if ((v30 & 1) == 0)
        {
          unint64_t v6 = (v6 + 1) & v34;
          if ((*(void *)(v35 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6)) {
            continue;
          }
        }
        return v30 & 1;
      }
    }
  }
  char v30 = 0;
  return v30 & 1;
}

uint64_t sub_1C64EE810(unsigned __int8 a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)
    && (sub_1C6577150(),
        sub_1C649B1A8((uint64_t)v16, a1),
        uint64_t v4 = sub_1C6577190(),
        uint64_t v5 = -1 << *(unsigned char *)(a2 + 32),
        unint64_t v6 = v4 & ~v5,
        ((*(void *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0))
  {
    uint64_t v7 = ~v5;
    uint64_t v8 = a1;
    while (1)
    {
      unint64_t v9 = 0xE300000000000000;
      uint64_t v10 = 5459817;
      switch(*(unsigned char *)(*(void *)(a2 + 48) + v6))
      {
        case 1:
          unint64_t v9 = 0xE500000000000000;
          uint64_t v10 = 0x534F63616DLL;
          break;
        case 2:
          unint64_t v9 = 0xE400000000000000;
          uint64_t v10 = 1397716596;
          break;
        case 3:
          unint64_t v9 = 0xE700000000000000;
          uint64_t v10 = 0x534F6863746177;
          break;
        case 4:
          unint64_t v9 = 0xE800000000000000;
          uint64_t v10 = 0x534F6E6F69736976;
          break;
        case 5:
          unint64_t v9 = 0xE700000000000000;
          uint64_t v10 = 0x6E776F6E6B6E75;
          break;
        default:
          break;
      }
      unint64_t v11 = 0xE300000000000000;
      uint64_t v12 = 5459817;
      switch(v8)
      {
        case 1:
          unint64_t v11 = 0xE500000000000000;
          uint64_t v12 = 0x534F63616DLL;
          break;
        case 2:
          unint64_t v11 = 0xE400000000000000;
          uint64_t v12 = 1397716596;
          break;
        case 3:
          unint64_t v11 = 0xE700000000000000;
          uint64_t v12 = 0x534F6863746177;
          break;
        case 4:
          unint64_t v11 = 0xE800000000000000;
          uint64_t v12 = 0x534F6E6F69736976;
          break;
        case 5:
          unint64_t v11 = 0xE700000000000000;
          uint64_t v12 = 0x6E776F6E6B6E75;
          break;
        default:
          break;
      }
      if (v10 == v12 && v9 == v11) {
        break;
      }
      char v14 = sub_1C6577090();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v14 & 1) == 0)
      {
        unint64_t v6 = (v6 + 1) & v7;
        if ((*(void *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6)) {
          continue;
        }
      }
      return v14 & 1;
    }
    swift_bridgeObjectRelease_n();
    char v14 = 1;
  }
  else
  {
    char v14 = 0;
  }
  return v14 & 1;
}

void sub_1C64EEA80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16))
  {
    sub_1C6577150();
    sub_1C65765E0();
    uint64_t v6 = sub_1C6577190();
    uint64_t v7 = -1 << *(unsigned char *)(a3 + 32);
    uint64_t v8 = v6 & ~v7;
    OUTLINED_FUNCTION_3_10();
    if (v9)
    {
      uint64_t v10 = *(void *)(a3 + 48);
      unint64_t v11 = (void *)(v10 + 16 * v8);
      if ((*v11 != a1 || v11[1] != a2) && (sub_1C6577090() & 1) == 0)
      {
        uint64_t v13 = ~v7;
        uint64_t v14 = (v8 + 1) & v13;
        OUTLINED_FUNCTION_3_10();
        if (v15)
        {
          do
          {
            uint64_t v16 = (void *)(v10 + 16 * v14);
            if (*v16 == a1 && v16[1] == a2) {
              break;
            }
            if (sub_1C6577090()) {
              break;
            }
            uint64_t v14 = (v14 + 1) & v13;
            OUTLINED_FUNCTION_3_10();
          }
          while ((v18 & 1) != 0);
        }
      }
    }
  }
}

BOOL DevicePrerequisite.isValid(environment:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = a1[3];
  uint64_t v4 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v3);
  uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 72))(v3, v4);
  uint64_t v6 = sub_1C64EEC7C(v5, (void (*)(void))sub_1C64FB3F4, (uint64_t)&type metadata for DeviceType, (void (*)(char *, void))sub_1C64F2C58);
  uint64_t v7 = *(void *)(sub_1C64F9630(*(void *)(v1 + 16), v6) + 16);
  swift_release();
  if (*(unsigned char *)(v2 + 24)) {
    return v7 != 0;
  }
  else {
    return v7 == 0;
  }
}

uint64_t sub_1C64EEC48(uint64_t a1)
{
  return sub_1C64EEC7C(a1, (void (*)(void))sub_1C64FB3F4, (uint64_t)&type metadata for DeviceType, (void (*)(char *, void))sub_1C64F2C58);
}

uint64_t sub_1C64EEC7C(uint64_t a1, void (*a2)(void), uint64_t a3, void (*a4)(char *, void))
{
  a2();
  uint64_t v12 = sub_1C65769C0();
  uint64_t v7 = *(void *)(a1 + 16);
  if (v7)
  {
    for (uint64_t i = 0; i != v7; ++i)
    {
      uint64_t v9 = a1 + i;
      a4(&v11, *(unsigned __int8 *)(v9 + 32));
    }
    swift_bridgeObjectRelease();
    return v12;
  }
  else
  {
    OUTLINED_FUNCTION_31_6();
  }
  return a3;
}

uint64_t sub_1C64EED24(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  sub_1C64FB300();
  uint64_t v8 = sub_1C65769C0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    for (uint64_t i = 0; i != v3; ++i)
    {
      uint64_t v5 = a1 + 2 * i;
      sub_1C64F32B8(&v7, *(unsigned __int16 *)(v5 + 32));
    }
    swift_bridgeObjectRelease();
    return v8;
  }
  else
  {
    OUTLINED_FUNCTION_31_6();
  }
  return v2;
}

void sub_1C64EEDB8()
{
  OUTLINED_FUNCTION_49_0();
  uint64_t v1 = v0;
  uint64_t v2 = sub_1C6576210();
  OUTLINED_FUNCTION_0_2();
  uint64_t v4 = v3;
  uint64_t v6 = MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v21 - v9;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF9018);
  MEMORY[0x1F4188790](v11 - 8);
  OUTLINED_FUNCTION_15_0();
  uint64_t v14 = v13 - v12;
  sub_1C64FB22C(&qword_1EBBF7F00, 255, MEMORY[0x1E4F27A78]);
  uint64_t v24 = sub_1C65769C0();
  uint64_t v21 = v1;
  uint64_t v15 = *(void *)(v1 + 16);
  if (v15)
  {
    uint64_t v16 = v4 + 16;
    BOOL v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
    uint64_t v18 = v21 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    uint64_t v22 = *(void *)(v16 + 56);
    unint64_t v23 = v17;
    BOOL v19 = (void (**)(char *, uint64_t, uint64_t))(v16 + 16);
    BOOL v20 = (void (**)(char *, uint64_t))(v16 - 8);
    while (1)
    {
      v23(v14, v18, v2);
      __swift_storeEnumTagSinglePayload(v14, 0, 1, v2);
      if (__swift_getEnumTagSinglePayload(v14, 1, v2) == 1) {
        break;
      }
      (*v19)(v8, v14, v2);
      sub_1C64F3CF8((uint64_t)v10, v8);
      (*v20)(v10, v2);
      v18 += v22;
      if (!--v15) {
        goto LABEL_5;
      }
    }
  }
  else
  {
LABEL_5:
    __swift_storeEnumTagSinglePayload(v14, 1, 1, v2);
  }
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_39_0();
}

uint64_t sub_1C64EEFEC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  sub_1C64FB274();
  uint64_t v8 = sub_1C65769C0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    uint64_t v4 = a1 + 32;
    do
    {
      sub_1C649FB10(v4, (uint64_t)v9);
      sub_1C64FB2C0((uint64_t)v9, (void (*)(void, void, void, void, void))sub_1C64A0570);
      sub_1C64F3648((uint64_t)v6, (uint64_t)v9);
      sub_1C64A21C4(v6[0], v6[1], v6[2], v6[3], v7);
      v4 += 40;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
    return v8;
  }
  else
  {
    OUTLINED_FUNCTION_31_6();
  }
  return v2;
}

uint64_t sub_1C64EF0B4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  sub_1C64FB34C();
  uint64_t v8 = sub_1C65769C0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    uint64_t v4 = a1 + 32;
    do
    {
      sub_1C64B817C(v4, (uint64_t)v6);
      sub_1C64F4024(v7, v6);
      sub_1C64B81B4((uint64_t)v7);
      v4 += 120;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
    return v8;
  }
  else
  {
    OUTLINED_FUNCTION_31_6();
  }
  return v2;
}

uint64_t sub_1C64EF160(uint64_t a1)
{
  uint64_t v6 = sub_1C65769C0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    uint64_t v4 = a1 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_1C64F4388();
      swift_bridgeObjectRelease();
      v4 += 16;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
    return v6;
  }
  else
  {
    OUTLINED_FUNCTION_31_6();
  }
  return v1;
}

BOOL sub_1C64EF210(void *a1)
{
  return DevicePrerequisite.isValid(environment:)(a1);
}

uint64_t sub_1C64EF238(uint64_t a1, unsigned __int16 *a2)
{
  return j___s18SiriSuggestionsKit18DevicePrerequisiteC7isValid11environmentSbAA19EnvironmentSnapshot_p_tF(a1, *a2) & 1;
}

uint64_t sub_1C64EF264(uint64_t a1, unsigned __int16 *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1C64F1C34(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, unsigned char *))j___s18SiriSuggestionsKit18DevicePrerequisiteC7isValid11environmentSbAA19EnvironmentSnapshot_p_tF_0);
}

uint64_t sub_1C64EF27C()
{
  return DevicePrerequisite.description.getter();
}

void InvocationTypePrerequisite.__allocating_init(validInvocationTypes:policyConfig:isIntentObservationEnabled:clock:)()
{
}

void InvocationTypePrerequisite.init(validInvocationTypes:policyConfig:isIntentObservationEnabled:clock:)()
{
}

void sub_1C64EF2D0()
{
  OUTLINED_FUNCTION_49_0();
  uint64_t v6 = v5;
  OUTLINED_FUNCTION_24_4();
  uint64_t v8 = *(void *)(v7 + 24);
  uint64_t v9 = *(void *)(v7 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v7, v8);
  OUTLINED_FUNCTION_0_2();
  MEMORY[0x1F4188790](v10);
  OUTLINED_FUNCTION_15_0();
  uint64_t v13 = v12 - v11;
  (*(void (**)(uint64_t))(v14 + 16))(v12 - v11);
  v6(v4, v13, v2, v1, v0, v8, v9);
  __swift_destroy_boxed_opaque_existential_1(v3);
  OUTLINED_FUNCTION_39_0();
}

uint64_t InvocationTypePrerequisite.__allocating_init(validInvocationTypes:policyConfig:isIntentObservationEnabled:clock:intentObservationEnabledIn:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char *a5)
{
  OUTLINED_FUNCTION_24_4();
  uint64_t v10 = swift_allocObject();
  InvocationTypePrerequisite.init(validInvocationTypes:policyConfig:isIntentObservationEnabled:clock:intentObservationEnabledIn:)(v8, v7, v6, v5, a5);
  return v10;
}

uint64_t InvocationTypePrerequisite.init(validInvocationTypes:policyConfig:isIntentObservationEnabled:clock:intentObservationEnabledIn:)(uint64_t a1, long long *a2, char a3, long long *a4, char *a5)
{
  char v8 = *a5;
  uint64_t v9 = *((void *)a5 + 1);
  uint64_t v10 = *((void *)a5 + 2);
  *(void *)(v5 + 16) = a1;
  sub_1C64A5488(a2, v5 + 24);
  *(unsigned char *)(v5 + 64) = a3;
  sub_1C64A5488(a4, v5 + 72);
  *(unsigned char *)(v5 + 112) = v8;
  *(void *)(v5 + 120) = v9;
  *(void *)(v5 + 128) = v10;
  return v5;
}

unint64_t InvocationTypePrerequisite.description.getter()
{
  OUTLINED_FUNCTION_45_4();
  sub_1C6576C60();
  swift_bridgeObjectRelease();
  uint64_t v0 = swift_bridgeObjectRetain();
  MEMORY[0x1C879EE80](v0, &type metadata for VersionedInvocation);
  sub_1C6576620();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 0xD000000000000018;
}

void InvocationTypePrerequisite.isValid(environment:invocationType:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  OUTLINED_FUNCTION_16_7();
  a29 = v31;
  a30 = v32;
  uint64_t v34 = v33;
  __int16 v36 = *v35;
  uint64_t v37 = v30[6];
  uint64_t v38 = v30[7];
  __swift_project_boxed_opaque_existential_1(v30 + 3, v37);
  uint64_t v39 = (*(uint64_t (**)(uint64_t, uint64_t))(v38 + 16))(v37, v38);
  uint64_t v40 = sub_1C64EC060(v36, v39);
  LOBYTE(v38) = v41;
  swift_bridgeObjectRelease();
  if (v38)
  {
    if (qword_1EBBFC428 != -1) {
      swift_once();
    }
    uint64_t v61 = sub_1C65763A0();
    uint64_t v56 = OUTLINED_FUNCTION_14_4(v61, (uint64_t)qword_1EBBFC278);
    os_log_type_t v62 = sub_1C6576A50();
    if (!os_log_type_enabled(v56, v62)) {
      goto LABEL_18;
    }
    unint64_t v63 = (uint8_t *)OUTLINED_FUNCTION_12_3();
    a13 = OUTLINED_FUNCTION_97_0();
    *(_DWORD *)unint64_t v63 = 136315138;
    uint64_t v64 = InvocationType.description.getter();
    OUTLINED_FUNCTION_43_4(v64, v65, v66, v67, v68, v69);
    OUTLINED_FUNCTION_33_5();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C6494000, v56, v62, "No observation window requirements in config for: %s", v63, 0xCu);
    swift_arrayDestroy();
    goto LABEL_17;
  }
  a18 = v40;
  if (v40 >= 1)
  {
    if (AFIsInternalInstall())
    {
      if (qword_1EBBFC428 != -1) {
        swift_once();
      }
      uint64_t v42 = sub_1C65763A0();
      uint64_t v43 = OUTLINED_FUNCTION_14_4(v42, (uint64_t)qword_1EBBFC278);
      os_log_type_t v44 = sub_1C6576A50();
      if (os_log_type_enabled(v43, v44))
      {
        uint64_t v45 = OUTLINED_FUNCTION_41_4();
        a13 = OUTLINED_FUNCTION_97_0();
        *(_DWORD *)uint64_t v45 = 136315394;
        uint64_t v46 = InvocationType.description.getter();
        sub_1C64BCF18(v46, v47, &a13);
        sub_1C6576B40();
        swift_bridgeObjectRelease();
        *(_WORD *)(v45 + 12) = 2048;
        swift_beginAccess();
        a17 = a18;
        sub_1C6576B40();
        _os_log_impl(&dword_1C6494000, v43, v44, "Observation for: %s reduced from %ld to 1", (uint8_t *)v45, 0x16u);
        swift_arrayDestroy();
        OUTLINED_FUNCTION_31_5();
        OUTLINED_FUNCTION_31_5();
      }

      uint64_t v40 = 1;
      swift_beginAccess();
      a18 = 1;
    }
    uint64_t v48 = v34[3];
    uint64_t v49 = v34[4];
    __swift_project_boxed_opaque_existential_1(v34, v48);
    uint64_t v50 = (*(uint64_t (**)(uint64_t, uint64_t))(v49 + 72))(v48, v49);
    LOWORD(a17) = v36;
    uint64_t v51 = v34[3];
    uint64_t v52 = v34[4];
    __swift_project_boxed_opaque_existential_1(v34, v51);
    uint64_t v53 = (*(uint64_t (**)(uint64_t, uint64_t))(v52 + 96))(v51, v52);
    char v54 = sub_1C64EFACC(v50, (__int16 *)&a17, v53, v40);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (qword_1EBBFC428 != -1) {
      swift_once();
    }
    uint64_t v55 = sub_1C65763A0();
    uint64_t v56 = OUTLINED_FUNCTION_14_4(v55, (uint64_t)qword_1EBBFC278);
    os_log_type_t v57 = sub_1C6576A50();
    if (!os_log_type_enabled(v56, v57)) {
      goto LABEL_18;
    }
    uint64_t v58 = swift_slowAlloc();
    a17 = OUTLINED_FUNCTION_97_0();
    *(_DWORD *)uint64_t v58 = 136315394;
    LOWORD(a16) = v36;
    uint64_t v59 = InvocationType.description.getter();
    a16 = sub_1C64BCF18(v59, v60, &a17);
    sub_1C6576B40();
    swift_bridgeObjectRelease();
    *(_WORD *)(v58 + 12) = 1024;
    LODWORD(a16) = v54 & 1;
    sub_1C6576B40();
    _os_log_impl(&dword_1C6494000, v56, v57, "Invocation Prerequisite for %s is %{BOOL}d", (uint8_t *)v58, 0x12u);
    swift_arrayDestroy();
LABEL_17:
    OUTLINED_FUNCTION_31_5();
    OUTLINED_FUNCTION_31_5();
LABEL_18:

    goto LABEL_25;
  }
  if (qword_1EBBFC428 != -1) {
    swift_once();
  }
  uint64_t v70 = sub_1C65763A0();
  uint64_t v71 = (void *)OUTLINED_FUNCTION_14_4(v70, (uint64_t)qword_1EBBFC278);
  os_log_type_t v72 = sub_1C6576A50();
  if (OUTLINED_FUNCTION_36_2(v72))
  {
    uint64_t v73 = (_DWORD *)OUTLINED_FUNCTION_12_3();
    a13 = OUTLINED_FUNCTION_97_0();
    _DWORD *v73 = 136315138;
    uint64_t v74 = InvocationType.description.getter();
    OUTLINED_FUNCTION_43_4(v74, v75, v76, v77, v78, v79);
    OUTLINED_FUNCTION_33_5();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_48_3(&dword_1C6494000, v80, v81, "Observation window requirement of zero for: %s");
    swift_arrayDestroy();
    OUTLINED_FUNCTION_31_5();
    OUTLINED_FUNCTION_31_5();
  }

LABEL_25:
  OUTLINED_FUNCTION_15_4();
}

uint64_t sub_1C64EFACC(uint64_t a1, __int16 *a2, uint64_t a3, uint64_t a4)
{
  __int16 v5 = *a2;
  uint64_t v6 = *(void *)(v4 + 16);
  uint64_t v7 = *(void *)(v6 + 16);
  if (!v7)
  {
LABEL_54:
    if (qword_1EBBFC428 != -1) {
      swift_once();
    }
    uint64_t v24 = sub_1C65763A0();
    uint64_t v25 = OUTLINED_FUNCTION_14_4(v24, (uint64_t)qword_1EBBFC278);
    os_log_type_t v26 = sub_1C6576A50();
    if (os_log_type_enabled(v25, v26))
    {
      BOOL v27 = (uint8_t *)OUTLINED_FUNCTION_12_3();
      uint64_t v77 = OUTLINED_FUNCTION_97_0();
      *(_DWORD *)BOOL v27 = 136315138;
      LOWORD(v79) = v5;
      uint64_t v28 = InvocationType.description.getter();
      uint64_t v79 = sub_1C64BCF18(v28, v29, &v77);
      sub_1C6576B40();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C6494000, v25, v26, "No requirements for current invocationType: %s", v27, 0xCu);
      uint64_t v30 = 1;
      swift_arrayDestroy();
      OUTLINED_FUNCTION_31_5();
      OUTLINED_FUNCTION_31_5();

      return v30;
    }
    goto LABEL_72;
  }
  uint64_t v8 = v6 + 32;
  int v9 = v5 & 0xFF00;
  int v75 = *a2;
  if (v5) {
    uint64_t v10 = 0x6E61747369737361;
  }
  else {
    uint64_t v10 = 1919251317;
  }
  uint64_t v71 = v10;
  unint64_t v11 = 0xE400000000000000;
  if (v5) {
    unint64_t v11 = 0xE900000000000074;
  }
  unint64_t v72 = v11;
  if ((*a2 & 0x100) != 0) {
    uint64_t v12 = 0x6465707974;
  }
  else {
    uint64_t v12 = 0x6563696F76;
  }
  uint64_t v74 = v12;
  swift_bridgeObjectRetain_n();
  uint64_t v13 = 0;
  uint64_t v73 = v8;
  while (1)
  {
    uint64_t v14 = (void *)(v8 + 16 * v13);
    uint64_t v15 = *v14;
    uint64_t v16 = *(void *)(*v14 + 16);
    if (v16) {
      break;
    }
LABEL_52:
    if (++v13 == v7)
    {
      swift_bridgeObjectRelease_n();
      goto LABEL_54;
    }
  }
  uint64_t v76 = v14[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n();
  uint64_t v17 = 0;
  while (2)
  {
    unsigned int v18 = *(unsigned __int16 *)(v15 + 2 * v17 + 32);
    switch(v18 >> 8)
    {
      case 2u:
        if (v9 != 512) {
          goto LABEL_28;
        }
        goto LABEL_58;
      case 3u:
        if (v9 == 768) {
          goto LABEL_58;
        }
        goto LABEL_28;
      case 4u:
        if (v9 == 1024) {
          goto LABEL_58;
        }
        goto LABEL_28;
      case 5u:
        if (v9 == 1280) {
          goto LABEL_58;
        }
        goto LABEL_28;
      case 6u:
        if (v9 != 1536) {
          goto LABEL_28;
        }
        goto LABEL_58;
      default:
        if ((HIBYTE(v5) - 2) < 5u) {
          goto LABEL_28;
        }
        if (*(_WORD *)(v15 + 2 * v17 + 32) == 2)
        {
          if (v75 == 2) {
            goto LABEL_46;
          }
          goto LABEL_28;
        }
        if (*(_WORD *)(v15 + 2 * v17 + 32) == 3)
        {
          if (v75 == 3) {
            goto LABEL_46;
          }
          goto LABEL_28;
        }
        if ((v5 & 0xFE) == 2) {
          goto LABEL_28;
        }
        if (v18) {
          uint64_t v19 = 0x6E61747369737361;
        }
        else {
          uint64_t v19 = 1919251317;
        }
        if (v18) {
          unint64_t v20 = 0xE900000000000074;
        }
        else {
          unint64_t v20 = 0xE400000000000000;
        }
        if (v19 != v71 || v20 != v72)
        {
          char v67 = sub_1C6577090();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v67) {
            goto LABEL_46;
          }
LABEL_28:
          if (v16 == ++v17)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease_n();
            uint64_t v8 = v73;
            goto LABEL_52;
          }
          continue;
        }
        swift_bridgeObjectRelease_n();
LABEL_46:
        if ((v18 & 0x100) != 0) {
          uint64_t v22 = 0x6465707974;
        }
        else {
          uint64_t v22 = 0x6563696F76;
        }
        if (v22 != v74)
        {
          char v23 = sub_1C6577090();
          swift_bridgeObjectRelease_n();
          if (v23) {
            goto LABEL_58;
          }
          goto LABEL_28;
        }
        swift_bridgeObjectRelease_n();
LABEL_58:
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        if (!v76)
        {
          swift_bridgeObjectRelease();
          goto LABEL_68;
        }
        swift_bridgeObjectRelease();
        if (!*(void *)(v76 + 16))
        {
LABEL_68:
          swift_bridgeObjectRelease();
          if (qword_1EBBFC428 != -1) {
            swift_once();
          }
          uint64_t v37 = sub_1C65763A0();
          uint64_t v25 = OUTLINED_FUNCTION_14_4(v37, (uint64_t)qword_1EBBFC278);
          os_log_type_t v38 = sub_1C6576A50();
          if (OUTLINED_FUNCTION_20_5(v38))
          {
            *(_WORD *)swift_slowAlloc() = 0;
            OUTLINED_FUNCTION_42_3(&dword_1C6494000, v39, v40, "No OS version requirements specified");
            OUTLINED_FUNCTION_31_5();
          }
LABEL_72:

          return 1;
        }
        if (!a3)
        {
          swift_bridgeObjectRelease();
          if (qword_1EBBFC428 != -1) {
            swift_once();
          }
          uint64_t v47 = sub_1C65763A0();
          uint64_t v48 = (void *)OUTLINED_FUNCTION_14_4(v47, (uint64_t)qword_1EBBFC278);
          os_log_type_t v49 = sub_1C6576A60();
          if (!OUTLINED_FUNCTION_20_5(v49)) {
            goto LABEL_90;
          }
          *(_WORD *)swift_slowAlloc() = 0;
          uint64_t v52 = "No OS install dates obtained to check observation window against";
          goto LABEL_89;
        }
        uint64_t v31 = *(void *)(a1 + 16);
        if (!v31)
        {
          swift_bridgeObjectRelease();
          if (qword_1EBBFC428 != -1) {
            swift_once();
          }
          uint64_t v53 = sub_1C65763A0();
          uint64_t v48 = (void *)OUTLINED_FUNCTION_14_4(v53, (uint64_t)qword_1EBBFC278);
          os_log_type_t v54 = sub_1C6576A60();
          if (!OUTLINED_FUNCTION_20_5(v54)) {
            goto LABEL_90;
          }
          *(_WORD *)swift_slowAlloc() = 0;
          uint64_t v52 = "Expected to have a device type for the current request";
LABEL_89:
          OUTLINED_FUNCTION_42_3(&dword_1C6494000, v50, v51, v52);
          OUTLINED_FUNCTION_31_5();
LABEL_90:

          return 0;
        }
        uint64_t v77 = MEMORY[0x1E4FBC860];
        sub_1C64A2788();
        uint64_t v32 = v77;
        uint64_t v33 = (char *)(a1 + 32);
        do
        {
          uint64_t v34 = *v33++;
          char v35 = byte_1C657F67A[v34];
          uint64_t v77 = v32;
          unint64_t v36 = *(void *)(v32 + 16);
          if (v36 >= *(void *)(v32 + 24) >> 1)
          {
            sub_1C64A2788();
            uint64_t v32 = v77;
          }
          *(void *)(v32 + 16) = v36 + 1;
          *(unsigned char *)(v32 + v36 + 32) = v35;
          --v31;
        }
        while (v31);
        uint64_t v41 = sub_1C64EEC7C(v32, (void (*)(void))sub_1C64FB398, (uint64_t)&type metadata for SuggestionsOSType, (void (*)(char *, void))sub_1C64F2FD4);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1C64EB318(v76, v41);
        uint64_t v43 = v42;
        if (!*(void *)(v42 + 16))
        {
          swift_bridgeObjectRelease();
          if (qword_1EBBFC428 != -1) {
            swift_once();
          }
          uint64_t v56 = sub_1C65763A0();
          __swift_project_value_buffer(v56, (uint64_t)qword_1EBBFC278);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          os_log_type_t v57 = sub_1C6576380();
          os_log_type_t v58 = sub_1C6576A60();
          if (os_log_type_enabled(v57, v58))
          {
            uint64_t v59 = OUTLINED_FUNCTION_41_4();
            uint64_t v77 = swift_slowAlloc();
            *(_DWORD *)uint64_t v59 = 136315394;
            sub_1C64FB398();
            swift_bridgeObjectRetain();
            uint64_t v60 = sub_1C65769B0();
            unint64_t v62 = v61;
            swift_bridgeObjectRelease();
            uint64_t v79 = sub_1C64BCF18(v60, v62, &v77);
            sub_1C6576B40();
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease();
            *(_WORD *)(v59 + 12) = 2080;
            uint64_t v63 = swift_bridgeObjectRetain();
            uint64_t v64 = MEMORY[0x1C879EE80](v63, &type metadata for SuggestionsOSInfo);
            unint64_t v66 = v65;
            swift_bridgeObjectRelease();
            uint64_t v79 = sub_1C64BCF18(v64, v66, &v77);
            sub_1C6576B40();
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_1C6494000, v57, v58, "No required OS version for OS of current request: %s in %s", (uint8_t *)v59, 0x16u);
            swift_arrayDestroy();
            OUTLINED_FUNCTION_31_5();
            OUTLINED_FUNCTION_31_5();
          }
          else
          {

            swift_bridgeObjectRelease_n();
LABEL_100:
            swift_bridgeObjectRelease_n();
          }
          return 1;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v44 = sub_1C64F04B0(a3);
        if (!sub_1C64F0578(v44, a4))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return 0;
        }
        uint64_t v45 = *(void *)(v43 + 16);
        if (!v45)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return 1;
        }
        swift_bridgeObjectRetain();
        uint64_t v46 = (_OWORD *)(v43 + 40);
        while (1)
        {
          LOBYTE(v77) = *((unsigned char *)v46 - 8);
          long long v78 = *v46;
          if (!sub_1C64F06B4((uint64_t)&v77, a4, v44)) {
            break;
          }
          uint64_t v46 = (_OWORD *)((char *)v46 + 24);
          if (!--v45)
          {
            swift_bridgeObjectRelease();
            goto LABEL_100;
          }
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        return 0;
    }
  }
}

uint64_t InvocationTypePrerequisite.isValid(environment:)()
{
  return 0;
}

uint64_t sub_1C64F04B0(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F15C0);
  sub_1C64FB398();
  uint64_t v4 = sub_1C6576460();
  sub_1C64F0E88(a1, (uint64_t (*)(char *))sub_1C64FB3E4);
  uint64_t v2 = swift_bridgeObjectRetain();
  sub_1C64F1004(v2, (void (*)(char *, uint64_t))sub_1C64FB3EC);
  swift_bridgeObjectRelease();
  return v4;
}

BOOL sub_1C64F0578(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(v2 + 64) == 1)
  {
    LOBYTE(v9) = *(unsigned char *)(v2 + 112);
    long long v10 = *(_OWORD *)(v2 + 120);
    BOOL v3 = sub_1C64F06B4((uint64_t)&v9, a2, a1);
    if (qword_1EBBFC428 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_1C65763A0();
    __int16 v5 = OUTLINED_FUNCTION_14_4(v4, (uint64_t)qword_1EBBFC278);
    os_log_type_t v6 = sub_1C6576A50();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v7 = 67109120;
      int v9 = v3;
      sub_1C6576B40();
      _os_log_impl(&dword_1C6494000, v5, v6, "generalizedEngagementObserved is %{BOOL}d", v7, 8u);
      OUTLINED_FUNCTION_31_5();
    }
  }
  else
  {
    return 1;
  }
  return v3;
}

BOOL sub_1C64F06B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v5 = *(unsigned char *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  if (qword_1EBBFC428 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_1C65763A0();
  __swift_project_value_buffer(v8, (uint64_t)qword_1EBBFC278);
  int v9 = sub_1C6576380();
  os_log_type_t v10 = sub_1C6576A50();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v47 = a3;
    unint64_t v11 = (uint8_t *)OUTLINED_FUNCTION_12_3();
    uint64_t v12 = OUTLINED_FUNCTION_97_0();
    *(_DWORD *)unint64_t v11 = 136315138;
    *(void *)&long long v49 = v12;
    LOBYTE(v50) = v5;
    uint64_t v51 = v7;
    uint64_t v52 = v6;
    uint64_t v13 = SuggestionsOSInfo.description.getter();
    uint64_t v50 = sub_1C64BCF18(v13, v14, (uint64_t *)&v49);
    sub_1C6576B40();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C6494000, v9, v10, "isObservationMade called for requiredVersion - %s", v11, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_31_5();
    a3 = v47;
    OUTLINED_FUNCTION_31_5();
  }

  uint64_t v15 = sub_1C64EC01C(v5, a3);
  if (!v15) {
    goto LABEL_11;
  }
  uint64_t v16 = *(void *)(v15 + 16);
  if (!v16)
  {
LABEL_10:
    swift_bridgeObjectRelease();
LABEL_11:
    uint64_t v19 = (void *)sub_1C6576380();
    os_log_type_t v20 = sub_1C6576A40();
    if (OUTLINED_FUNCTION_36_2(v20))
    {
      uint64_t v21 = (_DWORD *)OUTLINED_FUNCTION_12_3();
      uint64_t v22 = OUTLINED_FUNCTION_97_0();
      *uint64_t v21 = 136315138;
      *(void *)&long long v49 = v22;
      uint64_t v23 = OUTLINED_FUNCTION_46_3();
      uint64_t v50 = OUTLINED_FUNCTION_43_4(v23, v24, v25, v26, v27, v28);
      sub_1C6576B40();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_48_3(&dword_1C6494000, v29, v30, "No recorded time for required OS for determining observation %s");
      swift_arrayDestroy();
      OUTLINED_FUNCTION_31_5();
      OUTLINED_FUNCTION_31_5();
    }

    return 0;
  }
  uint64_t v17 = (void *)(v15 + 48);
  while (1)
  {
    double v18 = *(double *)v17;
    uint64_t v50 = v7;
    uint64_t v51 = v6;
    long long v49 = *((_OWORD *)v17 - 1);
    if ((static SuggestionsOSVersion.< infix(_:_:)() & 1) == 0) {
      break;
    }
    v17 += 3;
    if (!--v16) {
      goto LABEL_10;
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v33 = v48[12];
  uint64_t v34 = v48[13];
  __swift_project_boxed_opaque_existential_1(v48 + 9, v33);
  double v35 = (*(double (**)(uint64_t, uint64_t))(v34 + 8))(v33, v34);
  BOOL v31 = sub_1C64F0AF4(v18, v35, (double)a2 * 86400.0);
  unint64_t v36 = sub_1C6576380();
  os_log_type_t v37 = sub_1C6576A50();
  if (os_log_type_enabled(v36, v37))
  {
    uint64_t v38 = OUTLINED_FUNCTION_41_4();
    *(void *)&long long v49 = swift_slowAlloc();
    *(_DWORD *)uint64_t v38 = 136315394;
    uint64_t v39 = OUTLINED_FUNCTION_46_3();
    uint64_t v50 = OUTLINED_FUNCTION_43_4(v39, v40, v41, v42, v43, v44);
    sub_1C6576B40();
    swift_bridgeObjectRelease();
    *(_WORD *)(v38 + 12) = 2080;
    if (v31) {
      uint64_t v45 = 0x646573736170;
    }
    else {
      uint64_t v45 = 0x7373617020746F6ELL;
    }
    if (v31) {
      unint64_t v46 = 0xE600000000000000;
    }
    else {
      unint64_t v46 = 0xEA00000000006465;
    }
    uint64_t v50 = sub_1C64BCF18(v45, v46, (uint64_t *)&v49);
    sub_1C6576B40();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C6494000, v36, v37, "for %s - enough observation duration has %s", (uint8_t *)v38, 0x16u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_31_5();
    OUTLINED_FUNCTION_31_5();
  }

  return v31;
}

BOOL sub_1C64F0AF4(double a1, double a2, double a3)
{
  uint64_t v4 = sub_1C6576190();
  OUTLINED_FUNCTION_0_2();
  uint64_t v6 = v5;
  uint64_t v8 = MEMORY[0x1F4188790](v7);
  os_log_type_t v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v21 - v11;
  sub_1C6576130();
  sub_1C6576130();
  sub_1C6576150();
  double v14 = v13;
  uint64_t v15 = *(void (**)(char *, uint64_t))(v6 + 8);
  v15(v10, v4);
  v15(v12, v4);
  if (qword_1EBBFC428 != -1) {
    swift_once();
  }
  uint64_t v16 = sub_1C65763A0();
  uint64_t v17 = OUTLINED_FUNCTION_14_4(v16, (uint64_t)qword_1EBBFC278);
  os_log_type_t v18 = sub_1C6576A50();
  if (OUTLINED_FUNCTION_20_5(v18))
  {
    uint64_t v19 = OUTLINED_FUNCTION_41_4();
    *(_DWORD *)uint64_t v19 = 134218240;
    double v22 = v14;
    sub_1C6576B40();
    *(_WORD *)(v19 + 12) = 2048;
    double v22 = a3;
    sub_1C6576B40();
    _os_log_impl(&dword_1C6494000, v17, (os_log_type_t)v12, "observed duration from install date to now: %f. Required minimum duration: %f", (uint8_t *)v19, 0x16u);
    OUTLINED_FUNCTION_31_5();
  }

  return v14 >= a3;
}

uint64_t sub_1C64F0CE8(uint64_t a1, uint64_t *a2, double a3)
{
  char v4 = *(unsigned char *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v7 = sub_1C64EC01C(*(unsigned char *)a1, *a2);
  swift_bridgeObjectRelease();
  if (v7)
  {
    uint64_t v9 = sub_1C64F0DE8(v16, v4);
    if (*v8)
    {
      os_log_type_t v10 = v8;
      sub_1C653D600();
      uint64_t v11 = *(void *)(*v10 + 16);
      sub_1C65289B4(v11);
      uint64_t v12 = *v10;
      *(void *)(v12 + 16) = v11 + 1;
      uint64_t v13 = v12 + 24 * v11;
      *(void *)(v13 + 32) = v6;
      *(void *)(v13 + 40) = v5;
      *(double *)(v13 + 48) = a3;
    }
    return ((uint64_t (*)(void *, void))v9)(v16, 0);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F06C8);
    uint64_t v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_1C6577AD0;
    *(void *)(v15 + 32) = v6;
    *(void *)(v15 + 40) = v5;
    *(double *)(v15 + 48) = a3;
    return sub_1C6562798(v15, v4);
  }
}

void (*sub_1C64F0DE8(void *a1, char a2))(void **a1)
{
  char v4 = malloc(0x28uLL);
  *a1 = v4;
  v4[4] = sub_1C64FA5DC(v4, a2);
  return sub_1C64F0E48;
}

void sub_1C64F0E48(void **a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = OUTLINED_FUNCTION_44_2();
  v3(v2);

  free(v1);
}

uint64_t sub_1C64F0E88(uint64_t a1, uint64_t (*a2)(char *))
{
  sub_1C656374C(a1, v20);
  uint64_t v3 = v20[0];
  uint64_t v4 = v20[1];
  int64_t v5 = v20[3];
  unint64_t v6 = v20[4];
  int64_t v7 = (unint64_t)(v20[2] + 64) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  if (!v6) {
    goto LABEL_3;
  }
LABEL_2:
  unint64_t v9 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  unint64_t v10 = v9 | (v5 << 6);
  while (1)
  {
    uint64_t v15 = *(void *)(v3 + 48) + 24 * v10;
    uint64_t v16 = *(void *)(*(void *)(v3 + 56) + 8 * v10);
    v17[0] = *(unsigned char *)v15;
    long long v18 = *(_OWORD *)(v15 + 8);
    uint64_t v19 = v16;
    uint64_t result = a2(v17);
    if (v6) {
      goto LABEL_2;
    }
LABEL_3:
    int64_t v11 = v5 + 1;
    if (__OFADD__(v5, 1)) {
      break;
    }
    if (v11 >= v7) {
      return swift_release();
    }
    unint64_t v12 = *(void *)(v4 + 8 * v11);
    int64_t v13 = v5 + 1;
    if (!v12)
    {
      int64_t v13 = v5 + 2;
      if (v5 + 2 >= v7) {
        return swift_release();
      }
      unint64_t v12 = *(void *)(v4 + 8 * v13);
      if (!v12)
      {
        int64_t v13 = v5 + 3;
        if (v5 + 3 >= v7) {
          return swift_release();
        }
        unint64_t v12 = *(void *)(v4 + 8 * v13);
        if (!v12)
        {
          int64_t v13 = v5 + 4;
          if (v5 + 4 >= v7) {
            return swift_release();
          }
          unint64_t v12 = *(void *)(v4 + 8 * v13);
          if (!v12)
          {
            int64_t v13 = v5 + 5;
            if (v5 + 5 >= v7) {
              return swift_release();
            }
            unint64_t v12 = *(void *)(v4 + 8 * v13);
            if (!v12)
            {
              int64_t v14 = v5 + 6;
              while (v14 < v7)
              {
                unint64_t v12 = *(void *)(v4 + 8 * v14++);
                if (v12)
                {
                  int64_t v13 = v14 - 1;
                  goto LABEL_18;
                }
              }
              return swift_release();
            }
          }
        }
      }
    }
LABEL_18:
    unint64_t v6 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v13 << 6);
    int64_t v5 = v13;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C64F1004(uint64_t a1, void (*a2)(char *, uint64_t))
{
  sub_1C656374C(a1, v18);
  uint64_t v3 = v18[0];
  uint64_t v4 = v18[1];
  int64_t v5 = v18[3];
  unint64_t v6 = v18[4];
  int64_t v7 = (unint64_t)(v18[2] + 64) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  if (!v6) {
    goto LABEL_3;
  }
LABEL_2:
  unint64_t v9 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  unint64_t v10 = v9 | (v5 << 6);
  while (1)
  {
    uint64_t v15 = *(void *)(*(void *)(v3 + 56) + 8 * v10);
    v16[0] = *(unsigned char *)(*(void *)(v3 + 48) + v10);
    uint64_t v17 = v15;
    swift_bridgeObjectRetain();
    a2(v16, v15);
    uint64_t result = swift_bridgeObjectRelease();
    if (v6) {
      goto LABEL_2;
    }
LABEL_3:
    int64_t v11 = v5 + 1;
    if (__OFADD__(v5, 1)) {
      break;
    }
    if (v11 >= v7) {
      return swift_release();
    }
    unint64_t v12 = *(void *)(v4 + 8 * v11);
    int64_t v13 = v5 + 1;
    if (!v12)
    {
      int64_t v13 = v5 + 2;
      if (v5 + 2 >= v7) {
        return swift_release();
      }
      unint64_t v12 = *(void *)(v4 + 8 * v13);
      if (!v12)
      {
        int64_t v13 = v5 + 3;
        if (v5 + 3 >= v7) {
          return swift_release();
        }
        unint64_t v12 = *(void *)(v4 + 8 * v13);
        if (!v12)
        {
          int64_t v13 = v5 + 4;
          if (v5 + 4 >= v7) {
            return swift_release();
          }
          unint64_t v12 = *(void *)(v4 + 8 * v13);
          if (!v12)
          {
            int64_t v13 = v5 + 5;
            if (v5 + 5 >= v7) {
              return swift_release();
            }
            unint64_t v12 = *(void *)(v4 + 8 * v13);
            if (!v12)
            {
              int64_t v14 = v5 + 6;
              while (v14 < v7)
              {
                unint64_t v12 = *(void *)(v4 + 8 * v14++);
                if (v12)
                {
                  int64_t v13 = v14 - 1;
                  goto LABEL_18;
                }
              }
              return swift_release();
            }
          }
        }
      }
    }
LABEL_18:
    unint64_t v6 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v13 << 6);
    int64_t v5 = v13;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C64F1184(char *a1, uint64_t a2)
{
  char v2 = *a1;
  uint64_t v4 = a2;
  swift_bridgeObjectRetain();
  sub_1C64F1F60(&v4);
  return sub_1C6562798(v4, v2);
}

uint64_t InvocationTypePrerequisite.deinit()
{
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  __swift_destroy_boxed_opaque_existential_1(v0 + 72);
  return v0;
}

uint64_t InvocationTypePrerequisite.__deallocating_deinit()
{
  InvocationTypePrerequisite.deinit();

  return MEMORY[0x1F4186488](v0, 136, 7);
}

#error "1C64F1260: call analysis failed (funcsize=10)"

uint64_t sub_1C64F1274(uint64_t a1, unsigned __int16 *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1C64F1C34(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, unsigned char *))sub_1C64EC864);
}

unint64_t sub_1C64F128C()
{
  return InvocationTypePrerequisite.description.getter();
}

void DeliveryVehiclePrerequisite.description.getter()
{
  OUTLINED_FUNCTION_16_7();
  sub_1C6576C60();
  sub_1C6576620();
  swift_bridgeObjectRelease();
  sub_1C6576620();
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (*(void *)(v1 + 16))
  {
    uint64_t v15 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_1C64A2210();
    uint64_t v2 = v15;
    int64_t v3 = sub_1C64FA9B8(v1);
    uint64_t v5 = v4;
    char v7 = v6 & 1;
    while ((v3 & 0x8000000000000000) == 0 && v3 < 1 << *(unsigned char *)(v1 + 32))
    {
      if (((*(void *)(v1 + 56 + (((unint64_t)v3 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v3) & 1) == 0) {
        goto LABEL_14;
      }
      if (*(_DWORD *)(v1 + 36) != v5) {
        goto LABEL_15;
      }
      uint64_t v8 = DeliveryVehicle.rawValue.getter();
      uint64_t v10 = v9;
      unint64_t v11 = *(void *)(v2 + 16);
      uint64_t v12 = v2;
      if (v11 >= *(void *)(v2 + 24) >> 1)
      {
        sub_1C64A2210();
        uint64_t v12 = v2;
      }
      *(void *)(v12 + 16) = v11 + 1;
      uint64_t v13 = v12 + 16 * v11;
      *(void *)(v13 + 32) = v8;
      *(void *)(v13 + 40) = v10;
      sub_1C64FA8D4(v3, v5, v7 & 1, v1);
      OUTLINED_FUNCTION_49_3();
      uint64_t v2 = v12;
      if (v14)
      {
        sub_1C64E7578(v3, v5, v7);
        swift_bridgeObjectRelease();
        goto LABEL_12;
      }
    }
    __break(1u);
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
  }
  else
  {
LABEL_12:
    MEMORY[0x1C879EE80](v2, MEMORY[0x1E4FBB1A0]);
    sub_1C6576620();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_15_4();
  }
}

void DeliveryVehiclePrerequisite.isValid(environment:invocationType:deliveryVehicle:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, __int16 a14, char a15, BOOL a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33)
{
  OUTLINED_FUNCTION_16_7();
  a32 = v35;
  a33 = v36;
  uint64_t v37 = v33;
  sub_1C649FB10(v38, (uint64_t)&a17);
  unsigned __int8 v39 = *(unsigned char *)(v33 + 24);
  a16 = ((v39 ^ sub_1C64EE250((uint64_t)&a17, *(void *)(v37 + 16))) & 1) == 0;
  if (qword_1EBBFC428 != -1) {
    swift_once();
  }
  uint64_t v40 = sub_1C65763A0();
  __swift_project_value_buffer(v40, (uint64_t)qword_1EBBFC278);
  swift_retain_n();
  uint64_t v41 = sub_1C6576380();
  os_log_type_t v42 = sub_1C6576A50();
  if (OUTLINED_FUNCTION_36_2(v42))
  {
    uint64_t v43 = swift_slowAlloc();
    a10 = OUTLINED_FUNCTION_97_0();
    *(_DWORD *)uint64_t v43 = 136315394;
    DeliveryVehiclePrerequisite.description.getter();
    sub_1C64BCF18(v44, v45, &a10);
    sub_1C6576B40();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v43 + 12) = 1024;
    sub_1C6576B40();
    _os_log_impl(&dword_1C6494000, v41, v34, "DeliveryVehicle Prerequisite %s result: %{BOOL}d", (uint8_t *)v43, 0x12u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_31_5();
    OUTLINED_FUNCTION_31_5();
  }
  else
  {

    swift_release_n();
  }
  swift_beginAccess();
  OUTLINED_FUNCTION_15_4();
}

uint64_t sub_1C64F16B4(uint64_t a1)
{
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186488](v1, a1, 7);
}

uint64_t sub_1C64F16F8()
{
  return sub_1C649ED28() & 1;
}

#error "1C64F1738: call analysis failed (funcsize=10)"

void sub_1C64F174C()
{
}

uint64_t ShouldBeEnabledFromConfigPrerequisite.description.getter()
{
  OUTLINED_FUNCTION_45_4();
  sub_1C6576C60();
  sub_1C6576620();
  swift_bridgeObjectRetain();
  sub_1C6576620();
  swift_bridgeObjectRelease();
  sub_1C6576620();
  return v1;
}

uint64_t ShouldBeEnabledFromConfigPrerequisite.__allocating_init(suggestionId:)(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_32_6();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = a2;
  return result;
}

uint64_t ShouldBeEnabledFromConfigPrerequisite.init(suggestionId:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return OUTLINED_FUNCTION_27_4();
}

uint64_t ShouldBeEnabledFromConfigPrerequisite.isValid(environment:)(uint64_t a1)
{
  uint64_t v2 = v1;
  sub_1C649FA30(a1, (uint64_t)v21);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F1578);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F1580);
  if (!swift_dynamicCast())
  {
    uint64_t v24 = 0;
    long long v22 = 0u;
    long long v23 = 0u;
    sub_1C64FABEC((uint64_t)&v22);
    goto LABEL_9;
  }
  uint64_t v3 = *((void *)&v23 + 1);
  uint64_t v4 = v24;
  __swift_project_boxed_opaque_existential_1(&v22, *((uint64_t *)&v23 + 1));
  (*(void (**)(uint64_t *__return_ptr, void, void, uint64_t, uint64_t))(v4 + 8))(v20, *(void *)(v1 + 16), *(void *)(v1 + 24), v3, v4);
  uint64_t v5 = v20[0];
  uint64_t v6 = v20[1];
  uint64_t v7 = v20[2];
  uint64_t v8 = v20[3];
  uint64_t v9 = v20[4];
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v22);
  if (!v6)
  {
LABEL_9:
    if (qword_1EBBFC428 != -1) {
      swift_once();
    }
    uint64_t v13 = sub_1C65763A0();
    __swift_project_value_buffer(v13, (uint64_t)qword_1EBBFC278);
    swift_retain();
    char v14 = sub_1C6576380();
    os_log_type_t v15 = sub_1C6576A50();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      v20[0] = OUTLINED_FUNCTION_97_0();
      *(_DWORD *)uint64_t v16 = 136315138;
      uint64_t v17 = *(void *)(v2 + 16);
      unint64_t v18 = *(void *)(v2 + 24);
      swift_bridgeObjectRetain();
      *(void *)&long long v22 = sub_1C64BCF18(v17, v18, v20);
      sub_1C6576B40();
      swift_release();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C6494000, v14, v15, "suggestion - %s has onlyEnableFromConfig set but config file is missing - considering the pre-requisite not met", v16, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_31_5();
      OUTLINED_FUNCTION_31_5();
    }
    else
    {

      swift_release();
    }
    goto LABEL_14;
  }
  sub_1C64FAC4C(v5, v6, v7, v8, v9);
  if (v7 == 3)
  {
LABEL_14:
    char v12 = 0;
    return v12 & 1;
  }
  int v10 = v7;
  if (!(_BYTE)v7) {
    goto LABEL_16;
  }
  char v11 = sub_1C6577090();
  swift_bridgeObjectRelease();
  if (v11)
  {
LABEL_17:
    char v12 = 1;
    return v12 & 1;
  }
  if (v10 != 2)
  {
LABEL_16:
    swift_bridgeObjectRelease();
    goto LABEL_17;
  }
  char v12 = sub_1C6577090();
  swift_bridgeObjectRelease();
  return v12 & 1;
}

uint64_t _s18SiriSuggestionsKit16NoOpPrerequisiteCfD_0()
{
  swift_bridgeObjectRelease();
  uint64_t v0 = OUTLINED_FUNCTION_32_6();

  return MEMORY[0x1F4186488](v0, v1, v2);
}

uint64_t sub_1C64F1BC8(uint64_t a1)
{
  return ShouldBeEnabledFromConfigPrerequisite.isValid(environment:)(a1) & 1;
}

uint64_t sub_1C64F1BF0(uint64_t a1, unsigned __int16 *a2)
{
  return j___s18SiriSuggestionsKit37ShouldBeEnabledFromConfigPrerequisiteC7isValid11environmentSbAA19EnvironmentSnapshot_p_tF(a1, *a2) & 1;
}

uint64_t sub_1C64F1C1C(uint64_t a1, unsigned __int16 *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1C64F1C34(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, unsigned char *))j___s18SiriSuggestionsKit37ShouldBeEnabledFromConfigPrerequisiteC7isValid11environmentSbAA19EnvironmentSnapshot_p_tF);
}

uint64_t sub_1C64F1C34(uint64_t a1, unsigned __int16 *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t, uint64_t, unsigned char *))
{
  uint64_t v8 = *a2;
  sub_1C649FB10(a3, (uint64_t)v10);
  return a6(a1, v8, v10) & 1;
}

uint64_t sub_1C64F1C94()
{
  return ShouldBeEnabledFromConfigPrerequisite.description.getter();
}

void *sub_1C64F1CB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void *))
{
  if (!*(void *)(a2 + 16)) {
    return &unk_1F2157B98;
  }
  sub_1C64EB6AC(a2, a4);
  sub_1C651974C();
  uint64_t v5 = v4;
  swift_bridgeObjectRelease();
  return (void *)v5;
}

uint64_t sub_1C64F1D50(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(void *))
{
  sub_1C64F1CB8(a3, a4, a5, a6);
  uint64_t v8 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v8 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v8)
  {
    swift_bridgeObjectRetain();
    sub_1C6576620();
    uint64_t v9 = a1;
  }
  else
  {
    uint64_t v9 = 0;
  }
  __swift_instantiateConcreteTypeFromMangledName(qword_1EBBFC1F0);
  sub_1C64A7A58();
  sub_1C6576520();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1C6576620();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_1C64F1E58()
{
  return sub_1C64F1EB4(&qword_1EBBFB7E8);
}

uint64_t sub_1C64F1E64()
{
  swift_arrayDestroy();

  return MEMORY[0x1F4186488](v0, 32, 7);
}

uint64_t sub_1C64F1EA8()
{
  return sub_1C64F1EB4(&qword_1EBBFA540);
}

uint64_t sub_1C64F1EB4(uint64_t *a1)
{
  __swift_instantiateConcreteTypeFromMangledName(a1);
  swift_arrayDestroy();
  uint64_t v1 = OUTLINED_FUNCTION_32_6();

  return MEMORY[0x1F4186488](v1, v2, v3);
}

uint64_t sub_1C64F1F08@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = a1();
  *a2 = result;
  return result;
}

uint64_t sub_1C64F1F38@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C64ECFD4(a1, *(void *)(v2 + 16), *(_WORD *)(v2 + 24), *(void *)(v2 + 32), a2);
}

uint64_t sub_1C64F1F60(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_1C65232F0();
    uint64_t v2 = v3;
  }
  uint64_t v4 = *(void *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  uint64_t result = sub_1C64F1FCC(v6);
  *a1 = v2;
  return result;
}

uint64_t sub_1C64F1FCC(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_1C6577030();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_147;
    }
    if (v3) {
      return sub_1C64F28A4(0, v3, 1, a1);
    }
    return result;
  }
  uint64_t v100 = result;
  uint64_t result = sub_1C654AC74(v3 / 2);
  v98 = a1;
  uint64_t v99 = result;
  v106 = v5;
  uint64_t v103 = v3;
  if (v3 <= 0) {
    goto LABEL_111;
  }
  uint64_t v6 = 0;
  uint64_t v7 = MEMORY[0x1E4FBC860];
  uint64_t v97 = *a1 - 24;
  uint64_t v108 = *a1;
  while (1)
  {
    uint64_t v101 = v7;
    uint64_t v104 = v6;
    if (v6 + 1 >= v3)
    {
      ++v6;
      goto LABEL_31;
    }
    uint64_t result = static SuggestionsOSVersion.< infix(_:_:)();
    int v113 = result;
    uint64_t v8 = v6 + 2;
    if (v6 + 2 < v3)
    {
      while (1)
      {
        while (1)
        {
          *(void *)&long long v109 = sub_1C6577040();
          *((void *)&v109 + 1) = v9;
          sub_1C6576620();
          sub_1C6577040();
          sub_1C6576620();
          swift_bridgeObjectRelease();
          long long v10 = v109;
          *(void *)&long long v109 = sub_1C6577040();
          uint64_t v111 = v11;
          sub_1C6576620();
          sub_1C6577040();
          sub_1C6576620();
          swift_bridgeObjectRelease();
          if ((void)v10 == (void)v109 && *((void *)&v10 + 1) == v111) {
            break;
          }
          int v13 = sub_1C6577090();
          swift_bridgeObjectRelease();
          uint64_t result = swift_bridgeObjectRelease();
          if ((v113 ^ v13))
          {
            uint64_t v6 = v8;
            uint64_t v3 = v103;
            goto LABEL_19;
          }
          uint64_t v6 = v8 + 1;
          uint64_t v8 = v6;
          uint64_t v3 = v103;
          uint64_t v14 = v108;
          if (v6 >= v103) {
            goto LABEL_20;
          }
        }
        uint64_t result = swift_bridgeObjectRelease_n();
        if (v113) {
          break;
        }
        uint64_t v6 = v8 + 1;
        uint64_t v8 = v6;
        uint64_t v3 = v103;
        if (v6 >= v103) {
          goto LABEL_31;
        }
      }
      uint64_t v3 = v103;
      uint64_t v14 = v108;
LABEL_23:
      uint64_t v15 = v104;
      if (v8 < v104) {
        goto LABEL_148;
      }
      if (v104 < v8)
      {
        uint64_t v16 = 24 * v8;
        uint64_t v17 = 24 * v104;
        uint64_t v18 = v8;
        do
        {
          if (v15 != --v18)
          {
            if (!v14) {
              goto LABEL_154;
            }
            uint64_t v19 = v14 + v17;
            uint64_t v20 = v14 + v16;
            uint64_t v21 = *(void *)(v14 + v17 + 16);
            long long v22 = *(_OWORD *)(v14 + v17);
            uint64_t v23 = *(void *)(v14 + v16 - 8);
            *(_OWORD *)uint64_t v19 = *(_OWORD *)(v14 + v16 - 24);
            *(void *)(v19 + 16) = v23;
            *(_OWORD *)(v20 - 24) = v22;
            *(void *)(v20 - 8) = v21;
          }
          ++v15;
          v16 -= 24;
          v17 += 24;
        }
        while (v15 < v18);
      }
      uint64_t v6 = v8;
      goto LABEL_31;
    }
    v6 += 2;
LABEL_19:
    uint64_t v14 = v108;
LABEL_20:
    uint64_t v8 = v6;
    if (v113) {
      goto LABEL_23;
    }
LABEL_31:
    if (v6 >= v3)
    {
      uint64_t result = v101;
      uint64_t v24 = v104;
    }
    else
    {
      uint64_t v24 = v104;
      uint64_t result = v101;
      if (__OFSUB__(v6, v104)) {
        goto LABEL_146;
      }
      if (v6 - v104 < v100)
      {
        if (__OFADD__(v104, v100)) {
          goto LABEL_149;
        }
        if (v104 + v100 >= v3) {
          uint64_t v25 = v3;
        }
        else {
          uint64_t v25 = v104 + v100;
        }
        if (v25 < v104)
        {
LABEL_150:
          __break(1u);
          goto LABEL_151;
        }
        if (v6 != v25)
        {
          uint64_t v26 = v97 + 24 * v6;
          uint64_t v102 = v25;
          do
          {
            uint64_t v27 = v24;
            uint64_t v105 = v26;
            uint64_t v107 = v6;
            while (1)
            {
              *(void *)&long long v110 = sub_1C6577040();
              *((void *)&v110 + 1) = v28;
              sub_1C6576620();
              sub_1C6577040();
              sub_1C6576620();
              swift_bridgeObjectRelease();
              long long v29 = v110;
              *(void *)&long long v110 = sub_1C6577040();
              uint64_t v112 = v30;
              sub_1C6576620();
              sub_1C6577040();
              sub_1C6576620();
              swift_bridgeObjectRelease();
              if ((void)v29 == (void)v110 && *((void *)&v29 + 1) == v112) {
                break;
              }
              char v32 = sub_1C6577090();
              swift_bridgeObjectRelease();
              uint64_t result = swift_bridgeObjectRelease();
              if ((v32 & 1) == 0) {
                goto LABEL_51;
              }
              uint64_t v33 = v107;
              if (!v108) {
                goto LABEL_152;
              }
              uint64_t v34 = *(void *)(v26 + 24);
              uint64_t v35 = *(void *)(v26 + 32);
              uint64_t v36 = *(void *)(v26 + 40);
              uint64_t v37 = *(void *)(v26 + 16);
              *(_OWORD *)(v26 + 24) = *(_OWORD *)v26;
              *(void *)(v26 + 40) = v37;
              *(void *)uint64_t v26 = v34;
              *(void *)(v26 + 8) = v35;
              *(void *)(v26 + 16) = v36;
              v26 -= 24;
              if (v107 == ++v27) {
                goto LABEL_52;
              }
            }
            swift_bridgeObjectRelease_n();
LABEL_51:
            uint64_t v33 = v107;
LABEL_52:
            uint64_t v6 = v33 + 1;
            uint64_t v24 = v104;
            uint64_t v26 = v105 + 24;
          }
          while (v6 != v102);
          uint64_t v6 = v102;
          uint64_t result = v101;
        }
      }
    }
    if (v6 < v24) {
      goto LABEL_145;
    }
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if (result)
    {
      uint64_t v7 = v101;
    }
    else
    {
      uint64_t result = (uint64_t)sub_1C6520DB4(0, *(void *)(v101 + 16) + 1, 1, (char *)v101);
      uint64_t v7 = result;
    }
    unint64_t v39 = *(void *)(v7 + 16);
    unint64_t v38 = *(void *)(v7 + 24);
    unint64_t v40 = v39 + 1;
    uint64_t v41 = v108;
    if (v39 >= v38 >> 1)
    {
      uint64_t result = (uint64_t)sub_1C6520DB4((char *)(v38 > 1), v39 + 1, 1, (char *)v7);
      uint64_t v41 = v108;
      uint64_t v7 = result;
    }
    *(void *)(v7 + 16) = v40;
    uint64_t v42 = v7 + 32;
    uint64_t v43 = (uint64_t *)(v7 + 32 + 16 * v39);
    *uint64_t v43 = v24;
    v43[1] = v6;
    if (v39) {
      break;
    }
    unint64_t v40 = 1;
LABEL_103:
    uint64_t v3 = v103;
    if (v6 >= v103) {
      goto LABEL_112;
    }
  }
  while (1)
  {
    unint64_t v44 = v40 - 1;
    if (v40 >= 4)
    {
      unint64_t v49 = v42 + 16 * v40;
      uint64_t v50 = *(void *)(v49 - 64);
      uint64_t v51 = *(void *)(v49 - 56);
      BOOL v55 = __OFSUB__(v51, v50);
      uint64_t v52 = v51 - v50;
      if (v55) {
        goto LABEL_130;
      }
      uint64_t v54 = *(void *)(v49 - 48);
      uint64_t v53 = *(void *)(v49 - 40);
      BOOL v55 = __OFSUB__(v53, v54);
      uint64_t v47 = v53 - v54;
      char v48 = v55;
      if (v55) {
        goto LABEL_131;
      }
      unint64_t v56 = v40 - 2;
      os_log_type_t v57 = (uint64_t *)(v42 + 16 * (v40 - 2));
      uint64_t v59 = *v57;
      uint64_t v58 = v57[1];
      BOOL v55 = __OFSUB__(v58, v59);
      uint64_t v60 = v58 - v59;
      if (v55) {
        goto LABEL_132;
      }
      BOOL v55 = __OFADD__(v47, v60);
      uint64_t v61 = v47 + v60;
      if (v55) {
        goto LABEL_134;
      }
      if (v61 >= v52)
      {
        uint64_t v79 = (uint64_t *)(v42 + 16 * v44);
        uint64_t v81 = *v79;
        uint64_t v80 = v79[1];
        BOOL v55 = __OFSUB__(v80, v81);
        uint64_t v82 = v80 - v81;
        if (v55) {
          goto LABEL_140;
        }
        BOOL v72 = v47 < v82;
        goto LABEL_92;
      }
    }
    else
    {
      if (v40 != 3)
      {
        uint64_t v73 = *(void *)(v7 + 32);
        uint64_t v74 = *(void *)(v7 + 40);
        BOOL v55 = __OFSUB__(v74, v73);
        uint64_t v66 = v74 - v73;
        char v67 = v55;
        goto LABEL_86;
      }
      uint64_t v46 = *(void *)(v7 + 32);
      uint64_t v45 = *(void *)(v7 + 40);
      BOOL v55 = __OFSUB__(v45, v46);
      uint64_t v47 = v45 - v46;
      char v48 = v55;
    }
    if (v48) {
      goto LABEL_133;
    }
    unint64_t v56 = v40 - 2;
    unint64_t v62 = (uint64_t *)(v42 + 16 * (v40 - 2));
    uint64_t v64 = *v62;
    uint64_t v63 = v62[1];
    BOOL v65 = __OFSUB__(v63, v64);
    uint64_t v66 = v63 - v64;
    char v67 = v65;
    if (v65) {
      goto LABEL_135;
    }
    uint64_t v68 = (uint64_t *)(v42 + 16 * v44);
    uint64_t v70 = *v68;
    uint64_t v69 = v68[1];
    BOOL v55 = __OFSUB__(v69, v70);
    uint64_t v71 = v69 - v70;
    if (v55) {
      goto LABEL_137;
    }
    if (__OFADD__(v66, v71)) {
      goto LABEL_139;
    }
    if (v66 + v71 >= v47)
    {
      BOOL v72 = v47 < v71;
LABEL_92:
      if (v72) {
        unint64_t v44 = v56;
      }
      goto LABEL_94;
    }
LABEL_86:
    if (v67) {
      goto LABEL_136;
    }
    int v75 = (uint64_t *)(v42 + 16 * v44);
    uint64_t v77 = *v75;
    uint64_t v76 = v75[1];
    BOOL v55 = __OFSUB__(v76, v77);
    uint64_t v78 = v76 - v77;
    if (v55) {
      goto LABEL_138;
    }
    if (v78 < v66) {
      goto LABEL_103;
    }
LABEL_94:
    unint64_t v83 = v44 - 1;
    if (v44 - 1 >= v40)
    {
      __break(1u);
LABEL_127:
      __break(1u);
LABEL_128:
      __break(1u);
LABEL_129:
      __break(1u);
LABEL_130:
      __break(1u);
LABEL_131:
      __break(1u);
LABEL_132:
      __break(1u);
LABEL_133:
      __break(1u);
LABEL_134:
      __break(1u);
LABEL_135:
      __break(1u);
LABEL_136:
      __break(1u);
LABEL_137:
      __break(1u);
LABEL_138:
      __break(1u);
LABEL_139:
      __break(1u);
LABEL_140:
      __break(1u);
      goto LABEL_141;
    }
    if (!v41) {
      goto LABEL_153;
    }
    uint64_t v84 = v7;
    unint64_t v85 = (uint64_t *)(v42 + 16 * v83);
    uint64_t v86 = *v85;
    uint64_t v87 = (void *)(v42 + 16 * v44);
    uint64_t v88 = v87[1];
    uint64_t result = sub_1C64F2A98((char *)(v41 + 24 * *v85), (char *)(v41 + 24 * *v87), v41 + 24 * v88, v106);
    if (v1) {
      break;
    }
    if (v88 < v86) {
      goto LABEL_127;
    }
    if (v44 > *(void *)(v84 + 16)) {
      goto LABEL_128;
    }
    *unint64_t v85 = v86;
    *(void *)(v42 + 16 * v83 + 8) = v88;
    unint64_t v89 = *(void *)(v84 + 16);
    if (v44 >= v89) {
      goto LABEL_129;
    }
    unint64_t v40 = v89 - 1;
    uint64_t result = (uint64_t)memmove((void *)(v42 + 16 * v44), v87 + 2, 16 * (v89 - 1 - v44));
    uint64_t v7 = v84;
    *(void *)(v84 + 16) = v89 - 1;
    uint64_t v41 = v108;
    if (v89 <= 2) {
      goto LABEL_103;
    }
  }
LABEL_109:
  uint64_t result = swift_bridgeObjectRelease();
  if (v103 >= -1) {
    goto LABEL_124;
  }
  __break(1u);
LABEL_111:
  uint64_t v7 = MEMORY[0x1E4FBC860];
  unint64_t v40 = *(void *)(MEMORY[0x1E4FBC860] + 16);
LABEL_112:
  if (v40 >= 2)
  {
    uint64_t v90 = *v98;
    while (1)
    {
      unint64_t v91 = v40 - 2;
      if (v40 < 2) {
        break;
      }
      if (!v90) {
        goto LABEL_155;
      }
      uint64_t v92 = v7;
      uint64_t v93 = *(void *)(v7 + 32 + 16 * v91);
      uint64_t v94 = *(void *)(v7 + 32 + 16 * (v40 - 1) + 8);
      uint64_t result = sub_1C64F2A98((char *)(v90 + 24 * v93), (char *)(v90 + 24 * *(void *)(v7 + 32 + 16 * (v40 - 1))), v90 + 24 * v94, v106);
      if (v1) {
        goto LABEL_109;
      }
      if (v94 < v93) {
        goto LABEL_142;
      }
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_1C6520EAC(v92);
        uint64_t v92 = result;
      }
      if (v91 >= *(void *)(v92 + 16)) {
        goto LABEL_143;
      }
      uint64_t v95 = (void *)(v92 + 32 + 16 * v91);
      *uint64_t v95 = v93;
      v95[1] = v94;
      unint64_t v96 = *(void *)(v92 + 16);
      if (v40 > v96) {
        goto LABEL_144;
      }
      uint64_t result = (uint64_t)memmove((void *)(v92 + 32 + 16 * (v40 - 1)), (const void *)(v92 + 32 + 16 * v40), 16 * (v96 - v40));
      uint64_t v7 = v92;
      *(void *)(v92 + 16) = v96 - 1;
      unint64_t v40 = v96 - 1;
      if (v96 <= 2) {
        goto LABEL_123;
      }
    }
LABEL_141:
    __break(1u);
LABEL_142:
    __break(1u);
LABEL_143:
    __break(1u);
LABEL_144:
    __break(1u);
LABEL_145:
    __break(1u);
LABEL_146:
    __break(1u);
LABEL_147:
    __break(1u);
LABEL_148:
    __break(1u);
LABEL_149:
    __break(1u);
    goto LABEL_150;
  }
LABEL_123:
  uint64_t result = swift_bridgeObjectRelease();
  if (v103 >= -1)
  {
LABEL_124:
    *(void *)(v99 + 16) = 0;
    return swift_bridgeObjectRelease();
  }
LABEL_151:
  __break(1u);
LABEL_152:
  __break(1u);
LABEL_153:
  __break(1u);
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
  return result;
}

uint64_t sub_1C64F28A4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v18 = result;
  if (a3 != a2)
  {
    uint64_t v20 = *a4;
    uint64_t v4 = *a4 + 24 * a3 - 24;
    while (2)
    {
      uint64_t v5 = v18;
      uint64_t v19 = v4;
      uint64_t v21 = a3;
      while (1)
      {
        uint64_t v22 = sub_1C6577040();
        uint64_t v24 = v6;
        sub_1C6576620();
        sub_1C6577040();
        sub_1C6576620();
        swift_bridgeObjectRelease();
        uint64_t v8 = v22;
        uint64_t v7 = v24;
        uint64_t v23 = sub_1C6577040();
        uint64_t v25 = v9;
        sub_1C6576620();
        sub_1C6577040();
        sub_1C6576620();
        swift_bridgeObjectRelease();
        if (v8 == v23 && v7 == v25) {
          break;
        }
        char v11 = sub_1C6577090();
        swift_bridgeObjectRelease();
        uint64_t result = swift_bridgeObjectRelease();
        uint64_t v12 = v21;
        if (v11)
        {
          if (!v20)
          {
            __break(1u);
            return result;
          }
          uint64_t v13 = *(void *)(v4 + 24);
          uint64_t v14 = *(void *)(v4 + 32);
          uint64_t v15 = *(void *)(v4 + 40);
          uint64_t v16 = *(void *)(v4 + 16);
          *(_OWORD *)(v4 + 24) = *(_OWORD *)v4;
          *(void *)(v4 + 40) = v16;
          *(void *)uint64_t v4 = v13;
          *(void *)(v4 + 8) = v14;
          *(void *)(v4 + 16) = v15;
          v4 -= 24;
          if (v21 != ++v5) {
            continue;
          }
        }
        goto LABEL_13;
      }
      uint64_t result = swift_bridgeObjectRelease_n();
      uint64_t v12 = v21;
LABEL_13:
      a3 = v12 + 1;
      uint64_t v4 = v19 + 24;
      if (a3 != a2) {
        continue;
      }
      break;
    }
  }
  return result;
}

uint64_t sub_1C64F2A98(char *a1, char *a2, unint64_t a3, char *a4)
{
  uint64_t v4 = a4;
  uint64_t v6 = a2;
  uint64_t v7 = a1;
  uint64_t v8 = a2 - a1;
  uint64_t v9 = (a2 - a1) / 24;
  uint64_t v10 = a3 - (void)a2;
  uint64_t v11 = (uint64_t)(a3 - (void)a2) / 24;
  if (v9 >= v11)
  {
    sub_1C64AFFE8(a2, (uint64_t)(a3 - (void)a2) / 24, a4);
    uint64_t v12 = &v4[24 * v11];
    if (v7 >= v6 || v10 < 24) {
      goto LABEL_39;
    }
    unint64_t v19 = a3 - 24;
    while (1)
    {
      uint64_t v20 = v6 - 24;
      uint64_t v21 = (char *)(v19 + 24);
      if (static SuggestionsOSVersion.< infix(_:_:)())
      {
        BOOL v22 = v21 != v6 || v19 >= (unint64_t)v6;
        v6 -= 24;
        if (!v22) {
          goto LABEL_35;
        }
      }
      else
      {
        BOOL v23 = v21 != v12 || v19 >= (unint64_t)v12;
        uint64_t v20 = v12 - 24;
        v12 -= 24;
        if (!v23) {
          goto LABEL_35;
        }
      }
      long long v24 = *(_OWORD *)v20;
      *(void *)(v19 + 16) = *((void *)v20 + 2);
      *(_OWORD *)unint64_t v19 = v24;
LABEL_35:
      v19 -= 24;
      if (v6 <= v7 || v12 <= v4) {
        goto LABEL_39;
      }
    }
  }
  sub_1C64AFFE8(a1, (a2 - a1) / 24, a4);
  uint64_t v12 = &v4[24 * v9];
  if ((unint64_t)v6 < a3 && v8 >= 24)
  {
    while ((static SuggestionsOSVersion.< infix(_:_:)() & 1) == 0)
    {
      uint64_t v14 = v4;
      BOOL v15 = v7 == v4;
      v4 += 24;
      if (!v15) {
        goto LABEL_11;
      }
LABEL_12:
      v7 += 24;
      if (v4 >= v12 || (unint64_t)v6 >= a3) {
        goto LABEL_17;
      }
    }
    uint64_t v14 = v6;
    BOOL v15 = v7 == v6;
    v6 += 24;
    if (v15) {
      goto LABEL_12;
    }
LABEL_11:
    long long v16 = *(_OWORD *)v14;
    *((void *)v7 + 2) = *((void *)v14 + 2);
    *(_OWORD *)uint64_t v7 = v16;
    goto LABEL_12;
  }
LABEL_17:
  uint64_t v6 = v7;
LABEL_39:
  sub_1C64AFFE8(v4, (v12 - v4) / 24, v6);
  return 1;
}

uint64_t sub_1C64F2C58(unsigned char *a1, uint64_t a2)
{
  uint64_t v4 = *v2;
  sub_1C6577150();
  swift_bridgeObjectRetain();
  sub_1C649AF84();
  uint64_t v5 = sub_1C6577190();
  uint64_t v6 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v7 = v5 & ~v6;
  if ((*(void *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7))
  {
    uint64_t v8 = ~v6;
    while (1)
    {
      unint64_t v9 = 0xE600000000000000;
      uint64_t v10 = 0x656E6F685069;
      switch(*(unsigned char *)(*(void *)(v4 + 48) + v7))
      {
        case 1:
          uint64_t v10 = 0x72506E6F69736976;
          unint64_t v9 = 0xE90000000000006FLL;
          break;
        case 2:
          unint64_t v9 = 0xE400000000000000;
          uint64_t v10 = 1684099177;
          break;
        case 3:
          unint64_t v9 = 0xE700000000000000;
          uint64_t v10 = 0x79616C50726163;
          break;
        case 4:
          unint64_t v9 = 0xE500000000000000;
          uint64_t v10 = 0x6863746177;
          break;
        case 5:
          unint64_t v9 = 0xE700000000000000;
          uint64_t v10 = 0x5654656C707061;
          break;
        case 6:
          unint64_t v9 = 0xE700000000000000;
          uint64_t v10 = 0x646F70656D6F68;
          break;
        case 7:
          unint64_t v9 = 0xE300000000000000;
          uint64_t v10 = 6513005;
          break;
        case 8:
          unint64_t v9 = 0xE300000000000000;
          uint64_t v10 = 6582128;
          break;
        default:
          break;
      }
      unint64_t v11 = 0xE600000000000000;
      uint64_t v12 = 0x656E6F685069;
      switch((char)a2)
      {
        case 1:
          uint64_t v12 = 0x72506E6F69736976;
          unint64_t v11 = 0xE90000000000006FLL;
          break;
        case 2:
          unint64_t v11 = 0xE400000000000000;
          uint64_t v12 = 1684099177;
          break;
        case 3:
          unint64_t v11 = 0xE700000000000000;
          uint64_t v12 = 0x79616C50726163;
          break;
        case 4:
          unint64_t v11 = 0xE500000000000000;
          uint64_t v12 = 0x6863746177;
          break;
        case 5:
          unint64_t v11 = 0xE700000000000000;
          uint64_t v12 = 0x5654656C707061;
          break;
        case 6:
          unint64_t v11 = 0xE700000000000000;
          uint64_t v12 = 0x646F70656D6F68;
          break;
        case 7:
          unint64_t v11 = 0xE300000000000000;
          uint64_t v12 = 6513005;
          break;
        case 8:
          unint64_t v11 = 0xE300000000000000;
          uint64_t v12 = 6582128;
          break;
        default:
          break;
      }
      if (v10 == v12 && v9 == v11) {
        break;
      }
      char v14 = sub_1C6577090();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v14) {
        goto LABEL_29;
      }
      unint64_t v7 = (v7 + 1) & v8;
      if (((*(void *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
        goto LABEL_27;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_29:
    swift_bridgeObjectRelease();
    uint64_t result = 0;
    LOBYTE(a2) = *(unsigned char *)(*(void *)(*v2 + 48) + v7);
  }
  else
  {
LABEL_27:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v18 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    sub_1C64F5D44(a2, v7, isUniquelyReferenced_nonNull_native);
    *uint64_t v2 = v18;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
  }
  *a1 = a2;
  return result;
}

uint64_t sub_1C64F2FD4(unsigned char *a1, uint64_t a2)
{
  uint64_t v4 = *v2;
  sub_1C6577150();
  swift_bridgeObjectRetain();
  sub_1C649B1A8((uint64_t)v18, a2);
  uint64_t v5 = sub_1C6577190();
  uint64_t v6 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v7 = v5 & ~v6;
  if ((*(void *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7))
  {
    uint64_t v8 = ~v6;
    while (1)
    {
      unint64_t v9 = 0xE300000000000000;
      uint64_t v10 = 5459817;
      switch(*(unsigned char *)(*(void *)(v4 + 48) + v7))
      {
        case 1:
          unint64_t v9 = 0xE500000000000000;
          uint64_t v10 = 0x534F63616DLL;
          break;
        case 2:
          unint64_t v9 = 0xE400000000000000;
          uint64_t v10 = 1397716596;
          break;
        case 3:
          unint64_t v9 = 0xE700000000000000;
          uint64_t v10 = 0x534F6863746177;
          break;
        case 4:
          unint64_t v9 = 0xE800000000000000;
          uint64_t v10 = 0x534F6E6F69736976;
          break;
        case 5:
          unint64_t v9 = 0xE700000000000000;
          uint64_t v10 = 0x6E776F6E6B6E75;
          break;
        default:
          break;
      }
      unint64_t v11 = 0xE300000000000000;
      uint64_t v12 = 5459817;
      switch((char)a2)
      {
        case 1:
          unint64_t v11 = 0xE500000000000000;
          uint64_t v12 = 0x534F63616DLL;
          break;
        case 2:
          unint64_t v11 = 0xE400000000000000;
          uint64_t v12 = 1397716596;
          break;
        case 3:
          unint64_t v11 = 0xE700000000000000;
          uint64_t v12 = 0x534F6863746177;
          break;
        case 4:
          unint64_t v11 = 0xE800000000000000;
          uint64_t v12 = 0x534F6E6F69736976;
          break;
        case 5:
          unint64_t v11 = 0xE700000000000000;
          uint64_t v12 = 0x6E776F6E6B6E75;
          break;
        default:
          break;
      }
      if (v10 == v12 && v9 == v11) {
        break;
      }
      char v14 = sub_1C6577090();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v14) {
        goto LABEL_23;
      }
      unint64_t v7 = (v7 + 1) & v8;
      if (((*(void *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
        goto LABEL_21;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_23:
    swift_bridgeObjectRelease();
    uint64_t result = 0;
    LOBYTE(a2) = *(unsigned char *)(*(void *)(*v2 + 48) + v7);
  }
  else
  {
LABEL_21:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v18[0] = *v2;
    *uint64_t v2 = 0x8000000000000000;
    sub_1C64F60D8(a2, v7, isUniquelyReferenced_nonNull_native);
    *uint64_t v2 = v18[0];
    swift_bridgeObjectRelease();
    uint64_t result = 1;
  }
  *a1 = a2;
  return result;
}

uint64_t sub_1C64F32B8(_WORD *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  sub_1C6577150();
  swift_bridgeObjectRetain();
  InvocationType.hash(into:)();
  uint64_t v7 = sub_1C6577190();
  uint64_t v8 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v9 = v7 & ~v8;
  char v32 = a1;
  if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_49:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v33 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_1C64F63D4(a2, v9, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v33;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_52;
  }
  uint64_t v10 = ~v8;
  uint64_t v11 = BYTE1(a2) - 2;
  int v12 = a2;
  if (a2) {
    uint64_t v13 = 0x6E61747369737361;
  }
  else {
    uint64_t v13 = 1919251317;
  }
  uint64_t v28 = v13;
  unint64_t v14 = 0xE400000000000000;
  if (a2) {
    unint64_t v14 = 0xE900000000000074;
  }
  unint64_t v29 = v14;
  if ((a2 & 0x100) != 0) {
    uint64_t v15 = 0x6465707974;
  }
  else {
    uint64_t v15 = 0x6563696F76;
  }
  while (2)
  {
    unsigned int v16 = *(unsigned __int16 *)(*(void *)(v6 + 48) + 2 * v9);
    switch(v16 >> 8)
    {
      case 2u:
        if ((a2 & 0xFF00) != 0x200) {
          goto LABEL_25;
        }
        goto LABEL_51;
      case 3u:
        if ((a2 & 0xFF00) == 0x300) {
          goto LABEL_51;
        }
        goto LABEL_25;
      case 4u:
        if ((a2 & 0xFF00) == 0x400) {
          goto LABEL_51;
        }
        goto LABEL_25;
      case 5u:
        if ((a2 & 0xFF00) == 0x500) {
          goto LABEL_51;
        }
        goto LABEL_25;
      case 6u:
        if ((a2 & 0xFF00) != 0x600) {
          goto LABEL_25;
        }
        goto LABEL_51;
      default:
        if (v11 < 5) {
          goto LABEL_25;
        }
        if (*(_WORD *)(*(void *)(v6 + 48) + 2 * v9) == 2)
        {
          if (v12 != 2) {
            goto LABEL_25;
          }
        }
        else if (*(_WORD *)(*(void *)(v6 + 48) + 2 * v9) == 3)
        {
          if (v12 != 3) {
            goto LABEL_25;
          }
        }
        else
        {
          if ((a2 & 0xFE) == 2) {
            goto LABEL_25;
          }
          unsigned int v27 = v11;
          int v30 = v12;
          if (v16) {
            uint64_t v17 = 0x6E61747369737361;
          }
          else {
            uint64_t v17 = 1919251317;
          }
          if (v16) {
            unint64_t v18 = 0xE900000000000074;
          }
          else {
            unint64_t v18 = 0xE400000000000000;
          }
          if (v17 == v28 && v18 == v29)
          {
            swift_bridgeObjectRelease_n();
            int v12 = v30;
            uint64_t v11 = v27;
          }
          else
          {
            char v26 = sub_1C6577090();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            int v12 = v30;
            uint64_t v11 = v27;
            if ((v26 & 1) == 0) {
              goto LABEL_25;
            }
          }
        }
        if ((v16 & 0x100) != 0) {
          uint64_t v20 = 0x6465707974;
        }
        else {
          uint64_t v20 = 0x6563696F76;
        }
        if (v20 != v15)
        {
          int v31 = v12;
          uint64_t v21 = v3;
          uint64_t v22 = v11;
          char v23 = sub_1C6577090();
          swift_bridgeObjectRelease_n();
          uint64_t v11 = v22;
          uint64_t v3 = v21;
          int v12 = v31;
          if (v23) {
            goto LABEL_51;
          }
LABEL_25:
          unint64_t v9 = (v9 + 1) & v10;
          if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
            goto LABEL_49;
          }
          continue;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_51:
        swift_bridgeObjectRelease();
        uint64_t result = 0;
        LOWORD(a2) = *(_WORD *)(*(void *)(*v3 + 48) + 2 * v9);
LABEL_52:
        *char v32 = a2;
        return result;
    }
  }
}

uint64_t sub_1C64F3648(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_1C64EBE20();
  uint64_t v8 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v9 = v7 & ~v8;
  uint64_t v48 = v6 + 56;
  if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_79:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v51 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_1C64FB2C0(a2, (void (*)(void, void, void, void, void))sub_1C64A0570);
    sub_1C64F675C(a2, v9, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v51;
    swift_bridgeObjectRelease();
    sub_1C649FB10(a2, a1);
    return 1;
  }
  uint64_t v43 = v2;
  uint64_t v44 = a1;
  uint64_t v47 = ~v8;
  uint64_t v46 = a2;
  uint64_t v45 = v6;
  while (1)
  {
    uint64_t v10 = *(void *)(v6 + 48) + 40 * v9;
    uint64_t v11 = *(void *)v10;
    uint64_t v12 = *(void *)(v10 + 8);
    uint64_t v13 = *(void *)(v10 + 16);
    uint64_t v14 = *(void *)(v10 + 24);
    int v15 = *(unsigned __int8 *)(v10 + 32);
    uint64_t v49 = v14;
    uint64_t v50 = v13;
    if (v15 != 2)
    {
      if (v15 == 1)
      {
        int v16 = *(void *)v10;
        if ((_BYTE)v11)
        {
          if (v16 == 1) {
            unint64_t v17 = 0x746E694869726973;
          }
          else {
            unint64_t v17 = 0x6E776F6E6B6E75;
          }
          if (v16 == 1) {
            unint64_t v18 = 0xEF6E656B6F705373;
          }
          else {
            unint64_t v18 = 0xE700000000000000;
          }
        }
        else
        {
          unint64_t v17 = 0x746E694869726973;
          unint64_t v18 = 0xE900000000000073;
        }
      }
      else
      {
        swift_bridgeObjectRetain();
        sub_1C64A0570(v11, v12, v13, v14, 0);
        sub_1C6576620();
        swift_bridgeObjectRelease();
        if (v14) {
          sub_1C6576620();
        }
        swift_bridgeObjectRetain();
        sub_1C6576620();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v17 = 0x5F7070416E69;
        unint64_t v18 = 0xE600000000000000;
        a2 = v46;
      }
      goto LABEL_38;
    }
    if (!(v13 | v12 | v11 | v14))
    {
      uint64_t v25 = "siriNotification";
LABEL_37:
      unint64_t v18 = (unint64_t)v25 | 0x8000000000000000;
      unint64_t v17 = 0xD000000000000010;
      goto LABEL_38;
    }
    uint64_t v19 = v13 | v12 | v14;
    if (v11 == 1 && v19 == 0)
    {
      uint64_t v25 = "assistantSuggestions";
      goto LABEL_37;
    }
    BOOL v21 = v11 == 2 && v19 == 0;
    unint64_t v17 = 0x696669746F4E736FLL;
    unint64_t v18 = 0xEE006E6F69746163;
    if (!v21)
    {
      if (v11 == 3 && v19 == 0)
      {
        unint64_t v17 = 0x706C654869726973;
        unint64_t v18 = 0xE800000000000000;
      }
      else
      {
        BOOL v23 = v19 == 0;
        BOOL v24 = v11 == 4;
        if (v24 && v23) {
          unint64_t v17 = 0xD000000000000014;
        }
        else {
          unint64_t v17 = 0xD000000000000010;
        }
        if (v24 && v23) {
          unint64_t v18 = 0x80000001C65889C0;
        }
        else {
          unint64_t v18 = 0x80000001C65889A0;
        }
      }
    }
LABEL_38:
    sub_1C649FB10(a2, (uint64_t)v57);
    if (v58)
    {
      sub_1C649FB10(a2, (uint64_t)&v52);
      if (!v56)
      {
        unint64_t v27 = 0xE500000000000000;
        unint64_t v26 = 0x7070416E69;
        goto LABEL_71;
      }
      if (v56 == 1)
      {
        if ((_BYTE)v52)
        {
          if (v52 == 1) {
            unint64_t v26 = 0x746E694869726973;
          }
          else {
            unint64_t v26 = 0x6E776F6E6B6E75;
          }
          if (v52 == 1) {
            unint64_t v27 = 0xEF6E656B6F705373;
          }
          else {
            unint64_t v27 = 0xE700000000000000;
          }
        }
        else
        {
          unint64_t v26 = 0x746E694869726973;
          unint64_t v27 = 0xE900000000000073;
        }
        goto LABEL_71;
      }
      if (!(v54 | v55 | v52 | v53))
      {
        int v30 = "siriNotification";
        goto LABEL_57;
      }
      uint64_t v29 = v54 | v55 | v53;
      if (v52 == 1 && !v29)
      {
        int v30 = "assistantSuggestions";
LABEL_57:
        unint64_t v27 = (unint64_t)v30 | 0x8000000000000000;
        unint64_t v26 = 0xD000000000000010;
        goto LABEL_71;
      }
      if (v52 != 2 || (unint64_t v26 = 0x696669746F4E736FLL, v27 = 0xEE006E6F69746163, v29))
      {
        if (v52 != 3 || v29)
        {
          BOOL v31 = v29 == 0;
          BOOL v32 = v52 == 4;
          if (v32 && v31) {
            unint64_t v26 = 0xD000000000000014;
          }
          else {
            unint64_t v26 = 0xD000000000000010;
          }
          if (v32 && v31) {
            unint64_t v27 = 0x80000001C65889C0;
          }
          else {
            unint64_t v27 = 0x80000001C65889A0;
          }
        }
        else
        {
          unint64_t v26 = 0x706C654869726973;
          unint64_t v27 = 0xE800000000000000;
        }
      }
    }
    else
    {
      uint64_t v28 = v57[3];
      swift_bridgeObjectRetain();
      sub_1C6576620();
      swift_bridgeObjectRelease();
      if (v28) {
        sub_1C6576620();
      }
      swift_bridgeObjectRetain();
      sub_1C6576620();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v26 = 0x5F7070416E69;
      unint64_t v27 = 0xE600000000000000;
      a2 = v46;
      uint64_t v6 = v45;
    }
LABEL_71:
    if (v17 == v26 && v18 == v27) {
      break;
    }
    char v34 = sub_1C6577090();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C64A21C4(v11, v12, v50, v49, v15);
    if (v34) {
      goto LABEL_81;
    }
    unint64_t v9 = (v9 + 1) & v47;
    if (((*(void *)(v48 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
    {
      swift_bridgeObjectRelease();
      uint64_t v3 = v43;
      a1 = v44;
      goto LABEL_79;
    }
  }
  swift_bridgeObjectRelease_n();
  sub_1C64A21C4(v11, v12, v50, v49, v15);
LABEL_81:
  swift_bridgeObjectRelease();
  sub_1C64FB2C0(a2, (void (*)(void, void, void, void, void))sub_1C64A21C4);
  uint64_t v37 = *(void *)(*v43 + 48) + 40 * v9;
  uint64_t v38 = *(void *)v37;
  uint64_t v39 = *(void *)(v37 + 8);
  uint64_t v40 = *(void *)(v37 + 16);
  uint64_t v41 = *(void *)(v37 + 24);
  char v42 = *(unsigned char *)(v37 + 32);
  *(void *)uint64_t v44 = *(void *)v37;
  *(void *)(v44 + 8) = v39;
  *(void *)(v44 + 16) = v40;
  *(void *)(v44 + 24) = v41;
  *(unsigned char *)(v44 + 32) = v42;
  sub_1C64A0570(v38, v39, v40, v41, v42);
  return 0;
}

uint64_t sub_1C64F3CF8(uint64_t a1, char *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1C6576210();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  unint64_t v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_1C64FB22C(&qword_1EBBF7F00, 255, MEMORY[0x1E4F27A78]);
  swift_bridgeObjectRetain();
  uint64_t v33 = a2;
  uint64_t v11 = sub_1C65764F0();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  uint64_t v32 = v10 + 56;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    uint64_t v28 = v2;
    uint64_t v29 = a1;
    uint64_t v30 = ~v12;
    uint64_t v27 = v7;
    int v16 = *(void (**)(void, void, void))(v7 + 16);
    uint64_t v15 = v7 + 16;
    uint64_t v14 = v16;
    uint64_t v31 = *(void *)(v15 + 56);
    unint64_t v17 = (void (**)(char *, uint64_t))(v15 - 8);
    v26[1] = v15 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    while (1)
    {
      uint64_t v18 = v10;
      unint64_t v19 = v31 * v13;
      uint64_t v20 = v14;
      v14(v9, *(void *)(v10 + 48) + v31 * v13, v6);
      sub_1C64FB22C(&qword_1EBBF9010, 255, MEMORY[0x1E4F27A78]);
      char v21 = sub_1C6576530();
      uint64_t v22 = *v17;
      (*v17)(v9, v6);
      if (v21) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v30;
      uint64_t v10 = v18;
      uint64_t v14 = v20;
      if (((*(void *)(v32 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v3 = v28;
        a1 = v29;
        uint64_t v7 = v27;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v33, v6);
    v20(v29, *(void *)(*v28 + 48) + v19, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v14 = *(void (**)(void, void, void))(v7 + 16);
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    BOOL v24 = v33;
    v14(v9, v33, v6);
    uint64_t v34 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_1C64F6DB8((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v34;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v24, v6);
    return 1;
  }
}

uint64_t sub_1C64F4024(void *a1, void *a2)
{
  uint64_t v4 = *v2;
  sub_1C6577150();
  __swift_project_boxed_opaque_existential_1(a2 + 10, a2[13]);
  swift_bridgeObjectRetain();
  sub_1C6576500();
  sub_1C6577150();
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1C6576500();
  sub_1C6577190();
  sub_1C6577160();
  uint64_t v5 = sub_1C6577190();
  uint64_t v6 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v7 = v5 & ~v6;
  if (((*(void *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
  {
LABEL_12:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_1C64B817C((uint64_t)a2, (uint64_t)__src);
    v30[0] = *(void *)v24;
    *(void *)uint64_t v24 = 0x8000000000000000;
    sub_1C64F7060(__src, v7, isUniquelyReferenced_nonNull_native);
    *(void *)uint64_t v24 = v30[0];
    swift_bridgeObjectRelease();
    memcpy(a1, a2, 0x78uLL);
    return 1;
  }
  uint64_t v26 = ~v6;
  while (1)
  {
    sub_1C64B817C(*(void *)(v4 + 48) + 120 * v7, (uint64_t)__src);
    uint64_t v8 = v33;
    uint64_t v9 = v34;
    __swift_project_boxed_opaque_existential_1(v32, v33);
    uint64_t v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 40))(v8, v9);
    uint64_t v12 = v11;
    uint64_t v13 = a2[13];
    uint64_t v14 = a2[14];
    __swift_project_boxed_opaque_existential_1(a2 + 10, v13);
    if (v10 == (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 40))(v13, v14) && v12 == v15) {
      break;
    }
    char v17 = sub_1C6577090();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C64B817C((uint64_t)__src, (uint64_t)v30);
    sub_1C64B817C((uint64_t)a2, (uint64_t)v28);
    if (v17) {
      goto LABEL_10;
    }
    sub_1C64B81B4((uint64_t)v28);
    sub_1C64B81B4((uint64_t)v30);
    sub_1C64B81B4((uint64_t)__src);
LABEL_11:
    unint64_t v7 = (v7 + 1) & v26;
    if (((*(void *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
      goto LABEL_12;
    }
  }
  swift_bridgeObjectRelease_n();
  sub_1C64B817C((uint64_t)__src, (uint64_t)v30);
  sub_1C64B817C((uint64_t)a2, (uint64_t)v28);
LABEL_10:
  uint64_t v18 = (uint64_t (*)(uint64_t *))v30[8];
  uint64_t v19 = v29;
  uint64_t v20 = __swift_project_boxed_opaque_existential_1(v28, v29);
  v27[3] = v19;
  boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm(v27);
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v19 - 8) + 16))(boxed_opaque_existential_1Tm, v20, v19);
  LOBYTE(v19) = v18(v27);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
  sub_1C64B81B4((uint64_t)v28);
  sub_1C64B81B4((uint64_t)v30);
  sub_1C64B81B4((uint64_t)__src);
  if ((v19 & 1) == 0) {
    goto LABEL_11;
  }
  swift_bridgeObjectRelease();
  sub_1C64B81B4((uint64_t)a2);
  sub_1C64B817C(*(void *)(*(void *)v24 + 48) + 120 * v7, (uint64_t)a1);
  return 0;
}

void sub_1C64F4388()
{
  OUTLINED_FUNCTION_16_7();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v7 = *v0;
  sub_1C6577150();
  swift_bridgeObjectRetain();
  sub_1C65765E0();
  uint64_t v8 = sub_1C6577190();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  OUTLINED_FUNCTION_3_10();
  if ((v11 & 1) == 0)
  {
LABEL_16:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v22 = *v0;
    uint64_t *v0 = 0x8000000000000000;
    swift_bridgeObjectRetain();
    sub_1C64F73BC(v4, v2, v10, isUniquelyReferenced_nonNull_native);
    uint64_t *v0 = v22;
    swift_bridgeObjectRelease();
    *uint64_t v6 = v4;
    v6[1] = v2;
    goto LABEL_17;
  }
  uint64_t v12 = *(void *)(v7 + 48);
  uint64_t v13 = (void *)(v12 + 16 * v10);
  BOOL v14 = *v13 == v4 && v13[1] == v2;
  if (!v14 && (sub_1C6577090() & 1) == 0)
  {
    uint64_t v17 = ~v9;
    do
    {
      unint64_t v10 = (v10 + 1) & v17;
      OUTLINED_FUNCTION_3_10();
      if ((v18 & 1) == 0) {
        goto LABEL_16;
      }
      uint64_t v19 = (void *)(v12 + 16 * v10);
      BOOL v20 = *v19 == v4 && v19[1] == v2;
    }
    while (!v20 && (sub_1C6577090() & 1) == 0);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v15 = (uint64_t *)(*(void *)(*v0 + 48) + 16 * v10);
  uint64_t v16 = v15[1];
  *uint64_t v6 = *v15;
  v6[1] = v16;
  swift_bridgeObjectRetain();
LABEL_17:
  OUTLINED_FUNCTION_15_4();
}

uint64_t sub_1C64F4508()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFB808);
  uint64_t v3 = sub_1C6576C30();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v6 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v7 = ~(-1 << v5);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & *(void *)(v2 + 56);
    int64_t v9 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v10 = v3 + 56;
    swift_retain();
    int64_t v11 = 0;
    if (!v8) {
      goto LABEL_7;
    }
    while (2)
    {
      unint64_t v12 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v13 = v12 | (v11 << 6);
LABEL_21:
      char v17 = *(unsigned char *)(*(void *)(v2 + 48) + v13);
      sub_1C6577150();
      sub_1C65765E0();
      swift_bridgeObjectRelease();
      uint64_t v18 = sub_1C6577190();
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = v18 & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v10 + 8 * (v20 >> 6))) != 0)
      {
        unint64_t v22 = __clz(__rbit64((-1 << v20) & ~*(void *)(v10 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
        goto LABEL_30;
      }
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
LABEL_38:
          __break(1u);
          goto LABEL_39;
        }
        BOOL v25 = v21 == v24;
        if (v21 == v24) {
          unint64_t v21 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v10 + 8 * v21);
      }
      while (v26 == -1);
      unint64_t v22 = __clz(__rbit64(~v26)) + (v21 << 6);
LABEL_30:
      *(void *)(v10 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
      *(unsigned char *)(*(void *)(v4 + 48) + v22) = v17;
      ++*(void *)(v4 + 16);
      if (v8) {
        continue;
      }
      break;
    }
LABEL_7:
    int64_t v14 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_38;
    }
    if (v14 < v9)
    {
      unint64_t v15 = v6[v14];
      ++v11;
      if (v15) {
        goto LABEL_20;
      }
      int64_t v11 = v14 + 1;
      if (v14 + 1 < v9)
      {
        unint64_t v15 = v6[v11];
        if (v15) {
          goto LABEL_20;
        }
        int64_t v11 = v14 + 2;
        if (v14 + 2 < v9)
        {
          unint64_t v15 = v6[v11];
          if (v15) {
            goto LABEL_20;
          }
          int64_t v16 = v14 + 3;
          if (v16 < v9)
          {
            unint64_t v15 = v6[v16];
            if (v15)
            {
              int64_t v11 = v16;
LABEL_20:
              unint64_t v8 = (v15 - 1) & v15;
              unint64_t v13 = __clz(__rbit64(v15)) + (v11 << 6);
              goto LABEL_21;
            }
            while (1)
            {
              int64_t v11 = v16 + 1;
              if (__OFADD__(v16, 1)) {
                break;
              }
              if (v11 >= v9) {
                goto LABEL_32;
              }
              unint64_t v15 = v6[v11];
              ++v16;
              if (v15) {
                goto LABEL_20;
              }
            }
LABEL_39:
            __break(1u);
            JUMPOUT(0x1C64F48A0);
          }
        }
      }
    }
LABEL_32:
    swift_release();
    uint64_t v1 = v0;
    uint64_t v27 = 1 << *(unsigned char *)(v2 + 32);
    if (v27 > 63) {
      sub_1C65226B4(0, (unint64_t)(v27 + 63) >> 6, (void *)(v2 + 56));
    }
    else {
      *uint64_t v6 = -1 << v27;
    }
    *(void *)(v2 + 16) = 0;
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1C64F48C4()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F15D0);
  uint64_t v3 = sub_1C6576C30();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v6 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v7 = ~(-1 << v5);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & *(void *)(v2 + 56);
    int64_t v9 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v10 = v3 + 56;
    swift_retain();
    int64_t v11 = 0;
    if (!v8) {
      goto LABEL_7;
    }
    while (2)
    {
      unint64_t v12 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v13 = v12 | (v11 << 6);
LABEL_21:
      char v17 = *(unsigned char *)(*(void *)(v2 + 48) + v13);
      sub_1C6577150();
      sub_1C65765E0();
      swift_bridgeObjectRelease();
      uint64_t v18 = sub_1C6577190();
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = v18 & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v10 + 8 * (v20 >> 6))) != 0)
      {
        unint64_t v22 = __clz(__rbit64((-1 << v20) & ~*(void *)(v10 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
        goto LABEL_30;
      }
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
LABEL_38:
          __break(1u);
          goto LABEL_39;
        }
        BOOL v25 = v21 == v24;
        if (v21 == v24) {
          unint64_t v21 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v10 + 8 * v21);
      }
      while (v26 == -1);
      unint64_t v22 = __clz(__rbit64(~v26)) + (v21 << 6);
LABEL_30:
      *(void *)(v10 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
      *(unsigned char *)(*(void *)(v4 + 48) + v22) = v17;
      ++*(void *)(v4 + 16);
      if (v8) {
        continue;
      }
      break;
    }
LABEL_7:
    int64_t v14 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_38;
    }
    if (v14 < v9)
    {
      unint64_t v15 = v6[v14];
      ++v11;
      if (v15) {
        goto LABEL_20;
      }
      int64_t v11 = v14 + 1;
      if (v14 + 1 < v9)
      {
        unint64_t v15 = v6[v11];
        if (v15) {
          goto LABEL_20;
        }
        int64_t v11 = v14 + 2;
        if (v14 + 2 < v9)
        {
          unint64_t v15 = v6[v11];
          if (v15) {
            goto LABEL_20;
          }
          int64_t v16 = v14 + 3;
          if (v16 < v9)
          {
            unint64_t v15 = v6[v16];
            if (v15)
            {
              int64_t v11 = v16;
LABEL_20:
              unint64_t v8 = (v15 - 1) & v15;
              unint64_t v13 = __clz(__rbit64(v15)) + (v11 << 6);
              goto LABEL_21;
            }
            while (1)
            {
              int64_t v11 = v16 + 1;
              if (__OFADD__(v16, 1)) {
                break;
              }
              if (v11 >= v9) {
                goto LABEL_32;
              }
              unint64_t v15 = v6[v11];
              ++v16;
              if (v15) {
                goto LABEL_20;
              }
            }
LABEL_39:
            __break(1u);
            JUMPOUT(0x1C64F4C1CLL);
          }
        }
      }
    }
LABEL_32:
    swift_release();
    uint64_t v1 = v0;
    uint64_t v27 = 1 << *(unsigned char *)(v2 + 32);
    if (v27 > 63) {
      sub_1C65226B4(0, (unint64_t)(v27 + 63) >> 6, (void *)(v2 + 56));
    }
    else {
      *uint64_t v6 = -1 << v27;
    }
    *(void *)(v2 + 16) = 0;
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1C64F4C34()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F15A8);
  uint64_t v3 = sub_1C6576C30();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v6 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v7 = ~(-1 << v5);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & *(void *)(v2 + 56);
    int64_t v28 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    swift_retain();
    int64_t v10 = 0;
    if (!v8) {
      goto LABEL_7;
    }
    while (2)
    {
      unint64_t v11 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v12 = v11 | (v10 << 6);
LABEL_21:
      unsigned int v16 = *(unsigned __int16 *)(*(void *)(v2 + 48) + 2 * v12);
      sub_1C6577150();
      switch(v16 >> 8)
      {
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          sub_1C6577160();
          break;
        default:
          sub_1C6577160();
          if (v16 == 2 || v16 == 3)
          {
            sub_1C6577160();
          }
          else
          {
            sub_1C6577160();
            sub_1C65765E0();
            swift_bridgeObjectRelease();
          }
          sub_1C65765E0();
          swift_bridgeObjectRelease();
          break;
      }
      uint64_t v17 = sub_1C6577190();
      uint64_t v18 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v19 = v17 & ~v18;
      unint64_t v20 = v19 >> 6;
      if (((-1 << v19) & ~*(void *)(v9 + 8 * (v19 >> 6))) != 0)
      {
        unint64_t v21 = __clz(__rbit64((-1 << v19) & ~*(void *)(v9 + 8 * (v19 >> 6)))) | v19 & 0x7FFFFFFFFFFFFFC0;
        goto LABEL_35;
      }
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v18) >> 6;
      do
      {
        if (++v20 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
LABEL_46:
          __break(1u);
          goto LABEL_47;
        }
        BOOL v24 = v20 == v23;
        if (v20 == v23) {
          unint64_t v20 = 0;
        }
        v22 |= v24;
        uint64_t v25 = *(void *)(v9 + 8 * v20);
      }
      while (v25 == -1);
      unint64_t v21 = __clz(__rbit64(~v25)) + (v20 << 6);
LABEL_35:
      *(void *)(v9 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
      *(_WORD *)(*(void *)(v4 + 48) + 2 * v21) = v16;
      ++*(void *)(v4 + 16);
      if (v8) {
        continue;
      }
      break;
    }
LABEL_7:
    int64_t v13 = v10 + 1;
    if (__OFADD__(v10, 1)) {
      goto LABEL_46;
    }
    if (v13 < v28)
    {
      unint64_t v14 = v6[v13];
      ++v10;
      if (v14) {
        goto LABEL_20;
      }
      int64_t v10 = v13 + 1;
      if (v13 + 1 < v28)
      {
        unint64_t v14 = v6[v10];
        if (v14) {
          goto LABEL_20;
        }
        int64_t v10 = v13 + 2;
        if (v13 + 2 < v28)
        {
          unint64_t v14 = v6[v10];
          if (v14) {
            goto LABEL_20;
          }
          int64_t v15 = v13 + 3;
          if (v15 < v28)
          {
            unint64_t v14 = v6[v15];
            if (v14)
            {
              int64_t v10 = v15;
LABEL_20:
              unint64_t v8 = (v14 - 1) & v14;
              unint64_t v12 = __clz(__rbit64(v14)) + (v10 << 6);
              goto LABEL_21;
            }
            while (1)
            {
              int64_t v10 = v15 + 1;
              if (__OFADD__(v15, 1)) {
                break;
              }
              if (v10 >= v28) {
                goto LABEL_40;
              }
              unint64_t v14 = v6[v10];
              ++v15;
              if (v14) {
                goto LABEL_20;
              }
            }
LABEL_47:
            __break(1u);
            JUMPOUT(0x1C64F5024);
          }
        }
      }
    }
LABEL_40:
    swift_release();
    uint64_t v1 = v0;
    uint64_t v26 = 1 << *(unsigned char *)(v2 + 32);
    if (v26 > 63) {
      sub_1C65226B4(0, (unint64_t)(v26 + 63) >> 6, v6);
    }
    else {
      *uint64_t v6 = -1 << v26;
    }
    *(void *)(v2 + 16) = 0;
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1C64F5038()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F15A0);
  uint64_t v3 = sub_1C6576C30();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v33 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v32 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v8 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v10 = 0;
    uint64_t v34 = v2;
    if (!v7) {
      goto LABEL_7;
    }
LABEL_6:
    unint64_t v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    for (unint64_t i = v11 | (v10 << 6); ; unint64_t i = __clz(__rbit64(v14)) + (v10 << 6))
    {
      uint64_t v16 = *(void *)(v2 + 48) + 40 * i;
      uint64_t v17 = *(void *)v16;
      uint64_t v18 = *(void *)(v16 + 8);
      uint64_t v19 = *(void *)(v16 + 16);
      uint64_t v20 = *(void *)(v16 + 24);
      char v21 = *(unsigned char *)(v16 + 32);
      sub_1C6577150();
      DeliveryVehicle.rawValue.getter();
      sub_1C65765E0();
      swift_bridgeObjectRelease();
      uint64_t result = sub_1C6577190();
      uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v8 + 8 * (v23 >> 6))) == 0)
      {
        char v26 = 0;
        unint64_t v27 = (unint64_t)(63 - v22) >> 6;
        while (++v24 != v27 || (v26 & 1) == 0)
        {
          BOOL v28 = v24 == v27;
          if (v24 == v27) {
            unint64_t v24 = 0;
          }
          v26 |= v28;
          uint64_t v29 = *(void *)(v8 + 8 * v24);
          if (v29 != -1)
          {
            unint64_t v25 = __clz(__rbit64(~v29)) + (v24 << 6);
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return result;
      }
      unint64_t v25 = __clz(__rbit64((-1 << v23) & ~*(void *)(v8 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
      *(void *)(v8 + ((v25 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v25;
      uint64_t v30 = *(void *)(v4 + 48) + 40 * v25;
      *(void *)uint64_t v30 = v17;
      *(void *)(v30 + 8) = v18;
      *(void *)(v30 + 16) = v19;
      *(void *)(v30 + 24) = v20;
      *(unsigned char *)(v30 + 32) = v21;
      ++*(void *)(v4 + 16);
      uint64_t v2 = v34;
      if (v7) {
        goto LABEL_6;
      }
LABEL_7:
      int64_t v13 = v10 + 1;
      if (__OFADD__(v10, 1)) {
        goto LABEL_38;
      }
      if (v13 >= v32) {
        goto LABEL_32;
      }
      unint64_t v14 = v33[v13];
      ++v10;
      if (!v14)
      {
        int64_t v10 = v13 + 1;
        if (v13 + 1 >= v32) {
          goto LABEL_32;
        }
        unint64_t v14 = v33[v10];
        if (!v14)
        {
          int64_t v10 = v13 + 2;
          if (v13 + 2 >= v32) {
            goto LABEL_32;
          }
          unint64_t v14 = v33[v10];
          if (!v14)
          {
            int64_t v15 = v13 + 3;
            if (v15 >= v32)
            {
LABEL_32:
              swift_release();
              uint64_t v1 = v0;
              uint64_t v31 = 1 << *(unsigned char *)(v2 + 32);
              if (v31 > 63) {
                sub_1C65226B4(0, (unint64_t)(v31 + 63) >> 6, v33);
              }
              else {
                *uint64_t v33 = -1 << v31;
              }
              *(void *)(v2 + 16) = 0;
              break;
            }
            unint64_t v14 = v33[v15];
            if (!v14)
            {
              while (1)
              {
                int64_t v10 = v15 + 1;
                if (__OFADD__(v15, 1)) {
                  goto LABEL_39;
                }
                if (v10 >= v32) {
                  goto LABEL_32;
                }
                unint64_t v14 = v33[v10];
                ++v15;
                if (v14) {
                  goto LABEL_20;
                }
              }
            }
            int64_t v10 = v15;
          }
        }
      }
LABEL_20:
      unint64_t v7 = (v14 - 1) & v14;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1C64F5374()
{
  uint64_t v1 = v0;
  uint64_t v42 = sub_1C6576210();
  uint64_t v2 = *(void *)(v42 - 8);
  MEMORY[0x1F4188790](v42);
  uint64_t v41 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F1598);
  uint64_t v5 = sub_1C6576C30();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v8 = *(void *)(v4 + 56);
    uint64_t v38 = (void *)(v4 + 56);
    uint64_t v39 = v2;
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & v8;
    uint64_t v36 = v0;
    int64_t v37 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v11 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    unint64_t v14 = v41;
    uint64_t v15 = v42;
    if (!v10) {
      goto LABEL_7;
    }
LABEL_6:
    unint64_t v16 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    int64_t v40 = v13;
    for (unint64_t i = v16 | (v13 << 6); ; unint64_t i = __clz(__rbit64(v19)) + (v20 << 6))
    {
      uint64_t v22 = v4;
      uint64_t v23 = *(void *)(v4 + 48);
      uint64_t v24 = *(void *)(v39 + 72);
      unint64_t v25 = *(void (**)(char *, unint64_t, uint64_t))(v39 + 32);
      v25(v14, v23 + v24 * i, v15);
      sub_1C64FB22C(&qword_1EBBF7F00, 255, MEMORY[0x1E4F27A78]);
      uint64_t result = sub_1C65764F0();
      uint64_t v26 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v27 = result & ~v26;
      unint64_t v28 = v27 >> 6;
      if (((-1 << v27) & ~*(void *)(v11 + 8 * (v27 >> 6))) == 0)
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v26) >> 6;
        while (++v28 != v31 || (v30 & 1) == 0)
        {
          BOOL v32 = v28 == v31;
          if (v28 == v31) {
            unint64_t v28 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v11 + 8 * v28);
          if (v33 != -1)
          {
            unint64_t v29 = __clz(__rbit64(~v33)) + (v28 << 6);
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return result;
      }
      unint64_t v29 = __clz(__rbit64((-1 << v27) & ~*(void *)(v11 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
      *(void *)(v11 + ((v29 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v29;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v25)(*(void *)(v6 + 48) + v29 * v24, v41, v42);
      ++*(void *)(v6 + 16);
      uint64_t v4 = v22;
      int64_t v13 = v40;
      if (v10) {
        goto LABEL_6;
      }
LABEL_7:
      int64_t v18 = v13 + 1;
      if (__OFADD__(v13, 1)) {
        goto LABEL_38;
      }
      if (v18 >= v37) {
        goto LABEL_32;
      }
      unint64_t v19 = v38[v18];
      int64_t v20 = v13 + 1;
      if (!v19)
      {
        int64_t v20 = v13 + 2;
        if (v13 + 2 >= v37) {
          goto LABEL_32;
        }
        unint64_t v19 = v38[v20];
        if (!v19)
        {
          int64_t v20 = v13 + 3;
          if (v13 + 3 >= v37) {
            goto LABEL_32;
          }
          unint64_t v19 = v38[v20];
          if (!v19)
          {
            uint64_t v21 = v13 + 4;
            if (v13 + 4 >= v37)
            {
LABEL_32:
              swift_release();
              uint64_t v1 = v36;
              uint64_t v34 = 1 << *(unsigned char *)(v4 + 32);
              if (v34 > 63) {
                sub_1C65226B4(0, (unint64_t)(v34 + 63) >> 6, v38);
              }
              else {
                *uint64_t v38 = -1 << v34;
              }
              *(void *)(v4 + 16) = 0;
              break;
            }
            unint64_t v19 = v38[v21];
            if (!v19)
            {
              while (1)
              {
                int64_t v20 = v21 + 1;
                if (__OFADD__(v21, 1)) {
                  goto LABEL_39;
                }
                if (v20 >= v37) {
                  goto LABEL_32;
                }
                unint64_t v19 = v38[v20];
                ++v21;
                if (v19) {
                  goto LABEL_20;
                }
              }
            }
            int64_t v20 = v13 + 4;
          }
        }
      }
LABEL_20:
      unint64_t v10 = (v19 - 1) & v19;
      int64_t v40 = v20;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v6;
  return result;
}

uint64_t sub_1C64F5764()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F15B0);
  uint64_t v3 = sub_1C6576C30();
  if (*(void *)(v2 + 16))
  {
    uint64_t v4 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v5 = (void *)(v2 + 56);
    uint64_t v6 = -1;
    if (v4 < 64) {
      uint64_t v6 = ~(-1 << v4);
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v4 + 63) >> 6;
    uint64_t result = swift_retain();
    int64_t v10 = 0;
    if (!v7) {
      goto LABEL_6;
    }
LABEL_5:
    unint64_t v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    for (unint64_t i = v11 | (v10 << 6); ; unint64_t i = __clz(__rbit64(v14)) + (v10 << 6))
    {
      memcpy(__dst, (const void *)(*(void *)(v2 + 48) + 120 * i), sizeof(__dst));
      uint64_t result = (uint64_t)sub_1C64F5C2C(__dst, v3);
      if (v7) {
        goto LABEL_5;
      }
LABEL_6:
      int64_t v13 = v10 + 1;
      if (__OFADD__(v10, 1))
      {
        __break(1u);
LABEL_28:
        __break(1u);
        return result;
      }
      if (v13 >= v8) {
        goto LABEL_22;
      }
      unint64_t v14 = v5[v13];
      ++v10;
      if (!v14)
      {
        int64_t v10 = v13 + 1;
        if (v13 + 1 >= v8) {
          goto LABEL_22;
        }
        unint64_t v14 = v5[v10];
        if (!v14)
        {
          int64_t v10 = v13 + 2;
          if (v13 + 2 >= v8) {
            goto LABEL_22;
          }
          unint64_t v14 = v5[v10];
          if (!v14)
          {
            int64_t v15 = v13 + 3;
            if (v15 >= v8)
            {
LABEL_22:
              swift_release();
              uint64_t v16 = 1 << *(unsigned char *)(v2 + 32);
              if (v16 > 63) {
                sub_1C65226B4(0, (unint64_t)(v16 + 63) >> 6, (void *)(v2 + 56));
              }
              else {
                *uint64_t v5 = -1 << v16;
              }
              *(void *)(v2 + 16) = 0;
              break;
            }
            unint64_t v14 = v5[v15];
            if (!v14)
            {
              while (1)
              {
                int64_t v10 = v15 + 1;
                if (__OFADD__(v15, 1)) {
                  goto LABEL_28;
                }
                if (v10 >= v8) {
                  goto LABEL_22;
                }
                unint64_t v14 = v5[v10];
                ++v15;
                if (v14) {
                  goto LABEL_19;
                }
              }
            }
            int64_t v10 = v15;
          }
        }
      }
LABEL_19:
      unint64_t v7 = (v14 - 1) & v14;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v3;
  return result;
}

uint64_t sub_1C64F5950()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F1590);
  uint64_t v3 = sub_1C6576C30();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    char v30 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    if (!v7) {
      goto LABEL_7;
    }
LABEL_6:
    unint64_t v12 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    for (unint64_t i = v12 | (v11 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v11 << 6))
    {
      uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * i);
      uint64_t v18 = *v17;
      uint64_t v19 = v17[1];
      sub_1C6577150();
      sub_1C65765E0();
      uint64_t result = sub_1C6577190();
      uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v21 = result & ~v20;
      unint64_t v22 = v21 >> 6;
      if (((-1 << v21) & ~*(void *)(v9 + 8 * (v21 >> 6))) == 0)
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v20) >> 6;
        while (++v22 != v25 || (v24 & 1) == 0)
        {
          BOOL v26 = v22 == v25;
          if (v22 == v25) {
            unint64_t v22 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v9 + 8 * v22);
          if (v27 != -1)
          {
            unint64_t v23 = __clz(__rbit64(~v27)) + (v22 << 6);
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return result;
      }
      unint64_t v23 = __clz(__rbit64((-1 << v21) & ~*(void *)(v9 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
      *(void *)(v9 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
      unint64_t v28 = (void *)(*(void *)(v4 + 48) + 16 * v23);
      *unint64_t v28 = v18;
      v28[1] = v19;
      ++*(void *)(v4 + 16);
      if (v7) {
        goto LABEL_6;
      }
LABEL_7:
      int64_t v14 = v11 + 1;
      if (__OFADD__(v11, 1)) {
        goto LABEL_38;
      }
      if (v14 >= v8) {
        goto LABEL_32;
      }
      unint64_t v15 = v30[v14];
      ++v11;
      if (!v15)
      {
        int64_t v11 = v14 + 1;
        if (v14 + 1 >= v8) {
          goto LABEL_32;
        }
        unint64_t v15 = v30[v11];
        if (!v15)
        {
          int64_t v11 = v14 + 2;
          if (v14 + 2 >= v8) {
            goto LABEL_32;
          }
          unint64_t v15 = v30[v11];
          if (!v15)
          {
            int64_t v16 = v14 + 3;
            if (v16 >= v8)
            {
LABEL_32:
              swift_release();
              uint64_t v1 = v0;
              uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
              if (v29 > 63) {
                sub_1C65226B4(0, (unint64_t)(v29 + 63) >> 6, v30);
              }
              else {
                *char v30 = -1 << v29;
              }
              *(void *)(v2 + 16) = 0;
              break;
            }
            unint64_t v15 = v30[v16];
            if (!v15)
            {
              while (1)
              {
                int64_t v11 = v16 + 1;
                if (__OFADD__(v16, 1)) {
                  goto LABEL_39;
                }
                if (v11 >= v8) {
                  goto LABEL_32;
                }
                unint64_t v15 = v30[v11];
                ++v16;
                if (v15) {
                  goto LABEL_20;
                }
              }
            }
            int64_t v11 = v16;
          }
        }
      }
LABEL_20:
      unint64_t v7 = (v15 - 1) & v15;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

void *sub_1C64F5C2C(void *a1, uint64_t a2)
{
  sub_1C6577150();
  __swift_project_boxed_opaque_existential_1(a1 + 10, a1[13]);
  sub_1C6576500();
  sub_1C6577150();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C6576500();
  sub_1C6577190();
  sub_1C6577160();
  sub_1C6577190();
  unint64_t v4 = sub_1C6576BD0();
  *(void *)(a2 + 56 + ((v4 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v4;
  uint64_t result = memcpy((void *)(*(void *)(a2 + 48) + 120 * v4), a1, 0x78uLL);
  ++*(void *)(a2 + 16);
  return result;
}

uint64_t sub_1C64F5D44(uint64_t result, unint64_t a2, char a3)
{
  char v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 <= v6 || (a3 & 1) == 0)
  {
    if (a3)
    {
      sub_1C64F4508();
    }
    else
    {
      if (v7 > v6)
      {
        uint64_t result = (uint64_t)sub_1C64F7558(&qword_1EBBFB808);
        goto LABEL_34;
      }
      sub_1C64F8078();
    }
    uint64_t v8 = *v3;
    sub_1C6577150();
    sub_1C649AF84();
    uint64_t result = sub_1C6577190();
    uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
    a2 = result & ~v9;
    if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      uint64_t v10 = ~v9;
      while (1)
      {
        unint64_t v11 = 0xE600000000000000;
        uint64_t v12 = 0x656E6F685069;
        switch(*(unsigned char *)(*(void *)(v8 + 48) + a2))
        {
          case 1:
            uint64_t v12 = 0x72506E6F69736976;
            unint64_t v11 = 0xE90000000000006FLL;
            break;
          case 2:
            unint64_t v11 = 0xE400000000000000;
            uint64_t v12 = 1684099177;
            break;
          case 3:
            unint64_t v11 = 0xE700000000000000;
            uint64_t v12 = 0x79616C50726163;
            break;
          case 4:
            unint64_t v11 = 0xE500000000000000;
            uint64_t v12 = 0x6863746177;
            break;
          case 5:
            unint64_t v11 = 0xE700000000000000;
            uint64_t v12 = 0x5654656C707061;
            break;
          case 6:
            unint64_t v11 = 0xE700000000000000;
            uint64_t v12 = 0x646F70656D6F68;
            break;
          case 7:
            unint64_t v11 = 0xE300000000000000;
            uint64_t v12 = 6513005;
            break;
          case 8:
            unint64_t v11 = 0xE300000000000000;
            uint64_t v12 = 6582128;
            break;
          default:
            break;
        }
        unint64_t v13 = 0xE600000000000000;
        uint64_t v14 = 0x656E6F685069;
        switch(v5)
        {
          case 1:
            uint64_t v14 = 0x72506E6F69736976;
            unint64_t v13 = 0xE90000000000006FLL;
            break;
          case 2:
            unint64_t v13 = 0xE400000000000000;
            uint64_t v14 = 1684099177;
            break;
          case 3:
            unint64_t v13 = 0xE700000000000000;
            uint64_t v14 = 0x79616C50726163;
            break;
          case 4:
            unint64_t v13 = 0xE500000000000000;
            uint64_t v14 = 0x6863746177;
            break;
          case 5:
            unint64_t v13 = 0xE700000000000000;
            uint64_t v14 = 0x5654656C707061;
            break;
          case 6:
            unint64_t v13 = 0xE700000000000000;
            uint64_t v14 = 0x646F70656D6F68;
            break;
          case 7:
            unint64_t v13 = 0xE300000000000000;
            uint64_t v14 = 6513005;
            break;
          case 8:
            unint64_t v13 = 0xE300000000000000;
            uint64_t v14 = 6582128;
            break;
          default:
            break;
        }
        if (v12 == v14 && v11 == v13) {
          break;
        }
        char v16 = sub_1C6577090();
        swift_bridgeObjectRelease();
        uint64_t result = swift_bridgeObjectRelease();
        if (v16) {
          goto LABEL_38;
        }
        a2 = (a2 + 1) & v10;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          goto LABEL_34;
        }
      }
LABEL_37:
      swift_bridgeObjectRelease_n();
LABEL_38:
      sub_1C65770F0();
      __break(1u);
      JUMPOUT(0x1C64F6090);
    }
  }
LABEL_34:
  uint64_t v17 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(unsigned char *)(*(void *)(v17 + 48) + a2) = v5;
  uint64_t v18 = *(void *)(v17 + 16);
  BOOL v19 = __OFADD__(v18, 1);
  uint64_t v20 = v18 + 1;
  if (v19)
  {
    __break(1u);
    goto LABEL_37;
  }
  *(void *)(v17 + 16) = v20;
  return result;
}

uint64_t sub_1C64F60D8(uint64_t result, unint64_t a2, char a3)
{
  char v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 <= v6 || (a3 & 1) == 0)
  {
    if (a3)
    {
      sub_1C64F48C4();
    }
    else
    {
      if (v7 > v6)
      {
        uint64_t result = (uint64_t)sub_1C64F7558(&qword_1EA3F15D0);
        goto LABEL_28;
      }
      sub_1C64F8400();
    }
    uint64_t v8 = *v3;
    sub_1C6577150();
    sub_1C649B1A8((uint64_t)v21, v5);
    uint64_t result = sub_1C6577190();
    uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
    a2 = result & ~v9;
    if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      uint64_t v10 = ~v9;
      while (1)
      {
        unint64_t v11 = 0xE300000000000000;
        uint64_t v12 = 5459817;
        switch(*(unsigned char *)(*(void *)(v8 + 48) + a2))
        {
          case 1:
            unint64_t v11 = 0xE500000000000000;
            uint64_t v12 = 0x534F63616DLL;
            break;
          case 2:
            unint64_t v11 = 0xE400000000000000;
            uint64_t v12 = 1397716596;
            break;
          case 3:
            unint64_t v11 = 0xE700000000000000;
            uint64_t v12 = 0x534F6863746177;
            break;
          case 4:
            unint64_t v11 = 0xE800000000000000;
            uint64_t v12 = 0x534F6E6F69736976;
            break;
          case 5:
            unint64_t v11 = 0xE700000000000000;
            uint64_t v12 = 0x6E776F6E6B6E75;
            break;
          default:
            break;
        }
        unint64_t v13 = 0xE300000000000000;
        uint64_t v14 = 5459817;
        switch(v5)
        {
          case 1:
            unint64_t v13 = 0xE500000000000000;
            uint64_t v14 = 0x534F63616DLL;
            break;
          case 2:
            unint64_t v13 = 0xE400000000000000;
            uint64_t v14 = 1397716596;
            break;
          case 3:
            unint64_t v13 = 0xE700000000000000;
            uint64_t v14 = 0x534F6863746177;
            break;
          case 4:
            unint64_t v13 = 0xE800000000000000;
            uint64_t v14 = 0x534F6E6F69736976;
            break;
          case 5:
            unint64_t v13 = 0xE700000000000000;
            uint64_t v14 = 0x6E776F6E6B6E75;
            break;
          default:
            break;
        }
        if (v12 == v14 && v11 == v13) {
          break;
        }
        char v16 = sub_1C6577090();
        swift_bridgeObjectRelease();
        uint64_t result = swift_bridgeObjectRelease();
        if (v16) {
          goto LABEL_32;
        }
        a2 = (a2 + 1) & v10;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          goto LABEL_28;
        }
      }
LABEL_31:
      swift_bridgeObjectRelease_n();
LABEL_32:
      sub_1C65770F0();
      __break(1u);
      JUMPOUT(0x1C64F63A4);
    }
  }
LABEL_28:
  uint64_t v17 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(unsigned char *)(*(void *)(v17 + 48) + a2) = v5;
  uint64_t v18 = *(void *)(v17 + 16);
  BOOL v19 = __OFADD__(v18, 1);
  uint64_t v20 = v18 + 1;
  if (v19)
  {
    __break(1u);
    goto LABEL_31;
  }
  *(void *)(v17 + 16) = v20;
  return result;
}

uint64_t sub_1C64F63D4(uint64_t result, unint64_t a2, char a3)
{
  unint64_t v4 = v3;
  __int16 v6 = result;
  unint64_t v7 = *(void *)(*v3 + 16);
  unint64_t v8 = *(void *)(*v3 + 24);
  if (v8 <= v7 || (a3 & 1) == 0)
  {
    if (a3)
    {
      sub_1C64F4C34();
    }
    else
    {
      if (v8 > v7)
      {
        uint64_t result = (uint64_t)sub_1C64F76E8();
        goto LABEL_54;
      }
      sub_1C64F873C();
    }
    uint64_t v9 = *v3;
    sub_1C6577150();
    InvocationType.hash(into:)();
    uint64_t result = sub_1C6577190();
    uint64_t v10 = -1 << *(unsigned char *)(v9 + 32);
    a2 = result & ~v10;
    if ((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      uint64_t v11 = ~v10;
      unint64_t v12 = 0xE900000000000074;
      uint64_t v13 = 0x6E61747369737361;
      if ((v6 & 1) == 0) {
        uint64_t v13 = 1919251317;
      }
      uint64_t v28 = v13;
      if ((v6 & 1) == 0) {
        unint64_t v12 = 0xE400000000000000;
      }
      unint64_t v29 = v12;
      if ((v6 & 0x100) != 0) {
        uint64_t v14 = 0x6465707974;
      }
      else {
        uint64_t v14 = 0x6563696F76;
      }
      while (1)
      {
        unsigned int v15 = *(unsigned __int16 *)(*(void *)(v9 + 48) + 2 * a2);
        switch(v15 >> 8)
        {
          case 2u:
            if ((v6 & 0xFF00) == 0x200) {
              goto LABEL_58;
            }
            goto LABEL_53;
          case 3u:
            if ((v6 & 0xFF00) == 0x300) {
              goto LABEL_58;
            }
            goto LABEL_53;
          case 4u:
            if ((v6 & 0xFF00) == 0x400) {
              goto LABEL_58;
            }
            goto LABEL_53;
          case 5u:
            if ((v6 & 0xFF00) == 0x500) {
              goto LABEL_58;
            }
            goto LABEL_53;
          case 6u:
            if ((v6 & 0xFF00) == 0x600) {
              goto LABEL_58;
            }
            goto LABEL_53;
          default:
            if ((HIBYTE(v6) - 2) < 5u) {
              goto LABEL_53;
            }
            if (*(_WORD *)(*(void *)(v9 + 48) + 2 * a2) == 2)
            {
              if (v6 != 2) {
                goto LABEL_53;
              }
            }
            else if (*(_WORD *)(*(void *)(v9 + 48) + 2 * a2) == 3)
            {
              if (v6 != 3) {
                goto LABEL_53;
              }
            }
            else
            {
              if ((v6 & 0xFE) == 2) {
                goto LABEL_53;
              }
              uint64_t v27 = v14;
              if (v15) {
                uint64_t v16 = 0x6E61747369737361;
              }
              else {
                uint64_t v16 = 1919251317;
              }
              if (v15) {
                unint64_t v17 = 0xE900000000000074;
              }
              else {
                unint64_t v17 = 0xE400000000000000;
              }
              if (v16 == v28 && v17 == v29)
              {
                swift_bridgeObjectRelease_n();
                uint64_t v14 = v27;
              }
              else
              {
                char v26 = sub_1C6577090();
                swift_bridgeObjectRelease();
                uint64_t result = swift_bridgeObjectRelease();
                uint64_t v14 = v27;
                if ((v26 & 1) == 0) {
                  goto LABEL_53;
                }
              }
            }
            if ((v15 & 0x100) != 0) {
              uint64_t v19 = 0x6465707974;
            }
            else {
              uint64_t v19 = 0x6563696F76;
            }
            if (v19 == v14) {
              goto LABEL_57;
            }
            uint64_t v20 = v14;
            char v21 = sub_1C6577090();
            uint64_t result = swift_bridgeObjectRelease_n();
            uint64_t v14 = v20;
            if (v21) {
              goto LABEL_58;
            }
LABEL_53:
            a2 = (a2 + 1) & v11;
            if (((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
              goto LABEL_54;
            }
            break;
        }
      }
    }
  }
LABEL_54:
  uint64_t v22 = *v4;
  *(void *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_WORD *)(*(void *)(v22 + 48) + 2 * a2) = v6;
  uint64_t v23 = *(void *)(v22 + 16);
  BOOL v24 = __OFADD__(v23, 1);
  uint64_t v25 = v23 + 1;
  if (v24)
  {
    __break(1u);
LABEL_57:
    swift_bridgeObjectRelease_n();
LABEL_58:
    sub_1C65770F0();
    __break(1u);
    JUMPOUT(0x1C64F6748);
  }
  *(void *)(v22 + 16) = v25;
  return result;
}

uint64_t sub_1C64F675C(uint64_t a1, unint64_t a2, char a3)
{
  unint64_t v10 = *(void *)(*v3 + 16);
  unint64_t v11 = *(void *)(*v3 + 24);
  if (v11 <= v10 || (a3 & 1) == 0)
  {
    if (a3)
    {
      sub_1C64F5038();
    }
    else
    {
      if (v11 > v10)
      {
        sub_1C64F7880();
        goto LABEL_81;
      }
      sub_1C64F8B04();
    }
    uint64_t v12 = *v3;
    uint64_t v13 = sub_1C64EBE20();
    uint64_t v14 = -1 << *(unsigned char *)(v12 + 32);
    a2 = v13 & ~v14;
    uint64_t v44 = v12 + 56;
    uint64_t v45 = v12;
    if ((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      uint64_t v43 = ~v14;
      uint64_t v41 = a1;
      do
      {
        uint64_t v15 = *(void *)(v45 + 48) + 40 * a2;
        uint64_t v7 = *(void *)v15;
        uint64_t v4 = *(void *)(v15 + 8);
        uint64_t v5 = *(void *)(v15 + 16);
        uint64_t v16 = *(void *)(v15 + 24);
        int v6 = *(unsigned __int8 *)(v15 + 32);
        uint64_t v46 = v16;
        if (v6 == 2)
        {
          if (!(v5 | v4 | v7 | v16))
          {
            uint64_t v25 = "siriNotification";
LABEL_41:
            unint64_t v18 = (unint64_t)v25 | 0x8000000000000000;
            unint64_t v17 = 0xD000000000000010;
            goto LABEL_42;
          }
          uint64_t v19 = v5 | v4 | v16;
          if (v7 == 1 && v19 == 0)
          {
            uint64_t v25 = "assistantSuggestions";
            goto LABEL_41;
          }
          BOOL v21 = v7 == 2 && v19 == 0;
          unint64_t v17 = 0x696669746F4E736FLL;
          unint64_t v18 = 0xEE006E6F69746163;
          if (!v21)
          {
            if (v7 == 3 && v19 == 0)
            {
              unint64_t v18 = 0xE800000000000000;
              unint64_t v17 = 0x706C654869726973;
            }
            else
            {
              BOOL v23 = v19 == 0;
              BOOL v24 = v7 == 4;
              if (v24 && v23) {
                unint64_t v17 = 0xD000000000000014;
              }
              else {
                unint64_t v17 = 0xD000000000000010;
              }
              if (v24 && v23) {
                unint64_t v18 = 0x80000001C65889C0;
              }
              else {
                unint64_t v18 = 0x80000001C65889A0;
              }
            }
          }
        }
        else if (v6 == 1)
        {
          if (*(void *)v15)
          {
            if (*(void *)v15 == 1)
            {
              unint64_t v17 = 0x746E694869726973;
              unint64_t v18 = 0xEF6E656B6F705373;
            }
            else
            {
              unint64_t v18 = 0xE700000000000000;
              unint64_t v17 = 0x6E776F6E6B6E75;
            }
          }
          else
          {
            unint64_t v17 = 0x746E694869726973;
            unint64_t v18 = 0xE900000000000073;
          }
        }
        else
        {
          swift_bridgeObjectRetain();
          sub_1C64A0570(v7, v4, v5, v16, 0);
          sub_1C6576620();
          swift_bridgeObjectRelease();
          if (v16) {
            sub_1C6576620();
          }
          swift_bridgeObjectRetain();
          sub_1C6576620();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          unint64_t v17 = 0x5F7070416E69;
          unint64_t v18 = 0xE600000000000000;
          a1 = v41;
        }
LABEL_42:
        sub_1C649FB10(a1, (uint64_t)v52);
        if (!v53)
        {
          uint64_t v42 = v5;
          uint64_t v28 = v52[3];
          swift_bridgeObjectRetain();
          sub_1C6576620();
          swift_bridgeObjectRelease();
          if (v28) {
            sub_1C6576620();
          }
          swift_bridgeObjectRetain();
          sub_1C6576620();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          unint64_t v26 = 0x5F7070416E69;
          unint64_t v27 = 0xE600000000000000;
          a1 = v41;
          uint64_t v5 = v42;
          goto LABEL_75;
        }
        sub_1C649FB10(a1, (uint64_t)&v47);
        if (v51)
        {
          if (v51 == 1)
          {
            if ((_BYTE)v47)
            {
              if (v47 == 1) {
                unint64_t v26 = 0x746E694869726973;
              }
              else {
                unint64_t v26 = 0x6E776F6E6B6E75;
              }
              if (v47 == 1) {
                unint64_t v27 = 0xEF6E656B6F705373;
              }
              else {
                unint64_t v27 = 0xE700000000000000;
              }
            }
            else
            {
              unint64_t v26 = 0x746E694869726973;
              unint64_t v27 = 0xE900000000000073;
            }
          }
          else
          {
            if (v49 | v50 | v47 | v48)
            {
              uint64_t v29 = v49 | v50 | v48;
              if (v47 != 1 || v29)
              {
                if (v47 != 2 || (unint64_t v26 = 0x696669746F4E736FLL, v27 = 0xEE006E6F69746163, v29))
                {
                  if (v47 != 3 || v29)
                  {
                    BOOL v31 = v29 == 0;
                    BOOL v32 = v47 == 4;
                    if (v32 && v31) {
                      unint64_t v26 = 0xD000000000000014;
                    }
                    else {
                      unint64_t v26 = 0xD000000000000010;
                    }
                    if (v32 && v31) {
                      unint64_t v27 = 0x80000001C65889C0;
                    }
                    else {
                      unint64_t v27 = 0x80000001C65889A0;
                    }
                  }
                  else
                  {
                    unint64_t v27 = 0xE800000000000000;
                    unint64_t v26 = 0x706C654869726973;
                  }
                }
                goto LABEL_75;
              }
              char v30 = "assistantSuggestions";
            }
            else
            {
              char v30 = "siriNotification";
            }
            unint64_t v27 = (unint64_t)v30 | 0x8000000000000000;
            unint64_t v26 = 0xD000000000000010;
          }
        }
        else
        {
          unint64_t v27 = 0xE500000000000000;
          unint64_t v26 = 0x7070416E69;
        }
LABEL_75:
        if (v17 == v26 && v18 == v27) {
          goto LABEL_84;
        }
        char v34 = sub_1C6577090();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1C64A21C4(v7, v4, v5, v46, v6);
        if (v34) {
          goto LABEL_85;
        }
        a2 = (a2 + 1) & v43;
      }
      while (((*(void *)(v44 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
    }
  }
LABEL_81:
  uint64_t v35 = *v40;
  *(void *)(*v40 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = sub_1C649FB10(a1, *(void *)(v35 + 48) + 40 * a2);
  uint64_t v37 = *(void *)(v35 + 16);
  BOOL v38 = __OFADD__(v37, 1);
  uint64_t v39 = v37 + 1;
  if (v38)
  {
    __break(1u);
LABEL_84:
    swift_bridgeObjectRelease_n();
    sub_1C64A21C4(v7, v4, v5, v46, v6);
LABEL_85:
    uint64_t result = sub_1C65770F0();
    __break(1u);
  }
  else
  {
    *(void *)(v35 + 16) = v39;
  }
  return result;
}

uint64_t sub_1C64F6DB8(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v31 = a1;
  uint64_t v6 = sub_1C6576210();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = *(void *)(*v3 + 16);
  unint64_t v11 = *(void *)(*v3 + 24);
  uint64_t v28 = v3;
  uint64_t v29 = v7;
  if (v11 > v10 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_1C64F5374();
  }
  else
  {
    if (v11 > v10)
    {
      sub_1C64F7A48();
      goto LABEL_12;
    }
    sub_1C64F8E20();
  }
  uint64_t v12 = *v3;
  sub_1C64FB22C(&qword_1EBBF7F00, 255, MEMORY[0x1E4F27A78]);
  uint64_t v13 = sub_1C65764F0();
  uint64_t v14 = -1 << *(unsigned char *)(v12 + 32);
  a2 = v13 & ~v14;
  uint64_t v30 = v12;
  uint64_t v15 = v12 + 56;
  if ((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v16 = ~v14;
    uint64_t v19 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    uint64_t v18 = v7 + 16;
    unint64_t v17 = v19;
    uint64_t v20 = *(void *)(v18 + 56);
    do
    {
      v17(v9, *(void *)(v30 + 48) + v20 * a2, v6);
      sub_1C64FB22C(&qword_1EBBF9010, 255, MEMORY[0x1E4F27A78]);
      char v21 = sub_1C6576530();
      (*(void (**)(char *, uint64_t))(v18 - 8))(v9, v6);
      if (v21) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v16;
    }
    while (((*(void *)(v15 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v22 = v29;
  uint64_t v23 = *v28;
  *(void *)(v23 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v22 + 32))(*(void *)(v23 + 48) + *(void *)(v22 + 72) * a2, v31, v6);
  uint64_t v25 = *(void *)(v23 + 16);
  BOOL v26 = __OFADD__(v25, 1);
  uint64_t v27 = v25 + 1;
  if (!v26)
  {
    *(void *)(v23 + 16) = v27;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = sub_1C65770F0();
  __break(1u);
  return result;
}

uint64_t sub_1C64F7060(void *__src, unint64_t a2, char a3)
{
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 <= v6 || (a3 & 1) == 0)
  {
    if (a3)
    {
      sub_1C64F5764();
    }
    else
    {
      if (v7 > v6)
      {
        sub_1C64F7CF8();
        goto LABEL_19;
      }
      sub_1C64F91D0();
    }
    uint64_t v8 = *v3;
    sub_1C6577150();
    __swift_project_boxed_opaque_existential_1(__src + 10, __src[13]);
    sub_1C6576500();
    sub_1C6577150();
    __swift_project_boxed_opaque_existential_1(__src, __src[3]);
    sub_1C6576500();
    sub_1C6577190();
    sub_1C6577160();
    uint64_t v9 = sub_1C6577190();
    uint64_t v10 = -1 << *(unsigned char *)(v8 + 32);
    a2 = v9 & ~v10;
    uint64_t v34 = v8;
    uint64_t v11 = v8 + 56;
    if ((*(void *)(v11 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      uint64_t v12 = ~v10;
      while (1)
      {
        sub_1C64B817C(*(void *)(v34 + 48) + 120 * a2, (uint64_t)v40);
        uint64_t v13 = v42;
        uint64_t v14 = v43;
        __swift_project_boxed_opaque_existential_1(v41, v42);
        uint64_t v15 = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 40))(v13, v14);
        uint64_t v17 = v16;
        uint64_t v18 = __src[13];
        uint64_t v19 = __src[14];
        __swift_project_boxed_opaque_existential_1(__src + 10, v18);
        if (v15 == (*(uint64_t (**)(uint64_t, uint64_t))(v19 + 40))(v18, v19) && v17 == v20) {
          break;
        }
        char v22 = sub_1C6577090();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1C64B817C((uint64_t)v40, (uint64_t)v38);
        sub_1C64B817C((uint64_t)__src, (uint64_t)v36);
        if (v22) {
          goto LABEL_17;
        }
        sub_1C64B81B4((uint64_t)v36);
        sub_1C64B81B4((uint64_t)v38);
        sub_1C64B81B4((uint64_t)v40);
LABEL_18:
        a2 = (a2 + 1) & v12;
        if (((*(void *)(v11 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          goto LABEL_19;
        }
      }
      swift_bridgeObjectRelease_n();
      sub_1C64B817C((uint64_t)v40, (uint64_t)v38);
      sub_1C64B817C((uint64_t)__src, (uint64_t)v36);
LABEL_17:
      uint64_t v23 = v39;
      uint64_t v24 = v37;
      uint64_t v25 = __swift_project_boxed_opaque_existential_1(v36, v37);
      v35[3] = v24;
      boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm(v35);
      (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v24 - 8) + 16))(boxed_opaque_existential_1Tm, v25, v24);
      char v27 = v23(v35);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
      sub_1C64B81B4((uint64_t)v36);
      sub_1C64B81B4((uint64_t)v38);
      sub_1C64B81B4((uint64_t)v40);
      if (v27) {
        goto LABEL_22;
      }
      goto LABEL_18;
    }
  }
LABEL_19:
  uint64_t v28 = *v33;
  *(void *)(*v33 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = (uint64_t)memcpy((void *)(*(void *)(v28 + 48) + 120 * a2), __src, 0x78uLL);
  uint64_t v30 = *(void *)(v28 + 16);
  BOOL v31 = __OFADD__(v30, 1);
  uint64_t v32 = v30 + 1;
  if (v31)
  {
    __break(1u);
LABEL_22:
    uint64_t result = sub_1C65770F0();
    __break(1u);
  }
  else
  {
    *(void *)(v28 + 16) = v32;
  }
  return result;
}

uint64_t sub_1C64F73BC(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v8 = result;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0) {
    goto LABEL_22;
  }
  if (a4)
  {
    sub_1C64F5950();
  }
  else
  {
    if (v10 > v9)
    {
      uint64_t result = (uint64_t)sub_1C64F7EC4();
      goto LABEL_22;
    }
    sub_1C64F9384();
  }
  uint64_t v11 = *v4;
  sub_1C6577150();
  sub_1C65765E0();
  uint64_t result = sub_1C6577190();
  uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
  a3 = result & ~v12;
  uint64_t v13 = v11 + 56;
  if ((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v14 = *(void *)(v11 + 48);
    uint64_t v15 = (void *)(v14 + 16 * a3);
    BOOL v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (uint64_t result = sub_1C6577090(), (result & 1) != 0))
    {
LABEL_21:
      uint64_t result = sub_1C65770F0();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(void *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
          break;
        }
        uint64_t v18 = (void *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          uint64_t result = sub_1C6577090();
          if ((result & 1) == 0) {
            continue;
          }
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  char v21 = (uint64_t *)(*(void *)(v20 + 48) + 16 * a3);
  *char v21 = v8;
  v21[1] = a2;
  uint64_t v22 = *(void *)(v20 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v24;
  }
  return result;
}

void *sub_1C64F7558(uint64_t *a1)
{
  uint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_1C6576C20();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  uint64_t result = (void *)(v4 + 56);
  uint64_t v7 = v3 + 56;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 56 + 8 * v8) {
    uint64_t result = memmove(result, (const void *)(v3 + 56), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 56);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  if (!v13) {
    goto LABEL_12;
  }
LABEL_11:
  unint64_t v15 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (unint64_t i = v15 | (v10 << 6); ; unint64_t i = __clz(__rbit64(v18)) + (v10 << 6))
  {
    *(unsigned char *)(*(void *)(v5 + 48) + i) = *(unsigned char *)(*(void *)(v3 + 48) + i);
    if (v13) {
      goto LABEL_11;
    }
LABEL_12:
    int64_t v17 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v7 + 8 * v17);
    ++v10;
    if (!v18)
    {
      int64_t v10 = v17 + 1;
      if (v17 + 1 >= v14) {
        goto LABEL_28;
      }
      unint64_t v18 = *(void *)(v7 + 8 * v10);
      if (!v18)
      {
        int64_t v10 = v17 + 2;
        if (v17 + 2 >= v14) {
          goto LABEL_28;
        }
        unint64_t v18 = *(void *)(v7 + 8 * v10);
        if (!v18) {
          break;
        }
      }
    }
LABEL_25:
    unint64_t v13 = (v18 - 1) & v18;
  }
  int64_t v19 = v17 + 3;
  if (v19 >= v14) {
    goto LABEL_28;
  }
  unint64_t v18 = *(void *)(v7 + 8 * v19);
  if (v18)
  {
    int64_t v10 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v10 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v7 + 8 * v10);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1C64F76E8()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F15A8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C6576C20();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  if (!v12) {
    goto LABEL_12;
  }
LABEL_11:
  unint64_t v14 = __clz(__rbit64(v12));
  v12 &= v12 - 1;
  for (unint64_t i = v14 | (v9 << 6); ; unint64_t i = __clz(__rbit64(v17)) + (v9 << 6))
  {
    *(_WORD *)(*(void *)(v4 + 48) + 2 * i) = *(_WORD *)(*(void *)(v2 + 48) + 2 * i);
    if (v12) {
      goto LABEL_11;
    }
LABEL_12:
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_25:
    unint64_t v12 = (v17 - 1) & v17;
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1C64F7880()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F15A0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C6576C20();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = *(void *)(v2 + 56);
  uint64_t v12 = -1;
  if (v10 < 64) {
    uint64_t v12 = ~(-1 << v10);
  }
  unint64_t v13 = v12 & v11;
  int64_t v14 = (unint64_t)(v10 + 63) >> 6;
  if ((v12 & v11) == 0) {
    goto LABEL_12;
  }
LABEL_11:
  unint64_t v15 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (unint64_t i = v15 | (v9 << 6); ; unint64_t i = __clz(__rbit64(v18)) + (v9 << 6))
  {
    uint64_t v20 = 5 * i;
    uint64_t v21 = *(void *)(v2 + 48) + 8 * v20;
    uint64_t v22 = *(void *)v21;
    uint64_t v23 = *(void *)(v21 + 8);
    uint64_t v24 = *(void *)(v21 + 16);
    uint64_t v25 = *(void *)(v21 + 24);
    uint64_t v26 = *(void *)(v4 + 48) + 8 * v20;
    char v27 = *(unsigned char *)(v21 + 32);
    *(void *)uint64_t v26 = *(void *)v21;
    *(void *)(v26 + 8) = v23;
    *(void *)(v26 + 16) = v24;
    *(void *)(v26 + 24) = v25;
    *(unsigned char *)(v26 + 32) = v27;
    uint64_t result = (void *)sub_1C64A0570(v22, v23, v24, v25, v27);
    if (v13) {
      goto LABEL_11;
    }
LABEL_12:
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v14) {
        goto LABEL_28;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18)
      {
        int64_t v9 = v17 + 2;
        if (v17 + 2 >= v14) {
          goto LABEL_28;
        }
        unint64_t v18 = *(void *)(v6 + 8 * v9);
        if (!v18) {
          break;
        }
      }
    }
LABEL_25:
    unint64_t v13 = (v18 - 1) & v18;
  }
  int64_t v19 = v17 + 3;
  if (v19 >= v14) {
    goto LABEL_28;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1C64F7A48()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1C6576210();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F1598);
  uint64_t v6 = *v0;
  uint64_t v7 = sub_1C6576C20();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_30:
    *uint64_t v1 = v8;
    return result;
  }
  uint64_t result = (void *)(v7 + 56);
  unint64_t v10 = (unint64_t)((1 << *(unsigned char *)(v8 + 32)) + 63) >> 6;
  uint64_t v24 = v1;
  uint64_t v25 = (const void *)(v6 + 56);
  if (v8 != v6 || (unint64_t)result >= v6 + 56 + 8 * v10) {
    uint64_t result = memmove(result, v25, 8 * v10);
  }
  int64_t v12 = 0;
  *(void *)(v8 + 16) = *(void *)(v6 + 16);
  uint64_t v13 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v14 = *(void *)(v6 + 56);
  uint64_t v15 = -1;
  if (v13 < 64) {
    uint64_t v15 = ~(-1 << v13);
  }
  unint64_t v16 = v15 & v14;
  int64_t v26 = (unint64_t)(v13 + 63) >> 6;
  if ((v15 & v14) == 0) {
    goto LABEL_12;
  }
LABEL_11:
  unint64_t v17 = __clz(__rbit64(v16));
  v16 &= v16 - 1;
  for (unint64_t i = v17 | (v12 << 6); ; unint64_t i = __clz(__rbit64(v20)) + (v12 << 6))
  {
    unint64_t v22 = *(void *)(v3 + 72) * i;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(void *)(v6 + 48) + v22, v2);
    uint64_t result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(void *)(v8 + 48) + v22, v5, v2);
    if (v16) {
      goto LABEL_11;
    }
LABEL_12:
    int64_t v19 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v19 >= v26) {
      goto LABEL_28;
    }
    unint64_t v20 = *((void *)v25 + v19);
    ++v12;
    if (!v20)
    {
      int64_t v12 = v19 + 1;
      if (v19 + 1 >= v26) {
        goto LABEL_28;
      }
      unint64_t v20 = *((void *)v25 + v12);
      if (!v20)
      {
        int64_t v12 = v19 + 2;
        if (v19 + 2 >= v26) {
          goto LABEL_28;
        }
        unint64_t v20 = *((void *)v25 + v12);
        if (!v20) {
          break;
        }
      }
    }
LABEL_25:
    unint64_t v16 = (v20 - 1) & v20;
  }
  int64_t v21 = v19 + 3;
  if (v21 >= v26)
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    uint64_t v1 = v24;
    goto LABEL_30;
  }
  unint64_t v20 = *((void *)v25 + v21);
  if (v20)
  {
    int64_t v12 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v12 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v12 >= v26) {
      goto LABEL_28;
    }
    unint64_t v20 = *((void *)v25 + v12);
    ++v21;
    if (v20) {
      goto LABEL_25;
    }
  }
LABEL_32:
  __break(1u);
  return result;
}

void *sub_1C64F7CF8()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F15B0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C6576C20();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = *(void *)(v2 + 56);
  uint64_t v12 = -1;
  if (v10 < 64) {
    uint64_t v12 = ~(-1 << v10);
  }
  unint64_t v13 = v12 & v11;
  int64_t v14 = (unint64_t)(v10 + 63) >> 6;
  if ((v12 & v11) == 0) {
    goto LABEL_12;
  }
LABEL_11:
  unint64_t v15 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (unint64_t i = v15 | (v9 << 6); ; unint64_t i = __clz(__rbit64(v18)) + (v9 << 6))
  {
    uint64_t v20 = 120 * i;
    sub_1C64B817C(*(void *)(v2 + 48) + 120 * i, (uint64_t)__src);
    uint64_t result = memcpy((void *)(*(void *)(v4 + 48) + v20), __src, 0x78uLL);
    if (v13) {
      goto LABEL_11;
    }
LABEL_12:
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v14) {
        goto LABEL_28;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18)
      {
        int64_t v9 = v17 + 2;
        if (v17 + 2 >= v14) {
          goto LABEL_28;
        }
        unint64_t v18 = *(void *)(v6 + 8 * v9);
        if (!v18) {
          break;
        }
      }
    }
LABEL_25:
    unint64_t v13 = (v18 - 1) & v18;
  }
  int64_t v19 = v17 + 3;
  if (v19 >= v14) {
    goto LABEL_28;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1C64F7EC4()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F1590);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C6576C20();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = *(void *)(v2 + 56);
  uint64_t v12 = -1;
  if (v10 < 64) {
    uint64_t v12 = ~(-1 << v10);
  }
  unint64_t v13 = v12 & v11;
  int64_t v14 = (unint64_t)(v10 + 63) >> 6;
  if ((v12 & v11) == 0) {
    goto LABEL_12;
  }
LABEL_11:
  unint64_t v15 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (unint64_t i = v15 | (v9 << 6); ; unint64_t i = __clz(__rbit64(v18)) + (v9 << 6))
  {
    uint64_t v20 = (void *)(*(void *)(v2 + 48) + 16 * i);
    uint64_t v21 = v20[1];
    unint64_t v22 = (void *)(*(void *)(v4 + 48) + 16 * i);
    *unint64_t v22 = *v20;
    v22[1] = v21;
    uint64_t result = (void *)swift_bridgeObjectRetain();
    if (v13) {
      goto LABEL_11;
    }
LABEL_12:
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v14) {
        goto LABEL_28;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18)
      {
        int64_t v9 = v17 + 2;
        if (v17 + 2 >= v14) {
          goto LABEL_28;
        }
        unint64_t v18 = *(void *)(v6 + 8 * v9);
        if (!v18) {
          break;
        }
      }
    }
LABEL_25:
    unint64_t v13 = (v18 - 1) & v18;
  }
  int64_t v19 = v17 + 3;
  if (v19 >= v14) {
    goto LABEL_28;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1C64F8078()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFB808);
  uint64_t v3 = sub_1C6576C30();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v6 = v2 + 56;
    if (v5 < 64) {
      uint64_t v7 = ~(-1 << v5);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & *(void *)(v2 + 56);
    int64_t v9 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v10 = v3 + 56;
    swift_retain();
    int64_t v11 = 0;
    if (!v8) {
      goto LABEL_7;
    }
    while (2)
    {
      unint64_t v12 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v13 = v12 | (v11 << 6);
LABEL_21:
      char v17 = *(unsigned char *)(*(void *)(v2 + 48) + v13);
      sub_1C6577150();
      sub_1C65765E0();
      swift_bridgeObjectRelease();
      uint64_t v18 = sub_1C6577190();
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = v18 & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v10 + 8 * (v20 >> 6))) != 0)
      {
        unint64_t v22 = __clz(__rbit64((-1 << v20) & ~*(void *)(v10 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
        goto LABEL_30;
      }
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
LABEL_36:
          __break(1u);
          goto LABEL_37;
        }
        BOOL v25 = v21 == v24;
        if (v21 == v24) {
          unint64_t v21 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v10 + 8 * v21);
      }
      while (v26 == -1);
      unint64_t v22 = __clz(__rbit64(~v26)) + (v21 << 6);
LABEL_30:
      *(void *)(v10 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
      *(unsigned char *)(*(void *)(v4 + 48) + v22) = v17;
      ++*(void *)(v4 + 16);
      if (v8) {
        continue;
      }
      break;
    }
LABEL_7:
    int64_t v14 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_36;
    }
    if (v14 < v9)
    {
      unint64_t v15 = *(void *)(v6 + 8 * v14);
      ++v11;
      if (v15) {
        goto LABEL_20;
      }
      int64_t v11 = v14 + 1;
      if (v14 + 1 < v9)
      {
        unint64_t v15 = *(void *)(v6 + 8 * v11);
        if (v15) {
          goto LABEL_20;
        }
        int64_t v11 = v14 + 2;
        if (v14 + 2 < v9)
        {
          unint64_t v15 = *(void *)(v6 + 8 * v11);
          if (v15) {
            goto LABEL_20;
          }
          int64_t v16 = v14 + 3;
          if (v16 < v9)
          {
            unint64_t v15 = *(void *)(v6 + 8 * v16);
            if (v15)
            {
              int64_t v11 = v16;
LABEL_20:
              unint64_t v8 = (v15 - 1) & v15;
              unint64_t v13 = __clz(__rbit64(v15)) + (v11 << 6);
              goto LABEL_21;
            }
            while (1)
            {
              int64_t v11 = v16 + 1;
              if (__OFADD__(v16, 1)) {
                break;
              }
              if (v11 >= v9) {
                goto LABEL_32;
              }
              unint64_t v15 = *(void *)(v6 + 8 * v11);
              ++v16;
              if (v15) {
                goto LABEL_20;
              }
            }
LABEL_37:
            __break(1u);
            JUMPOUT(0x1C64F83DCLL);
          }
        }
      }
    }
LABEL_32:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
  }
  else
  {
    uint64_t result = swift_release();
  }
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1C64F8400()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F15D0);
  uint64_t v3 = sub_1C6576C30();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v6 = v2 + 56;
    if (v5 < 64) {
      uint64_t v7 = ~(-1 << v5);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & *(void *)(v2 + 56);
    int64_t v9 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v10 = v3 + 56;
    swift_retain();
    int64_t v11 = 0;
    if (!v8) {
      goto LABEL_7;
    }
    while (2)
    {
      unint64_t v12 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v13 = v12 | (v11 << 6);
LABEL_21:
      char v17 = *(unsigned char *)(*(void *)(v2 + 48) + v13);
      sub_1C6577150();
      sub_1C65765E0();
      swift_bridgeObjectRelease();
      uint64_t v18 = sub_1C6577190();
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = v18 & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v10 + 8 * (v20 >> 6))) != 0)
      {
        unint64_t v22 = __clz(__rbit64((-1 << v20) & ~*(void *)(v10 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
        goto LABEL_30;
      }
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
LABEL_36:
          __break(1u);
          goto LABEL_37;
        }
        BOOL v25 = v21 == v24;
        if (v21 == v24) {
          unint64_t v21 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v10 + 8 * v21);
      }
      while (v26 == -1);
      unint64_t v22 = __clz(__rbit64(~v26)) + (v21 << 6);
LABEL_30:
      *(void *)(v10 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
      *(unsigned char *)(*(void *)(v4 + 48) + v22) = v17;
      ++*(void *)(v4 + 16);
      if (v8) {
        continue;
      }
      break;
    }
LABEL_7:
    int64_t v14 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_36;
    }
    if (v14 < v9)
    {
      unint64_t v15 = *(void *)(v6 + 8 * v14);
      ++v11;
      if (v15) {
        goto LABEL_20;
      }
      int64_t v11 = v14 + 1;
      if (v14 + 1 < v9)
      {
        unint64_t v15 = *(void *)(v6 + 8 * v11);
        if (v15) {
          goto LABEL_20;
        }
        int64_t v11 = v14 + 2;
        if (v14 + 2 < v9)
        {
          unint64_t v15 = *(void *)(v6 + 8 * v11);
          if (v15) {
            goto LABEL_20;
          }
          int64_t v16 = v14 + 3;
          if (v16 < v9)
          {
            unint64_t v15 = *(void *)(v6 + 8 * v16);
            if (v15)
            {
              int64_t v11 = v16;
LABEL_20:
              unint64_t v8 = (v15 - 1) & v15;
              unint64_t v13 = __clz(__rbit64(v15)) + (v11 << 6);
              goto LABEL_21;
            }
            while (1)
            {
              int64_t v11 = v16 + 1;
              if (__OFADD__(v16, 1)) {
                break;
              }
              if (v11 >= v9) {
                goto LABEL_32;
              }
              unint64_t v15 = *(void *)(v6 + 8 * v11);
              ++v16;
              if (v15) {
                goto LABEL_20;
              }
            }
LABEL_37:
            __break(1u);
            JUMPOUT(0x1C64F8724);
          }
        }
      }
    }
LABEL_32:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
  }
  else
  {
    uint64_t result = swift_release();
  }
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1C64F873C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F15A8);
  uint64_t v3 = sub_1C6576C30();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v6 = v2 + 56;
    if (v5 < 64) {
      uint64_t v7 = ~(-1 << v5);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & *(void *)(v2 + 56);
    int64_t v27 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    swift_retain();
    int64_t v10 = 0;
    if (!v8) {
      goto LABEL_7;
    }
    while (2)
    {
      unint64_t v11 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v12 = v11 | (v10 << 6);
LABEL_21:
      unsigned int v16 = *(unsigned __int16 *)(*(void *)(v2 + 48) + 2 * v12);
      sub_1C6577150();
      switch(v16 >> 8)
      {
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          sub_1C6577160();
          break;
        default:
          sub_1C6577160();
          if (v16 == 2 || v16 == 3)
          {
            sub_1C6577160();
          }
          else
          {
            sub_1C6577160();
            sub_1C65765E0();
            swift_bridgeObjectRelease();
          }
          sub_1C65765E0();
          swift_bridgeObjectRelease();
          break;
      }
      uint64_t v17 = sub_1C6577190();
      uint64_t v18 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v19 = v17 & ~v18;
      unint64_t v20 = v19 >> 6;
      if (((-1 << v19) & ~*(void *)(v9 + 8 * (v19 >> 6))) != 0)
      {
        unint64_t v21 = __clz(__rbit64((-1 << v19) & ~*(void *)(v9 + 8 * (v19 >> 6)))) | v19 & 0x7FFFFFFFFFFFFFC0;
        goto LABEL_35;
      }
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v18) >> 6;
      do
      {
        if (++v20 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
LABEL_44:
          __break(1u);
          goto LABEL_45;
        }
        BOOL v24 = v20 == v23;
        if (v20 == v23) {
          unint64_t v20 = 0;
        }
        v22 |= v24;
        uint64_t v25 = *(void *)(v9 + 8 * v20);
      }
      while (v25 == -1);
      unint64_t v21 = __clz(__rbit64(~v25)) + (v20 << 6);
LABEL_35:
      *(void *)(v9 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
      *(_WORD *)(*(void *)(v4 + 48) + 2 * v21) = v16;
      ++*(void *)(v4 + 16);
      if (v8) {
        continue;
      }
      break;
    }
LABEL_7:
    int64_t v13 = v10 + 1;
    if (__OFADD__(v10, 1)) {
      goto LABEL_44;
    }
    if (v13 < v27)
    {
      unint64_t v14 = *(void *)(v6 + 8 * v13);
      ++v10;
      if (v14) {
        goto LABEL_20;
      }
      int64_t v10 = v13 + 1;
      if (v13 + 1 < v27)
      {
        unint64_t v14 = *(void *)(v6 + 8 * v10);
        if (v14) {
          goto LABEL_20;
        }
        int64_t v10 = v13 + 2;
        if (v13 + 2 < v27)
        {
          unint64_t v14 = *(void *)(v6 + 8 * v10);
          if (v14) {
            goto LABEL_20;
          }
          int64_t v15 = v13 + 3;
          if (v15 < v27)
          {
            unint64_t v14 = *(void *)(v6 + 8 * v15);
            if (v14)
            {
              int64_t v10 = v15;
LABEL_20:
              unint64_t v8 = (v14 - 1) & v14;
              unint64_t v12 = __clz(__rbit64(v14)) + (v10 << 6);
              goto LABEL_21;
            }
            while (1)
            {
              int64_t v10 = v15 + 1;
              if (__OFADD__(v15, 1)) {
                break;
              }
              if (v10 >= v27) {
                goto LABEL_40;
              }
              unint64_t v14 = *(void *)(v6 + 8 * v10);
              ++v15;
              if (v14) {
                goto LABEL_20;
              }
            }
LABEL_45:
            __break(1u);
            JUMPOUT(0x1C64F8AF0);
          }
        }
      }
    }
LABEL_40:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
  }
  else
  {
    uint64_t result = swift_release();
  }
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1C64F8B04()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F15A0);
  uint64_t v3 = sub_1C6576C30();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_34:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v31 = v2 + 56;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(v2 + 56);
  int64_t v32 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v8 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v10 = 0;
  uint64_t v33 = v2;
  if (!v7) {
    goto LABEL_7;
  }
LABEL_6:
  unint64_t v11 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  for (unint64_t i = v11 | (v10 << 6); ; unint64_t i = __clz(__rbit64(v14)) + (v10 << 6))
  {
    uint64_t v16 = *(void *)(v2 + 48) + 40 * i;
    uint64_t v17 = *(void *)v16;
    uint64_t v18 = *(void *)(v16 + 8);
    uint64_t v19 = *(void *)(v16 + 16);
    uint64_t v20 = *(void *)(v16 + 24);
    char v21 = *(unsigned char *)(v16 + 32);
    sub_1C6577150();
    sub_1C64A0570(v17, v18, v19, v20, v21);
    DeliveryVehicle.rawValue.getter();
    sub_1C65765E0();
    swift_bridgeObjectRelease();
    uint64_t result = sub_1C6577190();
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v8 + 8 * (v23 >> 6))) == 0)
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v22) >> 6;
      while (++v24 != v27 || (v26 & 1) == 0)
      {
        BOOL v28 = v24 == v27;
        if (v24 == v27) {
          unint64_t v24 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v8 + 8 * v24);
        if (v29 != -1)
        {
          unint64_t v25 = __clz(__rbit64(~v29)) + (v24 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    unint64_t v25 = __clz(__rbit64((-1 << v23) & ~*(void *)(v8 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(void *)(v8 + ((v25 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v25;
    uint64_t v30 = *(void *)(v4 + 48) + 40 * v25;
    *(void *)uint64_t v30 = v17;
    *(void *)(v30 + 8) = v18;
    *(void *)(v30 + 16) = v19;
    *(void *)(v30 + 24) = v20;
    *(unsigned char *)(v30 + 32) = v21;
    ++*(void *)(v4 + 16);
    uint64_t v2 = v33;
    if (v7) {
      goto LABEL_6;
    }
LABEL_7:
    int64_t v13 = v10 + 1;
    if (__OFADD__(v10, 1)) {
      goto LABEL_36;
    }
    if (v13 >= v32) {
      goto LABEL_32;
    }
    unint64_t v14 = *(void *)(v31 + 8 * v13);
    ++v10;
    if (!v14)
    {
      int64_t v10 = v13 + 1;
      if (v13 + 1 >= v32) {
        goto LABEL_32;
      }
      unint64_t v14 = *(void *)(v31 + 8 * v10);
      if (!v14)
      {
        int64_t v10 = v13 + 2;
        if (v13 + 2 >= v32) {
          goto LABEL_32;
        }
        unint64_t v14 = *(void *)(v31 + 8 * v10);
        if (!v14) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v7 = (v14 - 1) & v14;
  }
  int64_t v15 = v13 + 3;
  if (v15 >= v32)
  {
LABEL_32:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_34;
  }
  unint64_t v14 = *(void *)(v31 + 8 * v15);
  if (v14)
  {
    int64_t v10 = v15;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v10 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v10 >= v32) {
      goto LABEL_32;
    }
    unint64_t v14 = *(void *)(v31 + 8 * v10);
    ++v15;
    if (v14) {
      goto LABEL_20;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1C64F8E20()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1C6576210();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F1598);
  uint64_t v7 = sub_1C6576C30();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_34:
    *uint64_t v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  uint64_t v34 = v0;
  uint64_t v35 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v36 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v37 = v3 + 16;
  uint64_t v13 = v7 + 56;
  uint64_t v38 = v3;
  unint64_t v14 = (uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32);
  uint64_t result = swift_retain();
  int64_t v16 = 0;
  if (!v12) {
    goto LABEL_7;
  }
LABEL_6:
  unint64_t v17 = __clz(__rbit64(v12));
  v12 &= v12 - 1;
  for (unint64_t i = v17 | (v16 << 6); ; unint64_t i = __clz(__rbit64(v20)) + (v16 << 6))
  {
    uint64_t v22 = v6;
    uint64_t v23 = *(void *)(v6 + 48);
    uint64_t v24 = *(void *)(v38 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v38 + 16))(v5, v23 + v24 * i, v2);
    sub_1C64FB22C(&qword_1EBBF7F00, 255, MEMORY[0x1E4F27A78]);
    uint64_t result = sub_1C65764F0();
    uint64_t v25 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v26 = result & ~v25;
    unint64_t v27 = v26 >> 6;
    if (((-1 << v26) & ~*(void *)(v13 + 8 * (v26 >> 6))) == 0)
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v25) >> 6;
      while (++v27 != v30 || (v29 & 1) == 0)
      {
        BOOL v31 = v27 == v30;
        if (v27 == v30) {
          unint64_t v27 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v13 + 8 * v27);
        if (v32 != -1)
        {
          unint64_t v28 = __clz(__rbit64(~v32)) + (v27 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    unint64_t v28 = __clz(__rbit64((-1 << v26) & ~*(void *)(v13 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(void *)(v13 + ((v28 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v28;
    uint64_t result = (*v14)(*(void *)(v8 + 48) + v28 * v24, v5, v2);
    ++*(void *)(v8 + 16);
    uint64_t v6 = v22;
    if (v12) {
      goto LABEL_6;
    }
LABEL_7:
    int64_t v19 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      goto LABEL_36;
    }
    if (v19 >= v36) {
      goto LABEL_32;
    }
    unint64_t v20 = *(void *)(v35 + 8 * v19);
    ++v16;
    if (!v20)
    {
      int64_t v16 = v19 + 1;
      if (v19 + 1 >= v36) {
        goto LABEL_32;
      }
      unint64_t v20 = *(void *)(v35 + 8 * v16);
      if (!v20)
      {
        int64_t v16 = v19 + 2;
        if (v19 + 2 >= v36) {
          goto LABEL_32;
        }
        unint64_t v20 = *(void *)(v35 + 8 * v16);
        if (!v20) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v12 = (v20 - 1) & v20;
  }
  int64_t v21 = v19 + 3;
  if (v21 >= v36)
  {
LABEL_32:
    uint64_t result = swift_release_n();
    uint64_t v1 = v34;
    goto LABEL_34;
  }
  unint64_t v20 = *(void *)(v35 + 8 * v21);
  if (v20)
  {
    int64_t v16 = v21;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v16 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v16 >= v36) {
      goto LABEL_32;
    }
    unint64_t v20 = *(void *)(v35 + 8 * v16);
    ++v21;
    if (v20) {
      goto LABEL_20;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1C64F91D0()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F15B0);
  uint64_t v3 = sub_1C6576C30();
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_24:
    *uint64_t v1 = v3;
    return result;
  }
  uint64_t v4 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v5 = v2 + 56;
  uint64_t v6 = -1;
  if (v4 < 64) {
    uint64_t v6 = ~(-1 << v4);
  }
  unint64_t v7 = v6 & *(void *)(v2 + 56);
  int64_t v8 = (unint64_t)(v4 + 63) >> 6;
  uint64_t result = swift_retain();
  int64_t v10 = 0;
  if (!v7) {
    goto LABEL_6;
  }
LABEL_5:
  unint64_t v11 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  for (unint64_t i = v11 | (v10 << 6); ; unint64_t i = __clz(__rbit64(v14)) + (v10 << 6))
  {
    sub_1C64B817C(*(void *)(v2 + 48) + 120 * i, (uint64_t)v16);
    uint64_t result = (uint64_t)sub_1C64F5C2C(v16, v3);
    if (v7) {
      goto LABEL_5;
    }
LABEL_6:
    int64_t v13 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v13 >= v8) {
      goto LABEL_22;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v13);
    ++v10;
    if (!v14)
    {
      int64_t v10 = v13 + 1;
      if (v13 + 1 >= v8) {
        goto LABEL_22;
      }
      unint64_t v14 = *(void *)(v5 + 8 * v10);
      if (!v14)
      {
        int64_t v10 = v13 + 2;
        if (v13 + 2 >= v8) {
          goto LABEL_22;
        }
        unint64_t v14 = *(void *)(v5 + 8 * v10);
        if (!v14) {
          break;
        }
      }
    }
LABEL_19:
    unint64_t v7 = (v14 - 1) & v14;
  }
  int64_t v15 = v13 + 3;
  if (v15 >= v8)
  {
LABEL_22:
    uint64_t result = swift_release_n();
    goto LABEL_24;
  }
  unint64_t v14 = *(void *)(v5 + 8 * v15);
  if (v14)
  {
    int64_t v10 = v15;
    goto LABEL_19;
  }
  while (1)
  {
    int64_t v10 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v10 >= v8) {
      goto LABEL_22;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v10);
    ++v15;
    if (v14) {
      goto LABEL_19;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_1C64F9384()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F1590);
  uint64_t v3 = sub_1C6576C30();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_34:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  if (!v8) {
    goto LABEL_7;
  }
LABEL_6:
  unint64_t v12 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (unint64_t i = v12 | (v11 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v11 << 6))
  {
    unint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * i);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    sub_1C6577150();
    swift_bridgeObjectRetain();
    sub_1C65765E0();
    uint64_t result = sub_1C6577190();
    uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v9 + 8 * (v21 >> 6))) == 0)
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v20) >> 6;
      while (++v22 != v25 || (v24 & 1) == 0)
      {
        BOOL v26 = v22 == v25;
        if (v22 == v25) {
          unint64_t v22 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v9 + 8 * v22);
        if (v27 != -1)
        {
          unint64_t v23 = __clz(__rbit64(~v27)) + (v22 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    unint64_t v23 = __clz(__rbit64((-1 << v21) & ~*(void *)(v9 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(void *)(v9 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    unint64_t v28 = (void *)(*(void *)(v4 + 48) + 16 * v23);
    *unint64_t v28 = v18;
    v28[1] = v19;
    ++*(void *)(v4 + 16);
    if (v8) {
      goto LABEL_6;
    }
LABEL_7:
    int64_t v14 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_36;
    }
    if (v14 >= v29) {
      goto LABEL_32;
    }
    unint64_t v15 = *(void *)(v6 + 8 * v14);
    ++v11;
    if (!v15)
    {
      int64_t v11 = v14 + 1;
      if (v14 + 1 >= v29) {
        goto LABEL_32;
      }
      unint64_t v15 = *(void *)(v6 + 8 * v11);
      if (!v15)
      {
        int64_t v11 = v14 + 2;
        if (v14 + 2 >= v29) {
          goto LABEL_32;
        }
        unint64_t v15 = *(void *)(v6 + 8 * v11);
        if (!v15) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v8 = (v15 - 1) & v15;
  }
  int64_t v16 = v14 + 3;
  if (v16 >= v29)
  {
LABEL_32:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_34;
  }
  unint64_t v15 = *(void *)(v6 + 8 * v16);
  if (v15)
  {
    int64_t v11 = v16;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v11 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v11 >= v29) {
      goto LABEL_32;
    }
    unint64_t v15 = *(void *)(v6 + 8 * v11);
    ++v16;
    if (v15) {
      goto LABEL_20;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1C64F9630(uint64_t isStackAllocationSafe, uint64_t a2)
{
  uint64_t v3 = isStackAllocationSafe;
  v10[1] = *MEMORY[0x1E4F143B8];
  char v4 = *(unsigned char *)(a2 + 32);
  unint64_t v5 = (unint64_t)((1 << v4) + 63) >> 6;
  if ((v4 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1F4188790](isStackAllocationSafe);
    uint64_t v6 = (void *)((char *)v10 - ((8 * v5 + 15) & 0x3FFFFFFFFFFFFFF0));
    sub_1C65226B4(0, v5, v6);
    uint64_t v7 = sub_1C64F97C4(v6, v5, a2, v3);
    swift_release();
  }
  else
  {
    unint64_t v8 = (unint64_t *)swift_slowAlloc();
    sub_1C65226B4(0, v5, v8);
    uint64_t v7 = sub_1C64F97C4(v8, v5, a2, v3);
    swift_release();
    MEMORY[0x1C87A0050](v8, -1, -1);
  }
  return v7;
}

uint64_t sub_1C64F97C4(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a3;
  uint64_t v6 = 0;
  int64_t v7 = 0;
  if (*(void *)(a4 + 16) < *(void *)(a3 + 16))
  {
    uint64_t v51 = a4 + 56;
    uint64_t v8 = 1 << *(unsigned char *)(a4 + 32);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(a4 + 56);
    int64_t v54 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = a3 + 56;
    do
    {
      uint64_t v58 = v6;
      do
      {
LABEL_7:
        if (v10)
        {
          unint64_t v12 = __clz(__rbit64(v10));
          v10 &= v10 - 1;
          unint64_t v13 = v12 | (v7 << 6);
        }
        else
        {
          int64_t v14 = v7 + 1;
          if (__OFADD__(v7, 1))
          {
            __break(1u);
LABEL_108:
            __break(1u);
            goto LABEL_109;
          }
          if (v14 >= v54) {
            goto LABEL_106;
          }
          unint64_t v15 = *(void *)(v51 + 8 * v14);
          ++v7;
          if (!v15)
          {
            int64_t v7 = v14 + 1;
            if (v14 + 1 >= v54) {
              goto LABEL_106;
            }
            unint64_t v15 = *(void *)(v51 + 8 * v7);
            if (!v15)
            {
              int64_t v7 = v14 + 2;
              if (v14 + 2 >= v54) {
                goto LABEL_106;
              }
              unint64_t v15 = *(void *)(v51 + 8 * v7);
              if (!v15)
              {
                int64_t v16 = v14 + 3;
                if (v16 >= v54) {
                  goto LABEL_106;
                }
                unint64_t v15 = *(void *)(v51 + 8 * v16);
                if (!v15)
                {
                  while (1)
                  {
                    int64_t v7 = v16 + 1;
                    if (__OFADD__(v16, 1)) {
                      break;
                    }
                    if (v7 >= v54) {
                      goto LABEL_106;
                    }
                    unint64_t v15 = *(void *)(v51 + 8 * v7);
                    ++v16;
                    if (v15) {
                      goto LABEL_22;
                    }
                  }
LABEL_109:
                  __break(1u);
                  goto LABEL_110;
                }
                int64_t v7 = v16;
              }
            }
          }
LABEL_22:
          unint64_t v10 = (v15 - 1) & v15;
          unint64_t v13 = __clz(__rbit64(v15)) + (v7 << 6);
        }
        int v17 = *(unsigned __int8 *)(*(void *)(a4 + 48) + v13);
        sub_1C6577150();
        sub_1C65765E0();
        swift_bridgeObjectRelease();
        uint64_t v18 = sub_1C6577190();
        uint64_t v19 = -1 << *(unsigned char *)(v5 + 32);
        unint64_t v20 = v18 & ~v19;
      }
      while (((*(void *)(v11 + ((v20 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v20) & 1) == 0);
      int64_t v56 = v7;
      uint64_t v21 = ~v19;
      while (1)
      {
        unint64_t v22 = 0xE600000000000000;
        uint64_t v23 = 0x656E6F685069;
        switch(*(unsigned char *)(*(void *)(v5 + 48) + v20))
        {
          case 1:
            uint64_t v23 = 0x72506E6F69736976;
            unint64_t v22 = 0xE90000000000006FLL;
            break;
          case 2:
            unint64_t v22 = 0xE400000000000000;
            uint64_t v23 = 1684099177;
            break;
          case 3:
            unint64_t v22 = 0xE700000000000000;
            uint64_t v23 = 0x79616C50726163;
            break;
          case 4:
            unint64_t v22 = 0xE500000000000000;
            uint64_t v23 = 0x6863746177;
            break;
          case 5:
            unint64_t v22 = 0xE700000000000000;
            uint64_t v23 = 0x5654656C707061;
            break;
          case 6:
            unint64_t v22 = 0xE700000000000000;
            uint64_t v23 = 0x646F70656D6F68;
            break;
          case 7:
            unint64_t v22 = 0xE300000000000000;
            uint64_t v23 = 6513005;
            break;
          case 8:
            unint64_t v22 = 0xE300000000000000;
            uint64_t v23 = 6582128;
            break;
          default:
            break;
        }
        unint64_t v24 = 0xE600000000000000;
        uint64_t v25 = 0x656E6F685069;
        switch(v17)
        {
          case 1:
            uint64_t v25 = 0x72506E6F69736976;
            unint64_t v24 = 0xE90000000000006FLL;
            break;
          case 2:
            unint64_t v24 = 0xE400000000000000;
            uint64_t v25 = 1684099177;
            break;
          case 3:
            unint64_t v24 = 0xE700000000000000;
            uint64_t v25 = 0x79616C50726163;
            break;
          case 4:
            unint64_t v24 = 0xE500000000000000;
            uint64_t v25 = 0x6863746177;
            break;
          case 5:
            unint64_t v24 = 0xE700000000000000;
            uint64_t v25 = 0x5654656C707061;
            break;
          case 6:
            unint64_t v24 = 0xE700000000000000;
            uint64_t v25 = 0x646F70656D6F68;
            break;
          case 7:
            unint64_t v24 = 0xE300000000000000;
            uint64_t v25 = 6513005;
            break;
          case 8:
            unint64_t v24 = 0xE300000000000000;
            uint64_t v25 = 6582128;
            break;
          default:
            break;
        }
        if (v23 == v25 && v22 == v24) {
          break;
        }
        char v27 = sub_1C6577090();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v5 = a3;
        if (v27) {
          goto LABEL_51;
        }
        unint64_t v20 = (v20 + 1) & v21;
        if (((*(void *)(v11 + ((v20 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v20) & 1) == 0)
        {
          int64_t v7 = v56;
          goto LABEL_7;
        }
      }
      swift_bridgeObjectRelease_n();
      uint64_t v5 = a3;
LABEL_51:
      *(unint64_t *)((char *)a1 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v20;
      int64_t v7 = v56;
      uint64_t v6 = v58 + 1;
    }
    while (!__OFADD__(v58, 1));
    __break(1u);
  }
  uint64_t v50 = v5 + 56;
  uint64_t v28 = 1 << *(unsigned char *)(v5 + 32);
  if (v28 < 64) {
    uint64_t v29 = ~(-1 << v28);
  }
  else {
    uint64_t v29 = -1;
  }
  unint64_t v30 = v29 & *(void *)(v5 + 56);
  int64_t v52 = (unint64_t)(v28 + 63) >> 6;
  uint64_t v31 = a4 + 56;
  do
  {
    uint64_t v58 = v6;
    do
    {
LABEL_59:
      if (v30)
      {
        unint64_t v32 = __clz(__rbit64(v30));
        v30 &= v30 - 1;
        unint64_t v33 = v32 | (v7 << 6);
      }
      else
      {
        int64_t v34 = v7 + 1;
        if (__OFADD__(v7, 1)) {
          goto LABEL_108;
        }
        if (v34 >= v52) {
          goto LABEL_106;
        }
        unint64_t v35 = *(void *)(v50 + 8 * v34);
        ++v7;
        if (!v35)
        {
          int64_t v7 = v34 + 1;
          if (v34 + 1 >= v52) {
            goto LABEL_106;
          }
          unint64_t v35 = *(void *)(v50 + 8 * v7);
          if (!v35)
          {
            int64_t v7 = v34 + 2;
            if (v34 + 2 >= v52) {
              goto LABEL_106;
            }
            unint64_t v35 = *(void *)(v50 + 8 * v7);
            if (!v35)
            {
              int64_t v36 = v34 + 3;
              if (v36 >= v52) {
                goto LABEL_106;
              }
              unint64_t v35 = *(void *)(v50 + 8 * v36);
              if (!v35)
              {
                while (1)
                {
                  int64_t v7 = v36 + 1;
                  if (__OFADD__(v36, 1)) {
                    break;
                  }
                  if (v7 >= v52) {
                    goto LABEL_106;
                  }
                  unint64_t v35 = *(void *)(v50 + 8 * v7);
                  ++v36;
                  if (v35) {
                    goto LABEL_74;
                  }
                }
LABEL_110:
                __break(1u);
                JUMPOUT(0x1C64FA19CLL);
              }
              int64_t v7 = v36;
            }
          }
        }
LABEL_74:
        unint64_t v30 = (v35 - 1) & v35;
        unint64_t v33 = __clz(__rbit64(v35)) + (v7 << 6);
      }
      int v37 = *(unsigned __int8 *)(*(void *)(v5 + 48) + v33);
      sub_1C6577150();
      sub_1C65765E0();
      swift_bridgeObjectRelease();
      uint64_t v38 = sub_1C6577190();
      uint64_t v39 = -1 << *(unsigned char *)(a4 + 32);
      unint64_t v40 = v38 & ~v39;
    }
    while (((*(void *)(v31 + ((v40 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v40) & 1) == 0);
    unint64_t v55 = v33;
    int64_t v57 = v7;
    uint64_t v41 = ~v39;
    while (1)
    {
      unint64_t v42 = 0xE600000000000000;
      uint64_t v43 = 0x656E6F685069;
      switch(*(unsigned char *)(*(void *)(a4 + 48) + v40))
      {
        case 1:
          uint64_t v43 = 0x72506E6F69736976;
          unint64_t v42 = 0xE90000000000006FLL;
          break;
        case 2:
          unint64_t v42 = 0xE400000000000000;
          uint64_t v43 = 1684099177;
          break;
        case 3:
          unint64_t v42 = 0xE700000000000000;
          uint64_t v43 = 0x79616C50726163;
          break;
        case 4:
          unint64_t v42 = 0xE500000000000000;
          uint64_t v43 = 0x6863746177;
          break;
        case 5:
          unint64_t v42 = 0xE700000000000000;
          uint64_t v43 = 0x5654656C707061;
          break;
        case 6:
          unint64_t v42 = 0xE700000000000000;
          uint64_t v43 = 0x646F70656D6F68;
          break;
        case 7:
          unint64_t v42 = 0xE300000000000000;
          uint64_t v43 = 6513005;
          break;
        case 8:
          unint64_t v42 = 0xE300000000000000;
          uint64_t v43 = 6582128;
          break;
        default:
          break;
      }
      unint64_t v44 = 0xE600000000000000;
      uint64_t v45 = 0x656E6F685069;
      switch(v37)
      {
        case 1:
          uint64_t v45 = 0x72506E6F69736976;
          unint64_t v44 = 0xE90000000000006FLL;
          break;
        case 2:
          unint64_t v44 = 0xE400000000000000;
          uint64_t v45 = 1684099177;
          break;
        case 3:
          unint64_t v44 = 0xE700000000000000;
          uint64_t v45 = 0x79616C50726163;
          break;
        case 4:
          unint64_t v44 = 0xE500000000000000;
          uint64_t v45 = 0x6863746177;
          break;
        case 5:
          unint64_t v44 = 0xE700000000000000;
          uint64_t v45 = 0x5654656C707061;
          break;
        case 6:
          unint64_t v44 = 0xE700000000000000;
          uint64_t v45 = 0x646F70656D6F68;
          break;
        case 7:
          unint64_t v44 = 0xE300000000000000;
          uint64_t v45 = 6513005;
          break;
        case 8:
          unint64_t v44 = 0xE300000000000000;
          uint64_t v45 = 6582128;
          break;
        default:
          break;
      }
      if (v43 == v45 && v42 == v44) {
        break;
      }
      char v47 = sub_1C6577090();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v47) {
        goto LABEL_103;
      }
      unint64_t v40 = (v40 + 1) & v41;
      if (((*(void *)(v31 + ((v40 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v40) & 1) == 0)
      {
        uint64_t v5 = a3;
        int64_t v7 = v57;
        goto LABEL_59;
      }
    }
    swift_bridgeObjectRelease_n();
LABEL_103:
    *(unint64_t *)((char *)a1 + ((v55 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v55;
    int64_t v7 = v57;
    uint64_t v6 = v58 + 1;
    uint64_t v5 = a3;
  }
  while (!__OFADD__(v58, 1));
  __break(1u);
LABEL_106:
  swift_retain();
  return sub_1C64FA274(a1, a2, v58, v5);
}

uint64_t sub_1C64FA274(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  if (!a3)
  {
    uint64_t v9 = MEMORY[0x1E4FBC870];
    goto LABEL_35;
  }
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) != a3)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFB808);
    uint64_t v8 = sub_1C6576C40();
    uint64_t v9 = v8;
    unint64_t v30 = a1;
    if (a2 < 1) {
      unint64_t v10 = 0;
    }
    else {
      unint64_t v10 = *a1;
    }
    uint64_t v11 = 0;
    uint64_t v12 = v8 + 56;
    while (1)
    {
      if (v10)
      {
        unint64_t v13 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v14 = v13 | (v11 << 6);
      }
      else
      {
        uint64_t v15 = v11 + 1;
        if (__OFADD__(v11, 1)) {
          goto LABEL_39;
        }
        if (v15 >= a2) {
          goto LABEL_35;
        }
        unint64_t v16 = v30[v15];
        ++v11;
        if (!v16)
        {
          uint64_t v11 = v15 + 1;
          if (v15 + 1 >= a2) {
            goto LABEL_35;
          }
          unint64_t v16 = v30[v11];
          if (!v16)
          {
            uint64_t v11 = v15 + 2;
            if (v15 + 2 >= a2) {
              goto LABEL_35;
            }
            unint64_t v16 = v30[v11];
            if (!v16)
            {
              uint64_t v17 = v15 + 3;
              if (v17 >= a2) {
                goto LABEL_35;
              }
              unint64_t v16 = v30[v17];
              if (!v16)
              {
                while (1)
                {
                  uint64_t v11 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_40;
                  }
                  if (v11 >= a2) {
                    goto LABEL_35;
                  }
                  unint64_t v16 = v30[v11];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              uint64_t v11 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v10 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
      }
      char v18 = *(unsigned char *)(*(void *)(v4 + 48) + v14);
      sub_1C6577150();
      sub_1C65765E0();
      swift_bridgeObjectRelease();
      uint64_t v19 = sub_1C6577190();
      uint64_t v20 = -1 << *(unsigned char *)(v9 + 32);
      unint64_t v21 = v19 & ~v20;
      unint64_t v22 = v21 >> 6;
      if (((-1 << v21) & ~*(void *)(v12 + 8 * (v21 >> 6))) != 0)
      {
        unint64_t v23 = __clz(__rbit64((-1 << v21) & ~*(void *)(v12 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
        goto LABEL_33;
      }
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          JUMPOUT(0x1C64FA5B8);
        }
        BOOL v26 = v22 == v25;
        if (v22 == v25) {
          unint64_t v22 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v12 + 8 * v22);
      }
      while (v27 == -1);
      unint64_t v23 = __clz(__rbit64(~v27)) + (v22 << 6);
LABEL_33:
      *(void *)(v12 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
      *(unsigned char *)(*(void *)(v9 + 48) + v23) = v18;
      ++*(void *)(v9 + 16);
      if (__OFSUB__(v5--, 1)) {
        goto LABEL_38;
      }
      if (!v5)
      {
LABEL_35:
        swift_release();
        return v9;
      }
    }
  }
  return v4;
}

void (*sub_1C64FA5DC(void *a1, char a2))(uint64_t a1)
{
  uint64_t v4 = malloc(0x50uLL);
  *a1 = v4;
  swift_isUniquelyReferenced_nonNull_native();
  v4[8] = sub_1C64FA898(v4);
  v4[9] = sub_1C64FA6C0((uint64_t)(v4 + 4), a2);
  return sub_1C64FA66C;
}

void sub_1C64FA66C(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  uint64_t v2 = *(void (**)(uint64_t))(*(void *)a1 + 64);
  (*(void (**)(void))(*(void *)a1 + 72))();
  uint64_t v3 = OUTLINED_FUNCTION_44_2();
  v2(v3);

  free(v1);
}

unint64_t (*sub_1C64FA6C0(uint64_t a1, char a2))(unint64_t result)
{
  uint64_t v3 = v2;
  *(void *)(a1 + 8) = v2;
  *(unsigned char *)(a1 + 24) = a2;
  uint64_t v6 = *v2;
  unint64_t v7 = sub_1C6574828(a2);
  *(unsigned char *)(a1 + 25) = v8 & 1;
  if (__OFADD__(*(void *)(v6 + 16), (v8 & 1) == 0))
  {
    __break(1u);
    goto LABEL_10;
  }
  unint64_t v9 = v7;
  char v10 = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F15C8);
  if (sub_1C6576D80())
  {
    unint64_t v11 = sub_1C6574828(a2);
    if ((v10 & 1) == (v12 & 1))
    {
      unint64_t v9 = v11;
      goto LABEL_5;
    }
LABEL_10:
    uint64_t result = (unint64_t (*)(unint64_t))sub_1C6577100();
    __break(1u);
    return result;
  }
LABEL_5:
  *(void *)(a1 + 16) = v9;
  if (v10) {
    uint64_t v13 = *(void *)(*(void *)(*v3 + 56) + 8 * v9);
  }
  else {
    uint64_t v13 = 0;
  }
  *(void *)a1 = v13;
  return sub_1C64FA7D0;
}

unint64_t sub_1C64FA7D0(unint64_t result)
{
  uint64_t v1 = *(void *)result;
  if (*(void *)result)
  {
    uint64_t v2 = **(void ***)(result + 8);
    if (*(unsigned char *)(result + 25))
    {
      *(void *)(v2[7] + 8 * *(void *)(result + 16)) = v1;
    }
    else
    {
      char v3 = *(unsigned char *)(result + 24);
      unint64_t v4 = *(void *)(result + 16);
      return sub_1C656356C(v4, v3, v1, v2);
    }
  }
  else if (*(unsigned char *)(result + 25))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F15C0);
    sub_1C64FB398();
    return sub_1C6576DA0();
  }
  return result;
}

uint64_t (*sub_1C64FA898(void *a1))(uint64_t result)
{
  *a1 = *v1;
  a1[1] = v1;
  *uint64_t v1 = 0x8000000000000000;
  return sub_1C64FA8C8;
}

uint64_t sub_1C64FA8C8(uint64_t result)
{
  **(void **)(result + 8) = *(void *)result;
  return result;
}

int64_t sub_1C64FA8D4(int64_t result, int a2, char a3, uint64_t a4)
{
  if (a3) {
    goto LABEL_20;
  }
  unint64_t v4 = result;
  if (result < 0 || (uint64_t result = 1 << *(unsigned char *)(a4 + 32), result <= (uint64_t)v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  unint64_t v5 = v4 >> 6;
  uint64_t v6 = a4 + 56;
  unint64_t v7 = *(void *)(a4 + 56 + 8 * (v4 >> 6));
  if (((v7 >> v4) & 1) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
  unint64_t v8 = v7 & (-2 << (v4 & 0x3F));
  if (v8) {
    return __clz(__rbit64(v8)) | v4 & 0xFFFFFFFFFFFFFFC0;
  }
  unint64_t v9 = v5 + 1;
  if (v5 + 1 < (unint64_t)(result + 63) >> 6)
  {
    unint64_t v10 = *(void *)(v6 + 8 * v9);
    if (v10) {
      return __clz(__rbit64(v10)) + (v9 << 6);
    }
    unint64_t v11 = (unint64_t)(result + 63) >> 6;
    unint64_t v9 = v5 + 2;
    if (v5 + 2 < v11)
    {
      unint64_t v10 = *(void *)(v6 + 8 * v9);
      if (v10) {
        return __clz(__rbit64(v10)) + (v9 << 6);
      }
      while (v5 + 3 < v11)
      {
        unint64_t v10 = *(void *)(a4 + 80 + 8 * v5++);
        if (v10)
        {
          unint64_t v9 = v5 + 2;
          return __clz(__rbit64(v10)) + (v9 << 6);
        }
      }
    }
  }
  return result;
}

uint64_t sub_1C64FA9B8(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 56);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  uint64_t v2 = 64;
  for (uint64_t i = 9; i - 7 < (unint64_t)(v3 + 63) >> 6; ++i)
  {
    unint64_t v1 = *(void *)(a1 + 8 * i);
    v2 += 64;
    if (v1) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

void sub_1C64FAA38()
{
  OUTLINED_FUNCTION_49_0();
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  OUTLINED_FUNCTION_24_4();
  OUTLINED_FUNCTION_0_2();
  uint64_t v9 = v8;
  MEMORY[0x1F4188790](v10);
  OUTLINED_FUNCTION_15_0();
  uint64_t v13 = v12 - v11;
  uint64_t v14 = swift_allocObject();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v13, v2, v7);
  sub_1C64FAB28(v3, v13, v1, v0, v14, v7, v5);
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v2, v7);
  OUTLINED_FUNCTION_39_0();
}

uint64_t sub_1C64FAB28(uint64_t a1, uint64_t a2, char a3, long long *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v15[3] = a6;
  void v15[4] = a7;
  boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm(v15);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a6 - 8) + 32))(boxed_opaque_existential_1Tm, a2, a6);
  *(void *)(a5 + 16) = a1;
  sub_1C649FA30((uint64_t)v15, a5 + 24);
  *(unsigned char *)(a5 + 64) = a3;
  sub_1C64A5488(a4, a5 + 72);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
  *(unsigned char *)(a5 + 112) = 0;
  *(_OWORD *)(a5 + 120) = xmmword_1C657F220;
  return a5;
}

uint64_t sub_1C64FABEC(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F1588);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1C64FAC4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    sub_1C64DE804(a4, a5);
  }
}

uint64_t sub_1C64FACB0(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1C64FB22C(&qword_1EBBF95B8, a2, (void (*)(uint64_t))type metadata accessor for NoOpPrerequisite);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t type metadata accessor for NoOpPrerequisite()
{
  return self;
}

uint64_t sub_1C64FAD2C(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1C64FB22C(&qword_1EBBF9720, a2, (void (*)(uint64_t))type metadata accessor for UnionPrerequisite);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t type metadata accessor for UnionPrerequisite()
{
  return self;
}

uint64_t sub_1C64FADA8(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1C64FB22C(&qword_1EBBF9A28, a2, (void (*)(uint64_t))type metadata accessor for LocalePrerequisite);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t type metadata accessor for LocalePrerequisite()
{
  return self;
}

uint64_t sub_1C64FAE24(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1C64FB22C(&qword_1EBBF9B78, a2, (void (*)(uint64_t))type metadata accessor for NetworkPrerequisite);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t type metadata accessor for NetworkPrerequisite()
{
  return self;
}

uint64_t sub_1C64FAEA0(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1C64FB22C(&qword_1EBBF9968, a2, (void (*)(uint64_t))type metadata accessor for DevicePrerequisite);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t type metadata accessor for DevicePrerequisite()
{
  return self;
}

uint64_t sub_1C64FAF1C(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1C64FB22C(&qword_1EBBFA280, a2, (void (*)(uint64_t))type metadata accessor for InvocationTypePrerequisite);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t type metadata accessor for InvocationTypePrerequisite()
{
  return self;
}

uint64_t sub_1C64FAF98(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1C64FB22C(&qword_1EBBFA330, a2, (void (*)(uint64_t))type metadata accessor for DeliveryVehiclePrerequisite);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t type metadata accessor for DeliveryVehiclePrerequisite()
{
  return self;
}

uint64_t sub_1C64FB014(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1C64FB22C(&qword_1EBBFAE28, a2, (void (*)(uint64_t))type metadata accessor for ShouldBeEnabledFromConfigPrerequisite);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t type metadata accessor for ShouldBeEnabledFromConfigPrerequisite()
{
  return self;
}

uint64_t dispatch thunk of Prerequisite.isValid(environment:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of Prerequisite.isValid(environment:invocationType:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t dispatch thunk of Prerequisite.isValid(environment:invocationType:deliveryVehicle:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 32))();
}

uint64_t method lookup function for NoOpPrerequisite(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for NoOpPrerequisite);
}

uint64_t method lookup function for UnionPrerequisite(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for UnionPrerequisite);
}

uint64_t dispatch thunk of UnionPrerequisite.__allocating_init(prerequisites:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t method lookup function for LocalePrerequisite(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for LocalePrerequisite);
}

uint64_t dispatch thunk of LocalePrerequisite.__allocating_init(locales:includes:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t method lookup function for NetworkPrerequisite(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for NetworkPrerequisite);
}

uint64_t dispatch thunk of NetworkPrerequisite.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t method lookup function for DevicePrerequisite(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for DevicePrerequisite);
}

uint64_t dispatch thunk of DevicePrerequisite.__allocating_init(devices:includes:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t method lookup function for InvocationTypePrerequisite(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for InvocationTypePrerequisite);
}

uint64_t dispatch thunk of InvocationTypePrerequisite.__allocating_init(validInvocationTypes:policyConfig:isIntentObservationEnabled:clock:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of InvocationTypePrerequisite.__allocating_init(validInvocationTypes:policyConfig:isIntentObservationEnabled:clock:intentObservationEnabledIn:)()
{
  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t method lookup function for DeliveryVehiclePrerequisite(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for DeliveryVehiclePrerequisite);
}

uint64_t dispatch thunk of DeliveryVehiclePrerequisite.__allocating_init(deliveryVehicles:includes:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t method lookup function for ShouldBeEnabledFromConfigPrerequisite(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ShouldBeEnabledFromConfigPrerequisite);
}

uint64_t dispatch thunk of ShouldBeEnabledFromConfigPrerequisite.__allocating_init(suggestionId:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t sub_1C64FB22C(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C64FB274()
{
  unint64_t result = qword_1EBBF95A0;
  if (!qword_1EBBF95A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBBF95A0);
  }
  return result;
}

uint64_t sub_1C64FB2C0(uint64_t a1, void (*a2)(void, void, void, void, void))
{
  return a1;
}

unint64_t sub_1C64FB300()
{
  unint64_t result = qword_1EBBF9560;
  if (!qword_1EBBF9560)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBBF9560);
  }
  return result;
}

unint64_t sub_1C64FB34C()
{
  unint64_t result = qword_1EBBFB538;
  if (!qword_1EBBFB538)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBBFB538);
  }
  return result;
}

unint64_t sub_1C64FB398()
{
  unint64_t result = qword_1EA3F15B8;
  if (!qword_1EA3F15B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F15B8);
  }
  return result;
}

uint64_t sub_1C64FB3E4(uint64_t a1, double a2)
{
  return sub_1C64F0CE8(a1, *(uint64_t **)(v2 + 16), a2);
}

uint64_t sub_1C64FB3EC(char *a1, uint64_t a2)
{
  return sub_1C64F1184(a1, a2);
}

unint64_t sub_1C64FB3F4()
{
  unint64_t result = qword_1EBBF92D0;
  if (!qword_1EBBF92D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBBF92D0);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_4_10()
{
  return *(void *)(v0 - 112);
}

void OUTLINED_FUNCTION_5_9()
{
  uint64_t v2 = *(void *)(v1 - 96);
  *(void *)(v1 - 144) = v2 + 16;
  *(void *)(v1 - 136) = v0 + 56;
  *(void *)(v1 - 160) = v2 + 8;
  *(void *)(v1 - 152) = v2 + 32;
}

uint64_t OUTLINED_FUNCTION_6_5()
{
  return sub_1C64F16B4(25);
}

uint64_t OUTLINED_FUNCTION_7_8()
{
  uint64_t v1 = v0[3];
  __swift_project_boxed_opaque_existential_1(v0, v1);
  return v1;
}

uint64_t OUTLINED_FUNCTION_10_4()
{
  return sub_1C6577150();
}

uint64_t OUTLINED_FUNCTION_12_3()
{
  return swift_slowAlloc();
}

uint64_t OUTLINED_FUNCTION_14_4(uint64_t a1, uint64_t a2)
{
  __swift_project_value_buffer(a1, a2);
  return sub_1C6576380();
}

uint64_t OUTLINED_FUNCTION_17_7()
{
  return *(void *)(v0 - 128);
}

int64_t OUTLINED_FUNCTION_18_7(int64_t a1, int a2, char a3)
{
  return sub_1C64FA8D4(a1, a2, a3, v3);
}

BOOL OUTLINED_FUNCTION_20_5(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

uint64_t OUTLINED_FUNCTION_22_6()
{
  return sub_1C65765E0();
}

uint64_t OUTLINED_FUNCTION_25_5()
{
  sub_1C64E7578(v0, v1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_26_7()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_27_4()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_28_3()
{
  return v0;
}

void OUTLINED_FUNCTION_30_5()
{
  sub_1C64A2210();
}

uint64_t OUTLINED_FUNCTION_31_6()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_32_6()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_33_5()
{
  return sub_1C6576B40();
}

uint64_t OUTLINED_FUNCTION_34_4()
{
  return swift_allocObject();
}

void OUTLINED_FUNCTION_35_5()
{
  sub_1C64A2210();
}

BOOL OUTLINED_FUNCTION_36_2(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

uint64_t OUTLINED_FUNCTION_38_4()
{
  return 0;
}

void OUTLINED_FUNCTION_39_4()
{
  sub_1C64A2210();
}

uint64_t OUTLINED_FUNCTION_40_4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, char a19, uint64_t a20)
{
  return sub_1C64A21C4(v20, v21, v22, a20, a19);
}

uint64_t OUTLINED_FUNCTION_41_4()
{
  return swift_slowAlloc();
}

void OUTLINED_FUNCTION_42_3(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v5, a4, v6, 2u);
}

uint64_t OUTLINED_FUNCTION_43_4(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  return sub_1C64BCF18(a1, a2, (uint64_t *)va);
}

uint64_t OUTLINED_FUNCTION_44_2()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_46_3()
{
  return SuggestionsOSInfo.description.getter();
}

void OUTLINED_FUNCTION_48_3(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v6, a4, v5, 0xCu);
}

uint64_t OUTLINED_FUNCTION_51_2()
{
  return v0;
}

uint64_t sub_1C64FB930()
{
  OUTLINED_FUNCTION_44_3();
  if (v1)
  {
    sub_1C64E740C(v0, v6);
    OUTLINED_FUNCTION_20_6();
    sub_1C65626F0();
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_1C64B0858((uint64_t)v0, &qword_1EBBFBE60);
    uint64_t v3 = OUTLINED_FUNCTION_39_5();
    sub_1C64FF56C(v3, v4, v5);
    swift_bridgeObjectRelease();
    return sub_1C64B0858((uint64_t)v6, &qword_1EBBFBE60);
  }
}

uint64_t sub_1C64FB9B4()
{
  OUTLINED_FUNCTION_44_3();
  if (v1)
  {
    sub_1C64A5488(v0, (uint64_t)v6);
    OUTLINED_FUNCTION_20_6();
    sub_1C6562744();
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_1C64B0858((uint64_t)v0, &qword_1EA3F1668);
    uint64_t v3 = OUTLINED_FUNCTION_39_5();
    sub_1C64FF6A4(v3, v4, v5);
    swift_bridgeObjectRelease();
    return sub_1C64B0858((uint64_t)v6, &qword_1EA3F1668);
  }
}

uint64_t sub_1C64FBA38()
{
  OUTLINED_FUNCTION_44_3();
  if (v1)
  {
    sub_1C64A7BBC(v0, v9);
    OUTLINED_FUNCTION_20_6();
    sub_1C6562870(v2, v3, v4);
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_1C64B0858((uint64_t)v0, &qword_1EA3F0800);
    uint64_t v6 = OUTLINED_FUNCTION_39_5();
    sub_1C64FF8B0(v6, v7, v8);
    swift_bridgeObjectRelease();
    return sub_1C64B0858((uint64_t)v9, &qword_1EA3F0800);
  }
}

uint64_t sub_1C64FBABC(uint64_t a1, void *a2)
{
  if (*(void *)(a1 + 24))
  {
    sub_1C64A5488((long long *)a1, (uint64_t)v4);
    sub_1C6562888((uint64_t)v4, a2);
    return sub_1C64B81B4((uint64_t)a2);
  }
  else
  {
    sub_1C64B0858(a1, &qword_1EBBFA548);
    sub_1C64FF9F4(a2, (uint64_t)v4);
    sub_1C64B81B4((uint64_t)a2);
    return sub_1C64B0858((uint64_t)v4, &qword_1EBBFA548);
  }
}

uint64_t sub_1C64FBB44(uint64_t a1)
{
  if (*(void *)(a1 + 40))
  {
    long long v1 = *(_OWORD *)(a1 + 16);
    v9[0] = *(_OWORD *)a1;
    v9[1] = v1;
    _OWORD v9[2] = *(_OWORD *)(a1 + 32);
    OUTLINED_FUNCTION_20_6();
    sub_1C6562978(v2, v3, v4);
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_1C64B0858(a1, &qword_1EA3F1678);
    uint64_t v6 = OUTLINED_FUNCTION_39_5();
    sub_1C64FFB34(v6, v7, v8);
    swift_bridgeObjectRelease();
    return sub_1C64B0858((uint64_t)v9, &qword_1EA3F1678);
  }
}

uint64_t Context.setWindowPartition(windowPartition:)()
{
  OUTLINED_FUNCTION_49_1();
  OUTLINED_FUNCTION_8_5(v0, v1, v2);
  uint64_t v3 = swift_task_alloc();
  uint64_t v4 = (void *)OUTLINED_FUNCTION_19_8(v3);
  *uint64_t v4 = v5;
  v4[1] = sub_1C64FBC68;
  OUTLINED_FUNCTION_6_6();
  return Context.getSourceOwner()();
}

uint64_t sub_1C64FBC68()
{
  OUTLINED_FUNCTION_49_1();
  OUTLINED_FUNCTION_0_0();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_3_1();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_17_8();
  OUTLINED_FUNCTION_12_4();
  OUTLINED_FUNCTION_11_7();
  return MEMORY[0x1F4188298](v3, v4, v5);
}

uint64_t sub_1C64FBD7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  OUTLINED_FUNCTION_34_1();
  OUTLINED_FUNCTION_26_4();
  OUTLINED_FUNCTION_3_11();
  OUTLINED_FUNCTION_67();
  OUTLINED_FUNCTION_7_9();
  v14();
  OUTLINED_FUNCTION_43_5();
  OUTLINED_FUNCTION_67();
  OUTLINED_FUNCTION_7_9();
  v15();
  OUTLINED_FUNCTION_40_5(v12, 17, 0x80000001C6588DB0);
  OUTLINED_FUNCTION_16_8(v13);
  OUTLINED_FUNCTION_32_3();
  return v17(v16, v17, v18, v19, v20, v21, v22, v23, a9, a10, a11, a12);
}

uint64_t sub_1C64FBE4C()
{
  uint64_t v0 = swift_bridgeObjectRetain();
  return sub_1C64FBEA0(v0);
}

uint64_t sub_1C64FBE78()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C64FBEA0(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 112) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1C64FBEE8())()
{
  return j__swift_endAccess;
}

uint64_t ContextContainer.storedGenerationContext.getter()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_1C64FBF64(uint64_t a1, uint64_t a2)
{
  if (*(void *)(v2 + 120))
  {
    uint64_t v2 = *(void *)(v2 + 120);
  }
  else
  {
    sub_1C64FFE0C(&qword_1EBBFB558, a2, (void (*)(uint64_t))type metadata accessor for ContextContainer);
    swift_unknownObjectRetain();
  }
  swift_unknownObjectRetain();
  return v2;
}

void *static ContextContainer.createContext(targetOwner:suggestionEnablementState:generationContext:)(uint64_t a1, char *a2, uint64_t a3, uint64_t a4)
{
  char v7 = *a2;
  uint64_t v18 = sub_1C6576460();
  sub_1C64FE8F4(a1, (uint64_t)&v14);
  if (v15)
  {
    sub_1C64A5488(&v14, (uint64_t)v16);
    uint64_t v8 = v17;
    __swift_project_boxed_opaque_existential_1(v16, (uint64_t)v17);
    uint64_t v15 = v8;
    __swift_allocate_boxed_opaque_existential_1Tm((uint64_t *)&v14);
    OUTLINED_FUNCTION_67();
    OUTLINED_FUNCTION_7_9();
    v9();
    OUTLINED_FUNCTION_46_4();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
  }
  else
  {
    sub_1C64B0858((uint64_t)&v14, &qword_1EBBF8EB8);
  }
  uint64_t v17 = &type metadata for SuggestionEnablementState;
  LOBYTE(v16[0]) = v7;
  sub_1C64FB930();
  uint64_t v10 = v18;
  type metadata accessor for ContextContainer();
  uint64_t v11 = (void *)swift_allocObject();
  swift_unknownObjectRetain();
  swift_defaultActor_initialize();
  v11[14] = v10;
  v11[15] = a3;
  v11[16] = a4;
  sub_1C64FFE0C(&qword_1EBBFB568, v12, (void (*)(uint64_t))type metadata accessor for ContextContainer);
  return v11;
}

void *ContextContainer.__allocating_init(params:generationContext:)()
{
  OUTLINED_FUNCTION_53_3();
  uint64_t v3 = (void *)swift_allocObject();
  swift_defaultActor_initialize();
  v3[14] = v2;
  v3[15] = v1;
  v3[16] = v0;
  return v3;
}

void *static ContextContainer.createGenerationContext(generationId:sourceOwner:invocationType:)(uint64_t a1, uint64_t a2, __int16 *a3)
{
  __int16 v4 = *a3;
  uint64_t v16 = sub_1C6576460();
  uint64_t v15 = (ValueMetadata *)sub_1C65761D0();
  __swift_allocate_boxed_opaque_existential_1Tm(v14);
  OUTLINED_FUNCTION_67();
  OUTLINED_FUNCTION_7_9();
  v5();
  sub_1C64FB930();
  sub_1C64FE8F4(a2, (uint64_t)&v12);
  if (v13)
  {
    sub_1C64A5488(&v12, (uint64_t)v14);
    uint64_t v6 = v15;
    __swift_project_boxed_opaque_existential_1(v14, (uint64_t)v15);
    uint64_t v13 = v6;
    __swift_allocate_boxed_opaque_existential_1Tm((uint64_t *)&v12);
    OUTLINED_FUNCTION_67();
    OUTLINED_FUNCTION_7_9();
    v7();
    OUTLINED_FUNCTION_46_4();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
  }
  else
  {
    sub_1C64B0858((uint64_t)&v12, &qword_1EBBF8EB8);
  }
  uint64_t v15 = &type metadata for InvocationType;
  LOWORD(v14[0]) = v4;
  sub_1C64FB930();
  uint64_t v8 = v16;
  type metadata accessor for ContextContainer();
  uint64_t v9 = (void *)swift_allocObject();
  swift_defaultActor_initialize();
  v9[14] = v8;
  sub_1C64FFE0C(&qword_1EBBFB558, v10, (void (*)(uint64_t))type metadata accessor for ContextContainer);
  v9[15] = 0;
  v9[16] = 0;
  return v9;
}

void *ContextContainer.init(params:generationContext:)()
{
  OUTLINED_FUNCTION_53_3();
  swift_defaultActor_initialize();
  v1[14] = v3;
  v1[15] = v2;
  v1[16] = v0;
  return v1;
}

uint64_t sub_1C64FC414()
{
  OUTLINED_FUNCTION_50_4();
  swift_bridgeObjectRetain();
  uint64_t v0 = sub_1C6576450();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t ContextContainer.deinit()
{
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t ContextContainer.__deallocating_deinit()
{
  ContextContainer.deinit();

  return MEMORY[0x1F4188210](v0);
}

void ContextContainer.unownedExecutor.getter()
{
}

void sub_1C64FC4EC()
{
}

uint64_t (*sub_1C64FC514())()
{
  return j_j__swift_endAccess;
}

BOOL static Party.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t Party.hash(into:)()
{
  return sub_1C6577160();
}

uint64_t sub_1C64FC5AC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7473726966 && a2 == 0xE500000000000000;
  if (v2 || (sub_1C6577090() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x646E6F636573 && a2 == 0xE600000000000000;
    if (v6 || (sub_1C6577090() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x6472696874 && a2 == 0xE500000000000000;
      if (v7 || (sub_1C6577090() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0x6E776F6E6B6E75 && a2 == 0xE700000000000000)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        char v9 = sub_1C6577090();
        swift_bridgeObjectRelease();
        if (v9) {
          return 3;
        }
        else {
          return 4;
        }
      }
    }
  }
}

uint64_t sub_1C64FC744(char a1)
{
  uint64_t result = 0x7473726966;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x646E6F636573;
      break;
    case 2:
      uint64_t result = 0x6472696874;
      break;
    case 3:
      uint64_t result = 0x6E776F6E6B6E75;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C64FC7C8()
{
  return sub_1C64FC744(*v0);
}

uint64_t sub_1C64FC7D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C64FC5AC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C64FC7F8(uint64_t a1)
{
  unint64_t v2 = sub_1C64FE95C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C64FC834(uint64_t a1)
{
  unint64_t v2 = sub_1C64FE95C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C64FC870(uint64_t a1)
{
  unint64_t v2 = sub_1C64FEA8C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C64FC8AC(uint64_t a1)
{
  unint64_t v2 = sub_1C64FEA8C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C64FC8E8(uint64_t a1)
{
  unint64_t v2 = sub_1C64FEA40();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C64FC924(uint64_t a1)
{
  unint64_t v2 = sub_1C64FEA40();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C64FC960(uint64_t a1)
{
  unint64_t v2 = sub_1C64FE9F4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C64FC99C(uint64_t a1)
{
  unint64_t v2 = sub_1C64FE9F4();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C64FC9D8(uint64_t a1)
{
  unint64_t v2 = sub_1C64FE9A8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C64FCA14(uint64_t a1)
{
  unint64_t v2 = sub_1C64FE9A8();

  return MEMORY[0x1F41862B0](a1, v2);
}

void Party.encode(to:)()
{
  OUTLINED_FUNCTION_25();
  uint64_t v3 = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFBA80);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v4);
  OUTLINED_FUNCTION_3();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFBA70);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_5_6(v6, v16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFBA78);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_3();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFBA68);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v8);
  OUTLINED_FUNCTION_22();
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFBA60);
  OUTLINED_FUNCTION_0();
  uint64_t v11 = v10;
  MEMORY[0x1F4188790](v12);
  OUTLINED_FUNCTION_17_2();
  uint64_t v13 = *v0;
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  sub_1C64FE95C();
  sub_1C6577240();
  switch(v13)
  {
    case 1:
      sub_1C64FEA40();
      OUTLINED_FUNCTION_26_8();
      break;
    case 2:
      sub_1C64FE9F4();
      OUTLINED_FUNCTION_26_8();
      break;
    case 3:
      sub_1C64FE9A8();
      OUTLINED_FUNCTION_26_8();
      break;
    default:
      sub_1C64FEA8C();
      OUTLINED_FUNCTION_26_8();
      break;
  }
  OUTLINED_FUNCTION_1();
  v15(v14);
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v1, v9);
  OUTLINED_FUNCTION_26();
}

uint64_t Party.hashValue.getter()
{
  return sub_1C6577190();
}

void Party.init(from:)()
{
  OUTLINED_FUNCTION_25();
  unint64_t v2 = v1;
  unint64_t v35 = v3;
  uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFB978);
  OUTLINED_FUNCTION_0();
  uint64_t v36 = v4;
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_3();
  uint64_t v38 = v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFB968);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_5_6(v8, v33);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFB970);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v9);
  OUTLINED_FUNCTION_15_0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFB960);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v10);
  OUTLINED_FUNCTION_22();
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFB958);
  OUTLINED_FUNCTION_0();
  uint64_t v37 = v12;
  MEMORY[0x1F4188790](v13);
  OUTLINED_FUNCTION_15_0();
  uint64_t v16 = v15 - v14;
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  sub_1C64FE95C();
  sub_1C6577210();
  if (v0) {
    goto LABEL_7;
  }
  unint64_t v40 = v2;
  uint64_t v17 = sub_1C6576F40();
  uint64_t v18 = *(void *)(v17 + 16);
  if (!v18
    || (uint64_t v34 = *(unsigned __int8 *)(v17 + 32),
        sub_1C649F97C(1, v18, v17, v17 + 32, 0, (2 * v18) | 1),
        uint64_t v20 = v19,
        unint64_t v22 = v21,
        swift_bridgeObjectRelease(),
        v20 != v22 >> 1))
  {
    sub_1C6576CE0();
    swift_allocError();
    char v24 = v23;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F0140);
    *char v24 = &type metadata for Party;
    sub_1C6576E90();
    sub_1C6576CD0();
    OUTLINED_FUNCTION_67();
    (*(void (**)(void *))(v25 + 104))(v24);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v16, v11);
    unint64_t v2 = v40;
LABEL_7:
    uint64_t v26 = (uint64_t)v2;
    goto LABEL_8;
  }
  switch(v34)
  {
    case 1:
      sub_1C64FEA40();
      OUTLINED_FUNCTION_3_7();
      goto LABEL_12;
    case 2:
      sub_1C64FE9F4();
      OUTLINED_FUNCTION_3_7();
      goto LABEL_12;
    case 3:
      sub_1C64FE9A8();
      OUTLINED_FUNCTION_3_7();
      (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v38, v39);
      swift_unknownObjectRelease();
      uint64_t v30 = OUTLINED_FUNCTION_1_10();
      v31(v30);
      uint64_t v26 = (uint64_t)v40;
      unint64_t v32 = v35;
      goto LABEL_13;
    default:
      sub_1C64FEA8C();
      OUTLINED_FUNCTION_3_7();
LABEL_12:
      OUTLINED_FUNCTION_1();
      v27();
      swift_unknownObjectRelease();
      uint64_t v28 = OUTLINED_FUNCTION_1_10();
      v29(v28);
      uint64_t v26 = (uint64_t)v40;
      unint64_t v32 = v35;
LABEL_13:
      *unint64_t v32 = v34;
      break;
  }
LABEL_8:
  __swift_destroy_boxed_opaque_existential_1(v26);
  OUTLINED_FUNCTION_26();
}

void sub_1C64FD280()
{
}

void sub_1C64FD298()
{
}

uint64_t AppIdDetails.appId.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

void AppIdDetails.party.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 16);
}

uint64_t static AppIdDetails.create(from:party:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned __int8 *a3@<X2>, uint64_t a4@<X8>)
{
  int v7 = *a3;
  if (v7 == 3)
  {
    OUTLINED_FUNCTION_10_5();
    if (sub_1C65766A0()) {
      LOBYTE(v7) = 0;
    }
    else {
      LOBYTE(v7) = 2;
    }
  }
  *(void *)a4 = a1;
  *(void *)(a4 + 8) = a2;
  *(unsigned char *)(a4 + 16) = v7;

  return swift_bridgeObjectRetain();
}

BOOL static AppIdDetails.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  int v2 = *(unsigned __int8 *)(a1 + 16);
  int v3 = *(unsigned __int8 *)(a2 + 16);
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8)) {
    return v2 == v3;
  }
  char v5 = sub_1C6577090();
  BOOL result = 0;
  if (v5) {
    return v2 == v3;
  }
  return result;
}

uint64_t AppIdDetails.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_1C65765E0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1C64FD418(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6449707061 && a2 == 0xE500000000000000;
  if (v2 || (sub_1C6577090() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7974726170 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_1C6577090();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1C64FD500(char a1)
{
  if (a1) {
    return 0x7974726170;
  }
  else {
    return 0x6449707061;
  }
}

uint64_t sub_1C64FD528()
{
  return sub_1C64FD500(*v0);
}

uint64_t sub_1C64FD530@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C64FD418(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C64FD558(uint64_t a1)
{
  unint64_t v2 = sub_1C64FFC78();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C64FD594(uint64_t a1)
{
  unint64_t v2 = sub_1C64FFC78();

  return MEMORY[0x1F41862B0](a1, v2);
}

void AppIdDetails.encode(to:)()
{
  OUTLINED_FUNCTION_25();
  unint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFBA58);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v3);
  OUTLINED_FUNCTION_15_0();
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  sub_1C64FFC78();
  sub_1C6577240();
  sub_1C6576FD0();
  if (!v0)
  {
    sub_1C64FFCC4();
    sub_1C6577010();
  }
  OUTLINED_FUNCTION_1();
  v4();
  OUTLINED_FUNCTION_26();
}

uint64_t AppIdDetails.hashValue.getter()
{
  return sub_1C6577190();
}

void AppIdDetails.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12)
{
  OUTLINED_FUNCTION_25();
  uint64_t v14 = v13;
  uint64_t v16 = v15;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFB950);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v17);
  OUTLINED_FUNCTION_17_2();
  __swift_project_boxed_opaque_existential_1(v14, v14[3]);
  sub_1C64FFC78();
  sub_1C6577210();
  if (v12)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
  }
  else
  {
    uint64_t v18 = sub_1C6576EF0();
    uint64_t v20 = v19;
    sub_1C64FFD10();
    swift_bridgeObjectRetain();
    sub_1C6576F30();
    uint64_t v21 = OUTLINED_FUNCTION_37_3();
    v22(v21);
    *(void *)uint64_t v16 = v18;
    *(void *)(v16 + 8) = v20;
    *(unsigned char *)(v16 + 16) = a12;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_26();
}

void sub_1C64FD90C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  AppIdDetails.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, *(int *)vars8, *(__int16 *)&vars8[4], vars8[6]);
}

void sub_1C64FD924()
{
}

uint64_t sub_1C64FD944()
{
  return sub_1C6577190();
}

uint64_t GenerationContext.getGenerationId()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F1600);
  MEMORY[0x1F4188790](v6 - 8);
  OUTLINED_FUNCTION_15_0();
  uint64_t v9 = v8 - v7;
  uint64_t v10 = (*(uint64_t (**)(uint64_t))(*(void *)(a2 + 8) + 16))(a1);
  sub_1C64EBFB8(0x6172656E65675F5FLL, 0xEF64695F6E6F6974, v10, &v16);
  swift_bridgeObjectRelease();
  if (v17)
  {
    uint64_t v11 = sub_1C65761D0();
    int v12 = swift_dynamicCast();
    __swift_storeEnumTagSinglePayload(v9, v12 ^ 1u, 1, v11);
    if (__swift_getEnumTagSinglePayload(v9, 1, v11) != 1)
    {
      OUTLINED_FUNCTION_67();
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 32))(a3, v9, v11);
    }
  }
  else
  {
    sub_1C64B0858((uint64_t)&v16, &qword_1EBBFBE60);
    uint64_t v15 = sub_1C65761D0();
    __swift_storeEnumTagSinglePayload(v9, 1, 1, v15);
  }
  sub_1C65761C0();
  return sub_1C64B0858(v9, &qword_1EA3F1600);
}

uint64_t GenerationContext.getSourceOwner()@<X0>(uint64_t *a1@<X8>)
{
  return sub_1C64FDFA8(0x656372756F735F5FLL, a1);
}

uint64_t GenerationContext.getInvocationType()@<X0>(__int16 *a1@<X8>)
{
  OUTLINED_FUNCTION_4_11();
  uint64_t v3 = v2();
  sub_1C64EBFB8(0xD000000000000011, 0x80000001C6588DF0, v3, &v7);
  swift_bridgeObjectRelease();
  if (!v8)
  {
    uint64_t result = sub_1C64B0858((uint64_t)&v7, &qword_1EBBFBE60);
    goto LABEL_5;
  }
  uint64_t result = swift_dynamicCast();
  if (!result)
  {
LABEL_5:
    __int16 v5 = 1536;
    goto LABEL_6;
  }
  __int16 v5 = v6;
LABEL_6:
  *a1 = v5;
  return result;
}

uint64_t Context.getGenerationId()()
{
  OUTLINED_FUNCTION_6_0();
  OUTLINED_FUNCTION_14_5(v0, v1, v2);
  OUTLINED_FUNCTION_12_4();
  OUTLINED_FUNCTION_11_7();
  return MEMORY[0x1F4188298](v3, v4, v5);
}

uint64_t sub_1C64FDC70()
{
  OUTLINED_FUNCTION_6_0();
  uint64_t v0 = OUTLINED_FUNCTION_13_6();
  uint64_t v2 = v1(v0);
  uint64_t v4 = OUTLINED_FUNCTION_35_6(v2, v3);
  OUTLINED_FUNCTION_42_4(v4);
  OUTLINED_FUNCTION_12_4();
  OUTLINED_FUNCTION_11_7();
  return MEMORY[0x1F4188298](v5, v6, v7);
}

uint64_t sub_1C64FDCDC()
{
  OUTLINED_FUNCTION_6_0();
  uint64_t v0 = OUTLINED_FUNCTION_41_5();
  GenerationContext.getGenerationId()(v0, v1, v2);
  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_63_1();
  return v3();
}

uint64_t Context.getSourceOwner()()
{
  OUTLINED_FUNCTION_6_0();
  OUTLINED_FUNCTION_14_5(v0, v1, v2);
  OUTLINED_FUNCTION_12_4();
  OUTLINED_FUNCTION_11_7();
  return MEMORY[0x1F4188298](v3, v4, v5);
}

uint64_t sub_1C64FDD9C()
{
  OUTLINED_FUNCTION_6_0();
  uint64_t v0 = OUTLINED_FUNCTION_13_6();
  uint64_t v2 = v1(v0);
  uint64_t v4 = OUTLINED_FUNCTION_35_6(v2, v3);
  OUTLINED_FUNCTION_42_4(v4);
  OUTLINED_FUNCTION_12_4();
  OUTLINED_FUNCTION_11_7();
  return MEMORY[0x1F4188298](v5, v6, v7);
}

uint64_t sub_1C64FDE08()
{
  OUTLINED_FUNCTION_6_0();
  OUTLINED_FUNCTION_41_5();
  GenerationContext.getSourceOwner()(v0);
  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_63_1();
  return v1();
}

uint64_t Context.getInvocationType()()
{
  OUTLINED_FUNCTION_6_0();
  OUTLINED_FUNCTION_14_5(v0, v1, v2);
  OUTLINED_FUNCTION_12_4();
  OUTLINED_FUNCTION_11_7();
  return MEMORY[0x1F4188298](v3, v4, v5);
}

uint64_t sub_1C64FDEC8()
{
  OUTLINED_FUNCTION_6_0();
  uint64_t v0 = OUTLINED_FUNCTION_13_6();
  uint64_t v2 = v1(v0);
  uint64_t v4 = OUTLINED_FUNCTION_35_6(v2, v3);
  OUTLINED_FUNCTION_42_4(v4);
  OUTLINED_FUNCTION_12_4();
  OUTLINED_FUNCTION_11_7();
  return MEMORY[0x1F4188298](v5, v6, v7);
}

uint64_t sub_1C64FDF34()
{
  OUTLINED_FUNCTION_6_0();
  OUTLINED_FUNCTION_41_5();
  GenerationContext.getInvocationType()(v0);
  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_63_1();
  return v1();
}

uint64_t Context.getTargetOwner()@<X0>(uint64_t *a1@<X8>)
{
  return sub_1C64FDFA8(0x7465677261745F5FLL, a1);
}

uint64_t sub_1C64FDFA8@<X0>(uint64_t a1@<X2>, uint64_t *a2@<X8>)
{
  OUTLINED_FUNCTION_4_11();
  uint64_t v5 = v4();
  sub_1C64EBFB8(a1, 0xEE0072656E776F5FLL, v5, &v8);
  swift_bridgeObjectRelease();
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF8168);
    if (swift_dynamicCast())
    {
      if (*((void *)&v11 + 1)) {
        return sub_1C64A5488(&v10, (uint64_t)a2);
      }
    }
    else
    {
      uint64_t v12 = 0;
      long long v10 = 0u;
      long long v11 = 0u;
    }
  }
  else
  {
    sub_1C64B0858((uint64_t)&v8, &qword_1EBBFBE60);
    long long v10 = 0u;
    long long v11 = 0u;
    uint64_t v12 = 0;
  }
  if (qword_1EBBF81C0 != -1) {
    swift_once();
  }
  uint64_t v7 = qword_1EBBF81B8;
  a2[3] = type metadata accessor for DefaultOwner();
  a2[4] = sub_1C64FFE0C(qword_1EBBF93F8, 255, (void (*)(uint64_t))type metadata accessor for DefaultOwner);
  *a2 = v7;
  swift_retain();
  return sub_1C64B0858((uint64_t)&v10, &qword_1EBBF8EB8);
}

Swift::Double __swiftcall Context.getWindowSeed()()
{
  OUTLINED_FUNCTION_4_11();
  uint64_t v1 = v0();
  sub_1C64EBFB8(0x776F646E69775F5FLL, 0xEC00000064656553, v1, &v4);
  swift_bridgeObjectRelease();
  if (v5)
  {
    if (swift_dynamicCast()) {
      return v3;
    }
  }
  else
  {
    sub_1C64B0858((uint64_t)&v4, &qword_1EBBFBE60);
  }
  return -1.0;
}

SiriSuggestionsKit::SuggestionEnablementState __swiftcall Context.getSuggestionEnablementState()()
{
  uint64_t v1 = v0;
  OUTLINED_FUNCTION_4_11();
  uint64_t v3 = v2();
  sub_1C64EBFB8(0xD00000000000001BLL, 0x80000001C6588DD0, v3, &v12);
  swift_bridgeObjectRelease();
  if (v13)
  {
    int v4 = swift_dynamicCast();
    if (v4)
    {
      char v5 = v11;
      goto LABEL_10;
    }
  }
  else
  {
    sub_1C64B0858((uint64_t)&v12, &qword_1EBBFBE60);
  }
  if (qword_1EBBFC428 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_1C65763A0();
  __swift_project_value_buffer(v6, (uint64_t)qword_1EBBFC278);
  uint64_t v7 = sub_1C6576380();
  os_log_type_t v8 = sub_1C6576A60();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v9 = 0;
    _os_log_impl(&dword_1C6494000, v7, v8, "error retrieving suggestionEnablementState from params in Context", v9, 2u);
    MEMORY[0x1C87A0050](v9, -1, -1);
  }

  char v5 = 0;
LABEL_10:
  *uint64_t v1 = v5;
  return (char)v4;
}

uint64_t Context.getWindowPartition()()
{
  OUTLINED_FUNCTION_49_1();
  OUTLINED_FUNCTION_8_5(v0, v1, v2);
  uint64_t v3 = swift_task_alloc();
  int v4 = (void *)OUTLINED_FUNCTION_19_8(v3);
  *int v4 = v5;
  v4[1] = sub_1C64FE3D0;
  OUTLINED_FUNCTION_6_6();
  return Context.getSourceOwner()();
}

uint64_t sub_1C64FE3D0()
{
  OUTLINED_FUNCTION_49_1();
  OUTLINED_FUNCTION_0_0();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_3_1();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_17_8();
  OUTLINED_FUNCTION_12_4();
  OUTLINED_FUNCTION_11_7();
  return MEMORY[0x1F4188298](v3, v4, v5);
}

uint64_t sub_1C64FE4E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  OUTLINED_FUNCTION_34_1();
  OUTLINED_FUNCTION_26_4();
  OUTLINED_FUNCTION_9_6();
  OUTLINED_FUNCTION_67();
  OUTLINED_FUNCTION_7_9();
  v18();
  uint64_t v19 = (void *)OUTLINED_FUNCTION_51_3();
  Context.getParam(for:key:)(v19, v17, v16, v20);
  __swift_destroy_boxed_opaque_existential_1(v15);
  __swift_destroy_boxed_opaque_existential_1(v13);
  uint64_t v21 = *(void *)(v14 + 128);
  if (*(void *)(v14 + 120))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F1620);
    if ((OUTLINED_FUNCTION_48_4() & 1) == 0) {
      OUTLINED_FUNCTION_45_5();
    }
  }
  else
  {
    sub_1C64B0858(v12, &qword_1EBBFBE60);
    *(_OWORD *)uint64_t v21 = 0u;
    *(_OWORD *)(v21 + 16) = 0u;
    *(void *)(v21 + 32) = 0;
  }
  OUTLINED_FUNCTION_63_1();
  OUTLINED_FUNCTION_32_3();
  return v23(v22, v23, v24, v25, v26, v27, v28, v29, a9, a10, a11, a12);
}

uint64_t Context.getParam(for:key:)@<X0>(void *a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X4>, _OWORD *a4@<X8>)
{
  uint64_t v7 = sub_1C64FEBEC(a1);
  uint64_t v9 = v8;
  uint64_t v10 = (*(uint64_t (**)(uint64_t))(*(void *)(a3 + 8) + 16))(a2);
  sub_1C64EBFB8(v7, v9, v10, a4);
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1C64FE678@<X0>(char *a1@<X8>)
{
  OUTLINED_FUNCTION_10_5();
  uint64_t result = sub_1C65766A0();
  if (result) {
    char v3 = 0;
  }
  else {
    char v3 = 2;
  }
  *a1 = v3;
  return result;
}

Swift::Void __swiftcall Context.setAppId(_:party:)(Swift::String _, SiriSuggestionsKit::Party party)
{
  uint64_t v4 = v3;
  uint64_t v5 = v2;
  object = _._object;
  uint64_t countAndFlagsBits = _._countAndFlagsBits;
  int v8 = *(unsigned __int8 *)party;
  if (v8 == 3)
  {
    OUTLINED_FUNCTION_10_5();
    if (sub_1C65766A0()) {
      LOBYTE(v8) = 0;
    }
    else {
      LOBYTE(v8) = 2;
    }
  }
  OUTLINED_FUNCTION_39_5();
  Context.getTargetOwner()(v9);
  uint64_t v10 = v22;
  uint64_t v11 = v23;
  __swift_project_boxed_opaque_existential_1(v21, v22);
  v20[3] = v10;
  v20[4] = *(void *)(v11 + 8);
  __swift_allocate_boxed_opaque_existential_1Tm(v20);
  OUTLINED_FUNCTION_67();
  OUTLINED_FUNCTION_7_9();
  v12();
  uint64_t v19 = &type metadata for AppIdDetails;
  v17[0] = countAndFlagsBits;
  v17[1] = object;
  char v18 = v8;
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_22_7();
  Context.setParam(for:key:value:)(v13, v14, v15, v16, v5, v4);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
}

uint64_t Context.setParam(for:key:value:)(void *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  sub_1C64FEBEC(a1);
  uint64_t v9 = a4[3];
  __swift_project_boxed_opaque_existential_1(a4, v9);
  uint64_t v14[3] = v9;
  __swift_allocate_boxed_opaque_existential_1Tm(v14);
  OUTLINED_FUNCTION_67();
  OUTLINED_FUNCTION_7_9();
  v10();
  uint64_t v11 = (uint64_t (*)(unsigned char *, void))(*(uint64_t (**)(unsigned char *, uint64_t))(*(void *)(a6 + 8) + 32))(v13, a5);
  sub_1C64FB930();
  return v11(v13, 0);
}

uint64_t type metadata accessor for ContextContainer()
{
  return self;
}

uint64_t sub_1C64FE8F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF8EB8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1C64FE95C()
{
  unint64_t result = qword_1EBBFC0D8;
  if (!qword_1EBBFC0D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBBFC0D8);
  }
  return result;
}

unint64_t sub_1C64FE9A8()
{
  unint64_t result = qword_1EA3F15E8;
  if (!qword_1EA3F15E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F15E8);
  }
  return result;
}

unint64_t sub_1C64FE9F4()
{
  unint64_t result = qword_1EA3F15F0;
  if (!qword_1EA3F15F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F15F0);
  }
  return result;
}

unint64_t sub_1C64FEA40()
{
  unint64_t result = qword_1EA3F15F8;
  if (!qword_1EA3F15F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F15F8);
  }
  return result;
}

unint64_t sub_1C64FEA8C()
{
  unint64_t result = qword_1EBBFC0F0;
  if (!qword_1EBBFC0F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBBFC0F0);
  }
  return result;
}

SiriSuggestionsKit::AppIdDetails_optional __swiftcall Context.getAppId()()
{
  uint64_t v3 = v1;
  uint64_t v4 = v0;
  uint64_t v5 = v2;
  Context.getTargetOwner()(v15);
  uint64_t v6 = v16;
  uint64_t v7 = v17;
  __swift_project_boxed_opaque_existential_1(v15, v16);
  uint64_t v14[3] = v6;
  uint64_t v14[4] = *(void *)(v7 + 8);
  __swift_allocate_boxed_opaque_existential_1Tm(v14);
  OUTLINED_FUNCTION_67();
  OUTLINED_FUNCTION_7_9();
  v8();
  OUTLINED_FUNCTION_22_7();
  Context.getParam(for:key:)(v9, v4, v3, v10);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
  if (v19)
  {
    uint64_t v11 = swift_dynamicCast();
    if (v11) {
      goto LABEL_6;
    }
  }
  else
  {
    uint64_t v11 = sub_1C64B0858((uint64_t)v18, &qword_1EBBFBE60);
  }
  *(void *)uint64_t v5 = 0;
  *(void *)(v5 + 8) = 0;
  *(unsigned char *)(v5 + 16) = 0;
LABEL_6:
  result.value.appId._object = v12;
  result.value.appId._uint64_t countAndFlagsBits = v11;
  result.value.party = v13;
  return result;
}

uint64_t sub_1C64FEBEC(void *a1)
{
  uint64_t v1 = a1[3];
  uint64_t v2 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v1);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v2 + 8))(v9, v1, v2);
  uint64_t v3 = v10;
  uint64_t v4 = v11;
  __swift_project_boxed_opaque_existential_1(v9, v10);
  uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 48))(v3, v4);
  uint64_t v8 = v5;
  swift_bridgeObjectRetain();
  sub_1C6576620();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
  v9[0] = v7;
  v9[1] = v8;
  swift_bridgeObjectRetain();
  sub_1C6576620();
  swift_bridgeObjectRelease();
  return v9[0];
}

uint64_t Context.setSourceDialogCallback(_:)()
{
  OUTLINED_FUNCTION_49_1();
  OUTLINED_FUNCTION_8_5(v0, v1, v2);
  uint64_t v3 = swift_task_alloc();
  uint64_t v4 = (void *)OUTLINED_FUNCTION_19_8(v3);
  *uint64_t v4 = v5;
  v4[1] = sub_1C64FED74;
  OUTLINED_FUNCTION_6_6();
  return Context.getSourceOwner()();
}

uint64_t sub_1C64FED74()
{
  OUTLINED_FUNCTION_49_1();
  OUTLINED_FUNCTION_0_0();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_3_1();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_17_8();
  OUTLINED_FUNCTION_12_4();
  OUTLINED_FUNCTION_11_7();
  return MEMORY[0x1F4188298](v3, v4, v5);
}

uint64_t sub_1C64FEE88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  OUTLINED_FUNCTION_34_1();
  OUTLINED_FUNCTION_26_4();
  OUTLINED_FUNCTION_3_11();
  OUTLINED_FUNCTION_67();
  OUTLINED_FUNCTION_7_9();
  v14();
  OUTLINED_FUNCTION_43_5();
  OUTLINED_FUNCTION_67();
  OUTLINED_FUNCTION_7_9();
  v15();
  OUTLINED_FUNCTION_40_5(v12, 31, 0x80000001C6588E10);
  OUTLINED_FUNCTION_16_8(v13);
  OUTLINED_FUNCTION_32_3();
  return v17(v16, v17, v18, v19, v20, v21, v22, v23, a9, a10, a11, a12);
}

uint64_t Context.setWindowSeed(_:)()
{
  OUTLINED_FUNCTION_49_1();
  v1[18] = v2;
  v1[19] = v0;
  v1[17] = v3;
  v1[16] = v4;
  uint64_t v5 = swift_task_alloc();
  uint64_t v6 = (void *)OUTLINED_FUNCTION_19_8(v5);
  *uint64_t v6 = v7;
  v6[1] = sub_1C64FEFFC;
  OUTLINED_FUNCTION_6_6();
  return Context.getSourceOwner()();
}

uint64_t sub_1C64FEFFC()
{
  OUTLINED_FUNCTION_49_1();
  OUTLINED_FUNCTION_0_0();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_3_1();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_17_8();
  OUTLINED_FUNCTION_12_4();
  OUTLINED_FUNCTION_11_7();
  return MEMORY[0x1F4188298](v3, v4, v5);
}

uint64_t sub_1C64FF110()
{
  OUTLINED_FUNCTION_26_4();
  uint64_t v1 = v0[18];
  uint64_t v2 = v0[17];
  uint64_t v3 = v0[16];
  uint64_t v4 = v0[5];
  uint64_t v5 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v4);
  v0[10] = v4;
  v0[11] = *(void *)(v5 + 8);
  __swift_allocate_boxed_opaque_existential_1Tm(v0 + 7);
  OUTLINED_FUNCTION_67();
  OUTLINED_FUNCTION_7_9();
  v6();
  v0[15] = MEMORY[0x1E4FBB3D0];
  v0[12] = v3;
  Context.setParam(for:key:value:)(v0 + 7, 0x776F646E69775F5FLL, 0xEC00000064656553, v0 + 12, v2, v1);
  OUTLINED_FUNCTION_16_8((uint64_t)(v0 + 12));
  return v7();
}

Swift::Void __swiftcall Context.setSuggestionEnablementState(suggestionEnablementState:)(SiriSuggestionsKit::SuggestionEnablementState suggestionEnablementState)
{
  char v2 = *(unsigned char *)suggestionEnablementState;
  uint64_t v5 = &type metadata for SuggestionEnablementState;
  v4[32] = v2;
  uint64_t v3 = (void (*)(unsigned char *, void))(*(uint64_t (**)(unsigned char *))(*(void *)(v1 + 8) + 32))(v4);
  sub_1C64FB930();
  v3(v4, 0);
}

uint64_t Context.getSourceDialogCallbacksProvider()()
{
  OUTLINED_FUNCTION_49_1();
  OUTLINED_FUNCTION_8_5(v0, v1, v2);
  uint64_t v3 = swift_task_alloc();
  uint64_t v4 = (void *)OUTLINED_FUNCTION_19_8(v3);
  *uint64_t v4 = v5;
  v4[1] = sub_1C64FF358;
  OUTLINED_FUNCTION_6_6();
  return Context.getSourceOwner()();
}

uint64_t sub_1C64FF358()
{
  OUTLINED_FUNCTION_49_1();
  OUTLINED_FUNCTION_0_0();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_3_1();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_17_8();
  OUTLINED_FUNCTION_12_4();
  OUTLINED_FUNCTION_11_7();
  return MEMORY[0x1F4188298](v3, v4, v5);
}

uint64_t sub_1C64FF46C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  OUTLINED_FUNCTION_34_1();
  OUTLINED_FUNCTION_26_4();
  OUTLINED_FUNCTION_9_6();
  OUTLINED_FUNCTION_67();
  OUTLINED_FUNCTION_7_9();
  v18();
  uint64_t v19 = (void *)OUTLINED_FUNCTION_51_3();
  Context.getParam(for:key:)(v19, v17, v16, v20);
  __swift_destroy_boxed_opaque_existential_1(v15);
  __swift_destroy_boxed_opaque_existential_1(v13);
  uint64_t v21 = *(void *)(v14 + 128);
  if (*(void *)(v14 + 120))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F1640);
    if ((OUTLINED_FUNCTION_48_4() & 1) == 0) {
      OUTLINED_FUNCTION_45_5();
    }
  }
  else
  {
    sub_1C64B0858(v12, &qword_1EBBFBE60);
    *(_OWORD *)uint64_t v21 = 0u;
    *(_OWORD *)(v21 + 16) = 0u;
    *(void *)(v21 + 32) = 0;
  }
  OUTLINED_FUNCTION_63_1();
  OUTLINED_FUNCTION_32_3();
  return v23(v22, v23, v24, v25, v26, v27, v28, v29, a9, a10, a11, a12);
}

double sub_1C64FF56C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v4 = v3;
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_1C657476C(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if (a2)
  {
    swift_isUniquelyReferenced_nonNull_native();
    uint64_t v11 = *v4;
    *uint64_t v4 = 0x8000000000000000;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF8F68);
    sub_1C6576D80();
    swift_bridgeObjectRelease();
    sub_1C64E740C((_OWORD *)(*(void *)(v11 + 56) + 32 * v8), a3);
    sub_1C6576DA0();
    *uint64_t v4 = v11;
    swift_bridgeObjectRelease();
  }
  else
  {
    double result = 0.0;
    *a3 = 0u;
    a3[1] = 0u;
  }
  return result;
}

double sub_1C64FF6A4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_1C657476C(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if (a2)
  {
    swift_isUniquelyReferenced_nonNull_native();
    OUTLINED_FUNCTION_31_7();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F1670);
    OUTLINED_FUNCTION_47_4();
    swift_bridgeObjectRelease();
    sub_1C64A5488((long long *)(*(void *)(v11 + 56) + 40 * v8), a3);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFB8F8);
    sub_1C6576DA0();
    *uint64_t v4 = v11;
    swift_bridgeObjectRelease();
  }
  else
  {
    *(void *)(a3 + 32) = 0;
    double result = 0.0;
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
  }
  return result;
}

uint64_t sub_1C64FF7C4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_1C657476C(a1, a2);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0) {
    return 0;
  }
  swift_isUniquelyReferenced_nonNull_native();
  OUTLINED_FUNCTION_31_7();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F1680);
  OUTLINED_FUNCTION_47_4();
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(*(void *)(v10 + 56) + 8 * v6);
  sub_1C6576DA0();
  *uint64_t v3 = v10;
  swift_bridgeObjectRelease();
  return v8;
}

double sub_1C64FF8B0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v4 = v3;
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_1C657476C(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if (a2)
  {
    swift_isUniquelyReferenced_nonNull_native();
    uint64_t v11 = *v4;
    *uint64_t v4 = 0x8000000000000000;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F13B8);
    sub_1C6576D80();
    swift_bridgeObjectRelease();
    sub_1C64A7BBC((long long *)(*(void *)(v11 + 56) + 48 * v8), a3);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFBE10);
    sub_1C6576DA0();
    *uint64_t v4 = v11;
    swift_bridgeObjectRelease();
  }
  else
  {
    double result = 0.0;
    a3[1] = 0u;
    a3[2] = 0u;
    *a3 = 0u;
  }
  return result;
}

double sub_1C64FF9F4@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_1C65749A0(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if (a1)
  {
    swift_isUniquelyReferenced_nonNull_native();
    uint64_t v9 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFB810);
    sub_1C6576D80();
    sub_1C64B81B4(*(void *)(v9 + 48) + 120 * v6);
    sub_1C64A5488((long long *)(*(void *)(v9 + 56) + 40 * v6), a2);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFA540);
    sub_1C64FB34C();
    sub_1C6576DA0();
    *uint64_t v3 = v9;
    swift_bridgeObjectRelease();
  }
  else
  {
    *(void *)(a2 + 32) = 0;
    double result = 0.0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  return result;
}

double sub_1C64FFB34@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v4 = v3;
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_1C657476C(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if (a2)
  {
    swift_isUniquelyReferenced_nonNull_native();
    uint64_t v13 = *v4;
    *uint64_t v4 = 0x8000000000000000;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFB350);
    sub_1C6576D80();
    swift_bridgeObjectRelease();
    uint64_t v10 = (_OWORD *)(*(void *)(v13 + 56) + 48 * v8);
    long long v11 = v10[1];
    *a3 = *v10;
    a3[1] = v11;
    a3[2] = v10[2];
    sub_1C6576DA0();
    *uint64_t v4 = v13;
    swift_bridgeObjectRelease();
  }
  else
  {
    double result = 0.0;
    a3[1] = 0u;
    a3[2] = 0u;
    *a3 = 0u;
  }
  return result;
}

unint64_t sub_1C64FFC78()
{
  unint64_t result = qword_1EBBFC0C0;
  if (!qword_1EBBFC0C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBBFC0C0);
  }
  return result;
}

unint64_t sub_1C64FFCC4()
{
  unint64_t result = qword_1EBBFBA38;
  if (!qword_1EBBFBA38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBBFBA38);
  }
  return result;
}

unint64_t sub_1C64FFD10()
{
  unint64_t result = qword_1EBBFB948;
  if (!qword_1EBBFB948)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBBFB948);
  }
  return result;
}

uint64_t sub_1C64FFD5C(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1C64FFE0C(&qword_1EBBFB560, a2, (void (*)(uint64_t))type metadata accessor for ContextContainer);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C64FFDB4(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1C64FFE0C(&qword_1EBBFB550, a2, (void (*)(uint64_t))type metadata accessor for ContextContainer);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C64FFE0C(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C64FFE58()
{
  unint64_t result = qword_1EA3F1648;
  if (!qword_1EA3F1648)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F1648);
  }
  return result;
}

unint64_t sub_1C64FFEA8()
{
  unint64_t result = qword_1EA3F1650;
  if (!qword_1EA3F1650)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F1650);
  }
  return result;
}

uint64_t sub_1C64FFEF4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1C64FBE78();
  *a1 = result;
  return result;
}

uint64_t dispatch thunk of BaseContext.params.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of BaseContext.params.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of BaseContext.params.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of BaseContext.getDescription()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of Context.generationContext.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t method lookup function for ContextContainer(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ContextContainer);
}

uint64_t dispatch thunk of ContextContainer.params.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t dispatch thunk of ContextContainer.params.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of ContextContainer.params.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of ContextContainer.generationContext.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of ContextContainer.__allocating_init(params:generationContext:)()
{
  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t dispatch thunk of ContextContainer.getDescription()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

void type metadata accessor for Party()
{
}

void type metadata accessor for AppIdDetails()
{
}

uint64_t type metadata accessor for ContextKeys()
{
  return self;
}

unsigned char *storeEnumTagSinglePayload for AppIdDetails.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C6500174);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AppIdDetails.CodingKeys()
{
  return &type metadata for AppIdDetails.CodingKeys;
}

unsigned char *_s18SiriSuggestionsKit5PartyOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C6500278);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Party.CodingKeys()
{
  return &type metadata for Party.CodingKeys;
}

ValueMetadata *type metadata accessor for Party.FirstCodingKeys()
{
  return &type metadata for Party.FirstCodingKeys;
}

ValueMetadata *type metadata accessor for Party.SecondCodingKeys()
{
  return &type metadata for Party.SecondCodingKeys;
}

ValueMetadata *type metadata accessor for Party.ThirdCodingKeys()
{
  return &type metadata for Party.ThirdCodingKeys;
}

ValueMetadata *type metadata accessor for Party.UnknownCodingKeys()
{
  return &type metadata for Party.UnknownCodingKeys;
}

unint64_t sub_1C65002F4()
{
  unint64_t result = qword_1EA3F1658;
  if (!qword_1EA3F1658)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F1658);
  }
  return result;
}

unint64_t sub_1C6500344()
{
  unint64_t result = qword_1EA3F1660;
  if (!qword_1EA3F1660)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F1660);
  }
  return result;
}

unint64_t sub_1C6500394()
{
  unint64_t result = qword_1EBBFC0D0;
  if (!qword_1EBBFC0D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBBFC0D0);
  }
  return result;
}

unint64_t sub_1C65003E4()
{
  unint64_t result = qword_1EBBFC0C8;
  if (!qword_1EBBFC0C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBBFC0C8);
  }
  return result;
}

unint64_t sub_1C6500434()
{
  unint64_t result = qword_1EBBFC100;
  if (!qword_1EBBFC100)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBBFC100);
  }
  return result;
}

unint64_t sub_1C6500484()
{
  unint64_t result = qword_1EBBFC0F8;
  if (!qword_1EBBFC0F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBBFC0F8);
  }
  return result;
}

unint64_t sub_1C65004D4()
{
  unint64_t result = qword_1EBBFC120;
  if (!qword_1EBBFC120)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBBFC120);
  }
  return result;
}

unint64_t sub_1C6500524()
{
  unint64_t result = qword_1EBBFC118;
  if (!qword_1EBBFC118)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBBFC118);
  }
  return result;
}

unint64_t sub_1C6500574()
{
  unint64_t result = qword_1EBBFC110;
  if (!qword_1EBBFC110)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBBFC110);
  }
  return result;
}

unint64_t sub_1C65005C4()
{
  unint64_t result = qword_1EBBFC108;
  if (!qword_1EBBFC108)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBBFC108);
  }
  return result;
}

unint64_t sub_1C6500614()
{
  unint64_t result = qword_1EBBFC130;
  if (!qword_1EBBFC130)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBBFC130);
  }
  return result;
}

unint64_t sub_1C6500664()
{
  unint64_t result = qword_1EBBFC128;
  if (!qword_1EBBFC128)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBBFC128);
  }
  return result;
}

unint64_t sub_1C65006B4()
{
  unint64_t result = qword_1EBBFC0E8;
  if (!qword_1EBBFC0E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBBFC0E8);
  }
  return result;
}

unint64_t sub_1C6500704()
{
  unint64_t result = qword_1EBBFC0E0;
  if (!qword_1EBBFC0E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBBFC0E0);
  }
  return result;
}

uint64_t *OUTLINED_FUNCTION_3_11()
{
  uint64_t v2 = v0[5];
  uint64_t v1 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v2);
  v0[10] = v2;
  v0[11] = *(void *)(v1 + 8);
  return __swift_allocate_boxed_opaque_existential_1Tm(v0 + 7);
}

uint64_t OUTLINED_FUNCTION_6_6()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_8_5(uint64_t result, uint64_t a2, uint64_t a3)
{
  v4[18] = a3;
  v4[19] = v3;
  v4[16] = result;
  v4[17] = a2;
  return result;
}

uint64_t *OUTLINED_FUNCTION_9_6()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v1);
  v0[10] = v1;
  v0[11] = *(void *)(v2 + 8);
  return __swift_allocate_boxed_opaque_existential_1Tm(v0 + 7);
}

uint64_t OUTLINED_FUNCTION_10_5()
{
  return 0x6C7070612E6D6F63;
}

uint64_t OUTLINED_FUNCTION_13_6()
{
  return *(void *)(v0 + 24);
}

uint64_t OUTLINED_FUNCTION_14_5(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[4] = a3;
  v4[5] = v3;
  _OWORD v4[2] = a1;
  v4[3] = a2;
  return sub_1C65768C0();
}

uint64_t OUTLINED_FUNCTION_16_8(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  __swift_destroy_boxed_opaque_existential_1(v2);
  __swift_destroy_boxed_opaque_existential_1(v1);
  return v3 + 8;
}

uint64_t OUTLINED_FUNCTION_17_8()
{
  return sub_1C65768C0();
}

uint64_t OUTLINED_FUNCTION_19_8(uint64_t result)
{
  *(void *)(v1 + 160) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_26_8()
{
  return sub_1C6576F70();
}

void OUTLINED_FUNCTION_31_7()
{
  void *v0 = 0x8000000000000000;
}

uint64_t OUTLINED_FUNCTION_35_6(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 48) = a1;
  *(void *)(v2 + 56) = a2;
  return swift_getObjectType();
}

uint64_t OUTLINED_FUNCTION_37_3()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_39_5()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_40_5(void *a1, uint64_t a2, uint64_t a3)
{
  unint64_t v7 = a2 & 0xFFFFFFFFFFFFLL | 0xD000000000000000;
  return Context.setParam(for:key:value:)(a1, v7, a3, v4, v5, v3);
}

uint64_t OUTLINED_FUNCTION_41_5()
{
  return *(void *)(v0 + 64);
}

uint64_t OUTLINED_FUNCTION_42_4(uint64_t a1)
{
  *(void *)(v1 + 64) = a1;
  return sub_1C65768C0();
}

uint64_t *OUTLINED_FUNCTION_43_5()
{
  uint64_t v3 = v2[3];
  __swift_project_boxed_opaque_existential_1(v2, v3);
  *(void *)(v0 + 120) = v3;
  return __swift_allocate_boxed_opaque_existential_1Tm(v1);
}

double OUTLINED_FUNCTION_45_5()
{
  uint64_t v1 = *(void *)(v0 + 128);
  *(void *)(v1 + 32) = 0;
  double result = 0.0;
  *(_OWORD *)uint64_t v1 = 0u;
  *(_OWORD *)(v1 + 16) = 0u;
  return result;
}

uint64_t OUTLINED_FUNCTION_46_4()
{
  return sub_1C64FB930();
}

uint64_t OUTLINED_FUNCTION_47_4()
{
  return sub_1C6576D80();
}

uint64_t OUTLINED_FUNCTION_48_4()
{
  return swift_dynamicCast();
}

uint64_t OUTLINED_FUNCTION_50_4()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_51_3()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_53_3()
{
  return v0;
}

uint64_t ChannelGeneratorConfidenceLogger.__allocating_init(coreAnalyticsClient:)()
{
  OUTLINED_FUNCTION_2_10();
  __swift_mutable_project_boxed_opaque_existential_1(v0, *(void *)(v0 + 24));
  OUTLINED_FUNCTION_0_8();
  MEMORY[0x1F4188790](v1);
  uint64_t v3 = OUTLINED_FUNCTION_1_12(v2, v7);
  v4(v3);
  uint64_t v5 = OUTLINED_FUNCTION_3_12();
  __swift_destroy_boxed_opaque_existential_1(v0);
  return v5;
}

uint64_t DefaultCoreAnalyticsClient.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t DefaultCoreAnalyticsClient.init()()
{
  return v0;
}

void sub_1C6500BD8(uint64_t a1, unint64_t a2)
{
  if (qword_1EBBFC540 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_1C65763A0();
  __swift_project_value_buffer(v4, (uint64_t)qword_1EBBFC548);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v5 = sub_1C6576380();
  os_log_type_t v6 = sub_1C6576A50();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    uint64_t v14 = v13;
    *(_DWORD *)uint64_t v7 = 136315394;
    swift_bridgeObjectRetain();
    sub_1C64BCF18(a1, a2, &v14);
    sub_1C6576B40();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v7 + 12) = 2080;
    sub_1C6501254();
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_1C6576450();
    unint64_t v10 = v9;
    swift_bridgeObjectRelease();
    sub_1C64BCF18(v8, v10, &v14);
    sub_1C6576B40();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C6494000, v5, v6, "Logging metricName=%s, payload=%s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C87A0050](v13, -1, -1);
    MEMORY[0x1C87A0050](v7, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  long long v11 = (void *)sub_1C6576540();
  sub_1C6501254();
  uint64_t v12 = (void *)sub_1C6576430();
  AnalyticsSendEvent();
}

uint64_t DefaultCoreAnalyticsClient.deinit()
{
  return v0;
}

uint64_t DefaultCoreAnalyticsClient.__deallocating_deinit()
{
  return MEMORY[0x1F4186488](v0, 16, 7);
}

void sub_1C6500E8C(uint64_t a1, unint64_t a2)
{
}

uint64_t CoreAnalyticsLogger.__allocating_init(coreAnalyticsClient:)()
{
  uint64_t v1 = OUTLINED_FUNCTION_2_10();
  sub_1C64A5488(v0, v1 + 16);
  return v1;
}

uint64_t CoreAnalyticsLogger.init(coreAnalyticsClient:)(long long *a1)
{
  sub_1C64A5488(a1, v1 + 16);
  return v1;
}

uint64_t sub_1C6500EF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = v3[5];
  uint64_t v8 = v3[6];
  __swift_project_boxed_opaque_existential_1(v3 + 2, v7);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 8))(a1, a2, a3, v7, v8);
}

uint64_t CoreAnalyticsLogger.deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return v0;
}

uint64_t CoreAnalyticsLogger.__deallocating_deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);

  return MEMORY[0x1F4186488](v0, 56, 7);
}

uint64_t sub_1C6500FC4()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1C6576540();
  uint64_t v3 = MEMORY[0x1E4FBC868];
  swift_isUniquelyReferenced_nonNull_native();
  sub_1C6562A18(v2, 0x4E6C656E6E616863, 0xEB00000000656D61);
  swift_bridgeObjectRelease();
  uint64_t v4 = sub_1C6576980();
  swift_isUniquelyReferenced_nonNull_native();
  sub_1C6562A18(v4, 0xD000000000000011, 0x80000001C6588FA0);
  swift_bridgeObjectRelease();
  uint64_t v5 = v1 + 2;
  uint64_t v7 = v1[5];
  uint64_t v6 = v1[6];
  __swift_project_boxed_opaque_existential_1(v5, v7);
  (*(void (**)(unint64_t, unint64_t, uint64_t, uint64_t, uint64_t))(v6 + 8))(0xD000000000000030, 0x80000001C6588FC0, v3, v7, v6);

  return swift_bridgeObjectRelease();
}

uint64_t ChannelGeneratorConfidenceLogger.init(coreAnalyticsClient:)(uint64_t a1)
{
  __swift_mutable_project_boxed_opaque_existential_1(a1, *(void *)(a1 + 24));
  OUTLINED_FUNCTION_0_8();
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = OUTLINED_FUNCTION_1_12(v3, v8);
  v5(v4);
  uint64_t v6 = OUTLINED_FUNCTION_3_12();
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v6;
}

uint64_t ChannelGeneratorConfidenceLogger.__deallocating_deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);

  return MEMORY[0x1F4186488](v0, 56, 7);
}

uint64_t sub_1C65011D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v10 = a3;
  uint64_t v11 = a4;
  boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm((uint64_t *)&v9);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 32))(boxed_opaque_existential_1Tm, a1, a3);
  sub_1C64A5488(&v9, a2 + 16);
  return a2;
}

unint64_t sub_1C6501254()
{
  unint64_t result = qword_1EBBF8F50;
  if (!qword_1EBBF8F50)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBBF8F50);
  }
  return result;
}

uint64_t dispatch thunk of CoreAnalyticsSiriSuggestionsClient.sendCoreAnalyticsEvent(metricName:payload:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t type metadata accessor for DefaultCoreAnalyticsClient()
{
  return self;
}

uint64_t method lookup function for DefaultCoreAnalyticsClient(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for DefaultCoreAnalyticsClient);
}

uint64_t dispatch thunk of DefaultCoreAnalyticsClient.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t dispatch thunk of DefaultCoreAnalyticsClient.sendCoreAnalyticsEvent(metricName:payload:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 88))();
}

uint64_t type metadata accessor for CoreAnalyticsLogger()
{
  return self;
}

uint64_t method lookup function for CoreAnalyticsLogger(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for CoreAnalyticsLogger);
}

uint64_t dispatch thunk of CoreAnalyticsLogger.__allocating_init(coreAnalyticsClient:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of CoreAnalyticsLogger.sendCoreAnalyticsEvent(metricName:payload:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 96))();
}

uint64_t sub_1C6501390(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t type metadata accessor for ChannelGeneratorConfidenceLogger()
{
  return self;
}

uint64_t method lookup function for ChannelGeneratorConfidenceLogger(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ChannelGeneratorConfidenceLogger);
}

char *OUTLINED_FUNCTION_1_12@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  return (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t OUTLINED_FUNCTION_2_10()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_3_12()
{
  return sub_1C65011D0(v3, v0, v1, v2);
}

uint64_t AppUsageTimestampBiomeFetcher.__allocating_init(streamProvider:)(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = a2;
  return result;
}

uint64_t AppUsageTimestampBiomeFetcher.init(streamProvider:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return v2;
}

uint64_t sub_1C65014BC()
{
  *(void *)(v1 + 64) = v0;
  return MEMORY[0x1F4188298](sub_1C65014DC, 0, 0);
}

uint64_t sub_1C65014DC()
{
  uint64_t v1 = (void *)(*(uint64_t (**)(void))(v0[8] + 16))();
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = sub_1C6576460();
  id v3 = objc_msgSend(v1, sel_publisherWithOptions_, 0);
  v0[6] = nullsub_1;
  v0[7] = 0;
  uint64_t v4 = MEMORY[0x1E4F143A8];
  v0[2] = MEMORY[0x1E4F143A8];
  v0[3] = 1107296256;
  v0[4] = sub_1C650172C;
  v0[5] = &block_descriptor_0;
  uint64_t v5 = _Block_copy(v0 + 2);
  v0[6] = sub_1C6501A2C;
  v0[7] = v2;
  v0[2] = v4;
  v0[3] = 1107296256;
  v0[4] = sub_1C650172C;
  v0[5] = &block_descriptor_3;
  uint64_t v6 = _Block_copy(v0 + 2);
  swift_retain();
  swift_release();
  id v7 = objc_msgSend(v3, sel_sinkWithCompletion_receiveInput_, v5, v6);

  _Block_release(v6);
  _Block_release(v5);

  swift_beginAccess();
  uint64_t v8 = *(void *)(v2 + 16);
  swift_bridgeObjectRetain();
  swift_release();
  long long v9 = (uint64_t (*)(uint64_t))v0[1];
  return v9(v8);
}

uint64_t sub_1C65016F4()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

void sub_1C6501748(void *a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F16A8);
  uint64_t v5 = MEMORY[0x1F4188790](v4 - 8);
  id v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x1F4188790](v5);
  uint64_t v10 = (char *)&v30 - v9;
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v30 - v11;
  id v13 = objc_msgSend(a1, sel_eventBody);
  if (v13)
  {
    id v31 = v13;
    uint64_t v14 = sub_1C6501DDC(v13);
    if (v15)
    {
      uint64_t v16 = v14;
      uint64_t v17 = v15;
      uint64_t v18 = a2 + 16;
      id v19 = objc_msgSend(v31, sel_absoluteTimestamp);
      if (v19)
      {
        uint64_t v20 = v19;
        sub_1C6576170();

        uint64_t v21 = sub_1C6576190();
        uint64_t v22 = 0;
      }
      else
      {
        uint64_t v21 = sub_1C6576190();
        uint64_t v22 = 1;
      }
      __swift_storeEnumTagSinglePayload((uint64_t)v10, v22, 1, v21);
      sub_1C6501E40((uint64_t)v10, (uint64_t)v12);
      swift_beginAccess();
      if (*(void *)(*(void *)v18 + 16)
        && (swift_bridgeObjectRetain(), sub_1C657476C(v16, v17), char v25 = v24, swift_bridgeObjectRelease(), (v25 & 1) != 0))
      {
        sub_1C6501F10((uint64_t)v12);
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_1C6501EA8((uint64_t)v12, (uint64_t)v7);
        uint64_t v26 = sub_1C6576190();
        int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v7, 1, v26);
        if (EnumTagSinglePayload == 1)
        {
          sub_1C6501F10((uint64_t)v7);
          double v28 = 0.0;
        }
        else
        {
          sub_1C6576140();
          double v28 = v29;
          (*(void (**)(char *, uint64_t))(*(void *)(v26 - 8) + 8))(v7, v26);
        }
        swift_beginAccess();
        if (EnumTagSinglePayload == 1) {
          sub_1C64FF7C4(v16, v17);
        }
        else {
          sub_1C65627F8(v16, v17, v28);
        }
        swift_bridgeObjectRelease();
        swift_endAccess();

        sub_1C6501F10((uint64_t)v12);
      }
    }
    else
    {
      id v23 = v31;
    }
  }
}

void sub_1C6501A2C(void *a1)
{
  sub_1C6501748(a1, v1);
}

void sub_1C6501A34(uint64_t a1, void *a2)
{
  id v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3();
  swift_release();
}

uint64_t AppUsageTimestampBiomeFetcher.deinit()
{
  swift_release();
  return v0;
}

uint64_t AppUsageTimestampBiomeFetcher.__deallocating_deinit()
{
  swift_release();

  return MEMORY[0x1F4186488](v0, 32, 7);
}

uint64_t sub_1C6501AF4()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1C6501F70;
  return sub_1C65014BC();
}

uint64_t dispatch thunk of AppUsageTimestampFetcher.getAppUsageTimestamps(options:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 8) + **(int **)(a3 + 8));
  id v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *id v7 = v3;
  v7[1] = sub_1C64BC194;
  return v9(a1, a2, a3);
}

uint64_t type metadata accessor for AppUsageTimestampBiomeFetcher()
{
  return self;
}

uint64_t method lookup function for AppUsageTimestampBiomeFetcher(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for AppUsageTimestampBiomeFetcher);
}

uint64_t dispatch thunk of AppUsageTimestampBiomeFetcher.__allocating_init(streamProvider:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of AppUsageTimestampBiomeFetcher.getAppUsageTimestamps(options:)(uint64_t a1)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)v1 + 96) + **(int **)(*(void *)v1 + 96));
  id v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *id v4 = v2;
  v4[1] = sub_1C6501F70;
  return v6(a1);
}

uint64_t sub_1C6501DDC(void *a1)
{
  id v1 = objc_msgSend(a1, sel_bundleID);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  uint64_t v3 = sub_1C6576550();

  return v3;
}

uint64_t sub_1C6501E40(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F16A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C6501EA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F16A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C6501F10(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F16A8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C6501F7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C6576920();
  if (__swift_getEnumTagSinglePayload(a1, 1, v6) == 1)
  {
    sub_1C64C7248(a1);
  }
  else
  {
    sub_1C6576910();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
  }
  if (*(void *)(a3 + 16))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1C65768C0();
    swift_unknownObjectRelease();
  }
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a2;
  *(void *)(v7 + 24) = a3;
  return swift_task_create();
}

Swift::Void __swiftcall SuggestionsServiceRefreshable.refresh()()
{
  uint64_t v3 = v1;
  uint64_t v4 = v0;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFBEF8);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1C6576920();
  __swift_storeEnumTagSinglePayload((uint64_t)v7, 1, 1, v8);
  uint64_t v9 = *(void *)(v3 + 8);
  uint64_t v10 = (void *)swift_allocObject();
  void v10[2] = v2;
  v10[3] = v9;
  void v10[4] = v4;
  uint64_t v10[5] = v3;
  v10[6] = v2;
  swift_unknownObjectRetain_n();
  sub_1C6501F7C((uint64_t)v7, (uint64_t)&unk_1EA3F16B8, (uint64_t)v10);
  swift_release();
}

uint64_t sub_1C65021DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(a6 + 16) + **(int **)(a6 + 16));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v9;
  *uint64_t v9 = v6;
  v9[1] = sub_1C6502828;
  return v11(a5, a6);
}

uint64_t sub_1C65022D4()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t sub_1C6502314(uint64_t a1)
{
  uint64_t v3 = v1[4];
  uint64_t v4 = v1[5];
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[6];
  uint64_t v8 = swift_task_alloc();
  uint64_t v9 = (void *)OUTLINED_FUNCTION_15_2(v8);
  *uint64_t v9 = v10;
  v9[1] = sub_1C6502828;
  return sub_1C65021DC(a1, v5, v6, v7, v3, v4);
}

uint64_t dispatch thunk of SuggestionsServiceRefreshable.refreshAsync()(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(a2 + 16) + **(int **)(a2 + 16));
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1C65024C4;
  return v7(a1, a2);
}

uint64_t sub_1C65024C4()
{
  OUTLINED_FUNCTION_0_0();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_3_1();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v1 + 8);
  return v3();
}

uint64_t dispatch thunk of SuggestionsServiceRefreshable.refresh()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t sub_1C65025A0(uint64_t a1, int *a2)
{
  uint64_t v7 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v3 = swift_task_alloc();
  uint64_t v4 = (void *)OUTLINED_FUNCTION_15_2(v3);
  *uint64_t v4 = v5;
  v4[1] = sub_1C6502674;
  return v7(a1);
}

uint64_t sub_1C6502674()
{
  OUTLINED_FUNCTION_0_0();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_3_1();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v1 + 8);
  return v3();
}

uint64_t sub_1C6502740()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C6502778(uint64_t a1)
{
  uint64_t v3 = *(int **)(v1 + 16);
  uint64_t v4 = swift_task_alloc();
  uint64_t v5 = (void *)OUTLINED_FUNCTION_15_2(v4);
  *uint64_t v5 = v6;
  v5[1] = sub_1C65024C4;
  uint64_t v7 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1EA3F16C8 + dword_1EA3F16C8);
  return v7(a1, v3);
}

uint64_t sub_1C650282C@<X0>(uint64_t *a1@<X8>)
{
  if (qword_1EBBF81C0 != -1) {
    swift_once();
  }
  uint64_t v2 = qword_1EBBF81B8;
  a1[3] = type metadata accessor for DefaultOwner();
  a1[4] = sub_1C6502AB8();
  *a1 = v2;

  return swift_retain();
}

uint64_t SuggestionsRepository.getOwner()@<X0>(uint64_t *a1@<X8>)
{
  if (qword_1EBBF81C0 != -1) {
    swift_once();
  }
  uint64_t v2 = qword_1EBBF81B8;
  a1[3] = type metadata accessor for DefaultOwner();
  a1[4] = sub_1C6502AB8();
  *a1 = v2;

  return swift_retain();
}

uint64_t static NoOpSuggestionsRepository.Instance.getter()
{
  return swift_initStaticObject();
}

uint64_t NoOpSuggestionsRepository.getPooledSuggestions()()
{
  return MEMORY[0x1E4FBC860];
}

unint64_t NoOpSuggestionsRepository.getOwner()@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for DefaultOwner();
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 40) = &type metadata for CoreSuggestionGroups;
  unint64_t v4 = sub_1C6502B08();
  *(unsigned char *)(v3 + 16) = 4;
  *(void *)(v3 + 48) = v4;
  *(void *)(v3 + 56) = 1884254030;
  *(void *)(v3 + 64) = 0xE400000000000000;
  *(void *)(v3 + 72) = 1884254030;
  *(void *)(v3 + 80) = 0xE400000000000000;
  a1[3] = v2;
  unint64_t result = sub_1C6502AB8();
  a1[4] = result;
  *a1 = v3;
  return result;
}

uint64_t NoOpSuggestionsRepository.deinit()
{
  return v0;
}

uint64_t NoOpSuggestionsRepository.__deallocating_deinit()
{
  return MEMORY[0x1F4186488](v0, 16, 7);
}

uint64_t sub_1C65029EC()
{
  return MEMORY[0x1E4FBC860];
}

unint64_t sub_1C65029F8@<X0>(uint64_t *a1@<X8>)
{
  return NoOpSuggestionsRepository.getOwner()(a1);
}

uint64_t DefaultSuggestionsRepository.getPooledSuggestions()()
{
  return swift_bridgeObjectRetain();
}

uint64_t DefaultSuggestionsRepository.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t DefaultSuggestionsRepository.__deallocating_deinit()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186488](v0, 24, 7);
}

uint64_t sub_1C6502A70()
{
  return DefaultSuggestionsRepository.getPooledSuggestions()();
}

uint64_t sub_1C6502A94@<X0>(uint64_t *a1@<X8>)
{
  return sub_1C650282C(a1);
}

unint64_t sub_1C6502AB8()
{
  unint64_t result = qword_1EBBF93F8[0];
  if (!qword_1EBBF93F8[0])
  {
    type metadata accessor for DefaultOwner();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EBBF93F8);
  }
  return result;
}

unint64_t sub_1C6502B08()
{
  unint64_t result = qword_1EBBF9C70;
  if (!qword_1EBBF9C70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBBF9C70);
  }
  return result;
}

uint64_t type metadata accessor for NoOpSuggestionsRepository()
{
  return self;
}

uint64_t method lookup function for NoOpSuggestionsRepository(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for NoOpSuggestionsRepository);
}

uint64_t type metadata accessor for DefaultSuggestionsRepository()
{
  return self;
}

uint64_t method lookup function for DefaultSuggestionsRepository(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for DefaultSuggestionsRepository);
}

uint64_t sub_1C6502BCC()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1C64A5630;
  return CandidateSuggestionConfigurator.isValid(signal:)();
}

uint64_t sub_1C6502C58()
{
  return sub_1C64BC460(*(uint64_t (**)(uint64_t))(v0 + 8), v0, 1);
}

uint64_t CandidateSuggestionConfigurator.isValid(signal:)()
{
  return MEMORY[0x1F4188298](sub_1C6502CAC, 0, 0);
}

uint64_t sub_1C6502CAC()
{
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(1);
}

uint64_t sub_1C6502CC4@<X0>(uint64_t a1@<X8>)
{
  return sub_1C649FA30(v1, a1);
}

uint64_t DefaultCandidateSuggestionConfigurator.suggestionId.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DefaultCandidateSuggestionConfigurator.updateContext(context:signal:)()
{
  return sub_1C64C7EA0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t DefaultCandidateSuggestionConfigurator.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t DefaultCandidateSuggestionConfigurator.__deallocating_deinit()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186488](v0, 32, 7);
}

uint64_t sub_1C6502DB0()
{
  return DefaultCandidateSuggestionConfigurator.suggestionId.getter();
}

uint64_t sub_1C6502DD4()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1C64C7EB4;
  return DefaultCandidateSuggestionConfigurator.updateContext(context:signal:)();
}

uint64_t sub_1C6502E60(uint64_t a1)
{
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)&dword_1EA3F18A8 + dword_1EA3F18A8);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1C64A5630;
  return v5(a1);
}

uint64_t static CandidateSuggestionConfigurators.merge(_:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = a2;
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    uint64_t v4 = a1 + 32;
    swift_bridgeObjectRetain();
    uint64_t v5 = (void *)MEMORY[0x1E4FBC860];
    while (1)
    {
      sub_1C649FA30(v4, (uint64_t)v32);
      sub_1C649FA30((uint64_t)v32, (uint64_t)v31);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFA540);
      if (swift_dynamicCast())
      {
        uint64_t v6 = v30;
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v6 = 0;
      }
      sub_1C649FA30((uint64_t)v32, (uint64_t)v31);
      if (!v6)
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFB3A0);
        uint64_t v6 = swift_allocObject();
        *(_OWORD *)(v6 + 16) = xmmword_1C6577AD0;
        sub_1C649FA30((uint64_t)v31, v6 + 32);
      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v32);
      uint64_t v7 = *(void *)(v6 + 16);
      uint64_t v8 = v5[2];
      if (__OFADD__(v8, v7)) {
        break;
      }
      if (!swift_isUniquelyReferenced_nonNull_native() || v8 + v7 > v5[3] >> 1)
      {
        sub_1C64AE130();
        uint64_t v5 = v9;
      }
      if (*(void *)(v6 + 16))
      {
        uint64_t v10 = v5[2];
        if ((v5[3] >> 1) - v10 < v7) {
          goto LABEL_43;
        }
        unint64_t v11 = (unint64_t)&v5[5 * v10 + 4];
        if (v6 + 32 < v11 + 40 * v7 && v11 < v6 + 32 + 40 * v7) {
          goto LABEL_46;
        }
        swift_arrayInitWithCopy();
        if (v7)
        {
          uint64_t v13 = v5[2];
          BOOL v14 = __OFADD__(v13, v7);
          uint64_t v15 = v13 + v7;
          if (v14) {
            goto LABEL_44;
          }
          v5[2] = v15;
        }
      }
      else if (v7)
      {
        goto LABEL_42;
      }
      swift_bridgeObjectRelease();
      v4 += 40;
      if (!--v3)
      {
        swift_bridgeObjectRelease();
        uint64_t v2 = a2;
        goto LABEL_26;
      }
    }
    __break(1u);
LABEL_42:
    __break(1u);
LABEL_43:
    __break(1u);
LABEL_44:
    __break(1u);
LABEL_45:
    swift_bridgeObjectRelease();
    __break(1u);
LABEL_46:
    OUTLINED_FUNCTION_2_3();
    OUTLINED_FUNCTION_52();
    uint64_t result = OUTLINED_FUNCTION_16_1();
    __break(1u);
  }
  else
  {
    uint64_t v5 = (void *)MEMORY[0x1E4FBC860];
LABEL_26:
    if (v5[2])
    {
      uint64_t v16 = v5 + 4;
      sub_1C649FA30((uint64_t)(v5 + 4), (uint64_t)v32);
      uint64_t v17 = v33;
      uint64_t v18 = v34;
      __swift_project_boxed_opaque_existential_1(v32, v33);
      uint64_t v19 = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 8))(v17, v18);
      uint64_t v21 = v20;
      uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v32);
      uint64_t v23 = v5[2];
      if (v23)
      {
        swift_bridgeObjectRetain();
        do
        {
          uint64_t v24 = v16[3];
          uint64_t v25 = v16[4];
          __swift_project_boxed_opaque_existential_1(v16, v24);
          if ((*(uint64_t (**)(uint64_t, uint64_t))(v25 + 8))(v24, v25) == v19 && v26 == v21)
          {
            swift_bridgeObjectRelease();
          }
          else
          {
            char v28 = sub_1C6577090();
            swift_bridgeObjectRelease();
            if ((v28 & 1) == 0) {
              goto LABEL_45;
            }
          }
          v16 += 5;
          --v23;
        }
        while (v23);
        uint64_t result = swift_bridgeObjectRelease();
      }
      *uint64_t v2 = v5;
      v2[1] = v19;
      v2[3] = &type metadata for CandidateSuggestionConfigurators.MergedCandidateSuggestionConfigurator;
      v2[4] = &off_1F215CCD8;
      v2[2] = v21;
    }
    else
    {
      uint64_t result = swift_bridgeObjectRelease();
      v2[4] = 0;
      *(_OWORD *)uint64_t v2 = 0u;
      *((_OWORD *)v2 + 1) = 0u;
    }
  }
  return result;
}

uint64_t static CandidateSuggestionConfigurators.restrict(provider:for:complimentExistingRestrictions:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t *a4@<X8>)
{
  a4[3] = (uint64_t)&type metadata for CandidateSuggestionConfigurators.RestrictedConfiguratorProvider;
  a4[4] = (uint64_t)&off_1F215CCC8;
  uint64_t v8 = swift_allocObject();
  *a4 = v8;
  sub_1C649FA30(a1, v8 + 16);
  *(void *)(v8 + 56) = a2;
  *(unsigned char *)(v8 + 64) = a3;

  return swift_bridgeObjectRetain();
}

uint64_t static CandidateSuggestionConfigurators.restrict(configurator:for:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  a3[3] = (uint64_t)&type metadata for CandidateSuggestionConfigurators.RestrictedSuggestionConfigurator;
  a3[4] = (uint64_t)&off_1F215CCA8;
  uint64_t v6 = swift_allocObject();
  *a3 = v6;
  sub_1C649FA30(a1, v6 + 24);
  *(void *)(v6 + 16) = a2;

  return swift_bridgeObjectRetain();
}

uint64_t sub_1C6503388(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = v2[3];
  uint64_t v5 = v2[4];
  __swift_project_boxed_opaque_existential_1(v2, v4);
  uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 8))(a1, v4, v5);
  _OWORD v9[2] = v2;
  uint64_t v7 = sub_1C6506D20((void (*)(uint64_t *__return_ptr, uint64_t *))sub_1C6506554, (uint64_t)v9, v6);
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_1C6503430@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4 = *a1;
  _OWORD v6[2] = a2;
  uint64_t result = sub_1C64EB7BC((void (*)(long long *__return_ptr, uint64_t))sub_1C6506F54, (uint64_t)v6, v4);
  *a3 = result;
  return result;
}

uint64_t sub_1C6503484@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  int v6 = *(unsigned __int8 *)(a2 + 48);
  sub_1C6506F74(a2, (uint64_t)v12);
  sub_1C649FA30(a1, (uint64_t)v11);
  if (v6 == 1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
    sub_1C6506FAC((uint64_t)v12);
  }
  else
  {
    char v7 = sub_1C6503580(v11);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
    sub_1C6506FAC((uint64_t)v12);
    if (v7) {
      return sub_1C649FA30(a1, (uint64_t)a3);
    }
  }
  uint64_t v9 = *(void *)(a2 + 40);
  a3[3] = (uint64_t)&type metadata for CandidateSuggestionConfigurators.RestrictedSuggestionConfigurator;
  a3[4] = (uint64_t)&off_1F215CCA8;
  uint64_t v10 = swift_allocObject();
  *a3 = v10;
  sub_1C649FA30(a1, v10 + 24);
  *(void *)(v10 + 16) = v9;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C6503580(void *a1)
{
  sub_1C649FA30((uint64_t)a1, (uint64_t)v11);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFA540);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFBA40);
  if (!swift_dynamicCast())
  {
    uint64_t v14 = 0;
    long long v12 = 0u;
    long long v13 = 0u;
    sub_1C6506FDC((uint64_t)&v12, &qword_1EBBFBA48);
    long long v15 = 0u;
    long long v16 = 0u;
    goto LABEL_8;
  }
  uint64_t v2 = *((void *)&v13 + 1);
  uint64_t v3 = v14;
  __swift_project_boxed_opaque_existential_1(&v12, *((uint64_t *)&v13 + 1));
  (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v3 + 8))(&v15, v2, v3);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v12);
  if (!*((void *)&v16 + 1))
  {
LABEL_8:
    sub_1C6506FDC((uint64_t)&v15, &qword_1EBBFBE60);
    long long v17 = 0u;
    long long v18 = 0u;
    uint64_t v19 = 0;
    goto LABEL_9;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
    uint64_t v19 = 0;
    long long v17 = 0u;
    long long v18 = 0u;
    goto LABEL_9;
  }
  if (!*((void *)&v18 + 1))
  {
LABEL_9:
    sub_1C6506FDC((uint64_t)&v17, &qword_1EBBFA548);
    goto LABEL_10;
  }
  sub_1C64A5488(&v17, (uint64_t)v10);
  __swift_project_boxed_opaque_existential_1(v10, v10[3]);
  uint64_t v4 = sub_1C6577080();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v5 = sub_1C6577080();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  if (v4 == v5)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
LABEL_10:
    sub_1C649FA30((uint64_t)a1, (uint64_t)&v17);
    if (swift_dynamicCast())
    {
      sub_1C6507038((uint64_t)v10);
LABEL_12:
      char v6 = 1;
      return v6 & 1;
    }
    sub_1C649FA30((uint64_t)a1, (uint64_t)v10);
    if (swift_dynamicCast())
    {
      uint64_t v7 = *(void *)(v17 + 16);
      if (v7)
      {
        uint64_t v8 = v17 + 32;
        swift_bridgeObjectRetain();
        while ((sub_1C6503580(v8) & 1) == 0)
        {
          v8 += 40;
          if (!--v7)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease_n();
            goto LABEL_21;
          }
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        goto LABEL_12;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
LABEL_21:
    char v6 = 0;
    return v6 & 1;
  }
  char v6 = sub_1C6503580(v10);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
  return v6 & 1;
}

uint64_t sub_1C6503844()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = v0[5];
  __swift_project_boxed_opaque_existential_1(v0 + 1, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v2);
}

uint64_t sub_1C6503898(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  void v3[4] = v2;
  void v3[2] = a1;
  return MEMORY[0x1F4188298](sub_1C65038BC, 0, 0);
}

uint64_t sub_1C65038BC()
{
  OUTLINED_FUNCTION_7_1();
  OUTLINED_FUNCTION_12_5((void *)(*(void *)(v0 + 32) + 8));
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 40) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1C650399C;
  uint64_t v2 = OUTLINED_FUNCTION_8_6();
  return v3(v2);
}

uint64_t sub_1C650399C()
{
  OUTLINED_FUNCTION_6_0();
  OUTLINED_FUNCTION_0_0();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_3_1();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_63_1();
  return v3();
}

uint64_t sub_1C6503A5C(uint64_t a1)
{
  *(void *)(v2 + 216) = a1;
  *(void *)(v2 + 224) = v1;
  return MEMORY[0x1F4188298](sub_1C6503A7C, 0, 0);
}

uint64_t sub_1C6503A7C()
{
  uint64_t v48 = v0;
  uint64_t v1 = *(void *)(v0 + 216);
  int v2 = *(unsigned __int8 *)(v1 + 88);
  if (v2 != 255)
  {
    uint64_t v4 = *(void *)(v1 + 56);
    uint64_t v3 = *(void *)(v1 + 64);
    uint64_t v6 = *(void *)(v1 + 72);
    uint64_t v5 = *(void *)(v1 + 80);
    uint64_t v7 = *(uint64_t **)(v0 + 224);
    *(void *)(v0 + 112) = v4;
    *(void *)(v0 + 120) = v3;
    *(void *)(v0 + 128) = v6;
    *(void *)(v0 + 136) = v5;
    *(unsigned char *)(v0 + 144) = v2;
    uint64_t v8 = *v7;
    uint64_t v9 = OUTLINED_FUNCTION_20_7();
    sub_1C64B8038(v9, v10, v11, v12, v13);
    swift_bridgeObjectRetain();
    char v14 = sub_1C64EC2DC(v0 + 112, v8);
    swift_bridgeObjectRelease();
    if (v14)
    {
      long long v15 = *(void **)(v0 + 224);
      OUTLINED_FUNCTION_10_6();
      uint64_t v16 = v15[5];
      __swift_project_boxed_opaque_existential_1(v15 + 1, v15[4]);
      unint64_t v44 = (uint64_t (*)(uint64_t))(*(void *)(v16 + 24) + **(int **)(v16 + 24));
      long long v17 = (void *)swift_task_alloc();
      *(void *)(v0 + 232) = v17;
      void *v17 = v0;
      v17[1] = sub_1C6503EFC;
      uint64_t v18 = OUTLINED_FUNCTION_25_6(*(void *)(v0 + 216));
      return v44(v18);
    }
    uint64_t v45 = v0 + 16;
    uint64_t v46 = v0 + 64;
    if (qword_1EBBFB928 != -1) {
      swift_once();
    }
    uint64_t v20 = *(void *)(v0 + 224);
    uint64_t v21 = sub_1C65763A0();
    __swift_project_value_buffer(v21, (uint64_t)qword_1EBBFB910);
    sub_1C6507068(v20, v45);
    sub_1C6507068(v20, v46);
    uint64_t v22 = OUTLINED_FUNCTION_20_7();
    sub_1C64A0570(v22, v23, v24, v25, v26);
    uint64_t v27 = sub_1C6576380();
    os_log_type_t v28 = sub_1C6576A40();
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v43 = v5;
      uint64_t v29 = swift_slowAlloc();
      uint64_t v47 = swift_slowAlloc();
      *(_DWORD *)uint64_t v29 = 136315650;
      os_log_type_t type = v28;
      uint64_t v31 = *(void *)(v0 + 48);
      uint64_t v30 = *(void *)(v0 + 56);
      __swift_project_boxed_opaque_existential_1((void *)(v0 + 24), v31);
      log = v27;
      uint64_t v32 = (*(uint64_t (**)(uint64_t, uint64_t))(v30 + 8))(v31, v30);
      *(void *)(v0 + 200) = sub_1C64BCF18(v32, v33, &v47);
      sub_1C6576B40();
      swift_bridgeObjectRelease();
      sub_1C6507038(v45);
      *(_WORD *)(v29 + 12) = 2080;
      uint64_t v34 = swift_bridgeObjectRetain();
      uint64_t v35 = MEMORY[0x1C879EE80](v34, &type metadata for DeliveryVehicle);
      unint64_t v37 = v36;
      swift_bridgeObjectRelease();
      *(void *)(v0 + 192) = sub_1C64BCF18(v35, v37, &v47);
      sub_1C6576B40();
      swift_bridgeObjectRelease();
      sub_1C6507038(v46);
      *(_WORD *)(v29 + 22) = 2080;
      sub_1C649FB10(v0 + 112, v0 + 152);
      uint64_t v38 = DeliveryVehicle.rawValue.getter();
      *(void *)(v0 + 208) = sub_1C64BCF18(v38, v39, &v47);
      sub_1C6576B40();
      swift_bridgeObjectRelease();
      sub_1C65070A0(v4, v3, v6, v43, v2);
      sub_1C65070A0(v4, v3, v6, v43, v2);
      _os_log_impl(&dword_1C6494000, log, type, "Removing suggestion (%s) due to unsupported deliveryVehicle. restricted: %s, got: %s", (uint8_t *)v29, 0x20u);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_31_5();
      OUTLINED_FUNCTION_31_5();
    }
    else
    {
      sub_1C6507038(v45);
      sub_1C6507038(v46);
      OUTLINED_FUNCTION_10_6();
      OUTLINED_FUNCTION_10_6();
    }
  }
  unint64_t v40 = *(uint64_t (**)(void))(v0 + 8);
  return v40(0);
}

uint64_t sub_1C6503EFC()
{
  OUTLINED_FUNCTION_6_0();
  OUTLINED_FUNCTION_0_0();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_3_1();
  *int v2 = v1;
  swift_task_dealloc();
  uint64_t v3 = OUTLINED_FUNCTION_5_1();
  return v4(v3);
}

uint64_t sub_1C6503FC4(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1C64C7EB4;
  return sub_1C6503898(a1, a2);
}

uint64_t sub_1C6504068(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1C64A5630;
  return sub_1C6503A5C(a1);
}

uint64_t sub_1C65040FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  void v3[4] = a3;
  void v3[2] = a1;
  return MEMORY[0x1F4188298](sub_1C6504120, 0, 0);
}

uint64_t sub_1C6504120()
{
  OUTLINED_FUNCTION_7_1();
  uint64_t v1 = v0[4];
  uint64_t v2 = *(void *)(v1 + 16);
  v0[5] = v2;
  if (v2)
  {
    v0[6] = 0;
    uint64_t v3 = (void *)(v1 + 32);
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_12_5(v3);
    uint64_t v4 = (void *)swift_task_alloc();
    v0[7] = v4;
    *uint64_t v4 = v0;
    v4[1] = sub_1C6504248;
    uint64_t v5 = OUTLINED_FUNCTION_8_6();
    return v6(v5);
  }
  else
  {
    OUTLINED_FUNCTION_63_1();
    return v8();
  }
}

uint64_t sub_1C6504248()
{
  OUTLINED_FUNCTION_6_0();
  OUTLINED_FUNCTION_0_0();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_3_1();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1C6504314, 0, 0);
}

uint64_t sub_1C6504314()
{
  OUTLINED_FUNCTION_7_1();
  uint64_t v1 = v0[6] + 1;
  if (v1 == v0[5])
  {
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_63_1();
    return v2();
  }
  else
  {
    v0[6] = v1;
    OUTLINED_FUNCTION_12_5((void *)(v0[4] + 40 * v1 + 32));
    uint64_t v4 = (void *)swift_task_alloc();
    v0[7] = v4;
    *uint64_t v4 = v0;
    v4[1] = sub_1C6504248;
    uint64_t v5 = OUTLINED_FUNCTION_8_6();
    return v6(v5);
  }
}

uint64_t sub_1C6504448(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 112) = a1;
  *(void *)(v2 + 120) = a2;
  return MEMORY[0x1F4188298](sub_1C6504468, 0, 0);
}

uint64_t sub_1C6504468()
{
  sub_1C6506404(v0[14], (uint64_t)(v0 + 2));
  uint64_t v1 = swift_allocObject();
  v0[16] = v1;
  memcpy((void *)(v1 + 16), v0 + 2, 0x59uLL);
  uint64_t v2 = (void *)OUTLINED_FUNCTION_13_7();
  v0[17] = (uint64_t)v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1C6504564;
  uint64_t v3 = v0[15];
  return v5(v3, 0, 0, 0, &unk_1EA3F1848, v1);
}

uint64_t sub_1C6504564()
{
  OUTLINED_FUNCTION_6_0();
  OUTLINED_FUNCTION_0_0();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_3_1();
  *uint64_t v2 = v1;
  *(void *)(v4 + 144) = v3;
  swift_task_dealloc();
  swift_release();
  return MEMORY[0x1F4188298](sub_1C6504654, 0, 0);
}

uint64_t sub_1C6504654()
{
  OUTLINED_FUNCTION_6_0();
  uint64_t result = *(void *)(v0 + 144);
  uint64_t v2 = *(void *)(result + 16);
  if (v2 && *(unsigned char *)(result + 32) == 1 && v2 != 1)
  {
    uint64_t v3 = 33;
    while (1)
    {
      uint64_t v4 = v3 - 31;
      if (__OFADD__(v3 - 32, 1)) {
        break;
      }
      int v5 = *(unsigned __int8 *)(result + v3++);
      if (v5 != 1 || v4 == v2) {
        goto LABEL_13;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_13:
    swift_bridgeObjectRelease();
    uint64_t v7 = OUTLINED_FUNCTION_5_1();
    return v8(v7);
  }
  return result;
}

uint64_t sub_1C6504700(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return MEMORY[0x1F4188298](sub_1C6504720, 0, 0);
}

uint64_t sub_1C6504720()
{
  OUTLINED_FUNCTION_7_1();
  uint64_t v1 = (void *)v0[2];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F07B8);
  uint64_t v2 = swift_allocObject();
  v0[4] = v2;
  *(_OWORD *)(v2 + 16) = xmmword_1C6577AD0;
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  uint64_t v7 = (uint64_t (*)(uint64_t))(*(void *)(v3 + 24) + **(int **)(v3 + 24));
  uint64_t v4 = (void *)swift_task_alloc();
  v0[5] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1C6504844;
  uint64_t v5 = OUTLINED_FUNCTION_25_6(v0[3]);
  return v7(v5);
}

uint64_t sub_1C6504844()
{
  OUTLINED_FUNCTION_6_0();
  OUTLINED_FUNCTION_0_0();
  *(unsigned char *)(v1 + 48) = v0;
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1C650491C, 0, 0);
}

uint64_t sub_1C650491C()
{
  *(unsigned char *)(*(void *)(v0 + 32) + 32) = *(unsigned char *)(v0 + 48);
  return (*(uint64_t (**)(void))(v0 + 8))(*(void *)(v0 + 32));
}

uint64_t sub_1C6504944()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1C6504974(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v2;
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_1C64C7EB4;
  return sub_1C65040FC(a1, a2, v6);
}

uint64_t sub_1C6504A34(uint64_t a1)
{
  uint64_t v4 = *v1;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1C64A5630;
  return sub_1C6504448(a1, v4);
}

uint64_t FilterSignal.init(filter:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t FilterSignal.create(suggestionId:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v8 = *v3;
  uint64_t v7 = v3[1];
  a3[3] = type metadata accessor for FilterSignal.FilterSignalConfigurator();
  a3[4] = &off_1F215CC88;
  uint64_t v9 = (void *)swift_allocObject();
  *a3 = v9;
  _OWORD v9[2] = a1;
  void v9[3] = a2;
  void v9[4] = v8;
  uint64_t v9[5] = v7;
  swift_bridgeObjectRetain();
  return swift_retain();
}

uint64_t sub_1C6504B88()
{
  return sub_1C64C7EA0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1C6504BC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[38] = a5;
  v6[39] = a6;
  v6[36] = a1;
  v6[37] = a4;
  uint64_t v8 = sub_1C6576AE0();
  unsigned char v6[40] = v8;
  v6[41] = *(void *)(v8 - 8);
  v6[42] = swift_task_alloc();
  v6[43] = *(void *)(a6 - 8);
  v6[44] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C6504CE0, 0, 0);
}

uint64_t sub_1C6504CE0()
{
  uint64_t v24 = v0;
  sub_1C64B11A4(*(void *)(*(void *)(v0 + 288) + 40) + 56, v0 + 112);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFB8A8);
  int v1 = swift_dynamicCast();
  uint64_t v2 = *(void *)(v0 + 312);
  if (v1)
  {
    uint64_t v4 = *(void *)(v0 + 344);
    uint64_t v3 = *(void *)(v0 + 352);
    uint64_t v5 = *(void *)(v0 + 336);
    uint64_t v6 = *(uint64_t (**)(uint64_t))(v0 + 296);
    __swift_storeEnumTagSinglePayload(v5, 0, 1, *(void *)(v0 + 312));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v3, v5, v2);
    char v7 = v6(v3);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v2);
  }
  else
  {
    uint64_t v9 = *(void *)(v0 + 328);
    uint64_t v8 = *(void *)(v0 + 336);
    uint64_t v10 = *(void *)(v0 + 320);
    __swift_storeEnumTagSinglePayload(v8, 1, 1, *(void *)(v0 + 312));
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
    if (qword_1EBBF8180 != -1) {
      swift_once();
    }
    uint64_t v11 = *(void *)(v0 + 288);
    uint64_t v12 = sub_1C65763A0();
    __swift_project_value_buffer(v12, (uint64_t)qword_1EBBFB108);
    sub_1C6506404(v11, v0 + 16);
    char v13 = sub_1C6576380();
    os_log_type_t v14 = sub_1C6576A50();
    if (os_log_type_enabled(v13, v14))
    {
      long long v15 = (uint8_t *)swift_slowAlloc();
      uint64_t v23 = swift_slowAlloc();
      *(_DWORD *)long long v15 = 136315138;
      sub_1C64B11A4(*(void *)(v0 + 56) + 56, v0 + 176);
      __swift_project_boxed_opaque_existential_1((void *)(v0 + 176), *(void *)(v0 + 200));
      uint64_t DynamicType = swift_getDynamicType();
      long long v21 = *(_OWORD *)(v0 + 208);
      long long v22 = *(_OWORD *)(v0 + 224);
      __swift_destroy_boxed_opaque_existential_1(v0 + 176);
      *(void *)(v0 + 240) = DynamicType;
      *(_OWORD *)(v0 + 248) = v21;
      *(_OWORD *)(v0 + 264) = v22;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F1870);
      uint64_t v17 = sub_1C65765A0();
      *(void *)(v0 + 280) = sub_1C64BCF18(v17, v18, &v23);
      sub_1C6576B40();
      swift_bridgeObjectRelease();
      sub_1C65070B4(v0 + 16);
      _os_log_impl(&dword_1C6494000, v13, v14, "subscribed signal value not as expected (got %s. by-passing filter", v15, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_31_5();
      OUTLINED_FUNCTION_31_5();
    }
    else
    {
      sub_1C65070B4(v0 + 16);
    }

    char v7 = 1;
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v19 = *(uint64_t (**)(void))(v0 + 8);
  return v19(v7 & 1);
}

uint64_t sub_1C650503C()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1C650506C()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1C64C520C;
  return sub_1C64C520C();
}

uint64_t sub_1C65050F8(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v2;
  uint64_t v7 = v2[1];
  uint64_t v9 = v2[2];
  uint64_t v8 = v2[3];
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v10;
  uint64_t v11 = *(void *)(a2 + 16);
  *uint64_t v10 = v3;
  v10[1] = sub_1C64A5374;
  return sub_1C6504BC0(a1, v6, v7, v9, v8, v11);
}

uint64_t sub_1C65051D0(uint64_t a1)
{
  uint64_t v2 = OUTLINED_FUNCTION_13_7();
  uint64_t v3 = (void *)OUTLINED_FUNCTION_25_3(v2);
  *uint64_t v3 = v4;
  v3[1] = sub_1C64A5630;
  return v6(a1);
}

uint64_t sub_1C650526C(uint64_t a1)
{
  uint64_t v2 = OUTLINED_FUNCTION_13_7();
  uint64_t v3 = (void *)OUTLINED_FUNCTION_25_3(v2);
  *uint64_t v3 = v4;
  v3[1] = sub_1C64A5630;
  return v6(a1);
}

uint64_t sub_1C6505308()
{
  OUTLINED_FUNCTION_11_8();
  if (v3 < 0)
  {
    OUTLINED_FUNCTION_2_3();
    OUTLINED_FUNCTION_53();
LABEL_11:
    uint64_t result = OUTLINED_FUNCTION_16_1();
    __break(1u);
    return result;
  }
  if (v2 + 16 * v1 > v0 && v0 + 16 * v1 > v2)
  {
    OUTLINED_FUNCTION_2_3();
    OUTLINED_FUNCTION_52();
    goto LABEL_11;
  }

  return swift_arrayInitWithCopy();
}

uint64_t sub_1C65053B4(uint64_t a1, uint64_t a2)
{
  return sub_1C65053CC(a1, a2);
}

uint64_t sub_1C65053C0(uint64_t a1, uint64_t a2)
{
  return sub_1C65053CC(a1, a2);
}

uint64_t sub_1C65053CC(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_2_3();
    OUTLINED_FUNCTION_53();
LABEL_11:
    uint64_t result = OUTLINED_FUNCTION_16_1();
    __break(1u);
    return result;
  }
  OUTLINED_FUNCTION_16_9();
  if (!v6 & v5) {
    BOOL v7 = v4 > v2;
  }
  else {
    BOOL v7 = 0;
  }
  if (v7)
  {
    OUTLINED_FUNCTION_2_3();
    OUTLINED_FUNCTION_52();
    goto LABEL_11;
  }
  __swift_instantiateConcreteTypeFromMangledName(v3);
  OUTLINED_FUNCTION_4_12();

  return swift_arrayInitWithCopy();
}

uint64_t sub_1C6505478(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_2_3();
    OUTLINED_FUNCTION_53();
LABEL_11:
    uint64_t result = OUTLINED_FUNCTION_16_1();
    __break(1u);
    return result;
  }
  OUTLINED_FUNCTION_15_5();
  if (!v5 & v4) {
    BOOL v6 = v3 > v2;
  }
  else {
    BOOL v6 = 0;
  }
  if (v6)
  {
    OUTLINED_FUNCTION_2_3();
    OUTLINED_FUNCTION_52();
    goto LABEL_11;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFBE60);
  OUTLINED_FUNCTION_4_12();

  return swift_arrayInitWithCopy();
}

void *sub_1C650552C(unint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_2_3();
    OUTLINED_FUNCTION_53();
LABEL_11:
    uint64_t result = (void *)OUTLINED_FUNCTION_16_1();
    __break(1u);
    return result;
  }
  unint64_t v3 = a1 + 2 * a2;
  if (a3 + 2 * a2 > a1)
  {
    BOOL v4 = v3 >= a3;
    BOOL v5 = v3 == a3;
  }
  else
  {
    BOOL v4 = 0;
    BOOL v5 = 0;
  }
  if (!v5 && v4)
  {
    OUTLINED_FUNCTION_2_3();
    OUTLINED_FUNCTION_52();
    goto LABEL_11;
  }
  BOOL v6 = (void *)OUTLINED_FUNCTION_21_7();

  return memcpy(v6, v7, v8);
}

uint64_t sub_1C65055D4()
{
  return sub_1C65055EC();
}

uint64_t sub_1C65055E0()
{
  return sub_1C65055EC();
}

uint64_t sub_1C65055EC()
{
  OUTLINED_FUNCTION_11_8();
  if (v3 < 0)
  {
    OUTLINED_FUNCTION_2_3();
    OUTLINED_FUNCTION_53();
LABEL_11:
    uint64_t result = OUTLINED_FUNCTION_16_1();
    __break(1u);
    return result;
  }
  if (v2 + 40 * v1 > v0 && v0 + 40 * v1 > v2)
  {
    OUTLINED_FUNCTION_2_3();
    OUTLINED_FUNCTION_52();
    goto LABEL_11;
  }

  return swift_arrayInitWithCopy();
}

uint64_t sub_1C6505694(uint64_t a1, uint64_t a2)
{
  return sub_1C6505760(a1, a2);
}

uint64_t sub_1C65056A0()
{
  OUTLINED_FUNCTION_11_8();
  if (v0 < 0)
  {
    OUTLINED_FUNCTION_2_3();
    OUTLINED_FUNCTION_53();
LABEL_11:
    uint64_t result = OUTLINED_FUNCTION_16_1();
    __break(1u);
    return result;
  }
  OUTLINED_FUNCTION_24_5();
  if (!v4 & v3) {
    BOOL v5 = v2 > v1;
  }
  else {
    BOOL v5 = 0;
  }
  if (v5)
  {
    OUTLINED_FUNCTION_2_3();
    OUTLINED_FUNCTION_52();
    goto LABEL_11;
  }

  return swift_arrayInitWithCopy();
}

uint64_t sub_1C6505748(uint64_t a1, uint64_t a2)
{
  return sub_1C6506A6C(a1, a2);
}

uint64_t sub_1C6505754(uint64_t a1, uint64_t a2)
{
  return sub_1C6505760(a1, a2);
}

uint64_t sub_1C6505760(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_2_3();
    OUTLINED_FUNCTION_53();
LABEL_11:
    uint64_t result = OUTLINED_FUNCTION_16_1();
    __break(1u);
    return result;
  }
  OUTLINED_FUNCTION_15_5();
  if (!v6 & v5) {
    BOOL v7 = v4 > v2;
  }
  else {
    BOOL v7 = 0;
  }
  if (v7)
  {
    OUTLINED_FUNCTION_2_3();
    OUTLINED_FUNCTION_52();
    goto LABEL_11;
  }
  __swift_instantiateConcreteTypeFromMangledName(v3);
  OUTLINED_FUNCTION_4_12();

  return swift_arrayInitWithCopy();
}

void *sub_1C650580C()
{
  OUTLINED_FUNCTION_11_8();
  if (v0 < 0)
  {
    OUTLINED_FUNCTION_2_3();
    OUTLINED_FUNCTION_53();
LABEL_11:
    uint64_t result = (void *)OUTLINED_FUNCTION_16_1();
    __break(1u);
    return result;
  }
  OUTLINED_FUNCTION_27_5();
  if (!v6 & v5) {
    BOOL v7 = v4 > (unint64_t)v3;
  }
  else {
    BOOL v7 = 0;
  }
  if (v7)
  {
    OUTLINED_FUNCTION_2_3();
    OUTLINED_FUNCTION_52();
    goto LABEL_11;
  }

  return memcpy(v3, v1, v2);
}

void *sub_1C65058A4(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_2_3();
    OUTLINED_FUNCTION_53();
LABEL_11:
    uint64_t result = (void *)OUTLINED_FUNCTION_16_1();
    __break(1u);
    return result;
  }
  OUTLINED_FUNCTION_17_9();
  if (!v5 && v4)
  {
    BOOL v4 = v3 >= v2;
    BOOL v5 = v3 == v2;
  }
  else
  {
    BOOL v4 = 0;
    BOOL v5 = 0;
  }
  if (!v5 && v4)
  {
    OUTLINED_FUNCTION_2_3();
    OUTLINED_FUNCTION_52();
    goto LABEL_11;
  }
  char v6 = (void *)OUTLINED_FUNCTION_21_7();

  return memcpy(v6, v7, v8);
}

uint64_t sub_1C650593C(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_2_3();
    OUTLINED_FUNCTION_53();
LABEL_11:
    uint64_t result = OUTLINED_FUNCTION_16_1();
    __break(1u);
    return result;
  }
  OUTLINED_FUNCTION_7_10();
  if (!v5 & v4) {
    BOOL v6 = v3 > v2;
  }
  else {
    BOOL v6 = 0;
  }
  if (v6)
  {
    OUTLINED_FUNCTION_2_3();
    OUTLINED_FUNCTION_52();
    goto LABEL_11;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFB7E0);
  OUTLINED_FUNCTION_4_12();

  return swift_arrayInitWithCopy();
}

uint64_t sub_1C65059EC(uint64_t a1, uint64_t a2)
{
  return sub_1C6506A6C(a1, a2);
}

uint64_t sub_1C65059F8()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 65, 7);
}

uint64_t sub_1C6505A38()
{
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);

  return MEMORY[0x1F4186498](v0, 64, 7);
}

uint64_t type metadata accessor for FilterSignal.FilterSignalConfigurator()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1C6505A90()
{
  swift_bridgeObjectRelease();
  swift_release();

  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t dispatch thunk of CandidateSuggestionConfigurator.suggestionId.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of CandidateSuggestionConfigurator.updateContext(context:signal:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 + 16) + **(int **)(a4 + 16));
  uint64_t v8 = swift_task_alloc();
  uint64_t v9 = (void *)OUTLINED_FUNCTION_25_3(v8);
  *uint64_t v9 = v10;
  v9[1] = sub_1C64C7EB4;
  return v12(a1, a2, a3, a4);
}

uint64_t dispatch thunk of CandidateSuggestionConfigurator.isValid(signal:)()
{
  OUTLINED_FUNCTION_7_1();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 24) + **(int **)(v0 + 24));
  uint64_t v6 = swift_task_alloc();
  BOOL v7 = (void *)OUTLINED_FUNCTION_25_3(v6);
  *BOOL v7 = v8;
  v7[1] = sub_1C64A5630;
  return v10(v5, v3, v1);
}

uint64_t dispatch thunk of CandidateSuggestionConfiguratorFactory.create(suggestionId:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t type metadata accessor for DefaultCandidateSuggestionConfigurator()
{
  return self;
}

uint64_t method lookup function for DefaultCandidateSuggestionConfigurator(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for DefaultCandidateSuggestionConfigurator);
}

ValueMetadata *type metadata accessor for CandidateSuggestionConfigurators()
{
  return &type metadata for CandidateSuggestionConfigurators;
}

uint64_t sub_1C6505D48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 48);
}

uint64_t type metadata accessor for FilterSignal()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1C6505D68()
{
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t sub_1C6505DA4(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = v3;
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

void *sub_1C6505DF0(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1C6505E58(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = v4;
  swift_release();
  return a1;
}

uint64_t destroy for CandidateSuggestionConfigurators.RestrictedSuggestionConfigurator(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1(v1);
}

uint64_t initializeWithCopy for CandidateSuggestionConfigurators.RestrictedSuggestionConfigurator(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v3 = a2 + 8;
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v4;
  uint64_t v5 = v4;
  uint64_t v6 = **(void (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);
  swift_bridgeObjectRetain();
  v6(a1 + 8, v3, v5);
  return a1;
}

void *assignWithCopy for CandidateSuggestionConfigurators.RestrictedSuggestionConfigurator(void *a1, void *a2)
{
  uint64_t v3 = a2 + 1;
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __swift_assign_boxed_opaque_existential_1(a1 + 1, v3);
  return a1;
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for CandidateSuggestionConfigurators.RestrictedSuggestionConfigurator(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + 8);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for CandidateSuggestionConfigurators.RestrictedSuggestionConfigurator(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((unsigned char *)a1 + 48))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CandidateSuggestionConfigurators.RestrictedSuggestionConfigurator(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CandidateSuggestionConfigurators.RestrictedSuggestionConfigurator()
{
  return &type metadata for CandidateSuggestionConfigurators.RestrictedSuggestionConfigurator;
}

uint64_t destroy for CandidateSuggestionConfigurators.RestrictedConfiguratorProvider(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_1(a1);

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for CandidateSuggestionConfigurators.RestrictedConfiguratorProvider(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for CandidateSuggestionConfigurators.RestrictedConfiguratorProvider(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  return a1;
}

__n128 __swift_memcpy49_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for CandidateSuggestionConfigurators.RestrictedConfiguratorProvider(uint64_t a1, uint64_t a2)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for CandidateSuggestionConfigurators.RestrictedConfiguratorProvider(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 49))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 24);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CandidateSuggestionConfigurators.RestrictedConfiguratorProvider(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 48) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 49) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 49) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CandidateSuggestionConfigurators.RestrictedConfiguratorProvider()
{
  return &type metadata for CandidateSuggestionConfigurators.RestrictedConfiguratorProvider;
}

uint64_t destroy for CandidateSuggestionConfigurators.MergedCandidateSuggestionConfigurator()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *_s18SiriSuggestionsKit32CandidateSuggestionConfiguratorsO37MergedCandidateSuggestionConfiguratorVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for CandidateSuggestionConfigurators.MergedCandidateSuggestionConfigurator(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for CandidateSuggestionConfigurators.MergedCandidateSuggestionConfigurator(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for CandidateSuggestionConfigurators.MergedCandidateSuggestionConfigurator()
{
  return &type metadata for CandidateSuggestionConfigurators.MergedCandidateSuggestionConfigurator;
}

uint64_t sub_1C6506404(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1C6506460()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_release();
  swift_release();
  int v1 = *(unsigned __int8 *)(v0 + 104);
  if (v1 != 255) {
    sub_1C64A21C4(*(void *)(v0 + 72), *(void *)(v0 + 80), *(void *)(v0 + 88), *(void *)(v0 + 96), v1);
  }

  return MEMORY[0x1F4186498](v0, 105, 7);
}

uint64_t sub_1C65064C0()
{
  OUTLINED_FUNCTION_6_0();
  uint64_t v2 = v1;
  uint64_t v3 = swift_task_alloc();
  uint64_t v4 = (void *)OUTLINED_FUNCTION_25_3(v3);
  *uint64_t v4 = v5;
  v4[1] = sub_1C64A5560;
  return sub_1C6504700(v2, v0 + 16);
}

uint64_t sub_1C6506554@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1C6503430(a1, *(void *)(v2 + 16), a2);
}

void *sub_1C6506570(unint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_2_3();
    OUTLINED_FUNCTION_53();
LABEL_11:
    __n128 result = (void *)OUTLINED_FUNCTION_16_1();
    __break(1u);
    return result;
  }
  unint64_t v3 = a1 + 32 * a2;
  if (a3 + 32 * a2 > a1)
  {
    BOOL v4 = v3 >= a3;
    BOOL v5 = v3 == a3;
  }
  else
  {
    BOOL v4 = 0;
    BOOL v5 = 0;
  }
  if (!v5 && v4)
  {
    OUTLINED_FUNCTION_2_3();
    OUTLINED_FUNCTION_52();
    goto LABEL_11;
  }
  uint64_t v6 = (void *)OUTLINED_FUNCTION_21_7();

  return memcpy(v6, v7, v8);
}

uint64_t sub_1C6506618(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_2_3();
    OUTLINED_FUNCTION_53();
LABEL_11:
    uint64_t result = OUTLINED_FUNCTION_16_1();
    __break(1u);
    return result;
  }
  OUTLINED_FUNCTION_7_10();
  if (!v5 & v4) {
    BOOL v6 = v3 > v2;
  }
  else {
    BOOL v6 = 0;
  }
  if (v6)
  {
    OUTLINED_FUNCTION_2_3();
    OUTLINED_FUNCTION_52();
    goto LABEL_11;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F1880);
  OUTLINED_FUNCTION_4_12();

  return swift_arrayInitWithCopy();
}

uint64_t sub_1C65066C8(unint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_2_3();
    OUTLINED_FUNCTION_53();
LABEL_11:
    uint64_t result = OUTLINED_FUNCTION_16_1();
    __break(1u);
    return result;
  }
  if (a3 + (a2 << 7) > a1 && a1 + (a2 << 7) > a3)
  {
    OUTLINED_FUNCTION_2_3();
    OUTLINED_FUNCTION_52();
    goto LABEL_11;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFB548);
  OUTLINED_FUNCTION_4_12();

  return swift_arrayInitWithCopy();
}

uint64_t sub_1C650678C(uint64_t a1, uint64_t a2)
{
  return sub_1C6506A6C(a1, a2);
}

uint64_t sub_1C6506798()
{
  OUTLINED_FUNCTION_11_8();
  if (v3 < 0)
  {
    OUTLINED_FUNCTION_2_3();
    OUTLINED_FUNCTION_53();
LABEL_11:
    uint64_t result = OUTLINED_FUNCTION_16_1();
    __break(1u);
    return result;
  }
  if (v2 + 24 * v1 > v0 && v0 + 24 * v1 > v2)
  {
    OUTLINED_FUNCTION_2_3();
    OUTLINED_FUNCTION_52();
    goto LABEL_11;
  }

  return swift_arrayInitWithCopy();
}

uint64_t sub_1C6506848()
{
  OUTLINED_FUNCTION_11_8();
  if (v0 < 0)
  {
    OUTLINED_FUNCTION_2_3();
    OUTLINED_FUNCTION_53();
LABEL_11:
    uint64_t result = OUTLINED_FUNCTION_16_1();
    __break(1u);
    return result;
  }
  OUTLINED_FUNCTION_24_5();
  if (!v4 & v3) {
    BOOL v5 = v2 > v1;
  }
  else {
    BOOL v5 = 0;
  }
  if (v5)
  {
    OUTLINED_FUNCTION_2_3();
    OUTLINED_FUNCTION_52();
    goto LABEL_11;
  }

  return swift_arrayInitWithCopy();
}

void *sub_1C65068F0(unint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_2_3();
    OUTLINED_FUNCTION_53();
LABEL_11:
    uint64_t result = (void *)OUTLINED_FUNCTION_16_1();
    __break(1u);
    return result;
  }
  unint64_t v3 = a1 + 16 * a2;
  if (a3 + 16 * a2 > a1)
  {
    BOOL v4 = v3 >= a3;
    BOOL v5 = v3 == a3;
  }
  else
  {
    BOOL v4 = 0;
    BOOL v5 = 0;
  }
  if (!v5 && v4)
  {
    OUTLINED_FUNCTION_2_3();
    OUTLINED_FUNCTION_52();
    goto LABEL_11;
  }
  BOOL v6 = (void *)OUTLINED_FUNCTION_21_7();

  return memcpy(v6, v7, v8);
}

uint64_t sub_1C6506998(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_2_3();
    OUTLINED_FUNCTION_53();
LABEL_11:
    uint64_t result = OUTLINED_FUNCTION_16_1();
    __break(1u);
    return result;
  }
  OUTLINED_FUNCTION_7_10();
  if (!v5 & v4) {
    BOOL v6 = v3 > v2;
  }
  else {
    BOOL v6 = 0;
  }
  if (v6)
  {
    OUTLINED_FUNCTION_2_3();
    OUTLINED_FUNCTION_52();
    goto LABEL_11;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFB328);
  OUTLINED_FUNCTION_4_12();

  return swift_arrayInitWithCopy();
}

uint64_t sub_1C6506A48(uint64_t a1, uint64_t a2)
{
  return sub_1C6506A6C(a1, a2);
}

uint64_t sub_1C6506A54(uint64_t a1, uint64_t a2)
{
  return sub_1C6506A6C(a1, a2);
}

uint64_t sub_1C6506A60(uint64_t a1, uint64_t a2)
{
  return sub_1C6506A6C(a1, a2);
}

uint64_t sub_1C6506A6C(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_2_3();
    OUTLINED_FUNCTION_53();
LABEL_11:
    uint64_t result = OUTLINED_FUNCTION_16_1();
    __break(1u);
    return result;
  }
  OUTLINED_FUNCTION_14_6();
  if (!v6 & v5) {
    BOOL v7 = v4 > v2;
  }
  else {
    BOOL v7 = 0;
  }
  if (v7)
  {
    OUTLINED_FUNCTION_2_3();
    OUTLINED_FUNCTION_52();
    goto LABEL_11;
  }
  __swift_instantiateConcreteTypeFromMangledName(v3);
  OUTLINED_FUNCTION_4_12();

  return swift_arrayInitWithCopy();
}

uint64_t sub_1C6506B18()
{
  OUTLINED_FUNCTION_11_8();
  if (v3 < 0)
  {
    OUTLINED_FUNCTION_2_3();
    OUTLINED_FUNCTION_53();
LABEL_11:
    uint64_t result = OUTLINED_FUNCTION_16_1();
    __break(1u);
    return result;
  }
  if (v2 + (v1 << 6) > v0 && v0 + (v1 << 6) > v2)
  {
    OUTLINED_FUNCTION_2_3();
    OUTLINED_FUNCTION_52();
    goto LABEL_11;
  }

  return swift_arrayInitWithCopy();
}

uint64_t sub_1C6506BC4(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_2_3();
    OUTLINED_FUNCTION_53();
LABEL_11:
    uint64_t result = OUTLINED_FUNCTION_16_1();
    __break(1u);
    return result;
  }
  OUTLINED_FUNCTION_16_9();
  if (!v5 & v4) {
    BOOL v6 = v3 > v2;
  }
  else {
    BOOL v6 = 0;
  }
  if (v6)
  {
    OUTLINED_FUNCTION_2_3();
    OUTLINED_FUNCTION_52();
    goto LABEL_11;
  }
  type metadata accessor for Signal();
  OUTLINED_FUNCTION_4_12();

  return swift_arrayInitWithCopy();
}

uint64_t sub_1C6506C70(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_2_3();
    OUTLINED_FUNCTION_53();
LABEL_11:
    uint64_t result = OUTLINED_FUNCTION_16_1();
    __break(1u);
    return result;
  }
  OUTLINED_FUNCTION_14_6();
  if (!v5 & v4) {
    BOOL v6 = v3 > v2;
  }
  else {
    BOOL v6 = 0;
  }
  if (v6)
  {
    OUTLINED_FUNCTION_2_3();
    OUTLINED_FUNCTION_52();
    goto LABEL_11;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFB320);
  OUTLINED_FUNCTION_4_12();

  return swift_arrayInitWithCopy();
}

uint64_t sub_1C6506D20(void (*a1)(uint64_t *__return_ptr, uint64_t *), uint64_t a2, uint64_t a3)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFB900);
  uint64_t result = sub_1C6576E20();
  BOOL v6 = (void *)result;
  int64_t v7 = 0;
  uint64_t v26 = a3;
  uint64_t v10 = *(void *)(a3 + 64);
  uint64_t v9 = a3 + 64;
  uint64_t v8 = v10;
  uint64_t v11 = 1 << *(unsigned char *)(v9 - 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & v8;
  uint64_t v23 = v9;
  int64_t v24 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v14 = result + 64;
  if ((v12 & v8) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v15 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (unint64_t i = v15 | (v7 << 6); ; unint64_t i = __clz(__rbit64(v18)) + (v7 << 6))
  {
    uint64_t v20 = *(void *)(*(void *)(v26 + 48) + 8 * i);
    uint64_t v28 = *(void *)(*(void *)(v26 + 56) + 8 * i);
    swift_retain();
    swift_bridgeObjectRetain();
    a1(&v27, &v28);
    uint64_t result = swift_bridgeObjectRelease();
    if (v3)
    {
      swift_release();
      swift_release();
      return (uint64_t)v6;
    }
    *(void *)(v14 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    *(void *)(v6[6] + 8 * i) = v20;
    *(void *)(v6[7] + 8 * i) = v27;
    uint64_t v21 = v6[2];
    BOOL v17 = __OFADD__(v21, 1);
    uint64_t v22 = v21 + 1;
    if (v17)
    {
      __break(1u);
LABEL_27:
      __break(1u);
      goto LABEL_28;
    }
    _OWORD v6[2] = v22;
    if (v13) {
      goto LABEL_4;
    }
LABEL_5:
    BOOL v17 = __OFADD__(v7++, 1);
    if (v17) {
      goto LABEL_27;
    }
    if (v7 >= v24) {
      return (uint64_t)v6;
    }
    unint64_t v18 = *(void *)(v23 + 8 * v7);
    if (!v18) {
      break;
    }
LABEL_15:
    unint64_t v13 = (v18 - 1) & v18;
  }
  int64_t v19 = v7 + 1;
  if (v7 + 1 >= v24) {
    return (uint64_t)v6;
  }
  unint64_t v18 = *(void *)(v23 + 8 * v19);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v7 + 2;
  if (v7 + 2 >= v24) {
    return (uint64_t)v6;
  }
  unint64_t v18 = *(void *)(v23 + 8 * v19);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v7 + 3;
  if (v7 + 3 >= v24) {
    return (uint64_t)v6;
  }
  unint64_t v18 = *(void *)(v23 + 8 * v19);
  if (v18)
  {
LABEL_14:
    int64_t v7 = v19;
    goto LABEL_15;
  }
  while (1)
  {
    int64_t v7 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v7 >= v24) {
      return (uint64_t)v6;
    }
    unint64_t v18 = *(void *)(v23 + 8 * v7);
    ++v19;
    if (v18) {
      goto LABEL_15;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_1C6506F54@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1C6503484(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_1C6506F74(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1C6506FAC(uint64_t a1)
{
  return a1;
}

uint64_t sub_1C6506FDC(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C6507038(uint64_t a1)
{
  return a1;
}

uint64_t sub_1C6507068(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1C65070A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5 != -1) {
    return sub_1C64A21C4(a1, a2, a3, a4, a5);
  }
  return a1;
}

uint64_t sub_1C65070B4(uint64_t a1)
{
  return a1;
}

uint64_t initializeWithCopy for WrappedCandidateSuggestionConfiguratorFactory(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v3;
  (**(void (***)(void))(v3 - 8))();
  return a1;
}

uint64_t *assignWithCopy for WrappedCandidateSuggestionConfiguratorFactory(uint64_t *a1, uint64_t *a2)
{
  return a1;
}

uint64_t assignWithTake for WrappedCandidateSuggestionConfiguratorFactory(uint64_t a1, uint64_t a2)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for WrappedCandidateSuggestionConfiguratorFactory(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 40))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 24);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for WrappedCandidateSuggestionConfiguratorFactory(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WrappedCandidateSuggestionConfiguratorFactory()
{
  return &type metadata for WrappedCandidateSuggestionConfiguratorFactory;
}

uint64_t OUTLINED_FUNCTION_4_12()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_8_6()
{
  return *(void *)(v0 + 16);
}

uint64_t OUTLINED_FUNCTION_10_6()
{
  return sub_1C65070A0(v4, v3, v2, v1, v0);
}

uint64_t OUTLINED_FUNCTION_12_5(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, v1);
  return v2 + 16;
}

uint64_t OUTLINED_FUNCTION_13_7()
{
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_20_7()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_21_7()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_25_6@<X0>(uint64_t a1@<X8>)
{
  return a1;
}

uint64_t destroy for Continuer(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  if (*(void *)(a1 + 40))
  {
    return __swift_destroy_boxed_opaque_existential_1(a1 + 16);
  }
  return result;
}

uint64_t initializeWithCopy for Continuer(uint64_t a1, void *a2)
{
  uint64_t v4 = a2[1];
  *(void *)a1 = *a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = a2 + 2;
  uint64_t v6 = a2[5];
  swift_bridgeObjectRetain();
  if (v6)
  {
    uint64_t v7 = a2[6];
    *(void *)(a1 + 40) = v6;
    *(void *)(a1 + 48) = v7;
    (**(void (***)(uint64_t, void *, uint64_t))(v6 - 8))(a1 + 16, v5, v6);
  }
  else
  {
    long long v8 = *((_OWORD *)v5 + 1);
    *(_OWORD *)(a1 + 16) = *(_OWORD *)v5;
    *(_OWORD *)(a1 + 32) = v8;
    *(void *)(a1 + 48) = v5[4];
  }
  return a1;
}

uint64_t assignWithCopy for Continuer(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 40);
  if (!*(void *)(a1 + 40))
  {
    if (v4)
    {
      *(void *)(a1 + 40) = v4;
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1 + 16, a2 + 16);
      return a1;
    }
LABEL_7:
    long long v5 = *(_OWORD *)(a2 + 16);
    long long v6 = *(_OWORD *)(a2 + 32);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(_OWORD *)(a1 + 16) = v5;
    *(_OWORD *)(a1 + 32) = v6;
    return a1;
  }
  if (!v4)
  {
    __swift_destroy_boxed_opaque_existential_1(a1 + 16);
    goto LABEL_7;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 16), (uint64_t *)(a2 + 16));
  return a1;
}

uint64_t assignWithTake for Continuer(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 40)) {
    __swift_destroy_boxed_opaque_existential_1(a1 + 16);
  }
  long long v5 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v5;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  return a1;
}

ValueMetadata *type metadata accessor for Continuer()
{
  return &type metadata for Continuer;
}

uint64_t sub_1C6507638()
{
  v2[0] = 0;
  v2[1] = 0xE000000000000000;
  sub_1C6576C60();
  swift_bridgeObjectRelease();
  uint64_t v3 = 0x747365676775737BLL;
  unint64_t v4 = 0xEF203A64496E6F69;
  swift_bridgeObjectRetain();
  sub_1C6576620();
  swift_bridgeObjectRelease();
  sub_1C6576620();
  sub_1C64FE8F4(v0 + 16, (uint64_t)v2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF8EB8);
  sub_1C65765A0();
  sub_1C6576620();
  swift_bridgeObjectRelease();
  sub_1C6576620();
  return v3;
}

uint64_t sub_1C6507740@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F08B0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v5);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C64B08C4();
  sub_1C6577210();
  if (!v2)
  {
    sub_1C64A7DEC();
    uint64_t v7 = v6;
    uint64_t v9 = v8;
    sub_1C64B2CA4();
    uint64_t v10 = OUTLINED_FUNCTION_1_3();
    v11(v10);
    sub_1C65081B0((uint64_t)v13, (uint64_t)(a2 + 2));
    *a2 = v7;
    a2[1] = v9;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1C65078A8(void *a1, void *a2)
{
  sub_1C64FE8F4((uint64_t)(a1 + 2), (uint64_t)&v14);
  if (v15)
  {
    sub_1C64A5488(&v14, (uint64_t)v17);
  }
  else
  {
    if (qword_1EBBF81C0 != -1) {
      swift_once();
    }
    uint64_t v4 = qword_1EBBF81B8;
    uint64_t v18 = type metadata accessor for DefaultOwner();
    unint64_t v19 = sub_1C6502AB8();
    v17[0] = v4;
    swift_retain();
    sub_1C6506FDC((uint64_t)&v14, &qword_1EBBF8EB8);
  }
  uint64_t v5 = v18;
  uint64_t v6 = v19;
  __swift_project_boxed_opaque_existential_1(v17, v18);
  sub_1C64FE8F4((uint64_t)(a2 + 2), (uint64_t)&v12);
  if (v13)
  {
    sub_1C64A5488(&v12, (uint64_t)&v14);
  }
  else
  {
    if (qword_1EBBF81C0 != -1) {
      swift_once();
    }
    uint64_t v7 = qword_1EBBF81B8;
    uint64_t v15 = type metadata accessor for DefaultOwner();
    unint64_t v16 = sub_1C6502AB8();
    *(void *)&long long v14 = v7;
    swift_retain();
    sub_1C6506FDC((uint64_t)&v12, &qword_1EBBF8EB8);
  }
  BOOL v8 = Owner.equals(other:)(&v14, v5, v6);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v14);
  sub_1C6508218(a1, (uint64_t)&v14);
  sub_1C6508218(a2, (uint64_t)&v12);
  if (v8)
  {
    if ((void)v14 == (void)v12 && *((void *)&v14 + 1) == *((void *)&v12 + 1)) {
      char v10 = 1;
    }
    else {
      char v10 = sub_1C6577090();
    }
  }
  else
  {
    char v10 = 0;
  }
  sub_1C6508250((uint64_t)&v14);
  sub_1C6508250((uint64_t)&v12);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  return v10 & 1;
}

uint64_t sub_1C6507A98(uint64_t a1)
{
  sub_1C65765E0();
  sub_1C64FE8F4(v1 + 16, (uint64_t)v6);
  uint64_t v3 = v7;
  if (!v7) {
    return sub_1C6506FDC((uint64_t)v6, &qword_1EBBF8EB8);
  }
  uint64_t v4 = v8;
  __swift_project_boxed_opaque_existential_1(v6, v7);
  Owner.hash(into:)(a1, v3, v4);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
}

uint64_t sub_1C6507B28(void *a1)
{
  uint64_t v3 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F08C0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v5);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C64B08C4();
  sub_1C6577240();
  uint64_t v7 = *v3;
  uint64_t v6 = v3[1];
  *((void *)&v22 + 1) = MEMORY[0x1E4FBB1A0];
  uint64_t v23 = MEMORY[0x1E4FBB1A8];
  *(void *)&long long v21 = v7;
  *((void *)&v21 + 1) = v6;
  swift_bridgeObjectRetain();
  sub_1C64AAC5C();
  if (v2)
  {
    uint64_t v8 = OUTLINED_FUNCTION_1_5();
    v9(v8);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v21);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v21);
    sub_1C64FE8F4((uint64_t)(v3 + 2), (uint64_t)v18);
    uint64_t v11 = v19;
    if (v19)
    {
      uint64_t v12 = v20;
      uint64_t v13 = __swift_project_boxed_opaque_existential_1(v18, v19);
      uint64_t v14 = *(void *)(v12 + 32);
      *((void *)&v22 + 1) = v11;
      uint64_t v23 = v14;
      boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm((uint64_t *)&v21);
      (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(boxed_opaque_existential_1Tm, v13, v11);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
    }
    else
    {
      sub_1C6506FDC((uint64_t)v18, &qword_1EBBF8EB8);
      long long v21 = 0u;
      long long v22 = 0u;
      uint64_t v23 = 0;
    }
    sub_1C64B43D0();
    uint64_t v16 = OUTLINED_FUNCTION_1_5();
    v17(v16);
    return sub_1C6506FDC((uint64_t)&v21, &qword_1EBBFBE40);
  }
}

uint64_t sub_1C6507D18(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6974736567677573 && a2 == 0xEC00000064496E6FLL;
  if (v2 || (sub_1C6577090() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x774F656372756F73 && a2 == 0xEB0000000072656ELL)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_1C6577090();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1C6507E38(char a1)
{
  if (a1) {
    return 0x774F656372756F73;
  }
  else {
    return 0x6974736567677573;
  }
}

uint64_t sub_1C6507E80()
{
  sub_1C6577150();
  sub_1C6507A98((uint64_t)v1);
  return sub_1C6577190();
}

uint64_t sub_1C6507EC0()
{
  return sub_1C6507E38(*v0);
}

uint64_t sub_1C6507EC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C6507D18(a1, a2);
  *a3 = result;
  return result;
}

void sub_1C6507EF0(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_1C6507EFC(uint64_t a1)
{
  unint64_t v2 = sub_1C64B08C4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C6507F38(uint64_t a1)
{
  unint64_t v2 = sub_1C64B08C4();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C6507F7C()
{
  sub_1C6577150();
  sub_1C6507A98((uint64_t)v1);
  return sub_1C6577190();
}

uint64_t sub_1C6507FBC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_1C6507740(a1, a2);
}

uint64_t sub_1C6507FD4(void *a1)
{
  return sub_1C6507B28(a1);
}

unint64_t sub_1C6507FF4()
{
  unint64_t result = qword_1EA3F18B8;
  if (!qword_1EA3F18B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F18B8);
  }
  return result;
}

unint64_t sub_1C6508040(void *a1)
{
  a1[1] = sub_1C6508080();
  a1[2] = sub_1C65080CC();
  a1[3] = sub_1C6508118();
  unint64_t result = sub_1C6508164();
  a1[4] = result;
  return result;
}

unint64_t sub_1C6508080()
{
  unint64_t result = qword_1EA3F18C0;
  if (!qword_1EA3F18C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F18C0);
  }
  return result;
}

unint64_t sub_1C65080CC()
{
  unint64_t result = qword_1EA3F18C8;
  if (!qword_1EA3F18C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F18C8);
  }
  return result;
}

unint64_t sub_1C6508118()
{
  unint64_t result = qword_1EA3F18D0;
  if (!qword_1EA3F18D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F18D0);
  }
  return result;
}

unint64_t sub_1C6508164()
{
  unint64_t result = qword_1EA3F18D8;
  if (!qword_1EA3F18D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F18D8);
  }
  return result;
}

uint64_t sub_1C65081B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF8EB8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C6508218(void *a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1C6508250(uint64_t a1)
{
  return a1;
}

unsigned char *storeEnumTagSinglePayload for Continuer.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C650834CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Continuer.CodingKeys()
{
  return &type metadata for Continuer.CodingKeys;
}

unint64_t sub_1C6508388()
{
  unint64_t result = qword_1EA3F18E0;
  if (!qword_1EA3F18E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F18E0);
  }
  return result;
}

unint64_t sub_1C65083D8()
{
  unint64_t result = qword_1EA3F18E8;
  if (!qword_1EA3F18E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F18E8);
  }
  return result;
}

unint64_t sub_1C6508428()
{
  unint64_t result = qword_1EA3F18F0;
  if (!qword_1EA3F18F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F18F0);
  }
  return result;
}

uint64_t TargetOwnerDefinition.getSafeSuggestionsRepo()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  OUTLINED_FUNCTION_0_2();
  uint64_t v8 = v7;
  MEMORY[0x1F4188790](v9);
  OUTLINED_FUNCTION_15_0();
  uint64_t v12 = v11 - v10;
  uint64_t v13 = type metadata accessor for DelegateOwnedSuggestionsRepository();
  (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(a2 + 16))(v15, a1, a2);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v12, v3, a1);
  uint64_t result = sub_1C6508D2C(v12, v15, v13, a1, *(void *)(a2 + 8));
  a3[3] = v13;
  a3[4] = (uint64_t)&protocol witness table for DelegateOwnedSuggestionsRepository;
  *a3 = result;
  return result;
}

uint64_t type metadata accessor for DelegateOwnedSuggestionsRepository()
{
  return self;
}

uint64_t DelegateOwnedSuggestionsRepository.getPooledSuggestions()()
{
  uint64_t v1 = v0 + 7;
  uint64_t v2 = v0[10];
  uint64_t v3 = v0[11];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t))(*(void *)(v3 + 8) + 16))(v2);
}

uint64_t DelegateOwnedSuggestionsRepository.getOwner()()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v2);
}

uint64_t DelegateOwnedSuggestionsRepository.description.getter()
{
  sub_1C649FA30(v0 + 56, (uint64_t)v2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFB908);
  return sub_1C65765A0();
}

uint64_t DelegateOwnedSuggestionsRepository.deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  return v0;
}

uint64_t DelegateOwnedSuggestionsRepository.__deallocating_deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);

  return MEMORY[0x1F4186488](v0, 96, 7);
}

uint64_t sub_1C65086DC()
{
  return DelegateOwnedSuggestionsRepository.description.getter();
}

uint64_t sub_1C6508700()
{
  return DelegateOwnedSuggestionsRepository.getPooledSuggestions()();
}

uint64_t sub_1C6508724()
{
  return DelegateOwnedSuggestionsRepository.getOwner()();
}

uint64_t sub_1C6508748()
{
  type metadata accessor for NoOpTargetOwnerDefinition();
  swift_allocObject();
  uint64_t result = sub_1C65087E0();
  qword_1EA3F18F8 = result;
  return result;
}

uint64_t static NoOpTargetOwnerDefinition.Instance.getter()
{
  if (qword_1EA3F0088 != -1) {
    swift_once();
  }

  return swift_retain();
}

uint64_t sub_1C65087E0()
{
  type metadata accessor for NoOpSuggestionsRepository();
  *(void *)(v0 + 16) = swift_initStaticObject();
  type metadata accessor for NoOpSuggestionFilter();
  *(void *)(v0 + 24) = swift_initStaticObject();
  return v0;
}

uint64_t NoOpTargetOwnerDefinition.getSuggestionsRepo()@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 16);
  a1[3] = type metadata accessor for NoOpSuggestionsRepository();
  a1[4] = &protocol witness table for NoOpSuggestionsRepository;
  *a1 = v3;

  return swift_retain();
}

uint64_t NoOpTargetOwnerDefinition.getSuggestionsResolvers()()
{
  return MEMORY[0x1E4FBC860];
}

uint64_t NoOpTargetOwnerDefinition.getSuggestionsFilter()@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 24);
  a1[3] = type metadata accessor for NoOpSuggestionFilter();
  a1[4] = &protocol witness table for NoOpSuggestionFilter;
  *a1 = v3;

  return swift_retain();
}

uint64_t NoOpTargetOwnerDefinition.getOwner()@<X0>(uint64_t *a1@<X8>)
{
  if (qword_1EBBF81C0 != -1) {
    swift_once();
  }
  uint64_t v2 = qword_1EBBF81B8;
  a1[3] = type metadata accessor for DefaultOwner();
  a1[4] = sub_1C6502AB8();
  *a1 = v2;

  return swift_retain();
}

uint64_t NoOpTargetOwnerDefinition.deinit()
{
  swift_release();
  swift_release();
  return v0;
}

uint64_t NoOpTargetOwnerDefinition.__deallocating_deinit()
{
  NoOpTargetOwnerDefinition.deinit();

  return MEMORY[0x1F4186488](v0, 32, 7);
}

uint64_t sub_1C65089B4@<X0>(void *a1@<X8>)
{
  return NoOpTargetOwnerDefinition.getSuggestionsRepo()(a1);
}

uint64_t sub_1C65089D8@<X0>(void *a1@<X8>)
{
  return NoOpTargetOwnerDefinition.getSuggestionsFilter()(a1);
}

uint64_t sub_1C65089FC@<X0>(uint64_t *a1@<X8>)
{
  return NoOpTargetOwnerDefinition.getOwner()(a1);
}

void *DefaultTargetOwnerDefinition.__allocating_init(suggestions:resolvers:owner:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C649FA30(a3, (uint64_t)v10);
  type metadata accessor for NoOpSuggestionFilter();
  uint64_t inited = swift_initStaticObject();
  uint64_t v7 = (void *)swift_allocObject();
  uint64_t v8 = sub_1C6508ED4(a1, a2, v10, inited, v7);
  __swift_destroy_boxed_opaque_existential_1(a3);
  return v8;
}

uint64_t DefaultTargetOwnerDefinition.__allocating_init(suggestions:resolvers:owner:filter:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C6508AE0(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1C6508DD4);
}

uint64_t DefaultTargetOwnerDefinition.init(suggestions:resolvers:owner:filter:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C6508AE0(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1C6508F6C);
}

uint64_t sub_1C6508AE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  OUTLINED_FUNCTION_24_4();
  uint64_t v12 = *(void *)(v11 + 24);
  uint64_t v13 = *(void *)(v11 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v11, v12);
  OUTLINED_FUNCTION_0_2();
  MEMORY[0x1F4188790](v14);
  OUTLINED_FUNCTION_15_0();
  uint64_t v17 = v16 - v15;
  (*(void (**)(uint64_t))(v18 + 16))(v16 - v15);
  uint64_t v19 = a5(v9, v8, v7, v17, v5, v12, v13);
  __swift_destroy_boxed_opaque_existential_1(v6);
  return v19;
}

uint64_t DefaultTargetOwnerDefinition.getSuggestionsRepo()@<X0>(uint64_t a1@<X8>)
{
  return sub_1C649FA30(v1 + 16, a1);
}

uint64_t DefaultTargetOwnerDefinition.getSuggestionsResolvers()()
{
  return swift_bridgeObjectRetain();
}

uint64_t DefaultTargetOwnerDefinition.getSuggestionsFilter()@<X0>(uint64_t a1@<X8>)
{
  return sub_1C649FA30(v1 + 104, a1);
}

uint64_t DefaultTargetOwnerDefinition.getOwner()@<X0>(uint64_t a1@<X8>)
{
  return sub_1C649FA30(v1 + 64, a1);
}

uint64_t DefaultTargetOwnerDefinition.deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 64);
  __swift_destroy_boxed_opaque_existential_1(v0 + 104);
  return v0;
}

uint64_t DefaultTargetOwnerDefinition.__deallocating_deinit()
{
  DefaultTargetOwnerDefinition.deinit();

  return MEMORY[0x1F4186488](v0, 144, 7);
}

uint64_t sub_1C6508C9C@<X0>(uint64_t a1@<X8>)
{
  return DefaultTargetOwnerDefinition.getSuggestionsRepo()(a1);
}

uint64_t sub_1C6508CC0()
{
  return DefaultTargetOwnerDefinition.getSuggestionsResolvers()();
}

uint64_t sub_1C6508CE4@<X0>(uint64_t a1@<X8>)
{
  return DefaultTargetOwnerDefinition.getSuggestionsFilter()(a1);
}

uint64_t sub_1C6508D08@<X0>(uint64_t a1@<X8>)
{
  return DefaultTargetOwnerDefinition.getOwner()(a1);
}

uint64_t sub_1C6508D2C(uint64_t a1, long long *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v12 = a4;
  uint64_t v13 = a5;
  boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm((uint64_t *)&v11);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(boxed_opaque_existential_1Tm, a1, a4);
  uint64_t v9 = swift_allocObject();
  sub_1C64A5488(&v11, v9 + 16);
  sub_1C64A5488(a2, v9 + 56);
  return v9;
}

void *sub_1C6508DD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  OUTLINED_FUNCTION_24_4();
  OUTLINED_FUNCTION_0_2();
  uint64_t v14 = v13;
  MEMORY[0x1F4188790](v15);
  OUTLINED_FUNCTION_15_0();
  uint64_t v18 = v17 - v16;
  uint64_t v19 = (void *)swift_allocObject();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v18, v7, a6);
  uint64_t v20 = sub_1C6508F6C(v10, v9, v8, v18, v19, a6, a7);
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v7, a6);
  return v20;
}

void *sub_1C6508ED4(uint64_t a1, uint64_t a2, long long *a3, uint64_t a4, void *a5)
{
  a5[16] = type metadata accessor for NoOpSuggestionFilter();
  a5[17] = &protocol witness table for NoOpSuggestionFilter;
  a5[13] = a4;
  a5[7] = a2;
  uint64_t v10 = type metadata accessor for DefaultSuggestionsRepository();
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a1;
  a5[5] = v10;
  a5[6] = &protocol witness table for DefaultSuggestionsRepository;
  a5[2] = v11;
  sub_1C64A5488(a3, (uint64_t)(a5 + 8));
  return a5;
}

void *sub_1C6508F6C(uint64_t a1, uint64_t a2, long long *a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  a5[16] = a6;
  a5[17] = a7;
  boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm(a5 + 13);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a6 - 8) + 32))(boxed_opaque_existential_1Tm, a4, a6);
  a5[7] = a2;
  uint64_t v14 = type metadata accessor for DefaultSuggestionsRepository();
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a1;
  a5[5] = v14;
  a5[6] = &protocol witness table for DefaultSuggestionsRepository;
  a5[2] = v15;
  sub_1C64A5488(a3, (uint64_t)(a5 + 8));
  return a5;
}

uint64_t dispatch thunk of TargetOwnerDefinition.getSuggestionsRepo()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of TargetOwnerDefinition.getSuggestionsResolvers()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of TargetOwnerDefinition.getSuggestionsFilter()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t method lookup function for DelegateOwnedSuggestionsRepository(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for DelegateOwnedSuggestionsRepository);
}

uint64_t type metadata accessor for NoOpTargetOwnerDefinition()
{
  return self;
}

uint64_t method lookup function for NoOpTargetOwnerDefinition(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for NoOpTargetOwnerDefinition);
}

uint64_t type metadata accessor for DefaultTargetOwnerDefinition()
{
  return self;
}

uint64_t method lookup function for DefaultTargetOwnerDefinition(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for DefaultTargetOwnerDefinition);
}

uint64_t dispatch thunk of DefaultTargetOwnerDefinition.__allocating_init(suggestions:resolvers:owner:filter:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t Context.setIntentType(_:)()
{
  OUTLINED_FUNCTION_6_0();
  *(void *)(v1 + 144) = v2;
  *(void *)(v1 + 152) = v0;
  *(void *)(v1 + 136) = v3;
  long long v5 = *(_OWORD *)(v4 + 16);
  *(_OWORD *)(v1 + 160) = *(_OWORD *)v4;
  *(_OWORD *)(v1 + 176) = v5;
  *(void *)(v1 + 192) = *(void *)(v4 + 32);
  uint64_t v7 = OUTLINED_FUNCTION_35_7();
  *(void *)(v1 + 200) = v7;
  *(void *)(v1 + 208) = v6;
  return MEMORY[0x1F4188298](sub_1C6509194, v7, v6);
}

uint64_t sub_1C6509194()
{
  uint64_t v47 = v0;
  int v1 = *(unsigned __int8 *)(v0 + 57);
  if (v1 == 2)
  {
    uint64_t v15 = *(void *)(v0 + 168);
    if (v15)
    {
      uint64_t v16 = *(void *)(v0 + 160);
      char v45 = 3;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v12 = &v45;
      uint64_t v13 = v16;
      uint64_t v14 = v15;
      goto LABEL_11;
    }
LABEL_14:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    goto LABEL_15;
  }
  if (v1 != 3)
  {
    sub_1C64C2AB0(*(id *)(v0 + 160), *(id *)(v0 + 168), *(void *)(v0 + 176), *(void *)(v0 + 184), *(void *)(v0 + 192), v1);
    char v17 = *(unsigned char *)(v0 + 57);
    goto LABEL_16;
  }
  uint64_t v2 = *(void *)(v0 + 168);
  uint64_t v3 = qword_1EBBFC428;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v3 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_1C65763A0();
  __swift_project_value_buffer(v4, (uint64_t)qword_1EBBFC278);
  long long v5 = sub_1C6576380();
  os_log_type_t v6 = sub_1C6576A50();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (_WORD *)swift_slowAlloc();
    *uint64_t v7 = 0;
    OUTLINED_FUNCTION_29_3(&dword_1C6494000, v8, v9, "Mapping IntentType.appIntentV2 to IntentType.appIntent temporarily to avoid ABI breakages");
    MEMORY[0x1C87A0050](v7, -1, -1);
  }
  uint64_t v10 = *(void *)(v0 + 168);
  sub_1C64C28F8(*(void **)(v0 + 160), v10, *(void *)(v0 + 176), *(void *)(v0 + 184), *(void *)(v0 + 192), 3);

  if (!v10)
  {
    swift_bridgeObjectRetain();
    goto LABEL_14;
  }
  uint64_t v11 = *(void *)(v0 + 160);
  char v46 = 3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v12 = &v46;
  uint64_t v13 = v11;
  uint64_t v14 = v2;
LABEL_11:
  Context.setAppId(_:party:)(*(Swift::String *)&v13, (SiriSuggestionsKit::Party)v12);
LABEL_15:
  char v17 = 2;
LABEL_16:
  char v44 = v17;
  uint64_t v42 = *(void *)(v0 + 192);
  uint64_t v18 = *(void *)(v0 + 168);
  uint64_t v39 = *(void *)(v0 + 176);
  uint64_t v40 = *(void *)(v0 + 184);
  uint64_t v19 = *(void *)(v0 + 160);
  uint64_t v20 = *(void *)(v0 + 144);
  uint64_t v41 = *(void *)(v0 + 136);
  char v43 = *(unsigned char *)(v0 + 57);
  Context.getTargetOwner()((uint64_t *)(v0 + 16));
  uint64_t v21 = *(void *)(v0 + 40);
  uint64_t v22 = *(void *)(v0 + 48);
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 16), v21);
  *(void *)(v0 + 88) = v21;
  *(void *)(v0 + 96) = *(void *)(v22 + 8);
  __swift_allocate_boxed_opaque_existential_1Tm((uint64_t *)(v0 + 64));
  OUTLINED_FUNCTION_67();
  OUTLINED_FUNCTION_7_9();
  v23();
  *(void *)(v0 + 128) = &type metadata for IntentType;
  uint64_t v24 = swift_allocObject();
  *(void *)(v0 + 104) = v24;
  *(void *)(v24 + 16) = v19;
  *(void *)(v24 + 24) = v18;
  *(void *)(v24 + 32) = v39;
  *(void *)(v24 + 40) = v40;
  *(void *)(v24 + 48) = v42;
  *(unsigned char *)(v24 + 56) = v44;
  OUTLINED_FUNCTION_27_6(v24, v25, v26, v27, v42, v43);
  OUTLINED_FUNCTION_10_7();
  Context.setParam(for:key:value:)(v28, v29, v30, (void *)(v0 + 104), v41, v20);
  __swift_destroy_boxed_opaque_existential_1(v0 + 104);
  __swift_destroy_boxed_opaque_existential_1(v0 + 64);
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  *(void *)(v0 + 216) = (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 16))(v41, v20);
  *(void *)(v0 + 224) = v31;
  uint64_t ObjectType = swift_getObjectType();
  *(void *)(v0 + 232) = ObjectType;
  *(void *)(v0 + 16) = v19;
  *(void *)(v0 + 24) = v18;
  *(void *)(v0 + 32) = v39;
  *(void *)(v0 + 40) = v40;
  *(void *)(v0 + 48) = v42;
  *(unsigned char *)(v0 + 56) = v44;
  OUTLINED_FUNCTION_27_6(ObjectType, v33, v34, v35, v42, v43);
  uint64_t v37 = sub_1C65768C0();
  return MEMORY[0x1F4188298](sub_1C6509544, v37, v36);
}

uint64_t sub_1C6509544()
{
  OUTLINED_FUNCTION_6_0();
  GenerationContext.addIntentType(_:)(v0 + 16, *(void *)(v0 + 232), *(void *)(v0 + 224));
  swift_unknownObjectRelease();
  sub_1C64C28F8(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(unsigned char *)(v0 + 56));
  uint64_t v1 = *(void *)(v0 + 200);
  uint64_t v2 = *(void *)(v0 + 208);
  return MEMORY[0x1F4188298](sub_1C65095C8, v1, v2);
}

uint64_t sub_1C65095C8()
{
  OUTLINED_FUNCTION_6_0();
  sub_1C64C28F8(*(void **)(v0 + 160), *(void *)(v0 + 168), *(void *)(v0 + 176), *(void *)(v0 + 184), *(void *)(v0 + 192), *(unsigned char *)(v0 + 57));
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void Intent.getType()(uint64_t a1@<X8>)
{
  uint64_t v4 = *(void **)v1;
  uint64_t v3 = *(void *)(v1 + 8);
  uint64_t v5 = *(void *)(v1 + 16);
  if (*(unsigned char *)(v1 + 24))
  {
    id v6 = v4;
    sub_1C6509EBC(v6, v3, v5, v13);

    uint64_t v7 = v14;
    long long v8 = v13[1];
    *(_OWORD *)a1 = v13[0];
    *(_OWORD *)(a1 + 16) = v8;
    *(void *)(a1 + 32) = v7;
    *(unsigned char *)(a1 + 40) = 2;
  }
  else
  {
    id v9 = objc_msgSend(v4, sel_typeName);
    uint64_t v10 = sub_1C6576550();
    uint64_t v12 = v11;

    sub_1C64BA600(v4, v3, v5, 0);
    *(void *)a1 = v10;
    *(void *)(a1 + 8) = v12;
    *(void *)(a1 + 24) = 0;
    *(void *)(a1 + 32) = 0;
    *(void *)(a1 + 16) = 0;
    *(unsigned char *)(a1 + 40) = 0;
  }
}

Swift::Void __swiftcall Context.setSuggestionParameters(from:)(Swift::OpaquePointer from)
{
  uint64_t v3 = v2;
  uint64_t v4 = v1;
  Context.getTargetOwner()(v11);
  uint64_t v6 = v12;
  uint64_t v7 = v13;
  __swift_project_boxed_opaque_existential_1(v11, v12);
  v10[3] = v6;
  void v10[4] = *(void *)(v7 + 8);
  __swift_allocate_boxed_opaque_existential_1Tm(v10);
  OUTLINED_FUNCTION_67();
  OUTLINED_FUNCTION_7_9();
  v8();
  void v9[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF8EF8);
  v9[0] = from._rawValue;
  swift_bridgeObjectRetain();
  Context.setParam(for:key:value:)(v10, 0xD000000000000012, 0x80000001C6589250, v9, v4, v3);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
}

uint64_t Context.setIntent(_:)()
{
  OUTLINED_FUNCTION_6_0();
  *(void *)(v1 + 232) = v2;
  *(void *)(v1 + 240) = v0;
  *(void *)(v1 + 224) = v3;
  *(_OWORD *)(v1 + 248) = *(_OWORD *)v4;
  *(void *)(v1 + 264) = *(void *)(v4 + 16);
  uint64_t v6 = OUTLINED_FUNCTION_35_7();
  *(void *)(v1 + 272) = v6;
  *(void *)(v1 + 280) = v5;
  return MEMORY[0x1F4188298](sub_1C65098B4, v6, v5);
}

uint64_t sub_1C65098B4()
{
  uint64_t v46 = v0;
  if (*(unsigned char *)(v0 + 57))
  {
    if (*(unsigned char *)(v0 + 57) == 1)
    {
      id v1 = *(id *)(v0 + 248);
      swift_bridgeObjectRetain();
    }
    else
    {
      id v9 = *(void **)(v0 + 248);
      sub_1C64BA678(v9, *(void *)(v0 + 256), *(void *)(v0 + 264), 2);
      uint64_t v10 = qword_1EBBFC428;
      id v11 = v9;
      swift_bridgeObjectRetain();
      if (v10 != -1) {
        swift_once();
      }
      uint64_t v12 = sub_1C65763A0();
      __swift_project_value_buffer(v12, (uint64_t)qword_1EBBFC278);
      uint64_t v13 = sub_1C6576380();
      os_log_type_t v14 = sub_1C6576A50();
      BOOL v15 = os_log_type_enabled(v13, v14);
      uint64_t v17 = *(void *)(v0 + 256);
      uint64_t v16 = *(void *)(v0 + 264);
      uint64_t v18 = *(void **)(v0 + 248);
      if (v15)
      {
        uint64_t v19 = (_WORD *)swift_slowAlloc();
        *uint64_t v19 = 0;
        OUTLINED_FUNCTION_29_3(&dword_1C6494000, v20, v21, "Mapping Intent.appIntentV2 to Intent.appIntent temporarily to avoid ABI breakages");
        MEMORY[0x1C87A0050](v19, -1, -1);
      }
      sub_1C64BA600(v18, v17, v16, 2);
    }
    char v43 = 1;
  }
  else
  {
    uint64_t v2 = *(void **)(v0 + 248);
    sub_1C64BA678(v2, *(void *)(v0 + 256), *(void *)(v0 + 264), 0);
    id v3 = objc_msgSend(v2, sel_launchId);
    if (v3)
    {
      uint64_t v4 = v3;
      uint64_t v5 = sub_1C6576550();
      uint64_t v7 = v6;

      LOBYTE(v44[0]) = 3;
      v8._uint64_t countAndFlagsBits = v5;
      v8._object = v7;
      Context.setAppId(_:party:)(v8, (SiriSuggestionsKit::Party)v44);
      OUTLINED_FUNCTION_33_6();
      swift_bridgeObjectRelease();
    }
    else
    {
      OUTLINED_FUNCTION_33_6();
    }
    char v43 = 0;
  }
  uint64_t v23 = *(void *)(v0 + 256);
  uint64_t v22 = *(void *)(v0 + 264);
  uint64_t v24 = *(void **)(v0 + 248);
  uint64_t v42 = *(void *)(v0 + 232);
  uint64_t v41 = *(void *)(v0 + 224);
  char v40 = *(unsigned char *)(v0 + 57);
  Context.getTargetOwner()((uint64_t *)(v0 + 112));
  uint64_t v25 = *(void *)(v0 + 136);
  uint64_t v26 = *(void *)(v0 + 144);
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 112), v25);
  *(void *)(v0 + 176) = v25;
  *(void *)(v0 + 184) = *(void *)(v26 + 8);
  __swift_allocate_boxed_opaque_existential_1Tm((uint64_t *)(v0 + 152));
  OUTLINED_FUNCTION_67();
  OUTLINED_FUNCTION_7_9();
  v27();
  *(void *)(v0 + 216) = &type metadata for Intent;
  uint64_t v28 = swift_allocObject();
  *(void *)(v0 + 192) = v28;
  *(void *)(v28 + 16) = v24;
  *(void *)(v28 + 24) = v23;
  *(void *)(v28 + 32) = v22;
  *(unsigned char *)(v28 + 40) = v43;
  sub_1C64BA678(v24, v23, v22, v40);
  OUTLINED_FUNCTION_18_8();
  Context.setParam(for:key:value:)(v29, v30, v31, (void *)(v0 + 192), v41, v42);
  __swift_destroy_boxed_opaque_existential_1(v0 + 192);
  __swift_destroy_boxed_opaque_existential_1(v0 + 152);
  __swift_destroy_boxed_opaque_existential_1(v0 + 112);
  v44[0] = v24;
  v44[1] = v23;
  void v44[2] = v22;
  char v45 = v43;
  Intent.getType()(v0 + 16);
  uint64_t v32 = *(void *)(v0 + 16);
  uint64_t v33 = *(void *)(v0 + 24);
  *(void *)(v0 + 288) = v32;
  *(void *)(v0 + 296) = v33;
  uint64_t v34 = *(void *)(v0 + 32);
  uint64_t v35 = *(void *)(v0 + 40);
  *(void *)(v0 + 304) = v34;
  *(void *)(v0 + 312) = v35;
  uint64_t v36 = *(void *)(v0 + 48);
  *(void *)(v0 + 320) = v36;
  char v37 = *(unsigned char *)(v0 + 56);
  *(unsigned char *)(v0 + 58) = v37;
  *(void *)(v0 + 64) = v32;
  *(void *)(v0 + 72) = v33;
  *(void *)(v0 + 80) = v34;
  *(void *)(v0 + 88) = v35;
  *(void *)(v0 + 96) = v36;
  *(unsigned char *)(v0 + 104) = v37;
  uint64_t v38 = (void *)swift_task_alloc();
  *(void *)(v0 + 328) = v38;
  *uint64_t v38 = v0;
  v38[1] = sub_1C6509C54;
  return Context.setIntentType(_:)();
}

uint64_t sub_1C6509C54()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 320);
  uint64_t v3 = *(void *)(*v0 + 312);
  uint64_t v4 = *(void *)(*v0 + 304);
  uint64_t v5 = *(void *)(*v0 + 296);
  uint64_t v6 = *(void **)(*v0 + 288);
  char v7 = *(unsigned char *)(*v0 + 58);
  swift_task_dealloc();
  sub_1C64C28F8(v6, v5, v4, v3, v2, v7);
  uint64_t v8 = *(void *)(v1 + 280);
  uint64_t v9 = *(void *)(v1 + 272);
  return MEMORY[0x1F4188298](sub_1C6509E10, v9, v8);
}

uint64_t sub_1C6509E10()
{
  OUTLINED_FUNCTION_6_0();
  sub_1C64BA600(*(void **)(v0 + 248), *(void *)(v0 + 256), *(void *)(v0 + 264), *(unsigned char *)(v0 + 57));
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C6509E74()
{
  OUTLINED_FUNCTION_30_6();

  return MEMORY[0x1F4186498](v0, 57, 7);
}

uint64_t sub_1C6509EBC@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  type metadata accessor for AppIntentFilter.Builder();
  swift_initStackObject();
  uint64_t v7 = sub_1C6548060();
  id v8 = objc_msgSend(a1, sel_identifier);
  uint64_t v9 = sub_1C6576550();
  uint64_t v11 = v10;

  swift_bridgeObjectRetain();
  sub_1C6547A40(v9, v11);
  swift_retain();
  swift_bridgeObjectRelease();
  if (a3)
  {
    swift_bridgeObjectRetain();
    sub_1C6547A34(a2, a3);
  }
  swift_release();
  id v12 = objc_msgSend(a1, sel_parameters);
  sub_1C650D230(0, (unint64_t *)&qword_1EA3F1950);
  unint64_t isUniquelyReferenced_nonNull_native = sub_1C6576790();

  uint64_t v59 = v7;
  if (isUniquelyReferenced_nonNull_native >> 62)
  {
LABEL_39:
    swift_bridgeObjectRetain();
    uint64_t v14 = sub_1C6576E10();
    swift_bridgeObjectRelease();
    if (v14) {
      goto LABEL_5;
    }
LABEL_40:
    swift_bridgeObjectRelease();
    sub_1C6547C64(a4);
    return swift_release();
  }
  uint64_t v14 = *(void *)((isUniquelyReferenced_nonNull_native & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v14) {
    goto LABEL_40;
  }
LABEL_5:
  unint64_t v62 = isUniquelyReferenced_nonNull_native & 0xC000000000000001;
  BOOL v15 = (void *)(v59 + 48);
  uint64_t v16 = 4;
  unint64_t v60 = isUniquelyReferenced_nonNull_native;
  uint64_t v61 = v14;
  while (1)
  {
    if (v62) {
      id v17 = (id)MEMORY[0x1C879F380](v16 - 4, isUniquelyReferenced_nonNull_native);
    }
    else {
      id v17 = *(id *)(isUniquelyReferenced_nonNull_native + 8 * v16);
    }
    uint64_t v18 = v17;
    if (__OFADD__(v16 - 4, 1))
    {
      __break(1u);
LABEL_37:
      __break(1u);
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    id v19 = objc_msgSend(v17, sel_identifier);
    uint64_t v20 = sub_1C6576550();
    unint64_t v22 = v21;

    id v23 = objc_msgSend(v18, sel_value);
    if (!v23)
    {
      if (qword_1EBBFC428 != -1) {
        swift_once();
      }
      uint64_t v34 = sub_1C65763A0();
      __swift_project_value_buffer(v34, (uint64_t)qword_1EBBFC278);
      id v35 = v18;
      swift_bridgeObjectRetain();
      id v36 = v35;
      char v37 = sub_1C6576380();
      os_log_type_t v38 = sub_1C6576A50();
      if (os_log_type_enabled(v37, v38))
      {
        uint64_t v39 = swift_slowAlloc();
        uint64_t v40 = swift_slowAlloc();
        *(void *)&v65[0] = v40;
        *(_DWORD *)uint64_t v39 = 136315394;
        swift_bridgeObjectRetain();
        *(void *)(v39 + 4) = sub_1C64BCF18(v20, v22, (uint64_t *)v65);
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v39 + 12) = 2080;
        id v41 = objc_msgSend(v36, sel_value);
        if (v41)
        {
          uint64_t v42 = v41;
          id v43 = objc_msgSend(v41, sel_value);
          sub_1C6576BB0();
          swift_unknownObjectRelease();
          __swift_project_boxed_opaque_existential_1(&v68, ObjectType);
          uint64_t DynamicType = swift_getDynamicType();
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v68);
          uint64_t v67 = DynamicType;
          uint64_t v14 = v61;
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F1958);
          uint64_t v45 = sub_1C65765A0();
          unint64_t v47 = v46;
        }
        else
        {
          unint64_t v47 = 0xEE00232374655365;
          uint64_t v45 = 0x756C61566F4E2323;
        }
        uint64_t v56 = v16 - 3;
        *(void *)(v39 + 14) = sub_1C64BCF18(v45, v47, (uint64_t *)v65);

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1C6494000, v37, v38, "Excluding parameter %s in IntentType as it does not conform to DisplayRepresentable - type: %s", (uint8_t *)v39, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1C87A0050](v40, -1, -1);
        MEMORY[0x1C87A0050](v39, -1, -1);

        unint64_t isUniquelyReferenced_nonNull_native = v60;
        BOOL v15 = (void *)(v59 + 48);
      }
      else
      {

        swift_bridgeObjectRelease_n();
        BOOL v15 = (void *)(v59 + 48);
        uint64_t v56 = v16 - 3;
      }
      goto LABEL_34;
    }
    uint64_t v24 = v23;
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v70 = &protocol witness table for LNValue;
    *(void *)&long long v68 = v24;
    swift_beginAccess();
    if (ObjectType) {
      break;
    }
    id v48 = v24;
    swift_bridgeObjectRetain();
    sub_1C64BAE80((uint64_t)&v68, &qword_1EA3F1668);
    swift_bridgeObjectRetain();
    unint64_t v49 = sub_1C657476C(v20, v22);
    char v51 = v50;
    swift_bridgeObjectRelease();
    if (v51)
    {
      swift_isUniquelyReferenced_nonNull_native();
      uint64_t v64 = (void *)*v15;
      *BOOL v15 = 0x8000000000000000;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F1670);
      uint64_t v14 = v61;
      sub_1C6576D80();
      swift_bridgeObjectRelease();
      sub_1C64A5488((long long *)(v64[7] + 40 * v49), (uint64_t)v65);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFB8F8);
      sub_1C6576DA0();
      *BOOL v15 = v64;
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v66 = 0;
      memset(v65, 0, sizeof(v65));
    }
    uint64_t v56 = v16 - 3;
    swift_bridgeObjectRelease();
    sub_1C64BAE80((uint64_t)v65, &qword_1EA3F1668);
LABEL_31:
    swift_endAccess();
    swift_bridgeObjectRelease();

LABEL_34:
    ++v16;
    if (v56 == v14) {
      goto LABEL_40;
    }
  }
  sub_1C64A5488(&v68, (uint64_t)v65);
  id v25 = v24;
  swift_bridgeObjectRetain();
  unint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v26 = (void *)*v15;
  uint64_t v63 = (void *)*v15;
  *BOOL v15 = 0x8000000000000000;
  unint64_t v27 = sub_1C657476C(v20, v22);
  if (__OFADD__(v26[2], (v28 & 1) == 0)) {
    goto LABEL_37;
  }
  unint64_t v29 = v27;
  char v30 = v28;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F1670);
  unint64_t isUniquelyReferenced_nonNull_native = v60;
  uint64_t v14 = v61;
  if ((sub_1C6576D80() & 1) == 0)
  {
LABEL_16:
    if (v30)
    {
      uint64_t v33 = v63[7] + 40 * v29;
      __swift_destroy_boxed_opaque_existential_1(v33);
      sub_1C64A5488(v65, v33);
    }
    else
    {
      v63[(v29 >> 6) + 8] |= 1 << v29;
      int64_t v52 = (uint64_t *)(v63[6] + 16 * v29);
      *int64_t v52 = v20;
      v52[1] = v22;
      sub_1C64A5488(v65, v63[7] + 40 * v29);
      uint64_t v53 = v63[2];
      BOOL v54 = __OFADD__(v53, 1);
      uint64_t v55 = v53 + 1;
      if (v54) {
        goto LABEL_38;
      }
      v63[2] = v55;
      swift_bridgeObjectRetain();
    }
    BOOL v15 = (void *)(v59 + 48);
    *(void *)(v59 + 48) = v63;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v56 = v16 - 3;
    goto LABEL_31;
  }
  unint64_t v31 = sub_1C657476C(v20, v22);
  if ((v30 & 1) == (v32 & 1))
  {
    unint64_t v29 = v31;
    goto LABEL_16;
  }
  uint64_t result = sub_1C6577100();
  __break(1u);
  return result;
}

SiriSuggestionsKit::AppIdDetails_optional __swiftcall Intent.getAppIdDetails()()
{
  uint64_t v2 = v0;
  if (*(unsigned char *)(v1 + 24))
  {
    Intent.getType()((uint64_t)v25);
    uint64_t v3 = (void *)v25[0];
    uint64_t v4 = v25[1];
    uint64_t v5 = v25[2];
    uint64_t v6 = v25[3];
    uint64_t v7 = v25[4];
    char v8 = v26;
    IntentType.getAppIdDetails()();
    sub_1C64C28F8(v3, v4, v5, v6, v7, v8);
  }
  else
  {
    uint64_t v12 = sub_1C650C624(*(id *)v1);
    if (v13)
    {
      uint64_t v14 = v12;
      uint64_t v15 = v13;
      if (sub_1C65766A0()) {
        char v16 = 0;
      }
      else {
        char v16 = 2;
      }
      *(void *)uint64_t v2 = v14;
      *(void *)(v2 + 8) = v15;
      *(unsigned char *)(v2 + 16) = v16;
      id v17 = (void *)OUTLINED_FUNCTION_25_7();
      sub_1C64BA600(v17, v18, v19, v20);
    }
    else
    {
      unint64_t v21 = (void *)OUTLINED_FUNCTION_25_7();
      sub_1C64BA600(v21, v22, v23, v24);
      *(void *)uint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
      *(unsigned char *)(v2 + 16) = 0;
    }
  }
  result.value.appId._object = v10;
  result.value.appId._uint64_t countAndFlagsBits = v9;
  result.value.party = v11;
  return result;
}

void Intent.init(from:)()
{
  OUTLINED_FUNCTION_25();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF8F90);
  OUTLINED_FUNCTION_0();
  uint64_t v7 = v6;
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  sub_1C64B06D4();
  sub_1C6577210();
  if (!v0)
  {
    uint64_t v11 = sub_1C6576F40();
    if (*(void *)(v11 + 16))
    {
      int v12 = *(unsigned __int8 *)(v11 + 32);
      swift_bridgeObjectRelease();
      if (v12)
      {
        sub_1C64A88F0();
        v26[0] = v26[2];
        uint64_t v27 = v26[3];
        self;
        uint64_t v21 = swift_dynamicCastObjCClass();
        if (v21)
        {
          uint64_t v14 = v21;
          uint64_t v22 = *(void (**)(char *, uint64_t))(v7 + 8);
          swift_unknownObjectRetain();
          v22(v10, v5);
          swift_unknownObjectRelease();
          uint64_t v18 = v27;
          uint64_t v17 = v26[0];
          goto LABEL_12;
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_1C64A8578();
        self;
        uint64_t v13 = swift_dynamicCastObjCClass();
        if (v13)
        {
          uint64_t v14 = v13;
          uint64_t v15 = OUTLINED_FUNCTION_31_8();
          v16(v15);
          uint64_t v17 = 0;
          uint64_t v18 = 0;
LABEL_12:
          *(void *)uint64_t v4 = v14;
          *(void *)(v4 + 8) = v17;
          *(void *)(v4 + 16) = v18;
          *(unsigned char *)(v4 + 24) = v12;
          goto LABEL_9;
        }
      }
      swift_unknownObjectRelease();
      sub_1C6576CE0();
      swift_allocError();
      uint64_t v24 = v23;
      sub_1C6576E90();
      sub_1C6576CD0();
      OUTLINED_FUNCTION_67();
      (*(void (**)(uint64_t))(v25 + 104))(v24);
    }
    else
    {
      swift_bridgeObjectRelease();
      sub_1C650C688();
      swift_allocError();
    }
    swift_willThrow();
    uint64_t v19 = OUTLINED_FUNCTION_31_8();
    v20(v19);
  }
LABEL_9:
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v2);
  OUTLINED_FUNCTION_26();
}

void Intent.encode(to:)()
{
  OUTLINED_FUNCTION_25();
  uint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF8310);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v3);
  OUTLINED_FUNCTION_23();
  uint64_t v5 = *(void **)v0;
  uint64_t v4 = *(void *)(v0 + 8);
  uint64_t v6 = *(void *)(v0 + 16);
  int v7 = *(unsigned __int8 *)(v0 + 24);
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  sub_1C64B06D4();
  sub_1C6577240();
  if (v7)
  {
    uint64_t v15 = (ValueMetadata *)&unk_1F215D208;
    v14[0] = v5;
    v14[1] = v4;
    unint64_t v16 = sub_1C650C6D4();
    _OWORD v14[2] = v6;
    id v8 = v5;
    swift_bridgeObjectRetain();
    sub_1C64AAC9C();
    uint64_t v9 = OUTLINED_FUNCTION_12_6();
    v10(v9);
  }
  else
  {
    uint64_t v15 = &type metadata for NSCodingAdaptor;
    unint64_t v16 = sub_1C650C720();
    v14[0] = v5;
    id v11 = v5;
    sub_1C64AAC9C();
    uint64_t v12 = OUTLINED_FUNCTION_12_6();
    v13(v12);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
  OUTLINED_FUNCTION_26();
}

uint64_t sub_1C650ABD4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746E65746E69 && a2 == 0xE600000000000000;
  if (v2 || (sub_1C6577090() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6449707061 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_1C6577090();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1C650ACB4(char a1)
{
  if (a1) {
    return 0x6449707061;
  }
  else {
    return 0x746E65746E69;
  }
}

void sub_1C650ACE4()
{
  OUTLINED_FUNCTION_25();
  uint64_t v3 = v2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F1930);
  OUTLINED_FUNCTION_0();
  uint64_t v6 = v5;
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_23();
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  sub_1C650D198();
  sub_1C6577240();
  sub_1C650C720();
  sub_1C6577010();
  if (!v0) {
    sub_1C6576FD0();
  }
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v1, v4);
  OUTLINED_FUNCTION_26();
}

void sub_1C650AE20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  OUTLINED_FUNCTION_25();
  uint64_t v12 = v11;
  uint64_t v14 = v13;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F1940);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v15);
  __swift_project_boxed_opaque_existential_1(v12, v12[3]);
  sub_1C650D198();
  sub_1C6577210();
  if (v10)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  }
  else
  {
    sub_1C650D1E4();
    sub_1C6576F30();
    swift_unknownObjectRetain();
    uint64_t v16 = sub_1C6576EF0();
    uint64_t v18 = v17;
    uint64_t v19 = OUTLINED_FUNCTION_37_3();
    v20(v19);
    *uint64_t v14 = a10;
    v14[1] = v16;
    _OWORD v14[2] = v18;
    swift_bridgeObjectRetain();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
  }
  OUTLINED_FUNCTION_26();
}

uint64_t sub_1C650AFDC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746E65746E496E69 && a2 == 0xE800000000000000;
  if (v2 || (OUTLINED_FUNCTION_70() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x6E65746E49707061 && a2 == 0xE900000000000074;
    if (v6 || (OUTLINED_FUNCTION_23_5(), (OUTLINED_FUNCTION_70() & 1) != 0))
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x6E65746E49707061 && a2 == 0xEB00000000325674)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      OUTLINED_FUNCTION_23_5();
      char v8 = OUTLINED_FUNCTION_70();
      swift_bridgeObjectRelease();
      if (v8) {
        return 2;
      }
      else {
        return 3;
      }
    }
  }
}

uint64_t sub_1C650B10C(char a1)
{
  if (a1) {
    return 0x6E65746E49707061;
  }
  else {
    return 0x746E65746E496E69;
  }
}

uint64_t sub_1C650B170()
{
  return sub_1C650ACB4(*v0);
}

uint64_t sub_1C650B178@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C650ABD4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C650B1A0(uint64_t a1)
{
  unint64_t v2 = sub_1C650D198();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C650B1DC(uint64_t a1)
{
  unint64_t v2 = sub_1C650D198();

  return MEMORY[0x1F41862B0](a1, v2);
}

void sub_1C650B218(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1C650AE20(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

void sub_1C650B230()
{
}

uint64_t sub_1C650B248()
{
  return sub_1C650B10C(*v0);
}

uint64_t sub_1C650B250@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C650AFDC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C650B278(uint64_t a1)
{
  unint64_t v2 = sub_1C64B06D4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C650B2B4(uint64_t a1)
{
  unint64_t v2 = sub_1C64B06D4();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t static Intent.IntentDecodingErrors.== infix(_:_:)()
{
  return 1;
}

uint64_t Intent.IntentDecodingErrors.hash(into:)()
{
  return sub_1C6577160();
}

uint64_t Intent.IntentDecodingErrors.hashValue.getter()
{
  return sub_1C6577190();
}

uint64_t sub_1C650B364()
{
  return Intent.IntentDecodingErrors.hashValue.getter();
}

uint64_t sub_1C650B37C()
{
  return Intent.IntentDecodingErrors.hash(into:)();
}

uint64_t Intent.description.getter()
{
  uint64_t v1 = *(void **)v0;
  if (*(unsigned char *)(v0 + 24))
  {
    uint64_t v14 = 0;
    id v2 = v1;
    sub_1C6576C60();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_3_13();
    id v12 = objc_msgSend(v2, sel_identifier);
    sub_1C6576550();

    sub_1C6576620();
    swift_bridgeObjectRelease();
    sub_1C6576620();
    sub_1C6576620();
  }
  else
  {
    uint64_t v14 = 0x6E65746E496E692ELL;
    uint64_t v3 = (void *)OUTLINED_FUNCTION_24_6();
    sub_1C64BA678(v3, v4, v5, v6);
    id v7 = objc_msgSend(v1, sel_typeName);
    sub_1C6576550();

    sub_1C6576620();
    swift_bridgeObjectRelease();
    char v8 = (void *)OUTLINED_FUNCTION_24_6();
    sub_1C64BA600(v8, v9, v10, v11);
  }
  return v14;
}

uint64_t static Intent.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a1;
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 16);
  int v5 = *(unsigned __int8 *)(a1 + 24);
  char v6 = *(void **)a2;
  uint64_t v7 = *(void *)(a2 + 8);
  uint64_t v8 = *(void *)(a2 + 16);
  int v9 = *(unsigned __int8 *)(a2 + 24);
  if (!*(unsigned char *)(a1 + 24))
  {
    if (!*(unsigned char *)(a2 + 24))
    {
      sub_1C650D230(0, (unint64_t *)&qword_1EBBF8F50);
      uint64_t v23 = (void *)OUTLINED_FUNCTION_7_11();
      sub_1C64BA678(v23, v24, v25, 0);
      sub_1C64BA678(v3, v2, v4, 0);
      sub_1C6576AB0();
      char v26 = (void *)OUTLINED_FUNCTION_4_13();
      sub_1C64BA600(v26, v27, v28, 0);
      uint64_t v19 = v6;
      uint64_t v20 = v7;
      uint64_t v21 = v8;
      char v22 = 0;
      goto LABEL_19;
    }
    goto LABEL_20;
  }
  if (v5 != 1)
  {
    if (v9 == 2)
    {
      sub_1C650D230(0, (unint64_t *)&qword_1EBBF8F50);
      unint64_t v29 = (void *)OUTLINED_FUNCTION_7_11();
      sub_1C64BA678(v29, v30, v31, 2);
      sub_1C64BA678(v3, v2, v4, 2);
      id v32 = v3;
      id v33 = v6;
      LOBYTE(v5) = sub_1C6576AB0();

      if (v5)
      {
        if (v2 != v7 || v4 != v8)
        {
          OUTLINED_FUNCTION_14_7();
          id v35 = (void *)OUTLINED_FUNCTION_4_13();
          sub_1C64BA600(v35, v36, v37, 2);
          uint64_t v19 = (void *)OUTLINED_FUNCTION_8_7();
          goto LABEL_19;
        }
        OUTLINED_FUNCTION_5_10(v3);
        OUTLINED_FUNCTION_5_10(v6);
        return 1;
      }
      OUTLINED_FUNCTION_5_10(v3);
      char v51 = (void *)OUTLINED_FUNCTION_8_7();
LABEL_21:
      sub_1C64BA600(v51, v52, v53, v54);
      return 0;
    }
LABEL_20:
    uint64_t v39 = (void *)OUTLINED_FUNCTION_32_7();
    sub_1C64BA678(v39, v40, v41, v42);
    id v43 = (void *)OUTLINED_FUNCTION_28_4();
    sub_1C64BA678(v43, v44, v45, v46);
    unint64_t v47 = (void *)OUTLINED_FUNCTION_28_4();
    sub_1C64BA600(v47, v48, v49, v50);
    char v51 = (void *)OUTLINED_FUNCTION_32_7();
    goto LABEL_21;
  }
  if (v9 != 1) {
    goto LABEL_20;
  }
  sub_1C650D230(0, (unint64_t *)&qword_1EBBF8F50);
  uint64_t v10 = (void *)OUTLINED_FUNCTION_7_11();
  sub_1C64BA678(v10, v11, v12, 1);
  sub_1C64BA678(v3, v2, v4, 1);
  id v13 = v3;
  id v14 = v6;
  LOBYTE(v5) = sub_1C6576AB0();

  if ((v5 & 1) == 0)
  {
    OUTLINED_FUNCTION_6_7(v3);
    char v51 = (void *)OUTLINED_FUNCTION_9_7();
    goto LABEL_21;
  }
  if (v2 != v7 || v4 != v8)
  {
    OUTLINED_FUNCTION_14_7();
    uint64_t v16 = (void *)OUTLINED_FUNCTION_4_13();
    sub_1C64BA600(v16, v17, v18, 1);
    uint64_t v19 = (void *)OUTLINED_FUNCTION_9_7();
LABEL_19:
    sub_1C64BA600(v19, v20, v21, v22);
    return v5 & 1;
  }
  uint64_t v55 = 1;
  OUTLINED_FUNCTION_6_7(v3);
  OUTLINED_FUNCTION_6_7(v6);
  return v55;
}

void sub_1C650B7A0()
{
}

void sub_1C650B7B8()
{
}

uint64_t Context.getIntent()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  OUTLINED_FUNCTION_34_5(a1, a2, a3, a4, a5);
  uint64_t v8 = __swift_project_boxed_opaque_existential_1(v21, v21[3]);
  OUTLINED_FUNCTION_21_8((uint64_t)v8, v9, v10, v11, v12, v13, v14, v15, v20[0], v20[1], v20[2], v20[3], v20[4]);
  OUTLINED_FUNCTION_67();
  OUTLINED_FUNCTION_7_9();
  v16();
  OUTLINED_FUNCTION_18_8();
  Context.getParam(for:key:)(v17, v7, v6, v18);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
  if (!v23)
  {
    uint64_t result = sub_1C64BAE80((uint64_t)v22, &qword_1EBBFBE60);
    goto LABEL_5;
  }
  uint64_t result = OUTLINED_FUNCTION_26_9();
  if ((result & 1) == 0)
  {
LABEL_5:
    *(void *)uint64_t v5 = 0;
    *(void *)(v5 + 8) = 0;
    *(void *)(v5 + 16) = 0;
    *(unsigned char *)(v5 + 24) = -1;
  }
  return result;
}

uint64_t Context.getIntentParameter(name:)@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, _OWORD *a3@<X8>)
{
  Context.getTargetOwner()(v11);
  uint64_t v6 = v12;
  uint64_t v7 = v13;
  __swift_project_boxed_opaque_existential_1(v11, v12);
  v10[3] = v6;
  void v10[4] = *(void *)(v7 + 8);
  __swift_allocate_boxed_opaque_existential_1Tm(v10);
  OUTLINED_FUNCTION_67();
  OUTLINED_FUNCTION_7_9();
  v8();
  sub_1C650B9D4();
  Context.getParam(for:key:)(v10, a1, a2, a3);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
}

unint64_t sub_1C650B9D4()
{
  return 0xD000000000000012;
}

double Context.getIntentType()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  OUTLINED_FUNCTION_34_5(a1, a2, a3, a4, a5);
  uint64_t v8 = __swift_project_boxed_opaque_existential_1(v21, v21[3]);
  OUTLINED_FUNCTION_21_8((uint64_t)v8, v9, v10, v11, v12, v13, v14, v15, v20[0], v20[1], v20[2], v20[3], v20[4]);
  OUTLINED_FUNCTION_67();
  OUTLINED_FUNCTION_7_9();
  v16();
  OUTLINED_FUNCTION_10_7();
  Context.getParam(for:key:)(v17, v7, v6, v18);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
  if (!v23)
  {
    sub_1C64BAE80((uint64_t)v22, &qword_1EBBFBE60);
    goto LABEL_5;
  }
  if ((OUTLINED_FUNCTION_26_9() & 1) == 0)
  {
LABEL_5:
    *(void *)(v5 + 32) = 0;
    double result = 0.0;
    *(_OWORD *)uint64_t v5 = 0u;
    *(_OWORD *)(v5 + 16) = 0u;
    *(unsigned char *)(v5 + 40) = -1;
  }
  return result;
}

Swift::OpaquePointer_optional __swiftcall Context.getSuggestionParameters()()
{
  uint64_t v2 = v1;
  uint64_t v3 = v0;
  Context.getTargetOwner()(v10);
  uint64_t v4 = v11;
  uint64_t v5 = v12;
  __swift_project_boxed_opaque_existential_1(v10, v11);
  void v9[3] = v4;
  void v9[4] = *(void *)(v5 + 8);
  __swift_allocate_boxed_opaque_existential_1Tm(v9);
  OUTLINED_FUNCTION_67();
  OUTLINED_FUNCTION_7_9();
  v6();
  Context.getParam(for:key:)(v9, v3, v2, &v13);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
  if (v14)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBF8EF8);
    if (swift_dynamicCast()) {
      uint64_t v8 = (void *)v10[0];
    }
    else {
      uint64_t v8 = 0;
    }
  }
  else
  {
    sub_1C64BAE80((uint64_t)&v13, &qword_1EBBFBE60);
    uint64_t v8 = 0;
  }
  result.value._rawValue = v8;
  result.is_nil = v7;
  return result;
}

uint64_t Context.setIntentParam(name:value:)(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  Context.getTargetOwner()(v19);
  uint64_t v8 = v20;
  uint64_t v9 = v21;
  __swift_project_boxed_opaque_existential_1(v19, v20);
  void v18[3] = v8;
  v18[4] = *(void *)(v9 + 8);
  __swift_allocate_boxed_opaque_existential_1Tm(v18);
  OUTLINED_FUNCTION_67();
  OUTLINED_FUNCTION_7_9();
  v10();
  unint64_t v11 = sub_1C650B9D4();
  uint64_t v13 = v12;
  uint64_t v14 = a3[3];
  __swift_project_boxed_opaque_existential_1(a3, v14);
  void v17[3] = v14;
  __swift_allocate_boxed_opaque_existential_1Tm(v17);
  OUTLINED_FUNCTION_67();
  OUTLINED_FUNCTION_7_9();
  v15();
  Context.setParam(for:key:value:)(v18, v11, v13, v17, a4, a5);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
}

uint64_t GenerationContext.addIntentType(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *(void **)a1;
  uint64_t v4 = *(void **)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v6 = *(void *)(a1 + 24);
  uint64_t v7 = *(void *)(a1 + 32);
  char v8 = *(unsigned char *)(a1 + 40);
  uint64_t v9 = GenerationContext.getIntentTypes()(a2, a3);
  sub_1C64C2AB0(v3, v4, v5, v6, v7, v8);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_1C64ADF30();
    uint64_t v9 = v14;
  }
  unint64_t v10 = *(void *)(v9 + 16);
  if (v10 >= *(void *)(v9 + 24) >> 1)
  {
    sub_1C64ADF30();
    uint64_t v9 = v15;
  }
  *(void *)(v9 + 16) = v10 + 1;
  uint64_t v11 = v9 + 48 * v10;
  *(void *)(v11 + 32) = v3;
  *(void *)(v11 + 40) = v4;
  *(void *)(v11 + 48) = v5;
  *(void *)(v11 + 56) = v6;
  *(void *)(v11 + 64) = v7;
  *(unsigned char *)(v11 + 72) = v8;
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFB7F8);
  uint64_t v19 = v9;
  uint64_t v12 = (uint64_t (*)(unsigned char *, void))(*(uint64_t (**)(unsigned char *, uint64_t))(*(void *)(a3 + 8) + 32))(v18, a2);
  sub_1C64FB930();
  return v12(v18, 0);
}

uint64_t GenerationContext.getIntentTypes()(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = (*(uint64_t (**)(void))(*(void *)(a2 + 8) + 16))();
  sub_1C64EBFB8(0xD000000000000019, 0x80000001C6589270, v2, &v5);
  swift_bridgeObjectRelease();
  if (v6)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFB7F8);
    if (swift_dynamicCast()) {
      return v4;
    }
  }
  else
  {
    sub_1C64BAE80((uint64_t)&v5, &qword_1EBBFBE60);
  }
  return MEMORY[0x1E4FBC860];
}

id SuggestionsIntent.intentName.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void **)(v1 + 16);
  uint64_t v3 = *(void **)(v1 + 24);
  uint64_t v4 = *(void *)(v1 + 32);
  uint64_t v5 = *(void *)(v1 + 40);
  uint64_t v6 = *(void *)(v1 + 48);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  char v7 = *(unsigned char *)(v1 + 56);
  *(unsigned char *)(a1 + 40) = v7;
  return sub_1C64C2AB0(v2, v3, v4, v5, v6, v7);
}

uint64_t SuggestionsIntent.verb.getter()
{
  uint64_t v1 = *(void *)(v0 + 64);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SuggestionsIntent.intentProps.getter()
{
  return swift_bridgeObjectRetain();
}

__n128 SuggestionsIntent.__allocating_init(intentName:)(long long *a1)
{
  __n128 v6 = (__n128)a1[1];
  long long v7 = *a1;
  uint64_t v1 = *((void *)a1 + 4);
  char v2 = *((unsigned char *)a1 + 40);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFBE10);
  uint64_t v3 = sub_1C6576460();
  uint64_t v4 = OUTLINED_FUNCTION_16_10();
  *(void *)(v4 + 64) = 0;
  *(void *)(v4 + 72) = 0;
  __n128 result = v6;
  *(_OWORD *)(v4 + 16) = v7;
  *(__n128 *)(v4 + 32) = v6;
  *(void *)(v4 + 48) = v1;
  *(unsigned char *)(v4 + 56) = v2;
  *(void *)(v4 + 80) = v3;
  return result;
}

uint64_t SuggestionsIntent.__allocating_init(intentName:verb:intentProps:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = OUTLINED_FUNCTION_16_10();
  SuggestionsIntent.init(intentName:verb:intentProps:)(a1, a2, a3, a4);
  return v8;
}

uint64_t SuggestionsIntent.init(intentName:verb:intentProps:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = *(void *)(a1 + 32);
  char v6 = *(unsigned char *)(a1 + 40);
  *(void *)(v4 + 64) = a2;
  *(void *)(v4 + 72) = a3;
  long long v7 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v4 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v4 + 32) = v7;
  *(void *)(v4 + 48) = v5;
  *(unsigned char *)(v4 + 56) = v6;
  *(void *)(v4 + 80) = a4;
  return v4;
}

double sub_1C650C140@<D0>(uint64_t a1@<X8>)
{
  sub_1C650C1E8((uint64_t)v6);
  uint64_t v2 = v7;
  char v3 = v8;
  double result = *(double *)v6;
  long long v5 = v6[1];
  *(_OWORD *)a1 = v6[0];
  *(_OWORD *)(a1 + 16) = v5;
  *(void *)(a1 + 32) = v2;
  *(unsigned char *)(a1 + 40) = v3;
  return result;
}

double sub_1C650C18C(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 8);
  uint64_t v2 = *(void **)(a1 + 16);
  char v3 = *(void **)(a1 + 24);
  uint64_t v4 = *(void **)(a1 + 32);
  char v5 = *(unsigned char *)(a1 + 40);
  v7[0] = *(id *)a1;
  v7[1] = v1;
  _OWORD v7[2] = v2;
  v7[3] = v3;
  v7[4] = v4;
  char v8 = v5;
  sub_1C64C2AB0(v7[0], v1, (uint64_t)v2, (uint64_t)v3, (uint64_t)v4, v5);
  *(void *)&double result = sub_1C650C248((uint64_t *)v7).n128_u64[0];
  return result;
}

id sub_1C650C1E8@<X0>(uint64_t a1@<X8>)
{
  swift_beginAccess();
  char v3 = *(void **)(v1 + 16);
  uint64_t v4 = *(void **)(v1 + 24);
  uint64_t v5 = *(void *)(v1 + 32);
  uint64_t v6 = *(void *)(v1 + 40);
  uint64_t v7 = *(void *)(v1 + 48);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  char v8 = *(unsigned char *)(v1 + 56);
  *(unsigned char *)(a1 + 40) = v8;
  return sub_1C64C2AB0(v3, v4, v5, v6, v7, v8);
}

__n128 sub_1C650C248(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  long long v13 = *((_OWORD *)a1 + 1);
  uint64_t v4 = a1[4];
  char v5 = *((unsigned char *)a1 + 40);
  swift_beginAccess();
  uint64_t v6 = *(void **)(v1 + 16);
  uint64_t v7 = *(void *)(v1 + 24);
  uint64_t v8 = *(void *)(v1 + 32);
  uint64_t v9 = *(void *)(v1 + 40);
  uint64_t v10 = *(void *)(v1 + 48);
  *(void *)(v1 + 16) = v2;
  *(void *)(v1 + 24) = v3;
  *(_OWORD *)(v1 + 32) = v13;
  *(void *)(v1 + 48) = v4;
  char v11 = *(unsigned char *)(v1 + 56);
  *(unsigned char *)(v1 + 56) = v5;
  sub_1C64C28F8(v6, v7, v8, v9, v10, v11);
  return result;
}

uint64_t (*sub_1C650C2D0())()
{
  return j__swift_endAccess;
}

uint64_t sub_1C650C324(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 64) = a1;
  *(void *)(v2 + 72) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t SuggestionsIntentBuilder.__allocating_init(intentName:)(long long *a1)
{
  uint64_t v2 = OUTLINED_FUNCTION_16_10();
  SuggestionsIntentBuilder.init(intentName:)(a1);
  return v2;
}

uint64_t SuggestionsIntentBuilder.init(intentName:)(long long *a1)
{
  long long v5 = a1[1];
  long long v6 = *a1;
  uint64_t v2 = *((void *)a1 + 4);
  char v3 = *((unsigned char *)a1 + 40);
  *(void *)(v1 + 64) = 0;
  *(void *)(v1 + 72) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFBE10);
  *(void *)(v1 + 80) = sub_1C6576460();
  *(_OWORD *)(v1 + 16) = v6;
  *(_OWORD *)(v1 + 32) = v5;
  *(void *)(v1 + 48) = v2;
  *(unsigned char *)(v1 + 56) = v3;
  return v1;
}

uint64_t sub_1C650C3F4(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRetain();
  sub_1C650C324(a1, a2);

  return swift_retain();
}

uint64_t sub_1C650C448(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C64A7B04(a3, (uint64_t)v4);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_1C64FBA38();
  swift_endAccess();
  return swift_retain();
}

uint64_t sub_1C650C4D0()
{
  sub_1C650C1E8((uint64_t)v10);
  long long v8 = v10[1];
  long long v9 = v10[0];
  uint64_t v1 = v11;
  char v2 = v12;
  uint64_t v4 = v0[8];
  uint64_t v3 = v0[9];
  swift_beginAccess();
  uint64_t v5 = v0[10];
  type metadata accessor for SuggestionsIntent();
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 64) = v4;
  *(void *)(v6 + 72) = v3;
  *(_OWORD *)(v6 + 16) = v9;
  *(_OWORD *)(v6 + 32) = v8;
  *(void *)(v6 + 48) = v1;
  *(unsigned char *)(v6 + 56) = v2;
  *(void *)(v6 + 80) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v6;
}

uint64_t _s18SiriSuggestionsKit0B6IntentCfd_0()
{
  OUTLINED_FUNCTION_30_6();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t SuggestionsIntentBuilder.__deallocating_deinit()
{
  SuggestionsIntentBuilder.deinit();

  return MEMORY[0x1F4186488](v0, 88, 7);
}

uint64_t sub_1C650C5E4()
{
  sub_1C64BA600(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(unsigned char *)(v0 + 40));

  return MEMORY[0x1F4186498](v0, 41, 7);
}

uint64_t sub_1C650C624(void *a1)
{
  id v1 = objc_msgSend(a1, sel_launchId);
  if (!v1) {
    return 0;
  }
  char v2 = v1;
  uint64_t v3 = sub_1C6576550();

  return v3;
}

unint64_t sub_1C650C688()
{
  unint64_t result = qword_1EA3F1910;
  if (!qword_1EA3F1910)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F1910);
  }
  return result;
}

unint64_t sub_1C650C6D4()
{
  unint64_t result = qword_1EA3F1918;
  if (!qword_1EA3F1918)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F1918);
  }
  return result;
}

unint64_t sub_1C650C720()
{
  unint64_t result = qword_1EBBF82D8;
  if (!qword_1EBBF82D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBBF82D8);
  }
  return result;
}

uint64_t type metadata accessor for SuggestionsIntent()
{
  return self;
}

unint64_t sub_1C650C794()
{
  unint64_t result = qword_1EA3F1920;
  if (!qword_1EA3F1920)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F1920);
  }
  return result;
}

void destroy for Intent(uint64_t a1)
{
}

uint64_t initializeWithCopy for Intent(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  char v6 = *(unsigned char *)(a2 + 24);
  sub_1C64BA678(*(id *)a2, v4, v5, v6);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = v6;
  return a1;
}

uint64_t assignWithCopy for Intent(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  char v6 = *(unsigned char *)(a2 + 24);
  sub_1C64BA678(*(id *)a2, v4, v5, v6);
  uint64_t v7 = *(void **)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  uint64_t v9 = *(void *)(a1 + 16);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  char v10 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v6;
  sub_1C64BA600(v7, v8, v9, v10);
  return a1;
}

__n128 __swift_memcpy25_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for Intent(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  char v4 = *(unsigned char *)(a2 + 24);
  uint64_t v5 = *(void **)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v3;
  char v8 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v4;
  sub_1C64BA600(v5, v7, v6, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for Intent(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFE && *(unsigned char *)(a1 + 25))
    {
      int v2 = *(_DWORD *)a1 + 253;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 24);
      if (v3 <= 2) {
        int v2 = -1;
      }
      else {
        int v2 = v3 ^ 0xFF;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Intent(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)__n128 result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 25) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 24) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1C650C9B8(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 24);
}

uint64_t sub_1C650C9C0(uint64_t result, char a2)
{
  *(unsigned char *)(result + 24) = a2;
  return result;
}

void type metadata accessor for Intent()
{
}

unsigned char *storeEnumTagSinglePayload for Intent.IntentDecodingErrors(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *__n128 result = a2;
        return result;
      case 2:
        *(_WORD *)__n128 result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)__n128 result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *__n128 result = 0;
      break;
    case 2:
      *(_WORD *)__n128 result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C650CA70);
    case 4:
      *(_DWORD *)__n128 result = 0;
      break;
    default:
      return result;
  }
  return result;
}

void type metadata accessor for Intent.IntentDecodingErrors()
{
}

void destroy for ActionIdentifier(uint64_t a1)
{
}

uint64_t initializeWithCopy for ActionIdentifier(uint64_t a1, uint64_t a2)
{
  int v3 = *(void **)a2;
  unsigned int v4 = *(void **)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  char v8 = *(unsigned char *)(a2 + 40);
  sub_1C64C2A9C(*(void **)a2, v4, v5, v6, v7, v8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(unsigned char *)(a1 + 40) = v8;
  return a1;
}

uint64_t assignWithCopy for ActionIdentifier(uint64_t a1, uint64_t a2)
{
  int v3 = *(void **)a2;
  unsigned int v4 = *(void **)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  char v8 = *(unsigned char *)(a2 + 40);
  sub_1C64C2A9C(*(void **)a2, v4, v5, v6, v7, v8);
  uint64_t v9 = *(void **)a1;
  uint64_t v10 = *(void *)(a1 + 8);
  uint64_t v11 = *(void *)(a1 + 16);
  uint64_t v12 = *(void *)(a1 + 24);
  uint64_t v13 = *(void *)(a1 + 32);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  char v14 = *(unsigned char *)(a1 + 40);
  *(unsigned char *)(a1 + 40) = v8;
  sub_1C64C28E4(v9, v10, v11, v12, v13, v14);
  return a1;
}

__n128 __swift_memcpy41_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for ActionIdentifier(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 32);
  char v4 = *(unsigned char *)(a2 + 40);
  uint64_t v5 = *(void **)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v8 = *(void *)(a1 + 24);
  uint64_t v9 = *(void *)(a1 + 32);
  long long v10 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v10;
  *(void *)(a1 + 32) = v3;
  char v11 = *(unsigned char *)(a1 + 40);
  *(unsigned char *)(a1 + 40) = v4;
  sub_1C64C28E4(v5, v7, v6, v8, v9, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for ActionIdentifier(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x1F && *(unsigned char *)(a1 + 41))
    {
      unsigned int v2 = *(_DWORD *)a1 + 30;
    }
    else
    {
      unsigned int v2 = ((*(unsigned __int8 *)(a1 + 40) >> 2) & 0x1E | (*(unsigned __int8 *)(a1 + 40) >> 7)) ^ 0x1F;
      if (v2 >= 0x1E) {
        unsigned int v2 = -1;
      }
    }
  }
  else
  {
    unsigned int v2 = -1;
  }
  return v2 + 1;
}

uint64_t storeEnumTagSinglePayload for ActionIdentifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x1E)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 40) = 0;
    *(void *)__n128 result = a2 - 31;
    if (a3 >= 0x1F) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if (a3 >= 0x1F) {
      *(unsigned char *)(result + 41) = 0;
    }
    if (a2)
    {
      *(void *)(result + 32) = 0;
      *(_OWORD *)__n128 result = 0u;
      *(_OWORD *)(result + 16) = 0u;
      *(unsigned char *)(result + 40) = 8 * (((-a2 >> 1) & 0xF) - 16 * a2);
    }
  }
  return result;
}

uint64_t sub_1C650CCDC(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 40) >> 7;
}

uint64_t sub_1C650CCE8(uint64_t result)
{
  *(unsigned char *)(result + 40) &= ~0x80u;
  return result;
}

uint64_t sub_1C650CCF8(uint64_t result, char a2)
{
  *(unsigned char *)(result + 40) = *(unsigned char *)(result + 40) & 7 | (a2 << 7);
  return result;
}

void type metadata accessor for ActionIdentifier()
{
}

uint64_t method lookup function for SuggestionsIntent(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SuggestionsIntent);
}

uint64_t dispatch thunk of SuggestionsIntent.__allocating_init(intentName:verb:intentProps:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t type metadata accessor for SuggestionsIntentBuilder()
{
  return self;
}

uint64_t method lookup function for SuggestionsIntentBuilder(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SuggestionsIntentBuilder);
}

uint64_t dispatch thunk of SuggestionsIntentBuilder.intentName.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t dispatch thunk of SuggestionsIntentBuilder.intentName.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of SuggestionsIntentBuilder.intentName.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of SuggestionsIntentBuilder.__allocating_init(intentName:)()
{
  return (*(uint64_t (**)(void))(v0 + 176))();
}

uint64_t dispatch thunk of SuggestionsIntentBuilder.verb(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

uint64_t dispatch thunk of SuggestionsIntentBuilder.parameter(name:value:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

uint64_t dispatch thunk of SuggestionsIntentBuilder.build()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t sub_1C650CE70()
{
  swift_unknownObjectRelease();

  return swift_bridgeObjectRelease();
}

void *sub_1C650CEAC(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_1C650CEEC(void *a1, void *a2)
{
  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *sub_1C650CF54(void *a1, void *a2)
{
  *a1 = *a2;
  swift_unknownObjectRelease();
  uint64_t v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_bridgeObjectRelease();
  return a1;
}

void type metadata accessor for Intent.TransportAppIntent()
{
}

unsigned char *sub_1C650CFA8(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C650D074);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

void type metadata accessor for Intent.CodingKeys()
{
}

unint64_t sub_1C650D0AC()
{
  unint64_t result = qword_1EA3F1928;
  if (!qword_1EA3F1928)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F1928);
  }
  return result;
}

unint64_t sub_1C650D0FC()
{
  unint64_t result = qword_1EBBFBB20;
  if (!qword_1EBBFBB20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBBFBB20);
  }
  return result;
}

unint64_t sub_1C650D14C()
{
  unint64_t result = qword_1EBBFBDD0;
  if (!qword_1EBBFBDD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBBFBDD0);
  }
  return result;
}

unint64_t sub_1C650D198()
{
  unint64_t result = qword_1EA3F1938;
  if (!qword_1EA3F1938)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F1938);
  }
  return result;
}

unint64_t sub_1C650D1E4()
{
  unint64_t result = qword_1EA3F1948;
  if (!qword_1EA3F1948)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F1948);
  }
  return result;
}

uint64_t sub_1C650D230(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for Intent.TransportAppIntent.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C650D338);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Intent.TransportAppIntent.CodingKeys()
{
  return &type metadata for Intent.TransportAppIntent.CodingKeys;
}

unint64_t sub_1C650D374()
{
  unint64_t result = qword_1EA3F1960;
  if (!qword_1EA3F1960)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F1960);
  }
  return result;
}

unint64_t sub_1C650D3C4()
{
  unint64_t result = qword_1EA3F1968;
  if (!qword_1EA3F1968)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F1968);
  }
  return result;
}

unint64_t sub_1C650D414()
{
  unint64_t result = qword_1EA3F1970;
  if (!qword_1EA3F1970)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3F1970);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_4_13()
{
  return v0;
}

void OUTLINED_FUNCTION_5_10(void *a1)
{
  sub_1C64BA600(a1, v2, v1, 2);
}

void OUTLINED_FUNCTION_6_7(void *a1)
{
  sub_1C64BA600(a1, v2, v1, 1);
}

uint64_t OUTLINED_FUNCTION_7_11()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_8_7()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_9_7()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_12_6()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_14_7()
{
  return sub_1C6577090();
}

uint64_t OUTLINED_FUNCTION_16_10()
{
  return swift_allocObject();
}

uint64_t *OUTLINED_FUNCTION_21_8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  a12 = v13;
  a13 = *(void *)(v14 + 8);
  return __swift_allocate_boxed_opaque_existential_1Tm(&a9);
}

uint64_t OUTLINED_FUNCTION_23_5()
{
  return 0x6E65746E49707061;
}

uint64_t OUTLINED_FUNCTION_24_6()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_25_7()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_26_9()
{
  return swift_dynamicCast();
}

id OUTLINED_FUNCTION_27_6(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  return sub_1C64C2AB0(v7, v8, v6, v9, a5, a6);
}

uint64_t OUTLINED_FUNCTION_28_4()
{
  return v0;
}

void OUTLINED_FUNCTION_29_3(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v5, a4, v6, 2u);
}

void OUTLINED_FUNCTION_30_6()
{
  uint64_t v2 = *(void **)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = *(void *)(v0 + 32);
  uint64_t v5 = *(void *)(v0 + 40);
  uint64_t v6 = *(void *)(v0 + 48);
  char v7 = *(unsigned char *)(v0 + 56);
  sub_1C64C28F8(v2, v3, v4, v5, v6, v7);
}

uint64_t OUTLINED_FUNCTION_31_8()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_32_7()
{
  return v0;
}

void OUTLINED_FUNCTION_33_6()
{
  sub_1C64BA600(v2, v1, v0, 0);
}

uint64_t OUTLINED_FUNCTION_34_5(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  return Context.getTargetOwner()((uint64_t *)va);
}

uint64_t OUTLINED_FUNCTION_35_7()
{
  *(unsigned char *)(v1 + 57) = v0;
  return sub_1C65768C0();
}

uint64_t static AsyncAwaitUtils.run<A, B>(elements:timeoutBehaviour:execute:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(void *)(v6 + 48) = a5;
  *(void *)(v6 + 56) = a6;
  *(void *)(v6 + 32) = a3;
  *(void *)(v6 + 40) = a4;
  *(void *)(v6 + 24) = a1;
  *(_OWORD *)(v6 + 64) = *(_OWORD *)a2;
  *(void *)(v6 + 80) = *(void *)(a2 + 16);
  return OUTLINED_FUNCTION_13_8((uint64_t)sub_1C650D754, 0);
}

uint64_t sub_1C650D754(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  OUTLINED_FUNCTION_52_1();
  OUTLINED_FUNCTION_26_4();
  uint64_t v15 = *(void *)(v13 + 72);
  uint64_t v14 = *(void *)(v13 + 80);
  uint64_t v16 = *(void *)(v13 + 56);
  uint64_t v17 = *(void *)(v13 + 64);
  uint64_t v18 = *(void *)(v13 + 48);
  uint64_t v19 = *(void *)(v13 + 24);
  sub_1C65768A0();
  uint64_t v20 = swift_task_alloc();
  *(void *)(v13 + 88) = v20;
  long long v21 = *(_OWORD *)(v13 + 32);
  *(void *)(v20 + 16) = v18;
  *(void *)(v20 + 24) = v16;
  *(void *)(v20 + 32) = v19;
  *(void *)(v20 + 40) = v17;
  *(void *)(v20 + 48) = v15;
  *(void *)(v20 + 56) = v14;
  *(_OWORD *)(v20 + 64) = v21;
  char v22 = (void *)swift_task_alloc();
  *(void *)(v13 + 96) = v22;
  *char v22 = v13;
  v22[1] = sub_1C650D868;
  OUTLINED_FUNCTION_33_3();
  return MEMORY[0x1F4188080](v23, v24, v25, v26, v27, v28, v29, v30, a9, a10, a11, a12, a13);
}

uint64_t sub_1C650D868()
{
  OUTLINED_FUNCTION_6_0();
  OUTLINED_FUNCTION_0_0();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_3_4();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_3_1();
  *uint64_t v6 = v5;
  *(void *)(v3 + 104) = v0;
  swift_task_dealloc();
  if (!v0) {
    swift_task_dealloc();
  }
  OUTLINED_FUNCTION_24_2();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t sub_1C650D94C()
{
  OUTLINED_FUNCTION_6_0();
  swift_task_dealloc();
  OUTLINED_FUNCTION_63_1();
  return v0();
}

uint64_t sub_1C650D9A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[15] = v13;
  v8[16] = v14;
  v8[13] = a7;
  v8[14] = a8;
  v8[11] = a5;
  v8[12] = a6;
  v8[9] = a3;
  v8[10] = a4;
  void v8[7] = a1;
  v8[8] = a2;
  v8[17] = sub_1C65768A0();
  v8[18] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBBFBF00);
  uint64_t v9 = sub_1C6576960();
  v8[19] = v9;
  v8[20] = *(void *)(v9 - 8);
  v8[21] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFBEF8);
  v8[22] = swift_task_alloc();
  uint64_t v10 = *(void *)(v13 - 8);
  v8[23] = v10;
  v8[24] = *(void *)(v10 + 64);
  v8[25] = swift_task_alloc();
  v8[26] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C650DB4C, 0, 0);
}

uint64_t sub_1C650DB4C()
{
  uint64_t v37 = v0;
  uint64_t v1 = v0[15];
  uint64_t v2 = v0[9];
  v0[2] = sub_1C6576810();
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_1C65767A0();
  uint64_t v36 = v3;
  if (v3 != MEMORY[0x1C879EF40](v2, v1))
  {
    uint64_t v30 = v0[24];
    uint64_t v31 = v0[23];
    do
    {
      char v13 = sub_1C6576830();
      sub_1C65767D0();
      if (v13)
      {
        uint64_t v14 = v31;
        (*(void (**)(void, unint64_t, void))(v31 + 16))(v0[26], v0[9]+ ((*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80))+ *(void *)(v31 + 72) * v3, v0[15]);
      }
      else
      {
        uint64_t v5 = sub_1C6576CA0();
        if (v30 != 8)
        {
          __break(1u);
          return MEMORY[0x1F4187E48](v5, v6, v7, v8, v12, v9, v10, v11);
        }
        v0[3] = v5;
        OUTLINED_FUNCTION_7_9();
        v28();
        swift_unknownObjectRelease();
        uint64_t v14 = v31;
      }
      unint64_t v16 = v0[25];
      uint64_t v15 = v0[26];
      uint64_t v17 = v0[22];
      uint64_t v35 = v0[14];
      uint64_t v34 = v0[13];
      uint64_t v18 = v0[11];
      uint64_t v33 = v0[12];
      uint64_t v20 = v0[9];
      uint64_t v19 = v0[10];
      swift_bridgeObjectRetain();
      long long v32 = *(_OWORD *)(v0 + 15);
      uint64_t v21 = v0[15];
      MEMORY[0x1C879EF50](&v36, v20, v21);
      swift_bridgeObjectRelease();
      uint64_t v22 = sub_1C6576920();
      OUTLINED_FUNCTION_64_2(v17, v23, v24, v22);
      uint64_t v25 = *(void (**)(unint64_t, uint64_t, uint64_t))(v14 + 32);
      v25(v16, v15, v21);
      unint64_t v26 = (*(unsigned __int8 *)(v14 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
      uint64_t v27 = swift_allocObject();
      *(void *)(v27 + 16) = 0;
      *(void *)(v27 + 24) = 0;
      *(_OWORD *)(v27 + 32) = v32;
      *(void *)(v27 + 48) = v19;
      *(void *)(v27 + 56) = v18;
      *(void *)(v27 + 64) = v33;
      *(void *)(v27 + 72) = v34;
      *(void *)(v27 + 80) = v35;
      v25(v27 + v26, v16, v21);
      sub_1C64C7A30(v19, v18);
      sub_1C6576970();
      swift_retain();
      sub_1C650ECD0(v17, (uint64_t)&unk_1EA3F1BF0, v27);
      sub_1C64E7528(v17, &qword_1EBBFBEF8);
      uint64_t v3 = v36;
    }
    while (v3 != MEMORY[0x1C879EF40](v20, v21));
  }
  swift_bridgeObjectRelease();
  v0[27] = swift_checkMetadataState();
  sub_1C6576940();
  uint64_t v4 = (void *)swift_task_alloc();
  v0[28] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1C650DF18;
  OUTLINED_FUNCTION_24_2();
  uint64_t v12 = v0 + 5;
  return MEMORY[0x1F4187E48](v5, v6, v7, v8, v12, v9, v10, v11);
}

uint64_t sub_1C650DF18()
{
  OUTLINED_FUNCTION_6_0();
  OUTLINED_FUNCTION_0_0();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_3_4();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_3_1();
  *uint64_t v6 = v5;
  swift_task_dealloc();
  if (v0) {
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_24_2();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t sub_1C650DFF8()
{
  OUTLINED_FUNCTION_73_1();
  OUTLINED_FUNCTION_7_1();
  uint64_t v1 = v0[4];
  if (v1)
  {
    v0[6] = v1;
    swift_getWitnessTable();
    sub_1C6576850();
    uint64_t v2 = (void *)swift_task_alloc();
    v0[28] = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_1C650DF18;
    OUTLINED_FUNCTION_24_2();
    OUTLINED_FUNCTION_43_2();
    return MEMORY[0x1F4187E48](v3, v4, v5, v6, v7, v8, v9, v10);
  }
  else
  {
    uint64_t v11 = (void *)v0[7];
    OUTLINED_FUNCTION_11_9();
    v12();
    *uint64_t v11 = v0[2];
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_8_8();
    OUTLINED_FUNCTION_43_2();
    return v14(v13, v14, v15, v16, v17, v18, v19, v20);
  }
}

uint64_t sub_1C650E16C()
{
  OUTLINED_FUNCTION_73_1();
  OUTLINED_FUNCTION_7_1();
  OUTLINED_FUNCTION_11_9();
  v0();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_63_1();
  OUTLINED_FUNCTION_43_2();
  return v2(v1, v2, v3, v4, v5, v6, v7, v8);
}

uint64_t sub_1C650E204()
{
  OUTLINED_FUNCTION_52_1();
  OUTLINED_FUNCTION_26_4();
  OUTLINED_FUNCTION_42_5();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_15_2(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C64C7EB4;
  OUTLINED_FUNCTION_25_8();
  OUTLINED_FUNCTION_33_3();
  return sub_1C650D9A8(v3, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_1C650E294(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[12] = v13;
  v8[13] = v14;
  v8[10] = a8;
  v8[11] = v12;
  v8[8] = a6;
  v8[9] = a7;
  v8[6] = a4;
  void v8[7] = a5;
  v8[5] = a1;
  uint64_t v9 = *(void *)(v13 - 8);
  v8[14] = v9;
  v8[15] = *(void *)(v9 + 64);
  v8[16] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C650E368, 0, 0);
}

uint64_t sub_1C650E368(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v13 = v12[7];
  if (v13)
  {
    uint64_t v14 = v12[16];
    uint64_t v16 = v12[13];
    uint64_t v15 = v12[14];
    uint64_t v17 = v12[12];
    uint64_t v18 = v12[10];
    uint64_t v33 = v12[9];
    uint64_t v19 = v12[6];
    OUTLINED_FUNCTION_52_3();
    v20();
    unint64_t v21 = (*(unsigned __int8 *)(v15 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
    uint64_t v22 = (char *)swift_allocObject();
    v12[17] = v22;
    *((void *)v22 + 2) = v17;
    *((void *)v22 + 3) = v16;
    *((void *)v22 + 4) = v33;
    *((void *)v22 + 5) = v18;
    (*(void (**)(char *, uint64_t, uint64_t))(v15 + 32))(&v22[v21], v14, v17);
    sub_1C64C7A30(v19, v13);
    swift_retain();
    uint64_t v23 = (void *)swift_task_alloc();
    v12[18] = v23;
    sub_1C65768A0();
    OUTLINED_FUNCTION_65_2();
    *uint64_t v23 = v29;
    v23[1] = sub_1C650E5C0;
    return MEMORY[0x1F415AC08](v12 + 2, &unk_1EA3F1C00, v22, v24, v25, v26, v27, v28, a9, a10, a11, a12);
  }
  else
  {
    uint64_t v34 = (uint64_t (*)(uint64_t))(v12[9] + *(int *)v12[9]);
    uint64_t v30 = (void *)swift_task_alloc();
    v12[20] = v30;
    *uint64_t v30 = v12;
    v30[1] = sub_1C650E6A4;
    uint64_t v31 = v12[11];
    return v34(v31);
  }
}

uint64_t sub_1C650E5C0()
{
  OUTLINED_FUNCTION_6_0();
  OUTLINED_FUNCTION_0_0();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_3_4();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_3_1();
  *uint64_t v6 = v5;
  *(void *)(v3 + 152) = v0;
  swift_task_dealloc();
  if (!v0) {
    swift_release();
  }
  OUTLINED_FUNCTION_24_2();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t sub_1C650E6A4()
{
  OUTLINED_FUNCTION_49_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_0_0();
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_3_4();
  *uint64_t v6 = v5;
  uint64_t v7 = *v1;
  OUTLINED_FUNCTION_3_1();
  *uint64_t v8 = v7;
  swift_task_dealloc();
  if (v0)
  {
    swift_task_dealloc();
    OUTLINED_FUNCTION_34_6();
    return v9();
  }
  else
  {
    *(void *)(v5 + 168) = v3;
    OUTLINED_FUNCTION_24_2();
    return MEMORY[0x1F4188298](v11, v12, v13);
  }
}

uint64_t sub_1C650E7B8()
{
  OUTLINED_FUNCTION_6_0();
  sub_1C64C7B90(*(void *)(v0 + 48), *(void *)(v0 + 56));
  **(void **)(v0 + 40) = *(void *)(v0 + 16);
  swift_task_dealloc();
  OUTLINED_FUNCTION_8_8();
  return v1();
}

uint64_t sub_1C650E828()
{
  OUTLINED_FUNCTION_6_0();
  **(void **)(v0 + 40) = *(void *)(v0 + 168);
  swift_task_dealloc();
  OUTLINED_FUNCTION_8_8();
  return v1();
}

uint64_t sub_1C650E88C()
{
  OUTLINED_FUNCTION_26_4();
  uint64_t v23 = v0;
  swift_release();
  if (qword_1EBBFC428 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void **)(v0 + 152);
  uint64_t v2 = sub_1C65763A0();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EBBFC278);
  id v3 = v1;
  id v4 = v1;
  uint64_t v5 = (void *)sub_1C6576380();
  os_log_type_t v6 = sub_1C6576A60();
  BOOL v7 = OUTLINED_FUNCTION_55_4(v6);
  uint64_t v8 = *(void **)(v0 + 152);
  if (v7)
  {
    uint64_t v9 = (_DWORD *)OUTLINED_FUNCTION_54_3();
    uint64_t v22 = swift_slowAlloc();
    *uint64_t v9 = 136315138;
    *(void *)(v0 + 24) = v8;
    id v10 = v8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFBF00);
    uint64_t v11 = sub_1C65765A0();
    *(void *)(v0 + 32) = sub_1C64BCF18(v11, v12, &v22);
    sub_1C6576B40();
    swift_bridgeObjectRelease();

    OUTLINED_FUNCTION_33_7(&dword_1C6494000, v13, v14, "Timeout occurred. %s");
    OUTLINED_FUNCTION_49_4();
    OUTLINED_FUNCTION_31_5();
    OUTLINED_FUNCTION_31_5();
  }
  else
  {
  }
  uint64_t v15 = *(void **)(v0 + 152);
  uint64_t v16 = *(void *)(v0 + 88);
  uint64_t v17 = *(uint64_t (**)(uint64_t))(v0 + 56);
  uint64_t v18 = *(void *)(v0 + 48);
  swift_retain();
  uint64_t v19 = v17(v16);
  sub_1C64C7B90(v18, (uint64_t)v17);

  sub_1C64C7B90(v18, (uint64_t)v17);
  **(void **)(v0 + 40) = v19;
  swift_task_dealloc();
  OUTLINED_FUNCTION_8_8();
  return v20();
}

uint64_t sub_1C650EAC0(uint64_t a1, int *a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a1;
  uint64_t v8 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  os_log_type_t v6 = (void *)swift_task_alloc();
  *(void *)(v4 + 24) = v6;
  *os_log_type_t v6 = v4;
  v6[1] = sub_1C650EBA0;
  return v8(a4);
}

uint64_t sub_1C650EBA0()
{
  OUTLINED_FUNCTION_49_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_0_0();
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_3_4();
  *os_log_type_t v6 = v5;
  uint64_t v7 = *v1;
  OUTLINED_FUNCTION_3_1();
  *uint64_t v8 = v7;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_34_6();
    return v9();
  }
  else
  {
    *(void *)(v5 + 32) = v3;
    OUTLINED_FUNCTION_24_2();
    return MEMORY[0x1F4188298](v11, v12, v13);
  }
}

uint64_t sub_1C650ECAC()
{
  **(void **)(v0 + 16) = *(void *)(v0 + 32);
  OUTLINED_FUNCTION_8_8();
  return v1();
}

uint64_t sub_1C650ECD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFBEF8);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C6517610(a1, (uint64_t)v9, &qword_1EBBFBEF8);
  uint64_t v10 = sub_1C6576920();
  if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10) == 1)
  {
    sub_1C64E7528((uint64_t)v9, &qword_1EBBFBEF8);
  }
  else
  {
    sub_1C6576910();
    (*(void (**)(char *, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  }
  if (*(void *)(a3 + 16))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    uint64_t v11 = sub_1C65768C0();
    uint64_t v13 = v12;
    swift_unknownObjectRelease();
  }
  else
  {
    uint64_t v11 = 0;
    uint64_t v13 = 0;
  }
  uint64_t v14 = *v4;
  uint64_t v15 = (void *)(v13 | v11);
  if (v13 | v11)
  {
    v18[0] = 0;
    v18[1] = 0;
    uint64_t v15 = v18;
    _OWORD v18[2] = v11;
    void v18[3] = v13;
  }
  v17[1] = 1;
  void v17[2] = v15;
  void v17[3] = v14;
  swift_task_create();
  return swift_release();
}

uint64_t static AsyncAwaitUtils.runStableOrder<A, B>(elements:timeoutBehaviour:execute:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(void *)(v6 + 80) = a5;
  *(void *)(v6 + 88) = a6;
  *(void *)(v6 + 64) = a3;
  *(void *)(v6 + 72) = a4;
  *(void *)(v6 + 56) = a1;
  *(_OWORD *)(v6 + 96) = *(_OWORD *)a2;
  *(void *)(v6 + 112) = *(void *)(a2 + 16);
  return OUTLINED_FUNCTION_13_8((uint64_t)sub_1C650EEC0, 0);
}

uint64_t sub_1C650EEC0()
{
  uint64_t v1 = *(void *)(v0 + 112);
  long long v13 = *(_OWORD *)(v0 + 96);
  uint64_t v3 = *(void *)(v0 + 80);
  uint64_t v2 = *(void *)(v0 + 88);
  *(void *)(v0 + 24) = *(void *)(v0 + 56);
  uint64_t v4 = sub_1C65768A0();
  uint64_t WitnessTable = swift_getWitnessTable();
  long long v12 = *(_OWORD *)(v0 + 64);
  MEMORY[0x1C879EDF0](v4, WitnessTable);
  uint64_t v6 = *(void *)(v0 + 16);
  *(void *)(v0 + 120) = v6;
  *(void *)(v0 + 128) = sub_1C65768A0();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v8 = swift_task_alloc();
  *(void *)(v0 + 136) = v8;
  *(void *)(v8 + 16) = v3;
  *(void *)(v8 + 24) = v2;
  *(void *)(v8 + 32) = v6;
  *(_OWORD *)(v8 + 40) = v13;
  *(void *)(v8 + 56) = v1;
  *(_OWORD *)(v8 + 64) = v12;
  uint64_t v9 = sub_1C65768A0();
  *(void *)(v0 + 144) = v9;
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v0 + 152) = v10;
  *uint64_t v10 = v0;
  v10[1] = sub_1C650F088;
  return MEMORY[0x1F4187F28](v0 + 32, TupleTypeMetadata2, v9, 0, 0, &unk_1EA3F19A0, v8, TupleTypeMetadata2);
}

uint64_t sub_1C650F088()
{
  OUTLINED_FUNCTION_6_0();
  OUTLINED_FUNCTION_0_0();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_3_1();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  OUTLINED_FUNCTION_24_2();
  return MEMORY[0x1F4188298](v3, v4, v5);
}

uint64_t sub_1C650F188()
{
  uint64_t v2 = v0[10];
  uint64_t v1 = v0[11];
  v0[5] = v0[4];
  uint64_t v3 = swift_task_alloc();
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = v1;
  swift_getWitnessTable();
  uint64_t v4 = sub_1C6576730();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  v0[6] = v4;
  uint64_t v5 = swift_task_alloc();
  *(void *)(v5 + 16) = v2;
  *(void *)(v5 + 24) = v1;
  swift_getWitnessTable();
  uint64_t v6 = sub_1C6576740();
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  uint64_t v7 = (uint64_t (*)(uint64_t))v0[1];
  return v7(v6);
}

uint64_t sub_1C650F2FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[19] = v14;
  v8[20] = v15;
  v8[17] = a7;
  v8[18] = a8;
  v8[15] = a5;
  v8[16] = a6;
  v8[13] = a3;
  v8[14] = a4;
  v8[11] = a1;
  v8[12] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFBEF8);
  v8[21] = swift_task_alloc();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v8[22] = TupleTypeMetadata2;
  uint64_t v10 = *(void *)(TupleTypeMetadata2 - 8);
  v8[23] = v10;
  v8[24] = *(void *)(v10 + 64);
  v8[25] = swift_task_alloc();
  v8[26] = swift_task_alloc();
  sub_1C65768A0();
  v8[27] = swift_getTupleTypeMetadata2();
  uint64_t v11 = sub_1C65768F0();
  v8[28] = v11;
  v8[29] = *(void *)(v11 - 8);
  v8[30] = swift_task_alloc();
  sub_1C6576AE0();
  v8[31] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C650F4FC, 0, 0);
}

uint64_t sub_1C650F4FC()
{
  uint64_t v1 = v0[31];
  uint64_t v2 = v0[22];
  uint64_t v3 = v0[13];
  v0[32] = swift_checkMetadataState();
  uint64_t v4 = sub_1C6576810();
  v0[10] = v3;
  v0[9] = v4;
  sub_1C65768A0();
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  sub_1C6576E00();
  sub_1C6576DD0();
  sub_1C6576DF0();
  sub_1C6576DE0();
  if (__swift_getEnumTagSinglePayload(v1, 1, v2) != 1)
  {
    uint64_t v24 = v0[24] + 7;
    uint64_t v25 = v0[22];
    uint64_t v26 = v0[23];
    uint64_t v23 = *(void (**)(char *, char *, void))(*(void *)(v0[19] - 8) + 32);
    do
    {
      uint64_t v5 = (char *)v0[31];
      uint64_t v6 = (void *)v0[25];
      long long v32 = (char *)v0[26];
      uint64_t v7 = v0[21];
      uint64_t v29 = v0[22];
      uint64_t v30 = v0[17];
      uint64_t v31 = v0[18];
      uint64_t v8 = v0[15];
      uint64_t v28 = v0[16];
      uint64_t v9 = v0[14];
      uint64_t v10 = *(int *)(v25 + 48);
      uint64_t v11 = *(void *)v5;
      long long v27 = *(_OWORD *)(v0 + 19);
      *(void *)long long v32 = *(void *)v5;
      v23(&v32[v10], &v5[v10], v27);
      uint64_t v12 = sub_1C6576920();
      OUTLINED_FUNCTION_64_2(v7, v13, v14, v12);
      *uint64_t v6 = v11;
      OUTLINED_FUNCTION_7_9();
      v15();
      unint64_t v16 = (*(unsigned __int8 *)(v26 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
      uint64_t v17 = swift_allocObject();
      *(void *)(v17 + 16) = 0;
      *(void *)(v17 + 24) = 0;
      *(_OWORD *)(v17 + 32) = v27;
      *(void *)(v17 + 48) = v9;
      *(void *)(v17 + 56) = v8;
      *(void *)(v17 + 64) = v28;
      (*(void (**)(unint64_t, void *, uint64_t))(v26 + 32))(v17 + v16, v6, v29);
      uint64_t v18 = (void *)(v17 + ((v24 + v16) & 0xFFFFFFFFFFFFFFF8));
      *uint64_t v18 = v30;
      v18[1] = v31;
      sub_1C64C7A30(v9, v8);
      uint64_t v19 = sub_1C6576900();
      swift_retain();
      sub_1C65107FC(v7, (uint64_t)&unk_1EA3F1BC0, v17, v19);
      sub_1C64E7528(v7, &qword_1EBBFBEF8);
      OUTLINED_FUNCTION_1();
      v20();
      sub_1C6576DE0();
    }
    while (__swift_getEnumTagSinglePayload((uint64_t)v5, 1, v29) != 1);
  }
  swift_bridgeObjectRelease();
  sub_1C65768D0();
  unint64_t v21 = (void *)swift_task_alloc();
  v0[33] = v21;
  *unint64_t v21 = v0;
  v21[1] = sub_1C650F8D0;
  OUTLINED_FUNCTION_24_2();
  return MEMORY[0x1F4187C58]();
}

uint64_t sub_1C650F8D0()
{
  OUTLINED_FUNCTION_6_0();
  OUTLINED_FUNCTION_0_0();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_3_1();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_24_2();
  return MEMORY[0x1F4188298](v3, v4, v5);
}

uint64_t sub_1C650F998()
{
  OUTLINED_FUNCTION_7_1();
  uint64_t v1 = v0[6];
  if (!v1)
  {
    uint64_t v4 = (void *)v0[11];
    OUTLINED_FUNCTION_11_9();
    v5();
    *uint64_t v4 = v0[9];
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_63_1();
    OUTLINED_FUNCTION_71_2();
    __asm { BRAA            X1, X16 }
  }
  v0[7] = v0[5];
  v0[8] = v1;
  sub_1C65768A0();
  sub_1C6576860();
  uint64_t v2 = (void *)swift_task_alloc();
  v0[33] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1C650F8D0;
  OUTLINED_FUNCTION_24_2();
  OUTLINED_FUNCTION_71_2();
  return MEMORY[0x1F4187C58]();
}

uint64_t sub_1C650FAFC()
{
  OUTLINED_FUNCTION_52_1();
  OUTLINED_FUNCTION_26_4();
  OUTLINED_FUNCTION_42_5();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_15_2(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C64C7EB4;
  OUTLINED_FUNCTION_25_8();
  OUTLINED_FUNCTION_33_3();
  return sub_1C650F2FC(v3, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_1C650FB8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[13] = v14;
  v8[14] = v15;
  v8[11] = a8;
  v8[12] = v13;
  v8[9] = a6;
  v8[10] = a7;
  void v8[7] = a4;
  v8[8] = a5;
  v8[6] = a1;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v8[15] = TupleTypeMetadata2;
  uint64_t v10 = *(void *)(TupleTypeMetadata2 - 8);
  v8[16] = v10;
  v8[17] = *(void *)(v10 + 64);
  v8[18] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C650FC84, 0, 0);
}

uint64_t sub_1C650FC84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v13 = *(void *)(v12 + 64);
  if (v13)
  {
    uint64_t v14 = *(void *)(v12 + 136);
    uint64_t v15 = *(void **)(v12 + 144);
    uint64_t v16 = *(void *)(v12 + 128);
    uint64_t v17 = *(void *)(v12 + 104);
    uint64_t v18 = *(void *)(v12 + 112);
    uint64_t v44 = *(void *)(v12 + 96);
    uint64_t v19 = *(void **)(v12 + 80);
    uint64_t v42 = *(void *)(v12 + 120);
    uint64_t v43 = *(void *)(v12 + 88);
    uint64_t v20 = *(void *)(v12 + 56);
    *(_DWORD *)(v12 + 224) = *(_DWORD *)(v42 + 48);
    *uint64_t v15 = *v19;
    uint64_t v21 = *(void *)(v17 - 8);
    *(void *)(v12 + 152) = v21;
    *(void *)(v12 + 160) = *(void *)(v21 + 16);
    *(void *)(v12 + 168) = (v21 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    OUTLINED_FUNCTION_7_9();
    v22();
    unint64_t v23 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
    unint64_t v24 = (v14 + v23 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v25 = swift_allocObject();
    *(void *)(v12 + 176) = v25;
    *(void *)(v25 + 16) = v17;
    *(void *)(v25 + 24) = v18;
    (*(void (**)(unint64_t, void *, uint64_t))(v16 + 32))(v25 + v23, v15, v42);
    uint64_t v26 = (void *)(v25 + v24);
    *uint64_t v26 = v43;
    v26[1] = v44;
    sub_1C64C7A30(v20, v13);
    swift_retain();
    long long v27 = (void *)swift_task_alloc();
    *(void *)(v12 + 184) = v27;
    sub_1C65768A0();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    *long long v27 = v12;
    v27[1] = sub_1C650FFB4;
    return MEMORY[0x1F415AC08](v12 + 16, &unk_1EA3F1BE0, v25, TupleTypeMetadata2, v29, v30, v31, v32, a9, a10, a11, a12);
  }
  else
  {
    uint64_t v33 = *(void **)(v12 + 144);
    uint64_t v34 = *(void **)(v12 + 80);
    uint64_t v35 = *(int *)(*(void *)(v12 + 120) + 48);
    *(_DWORD *)(v12 + 228) = v35;
    uint64_t v36 = (char *)v34 + v35;
    *uint64_t v33 = *v34;
    OUTLINED_FUNCTION_0_2();
    *(void *)(v12 + 200) = v37;
    OUTLINED_FUNCTION_7_9();
    v38();
    OUTLINED_FUNCTION_26_10();
    uint64_t v45 = (uint64_t (*)(char *))((char *)v39 + *v39);
    uint64_t v40 = (void *)swift_task_alloc();
    *(void *)(v12 + 208) = v40;
    *uint64_t v40 = v12;
    v40[1] = sub_1C6510098;
    return v45(v36);
  }
}

uint64_t sub_1C650FFB4()
{
  OUTLINED_FUNCTION_6_0();
  OUTLINED_FUNCTION_0_0();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_3_4();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_3_1();
  *uint64_t v6 = v5;
  *(void *)(v3 + 192) = v0;
  swift_task_dealloc();
  if (!v0) {
    swift_release();
  }
  OUTLINED_FUNCTION_24_2();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t sub_1C6510098()
{
  OUTLINED_FUNCTION_6_0();
  OUTLINED_FUNCTION_0_0();
  OUTLINED_FUNCTION_3_4();
  *uint64_t v2 = v1;
  *uint64_t v2 = *v0;
  *(void *)(v1 + 216) = v3;
  swift_task_dealloc();
  OUTLINED_FUNCTION_24_2();
  return MEMORY[0x1F4188298](v4, v5, v6);
}

uint64_t sub_1C6510168()
{
  OUTLINED_FUNCTION_6_0();
  *(void *)(*(void *)(v0 + 48) + 8) = *(void *)(v0 + 216);
  OUTLINED_FUNCTION_1();
  v1();
  swift_task_dealloc();
  OUTLINED_FUNCTION_63_1();
  return v2();
}

uint64_t sub_1C65101EC()
{
  OUTLINED_FUNCTION_6_0();
  uint64_t v1 = (void *)v0[6];
  sub_1C64C7B90(v0[7], v0[8]);
  uint64_t v2 = v0[3];
  *uint64_t v1 = v0[2];
  v1[1] = v2;
  swift_task_dealloc();
  OUTLINED_FUNCTION_63_1();
  return v3();
}

uint64_t sub_1C6510258()
{
  uint64_t v31 = v0;
  swift_release();
  if (qword_1EBBFC428 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void **)(v0 + 192);
  uint64_t v2 = sub_1C65763A0();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EBBFC278);
  id v3 = v1;
  id v4 = v1;
  uint64_t v5 = (void *)sub_1C6576380();
  os_log_type_t v6 = sub_1C6576A60();
  BOOL v7 = OUTLINED_FUNCTION_55_4(v6);
  uint64_t v8 = *(void **)(v0 + 192);
  if (v7)
  {
    uint64_t v9 = (_DWORD *)OUTLINED_FUNCTION_54_3();
    uint64_t v30 = swift_slowAlloc();
    *uint64_t v9 = 136315138;
    *(void *)(v0 + 32) = v8;
    id v10 = v8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFBF00);
    uint64_t v11 = sub_1C65765A0();
    *(void *)(v0 + 40) = sub_1C64BCF18(v11, v12, &v30);
    sub_1C6576B40();
    swift_bridgeObjectRelease();

    OUTLINED_FUNCTION_33_7(&dword_1C6494000, v13, v14, "Timeout occurred. %s");
    OUTLINED_FUNCTION_49_4();
    OUTLINED_FUNCTION_31_5();
    OUTLINED_FUNCTION_31_5();
  }
  else
  {
  }
  id v29 = *(id *)(v0 + 192);
  uint64_t v15 = *(void (**)(char *, char *, uint64_t))(v0 + 160);
  uint64_t v16 = *(uint64_t **)(v0 + 144);
  uint64_t v17 = *(void *)(v0 + 152);
  uint64_t v18 = *(void *)(v0 + 104);
  uint64_t v19 = *(uint64_t **)(v0 + 80);
  uint64_t v21 = *(void *)(v0 + 56);
  uint64_t v20 = *(uint64_t (**)(char *))(v0 + 64);
  uint64_t v22 = *(void **)(v0 + 48);
  unint64_t v23 = (char *)v19 + *(int *)(v0 + 224);
  unint64_t v24 = (char *)v16 + *(int *)(*(void *)(v0 + 120) + 48);
  uint64_t v25 = *v19;
  *uint64_t v16 = *v19;
  v15(v24, v23, v18);
  *uint64_t v22 = v25;
  swift_retain();
  uint64_t v26 = v20(v23);
  sub_1C64C7B90(v21, (uint64_t)v20);

  sub_1C64C7B90(v21, (uint64_t)v20);
  v22[1] = v26;
  (*(void (**)(char *, uint64_t))(v17 + 8))(v24, v18);
  swift_task_dealloc();
  OUTLINED_FUNCTION_63_1();
  return v27();
}

uint64_t sub_1C65104E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[5] = a4;
  v5[6] = a5;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  v5[7] = swift_getTupleTypeMetadata2();
  v5[8] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C6510594, 0, 0);
}

uint64_t sub_1C6510594()
{
  OUTLINED_FUNCTION_7_1();
  uint64_t v1 = *(void **)(v0 + 64);
  uint64_t v2 = *(void **)(v0 + 24);
  uint64_t v3 = *(int *)(*(void *)(v0 + 56) + 48);
  *(_DWORD *)(v0 + 96) = v3;
  id v4 = (char *)v2 + v3;
  *uint64_t v1 = *v2;
  OUTLINED_FUNCTION_0_2();
  *(void *)(v0 + 72) = v5;
  OUTLINED_FUNCTION_7_9();
  v6();
  OUTLINED_FUNCTION_26_10();
  id v10 = (uint64_t (*)(char *))((char *)v7 + *v7);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v0 + 80) = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_1C65106A8;
  return v10(v4);
}

uint64_t sub_1C65106A8()
{
  OUTLINED_FUNCTION_6_0();
  OUTLINED_FUNCTION_0_0();
  OUTLINED_FUNCTION_3_4();
  *uint64_t v2 = v1;
  *uint64_t v2 = *v0;
  *(void *)(v1 + 88) = v3;
  swift_task_dealloc();
  OUTLINED_FUNCTION_24_2();
  return MEMORY[0x1F4188298](v4, v5, v6);
}

uint64_t sub_1C6510778()
{
  OUTLINED_FUNCTION_6_0();
  uint64_t v1 = *(void *)(v0 + 72);
  uint64_t v2 = *(void *)(v0 + 48);
  uint64_t v3 = *(void *)(v0 + 64) + *(int *)(v0 + 96);
  *(void *)(*(void *)(v0 + 16) + 8) = *(void *)(v0 + 88);
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v3, v2);
  swift_task_dealloc();
  OUTLINED_FUNCTION_8_8();
  return v4();
}

uint64_t sub_1C65107FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFBEF8);
  MEMORY[0x1F4188790](v10 - 8);
  unint64_t v12 = (char *)v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C6517610(a1, (uint64_t)v12, &qword_1EBBFBEF8);
  uint64_t v13 = sub_1C6576920();
  if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13) == 1)
  {
    sub_1C64E7528((uint64_t)v12, &qword_1EBBFBEF8);
  }
  else
  {
    sub_1C6576910();
    (*(void (**)(char *, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
  }
  if (*(void *)(a3 + 16))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    uint64_t v14 = sub_1C65768C0();
    uint64_t v16 = v15;
    swift_unknownObjectRelease();
  }
  else
  {
    uint64_t v14 = 0;
    uint64_t v16 = 0;
  }
  uint64_t v17 = *v5;
  uint64_t v18 = (void *)swift_allocObject();
  _OWORD v18[2] = *(void *)(a4 + 16);
  void v18[3] = a2;
  void v18[4] = a3;
  uint64_t v19 = (void *)(v16 | v14);
  if (v16 | v14)
  {
    v22[0] = 0;
    v22[1] = 0;
    uint64_t v19 = v22;
    v22[2] = v14;
    _OWORD v22[3] = v16;
  }
  v21[1] = 1;
  _OWORD v21[2] = v19;
  void v21[3] = v17;
  swift_task_create();
  return swift_release();
}

BOOL sub_1C65109E4(void *a1, void *a2)
{
  return *a1 < *a2;
}

uint64_t sub_1C65109F8@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(a1 + 8);
  return swift_bridgeObjectRetain();
}

uint64_t TimeoutBehaviour.init(timeout:timeoutFallbackCallback:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  *(double *)a3 = a4;
  *(void *)(a3 + 8) = result;
  *(void *)(a3 + 16) = a2;
  return result;
}

uint64_t _sSq18SiriSuggestionsKitE8asyncMapyqd_0_Sgqd_0_xYaqd__YKXEYaqd__YKs5ErrorRd__Ri_d_0_r0_lF()
{
  OUTLINED_FUNCTION_6_0();
  uint64_t v3 = v2;
  v1[8] = v0;
  v1[9] = v4;
  v1[6] = v5;
  v1[7] = v6;
  v1[4] = v7;
  v1[5] = v2;
  v1[2] = v8;
  v1[3] = v9;
  v1[10] = *(void *)(v5 - 8);
  v1[11] = OUTLINED_FUNCTION_15_6();
  OUTLINED_FUNCTION_22_8();
  v1[12] = v10;
  v1[13] = OUTLINED_FUNCTION_15_6();
  v1[14] = *(void *)(v3 + 24);
  OUTLINED_FUNCTION_0_2();
  v1[15] = v11;
  v1[16] = OUTLINED_FUNCTION_15_6();
  OUTLINED_FUNCTION_24_2();
  return MEMORY[0x1F4188298](v12, v13, v14);
}

uint64_t sub_1C6510B28()
{
  OUTLINED_FUNCTION_73_1();
  OUTLINED_FUNCTION_7_1();
  uint64_t v1 = v0[13];
  uint64_t v2 = v0[14];
  OUTLINED_FUNCTION_52_3();
  v3();
  if (__swift_getEnumTagSinglePayload(v1, 1, v2) == 1)
  {
    uint64_t v4 = v0[7];
    uint64_t v5 = v0[2];
    uint64_t v6 = OUTLINED_FUNCTION_10_8();
    v7(v6);
    __swift_storeEnumTagSinglePayload(v5, 1, 1, v4);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_8_8();
    OUTLINED_FUNCTION_43_2();
    return v9(v8, v9, v10, v11, v12, v13, v14, v15);
  }
  else
  {
    OUTLINED_FUNCTION_14_8();
    v17();
    uint64_t v18 = (void *)swift_task_alloc();
    v0[17] = v18;
    *uint64_t v18 = v0;
    v18[1] = sub_1C6510CCC;
    OUTLINED_FUNCTION_43_2();
    return v22(v19, v20, v21, v22, v23, v24, v25, v26);
  }
}

uint64_t sub_1C6510CCC()
{
  OUTLINED_FUNCTION_6_0();
  OUTLINED_FUNCTION_0_0();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_3_1();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_24_2();
  return MEMORY[0x1F4188298](v3, v4, v5);
}

uint64_t sub_1C6510DA8()
{
  OUTLINED_FUNCTION_73_1();
  OUTLINED_FUNCTION_7_1();
  uint64_t v1 = *(void *)(v0 + 56);
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = OUTLINED_FUNCTION_10_8();
  v4(v3);
  __swift_storeEnumTagSinglePayload(v2, 0, 1, v1);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_8_8();
  OUTLINED_FUNCTION_43_2();
  return v6(v5, v6, v7, v8, v9, v10, v11, v12);
}

void sub_1C6510E48()
{
  OUTLINED_FUNCTION_7_1();
  uint64_t v2 = v0[10];
  uint64_t v1 = v0[11];
  uint64_t v3 = v0[9];
  uint64_t v4 = v0[6];
  uint64_t v5 = OUTLINED_FUNCTION_10_8();
  v6(v5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32))(v3, v1, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_63_1();
  OUTLINED_FUNCTION_71_2();
  __asm { BRAA            X1, X16 }
}

uint64_t Sequence.asyncMap<A>(_:)()
{
  OUTLINED_FUNCTION_49_1();
  v1[7] = v2;
  v1[8] = v0;
  v1[5] = v3;
  v1[6] = v4;
  v1[3] = v5;
  v1[4] = v6;
  v1[9] = OUTLINED_FUNCTION_15_6();
  v1[10] = OUTLINED_FUNCTION_72_2();
  OUTLINED_FUNCTION_0_2();
  v1[11] = v7;
  v1[12] = OUTLINED_FUNCTION_15_6();
  uint64_t v8 = sub_1C6576AE0();
  OUTLINED_FUNCTION_92(v8);
  v1[13] = OUTLINED_FUNCTION_15_6();
  OUTLINED_FUNCTION_0_2();
  v1[14] = v9;
  v1[15] = OUTLINED_FUNCTION_15_6();
  uint64_t v10 = OUTLINED_FUNCTION_72_2();
  v1[16] = v10;
  OUTLINED_FUNCTION_2_11(v10);
  v1[17] = v11;
  v1[18] = OUTLINED_FUNCTION_15_6();
  OUTLINED_FUNCTION_24_2();
  return MEMORY[0x1F4188298](v12, v13, v14);
}

uint64_t sub_1C651104C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char *a9, uint64_t a10)
{
  OUTLINED_FUNCTION_30_7();
  OUTLINED_FUNCTION_46_1();
  uint64_t v11 = sub_1C6576420();
  uint64_t v12 = OUTLINED_FUNCTION_31_9(v11);
  v13(v12);
  OUTLINED_FUNCTION_61_2();
  uint64_t v14 = *(int **)(v10 + 144);
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  OUTLINED_FUNCTION_39_6(AssociatedConformanceWitness);
  OUTLINED_FUNCTION_21_9();
  if (v16)
  {
    uint64_t v17 = OUTLINED_FUNCTION_10_8();
    v18(v17);
    OUTLINED_FUNCTION_70_3();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_23_6();
    OUTLINED_FUNCTION_16_11();
  }
  else
  {
    OUTLINED_FUNCTION_14_8();
    v19();
    a9 = (char *)v14 + *v14;
    uint64_t v20 = (void *)swift_task_alloc();
    *(void *)(v10 + 152) = v20;
    *uint64_t v20 = v10;
    v20[1] = sub_1C65111F4;
    OUTLINED_FUNCTION_69_3();
    OUTLINED_FUNCTION_16_11();
  }
  return v23(v21, v22, v23, v24, v25, v26, v27, v28, a9, a10);
}

uint64_t sub_1C65111F4()
{
  OUTLINED_FUNCTION_6_0();
  OUTLINED_FUNCTION_0_0();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_3_4();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_3_1();
  *uint64_t v6 = v5;
  *(void *)(v3 + 160) = v0;
  swift_task_dealloc();
  if (v0) {
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_24_2();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t sub_1C65112D8()
{
  OUTLINED_FUNCTION_46_1();
  sub_1C65768A0();
  sub_1C6576860();
  uint64_t v1 = OUTLINED_FUNCTION_67_3();
  v2(v1);
  uint64_t v3 = *(int **)(v0 + 144);
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  OUTLINED_FUNCTION_39_6(AssociatedConformanceWitness);
  OUTLINED_FUNCTION_21_9();
  if (v5)
  {
    uint64_t v6 = OUTLINED_FUNCTION_10_8();
    v7(v6);
    OUTLINED_FUNCTION_70_3();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v11 = OUTLINED_FUNCTION_23_6();
  }
  else
  {
    OUTLINED_FUNCTION_14_8();
    v9();
    uint64_t v13 = (uint64_t (*)(uint64_t))((char *)v3 + *v3);
    uint64_t v10 = (void *)swift_task_alloc();
    *(void *)(v0 + 152) = v10;
    *uint64_t v10 = v0;
    v10[1] = sub_1C65111F4;
    uint64_t v11 = OUTLINED_FUNCTION_69_3();
    uint64_t v8 = v13;
  }
  return v8(v11);
}

uint64_t sub_1C65114A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  OUTLINED_FUNCTION_30_7();
  OUTLINED_FUNCTION_46_1();
  OUTLINED_FUNCTION_11_9();
  v10();
  uint64_t v11 = OUTLINED_FUNCTION_48_5();
  v12(v11);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_63_1();
  OUTLINED_FUNCTION_16_11();
  return v14(v13, v14, v15, v16, v17, v18, v19, v20, a9, a10);
}

uint64_t Sequence.asyncCompactMap<A>(_:)()
{
  OUTLINED_FUNCTION_30_7();
  OUTLINED_FUNCTION_46_1();
  v0[4] = v1;
  v0[5] = v2;
  v0[3] = v3;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[6] = v4;
  sub_1C6576AE0();
  OUTLINED_FUNCTION_65_2();
  v0[7] = v5;
  *uint64_t v4 = v6;
  v4[1] = sub_1C6511624;
  OUTLINED_FUNCTION_16_11();
  return Sequence.asyncMap<A>(_:)();
}

uint64_t sub_1C6511624()
{
  OUTLINED_FUNCTION_49_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_0_0();
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_3_4();
  *uint64_t v6 = v5;
  uint64_t v7 = *v1;
  OUTLINED_FUNCTION_3_1();
  *uint64_t v8 = v7;
  *(void *)(v5 + 64) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_34_6();
    return v9();
  }
  else
  {
    *(void *)(v5 + 72) = v3;
    OUTLINED_FUNCTION_24_2();
    return MEMORY[0x1F4188298](v11, v12, v13);
  }
}

uint64_t sub_1C6511734()
{
  OUTLINED_FUNCTION_46_1();
  uint64_t v1 = *(void *)(v0 + 24);
  *(void *)(v0 + 16) = *(void *)(v0 + 72);
  uint64_t v2 = swift_task_alloc();
  long long v3 = *(_OWORD *)(v0 + 32);
  *(void *)(v2 + 16) = v1;
  *(_OWORD *)(v2 + 24) = v3;
  sub_1C65768A0();
  swift_getWitnessTable();
  sub_1C6576710();
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  uint64_t v4 = OUTLINED_FUNCTION_63_3();
  return v5(v4);
}

uint64_t sub_1C6511830@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1C6576AE0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
}

uint64_t sub_1C65118A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C6511830(a1, a2);
}

uint64_t Sequence.asyncFlatMap<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v6[7] = a5;
  v6[8] = v5;
  void v6[5] = a3;
  v6[6] = a4;
  void v6[3] = a1;
  void v6[4] = a2;
  return OUTLINED_FUNCTION_13_8((uint64_t)sub_1C65118E8, 0);
}

uint64_t sub_1C65118E8()
{
  OUTLINED_FUNCTION_7_1();
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t v2 = swift_task_alloc();
  *(void *)(v0 + 72) = v2;
  long long v3 = *(_OWORD *)(v0 + 48);
  long long v4 = *(_OWORD *)(v0 + 24);
  *(void *)(v2 + 16) = v1;
  *(_OWORD *)(v2 + 24) = v3;
  *(_OWORD *)(v2 + 40) = v4;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 80) = v5;
  sub_1C65768A0();
  OUTLINED_FUNCTION_65_2();
  *(void *)(v0 + 88) = v6;
  *uint64_t v5 = v7;
  v5[1] = sub_1C65119DC;
  return Sequence.asyncMap<A>(_:)();
}

uint64_t sub_1C65119DC()
{
  OUTLINED_FUNCTION_49_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_0_0();
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_3_4();
  *uint64_t v6 = v5;
  uint64_t v7 = *v1;
  OUTLINED_FUNCTION_3_1();
  *uint64_t v8 = v7;
  *(void *)(v5 + 96) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    *(void *)(v5 + 104) = v3;
    swift_task_dealloc();
  }
  OUTLINED_FUNCTION_24_2();
  return MEMORY[0x1F4188298](v9, v10, v11);
}

uint64_t sub_1C6511AD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  OUTLINED_FUNCTION_30_7();
  OUTLINED_FUNCTION_46_1();
  uint64_t v11 = *(void *)(v10 + 56);
  *(void *)(v10 + 16) = *(void *)(v10 + 104);
  uint64_t v12 = swift_task_alloc();
  *(_OWORD *)(v12 + 16) = *(_OWORD *)(v10 + 40);
  *(void *)(v12 + 32) = v11;
  sub_1C65768A0();
  swift_getWitnessTable();
  swift_getWitnessTable();
  sub_1C6576740();
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_63_3();
  OUTLINED_FUNCTION_16_11();
  return v15(v13, v14, v15, v16, v17, v18, v19, v20, a9, a10);
}

uint64_t sub_1C6511BD8()
{
  OUTLINED_FUNCTION_6_0();
  swift_task_dealloc();
  OUTLINED_FUNCTION_63_1();
  return v0();
}

uint64_t sub_1C6511C34(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)(v3 + 16) = a1;
  uint64_t v7 = (uint64_t (*)(uint64_t))((char *)a3 + *a3);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v3 + 24) = v5;
  *uint64_t v5 = v3;
  v5[1] = sub_1C6511D10;
  return v7(a2);
}

uint64_t sub_1C6511D10()
{
  OUTLINED_FUNCTION_49_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_0_0();
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_3_4();
  *uint64_t v6 = v5;
  uint64_t v7 = *v1;
  OUTLINED_FUNCTION_3_1();
  *uint64_t v8 = v7;
  swift_task_dealloc();
  if (!v0) {
    **(void **)(v5 + 16) = v3;
  }
  OUTLINED_FUNCTION_34_6();
  return v9();
}

uint64_t sub_1C6511DE4()
{
  OUTLINED_FUNCTION_46_1();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v5 = *(int **)(v0 + 40);
  uint64_t v6 = swift_task_alloc();
  uint64_t v7 = (void *)OUTLINED_FUNCTION_15_2(v6);
  *uint64_t v7 = v8;
  v7[1] = sub_1C64C7EB4;
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, int *))((char *)&dword_1EA3F19C8 + dword_1EA3F19C8);
  return v9(v4, v2, v5);
}

uint64_t sub_1C6511EBC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *a1;
  return swift_bridgeObjectRetain();
}

uint64_t Sequence.asyncFilter(_:)()
{
  OUTLINED_FUNCTION_73_1();
  OUTLINED_FUNCTION_7_1();
  v1[6] = v2;
  v1[7] = v0;
  v1[4] = v3;
  v1[5] = v4;
  v1[3] = v5;
  v1[8] = swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_0_2();
  v1[9] = v6;
  v1[10] = swift_task_alloc();
  v1[11] = swift_task_alloc();
  uint64_t v7 = sub_1C6576AE0();
  OUTLINED_FUNCTION_92(v7);
  v1[12] = OUTLINED_FUNCTION_15_6();
  OUTLINED_FUNCTION_0_2();
  v1[13] = v8;
  v1[14] = OUTLINED_FUNCTION_15_6();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v1[15] = AssociatedTypeWitness;
  OUTLINED_FUNCTION_2_11(AssociatedTypeWitness);
  v1[16] = v10;
  v1[17] = OUTLINED_FUNCTION_15_6();
  OUTLINED_FUNCTION_24_2();
  OUTLINED_FUNCTION_43_2();
  return MEMORY[0x1F4188298](v11, v12, v13);
}

uint64_t sub_1C6512048(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  OUTLINED_FUNCTION_30_7();
  OUTLINED_FUNCTION_46_1();
  uint64_t v11 = sub_1C6576420();
  uint64_t v12 = OUTLINED_FUNCTION_31_9(v11);
  v13(v12);
  OUTLINED_FUNCTION_61_2();
  uint64_t v14 = *(int **)(v10 + 136);
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  OUTLINED_FUNCTION_39_6(AssociatedConformanceWitness);
  OUTLINED_FUNCTION_21_9();
  if (v16)
  {
    uint64_t v17 = OUTLINED_FUNCTION_10_8();
    v18(v17);
    OUTLINED_FUNCTION_70_3();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_23_6();
    OUTLINED_FUNCTION_16_11();
    return v21(v19, v20, v21, v22, v23, v24, v25, v26, a9, a10);
  }
  else
  {
    OUTLINED_FUNCTION_14_8();
    v28();
    uint64_t v38 = (char *)v14 + *v14;
    id v29 = (void *)swift_task_alloc();
    *(void *)(v10 + 144) = v29;
    *id v29 = v10;
    v29[1] = sub_1C65121E8;
    OUTLINED_FUNCTION_68_3();
    OUTLINED_FUNCTION_16_11();
    return v31(v30, v31, v32, v33, v34, v35, v36, v37, v38, a10);
  }
}

uint64_t sub_1C65121E8()
{
  OUTLINED_FUNCTION_49_1();
  char v3 = v2;
  OUTLINED_FUNCTION_0_0();
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_3_4();
  *uint64_t v6 = v5;
  uint64_t v7 = *v1;
  OUTLINED_FUNCTION_3_1();
  *uint64_t v8 = v7;
  *(void *)(v5 + 152) = v0;
  swift_task_dealloc();
  if (v0) {
    swift_bridgeObjectRelease();
  }
  else {
    *(unsigned char *)(v5 + 160) = v3 & 1;
  }
  OUTLINED_FUNCTION_24_2();
  return MEMORY[0x1F4188298](v9, v10, v11);
}

uint64_t sub_1C65122E4()
{
  OUTLINED_FUNCTION_46_1();
  if (*(unsigned char *)(v0 + 160))
  {
    OUTLINED_FUNCTION_52_3();
    v1();
    sub_1C65768A0();
    sub_1C6576860();
  }
  OUTLINED_FUNCTION_11_9();
  v2();
  char v3 = *(int **)(v0 + 136);
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  OUTLINED_FUNCTION_39_6(AssociatedConformanceWitness);
  OUTLINED_FUNCTION_21_9();
  if (v5)
  {
    uint64_t v6 = OUTLINED_FUNCTION_10_8();
    v7(v6);
    OUTLINED_FUNCTION_70_3();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v8 = OUTLINED_FUNCTION_23_6();
    return v9(v8);
  }
  else
  {
    OUTLINED_FUNCTION_14_8();
    v11();
    uint64_t v14 = (uint64_t (*)(uint64_t))((char *)v3 + *v3);
    uint64_t v12 = (void *)swift_task_alloc();
    *(void *)(v0 + 144) = v12;
    *uint64_t v12 = v0;
    v12[1] = sub_1C65121E8;
    uint64_t v13 = OUTLINED_FUNCTION_68_3();
    return v14(v13);
  }
}

uint64_t sub_1C65124CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  OUTLINED_FUNCTION_30_7();
  OUTLINED_FUNCTION_46_1();
  OUTLINED_FUNCTION_11_9();
  v10();
  uint64_t v11 = OUTLINED_FUNCTION_48_5();
  v12(v11);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_63_1();
  OUTLINED_FUNCTION_16_11();
  return v14(v13, v14, v15, v16, v17, v18, v19, v20, a9, a10);
}

uint64_t sub_1C651257C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_1C65761D0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a3, a1, v6);
  uint64_t v7 = a3 + *(int *)(type metadata accessor for SingleAccessProcessor.ProcessedTask() + 28);
  uint64_t v8 = type metadata accessor for SingleAccessProcessor.LoadingTask();
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32);

  return v9(v7, a2, v8);
}

uint64_t sub_1C651264C()
{
  OUTLINED_FUNCTION_66_3();
  swift_beginAccess();
  OUTLINED_FUNCTION_66_3();
  OUTLINED_FUNCTION_60_3();
  OUTLINED_FUNCTION_13_2();
  OUTLINED_FUNCTION_7_9();
  return v0();
}

uint64_t sub_1C65126E4(uint64_t a1)
{
  OUTLINED_FUNCTION_66_3();
  uint64_t v4 = v1 + *(void *)(v3 + 96);
  swift_beginAccess();
  OUTLINED_FUNCTION_66_3();
  OUTLINED_FUNCTION_60_3();
  OUTLINED_FUNCTION_13_2();
  (*(void (**)(uint64_t, uint64_t))(v5 + 40))(v4, a1);
  return swift_endAccess();
}

uint64_t (*sub_1C6512788())()
{
  return j__swift_endAccess;
}

uint64_t SingleAccessProcessor.__allocating_init(processorName:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  SingleAccessProcessor.init(processorName:)(a1, a2);
  return v4;
}

uint64_t SingleAccessProcessor.init(processorName:)(uint64_t a1, uint64_t a2)
{
  swift_defaultActor_initialize();
  OUTLINED_FUNCTION_41_6();
  uint64_t v6 = v2 + *(void *)(v5 + 96);
  uint64_t v7 = type metadata accessor for SingleAccessProcessor.ProcessedTask();
  OUTLINED_FUNCTION_64_2(v6, v8, v9, v7);
  OUTLINED_FUNCTION_41_6();
  uint64_t v11 = (void *)(v2 + *(void *)(v10 + 104));
  *uint64_t v11 = a1;
  v11[1] = a2;
  return v2;
}

uint64_t type metadata accessor for SingleAccessProcessor.ProcessedTask()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1C65128E4()
{
  OUTLINED_FUNCTION_49_1();
  v1[13] = v2;
  v1[14] = v0;
  v1[11] = v3;
  v1[12] = v4;
  v1[10] = v5;
  OUTLINED_FUNCTION_2_4();
  v1[15] = v6;
  uint64_t v7 = *v0;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F19E8);
  v1[16] = v8;
  OUTLINED_FUNCTION_92(v8);
  v1[17] = OUTLINED_FUNCTION_15_6();
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F1600);
  OUTLINED_FUNCTION_92(v9);
  v1[18] = OUTLINED_FUNCTION_35_8();
  v1[19] = swift_task_alloc();
  v1[20] = swift_task_alloc();
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFBEF8);
  OUTLINED_FUNCTION_92(v10);
  v1[21] = OUTLINED_FUNCTION_15_6();
  v1[22] = *(void *)(v7 + 80);
  uint64_t v11 = type metadata accessor for SingleAccessProcessor.LoadingTask();
  v1[23] = v11;
  OUTLINED_FUNCTION_2_11(v11);
  v1[24] = v12;
  v1[25] = OUTLINED_FUNCTION_35_8();
  v1[26] = swift_task_alloc();
  v1[27] = swift_task_alloc();
  OUTLINED_FUNCTION_0_2();
  v1[28] = v13;
  v1[29] = OUTLINED_FUNCTION_35_8();
  v1[30] = swift_task_alloc();
  v1[31] = type metadata accessor for SingleAccessProcessor.ProcessedTask();
  uint64_t v14 = sub_1C6576AE0();
  v1[32] = v14;
  OUTLINED_FUNCTION_2_11(v14);
  v1[33] = v15;
  v1[34] = OUTLINED_FUNCTION_35_8();
  v1[35] = swift_task_alloc();
  v1[36] = swift_task_alloc();
  v1[37] = swift_task_alloc();
  v1[38] = swift_task_alloc();
  OUTLINED_FUNCTION_22_8();
  v1[39] = v16;
  v1[40] = swift_task_alloc();
  v1[41] = swift_task_alloc();
  uint64_t v17 = sub_1C65761D0();
  v1[42] = v17;
  OUTLINED_FUNCTION_2_11(v17);
  v1[43] = v18;
  v1[44] = swift_task_alloc();
  v1[45] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C6512B7C, v0, 0);
}

uint64_t sub_1C6512B7C(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t type, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  OUTLINED_FUNCTION_57_3();
  a29 = v32;
  a30 = v33;
  a28 = v30;
  if (qword_1EBBFC428 != -1) {
    swift_once();
  }
  uint64_t v34 = *(void *)(v30 + 360);
  uint64_t v36 = *(void *)(v30 + 336);
  uint64_t v35 = *(void *)(v30 + 344);
  uint64_t v37 = *(void *)(v30 + 88);
  uint64_t v38 = sub_1C65763A0();
  uint64_t v39 = __swift_project_value_buffer(v38, (uint64_t)qword_1EBBFC278);
  *(void *)(v30 + 368) = v39;
  uint64_t v40 = *(void (**)(uint64_t, uint64_t, uint64_t))(v35 + 16);
  v35 += 16;
  *(void *)(v30 + 376) = v40;
  *(void *)(v30 + 384) = v35 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  uint64_t v103 = (uint64_t)v40;
  uint64_t v104 = v35;
  v40(v34, v37, v36);
  swift_retain_n();
  uint64_t v41 = sub_1C6576380();
  os_log_type_t v42 = sub_1C6576A50();
  int v43 = v42;
  BOOL v44 = os_log_type_enabled(v41, v42);
  uint64_t v45 = *(void *)(v30 + 112);
  if (v44)
  {
    uint64_t v31 = (void (*)(uint64_t))(v30 + 72);
    a12 = v30 + 72;
    a13 = v30 + 64;
    uint64_t v37 = swift_slowAlloc();
    a15 = swift_slowAlloc();
    a19 = a15;
    *(_DWORD *)uint64_t v37 = 136315394;
    a16 = v39;
    sub_1C6514D54((unint64_t *)&unk_1EA3F1A08);
    uint64_t v46 = sub_1C6577040();
    LODWORD(type) = v43;
    *(void *)(v30 + 64) = sub_1C64BCF18(v46, v47, &a19);
    sub_1C6576B40();
    swift_bridgeObjectRelease();
    uint64_t v48 = OUTLINED_FUNCTION_51_4();
    ((void (*)(uint64_t))(v30 + 72))(v48);
    *(_WORD *)(v37 + 12) = 2080;
    uint64_t v49 = (uint64_t *)(v45 + *(void *)(*(void *)v45 + 104));
    uint64_t v50 = *v49;
    unint64_t v51 = v49[1];
    swift_bridgeObjectRetain();
    *(void *)(v30 + 72) = sub_1C64BCF18(v50, v51, &a19);
    sub_1C6576B40();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C6494000, v41, (os_log_type_t)type, "single access processor called for %s in %s", (uint8_t *)v37, 0x16u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_31_5();
    OUTLINED_FUNCTION_31_5();
  }
  else
  {
    uint64_t v52 = OUTLINED_FUNCTION_51_4();
    v31(v52);

    swift_release_n();
  }
  *(void *)(v30 + 392) = v31;
  uint64_t v53 = *(void *)(v30 + 304);
  OUTLINED_FUNCTION_50_5();
  if (__swift_getEnumTagSinglePayload(v53, 1, (uint64_t)v41) == 1
    || ((*(void (**)(void, void, void))(*(void *)(v30 + 312) + 32))(*(void *)(v30 + 328), *(void *)(v30 + 304), *(void *)(v30 + 248)), sub_1C6514D54(&qword_1EA3F1A00), (sub_1C6576530() & 1) != 0))
  {
    OUTLINED_FUNCTION_11_9();
    v54();
  }
  else
  {
    uint64_t v55 = sub_1C6576380();
    os_log_type_t v56 = sub_1C6576A50();
    if (os_log_type_enabled(v55, v56))
    {
      int64_t v57 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)int64_t v57 = 0;
      _os_log_impl(&dword_1C6494000, v55, v56, "single access processor needs updating because the generation ids do not match", v57, 2u);
      OUTLINED_FUNCTION_31_5();
    }
    uint64_t v37 = *(void *)(v30 + 312);

    sub_1C6514584();
    uint64_t v58 = OUTLINED_FUNCTION_67_3();
    v59(v58);
  }
  OUTLINED_FUNCTION_50_5();
  if (OUTLINED_FUNCTION_58_3())
  {
    uint64_t v60 = OUTLINED_FUNCTION_47_5();
    ((void (*)(uint64_t))v37)(v60);
    goto LABEL_19;
  }
  OUTLINED_FUNCTION_7_9();
  v61();
  uint64_t v62 = OUTLINED_FUNCTION_47_5();
  ((void (*)(uint64_t))v37)(v62);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    (*(void (**)(void, void))(*(void *)(v30 + 192) + 8))(*(void *)(v30 + 216), *(void *)(v30 + 184));
LABEL_19:
    *(void *)(v30 + 400) = v37;
    OUTLINED_FUNCTION_50_5();
    if (OUTLINED_FUNCTION_58_3())
    {
      OUTLINED_FUNCTION_11_9();
      ((void (*)(void))v37)();
    }
    else
    {
      OUTLINED_FUNCTION_7_9();
      v76();
      OUTLINED_FUNCTION_11_9();
      ((void (*)(void))v37)();
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      uint64_t v78 = *(void **)(v30 + 208);
      if (EnumCaseMultiPayload != 1)
      {
        *(void *)(v30 + 408) = *v78;
        uint64_t v101 = (void *)swift_task_alloc();
        *(void *)(v30 + 416) = v101;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFBF00);
        OUTLINED_FUNCTION_65_2();
        *uint64_t v101 = v102;
        v101[1] = sub_1C651335C;
        goto LABEL_24;
      }
      (*(void (**)(void *, void))(*(void *)(v30 + 192) + 8))(v78, *(void *)(v30 + 184));
    }
    uint64_t v79 = *(void *)(v30 + 352);
    uint64_t v80 = *(void *)(v30 + 280);
    uint64_t v81 = *(uint64_t **)(v30 + 200);
    uint64_t v82 = *(void *)(v30 + 176);
    a13 = *(void *)(v30 + 336);
    os_log_type_t type = *(void *)(v30 + 184);
    uint64_t v83 = *(void *)(v30 + 168);
    uint64_t v84 = *(void *)(v30 + 104);
    a15 = *(void *)(v30 + 248);
    a16 = *(void *)(v30 + 112);
    uint64_t v85 = *(void *)(v30 + 96);
    uint64_t v86 = sub_1C6576920();
    OUTLINED_FUNCTION_64_2(v83, v87, v88, v86);
    unint64_t v89 = (void *)swift_allocObject();
    v89[2] = 0;
    v89[3] = 0;
    v89[4] = v82;
    v89[5] = v85;
    v89[6] = v84;
    swift_retain();
    uint64_t v90 = sub_1C6514440(v83, (uint64_t)&unk_1EA3F19F8, (uint64_t)v89);
    *(void *)(v30 + 432) = v90;
    OUTLINED_FUNCTION_52_3();
    v91();
    *uint64_t v81 = v90;
    swift_storeEnumTagMultiPayload();
    sub_1C651257C(v79, (uint64_t)v81, v80);
    __swift_storeEnumTagSinglePayload(v80, 0, 1, a15);
    swift_retain();
    sub_1C65126E4(v80);
    uint64_t v92 = (void *)swift_task_alloc();
    *(void *)(v30 + 440) = v92;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBFBF00);
    *uint64_t v92 = v30;
    v92[1] = sub_1C65135B4;
LABEL_24:
    OUTLINED_FUNCTION_32_8();
    return MEMORY[0x1F4187D90](v93, v94, v95, v96, v97, v98, v99, v100, a9, a10, a11, a12, a13, type, a15, a16, v103, v104, a19,
             a20,
             a21,
             a22);
  }
  uint64_t v63 = *(void *)(v30 + 240);
  uint64_t v64 = *(void *)(v30 + 176);
  uint64_t v65 = *(void *)(v30 + 80);
  uint64_t v66 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 + 224) + 32);
  v66(v63, *(void *)(v30 + 216), v64);
  v66(v65, v63, v64);
  OUTLINED_FUNCTION_6_8();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_8_8();
  OUTLINED_FUNCTION_32_8();
  return v68(v67, v68, v69, v70, v71, v72, v73, v74, a9, a10, a11, a12, a13, type, a15, a16, v103, v104, a19,
           a20,
           a21,
           a22);
}

uint64_t sub_1C651335C()
{
  OUTLINED_FUNCTION_49_1();
  OUTLINED_FUNCTION_24_7();
  OUTLINED_FUNCTION_3_4();
  *uint64_t v4 = v3;
  *uint64_t v4 = *v2;
  *(void *)(v3 + 424) = v0;
  swift_task_dealloc();
  uint64_t v5 = *(void *)(v1 + 112);
  if (v0) {
    uint64_t v6 = sub_1C6513C48;
  }
  else {
    uint64_t v6 = sub_1C651345C;
  }
  return MEMORY[0x1F4188298](v6, v5, 0);
}

uint64_t sub_1C651345C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  OUTLINED_FUNCTION_57_3();
  swift_release();
  uint64_t v32 = v22[30];
  uint64_t v33 = v22[29];
  uint64_t v34 = v22[27];
  uint64_t v35 = v22[26];
  uint64_t v36 = v22[25];
  uint64_t v37 = v22[21];
  uint64_t v38 = v22[20];
  uint64_t v39 = v22[19];
  uint64_t v40 = v22[18];
  uint64_t v41 = v22[17];
  sub_1C651405C(v22[11], v22[14]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_8_8();
  OUTLINED_FUNCTION_32_8();
  return v24(v23, v24, v25, v26, v27, v28, v29, v30, a9, v32, v33, v34, v35, v36, v37, v38, v39, v40, v41,
           a20,
           a21,
           a22);
}

uint64_t sub_1C65135B4()
{
  OUTLINED_FUNCTION_49_1();
  OUTLINED_FUNCTION_24_7();
  OUTLINED_FUNCTION_3_4();
  *uint64_t v4 = v3;
  *uint64_t v4 = *v2;
  *(void *)(v3 + 448) = v0;
  swift_task_dealloc();
  uint64_t v5 = *(void *)(v1 + 112);
  if (v0) {
    uint64_t v6 = sub_1C6513ECC;
  }
  else {
    uint64_t v6 = sub_1C65136B4;
  }
  return MEMORY[0x1F4188298](v6, v5, 0);
}

uint64_t sub_1C65136B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void (*a17)(uint64_t, uint64_t, uint64_t), uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  OUTLINED_FUNCTION_57_3();
  a29 = v31;
  a30 = v32;
  a28 = v30;
  uint64_t v33 = *(void *)(v30 + 336);
  uint64_t v34 = *(void *)(v30 + 160);
  (*(void (**)(uint64_t, void, uint64_t))(v30 + 376))(v34, *(void *)(v30 + 88), v33);
  __swift_storeEnumTagSinglePayload(v34, 0, 1, v33);
  sub_1C651264C();
  int v35 = OUTLINED_FUNCTION_58_3();
  uint64_t v36 = *(void (**)(void))(v30 + 400);
  if (v35)
  {
    OUTLINED_FUNCTION_11_9();
    v36();
    uint64_t v37 = 1;
  }
  else
  {
    a17 = *(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 376);
    a18 = *(void *)(v30 + 384);
    uint64_t v38 = *(void *)(v30 + 336);
    uint64_t v40 = *(void *)(v30 + 312);
    uint64_t v39 = *(void *)(v30 + 320);
    uint64_t v41 = *(void *)(v30 + 248);
    uint64_t v42 = *(void *)(v30 + 152);
    OUTLINED_FUNCTION_52_3();
    v43();
    OUTLINED_FUNCTION_11_9();
    v36();
    a17(v42, v39, v38);
    (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v39, v41);
    uint64_t v37 = 0;
  }
  uint64_t v44 = *(void *)(v30 + 336);
  uint64_t v46 = *(void *)(v30 + 152);
  uint64_t v45 = *(void *)(v30 + 160);
  uint64_t v47 = *(void *)(v30 + 128);
  uint64_t v48 = *(void *)(v30 + 136);
  __swift_storeEnumTagSinglePayload(v46, v37, 1, v44);
  uint64_t v49 = v48 + *(int *)(v47 + 48);
  sub_1C6517610(v45, v48, &qword_1EA3F1600);
  sub_1C6517610(v46, v49, &qword_1EA3F1600);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v48, 1, v44);
  uint64_t v51 = *(void *)(v30 + 336);
  if (EnumTagSinglePayload == 1)
  {
    uint64_t v52 = *(void *)(v30 + 160);
    sub_1C64E7528(*(void *)(v30 + 152), &qword_1EA3F1600);
    sub_1C64E7528(v52, &qword_1EA3F1600);
    if (__swift_getEnumTagSinglePayload(v49, 1, v51) == 1)
    {
      sub_1C64E7528(*(void *)(v30 + 136), &qword_1EA3F1600);
LABEL_11:
      uint64_t v65 = *(void *)(v30 + 248);
      uint64_t v66 = sub_1C6512788();
      uint64_t v68 = v67;
      if (!__swift_getEnumTagSinglePayload(v67, 1, v65))
      {
        uint64_t v70 = *(void *)(v30 + 224);
        uint64_t v69 = *(void *)(v30 + 232);
        uint64_t v71 = *(void *)(v30 + 176);
        uint64_t v72 = v68 + *(int *)(*(void *)(v30 + 248) + 28);
        OUTLINED_FUNCTION_1();
        v73();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v70 + 16))(v72, v69, v71);
        swift_storeEnumTagMultiPayload();
      }
      ((void (*)(uint64_t, void))v66)(v30 + 16, 0);
      goto LABEL_17;
    }
    goto LABEL_9;
  }
  sub_1C6517610(*(void *)(v30 + 136), *(void *)(v30 + 144), &qword_1EA3F1600);
  int v53 = __swift_getEnumTagSinglePayload(v49, 1, v51);
  char v54 = *(void (**)(uint64_t, uint64_t))(v30 + 392);
  if (v53 == 1)
  {
    uint64_t v55 = *(void *)(v30 + 336);
    uint64_t v56 = *(void *)(v30 + 160);
    uint64_t v57 = *(void *)(v30 + 144);
    sub_1C64E7528(*(void *)(v30 + 152), &qword_1EA3F1600);
    sub_1C64E7528(v56, &qword_1EA3F1600);
    v54(v57, v55);
LABEL_9:
    sub_1C64E7528(*(void *)(v30 + 136), &qword_1EA3F19E8);
    goto LABEL_14;
  }
  uint64_t v58 = *(void *)(v30 + 352);
  uint64_t v59 = *(void *)(v30 + 336);
  uint64_t v61 = *(void *)(v30 + 152);
  uint64_t v60 = *(void *)(v30 + 160);
  uint64_t v63 = *(void *)(v30 + 136);
  uint64_t v62 = *(void *)(v30 + 144);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 + 344) + 32))(v58, v49, v59);
  sub_1C6514D54(&qword_1EA3F1A00);
  char v64 = sub_1C6576530();
  v54(v58, v59);
  sub_1C64E7528(v61, &qword_1EA3F1600);
  sub_1C64E7528(v60, &qword_1EA3F1600);
  v54(v62, v59);
  sub_1C64E7528(v63, &qword_1EA3F1600);
  if (v64) {
    goto LABEL_11;
  }
LABEL_14:
  uint64_t v74 = sub_1C6576380();
  os_log_type_t v75 = sub_1C6576A60();
  if (os_log_type_enabled(v74, v75))
  {
    uint64_t v76 = (uint8_t *)OUTLINED_FUNCTION_54_3();
    a19 = swift_slowAlloc();
    *(_DWORD *)uint64_t v76 = 136315138;
    uint64_t v77 = sub_1C6577280();
    *(void *)(v30 + 48) = sub_1C64BCF18(v77, v78, &a19);
    sub_1C6576B40();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C6494000, v74, v75, "%s: Detected race condition that means a previous long running request might have accidentally overwriten the value of a subsequent request", v76, 0xCu);
    OUTLINED_FUNCTION_49_4();
    OUTLINED_FUNCTION_31_5();
    OUTLINED_FUNCTION_31_5();
    swift_release();

    goto LABEL_18;
  }

LABEL_17:
  swift_release();
LABEL_18:
  (*(void (**)(void, void, void))(*(void *)(v30 + 224) + 32))(*(void *)(v30 + 80), *(void *)(v30 + 232), *(void *)(v30 + 176));
  OUTLINED_FUNCTION_6_8();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_8_8();
  OUTLINED_FUNCTION_32_8();
  return v80(v79, v80, v81, v82, v83, v84, v85, v86, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22);
}

uint64_t sub_1C6513C48()
{
  uint64_t v1 = (void *)v0[53];
  id v2 = v1;
  id v3 = v1;
  uint64_t v4 = (void *)sub_1C6576380();
  os_log_type_t v5 = sub_1C6576A60();
  if (OUTLINED_FUNCTION_55_4(v5))
  {
    uint64_t v6 = (void *)v0[53];
    uint64_t v7 = (_DWORD *)swift_slowAlloc();
    uint64_t v8 = (void *)swift_slowAlloc();
    *uint64_t v7 = 138412290;
    id v9 = v6;
    uint64_t v10 = _swift_stdlib_bridgeErrorToNSError();
    v0[7] = v10;
    sub_1C6576B40();
    *uint64_t v8 = v10;

    OUTLINED_FUNCTION_33_7(&dword_1C6494000, v11, v12, "Caught exception when using SingleAccessProcessor. %@");
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA3F1278);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_31_5();
    OUTLINED_FUNCTION_31_5();
  }
  else
  {
    uint64_t v13 = (void *)v0[53];
  }
  swift_willThrow();
  OUTLINED_FUNCTION_53_4();
  uint64_t v14 = v0[14];
  uint64_t v15 = v0[11];
  swift_release();
  sub_1C651405C(v15, v14);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_63_1();
  return v16();
}

uint64_t sub_1C6513ECC()
{
  OUTLINED_FUNCTION_53_4();
  uint64_t v1 = *(void *)(v0 + 112);
  uint64_t v2 = *(void *)(v0 + 88);
  swift_release();
  sub_1C651405C(v2, v1);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_63_1();
  return v3();
}

uint64_t type metadata accessor for SingleAccessProcessor.LoadingTask()
{
  return __swift_instantiateGenericMetadata();
}

void sub_1C651405C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C65761D0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EBBFC428 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_1C65763A0();
  __swift_project_value_buffer(v8, (uint64_t)qword_1EBBFC278);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  swift_retain_n();
  id v9 = sub_1C6576380();
  os_log_type_t v10 = sub_1C6576A50();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    uint64_t v21 = v19;
    *(_DWORD *)uint64_t v11 = 136315394;
    sub_1C6514D54((unint64_t *)&unk_1EA3F1A08);
    uint64_t v12 = sub_1C6577040();
    uint64_t v20 = sub_1C64BCF18(v12, v13, &v21);
    sub_1C6576B40();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    *(_WORD *)(v11 + 12) = 2080;
    uint64_t v14 = (uint64_t *)(a2 + *(void *)(*(void *)a2 + 104));
    uint64_t v15 = *v14;
    unint64_t v16 = v14[1];
    swift_bridgeObjectRetain();
    uint64_t v20 = sub_1C64BCF18(v15, v16, &v21);
    sub_1C6576B40();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C6494000, v9, v10, "single access processor finished for %s in %s", (uint8_t *)v11, 0x16u);
    uint64_t v17 = v19;
    swift_arrayDestroy();
    MEMORY[0x1C87A0050](v17, -1, -1);
    MEMORY[0x1C87A0050](v11, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);

    swift_release_n();
  }
}

uint64_t sub_1C6514364(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v8 = (uint64_t (*)(uint64_t))((char *)a4 + *a4);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v6;
  *uint64_t v6 = v4;
  v6[1] = sub_1C64C520C;
  return v8(a1);
}

uint64_t sub_1C6514440(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_1C6576920();
  if (__swift_getEnumTagSinglePayload(a1, 1, v5) == 1)
  {
    sub_1C64E7528(a1, &qword_1EBBFBEF8);
  }
  else
  {
    sub_1C6576910();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  }
  if (*(void *)(a3 + 16))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1C65768C0();
    swift_unknownObjectRelease();
  }
  return swift_task_create();
}

uint64_t sub_1C6514584()
{
  OUTLINED_FUNCTION_41_6();
  uint64_t v0 = type metadata accessor for SingleAccessProcessor.ProcessedTask();
  uint64_t v1 = sub_1C6576AE0();
  uint64_t v2 = OUTLINED_FUNCTION_92(v1);
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (char *)&v6 - v3;
  __swift_storeEnumTagSinglePayload((uint64_t)&v6 - v3, 1, 1, v0);
  return sub_1C65126E4((uint64_t)v4);
}

uint64_t sub_1C6514624(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[5] = a4;
  v5[6] = v4;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  OUTLINED_FUNCTION_2_4();
  v5[7] = v6;
  return OUTLINED_FUNCTION_13_8((uint64_t)sub_1C6514658, v4);
}

uint64_t sub_1C6514658()
{
  OUTLINED_FUNCTION_49_1();
  uint64_t v1 = v0[7];
  uint64_t v3 = v0[4];
  uint64_t v2 = v0[5];
  uint64_t v4 = (void *)swift_allocObject();
  v0[8] = v4;
  _OWORD v4[2] = *(void *)(v1 + 80);
  v4[3] = v3;
  v4[4] = v2;
  swift_retain();
  uint64_t v5 = (void *)swift_task_alloc();
  v0[9] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_1C6514748;
  return sub_1C65128E4();
}

uint64_t sub_1C6514748()
{
  OUTLINED_FUNCTION_6_0();
  OUTLINED_FUNCTION_0_0();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_3_4();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_3_1();
  *uint64_t v6 = v5;
  *(void *)(v3 + 80) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v7 = *(void *)(v3 + 48);
    return MEMORY[0x1F4188298](sub_1C651484C, v7, 0);
  }
  else
  {
    swift_release();
    OUTLINED_FUNCTION_63_1();
    return v8();
  }
}

uint64_t sub_1C651484C()
{
  OUTLINED_FUNCTION_6_0();
  swift_release();
  return swift_unexpectedError();
}

uint64_t sub_1C65148B4(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1C6514990;
  return v6(a1);
}

uint64_t sub_1C6514990()
{
  OUTLINED_FUNCTION_6_0();
  OUTLINED_FUNCTION_0_0();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_3_1();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_8_8();
  return v3();
}

uint64_t SingleAccessProcessor.deinit()
{
  OUTLINED_FUNCTION_60_3();
  OUTLINED_FUNCTION_13_2();
  OUTLINED_FUNCTION_1();
  v1();
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t SingleAccessProcessor.__deallocating_deinit()
{
  SingleAccessProcessor.deinit();

  return MEMORY[0x1F4188210](v0);
}

uint64_t SingleAccessProcessor.unownedExecutor.getter()
{
  return v0;
}

uint64_t sub_1C6514B28()
{
  return SingleAccessProcessor.unownedExecutor.getter();
}

uint64_t sub_1C6514B44()
{
  swift_unknownObjectRelease();
  swift_release();

  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t sub_1C6514B84()
{
  OUTLINED_FUNCTION_7_1();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_15_2(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C64C7EB4;
  OUTLINED_FUNCTION_71_2();
  return sub_1C6514364(v3, v4, v5, v6);
}

uint64_t sub_1C6514C3C(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1C6517C54;
  return v6(a1);
}

uint64_t sub_1C6514D18(void (*a1)(void))
{
  a1();

  return sub_1C6577280();
}

uint64_t sub_1C6514D54(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C65761D0();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C6514D98()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1C6514DD0()
{
  OUTLINED_FUNCTION_49_1();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_15_2(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C64C7EB4;
  uint64_t v3 = OUTLINED_FUNCTION_59_2();
  return sub_1C65148B4(v3, v4);
}

ValueMetadata *type metadata accessor for AsyncAwaitUtils()
{
  return &type metadata for AsyncAwaitUtils;
}

uint64_t sub_1C6514E78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 24);
}

uint64_t sub_1C6514E84()
{
  return swift_release();
}

void *sub_1C6514E8C(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  uint64_t v4 = a2[2];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = v4;
  swift_retain();
  return a1;
}

void *sub_1C6514EC4(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t v3 = a2[2];
  a1[1] = a2[1];
  a1[2] = v3;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1C6514F08(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for IntentSupportingApp(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 24))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for IntentSupportingApp(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for TimeoutBehaviour()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1C6514FE0()
{
  type metadata accessor for SingleAccessProcessor.ProcessedTask();
  uint64_t result = sub_1C6576AE0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for SingleAccessProcessor()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for SingleAccessProcessor(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SingleAccessProcessor);
}

uint64_t dispatch thunk of SingleAccessProcessor.__allocating_init(processorName:)()
{
  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t dispatch thunk of SingleAccessProcessor.runThrowing(forGenerationId:processor:)()
{
  OUTLINED_FUNCTION_46_1();
  OUTLINED_FUNCTION_40_6();
  uint64_t v0 = swift_task_alloc();
  unint64_t v1 = (void *)OUTLINED_FUNCTION_15_2(v0);
  *unint64_t v1 = v2;
  v1[1] = sub_1C64C7EB4;
  uint64_t v3 = OUTLINED_FUNCTION_46_5();
  return v4(v3);
}

uint64_t dispatch thunk of SingleAccessProcessor.run(forGenerationId:processor:)()
{
  OUTLINED_FUNCTION_46_1();
  OUTLINED_FUNCTION_40_6();
  uint64_t v0 = swift_task_alloc();
  unint64_t v1 = (void *)OUTLINED_FUNCTION_15_2(v0);
  *unint64_t v1 = v2;
  v1[1] = sub_1C64C7EB4;
  uint64_t v3 = OUTLINED_FUNCTION_46_5();
  return v4(v3);
}

uint64_t sub_1C65152C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 16);
}

uint64_t sub_1C65152C8()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

void *sub_1C6515364(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  if (*(void *)(v4 + 64) <= 8uLL) {
    uint64_t v5 = 8;
  }
  else {
    uint64_t v5 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  int v6 = *(_DWORD *)(v4 + 80);
  if ((v6 & 0x1000F8) != 0 || (unint64_t)(v5 + 1) > 0x18)
  {
    uint64_t v8 = *(void *)a2;
    *uint64_t v3 = *(void *)a2;
    uint64_t v3 = (void *)(v8 + ((unsigned __int16)((v6 & 0xF8) + 23) & (unsigned __int16)~(v6 & 0xF8) & 0x1F8));
LABEL_24:
    swift_retain();
    return v3;
  }
  unsigned int v9 = a2[v5];
  unsigned int v10 = v9 - 2;
  if (v9 >= 2)
  {
    if (v5 <= 3) {
      uint64_t v11 = v5;
    }
    else {
      uint64_t v11 = 4;
    }
    switch(v11)
    {
      case 1:
        int v12 = *a2;
        goto LABEL_19;
      case 2:
        int v12 = *(unsigned __int16 *)a2;
        goto LABEL_19;
      case 3:
        int v12 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_19;
      case 4:
        int v12 = *(_DWORD *)a2;
LABEL_19:
        int v13 = (v12 | (v10 << (8 * v5))) + 2;
        unsigned int v9 = v12 + 2;
        if (v5 < 4) {
          unsigned int v9 = v13;
        }
        break;
      default:
        break;
    }
  }
  if (v9 != 1)
  {
    *a1 = *(void *)a2;
    *((unsigned char *)a1 + v5) = 0;
    goto LABEL_24;
  }
  (*(void (**)(void *))(v4 + 16))(a1);
  *((unsigned char *)v3 + v5) = 1;
  return v3;
}

uint64_t sub_1C65154DC(unsigned __int8 *a1, uint64_t a2)
{
  unint64_t v2 = *(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64);
  if (v2 <= 8) {
    unint64_t v2 = 8;
  }
  unsigned int v3 = a1[v2];
  unsigned int v4 = v3 - 2;
  if (v3 >= 2)
  {
    if (v2 <= 3) {
      uint64_t v5 = v2;
    }
    else {
      uint64_t v5 = 4;
    }
    switch(v5)
    {
      case 1:
        int v6 = *a1;
        goto LABEL_12;
      case 2:
        int v6 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v6 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v6 = *(_DWORD *)a1;
LABEL_12:
        int v7 = (v6 | (v4 << (8 * v2))) + 2;
        unsigned int v3 = v6 + 2;
        if (v2 < 4) {
          unsigned int v3 = v7;
        }
        break;
      default:
        break;
    }
  }
  if (v3 == 1) {
    return (*(uint64_t (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();
  }
  else {
    return swift_release();
  }
}

void *sub_1C65155DC(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 8uLL) {
    uint64_t v4 = 8;
  }
  else {
    uint64_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  unsigned int v5 = a2[v4];
  unsigned int v6 = v5 - 2;
  if (v5 >= 2)
  {
    if (v4 <= 3) {
      uint64_t v7 = v4;
    }
    else {
      uint64_t v7 = 4;
    }
    switch(v7)
    {
      case 1:
        int v8 = *a2;
        goto LABEL_13;
      case 2:
        int v8 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v8 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v8 = *(_DWORD *)a2;
LABEL_13:
        int v9 = (v8 | (v6 << (8 * v4))) + 2;
        unsigned int v5 = v8 + 2;
        if (v4 < 4) {
          unsigned int v5 = v9;
        }
        break;
      default:
        break;
    }
  }
  if (v5 == 1)
  {
    (*(void (**)(void *))(*(void *)(*(void *)(a3 + 16) - 8) + 16))(a1);
    char v10 = 1;
  }
  else
  {
    *a1 = *(void *)a2;
    swift_retain();
    char v10 = 0;
  }
  *((unsigned char *)a1 + v4) = v10;
  return a1;
}

unsigned __int8 *sub_1C6515718(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    if (*(void *)(v6 + 64) <= 8uLL) {
      uint64_t v7 = 8;
    }
    else {
      uint64_t v7 = *(void *)(v6 + 64);
    }
    unsigned int v8 = a1[v7];
    unsigned int v9 = v8 - 2;
    if (v8 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v10 = v7;
      }
      else {
        uint64_t v10 = 4;
      }
      switch(v10)
      {
        case 1:
          int v11 = *a1;
          goto LABEL_14;
        case 2:
          int v11 = *(unsigned __int16 *)a1;
          goto LABEL_14;
        case 3:
          int v11 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_14;
        case 4:
          int v11 = *(_DWORD *)a1;
LABEL_14:
          int v12 = (v11 | (v9 << (8 * v7))) + 2;
          unsigned int v8 = v11 + 2;
          if (v7 < 4) {
            unsigned int v8 = v12;
          }
          break;
        default:
          break;
      }
    }
    if (v8 == 1) {
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
    }
    else {
      swift_release();
    }
    unsigned int v13 = a2[v7];
    unsigned int v14 = v13 - 2;
    if (v13 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v15 = v7;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *a2;
          goto LABEL_28;
        case 2:
          int v16 = *(unsigned __int16 *)a2;
          goto LABEL_28;
        case 3:
          int v16 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_28;
        case 4:
          int v16 = *(_DWORD *)a2;
LABEL_28:
          int v17 = (v16 | (v14 << (8 * v7))) + 2;
          unsigned int v13 = v16 + 2;
          if (v7 < 4) {
            unsigned int v13 = v17;
          }
          break;
        default:
          break;
      }
    }
    if (v13 == 1)
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 16))(a1, a2, v5);
      a1[v7] = 1;
    }
    else
    {
      *(void *)a1 = *(void *)a2;
      a1[v7] = 0;
      swift_retain();
    }
  }
  return a1;
}

void *sub_1C6515934(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 8uLL) {
    uint64_t v4 = 8;
  }
  else {
    uint64_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  unsigned int v5 = a2[v4];
  unsigned int v6 = v5 - 2;
  if (v5 >= 2)
  {
    if (v4 <= 3) {
      uint64_t v7 = v4;
    }
    else {
      uint64_t v7 = 4;
    }
    switch(v7)
    {
      case 1:
        int v8 = *a2;
        goto LABEL_13;
      case 2:
        int v8 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v8 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v8 = *(_DWORD *)a2;
LABEL_13:
        int v9 = (v8 | (v6 << (8 * v4))) + 2;
        unsigned int v5 = v8 + 2;
        if (v4 < 4) {
          unsigned int v5 = v9;
        }
        break;
      default:
        break;
    }
  }
  if (v5 == 1)
  {
    (*(void (**)(void *))(*(void *)(*(void *)(a3 + 16) - 8) + 32))(a1);
    char v10 = 1;
  }
  else
  {
    char v10 = 0;
    *a1 = *(void *)a2;
  }
  *((unsigned char *)a1 + v4) = v10;
  return a1;
}

unsigned __int8 *sub_1C6515A6C(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    if (*(void *)(v6 + 64) <= 8uLL) {
      uint64_t v7 = 8;
    }
    else {
      uint64_t v7 = *(void *)(v6 + 64);
    }
    unsigned int v8 = a1[v7];
    unsigned int v9 = v8 - 2;
    if (v8 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v10 = v7;
      }
      else {
        uint64_t v10 = 4;
      }
      switch(v10)
      {
        case 1:
          int v11 = *a1;
          goto LABEL_14;
        case 2:
          int v11 = *(unsigned __int16 *)a1;
          goto LABEL_14;
        case 3:
          int v11 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_14;
        case 4:
          int v11 = *(_DWORD *)a1;
LABEL_14:
          int v12 = (v11 | (v9 << (8 * v7))) + 2;
          unsigned int v8 = v11 + 2;
          if (v7 < 4) {
            unsigned int v8 = v12;
          }
          break;
        default:
          break;
      }
    }
    if (v8 == 1) {
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
    }
    else {
      swift_release();
    }
    unsigned int v13 = a2[v7];
    unsigned int v14 = v13 - 2;
    if (v13 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v15 = v7;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *a2;
          goto LABEL_28;
        case 2:
          int v16 = *(unsigned __int16 *)a2;
          goto LABEL_28;
        case 3:
          int v16 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_28;
        case 4:
          int v16 = *(_DWORD *)a2;
LABEL_28:
          int v17 = (v16 | (v14 << (8 * v7))) + 2;
          unsigned int v13 = v16 + 2;
          if (v7 < 4) {
            unsigned int v13 = v17;
          }
          break;
        default:
          break;
      }
    }
    if (v13 == 1)
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 32))(a1, a2, v5);
      char v18 = 1;
    }
    else
    {
      char v18 = 0;
      *(void *)a1 = *(void *)a2;
    }
    a1[v7] = v18;
  }
  return a1;
}

uint64_t sub_1C6515C84(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v4 = 8;
  if (*(void *)(v3 + 64) > 8uLL) {
    uint64_t v4 = *(void *)(v3 + 64);
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_22;
  }
  uint64_t v5 = v4 + 1;
  char v6 = 8 * (v4 + 1);
  if ((v4 + 1) <= 3)
  {
    unsigned int v9 = ((a2 + ~(-1 << v6) - 254) >> v6) + 1;
    if (HIWORD(v9))
    {
      int v7 = *(_DWORD *)((char *)a1 + v5);
      if (!v7) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v9 > 0xFF)
    {
      int v7 = *(unsigned __int16 *)((char *)a1 + v5);
      if (!*(unsigned __int16 *)((char *)a1 + v5)) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v9 < 2)
    {
LABEL_22:
      unsigned int v11 = *((unsigned __int8 *)a1 + v4);
      if (v11 >= 2) {
        return (v11 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v7 = *((unsigned __int8 *)a1 + v5);
  if (!*((unsigned char *)a1 + v5)) {
    goto LABEL_22;
  }
LABEL_14:
  int v10 = (v7 - 1) << v6;
  if (v5 > 3) {
    int v10 = 0;
  }
  if (v5)
  {
    if (v5 > 3) {
      LODWORD(v5) = 4;
    }
    switch((int)v5)
    {
      case 2:
        LODWORD(v5) = *a1;
        break;
      case 3:
        LODWORD(v5) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v5) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v5) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v5 | v10) + 255;
}

void sub_1C6515DB8(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  if (v5 <= 8) {
    unint64_t v5 = 8;
  }
  size_t v6 = v5 + 1;
  char v7 = 8 * (v5 + 1);
  if (a3 < 0xFF)
  {
    int v8 = 0;
  }
  else if (v6 <= 3)
  {
    unsigned int v11 = ((a3 + ~(-1 << v7) - 254) >> v7) + 1;
    if (HIWORD(v11))
    {
      int v8 = 4;
    }
    else if (v11 >= 0x100)
    {
      int v8 = 2;
    }
    else
    {
      int v8 = v11 > 1;
    }
  }
  else
  {
    int v8 = 1;
  }
  if (a2 > 0xFE)
  {
    unsigned int v9 = a2 - 255;
    if (v6 < 4)
    {
      int v10 = (v9 >> v7) + 1;
      if (v5 != -1)
      {
        int v12 = v9 & ~(-1 << v7);
        bzero(a1, v6);
        if (v6 == 3)
        {
          *(_WORD *)a1 = v12;
          a1[2] = BYTE2(v12);
        }
        else if (v6 == 2)
        {
          *(_WORD *)a1 = v12;
        }
        else
        {
          *a1 = v12;
        }
      }
    }
    else
    {
      bzero(a1, v5 + 1);
      *(_DWORD *)a1 = v9;
      int v10 = 1;
    }
    switch(v8)
    {
      case 1:
        a1[v6] = v10;
        break;
      case 2:
        *(_WORD *)&a1[v6] = v10;
        break;
      case 3:
LABEL_34:
        __break(1u);
        JUMPOUT(0x1C6515F7CLL);
      case 4:
        *(_DWORD *)&a1[v6] = v10;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v8)
    {
      case 1:
        a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      case 2:
        *(_WORD *)&a1[v6] = 0;
        goto LABEL_22;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      default:
LABEL_22:
        if (a2) {
LABEL_23:
        }
          a1[v5] = -(char)a2;
        break;
    }
  }
}

uint64_t sub_1C6515FA4(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v3 = 8;
  if (*(void *)(v2 + 64) > 8uLL) {
    uint64_t v3 = *(void *)(v2 + 64);
  }
  uint64_t v4 = a1[v3];
  int v5 = v4 - 2;
  if (v4 >= 2)
  {
    if (v3 <= 3) {
      uint64_t v6 = v3;
    }
    else {
      uint64_t v6 = 4;
    }
    switch(v6)
    {
      case 1:
        int v7 = *a1;
        goto LABEL_12;
      case 2:
        int v7 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v7 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v7 = *(_DWORD *)a1;
LABEL_12:
        unsigned int v8 = (v7 | (v5 << (8 * v3))) + 2;
        LODWORD(v4) = v7 + 2;
        if (v3 >= 4) {
          uint64_t v4 = v4;
        }
        else {
          uint64_t v4 = v8;
        }
        break;
      default:
        return v4;
    }
  }
  return v4;
}

void sub_1C651605C(unsigned char *a1, unsigned int a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 8uLL) {
    size_t v4 = 8;
  }
  else {
    size_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  if (a2 > 1)
  {
    unsigned int v5 = a2 - 2;
    if (v4 < 4)
    {
      unsigned int v6 = v5 >> (8 * v4);
      int v7 = v5 & ~(-1 << (8 * v4));
      a1[v4] = v6 + 2;
      bzero(a1, v4);
      if (v4 == 3)
      {
        *(_WORD *)a1 = v7;
        a1[2] = BYTE2(v7);
      }
      else if (v4 == 2)
      {
        *(_WORD *)a1 = v7;
      }
      else
      {
        *a1 = v7;
      }
    }
    else
    {
      a1[v4] = 2;
      bzero(a1, v4);
      *(_DWORD *)a1 = v5;
    }
  }
  else
  {
    a1[v4] = a2;
  }
}

uint64_t sub_1C6516134()
{
  uint64_t result = sub_1C65761D0();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for SingleAccessProcessor.LoadingTask();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_1C6516200(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = sub_1C65761D0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  uint64_t v9 = *(void *)(*(void *)(a3 + 16) - 8);
  int v10 = *(_DWORD *)(v9 + 80);
  uint64_t v11 = v10 & 0xF8 | 7;
  uint64_t v12 = v8 + v11;
  uint64_t v13 = (v8 + v11) & ~v11;
  if (*(void *)(v9 + 64) <= 8uLL) {
    uint64_t v14 = 8;
  }
  else {
    uint64_t v14 = *(void *)(v9 + 64);
  }
  unint64_t v15 = v14 + v13 + 1;
  uint64_t v16 = *(_DWORD *)(v7 + 80) & 0xF8 | v11;
  int v17 = (*(_DWORD *)(v7 + 80) | v10) & 0x100000;
  if (v16 != 7 || v17 != 0 || v15 > 0x18)
  {
    uint64_t v20 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v20 + ((v16 + 16) & ~v16));
LABEL_27:
    swift_retain();
    return a1;
  }
  uint64_t v21 = ~v11;
  (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(a1, a2, v6);
  uint64_t v22 = (void *)(((unint64_t)a1 + v12) & v21);
  uint64_t v23 = (unsigned __int8 *)(((unint64_t)a2 + v12) & v21);
  unsigned int v24 = v23[v14];
  unsigned int v25 = v24 - 2;
  if (v24 >= 2)
  {
    if (v14 <= 3) {
      uint64_t v26 = v14;
    }
    else {
      uint64_t v26 = 4;
    }
    switch(v26)
    {
      case 1:
        int v27 = *v23;
        goto LABEL_22;
      case 2:
        int v27 = *(unsigned __int16 *)v23;
        goto LABEL_22;
      case 3:
        int v27 = *(unsigned __int16 *)v23 | (*(unsigned __int8 *)((((unint64_t)a2 + v12) & v21) + 2) << 16);
        goto LABEL_22;
      case 4:
        int v27 = *(_DWORD *)v23;
LABEL_22:
        int v28 = (v27 | (v25 << (8 * v14))) + 2;
        unsigned int v24 = v27 + 2;
        if (v14 < 4) {
          unsigned int v24 = v28;
        }
        break;
      default:
        break;
    }
  }
  if (v24 != 1)
  {
    *uint64_t v22 = *(void *)v23;
    *((unsigned char *)v22 + v14) = 0;
    goto LABEL_27;
  }
  (*(void (**)(unint64_t))(v9 + 16))(((unint64_t)a1 + v12) & v21);
  *((unsigned char *)v22 + v14) = 1;
  return a1;
}

uint64_t sub_1C6516434(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C65761D0();
  uint64_t v5 = *(void *)(v4 - 8) + 8;
  (*(void (**)(uint64_t, uint64_t))v5)(a1, v4);
  uint64_t v6 = *(void *)(*(void *)(a2 + 16) - 8);
  unint64_t v7 = *(void *)(v6 + 64);
  uint64_t v8 = (unsigned __int8 *)((*(void *)(v5 + 56) + a1 + (*(_DWORD *)(v6 + 80) & 0xF8 | 7)) & ~(*(_DWORD *)(v6 + 80) & 0xF8 | 7));
  if (v7 <= 8) {
    unint64_t v7 = 8;
  }
  unsigned int v9 = v8[v7];
  unsigned int v10 = v9 - 2;
  if (v9 >= 2)
  {
    if (v7 <= 3) {
      uint64_t v11 = v7;
    }
    else {
      uint64_t v11 = 4;
    }
    switch(v11)
    {
      case 1:
        int v12 = *v8;
        goto LABEL_12;
      case 2:
        int v12 = *(unsigned __int16 *)v8;
        goto LABEL_12;
      case 3:
        int v12 = *(unsigned __int16 *)v8 | (v8[2] << 16);
        goto LABEL_12;
      case 4:
        int v12 = *(_DWORD *)v8;
LABEL_12:
        int v13 = (v12 | (v10 << (8 * v7))) + 2;
        unsigned int v9 = v12 + 2;
        if (v7 < 4) {
          unsigned int v9 = v13;
        }
        break;
      default:
        break;
    }
  }
  if (v9 == 1)
  {
    uint64_t v14 = *(uint64_t (**)(void))(v6 + 8);
    return v14();
  }
  else
  {
    return swift_release();
  }
}

uint64_t sub_1C65165DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C65761D0();
  uint64_t v7 = *(void *)(v6 - 8) + 16;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v7)(a1, a2, v6);
  uint64_t v8 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v9 = *(_DWORD *)(v8 + 80) & 0xF8 | 7;
  uint64_t v10 = *(void *)(v7 + 48) + v9;
  uint64_t v11 = (void *)((v10 + a1) & ~v9);
  int v12 = (unsigned __int8 *)((v10 + a2) & ~v9);
  if (*(void *)(v8 + 64) <= 8uLL) {
    uint64_t v13 = 8;
  }
  else {
    uint64_t v13 = *(void *)(v8 + 64);
  }
  unsigned int v14 = v12[v13];
  unsigned int v15 = v14 - 2;
  if (v14 >= 2)
  {
    if (v13 <= 3) {
      uint64_t v16 = v13;
    }
    else {
      uint64_t v16 = 4;
    }
    switch(v16)
    {
      case 1:
        int v17 = *v12;
        goto LABEL_13;
      case 2:
        int v17 = *(unsigned __int16 *)v12;
        goto LABEL_13;
      case 3:
        int v17 = *(unsigned __int16 *)v12 | (v12[2] << 16);
        goto LABEL_13;
      case 4:
        int v17 = *(_DWORD *)v12;
LABEL_13:
        int v18 = (v17 | (v15 << (8 * v13))) + 2;
        unsigned int v14 = v17 + 2;
        if (v13 < 4) {
          unsigned int v14 = v18;
        }
        break;
      default:
        break;
    }
  }
  if (v14 == 1)
  {
    (*(void (**)(void *))(v8 + 16))(v11);
    char v19 = 1;
  }
  else
  {
    *uint64_t v11 = *(void *)v12;
    swift_retain();
    char v19 = 0;
  }
  *((unsigned char *)v11 + v13) = v19;
  return a1;
}

uint64_t sub_1C6516788(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C65761D0();
  uint64_t v7 = *(void *)(v6 - 8) + 24;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v7)(a1, a2, v6);
  uint64_t v8 = *(void *)(a3 + 16);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(_DWORD *)(v9 + 80) & 0xF8 | 7;
  uint64_t v11 = *(void *)(v7 + 40) + v10;
  int v12 = (unsigned __int8 *)((v11 + a1) & ~v10);
  uint64_t v13 = (unsigned __int8 *)((v11 + a2) & ~v10);
  if (v12 != v13)
  {
    uint64_t v14 = *(void *)(v8 - 8);
    if (*(void *)(v9 + 64) <= 8uLL) {
      uint64_t v15 = 8;
    }
    else {
      uint64_t v15 = *(void *)(v9 + 64);
    }
    unsigned int v16 = v12[v15];
    unsigned int v17 = v16 - 2;
    if (v16 >= 2)
    {
      if (v15 <= 3) {
        uint64_t v18 = v15;
      }
      else {
        uint64_t v18 = 4;
      }
      switch(v18)
      {
        case 1:
          int v19 = *v12;
          goto LABEL_14;
        case 2:
          int v19 = *(unsigned __int16 *)v12;
          goto LABEL_14;
        case 3:
          int v19 = *(unsigned __int16 *)v12 | (v12[2] << 16);
          goto LABEL_14;
        case 4:
          int v19 = *(_DWORD *)v12;
LABEL_14:
          int v20 = (v19 | (v17 << (8 * v15))) + 2;
          unsigned int v16 = v19 + 2;
          if (v15 < 4) {
            unsigned int v16 = v20;
          }
          break;
        default:
          break;
      }
    }
    if (v16 == 1) {
      (*(void (**)(unsigned __int8 *, uint64_t))(v14 + 8))(v12, v8);
    }
    else {
      swift_release();
    }
    unsigned int v21 = v13[v15];
    unsigned int v22 = v21 - 2;
    if (v21 >= 2)
    {
      if (v15 <= 3) {
        uint64_t v23 = v15;
      }
      else {
        uint64_t v23 = 4;
      }
      switch(v23)
      {
        case 1:
          int v24 = *v13;
          goto LABEL_28;
        case 2:
          int v24 = *(unsigned __int16 *)v13;
          goto LABEL_28;
        case 3:
          int v24 = *(unsigned __int16 *)v13 | (v13[2] << 16);
          goto LABEL_28;
        case 4:
          int v24 = *(_DWORD *)v13;
LABEL_28:
          int v25 = (v24 | (v22 << (8 * v15))) + 2;
          unsigned int v21 = v24 + 2;
          if (v15 < 4) {
            unsigned int v21 = v25;
          }
          break;
        default:
          break;
      }
    }
    if (v21 == 1)
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v14 + 16))(v12, v13, v8);
      v12[v15] = 1;
    }
    else
    {
      *(void *)int v12 = *(void *)v13;
      v12[v15] = 0;
      swift_retain();
    }
  }
  return a1;
}

uint64_t sub_1C65169F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C65761D0();
  uint64_t v7 = *(void *)(v6 - 8) + 32;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v7)(a1, a2, v6);
  uint64_t v8 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v9 = *(_DWORD *)(v8 + 80) & 0xF8 | 7;
  uint64_t v10 = *(void *)(v7 + 32) + v9;
  uint64_t v11 = (void *)((v10 + a1) & ~v9);
  int v12 = (unsigned __int8 *)((v10 + a2) & ~v9);
  if (*(void *)(v8 + 64) <= 8uLL) {
    uint64_t v13 = 8;
  }
  else {
    uint64_t v13 = *(void *)(v8 + 64);
  }
  unsigned int v14 = v12[v13];
  unsigned int v15 = v14 - 2;
  if (v14 >= 2)
  {
    if (v13 <= 3) {
      uint64_t v16 = v13;
    }
    else {
      uint64_t v16 = 4;
    }
    switch(v16)
    {
      case 1:
        int v17 = *v12;
        goto LABEL_13;
      case 2:
        int v17 = *(unsigned __int16 *)v12;
        goto LABEL_13;
      case 3:
        int v17 = *(unsigned __int16 *)v12 | (v12[2] << 16);
        goto LABEL_13;
      case 4:
        int v17 = *(_DWORD *)v12;
LABEL_13:
        int v18 = (v17 | (v15 << (8 * v13))) + 2;
        unsigned int v14 = v17 + 2;
        if (v13 < 4) {
          unsigned int v14 = v18;
        }
        break;
      default:
        break;
    }
  }
  if (v14 == 1)
  {
    (*(void (**)(void *))(v8 + 32))(v11);
    char v19 = 1;
  }
  else
  {
    char v19 = 0;
    *uint64_t v11 = *(void *)v12;
  }
  *((unsigned char *)v11 + v13) = v19;
  return a1;
}

uint64_t sub_1C6516B9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C65761D0();
  uint64_t v7 = *(void *)(v6 - 8) + 40;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v7)(a1, a2, v6);
  uint64_t v8 = *(void *)(v7 + 24);
  uint64_t v9 = *(void *)(a3 + 16);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(_DWORD *)(v10 + 80) & 0xF8 | 7;
  uint64_t v12 = v8 + v11;
  uint64_t v13 = (unsigned __int8 *)((v12 + a1) & ~v11);
  unsigned int v14 = (unsigned __int8 *)((v12 + a2) & ~v11);
  if (v13 != v14)
  {
    uint64_t v15 = *(void *)(v9 - 8);
    if (*(void *)(v10 + 64) <= 8uLL) {
      uint64_t v16 = 8;
    }
    else {
      uint64_t v16 = *(void *)(v10 + 64);
    }
    unsigned int v17 = v13[v16];
    unsigned int v18 = v17 - 2;
    if (v17 >= 2)
    {
      if (v16 <= 3) {
        uint64_t v19 = v16;
      }
      else {
        uint64_t v19 = 4;
      }
      switch(v19)
      {
        case 1:
          int v20 = *v13;
          goto LABEL_14;
        case 2:
          int v20 = *(unsigned __int16 *)v13;
          goto LABEL_14;
        case 3:
          int v20 = *(unsigned __int16 *)v13 | (v13[2] << 16);
          goto LABEL_14;
        case 4:
          int v20 = *(_DWORD *)v13;
LABEL_14:
          int v21 = (v20 | (v18 << (8 * v16))) + 2;
          unsigned int v17 = v20 + 2;
          if (v16 < 4) {
            unsigned int v17 = v21;
          }
          break;
        default:
          break;
      }
    }
    if (v17 == 1) {
      (*(void (**)(unsigned __int8 *, uint64_t))(v15 + 8))(v13, v9);
    }
    else {
      swift_release();
    }
    unsigned int v22 = v14[v16];
    unsigned int v23 = v22 - 2;
    if (v22 >= 2)
    {
      if (v16 <= 3) {
        uint64_t v24 = v16;
      }
      else {
        uint64_t v24 = 4;
      }
      switch(v24)
      {
        case 1:
          int v25 = *v14;
          goto LABEL_28;
        case 2:
          int v25 = *(unsigned __int16 *)v14;
          goto LABEL_28;
        case 3:
          int v25 = *(unsigned __int16 *)v14 | (v14[2] << 16);
          goto LABEL_28;
        case 4:
          int v25 = *(_DWORD *)v14;
LABEL_28:
          int v26 = (v25 | (v23 << (8 * v16))) + 2;
          unsigned int v22 = v25 + 2;
          if (v16 < 4) {
            unsigned int v22 = v26;
          }
          break;
        default:
          break;
      }
    }
    if (v22 == 1)
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v15 + 32))(v13, v14, v9);
      char v27 = 1;
    }
    else
    {
      char v27 = 0;
      *(void *)uint64_t v13 = *(void *)v14;
    }
    v13[v16] = v27;
  }
  return a1;
}

uint64_t sub_1C6516E04(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6 = sub_1C65761D0();
  uint64_t v7 = *(unsigned int *)(*(void *)(v6 - 8) + 84);
  uint64_t v8 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v9 = 8;
  if (*(void *)(v8 + 64) > 8uLL) {
    uint64_t v9 = *(void *)(v8 + 64);
  }
  if (v7 <= 0xFE) {
    unsigned int v10 = 254;
  }
  else {
    unsigned int v10 = *(_DWORD *)(*(void *)(v6 - 8) + 84);
  }
  if (!a2) {
    return 0;
  }
  uint64_t v11 = *(_DWORD *)(v8 + 80) & 0xF8 | 7;
  uint64_t v12 = *(void *)(*(void *)(v6 - 8) + 64) + v11;
  if (a2 <= v10) {
    goto LABEL_27;
  }
  uint64_t v13 = v9 + (v12 & ~v11) + 1;
  char v14 = 8 * v13;
  if (v13 <= 3)
  {
    unsigned int v17 = ((a2 - v10 + ~(-1 << v14)) >> v14) + 1;
    if (HIWORD(v17))
    {
      int v15 = *(_DWORD *)((char *)a1 + v13);
      if (!v15) {
        goto LABEL_27;
      }
      goto LABEL_17;
    }
    if (v17 > 0xFF)
    {
      int v15 = *(unsigned __int16 *)((char *)a1 + v13);
      if (!*(unsigned __int16 *)((char *)a1 + v13)) {
        goto LABEL_27;
      }
      goto LABEL_17;
    }
    if (v17 < 2)
    {
LABEL_27:
      if (v7 < 0xFE)
      {
        unsigned int v21 = *(unsigned __int8 *)((((unint64_t)a1 + v12) & ~v11) + v9);
        if (v21 >= 2) {
          return (v21 ^ 0xFF) + 1;
        }
        else {
          return 0;
        }
      }
      else
      {
        return __swift_getEnumTagSinglePayload((uint64_t)a1, v7, v6);
      }
    }
  }
  int v15 = *((unsigned __int8 *)a1 + v13);
  if (!*((unsigned char *)a1 + v13)) {
    goto LABEL_27;
  }
LABEL_17:
  int v18 = (v15 - 1) << v14;
  if (v13 > 3) {
    int v18 = 0;
  }
  if (v13)
  {
    if (v13 <= 3) {
      int v19 = v13;
    }
    else {
      int v19 = 4;
    }
    switch(v19)
    {
      case 2:
        int v20 = *a1;
        break;
      case 3:
        int v20 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        int v20 = *(_DWORD *)a1;
        break;
      default:
        int v20 = *(unsigned __int8 *)a1;
        break;
    }
  }
  else
  {
    int v20 = 0;
  }
  return v10 + (v20 | v18) + 1;
}

void sub_1C6517044(unsigned char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v8 = sub_1C65761D0();
  uint64_t v9 = *(unsigned int *)(*(void *)(v8 - 8) + 84);
  uint64_t v10 = *(void *)(*(void *)(a4 + 16) - 8);
  unint64_t v11 = *(void *)(v10 + 64);
  if (v11 <= 8) {
    unint64_t v11 = 8;
  }
  if (v9 <= 0xFE) {
    unsigned int v12 = 254;
  }
  else {
    unsigned int v12 = *(_DWORD *)(*(void *)(v8 - 8) + 84);
  }
  uint64_t v13 = *(_DWORD *)(v10 + 80) & 0xF8 | 7;
  uint64_t v14 = *(void *)(*(void *)(v8 - 8) + 64) + v13;
  size_t v15 = v11 + 1;
  size_t v16 = (v14 & ~v13) + v11 + 1;
  char v17 = 8 * v16;
  if (a3 <= v12)
  {
    int v18 = 0;
  }
  else if (v16 <= 3)
  {
    unsigned int v21 = ((a3 - v12 + ~(-1 << v17)) >> v17) + 1;
    if (HIWORD(v21))
    {
      int v18 = 4;
    }
    else if (v21 >= 0x100)
    {
      int v18 = 2;
    }
    else
    {
      int v18 = v21 > 1;
    }
  }
  else
  {
    int v18 = 1;
  }
  if (v12 < a2)
  {
    unsigned int v19 = ~v12 + a2;
    if (v16 < 4)
    {
      int v20 = (v19 >> v17) + 1;
      if (v16)
      {
        int v22 = v19 & ~(-1 << v17);
        bzero(a1, v16);
        if (v16 == 3)
        {
          *(_WORD *)a1 = v22;
          a1[2] = BYTE2(v22);
        }
        else if (v16 == 2)
        {
          *(_WORD *)a1 = v22;
        }
        else
        {
          *a1 = v22;
        }
      }
    }
    else
    {
      bzero(a1, v16);
      *(_DWORD *)a1 = v19;
      int v20 = 1;
    }
    switch(v18)
    {
      case 1:
        a1[v16] = v20;
        return;
      case 2:
        *(_WORD *)&a1[v16] = v20;
        return;
      case 3:
        goto LABEL_54;
      case 4:
        *(_DWORD *)&a1[v16] = v20;
        return;
      default:
        return;
    }
  }
  switch(v18)
  {
    case 1:
      a1[v16] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_26;
    case 2:
      *(_WORD *)&a1[v16] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_26;
    case 3:
LABEL_54:
      __break(1u);
      JUMPOUT(0x1C651737CLL);
    case 4:
      *(_DWORD *)&a1[v16] = 0;
      goto LABEL_25;
    default:
LABEL_25:
      if (a2)
      {
LABEL_26:
        if (v9 < 0xFE)
        {
          unsigned int v23 = (unsigned char *)((unint64_t)&a1[v14] & ~v13);
          if (a2 > 0xFE)
          {
            if (v15 <= 3) {
              int v24 = ~(-1 << (8 * v15));
            }
            else {
              int v24 = -1;
            }
            if (v11 != -1)
            {
              int v25 = v24 & (a2 - 255);
              if (v15 <= 3) {
                int v26 = v11 + 1;
              }
              else {
                int v26 = 4;
              }
              bzero(v23, v15);
              switch(v26)
              {
                case 2:
                  *(_WORD *)unsigned int v23 = v25;
                  break;
                case 3:
                  *(_WORD *)unsigned int v23 = v25;
                  long long v23[2] = BYTE2(v25);
                  break;
                case 4:
                  *(_DWORD *)unsigned int v23 = v25;
                  break;
                default:
                  *unsigned int v23 = v25;
                  break;
              }
            }
          }
          else
          {
            v23[v11] = -(char)a2;
          }
        }
        else
        {
          __swift_storeEnumTagSinglePayload((uint64_t)a1, a2, v9, v8);
        }
      }
      return;
  }
}

uint64_t sub_1C65173B4()
{
  swift_getTupleTypeMetadata2();
  OUTLINED_FUNCTION_0_2();
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v4 = *(void *)(v3 + 64);
  swift_unknownObjectRelease();
  if (*(void *)(v0 + 56)) {
    swift_release();
  }
  OUTLINED_FUNCTION_1();
  v5();
  swift_release();

  return MEMORY[0x1F4186498](v0, ((v4 + ((v2 + 72) & ~v2) + 7) & 0xFFFFFFFFFFFFFFF8) + 16, v2 | 7);
}

uint64_t sub_1C65174B8()
{
  OUTLINED_FUNCTION_26_4();
  uint64_t v19 = v2;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  OUTLINED_FUNCTION_2_11(TupleTypeMetadata2);
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  unint64_t v8 = (*(unsigned __int8 *)(v5 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v9 = v0[2];
  uint64_t v10 = v0[3];
  uint64_t v11 = v0[6];
  uint64_t v12 = v0[7];
  uint64_t v13 = v0[8];
  uint64_t v14 = (uint64_t)v0 + v8;
  uint64_t v15 = *(void *)((char *)v0 + ((*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8));
  size_t v16 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v16;
  *size_t v16 = v1;
  v16[1] = sub_1C64C520C;
  return sub_1C650FB8C(v19, v9, v10, v11, v12, v13, v14, v15);
}