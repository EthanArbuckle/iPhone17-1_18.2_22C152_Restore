void significantTimeDidChangeNotification(uint64_t a1, void *a2, uint64_t a3)
{
  id v4;
  void *v5;
  NSObject *v6;
  void *v7;
  int v8;
  void *v9;
  __int16 v10;
  uint64_t v11;
  uint64_t v12;

  v12 = *MEMORY[0x263EF8340];
  v4 = a2;
  v5 = (void *)MEMORY[0x230FBD990]();
  v6 = HMFGetOSLogHandle();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
  {
    v7 = HMFGetLogIdentifier();
    v8 = 138543618;
    v9 = v7;
    v10 = 2112;
    v11 = a3;
    _os_log_impl(&dword_22F52A000, v6, OS_LOG_TYPE_INFO, "%{public}@System time changed %@", (uint8_t *)&v8, 0x16u);
  }
  [v4 _handleSignificantTimeChange];
}

void sub_22F720D98(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22F721144(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22F723C50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_22F726680(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22F726704(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22F726770(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22F727804(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22F72D368(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

void sub_22F72F414(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,char a39)
{
  _Block_object_dispose(&a39, 8);
  _Block_object_dispose((const void *)(v39 - 176), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__1045(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__1046(uint64_t a1)
{
}

void sub_22F733900(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22F733990(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22F733A08(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22F733AA0(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22F733B4C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22F733C08(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22F733CA0(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22F733DA0(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void ____shouldFilterHandle_block_invoke()
{
  v8[2] = *MEMORY[0x263EF8340];
  v0 = (void *)MEMORY[0x263EFFA08];
  id v1 = objc_alloc(MEMORY[0x263F4A0E8]);
  uint64_t v2 = (void *)[v1 initWithUnprefixedURI:*MEMORY[0x263F4A120]];
  v8[0] = v2;
  id v3 = objc_alloc(MEMORY[0x263F4A0E8]);
  v4 = (void *)[v3 initWithUnprefixedURI:*MEMORY[0x263F4A128]];
  v8[1] = v4;
  v5 = [MEMORY[0x263EFF8C0] arrayWithObjects:v8 count:2];
  uint64_t v6 = [v0 setWithArray:v5];
  v7 = (void *)__shouldFilterHandle_blacklistedURIs;
  __shouldFilterHandle_blacklistedURIs = v6;
}

void sub_22F74254C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_22F742924(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_22F742CAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __HMDShortcutActionInitializeWithSerializedShortcut(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  if (v4)
  {
    objc_storeStrong(v3 + 3, a2);
    if (WorkflowKitLibraryCore())
    {
      uint64_t v18 = 0;
      v19 = &v18;
      uint64_t v20 = 0x2050000000;
      v5 = (void *)getWFHomeWorkflowClass_softClass;
      uint64_t v21 = getWFHomeWorkflowClass_softClass;
      if (!getWFHomeWorkflowClass_softClass)
      {
        uint64_t v13 = MEMORY[0x263EF8330];
        uint64_t v14 = 3221225472;
        v15 = __getWFHomeWorkflowClass_block_invoke;
        v16 = &unk_264A2C2A8;
        v17 = &v18;
        __getWFHomeWorkflowClass_block_invoke((uint64_t)&v13);
        v5 = (void *)v19[3];
      }
      uint64_t v6 = v5;
      _Block_object_dispose(&v18, 8);
      uint64_t v7 = [[v6 alloc] initWithData:v4];
      id v8 = v3[4];
      v3[4] = (id)v7;

      uint64_t v18 = 0;
      v19 = &v18;
      uint64_t v20 = 0x2050000000;
      v9 = (void *)getWFHomeWorkflowControllerClass_softClass;
      uint64_t v21 = getWFHomeWorkflowControllerClass_softClass;
      if (!getWFHomeWorkflowControllerClass_softClass)
      {
        uint64_t v13 = MEMORY[0x263EF8330];
        uint64_t v14 = 3221225472;
        v15 = __getWFHomeWorkflowControllerClass_block_invoke;
        v16 = &unk_264A2C2A8;
        v17 = &v18;
        __getWFHomeWorkflowControllerClass_block_invoke((uint64_t)&v13);
        v9 = (void *)v19[3];
      }
      v10 = v9;
      _Block_object_dispose(&v18, 8);
      uint64_t v11 = [[v10 alloc] initWithWorkflow:v3[4]];
      id v12 = v3[5];
      v3[5] = (id)v11;
    }
  }
}

void sub_22F743B70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t WorkflowKitLibraryCore()
{
  if (!WorkflowKitLibraryCore_frameworkLibrary) {
    WorkflowKitLibraryCore_frameworkLibrary = _sl_dlopen();
  }
  return WorkflowKitLibraryCore_frameworkLibrary;
}

Class __getWFHomeWorkflowClass_block_invoke(uint64_t a1)
{
  WorkflowKitLibrary();
  Class result = objc_getClass("WFHomeWorkflow");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    getWFHomeWorkflowClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    uint64_t v3 = abort_report_np();
    return (Class)__getWFHomeWorkflowControllerClass_block_invoke(v3);
  }
  return result;
}

void __getWFHomeWorkflowControllerClass_block_invoke(uint64_t a1)
{
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = objc_getClass("WFHomeWorkflowController");
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    getWFHomeWorkflowControllerClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    abort_report_np();
    WorkflowKitLibrary();
  }
}

void WorkflowKitLibrary()
{
  if (!WorkflowKitLibraryCore())
  {
    v0 = (void *)abort_report_np();
    free(v0);
  }
}

uint64_t __WorkflowKitLibraryCore_block_invoke()
{
  uint64_t result = _sl_dlopen();
  WorkflowKitLibraryCore_frameworkLibrary = result;
  return result;
}

void sub_22F7474E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22F7599F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22F759CF8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22F75A64C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,id location)
{
}

void sub_22F75AC0C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,id location)
{
}

void sub_22F75AD24(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_22F75B9BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22F75BCC0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22F75BFC4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22F75E69C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22F75F74C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, os_unfair_lock_t lock)
{
}

void sub_22F75FCF0(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22F75FE10(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_22F7602AC(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22F760C04(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22F771574(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22F771600(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22F77168C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22F771708(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22F771870(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22F77667C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__6063(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__6064(uint64_t a1)
{
}

id arrayToString(void *a1, void *a2)
{
  uint64_t v23 = *MEMORY[0x263EF8340];
  id v3 = a1;
  id v4 = a2;
  v5 = [MEMORY[0x263F089D8] string];
  uint64_t v6 = [NSString stringWithFormat:@"\n %@ [", v4];
  [v5 appendString:v6];

  long long v20 = 0u;
  long long v21 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  id v7 = v3;
  uint64_t v8 = [v7 countByEnumeratingWithState:&v18 objects:v22 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)v19;
    do
    {
      for (uint64_t i = 0; i != v9; ++i)
      {
        if (*(void *)v19 != v10) {
          objc_enumerationMutation(v7);
        }
        id v12 = NSString;
        uint64_t v13 = [*(id *)(*((void *)&v18 + 1) + 8 * i) descriptionWithIndent:v4];
        uint64_t v14 = [v12 stringWithFormat:@" %@", v13];
        [v5 appendString:v14];
      }
      uint64_t v9 = [v7 countByEnumeratingWithState:&v18 objects:v22 count:16];
    }
    while (v9);
  }

  v15 = [NSString stringWithFormat:@"\n %@ ]", v4];
  [v5 appendString:v15];

  v16 = (void *)[v5 copy];
  return v16;
}

BOOL checkForParseResult(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v13 = &a10;
  if (!a9) {
    return 0;
  }
  int v10 = 0;
  while (a1 - 1 != v10)
  {
    uint64_t v11 = v13++;
    ++v10;
    if (!*v11) {
      return v10 >= a1;
    }
  }
  return 1;
}

void sub_22F78BB64(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22F78BD98(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22F78DE5C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_unfair_lock_t lock)
{
}

void sub_22F78E344(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22F78E78C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22F78E9C0(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22F78EBE8(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22F794F14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,char a59)
{
}

void __languageChanged()
{
  id v0 = +[HMDMainDriver driver];
  [v0 localeChanged];
}

void sub_22F79A8E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22F7A4ED4(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 48));
  _Unwind_Resume(a1);
}

void sub_22F7A53DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id *a10, id *location, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,id a26)
{
}

void sub_22F7A5A70(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22F7A5EF8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id *location, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,id a22)
{
  objc_destroyWeak(v22);
  objc_destroyWeak(location);
  objc_destroyWeak(&a22);
  _Unwind_Resume(a1);
}

void sub_22F7A6710(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22F7A6B94(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id *location, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,id a22)
{
  objc_destroyWeak(v22);
  objc_destroyWeak(location);
  objc_destroyWeak(&a22);
  _Unwind_Resume(a1);
}

void sub_22F7A8788(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__10129(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__10130(uint64_t a1)
{
}

void sub_22F7A8C84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_22F7A92C0(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 208), 8);
  _Block_object_dispose((const void *)(v1 - 160), 8);
  _Unwind_Resume(a1);
}

void sub_22F7AA078(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22F7AA408(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22F7AAC94(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22F7B40F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
}

void sub_22F7B4504(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
}

void sub_22F7B61B0(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

__CFString *HMDRemoteLoginAccountTypeAsString(uint64_t a1)
{
  if (a1)
  {
    objc_msgSend(NSString, "stringWithFormat:", @"Unknown HMDRemoteLoginAccountType %tu", a1);
    uint64_t v2 = (__CFString *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    uint64_t v2 = @"HMDRemoteLoginAccountTypeITunes";
  }
  return v2;
}

void sub_22F7B8BB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__12728(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__12729(uint64_t a1)
{
}

void sub_22F7BD4DC(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22F7BD6DC(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22F7BEA60(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22F7BEDCC(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22F7BEF80(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void addLogEventsToResponse(void *a1, void *a2, void *a3)
{
  id v8 = a1;
  id v5 = a2;
  id v6 = a3;
  id v7 = [v6 objectForKeyedSubscript:v8];
  if (!v7)
  {
    id v7 = [MEMORY[0x263EFF980] array];
    [v6 setObject:v7 forKeyedSubscript:v8];
  }
  [v7 addObjectsFromArray:v5];
}

uint64_t HMDRemoteEventRouterProtoConnectResponseReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x263F62298];
  id v4 = (int *)MEMORY[0x263F62288];
  id v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    id v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 2)
      {
        id v17 = objc_alloc_init(MEMORY[0x263F493C0]);
        [a1 addCachedEvents:v17];
        if (!PBReaderPlaceMark() || (HMEProtoEventInfoReadFrom() & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

void sub_22F7C1238(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22F7C12B8(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22F7C14FC(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22F7C15F8(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22F7C81A0(_Unwind_Exception *a1)
{
}

void sub_22F7C8230(_Unwind_Exception *a1)
{
}

void sub_22F7C82EC(_Unwind_Exception *a1)
{
}

void sub_22F7C837C(_Unwind_Exception *a1)
{
}

void sub_22F7C8438(_Unwind_Exception *a1)
{
}

void sub_22F7C9658(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_22F7CB2A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,char a39)
{
  _Block_object_dispose(&a39, 8);
  _Block_object_dispose((const void *)(v39 - 176), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__14257(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__14258(uint64_t a1)
{
}

void sub_22F7CC8A8(_Unwind_Exception *a1)
{
}

id reportContextFromMessage(void *a1)
{
  id v1 = a1;
  uint64_t v2 = [v1 messagePayload];
  id v3 = objc_msgSend(v2, "hmf_stringForKey:", *MEMORY[0x263F0CD98]);

  id v4 = [v1 messagePayload];
  id v5 = objc_msgSend(v4, "hmf_dataForKey:", *MEMORY[0x263F0CDA8]);

  if (v3) {
    BOOL v6 = v5 == 0;
  }
  else {
    BOOL v6 = 1;
  }
  if (v6)
  {
    uint64_t v11 = 0;
  }
  else
  {
    id v7 = [MEMORY[0x263F0E5D8] reportContextWithDomain:v3 requestInfo:v5];
    char v8 = [v1 messagePayload];
    unsigned int v9 = objc_msgSend(v8, "hmf_numberForKey:", *MEMORY[0x263F0CDA0]);
    [v9 floatValue];
    [v7 setReportTimeout:v10];

    uint64_t v11 = (void *)[v7 copy];
  }

  return v11;
}

void sub_22F7D1BB0(_Unwind_Exception *a1)
{
}

void sub_22F7D1C3C(_Unwind_Exception *a1)
{
}

void sub_22F7D1CC8(_Unwind_Exception *a1)
{
}

void sub_22F7D1D44(_Unwind_Exception *a1)
{
}

void sub_22F7D1DC8(_Unwind_Exception *a1)
{
}

void sub_22F7D1E78(_Unwind_Exception *a1)
{
}

void sub_22F7D1EF4(_Unwind_Exception *a1)
{
}

void sub_22F7D1F70(_Unwind_Exception *a1)
{
}

void sub_22F7D22BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22F7D3A40(_Unwind_Exception *a1)
{
}

void sub_22F7D4138(_Unwind_Exception *a1)
{
}

void sub_22F7D47EC(_Unwind_Exception *a1)
{
}

void sub_22F7D487C(_Unwind_Exception *a1)
{
}

void sub_22F7D4968(_Unwind_Exception *a1)
{
}

void sub_22F7D4CC0(_Unwind_Exception *a1)
{
}

void sub_22F7D5880(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22F7D5F50(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id *a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,id location)
{
}

void sub_22F7D642C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22F7D676C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22F7D7520(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id *a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22F7D7A88(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22F7D7C78(_Unwind_Exception *a1)
{
}

void sub_22F7D7D1C(_Unwind_Exception *a1)
{
}

void sub_22F7D7F54(_Unwind_Exception *a1)
{
}

void sub_22F7D7FF8(_Unwind_Exception *a1)
{
}

void sub_22F7D809C(_Unwind_Exception *a1)
{
}

void sub_22F7D81F8(_Unwind_Exception *a1)
{
}

void __transactionHomeSettingsUpdated(void *a1, void *a2, void *a3)
{
  id v18 = a1;
  id v5 = a2;
  id v6 = a3;
  id v7 = [v6 transactionResult];
  char v8 = [v5 setProperties];
  if ([v8 containsObject:@"automaticSoftwareUpdateEnabled"])
  {
    int v9 = [v18 isAutomaticSoftwareUpdateEnabled];
    float v10 = [v5 automaticSoftwareUpdateEnabled];
    int v11 = [v10 BOOLValue];

    if (v9 != v11)
    {
      unint64_t v12 = [v5 automaticSoftwareUpdateEnabled];
      objc_msgSend(v18, "setAutomaticSoftwareUpdateEnabled:", objc_msgSend(v12, "BOOLValue"));

      [v7 markChanged];
    }
  }
  else
  {
  }
  char v13 = [v5 setProperties];
  if ([v13 containsObject:@"automaticThirdPartyAccessorySoftwareUpdateEnabled"])
  {
    int v14 = [v18 isAutomaticThirdPartyAccessorySoftwareUpdateEnabled];
    int v15 = [v5 automaticThirdPartyAccessorySoftwareUpdateEnabled];
    int v16 = [v15 BOOLValue];

    if (v14 != v16)
    {
      id v17 = [v5 automaticThirdPartyAccessorySoftwareUpdateEnabled];
      objc_msgSend(v18, "setAutomaticThirdPartyAccessorySoftwareUpdateEnabled:", objc_msgSend(v17, "BOOLValue"));

      [v7 markChanged];
    }
  }
  else
  {
  }
  [v6 respondWithPayload:0];
}

void __transactionHomeMediaSettingsUpdated(void *a1, void *a2, void *a3)
{
  id v23 = a1;
  id v5 = a2;
  id v6 = a3;
  id v7 = [v6 transactionResult];
  char v8 = [v5 setProperties];
  if ([v8 containsObject:@"minimumMediaUserPrivilege"])
  {
    uint64_t v9 = [v23 minimumMediaUserPrivilege];
    float v10 = [v5 minimumMediaUserPrivilege];
    uint64_t v11 = [v10 unsignedIntegerValue];

    if (v9 != v11)
    {
      unint64_t v12 = [v5 minimumMediaUserPrivilege];
      objc_msgSend(v23, "setMinimumMediaUserPrivilege:", objc_msgSend(v12, "unsignedIntegerValue"));

      [v7 markChanged];
    }
  }
  else
  {
  }
  char v13 = [v5 setProperties];
  if ([v13 containsObject:@"mediaPeerToPeerEnabled"])
  {
    int v14 = [v23 isMediaPeerToPeerEnabled];
    int v15 = [v5 mediaPeerToPeerEnabled];
    int v16 = [v15 BOOLValue];

    if (v14 != v16)
    {
      id v17 = [v5 mediaPeerToPeerEnabled];
      objc_msgSend(v23, "setMediaPeerToPeerEnabled:", objc_msgSend(v17, "BOOLValue"));

      [v7 markChanged];
    }
  }
  else
  {
  }
  id v18 = [v5 setProperties];
  if ([v18 containsObject:@"mediaPassword"])
  {
    long long v19 = [v23 mediaPassword];
    long long v20 = [v5 mediaPassword];
    char v21 = HMFEqualObjects();

    if ((v21 & 1) == 0)
    {
      v22 = [v5 mediaPassword];
      [v23 setMediaPassword:v22];

      [v7 markChanged];
    }
  }
  else
  {
  }
  [v6 respondWithPayload:0];
}

void sub_22F7DEE48(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,id location)
{
}

void __updateAccountHandleForCurrentUser(void *a1, void *a2)
{
  uint64_t v26 = *MEMORY[0x263EF8340];
  id v3 = a1;
  id v4 = a2;
  id v5 = [v4 primaryHandle];
  if (v5)
  {
    id v6 = [v3 currentUser];
    id v7 = [v6 accountHandle];
    if (v6)
    {
      if ((HMFEqualObjects() & 1) == 0)
      {
        char v8 = (void *)[v6 newModelWithChangeType:2];
        [v8 setAccountHandle:v5];
        uint64_t v9 = +[HMDAccountHandleFormatter defaultFormatter];
        float v10 = [v9 stringForObjectValue:v5];

        [v8 setUserID:v10];
        uint64_t v11 = [v3 backingStore];
        unint64_t v12 = +[HMDBackingStoreTransactionOptions defaultXPCOptions];
        char v13 = [v11 transaction:@"HMDAppleAccountManagerAccountUpdatedNotification" options:v12];

        [v13 add:v8 withMessage:0];
        v22[0] = MEMORY[0x263EF8330];
        v22[1] = 3221225472;
        v22[2] = ____updateAccountHandleForCurrentUser_block_invoke;
        v22[3] = &unk_264A2F3E8;
        id v23 = v3;
        [v13 run:v22];
      }
    }
    else
    {
      id v18 = (void *)MEMORY[0x230FBD990]();
      id v19 = v3;
      long long v20 = HMFGetOSLogHandle();
      if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR))
      {
        char v21 = HMFGetLogIdentifier();
        *(_DWORD *)buf = 138543362;
        v25 = v21;
        _os_log_impl(&dword_22F52A000, v20, OS_LOG_TYPE_ERROR, "%{public}@Home does not currently have a user account. Not attempting to update handle.", buf, 0xCu);
      }
    }
  }
  else
  {
    int v14 = (void *)MEMORY[0x230FBD990]();
    id v15 = v3;
    int v16 = HMFGetOSLogHandle();
    if (os_log_type_enabled(v16, OS_LOG_TYPE_INFO))
    {
      id v17 = HMFGetLogIdentifier();
      *(_DWORD *)buf = 138543362;
      v25 = v17;
      _os_log_impl(&dword_22F52A000, v16, OS_LOG_TYPE_INFO, "%{public}@Cannot update home current user account handle because primary handle cannot be determined", buf, 0xCu);
    }
  }
}

void ____updateAccountHandleForCurrentUser_block_invoke(uint64_t a1, void *a2)
{
  uint64_t v12 = *MEMORY[0x263EF8340];
  id v3 = a2;
  if (v3)
  {
    id v4 = (void *)MEMORY[0x230FBD990]();
    id v5 = *(id *)(a1 + 32);
    id v6 = HMFGetOSLogHandle();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      id v7 = HMFGetLogIdentifier();
      int v10 = 138543362;
      uint64_t v11 = v7;
      _os_log_impl(&dword_22F52A000, v6, OS_LOG_TYPE_ERROR, "%{public}@Failed to change account handle for current user", (uint8_t *)&v10, 0xCu);
    }
  }
  else if ([*(id *)(a1 + 32) isOwnerUser] {
         && [*(id *)(a1 + 32) isCurrentDevicePrimaryResident])
  }
  {
    char v8 = [*(id *)(a1 + 32) homeManager];
    uint64_t v9 = [v8 homeOwnerCloudShareManager];
    [v9 updateSharedOwnerAccountHandleForHome:*(void *)(a1 + 32)];
  }
}

void sub_22F7E1154(_Unwind_Exception *a1)
{
}

void sub_22F7E149C(_Unwind_Exception *a1)
{
}

void sub_22F7E2FAC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id *location, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id a20)
{
}

void sub_22F7E363C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22F7E64A0(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 240));
  _Unwind_Resume(a1);
}

void sub_22F7E9680(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id *location, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id a18)
{
}

void sub_22F7F6F78(_Unwind_Exception *a1)
{
}

void sub_22F7FC05C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id __decodeAndVerifyCurrentUser(void *a1, void *a2)
{
  uint64_t v21 = *MEMORY[0x263EF8340];
  id v3 = a1;
  id v4 = a2;
  id v5 = [v4 uuidForKey:@"kUserUUIDKey"];
  if (v5)
  {
    id v6 = [v3 currentUser];
    id v7 = [v6 uuid];
    char v8 = objc_msgSend(v7, "hmf_isEqualToUUID:", v5);

    if (v8)
    {
      id v9 = v6;
    }
    else
    {
      uint64_t v11 = (void *)MEMORY[0x230FBD990]();
      id v12 = v3;
      char v13 = HMFGetOSLogHandle();
      if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
      {
        int v14 = HMFGetLogIdentifier();
        int v17 = 138543618;
        id v18 = v14;
        __int16 v19 = 2112;
        long long v20 = v5;
        _os_log_impl(&dword_22F52A000, v13, OS_LOG_TYPE_ERROR, "%{public}@Specified user identifier does not match current user: %@", (uint8_t *)&v17, 0x16u);
      }
      id v15 = [MEMORY[0x263F087E8] hmErrorWithCode:48];
      [v4 respondWithError:v15];

      id v9 = 0;
    }
  }
  else
  {
    int v10 = [MEMORY[0x263F087E8] hmErrorWithCode:27];
    [v4 respondWithError:v10];

    id v9 = 0;
  }

  return v9;
}

void sub_22F7FF994(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22F8005F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22F800C84(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 144));
  _Unwind_Resume(a1);
}

void sub_22F8016BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,id location)
{
  objc_destroyWeak(v31);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22F803630(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,id location)
{
  objc_destroyWeak(v23);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22F80396C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22F80538C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,char a55)
{
}

id HMDSecureAccessErrorCodeForMessage(void *a1, uint64_t a2)
{
  id v3 = a1;
  if ([v3 isEntitledForSPIAccess])
  {
    uint64_t v4 = 2003;
  }
  else
  {
    int v5 = [v3 isInternal];
    if (a2 == 1) {
      int v6 = 1;
    }
    else {
      int v6 = v5;
    }
    if (v6) {
      uint64_t v4 = 2003;
    }
    else {
      uint64_t v4 = 10;
    }
  }
  id v7 = (void *)MEMORY[0x263F087E8];
  if (+[HMDDeviceCapabilities supportsDeviceLock]) {
    uint64_t v8 = 82;
  }
  else {
    uint64_t v8 = v4;
  }
  id v9 = [v7 hmErrorWithCode:v8];

  return v9;
}

void sub_22F807128(_Unwind_Exception *a1)
{
}

void sub_22F807314(_Unwind_Exception *a1)
{
}

void sub_22F807EF0(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 80));
  _Unwind_Resume(a1);
}

void sub_22F808384(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 48));
  objc_destroyWeak((id *)(v3 - 40));
  _Unwind_Resume(a1);
}

void sub_22F809644(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,id location)
{
  objc_destroyWeak(v33);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22F809AE4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22F80A144(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 104));
  _Unwind_Resume(a1);
}

void sub_22F80B084(_Unwind_Exception *a1)
{
}

void sub_22F80B320(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22F80B94C(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 88));
  _Unwind_Resume(a1);
}

void sub_22F80BBFC(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_22F80C1AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,id location)
{
  objc_destroyWeak(v39);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22F80DF7C(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 192), 8);
  _Unwind_Resume(a1);
}

void sub_22F8106E0(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)&STACK[0x320]);
  _Unwind_Resume(a1);
}

void sub_22F815088(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __authenticateAcceptedOutgoingInvitation(void *a1, void *a2, void *a3, void *a4, void *a5)
{
  uint64_t v64 = *MEMORY[0x263EF8340];
  id val = a1;
  id v9 = a2;
  id v37 = a3;
  id v36 = a4;
  uint64_t v39 = a5;
  int v10 = [v9 user];
  v38 = [v10 accountHandle];

  if (v38)
  {
    uint64_t v11 = +[HMDAccountRegistry sharedRegistry];
    v41 = [v11 accountForHandle:v37];

    v35 = [MEMORY[0x263EFF9C0] setWithCapacity:2];
    if (!v36 || ([v37 isEqual:v36] & 1) != 0 || (objc_msgSend(v38, "isEqual:", v36) & 1) != 0)
    {
      id v12 = (void *)MEMORY[0x230FBD990]();
      id v13 = val;
      int v14 = HMFGetOSLogHandle();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_INFO))
      {
        id v15 = HMFGetLogIdentifier();
        *(_DWORD *)buf = 138543362;
        *(void *)&uint8_t buf[4] = v15;
        _os_log_impl(&dword_22F52A000, v14, OS_LOG_TYPE_INFO, "%{public}@Preferred handle by the shared user is the same as the handle the invitation was sent to or the response was received from", buf, 0xCu);
      }
    }
    else
    {
      v31 = (void *)MEMORY[0x230FBD990]();
      id v32 = val;
      v33 = HMFGetOSLogHandle();
      if (os_log_type_enabled(v33, OS_LOG_TYPE_INFO))
      {
        v34 = HMFGetLogIdentifier();
        *(_DWORD *)buf = 138543618;
        *(void *)&uint8_t buf[4] = v34;
        *(_WORD *)&buf[12] = 2112;
        *(void *)&buf[14] = v36;
        _os_log_impl(&dword_22F52A000, v33, OS_LOG_TYPE_INFO, "%{public}@Authenticating the preferred handle: %@", buf, 0x16u);
      }
      [v35 addObject:v36];
    }
    if (objc_msgSend(v35, "hmf_isEmpty"))
    {
      int v16 = (void *)MEMORY[0x230FBD990]();
      id v17 = val;
      id v18 = HMFGetOSLogHandle();
      if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
      {
        __int16 v19 = HMFGetLogIdentifier();
        *(_DWORD *)buf = 138543362;
        *(void *)&uint8_t buf[4] = v19;
        _os_log_impl(&dword_22F52A000, v18, OS_LOG_TYPE_DEFAULT, "%{public}@Authenticated invitation without resolving", buf, 0xCu);
      }
      if (v39) {
        v39[2](v39, 0);
      }
    }
    else
    {
      *(void *)buf = 0;
      *(void *)&buf[8] = buf;
      *(void *)&buf[16] = 0x3032000000;
      v61 = __Block_byref_object_copy__14257;
      v62 = __Block_byref_object_dispose__14258;
      id v63 = 0;
      v24 = dispatch_group_create();
      long long v55 = 0u;
      long long v56 = 0u;
      long long v57 = 0u;
      long long v58 = 0u;
      id obj = v35;
      uint64_t v25 = [obj countByEnumeratingWithState:&v55 objects:v59 count:16];
      if (v25)
      {
        uint64_t v26 = *(void *)v56;
        do
        {
          for (uint64_t i = 0; i != v25; ++i)
          {
            if (*(void *)v56 != v26) {
              objc_enumerationMutation(obj);
            }
            uint64_t v28 = *(void *)(*((void *)&v55 + 1) + 8 * i);
            dispatch_group_enter(v24);
            objc_initWeak(&location, val);
            v29 = +[HMDAccountRegistry sharedRegistry];
            v48[0] = MEMORY[0x263EF8330];
            v48[1] = 3221225472;
            v48[2] = ____authenticateAcceptedOutgoingInvitation_block_invoke;
            v48[3] = &unk_264A172A0;
            objc_copyWeak(&v53, &location);
            v49 = v24;
            uint64_t v50 = v28;
            v52 = buf;
            id v51 = v41;
            [v29 _resolveAccountForHandle:v28 completionHandler:v48];

            objc_destroyWeak(&v53);
            objc_destroyWeak(&location);
          }
          uint64_t v25 = [obj countByEnumeratingWithState:&v55 objects:v59 count:16];
        }
        while (v25);
      }

      v30 = [val workQueue];
      block[0] = MEMORY[0x263EF8330];
      block[1] = 3221225472;
      block[2] = ____authenticateAcceptedOutgoingInvitation_block_invoke_5010;
      block[3] = &unk_264A287B0;
      v47 = buf;
      id v45 = val;
      v46 = v39;
      dispatch_group_notify(v24, v30, block);

      _Block_object_dispose(buf, 8);
    }
  }
  else
  {
    long long v20 = (void *)MEMORY[0x230FBD990]();
    id v21 = val;
    v22 = HMFGetOSLogHandle();
    if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR))
    {
      id v23 = HMFGetLogIdentifier();
      *(_DWORD *)buf = 138543362;
      *(void *)&uint8_t buf[4] = v23;
      _os_log_impl(&dword_22F52A000, v22, OS_LOG_TYPE_ERROR, "%{public}@Invalid invitee destination", buf, 0xCu);
    }
    if (v39)
    {
      v42 = [MEMORY[0x263F087E8] hmErrorWithCode:3];
      ((void (**)(id, void *))v39)[2](v39, v42);
    }
  }
}

void sub_22F818994(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,id location)
{
  _Block_object_dispose((const void *)(v34 - 176), 8);
  _Unwind_Resume(a1);
}

void ____authenticateAcceptedOutgoingInvitation_block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 64));
  uint64_t v8 = WeakRetained;
  if (WeakRetained)
  {
    id v9 = [WeakRetained workQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = ____authenticateAcceptedOutgoingInvitation_block_invoke_2;
    block[3] = &unk_264A2A298;
    id v13 = v6;
    id v10 = v8;
    uint64_t v11 = *(void *)(a1 + 40);
    id v14 = v10;
    uint64_t v15 = v11;
    uint64_t v19 = *(void *)(a1 + 56);
    id v16 = v5;
    id v17 = *(id *)(a1 + 48);
    id v18 = *(id *)(a1 + 32);
    dispatch_async(v9, block);
  }
  else
  {
    dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
  }
}

uint64_t ____authenticateAcceptedOutgoingInvitation_block_invoke_5010(uint64_t a1)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t v2 = *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40);
  uint64_t v3 = (void *)MEMORY[0x230FBD990]();
  id v4 = *(id *)(a1 + 32);
  id v5 = HMFGetOSLogHandle();
  id v6 = v5;
  if (v2)
  {
    if (!os_log_type_enabled(v5, OS_LOG_TYPE_ERROR)) {
      goto LABEL_7;
    }
    id v7 = HMFGetLogIdentifier();
    int v12 = 138543362;
    id v13 = v7;
    uint64_t v8 = "%{public}@Failed to authenticate invitation";
    id v9 = v6;
    os_log_type_t v10 = OS_LOG_TYPE_ERROR;
  }
  else
  {
    if (!os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT)) {
      goto LABEL_7;
    }
    id v7 = HMFGetLogIdentifier();
    int v12 = 138543362;
    id v13 = v7;
    uint64_t v8 = "%{public}@Authenticated invitation after resolving";
    id v9 = v6;
    os_log_type_t v10 = OS_LOG_TYPE_DEFAULT;
  }
  _os_log_impl(&dword_22F52A000, v9, v10, v8, (uint8_t *)&v12, 0xCu);

LABEL_7:
  uint64_t result = *(void *)(a1 + 40);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void))(result + 16))(result, *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40));
  }
  return result;
}

void ____authenticateAcceptedOutgoingInvitation_block_invoke_2(uint64_t a1)
{
  uint64_t v30 = *MEMORY[0x263EF8340];
  if (*(void *)(a1 + 32))
  {
    uint64_t v2 = (void *)MEMORY[0x230FBD990]();
    id v3 = *(id *)(a1 + 40);
    id v4 = HMFGetOSLogHandle();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    {
      id v5 = HMFGetLogIdentifier();
      id v6 = [*(id *)(a1 + 48) shortDescription];
      id v7 = *(void **)(*(void *)(*(void *)(a1 + 80) + 8) + 40);
      int v24 = 138543874;
      uint64_t v25 = v5;
      __int16 v26 = 2112;
      v27 = v6;
      __int16 v28 = 2112;
      v29 = v7;
      _os_log_impl(&dword_22F52A000, v4, OS_LOG_TYPE_ERROR, "%{public}@Failed to resolve handle, %@, with error: %@", (uint8_t *)&v24, 0x20u);
    }
    uint64_t v8 = *(void *)(*(void *)(a1 + 80) + 8);
    uint64_t v10 = *(void *)(v8 + 40);
    id v9 = (id *)(v8 + 40);
    if (!v10) {
      objc_storeStrong(v9, *(id *)(a1 + 32));
    }
  }
  else
  {
    char v11 = [*(id *)(a1 + 56) isEqual:*(void *)(a1 + 64)];
    int v12 = (void *)MEMORY[0x230FBD990]();
    id v13 = *(id *)(a1 + 40);
    uint64_t v14 = HMFGetOSLogHandle();
    uint64_t v15 = v14;
    if (v11)
    {
      if (os_log_type_enabled(v14, OS_LOG_TYPE_INFO))
      {
        id v16 = HMFGetLogIdentifier();
        id v17 = [*(id *)(a1 + 48) shortDescription];
        int v24 = 138543618;
        uint64_t v25 = v16;
        __int16 v26 = 2112;
        v27 = v17;
        _os_log_impl(&dword_22F52A000, v15, OS_LOG_TYPE_INFO, "%{public}@Authenticated handle: %@", (uint8_t *)&v24, 0x16u);
      }
    }
    else
    {
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        id v18 = HMFGetLogIdentifier();
        uint64_t v19 = [*(id *)(a1 + 64) shortDescription];
        long long v20 = [*(id *)(a1 + 56) shortDescription];
        int v24 = 138543874;
        uint64_t v25 = v18;
        __int16 v26 = 2112;
        v27 = v19;
        __int16 v28 = 2112;
        v29 = v20;
        _os_log_impl(&dword_22F52A000, v15, OS_LOG_TYPE_ERROR, "%{public}@Invitation response received from account, %@, expected: %@", (uint8_t *)&v24, 0x20u);
      }
      if (!*(void *)(*(void *)(*(void *)(a1 + 80) + 8) + 40))
      {
        uint64_t v21 = [MEMORY[0x263F087E8] hmErrorWithCode:55];
        uint64_t v22 = *(void *)(*(void *)(a1 + 80) + 8);
        id v23 = *(void **)(v22 + 40);
        *(void *)(v22 + 40) = v21;
      }
    }
  }
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 72));
}

void sub_22F819D28(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id *a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,char a51,id location,char a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,char a61)
{
  objc_destroyWeak(v61);
  _HMFThreadLocalAsyncContextPop();
  objc_destroyWeak(&location);
  _Block_object_dispose(&a53, 8);
  _Unwind_Resume(a1);
}

void sub_22F81A180(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_22F81CA94(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id *location, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,id *a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,id a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,id a60)
{
  objc_destroyWeak(v60);
  objc_destroyWeak(location);
  objc_destroyWeak(&a60);
  objc_destroyWeak(a22);
  objc_destroyWeak(&a45);
  _Unwind_Resume(a1);
}

void sub_22F81DD04(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22F81F0E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_22F81F898(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_22F8217E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_22F82521C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id *location, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,id a49)
{
}

void sub_22F825D0C(_Unwind_Exception *a1)
{
}

void sub_22F826908(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,char a35,id location)
{
}

void sub_22F826F0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,char a33)
{
}

void sub_22F827EA0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location, id a17)
{
  objc_destroyWeak(v18);
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  objc_destroyWeak(&a17);
  _Unwind_Resume(a1);
}

void sub_22F82AC34(_Unwind_Exception *a1)
{
}

void sub_22F82B020(_Unwind_Exception *a1)
{
}

void sub_22F82B12C(_Unwind_Exception *a1)
{
}

void sub_22F82B1D4(_Unwind_Exception *a1)
{
}

void sub_22F82DA80(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22F82F668(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, id *location)
{
  objc_destroyWeak(location);
  objc_destroyWeak((id *)(v11 - 152));
  _Unwind_Resume(a1);
}

void sub_22F8301F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22F833C74(_Unwind_Exception *a1)
{
}

void sub_22F835580(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,char a42)
{
}

void sub_22F8358D4(_Unwind_Exception *a1)
{
}

void sub_22F83A3E8(_Unwind_Exception *a1)
{
}

void sub_22F83AE3C(_Unwind_Exception *a1)
{
}

void sub_22F83B318(_Unwind_Exception *a1)
{
}

void sub_22F83B738(_Unwind_Exception *a1)
{
}

void sub_22F83B918(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_22F83C3E8(_Unwind_Exception *a1)
{
}

void sub_22F83C70C(_Unwind_Exception *a1)
{
}

void __handleAccessoryReachabilityRegistration(void *a1, void *a2, int a3)
{
  uint64_t v124 = *MEMORY[0x263EF8340];
  id v5 = a1;
  id v6 = a2;
  if (![v6 isRemote] || (objc_msgSend(v6, "isSecureRemote") & 1) != 0)
  {
    uint64_t v7 = [v6 stringForKey:@"kHomeUUID"];
    uint64_t v8 = [v5 uuid];
    id v9 = [v8 UUIDString];
    v91 = (void (**)(void, void, void))v7;
    LOBYTE(v7) = [(id)v7 isEqualToString:v9];

    if (v7)
    {
      v92 = 0;
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x230FBD990]();
      id v11 = v5;
      int v12 = HMFGetOSLogHandle();
      if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
      {
        HMFGetLogIdentifier();
        v14 = id v13 = v5;
        uint64_t v15 = [v11 uuid];
        [v15 UUIDString];
        id v17 = v16 = v6;
        *(_DWORD *)buf = 138543874;
        v119 = v14;
        __int16 v120 = 2112;
        id v121 = v91;
        __int16 v122 = 2112;
        v123 = v17;
        _os_log_impl(&dword_22F52A000, v12, OS_LOG_TYPE_INFO, "%{public}@Home does not match, received: %@, current: %@", buf, 0x20u);

        id v6 = v16;
        id v5 = v13;
      }

      v92 = [MEMORY[0x263F087E8] errorWithDomain:*MEMORY[0x263F0C710] code:2 userInfo:0];
    }
    id v18 = [v6 responseHandler];

    if (v18)
    {
      uint64_t v19 = [v6 responseHandler];
      ((void (**)(void, void *, void))v19)[2](v19, v92, 0);
    }
    long long v20 = (void *)MEMORY[0x230FBD990]();
    id v21 = v5;
    uint64_t v22 = HMFGetOSLogHandle();
    if (os_log_type_enabled(v22, OS_LOG_TYPE_INFO))
    {
      id v23 = HMFGetLogIdentifier();
      *(_DWORD *)buf = 138543618;
      v119 = v23;
      __int16 v120 = 2112;
      id v121 = v21;
      _os_log_impl(&dword_22F52A000, v22, OS_LOG_TYPE_INFO, "%{public}@Registering for remote reachability for home: %@", buf, 0x16u);
    }
    int v24 = [v6 remoteSourceID];
    uint64_t v25 = +[HMDDevice deviceWithDestination:v24];
    __int16 v26 = (void *)v25;
    if (a3)
    {
      v89 = v24;
      v90 = (void *)v25;
      id v86 = v6;
      id v87 = v5;
      v27 = [v6 messagePayload];
      objc_msgSend(v27, "hmf_arrayForKey:", @"kAccessoriesListKey");
      id v28 = (id)objc_claimAutoreleasedReturnValue();

      if (!v28)
      {
        v29 = (void *)MEMORY[0x263EFF980];
        uint64_t v30 = [v21 accessories];
        v31 = objc_msgSend(v29, "arrayWithCapacity:", objc_msgSend(v30, "count"));

        long long v109 = 0u;
        long long v110 = 0u;
        long long v107 = 0u;
        long long v108 = 0u;
        id v32 = [v21 accessories];
        v33 = (void *)[v32 copy];

        uint64_t v34 = [v33 countByEnumeratingWithState:&v107 objects:v117 count:16];
        if (v34)
        {
          uint64_t v35 = v34;
          uint64_t v36 = *(void *)v108;
          do
          {
            for (uint64_t i = 0; i != v35; ++i)
            {
              if (*(void *)v108 != v36) {
                objc_enumerationMutation(v33);
              }
              v38 = [*(id *)(*((void *)&v107 + 1) + 8 * i) uuid];
              uint64_t v39 = [v38 UUIDString];
              [v31 addObject:v39];
            }
            uint64_t v35 = [v33 countByEnumeratingWithState:&v107 objects:v117 count:16];
          }
          while (v35);
        }

        id v28 = v31;
        v40 = (void *)MEMORY[0x230FBD990]();
        id v41 = v21;
        v42 = HMFGetOSLogHandle();
        if (os_log_type_enabled(v42, OS_LOG_TYPE_INFO))
        {
          v43 = HMFGetLogIdentifier();
          *(_DWORD *)buf = 138543618;
          v119 = v43;
          __int16 v120 = 2112;
          id v121 = v28;
          _os_log_impl(&dword_22F52A000, v42, OS_LOG_TYPE_INFO, "%{public}@Registering for reachability notification for all accessories: %@", buf, 0x16u);
        }
      }
      v88 = [v21 homeManager];
      v95 = objc_msgSend(MEMORY[0x263EFF980], "arrayWithCapacity:", objc_msgSend(v28, "count"));
      long long v103 = 0u;
      long long v104 = 0u;
      long long v105 = 0u;
      long long v106 = 0u;
      id obj = v28;
      uint64_t v98 = [obj countByEnumeratingWithState:&v103 objects:v116 count:16];
      if (v98)
      {
        uint64_t v97 = *(void *)v104;
        id v93 = v21;
        do
        {
          for (uint64_t j = 0; j != v98; ++j)
          {
            if (*(void *)v104 != v97) {
              objc_enumerationMutation(obj);
            }
            id v45 = (void *)[objc_alloc(MEMORY[0x263F08C38]) initWithUUIDString:*(void *)(*((void *)&v103 + 1) + 8 * j)];
            if (v45)
            {
              long long v101 = 0u;
              long long v102 = 0u;
              long long v99 = 0u;
              long long v100 = 0u;
              v46 = [v21 accessories];
              v47 = (void *)[v46 copy];

              uint64_t v48 = [v47 countByEnumeratingWithState:&v99 objects:v115 count:16];
              if (v48)
              {
                uint64_t v49 = v48;
                uint64_t v50 = *(void *)v100;
                while (2)
                {
                  for (uint64_t k = 0; k != v49; ++k)
                  {
                    if (*(void *)v100 != v50) {
                      objc_enumerationMutation(v47);
                    }
                    v52 = *(void **)(*((void *)&v99 + 1) + 8 * k);
                    id v53 = [v52 uuid];
                    int v54 = [v53 isEqual:v45];

                    if (v54)
                    {
                      uint64_t v55 = [v52 isReachable];
                      long long v56 = (void *)MEMORY[0x230FBD990]();
                      id v57 = v21;
                      long long v58 = HMFGetOSLogHandle();
                      if (os_log_type_enabled(v58, OS_LOG_TYPE_INFO))
                      {
                        HMFGetLogIdentifier();
                        v59 = v94 = v56;
                        v60 = [v52 uuid];
                        v61 = [v60 UUIDString];
                        *(_DWORD *)buf = 138543874;
                        v119 = v59;
                        __int16 v120 = 2112;
                        id v121 = v61;
                        __int16 v122 = 1024;
                        LODWORD(v123) = v55;
                        _os_log_impl(&dword_22F52A000, v58, OS_LOG_TYPE_INFO, "%{public}@Updating reachability for accessory: %@ to: %d", buf, 0x1Cu);

                        id v21 = v93;
                        long long v56 = v94;
                      }

                      v62 = [v52 uuid];
                      id v63 = [v62 UUIDString];
                      v113 = v63;
                      uint64_t v64 = [NSNumber numberWithBool:v55];
                      v114 = v64;
                      v65 = [NSDictionary dictionaryWithObjects:&v114 forKeys:&v113 count:1];
                      [v95 addObject:v65];

                      goto LABEL_42;
                    }
                  }
                  uint64_t v49 = [v47 countByEnumeratingWithState:&v99 objects:v115 count:16];
                  if (v49) {
                    continue;
                  }
                  break;
                }
              }
LABEL_42:
            }
          }
          uint64_t v98 = [obj countByEnumeratingWithState:&v103 objects:v116 count:16];
        }
        while (v98);
      }

      id v6 = v86;
      int v24 = v89;
      if (v89 && v90)
      {
        v66 = (void *)MEMORY[0x230FBD990]([v21 _registerDeviceForReachabilityNotification:v90 accessoryList:obj]);
        id v67 = v21;
        v68 = HMFGetOSLogHandle();
        if (os_log_type_enabled(v68, OS_LOG_TYPE_INFO))
        {
          v69 = HMFGetLogIdentifier();
          *(_DWORD *)buf = 138543618;
          v119 = v69;
          __int16 v120 = 2112;
          id v121 = v89;
          _os_log_impl(&dword_22F52A000, v68, OS_LOG_TYPE_INFO, "%{public}@Sending current reachability to destination:%@", buf, 0x16u);
        }
        v111[0] = @"kAccessoriesListKey";
        v70 = (void *)[v95 copy];
        v111[1] = @"kHomeUUID";
        v112[0] = v70;
        v71 = [v67 uuid];
        v72 = [v71 UUIDString];
        v112[1] = v72;
        v73 = [NSDictionary dictionaryWithObjects:v112 forKeys:v111 count:2];

        v74 = +[HMDRemoteMessage messageWithName:@"kRemoteReachabilityChangedNotificationKey" identifier:0 messagePayload:v73];
        v75 = [v88 messageDispatcher];
        v76 = [v67 uuid];
        v77 = [v90 remoteDestinationString];
        v78 = [v67 workQueue];
        [v75 sendSecureMessage:v74 target:v76 userID:0 destination:v77 responseQueue:v78 responseHandler:0];

        int v24 = v89;
      }

      id v5 = v87;
      __int16 v26 = v90;
    }
    else
    {
      [v21 _deregisterDeviceForReachabilityNotification:v25];
    }

    v79 = v91;
    goto LABEL_53;
  }
  v80 = (void *)MEMORY[0x230FBD990]();
  id v81 = v5;
  v82 = HMFGetOSLogHandle();
  if (os_log_type_enabled(v82, OS_LOG_TYPE_DEFAULT))
  {
    v83 = HMFGetLogIdentifier();
    *(_DWORD *)buf = 138543618;
    v119 = v83;
    __int16 v120 = 2112;
    id v121 = v6;
    _os_log_impl(&dword_22F52A000, v82, OS_LOG_TYPE_DEFAULT, "%{public}@Message not supported: %@", buf, 0x16u);
  }
  v84 = [v6 responseHandler];

  if (v84)
  {
    uint64_t v85 = [MEMORY[0x263F087E8] hmErrorWithCode:17];
    v79 = [v6 responseHandler];
    v92 = (void *)v85;
    v79[2](v79, v85, 0);
LABEL_53:
  }
}

void sub_22F8403FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,id location)
{
  objc_destroyWeak(v26);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22F8420A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,id location)
{
}

void sub_22F8421D0(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_22F844AD0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
}

void sub_22F8452C8(_Unwind_Exception *a1)
{
}

void sub_22F845EE8(_Unwind_Exception *a1)
{
}

uint64_t ____disassociateAccessoryIfSupported_block_invoke(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_22F84C968(_Unwind_Exception *a1)
{
}

id __createAccessoryBrowserAddAccessoryCompletionHandler(id val, void *a2, void *a3, void *a4, void *a5)
{
  objc_initWeak(&location, val);
  id v9 = a2;
  id v10 = a3;
  id v11 = a4;
  id v12 = a5;
  v19[0] = MEMORY[0x263EF8330];
  v19[1] = 3221225472;
  v19[2] = ____createAccessoryBrowserAddAccessoryCompletionHandler_block_invoke;
  v19[3] = &unk_264A17278;
  id v20 = v9;
  id v21 = v11;
  id v22 = v12;
  id v13 = v12;
  id v14 = v11;
  id v15 = v9;
  objc_copyWeak(&v24, &location);
  id v23 = v10;
  id v16 = v10;
  id v17 = _Block_copy(v19);

  objc_destroyWeak(&v24);
  objc_destroyWeak(&location);
  return v17;
}

void ____createAccessoryBrowserAddAccessoryCompletionHandler_block_invoke(id *a1, void *a2, void *a3, uint64_t a4, unsigned int a5, unsigned int a6, void *a7, void *a8)
{
  uint64_t v91 = *MEMORY[0x263EF8340];
  id v12 = a2;
  id v70 = a3;
  id v13 = a7;
  id v68 = a8;
  id v14 = [a1[4] accessoryUUID];

  if (v70 && !v14) {
    [a1[4] setAccessoryUUID:v70];
  }
  [a1[5] pairedToServer:v12 certificationStatus:a4 addedViaWAC:a5 legacyWAC:a6];
  objc_msgSend(a1[5], "setAuthenticationMethod:", objc_msgSend(v12, "authMethod"));
  id v15 = objc_alloc(MEMORY[0x263F424F0]);
  id v16 = [NSString stringWithFormat:@"%s(), %s:%ld", "HMDAccessoryBrowserAddAccessoryCompletionHandler __createAccessoryBrowserAddAccessoryCompletionHandler(HMDHome *__weak, HMSetupAccessoryDescription *__strong, HMDUnpairedHAPAccessoryConfiguration *__strong, HMDAccessoryPairingEvent *__strong, HMFMessage *__strong)_block_invoke", "/Library/Caches/com.apple.xbs/Sources/HomeKit_executables/Sources/homed/Home/HMDHome.m", 11264];
  id v17 = [a1[6] activity];
  id v80 = (id)[v15 initWithName:v16 parent:v17];

  id WeakRetained = objc_loadWeakRetained(a1 + 8);
  uint64_t v19 = WeakRetained;
  if (!v13 && WeakRetained)
  {
    id v20 = [WeakRetained workQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = ____createAccessoryBrowserAddAccessoryCompletionHandler_block_invoke_4992;
    block[3] = &unk_264A17250;
    id v72 = v80;
    id v73 = v19;
    id v74 = a1[4];
    id v75 = a1[7];
    id v76 = a1[5];
    id v77 = v12;
    uint64_t v79 = a4;
    id v78 = a1[6];
    dispatch_async(v20, block);

    id v21 = 0;
    id v22 = v72;
    goto LABEL_37;
  }
  if (!WeakRetained)
  {
    uint64_t v23 = [MEMORY[0x263F087E8] hmErrorWithCode:2];

    id v13 = (id)v23;
  }
  id v22 = [a1[5] vendorDetailsForReporting];
  id v24 = v13;
  id v21 = v24;
  uint64_t v25 = v24;
  if (v19)
  {
    uint64_t v25 = v24;
    if ([v24 code] == 2010)
    {
      __int16 v26 = [v19 threadNetworkID];

      if (v26) {
        uint64_t v27 = 2009;
      }
      else {
        uint64_t v27 = 2010;
      }
      uint64_t v25 = [MEMORY[0x263F087E8] hmPrivateErrorWithCode:v27];
    }
  }
  id v28 = (void *)MEMORY[0x230FBD990]();
  id v29 = v19;
  HMFGetOSLogHandle();
  uint64_t v30 = (id)objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v30, OS_LOG_TYPE_INFO))
  {
    v31 = HMFGetLogIdentifier();
    *(_DWORD *)buf = 138544386;
    v82 = v31;
    __int16 v83 = 2112;
    id v84 = v70;
    __int16 v85 = 2112;
    id v86 = v21;
    __int16 v87 = 2112;
    v88 = v25;
    __int16 v89 = 2112;
    id v90 = v68;
    _os_log_impl(&dword_22F52A000, v30, OS_LOG_TYPE_INFO, "%{public}@Add accessory completion handler for accessory uuid %@ error %@ mapped error %@ context %@", buf, 0x34u);
  }
  if ([a1[5] isMatterAccessory] && objc_msgSend(a1[5], "isAddOperation"))
  {
    if (!v68)
    {
      context = (void *)MEMORY[0x230FBD990]();
      id v32 = v29;
      HMFGetOSLogHandle();
      v33 = (id)objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v33, OS_LOG_TYPE_ERROR))
      {
        uint64_t v34 = HMFGetLogIdentifier();
        *(_DWORD *)buf = 138543362;
        v82 = v34;
        _os_log_impl(&dword_22F52A000, v33, OS_LOG_TYPE_ERROR, "%{public}@Matter pairing end context is nil", buf, 0xCu);
      }
    }
    if (![v68 isCancelled])
    {
      notifyMatterMetricPairingEnded(v29, v68);
      goto LABEL_29;
    }
    id v35 = v29;
    id v62 = v68;
    contexta = (void *)MEMORY[0x230FBD990]();
    id v36 = v35;
    id v37 = HMFGetOSLogHandle();
    if (os_log_type_enabled(v37, OS_LOG_TYPE_INFO))
    {
      v38 = HMFGetLogIdentifier();
      *(_DWORD *)buf = 138543618;
      v82 = v38;
      __int16 v83 = 2112;
      id v84 = v62;
      _os_log_impl(&dword_22F52A000, v37, OS_LOG_TYPE_INFO, "%{public}@Notifying matter metric pairing cancelled %@", buf, 0x16u);
    }
    contextb = [MEMORY[0x263EFF9A0] dictionary];
    [contextb setObject:MEMORY[0x263EFFA88] forKeyedSubscript:@"HMDMatterAccessoryPairingSubmitKey"];
    uint64_t v39 = [v62 error];
    [contextb setObject:v39 forKeyedSubscript:@"HMDMatterAccessoryPairingFailureErrorKey"];

    v40 = [v62 sourceErrorDomain];
    [contextb setObject:v40 forKeyedSubscript:@"HMDMatterAccessoryPairingSourceErrorDomain"];

    id v41 = [MEMORY[0x263F08A00] defaultCenter];
    v42 = (void *)[contextb copy];
    [v41 postNotificationName:@"HMDMatterAccessoryUpdatePairingMetricNotification" object:0 userInfo:v42];
  }
  else
  {
    id v36 = [v29 logEventSubmitter];
    [v36 submitLogEvent:a1[5] error:v25];
  }

LABEL_29:
  v43 = (void *)MEMORY[0x230FBD990]();
  id v44 = v29;
  HMFGetOSLogHandle();
  id v45 = (id)objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v45, OS_LOG_TYPE_DEBUG))
  {
    v46 = HMFGetLogIdentifier();
    id v47 = a1[4];
    *(_DWORD *)buf = 138543874;
    v82 = v46;
    __int16 v83 = 2112;
    id v84 = v47;
    __int16 v85 = 2112;
    id v86 = v25;
    _os_log_impl(&dword_22F52A000, v45, OS_LOG_TYPE_DEBUG, "%{public}@Failed to add accessory %@ with error: %@", buf, 0x20u);
  }
  id v48 = v80;
  [v12 category];

  [v22 model];
  [v22 manufacturer];

  [v22 firmwareVersion];
  [a1[5] linkType];
  id v49 = (id)HAPLinkTypeDescription();
  id v50 = (id)HMFBooleanToString();
  id v51 = (id)HMFBooleanToString();
  id v52 = (id)[NSNumber numberWithInteger:a4];
  [v25 domain];

  [v25 code];
  [a1[5] isThreadAccessory];
  id v53 = (id)HMFBooleanToString();
  [a1[5] accessorySupportsWoL];
  id v54 = (id)HMFBooleanToString();

  uint64_t v55 = [a1[6] responseHandler];

  if (v55)
  {
    long long v56 = [a1[6] responseHandler];
    ((void (**)(void, void *, void))v56)[2](v56, v25, 0);
  }
  if (v19)
  {
    [v44 _removePendingAccessoryAdd:a1[4]];
    id v57 = [v44 accessoryBrowser];
    [v57 removePairingInformationForAccessoryServer:v12];

    long long v58 = [a1[7] networkCredential];
    v59 = [v58 clientIdentifier];

    if (v59)
    {
      v60 = [a1[7] networkCredential];
      v61 = [v60 clientIdentifier];
      [v44 _removeClientConfigurationWithIdentifier:v61];
    }
  }

LABEL_37:
  __HMFActivityScopeLeave();
}

void sub_22F84D89C(_Unwind_Exception *a1)
{
}

void ____createAccessoryBrowserAddAccessoryCompletionHandler_block_invoke_4992(uint64_t a1)
{
  [*(id *)(a1 + 32) begin];
  id v2 = *(id *)(a1 + 32);
  [*(id *)(a1 + 40) _accessoryPairingDidComplete:*(void *)(a1 + 48) configuration:*(void *)(a1 + 56) pairingEvent:*(void *)(a1 + 64) accessoryServer:*(void *)(a1 + 72) certificationStatus:*(void *)(a1 + 88) requestMessage:*(void *)(a1 + 80)];
  __HMFActivityScopeLeave();
}

void sub_22F84D944(_Unwind_Exception *a1)
{
}

void sub_22F84DFC8(_Unwind_Exception *a1)
{
}

id HMDHomeCreateAddAccessoryProgressHandler(void *a1, void *a2, void *a3)
{
  id v5 = a1;
  id v6 = a2;
  id v7 = a3;
  objc_initWeak(&location, v5);
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 3221225472;
  aBlock[2] = __HMDHomeCreateAddAccessoryProgressHandler_block_invoke;
  aBlock[3] = &unk_264A16500;
  id v14 = v5;
  id v8 = v5;
  objc_copyWeak(&v17, &location);
  id v15 = v6;
  id v16 = v7;
  id v9 = v7;
  id v10 = v6;
  id v11 = _Block_copy(aBlock);

  objc_destroyWeak(&v17);
  objc_destroyWeak(&location);
  return v11;
}

void sub_22F84E4B8(_Unwind_Exception *a1)
{
}

void __HMDHomeCreateAddAccessoryProgressHandler_block_invoke(id *a1, uint64_t a2, void *a3)
{
  uint64_t v80 = *MEMORY[0x263EF8340];
  id v5 = a3;
  id v6 = (void *)MEMORY[0x230FBD990]();
  id v7 = a1[4];
  id v8 = HMFGetOSLogHandle();
  if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
  {
    id v9 = HMFGetLogIdentifier();
    id v10 = HMSetupAccessoryProgressAsString();
    *(_DWORD *)buf = 138543618;
    id v77 = v9;
    __int16 v78 = 2112;
    uint64_t v79 = v10;
    _os_log_impl(&dword_22F52A000, v8, OS_LOG_TYPE_INFO, "%{public}@Progress Handler called with progress: %@", buf, 0x16u);
  }
  id WeakRetained = objc_loadWeakRetained(a1 + 7);
  if (WeakRetained)
  {
    id v12 = [v5 accessoryUUID];
    uint64_t v73 = a2;
    if (v12
      || ([a1[5] addRequestIdentifier],
          id v13 = objc_claimAutoreleasedReturnValue(),
          v13,
          v13))
    {
      v71 = a1;
      id v14 = (void *)MEMORY[0x230FBD990]();
      id v69 = WeakRetained;
      id v15 = WeakRetained;
      id v16 = HMFGetOSLogHandle();
      if (os_log_type_enabled(v16, OS_LOG_TYPE_INFO))
      {
        id v17 = HMFGetLogIdentifier();
        id v18 = HMSetupAccessoryProgressAsString();
        *(_DWORD *)buf = 138543618;
        id v77 = v17;
        __int16 v78 = 2112;
        uint64_t v79 = v18;
        _os_log_impl(&dword_22F52A000, v16, OS_LOG_TYPE_INFO, "%{public}@Posting accessory pairing state progress notification to %@", buf, 0x16u);

        a2 = v73;
      }

      uint64_t v19 = [MEMORY[0x263F08A00] defaultCenter];
      v74[0] = @"HMDSetupAccessoryProgressStateKey";
      id v20 = [NSNumber numberWithInteger:a2];
      v75[0] = v20;
      v74[1] = @"HMDAccessoryProgressStateNotificationKey";
      id v21 = HMSetupAccessoryProgressAsString();
      v75[1] = v21;
      v74[2] = @"HMDAccessoryProgressStateTimeNotificationKey";
      id v22 = [MEMORY[0x263EFF910] date];
      v75[2] = v22;
      v74[3] = @"HMDAccessoryProgressStateforAccessoryKey";
      if (v12)
      {
        [v12 UUIDString];
      }
      else
      {
        id v16 = [v71[5] addRequestIdentifier];
        [v16 UUIDString];
      uint64_t v23 = };
      v75[3] = v23;
      id v24 = [NSDictionary dictionaryWithObjects:v75 forKeys:v74 count:4];
      [v19 postNotificationName:@"HMDAccessoryProgressStateUpdateNotification" object:v15 userInfo:v24];

      if (!v12)
      {

        uint64_t v23 = v16;
      }

      id WeakRetained = v69;
      a1 = v71;
      a2 = v73;
    }
    uint64_t v25 = [MEMORY[0x263EFF9A0] dictionaryWithCapacity:4];
    __int16 v26 = [v5 accessoryName];

    if (v26)
    {
      uint64_t v27 = [v5 accessoryName];
      [v25 setObject:v27 forKeyedSubscript:@"kAccessoryName"];
    }
    id v28 = [v5 accessoryUUID];

    if (v28)
    {
      id v29 = [v5 accessoryUUID];
      uint64_t v30 = [v29 UUIDString];
      [v25 setObject:v30 forKeyedSubscript:@"kAccessoryUUID"];
    }
    v31 = [v5 manufacturerName];

    if (v31)
    {
      id v32 = [v5 manufacturerName];
      [v25 setObject:v32 forKeyedSubscript:@"kAccessoryInfoManufacturerKey"];
    }
    v33 = [v5 category];

    if (v33)
    {
      uint64_t v34 = [v5 category];
      id v35 = encodeRootObjectForIncomingXPCMessage(v34, 0);
      [v25 setObject:v35 forKeyedSubscript:@"kAccessoryCategory"];
    }
    if (a2 == 9)
    {
      id v41 = [WeakRetained wiFiRouterAccessories];
      id v37 = [v41 firstObject];

      if (v37)
      {
        v42 = [v37 uuid];
        v43 = [v42 UUIDString];
        [v25 setObject:v43 forKeyedSubscript:*MEMORY[0x263F0CD90]];

LABEL_41:
LABEL_42:
        id v62 = [NSNumber numberWithInteger:a2];
        [v25 setObject:v62 forKeyedSubscript:@"kAccessorySetupProgressKey"];

        id v63 = objc_msgSend(NSNumber, "numberWithUnsignedInteger:", objc_msgSend(v5, "certificationStatus"));
        [v25 setObject:v63 forKeyedSubscript:@"kAccessoryCertificationStatusKey"];

        uint64_t v64 = (void *)MEMORY[0x263F42590];
        uint64_t v65 = *MEMORY[0x263F0E968];
        v66 = [WeakRetained messageDestination];
        id v37 = [v64 messageWithName:v65 destination:v66 payload:v25];

        id v67 = [a1[6] identifier];
        [v37 setIdentifier:v67];

        [v37 setRequiresSPIEntitlement];
        id v68 = [a1[6] transport];
        [v37 setTransport:v68];

        uint64_t v39 = [WeakRetained msgDispatcher];
        [v39 sendMessage:v37 completionHandler:0];
        goto LABEL_43;
      }
      id v44 = (void *)MEMORY[0x230FBD990]();
      id v45 = WeakRetained;
      v46 = HMFGetOSLogHandle();
      if (os_log_type_enabled(v46, OS_LOG_TYPE_INFO))
      {
        id v47 = HMFGetLogIdentifier();
        id v48 = HMSetupAccessoryProgressAsString();
        *(_DWORD *)buf = 138543618;
        id v77 = v47;
        __int16 v78 = 2112;
        uint64_t v79 = v48;
        _os_log_impl(&dword_22F52A000, v46, OS_LOG_TYPE_INFO, "%{public}@Progress is %@ but no accessory being replaced", buf, 0x16u);
      }
      id v37 = 0;
    }
    else
    {
      if (a2 != 8) {
        goto LABEL_42;
      }
      id v36 = [v5 productData];

      if (!v36) {
        goto LABEL_42;
      }
      id v37 = +[HMDVendorDataManager sharedVendorDataManager];
      v38 = [v5 productData];
      uint64_t v39 = [v37 vendorModelEntryForProductData:v38];

      v40 = [a1[5] addRequestIdentifier];
      if (v40)
      {

LABEL_43:
        goto LABEL_44;
      }
      id v49 = [a1[5] appIdentifier];
      id v50 = [v39 appBundleID];
      char v51 = [v49 isEqual:v50];

      if (v51) {
        goto LABEL_43;
      }
      uint64_t v52 = [v39 appStoreID];
      if (v52
        && (id v53 = (void *)v52,
            [v39 appBundleID],
            id v54 = objc_claimAutoreleasedReturnValue(),
            v54,
            v53,
            v54))
      {
        uint64_t v55 = [v39 appStoreID];
        [v25 setObject:v55 forKeyedSubscript:@"kAccessoryVendorInfoStoreIDKey"];

        long long v56 = [v39 appBundleID];
        [v25 setObject:v56 forKeyedSubscript:@"kAccessoryVendorInfoBundleIDKey"];
      }
      else
      {
        id v72 = a1;
        id v57 = (void *)MEMORY[0x230FBD990]();
        id v70 = WeakRetained;
        id v58 = WeakRetained;
        v59 = HMFGetOSLogHandle();
        if (os_log_type_enabled(v59, OS_LOG_TYPE_DEBUG))
        {
          v60 = HMFGetLogIdentifier();
          v61 = [v5 productData];
          *(_DWORD *)buf = 138543618;
          id v77 = v60;
          __int16 v78 = 2112;
          uint64_t v79 = v61;
          _os_log_impl(&dword_22F52A000, v59, OS_LOG_TYPE_DEBUG, "%{public}@No appID/bundleID found for productData: %@", buf, 0x16u);
        }
        id WeakRetained = v70;
        a1 = v72;
      }
    }
    a2 = v73;
    goto LABEL_41;
  }
LABEL_44:
}

void sub_22F84F640(_Unwind_Exception *a1)
{
}

void sub_22F84FAA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
}

void sub_22F850868(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,id location)
{
}

void sub_22F852240(_Unwind_Exception *a1)
{
}

void sub_22F852548(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,id location)
{
  objc_destroyWeak(v23);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22F85368C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,id location)
{
}

void sub_22F853E48(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
}

void sub_22F854458(_Unwind_Exception *a1)
{
}

void sub_22F854DDC(_Unwind_Exception *a1)
{
}

void sub_22F856760(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22F856CC8(_Unwind_Exception *a1)
{
}

void sub_22F8573E8(_Unwind_Exception *a1)
{
}

uint64_t _mediaSystemsContainsAccessory(void *a1, void *a2)
{
  id v3 = a2;
  v7[0] = MEMORY[0x263EF8330];
  v7[1] = 3221225472;
  v7[2] = ___mediaSystemsContainsAccessory_block_invoke;
  v7[3] = &unk_264A1BB98;
  id v8 = v3;
  id v4 = v3;
  uint64_t v5 = objc_msgSend(a1, "na_any:", v7);

  return v5;
}

uint64_t ___mediaSystemsContainsAccessory_block_invoke(uint64_t a1, void *a2)
{
  return _mediaSystemContainsAccessory(a2, *(void **)(a1 + 32));
}

uint64_t _mediaSystemContainsAccessory(void *a1, void *a2)
{
  id v3 = a2;
  id v4 = [a1 components];
  v8[0] = MEMORY[0x263EF8330];
  v8[1] = 3221225472;
  v8[2] = ___mediaSystemContainsAccessory_block_invoke;
  void v8[3] = &unk_264A17228;
  id v9 = v3;
  id v5 = v3;
  uint64_t v6 = objc_msgSend(v4, "na_any:", v8);

  return v6;
}

uint64_t ___mediaSystemContainsAccessory_block_invoke(uint64_t a1, void *a2)
{
  id v3 = [a2 accessory];
  id v4 = [v3 uuid];
  id v5 = [*(id *)(a1 + 32) uuid];
  uint64_t v6 = objc_msgSend(v4, "hmf_isEqualToUUID:", v5);

  return v6;
}

void sub_22F859964(_Unwind_Exception *a1)
{
}

void sub_22F859BD0(_Unwind_Exception *a1)
{
}

void sub_22F864878(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22F865694(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22F868898(_Unwind_Exception *a1)
{
}

void sub_22F869A18(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_22F869F0C(_Unwind_Exception *a1)
{
}

void sub_22F869F98(_Unwind_Exception *a1)
{
}

void sub_22F86A084(_Unwind_Exception *a1)
{
}

void sub_22F86CD94(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,id location)
{
  objc_destroyWeak(v23);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22F878E04(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,id *location,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,id a52)
{
}

void sub_22F87AC34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
}

void sub_22F87AED0(_Unwind_Exception *a1)
{
}

void sub_22F87C8BC(_Unwind_Exception *a1)
{
}

void sub_22F87C938(_Unwind_Exception *a1)
{
}

void sub_22F87C9B4(_Unwind_Exception *a1)
{
}

void sub_22F87CA30(_Unwind_Exception *a1)
{
}

void sub_22F87CAD4(_Unwind_Exception *a1)
{
}

void sub_22F87CB78(_Unwind_Exception *a1)
{
}

void sub_22F87CBF4(_Unwind_Exception *a1)
{
}

void sub_22F87CCE4(_Unwind_Exception *a1)
{
}

void sub_22F87CE58(_Unwind_Exception *exception_object)
{
}

void sub_22F87CFB8(_Unwind_Exception *a1)
{
}

void sub_22F8800EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,id *location,id *a44,uint64_t a45,uint64_t a46)
{
  if (!a46) {
    objc_destroyWeak(location);
  }
  objc_destroyWeak(a44);
  objc_destroyWeak((id *)(v46 - 168));
  _Unwind_Resume(a1);
}

void __notifyRegisteredIdentityRemoved(void *a1, void *a2)
{
  uint64_t v28 = *MEMORY[0x263EF8340];
  id v3 = a1;
  id v4 = a2;
  id v5 = v4;
  if (v3 && v4)
  {
    uint64_t v6 = (void *)MEMORY[0x230FBD990]();
    id v7 = v3;
    id v8 = HMFGetOSLogHandle();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEBUG))
    {
      id v9 = HMFGetLogIdentifier();
      int v24 = 138543618;
      uint64_t v25 = v9;
      __int16 v26 = 2112;
      uint64_t v27 = v5;
      _os_log_impl(&dword_22F52A000, v8, OS_LOG_TYPE_DEBUG, "%{public}@Notifying of removed identity: %@", (uint8_t *)&v24, 0x16u);
    }
    id v10 = [MEMORY[0x263EFF9A0] dictionaryWithCapacity:3];
    id v11 = [v5 identity];
    [v10 setObject:v11 forKeyedSubscript:@"HMDIdentityNotificationKey"];

    id v12 = v5;
    objc_opt_class();
    char isKindOfClass = objc_opt_isKindOfClass();
    if (isKindOfClass) {
      id v14 = v12;
    }
    else {
      id v14 = 0;
    }
    id v15 = v14;

    if (isKindOfClass)
    {
      id v16 = [v12 device];
      [v10 setObject:v16 forKeyedSubscript:@"HMDDeviceNotificationKey"];
    }
    id v17 = v12;
    objc_opt_class();
    char v18 = objc_opt_isKindOfClass();
    if (v18) {
      uint64_t v19 = v17;
    }
    else {
      uint64_t v19 = 0;
    }
    id v20 = v19;

    if (v18)
    {
      id v21 = [v17 account];
      [v10 setObject:v21 forKeyedSubscript:@"HMDAccountNotificationKey"];
    }
    id v22 = [MEMORY[0x263F08A00] defaultCenter];
    uint64_t v23 = (void *)[v10 copy];
    [v22 postNotificationName:@"HMDIdentityRegistryRemovedIdentity" object:v7 userInfo:v23];
  }
}

void __removeRegisteredObjectForRegisteredIdentity(void *a1, void *a2, void *a3)
{
  id v5 = a1;
  id v6 = a2;
  id v7 = a3;
  id v8 = v7;
  if (v5 && v6 && v7)
  {
    id v9 = [v5 lock];
    v10[0] = MEMORY[0x263EF8330];
    v10[1] = 3221225472;
    v10[2] = ____removeRegisteredObjectForRegisteredIdentity_block_invoke;
    v10[3] = &unk_264A2F2F8;
    id v11 = v6;
    id v12 = v8;
    id v13 = v5;
    [v9 performBlock:v10];
  }
}

void ____removeRegisteredObjectForRegisteredIdentity_block_invoke(uint64_t a1)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  id v2 = [*(id *)(a1 + 32) registeredObjects];
  [v2 removeObject:*(void *)(a1 + 40)];

  id v3 = [*(id *)(a1 + 32) registeredObjects];
  int v4 = objc_msgSend(v3, "hmf_isEmpty");

  if (v4)
  {
    id v5 = (void *)MEMORY[0x230FBD990]();
    id v6 = *(id *)(a1 + 48);
    id v7 = HMFGetOSLogHandle();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
    {
      id v8 = HMFGetLogIdentifier();
      uint64_t v9 = *(void *)(a1 + 32);
      int v10 = 138543618;
      id v11 = v8;
      __int16 v12 = 2112;
      uint64_t v13 = v9;
      _os_log_impl(&dword_22F52A000, v7, OS_LOG_TYPE_INFO, "%{public}@Removing registered identity, %@", (uint8_t *)&v10, 0x16u);
    }
    [*(id *)(*(void *)(a1 + 48) + 8) removeObject:*(void *)(a1 + 32)];
    __notifyRegisteredIdentityRemoved(*(void **)(a1 + 48), *(void **)(a1 + 32));
  }
}

id __registeredIdentitiesForIdentity(void *a1, void *a2)
{
  uint64_t v22 = *MEMORY[0x263EF8340];
  id v3 = a1;
  id v4 = a2;
  id v5 = v4;
  id v6 = 0;
  if (v3 && v4)
  {
    id v7 = [MEMORY[0x263EFF980] array];
    long long v17 = 0u;
    long long v18 = 0u;
    long long v19 = 0u;
    long long v20 = 0u;
    id v8 = v3[1];
    uint64_t v9 = [v8 countByEnumeratingWithState:&v17 objects:v21 count:16];
    if (v9)
    {
      uint64_t v10 = v9;
      uint64_t v11 = *(void *)v18;
      do
      {
        for (uint64_t i = 0; i != v10; ++i)
        {
          if (*(void *)v18 != v11) {
            objc_enumerationMutation(v8);
          }
          uint64_t v13 = *(void **)(*((void *)&v17 + 1) + 8 * i);
          uint64_t v14 = objc_msgSend(v13, "identity", (void)v17);
          int v15 = [v14 isEqual:v5];

          if (v15) {
            [v7 addObject:v13];
          }
        }
        uint64_t v10 = [v8 countByEnumeratingWithState:&v17 objects:v21 count:16];
      }
      while (v10);
    }

    id v6 = (void *)[v7 copy];
  }

  return v6;
}

void __notifyRegisteredIdentityAdded(void *a1, void *a2)
{
  uint64_t v28 = *MEMORY[0x263EF8340];
  id v3 = a1;
  id v4 = a2;
  id v5 = v4;
  if (v3 && v4)
  {
    id v6 = (void *)MEMORY[0x230FBD990]();
    id v7 = v3;
    id v8 = HMFGetOSLogHandle();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v9 = HMFGetLogIdentifier();
      int v24 = 138543618;
      uint64_t v25 = v9;
      __int16 v26 = 2112;
      uint64_t v27 = v5;
      _os_log_impl(&dword_22F52A000, v8, OS_LOG_TYPE_DEBUG, "%{public}@Notifying of added identity: %@", (uint8_t *)&v24, 0x16u);
    }
    uint64_t v10 = [MEMORY[0x263EFF9A0] dictionaryWithCapacity:3];
    uint64_t v11 = [v5 identity];
    [v10 setObject:v11 forKeyedSubscript:@"HMDIdentityNotificationKey"];

    id v12 = v5;
    objc_opt_class();
    char isKindOfClass = objc_opt_isKindOfClass();
    if (isKindOfClass) {
      uint64_t v14 = v12;
    }
    else {
      uint64_t v14 = 0;
    }
    id v15 = v14;

    if (isKindOfClass)
    {
      id v16 = [v12 device];
      [v10 setObject:v16 forKeyedSubscript:@"HMDDeviceNotificationKey"];
    }
    id v17 = v12;
    objc_opt_class();
    char v18 = objc_opt_isKindOfClass();
    if (v18) {
      long long v19 = v17;
    }
    else {
      long long v19 = 0;
    }
    id v20 = v19;

    if (v18)
    {
      id v21 = [v17 account];
      [v10 setObject:v21 forKeyedSubscript:@"HMDAccountNotificationKey"];
    }
    uint64_t v22 = [MEMORY[0x263F08A00] defaultCenter];
    uint64_t v23 = (void *)[v10 copy];
    [v22 postNotificationName:@"HMDIdentityRegistryAddedIdentity" object:v7 userInfo:v23];
  }
}

void __registerObjectForRegisteredIdentity(void *a1, void *a2, void *a3)
{
  id v5 = a1;
  id v6 = a2;
  id v7 = a3;
  id v8 = v7;
  if (v5 && v6 && v7)
  {
    uint64_t v9 = (void *)MEMORY[0x230FBD990]();
    uint64_t v10 = [v6 registeredObjects];
    char v11 = [v10 containsObject:v8];

    if ((v11 & 1) == 0)
    {
      objc_initWeak(&location, v5);
      objc_initWeak(&v22, v8);
      objc_initWeak(&from, v6);
      uint64_t v14 = MEMORY[0x263EF8330];
      uint64_t v15 = 3221225472;
      id v16 = ____registerObjectForRegisteredIdentity_block_invoke;
      id v17 = &unk_264A25168;
      objc_copyWeak(&v18, &location);
      objc_copyWeak(&v19, &from);
      objc_copyWeak(&v20, &v22);
      [v8 setDeallocationBlock:&v14];
      id v12 = objc_msgSend(v8, "observedObject", v14, v15, v16, v17);

      if (v12)
      {
        uint64_t v13 = [v6 registeredObjects];
        [v13 addObject:v8];
      }
      else
      {
        __removeRegisteredObjectForRegisteredIdentity(v5, v6, v8);
      }
      objc_destroyWeak(&v20);
      objc_destroyWeak(&v19);
      objc_destroyWeak(&v18);
      objc_destroyWeak(&from);
      objc_destroyWeak(&v22);
      objc_destroyWeak(&location);
    }
  }
}

void sub_22F887BC4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location, id a17, id a18)
{
  objc_destroyWeak(v20);
  objc_destroyWeak(v19);
  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  objc_destroyWeak(&a17);
  objc_destroyWeak(&a18);
  _Unwind_Resume(a1);
}

void ____registerObjectForRegisteredIdentity_block_invoke(id *a1)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  id WeakRetained = objc_loadWeakRetained(a1 + 4);
  id v3 = objc_loadWeakRetained(a1 + 5);
  id v4 = objc_loadWeakRetained(a1 + 6);
  id v5 = v4;
  if (WeakRetained && v3 && v4)
  {
    id v6 = (void *)MEMORY[0x230FBD990]();
    id v7 = WeakRetained;
    id v8 = HMFGetOSLogHandle();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v9 = HMFGetLogIdentifier();
      int v10 = 138543618;
      char v11 = v9;
      __int16 v12 = 2112;
      id v13 = v3;
      _os_log_impl(&dword_22F52A000, v8, OS_LOG_TYPE_DEBUG, "%{public}@Registered object deallocated, removing object from identity: %@", (uint8_t *)&v10, 0x16u);
    }
    __removeRegisteredObjectForRegisteredIdentity(v7, v3, v5);
  }
}

void sub_22F8882F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__15121(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__15122(uint64_t a1)
{
}

void sub_22F888668(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_22F888990(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_22F888CD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_22F889250(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_22F8895C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_22F88AFB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id toManyRelationship(void *a1, void *a2)
{
  id v2 = objectValue(a1, 2, a2);
  id v3 = v2;
  if (v2) {
    id v4 = v2;
  }

  return v3;
}

id objectValue(void *a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  id v6 = [a1 objectAtIndexedSubscript:a2];
  id v7 = [v6 objectForKeyedSubscript:v5];

  return v7;
}

void pruneArrayOfRefs(void *a1, void *a2)
{
  id v10 = a1;
  id v3 = a2;
  uint64_t v4 = [v10 count];
  if (v4)
  {
    unint64_t v5 = v4;
    unint64_t v6 = 0;
    do
    {
      id v7 = [v10 objectAtIndexedSubscript:v6];
      id v8 = [v7 objectForKeyedSubscript:@"modelID"];
      char v9 = [v3 containsObject:v8];

      if (v9)
      {
        [v10 removeObjectAtIndex:v6];
        --v5;
      }
      else
      {
        ++v6;
      }
    }
    while (v6 < v5);
  }
}

void sub_22F891E48(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22F891EE0(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22F891F90(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22F892924(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22F8929A8(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22F892BC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__16777(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__16778(uint64_t a1)
{
}

void sub_22F8939EC(_Unwind_Exception *a1)
{
}

void sub_22F8941A0(_Unwind_Exception *a1)
{
}

void sub_22F89440C(_Unwind_Exception *a1)
{
}

void sub_22F89D460(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_22F89E328(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22F89E3E8(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22F89E47C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22F89E524(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22F89E89C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22F89F5CC(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22F8A0E24(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22F8A1170(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22F8A2968(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,id location)
{
  objc_destroyWeak(v31);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22F8A2B7C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22F8A3150(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22F8A34A4(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22F8A3728(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22F8A53A8(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22F8A60E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22F8A8FD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__18629(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__18630(uint64_t a1)
{
}

void sub_22F8AD03C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id *location, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,id a28)
{
}

void sub_22F8ADC50(_Unwind_Exception *a1)
{
}

uint64_t __Block_byref_object_copy__19249(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__19250(uint64_t a1)
{
}

void sub_22F8AE8A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,id location)
{
}

id actionResultForAction(void *a1)
{
  uint64_t v1 = (objc_class *)MEMORY[0x263F64918];
  id v2 = a1;
  id v3 = objc_alloc_init(v1);
  uint64_t v4 = [v2 aceId];

  [v3 setRequestActionId:v4];
  return v3;
}

uint64_t isActivationCharacteristicType(void *a1)
{
  id v1 = a1;
  if ([v1 isEqual:*MEMORY[0x263F0C328]]) {
    uint64_t v2 = 1;
  }
  else {
    uint64_t v2 = [v1 isEqual:*MEMORY[0x263F0BEF8]];
  }

  return v2;
}

uint64_t isOutcomeSuccess(void *a1)
{
  id v1 = a1;
  if (([v1 isEqualToString:*MEMORY[0x263F652C8]] & 1) != 0
    || ([v1 isEqualToString:*MEMORY[0x263F65228]] & 1) != 0
    || ([v1 isEqualToString:*MEMORY[0x263F65230]] & 1) != 0
    || ([v1 isEqualToString:*MEMORY[0x263F652B8]] & 1) != 0)
  {
    uint64_t v2 = 1;
  }
  else
  {
    uint64_t v2 = [v1 isEqualToString:*MEMORY[0x263F652B0]];
  }

  return v2;
}

void sub_22F8B422C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,id *location)
{
  objc_destroyWeak((id *)(v29 - 208));
  _Block_object_dispose((const void *)(v29 - 176), 8);
  _Unwind_Resume(a1);
}

id getActivationCharacteristicFromServiceIfAny(void *a1)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  long long v9 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  id v1 = objc_msgSend(a1, "characteristics", 0);
  id v2 = (id)[v1 countByEnumeratingWithState:&v9 objects:v13 count:16];
  if (v2)
  {
    uint64_t v3 = *(void *)v10;
    while (2)
    {
      for (uint64_t i = 0; i != v2; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v10 != v3) {
          objc_enumerationMutation(v1);
        }
        unint64_t v5 = *(void **)(*((void *)&v9 + 1) + 8 * i);
        unint64_t v6 = [v5 type];
        int v7 = isActivationCharacteristicType(v6);

        if (v7)
        {
          id v2 = v5;
          goto LABEL_11;
        }
      }
      id v2 = (id)[v1 countByEnumeratingWithState:&v9 objects:v13 count:16];
      if (v2) {
        continue;
      }
      break;
    }
  }
LABEL_11:

  return v2;
}

void sub_22F8B4FA4(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_22F8B69DC(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 176), 8);
  _Unwind_Resume(a1);
}

void sub_22F8B6EE4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22F8B89E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,id location)
{
  objc_destroyWeak(v51);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22F8B9F94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,id location)
{
}

void sub_22F8BAA28(_Unwind_Exception *a1)
{
}

void sub_22F8BBDBC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,id location)
{
  objc_destroyWeak(v23);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t isTemperatureAttribute(void *a1)
{
  id v1 = a1;
  if (([v1 isEqualToString:*MEMORY[0x263F65528]] & 1) != 0
    || ([v1 isEqualToString:*MEMORY[0x263F653D8]] & 1) != 0
    || ([v1 isEqualToString:*MEMORY[0x263F65420]] & 1) != 0
    || ([v1 isEqualToString:*MEMORY[0x263F653E0]] & 1) != 0)
  {
    uint64_t v2 = 1;
  }
  else
  {
    uint64_t v2 = [v1 isEqualToString:*MEMORY[0x263F65430]];
  }

  return v2;
}

uint64_t temperatureConversionIsNeeded(void *a1)
{
  id v1 = a1;
  uint64_t v2 = v1;
  if (!v1)
  {
    if (isMetricLocale_onceToken != -1) {
      dispatch_once(&isMetricLocale_onceToken, &__block_literal_global_188923);
    }
    if (!isMetricLocale_isMetricLocale) {
      goto LABEL_3;
    }
LABEL_7:
    uint64_t v3 = 0;
    goto LABEL_8;
  }
  if (([v1 isEqualToString:*MEMORY[0x263F65808]] & 1) == 0) {
    goto LABEL_7;
  }
LABEL_3:
  uint64_t v3 = 1;
LABEL_8:

  return v3;
}

void sub_22F8C30AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,id location)
{
  objc_destroyWeak(v37);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22F8C3F08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__19701(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__19702(uint64_t a1)
{
}

void sub_22F8C41B4(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22F8C423C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22F8C4358(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22F8C445C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22F8C4744(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_unfair_lock_t lock)
{
}

void sub_22F8C49C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, os_unfair_lock_t lock)
{
}

void sub_22F8C8AB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  va_start(va, a17);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_22F8C8C64(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22F8CB670(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_22F8CBC40(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_22F8CBD78(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 24));
  _Unwind_Resume(a1);
}

__CFString *HMDUserSettingsBackingStoreControllerRunStateAsString(unint64_t a1)
{
  if (a1 >= 3)
  {
    uint64_t v2 = NSString;
    uint64_t v3 = [NSNumber numberWithInteger:a1];
    uint64_t v1 = [v2 stringWithFormat:@"Unknown state %@", v3];
  }
  else
  {
    uint64_t v1 = off_264A17BC8[a1];
  }
  return v1;
}

void sub_22F8D5D80(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 120));
  _Block_object_dispose((const void *)(v3 - 112), 8);
  _Unwind_Resume(a1);
}

void sub_22F8D6E14(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22F8D798C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__21247(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__21248(uint64_t a1)
{
}

void sub_22F8D8060(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22F8D90CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22F8D9A9C(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 24));
  _Unwind_Resume(a1);
}

void sub_22F8D9C9C(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 24));
  _Unwind_Resume(a1);
}

void sub_22F8DFEE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_22F8E021C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22F8E09A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_22F8E18D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22F8E25F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22F8E2734(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_22F8EBB08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__23133(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__23134(uint64_t a1)
{
}

void sub_22F8EDB80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
}

void sub_22F8EE1D0(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 160), 8);
  _Unwind_Resume(a1);
}

void sub_22F8EF564(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_22F8F11A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__23516(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__23517(uint64_t a1)
{
}

void sub_22F8F2E04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,char a39)
{
}

uint64_t __Block_byref_object_copy__23660(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__23661(uint64_t a1)
{
}

void sub_22F8F4C2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v7 - 80), 8);
  _Unwind_Resume(a1);
}

void sub_22F8F5278(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location, char a19)
{
  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Block_object_dispose(&a19, 8);
  _Unwind_Resume(a1);
}

void sub_22F8F5DF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_22F8F6AB4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location, char a17)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Block_object_dispose(&a17, 8);
  _Unwind_Resume(a1);
}

void sub_22F8F7200(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,id location,char a29)
{
  objc_destroyWeak(&location);
  _Block_object_dispose(&a29, 8);
  _Block_object_dispose((const void *)(v29 - 176), 8);
  _Unwind_Resume(a1);
}

void sub_22F8FB9C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
}

uint64_t __Block_byref_object_copy__24681(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__24682(uint64_t a1)
{
}

void sub_22F8FD8BC(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22F900264(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22F900B64(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22F9026DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22F902AA8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,id location)
{
  objc_destroyWeak(v23);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22F9030DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__25646(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__25647(uint64_t a1)
{
}

void sub_22F906C74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__25987(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__25988(uint64_t a1)
{
}

void sub_22F90D62C(_Unwind_Exception *a1)
{
}

void sub_22F90D714(_Unwind_Exception *a1)
{
}

void sub_22F90DB80(_Unwind_Exception *a1)
{
}

void sub_22F90E020(_Unwind_Exception *a1)
{
}

void sub_22F911764(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void notifyObservers(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v18 = *MEMORY[0x263EF8340];
  id v7 = a1;
  id v8 = a2;
  long long v13 = 0u;
  long long v14 = 0u;
  long long v15 = 0u;
  long long v16 = 0u;
  uint64_t v9 = [v7 countByEnumeratingWithState:&v13 objects:v17 count:16];
  if (v9)
  {
    uint64_t v10 = v9;
    uint64_t v11 = *(void *)v14;
    do
    {
      uint64_t v12 = 0;
      do
      {
        if (*(void *)v14 != v11) {
          objc_enumerationMutation(v7);
        }
        [*(id *)(*((void *)&v13 + 1) + 8 * v12++) updatedCounter:v8 fromOldValue:a3 toNewValue:a4];
      }
      while (v10 != v12);
      uint64_t v10 = [v7 countByEnumeratingWithState:&v13 objects:v17 count:16];
    }
    while (v10);
  }
}

void sub_22F911C50(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19)
{
  os_unfair_lock_unlock(v19);
  _Block_object_dispose(&a15, 8);
  _Block_object_dispose(&a19, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__26624(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__26625(uint64_t a1)
{
}

void sub_22F911E60(_Unwind_Exception *exception_object)
{
}

void sub_22F911F94(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22F91227C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22F912420(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22F9124B8(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22F91264C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22F912720(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22F912834(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22F9129B8(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22F912C3C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22F913A84(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22F9143F8(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22F91476C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22F914928(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22F9149B0(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22F914F50(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22F9158A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,id location)
{
  objc_destroyWeak(v23);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id HMDExtendedTypeDateFormatter()
{
  if (HMDExtendedTypeDateFormatter_once != -1) {
    dispatch_once(&HMDExtendedTypeDateFormatter_once, &__block_literal_global_27062);
  }
  id v0 = (void *)HMDExtendedTypeDateFormatter_formatter;
  return v0;
}

uint64_t __HMDExtendedTypeDateFormatter_block_invoke()
{
  id v0 = objc_alloc_init(MEMORY[0x263F088C0]);
  uint64_t v1 = (void *)HMDExtendedTypeDateFormatter_formatter;
  HMDExtendedTypeDateFormatter_formatter = (uint64_t)v0;

  uint64_t v2 = [MEMORY[0x263EFFA18] timeZoneForSecondsFromGMT:0];
  [(id)HMDExtendedTypeDateFormatter_formatter setTimeZone:v2];

  uint64_t v3 = (void *)HMDExtendedTypeDateFormatter_formatter;
  return [v3 setFormatOptions:3955];
}

void sub_22F917A50(_Unwind_Exception *a1)
{
}

void sub_22F918F60(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_22F91D2A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,char a45)
{
}

void sub_22F91DD48(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22F91DFD8(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_22F91E05C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22F91E954(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22F9201FC(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22F92054C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_22F920E8C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, os_unfair_lock_t lock)
{
}

void sub_22F921710(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, os_unfair_lock_t lock)
{
}

void sub_22F921904(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_unfair_lock_t lock)
{
}

void sub_22F921AE4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_unfair_lock_t lock)
{
}

void sub_22F921F94(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, os_unfair_lock_t lock)
{
}

void sub_22F92204C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22F922104(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22F92231C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_unfair_lock_t lock)
{
}

void sub_22F922548(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_unfair_lock_t lock)
{
}

void sub_22F9226FC(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22F9228B8(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22F922A24(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22F922AD4(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22F922C78(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22F923038(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
}

uint64_t __Block_byref_object_copy__28212(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__28213(uint64_t a1)
{
}

void sub_22F923B3C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22F924DC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_22F925920(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_start(va, a10);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_22F927CE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_22F92C920(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id HMDLocalizedStringForKey(void *a1)
{
  id v1 = a1;
  uint64_t v2 = (void *)MEMORY[0x230FBD990]();
  uint64_t v3 = [MEMORY[0x263F086E0] bundleForClass:objc_opt_class()];
  if (!isAppleTV()) {
    goto LABEL_4;
  }
  uint64_t v4 = [v1 stringByAppendingString:@"_APPLETV"];
  unint64_t v5 = [v3 localizedStringForKey:v4 value:@"HMDDefaultLocalizedStringValue" table:@"HomeKitDaemon"];
  if ([v5 isEqualToString:@"HMDDefaultLocalizedStringValue"])
  {

LABEL_4:
    unint64_t v5 = [v3 localizedStringForKey:v1 value:&stru_26E2EB898 table:@"HomeKitDaemon"];
    goto LABEL_6;
  }

LABEL_6:

  return v5;
}

id HMDLocalizedStringForKeyWithCount(void *a1, uint64_t a2)
{
  if (a2 == 1) {
    uint64_t v2 = @"_SINGULAR";
  }
  else {
    uint64_t v2 = @"_PLURAL";
  }
  uint64_t v3 = [a1 stringByAppendingString:v2];
  uint64_t v4 = HMDLocalizedStringForKey(v3);

  return v4;
}

void sub_22F92DD00(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22F92DD8C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22F92E44C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22F9306E4(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 128));
  _Unwind_Resume(a1);
}

void sub_22F930B78(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 160), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__29633(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__29634(uint64_t a1)
{
}

void sub_22F933894(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, os_unfair_lock_t lock)
{
}

void sub_22F933BE0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, os_unfair_lock_t lock)
{
}

void sub_22F934758(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_unfair_lock_t lock)
{
}

void sub_22F935164(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22F935240(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22F93596C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_unfair_lock_t lock)
{
}

void sub_22F935A50(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22F935F6C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22F9364C0(_Unwind_Exception *exception_object)
{
}

void sub_22F9366F0(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22F936C58(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22F936D3C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22F9370C4(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

uint64_t __HMDActionSetAddActionWithModel(void *a1, void *a2, void *a3, void *a4)
{
  id v7 = a1;
  id v8 = a2;
  id v9 = a3;
  if (v7)
  {
    uint64_t v10 = [v8 backedObjectWithParent:v7 error:a4];
    if (v10)
    {
      objc_opt_class();
      char isKindOfClass = objc_opt_isKindOfClass();
      if (isKindOfClass) {
        uint64_t v12 = v10;
      }
      else {
        uint64_t v12 = 0;
      }
      id v13 = v12;
      if (isKindOfClass)
      {
        [v7 _handleAddNewAction:v10 message:v9];
      }
      else if (a4)
      {
        *a4 = [MEMORY[0x263F087E8] hmErrorWithCode:22];
      }
    }
    else
    {
      char isKindOfClass = 0;
    }
  }
  else if (a4)
  {
    [MEMORY[0x263F087E8] hmErrorWithCode:20];
    char isKindOfClass = 0;
    *a4 = (id)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    char isKindOfClass = 0;
  }

  return isKindOfClass & 1;
}

void sub_22F939720(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,id location,char a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,char a46)
{
}

uint64_t __Block_byref_object_copy__30540(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__30541(uint64_t a1)
{
}

void sub_22F939EBC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,id location,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,char a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,char a48)
{
}

void sub_22F93A570(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,char a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,char a50)
{
}

void sub_22F93AD08(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,id location,char a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,char a50)
{
}

void sub_22F93B6B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,id location,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,char a43)
{
  objc_destroyWeak(v43);
  objc_destroyWeak(&location);
  __HMFActivityScopeLeave();
  _Unwind_Resume(a1);
}

void sub_22F93D2AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,char a50)
{
}

void sub_22F93D5C0(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22F940D60(_Unwind_Exception *a1)
{
}

void sub_22F945664(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
}

void sub_22F94BC58(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22F94BCD0(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22F94BD64(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22F94BDF8(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22F94C190(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22F94C224(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22F94CF54(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

void sub_22F94D530(_Unwind_Exception *a1)
{
}

void sub_22F94D9B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
}

void sub_22F94DD64(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22F94F058(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__31379(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__31380(uint64_t a1)
{
}

void sub_22F951560(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,id location)
{
  objc_destroyWeak(v26);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22F955F80(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 176), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__32299(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__32300(uint64_t a1)
{
}

void sub_22F959910(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,id location)
{
  objc_destroyWeak(v27);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22F959F14(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22F95A414(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 96));
  _Unwind_Resume(a1);
}

void sub_22F95A920(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22F95AA30(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_22F95BD78(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 56));
  _Unwind_Resume(a1);
}

void sub_22F95C158(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_22F95C7A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,id *location)
{
}

void sub_22F95D0E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 80), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__33228(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__33229(uint64_t a1)
{
}

void sub_22F95E314(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

uint64_t __parseGlobalDestination(void *a1, void *a2, void *a3, void *a4, void *a5)
{
  id v9 = a1;
  uint64_t v10 = v9;
  if (v9)
  {
    id v11 = v9;
    uint64_t v12 = [v11 rangeOfString:@"/"];
    id v13 = v11;
    if (v12 != 0x7FFFFFFFFFFFFFFFLL)
    {
      id v13 = [v11 substringToIndex:v12];
    }
    if ([v13 containsString:@"self-token:"])
    {
      long long v14 = (void *)[v13 mutableCopy];
      objc_msgSend(v14, "replaceOccurrencesOfString:withString:options:range:", @"self-token:", @"token:", 1, 0, objc_msgSend(v14, "length"));
      uint64_t v15 = [v14 copy];

      id v13 = (void *)v15;
    }
    if (([v13 hasPrefix:@"token:"] & 1) == 0)
    {
      if (a5)
      {
        [MEMORY[0x263F087E8] hmErrorWithCode:19 description:@"Invalid destination." reason:@"Missing token prefix." suggestion:0];
        uint64_t v22 = 0;
        *a5 = (id)objc_claimAutoreleasedReturnValue();
LABEL_28:

        goto LABEL_29;
      }
LABEL_27:
      uint64_t v22 = 0;
      goto LABEL_28;
    }
    if (a2)
    {
      id v16 = objc_alloc(MEMORY[0x263F08C38]);
      id v17 = +[_HMDDeviceHandle identifierNamespace];
      uint64_t v18 = [v13 dataUsingEncoding:4];
      *a2 = (id)[v16 initWithNamespace:v17 data:v18];
    }
    id v19 = [v13 substringFromIndex:objc_msgSend(@"token:", "length")];
    if ([v19 length])
    {
      id v20 = objc_alloc(MEMORY[0x263EFF8F8]);
      id v21 = objc_msgSend(v20, "hmf_initWithHexadecimalString:options:", v19, 0);

      if (v21)
      {
        if (a3) {
          *a3 = v21;
        }

        if (a4)
        {
          *a4 = +[HMDAccountHandle accountHandleForDestination:v11];
        }
        uint64_t v22 = 1;
        goto LABEL_28;
      }
      if (!a5) {
        goto LABEL_26;
      }
      uint64_t v23 = (void *)MEMORY[0x263F087E8];
      int v24 = @"Invalid token string.";
      uint64_t v25 = 3;
    }
    else
    {
      if (!a5)
      {
LABEL_26:

        goto LABEL_27;
      }
      uint64_t v23 = (void *)MEMORY[0x263F087E8];
      int v24 = @"Missing token string.";
      uint64_t v25 = 19;
    }
    *a5 = [v23 hmErrorWithCode:v25 description:@"Invalid destination." reason:v24 suggestion:0];
    goto LABEL_26;
  }
  if (a5)
  {
    [MEMORY[0x263F087E8] hmErrorWithCode:20];
    uint64_t v22 = 0;
    *a5 = (id)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    uint64_t v22 = 0;
  }
LABEL_29:

  return v22;
}

id __parseLocalDestination(void *a1, void *a2)
{
  id v3 = a1;
  uint64_t v4 = v3;
  if (!v3)
  {
    if (a2)
    {
      id v9 = [MEMORY[0x263F087E8] hmErrorWithCode:20];
LABEL_10:
      id v7 = 0;
      *a2 = v9;
      goto LABEL_18;
    }
LABEL_11:
    id v7 = 0;
    goto LABEL_18;
  }
  if (([v3 hasPrefix:@"device:"] & 1) == 0)
  {
    if (a2)
    {
      id v9 = [MEMORY[0x263F087E8] hmErrorWithCode:19 description:@"Invalid destination." reason:@"Missing local device prefix." suggestion:0];
      goto LABEL_10;
    }
    goto LABEL_11;
  }
  unint64_t v5 = [v4 substringFromIndex:objc_msgSend(@"device:", "length")];
  if ([v5 length])
  {
    unint64_t v6 = (void *)[objc_alloc(MEMORY[0x263F08C38]) initWithUUIDString:v5];
    id v7 = v6;
    if (v6)
    {
      id v8 = v6;
    }
    else if (a2)
    {
      *a2 = [MEMORY[0x263F087E8] hmErrorWithCode:19 description:@"Invalid destination." reason:@"Invalid device identifier" suggestion:0];
    }
  }
  else if (a2)
  {
    [MEMORY[0x263F087E8] hmErrorWithCode:19 description:@"Invalid destination." reason:@"Missing device identifier." suggestion:0];
    id v7 = 0;
    *a2 = (id)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    id v7 = 0;
  }

LABEL_18:
  return v7;
}

__CFString *HMDCloudShareTrustManagerConfigureStateAsString(unint64_t a1)
{
  if (a1 >= 4)
  {
    uint64_t v2 = NSString;
    id v3 = [NSNumber numberWithInteger:a1];
    uint64_t v1 = [v2 stringWithFormat:@"Unknown state %@", v3];
  }
  else
  {
    uint64_t v1 = off_264A19078[a1];
  }
  return v1;
}

void sub_22F9704EC(_Unwind_Exception *a1)
{
}

void sub_22F9708DC(_Unwind_Exception *a1)
{
}

void sub_22F970B98(_Unwind_Exception *a1)
{
}

id __findModelObjectOfType(void *a1, void *a2, void *a3, void *a4, uint64_t *a5)
{
  uint64_t v45 = *MEMORY[0x263EF8340];
  id v9 = a1;
  id v10 = a2;
  id v11 = a3;
  id v12 = a4;
  uint64_t v36 = 0;
  if (a5) {
    id v13 = a5;
  }
  else {
    id v13 = &v36;
  }
  long long v14 = +[HMCContext currentContext];
  uint64_t v15 = v14;
  if (!v10)
  {
    id v17 = 0;
LABEL_8:
    proto = v9;
    id v20 = __managedObjectClassFromProtocol(v9);
    id v34 = v11;
    id v21 = [v11 predicateWithSubstitutionVariables:v12];
    uint64_t v22 = [(objc_class *)v20 fetchRequest];
    [v22 setPredicate:v21];
    uint64_t v23 = [v15 managedObjectContext];
    int v24 = [v23 executeFetchRequest:v22 error:v13];

    if (!v24)
    {
      uint64_t v27 = (void *)MEMORY[0x230FBD990]();
      uint64_t v28 = HMFGetOSLogHandle();
      if (os_log_type_enabled(v28, OS_LOG_TYPE_ERROR))
      {
        id v32 = HMFGetLogIdentifier();
        NSStringFromProtocol(proto);
        uint64_t v29 = v33 = v27;
        uint64_t v30 = *v13;
        *(_DWORD *)buf = 138544130;
        v38 = v32;
        __int16 v39 = 2112;
        v40 = v29;
        __int16 v41 = 2112;
        v42 = v21;
        __int16 v43 = 2112;
        uint64_t v44 = v30;
        _os_log_impl(&dword_22F52A000, v28, OS_LOG_TYPE_ERROR, "%{public}@Fetch of models of %@.%@ failed: %@", buf, 0x2Au);

        uint64_t v27 = v33;
      }

      uint64_t v25 = 0;
      goto LABEL_17;
    }
    if ((unint64_t)[v24 count] >= 2)
    {
      _HMFPreconditionFailure();
    }
    else
    {
      uint64_t v25 = [v24 firstObject];
      if (!v25)
      {
LABEL_13:

LABEL_17:
        id v11 = v34;
        id v9 = proto;
        goto LABEL_19;
      }
      objc_opt_class();
      if (objc_opt_isKindOfClass())
      {
        id v26 = v25;
        goto LABEL_13;
      }
    }
    _HMFPreconditionFailure();
  }
  id v16 = [v14 managedObjectContext];
  id v17 = [v16 existingObjectWithID:v10 error:v13];

  if (v17)
  {
    uint64_t v18 = (void *)[v12 mutableCopy];
    [v18 setValue:v17 forKey:@"PARENT"];
    uint64_t v19 = [v18 copy];

    id v12 = (id)v19;
    goto LABEL_8;
  }
  uint64_t v25 = 0;
LABEL_19:

  return v25;
}

objc_class *__managedObjectClassFromProtocol(void *a1)
{
  uint64_t v1 = a1;
  if (__managedObjectClassFromProtocol__hmf_once_t7 != -1) {
    dispatch_once(&__managedObjectClassFromProtocol__hmf_once_t7, &__block_literal_global_374);
  }
  id v2 = (id)__managedObjectClassFromProtocol__hmf_once_v8;
  os_unfair_lock_lock_with_options();
  id v3 = (void *)[v2 objectForKey:v1];
  if (v3)
  {
    uint64_t v4 = v3;
  }
  else
  {
    unint64_t v5 = NSStringFromProtocol(v1);
    unint64_t v6 = [@"_" stringByAppendingString:v5];

    Class v7 = NSClassFromString(v6);
    Class v8 = v7;
    if (!v7
      || ![(objc_class *)v7 conformsToProtocol:v1]
      || ([(objc_class *)v8 isSubclassOfClass:objc_opt_class()] & 1) == 0)
    {
      uint64_t result = (objc_class *)_HMFPreconditionFailure();
      __break(1u);
      return result;
    }
    [v2 setObject:v8 forKey:v1];
    uint64_t v4 = v8;
  }
  os_unfair_lock_unlock((os_unfair_lock_t)&__managedObjectClassFromProtocol_cacheLock);

  return v4;
}

void sub_22F9711E4(_Unwind_Exception *a1)
{
}

void ____managedObjectClassFromProtocol_block_invoke()
{
  uint64_t v0 = [MEMORY[0x263F08968] strongToStrongObjectsMapTable];
  uint64_t v1 = (void *)__managedObjectClassFromProtocol__hmf_once_v8;
  __managedObjectClassFromProtocol__hmf_once_Class v8 = v0;
}

void sub_22F974B2C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, os_unfair_lock_t lock)
{
}

void sub_22F9752F0(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22F975A9C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22F975C14(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22F976D74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__36637(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__36638(uint64_t a1)
{
}

void sub_22F977050(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_22F97AE94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_22F97C7C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_22F982198(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 64), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__38294(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__38295(uint64_t a1)
{
}

void __sendChangeNotifications(void *a1, void *a2, uint64_t a3)
{
  id v5 = a1;
  id v6 = a2;
  Class v7 = +[HMDAppleAccountManager sharedManager];
  Class v8 = [v7 account];

  v11[0] = MEMORY[0x263EF8330];
  v11[1] = 3221225472;
  v11[2] = ____sendChangeNotifications_block_invoke;
  v11[3] = &unk_264A192F0;
  id v13 = v8;
  uint64_t v14 = a3;
  id v12 = v5;
  id v9 = v8;
  id v10 = v5;
  objc_msgSend(v6, "hmf_enumerateWithAutoreleasePoolUsingBlock:", v11);
}

void ____sendChangeNotifications_block_invoke(uint64_t a1, void *a2)
{
  v25[1] = *MEMORY[0x263EF8340];
  id v3 = a2;
  if ([v3 isObjectType:&unk_26E4F5978] && *(void *)(a1 + 48) != 2)
  {
    uint64_t v4 = *(void **)(a1 + 32);
    id v5 = [v3 modelID];
    id v6 = [v4 deviceForIdentifier:v5];

    if (v6) {
      logAndPostNotification(@"HMDDeviceUpdatedNotification", v6, 0);
    }
  }
  if ([v3 isObjectType:&unk_26E569980])
  {
    Class v7 = [*(id *)(a1 + 32) accounts];
    v20[0] = MEMORY[0x263EF8330];
    v20[1] = 3221225472;
    v20[2] = ____sendChangeNotifications_block_invoke_2;
    v20[3] = &unk_264A192A0;
    id v21 = v3;
    objc_msgSend(v7, "hmf_enumerateWithAutoreleasePoolUsingBlock:", v20);
  }
  if ([v3 isObjectType:&unk_26E4870D8])
  {
    Class v8 = [v3 modelID];
    id v9 = [*(id *)(a1 + 40) modelIdentifier];
    char v10 = [v8 isEqual:v9];

    if ((v10 & 1) == 0)
    {
      id v11 = [*(id *)(a1 + 32) accounts];
      v18[0] = MEMORY[0x263EF8330];
      v18[1] = 3221225472;
      v18[2] = ____sendChangeNotifications_block_invoke_4;
      v18[3] = &unk_264A192C8;
      id v19 = v3;
      id v12 = objc_msgSend(v11, "na_firstObjectPassingTest:", v18);

      if (!v12)
      {
LABEL_17:

        goto LABEL_18;
      }
      uint64_t v13 = *(void *)(a1 + 48);
      if (v13 == 2)
      {
        uint64_t v15 = [MEMORY[0x263F08A00] defaultCenter];
        uint64_t v16 = *(void *)(a1 + 32);
        uint64_t v22 = @"HMDAccountNotificationKey";
        uint64_t v23 = v12;
        id v17 = [NSDictionary dictionaryWithObjects:&v23 forKeys:&v22 count:1];
        [v15 postNotificationName:@"HMDAccountRegistryRemovedAccountNotification" object:v16 userInfo:v17];
      }
      else
      {
        if (v13 != 1)
        {
LABEL_16:

          goto LABEL_17;
        }
        uint64_t v14 = *(void **)(a1 + 32);
        int v24 = @"HMDAccountNotificationKey";
        v25[0] = v12;
        uint64_t v15 = [NSDictionary dictionaryWithObjects:v25 forKeys:&v24 count:1];
        logAndPostNotification(@"HMDAccountRegistryAddedAccountNotification", v14, v15);
      }

      goto LABEL_16;
    }
  }
LABEL_18:
}

void ____sendChangeNotifications_block_invoke_2(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  id v6 = a2;
  Class v7 = [v6 handles];
  v9[0] = MEMORY[0x263EF8330];
  v9[1] = 3221225472;
  v9[2] = ____sendChangeNotifications_block_invoke_3;
  v9[3] = &unk_264A19278;
  id v10 = *(id *)(a1 + 32);
  id v11 = v6;
  uint64_t v12 = a4;
  id v8 = v6;
  objc_msgSend(v7, "hmf_enumerateWithAutoreleasePoolUsingBlock:", v9);
}

uint64_t ____sendChangeNotifications_block_invoke_4(uint64_t a1, void *a2)
{
  id v3 = [a2 modelIdentifier];
  uint64_t v4 = [*(id *)(a1 + 32) modelID];
  uint64_t v5 = [v3 isEqual:v4];

  return v5;
}

void ____sendChangeNotifications_block_invoke_3(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  id v6 = [a2 modelIdentifier];
  Class v7 = [*(id *)(a1 + 32) modelID];
  int v8 = [v6 isEqual:v7];

  if (v8)
  {
    logAndPostNotification(@"HMDAccountHandlesUpdatedNotification", *(void **)(a1 + 40), 0);
    **(unsigned char **)(a1 + 4_Block_object_dispose(&STACK[0x210], 8) = 1;
    *a4 = 1;
  }
}

void sub_22F983034(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22F983EF0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22F984878(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_unfair_lock_t lock)
{
}

void __HMDAppleAccountSettingsPostUpdatedNotification(void *a1)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  id v1 = a1;
  if (v1)
  {
    id v2 = (void *)MEMORY[0x230FBD990]();
    id v3 = v1;
    uint64_t v4 = HMFGetOSLogHandle();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
    {
      uint64_t v5 = HMFGetLogIdentifier();
      int v7 = 138543362;
      int v8 = v5;
      _os_log_impl(&dword_22F52A000, v4, OS_LOG_TYPE_INFO, "%{public}@Notifying of updated Apple account settings", (uint8_t *)&v7, 0xCu);
    }
    id v6 = [MEMORY[0x263F08A00] defaultCenter];
    [v6 postNotificationName:@"HMDAppleAccountSettingsUpdatedNotification" object:v3];
  }
}

void sub_22F985678(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 80), 8);
  _Unwind_Resume(a1);
}

void sub_22F986EDC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22F9877A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22F987B28(_Unwind_Exception *a1)
{
}

void sub_22F987C40(_Unwind_Exception *a1)
{
}

void sub_22F987F68(_Unwind_Exception *a1)
{
}

void __legacyWatchOSCategoryMap_block_invoke()
{
  v22[1] = *MEMORY[0x263EF8340];
  if (BulletinDistributorCompanionLibraryCore())
  {
    uint64_t v13 = 0;
    uint64_t v14 = &v13;
    uint64_t v15 = 0x2020000000;
    uint64_t v0 = (id *)getBLTBulletinContextKeyWatchLegacyMapKeySymbolLoc_ptr;
    uint64_t v16 = getBLTBulletinContextKeyWatchLegacyMapKeySymbolLoc_ptr;
    if (!getBLTBulletinContextKeyWatchLegacyMapKeySymbolLoc_ptr)
    {
      uint64_t v1 = (void *)BulletinDistributorCompanionLibrary();
      v14[3] = (uint64_t)dlsym(v1, "BLTBulletinContextKeyWatchLegacyMapKey");
      getBLTBulletinContextKeyWatchLegacyMapKeySymbolLoc_ptr = v14[3];
      uint64_t v0 = (id *)v14[3];
    }
    _Block_object_dispose(&v13, 8);
    if (!v0) {
      goto LABEL_12;
    }
    id v2 = *v0;
    id v21 = v2;
    id v3 = [&unk_26E470EB8 stringValue];
    id v19 = v3;
    uint64_t v13 = 0;
    uint64_t v14 = &v13;
    uint64_t v15 = 0x2020000000;
    uint64_t v4 = (id *)getBLTWatchLegacyMapCategoryIDKeySymbolLoc_ptr;
    uint64_t v16 = getBLTWatchLegacyMapCategoryIDKeySymbolLoc_ptr;
    if (!getBLTWatchLegacyMapCategoryIDKeySymbolLoc_ptr)
    {
      uint64_t v5 = (void *)BulletinDistributorCompanionLibrary();
      v14[3] = (uint64_t)dlsym(v5, "BLTWatchLegacyMapCategoryIDKey");
      getBLTWatchLegacyMapCategoryIDKeySymbolLoc_ptr = v14[3];
      uint64_t v4 = (id *)v14[3];
    }
    _Block_object_dispose(&v13, 8);
    if (!v4)
    {
LABEL_12:
      dlerror();
      abort_report_np();
      __break(1u);
    }
    id v17 = *v4;
    uint64_t v18 = MEMORY[0x263EFFA68];
    id v6 = NSDictionary;
    id v7 = v17;
    int v8 = [v6 dictionaryWithObjects:&v18 forKeys:&v17 count:1];
    id v20 = v8;
    uint64_t v9 = [NSDictionary dictionaryWithObjects:&v20 forKeys:&v19 count:1];
    v22[0] = v9;
    uint64_t v10 = [NSDictionary dictionaryWithObjects:v22 forKeys:&v21 count:1];
    id v11 = (void *)legacyWatchOSCategoryMap_legacyWatchOSCategoryMap;
    legacyWatchOSCategoryMap_legacyWatchOSCategoryMap = v10;
  }
  else
  {
    uint64_t v12 = (void *)legacyWatchOSCategoryMap_legacyWatchOSCategoryMap;
    legacyWatchOSCategoryMap_legacyWatchOSCategoryMap = MEMORY[0x263EFFA78];
  }
}

void sub_22F98C7F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t BulletinDistributorCompanionLibraryCore()
{
  if (!BulletinDistributorCompanionLibraryCore_frameworkLibrary) {
    BulletinDistributorCompanionLibraryCore_frameworkLibrary = _sl_dlopen();
  }
  return BulletinDistributorCompanionLibraryCore_frameworkLibrary;
}

void *__getBLTBulletinContextKeyWatchLegacyMapKeySymbolLoc_block_invoke(uint64_t a1)
{
  id v2 = (void *)BulletinDistributorCompanionLibrary();
  uint64_t result = dlsym(v2, "BLTBulletinContextKeyWatchLegacyMapKey");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getBLTBulletinContextKeyWatchLegacyMapKeySymbolLoc_ptr = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t BulletinDistributorCompanionLibrary()
{
  uint64_t v0 = BulletinDistributorCompanionLibraryCore();
  if (!v0)
  {
    id v2 = (void *)abort_report_np();
    free(v2);
  }
  return v0;
}

void *__getBLTWatchLegacyMapCategoryIDKeySymbolLoc_block_invoke(uint64_t a1)
{
  id v2 = (void *)BulletinDistributorCompanionLibrary();
  uint64_t result = dlsym(v2, "BLTWatchLegacyMapCategoryIDKey");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getBLTWatchLegacyMapCategoryIDKeySymbolLoc_ptr = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t __BulletinDistributorCompanionLibraryCore_block_invoke()
{
  uint64_t result = _sl_dlopen();
  BulletinDistributorCompanionLibraryCore_frameworkLibrary = result;
  return result;
}

void sub_22F99609C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22F996BF8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id _NCSchedulerDateWithMultiple(void *a1, void *a2, void *a3, uint64_t a4)
{
  id v7 = a3;
  int v8 = (objc_class *)MEMORY[0x263EFF918];
  id v9 = a2;
  id v10 = a1;
  id v11 = objc_alloc_init(v8);
  if (v11)
  {
    uint64_t v12 = [v7 era];
    if (v12 == 0x7FFFFFFFFFFFFFFFLL) {
      uint64_t v13 = 0x7FFFFFFFFFFFFFFFLL;
    }
    else {
      uint64_t v13 = v12 * a4;
    }
    [v11 setEra:v13];
    uint64_t v14 = [v7 year];
    if (v14 == 0x7FFFFFFFFFFFFFFFLL) {
      uint64_t v15 = 0x7FFFFFFFFFFFFFFFLL;
    }
    else {
      uint64_t v15 = v14 * a4;
    }
    [v11 setYear:v15];
    uint64_t v16 = [v7 month];
    if (v16 == 0x7FFFFFFFFFFFFFFFLL) {
      uint64_t v17 = 0x7FFFFFFFFFFFFFFFLL;
    }
    else {
      uint64_t v17 = v16 * a4;
    }
    [v11 setMonth:v17];
    uint64_t v18 = [v7 day];
    if (v18 == 0x7FFFFFFFFFFFFFFFLL) {
      uint64_t v19 = 0x7FFFFFFFFFFFFFFFLL;
    }
    else {
      uint64_t v19 = v18 * a4;
    }
    [v11 setDay:v19];
    uint64_t v20 = [v7 hour];
    if (v20 == 0x7FFFFFFFFFFFFFFFLL) {
      uint64_t v21 = 0x7FFFFFFFFFFFFFFFLL;
    }
    else {
      uint64_t v21 = v20 * a4;
    }
    [v11 setHour:v21];
    uint64_t v22 = [v7 minute];
    if (v22 == 0x7FFFFFFFFFFFFFFFLL) {
      uint64_t v23 = 0x7FFFFFFFFFFFFFFFLL;
    }
    else {
      uint64_t v23 = v22 * a4;
    }
    [v11 setMinute:v23];
    uint64_t v24 = [v7 second];
    if (v24 == 0x7FFFFFFFFFFFFFFFLL) {
      uint64_t v25 = 0x7FFFFFFFFFFFFFFFLL;
    }
    else {
      uint64_t v25 = v24 * a4;
    }
    [v11 setSecond:v25];
    uint64_t v26 = [v7 weekday];
    if (v26 == 0x7FFFFFFFFFFFFFFFLL) {
      uint64_t v27 = 0x7FFFFFFFFFFFFFFFLL;
    }
    else {
      uint64_t v27 = v26 * a4;
    }
    [v11 setWeekday:v27];
    uint64_t v28 = [v7 weekdayOrdinal];
    if (v28 == 0x7FFFFFFFFFFFFFFFLL) {
      uint64_t v29 = 0x7FFFFFFFFFFFFFFFLL;
    }
    else {
      uint64_t v29 = v28 * a4;
    }
    [v11 setWeekdayOrdinal:v29];
    uint64_t v30 = [v7 quarter];
    if (v30 == 0x7FFFFFFFFFFFFFFFLL) {
      uint64_t v31 = 0x7FFFFFFFFFFFFFFFLL;
    }
    else {
      uint64_t v31 = v30 * a4;
    }
    [v11 setQuarter:v31];
    uint64_t v32 = [v7 weekOfMonth];
    if (v32 == 0x7FFFFFFFFFFFFFFFLL) {
      uint64_t v33 = 0x7FFFFFFFFFFFFFFFLL;
    }
    else {
      uint64_t v33 = v32 * a4;
    }
    [v11 setWeekOfMonth:v33];
    uint64_t v34 = [v7 weekOfYear];
    if (v34 == 0x7FFFFFFFFFFFFFFFLL) {
      uint64_t v35 = 0x7FFFFFFFFFFFFFFFLL;
    }
    else {
      uint64_t v35 = v34 * a4;
    }
    [v11 setWeekOfYear:v35];
    uint64_t v36 = [v7 yearForWeekOfYear];
    if (v36 == 0x7FFFFFFFFFFFFFFFLL) {
      uint64_t v37 = 0x7FFFFFFFFFFFFFFFLL;
    }
    else {
      uint64_t v37 = v36 * a4;
    }
    [v11 setYearForWeekOfYear:v37];
  }
  v38 = [v9 dateByAddingComponents:v11 toDate:v10 options:0];

  return v38;
}

void sub_22F9A4020(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void sub_22F9A4890(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_22F9A63B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
}

void sub_22F9ACCE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

BOOL HMDRemoteEventRouterProtoChangeRegistrationsMessageReadFrom(void *a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x263F62298];
  uint64_t v4 = (int *)MEMORY[0x263F62288];
  uint64_t v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) >= *(void *)(a2 + (int)*MEMORY[0x263F62288])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  id v7 = (int *)MEMORY[0x263F62268];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      if (v9++ >= 9)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 3u:
        PBReaderReadString();
        uint64_t v17 = (HMDRemoteEventRouterProtoTopic *)objc_claimAutoreleasedReturnValue();
        if (v17) {
          [a1 addTopicFilterAdditions:v17];
        }
        goto LABEL_30;
      case 4u:
        PBReaderReadString();
        uint64_t v17 = (HMDRemoteEventRouterProtoTopic *)objc_claimAutoreleasedReturnValue();
        if (v17) {
          [a1 addTopicFilterRemovals:v17];
        }
        goto LABEL_30;
      case 5u:
        uint64_t v17 = objc_alloc_init(HMDRemoteEventRouterProtoTopic);
        [a1 addTopicAdditions:v17];
        goto LABEL_27;
      case 6u:
        uint64_t v17 = objc_alloc_init(HMDRemoteEventRouterProtoTopic);
        [a1 addTopicRemovals:v17];
LABEL_27:
        if (PBReaderPlaceMark() && HMDRemoteEventRouterProtoTopicReadFrom((uint64_t)v17, a2))
        {
          PBReaderRecallMark();
LABEL_30:

LABEL_31:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }

        return 0;
      default:
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          return 0;
        }
        goto LABEL_31;
    }
  }
}

void sub_22F9AF2B0(_Unwind_Exception *a1)
{
}

void sub_22F9AF3C0(_Unwind_Exception *a1)
{
}

void sub_22F9AF970(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22F9B0C68(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22F9B257C(_Unwind_Exception *exception_object)
{
}

void sub_22F9B27DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_unfair_lock_t lock)
{
}

void sub_22F9B5338(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__42033(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__42034(uint64_t a1)
{
}

__CFString *HMDAccessorySettingsAuditReasonAsString(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) >= 8)
  {
    objc_msgSend(NSString, "stringWithFormat:", @"Unknown HMDMediaSystemSettingsAuditReason %tu", a1);
    uint64_t v1 = (__CFString *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    uint64_t v1 = off_264A197D8[a1 - 1];
  }
  return v1;
}

void sub_22F9B7560(_Unwind_Exception *a1)
{
}

void sub_22F9B776C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22F9B7A68(_Unwind_Exception *a1)
{
}

__CFString *HMDEventTriggerActivationTypeAsString(unint64_t a1)
{
  if (a1 >= 4)
  {
    objc_msgSend(NSString, "stringWithFormat:", @"Unknown HMDEventTriggerActivationType %tu", a1);
    uint64_t v1 = (__CFString *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    uint64_t v1 = off_264A19818[a1];
  }
  return v1;
}

void sub_22F9B9E04(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, os_unfair_lock_t lock)
{
}

void sub_22F9BA4FC(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22F9BA968(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, os_unfair_lock_t lock)
{
}

void sub_22F9BB668(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22F9BB730(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22F9BCC2C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22F9BD598(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22F9BD938(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22F9BDA70(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22F9BDBC4(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22F9BDDD4(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22F9BE004(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22F9BE674(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, os_unfair_lock_t lock)
{
}

void sub_22F9BEAB0(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22F9BEC68(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22F9BF9D4(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22F9C05E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id location)
{
  objc_destroyWeak(v10);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22F9C0700(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22F9C0B40(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,id location)
{
}

void sub_22F9C0E04(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_22F9C1B50(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id location)
{
  os_unfair_lock_unlock(v10);
  _Unwind_Resume(a1);
}

void sub_22F9C1DEC(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_22F9C2490(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22F9C290C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22F9C3454(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22F9C3E10(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id location)
{
  objc_destroyWeak(v10);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22F9C43A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id location)
{
  objc_destroyWeak(v10);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22F9C4440(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22F9C493C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id location)
{
}

void sub_22F9C4ED8(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22F9C53F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id location)
{
  objc_destroyWeak(v10);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22F9C58C0(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22F9C5E34(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22F9C5F7C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22F9C7DE8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id location)
{
  objc_destroyWeak(v11);
  objc_destroyWeak(v10);
  objc_destroyWeak((id *)&a9);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22F9C87C8(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_22F9CAAD0(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 128));
  _Unwind_Resume(a1);
}

void sub_22F9D06FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id *location)
{
  objc_destroyWeak(location);
  objc_destroyWeak((id *)(v10 - 168));
  _Unwind_Resume(a1);
}

void sub_22F9D2880(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,id location)
{
  objc_destroyWeak(v30);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22F9D6744(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22F9D8BA0(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 160));
  _Unwind_Resume(a1);
}

void sub_22F9D9F60(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22F9DB144(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22F9DB1E8(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22F9DB264(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22F9DC524(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22F9DD174(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22F9DF6CC(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22F9E0D00(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 176), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__46041(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__46042(uint64_t a1)
{
}

void sub_22F9E16AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_22F9E1A58(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22F9E1B64(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_22F9E1E90(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

id getIDSSessionOptionsAllowedClasses()
{
  v4[8] = *MEMORY[0x263EF8340];
  uint64_t v0 = (void *)MEMORY[0x263EFFA08];
  v4[0] = objc_opt_class();
  v4[1] = objc_opt_class();
  v4[2] = objc_opt_class();
  v4[3] = objc_opt_class();
  v4[4] = objc_opt_class();
  v4[5] = objc_opt_class();
  v4[6] = objc_opt_class();
  v4[7] = objc_opt_class();
  uint64_t v1 = [MEMORY[0x263EFF8C0] arrayWithObjects:v4 count:8];
  uint64_t v2 = [v0 setWithArray:v1];

  return v2;
}

void sub_22F9E72EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22F9E90E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location)
{
  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22F9EA660(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location)
{
  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void __updateRegistration(void *a1, uint64_t a2, void *a3)
{
  uint64_t v20 = *MEMORY[0x263EF8340];
  id v5 = a1;
  id v6 = a3;
  id v7 = +[HMDBackingStoreTransactionOptions defaultXPCOptions];
  char v8 = [v5 transaction:@"RegistrationModification" options:v7];

  long long v17 = 0u;
  long long v18 = 0u;
  long long v15 = 0u;
  long long v16 = 0u;
  id v9 = v6;
  uint64_t v10 = [v9 countByEnumeratingWithState:&v15 objects:v19 count:16];
  if (v10)
  {
    uint64_t v11 = v10;
    uint64_t v12 = *(void *)v16;
    do
    {
      uint64_t v13 = 0;
      do
      {
        if (*(void *)v16 != v12) {
          objc_enumerationMutation(v9);
        }
        uint64_t v14 = objc_msgSend(*(id *)(*((void *)&v15 + 1) + 8 * v13), "modelObjectWithChangeType:version:", a2, 4, (void)v15);
        [v14 setObjectChangeType:a2];
        [v8 add:v14];

        ++v13;
      }
      while (v11 != v13);
      uint64_t v11 = [v9 countByEnumeratingWithState:&v15 objects:v19 count:16];
    }
    while (v11);
  }

  [v8 run];
}

void sub_22F9EBAEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
  _Block_object_dispose(&a31, 8);
  _Block_object_dispose((const void *)(v31 - 208), 8);
  _Block_object_dispose((const void *)(v31 - 160), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__47717(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__47718(uint64_t a1)
{
}

void removeDictionaryEntry(void *a1, void *a2, void *a3)
{
  id v8 = a1;
  id v5 = a2;
  id v6 = a3;
  id v7 = [v8 objectForKeyedSubscript:v5];

  if (v7 == v6) {
    [v8 removeObjectForKey:v5];
  }
}

id __dependencySort(void *a1)
{
  uint64_t v21 = *MEMORY[0x263EF8340];
  id v1 = a1;
  if ((unint64_t)[v1 count] > 1)
  {
    uint64_t v3 = [MEMORY[0x263EFF980] array];
    uint64_t v4 = [MEMORY[0x263EFF980] array];
    uint64_t v5 = MEMORY[0x263EF8330];
    while (1)
    {
      v15[0] = v5;
      v15[1] = 3221225472;
      v15[2] = ____dependencySort_block_invoke;
      v15[3] = &unk_264A19E90;
      id v6 = v1;
      id v16 = v6;
      id v7 = v4;
      id v17 = v7;
      id v8 = v3;
      id v18 = v8;
      [v6 enumerateKeysAndObjectsUsingBlock:v15];
      uint64_t v9 = [v7 count];
      if (v9 == [v6 count]) {
        break;
      }
      if (![v7 count])
      {
        uint64_t v10 = (void *)MEMORY[0x230FBD990]();
        uint64_t v11 = HMFGetOSLogHandle();
        if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
        {
          uint64_t v12 = HMFGetLogIdentifier();
          *(_DWORD *)buf = 138543362;
          uint64_t v20 = v12;
          _os_log_impl(&dword_22F52A000, v11, OS_LOG_TYPE_ERROR, "%{public}@LOOP IN OBJECT REFERENCES", buf, 0xCu);
        }
        uint64_t v13 = [v6 allValues];
        [v8 addObjectsFromArray:v13];

        break;
      }
      [v6 removeObjectsForKeys:v7];
      [v7 removeAllObjects];
    }
    uint64_t v2 = (void *)[v8 copy];
  }
  else
  {
    uint64_t v2 = [v1 allValues];
  }

  return v2;
}

void __lookup(void *a1, void *a2, void *a3)
{
  uint64_t v24 = *MEMORY[0x263EF8340];
  id v5 = a1;
  id v6 = a2;
  id v7 = a3;
  if ([v6 count])
  {
    id v8 = [v5 lookup];
    if (v8)
    {
      if (!v7)
      {
        id v7 = +[HMDBackingStoreTransactionOptions defaultXPCOptions];
      }
      uint64_t v9 = [[HMDBackingStoreTransactionActions alloc] initWithBackingStore:v5 options:v7];
      v18[0] = MEMORY[0x263EF8330];
      v18[1] = 3221225472;
      v18[2] = ____lookup_block_invoke;
      v18[3] = &unk_264A19F80;
      id v19 = v8;
      uint64_t v10 = v9;
      uint64_t v20 = v10;
      id v11 = v5;
      id v21 = v11;
      objc_msgSend(v6, "hmf_enumerateWithAutoreleasePoolUsingBlock:", v18);
      [(HMDBackingStoreTransactionActions *)v10 invokePostApplyActions];
      if ([(HMDBackingStoreTransactionActions *)v10 saveToAssistant])
      {
        uint64_t v12 = [v11 homeManager];
        uint64_t v13 = [v7 label];
        [v12 assistantSyncDataChanged:v13];
      }
    }
    else
    {
      uint64_t v14 = (void *)MEMORY[0x230FBD990]();
      id v15 = v5;
      id v16 = HMFGetOSLogHandle();
      if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
      {
        id v17 = HMFGetLogIdentifier();
        *(_DWORD *)buf = 138543362;
        uint64_t v23 = v17;
        _os_log_impl(&dword_22F52A000, v16, OS_LOG_TYPE_ERROR, "%{public}@HMDOBJECTLOOKUP IS NIL.", buf, 0xCu);
      }
    }
  }
}

void ____lookup_block_invoke(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = *(void **)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  v7[0] = MEMORY[0x263EF8330];
  v7[1] = 3221225472;
  v7[2] = ____lookup_block_invoke_2;
  v7[3] = &unk_264A2F370;
  id v8 = *(id *)(a1 + 48);
  id v9 = v3;
  id v6 = v3;
  [v4 lookUpAndApplyObjectChange:v6 previous:0 result:v5 completionHandler:v7];
}

void ____lookup_block_invoke_2(uint64_t a1, void *a2)
{
  uint64_t v21 = *MEMORY[0x263EF8340];
  id v3 = a2;
  if (v3)
  {
    uint64_t v4 = (void *)MEMORY[0x230FBD990]();
    id v5 = *(id *)(a1 + 32);
    id v6 = HMFGetOSLogHandle();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      id v7 = HMFGetLogIdentifier();
      id v8 = [*(id *)(a1 + 40) change];
      uint64_t v9 = [v8 objectChangeType];
      if ((unint64_t)(v9 - 1) > 2) {
        uint64_t v10 = @"unknown";
      }
      else {
        uint64_t v10 = off_264A26230[v9 - 1];
      }
      id v11 = v10;
      uint64_t v12 = [*(id *)(a1 + 40) change];
      int v13 = 138544130;
      uint64_t v14 = v7;
      __int16 v15 = 2112;
      id v16 = v11;
      __int16 v17 = 2112;
      uint64_t v18 = objc_opt_class();
      __int16 v19 = 2112;
      id v20 = v3;
      _os_log_impl(&dword_22F52A000, v6, OS_LOG_TYPE_ERROR, "%{public}@LOOKUP FAILED: %@ %@: %@", (uint8_t *)&v13, 0x2Au);
    }
  }
}

void ____dependencySort_block_invoke(id *a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v13 = 0;
  uint64_t v14 = &v13;
  uint64_t v15 = 0x2020000000;
  char v16 = 1;
  id v7 = [v6 change];
  id v8 = [v7 dependentUUIDs];
  v9[0] = MEMORY[0x263EF8330];
  v9[1] = 3221225472;
  v9[2] = ____dependencySort_block_invoke_2;
  v9[3] = &unk_264A19E68;
  id v10 = a1[4];
  id v11 = a1[5];
  uint64_t v12 = &v13;
  objc_msgSend(v8, "hmf_enumerateWithAutoreleasePoolUsingBlock:", v9);

  if (*((unsigned char *)v14 + 24))
  {
    [a1[6] addObject:v6];
    [a1[5] addObject:v5];
  }

  _Block_object_dispose(&v13, 8);
}

void sub_22F9ED494(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void ____dependencySort_block_invoke_2(uint64_t a1, void *a2, unsigned char *a3)
{
  id v8 = a2;
  uint64_t v5 = objc_msgSend(*(id *)(a1 + 32), "objectForKey:");
  if (v5)
  {
    id v6 = (void *)v5;
    char v7 = [*(id *)(a1 + 40) containsObject:v8];

    if ((v7 & 1) == 0)
    {
      *(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = 0;
      *a3 = 1;
    }
  }
}

void sub_22F9ED874(_Unwind_Exception *a1)
{
}

void __broadcastChanges(void *a1, void *a2, void *a3, void *a4, void *a5, void *a6)
{
  uint64_t v64 = *MEMORY[0x263EF8340];
  id v11 = a1;
  id v12 = a2;
  id v13 = a3;
  id v14 = a4;
  id v15 = a5;
  id v16 = a6;
  if ([v15 count]
    || (__objectsAreRelevantForBroadcast(v12) & 1) != 0
    || (__objectsAreRelevantForBroadcast(v13) & 1) != 0
    || (__objectsAreRelevantForBroadcast(v14) & 1) != 0)
  {
    __int16 v17 = (void *)[v12 mutableCopy];
    uint64_t v18 = v17;
    if (v17)
    {
      id v19 = v17;
    }
    else
    {
      id v19 = [MEMORY[0x263EFF9C0] set];
    }
    id v20 = v19;

    uint64_t v21 = (void *)[v13 mutableCopy];
    uint64_t v22 = v21;
    if (v21)
    {
      id v23 = v21;
    }
    else
    {
      id v23 = [MEMORY[0x263EFF9C0] set];
    }
    uint64_t v24 = v23;

    uint64_t v25 = (void *)[v14 mutableCopy];
    uint64_t v26 = v25;
    id v46 = v13;
    id v47 = v12;
    id v45 = v14;
    __int16 v43 = v16;
    if (v25)
    {
      id v27 = v25;
    }
    else
    {
      id v27 = [MEMORY[0x263EFF9C0] set];
    }
    uint64_t v28 = v27;

    uint64_t v29 = [MEMORY[0x263EFF9A0] dictionary];
    uint64_t v30 = [MEMORY[0x263EFF9A0] dictionary];
    [v20 minusSet:v24];
    v53[0] = MEMORY[0x263EF8330];
    v53[1] = 3221225472;
    v53[2] = ____broadcastChanges_block_invoke;
    v53[3] = &unk_264A19EB8;
    id v31 = v30;
    id v54 = v31;
    id v32 = v29;
    id v55 = v32;
    id v44 = v15;
    objc_msgSend(v15, "hmf_enumerateWithAutoreleasePoolUsingBlock:", v53);
    uint64_t v33 = [v11 context];
    uint64_t v34 = [v33 partition];
    uint64_t v35 = [v34 redirections];
    int v36 = [v35 processInserts:v24 updates:v20 deletes:v28];

    if (v36)
    {
      v50[0] = MEMORY[0x263EF8330];
      v50[1] = 3221225472;
      v50[2] = ____broadcastChanges_block_invoke_2;
      v50[3] = &unk_264A19EE0;
      id v51 = v24;
      id v52 = v20;
      __removeItemsWithManagedObjectsPassingTest(v32, v50);
      v48[0] = MEMORY[0x263EF8330];
      v48[1] = 3221225472;
      v48[2] = ____broadcastChanges_block_invoke_3;
      v48[3] = &unk_264A19F08;
      id v49 = v28;
      __removeItemsWithManagedObjectsPassingTest(v31, v48);
    }
    uint64_t v37 = __dependencySort(v31);
    __lookup(v11, v37, v43);
    __updateLegacy(v11, v20, v32, 2);
    __updateLegacy(v11, v24, v32, 1);
    v38 = __dependencySort(v32);
    __lookup(v11, v38, v43);
    [v11 dmKickClients];

    id v16 = v43;
    id v13 = v46;
    id v12 = v47;
    id v15 = v44;
    id v14 = v45;
  }
  else
  {
    __int16 v39 = (void *)MEMORY[0x230FBD990]();
    id v40 = v11;
    __int16 v41 = HMFGetOSLogHandle();
    if (os_log_type_enabled(v41, OS_LOG_TYPE_DEBUG))
    {
      v42 = HMFGetLogIdentifier();
      *(_DWORD *)buf = 138544130;
      id v57 = v42;
      __int16 v58 = 2112;
      id v59 = v12;
      __int16 v60 = 2112;
      id v61 = v13;
      __int16 v62 = 2112;
      id v63 = v14;
      _os_log_impl(&dword_22F52A000, v41, OS_LOG_TYPE_DEBUG, "%{public}@Skipping broadcast: updates = %@, inserts = %@, deletes = %@", buf, 0x2Au);
    }
  }
}

id __mirrorForeignObjects(void *a1, void *a2)
{
  id v3 = a1;
  uint64_t v4 = (objc_class *)MEMORY[0x263EFF9C0];
  id v5 = a2;
  id v6 = objc_msgSend([v4 alloc], "initWithCapacity:", objc_msgSend(v5, "count"));
  uint64_t v11 = MEMORY[0x263EF8330];
  uint64_t v12 = 3221225472;
  id v13 = ____mirrorForeignObjects_block_invoke;
  id v14 = &unk_264A1F1D8;
  id v15 = v6;
  id v16 = v3;
  id v7 = v3;
  id v8 = v6;
  objc_msgSend(v5, "hmf_enumerateWithAutoreleasePoolUsingBlock:", &v11);

  uint64_t v9 = objc_msgSend(v8, "copy", v11, v12, v13, v14);
  return v9;
}

void ____mirrorForeignObjects_block_invoke(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void **)(a1 + 32);
  id v3 = *(void **)(a1 + 40);
  id v5 = [a2 objectID];
  uint64_t v4 = [v3 objectWithID:v5];
  [v2 addObject:v4];
}

uint64_t __objectsAreRelevantForBroadcast(void *a1)
{
  uint64_t v15 = *MEMORY[0x263EF8340];
  id v1 = a1;
  if (__objectsAreRelevantForBroadcast_once != -1) {
    dispatch_once(&__objectsAreRelevantForBroadcast_once, &__block_literal_global_95);
  }
  long long v12 = 0u;
  long long v13 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  id v2 = v1;
  uint64_t v3 = [v2 countByEnumeratingWithState:&v10 objects:v14 count:16];
  if (v3)
  {
    uint64_t v4 = *(void *)v11;
    while (2)
    {
      for (uint64_t i = 0; i != v3; ++i)
      {
        if (*(void *)v11 != v4) {
          objc_enumerationMutation(v2);
        }
        id v6 = (void *)__objectsAreRelevantForBroadcast_ignoredEntityNames;
        id v7 = objc_msgSend(*(id *)(*((void *)&v10 + 1) + 8 * i), "objectID", (void)v10);
        id v8 = [v7 entityName];
        LODWORD(v6) = [v6 containsObject:v8];

        if (!v6)
        {
          uint64_t v3 = 1;
          goto LABEL_13;
        }
      }
      uint64_t v3 = [v2 countByEnumeratingWithState:&v10 objects:v14 count:16];
      if (v3) {
        continue;
      }
      break;
    }
  }
LABEL_13:

  return v3;
}

void ____broadcastChanges_block_invoke(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v8 = [v3 change];
  uint64_t v4 = [v8 objectChangeType];
  uint64_t v5 = 40;
  if (v4 == 3) {
    uint64_t v5 = 32;
  }
  id v6 = *(id *)(a1 + v5);
  id v7 = [v8 uuid];
  [v6 setObject:v3 forKeyedSubscript:v7];
}

uint64_t ____broadcastChanges_block_invoke_2(uint64_t a1, void *a2)
{
  id v3 = a2;
  if ([*(id *)(a1 + 32) containsObject:v3]) {
    uint64_t v4 = 0;
  }
  else {
    uint64_t v4 = [*(id *)(a1 + 40) containsObject:v3] ^ 1;
  }

  return v4;
}

void __removeItemsWithManagedObjectsPassingTest(void *a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = (void *)MEMORY[0x263EFF980];
  id v5 = a1;
  id v6 = [v4 array];
  uint64_t v9 = MEMORY[0x263EF8330];
  uint64_t v10 = 3221225472;
  long long v11 = ____removeItemsWithManagedObjectsPassingTest_block_invoke;
  long long v12 = &unk_264A19F30;
  id v13 = v6;
  id v14 = v3;
  id v7 = v6;
  id v8 = v3;
  [v5 enumerateKeysAndObjectsUsingBlock:&v9];
  objc_msgSend(v5, "removeObjectsForKeys:", v7, v9, v10, v11, v12);
}

uint64_t ____broadcastChanges_block_invoke_3(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) containsObject:a2] ^ 1;
}

void __updateLegacy(void *a1, void *a2, void *a3, uint64_t a4)
{
  id v7 = a1;
  id v8 = a3;
  v11[0] = MEMORY[0x263EF8330];
  v11[1] = 3221225472;
  v11[2] = ____updateLegacy_block_invoke;
  v11[3] = &unk_264A19F58;
  id v13 = v8;
  uint64_t v14 = a4;
  id v12 = v7;
  id v9 = v8;
  id v10 = v7;
  objc_msgSend(a2, "hmf_enumerateWithAutoreleasePoolUsingBlock:", v11);
}

void ____updateLegacy_block_invoke(uint64_t a1, void *a2)
{
  uint64_t v32 = *MEMORY[0x263EF8340];
  id v3 = a2;
  uint64_t v4 = HMDCastIfManagedObjectBSORepresentable(v3);
  id v5 = v4;
  if (v4)
  {
    id v6 = *(void **)(a1 + 40);
    id v7 = objc_msgSend(v4, "hmd_modelID");
    id v8 = [v6 objectForKey:v7];

    if (!v8)
    {
      uint64_t v9 = *(void *)(a1 + 48);
      id v25 = 0;
      id v10 = objc_msgSend(v5, "hmd_modelsWithChangeType:detached:error:", v9, 0, &v25);
      long long v11 = (__CFString *)v25;
      if (v10)
      {
        v23[0] = MEMORY[0x263EF8330];
        v23[1] = 3221225472;
        v23[2] = ____updateLegacy_block_invoke_97;
        v23[3] = &unk_264A1AB80;
        id v24 = *(id *)(a1 + 40);
        objc_msgSend(v10, "hmf_enumerateWithAutoreleasePoolUsingBlock:", v23);
      }
      else
      {
        id v19 = (void *)MEMORY[0x230FBD990]();
        id v20 = *(id *)(a1 + 32);
        uint64_t v21 = HMFGetOSLogHandle();
        if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR))
        {
          uint64_t v22 = HMFGetLogIdentifier();
          *(_DWORD *)buf = 138543874;
          id v27 = v22;
          __int16 v28 = 2112;
          id v29 = v5;
          __int16 v30 = 2112;
          id v31 = v11;
          _os_log_impl(&dword_22F52A000, v21, OS_LOG_TYPE_ERROR, "%{public}@Unable to turn managed object %@ into models: %@", buf, 0x20u);
        }
      }
    }
  }
  else
  {
    id v12 = (void *)MEMORY[0x230FBD990]();
    id v13 = *(id *)(a1 + 32);
    uint64_t v14 = HMFGetOSLogHandle();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v15 = HMFGetLogIdentifier();
      unint64_t v16 = *(void *)(a1 + 48) - 1;
      if (v16 > 2) {
        __int16 v17 = @"unknown";
      }
      else {
        __int16 v17 = off_264A26230[v16];
      }
      uint64_t v18 = v17;
      *(_DWORD *)buf = 138543874;
      id v27 = v15;
      __int16 v28 = 2112;
      id v29 = v3;
      __int16 v30 = 2112;
      id v31 = v18;
      _os_log_impl(&dword_22F52A000, v14, OS_LOG_TYPE_DEBUG, "%{public}@Managed object %@ is not BSO-representable, ignoring it for %@", buf, 0x20u);
    }
  }
}

void ____updateLegacy_block_invoke_97(uint64_t a1, void *a2)
{
  id v6 = a2;
  id v3 = [v6 uuid];
  uint64_t v4 = [*(id *)(a1 + 32) objectForKeyedSubscript:v3];

  if (!v4)
  {
    id v5 = [[HMDBackingStoreTransactionItem alloc] initWithChange:v6 message:0];
    [*(id *)(a1 + 32) setObject:v5 forKeyedSubscript:v3];
  }
}

void ____removeItemsWithManagedObjectsPassingTest_block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v8 = a2;
  id v5 = [a3 change];
  id v6 = HMDCastIfModelCDRepresentable(v5);
  id v7 = [v6 managedObject];

  if (v7 && (*(unsigned int (**)(void))(*(void *)(a1 + 40) + 16))()) {
    [*(id *)(a1 + 32) addObject:v8];
  }
}

void ____objectsAreRelevantForBroadcast_block_invoke()
{
  uint64_t v0 = +[HMDCoreData entitiesExcludedFromWorkingStoreHistory];
  id v1 = (void *)__objectsAreRelevantForBroadcast_ignoredEntityNames;
  __objectsAreRelevantForBroadcast_ignoredEntityNames = v0;
}

void sub_22F9EF9F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void ____createLegacyDeletes_block_invoke(uint64_t a1, void *a2)
{
  uint64_t v25 = *MEMORY[0x263EF8340];
  id v3 = a2;
  uint64_t v4 = HMDCastIfManagedObjectBSORepresentable(v3);
  id v5 = v4;
  if (v4)
  {
    id v18 = 0;
    id v6 = objc_msgSend(v4, "hmd_modelsWithChangeType:detached:error:", 3, 0, &v18);
    id v7 = v18;
    if (v6)
    {
      v16[0] = MEMORY[0x263EF8330];
      v16[1] = 3221225472;
      v16[2] = ____createLegacyDeletes_block_invoke_91;
      v16[3] = &unk_264A1AB80;
      id v17 = *(id *)(a1 + 40);
      objc_msgSend(v6, "hmf_enumerateWithAutoreleasePoolUsingBlock:", v16);
    }
    else
    {
      id v12 = (void *)MEMORY[0x230FBD990]();
      id v13 = *(id *)(a1 + 32);
      uint64_t v14 = HMFGetOSLogHandle();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        uint64_t v15 = HMFGetLogIdentifier();
        *(_DWORD *)buf = 138543874;
        id v20 = v15;
        __int16 v21 = 2112;
        id v22 = v5;
        __int16 v23 = 2112;
        id v24 = v7;
        _os_log_impl(&dword_22F52A000, v14, OS_LOG_TYPE_ERROR, "%{public}@Unable to turn managed object %@ into models: %@", buf, 0x20u);
      }
    }
  }
  else
  {
    id v8 = (void *)MEMORY[0x230FBD990]();
    id v9 = *(id *)(a1 + 32);
    id v10 = HMFGetOSLogHandle();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEBUG))
    {
      long long v11 = HMFGetLogIdentifier();
      *(_DWORD *)buf = 138543618;
      id v20 = v11;
      __int16 v21 = 2112;
      id v22 = v3;
      _os_log_impl(&dword_22F52A000, v10, OS_LOG_TYPE_DEBUG, "%{public}@Managed object %@ is not BSO-representable, ignoring it for delete", buf, 0x16u);
    }
  }
}

void ____createLegacyDeletes_block_invoke_91(uint64_t a1, void *a2)
{
  id v2 = *(void **)(a1 + 32);
  id v3 = a2;
  uint64_t v4 = [[HMDBackingStoreTransactionItem alloc] initWithChange:v3 message:0];

  [v2 addObject:v4];
}

HMDBackingStore *__backingStoreWithUUID(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  os_unfair_lock_lock_with_options();
  id v5 = +[HMDBackingStore cdlsActiveBackingStores];
  id v6 = [v5 objectForKey:v3];

  if (v6)
  {
    id v7 = v6;
  }
  else
  {
    id v8 = [[HMDBackingStore alloc] initWithUUID:v3];
    id v9 = +[HMDBackingStore cdlsActiveBackingStores];
    [v9 setObject:v8 forKey:v3];

    id v10 = [(HMDBackingStore *)v8 coreData];
    if (v4) {
      [v10 contextWithHomeUUID:v4];
    }
    else {
    long long v11 = [v10 contextWithRootPartition];
    }

    [(HMDBackingStore *)v8 setContext:v11];
    [v11 setBackingStore:v8];
    id v12 = [MEMORY[0x263F08A00] defaultCenter];
    [v12 addObserver:v8 selector:sel_handleCoreDataWillSaveNotification_ name:*MEMORY[0x263EFF058] object:0];

    id v13 = [MEMORY[0x263F08A00] defaultCenter];
    [v13 addObserver:v8 selector:sel_handleCoreDataDidSaveNotification_ name:*MEMORY[0x263EFF040] object:0];

    id v7 = v8;
  }

  os_unfair_lock_unlock((os_unfair_lock_t)&__backingStoreWithUUID_cdlsActiveBackingStoresLock);
  return v7;
}

void sub_22F9F08CC(_Unwind_Exception *a1)
{
}

void sub_22F9F2B50(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,id location)
{
  objc_destroyWeak(v25);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22F9FAF80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_22F9FC51C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
}

void sub_22F9FCBC4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,id location)
{
  objc_destroyWeak(v23);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22F9FF9C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22FA0101C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,id location)
{
  objc_destroyWeak(v24);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22FA01EF0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, id *location)
{
  objc_destroyWeak(location);
  objc_destroyWeak((id *)(v11 - 184));
  _Unwind_Resume(a1);
}

void sub_22FA04508(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,char a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,char a50,uint64_t a51,uint64_t a52,uint64_t a53,char a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,char a59)
{
}

uint64_t __Block_byref_object_copy__48522(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__48523(uint64_t a1)
{
}

void sub_22FA0485C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FA06C00(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22FA0A924(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22FA0B058(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22FA0D0E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22FA0F210(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 152));
  _Unwind_Resume(a1);
}

void sub_22FA11450(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sha256(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v25 = *MEMORY[0x263EF8340];
  id v9 = a1;
  memset(&c, 0, sizeof(c));
  CC_SHA256_Init(&c);
  __int16 v21 = (id *)&a9;
  id v10 = v9;
  uint64_t v11 = v10;
  if (v10)
  {
    id v12 = v10;
    do
    {
      *(void *)md = 0;
      uint64_t v24 = 0;
      objc_opt_class();
      if (objc_opt_isKindOfClass())
      {
        id v13 = (unsigned __int8 *)[v12 UTF8String];
        CC_LONG v14 = strlen((const char *)v13);
      }
      else
      {
        objc_opt_class();
        if ((objc_opt_isKindOfClass() & 1) == 0)
        {
          objc_opt_class();
          if ((objc_opt_isKindOfClass() & 1) == 0)
          {
            objc_opt_class();
            _HMFPreconditionFailureWithFormat();
          }
          id v13 = md;
          [v12 getUUIDBytes:md];
          CC_LONG v16 = 16;
          goto LABEL_10;
        }
        id v15 = v12;
        id v13 = (unsigned __int8 *)[v15 bytes];
        CC_LONG v14 = [v15 length];
      }
      CC_LONG v16 = v14;
LABEL_10:
      CC_SHA256_Update(&c, v13, v16);
      id v17 = v21++;
      id v18 = *v17;

      id v12 = v18;
    }
    while (v18);
  }
  CC_SHA256_Final(md, &c);
  id v19 = [MEMORY[0x263EFF8F8] dataWithBytes:md length:32];

  return v19;
}

void sub_22FA15B20(_Unwind_Exception *a1)
{
}

void sub_22FA15C38(_Unwind_Exception *a1)
{
}

void sub_22FA15D38(_Unwind_Exception *a1)
{
}

void sub_22FA18938(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

__CFString *__keyNameForEntity(void *a1)
{
  id v1 = a1;
  uint64_t v2 = __collectUserInfoKeyForEntity(v1);
  id v3 = (void *)v2;
  id v4 = @"modelID";
  if (v2) {
    id v4 = (__CFString *)v2;
  }
  id v5 = v4;

  objc_opt_class();
  int v6 = objc_opt_isKindOfClass() & 1;
  if (v6) {
    id v7 = v5;
  }
  else {
    id v7 = 0;
  }
  id v8 = v7;

  if (!v6)
  {
    _HMFPreconditionFailure();
    goto LABEL_12;
  }
  id v9 = [v1 attributesByName];
  id v10 = [v9 objectForKey:v5];

  if (!v10)
  {
LABEL_12:
    uint64_t v12 = _HMFPreconditionFailure();
    return (__CFString *)__findObjectInSet(v12);
  }

  return v5;
}

id __findObjectInSet(void *a1, void *a2, void *a3, uint64_t a4)
{
  id v7 = a2;
  id v8 = a3;
  v13[0] = MEMORY[0x263EF8330];
  v13[1] = 3221225472;
  v13[2] = ____findObjectInSet_block_invoke;
  v13[3] = &unk_264A1A930;
  id v15 = v7;
  uint64_t v16 = a4;
  id v14 = v8;
  id v9 = v7;
  id v10 = v8;
  uint64_t v11 = objc_msgSend(a1, "na_firstObjectPassingTest:", v13);

  return v11;
}

id ____findObjectInSet_block_invoke(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = v3;
  if (!*(void *)(a1 + 32))
  {
    char isKindOfClass = objc_opt_isKindOfClass();
    goto LABEL_7;
  }
  id v5 = [v3 valueForKey:*(void *)(a1 + 40)];
  int v6 = [v5 isEqual:*(void *)(a1 + 32)];

  if (!v6)
  {
    char isKindOfClass = 0;
    goto LABEL_7;
  }
  if (objc_opt_isKindOfClass())
  {
    char isKindOfClass = 1;
LABEL_7:

    return (id)(isKindOfClass & 1);
  }
  id v9 = (void *)_HMFPreconditionFailure();
  return __collectUserInfoKeyForEntity(v9);
}

id __collectUserInfoKeyForEntity(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    uint64_t v2 = v1;
    id v3 = [v1 userInfo];
    id v4 = [v3 objectForKey:@"keyAttribute"];

    if (v4)
    {
      id v5 = v4;
    }
    else
    {
      id v5 = [v2 superentity];

      if (v5)
      {
        int v6 = [v2 superentity];
        __collectUserInfoKeyForEntity();
        id v5 = (id)objc_claimAutoreleasedReturnValue();
      }
    }

    return v5;
  }
  else
  {
    uint64_t v8 = _HMFPreconditionFailure();
    return (id)-[NSManagedObject(HomeKitDaemon) mkf_removeFromRelationship:object:](v8);
  }
}

id __createNewObject(void *a1, void *a2, void *a3, void *a4)
{
  id v7 = a1;
  id v8 = a3;
  id v9 = a4;
  id v10 = [a2 entity];
  uint64_t v11 = [v7 entity];
  uint64_t v12 = [v8 inverseRelationship];
  id v13 = [v12 destinationEntity];
  char v14 = [v11 isKindOfEntity:v13];

  if ((v14 & 1) == 0)
  {
    _HMFPreconditionFailure();
    goto LABEL_20;
  }
  id v15 = objc_alloc(MEMORY[0x263EFF280]);
  uint64_t v16 = [v7 managedObjectContext];
  id v17 = (void *)[v15 initWithEntity:v10 insertIntoManagedObjectContext:v16];

  id v18 = [v8 destinationEntity];
  id v19 = [v18 managedObjectClassName];
  NSClassFromString(v19);
  char isKindOfClass = objc_opt_isKindOfClass();

  if ((isKindOfClass & 1) == 0)
  {
LABEL_20:
    _HMFPreconditionFailure();
    goto LABEL_21;
  }
  __int16 v21 = __keyNameForEntity(v10);
  if (![v21 isEqual:@"modelID"])
  {
    if (v9)
    {
      [v17 setValue:v9 forKey:v21];
      id v22 = [v10 attributesByName];
      __int16 v23 = [v22 objectForKey:@"modelID"];

      if (!v23) {
        goto LABEL_14;
      }
      if (objc_opt_respondsToSelector())
      {
        uint64_t v24 = [a2 modelIDForKeyAttribute:v9 parent:v7];
        objc_opt_class();
        if (objc_opt_isKindOfClass())
        {
          [v17 setValue:v24 forKey:@"modelID"];

          goto LABEL_14;
        }
LABEL_24:
        uint64_t v32 = _HMFPreconditionFailure();
        return (id)-[NSManagedObject(HomeKitDaemon) mkf_materializeOrCreateRelationOnProperty:modelProtocol:keyValue:createdNew:](v32);
      }
LABEL_23:
      _HMFPreconditionFailure();
      goto LABEL_24;
    }
LABEL_22:
    _HMFPreconditionFailure();
    goto LABEL_23;
  }
  if (!v9)
  {
    if ((objc_opt_respondsToSelector() & 1) == 0) {
      goto LABEL_22;
    }
    id v9 = [a2 modelIDForParentRelationshipTo:v7];
    if (!v9) {
      goto LABEL_22;
    }
  }
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0)
  {
LABEL_21:
    _HMFPreconditionFailure();
    goto LABEL_22;
  }
  [v17 setValue:v9 forKey:v21];
LABEL_14:
  uint64_t v25 = [v10 relationshipsByName];
  uint64_t v26 = [v8 inverseRelationship];
  id v27 = [v26 name];
  __int16 v28 = [v25 objectForKey:v27];

  if (v28)
  {
    id v29 = [v8 inverseRelationship];
    __int16 v30 = [v29 name];
    [v17 setValue:v7 forKey:v30];
  }
  return v17;
}

void sub_22FA1EEDC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  uint64_t v14 = va_arg(va1, void);
  uint64_t v16 = va_arg(va1, void);
  uint64_t v17 = va_arg(va1, void);
  uint64_t v18 = va_arg(va1, void);
  _Block_object_dispose(va1, 8);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__51687(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__51688(uint64_t a1)
{
}

void sub_22FA24DA8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22FA2957C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__52624(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__52625(uint64_t a1)
{
}

void sub_22FA29810(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_22FA2A2BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,id location)
{
  objc_destroyWeak(v31);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22FA2A88C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22FA2AE44(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22FA2B5E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,id location)
{
  _Block_object_dispose((const void *)(v40 - 160), 8);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22FA2E140(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FA2E620(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FA2E7C4(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

id hds_log()
{
  if (hds_log__hmf_once_t0 != -1) {
    dispatch_once(&hds_log__hmf_once_t0, &__block_literal_global_53897);
  }
  uint64_t v0 = (void *)hds_log__hmf_once_v1;
  return v0;
}

void __hds_log_block_invoke()
{
  id v2 = [@"hds" stringByReplacingOccurrencesOfString:@"_" withString:@"."];
  uint64_t v0 = HMFCreateOSLogHandle();
  id v1 = (void *)hds_log__hmf_once_v1;
  hds_log__hmf_once_id v1 = v0;
}

void sub_22FA34FE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
}

uint64_t __Block_byref_object_copy__54023(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__54024(uint64_t a1)
{
}

void ____homeWithHomeManager_block_invoke(uint64_t a1)
{
  uint64_t v198 = *MEMORY[0x263EF8340];
  id v2 = [*(id *)(a1 + 32) _homeWithUUID:*(void *)(a1 + 40)];

  if (v2)
  {
    id v3 = (void *)MEMORY[0x230FBD990]();
    id v4 = *(id *)(a1 + 32);
    id v5 = HMFGetOSLogHandle();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
    {
      int v6 = HMFGetLogIdentifier();
      id v7 = *(__CFString **)(a1 + 40);
      *(_DWORD *)buf = 138543618;
      v169 = v6;
      __int16 v170 = 2112;
      v171 = v7;
      _os_log_impl(&dword_22F52A000, v5, OS_LOG_TYPE_ERROR, "%{public}@Not re-adding a home that already exists (%@)", buf, 0x16u);
    }
  }
  else
  {
    uint64_t v8 = HMFUptime();
    double v10 = v9;
    uint64_t v11 = (void *)MEMORY[0x230FBD990](v8);
    id v12 = *(id *)(a1 + 32);
    id v13 = HMFGetOSLogHandle();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v14 = HMFGetLogIdentifier();
      id v15 = *(void **)(a1 + 40);
      *(_DWORD *)buf = 138544898;
      v169 = v14;
      __int16 v170 = 2114;
      v171 = @"homeManagerInitStart";
      __int16 v172 = 2112;
      v173 = @"Fetching and creating home";
      __int16 v174 = 2114;
      v175 = @"state";
      __int16 v176 = 2112;
      v177 = @"homeManagerCreatingHome";
      __int16 v178 = 2114;
      v179 = @"homeUUID";
      __int16 v180 = 2112;
      v181 = v15;
      _os_log_impl(&dword_22F52A000, v13, OS_LOG_TYPE_DEBUG, "%{public}@tag=\"%{public}@\" desc=\"%@\" %{public}@=\"%@\" %{public}@=\"%@\"", buf, 0x48u);
    }
    uint64_t v16 = [MEMORY[0x263F499E0] sharedInstance];
    id v17 = objc_alloc(MEMORY[0x263F499F0]);
    uint64_t v160 = *(void *)(a1 + 40);
    uint64_t v18 = HMDTaggedLoggingCreateDictionary();
    id v19 = objc_msgSend(v17, "initWithTag:data:", @"homeManagerInitStart", v18, @"state", @"homeManagerCreatingHome", @"homeUUID", v160);
    id v20 = [MEMORY[0x263F424F0] currentTagProcessorList];
    [v16 submitTaggedEvent:v19 processorList:v20];

    uint64_t v22 = *(void *)(a1 + 40);
    __int16 v21 = *(void **)(a1 + 48);
    id v167 = 0;
    uint64_t v23 = [v21 cdlsFetchObjectWithUUID:v22 ofModelType:objc_opt_class() error:&v167];
    id v24 = v167;
    uint64_t v25 = *(void *)(*(void *)(a1 + 56) + 8);
    uint64_t v26 = *(void **)(v25 + 40);
    *(void *)(v25 + 40) = v23;

    uint64_t v27 = *(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 40);
    if (v27)
    {
      uint64_t v28 = *(void *)(a1 + 32);
      uint64_t v29 = *(void *)(a1 + 48);
      id v166 = v24;
      __int16 v30 = +[HMDHome homeWithHomeManager:v28 backingStore:v29 model:v27 error:&v166];
      id v31 = v166;

      uint64_t v32 = (void *)MEMORY[0x230FBD990]();
      id v33 = *(id *)(a1 + 32);
      uint64_t v34 = HMFGetOSLogHandle();
      if (os_log_type_enabled(v34, OS_LOG_TYPE_INFO))
      {
        uint64_t v35 = HMFGetLogIdentifier();
        v163 = v32;
        int v36 = NSString;
        HMFUptime();
        v38 = objc_msgSend(v36, "stringWithFormat:", @"%.3f", v37 - v10);
        __int16 v39 = [NSNumber numberWithInt:v30 != 0];
        uint64_t v40 = [v31 domain];
        __int16 v41 = objc_msgSend(NSNumber, "numberWithInteger:", objc_msgSend(v31, "code"));
        uint64_t v42 = *(void *)(a1 + 40);
        *(_DWORD *)buf = 138546946;
        v169 = v35;
        __int16 v170 = 2114;
        v171 = @"homeManagerInitStart";
        __int16 v172 = 2112;
        v173 = @"Created home from home model";
        __int16 v174 = 2114;
        v175 = @"state";
        __int16 v176 = 2112;
        v177 = @"homeManagerCreatedHome";
        __int16 v178 = 2114;
        v179 = @"duration";
        __int16 v180 = 2112;
        v181 = v38;
        __int16 v182 = 2114;
        v183 = @"success";
        __int16 v184 = 2112;
        v185 = v39;
        __int16 v186 = 2114;
        v187 = @"errorDomain";
        __int16 v188 = 2112;
        v189 = v40;
        __int16 v190 = 2114;
        v191 = @"errorCode";
        __int16 v192 = 2112;
        v193 = v41;
        __int16 v194 = 2114;
        v195 = @"homeUUID";
        __int16 v196 = 2112;
        uint64_t v197 = v42;
        _os_log_impl(&dword_22F52A000, v34, OS_LOG_TYPE_INFO, "%{public}@tag=\"%{public}@\" desc=\"%@\" %{public}@=\"%@\" %{public}@=\"%@\" %{public}@=\"%@\" %{public}@=\"%@\" %{public}@=\"%@\" %{public}@=\"%@\"", buf, 0x98u);

        uint64_t v32 = v163;
      }
      id v165 = v31;

      __int16 v43 = [MEMORY[0x263F499E0] sharedInstance];
      id v44 = objc_alloc(MEMORY[0x263F499F0]);
      id v45 = NSString;
      HMFUptime();
      id v47 = objc_msgSend(v45, "stringWithFormat:", @"%.3f", v46 - v10);
      id v48 = [NSNumber numberWithInt:v30 != 0];
      id v49 = [v31 domain];
      id v50 = objc_msgSend(NSNumber, "numberWithInteger:", objc_msgSend(v31, "code"));
      uint64_t v162 = *(void *)(a1 + 40);
      id v51 = HMDTaggedLoggingCreateDictionary();
      id v52 = objc_msgSend(v44, "initWithTag:data:", @"homeManagerInitStart", v51, @"state", @"homeManagerCreatedHome", @"duration", v47, @"success", v48, @"errorDomain", v49, @"errorCode", v50, @"homeUUID", v162);
      id v53 = [MEMORY[0x263F424F0] currentTagProcessorList];
      [v43 submitTaggedEvent:v52 processorList:v53];

      if (v30)
      {
        uint64_t v54 = HMFUptime();
        double v56 = v55;
        id v57 = (void *)MEMORY[0x230FBD990](v54);
        id v58 = *(id *)(a1 + 32);
        id v59 = HMFGetOSLogHandle();
        if (os_log_type_enabled(v59, OS_LOG_TYPE_INFO))
        {
          __int16 v60 = HMFGetLogIdentifier();
          id v61 = [v30 uuid];
          __int16 v62 = [v30 name];
          *(_DWORD *)buf = 138545410;
          v169 = v60;
          __int16 v170 = 2114;
          v171 = @"homeManagerInitStart";
          __int16 v172 = 2112;
          v173 = @"Adding home";
          __int16 v174 = 2114;
          v175 = @"state";
          __int16 v176 = 2112;
          v177 = @"homeManagerAddingHome";
          __int16 v178 = 2114;
          v179 = @"homeUUID";
          __int16 v180 = 2112;
          v181 = v61;
          __int16 v182 = 2114;
          v183 = @"homeName";
          __int16 v184 = 2112;
          v185 = v62;
          _os_log_impl(&dword_22F52A000, v59, OS_LOG_TYPE_INFO, "%{public}@tag=\"%{public}@\" desc=\"%@\" %{public}@=\"%@\" %{public}@=\"%@\" %{public}@=\"%@\"", buf, 0x5Cu);
        }
        id v63 = [MEMORY[0x263F499E0] sharedInstance];
        id v64 = objc_alloc(MEMORY[0x263F499F0]);
        uint64_t v65 = [v30 uuid];
        v66 = [v30 name];
        id v67 = HMDTaggedLoggingCreateDictionary();
        id v68 = objc_msgSend(v64, "initWithTag:data:", @"homeManagerInitStart", v67, @"state", @"homeManagerAddingHome", @"homeUUID", v65, @"homeName", v66);
        id v69 = [MEMORY[0x263F424F0] currentTagProcessorList];
        [v63 submitTaggedEvent:v68 processorList:v69];

        id v70 = [*(id *)(a1 + 32) incomingInvitations];
        v71 = [v30 uuid];
        id v72 = objc_msgSend(v70, "hmf_firstObjectWithValue:forKeyPath:", v71, @"homeUUID");

        v164 = v72;
        if (v72)
        {
          uint64_t v73 = (void *)MEMORY[0x230FBD990]();
          id v74 = *(id *)(a1 + 32);
          id v75 = HMFGetOSLogHandle();
          if (os_log_type_enabled(v75, OS_LOG_TYPE_INFO))
          {
            id v76 = HMFGetLogIdentifier();
            id v77 = [v30 uuid];
            __int16 v78 = [v72 describeWithFormat];
            *(_DWORD *)buf = 138543874;
            v169 = v76;
            __int16 v170 = 2112;
            v171 = v77;
            __int16 v172 = 2112;
            v173 = v78;
            _os_log_impl(&dword_22F52A000, v75, OS_LOG_TYPE_INFO, "%{public}@Removing existing invitation for home with UUID: %@ in invite %@", buf, 0x20u);
          }
          [*(id *)(a1 + 32) _postIncomingInvitationStateChangedNotification:v72 newInvitationState:3];
          [*(id *)(a1 + 32) _removeIncomingInvitation:v72];
        }
        uint64_t v79 = [*(id *)(a1 + 32) nameValidator];
        uint64_t v80 = [v30 uuid];
        id v81 = (id)[v79 addNamespace:v80];

        v82 = *(void **)(a1 + 32);
        __int16 v83 = [v30 name];
        id v84 = [*(id *)(a1 + 32) uuid];
        id v85 = (id)[v82 addName:v83 namespace:v84];

        id v86 = *(void **)(a1 + 32);
        __int16 v87 = [v30 roomForEntireHome];
        v88 = [v87 name];
        __int16 v89 = [v30 uuid];
        id v90 = (id)[v86 addName:v88 namespace:v89];

        uint64_t v91 = (void *)MEMORY[0x230FBD990]([*(id *)(a1 + 32) addHome:v30]);
        id v92 = *(id *)(a1 + 32);
        id v93 = HMFGetOSLogHandle();
        if (os_log_type_enabled(v93, OS_LOG_TYPE_INFO))
        {
          v94 = HMFGetLogIdentifier();
          v95 = NSString;
          HMFUptime();
          uint64_t v97 = objc_msgSend(v95, "stringWithFormat:", @"%.3f", v96 - v56);
          uint64_t v98 = [v30 uuid];
          *(_DWORD *)buf = 138545410;
          v169 = v94;
          __int16 v170 = 2114;
          v171 = @"homeManagerInitStart";
          __int16 v172 = 2112;
          v173 = @"Added home";
          __int16 v174 = 2114;
          v175 = @"state";
          __int16 v176 = 2112;
          v177 = @"homeManagerAddedHome";
          __int16 v178 = 2114;
          v179 = @"duration";
          __int16 v180 = 2112;
          v181 = v97;
          __int16 v182 = 2114;
          v183 = @"homeUUID";
          __int16 v184 = 2112;
          v185 = v98;
          _os_log_impl(&dword_22F52A000, v93, OS_LOG_TYPE_INFO, "%{public}@tag=\"%{public}@\" desc=\"%@\" %{public}@=\"%@\" %{public}@=\"%@\" %{public}@=\"%@\"", buf, 0x5Cu);
        }
        long long v99 = [MEMORY[0x263F499E0] sharedInstance];
        id v100 = objc_alloc(MEMORY[0x263F499F0]);
        long long v101 = NSString;
        HMFUptime();
        long long v103 = objc_msgSend(v101, "stringWithFormat:", @"%.3f", v102 - v56);
        long long v104 = [v30 uuid];
        long long v105 = HMDTaggedLoggingCreateDictionary();
        long long v106 = objc_msgSend(v100, "initWithTag:data:", @"homeManagerInitStart", v105, @"state", @"homeManagerAddedHome", @"duration", v103, @"homeUUID", v104);
        long long v107 = [MEMORY[0x263F424F0] currentTagProcessorList];
        [v99 submitTaggedEvent:v106 processorList:v107];

        long long v108 = [*(id *)(*(void *)(*(void *)(a1 + 56) + 8) + 40) owned];
        objc_msgSend(v30, "setOwnerUser:", objc_msgSend(v108, "BOOLValue"));

        uint64_t v109 = HMFUptime();
        double v111 = v110;
        v112 = (void *)MEMORY[0x230FBD990](v109);
        id v113 = *(id *)(a1 + 32);
        v114 = HMFGetOSLogHandle();
        if (os_log_type_enabled(v114, OS_LOG_TYPE_DEBUG))
        {
          v115 = HMFGetLogIdentifier();
          v116 = [v30 uuid];
          *(_DWORD *)buf = 138544898;
          v169 = v115;
          __int16 v170 = 2114;
          v171 = @"homeManagerInitStart";
          __int16 v172 = 2112;
          v173 = @"Configuring home";
          __int16 v174 = 2114;
          v175 = @"state";
          __int16 v176 = 2112;
          v177 = @"homeManagerConfiguringHome";
          __int16 v178 = 2114;
          v179 = @"homeUUID";
          __int16 v180 = 2112;
          v181 = v116;
          _os_log_impl(&dword_22F52A000, v114, OS_LOG_TYPE_DEBUG, "%{public}@tag=\"%{public}@\" desc=\"%@\" %{public}@=\"%@\" %{public}@=\"%@\"", buf, 0x48u);
        }
        v117 = [MEMORY[0x263F499E0] sharedInstance];
        id v118 = objc_alloc(MEMORY[0x263F499F0]);
        v119 = [v30 uuid];
        __int16 v120 = HMDTaggedLoggingCreateDictionary();
        id v121 = objc_msgSend(v118, "initWithTag:data:", @"homeManagerInitStart", v120, @"state", @"homeManagerConfiguringHome", @"homeUUID", v119);
        __int16 v122 = [MEMORY[0x263F424F0] currentTagProcessorList];
        [v117 submitTaggedEvent:v121 processorList:v122];

        v123 = (void *)MEMORY[0x230FBD990]([v30 configureWithHomeManager:*(void *)(a1 + 32) accessoriesPresent:0 uncommittedTransactions:MEMORY[0x263EFFA68] source:1]);
        id v124 = *(id *)(a1 + 32);
        v125 = HMFGetOSLogHandle();
        if (os_log_type_enabled(v125, OS_LOG_TYPE_INFO))
        {
          v126 = HMFGetLogIdentifier();
          v127 = NSString;
          HMFUptime();
          v129 = objc_msgSend(v127, "stringWithFormat:", @"%.3f", v128 - v111);
          v130 = [v30 uuid];
          *(_DWORD *)buf = 138545410;
          v169 = v126;
          __int16 v170 = 2114;
          v171 = @"homeManagerInitStart";
          __int16 v172 = 2112;
          v173 = @"Configured home";
          __int16 v174 = 2114;
          v175 = @"state";
          __int16 v176 = 2112;
          v177 = @"homeManagerConfiguredHome";
          __int16 v178 = 2114;
          v179 = @"duration";
          __int16 v180 = 2112;
          v181 = v129;
          __int16 v182 = 2114;
          v183 = @"homeUUID";
          __int16 v184 = 2112;
          v185 = v130;
          _os_log_impl(&dword_22F52A000, v125, OS_LOG_TYPE_INFO, "%{public}@tag=\"%{public}@\" desc=\"%@\" %{public}@=\"%@\" %{public}@=\"%@\" %{public}@=\"%@\"", buf, 0x5Cu);
        }
        v131 = [MEMORY[0x263F499E0] sharedInstance];
        id v132 = objc_alloc(MEMORY[0x263F499F0]);
        v133 = NSString;
        HMFUptime();
        v135 = objc_msgSend(v133, "stringWithFormat:", @"%.3f", v134 - v111);
        v136 = [v30 uuid];
        v137 = HMDTaggedLoggingCreateDictionary();
        v138 = objc_msgSend(v132, "initWithTag:data:", @"homeManagerInitStart", v137, @"state", @"homeManagerConfiguredHome", @"duration", v135, @"homeUUID", v136);
        v139 = [MEMORY[0x263F424F0] currentTagProcessorList];
        [v131 submitTaggedEvent:v138 processorList:v139];

        v140 = v164;
        id v24 = v165;
      }
      else
      {
        uint64_t v159 = *(void *)(*(void *)(a1 + 56) + 8);
        v140 = *(void **)(v159 + 40);
        *(void *)(v159 + 40) = 0;
        id v24 = v165;
      }
    }
    else
    {
      v141 = (void *)MEMORY[0x230FBD990]();
      id v142 = *(id *)(a1 + 32);
      v143 = HMFGetOSLogHandle();
      if (os_log_type_enabled(v143, OS_LOG_TYPE_ERROR))
      {
        v144 = HMFGetLogIdentifier();
        v145 = NSString;
        HMFUptime();
        v147 = objc_msgSend(v145, "stringWithFormat:", @"%.3f", v146 - v10);
        v148 = [v24 domain];
        v149 = objc_msgSend(NSNumber, "numberWithInteger:", objc_msgSend(v24, "code"));
        v150 = *(void **)(a1 + 40);
        *(_DWORD *)buf = 138546434;
        v169 = v144;
        __int16 v170 = 2114;
        v171 = @"homeManagerInitStart";
        __int16 v172 = 2112;
        v173 = @"Unable to find home";
        __int16 v174 = 2114;
        v175 = @"state";
        __int16 v176 = 2112;
        v177 = @"homeManagerCreatedHome";
        __int16 v178 = 2114;
        v179 = @"duration";
        __int16 v180 = 2112;
        v181 = v147;
        __int16 v182 = 2114;
        v183 = @"errorDomain";
        __int16 v184 = 2112;
        v185 = v148;
        __int16 v186 = 2114;
        v187 = @"errorCode";
        __int16 v188 = 2112;
        v189 = v149;
        __int16 v190 = 2114;
        v191 = @"homeUUID";
        __int16 v192 = 2112;
        v193 = v150;
        _os_log_impl(&dword_22F52A000, v143, OS_LOG_TYPE_ERROR, "%{public}@tag=\"%{public}@\" desc=\"%@\" %{public}@=\"%@\" %{public}@=\"%@\" %{public}@=\"%@\" %{public}@=\"%@\" %{public}@=\"%@\"", buf, 0x84u);
      }
      __int16 v30 = [MEMORY[0x263F499E0] sharedInstance];
      id v151 = objc_alloc(MEMORY[0x263F499F0]);
      v152 = NSString;
      HMFUptime();
      v140 = objc_msgSend(v152, "stringWithFormat:", @"%.3f", v153 - v10);
      v154 = [v24 domain];
      v155 = objc_msgSend(NSNumber, "numberWithInteger:", objc_msgSend(v24, "code"));
      uint64_t v161 = *(void *)(a1 + 40);
      v156 = HMDTaggedLoggingCreateDictionary();
      v157 = objc_msgSend(v151, "initWithTag:data:", @"homeManagerInitStart", v156, @"state", @"homeManagerCreatedHome", @"duration", v140, @"errorDomain", v154, @"errorCode", v155, @"homeUUID", v161);
      v158 = [MEMORY[0x263F424F0] currentTagProcessorList];
      [v30 submitTaggedEvent:v157 processorList:v158];
    }
  }
}

void sub_22FA397E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id *a10, id *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,id location)
{
  objc_destroyWeak(v25);
  objc_destroyWeak(v24);
  objc_destroyWeak(&location);
  objc_destroyWeak(a11);
  objc_destroyWeak(a10);
  objc_destroyWeak((id *)(v26 - 152));
  objc_destroyWeak((id *)(v26 - 144));
  _Unwind_Resume(a1);
}

void sub_22FA3AD38(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
}

void sub_22FA3B91C(_Unwind_Exception *exception_object)
{
}

void sub_22FA3BAAC(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FA3BD10(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FA3BE54(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FA3FD48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__54973(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__54974(uint64_t a1)
{
}

void sub_22FA41638(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,id location)
{
  objc_destroyWeak(v31);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void __getDenylistKeys_block_invoke()
{
  if (isInternalBuild()) {
    objc_msgSend(MEMORY[0x263EFFA08], "setWithObjects:", @"kAuthorizationDataKey", 0, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14);
  }
  else {
  uint64_t v0 = objc_msgSend(MEMORY[0x263EFFA08], "setWithObjects:", @"kAuthorizationDataKey", @"kAccessoryPairingPasswordKey", @"kAccessoryName", @"kServiceName", @"kActionSetName", @"kTriggerName", @"kZoneName", @"kHomeName", @"kRoomName", @"kAccessoryInfoSerialNumberKey", @"kUserIDKey", @"kUserIDsKey", @"kUserDisplayNameKey", @"kUserNamesKey", 0);
  }
  id v1 = (void *)getDenylistKeys_denylistKeys;
  getDenylistKeys_denylistKeys = v0;
}

void sub_22FA426F0(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

uint64_t validateEntitlementForConnection(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  uint64_t v5 = v4;
  if (v4
    && (([v4 valueForEntitlement:v3],
         uint64_t v6 = objc_claimAutoreleasedReturnValue(),
         objc_opt_class(),
         (objc_opt_isKindOfClass() & 1) == 0)
      ? (uint64_t v7 = 0)
      : (uint64_t v7 = v6),
        id v8 = v7,
        v6,
        v8))
  {
    uint64_t v9 = [v8 BOOLValue];
  }
  else
  {
    uint64_t v9 = 0;
  }

  return v9;
}

void sub_22FA43114(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FA43590(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

id HMXPCClientEntitlementsToComponents(unint64_t a1)
{
  uint64_t v2 = [MEMORY[0x263EFF980] arrayWithCapacity:64];
  if (a1)
  {
    for (uint64_t i = 1; i - 1 < a1; i *= 2)
    {
      if ((i & a1) != 0)
      {
        if (i > 4095)
        {
          if (i < 0x20000)
          {
            if (i < 0x4000)
            {
              if (i == 4096)
              {
                id v4 = @"com.apple.private.homekit.messaging";
                goto LABEL_52;
              }
              if (i == 0x2000)
              {
                id v4 = @"com.apple.private.homekit.person-manager";
                goto LABEL_52;
              }
            }
            else
            {
              switch(i)
              {
                case 0x4000:
                  id v4 = @"com.apple.private.homekit.allow-secure-access";
                  goto LABEL_52;
                case 0x8000:
                  id v4 = @"com.apple.private.homekit.diagnostics";
                  goto LABEL_52;
                case 0x10000:
                  id v4 = @"com.apple.private.homekit.state-dump";
                  goto LABEL_52;
              }
            }
          }
          else if (i >= 0x100000)
          {
            switch(i)
            {
              case 0x100000:
                id v4 = @"com.apple.private.homekit.location-feedback-debug";
                goto LABEL_52;
              case 0x200000:
                id v4 = @"com.apple.developer.matter.allow-setup-payload";
                goto LABEL_52;
              case 0x400000:
                id v4 = @"com.apple.private.homekit.modern-messaging";
                goto LABEL_52;
            }
          }
          else
          {
            switch(i)
            {
              case 0x20000:
                id v4 = @"com.apple.private.homekit.wallet-key";
                goto LABEL_52;
              case 0x40000:
                id v4 = @"com.apple.private.homekit.assistant-identifiers";
                goto LABEL_52;
              case 0x80000:
                id v4 = @"com.apple.private.homekit.home-location";
LABEL_52:
                [v2 addObject:v4];
                break;
            }
          }
        }
        else
        {
          if (i <= 63)
          {
            id v4 = @"com.apple.developer.homekit";
            switch(i)
            {
              case 1:
                goto LABEL_52;
              case 2:
                id v4 = @"com.apple.developer.homekit.background-mode";
                goto LABEL_52;
              case 3:
              case 5:
              case 6:
              case 7:
                continue;
              case 4:
                id v4 = @"com.apple.private.homekit";
                goto LABEL_52;
              case 8:
                id v4 = @"com.apple.private.homekit.pairing-identity";
                goto LABEL_52;
              default:
                if (i == 16)
                {
                  id v4 = @"com.apple.private.homekit.pairing-identity.private";
                }
                else
                {
                  if (i != 32) {
                    continue;
                  }
                  id v4 = @"com.apple.private.homekit.remote-login.private";
                }
                break;
            }
            goto LABEL_52;
          }
          if (i > 511)
          {
            switch(i)
            {
              case 512:
                id v4 = @"com.apple.private.homekit.multi-user.setup";
                goto LABEL_52;
              case 1024:
                id v4 = @"com.apple.private.homekit.location";
                goto LABEL_52;
              case 2048:
                id v4 = @"com.apple.private.homekit.shortcuts-automation-access";
                goto LABEL_52;
            }
          }
          else
          {
            switch(i)
            {
              case 64:
                id v4 = @"com.apple.developer.homekit.allow-setup-payload";
                goto LABEL_52;
              case 128:
                id v4 = @"com.apple.private.homekit.cameraclips";
                goto LABEL_52;
              case 256:
                id v4 = @"com.apple.private.homekit.connectivity-info";
                goto LABEL_52;
            }
          }
        }
      }
    }
  }
  uint64_t v5 = (void *)[v2 copy];

  return v5;
}

void sub_22FA45558(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FA47390(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,char a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,char a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,char a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  _Block_object_dispose(&a37, 8);
  _Block_object_dispose(&a43, 8);
  _Block_object_dispose(&a49, 8);
  _Block_object_dispose(&a65, 8);
  _Block_object_dispose((const void *)(v65 - 256), 8);
  _Block_object_dispose((const void *)(v65 - 176), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__55678(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__55679(uint64_t a1)
{
}

void sub_22FA4A0D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_22FA4A300(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_22FA4A530(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_22FA4AD2C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FA4AEE8(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FA4E10C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,char a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
}

void sub_22FA4E720(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_22FA4E954(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_22FA4ECF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_22FA4EF24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_22FA4F2C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_22FA4F4F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_22FA50B34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_22FA52D30(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FA52DB0(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FA52E2C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FA53584(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FA543DC(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FA54894(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FA55044(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FA578C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va1, a8);
  va_start(va, a8);
  uint64_t v9 = va_arg(va1, void);
  uint64_t v11 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__56914(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__56915(uint64_t a1)
{
}

void sub_22FA57EE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_start(va, a14);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_22FA5D310(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22FA5DD3C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FA5E228(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FA7038C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,char a54,uint64_t a55,uint64_t a56,uint64_t a57,char a58)
{
}

uint64_t __Block_byref_object_copy__58409(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__58410(uint64_t a1)
{
}

void sub_22FA75730(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  objc_destroyWeak(v21);
  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22FA7603C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 144));
  _Unwind_Resume(a1);
}

void sub_22FA7B67C(_Unwind_Exception *a1)
{
}

void sub_22FA7B714(_Unwind_Exception *a1)
{
}

void sub_22FA82E48(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FA82EFC(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FA82FC8(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FA83054(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FA83174(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FA83278(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

uint64_t appendToMutableData(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  return 0;
}

void sub_22FA862F4(_Unwind_Exception *a1)
{
}

void __notifyDelegateAccountRemoved(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  if (v3)
  {
    uint64_t v5 = [v3 clientQueue];
    v6[0] = MEMORY[0x263EF8330];
    v6[1] = 3221225472;
    v6[2] = ____notifyDelegateAccountRemoved_block_invoke;
    v6[3] = &unk_264A2F820;
    id v7 = v3;
    id v8 = v4;
    dispatch_async(v5, v6);
  }
}

void ____notifyDelegateAccountRemoved_block_invoke(uint64_t a1)
{
  uint64_t v17 = *MEMORY[0x263EF8340];
  uint64_t v2 = (void *)MEMORY[0x230FBD990]();
  id v3 = *(id *)(a1 + 32);
  id v4 = HMFGetOSLogHandle();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
  {
    uint64_t v5 = HMFGetLogIdentifier();
    uint64_t v6 = [*(id *)(a1 + 40) shortDescription];
    *(_DWORD *)buf = 138543618;
    uint64_t v14 = v5;
    __int16 v15 = 2112;
    uint64_t v16 = v6;
    _os_log_impl(&dword_22F52A000, v4, OS_LOG_TYPE_INFO, "%{public}@Account removed: %@", buf, 0x16u);
  }
  id v7 = [MEMORY[0x263F08A00] defaultCenter];
  uint64_t v9 = *(void *)(a1 + 32);
  uint64_t v8 = *(void *)(a1 + 40);
  uint64_t v11 = @"HMDAccountNotificationKey";
  uint64_t v12 = v8;
  uint64_t v10 = [NSDictionary dictionaryWithObjects:&v12 forKeys:&v11 count:1];
  [v7 postNotificationName:@"HMDAccountRegistryRemovedAccountNotification" object:v9 userInfo:v10];
}

void __notifyDelegateAccountAdded(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  if (v3)
  {
    uint64_t v5 = [v3 clientQueue];
    v6[0] = MEMORY[0x263EF8330];
    v6[1] = 3221225472;
    v6[2] = ____notifyDelegateAccountAdded_block_invoke;
    v6[3] = &unk_264A2F820;
    id v7 = v3;
    id v8 = v4;
    dispatch_async(v5, v6);
  }
}

void ____notifyDelegateAccountAdded_block_invoke(uint64_t a1)
{
  uint64_t v17 = *MEMORY[0x263EF8340];
  uint64_t v2 = (void *)MEMORY[0x230FBD990]();
  id v3 = *(id *)(a1 + 32);
  id v4 = HMFGetOSLogHandle();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
  {
    uint64_t v5 = HMFGetLogIdentifier();
    uint64_t v6 = [*(id *)(a1 + 40) shortDescription];
    *(_DWORD *)buf = 138543618;
    uint64_t v14 = v5;
    __int16 v15 = 2112;
    uint64_t v16 = v6;
    _os_log_impl(&dword_22F52A000, v4, OS_LOG_TYPE_INFO, "%{public}@Account added: %@", buf, 0x16u);
  }
  id v7 = [MEMORY[0x263F08A00] defaultCenter];
  uint64_t v9 = *(void *)(a1 + 32);
  uint64_t v8 = *(void *)(a1 + 40);
  uint64_t v11 = @"HMDAccountNotificationKey";
  uint64_t v12 = v8;
  uint64_t v10 = [NSDictionary dictionaryWithObjects:&v12 forKeys:&v11 count:1];
  [v7 postNotificationName:@"HMDAccountRegistryAddedAccountNotification" object:v9 userInfo:v10];
}

void __cleanupRemoteDevicesWithHandles(void *a1, void *a2)
{
  uint64_t v53 = *MEMORY[0x263EF8340];
  id v3 = a1;
  id v4 = a2;
  context = (void *)MEMORY[0x230FBD990]();
  uint64_t v35 = v3;
  [v3 remoteAccountManager];
  long long v41 = 0u;
  long long v42 = 0u;
  long long v43 = 0u;
  uint64_t v28 = v44 = 0u;
  id obj = [v28 accounts];
  uint64_t v31 = [obj countByEnumeratingWithState:&v41 objects:v52 count:16];
  if (v31)
  {
    uint64_t v30 = *(void *)v42;
    unint64_t v5 = 0x263EFF000uLL;
    id v33 = v4;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v42 != v30) {
          objc_enumerationMutation(obj);
        }
        uint64_t v32 = v6;
        id v7 = *(void **)(*((void *)&v41 + 1) + 8 * v6);
        long long v37 = 0u;
        long long v38 = 0u;
        long long v39 = 0u;
        long long v40 = 0u;
        int v36 = v7;
        id v34 = [v7 devices];
        uint64_t v8 = [v34 countByEnumeratingWithState:&v37 objects:v51 count:16];
        if (v8)
        {
          uint64_t v9 = v8;
          uint64_t v10 = *(void *)v38;
          do
          {
            for (uint64_t i = 0; i != v9; ++i)
            {
              if (*(void *)v38 != v10) {
                objc_enumerationMutation(v34);
              }
              uint64_t v12 = *(void **)(*((void *)&v37 + 1) + 8 * i);
              uint64_t v13 = *(void **)(v5 + 2496);
              uint64_t v14 = [v12 handles];
              __int16 v15 = [v13 setWithArray:v14];

              [v15 intersectSet:v4];
              if ([v15 count])
              {
                uint64_t v16 = (void *)MEMORY[0x230FBD990]();
                id v17 = v35;
                uint64_t v18 = HMFGetOSLogHandle();
                if (os_log_type_enabled(v18, OS_LOG_TYPE_INFO))
                {
                  id v19 = HMFGetLogIdentifier();
                  id v20 = [v12 shortDescription];
                  *(_DWORD *)buf = 138543874;
                  double v46 = v19;
                  __int16 v47 = 2112;
                  id v48 = v20;
                  __int16 v49 = 2112;
                  id v50 = v36;
                  _os_log_impl(&dword_22F52A000, v18, OS_LOG_TYPE_INFO, "%{public}@Removing duplicate device, %@, from account: %@", buf, 0x20u);

                  id v4 = v33;
                  unint64_t v5 = 0x263EFF000;
                }

                [v36 removeDevice:v12];
              }
            }
            uint64_t v9 = [v34 countByEnumeratingWithState:&v37 objects:v51 count:16];
          }
          while (v9);
        }

        __int16 v21 = [v36 devices];
        int v22 = objc_msgSend(v21, "hmf_isEmpty");

        unint64_t v5 = 0x263EFF000;
        if (v22)
        {
          uint64_t v23 = (void *)MEMORY[0x230FBD990]();
          id v24 = v35;
          uint64_t v25 = HMFGetOSLogHandle();
          if (os_log_type_enabled(v25, OS_LOG_TYPE_DEFAULT))
          {
            uint64_t v26 = HMFGetLogIdentifier();
            *(_DWORD *)buf = 138543618;
            double v46 = v26;
            __int16 v47 = 2112;
            id v48 = v36;
            _os_log_impl(&dword_22F52A000, v25, OS_LOG_TYPE_DEFAULT, "%{public}@Removing duplicate empty account: %@", buf, 0x16u);

            unint64_t v5 = 0x263EFF000;
          }

          [v28 removeAccount:v36];
        }
        uint64_t v6 = v32 + 1;
        id v4 = v33;
      }
      while (v32 + 1 != v31);
      uint64_t v31 = [obj countByEnumeratingWithState:&v41 objects:v52 count:16];
    }
    while (v31);
  }
}

void __cleanupRemoteAccountsRelatedToAccount(void *a1, void *a2)
{
  uint64_t v30 = *MEMORY[0x263EF8340];
  id v3 = a1;
  id v4 = a2;
  id v17 = (void *)MEMORY[0x230FBD990]();
  unint64_t v5 = [v3 remoteAccountManager];
  long long v21 = 0u;
  long long v22 = 0u;
  long long v23 = 0u;
  long long v24 = 0u;
  uint64_t v6 = [v5 accounts];
  uint64_t v7 = [v6 countByEnumeratingWithState:&v21 objects:v29 count:16];
  if (v7)
  {
    uint64_t v8 = v7;
    uint64_t v9 = *(void *)v22;
    uint64_t v18 = v6;
    id v19 = v5;
    do
    {
      for (uint64_t i = 0; i != v8; ++i)
      {
        if (*(void *)v22 != v9) {
          objc_enumerationMutation(v6);
        }
        uint64_t v11 = *(void **)(*((void *)&v21 + 1) + 8 * i);
        if (([v4 isEqual:v11] & 1) == 0 && objc_msgSend(v4, "isRelatedToAccount:", v11))
        {
          context = (void *)MEMORY[0x230FBD990]();
          id v12 = v3;
          uint64_t v13 = HMFGetOSLogHandle();
          if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
          {
            uint64_t v14 = HMFGetLogIdentifier();
            [v11 shortDescription];
            v16 = id v15 = v3;
            *(_DWORD *)buf = 138543618;
            uint64_t v26 = v14;
            __int16 v27 = 2112;
            uint64_t v28 = v16;
            _os_log_impl(&dword_22F52A000, v13, OS_LOG_TYPE_DEFAULT, "%{public}@Detected stale account, %@, removing", buf, 0x16u);

            id v3 = v15;
            uint64_t v6 = v18;

            unint64_t v5 = v19;
          }

          [v5 removeAccount:v11];
        }
      }
      uint64_t v8 = [v6 countByEnumeratingWithState:&v21 objects:v29 count:16];
    }
    while (v8);
  }
}

void __registerForAccountUpdates(void *a1, void *a2)
{
  uint64_t v17 = *MEMORY[0x263EF8340];
  id v3 = a1;
  id v4 = a2;
  unint64_t v5 = (void *)MEMORY[0x230FBD990]();
  id v6 = v3;
  uint64_t v7 = HMFGetOSLogHandle();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v8 = HMFGetLogIdentifier();
    int v13 = 138543618;
    uint64_t v14 = v8;
    __int16 v15 = 2112;
    id v16 = v4;
    _os_log_impl(&dword_22F52A000, v7, OS_LOG_TYPE_DEBUG, "%{public}@Registering for account updates: %@", (uint8_t *)&v13, 0x16u);
  }
  uint64_t v9 = [MEMORY[0x263F08A00] defaultCenter];
  [v9 removeObserver:v6 name:@"HMDAccountHandlesUpdatedNotification" object:0];

  uint64_t v10 = [MEMORY[0x263F08A00] defaultCenter];
  [v10 removeObserver:v6 name:@"HMDAccountAddedDeviceNotification" object:0];

  if (v4)
  {
    uint64_t v11 = [MEMORY[0x263F08A00] defaultCenter];
    [v11 addObserver:v6 selector:sel___handleAppleAccountHandlesUpdated_ name:@"HMDAccountHandlesUpdatedNotification" object:v4];

    id v12 = [MEMORY[0x263F08A00] defaultCenter];
    [v12 addObserver:v6 selector:sel___handleAppleAccountDeviceAdded_ name:@"HMDAccountAddedDeviceNotification" object:v4];
  }
}

id __deviceForDevice(void *a1, void *a2)
{
  uint64_t v30 = *MEMORY[0x263EF8340];
  id v3 = a1;
  id v4 = a2;
  if (v3)
  {
    long long v26 = 0u;
    long long v27 = 0u;
    long long v24 = 0u;
    long long v25 = 0u;
    id v5 = v3;
    uint64_t v6 = [v5 countByEnumeratingWithState:&v24 objects:v29 count:16];
    if (v6)
    {
      uint64_t v7 = v6;
      uint64_t v8 = *(void *)v25;
      uint64_t v19 = *(void *)v25;
      do
      {
        for (uint64_t i = 0; i != v7; ++i)
        {
          if (*(void *)v25 != v8) {
            objc_enumerationMutation(v5);
          }
          uint64_t v10 = *(void **)(*((void *)&v24 + 1) + 8 * i);
          long long v20 = 0u;
          long long v21 = 0u;
          long long v22 = 0u;
          long long v23 = 0u;
          id v11 = v10;
          uint64_t v12 = [v11 countByEnumeratingWithState:&v20 objects:v28 count:16];
          if (v12)
          {
            uint64_t v13 = v12;
            uint64_t v14 = *(void *)v21;
            while (2)
            {
              for (uint64_t j = 0; j != v13; ++j)
              {
                if (*(void *)v21 != v14) {
                  objc_enumerationMutation(v11);
                }
                id v16 = *(void **)(*((void *)&v20 + 1) + 8 * j);
                if ([v4 isRelatedToDevice:v16])
                {
                  id v17 = v16;

                  goto LABEL_21;
                }
              }
              uint64_t v13 = [v11 countByEnumeratingWithState:&v20 objects:v28 count:16];
              if (v13) {
                continue;
              }
              break;
            }
          }

          uint64_t v8 = v19;
        }
        uint64_t v7 = [v5 countByEnumeratingWithState:&v24 objects:v29 count:16];
        id v17 = 0;
      }
      while (v7);
    }
    else
    {
      id v17 = 0;
    }
LABEL_21:
  }
  else
  {
    id v17 = 0;
  }

  return v17;
}

id __deviceForHandle(void *a1, void *a2)
{
  uint64_t v19 = *MEMORY[0x263EF8340];
  id v3 = a1;
  id v4 = a2;
  id v5 = v4;
  uint64_t v6 = 0;
  if (v3 && v4)
  {
    long long v16 = 0u;
    long long v17 = 0u;
    long long v14 = 0u;
    long long v15 = 0u;
    id v7 = v3;
    uint64_t v8 = [v7 countByEnumeratingWithState:&v14 objects:v18 count:16];
    if (v8)
    {
      uint64_t v9 = v8;
      uint64_t v10 = *(void *)v15;
      while (2)
      {
        for (uint64_t i = 0; i != v9; ++i)
        {
          if (*(void *)v15 != v10) {
            objc_enumerationMutation(v7);
          }
          uint64_t v12 = objc_msgSend(*(id *)(*((void *)&v14 + 1) + 8 * i), "deviceForHandle:", v5, (void)v14);
          if (v12)
          {
            uint64_t v6 = (void *)v12;
            goto LABEL_13;
          }
        }
        uint64_t v9 = [v7 countByEnumeratingWithState:&v14 objects:v18 count:16];
        if (v9) {
          continue;
        }
        break;
      }
    }
    uint64_t v6 = 0;
LABEL_13:
  }
  return v6;
}

id __accountForHandle(void *a1, void *a2)
{
  uint64_t v18 = *MEMORY[0x263EF8340];
  id v3 = a1;
  id v4 = a2;
  if (v3)
  {
    long long v15 = 0u;
    long long v16 = 0u;
    long long v13 = 0u;
    long long v14 = 0u;
    id v5 = v3;
    id v6 = (id)[v5 countByEnumeratingWithState:&v13 objects:v17 count:16];
    if (v6)
    {
      uint64_t v7 = *(void *)v14;
      while (2)
      {
        for (uint64_t i = 0; i != v6; uint64_t i = (char *)i + 1)
        {
          if (*(void *)v14 != v7) {
            objc_enumerationMutation(v5);
          }
          uint64_t v9 = *(void **)(*((void *)&v13 + 1) + 8 * i);
          uint64_t v10 = objc_msgSend(v9, "handles", (void)v13);
          char v11 = [v10 containsObject:v4];

          if (v11)
          {
            id v6 = v9;
            goto LABEL_12;
          }
        }
        id v6 = (id)[v5 countByEnumeratingWithState:&v13 objects:v17 count:16];
        if (v6) {
          continue;
        }
        break;
      }
    }
LABEL_12:
  }
  else
  {
    id v6 = 0;
  }

  return v6;
}

void sub_22FA8AAA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_22FA8AC20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_22FA8AEB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__61212(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__61213(uint64_t a1)
{
}

id HMDBulletinBundleIdentifier()
{
  return (id)*MEMORY[0x263F0C7A8];
}

void sub_22FA8DF34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,char a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,char a61)
{
}

void sub_22FA8E644(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__61643(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__61644(uint64_t a1)
{
}

void sub_22FA90EEC(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FA954C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__62702(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__62703(uint64_t a1)
{
}

void __createBackboardWatcher(void *a1)
{
  location[3] = *(id *)MEMORY[0x263EF8340];
  id v1 = a1;
  if (!+[HMDDeviceCapabilities supportsBackboard])
  {
    uint64_t v7 = (void *)MEMORY[0x230FBD990]();
    id v8 = v1;
    uint64_t v9 = HMFGetOSLogHandle();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
    {
      uint64_t v10 = HMFGetLogIdentifier();
      LODWORD(location[0]) = 138543362;
      *(id *)((char *)location + 4) = v10;
      _os_log_impl(&dword_22F52A000, v9, OS_LOG_TYPE_INFO, "%{public}@No backboardd support for device, skipping watcher", (uint8_t *)location, 0xCu);
    }
    goto LABEL_9;
  }
  uint64_t ServerPort = CARenderServerGetServerPort();
  if ((ServerPort - 1) >= 0xFFFFFFFE)
  {
    uint64_t v7 = (void *)MEMORY[0x230FBD990]();
    id v8 = v1;
    uint64_t v9 = HMFGetOSLogHandle();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
    {
      char v11 = HMFGetLogIdentifier();
      LODWORD(location[0]) = 138543362;
      *(id *)((char *)location + 4) = v11;
      _os_log_impl(&dword_22F52A000, v9, OS_LOG_TYPE_ERROR, "%{public}@Unable to find port for default render server", (uint8_t *)location, 0xCu);
    }
LABEL_9:

    goto LABEL_10;
  }
  uint64_t v3 = ServerPort;
  objc_initWeak(location, v1);
  id v4 = objc_alloc(MEMORY[0x263F29CA8]);
  id v5 = [v1 clientQueue];
  v12[0] = MEMORY[0x263EF8330];
  v12[1] = 3221225472;
  v12[2] = ____createBackboardWatcher_block_invoke;
  v12[3] = &unk_264A2C170;
  objc_copyWeak(&v13, location);
  id v6 = (void *)[v4 initWithPort:v3 queue:v5 deathHandler:v12];
  [v1 setBackboardServicesWatcher:v6];

  objc_destroyWeak(&v13);
  objc_destroyWeak(location);
LABEL_10:
}

void sub_22FA958B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void ____createBackboardWatcher_block_invoke(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _backboardServicesRelaunched];
}

void sub_22FA9B058(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22FA9C388(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,char a57,uint64_t a58,uint64_t a59,uint64_t a60,char a61,uint64_t a62,uint64_t a63)
{
  objc_destroyWeak(v65);
  _Block_object_dispose(&a57, 8);
  _Block_object_dispose(&a61, 8);
  _Block_object_dispose((const void *)(v66 - 160), 8);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22FA9F348(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__64503(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__64504(uint64_t a1)
{
}

void sub_22FAA186C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FAA19D4(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FAA1A74(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FAA1B50(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FAA2370(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FAA23F8(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

BOOL HMDRemoteEventRouterProtoTopicReadFrom(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x263F62298];
  id v4 = (int *)MEMORY[0x263F62288];
  id v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    uint64_t v7 = (int *)MEMORY[0x263F62268];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 3) {
        break;
      }
      if ((v10 >> 3) == 2)
      {
        uint64_t v17 = PBReaderReadString();
        uint64_t v18 = 16;
LABEL_22:
        uint64_t v19 = *(void **)(a1 + v18);
        *(void *)(a1 + v1_Block_object_dispose(&STACK[0x210], 8) = v17;

        goto LABEL_24;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_24:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    uint64_t v17 = PBReaderReadString();
    uint64_t v18 = 8;
    goto LABEL_22;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

id _findConstraintForType(void *a1, uint64_t a2)
{
  v4[0] = MEMORY[0x263EF8330];
  v4[1] = 3221225472;
  v4[2] = ___findConstraintForType_block_invoke;
  v4[3] = &__block_descriptor_40_e38_B16__0__HMAccessorySettingConstraint_8l;
  v4[4] = a2;
  uint64_t v2 = objc_msgSend(a1, "na_firstObjectPassingTest:", v4);
  return v2;
}

BOOL ___findConstraintForType_block_invoke(uint64_t a1, void *a2)
{
  return [a2 type] == *(void *)(a1 + 32);
}

uint64_t HMDIsSiriClientIdentifier(void *a1)
{
  id v1 = a1;
  if ([v1 isEqualToString:@"com.apple.Siri"]) {
    uint64_t v2 = 1;
  }
  else {
    uint64_t v2 = [v1 isEqualToString:@"assistant_service"];
  }

  return v2;
}

uint64_t HMDIsFirstPartyClientIdentifier(void *a1)
{
  id v1 = a1;
  if (HMDIsFirstPartyClientIdentifier_onceToken != -1) {
    dispatch_once(&HMDIsFirstPartyClientIdentifier_onceToken, &__block_literal_global_65553);
  }
  if (([v1 hasPrefix:@"com.apple."] & 1) != 0
    || ([v1 hasPrefix:@"apple."] & 1) != 0)
  {
    uint64_t v2 = 1;
  }
  else
  {
    uint64_t v2 = [(id)HMDIsFirstPartyClientIdentifier_knownClientIdentifiers containsObject:v1];
  }

  return v2;
}

void __HMDIsFirstPartyClientIdentifier_block_invoke()
{
  objc_msgSend(MEMORY[0x263EFFA08], "setWithObjects:", @"accountsd", @"amsaccountsd", @"announced", @"assistant_service", @"assistantd", @"Carousel", @"CarPlay", @"cloudmediaservicesd", @"companiond", @"coordinated", @"coreautomationd", @"diagnosticextensionsd", @"hdsutil", @"HDSViewService", @"HomeAppIntentsExtension", @"homeenergyd", @"homehubd",
    @"HomeIntegrationTests-Runner",
    @"HomeKitDiagnosticExtension",
    @"HomeKitIntentExtension",
    @"homepodsensoryreporterd",
    @"homepodsettingsd",
    @"homeutil",
    @"itunescloudd",
    @"knowledgeconstructiond",
    @"mediaanalysisd-service",
    @"mediaanalysisd",
    @"mediaremoted",
    @"mediasetupd",
    @"passd",
    @"PineBoard",
    @"proximitycontrold",
    @"rapportd",
    @"seserviced",
    @"sharingd",
    @"Shortcuts",
    @"Siri Debug",
    @"siri",
    @"siriinferenced",
    @"siriknowledged",
    @"sirittsd",
    @"SiriUI",
    @"SiriUserFeedbackLearningUnivers",
    @"SoundBoard",
    @"SpringBoard",
    @"taptoradard",
    @"tvairplayd",
    @"tvremoted",
    @"tvsetuputil",
    @"userprofilesd",
    @"voiced",
    @"wifid",
  uint64_t v0 = 0);
  id v1 = (void *)HMDIsFirstPartyClientIdentifier_knownClientIdentifiers;
  HMDIsFirstPartyClientIdentifier_knownClientIdentifiers = v0;
}

__CFString *HMDRequestSourceAsString(unint64_t a1)
{
  if (a1 > 9) {
    return @"Unknown";
  }
  else {
    return off_264A1BC48[a1];
  }
}

__CFString *HMDRequestSourceAsLegacyMetricString(unint64_t a1)
{
  if (a1 >= 0xA)
  {
    objc_msgSend(NSString, "stringWithFormat:", @"Unexpected source value: %lu", a1);
    id v1 = (__CFString *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    id v1 = off_264A1BC98[a1];
  }
  return v1;
}

void sub_22FAAA414(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 112));
  _Unwind_Resume(a1);
}

void sub_22FAAACE8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,id location)
{
  objc_destroyWeak(v23);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22FAAC470(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22FAAE668(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  va_start(va, a17);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__66915(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__66916(uint64_t a1)
{
}

void sub_22FAB1D68(_Unwind_Exception *a1)
{
}

void __transactionAccessoryUpdated(void *a1, void *a2, void *a3)
{
  v287[1] = *MEMORY[0x263EF8340];
  id v5 = a1;
  id v6 = a2;
  id v242 = a3;
  uint64_t v7 = [v242 transactionResult];
  [v7 source];
  char v8 = (void *)MEMORY[0x263EFF980];
  unsigned int v9 = +[HMDAccessoryTransaction properties];
  objc_msgSend(v8, "arrayWithCapacity:", objc_msgSend(v9, "count"));
  id obj = (id)objc_claimAutoreleasedReturnValue();

  unint64_t v10 = [0 configurationTracker];
  uint64_t v11 = v10;
  if (v10) {
    dispatch_group_enter(v10);
  }
  if (([v6 propertyWasSet:@"name"] & 1) != 0
    || [v6 propertyWasSet:@"configuredName"])
  {
    unint64_t v12 = [v6 configuredName];
    char v13 = [v5 configuredName];
    long long v14 = [v5 name];
    if ((HMFEqualObjects() & 1) == 0)
    {
      [v5 setConfiguredName:v12];
      [v7 markChanged];
    }
    int v15 = [v5 name];
    char v16 = HMFEqualObjects();
    if (v15 && (v16 & 1) == 0)
    {
      [v7 markSaveToAssistant];
      uint64_t v17 = [v5 workQueue];
      block[0] = MEMORY[0x263EF8330];
      block[1] = 3221225472;
      block[2] = ____transactionAccessoryUpdated_block_invoke;
      block[3] = &unk_264A2F820;
      id v264 = v5;
      id v265 = v15;
      dispatch_async(v17, block);
    }
  }
  if ([v6 propertyWasSet:@"providedName"])
  {
    uint64_t v18 = [v5 providedName];
    uint64_t v19 = [v6 providedName];
    char v20 = HMFEqualObjects();

    if ((v20 & 1) == 0)
    {
      long long v21 = [v5 name];
      long long v22 = [v5 providedName];
      long long v23 = [v6 providedName];
      [v5 setProvidedName:v23];

      long long v24 = [v5 name];
      if (v24 && (HMFEqualObjects() & 1) == 0)
      {
        [v7 markSaveToAssistant];
        long long v25 = [v5 workQueue];
        v260[0] = MEMORY[0x263EF8330];
        v260[1] = 3221225472;
        v260[2] = ____transactionAccessoryUpdated_block_invoke_2;
        v260[3] = &unk_264A2F820;
        id v261 = v5;
        id v262 = v24;
        dispatch_async(v25, v260);
      }
      long long v26 = [v5 providedName];
      char v27 = HMFEqualObjects();

      if ((v27 & 1) == 0) {
        [v7 markChanged];
      }
    }
  }
  uint64_t v28 = [v6 setProperties];
  int v29 = [v28 containsObject:@"model"];
  char v30 = v29;
  if (!v29) {
    goto LABEL_23;
  }
  uint64_t v31 = [v6 model];
  uint64_t v32 = [v5 model];
  char v33 = HMFEqualObjects();

  if ((v33 & 1) == 0)
  {
    id v34 = [v6 model];

    if (v34)
    {
      uint64_t v28 = [v6 model];
      [v5 setModel:v28];
LABEL_23:

      goto LABEL_25;
    }
  }
  char v30 = 0;
LABEL_25:
  uint64_t v35 = [v6 setProperties];
  if (![v35 containsObject:@"manufacturer"])
  {
LABEL_29:

    goto LABEL_30;
  }
  int v36 = [v6 manufacturer];
  long long v37 = [v5 manufacturer];
  char v38 = HMFEqualObjects();

  if ((v38 & 1) == 0)
  {
    long long v39 = [v6 manufacturer];

    if (v39)
    {
      uint64_t v35 = [v6 manufacturer];
      [v5 setManufacturer:v35];
      char v30 = 1;
      goto LABEL_29;
    }
  }
LABEL_30:
  group = v11;
  uint64_t v40 = [v6 firmwareVersion];
  v247 = v6;
  if (v40)
  {
    long long v41 = (void *)v40;
    long long v42 = [v6 firmwareVersion];
    long long v43 = [v5 firmwareVersion];
    long long v44 = [v43 rawVersionString];
    char v45 = HMFEqualObjects();

    if ((v45 & 1) == 0)
    {
      id v46 = v5;
      objc_opt_class();
      if (objc_opt_isKindOfClass()) {
        __int16 v47 = v46;
      }
      else {
        __int16 v47 = 0;
      }
      id v48 = v47;

      if (v48 && [v48 supportsCHIP])
      {
        __int16 v49 = [HMDAccessoryVersion alloc];
        id v50 = [v6 firmwareVersion];
        uint64_t v51 = [(HMDAccessoryVersion *)v49 initWithMatterVersionString:v50];
      }
      else
      {
        id v52 = [HMDAccessoryVersion alloc];
        id v50 = [v6 firmwareVersion];
        uint64_t v51 = [(HMDAccessoryVersion *)v52 initWithVersionString:v50];
      }
      uint64_t v53 = (void *)v51;

      if (v53)
      {
        uint64_t v54 = [v46 firmwareVersion];
        [v46 setFirmwareVersion:v53];
        if (([v53 isEqualToVersion:v54] & 1) == 0)
        {
          if (v54)
          {
            v286 = @"HMDAccessoryPreviousFirmwareVersionKey";
            v287[0] = v54;
            double v55 = [NSDictionary dictionaryWithObjects:v287 forKeys:&v286 count:1];
          }
          else
          {
            double v55 = 0;
          }
          logAndPostNotification(@"HMDAccessoryFirmwareVersionUpdatedNotification", v46, v55);
        }
        char v30 = 1;
      }
    }
  }
  double v56 = [v6 setProperties];
  if (![v56 containsObject:@"displayableFirmwareVersion"]) {
    goto LABEL_56;
  }
  id v57 = [v6 displayableFirmwareVersion];
  id v58 = [v5 displayableFirmwareVersion];
  char v59 = HMFEqualObjects();

  if ((v59 & 1) == 0)
  {
    __int16 v60 = [v6 displayableFirmwareVersion];

    if (v60)
    {
      double v56 = [v5 displayableFirmwareVersion];
      id v61 = [v6 displayableFirmwareVersion];
      [v5 setDisplayableFirmwareVersion:v61];

      __int16 v62 = [v6 displayableFirmwareVersion];
      char v63 = [v62 isEqualToString:v56];

      if ((v63 & 1) == 0)
      {
        if (v56)
        {
          v284 = @"HMDAccessoryPreviousDisplayableFirmwareVersionKey";
          v285 = v56;
          id v64 = [NSDictionary dictionaryWithObjects:&v285 forKeys:&v284 count:1];
        }
        else
        {
          id v64 = 0;
        }
        logAndPostNotification(@"HMDAccessoryFirmwareDisplayableVersionUpdatedNotification", v5, v64);
      }
      char v30 = 1;
LABEL_56:
    }
  }
  uint64_t v65 = [v6 setProperties];
  if ([v65 containsObject:@"serialNumber"])
  {
    uint64_t v66 = [v6 serialNumber];
    id v67 = [v5 serialNumber];
    char v68 = HMFEqualObjects();

    if (v68) {
      goto LABEL_62;
    }
    id v69 = [v6 serialNumber];

    if (!v69) {
      goto LABEL_62;
    }
    uint64_t v65 = [v6 serialNumber];
    [v5 setSerialNumber:v65];
    char v30 = 1;
  }

LABEL_62:
  uint64_t v70 = [v6 hostAccessoryUUID];
  v241 = (void *)v70;
  if (v70) {
    v246 = (void *)[objc_alloc(MEMORY[0x263F08C38]) initWithUUIDString:v70];
  }
  else {
    v246 = 0;
  }
  if ([v6 propertyWasSet:@"hostAccessoryUUID"])
  {
    v71 = [v5 hostAccessory];
    id v72 = [v71 uuid];
    char v73 = objc_msgSend(v72, "hmf_isEqualToUUID:", v246);

    if ((v73 & 1) == 0)
    {
      [v5 _updateHost:v246];
      [v7 markChanged];
      [v7 markSaveToAssistant];
    }
  }
  id v74 = [v5 home];
  v245 = [v74 homeManager];
  uint64_t v75 = [v5 productData];
  uint64_t v76 = [v6 productDataV2];
  v249 = [v6 productData];
  id v77 = v5;
  objc_opt_class();
  if (objc_opt_isKindOfClass()) {
    __int16 v78 = v77;
  }
  else {
    __int16 v78 = 0;
  }
  id v248 = v78;
  v253 = v77;

  v244 = (void *)v75;
  uint64_t v238 = v76;
  if (v76)
  {
    uint64_t v79 = HMFEqualObjects();
    if ((v79 & 1) == 0)
    {
      id v85 = v77;
      id v86 = (void *)v76;
LABEL_86:
      objc_msgSend(v85, "setProductData:", v86, v238);
      if (v248)
      {
        id v93 = [v245 accessoryFirmwareUpdateManager];
        [v93 registerAccessory:v248];
      }
LABEL_88:
      v275 = v253;
      v94 = objc_msgSend(MEMORY[0x263EFF8C0], "arrayWithObjects:count:", &v275, 1, v238);
      [v74 notifyClientsOfAccessoryInfoUpdatedForAccessories:v94];

      [v7 markChanged];
      goto LABEL_89;
    }
  }
  if (v249 && !v75)
  {
    uint64_t v80 = (void *)MEMORY[0x230FBD990](v79);
    id v81 = v253;
    HMFGetOSLogHandle();
    v82 = (id)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v82, OS_LOG_TYPE_INFO))
    {
      HMFGetLogIdentifier();
      id v83 = (id)objc_claimAutoreleasedReturnValue();
      +[HMDBackingStoreTransactionOptions stringForHMDBackingStoreTransactionSource:](HMDBackingStoreTransactionOptions, "stringForHMDBackingStoreTransactionSource:", objc_msgSend(v7, "source", v76));
      id v84 = (id)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138543874;
      id v277 = v83;
      __int16 v278 = 2112;
      uint64_t v279 = (uint64_t)v249;
      __int16 v280 = 2112;
      uint64_t v281 = (uint64_t)v84;
      _os_log_impl(&dword_22F52A000, v82, OS_LOG_TYPE_INFO, "%{public}@Applying initial legacy productData %@ (source: %@)", buf, 0x20u);
    }
    id v85 = v81;
    id v86 = v249;
    goto LABEL_86;
  }
  if (v249)
  {
    uint64_t v87 = HMFEqualObjects();
    if ((v87 & 1) == 0)
    {
      v88 = (void *)MEMORY[0x230FBD990](v87);
      id v89 = v77;
      HMFGetOSLogHandle();
      id v90 = (id)objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v90, OS_LOG_TYPE_INFO))
      {
        HMFGetLogIdentifier();
        id v91 = (id)objc_claimAutoreleasedReturnValue();
        +[HMDBackingStoreTransactionOptions stringForHMDBackingStoreTransactionSource:](HMDBackingStoreTransactionOptions, "stringForHMDBackingStoreTransactionSource:", objc_msgSend(v7, "source", v238));
        id v92 = (id)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138544130;
        id v277 = v91;
        __int16 v278 = 2112;
        uint64_t v279 = (uint64_t)v244;
        __int16 v280 = 2112;
        uint64_t v281 = (uint64_t)v249;
        __int16 v282 = 2112;
        id v283 = v92;
        _os_log_impl(&dword_22F52A000, v90, OS_LOG_TYPE_INFO, "%{public}@Ignoring legacy productData change %@ -> %@ (source: %@)", buf, 0x2Au);
      }
    }
  }
  if (v30) {
    goto LABEL_88;
  }
LABEL_89:
  uint64_t v95 = objc_msgSend(v6, "initialManufacturer", v238);
  if (v95)
  {
    double v96 = (void *)v95;
    uint64_t v97 = [v6 initialManufacturer];
    uint64_t v98 = [v253 initialManufacturer];
    char v99 = HMFEqualObjects();

    if ((v99 & 1) == 0)
    {
      id v100 = [v6 initialManufacturer];
      [v253 setInitialManufacturer:v100];

      logAndPostNotification(@"HMDAccessoryManufacturerUpdatedNotification", v253, 0);
      [v7 markChanged];
    }
  }
  uint64_t v101 = [v6 initialModel];
  if (v101)
  {
    double v102 = (void *)v101;
    long long v103 = [v6 initialModel];
    long long v104 = [v253 initialModel];
    char v105 = HMFEqualObjects();

    if ((v105 & 1) == 0)
    {
      long long v106 = [v6 initialModel];
      [v253 setInitialModel:v106];

      [v7 markChanged];
    }
  }
  uint64_t v107 = [v6 initialCategoryIdentifier];
  if (v107)
  {
    long long v108 = (void *)v107;
    uint64_t v109 = [v6 initialCategoryIdentifier];
    double v110 = [v253 initialCategoryIdentifier];
    char v111 = HMFEqualObjects();

    if ((v111 & 1) == 0)
    {
      v112 = [v6 initialCategoryIdentifier];
      [v253 setInitialCategoryIdentifier:v112];

      logAndPostNotification(@"HMDAccessoryCategoryUpdatedNotification", v253, 0);
      [v7 markChanged];
    }
  }
  id v113 = [v6 accessoryCategory];

  if (v113)
  {
    v114 = [v6 accessoryCategory];
    v115 = [v253 _updateCategory:v114 notifyClients:1];

    if (v115)
    {
      [obj addObject:v115];
      [v7 markChanged];
      if (v248) {
        [v248 updatePrimaryServiceIfNeeded];
      }
    }
  }
  if ([v6 propertyWasSet:@"networkClientIdentifier"])
  {
    v116 = [v6 networkClientIdentifier];
    v117 = [v253 networkClientIdentifier];
    char v118 = HMFEqualObjects();

    if ((v118 & 1) == 0)
    {
      v119 = [v6 networkClientIdentifier];
      [v253 setNetworkClientIdentifier:v119];

      [v7 markChanged];
    }
  }
  if ([v6 propertyWasSet:@"networkRouterUUID"])
  {
    __int16 v120 = [v6 networkRouterUUID];
    id v121 = [v253 networkRouterUUID];
    __int16 v122 = [v121 UUIDString];
    char v123 = HMFEqualObjects();

    if ((v123 & 1) == 0)
    {
      id v124 = objc_alloc(MEMORY[0x263F08C38]);
      v125 = [v6 networkRouterUUID];
      v126 = (void *)[v124 initWithUUIDString:v125];
      [v253 setNetworkRouterUUID:v126];

      [v7 markChanged];
    }
  }
  uint64_t v127 = [v6 currentNetworkProtectionMode];
  if (v127)
  {
    double v128 = (void *)v127;
    v129 = [v6 currentNetworkProtectionMode];
    uint64_t v130 = [v129 integerValue];
    uint64_t v131 = [v253 currentNetworkProtectionMode];

    if (v130 != v131)
    {
      id v132 = [v6 currentNetworkProtectionMode];
      objc_msgSend(v253, "setCurrentNetworkProtectionMode:", objc_msgSend(v132, "integerValue"));

      [v7 markChanged];
    }
  }
  uint64_t v133 = [v6 wiFiCredentialType];
  if (v133)
  {
    double v134 = (void *)v133;
    v135 = [v6 wiFiCredentialType];
    uint64_t v136 = [v135 integerValue];
    uint64_t v137 = [v253 wiFiCredentialType];

    if (v136 != v137)
    {
      v138 = (void *)MEMORY[0x230FBD990]();
      HMFGetOSLogHandle();
      v139 = (id)objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v139, OS_LOG_TYPE_INFO))
      {
        HMFGetLogIdentifier();
        id v140 = (id)objc_claimAutoreleasedReturnValue();
        uint64_t v141 = [v253 wiFiCredentialType];
        id v142 = [v6 wiFiCredentialType];
        uint64_t v143 = [v142 integerValue];
        *(_DWORD *)buf = 138544130;
        id v277 = v140;
        __int16 v278 = 2048;
        uint64_t v279 = v141;
        __int16 v280 = 2048;
        uint64_t v281 = v143;
        __int16 v282 = 2112;
        id v283 = v253;
        _os_log_impl(&dword_22F52A000, v139, OS_LOG_TYPE_INFO, "%{public}@Updating wiFiCredentialType from [%lu] to [%lu] for accessory: %@", buf, 0x2Au);
      }
      v144 = [v6 wiFiCredentialType];
      objc_msgSend(v253, "setWiFiCredentialType:", objc_msgSend(v144, "integerValue"));

      [v7 markChanged];
      v145 = (void *)MEMORY[0x263F42568];
      uint64_t v146 = *MEMORY[0x263F0D280];
      v273[0] = *MEMORY[0x263F0D278];
      v147 = objc_msgSend(NSNumber, "numberWithBool:", objc_msgSend(v253, "supportsWiFiReconfiguration"));
      v274[0] = v147;
      v273[1] = *MEMORY[0x263F0D268];
      v148 = objc_msgSend(NSNumber, "numberWithInteger:", objc_msgSend(v253, "wiFiCredentialType"));
      v274[1] = v148;
      v149 = [NSDictionary dictionaryWithObjects:v274 forKeys:v273 count:2];
      v150 = [v145 entitledMessageWithName:v146 messagePayload:v149];
      [obj addObject:v150];
    }
  }
  uint64_t v151 = [v6 networkClientLAN];
  if (v151)
  {
    v152 = (void *)v151;
    double v153 = [v6 networkClientLAN];
    uint64_t v154 = [v153 integerValue];
    uint64_t v155 = [v253 networkClientLAN];

    if (v154 != v155)
    {
      v156 = [v6 networkClientLAN];
      objc_msgSend(v253, "setNetworkClientLAN:", objc_msgSend(v156, "integerValue"));

      [v7 markChanged];
    }
  }
  if ([v6 propertyWasSet:@"networkClientProfileFingerprint"])
  {
    v157 = [v6 networkClientProfileFingerprint];
    v158 = [v253 networkClientProfileFingerprint];
    uint64_t v159 = [v158 UUIDString];
    char v160 = HMFEqualObjects();

    if ((v160 & 1) == 0)
    {
      id v161 = objc_alloc(MEMORY[0x263F08C38]);
      uint64_t v162 = [v6 networkClientProfileFingerprint];
      v163 = (void *)[v161 initWithUUIDString:v162];
      [v253 setNetworkClientProfileFingerprint:v163];

      [v7 markChanged];
    }
  }
  if ([v6 propertyWasSet:@"appliedFirewallWANRules"])
  {
    v164 = [v6 appliedFirewallWANRules];
    id v165 = +[HMDAccessoryAllowedHost allowedHostsFromJSONFirewallWANRules:v164];

    if (v165)
    {
      id v166 = [v253 allowedHosts];
      char v167 = HMFEqualObjects();

      if ((v167 & 1) == 0)
      {
        [v253 setAllowedHosts:v165];
        [v7 markChanged];
        v168 = (void *)MEMORY[0x263F42568];
        uint64_t v169 = *MEMORY[0x263F0D258];
        uint64_t v271 = *MEMORY[0x263F0D250];
        __int16 v170 = [v253 allowedHosts];
        v171 = encodeRootObjectForSPIClients(v170);
        v272 = v171;
        __int16 v172 = [NSDictionary dictionaryWithObjects:&v272 forKeys:&v271 count:1];
        v173 = [v168 entitledMessageWithName:v169 messagePayload:v172];

        [obj addObject:v173];
      }
    }
  }
  if ([v6 propertyWasSet:@"wiFiUniquePreSharedKey"])
  {
    __int16 v174 = [v6 wiFiUniquePreSharedKey];
    v175 = [v253 wiFiUniquePreSharedKey];
    char v176 = HMFEqualObjects();

    if ((v176 & 1) == 0)
    {
      v177 = [v6 wiFiUniquePreSharedKey];
      [v253 setWiFiUniquePreSharedKey:v177];

      [v7 markChanged];
    }
  }
  if ([v6 propertyWasSet:@"pendingConfigurationIdentifier"])
  {
    __int16 v178 = [v6 pendingConfigurationIdentifier];
    v179 = [v253 pendingConfigurationIdentifier];
    char v180 = HMFEqualObjects();

    if ((v180 & 1) == 0)
    {
      v181 = [v6 pendingConfigurationIdentifier];
      [v253 setPendingConfigurationIdentifier:v181];

      [v7 markChanged];
    }
  }
  v240 = v74;
  if ([v6 propertyWasSet:@"lastNetworkAccessViolationOccurrenceSince1970"]
    && [v6 propertyWasSet:@"lastNetworkAccessViolationResetSince1970"])
  {
    __int16 v182 = [v253 networkAccessViolation];
    v183 = [HMDAccessoryNetworkAccessViolation alloc];
    __int16 v184 = [v6 lastNetworkAccessViolationOccurrenceSince1970];
    v185 = [v6 lastNetworkAccessViolationResetSince1970];
    __int16 v186 = [(HMDAccessoryNetworkAccessViolation *)v183 initWithLastViolationTimeInterval:v184 lastViolationResetTimeInterval:v185];

    if ((HMFEqualObjects() & 1) == 0)
    {
      [v253 setNetworkAccessViolation:v186];
      BOOL v187 = [(HMDAccessoryNetworkAccessViolation *)v186 hasCurrentViolation];
      int v188 = v187 ^ [v182 hasCurrentViolation];
      v189 = [v182 lastViolationDate];
      __int16 v190 = [(HMDAccessoryNetworkAccessViolation *)v186 lastViolationDate];
      v191 = v190;
      BOOL v192 = 0;
      if (v189 && v186)
      {
        [v190 timeIntervalSinceDate:v189];
        BOOL v192 = v193 >= 86400.0;
      }
      __int16 v194 = v191;
      if ((v188 | v192) == 1) {
        [v7 markChanged];
      }
      else {
        [v7 markLocalChanged];
      }
      id v6 = v247;
      v195 = encodeRootObjectForSPIClients(v186);
      __int16 v196 = (void *)MEMORY[0x263F42568];
      uint64_t v197 = *MEMORY[0x263F0D248];
      uint64_t v269 = *MEMORY[0x263F0D240];
      v270 = v195;
      uint64_t v198 = [NSDictionary dictionaryWithObjects:&v270 forKeys:&v269 count:1];
      v199 = [v196 entitledMessageWithName:v197 messagePayload:v198];

      [obj addObject:v199];
    }
  }
  if ([v6 propertyWasSet:@"configuredNetworkProtectionGroupUUIDString"])
  {
    v200 = [v6 configuredNetworkProtectionGroupUUIDString];
    v201 = [v253 configuredNetworkProtectionGroupUUID];
    v202 = [v201 UUIDString];
    char v203 = HMFEqualObjects();

    if ((v203 & 1) == 0)
    {
      v204 = [v6 configuredNetworkProtectionGroupUUIDString];
      if (v204) {
        v205 = (void *)[objc_alloc(MEMORY[0x263F08C38]) initWithUUIDString:v204];
      }
      else {
        v205 = 0;
      }
      v206 = [v253 configuredNetworkProtectionGroupUUID];
      [v253 setConfiguredNetworkProtectionGroupUUID:v205];
      if (v206)
      {
        v267 = @"HMDAccessoryPreviousConfiguredNetworkProtectionGroupUUIDKey";
        v268 = v206;
        v207 = [NSDictionary dictionaryWithObjects:&v268 forKeys:&v267 count:1];
      }
      else
      {
        v207 = 0;
      }
      logAndPostNotification(@"HMDAccessoryConfiguredNetworkProtectionGroupUpdatedNotification", v253, v207);
      [v7 markChanged];
    }
  }
  uint64_t v208 = [v6 suspendCapable];
  if (v208)
  {
    v209 = (void *)v208;
    int v210 = [v253 isSuspendCapable];
    v211 = [v6 suspendCapable];
    int v212 = [v211 BOOLValue];

    if (v210 != v212)
    {
      v213 = [v6 suspendCapable];
      objc_msgSend(v253, "setSuspendCapable:", objc_msgSend(v213, "BOOLValue"));

      [v7 markChanged];
    }
  }
  uint64_t v214 = [v6 lastSeenDate];
  if (v214)
  {
    v215 = (void *)v214;
    v216 = [v6 lastSeenDate];
    v217 = [v253 lastSeenDate];
    char v218 = [v216 isEqualToDate:v217];

    if ((v218 & 1) == 0)
    {
      v219 = [v6 lastSeenDate];
      [v253 setLastSeenDate:v219];

      [v7 markChanged];
    }
  }
  uint64_t v220 = [v6 lowBattery];
  if (v220)
  {
    v221 = (void *)v220;
    int v222 = [v253 isLowBattery];
    v223 = [v6 lowBattery];
    int v224 = [v223 BOOLValue];

    if (v222 != v224)
    {
      v225 = [v6 lowBattery];
      objc_msgSend(v253, "setLowBattery:", objc_msgSend(v225, "BOOLValue"));

      [v7 markChanged];
    }
  }
  v252 = [v242 transport];
  v226 = dispatch_group_create();
  long long v256 = 0u;
  long long v257 = 0u;
  long long v258 = 0u;
  long long v259 = 0u;
  id obja = obj;
  uint64_t v227 = [obja countByEnumeratingWithState:&v256 objects:v266 count:16];
  if (v227)
  {
    uint64_t v228 = v227;
    uint64_t v229 = *(void *)v257;
    do
    {
      for (uint64_t i = 0; i != v228; ++i)
      {
        if (*(void *)v257 != v229) {
          objc_enumerationMutation(obja);
        }
        v231 = *(void **)(*((void *)&v256 + 1) + 8 * i);
        dispatch_group_enter(v226);
        if (v242)
        {
          v232 = (void *)[v231 mutableCopy];
          [v232 setTransport:v252];
          id v233 = (id)[v232 copy];
        }
        else
        {
          id v233 = v231;
        }
        v234 = [v253 msgDispatcher];
        v235 = [v253 uuid];
        v254[0] = MEMORY[0x263EF8330];
        v254[1] = 3221225472;
        v254[2] = ____transactionAccessoryUpdated_block_invoke_1114;
        v254[3] = &unk_264A2F7F8;
        v255 = v226;
        [v234 sendMessage:v233 target:v235 andInvokeCompletionHandler:v254];
      }
      uint64_t v228 = [obja countByEnumeratingWithState:&v256 objects:v266 count:16];
    }
    while (v228);
  }

  dispatch_group_wait(v226, 0);
  v236 = [v242 responseHandler];

  if (v236)
  {
    v237 = [v242 responseHandler];
    v237[2](v237, 0, 0);
  }
  if (group) {
    dispatch_group_leave(group);
  }
}

uint64_t ____transactionAccessoryUpdated_block_invoke(uint64_t a1)
{
  return [*(id *)(a1 + 32) _handleUpdatedName:*(void *)(a1 + 40)];
}

uint64_t ____transactionAccessoryUpdated_block_invoke_2(uint64_t a1)
{
  return [*(id *)(a1 + 32) _handleUpdatedName:*(void *)(a1 + 40)];
}

void ____transactionAccessoryUpdated_block_invoke_1114(uint64_t a1)
{
}

void sub_22FAB7EC8(_Unwind_Exception *a1)
{
}

void sub_22FAB80FC(_Unwind_Exception *a1)
{
}

id EpochIntervalFromDate(void *a1)
{
  if (a1)
  {
    uint64_t v2 = NSNumber;
    [a1 timeIntervalSince1970];
    a1 = objc_msgSend(v2, "numberWithDouble:");
    uint64_t v1 = vars8;
  }
  return a1;
}

void sub_22FAB95F4(_Unwind_Exception *a1)
{
}

void sub_22FAB9684(_Unwind_Exception *a1)
{
}

void sub_22FAB9A44(_Unwind_Exception *a1)
{
}

void sub_22FAB9AC4(_Unwind_Exception *a1)
{
}

void sub_22FABC2EC(_Unwind_Exception *a1)
{
}

void sub_22FABC3E8(_Unwind_Exception *a1)
{
}

void sub_22FABC85C(_Unwind_Exception *a1)
{
}

void sub_22FABC958(_Unwind_Exception *a1)
{
}

void sub_22FABCA54(_Unwind_Exception *a1)
{
}

void sub_22FABCB50(_Unwind_Exception *a1)
{
}

void sub_22FABD160(_Unwind_Exception *a1)
{
}

void sub_22FABD260(_Unwind_Exception *a1)
{
}

void sub_22FABEB08(_Unwind_Exception *a1)
{
}

void sub_22FAC20B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22FAC4130(_Unwind_Exception *a1)
{
}

BOOL HMDBackingStoreTransactionSourceIsCurrentDevice(unint64_t a1)
{
  return a1 < 2;
}

void sub_22FAC6C5C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_22FAC9C14(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22FAC9F44(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FACABE8(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FACAF3C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v3);
  objc_destroyWeak(v1);
  objc_destroyWeak(v2);
  objc_destroyWeak((id *)(v4 - 112));
  _Unwind_Resume(a1);
}

void sub_22FACB468(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FACBB3C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

void sub_22FACBEAC(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

void sub_22FACC21C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

void sub_22FACCD7C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id *location, id *a10, id *a11)
{
  objc_destroyWeak(v11);
  objc_destroyWeak(v16);
  objc_destroyWeak(v15);
  objc_destroyWeak(v14);
  objc_destroyWeak(v13);
  objc_destroyWeak(v12);
  objc_destroyWeak(location);
  objc_destroyWeak(a10);
  objc_destroyWeak(a11);
  objc_destroyWeak((id *)(v17 - 112));
  _Unwind_Resume(a1);
}

void sub_22FAD2518(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id *location, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,id a24)
{
}

void sub_22FAD7E54(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22FADD424(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22FAE16B8(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FAE2728(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FAE2960(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location, id a18)
{
  objc_destroyWeak(v19);
  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  objc_destroyWeak(&a18);
  _Unwind_Resume(a1);
}

void sub_22FAE2C34(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FAE30C0(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FAE3688(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,id a25)
{
  objc_destroyWeak(v26);
  objc_destroyWeak(v25);
  objc_destroyWeak(&location);
  objc_destroyWeak(&a25);
  _Unwind_Resume(a1);
}

void sub_22FAE3A80(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FAE476C(_Unwind_Exception *a1)
{
}

void sub_22FAE4878(_Unwind_Exception *a1)
{
}

void sub_22FAE4C50(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FAE503C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_22FAE59B4(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FAE6024(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FAE60A0(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FAE611C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FAE71D0(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_22FAEADFC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Block_object_dispose((const void *)(v16 - 80), 8);
  _Unwind_Resume(a1);
}

void sub_22FAEB0D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va1, a9);
  va_start(va, a9);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__75473(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__75474(uint64_t a1)
{
}

void sub_22FAEEC70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32)
{
  _Block_object_dispose(&a20, 8);
  _Block_object_dispose(&a26, 8);
  _Block_object_dispose(&a32, 8);
  _Block_object_dispose((const void *)(v32 - 136), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__76209(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__76210(uint64_t a1)
{
}

void sub_22FAF2788(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22FAF2F40(_Unwind_Exception *a1)
{
}

void sub_22FAF32BC(_Unwind_Exception *a1)
{
}

void sub_22FAF35A0(_Unwind_Exception *a1)
{
}

void sub_22FAF36F4(_Unwind_Exception *a1)
{
}

void sub_22FAF4C14(_Unwind_Exception *a1)
{
}

void sub_22FAF51F0(_Unwind_Exception *a1)
{
}

void sub_22FAF6580(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__76881(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__76882(uint64_t a1)
{
}

void __transactionAccessoryUpdated_76883(void *a1, void *a2, void *a3)
{
  uint64_t v362 = *MEMORY[0x263EF8340];
  v344 = a1;
  id v339 = a2;
  id v343 = a3;
  v338 = [v343 transactionResult];
  id v5 = (void *)MEMORY[0x263EFF980];
  id v6 = +[HMDHAPAccessoryTransaction properties];
  v336 = objc_msgSend(v5, "arrayWithCapacity:", objc_msgSend(v6, "count"));

  v337 = [v344 home];
  uint64_t v7 = [v339 uniqueIdentifier];
  if (v7)
  {
    char v8 = [v344 uniqueIdentifier];
    unsigned int v9 = [v339 uniqueIdentifier];
    char v10 = [v8 isEqual:v9];

    if ((v10 & 1) == 0)
    {
      uint64_t v11 = [v339 uniqueIdentifier];
      [v344 setUniqueIdentifier:v11];

      [v338 markChanged];
    }
  }
  uint64_t v12 = [v339 bridgeUUID];
  if (v12)
  {
    uint64_t v13 = [v344 bridge];
    uint64_t v14 = [v13 uuid];
    int v15 = [v14 UUIDString];
    uint64_t v16 = [v339 bridgeUUID];
    char v17 = [v15 isEqual:v16];

    if ((v17 & 1) == 0)
    {
      id v18 = objc_alloc(MEMORY[0x263F08C38]);
      uint64_t v19 = [v339 bridgeUUID];
      char v20 = (void *)[v18 initWithUUIDString:v19];
      [v344 _updateHost:v20];

      [v338 markChanged];
      [v338 markSaveToAssistant];
    }
  }
  long long v21 = [v339 roomUUID];

  if (v21)
  {
    long long v22 = [v344 room];
    long long v23 = [v22 name];

    id v24 = objc_alloc(MEMORY[0x263F08C38]);
    long long v25 = [v339 roomUUID];
    long long v26 = (void *)[v24 initWithUUIDString:v25];

    context = (void *)MEMORY[0x230FBD990]();
    char v27 = v344;
    HMFGetOSLogHandle();
    uint64_t v28 = (id)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v28, OS_LOG_TYPE_INFO))
    {
      HMFGetLogIdentifier();
      id v29 = (id)objc_claimAutoreleasedReturnValue();
      v335 = [v27 home];
      char v30 = [v335 roomWithUUID:v26];
      uint64_t v31 = [v30 name];
      uint64_t v32 = [v27 room];
      char v33 = [v32 uuid];
      HMFEqualObjects();

      HMFBooleanToString();
      id v34 = (id)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138544130;
      id v355 = v29;
      __int16 v356 = 2112;
      id v357 = v23;
      __int16 v358 = 2112;
      id v359 = v31;
      __int16 v360 = 2112;
      id v361 = v34;
      _os_log_impl(&dword_22F52A000, v28, OS_LOG_TYPE_INFO, "%{public}@transactionObjectUpdated: old: %@, new:%@, same Room: %@", buf, 0x2Au);
    }
    if (v26 && objc_msgSend(v27, "_updateRoom:source:", v26, objc_msgSend(v338, "source")))
    {
      [v338 markChanged];
      [v338 markSaveToAssistant];
    }
    [v27 _handleRoomChangedFromOldRoomName:v23];
  }
  uint64_t v35 = [v339 accessoryFlags];
  if (v35)
  {
    int v36 = [v344 accessoryFlags];
    long long v37 = [v339 accessoryFlags];
    char v38 = [v36 isEqual:v37];

    if ((v38 & 1) == 0)
    {
      long long v39 = [v339 accessoryFlags];
      uint64_t v40 = [v344 updateAccessoryFlagsAndNotifyClients:v39];

      if (v40)
      {
        [v336 addObject:v40];
        [v338 markChanged];
      }
    }
  }
  long long v41 = [v339 certificationStatus];
  if (v41)
  {
    long long v42 = [v339 certificationStatus];
    if ([v42 unsignedIntegerValue])
    {
      uint64_t v43 = [v344 certificationStatus];
      long long v44 = [v339 certificationStatus];
      BOOL v45 = v43 == [v44 unsignedIntegerValue];

      if (!v45)
      {
        id v46 = [v339 certificationStatus];
        objc_msgSend(v344, "setCertificationStatus:", objc_msgSend(v46, "unsignedIntegerValue"));

        [v338 markChanged];
      }
    }
    else
    {
    }
  }
  __int16 v47 = [v339 broadcastKey];
  if (v47)
  {
    id v48 = [v344 broadcastKey];
    __int16 v49 = [v339 broadcastKey];
    char v50 = [v48 isEqualToData:v49];

    if ((v50 & 1) == 0)
    {
      uint64_t v51 = [v339 broadcastKey];
      [v344 setBroadcastKey:v51];

      id v52 = [v339 broadcastKey];
      uint64_t v53 = [v339 keyUpdatedStateNumber];
      uint64_t v54 = [v339 keyUpdatedTime];
      [v344 setBroadcastKey:v52 keyUpdatedStateNumber:v53 keyUpdatedTime:v54];

      [v338 markChanged];
    }
  }
  double v55 = [v339 pairingUsername];
  if (v55)
  {
    double v56 = [v339 publicKey];
    if (!v56)
    {

      goto LABEL_35;
    }
    id v57 = [v344 pairingUsername];
    id v58 = [v339 pairingUsername];
    if ([v57 isEqual:v58])
    {
      char v59 = [v344 publicKey];
      __int16 v60 = [v339 publicKey];
      char v61 = [v59 isEqual:v60];

      if (v61) {
        goto LABEL_35;
      }
    }
    else
    {
    }
    __int16 v62 = [v339 pairingUsername];
    char v63 = [v339 publicKey];
    [v344 setPairingUsername:v62 publicKey:v63];

    [v338 markChanged];
  }
LABEL_35:
  id v64 = [v339 transportInformation];

  if (v64)
  {
    uint64_t v65 = (void *)MEMORY[0x230FBD990]();
    uint64_t v66 = objc_opt_class();
    HMFGetOSLogHandle();
    id v67 = (id)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v67, OS_LOG_TYPE_INFO))
    {
      HMFGetLogIdentifier();
      id v68 = (id)objc_claimAutoreleasedReturnValue();
      [v338 source];
      HMFBooleanToString();
      id v69 = (id)objc_claimAutoreleasedReturnValue();
      uint64_t v70 = [v339 transportInformation];
      *(_DWORD *)buf = 138543874;
      id v355 = v68;
      __int16 v356 = 2112;
      id v357 = v69;
      __int16 v358 = 2112;
      id v359 = v70;
      _os_log_impl(&dword_22F52A000, v67, OS_LOG_TYPE_INFO, "%{public}@Received updated transportInformation from localSource: %@, transportInformation: %@", buf, 0x20u);
    }
    v71 = [v339 transportInformation];
    int v72 = objc_msgSend(v344, "updateTransportInformation:localSource:", v71, (unint64_t)objc_msgSend(v338, "source") < 2);

    if (v72) {
      [v338 markChanged];
    }
  }
  char v73 = [v339 communicationProtocol];
  if (v73)
  {
    id v74 = [v339 communicationProtocol];
    uint64_t v75 = [v74 integerValue];
    BOOL v76 = v75 == [v344 communicationProtocol];

    if (!v76)
    {
      id v77 = (void *)MEMORY[0x230FBD990]();
      __int16 v78 = v344;
      HMFGetOSLogHandle();
      uint64_t v79 = (id)objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v79, OS_LOG_TYPE_INFO))
      {
        HMFGetLogIdentifier();
        id v80 = (id)objc_claimAutoreleasedReturnValue();
        [v78 communicationProtocol];
        HAPCommunicationProtocolDescription();
        id v81 = (id)objc_claimAutoreleasedReturnValue();
        v82 = [v339 communicationProtocol];
        [v82 integerValue];
        HAPCommunicationProtocolDescription();
        id v83 = (id)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138543874;
        id v355 = v80;
        __int16 v356 = 2112;
        id v357 = v81;
        __int16 v358 = 2112;
        id v359 = v83;
        _os_log_impl(&dword_22F52A000, v79, OS_LOG_TYPE_INFO, "%{public}@Updating communication protocol from %@ to %@", buf, 0x20u);
      }
      id v84 = [v339 communicationProtocol];
      objc_msgSend(v78, "setCommunicationProtocol:", objc_msgSend(v84, "integerValue"));

      [v338 markChanged];
    }
  }
  id v85 = [v339 accessorySetupHash];
  if (v85)
  {
    id v86 = [v344 setupHash];
    uint64_t v87 = [v339 accessorySetupHash];
    char v88 = [v86 isEqual:v87];

    if ((v88 & 1) == 0)
    {
      id v89 = [v339 accessorySetupHash];
      [v344 setSetupHash:v89];

      [v338 markChanged];
    }
  }
  id v90 = [v339 targetUUIDs];
  if (v90)
  {
    id v91 = [v344 targetUUIDs];
    id v92 = [v339 targetUUIDs];
    char v93 = [v91 isEqual:v92];

    if ((v93 & 1) == 0)
    {
      v94 = [v339 targetUUIDs];
      [v344 updateTargetUUIDs:v94];

      [v338 markChanged];
    }
  }
  uint64_t v95 = [v339 hardwareSupport];
  if (v95)
  {
    int v96 = [v344 hardwareSupport];
    uint64_t v97 = [v339 hardwareSupport];
    int v98 = [v97 BOOLValue];

    if (v96 != v98)
    {
      char v99 = [v339 hardwareSupport];
      objc_msgSend(v344, "setHardwareSupport:", objc_msgSend(v99, "BOOLValue"));

      [v344 notifyClientsOfTargetControlSupportUpdate];
      [v338 markChanged];
    }
  }
  id v100 = [v339 connectivityInfo];
  if (v100)
  {
    uint64_t v101 = [v344 connectivityInfo];
    double v102 = [v339 connectivityInfo];
    char v103 = HMFEqualObjects();

    if ((v103 & 1) == 0)
    {
      long long v104 = [v339 connectivityInfo];
      [v344 setConnectivityInfo:v104];

      [v338 markChanged];
    }
  }
  char v105 = [v339 wiFiTransportCapabilities];
  if (v105)
  {
    long long v106 = [v344 wiFiTransportCapabilities];
    uint64_t v107 = [v339 wiFiTransportCapabilities];
    char v108 = [v106 isEqualToNumber:v107];

    if ((v108 & 1) == 0)
    {
      uint64_t v109 = [v339 wiFiTransportCapabilities];
      [v344 setWiFiTransportCapabilities:v109];

      [v338 markChanged];
    }
  }
  double v110 = [v339 sleepInterval];
  if (v110)
  {
    char v111 = [v344 sleepInterval];
    v112 = [v339 sleepInterval];
    char v113 = [v111 isEqualToNumber:v112];

    if ((v113 & 1) == 0)
    {
      v114 = [v339 sleepInterval];
      [v344 setSleepInterval:v114];

      [v338 markChanged];
    }
  }
  v115 = [v339 enhancedAuthMethod];
  if (v115)
  {
    v116 = [v344 internalEnhancedAuthMethod];
    v117 = [v339 enhancedAuthMethod];
    char v118 = HMFEqualObjects();

    if ((v118 & 1) == 0)
    {
      os_unfair_recursive_lock_lock_with_options();
      v119 = [v339 enhancedAuthMethod];
      uint64_t v120 = [v119 copy];
      id v121 = (void *)v344[62];
      v344[62] = v120;

      __int16 v122 = [v339 enhancedAuthConfigNumber];
      uint64_t v123 = [v122 copy];
      id v124 = (void *)v344[61];
      v344[61] = v123;

      os_unfair_recursive_lock_unlock();
      [v344 handleUpdatedAuthMethod];
      [v338 markChanged];
    }
  }
  v125 = [v339 primaryProfileVersion];

  if (v125)
  {
    id v126 = objc_alloc(MEMORY[0x263F42670]);
    uint64_t v127 = [v339 primaryProfileVersion];
    double v128 = (void *)[v126 initWithVersionString:v127];

    if (v128)
    {
      v129 = [v344 primaryProfileVersion];
      char v130 = [v128 isEqualToVersion:v129];

      if ((v130 & 1) == 0)
      {
        [v344 setPrimaryProfileVersion:v128];
        uint64_t v131 = [v344 networkRouterController];

        if (v131) {
          [v337 _evaluateNetworkRouterManagementForTransaction:v338];
        }
        [v338 markChanged];
      }
    }
  }
  id v132 = [v339 hasOnboardedForNaturalLighting];
  if (v132)
  {
    uint64_t v133 = [v344 hasOnboardedForNaturalLighting];
    double v134 = [v339 hasOnboardedForNaturalLighting];
    char v135 = [v133 isEqualToNumber:v134];

    if ((v135 & 1) == 0)
    {
      uint64_t v136 = (void *)MEMORY[0x230FBD990]();
      uint64_t v137 = v344;
      HMFGetOSLogHandle();
      v138 = (id)objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v138, OS_LOG_TYPE_INFO))
      {
        HMFGetLogIdentifier();
        id v139 = (id)objc_claimAutoreleasedReturnValue();
        id v140 = [v339 hasOnboardedForNaturalLighting];
        *(_DWORD *)buf = 138543618;
        id v355 = v139;
        __int16 v356 = 2112;
        id v357 = v140;
        _os_log_impl(&dword_22F52A000, v138, OS_LOG_TYPE_INFO, "%{public}@Updating has onboarded accessory for natural lighting: %@", buf, 0x16u);
      }
      uint64_t v141 = [v339 hasOnboardedForNaturalLighting];
      [v137 setHasOnboardedForNaturalLighting:v141];

      [v338 markChanged];
    }
  }
  id v142 = [v339 initialServiceTypeUUIDs];
  if (v142)
  {
    uint64_t v143 = [v339 initialServiceTypeUUIDs];
    v144 = [v344 initialServiceTypeUUIDs];
    char v145 = HMFEqualObjects();

    if ((v145 & 1) == 0)
    {
      uint64_t v146 = [v339 initialServiceTypeUUIDs];
      [v344 setInitialServiceTypeUUIDs:v146];

      [v338 markChanged];
    }
  }
  v147 = [v339 needsOnboarding];
  if (v147)
  {
    v148 = [v339 needsOnboarding];
    v149 = [v344 needsOnboarding];
    char v150 = HMFEqualObjects();

    if ((v150 & 1) == 0)
    {
      uint64_t v151 = [v339 needsOnboarding];
      [v344 setNeedsOnboarding:v151];

      [v338 markChanged];
    }
  }
  v152 = [v339 suspendedState];
  if (v152)
  {
    double v153 = [v339 suspendedState];
    uint64_t v154 = objc_msgSend(NSNumber, "numberWithUnsignedInteger:", objc_msgSend(v344, "suspendedState"));
    int v155 = [v153 isEqualToNumber:v154];

    if (v155)
    {
      v156 = [v339 suspendedState];
      objc_msgSend(v344, "setSuspendedState:", objc_msgSend(v156, "unsignedIntegerValue"));

      [v338 markChanged];
    }
  }
  [v344 handleUpdatedCHIPPropertiesOnAccessoryModel:v339 actions:v338];
  v157 = [v339 supportsMatterAccessCode];
  if (v157)
  {
    v158 = [v339 supportsMatterAccessCode];
    uint64_t v159 = [v344 supportsMatterAccessCode];
    char v160 = HMFEqualObjects();

    if ((v160 & 1) == 0)
    {
      id v161 = (void *)MEMORY[0x230FBD990]();
      uint64_t v162 = [v337 accessCodeManager];
      HMFGetOSLogHandle();
      v163 = (id)objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v163, OS_LOG_TYPE_INFO))
      {
        HMFGetLogIdentifier();
        id v164 = (id)objc_claimAutoreleasedReturnValue();
        id v165 = [v344 supportsMatterAccessCode];
        id v166 = [v339 supportsMatterAccessCode];
        char v167 = [v344 uuid];
        *(_DWORD *)buf = 138544130;
        id v355 = v164;
        __int16 v356 = 2112;
        id v357 = v165;
        __int16 v358 = 2112;
        id v359 = v166;
        __int16 v360 = 2112;
        id v361 = v167;
        _os_log_impl(&dword_22F52A000, v163, OS_LOG_TYPE_INFO, "%{public}@Updating supportsMatterAccessCode from: %@ to: %@ on accessory: %@", buf, 0x2Au);
      }
      v168 = [v339 supportsMatterAccessCode];
      [v344 setSupportsMatterAccessCode:v168];

      [v338 markChanged];
    }
  }
  uint64_t v169 = [v339 supportsMatterWalletKey];
  if (!v169) {
    goto LABEL_94;
  }
  __int16 v170 = [v339 supportsMatterWalletKey];
  v171 = [v344 supportsMatterWalletKey];
  char v172 = HMFEqualObjects();

  if ((v172 & 1) == 0)
  {
    v173 = (void *)MEMORY[0x230FBD990]();
    __int16 v174 = [v337 nfcReaderKeyManager];
    HMFGetOSLogHandle();
    v175 = (id)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v175, OS_LOG_TYPE_INFO))
    {
      HMFGetLogIdentifier();
      id v176 = (id)objc_claimAutoreleasedReturnValue();
      v177 = [v344 supportsMatterWalletKey];
      __int16 v178 = [v339 supportsMatterWalletKey];
      v179 = [v344 uuid];
      *(_DWORD *)buf = 138544130;
      id v355 = v176;
      __int16 v356 = 2112;
      id v357 = v177;
      __int16 v358 = 2112;
      id v359 = v178;
      __int16 v360 = 2112;
      id v361 = v179;
      _os_log_impl(&dword_22F52A000, v175, OS_LOG_TYPE_INFO, "%{public}@Updating supportsMatterWalletKey from: %@ to: %@ on accessory: %@", buf, 0x2Au);
    }
    char v180 = [v339 supportsMatterWalletKey];
    [v344 setSupportsMatterWalletKey:v180];

    [v338 markChanged];
    int contexta = 1;
  }
  else
  {
LABEL_94:
    int contexta = 0;
  }
  v181 = [v339 supportsNaturalLighting];
  if (v181)
  {
    __int16 v182 = [v339 supportsNaturalLighting];
    v183 = [v344 supportsNaturalLighting];
    char v184 = HMFEqualObjects();

    if ((v184 & 1) == 0)
    {
      v185 = (void *)MEMORY[0x230FBD990]();
      __int16 v186 = v344;
      HMFGetOSLogHandle();
      BOOL v187 = (id)objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v187, OS_LOG_TYPE_INFO))
      {
        HMFGetLogIdentifier();
        id v188 = (id)objc_claimAutoreleasedReturnValue();
        v189 = [v186 supportsNaturalLighting];
        __int16 v190 = [v339 supportsNaturalLighting];
        *(_DWORD *)buf = 138543874;
        id v355 = v188;
        __int16 v356 = 2112;
        id v357 = v189;
        __int16 v358 = 2112;
        id v359 = v190;
        _os_log_impl(&dword_22F52A000, v187, OS_LOG_TYPE_INFO, "%{public}@Updating supportsNaturalLighting from: %@ to: %@", buf, 0x20u);
      }
      v191 = [v339 supportsNaturalLighting];
      [v186 setSupportsNaturalLighting:v191];

      [v338 markChanged];
    }
  }
  BOOL v192 = [v339 naturalLightingEnabled];
  if (v192)
  {
    double v193 = [v339 naturalLightingEnabled];
    __int16 v194 = [v344 naturalLightingEnabled];
    char v195 = HMFEqualObjects();

    if ((v195 & 1) == 0)
    {
      __int16 v196 = (void *)MEMORY[0x230FBD990]();
      uint64_t v197 = v344;
      HMFGetOSLogHandle();
      uint64_t v198 = (id)objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v198, OS_LOG_TYPE_INFO))
      {
        HMFGetLogIdentifier();
        id v199 = (id)objc_claimAutoreleasedReturnValue();
        v200 = [v197 naturalLightingEnabled];
        v201 = [v339 naturalLightingEnabled];
        *(_DWORD *)buf = 138543874;
        id v355 = v199;
        __int16 v356 = 2112;
        id v357 = v200;
        __int16 v358 = 2112;
        id v359 = v201;
        _os_log_impl(&dword_22F52A000, v198, OS_LOG_TYPE_INFO, "%{public}@Updating naturalLightingEnabled from: %@ to: %@", buf, 0x20u);
      }
      v202 = [v339 naturalLightingEnabled];
      [v197 setNaturalLightingEnabled:v202];

      [v338 markChanged];
    }
  }
  char v203 = [v339 supportsMatterWeekDaySchedule];
  if (v203)
  {
  }
  else
  {
    v204 = [v339 matterWeekDayScheduleCapacity];
    BOOL v205 = v204 == 0;

    if (v205) {
      goto LABEL_122;
    }
  }
  v206 = [v344 weekDayScheduleCapacity];
  v207 = [v339 supportsMatterWeekDaySchedule];
  if (v207)
  {
    uint64_t v208 = [v339 supportsMatterWeekDaySchedule];
    int v209 = [v208 BOOLValue];
    int v210 = [v344 supportsMatterWeekDaySchedule];

    if (v209 != v210)
    {
      v211 = (void *)MEMORY[0x230FBD990]();
      int v212 = v344;
      HMFGetOSLogHandle();
      v213 = (id)objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v213, OS_LOG_TYPE_INFO))
      {
        HMFGetLogIdentifier();
        id v214 = (id)objc_claimAutoreleasedReturnValue();
        [v212 supportsMatterWeekDaySchedule];
        HMFBooleanToString();
        id v215 = (id)objc_claimAutoreleasedReturnValue();
        v216 = [v339 supportsMatterWeekDaySchedule];
        [v216 BOOLValue];
        HMFBooleanToString();
        id v217 = (id)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138543874;
        id v355 = v214;
        __int16 v356 = 2112;
        id v357 = v215;
        __int16 v358 = 2112;
        id v359 = v217;
        _os_log_impl(&dword_22F52A000, v213, OS_LOG_TYPE_INFO, "%{public}@Updating supportsMatterWeekDaySchedule from: %@ to: %@", buf, 0x20u);
      }
      char v218 = [v339 supportsMatterWeekDaySchedule];
      objc_msgSend(v212, "setSupportsMatterWeekDaySchedule:", objc_msgSend(v218, "BOOLValue"));

      [v338 markChanged];
    }
  }
  v219 = [v339 matterWeekDayScheduleCapacity];
  if (v219)
  {
    uint64_t v220 = [v339 matterWeekDayScheduleCapacity];
    v221 = [v344 matterWeekDayScheduleCapacity];
    char v222 = HMFEqualObjects();

    if ((v222 & 1) == 0)
    {
      v223 = (void *)MEMORY[0x230FBD990]();
      int v224 = v344;
      HMFGetOSLogHandle();
      v225 = (id)objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v225, OS_LOG_TYPE_INFO))
      {
        HMFGetLogIdentifier();
        id v226 = (id)objc_claimAutoreleasedReturnValue();
        uint64_t v227 = [v224 matterWeekDayScheduleCapacity];
        uint64_t v228 = [v339 matterWeekDayScheduleCapacity];
        *(_DWORD *)buf = 138543874;
        id v355 = v226;
        __int16 v356 = 2112;
        id v357 = v227;
        __int16 v358 = 2112;
        id v359 = v228;
        _os_log_impl(&dword_22F52A000, v225, OS_LOG_TYPE_INFO, "%{public}@Updating matterWeekDayScheduleCapacity from: %@ to: %@", buf, 0x20u);
      }
      uint64_t v229 = [v339 matterWeekDayScheduleCapacity];
      [v224 setMatterWeekDayScheduleCapacity:v229];

      [v338 markChanged];
    }
  }
  v230 = [v344 weekDayScheduleCapacity];
  int v231 = HMFEqualObjects();

  contexta |= v231 ^ 1;
LABEL_122:
  v232 = [v339 supportsMatterYearDaySchedule];
  if (v232)
  {
  }
  else
  {
    id v233 = [v339 matterYearDayScheduleCapacity];
    BOOL v234 = v233 == 0;

    if (v234) {
      goto LABEL_136;
    }
  }
  v235 = [v344 yearDayScheduleCapacity];
  v236 = [v339 supportsMatterYearDaySchedule];
  if (v236)
  {
    v237 = [v339 supportsMatterYearDaySchedule];
    int v238 = [v237 BOOLValue];
    int v239 = [v344 supportsMatterYearDaySchedule];

    if (v238 != v239)
    {
      v240 = (void *)MEMORY[0x230FBD990]();
      v241 = v344;
      HMFGetOSLogHandle();
      id v242 = (id)objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v242, OS_LOG_TYPE_INFO))
      {
        HMFGetLogIdentifier();
        id v243 = (id)objc_claimAutoreleasedReturnValue();
        [v241 supportsMatterYearDaySchedule];
        HMFBooleanToString();
        id v244 = (id)objc_claimAutoreleasedReturnValue();
        v245 = [v339 supportsMatterYearDaySchedule];
        [v245 BOOLValue];
        HMFBooleanToString();
        id v246 = (id)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138543874;
        id v355 = v243;
        __int16 v356 = 2112;
        id v357 = v244;
        __int16 v358 = 2112;
        id v359 = v246;
        _os_log_impl(&dword_22F52A000, v242, OS_LOG_TYPE_INFO, "%{public}@Updating supportsMatterYearDaySchedule from: %@ to: %@", buf, 0x20u);
      }
      v247 = [v339 supportsMatterYearDaySchedule];
      objc_msgSend(v241, "setSupportsMatterYearDaySchedule:", objc_msgSend(v247, "BOOLValue"));

      [v338 markChanged];
    }
  }
  id v248 = [v339 matterYearDayScheduleCapacity];
  if (v248)
  {
    v249 = [v339 matterYearDayScheduleCapacity];
    v250 = [v344 matterYearDayScheduleCapacity];
    char v251 = HMFEqualObjects();

    if ((v251 & 1) == 0)
    {
      v252 = (void *)MEMORY[0x230FBD990]();
      v253 = v344;
      HMFGetOSLogHandle();
      v254 = (id)objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v254, OS_LOG_TYPE_INFO))
      {
        HMFGetLogIdentifier();
        id v255 = (id)objc_claimAutoreleasedReturnValue();
        long long v256 = [v253 matterYearDayScheduleCapacity];
        long long v257 = [v339 matterYearDayScheduleCapacity];
        *(_DWORD *)buf = 138543874;
        id v355 = v255;
        __int16 v356 = 2112;
        id v357 = v256;
        __int16 v358 = 2112;
        id v359 = v257;
        _os_log_impl(&dword_22F52A000, v254, OS_LOG_TYPE_INFO, "%{public}@Updating matterYearDayScheduleCapacity from: %@ to: %@", buf, 0x20u);
      }
      long long v258 = [v339 matterYearDayScheduleCapacity];
      [v253 setMatterYearDayScheduleCapacity:v258];

      [v338 markChanged];
    }
  }
  long long v259 = [v344 yearDayScheduleCapacity];
  int v260 = HMFEqualObjects();

  contexta |= v260 ^ 1;
LABEL_136:
  id v261 = [v339 supportsMatCredACP];
  if (v261)
  {
    id v262 = [v339 supportsMatCredACP];
    int v263 = [v262 BOOLValue];
    int v264 = [v344 supportsACWGProvisioning];

    if (v263 != v264)
    {
      id v265 = (void *)MEMORY[0x230FBD990]();
      v266 = v344;
      HMFGetOSLogHandle();
      v267 = (id)objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v267, OS_LOG_TYPE_INFO))
      {
        HMFGetLogIdentifier();
        id v268 = (id)objc_claimAutoreleasedReturnValue();
        [v266 supportsACWGProvisioning];
        HMFBooleanToString();
        id v269 = (id)objc_claimAutoreleasedReturnValue();
        v270 = [v339 supportsMatCredACP];
        [v270 BOOLValue];
        HMFBooleanToString();
        id v271 = (id)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138543874;
        id v355 = v268;
        __int16 v356 = 2112;
        id v357 = v269;
        __int16 v358 = 2112;
        id v359 = v271;
        _os_log_impl(&dword_22F52A000, v267, OS_LOG_TYPE_INFO, "%{public}@Updating supportsACWGProvisioning from: %@ to: %@", buf, 0x20u);
      }
      v272 = [v339 supportsMatCredACP];
      objc_msgSend(v266, "setSupportsACWGProvisioning:", objc_msgSend(v272, "BOOLValue"));

      [v338 markChanged];
      int contexta = 1;
    }
  }
  v273 = [v339 supportsMatCredACB];
  if (v273)
  {
    v274 = [v339 supportsMatCredACB];
    int v275 = [v274 BOOLValue];
    int v276 = [v344 supportsACWGUWB];

    if (v275 != v276)
    {
      id v277 = (void *)MEMORY[0x230FBD990]();
      __int16 v278 = v344;
      HMFGetOSLogHandle();
      uint64_t v279 = (id)objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v279, OS_LOG_TYPE_INFO))
      {
        HMFGetLogIdentifier();
        id v280 = (id)objc_claimAutoreleasedReturnValue();
        [v278 supportsACWGUWB];
        HMFBooleanToString();
        id v281 = (id)objc_claimAutoreleasedReturnValue();
        __int16 v282 = [v339 supportsMatCredACB];
        [v282 BOOLValue];
        HMFBooleanToString();
        id v283 = (id)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138543874;
        id v355 = v280;
        __int16 v356 = 2112;
        id v357 = v281;
        __int16 v358 = 2112;
        id v359 = v283;
        _os_log_impl(&dword_22F52A000, v279, OS_LOG_TYPE_INFO, "%{public}@Updating supportsACWGUWB from: %@ to: %@", buf, 0x20u);
      }
      v284 = [v339 supportsMatCredACB];
      objc_msgSend(v278, "setSupportsACWGUWB:", objc_msgSend(v284, "BOOLValue"));

      [v338 markChanged];
      int contexta = 1;
    }
  }
  v285 = [v339 matCredRGSI];
  if (v285)
  {
    v286 = [v339 matCredRGSI];
    v287 = [v344 readerGroupSubIdentifierACWG];
    char v288 = HMFEqualObjects();

    if ((v288 & 1) == 0)
    {
      v289 = (void *)MEMORY[0x230FBD990]();
      v290 = v344;
      HMFGetOSLogHandle();
      v291 = (id)objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v291, OS_LOG_TYPE_INFO))
      {
        HMFGetLogIdentifier();
        id v292 = (id)objc_claimAutoreleasedReturnValue();
        v293 = [v290 readerGroupSubIdentifierACWG];
        v294 = [v339 matCredRGSI];
        *(_DWORD *)buf = 138543874;
        id v355 = v292;
        __int16 v356 = 2112;
        id v357 = v293;
        __int16 v358 = 2112;
        id v359 = v294;
        _os_log_impl(&dword_22F52A000, v291, OS_LOG_TYPE_INFO, "%{public}@Updating readerGroupSubIdentifierACWG from: %@ to: %@", buf, 0x20u);
      }
      v295 = [v339 matCredRGSI];
      [v290 setReaderGroupSubIdentifierACWG:v295];

      [v338 markChanged];
    }
  }
  v296 = [v339 preexistingMatCredRGI];
  if (v296)
  {
    v297 = [v339 preexistingMatCredRGI];
    v298 = [v344 preexistingReaderGroupIdentifierACWG];
    char v299 = HMFEqualObjects();

    if ((v299 & 1) == 0)
    {
      v300 = (void *)MEMORY[0x230FBD990]();
      v301 = v344;
      HMFGetOSLogHandle();
      v302 = (id)objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v302, OS_LOG_TYPE_INFO))
      {
        HMFGetLogIdentifier();
        id v303 = (id)objc_claimAutoreleasedReturnValue();
        v304 = [v301 preexistingReaderGroupIdentifierACWG];
        v305 = [v339 preexistingMatCredRGI];
        *(_DWORD *)buf = 138543874;
        id v355 = v303;
        __int16 v356 = 2112;
        id v357 = v304;
        __int16 v358 = 2112;
        id v359 = v305;
        _os_log_impl(&dword_22F52A000, v302, OS_LOG_TYPE_INFO, "%{public}@Updating preexistingReaderGroupIdentifierACWG from: %@ to: %@", buf, 0x20u);
      }
      v306 = [v339 preexistingMatCredRGI];
      [v301 setPreexistingReaderGroupIdentifierACWG:v306];

      [v338 markChanged];
    }
  }
  v307 = [v339 mfiCertifiedACWG];
  if (v307)
  {
    v308 = [v339 mfiCertifiedACWG];
    int v309 = [v308 BOOLValue];
    int v310 = [v344 mfiCertifiedACWG];

    if (v309 != v310)
    {
      v311 = (void *)MEMORY[0x230FBD990]();
      v312 = v344;
      HMFGetOSLogHandle();
      v313 = (id)objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v313, OS_LOG_TYPE_INFO))
      {
        HMFGetLogIdentifier();
        id v314 = (id)objc_claimAutoreleasedReturnValue();
        [v312 mfiCertifiedACWG];
        HMFBooleanToString();
        id v315 = (id)objc_claimAutoreleasedReturnValue();
        v316 = [v339 mfiCertifiedACWG];
        [v316 BOOLValue];
        HMFBooleanToString();
        id v317 = (id)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138543874;
        id v355 = v314;
        __int16 v356 = 2112;
        id v357 = v315;
        __int16 v358 = 2112;
        id v359 = v317;
        _os_log_impl(&dword_22F52A000, v313, OS_LOG_TYPE_INFO, "%{public}@Updating mfiCertifiedACWG from: %@ to: %@", buf, 0x20u);
      }
      v318 = [v339 mfiCertifiedACWG];
      objc_msgSend(v312, "setMfiCertifiedACWG:", objc_msgSend(v318, "BOOLValue"));

      [v338 markChanged];
    }
  }
  if (contexta) {
    logAndPostNotification(@"HMDAccessorySupportsWalletKeyDidChangeNotification", v344, 0);
  }
  v319 = dispatch_group_create();
  long long v349 = 0u;
  long long v350 = 0u;
  long long v351 = 0u;
  long long v352 = 0u;
  id contextb = v336;
  uint64_t v320 = [contextb countByEnumeratingWithState:&v349 objects:v353 count:16];
  if (v320)
  {
    uint64_t v321 = *(void *)v350;
    do
    {
      for (uint64_t i = 0; i != v320; ++i)
      {
        if (*(void *)v350 != v321) {
          objc_enumerationMutation(contextb);
        }
        v323 = *(void **)(*((void *)&v349 + 1) + 8 * i);
        dispatch_group_enter(v319);
        if (v343)
        {
          v324 = (void *)[v323 mutableCopy];
          v325 = [v343 transport];
          [v324 setTransport:v325];
          id v326 = (id)[v324 copy];
        }
        else
        {
          id v326 = v323;
        }
        v327 = [v344 msgDispatcher];
        v328 = [v344 uuid];
        v347[0] = MEMORY[0x263EF8330];
        v347[1] = 3221225472;
        v347[2] = ____transactionAccessoryUpdated_block_invoke_76892;
        v347[3] = &unk_264A2F7F8;
        v348 = v319;
        [v327 sendMessage:v326 target:v328 andInvokeCompletionHandler:v347];
      }
      uint64_t v320 = [contextb countByEnumeratingWithState:&v349 objects:v353 count:16];
    }
    while (v320);
  }

  dispatch_group_wait(v319, 0);
  v345[0] = MEMORY[0x263EF8330];
  v345[1] = 3221225472;
  v345[2] = ____transactionAccessoryUpdated_block_invoke_2_76893;
  v345[3] = &unk_264A27D78;
  id v329 = v338;
  id v346 = v329;
  [v344 transactionAccessoryUpdatedForPreferredMediaUser:v339 completionHandler:v345];
  if (![v344 supportsCHIP]) {
    goto LABEL_184;
  }
  id v330 = [v337 featureDataSource];
  if (![v330 isRVCEnabled])
  {
LABEL_183:

    goto LABEL_184;
  }
  v331 = [v339 supportsNativeMatter];
  if (([v331 BOOLValue] & 1) == 0)
  {

    goto LABEL_183;
  }
  char v332 = [v344 convertingToNativeMatter];

  if ((v332 & 1) == 0)
  {
    v333 = [v344 modelObjectWithChangeType:1];
    objc_opt_class();
    if (objc_opt_isKindOfClass()) {
      v334 = v333;
    }
    else {
      v334 = 0;
    }
    id v330 = v334;

    if (v330)
    {
      [v344 setConvertingToNativeMatter:1];
      [v337 convertHAPAccessoryToNativeMatter:v344 accessoryModel:v330];
    }
    goto LABEL_183;
  }
LABEL_184:
  [v343 respondWithSuccess];
}

void sub_22FAF8D70(_Unwind_Exception *a1)
{
}

void ____transactionAccessoryUpdated_block_invoke_76892(uint64_t a1)
{
}

uint64_t ____transactionAccessoryUpdated_block_invoke_2_76893(uint64_t result, int a2)
{
  if (a2) {
    return [*(id *)(result + 32) markChanged];
  }
  return result;
}

void sub_22FAF90BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,id location)
{
  objc_destroyWeak(v25);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22FAFD05C(_Unwind_Exception *a1)
{
}

void sub_22FAFE61C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 112));
  _Unwind_Resume(a1);
}

void sub_22FB01BB4(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 48), 8);
  _Unwind_Resume(a1);
}

void sub_22FB02B68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_22FB0347C(_Unwind_Exception *a1)
{
}

void sub_22FB05E50(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,id location)
{
}

void sub_22FB060E0(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_22FB07018(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,id location)
{
  objc_destroyWeak(v29);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22FB085AC(_Unwind_Exception *a1)
{
}

void sub_22FB0ADBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id *location)
{
  objc_destroyWeak(location);
  objc_destroyWeak((id *)&STACK[0x280]);
  _Block_object_dispose(&STACK[0x288], 8);
  _Block_object_dispose((const void *)(v14 - 192), 8);
  __HMFActivityScopeLeave();
  _Unwind_Resume(a1);
}

void sub_22FB0B544(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_22FB0EA10(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 104));
  _Unwind_Resume(a1);
}

void sub_22FB0EE70(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 128));
  _Unwind_Resume(a1);
}

void sub_22FB0FAB8(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 160));
  _Unwind_Resume(a1);
}

void sub_22FB1114C(_Unwind_Exception *a1)
{
}

void sub_22FB12B3C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id *location, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,id a29)
{
}

void sub_22FB1345C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22FB13CF8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22FB165B8(_Unwind_Exception *a1)
{
}

void sub_22FB16EC8(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 224));
  _Unwind_Resume(a1);
}

void sub_22FB17184(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_22FB1728C(_Unwind_Exception *a1)
{
}

void sub_22FB17BF8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,id location)
{
  objc_destroyWeak(v23);
  objc_destroyWeak(&location);
  __HMFActivityScopeLeave();
  _Unwind_Resume(a1);
}

void sub_22FB17E64(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_22FB18B8C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 104));
  __HMFActivityScopeLeave();
  _Unwind_Resume(a1);
}

void sub_22FB18E2C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_22FB18F34(_Unwind_Exception *a1)
{
}

void sub_22FB1962C(_Unwind_Exception *a1)
{
}

void sub_22FB1984C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_22FB19A5C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_22FB1A524(_Unwind_Exception *a1)
{
}

void sub_22FB1A760(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22FB1AD44(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22FB1C2B4(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 56));
  _Unwind_Resume(a1);
}

void sub_22FB1C8A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
}

void sub_22FB20234(_Unwind_Exception *a1)
{
}

void sub_22FB20520(_Unwind_Exception *a1)
{
}

void sub_22FB20684(_Unwind_Exception *a1)
{
}

void sub_22FB20708(_Unwind_Exception *a1)
{
}

void sub_22FB20910(_Unwind_Exception *exception_object)
{
}

void sub_22FB20AC8(_Unwind_Exception *exception_object)
{
}

void sub_22FB20B98(_Unwind_Exception *a1)
{
}

void sub_22FB210F4(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_22FB237D4(_Unwind_Exception *a1)
{
}

void sub_22FB23864(_Unwind_Exception *a1)
{
}

void sub_22FB23F8C(_Unwind_Exception *a1)
{
}

void sub_22FB2411C(_Unwind_Exception *a1)
{
}

void sub_22FB24318(_Unwind_Exception *a1)
{
}

void sub_22FB243A8(_Unwind_Exception *a1)
{
}

void __handleUpdatedPassword(void *a1, void *a2)
{
  uint64_t v79 = *MEMORY[0x263EF8340];
  id v3 = a1;
  id v42 = a2;
  long long v50 = 0u;
  long long v51 = 0u;
  long long v52 = 0u;
  long long v53 = 0u;
  uint64_t v40 = v3;
  uint64_t v4 = [v3 services];
  id v5 = (void *)[v4 copy];

  id obj = v5;
  uint64_t v38 = [v5 countByEnumeratingWithState:&v50 objects:v57 count:16];
  if (v38)
  {
    uint64_t v37 = *(void *)v51;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v51 != v37)
        {
          uint64_t v7 = v6;
          objc_enumerationMutation(obj);
          uint64_t v6 = v7;
        }
        uint64_t v39 = v6;
        char v8 = *(void **)(*((void *)&v50 + 1) + 8 * v6);
        unsigned int v9 = [v8 type];
        int v10 = [v9 isEqualToString:@"000000DA-0000-1000-8000-0026BB765291"];

        if (v10)
        {
          long long v48 = 0u;
          long long v49 = 0u;
          long long v46 = 0u;
          long long v47 = 0u;
          id v41 = [v8 characteristics];
          uint64_t v11 = [v41 countByEnumeratingWithState:&v46 objects:v56 count:16];
          if (!v11) {
            goto LABEL_46;
          }
          uint64_t v43 = *(void *)v47;
          while (1)
          {
            uint64_t v12 = 0;
            do
            {
              if (*(void *)v47 != v43) {
                objc_enumerationMutation(v41);
              }
              uint64_t v13 = *(void **)(*((void *)&v46 + 1) + 8 * v12);
              uint64_t v14 = [v13 type];
              int v15 = [v14 isEqualToString:@"000000E4-0000-1000-8000-0026BB765291"];

              if (v15)
              {
                uint64_t v16 = [v13 value];

                if (v16)
                {
                  char v17 = [v13 value];
                  id v18 = v17;
                  if (v17)
                  {
                    id v19 = v17;
                    [v19 bytes];
                    [v19 length];

                    *(void *)&long long buf = 0;
                    uint64_t v54 = 0;
                    double v55 = 0;
                    id v20 = 0;
                    BOOL v21 = 0;
                    if (!TLV8Get() && v54 == 1)
                    {
                      unsigned int v22 = *(unsigned __int8 *)buf;
                      if (v22 > 1) {
                        goto LABEL_21;
                      }
                      int v23 = TLV8GetOrCopyCoalesced();
                      if (v23 == -6727 || !v54)
                      {
                        id v20 = 0;
                        if (!v22) {
                          goto LABEL_29;
                        }
                      }
                      else
                      {
                        if (v23)
                        {
LABEL_21:
                          BOOL v21 = 0;
                          id v20 = 0;
                          goto LABEL_30;
                        }
                        id v25 = [NSString alloc];
                        id v20 = (id)[v25 initWithBytes:(void)buf length:v54 encoding:4];
                        if (v55)
                        {
                          free(v55);
                          double v55 = 0;
                        }
                        if (v20)
                        {
LABEL_29:
                          BOOL v21 = v22 != 0;
                          id v20 = v20;
                          goto LABEL_30;
                        }
                      }
                      BOOL v21 = 0;
                    }
LABEL_30:
                  }
                  else
                  {
                    BOOL v21 = 0;
                    id v20 = 0;
                  }
                  id v24 = v20;
                }
                else
                {
                  BOOL v21 = 0;
                  id v24 = 0;
                }
                long long v77 = 0u;
                long long v78 = 0u;
                long long v75 = 0u;
                long long v76 = 0u;
                long long v73 = 0u;
                long long v74 = 0u;
                long long v71 = 0u;
                long long v72 = 0u;
                long long v69 = 0u;
                long long v70 = 0u;
                long long v67 = 0u;
                long long v68 = 0u;
                long long v65 = 0u;
                long long v66 = 0u;
                long long v63 = 0u;
                long long v64 = 0u;
                long long v61 = 0u;
                long long v62 = 0u;
                long long v59 = 0u;
                long long v60 = 0u;
                long long buf = 0u;
                id v26 = v42;
                TLV8BufferInit();
                id v27 = v26;
                [v27 UTF8String];
                [v27 length];

                if (TLV8BufferAppend() || (LOBYTE(v55) = v42 != 0, TLV8BufferAppend()))
                {
                  uint64_t v28 = 0;
                }
                else
                {
                  uint64_t v28 = objc_msgSend(MEMORY[0x263EFF8F8], "dataWithBytes:length:", buf);
                }
                TLV8BufferFree();
                if (v21 != (v42 != 0) || v42 && ([v24 isEqualToString:v27] & 1) == 0)
                {
                  id v29 = (void *)MEMORY[0x230FBD990]();
                  id v30 = v40;
                  uint64_t v31 = HMFGetOSLogHandle();
                  if (os_log_type_enabled(v31, OS_LOG_TYPE_INFO))
                  {
                    uint64_t v32 = HMFGetLogIdentifier();
                    LODWORD(buf) = 138543362;
                    *(void *)((char *)&buf + 4) = v32;
                    _os_log_impl(&dword_22F52A000, v31, OS_LOG_TYPE_INFO, "%{public}@password does not match send update", (uint8_t *)&buf, 0xCu);
                  }
                  id v33 = v28;
                  objc_initWeak((id *)&buf, v30);
                  id v34 = [v30 workQueue];
                  v44[0] = MEMORY[0x263EF8330];
                  v44[1] = 3221225472;
                  v44[2] = ____handleUpdatedPassword_block_invoke;
                  v44[3] = &unk_264A2DE60;
                  objc_copyWeak(&v45, (id *)&buf);
                  [v30 writeValue:v33 toCharacteristic:v13 queue:v34 completion:v44];

                  objc_destroyWeak(&v45);
                  objc_destroyWeak((id *)&buf);
                }
              }
              ++v12;
            }
            while (v11 != v12);
            uint64_t v35 = [v41 countByEnumeratingWithState:&v46 objects:v56 count:16];
            uint64_t v11 = v35;
            if (!v35)
            {
LABEL_46:

              break;
            }
          }
        }
        uint64_t v6 = v39 + 1;
      }
      while (v39 + 1 != v38);
      uint64_t v38 = [obj countByEnumeratingWithState:&v50 objects:v57 count:16];
    }
    while (v38);
  }
}

void sub_22FB28D10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id *location)
{
}

void ____handleUpdatedPassword_block_invoke(uint64_t a1, void *a2)
{
  uint64_t v13 = *MEMORY[0x263EF8340];
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v5 = (void *)MEMORY[0x230FBD990]();
  id v6 = WeakRetained;
  uint64_t v7 = HMFGetOSLogHandle();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    char v8 = HMFGetLogIdentifier();
    int v9 = 138543618;
    int v10 = v8;
    __int16 v11 = 2112;
    id v12 = v3;
    _os_log_impl(&dword_22F52A000, v7, OS_LOG_TYPE_DEFAULT, "%{public}@unable to update password setting value with error: %@", (uint8_t *)&v9, 0x16u);
  }
}

void __handleUpdatedMinimumUserPrivilege(void *a1, uint64_t a2)
{
  uint64_t v52 = *MEMORY[0x263EF8340];
  long long v44 = 0u;
  long long v45 = 0u;
  long long v46 = 0u;
  long long v47 = 0u;
  id v35 = a1;
  id v3 = [v35 services];
  uint64_t v4 = (void *)[v3 copy];

  id obj = v4;
  uint64_t v33 = [v4 countByEnumeratingWithState:&v44 objects:v51 count:16];
  if (v33)
  {
    uint64_t v32 = *(void *)v45;
    do
    {
      uint64_t v5 = 0;
      do
      {
        if (*(void *)v45 != v32)
        {
          uint64_t v6 = v5;
          objc_enumerationMutation(obj);
          uint64_t v5 = v6;
        }
        uint64_t v34 = v5;
        uint64_t v7 = *(void **)(*((void *)&v44 + 1) + 8 * v5);
        char v8 = [v7 type];
        int v9 = [v8 isEqualToString:@"000000DA-0000-1000-8000-0026BB765291"];

        if (v9)
        {
          long long v42 = 0u;
          long long v43 = 0u;
          long long v40 = 0u;
          long long v41 = 0u;
          id v36 = [v7 characteristics];
          uint64_t v10 = [v36 countByEnumeratingWithState:&v40 objects:v50 count:16];
          if (v10)
          {
            uint64_t v11 = *(void *)v41;
            do
            {
              for (uint64_t i = 0; i != v10; ++i)
              {
                if (*(void *)v41 != v11) {
                  objc_enumerationMutation(v36);
                }
                uint64_t v13 = *(void **)(*((void *)&v40 + 1) + 8 * i);
                uint64_t v14 = [v13 type];
                int v15 = [v14 isEqualToString:@"000000E5-0000-1000-8000-0026BB765291"];

                if (v15)
                {
                  uint64_t v16 = [v13 value];
                  BOOL v17 = [v16 integerValue] == a2;

                  if (!v17)
                  {
                    id v18 = (void *)MEMORY[0x230FBD990]();
                    id v19 = v35;
                    id v20 = HMFGetOSLogHandle();
                    if (os_log_type_enabled(v20, OS_LOG_TYPE_INFO))
                    {
                      BOOL v21 = HMFGetLogIdentifier();
                      *(_DWORD *)long long buf = 138543362;
                      long long v49 = v21;
                      _os_log_impl(&dword_22F52A000, v20, OS_LOG_TYPE_INFO, "%{public}@privilege does not match send update", buf, 0xCu);
                    }
                    unsigned int v22 = [NSNumber numberWithInteger:a2];
                    int v23 = [NSNumber numberWithInteger:a2];
                    id v39 = v22;
                    id v24 = [v13 validateValueForWrite:v23 outValue:&v39];
                    id v25 = v39;

                    if (v24)
                    {
                      id v26 = (void *)MEMORY[0x230FBD990]();
                      id v27 = v19;
                      uint64_t v28 = HMFGetOSLogHandle();
                      if (os_log_type_enabled(v28, OS_LOG_TYPE_ERROR))
                      {
                        id v29 = HMFGetLogIdentifier();
                        *(_DWORD *)long long buf = 138543362;
                        long long v49 = v29;
                        _os_log_impl(&dword_22F52A000, v28, OS_LOG_TYPE_ERROR, "%{public}@invalid minimum user privilege value", buf, 0xCu);
                      }
                    }
                    else
                    {
                      objc_initWeak((id *)buf, v19);
                      id v30 = [v19 workQueue];
                      v37[0] = MEMORY[0x263EF8330];
                      v37[1] = 3221225472;
                      v37[2] = ____handleUpdatedMinimumUserPrivilege_block_invoke;
                      v37[3] = &unk_264A2DE60;
                      objc_copyWeak(&v38, (id *)buf);
                      [v19 writeValue:v25 toCharacteristic:v13 queue:v30 completion:v37];

                      objc_destroyWeak(&v38);
                      objc_destroyWeak((id *)buf);
                    }
                  }
                }
              }
              uint64_t v10 = [v36 countByEnumeratingWithState:&v40 objects:v50 count:16];
            }
            while (v10);
          }
        }
        uint64_t v5 = v34 + 1;
      }
      while (v34 + 1 != v33);
      uint64_t v33 = [obj countByEnumeratingWithState:&v44 objects:v51 count:16];
    }
    while (v33);
  }
}

void sub_22FB29360(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id *location, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,id a41)
{
}

void ____handleUpdatedMinimumUserPrivilege_block_invoke(uint64_t a1, void *a2)
{
  uint64_t v13 = *MEMORY[0x263EF8340];
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v5 = (void *)MEMORY[0x230FBD990]();
  id v6 = WeakRetained;
  uint64_t v7 = HMFGetOSLogHandle();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    char v8 = HMFGetLogIdentifier();
    int v9 = 138543618;
    uint64_t v10 = v8;
    __int16 v11 = 2112;
    id v12 = v3;
    _os_log_impl(&dword_22F52A000, v7, OS_LOG_TYPE_DEFAULT, "%{public}@unable to update privilege privilege value with error: %@", (uint8_t *)&v9, 0x16u);
  }
}

void sub_22FB2EEF4(_Unwind_Exception *a1)
{
}

void sub_22FB2F370(_Unwind_Exception *a1)
{
}

void sub_22FB2F63C(_Unwind_Exception *a1)
{
}

void sub_22FB2FEC4(_Unwind_Exception *a1)
{
}

void sub_22FB30250(_Unwind_Exception *a1)
{
}

void sub_22FB30364(_Unwind_Exception *a1)
{
}

void sub_22FB30720(_Unwind_Exception *a1)
{
}

void sub_22FB30BE4(_Unwind_Exception *a1)
{
}

void sub_22FB3112C(_Unwind_Exception *a1)
{
}

void sub_22FB31DE4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22FB362A4(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FB36604(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FB36BFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v7 - 48), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__77810(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__77811(uint64_t a1)
{
}

void sub_22FB39254(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location,id a22)
{
  objc_destroyWeak(v23);
  objc_destroyWeak(v22);
  objc_destroyWeak(&location);
  objc_destroyWeak(&a22);
  _Unwind_Resume(a1);
}

void completeWithError(void *a1, void *a2)
{
  uint64_t v5 = a1;
  id v3 = a2;
  if (v5)
  {
    if (v3)
    {
      v5[2](v5, v3);
    }
    else
    {
      uint64_t v4 = [MEMORY[0x263F087E8] hmErrorWithCode:52];
      v5[2](v5, v4);
    }
  }
}

id makeConfigurationControl(uint64_t a1)
{
  id v2 = objc_alloc_init(MEMORY[0x263F35B08]);
  id v3 = (void *)[objc_alloc(MEMORY[0x263F35B10]) initWithValue:a1];
  [v2 setOperationType:v3];

  return v2;
}

id makeStationConfiguration(void *a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = (objc_class *)MEMORY[0x263F35B20];
  id v5 = a1;
  id v6 = objc_alloc_init(v4);
  [v6 setSSID:v5];

  id v7 = objc_alloc(MEMORY[0x263F35B18]);
  if (v3)
  {
    char v8 = (void *)[v7 initWithValue:1];
    [v6 setSecurityMode:v8];

    [v6 setPSK:v3];
  }
  else
  {
    int v9 = (void *)[v7 initWithValue:0];
    [v6 setSecurityMode:v9];
  }
  return v6;
}

id encodeRootObjectForRemote(void *a1, void *a2, void *a3)
{
  id v5 = a1;
  id v6 = a2;
  id v7 = a3;
  char v8 = (void *)MEMORY[0x230FBD990]();
  id v9 = [[HMDRemoteKeyedArchiver alloc] initForWritingWithRemoteDeviceIsOnSameAccount:0 remoteGateway:0 remoteUserIsAdministrator:0 user:v6 supportedFeatures:v7];
  [v9 encodeObject:v5 forKey:*MEMORY[0x263F081D0]];
  [v9 finishEncoding];
  uint64_t v10 = [v9 encodedData];

  return v10;
}

id encodeRootObjectForRemoteDeviceOnSameAccountMigrateToHH2(void *a1, int a2, int a3)
{
  id v5 = a1;
  id v6 = (void *)MEMORY[0x230FBD990]();
  id v7 = (void *)[objc_alloc(MEMORY[0x263F425C0]) initWithName:@"com.apple.homed.hmdutil.encode-remote-same."];
  if (a2)
  {
    id v8 = (id)homedSupportedFeatures;
    if (a3)
    {
      id v9 = [MEMORY[0x263EFF980] arrayWithArray:v8];
      [v9 addObject:&unk_26E471368];
      uint64_t v10 = [v9 copy];

      uint64_t v11 = 4;
      id v8 = (id)v10;
    }
    else
    {
      uint64_t v11 = 4;
    }
  }
  else
  {
    id v8 = &unk_26E473FC0;
    uint64_t v11 = 3;
  }
  id v12 = [[HMDRemoteKeyedArchiver alloc] initForWritingWithRemoteDeviceIsOnSameAccount:1 remoteGateway:0 remoteUserIsAdministrator:1 user:0 dataVersion:v11 supportedFeatures:v8];
  [v12 encodeObject:v5 forKey:*MEMORY[0x263F081D0]];
  [v12 finishEncoding];
  uint64_t v13 = [v12 encodedData];

  return v13;
}

id encodeRootObjectForXPC(void *a1)
{
  return encodeRootObjectForIncomingXPCMessage(a1, 0);
}

id encodeRootObjectForIncomingXPCMessage(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  id v5 = (void *)MEMORY[0x230FBD990]();
  id v6 = [[HMDXPCKeyedArchiver alloc] initForWritingWithMessage:v4];
  [v6 encodeObject:v3 forKey:*MEMORY[0x263F081D0]];
  [v6 finishEncoding];
  id v7 = [v6 encodedData];

  id v8 = (void *)[v7 copy];

  return v8;
}

id encodeRootObjectForSPIClients(void *a1)
{
  uint64_t v1 = (void *)MEMORY[0x263F42568];
  id v2 = a1;
  id v3 = [v1 internalMessageWithName:@"kDummyMessageForEntitledXPC" messagePayload:0];
  id v4 = encodeRootObjectForIncomingXPCMessage(v2, v3);

  return v4;
}

__CFString *locationAsString(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    if (isInternalBuild())
    {
      id v2 = [v1 description];
    }
    else
    {
      id v2 = @"[]";
    }
  }
  else
  {
    id v2 = 0;
  }

  return v2;
}

__CFString *regionAsString(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    if (isInternalBuild())
    {
      objc_msgSend(v1, "hm_description");
      id v2 = (__CFString *)objc_claimAutoreleasedReturnValue();
    }
    else
    {
      id v2 = @"[]";
    }
  }
  else
  {
    id v2 = 0;
  }

  return v2;
}

void createDirectory(void *a1)
{
  v20[1] = *MEMORY[0x263EF8340];
  id v1 = a1;
  uint64_t v19 = *MEMORY[0x263F08078];
  v20[0] = &unk_26E471428;
  id v2 = [NSDictionary dictionaryWithObjects:v20 forKeys:&v19 count:1];
  id v3 = [MEMORY[0x263F08850] defaultManager];
  char v12 = 0;
  if ([v3 fileExistsAtPath:v1 isDirectory:&v12])
  {
    id v4 = 0;
    if (v12)
    {
LABEL_3:
      id v10 = v4;
      [v3 setAttributes:v2 ofItemAtPath:v1 error:&v10];
      id v5 = v10;

      id v4 = v5;
      goto LABEL_8;
    }
  }
  else
  {
    id v11 = 0;
    int v6 = [v3 createDirectoryAtPath:v1 withIntermediateDirectories:1 attributes:v2 error:&v11];
    id v4 = v11;
    char v12 = v6;
    if (v6) {
      goto LABEL_3;
    }
  }
  id v7 = (void *)MEMORY[0x230FBD990]();
  id v8 = HMFGetOSLogHandle();
  if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
  {
    id v9 = HMFGetLogIdentifier();
    *(_DWORD *)long long buf = 138543874;
    uint64_t v14 = v9;
    __int16 v15 = 2112;
    id v16 = v1;
    __int16 v17 = 2112;
    id v18 = v4;
    _os_log_impl(&dword_22F52A000, v8, OS_LOG_TYPE_ERROR, "%{public}@Could not create directory path %@ - error %@", buf, 0x20u);
  }
LABEL_8:
}

id mapHAPPairingErrorToHMError(void *a1)
{
  id v1 = a1;
  id v2 = [v1 domain];
  id v3 = (void *)*MEMORY[0x263F355F0];

  if (v2 == v3)
  {
    uint64_t v11 = [v1 code];
    switch(v11)
    {
      case 18:
        id v4 = (void *)MEMORY[0x263F087E8];
        id v5 = @"Accessory is already paired";
        uint64_t v6 = 13;
        goto LABEL_3;
      case 19:
      case 22:
      case 24:
      case 27:
      case 28:
      case 29:
      case 31:
      case 32:
      case 33:
        break;
      case 20:
        id v4 = (void *)MEMORY[0x263F087E8];
        id v5 = @"Currently associated WiFi network is not compatible with the accessory";
        id v7 = @"Associate with a 2.4 GHz WiFi network and try again";
        uint64_t v6 = 90;
        goto LABEL_4;
      case 21:
        id v4 = (void *)MEMORY[0x263F087E8];
        id v5 = @"This device is not currently associated to a Home WiFi network";
        id v7 = @"Associate to a WiFi network (from Settings -> WiFi) and try again";
        uint64_t v6 = 78;
        goto LABEL_4;
      case 23:
        id v4 = (void *)MEMORY[0x263F087E8];
        id v5 = @"Accessories cannot be added to enterprise network";
        uint64_t v6 = 99;
        goto LABEL_3;
      case 25:
        char v12 = (void *)MEMORY[0x263F087E8];
        uint64_t v13 = @"Accessory did not join the configured network";
        uint64_t v14 = 2016;
        goto LABEL_19;
      case 26:
        id v4 = (void *)MEMORY[0x263F087E8];
        id v5 = @"Failed to join WiFi network";
        id v7 = @"Ensure there is good WiFi signal and try again";
        uint64_t v6 = 102;
        goto LABEL_4;
      case 30:
        char v12 = (void *)MEMORY[0x263F087E8];
        uint64_t v13 = @"No supported Thread router or Thread credentials not found";
        uint64_t v14 = 2010;
        goto LABEL_19;
      case 34:
        char v12 = (void *)MEMORY[0x263F087E8];
        uint64_t v13 = @"Failed to connect";
        uint64_t v14 = 2015;
LABEL_19:
        uint64_t v8 = [v12 hmPrivateErrorWithCode:v14 description:v13 underlyingError:v1];
        goto LABEL_5;
      case 35:
        id v4 = (void *)MEMORY[0x263F087E8];
        id v5 = @"Home hub required";
        id v7 = @"Add a Home hub to Apple Home and try again";
        uint64_t v6 = 91;
        goto LABEL_4;
      case 36:
        id v4 = (void *)MEMORY[0x263F087E8];
        uint64_t v6 = 79;
        id v5 = 0;
        goto LABEL_3;
      default:
        if (v11 != 8) {
          break;
        }
        id v4 = (void *)MEMORY[0x263F087E8];
        id v5 = @"Connection was lost with the accessory";
        id v7 = @"Ensure there is good WiFi signal, reset the accessory and try again";
        uint64_t v6 = 54;
        goto LABEL_4;
    }
  }
  id v4 = (void *)MEMORY[0x263F087E8];
  id v5 = @"Pairing Failed";
  uint64_t v6 = 18;
LABEL_3:
  id v7 = 0;
LABEL_4:
  uint64_t v8 = [v4 hmErrorWithCode:v6 description:v5 reason:0 suggestion:v7 underlyingError:v1];
LABEL_5:
  id v9 = (void *)v8;

  return v9;
}

id determineHomeKitDaemonRootStorePath()
{
  uint64_t v0 = NSSearchPathForDirectoriesInDomains(NSLibraryDirectory, 1uLL, 1);
  uint64_t v1 = [v0 firstObject];
  if (v1)
  {
    id v2 = (void *)v1;
    id v3 = [MEMORY[0x263F42620] productInfo];
    uint64_t v4 = [v3 productPlatform];

    if (v4 == 1) {
      id v5 = @"HomeKit";
    }
    else {
      id v5 = @"homed";
    }
    uint64_t v6 = [v2 stringByAppendingPathComponent:v5];
  }
  else
  {
    uint64_t v6 = 0;
  }

  return v6;
}

void __initializePaths_block_invoke()
{
  v66[1] = *MEMORY[0x263EF8340];
  uint64_t v0 = (void *)MEMORY[0x230FBD990]();
  uint64_t v1 = determineHomeKitDaemonRootStorePath();
  id v2 = (void *)storeDirectoryPath;
  storeDirectoryPath = v1;

  if (storeDirectoryPath)
  {
    uint64_t v3 = [(id)storeDirectoryPath stringByAppendingPathComponent:@"protected-home.config"];
    uint64_t v4 = (void *)configProtectedDataStorePath;
    configProtectedDataStorePath = v3;

    uint64_t v5 = [(id)storeDirectoryPath stringByAppendingPathComponent:@"vendor-id-store"];
    uint64_t v6 = (void *)configVendorIDStorePath;
    configVendorIDStorePath = v5;

    uint64_t v7 = [(id)storeDirectoryPath stringByAppendingPathComponent:@"protected-metadata.config"];
    uint64_t v8 = (void *)configProtectedMetadataPath;
    configProtectedMetadataPath = v7;

    uint64_t v9 = [(id)storeDirectoryPath stringByAppendingPathComponent:@"plain-metadata.config"];
    id v10 = (void *)configPlainMetadataPath;
    configPlainMetadataPath = v9;

    uint64_t v11 = [(id)storeDirectoryPath stringByAppendingPathComponent:@"server-token"];
    char v12 = (void *)serverTokenDataStorePath;
    serverTokenDataStorePath = v11;

    uint64_t v13 = [(id)storeDirectoryPath stringByAppendingPathComponent:@"transaction-journal"];
    uint64_t v14 = (void *)transactionJournalDataStorePath;
    transactionJournalDataStorePath = v13;

    uint64_t v15 = [(id)storeDirectoryPath stringByAppendingPathComponent:@"datasync-journal"];
    id v16 = (void *)idsDataSyncJournalDataStorePath;
    idsDataSyncJournalDataStorePath = v15;

    uint64_t v17 = [(id)storeDirectoryPath stringByAppendingPathComponent:@"blacklisted-bundles"];
    id v18 = (void *)blacklistedBundlesStorePath;
    blacklistedBundlesStorePath = v17;

    uint64_t v19 = [(id)storeDirectoryPath stringByAppendingPathComponent:@"registered-applications"];
    id v20 = (void *)registeredApplicationsDataStorePath;
    registeredApplicationsDataStorePath = v19;

    uint64_t v21 = [(id)storeDirectoryPath stringByAppendingPathComponent:@"bulletin-board"];
    unsigned int v22 = (void *)bulletinBoardDataStorePath;
    bulletinBoardDataStorePath = v21;

    uint64_t v23 = [(id)storeDirectoryPath stringByAppendingPathComponent:@"cloud-cache"];
    id v24 = (void *)cloudCachePath;
    cloudCachePath = v23;

    uint64_t v25 = [(id)storeDirectoryPath stringByAppendingPathComponent:@"datastore.sqlite"];
    id v26 = (void *)sqlitePath;
    sqlitePath = v25;

    uint64_t v27 = [(id)storeDirectoryPath stringByAppendingPathComponent:@"eventstore-beta.sqlite"];
    uint64_t v28 = (void *)eventStorePath;
    eventStorePath = v27;

    uint64_t v29 = [(id)storeDirectoryPath stringByAppendingString:@"/BLECache"];
    id v30 = (void *)bleAccessoryCachePath;
    bleAccessoryCachePath = v29;

    uint64_t v31 = [(id)storeDirectoryPath stringByAppendingPathComponent:@"com.apple.relaunch.assertion.plist"];
    uint64_t v32 = (void *)launchdAssertionPlistPath;
    launchdAssertionPlistPath = v31;

    uint64_t v33 = [(id)storeDirectoryPath stringByAppendingPathComponent:@"metricsCounters"];
    uint64_t v34 = (void *)metricsCountersPersistentStorePath;
    metricsCountersPersistentStorePath = v33;

    uint64_t v35 = [(id)storeDirectoryPath stringByAppendingPathComponent:@"eventcounters-groupstore"];
    id v36 = (void *)eventCountersDataStorePath;
    eventCountersDataStorePath = v35;

    uint64_t v37 = [(id)storeDirectoryPath stringByAppendingPathComponent:@"eventcounters-datastore"];
    id v38 = (void *)eventCountersDataStoreLegacyPath;
    eventCountersDataStoreLegacyPath = v37;

    uint64_t v39 = [(id)storeDirectoryPath stringByAppendingPathComponent:@"eventflags-datastore"];
    long long v40 = (void *)eventFlagsDataStorePath;
    eventFlagsDataStorePath = v39;

    uint64_t v41 = [(id)storeDirectoryPath stringByAppendingPathComponent:@"core.sql"];
    long long v42 = (void *)coreDataDataStorePath;
    coreDataDataStorePath = v41;

    uint64_t v43 = [(id)storeDirectoryPath stringByAppendingPathComponent:@"/HH1ToHH2PerDeviceMigration"];
    long long v44 = (void *)hh1ToHH2PerDeviceMigrationDirectoryPath;
    hh1ToHH2PerDeviceMigrationDirectoryPath = v43;

    uint64_t v45 = [(id)storeDirectoryPath stringByAppendingPathComponent:@"/hh1TestArchives"];
    long long v46 = (void *)hh1TestArchivesDirectoryPath;
    hh1TestArchivesDirectoryPath = v45;

    long long v47 = HMDCreateHomeKitDaemonCacheDirectory();
    uint64_t v48 = [v47 stringByAppendingPathComponent:@"hh2MigratorRecordStore.plist"];
    long long v49 = (void *)hh2MigratorRecordStorePath;
    hh2MigratorRecordStorePath = v48;

    uint64_t v50 = [v47 stringByAppendingPathComponent:@"hh2MigrationFailureRecordStore.plist"];
    long long v51 = (void *)hh2MigrationFailureRecordStorePath;
    hh2MigrationFailureRecordStorePath = v50;

    uint64_t v52 = [v47 stringByAppendingPathComponent:@"hh2MigrationLogEventStore.plist"];
    long long v53 = (void *)hh2MigrationLogEventPath;
    hh2MigrationLogEventPath = v52;

    uint64_t v65 = *MEMORY[0x263F08078];
    v66[0] = &unk_26E471428;
    uint64_t v54 = [NSDictionary dictionaryWithObjects:v66 forKeys:&v65 count:1];
    v64[0] = storeDirectoryPath;
    v64[1] = bleAccessoryCachePath;
    v64[2] = hh1ToHH2PerDeviceMigrationDirectoryPath;
    double v55 = [MEMORY[0x263EFF8C0] arrayWithObjects:v64 count:3];
    v62[0] = MEMORY[0x263EF8330];
    v62[1] = 3221225472;
    v62[2] = ___initializeProtectedStorePaths_block_invoke;
    v62[3] = &unk_264A1DDD8;
    id v63 = v54;
    id v56 = v54;
    objc_msgSend(v55, "hmf_enumerateWithAutoreleasePoolUsingBlock:", v62);
  }
  id v57 = [MEMORY[0x263F086E0] bundleWithIdentifier:@"com.apple.HomeKitDaemon"];
  uint64_t v58 = [v57 pathForResource:@"plain-metadata-full.config" ofType:0];
  long long v59 = (void *)builtinConfigMetadataDictionaryPath;
  builtinConfigMetadataDictionaryPath = v58;

  if (!builtinConfigMetadataDictionaryPath)
  {
    uint64_t v60 = [v57 pathForResource:@"plain-metadata.config" ofType:0];
    long long v61 = (void *)builtinConfigMetadataDictionaryPath;
    builtinConfigMetadataDictionaryPath = v60;
  }
}

id HMDCreateHomeKitDaemonCacheDirectory()
{
  uint64_t v51 = *MEMORY[0x263EF8340];
  uint64_t v0 = HMCacheSubdirectoryWithRelativePath();
  unint64_t v1 = 0x263F08000uLL;
  id v2 = [MEMORY[0x263F08850] defaultManager];
  id v43 = 0;
  char v3 = [v2 createDirectoryAtPath:v0 withIntermediateDirectories:1 attributes:0 error:&v43];
  id v4 = v43;

  if (v3)
  {
    id v5 = v0;
  }
  else
  {
    uint64_t v6 = (void *)MEMORY[0x230FBD990]();
    uint64_t v7 = HMFGetOSLogHandle();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      uint64_t v8 = HMFGetLogIdentifier();
      uid_t v9 = getuid();
      *(_DWORD *)long long buf = 138544130;
      uint64_t v45 = v8;
      __int16 v46 = 1024;
      *(_DWORD *)long long v47 = v9;
      *(_WORD *)&v47[4] = 2114;
      *(void *)&v47[6] = v0;
      *(_WORD *)&v47[14] = 2114;
      *(void *)&v47[16] = v4;
      _os_log_impl(&dword_22F52A000, v7, OS_LOG_TYPE_ERROR, "%{public}@Failed to create HomeKit daemon cache directory for user %d at %{public}@: %{public}@", buf, 0x26u);
    }
    id v29 = v4;

    long long v41 = 0u;
    long long v42 = 0u;
    long long v39 = 0u;
    long long v40 = 0u;
    id v30 = v0;
    id obj = [v0 pathComponents];
    uint64_t v36 = [obj countByEnumeratingWithState:&v39 objects:v50 count:16];
    if (v36)
    {
      uint64_t v10 = *(void *)v40;
      uint64_t v35 = *MEMORY[0x263F08078];
      uint64_t v34 = *MEMORY[0x263F08050];
      uint64_t v33 = *MEMORY[0x263F08018];
      uint64_t v11 = &stru_26E2EB898;
      uint64_t v31 = *(void *)v40;
      do
      {
        uint64_t v12 = 0;
        uint64_t v13 = v11;
        do
        {
          if (*(void *)v40 != v10) {
            objc_enumerationMutation(obj);
          }
          -[__CFString stringByAppendingPathComponent:](v13, "stringByAppendingPathComponent:", *(void *)(*((void *)&v39 + 1) + 8 * v12), v29);
          uint64_t v11 = (__CFString *)objc_claimAutoreleasedReturnValue();

          uint64_t v14 = [*(id *)(v1 + 2128) defaultManager];
          id v38 = 0;
          uint64_t v15 = [v14 attributesOfItemAtPath:v11 error:&v38];
          id v16 = v38;

          if (v15)
          {
            id v37 = v16;
            uint64_t v17 = [v15 objectForKeyedSubscript:v35];
            id v18 = [v15 objectForKeyedSubscript:v34];
            uint64_t v19 = [v15 objectForKeyedSubscript:v33];
            id v20 = (void *)MEMORY[0x230FBD990]();
            uint64_t v21 = HMFGetOSLogHandle();
            if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR))
            {
              HMFGetLogIdentifier();
              uint64_t v23 = v22 = v1;
              int v24 = [v17 shortValue];
              *(_DWORD *)long long buf = 138544386;
              uint64_t v45 = v23;
              __int16 v46 = 2112;
              *(void *)long long v47 = v11;
              *(_WORD *)&v47[8] = 1024;
              *(_DWORD *)&v47[10] = v24;
              *(_WORD *)&v47[14] = 2112;
              *(void *)&v47[16] = v18;
              __int16 v48 = 2112;
              long long v49 = v19;
              _os_log_impl(&dword_22F52A000, v21, OS_LOG_TYPE_ERROR, "%{public}@Path: %@, permissions: %o, owner uid: %@, owner gid: %@", buf, 0x30u);

              unint64_t v1 = v22;
              uint64_t v10 = v31;
            }

            id v16 = v37;
          }
          else
          {
            uint64_t v25 = (void *)MEMORY[0x230FBD990]();
            id v26 = HMFGetOSLogHandle();
            if (os_log_type_enabled(v26, OS_LOG_TYPE_ERROR))
            {
              uint64_t v27 = HMFGetLogIdentifier();
              *(_DWORD *)long long buf = 138543874;
              uint64_t v45 = v27;
              __int16 v46 = 2112;
              *(void *)long long v47 = v11;
              *(_WORD *)&v47[8] = 2112;
              *(void *)&v47[10] = v16;
              _os_log_impl(&dword_22F52A000, v26, OS_LOG_TYPE_ERROR, "%{public}@Failed to get attributes for path %@: %@", buf, 0x20u);
            }
          }

          ++v12;
          uint64_t v13 = v11;
        }
        while (v36 != v12);
        uint64_t v36 = [obj countByEnumeratingWithState:&v39 objects:v50 count:16];
      }
      while (v36);
    }
    else
    {
      uint64_t v11 = &stru_26E2EB898;
    }

    id v5 = 0;
    id v4 = v29;
    uint64_t v0 = v30;
  }

  return v5;
}

void ___initializeProtectedStorePaths_block_invoke(uint64_t a1, void *a2)
{
  uint64_t v20 = *MEMORY[0x263EF8340];
  id v3 = a2;
  id v4 = *(void **)(a1 + 32);
  id v5 = v3;
  id v6 = v4;
  uint64_t v7 = [MEMORY[0x263F08850] defaultManager];
  if ([v7 fileExistsAtPath:v5 isDirectory:0])
  {
    id v13 = 0;
    [v7 setAttributes:v6 ofItemAtPath:v5 error:&v13];
    id v8 = v13;
    uid_t v9 = (void *)MEMORY[0x230FBD990]();
    uint64_t v10 = HMFGetOSLogHandle();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
    {
      uint64_t v11 = HMFGetLogIdentifier();
      *(_DWORD *)long long buf = 138543874;
      uint64_t v15 = v11;
      __int16 v16 = 2112;
      id v17 = v5;
      __int16 v18 = 2112;
      id v19 = v8;
      uint64_t v12 = "%{public}@Setting attributes to directory path %@ resulted into error : %@";
LABEL_6:
      _os_log_impl(&dword_22F52A000, v10, OS_LOG_TYPE_INFO, v12, buf, 0x20u);
    }
  }
  else
  {
    id v13 = 0;
    [v7 createDirectoryAtPath:v5 withIntermediateDirectories:1 attributes:v6 error:&v13];
    id v8 = v13;
    uid_t v9 = (void *)MEMORY[0x230FBD990]();
    uint64_t v10 = HMFGetOSLogHandle();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
    {
      uint64_t v11 = HMFGetLogIdentifier();
      *(_DWORD *)long long buf = 138543874;
      uint64_t v15 = v11;
      __int16 v16 = 2112;
      id v17 = v5;
      __int16 v18 = 2112;
      id v19 = v8;
      uint64_t v12 = "%{public}@Create store directory path %@ finished with error %@";
      goto LABEL_6;
    }
  }
}

void __initializeCapabilitiesAndTimeouts_block_invoke(uint64_t a1)
{
  uint64_t v181 = *MEMORY[0x263EF8340];
  id v2 = (void *)MEMORY[0x230FBD990]();
  id v3 = *(id *)(a1 + 32);
  id v4 = [MEMORY[0x263F42620] productInfo];
  id v5 = (void *)MEMORY[0x230FBD990]();
  id v6 = HMFGetOSLogHandle();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v7 = HMFGetLogIdentifier();
    *(_DWORD *)long long buf = 138543618;
    *(void *)&uint8_t buf[4] = v7;
    *(_WORD *)&buf[12] = 2112;
    *(void *)&buf[14] = v4;
    _os_log_impl(&dword_22F52A000, v6, OS_LOG_TYPE_DEFAULT, "%{public}@Initializing with product info: %@", buf, 0x16u);
  }

  uint64_t v8 = MGCopyAnswer();
  if (v8)
  {
    uid_t v9 = (const void *)v8;
    uint64_t v10 = [NSString stringWithString:v8];
    uint64_t v11 = (void *)uniqueDeviceId;
    uniqueDeviceId = v10;

    CFRelease(v9);
  }
  BOOL v12 = +[HMDDeviceCapabilities isAppleMediaAccessory];
  id v13 = @"00000000-0000-0000-0000-C2EE6102B308";
  if (!v12) {
    id v13 = @"20BC605A-C33B-4D36-B885-C2EE6102B308";
  }
  uint64_t v14 = v13;
  if ([(__CFString *)v14 isEqualToString:@"20BC605A-C33B-4D36-B885-C2EE6102B308"])
  {
    uint64_t v15 = @"NonMediaDevice/";
  }
  else if ([(__CFString *)v14 isEqualToString:@"00000000-0000-0000-0000-C2EE6102B308"])
  {
    uint64_t v15 = @"UnknownMediaDevice/";
  }
  else
  {
    uint64_t v15 = &stru_26E2EB898;
  }
  __int16 v16 = (void *)MEMORY[0x230FBD990]();
  id v17 = HMFGetOSLogHandle();
  if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
  {
    __int16 v18 = HMFGetLogIdentifier();
    *(_DWORD *)long long buf = 138543874;
    *(void *)&uint8_t buf[4] = v18;
    *(_WORD *)&buf[12] = 2112;
    *(void *)&buf[14] = v15;
    *(_WORD *)&buf[22] = 2112;
    char v180 = v14;
    _os_log_impl(&dword_22F52A000, v17, OS_LOG_TYPE_DEFAULT, "%{public}@Setting media remote ID: %@%@", buf, 0x20u);
  }
  id v19 = (void *)_mediaRouteIdentifier;
  _mediaRouteIdentifier = (uint64_t)v14;

  uint64_t v20 = +[HMDHomeKitVersion currentVersion];
  uint64_t v21 = objc_msgSend(NSString, "stringWithFormat:", @"%tu.%tu", objc_msgSend(v20, "majorVersion"), objc_msgSend(v20, "minorVersion"));
  unint64_t v22 = NSNumber;
  [v21 doubleValue];
  uint64_t v23 = objc_msgSend(v22, "numberWithDouble:");
  int v24 = (void *)homedVersion;
  homedVersion = v23;

  uint64_t v25 = [[HMDHomeKitVersion alloc] initWithVersionString:@"3.0"];
  id v26 = (void *)minimumSupportedResidentHomeKitVersion;
  minimumSupportedResidentHomeKitVersion = (uint64_t)v25;

  uint64_t v27 = (void *)homedSupportedFeatures;
  homedSupportedFeatures = (uint64_t)&unk_26E473FD8;

  if (isiOSDevice() || isTVOSDevice())
  {
    uint64_t v28 = [(id)homedSupportedFeatures arrayByAddingObjectsFromArray:&unk_26E473FF0];
    id v29 = (void *)homedSupportedFeatures;
    homedSupportedFeatures = v28;
  }
  id v30 = +[HMDDeviceCapabilities deviceCapabilities];
  int v31 = [v30 supportsFaceClassification];

  if (v31)
  {
    uint64_t v32 = [(id)homedSupportedFeatures arrayByAddingObject:&unk_26E4714B8];
    uint64_t v33 = (void *)homedSupportedFeatures;
    homedSupportedFeatures = v32;
  }
  uint64_t v34 = objc_msgSend(MEMORY[0x263EFF8C0], "arrayWithObjects:", @"NSDebugDescription", @"NSLocalizedDescription", @"RequestUUID", @"ServerErrorDescription", @"CKErrorDescription", 0);
  uint64_t v35 = (void *)ckErrorUserInfoKeys;
  ckErrorUserInfoKeys = v34;

  LODWORD(v174) = 0;
  CFDictionaryGetTypeID();
  uint64_t v36 = (void *)CFPrefs_CopyTypedValue();
  if (v36)
  {
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      id v37 = [v36 objectForKey:@"kHomesDataBlobKey"];
      id v38 = [v36 objectForKey:@"kDataSignatureKey"];
      if (v37)
      {
        objc_opt_class();
        if (objc_opt_isKindOfClass())
        {
          if (v38)
          {
            objc_opt_class();
            if (objc_opt_isKindOfClass())
            {
              v173 = v2;
              long long v39 = (void *)[objc_alloc(MEMORY[0x263EFF8F8]) initWithBase64EncodedString:@"KQveymsUTHc1aqyc73tl3VuYb4Ls0j1+RnvdDxNymjU=" options:0];
              id v171 = v37;
              [v171 bytes];
              [v171 length];
              [v38 bytes];
              id v40 = v39;
              [v40 bytes];
              if (!cced25519_verify_compat())
              {
                char v172 = (void *)MEMORY[0x263F08928];
                long long v41 = (void *)MEMORY[0x263EFFA08];
                *(void *)long long buf = objc_opt_class();
                *(void *)&buf[8] = objc_opt_class();
                *(void *)&buf[16] = objc_opt_class();
                long long v42 = [MEMORY[0x263EFF8C0] arrayWithObjects:buf count:3];
                id v43 = [v41 setWithArray:v42];
                long long v44 = [v172 deserializeObjectWithData:v171 allowedClasses:v43];

                if (v44)
                {
                  objc_opt_class();
                  if (objc_opt_isKindOfClass())
                  {
                    uint64_t v45 = [v44 objectForKey:@"kHomeDataBlobKey"];
                    __int16 v46 = [v44 objectForKey:@"kControllerKeyPairKey"];
                    uint64_t v47 = [v44 objectForKey:@"kControllerPairingNameKey"];
                    __int16 v48 = (void *)v47;
                    if (v45 && v46 && v47)
                    {
                      long long v49 = [MEMORY[0x263F35AD0] systemStore];
                      [v49 removeControllerKeyPairWithError:0];
                      if ([v49 saveKeyPair:v46 username:v48 syncable:0 error:0])
                      {
                        id v50 = (id)configProtectedDataStorePath;
                        id v51 = +[HMDPersistentStore writeData:v45 toStorePath:v50 dataLabel:@"home data"];

                        retailDemoDataEncoded = 1;
                      }
                    }
                  }
                }
              }
              id v2 = v173;
            }
          }
        }
      }
    }
  }

  if ((isInternalBuild() & 1) != 0
    || ([MEMORY[0x263F42620] productInfo],
        uint64_t v52 = objc_claimAutoreleasedReturnValue(),
        uint64_t v53 = [v52 productVariant],
        v52,
        v53 == 2))
  {
    *(_DWORD *)long long buf = 0;
    uint64_t Int64 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf) {
      skipAuthPromptDialog = Int64 != 0;
    }
    *(_DWORD *)long long buf = 0;
    uint64_t v55 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf) {
      showAuthDialog = v55 != 0;
    }
    *(_DWORD *)long long buf = 0;
    uint64_t v56 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf) {
      disableCloudDataSynCC_SHA256_CTX c = v56 != 0;
    }
    *(_DWORD *)long long buf = 0;
    uint64_t v57 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf) {
      disableLegacyCloudDataSynCC_SHA256_CTX c = v57 != 0;
    }
    *(_DWORD *)long long buf = 0;
    uint64_t v58 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf) {
      enableWakeNotifications = v58 != 0;
    }
    *(_DWORD *)long long buf = 0;
    uint64_t v59 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf) {
      disableWACBrowser = v59 != 0;
    }
    *(_DWORD *)long long buf = 0;
    uint64_t v60 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf) {
      delayBatchedReadWrite = v60 != 0;
    }
    *(_DWORD *)long long buf = 0;
    uint64_t v61 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf) {
      enableNetworkLogging = v61 != 0;
    }
    *(_DWORD *)long long buf = 0;
    uint64_t v62 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf) {
      enableRetailDemoSetup = v62 != 0;
    }
    int v178 = 0;
    CFDictionaryGetTypeID();
    id v63 = (void *)CFPrefs_CopyTypedValue();
    long long v64 = [MEMORY[0x263EFF9A0] dictionary];
    long long v174 = 0u;
    long long v175 = 0u;
    long long v176 = 0u;
    long long v177 = 0u;
    id v65 = v63;
    uint64_t v66 = [v65 countByEnumeratingWithState:&v174 objects:buf count:16];
    if (v66)
    {
      uint64_t v67 = v66;
      uint64_t v68 = *(void *)v175;
      do
      {
        for (uint64_t i = 0; i != v67; ++i)
        {
          if (*(void *)v175 != v68) {
            objc_enumerationMutation(v65);
          }
          uint64_t v70 = *(void *)(*((void *)&v174 + 1) + 8 * i);
          long long v71 = (void *)[objc_alloc(MEMORY[0x263F08C38]) initWithUUIDString:v70];
          id v72 = objc_alloc(MEMORY[0x263F08C38]);
          long long v73 = [v65 objectForKey:v70];
          long long v74 = (void *)[v72 initWithUUIDString:v73];

          [v64 setObject:v74 forKey:v71];
        }
        uint64_t v67 = [v65 countByEnumeratingWithState:&v174 objects:buf count:16];
      }
      while (v67);
    }

    long long v75 = (void *)preferredPrimaryForHome;
    preferredPrimaryForHome = (uint64_t)v64;
    id v76 = v64;

    CFStringGetTypeID();
    uint64_t v77 = CFPrefs_CopyTypedValue();
    if (v77)
    {
      long long v78 = (const void *)v77;
      uint64_t v79 = CKContainerEnvironmentFromString();
      id v80 = (void *)MEMORY[0x230FBD990]();
      HMFGetOSLogHandle();
      id v81 = (id)objc_claimAutoreleasedReturnValue();
      v82 = v81;
      if (v79)
      {
        if (os_log_type_enabled(v81, OS_LOG_TYPE_DEFAULT))
        {
          HMFGetLogIdentifier();
          id v83 = (id)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)long long buf = 138543618;
          *(void *)&uint8_t buf[4] = v83;
          *(_WORD *)&buf[12] = 2112;
          *(void *)&buf[14] = v78;
          _os_log_impl(&dword_22F52A000, v82, OS_LOG_TYPE_DEFAULT, "%{public}@Overriding CloudKit container environment to %@", buf, 0x16u);
        }
        cloudKitContainerEnvironment = v79;
      }
      else
      {
        if (os_log_type_enabled(v81, OS_LOG_TYPE_ERROR))
        {
          HMFGetLogIdentifier();
          id v84 = (id)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)long long buf = 138543618;
          *(void *)&uint8_t buf[4] = v84;
          *(_WORD *)&buf[12] = 2112;
          *(void *)&buf[14] = v78;
          _os_log_impl(&dword_22F52A000, v82, OS_LOG_TYPE_ERROR, "%{public}@Invalid CloudKit environment %@", buf, 0x16u);
        }
      }
      CFRelease(v78);
    }
    *(_DWORD *)long long buf = 0;
    uint64_t v85 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf) {
      cloudPushBatchLimit = v85;
    }
    *(_DWORD *)long long buf = 0;
    uint64_t v86 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf) {
      maxCloudOperationRetries = v86;
    }
    CFPrefs_GetDouble();
    minimumTimerRecurrence = v87;
    *(_DWORD *)long long buf = 0;
    uint64_t v88 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf) {
      cloudUploadTimerInterid val = v88;
    }
    *(_DWORD *)long long buf = 0;
    uint64_t v89 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf) {
      cloudUploadMaximumTimerInterid val = v89;
    }
    *(_DWORD *)long long buf = 0;
    uint64_t v90 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf) {
      cloudUploadTimerIntervalExponentialFactor = v90;
    }
    *(_DWORD *)long long buf = 0;
    uint64_t v91 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf) {
      cloudZoneUploadTimerInitialInterid val = v91;
    }
    *(_DWORD *)long long buf = 0;
    uint64_t v92 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf) {
      cloudZoneUploadTimerInterid val = v92;
    }
    *(_DWORD *)long long buf = 0;
    CFPrefs_GetInt64();
    *(_DWORD *)long long buf = 0;
    uint64_t v93 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf) {
      userPushCacheTimeInterid val = v93;
    }
    *(_DWORD *)long long buf = 0;
    uint64_t v94 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf) {
      aggressiveControllerKeyPollInterid val = v94;
    }
    *(_DWORD *)long long buf = 0;
    uint64_t v95 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf) {
      watchdogControllerKeyPollTimeout = v95;
    }
    *(_DWORD *)long long buf = 0;
    uint64_t v96 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf) {
      controllerKeyPollInterid val = v96;
    }
    *(_DWORD *)long long buf = 0;
    uint64_t v97 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf) {
      keychainPopupTimerInterid val = v97;
    }
    *(_DWORD *)long long buf = 0;
    uint64_t v98 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf) {
      checkRemoteAccessTimeout = v98;
    }
    *(_DWORD *)long long buf = 0;
    uint64_t v99 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf) {
      hrsCommitTimeoutNanoseconds = 1000000000 * v99;
    }
    *(_DWORD *)long long buf = 0;
    uint64_t v100 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf) {
      hrsIdleClientTimeoutNanoseconds = 1000000000 * v100;
    }
    *(_DWORD *)long long buf = 0;
    uint64_t v101 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf) {
      hrsIdleServertTimeoutNanoseconds = 1000000000 * v101;
    }
    *(_DWORD *)long long buf = 0;
    uint64_t v102 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf) {
      hrsSendInternalRequestTimeoutNanoseconds = 1000000000 * v102;
    }
    *(_DWORD *)long long buf = 0;
    uint64_t v103 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf) {
      hrsSendInternalRequestToWatchTimeoutNanoseconds = 1000000000 * v103;
    }
    *(_DWORD *)long long buf = 0;
    uint64_t v104 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf) {
      hrsSendUserRequestTimeoutNanoseconds = 1000000000 * v104;
    }
    *(_DWORD *)long long buf = 0;
    uint64_t v105 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf) {
      btleReachabilityTimerNanoseconds = 1000000000 * v105;
    }
    *(_DWORD *)long long buf = 0;
    uint64_t v106 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf) {
      btleReachabilityLeewayNanoseconds = 1000000000 * v106;
    }
    *(_DWORD *)long long buf = 0;
    uint64_t v107 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf) {
      btleReachabilityProbeReduceFactor = v107;
    }
    *(_DWORD *)long long buf = 0;
    uint64_t v108 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf) {
      remotePendingResponseTimerNanoseconds = 1000000000 * v108;
    }
    *(_DWORD *)long long buf = 0;
    uint64_t v109 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf) {
      remotePendingResponseLeewayNanoseconds = 1000000000 * v109;
    }
    *(_DWORD *)long long buf = 0;
    uint64_t v110 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf) {
      remotePendingResponseDecayScale = v110;
    }
    *(_DWORD *)long long buf = 0;
    CFPrefs_GetDouble();
    if (!*(_DWORD *)buf) {
      accessoryConnectivityWaitPeriod = v111;
    }
    *(_DWORD *)long long buf = 0;
    uint64_t v112 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf) {
      cloudDataSyncInProgressWaitPeriod = v112;
    }
    *(_DWORD *)long long buf = 0;
    uint64_t v113 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf) {
      controllerKeyNotLandingWaitPeriod = v113;
    }
    *(_DWORD *)long long buf = 0;
    uint64_t v114 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf) {
      controllerKeyNotLandingShortCircuitWaitPeriod = v114;
    }
    if (isHomePod()) {
      assistantClientReadWriteTimeoutSeconds = 0x4022000000000000;
    }
    *(_DWORD *)long long buf = 0;
    CFPrefs_GetDouble();
    if (!*(_DWORD *)buf) {
      assistantClientReadWriteTimeoutSeconds = v115;
    }
    *(_DWORD *)long long buf = 0;
    CFPrefs_GetDouble();
    if (!*(_DWORD *)buf) {
      assistantClientActionSetTimeoutSeconds = v116;
    }
    *(_DWORD *)long long buf = 0;
    CFPrefs_GetDouble();
    if (!*(_DWORD *)buf) {
      disableNotificationsDeferPeriod = v117;
    }
    *(_DWORD *)long long buf = 0;
    CFPrefs_GetDouble();
    if (!*(_DWORD *)buf) {
      coalesceNotificationsPeriod = v118;
    }
    *(_DWORD *)long long buf = 0;
    CFPrefs_GetDouble();
    if (!*(_DWORD *)buf) {
      pendingResponseTickPeriod = v119;
    }
    *(_DWORD *)long long buf = 0;
    CFPrefs_GetDouble();
    if (!*(_DWORD *)buf) {
      pendingResponseMaxPeriod = v120;
    }
    *(_DWORD *)long long buf = 0;
    CFPrefs_GetDouble();
    if (!*(_DWORD *)buf) {
      delayNotificationsPeriod = v121;
    }
    *(_DWORD *)long long buf = 0;
    CFPrefs_GetDouble();
    if (!*(_DWORD *)buf) {
      remoteReachabilityNotificationsDeferPeriod = v122;
    }
    *(_DWORD *)long long buf = 0;
    CFPrefs_GetDouble();
    if (!*(_DWORD *)buf) {
      remoteReachabilityDeregistrationDeferPeriod = v123;
    }
    *(_DWORD *)long long buf = 0;
    uint64_t v124 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf) {
      deviceConnectionKeepAliveTimerPeriod = v124;
    }
    *(_DWORD *)long long buf = 0;
    uint64_t v125 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf) {
      deviceConnectionKeepAliveResponseTimeoutPeriod = v125;
    }
    *(_DWORD *)long long buf = 0;
    CFPrefs_GetDouble();
    if (!*(_DWORD *)buf) {
      pairingInterruptionGracePeriod = v126;
    }
    *(_DWORD *)long long buf = 0;
    CFPrefs_GetDouble();
    if (!*(_DWORD *)buf) {
      pairingReconfirmWaitPeriod = v127;
    }
    *(_DWORD *)long long buf = 0;
    CFPrefs_GetDouble();
    if (!*(_DWORD *)buf) {
      vendorInfoFetchPeriod = v128;
    }
    *(_DWORD *)long long buf = 0;
    CFPrefs_GetDouble();
    if (!*(_DWORD *)buf) {
      attestationInfoFetchPeriod = v129;
    }
    *(_DWORD *)long long buf = 0;
    CFPrefs_GetDouble();
    if (!*(_DWORD *)buf) {
      keyTransferBroadcastMaximumDelay = v130;
    }
    *(_DWORD *)long long buf = 0;
    CFPrefs_GetDouble();
    if (!*(_DWORD *)buf) {
      mediaBrowserProcessingInterid val = v131;
    }
    *(_DWORD *)long long buf = 0;
    CFPrefs_GetDouble();
    if (!*(_DWORD *)buf) {
      disableReprivsionBrowsingPeriodInMinutes = v132;
    }
    *(_DWORD *)long long buf = 0;
    CFPrefs_GetDouble();
    if (!*(_DWORD *)buf) {
      authServerRetryTimeIntervalInSeconds = v133;
    }
    *(_DWORD *)long long buf = 0;
    uint64_t v134 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf) {
      authServerRetryCount = v134;
    }
    _overrideNumberArray((void **)&supportedResolutions);
    _overrideNumberArray((void **)&supportedVideoCodecs);
    _overrideNumberArray((void **)&supportedAudioCodecs);
    _overrideNumberArray((void **)&supportedSRTPAuths);
    *(_DWORD *)long long buf = 0;
    uint64_t v135 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf) {
      videoAttributesUpgradeDebouceTimer = v135;
    }
    *(_DWORD *)long long buf = 0;
    uint64_t v136 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf) {
      videoAttributesDowngradeDebouceTimer = v136;
    }
    *(_DWORD *)long long buf = 0;
    uint64_t v137 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf) {
      cameraStreamNetworkAdaptation = v137 != 0;
    }
    _overrideNumber((id *)&rtpPtime);
    _overrideNumber((id *)&snapshotResolution);
    *(_DWORD *)long long buf = 0;
    uint64_t v138 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf) {
      maximumSimultaneousRemoteStreams = v138;
    }
    *(_DWORD *)long long buf = 0;
    uint64_t v139 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf) {
      maximumSecureRemoteStreams = v139;
    }
    *(_DWORD *)long long buf = 0;
    CFPrefs_GetDouble();
    if (!*(_DWORD *)buf) {
      secureSessionMessageTimeout = v140;
    }
    *(_DWORD *)long long buf = 0;
    CFPrefs_GetDouble();
    if (!*(_DWORD *)buf) {
      snapshotCacheValidPeriod = v141;
    }
    *(_DWORD *)long long buf = 0;
    uint64_t v142 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf) {
      maximumHomes = v142;
    }
    *(_DWORD *)long long buf = 0;
    uint64_t v143 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf) {
      maximumAccessoriesPerHome = v143;
    }
    *(_DWORD *)long long buf = 0;
    uint64_t v144 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf) {
      maximumRoomsPerHome = v144;
    }
    *(_DWORD *)long long buf = 0;
    uint64_t v145 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf) {
      maximumZonesPerHome = v145;
    }
    *(_DWORD *)long long buf = 0;
    uint64_t v146 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf) {
      maximumTriggersPerHome = v146;
    }
    *(_DWORD *)long long buf = 0;
    uint64_t v147 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf) {
      maximumActionSetsPerHome = v147;
    }
    *(_DWORD *)long long buf = 0;
    uint64_t v148 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf) {
      maximumServiceGroupsPerHome = v148;
    }
    *(_DWORD *)long long buf = 0;
    uint64_t v149 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf) {
      maximumUsersPerHome = v149;
    }
    *(_DWORD *)long long buf = 0;
    uint64_t v150 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf) {
      maximumRoomsPerZone = v150;
    }
    *(_DWORD *)long long buf = 0;
    uint64_t v151 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf) {
      maximumActionsPerActionSet = v151;
    }
    *(_DWORD *)long long buf = 0;
    uint64_t v152 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf) {
      maximumServicesPerServiceGroup = v152;
    }
    *(_DWORD *)long long buf = 0;
    uint64_t v153 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf) {
      maximumAccessoriesPerBridge = v153;
    }
    *(_DWORD *)long long buf = 0;
    uint64_t v154 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf) {
      maximumServicesPerAccessory = v154;
    }
    *(_DWORD *)long long buf = 0;
    uint64_t v155 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf) {
      maximumCharacteristicsPerService = v155;
    }
    *(_DWORD *)long long buf = 0;
    uint64_t v156 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf) {
      maximumDataSyncFragmentSize = v156;
    }
    *(_DWORD *)long long buf = 0;
    uint64_t v157 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf) {
      bulletinSecureTriggerTimeoutInSeconds = v157;
    }
    *(_DWORD *)long long buf = 0;
    uint64_t v158 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf) {
      secureTriggerUserResponseTimeoutInSeconds = v158;
    }
    *(_DWORD *)long long buf = 0;
    uint64_t v159 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf) {
      broadcastKeyRefreshTimeInSeconds = v159;
    }
    *(_DWORD *)long long buf = 0;
    uint64_t v160 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf) {
      bluetoothGSNMaxValue = v160;
    }
    id v161 = [MEMORY[0x263EFFA40] standardUserDefaults];
    allowAnonymousServerConnections = [v161 BOOLForKey:@"allowAnonymousServerConnections"];

    _overrideNSString((id *)&vendorInfoDatabaseServerURLOverride);
    _overrideNSString((id *)&appleConfigurationServer);
    _overrideNSString((id *)&homeKitConfigurationPath);
    *(_DWORD *)long long buf = 0;
    CFPrefs_GetDouble();
    if (!*(_DWORD *)buf) {
      remoteDeviceMonitorHealthTimerTimeInterid val = v162;
    }
    *(_DWORD *)long long buf = 0;
    CFPrefs_GetDouble();
    if (!*(_DWORD *)buf) {
      remoteDeviceMonitorRetryTimerMinimumTimeInterid val = v163;
    }
    *(_DWORD *)long long buf = 0;
    CFPrefs_GetDouble();
    if (!*(_DWORD *)buf) {
      remoteDeviceMonitorRetryTimerMaximumTimeInterid val = v164;
    }
    *(_DWORD *)long long buf = 0;
    uint64_t v165 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf) {
      remoteDeviceMonitorRetryTimerFactor = v165;
    }
    *(_DWORD *)long long buf = 0;
    uint64_t v166 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf) {
      presenceFeedRefreshInMinutes = v166;
    }
    *(_DWORD *)long long buf = 0;
    uint64_t v167 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf) {
      presenceMonitorAuditInMinutes = v167;
    }
    *(_DWORD *)long long buf = 0;
    uint64_t v168 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf) {
      presenceMonitorRefreshGracePeriodInMinutes = v168;
    }
    *(_DWORD *)long long buf = 0;
    uint64_t v169 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf) {
      startCharacteristicsMonitorWaitPeriod = v169;
    }
    *(_DWORD *)long long buf = 0;
    uint64_t v170 = CFPrefs_GetInt64();
    if (!*(_DWORD *)buf) {
      requestHomeDataSyncRetryPeriodInMinutes = v170;
    }
  }
}

BOOL isiOSDevice()
{
  uint64_t v0 = [MEMORY[0x263F42620] productInfo];
  BOOL v1 = [v0 productPlatform] == 2;

  return v1;
}

BOOL isTVOSDevice()
{
  uint64_t v0 = [MEMORY[0x263F42620] productInfo];
  BOOL v1 = [v0 productPlatform] == 4;

  return v1;
}

BOOL isHomePod()
{
  uint64_t v0 = [MEMORY[0x263F42620] productInfo];
  BOOL v1 = [v0 productClass] == 6;

  return v1;
}

void _overrideNumberArray(void **a1)
{
  uint64_t v15 = *MEMORY[0x263EF8340];
  int v13 = 0;
  CFArrayGetTypeID();
  long long v9 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  id v2 = (id)CFPrefs_CopyTypedValue();
  uint64_t v3 = [v2 countByEnumeratingWithState:&v9 objects:v14 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v10;
    while (2)
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v10 != v5) {
          objc_enumerationMutation(v2);
        }
        objc_opt_class();
        if ((objc_opt_isKindOfClass() & 1) == 0)
        {
          uint64_t v8 = v2;
          goto LABEL_11;
        }
        ++v6;
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v9 objects:v14 count:16];
      if (v4) {
        continue;
      }
      break;
    }
  }

  id v7 = v2;
  uint64_t v8 = *a1;
  *a1 = v7;
LABEL_11:
}

void _overrideNumber(id *a1)
{
  CFNumberGetTypeID();
  id v2 = (void *)CFPrefs_CopyTypedValue();
  objc_storeStrong(a1, v2);
}

void _overrideNSString(id *a1)
{
  CFStringGetTypeID();
  id v2 = (void *)CFPrefs_CopyTypedValue();
  objc_storeStrong(a1, v2);
}

BOOL isAppleTV()
{
  uint64_t v0 = [MEMORY[0x263F42620] productInfo];
  BOOL v1 = [v0 productClass] == 4;

  return v1;
}

BOOL isWatch()
{
  uint64_t v0 = [MEMORY[0x263F42620] productInfo];
  BOOL v1 = [v0 productClass] == 5;

  return v1;
}

BOOL isMac()
{
  uint64_t v0 = [MEMORY[0x263F42620] productInfo];
  BOOL v1 = [v0 productPlatform] == 1;

  return v1;
}

uint64_t isCharacteristicHeartBeat(void *a1, void *a2)
{
  id v3 = a2;
  if ([a1 isEqualToString:@"00000239-0000-1000-8000-0026BB765291"]) {
    uint64_t v4 = [v3 isEqualToString:@"0000024A-0000-1000-8000-0026BB765291"];
  }
  else {
    uint64_t v4 = 0;
  }

  return v4;
}

uint64_t isBTLECapableDevice()
{
  uint64_t v0 = [MEMORY[0x263F42648] systemInfo];
  uint64_t v1 = [v0 supportsBLE];

  return v1;
}

BOOL isiPadDevice()
{
  uint64_t v0 = [MEMORY[0x263F42620] productInfo];
  BOOL v1 = [v0 productClass] == 3;

  return v1;
}

BOOL isiPhoneDevice()
{
  uint64_t v0 = [MEMORY[0x263F42620] productInfo];
  BOOL v1 = [v0 productClass] == 1;

  return v1;
}

uint64_t productClass()
{
  uint64_t v0 = [MEMORY[0x263F42620] productInfo];
  uint64_t v1 = [v0 productClass];

  return v1;
}

uint64_t systemInfo()
{
  return [MEMORY[0x263F42648] systemInfo];
}

__CFString *getDeviceClass()
{
  if (isAppleTV()) {
    uint64_t v0 = @"kDeviceClassTypeResident";
  }
  else {
    uint64_t v0 = @"kDeviceClassTypeTransient";
  }
  return v0;
}

BOOL isDeviceLocked()
{
  uint64_t v13 = *MEMORY[0x263EF8340];
  if (+[HMDDeviceCapabilities supportsDeviceLock])
  {
    int v0 = MKBGetDeviceLockState();
    uint64_t v1 = (void *)MEMORY[0x230FBD990]();
    id v2 = HMFGetOSLogHandle();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
    {
      id v3 = HMFGetLogIdentifier();
      int v9 = 138543618;
      long long v10 = v3;
      __int16 v11 = 2048;
      uint64_t v12 = v0;
      _os_log_impl(&dword_22F52A000, v2, OS_LOG_TYPE_INFO, "%{public}@Device lock state (locked): %ld", (uint8_t *)&v9, 0x16u);
    }
    return v0 != 3 && v0 != 0;
  }
  else
  {
    uint64_t v6 = (void *)MEMORY[0x230FBD990]();
    id v7 = HMFGetOSLogHandle();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
    {
      uint64_t v8 = HMFGetLogIdentifier();
      int v9 = 138543362;
      long long v10 = v8;
      _os_log_impl(&dword_22F52A000, v7, OS_LOG_TYPE_INFO, "%{public}@Device does not support device lock (locked).", (uint8_t *)&v9, 0xCu);
    }
    return 1;
  }
}

BOOL isPasscodeEnabledOnThisDevice()
{
  uint64_t v12 = *MEMORY[0x263EF8340];
  if (+[HMDDeviceCapabilities supportsDeviceLock])
  {
    int v0 = MKBGetDeviceLockState();
    uint64_t v1 = (void *)MEMORY[0x230FBD990]();
    id v2 = HMFGetOSLogHandle();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
    {
      id v3 = HMFGetLogIdentifier();
      int v8 = 138543618;
      int v9 = v3;
      __int16 v10 = 2048;
      uint64_t v11 = v0;
      _os_log_impl(&dword_22F52A000, v2, OS_LOG_TYPE_INFO, "%{public}@Device lock state (passcode): %ld", (uint8_t *)&v8, 0x16u);
    }
    return v0 != 3;
  }
  else
  {
    uint64_t v5 = (void *)MEMORY[0x230FBD990]();
    uint64_t v6 = HMFGetOSLogHandle();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
    {
      id v7 = HMFGetLogIdentifier();
      int v8 = 138543362;
      int v9 = v7;
      _os_log_impl(&dword_22F52A000, v6, OS_LOG_TYPE_INFO, "%{public}@Device does not support device lock (passcode).", (uint8_t *)&v8, 0xCu);
    }
    return 0;
  }
}

uint64_t getHMMaximumUsersPerHome()
{
  return maximumUsersPerHome;
}

uint64_t getPresenceFeedRefreshInMinutes()
{
  return presenceFeedRefreshInMinutes;
}

double getDiscoveryBackoffPeriod()
{
  int v0 = [MEMORY[0x263F42608] sharedPreferences];
  uint64_t v1 = [v0 preferenceForKey:@"DiscoveryBackoffInSeconds"];
  id v2 = [v1 numberValue];
  [v2 doubleValue];
  double v4 = v3;

  return v4;
}

id getBLEAccessoryCachePath()
{
  v28[1] = *MEMORY[0x263EF8340];
  int v0 = [MEMORY[0x263F08850] defaultManager];
  uint64_t v1 = v0;
  char v20 = 0;
  if (storeDirectoryPath)
  {
    if (!bleAccessoryCachePath
      || ([v0 fileExistsAtPath:bleAccessoryCachePath isDirectory:&v20] & 1) == 0)
    {
      uint64_t v27 = *MEMORY[0x263F08078];
      v28[0] = &unk_26E471428;
      id v2 = [NSDictionary dictionaryWithObjects:v28 forKeys:&v27 count:1];
      uint64_t v3 = [(id)storeDirectoryPath stringByAppendingString:@"/BLECache"];
      double v4 = (void *)bleAccessoryCachePath;
      bleAccessoryCachePath = v3;

      id v19 = 0;
      int v5 = [v1 createDirectoryAtPath:bleAccessoryCachePath withIntermediateDirectories:1 attributes:v2 error:&v19];
      id v6 = v19;
      id v7 = v6;
      char v20 = v5;
      if (v5)
      {
        id v18 = v6;
        [v1 setAttributes:v2 ofItemAtPath:bleAccessoryCachePath error:&v18];
        id v8 = v18;

        id v7 = v8;
      }
      else
      {
        uint64_t v13 = (void *)MEMORY[0x230FBD990]();
        uint64_t v14 = HMFGetOSLogHandle();
        if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
        {
          uint64_t v15 = HMFGetLogIdentifier();
          *(_DWORD *)long long buf = 138543874;
          unint64_t v22 = v15;
          __int16 v23 = 2112;
          uint64_t v24 = bleAccessoryCachePath;
          __int16 v25 = 2112;
          id v26 = v7;
          _os_log_impl(&dword_22F52A000, v14, OS_LOG_TYPE_ERROR, "%{public}@Could not create BLE Cache directory path %@ - error %@", buf, 0x20u);
        }
      }
    }
  }
  else
  {
    int v9 = (void *)MEMORY[0x230FBD990]();
    __int16 v10 = HMFGetOSLogHandle();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
    {
      uint64_t v11 = HMFGetLogIdentifier();
      *(_DWORD *)long long buf = 138543618;
      unint64_t v22 = v11;
      __int16 v23 = 2112;
      uint64_t v24 = storeDirectoryPath;
      id v12 = (id)storeDirectoryPath;
      _os_log_impl(&dword_22F52A000, v10, OS_LOG_TYPE_ERROR, "%{public}@Store Directory not initialized: %@", buf, 0x16u);
    }
  }
  id v16 = (id)bleAccessoryCachePath;

  return v16;
}

id getImagesPath()
{
  int v0 = HMDCreateHomeKitDaemonCacheDirectory();
  uint64_t v1 = [v0 stringByAppendingString:@"/Snapshots"];

  return v1;
}

id getBulletinImagesPath()
{
  int v0 = HMDCreateHomeKitDaemonCacheDirectory();
  uint64_t v1 = [v0 stringByAppendingString:@"/BulletinSnapshots"];

  return v1;
}

id HMDHomeKitDaemonDemoModePersistencePath()
{
  int v0 = NSURL;
  uint64_t v1 = HMDCreateHomeKitDaemonCacheDirectory();
  id v2 = [v0 fileURLWithPath:v1];

  uint64_t v3 = [v2 URLByAppendingPathComponent:@"DemoMode.data"];

  return v3;
}

BOOL compareCharacteristicValue(void *a1, void *a2, void *a3, void *a4)
{
  uint64_t v57 = *MEMORY[0x263EF8340];
  unint64_t v7 = a1;
  unint64_t v8 = a2;
  id v9 = a4;
  if (!v7 || !v8)
  {
    BOOL v14 = (v7 | v8) == 0;
    goto LABEL_49;
  }
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      id v10 = (id)v8;
      id v11 = (id)v7;
      id v12 = v10;
      BOOL v13 = *(unsigned char *)[v12 objCType] == 102
         || *(unsigned __int8 *)[v12 objCType] == 100;
      id v15 = v11;
      if (*(unsigned char *)[v15 objCType] == 102
        || ((id v16 = v15, *(unsigned char *)[v16 objCType] == 100)
          ? (int v17 = 1)
          : (int v17 = v13),
            v17 == 1))
      {
        [v12 doubleValue];
        double v19 = v18;
        uint64_t v20 = [v15 doubleValue];
        double v22 = v21;
        double v23 = 0.00999999978;
        if (v9)
        {
          uint64_t v20 = [v9 doubleValue];
          if (fabs(v24) >= 2.22044605e-16)
          {
            uint64_t v20 = [v9 doubleValue];
            double v23 = v25;
          }
        }
        context = (void *)MEMORY[0x230FBD990](v20);
        id v26 = HMFGetOSLogHandle();
        uint64_t v27 = (uint64_t)(v19 * (1.0 / v23));
        uint64_t v28 = (uint64_t)(v22 * (1.0 / v23));
        if (os_log_type_enabled(v26, OS_LOG_TYPE_INFO))
        {
          id v29 = HMFGetLogIdentifier();
          *(_DWORD *)long long buf = 138544642;
          __int16 v46 = v29;
          __int16 v47 = 2048;
          double v48 = v19;
          __int16 v49 = 2048;
          id v50 = (id)(uint64_t)(v19 * (1.0 / v23));
          __int16 v51 = 2048;
          double v52 = v22;
          __int16 v53 = 2048;
          uint64_t v54 = (uint64_t)(v22 * (1.0 / v23));
          __int16 v55 = 2048;
          double v56 = v23;
          _os_log_impl(&dword_22F52A000, v26, OS_LOG_TYPE_INFO, "%{public}@Saved double value: %lf (%ld), current double value: %lf (%ld), step value: %lf", buf, 0x3Eu);
        }
        switch((unint64_t)a3)
        {
          case 0uLL:
            BOOL v14 = v28 < v27;
            break;
          case 1uLL:
            BOOL v14 = v28 <= v27;
            break;
          case 2uLL:
            BOOL v14 = v28 > v27;
            break;
          case 3uLL:
            BOOL v14 = v28 >= v27;
            break;
          case 5uLL:
            BOOL v14 = v28 != v27;
            break;
          default:
            BOOL v14 = v28 == v27;
            break;
        }

        goto LABEL_49;
      }
    }
  }
  if (objc_opt_respondsToSelector() & 1) != 0 && (objc_opt_respondsToSelector())
  {
    unint64_t v30 = [(id)v7 compare:v8];
    switch((unint64_t)a3)
    {
      case 0uLL:
        BOOL v31 = v30 == -1;
        goto LABEL_37;
      case 1uLL:
        BOOL v38 = v30 + 1 >= 2;
        goto LABEL_33;
      case 2uLL:
        BOOL v31 = v30 == 1;
        goto LABEL_37;
      case 3uLL:
        BOOL v38 = v30 >= 2;
LABEL_33:
        BOOL v14 = !v38;
        break;
      case 5uLL:
        BOOL v14 = v30 != 0;
        break;
      default:
        BOOL v31 = v30 == 0;
LABEL_37:
        BOOL v14 = v31;
        break;
    }
    long long v39 = (void *)MEMORY[0x230FBD990]();
    id v40 = HMFGetOSLogHandle();
    if (os_log_type_enabled(v40, OS_LOG_TYPE_INFO))
    {
      long long v41 = HMFGetLogIdentifier();
      long long v42 = HMFBooleanToString();
      *(_DWORD *)long long buf = 138544386;
      __int16 v46 = v41;
      __int16 v47 = 2112;
      double v48 = *(double *)&v7;
      __int16 v49 = 2048;
      id v50 = a3;
      __int16 v51 = 2112;
      double v52 = *(double *)&v8;
      __int16 v53 = 2112;
      uint64_t v54 = (uint64_t)v42;
      _os_log_impl(&dword_22F52A000, v40, OS_LOG_TYPE_INFO, "%{public}@Comparing characteristic value %@ (op:%tu) %@, result: %@", buf, 0x34u);
    }
  }
  else
  {
    uint64_t v32 = (void *)MEMORY[0x230FBD990]();
    uint64_t v33 = HMFGetOSLogHandle();
    if (os_log_type_enabled(v33, OS_LOG_TYPE_ERROR))
    {
      uint64_t v34 = HMFGetLogIdentifier();
      uint64_t v35 = objc_opt_class();
      id v36 = v35;
      *(_DWORD *)long long buf = 138543874;
      __int16 v46 = v34;
      __int16 v47 = 2112;
      double v48 = *(double *)&v35;
      __int16 v49 = 2112;
      id v50 = (id)objc_opt_class();
      id v37 = v50;
    }
    BOOL v14 = 0;
  }
LABEL_49:

  return v14;
}

id spiClientIdentifierForUUID(void *a1)
{
  id v1 = a1;
  id v2 = +[HMDProcessInfo privateClientIdentifierSalt];
  uint64_t v3 = objc_msgSend(MEMORY[0x263F08C38], "hm_deriveUUIDFromBaseUUID:identifierSalt:", v1, v2);

  return v3;
}

id spiClientIdentifierForUUIDAndSalts(void *a1, void *a2)
{
  id v3 = a2;
  id v4 = a1;
  int v5 = +[HMDProcessInfo privateClientIdentifierSalt];
  id v6 = objc_msgSend(MEMORY[0x263F08C38], "hm_deriveUUIDFromBaseUUID:identifierSalt:withSalts:", v4, v5, v3);

  return v6;
}

uint64_t shouldLogPrivateInformation()
{
  int v0 = [MEMORY[0x263F42608] sharedPreferences];
  id v1 = [v0 preferenceForKey:@"shouldLogPrivateInformation"];
  uint64_t v2 = [v1 BOOLValue];

  return v2;
}

uint64_t isEqualDeepCompare(void *a1, void *a2)
{
  uint64_t v35 = *MEMORY[0x263EF8340];
  id v3 = a1;
  id v4 = a2;
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      uint64_t v5 = [v3 count];
      if (v5 == [v4 count])
      {
        long long v31 = 0u;
        long long v32 = 0u;
        long long v29 = 0u;
        long long v30 = 0u;
        id v6 = v3;
        uint64_t v7 = [v6 countByEnumeratingWithState:&v29 objects:v34 count:16];
        if (v7)
        {
          uint64_t v8 = v7;
          uint64_t v9 = *(void *)v30;
          while (2)
          {
            for (uint64_t i = 0; i != v8; ++i)
            {
              if (*(void *)v30 != v9) {
                objc_enumerationMutation(v6);
              }
              uint64_t v11 = *(void *)(*((void *)&v29 + 1) + 8 * i);
              id v12 = [v6 objectForKey:v11];
              BOOL v13 = [v4 objectForKey:v11];
              if (!v13 || !isEqualDeepCompare(v12, v13))
              {

                uint64_t v14 = 0;
                goto LABEL_34;
              }
            }
            uint64_t v8 = [v6 countByEnumeratingWithState:&v29 objects:v34 count:16];
            uint64_t v14 = 1;
            if (v8) {
              continue;
            }
            goto LABEL_34;
          }
        }
LABEL_25:
        uint64_t v14 = 1;
LABEL_34:

        goto LABEL_35;
      }
LABEL_31:
      uint64_t v14 = 0;
      goto LABEL_35;
    }
  }
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      uint64_t v15 = [v3 count];
      if (v15 == [v4 count])
      {
        long long v27 = 0u;
        long long v28 = 0u;
        long long v25 = 0u;
        long long v26 = 0u;
        id v6 = v3;
        uint64_t v16 = [v6 countByEnumeratingWithState:&v25 objects:v33 count:16];
        if (v16)
        {
          uint64_t v17 = v16;
          uint64_t v18 = 0;
          uint64_t v19 = *(void *)v26;
LABEL_19:
          uint64_t v20 = 0;
          while (1)
          {
            if (*(void *)v26 != v19) {
              objc_enumerationMutation(v6);
            }
            uint64_t v21 = *(void *)(*((void *)&v25 + 1) + 8 * v20);
            double v22 = objc_msgSend(v4, "objectAtIndex:", v18 + v20, (void)v25);
            uint64_t v14 = isEqualDeepCompare(v21, v22);

            if (!v14) {
              goto LABEL_34;
            }
            if (v17 == ++v20)
            {
              v18 += v20;
              uint64_t v17 = [v6 countByEnumeratingWithState:&v25 objects:v33 count:16];
              if (v17) {
                goto LABEL_19;
              }
              goto LABEL_25;
            }
          }
        }
        goto LABEL_25;
      }
      goto LABEL_31;
    }
  }
  if (objc_opt_respondsToSelector())
  {
    if (v3 == v4)
    {
      uint64_t v14 = 1;
      goto LABEL_35;
    }
    uint64_t v23 = [v3 isBackingStorageEqual:v4];
  }
  else
  {
    uint64_t v23 = HMFEqualObjects();
  }
  uint64_t v14 = v23;
LABEL_35:

  return v14;
}

HMDHomeKitVersion *fixHomeKitVersion(void *a1)
{
  id v1 = a1;
  if ((unint64_t)[v1 minorVersion] >= 0xA && objc_msgSend(v1, "minorVersion"))
  {
    uint64_t v2 = [[HMDHomeKitVersion alloc] initWithVersionString:@"10.0"];
    if ([v1 isAtLeastVersion:v2])
    {
      id v3 = (HMDHomeKitVersion *)v1;
    }
    else
    {
      double v5 = round(log10((double)(unint64_t)[v1 minorVersion]));
      id v3 = -[HMDHomeKitVersion initWithMajorVersion:minorVersion:updateVersion:]([HMDHomeKitVersion alloc], "initWithMajorVersion:minorVersion:updateVersion:", [v1 majorVersion], llround((double)(unint64_t)objc_msgSend(v1, "minorVersion") / __exp10((double)(uint64_t)v5)), objc_msgSend(v1, "updateVersion"));
    }
    id v4 = v3;
  }
  else
  {
    id v4 = (HMDHomeKitVersion *)v1;
  }

  return v4;
}

id generateWiFiUniquePreSharedKey()
{
  uint64_t v11 = *MEMORY[0x263EF8340];
  int v0 = (void *)SecPasswordGenerate();
  id v1 = v0;
  if (v0)
  {
    id v2 = v0;
  }
  else
  {
    id v3 = (void *)MEMORY[0x230FBD990]();
    id v4 = HMFGetOSLogHandle();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    {
      double v5 = HMFGetLogIdentifier();
      *(_DWORD *)long long buf = 138543618;
      uint64_t v8 = v5;
      __int16 v9 = 2112;
      uint64_t v10 = 0;
      _os_log_impl(&dword_22F52A000, v4, OS_LOG_TYPE_ERROR, "%{public}@Failed to generate WiFi Pre-Shared Key with error: %@", buf, 0x16u);
    }
  }
  return v1;
}

id accessoryToEncodeForXPCTransportForAccessory(void *a1)
{
  id v1 = a1;
  id v2 = [v1 hostAccessory];
  objc_opt_class();
  if (objc_opt_isKindOfClass()) {
    id v3 = v2;
  }
  else {
    id v3 = 0;
  }
  id v4 = v3;

  if (v4) {
    double v5 = v4;
  }
  else {
    double v5 = v1;
  }
  id v6 = v5;

  return v6;
}

BOOL shouldSkipRemoteAccessoryNotificationRegistration(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  BOOL v5 = [v3 isCurrentDeviceAvailableResident]
    && [v4 hasIPLink]
    && ([v4 hasBTLELink] & 1) == 0
    && !isiPadDevice()
    && (!isAppleTV() || [v3 isCurrentDeviceConfirmedPrimaryResident]);

  return v5;
}

uint64_t shouldSkipLocalAccessoryNotificationRegistration(void *a1, void *a2, void *a3, void *a4)
{
  id v7 = a1;
  id v8 = a2;
  id v9 = a4;
  if (objc_msgSend(a3, "hmf_isEmpty")) {
    goto LABEL_2;
  }
  uint64_t v11 = [v7 localCapabilitiesDataSource];
  if ([v11 isResidentCapable])
  {
    if ([v7 isCurrentDevicePrimaryResident])
    {

      goto LABEL_14;
    }
    char v14 = [v9 hasPrefix:@"com.apple.HomeKitDaemon.Local"];

    if (v14) {
      goto LABEL_14;
    }
  }
  else
  {
  }
  id v12 = [v7 enabledResidents];
  uint64_t v13 = [v12 count];

  if (!v13) {
    goto LABEL_14;
  }
  if (([v9 isEqual:@"com.apple.HomeKitDaemon.bulletinNotificationManager"] & 1) == 0
    && ([v9 isEqual:@"com.apple.HomeKitDaemon.bulletinBoard"] & 1) == 0)
  {
    if (![v8 hasBTLELink] || (objc_msgSend(v8, "reachableTransports") & 2) == 0)
    {
      uint64_t v10 = [v8 isSecureSessionEstablished] ^ 1;
      goto LABEL_15;
    }
LABEL_14:
    uint64_t v10 = 0;
    goto LABEL_15;
  }
LABEL_2:
  uint64_t v10 = 1;
LABEL_15:

  return v10;
}

uint64_t shouldDisconnectOnIdleForAccessory(void *a1)
{
  id v1 = a1;
  id v2 = [v1 home];
  char v3 = isPersistedConnectionRequiredForAccessory(v1);

  if (v3) {
    uint64_t v4 = 0;
  }
  else {
    uint64_t v4 = [v2 isCurrentDevicePrimaryResident] ^ 1;
  }

  return v4;
}

uint64_t isPersistedConnectionRequiredForAccessory(void *a1)
{
  uint64_t v32 = *MEMORY[0x263EF8340];
  id v1 = a1;
  id v2 = [v1 home];
  if (![v2 isCurrentDevicePrimaryResident])
  {
    *(void *)&long long buf = 0;
    *((void *)&buf + 1) = &buf;
    uint64_t v28 = 0x3032000000;
    long long v29 = __Block_byref_object_copy__79112;
    long long v30 = __Block_byref_object_dispose__79113;
    id v31 = 0;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 3221225472;
    aBlock[2] = __isPersistedConnectionRequiredForAccessory_block_invoke;
    aBlock[3] = &unk_264A1CDA0;
    p_long long buf = &buf;
    id v7 = v1;
    id v21 = v7;
    id v8 = (void (**)(void))_Block_copy(aBlock);
    if ([v2 isCurrentDeviceAvailableResident])
    {
      uint64_t v16 = 0;
      uint64_t v17 = &v16;
      uint64_t v18 = 0x2020000000;
      char v19 = 0;
      id v9 = v8[2](v8);
      v15[0] = MEMORY[0x263EF8330];
      v15[1] = 3221225472;
      v15[2] = __isPersistedConnectionRequiredForAccessory_block_invoke_3;
      v15[3] = &unk_264A1CDC8;
      void v15[4] = &v16;
      objc_msgSend(v9, "hmf_enumerateWithAutoreleasePoolUsingBlock:", v15);

      if (*((unsigned char *)v17 + 24))
      {
        uint64_t v10 = (void *)MEMORY[0x230FBD990]();
        HMFGetOSLogHandle();
        uint64_t v11 = (id)objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
        {
          HMFGetLogIdentifier();
          id v12 = (id)objc_claimAutoreleasedReturnValue();
          uint64_t v13 = [v7 shortDescription];
          *(_DWORD *)uint64_t v23 = 138543618;
          id v24 = v12;
          __int16 v25 = 2112;
          long long v26 = v13;
          _os_log_impl(&dword_22F52A000, v11, OS_LOG_TYPE_INFO, "%{public}@Require persisted connection for Siri Remote accessory %@ for all residents", v23, 0x16u);
        }
        _Block_object_dispose(&v16, 8);
        uint64_t v6 = 1;
        goto LABEL_12;
      }
      _Block_object_dispose(&v16, 8);
    }
    uint64_t v6 = 0;
LABEL_12:

    _Block_object_dispose(&buf, 8);
    goto LABEL_13;
  }
  char v3 = (void *)MEMORY[0x230FBD990]();
  uint64_t v4 = HMFGetOSLogHandle();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEBUG))
  {
    BOOL v5 = HMFGetLogIdentifier();
    LODWORD(buf) = 138543362;
    *(void *)((char *)&buf + 4) = v5;
    _os_log_impl(&dword_22F52A000, v4, OS_LOG_TYPE_DEBUG, "%{public}@Current device is primary resident, always require persisted connection with accessories", (uint8_t *)&buf, 0xCu);
  }
  uint64_t v6 = 1;
LABEL_13:

  return v6;
}

void sub_22FB432E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
}

uint64_t __Block_byref_object_copy__79112(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__79113(uint64_t a1)
{
}

id __isPersistedConnectionRequiredForAccessory_block_invoke(uint64_t a1)
{
  id v1 = *(void **)(*(void *)(*(void *)(a1 + 40) + 8) + 40);
  if (v1)
  {
    id v2 = v1;
  }
  else
  {
    uint64_t v4 = [MEMORY[0x263EFF9C0] setWithObject:*(void *)(a1 + 32)];
    BOOL v5 = [*(id *)(a1 + 32) identifiersForBridgedAccessories];
    uint64_t v11 = MEMORY[0x263EF8330];
    uint64_t v12 = 3221225472;
    uint64_t v13 = __isPersistedConnectionRequiredForAccessory_block_invoke_2;
    char v14 = &unk_264A1CD78;
    id v15 = *(id *)(a1 + 32);
    id v16 = v4;
    id v6 = v4;
    objc_msgSend(v5, "hmf_enumerateWithAutoreleasePoolUsingBlock:", &v11);

    uint64_t v7 = objc_msgSend(v6, "copy", v11, v12, v13, v14);
    uint64_t v8 = *(void *)(*(void *)(a1 + 40) + 8);
    id v9 = *(void **)(v8 + 40);
    *(void *)(v8 + 40) = v7;

    id v2 = *(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40);
  }
  return v2;
}

uint64_t __isPersistedConnectionRequiredForAccessory_block_invoke_3(uint64_t a1, void *a2, unsigned char *a3)
{
  uint64_t result = [a2 supportsTargetController];
  *(unsigned char *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  *a3 = *(unsigned char *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void __isPersistedConnectionRequiredForAccessory_block_invoke_2(uint64_t a1, void *a2)
{
  char v3 = *(void **)(a1 + 32);
  id v4 = a2;
  BOOL v5 = [v3 home];
  id v6 = [v5 accessoryWithUUID:v4];

  objc_opt_class();
  if (objc_opt_isKindOfClass()) {
    uint64_t v7 = v6;
  }
  else {
    uint64_t v7 = 0;
  }
  id v9 = v7;

  uint64_t v8 = v9;
  if (v9)
  {
    [*(id *)(a1 + 40) addObject:v9];
    uint64_t v8 = v9;
  }
}

void __shouldEnableInternalDebugInterfaces_block_invoke()
{
  if (isInternalBuild())
  {
    id v1 = [MEMORY[0x263F42608] sharedPreferences];
    int v0 = [v1 preferenceForKey:@"shouldEnableInternalDebugInterfaces"];
    shouldEnableInternalDebugInterfaces__hmf_once_uint64_t v32 = [v0 BOOLValue];
  }
  else
  {
    shouldEnableInternalDebugInterfaces__hmf_once_uint64_t v32 = 0;
  }
}

id getCKContainer()
{
  int v0 = @"com.apple.homekit.config";
  block[0] = MEMORY[0x263EF8330];
  block[1] = 3221225472;
  block[2] = __getCKContainer_block_invoke;
  block[3] = &unk_264A2F7F8;
  id v4 = @"com.apple.homekit.config";
  if (getCKContainer_onceToken != -1) {
    dispatch_once(&getCKContainer_onceToken, block);
  }
  id v1 = (id)getCKContainer_container;

  return v1;
}

void __getCKContainer_block_invoke(uint64_t a1)
{
  id v3 = (id)[objc_alloc(MEMORY[0x263EFD620]) initWithContainerIdentifier:*(void *)(a1 + 32) environment:cloudKitContainerEnvironment];
  uint64_t v1 = [objc_alloc(MEMORY[0x263EFD610]) initWithContainerID:v3];
  id v2 = (void *)getCKContainer_container;
  getCKContainer_container = v1;
}

id shortHAPTypeDescription(void *a1)
{
  id v1 = a1;
  id v2 = (void *)*MEMORY[0x263F357F0];
  if ([v1 hasSuffix:*MEMORY[0x263F357F0]])
  {
    uint64_t v3 = objc_msgSend(v1, "substringToIndex:", objc_msgSend(v1, "length") - objc_msgSend(v2, "length"));

    id v1 = (id)v3;
  }
  return v1;
}

id listOfUUIDsFromManagedObjectSet(void *a1)
{
  id v1 = [a1 allObjects];
  id v2 = objc_msgSend(v1, "na_map:", &__block_literal_global_875);

  return v2;
}

uint64_t __listOfUUIDsFromManagedObjectSet_block_invoke(uint64_t a1, void *a2)
{
  return [a2 modelID];
}

uint64_t isThisDeviceDesignatedFMFDevice()
{
  int v0 = +[HMDFMFHandler sharedHandler];
  uint64_t v1 = [v0 isThisDesignatedFMFDevice];

  return v1;
}

void setPrimaryPreference(void *a1, int a2)
{
  uint64_t v17 = *MEMORY[0x263EF8340];
  id v3 = a1;
  id v4 = (void *)MEMORY[0x230FBD990](@"hmd.preferred.primary.homeutil");
  BOOL v5 = HMFGetOSLogHandle();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    id v6 = HMFGetLogIdentifier();
    uint64_t v7 = HMFBooleanToString();
    int v9 = 138544130;
    uint64_t v10 = v6;
    __int16 v11 = 2112;
    id v12 = v3;
    __int16 v13 = 2112;
    char v14 = v7;
    __int16 v15 = 2112;
    id v16 = @"hmd.preferred.primary.homeutil";
    _os_log_impl(&dword_22F52A000, v5, OS_LOG_TYPE_DEFAULT, "%{public}@Setting preferred primary: %@, isOneTime: %@, applicationKey: %@", (uint8_t *)&v9, 0x2Au);
  }
  CFPreferencesSetAppValue(@"hmd.preferred.primary", v3, @"hmd.preferred.primary.homeutil");
  if (a2) {
    uint64_t v8 = (const void *)MEMORY[0x263EFFA88];
  }
  else {
    uint64_t v8 = (const void *)MEMORY[0x263EFFA80];
  }
  CFPreferencesSetAppValue(@"hmd.preferred.primary.one.time", v8, @"hmd.preferred.primary.homeutil");
}

void clearPrimaryPreference(int a1)
{
  uint64_t v15 = *MEMORY[0x263EF8340];
  id v2 = (void *)MEMORY[0x230FBD990](@"hmd.preferred.primary.homeutil");
  id v3 = HMFGetOSLogHandle();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    id v4 = HMFGetLogIdentifier();
    BOOL v5 = HMFBooleanToString();
    int v9 = 138543874;
    uint64_t v10 = v4;
    __int16 v11 = 2112;
    id v12 = v5;
    __int16 v13 = 2112;
    char v14 = @"hmd.preferred.primary.homeutil";
    _os_log_impl(&dword_22F52A000, v3, OS_LOG_TYPE_DEFAULT, "%{public}@Clearing preferred primary with requireOneTime: %@ ...withApplication: %@", (uint8_t *)&v9, 0x20u);
  }
  id v6 = (void *)CFPreferencesCopyAppValue(@"hmd.preferred.primary.one.time", @"hmd.preferred.primary.homeutil");
  uint64_t v7 = v6;
  if (v6)
  {
    int v8 = [v6 BOOLValue];
    if (!a1 || v8) {
      CFPreferencesSetAppValue(@"hmd.preferred.primary", 0, @"hmd.preferred.primary.homeutil");
    }
  }
}

uint64_t HMDCurrentQOSWithFloor()
{
  int v0 = [MEMORY[0x263F08B88] currentThread];
  uint64_t v1 = [v0 qualityOfService];

  if (v1 <= 17) {
    uint64_t v2 = 17;
  }
  else {
    uint64_t v2 = v1;
  }
  if (v2 == 21) {
    return 17;
  }
  else {
    return v2;
  }
}

uint64_t isTransientCloudKitError(void *a1)
{
  id v1 = a1;
  uint64_t v2 = [v1 domain];
  int v3 = [v2 isEqualToString:*MEMORY[0x263EFD498]];

  if (v3)
  {
    unint64_t v4 = [v1 code];
    if (v4 <= 0x17) {
      uint64_t v5 = (0x8000D8u >> v4) & 1;
    }
    else {
      uint64_t v5 = 0;
    }
  }
  else
  {
    uint64_t v5 = 0;
  }

  return v5;
}

void __isFirstLaunchAfterBoot_block_invoke()
{
  uint64_t v21 = *MEMORY[0x263EF8340];
  int v0 = determineHomeKitDaemonRootStorePath();
  id v1 = v0;
  if (v0)
  {
    uint64_t v2 = [v0 stringByAppendingPathComponent:@"lastBootUuid"];
    *(_OWORD *)char v19 = 0u;
    memset(v20, 0, sizeof(v20));
    size_t v16 = 37;
    int v3 = sysctlbyname("kern.bootsessionuuid", v19, &v16, 0, 0);
    if (v3)
    {
      if (v3 == -1)
      {
        __error();
        _os_assumes_log();
      }
      unint64_t v4 = (void *)MEMORY[0x230FBD990]();
      uint64_t v5 = HMFGetOSLogHandle();
      if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
      {
        id v6 = HMFGetLogIdentifier();
        *(_DWORD *)long long buf = 138543362;
        uint64_t v18 = v6;
        _os_log_impl(&dword_22F52A000, v5, OS_LOG_TYPE_ERROR, "%{public}@Failed to get kern.bootsessionuuid", buf, 0xCu);
      }
      isFirstLaunchAfterBoot_firstLaunchAfterBoot = 1;
    }
    else
    {
      uint64_t v10 = [NSString stringWithContentsOfFile:v2 encoding:4 error:0];
      if (!v10)
      {
        __int16 v11 = (void *)MEMORY[0x230FBD990]();
        id v12 = HMFGetOSLogHandle();
        if (os_log_type_enabled(v12, OS_LOG_TYPE_DEBUG))
        {
          __int16 v13 = HMFGetLogIdentifier();
          *(_DWORD *)long long buf = 138543362;
          uint64_t v18 = v13;
          _os_log_impl(&dword_22F52A000, v12, OS_LOG_TYPE_DEBUG, "%{public}@Failed to load existing boot uuid", buf, 0xCu);
        }
      }
      char v14 = (void *)[[NSString alloc] initWithUTF8String:v19];
      char v15 = 1;
      [v14 writeToFile:v2 atomically:1 encoding:4 error:0];
      if (v10) {
        char v15 = [v14 isEqualToString:v10] ^ 1;
      }
      isFirstLaunchAfterBoot_firstLaunchAfterBoot = v15;
    }
  }
  else
  {
    uint64_t v7 = (void *)MEMORY[0x230FBD990]();
    int v8 = HMFGetOSLogHandle();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
    {
      int v9 = HMFGetLogIdentifier();
      *(_DWORD *)char v19 = 138543362;
      *(void *)&void v19[4] = v9;
      _os_log_impl(&dword_22F52A000, v8, OS_LOG_TYPE_ERROR, "%{public}@Failed to get HomeKit daemon root store path!", v19, 0xCu);
    }
    isFirstLaunchAfterBoot_firstLaunchAfterBoot = 1;
  }
}

uint64_t HMDTruncatedHash(void *a1)
{
  uint64_t v4 = 0;
  id v1 = objc_msgSend(a1, "hm_generateSHA256");
  [v1 getBytes:&v4 length:8];
  uint64_t v2 = v4;

  return v2;
}

void sub_22FB4417C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
}

void sub_22FB44258(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_22FB44970(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_22FB44AA8(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_22FB46634(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FB46718(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

__CFString *HMDMatterAccessoryPairingStepAsString(unint64_t a1)
{
  if (a1 >= 0x1A)
  {
    objc_msgSend(NSString, "stringWithFormat:", @"Undefined HMDMatterAccessoryPairingStep %tu", a1);
    id v1 = (__CFString *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    id v1 = off_264A1CF08[a1];
  }
  return v1;
}

void sub_22FB48158(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 80), 8);
  _Unwind_Resume(a1);
}

void __callResolveBlocks(void *a1, void *a2, void *a3)
{
  uint64_t v20 = *MEMORY[0x263EF8340];
  id v5 = a1;
  unint64_t v6 = a2;
  unint64_t v7 = a3;
  int v8 = [v5 underlyingQueue];
  dispatch_assert_queue_V2(v8);

  if (v5 && v6 | v7)
  {
    long long v17 = 0u;
    long long v18 = 0u;
    long long v15 = 0u;
    long long v16 = 0u;
    int v9 = objc_msgSend(v5, "resolveBlocks", 0);
    uint64_t v10 = [v9 countByEnumeratingWithState:&v15 objects:v19 count:16];
    if (v10)
    {
      uint64_t v11 = v10;
      uint64_t v12 = *(void *)v16;
      do
      {
        uint64_t v13 = 0;
        do
        {
          if (*(void *)v16 != v12) {
            objc_enumerationMutation(v9);
          }
          (*(void (**)(void))(*(void *)(*((void *)&v15 + 1) + 8 * v13++) + 16))();
        }
        while (v11 != v13);
        uint64_t v11 = [v9 countByEnumeratingWithState:&v15 objects:v19 count:16];
      }
      while (v11);
    }

    char v14 = [v5 resolveBlocks];
    [v14 removeAllObjects];
  }
}

void sub_22FB4BCD4(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

uint64_t _isNetworkIntefaceActive()
{
  int v0 = socket(2, 2, 0);
  if (v0 < 0 && (!*__error() || *__error())) {
    return 0;
  }
  id v5 = 0;
  getifaddrs(&v5);
  int v3 = v5;
  if (!v5)
  {
    if (v0 < 0) {
      return 0;
    }
    goto LABEL_19;
  }
  do
  {
    if ((v3->ifa_flags & 8) == 0)
    {
      ifa_name = v3->ifa_name;
      if (ifa_name)
      {
        if (!SocketGetInterfaceInfo()
          && gLogCategory_HMDPowerManager <= 20
          && (gLogCategory_HMDPowerManager != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
      }
    }
    int v3 = v3->ifa_next;
  }
  while (v3);
  if (v5) {
    MEMORY[0x230FBD370](v5, ifa_name, v2);
  }
  if ((v0 & 0x80000000) == 0)
  {
LABEL_19:
    if (close(v0) && *__error()) {
      __error();
    }
  }
  return 0;
}

void _handleNetworkInterfaceChanged(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  v5[16] = _isNetworkIntefaceActive();
  if (gLogCategory_HMDPowerManager <= 30
    && (gLogCategory_HMDPowerManager != -1 || _LogCategory_Initialize()))
  {
    if (v5[16]) {
      int v3 = "yes";
    }
    else {
      int v3 = "no";
    }
    uint64_t v4 = v3;
    LogPrintF();
  }
  objc_msgSend(v5, "_update", v4);
}

void sub_22FB4F0F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22FB4F834(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,id location)
{
  objc_destroyWeak(v28);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22FB4FAC4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22FB50DB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__81035(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__81036(uint64_t a1)
{
}

void sub_22FB51434(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22FB53A00(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,id location)
{
}

id _parseTargetList(void *a1)
{
  id v1 = a1;
  if ([v1 length])
  {
    id v2 = v1;
    [v2 bytes];
    [v2 length];
    while (!TLV8GetNext())
      ;
  }

  return 0;
}

id _parseTargetButtonConfiguration(void *a1, uint64_t a2)
{
  id v2 = a1;
  int v3 = [MEMORY[0x263EFF980] array];
  id v4 = v2;
  [v4 bytes];
  [v4 length];
  while (!TLV8GetNext())
    ;
  id v5 = objc_msgSend(v3, "copy", a2);

  return v5;
}

unint64_t targetConfigurationTLVSize(void *a1, void *a2)
{
  uint64_t v25 = *MEMORY[0x263EF8340];
  id v3 = a1;
  id v4 = a2;
  long long v20 = 0u;
  long long v21 = 0u;
  long long v22 = 0u;
  long long v23 = 0u;
  uint64_t v5 = [v3 countByEnumeratingWithState:&v20 objects:v24 count:16];
  if (v5)
  {
    uint64_t v6 = v5;
    uint64_t v7 = *(void *)v21;
    unint64_t v8 = 32;
    do
    {
      for (uint64_t i = 0; i != v6; ++i)
      {
        if (*(void *)v21 != v7) {
          objc_enumerationMutation(v3);
        }
        uint64_t v10 = *(void **)(*((void *)&v20 + 1) + 8 * i);
        unint64_t v11 = v8 + 12;
        id v12 = [v10 name];
        uint64_t v13 = (const char *)[v12 UTF8String];

        if (v13)
        {
          size_t v14 = strlen(v13);
          if (v14 >= 0x80) {
            uint64_t v15 = 128;
          }
          else {
            uint64_t v15 = v14;
          }
          v11 += v15;
        }
        long long v16 = [v10 buttonConfiguration];
        if ([v16 count])
        {
          long long v17 = [v10 buttonConfiguration];
          unint64_t v18 = buttonConfigurationTLVSize(v17);
        }
        else
        {
          unint64_t v18 = buttonConfigurationTLVSize(v4);
        }
        unint64_t v8 = v18 + v11;
      }
      uint64_t v6 = [v3 countByEnumeratingWithState:&v20 objects:v24 count:16];
    }
    while (v6);
  }
  else
  {
    unint64_t v8 = 32;
  }

  return v8 + 2 * (v8 / 0xFF);
}

uint64_t __addButtonConfigurationTLV(uint64_t a1, void *a2)
{
  uint64_t v40 = *MEMORY[0x263EF8340];
  id v2 = a2;
  if ([v2 count])
  {
    long long v38 = 0u;
    long long v39 = 0u;
    long long v36 = 0u;
    long long v37 = 0u;
    long long v34 = 0u;
    long long v35 = 0u;
    long long v32 = 0u;
    long long v33 = 0u;
    long long v30 = 0u;
    long long v31 = 0u;
    long long v28 = 0u;
    long long v29 = 0u;
    long long v26 = 0u;
    long long v27 = 0u;
    long long v24 = 0u;
    long long v25 = 0u;
    long long v22 = 0u;
    long long v23 = 0u;
    long long v20 = 0u;
    long long v21 = 0u;
    long long v19 = 0u;
    buttonConfigurationTLVSize(v2);
    TLV8BufferInit();
    long long v16 = 0u;
    long long v17 = 0u;
    long long v14 = 0u;
    long long v15 = 0u;
    id v3 = v2;
    uint64_t v4 = [v3 countByEnumeratingWithState:&v14 objects:v18 count:16];
    if (v4)
    {
      uint64_t v5 = v4;
      uint64_t v6 = *(void *)v15;
LABEL_4:
      uint64_t v7 = 0;
      while (1)
      {
        if (*(void *)v15 != v6) {
          objc_enumerationMutation(v3);
        }
        unint64_t v8 = *(void **)(*((void *)&v14 + 1) + 8 * v7);
        [v8 identifier];
        uint64_t v9 = TLV8BufferAppend();
        if (v9) {
          break;
        }
        [v8 type];
        uint64_t v9 = TLV8BufferAppend();
        if (v9) {
          break;
        }
        id v10 = [v8 name];
        unint64_t v11 = (const char *)[v10 UTF8String];

        if (v11)
        {
          strlen(v11);
          uint64_t v9 = TLV8BufferAppend();
          if (v9) {
            break;
          }
        }
        if (v5 == ++v7)
        {
          uint64_t v5 = [v3 countByEnumeratingWithState:&v14 objects:v18 count:16];
          if (v5) {
            goto LABEL_4;
          }
          goto LABEL_13;
        }
      }
    }
    else
    {
LABEL_13:

      objc_msgSend(MEMORY[0x263EFF8F8], "dataWithBytes:length:", v19);
      id v3 = objc_claimAutoreleasedReturnValue();
      [v3 bytes];
      [v3 length];
      uint64_t v9 = TLV8BufferAppend();
    }
    uint64_t v12 = v9;

    TLV8BufferFree();
  }
  else
  {
    uint64_t v12 = 0;
  }

  return v12;
}

unint64_t buttonConfigurationTLVSize(void *a1)
{
  uint64_t v17 = *MEMORY[0x263EF8340];
  id v1 = a1;
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  long long v15 = 0u;
  uint64_t v2 = [v1 countByEnumeratingWithState:&v12 objects:v16 count:16];
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = *(void *)v13;
    unint64_t v5 = 32;
    do
    {
      for (uint64_t i = 0; i != v3; ++i)
      {
        if (*(void *)v13 != v4) {
          objc_enumerationMutation(v1);
        }
        v5 += 9;
        id v7 = [*(id *)(*((void *)&v12 + 1) + 8 * i) name];
        unint64_t v8 = (const char *)[v7 UTF8String];

        if (v8)
        {
          size_t v9 = strlen(v8);
          if (v9 >= 0x80) {
            uint64_t v10 = 128;
          }
          else {
            uint64_t v10 = v9;
          }
          v5 += v10;
        }
      }
      uint64_t v3 = [v1 countByEnumeratingWithState:&v12 objects:v16 count:16];
    }
    while (v3);
  }
  else
  {
    unint64_t v5 = 32;
  }

  return v5 + 2 * (v5 / 0xFF);
}

void sub_22FB58D4C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22FB592D4(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 112), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__81361(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__81362(uint64_t a1)
{
}

void sub_22FB59820(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22FB5B6F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22FB5BFD0(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FB5C05C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FB5C0E8(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FB5C164(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

id readDataFromCKRecordOptionalAssetField(uint64_t a1)
{
  uint64_t v1 = (void *)MEMORY[0x270FA5388](a1);
  unint64_t v3 = v2;
  unint64_t v5 = v4;
  uint64_t v38 = *MEMORY[0x263EF8340];
  id v6 = v1;
  id v7 = v5;
  unint64_t v8 = filePathFromCKRecordOptionalAssetField(v6, v7);
  size_t v9 = v8;
  if (!v8)
  {
    long long v19 = 0;
    goto LABEL_25;
  }
  uint64_t v10 = createInputStreamWithFilePath(v8, 0);
  unint64_t v11 = v10;
  if (v10)
  {
    id v12 = v10;
    long long v13 = [MEMORY[0x263EFF990] data];
    [v12 open];
    uint64_t v14 = [v12 read:v37 maxLength:4096];
    if (v14 < 1)
    {
LABEL_12:
      uint64_t v18 = [v12 close];
      if ((v14 & 0x8000000000000000) == 0)
      {
        long long v19 = (void *)[v13 copy];
LABEL_23:

        goto LABEL_24;
      }
      uint64_t v20 = MEMORY[0x230FBD990](v18);
      long long v21 = objc_opt_class();
      long long v22 = HMFGetOSLogHandle();
      if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR))
      {
        long long v23 = HMFGetLogIdentifier();
        [v12 streamError];
        long long v24 = v31 = v20;
        *(_DWORD *)long long buf = 138543618;
        long long v34 = v23;
        __int16 v35 = 2112;
        unint64_t v36 = (unint64_t)v24;
        _os_log_impl(&dword_22F52A000, v22, OS_LOG_TYPE_ERROR, "%{public}@Error reading data from input stream: %@", buf, 0x16u);

        uint64_t v20 = v31;
      }

      long long v25 = (void *)v20;
    }
    else
    {
      while (1)
      {
        if (v3)
        {
          uint64_t v15 = [v13 length];
          uint64_t v16 = __CFADD__(v14, v15);
          uint64_t v17 = v16 << 63 >> 63;
          if (v17 != v16 || v17 < 0 || v14 + v15 > v3) {
            break;
          }
        }
        [v13 appendBytes:v37 length:v14];
        uint64_t v14 = [v12 read:v37 maxLength:4096];
        if (v14 <= 0) {
          goto LABEL_12;
        }
      }
      uint64_t v26 = MEMORY[0x230FBD990]([v12 close]);
      long long v27 = objc_opt_class();
      long long v28 = HMFGetOSLogHandle();
      if (os_log_type_enabled(v28, OS_LOG_TYPE_ERROR))
      {
        HMFGetLogIdentifier();
        v29 = uint64_t v32 = v26;
        *(_DWORD *)long long buf = 138543618;
        long long v34 = v29;
        __int16 v35 = 2048;
        unint64_t v36 = v3;
        _os_log_impl(&dword_22F52A000, v28, OS_LOG_TYPE_ERROR, "%{public}@Data from input stream has exceeded the maximum %lu bytes allowed", buf, 0x16u);

        uint64_t v26 = v32;
      }

      long long v25 = (void *)v26;
    }
    long long v19 = 0;
    goto LABEL_23;
  }
  long long v19 = 0;
LABEL_24:

LABEL_25:
  return v19;
}

id dataFromCKRecordRequiredField(void *a1, void *a2, void *a3)
{
  uint64_t v42 = *MEMORY[0x263EF8340];
  id v5 = a1;
  id v6 = a2;
  id v7 = [v5 objectForKeyedSubscript:v6];
  unint64_t v8 = v7;
  if (v7)
  {
    id v9 = v7;
    objc_opt_class();
    int v10 = objc_opt_isKindOfClass() & 1;
    if (v10) {
      unint64_t v11 = v9;
    }
    else {
      unint64_t v11 = 0;
    }
    id v12 = v11;

    long long v13 = (void *)MEMORY[0x230FBD990]();
    uint64_t v14 = objc_opt_class();
    uint64_t v15 = HMFGetOSLogHandle();
    uint64_t v16 = v15;
    if (v10)
    {
      if (os_log_type_enabled(v15, OS_LOG_TYPE_DEBUG))
      {
        uint64_t v17 = HMFGetLogIdentifier();
        uint64_t v18 = [v5 recordID];
        [v18 hmbDescription];
        long long v19 = v32 = v12;
        *(_DWORD *)long long buf = 138543874;
        __int16 v35 = v17;
        __int16 v36 = 2112;
        id v37 = v6;
        __int16 v38 = 2112;
        long long v39 = v19;
        _os_log_impl(&dword_22F52A000, v16, OS_LOG_TYPE_DEBUG, "%{public}@Reading '%@' NSData for record %@", buf, 0x20u);

        id v12 = v32;
      }

      id v20 = v9;
    }
    else
    {
      if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
      {
        HMFGetLogIdentifier();
        long long v27 = v31 = v13;
        long long v28 = [v5 recordID];
        [v28 hmbDescription];
        long long v29 = v33 = v12;
        *(_DWORD *)long long buf = 138544130;
        __int16 v35 = v27;
        __int16 v36 = 2112;
        id v37 = v6;
        __int16 v38 = 2112;
        long long v39 = v29;
        __int16 v40 = 2112;
        id v41 = v9;
        _os_log_impl(&dword_22F52A000, v16, OS_LOG_TYPE_ERROR, "%{public}@'%@' field is not a NSData on record %@: %@", buf, 0x2Au);

        id v12 = v33;
        long long v13 = v31;
      }

      if (a3)
      {
        [MEMORY[0x263F087E8] hmErrorWithCode:43];
        id v20 = 0;
        *a3 = (id)objc_claimAutoreleasedReturnValue();
      }
      else
      {
        id v20 = 0;
      }
    }
  }
  else
  {
    long long v21 = (void *)MEMORY[0x230FBD990]();
    long long v22 = objc_opt_class();
    long long v23 = HMFGetOSLogHandle();
    if (os_log_type_enabled(v23, OS_LOG_TYPE_ERROR))
    {
      long long v24 = HMFGetLogIdentifier();
      long long v25 = [v5 recordID];
      uint64_t v26 = [v25 hmbDescription];
      *(_DWORD *)long long buf = 138543874;
      __int16 v35 = v24;
      __int16 v36 = 2112;
      id v37 = v6;
      __int16 v38 = 2112;
      long long v39 = v26;
      _os_log_impl(&dword_22F52A000, v23, OS_LOG_TYPE_ERROR, "%{public}@Field '%@' does not exist on record %@", buf, 0x20u);
    }
    if (a3)
    {
      [MEMORY[0x263F087E8] hmErrorWithCode:43];
      id v20 = 0;
      *a3 = (id)objc_claimAutoreleasedReturnValue();
    }
    else
    {
      id v20 = 0;
    }
  }

  return v20;
}

id filePathFromCKRecordOptionalAssetField(void *a1, void *a2)
{
  uint64_t v38 = *MEMORY[0x263EF8340];
  id v3 = a1;
  id v4 = a2;
  id v5 = [v3 objectForKeyedSubscript:v4];
  id v6 = v5;
  if (v5)
  {
    id v7 = v5;
    objc_opt_class();
    int v8 = objc_opt_isKindOfClass() & 1;
    if (v8) {
      id v9 = v7;
    }
    else {
      id v9 = 0;
    }
    id v10 = v9;

    unint64_t v11 = (void *)MEMORY[0x230FBD990]();
    id v12 = objc_opt_class();
    long long v13 = HMFGetOSLogHandle();
    uint64_t v14 = v13;
    if (v8)
    {
      if (os_log_type_enabled(v13, OS_LOG_TYPE_DEBUG))
      {
        uint64_t v15 = HMFGetLogIdentifier();
        uint64_t v26 = [v3 recordID];
        uint64_t v16 = [v26 hmbDescription];
        [v7 fileURL];
        uint64_t v17 = v27 = v10;
        [v17 path];
        uint64_t v18 = v28 = v11;
        *(_DWORD *)long long buf = 138544130;
        uint64_t v31 = v15;
        __int16 v32 = 2112;
        id v33 = v4;
        __int16 v34 = 2112;
        __int16 v35 = v16;
        __int16 v36 = 2112;
        id v37 = v18;
        _os_log_impl(&dword_22F52A000, v14, OS_LOG_TYPE_DEBUG, "%{public}@Reading '%@' CKAsset for record %@ from %@", buf, 0x2Au);

        unint64_t v11 = v28;
        id v10 = v27;
      }
      long long v19 = [v7 fileURL];
      id v20 = [v19 path];
    }
    else
    {
      if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
      {
        HMFGetLogIdentifier();
        long long v29 = v11;
        v22 = id v21 = v10;
        long long v23 = [v3 recordID];
        long long v24 = [v23 hmbDescription];
        *(_DWORD *)long long buf = 138544130;
        uint64_t v31 = v22;
        __int16 v32 = 2112;
        id v33 = v4;
        __int16 v34 = 2112;
        __int16 v35 = v24;
        __int16 v36 = 2112;
        id v37 = v7;
        _os_log_impl(&dword_22F52A000, v14, OS_LOG_TYPE_ERROR, "%{public}@'%@' field is not a CKAsset on record %@: %@", buf, 0x2Au);

        id v10 = v21;
        unint64_t v11 = v29;
      }

      id v20 = 0;
    }
  }
  else
  {
    id v20 = 0;
  }

  return v20;
}

id createInputStreamWithFilePath(void *a1, void *a2)
{
  uint64_t v16 = *MEMORY[0x263EF8340];
  id v3 = a1;
  id v4 = [MEMORY[0x263EFF950] inputStreamWithFileAtPath:v3];
  id v5 = v4;
  if (v4)
  {
    id v6 = v4;
  }
  else
  {
    id v7 = (void *)MEMORY[0x230FBD990]();
    int v8 = objc_opt_class();
    id v9 = HMFGetOSLogHandle();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
    {
      id v10 = HMFGetLogIdentifier();
      int v12 = 138543618;
      long long v13 = v10;
      __int16 v14 = 2112;
      id v15 = v3;
      _os_log_impl(&dword_22F52A000, v9, OS_LOG_TYPE_ERROR, "%{public}@Failed to create input stream for file at path: %@", (uint8_t *)&v12, 0x16u);
    }
    if (a2)
    {
      *a2 = [MEMORY[0x263F087E8] hmErrorWithCode:52];
    }
  }

  return v5;
}

id stringFromCKRecord(void *a1, void *a2, void *a3, uint64_t a4, void *a5)
{
  uint64_t v55 = *MEMORY[0x263EF8340];
  id v8 = a1;
  id v9 = a2;
  id v10 = a3;
  if (!v10
    || (readDataFromCKRecordOptionalAssetField((uint64_t)v8), (uint64_t v11 = objc_claimAutoreleasedReturnValue()) == 0)
    || (int v12 = (void *)v11,
        id v13 = (id)[[NSString alloc] initWithData:v11 encoding:4],
        v12,
        !v13))
  {
    id v14 = v8;
    id v15 = v9;
    uint64_t v16 = [v14 objectForKeyedSubscript:v15];
    uint64_t v17 = v16;
    if (v16)
    {
      uint64_t v45 = a5;
      id v18 = v16;
      objc_opt_class();
      int v19 = objc_opt_isKindOfClass() & 1;
      id v20 = v19 ? v18 : 0;
      id v40 = v20;

      context = (void *)MEMORY[0x230FBD990]();
      id v21 = objc_opt_class();
      long long v22 = HMFGetOSLogHandle();
      long long v23 = v22;
      if (v19)
      {
        if (os_log_type_enabled(v22, OS_LOG_TYPE_DEBUG))
        {
          HMFGetLogIdentifier();
          v24 = id v37 = v8;
          [v14 recordID];
          long long v25 = v42 = v9;
          uint64_t v26 = [v25 hmbDescription];
          *(_DWORD *)long long buf = 138543874;
          double v48 = v24;
          __int16 v49 = 2112;
          id v50 = v15;
          __int16 v51 = 2112;
          double v52 = v26;
          _os_log_impl(&dword_22F52A000, v23, OS_LOG_TYPE_DEBUG, "%{public}@Reading '%@' NSString for record %@", buf, 0x20u);

          id v9 = v42;
          id v8 = v37;
        }

        id v13 = v18;
        a5 = v45;
      }
      else
      {
        if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR))
        {
          id v33 = HMFGetLogIdentifier();
          uint64_t v38 = [v14 recordID];
          [v38 hmbDescription];
          __int16 v34 = v44 = v9;
          *(_DWORD *)long long buf = 138544130;
          double v48 = v33;
          __int16 v49 = 2112;
          id v50 = v15;
          __int16 v51 = 2112;
          double v52 = v34;
          __int16 v53 = 2112;
          id v54 = v18;
          _os_log_impl(&dword_22F52A000, v23, OS_LOG_TYPE_ERROR, "%{public}@'%@' field is not a NSData on record %@: %@", buf, 0x2Au);

          id v9 = v44;
        }

        a5 = v45;
        if (v45)
        {
          [MEMORY[0x263F087E8] hmErrorWithCode:43];
          id v13 = 0;
          *uint64_t v45 = (id)objc_claimAutoreleasedReturnValue();
        }
        else
        {
          id v13 = 0;
        }
      }
    }
    else
    {
      id v43 = v9;
      id v27 = (void *)MEMORY[0x230FBD990]();
      long long v28 = objc_opt_class();
      long long v29 = HMFGetOSLogHandle();
      if (os_log_type_enabled(v29, OS_LOG_TYPE_ERROR))
      {
        HMFGetLogIdentifier();
        long long v30 = v46 = a5;
        uint64_t v31 = [v14 recordID];
        [v31 hmbDescription];
        __int16 v32 = v41 = v27;
        *(_DWORD *)long long buf = 138543874;
        double v48 = v30;
        __int16 v49 = 2112;
        id v50 = v15;
        __int16 v51 = 2112;
        double v52 = v32;
        _os_log_impl(&dword_22F52A000, v29, OS_LOG_TYPE_ERROR, "%{public}@Field '%@' does not exist on record %@", buf, 0x20u);

        id v27 = v41;
        a5 = v46;
      }

      if (a5)
      {
        [MEMORY[0x263F087E8] hmErrorWithCode:43];
        id v13 = 0;
        *a5 = (id)objc_claimAutoreleasedReturnValue();
      }
      else
      {
        id v13 = 0;
      }
      id v9 = v43;
    }

    if (!v13) {
      goto LABEL_29;
    }
  }
  if ([v13 length])
  {
    id v13 = v13;
    __int16 v35 = v13;
    goto LABEL_30;
  }
  if (a5)
  {
    [MEMORY[0x263F087E8] hmErrorWithCode:51];
    __int16 v35 = 0;
    *a5 = (id)objc_claimAutoreleasedReturnValue();
  }
  else
  {
LABEL_29:
    __int16 v35 = 0;
  }
LABEL_30:

  return v35;
}

void sub_22FB5E110(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FB5E278(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FB5E40C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FB5E5B4(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FB5E71C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FB5E8C4(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FB5EA2C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

uint64_t significantEventReasonFromVideoAnalyzerEventClass(void *a1)
{
  uint64_t v10 = *MEMORY[0x263EF8340];
  if (([a1 isEqual:objc_opt_class()] & 1) != 0
    || ([a1 isEqual:objc_opt_class()] & 1) != 0)
  {
    return 2;
  }
  if ([a1 isEqual:objc_opt_class()]) {
    return 3;
  }
  if ([a1 isEqual:objc_opt_class()]) {
    return 4;
  }
  if ([a1 isEqual:objc_opt_class()]) {
    return 5;
  }
  if (([a1 isEqual:objc_opt_class()] & 1) == 0)
  {
    id v3 = (void *)MEMORY[0x230FBD990]();
    id v4 = HMFGetOSLogHandle();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    {
      id v5 = HMFGetLogIdentifier();
      int v6 = 138543618;
      id v7 = v5;
      __int16 v8 = 2112;
      id v9 = a1;
      _os_log_impl(&dword_22F52A000, v4, OS_LOG_TYPE_ERROR, "%{public}@Unknown video analyzer event class: %@", (uint8_t *)&v6, 0x16u);
    }
  }
  return 1;
}

void sub_22FB626D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va1, a7);
  va_start(va, a7);
  uint64_t v8 = va_arg(va1, void);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v11 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__81990(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__81991(uint64_t a1)
{
}

void sub_22FB62F64(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FB65448(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__82358(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__82359(uint64_t a1)
{
}

void __HMDNetworkRouterWANRulesFromHostNames_block_invoke(uint64_t a1, void *a2)
{
  if (*(void *)(a1 + 32)) {
    id v4 = [[HMDNetworkRouterWANICMPRule alloc] initWithHostDNSName:a2 hostIPStart:0 hostIPEnd:0 icmpTypes:*(void *)(a1 + 32)];
  }
  else {
    id v4 = [[HMDNetworkRouterWANPortRule alloc] initWithProtocol:*(void *)(a1 + 40) hostDNSName:a2 hostIPStart:0 hostIPEnd:0 hostPortStart:*(void *)(a1 + 48) hostPortEnd:*(void *)(a1 + 56)];
  }
  id v5 = v4;

  [*(id *)(a1 + 64) addObject:v5];
}

void __HMDNetworkRouterWANRulesFromAddresses_block_invoke(uint64_t a1, uint64_t a2)
{
  id v5 = +[HMDNetworkRouterIPAddress ipAddressFromRuleAddress:a2 allowWildcard:1];
  if (*(void *)(a1 + 32)) {
    id v3 = [[HMDNetworkRouterWANICMPRule alloc] initWithHostDNSName:0 hostIPStart:v5 hostIPEnd:0 icmpTypes:*(void *)(a1 + 32)];
  }
  else {
    id v3 = [[HMDNetworkRouterWANPortRule alloc] initWithProtocol:*(void *)(a1 + 40) hostDNSName:0 hostIPStart:v5 hostIPEnd:0 hostPortStart:*(void *)(a1 + 48) hostPortEnd:*(void *)(a1 + 56)];
  }
  id v4 = v3;
  [*(id *)(a1 + 64) addObject:v3];
}

HMDNetworkRouterLANIdentifierList *createIdentifierListFromLANRule(void *a1)
{
  uint64_t v1 = (objc_class *)MEMORY[0x263F35AF0];
  id v2 = a1;
  id v3 = (void *)[[v1 alloc] initWithValue:&unk_26E4714E8];
  id v4 = [MEMORY[0x263EFF980] arrayWithObject:v3];
  int v5 = [v2 areConnectionsWithOtherAccessoriesAllowed];

  if (v5)
  {
    int v6 = (void *)[objc_alloc(MEMORY[0x263F35AF0]) initWithValue:&unk_26E471530];
    [v4 addObject:v6];
  }
  id v7 = [[HMDNetworkRouterLANIdentifierList alloc] initWithIdentifiers:v4];

  return v7;
}

void sub_22FB69F08(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22FB6BE2C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22FB6CB00(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22FB6D044(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22FB6D638(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_22FB6EDDC(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FB71814(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t arraysEqualIgnoringOrder(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  uint64_t v5 = [v3 count];
  if (v5 == [v4 count])
  {
    int v6 = [MEMORY[0x263EFFA08] setWithArray:v3];
    id v7 = [MEMORY[0x263EFFA08] setWithArray:v4];
    uint64_t v8 = [v6 isEqualToSet:v7];
  }
  else
  {
    uint64_t v8 = 0;
  }

  return v8;
}

__CFString *HMDSleepConfigurationOperationStatusAsString(unint64_t a1)
{
  if (a1 >= 4)
  {
    objc_msgSend(NSString, "stringWithFormat:", @"Unknown HMDSleepConfigurationOperationStatus %ld", a1);
    uint64_t v1 = (__CFString *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    uint64_t v1 = off_264A1D498[a1];
  }
  return v1;
}

__CFString *HMDSleepConfigurationOperationTypeAsString(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) >= 4)
  {
    objc_msgSend(NSString, "stringWithFormat:", @"Unknown HMDSleepConfigurationOperationType %ld", a1);
    uint64_t v1 = (__CFString *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    uint64_t v1 = off_264A1D4B8[a1 - 1];
  }
  return v1;
}

void sub_22FB77628(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FB778C4(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FB77A70(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FB77C44(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FB80628(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__86996(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__86997(uint64_t a1)
{
}

void sub_22FB81D9C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FB820C4(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FB82A90(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FB82E78(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FB8656C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

uint64_t isAccessoryInDefaultGroup(void *a1)
{
  id v1 = a1;
  uint64_t v2 = [v1 defaultNetworkProtectionGroupUUID];
  if (v2)
  {
    id v3 = [v1 networkProtectionGroupUUID];
    uint64_t v4 = [v2 isEqual:v3];
  }
  else
  {
    uint64_t v4 = 0;
  }

  return v4;
}

void sub_22FB88B98(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FB88D14(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FB88F30(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FB8901C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FB891A4(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FB89340(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FB8AC84(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

uint64_t __HMDAccountAddHandle(void *a1, void *a2)
{
  uint64_t v19 = *MEMORY[0x263EF8340];
  id v3 = a1;
  id v4 = a2;
  if (v3
    && (os_unfair_lock_assert_owner((const os_unfair_lock *)v3 + 4),
        ([*((id *)v3 + 3) containsObject:v4] & 1) == 0))
  {
    int v6 = (void *)[*((id *)v3 + 3) mutableCopy];
    [v6 addObject:v4];
    uint64_t v7 = [v6 copy];
    uint64_t v8 = (void *)*((void *)v3 + 3);
    *((void *)v3 + 3) = v7;

    id v9 = (void *)MEMORY[0x230FBD990]();
    id v10 = v3;
    uint64_t v11 = HMFGetOSLogHandle();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
    {
      uint64_t v12 = HMFGetLogIdentifier();
      int v15 = 138543618;
      uint64_t v16 = v12;
      __int16 v17 = 2112;
      id v18 = v4;
      _os_log_impl(&dword_22F52A000, v11, OS_LOG_TYPE_INFO, "%{public}@Registering account handle: %@", (uint8_t *)&v15, 0x16u);
    }
    id v13 = +[HMDAccountRegistry sharedRegistry];
    [v13 addHandle:v4 toAccount:v10];

    uint64_t v5 = 1;
  }
  else
  {
    uint64_t v5 = 0;
  }

  return v5;
}

void __HMDAccountDidUpdateHandles(void *a1)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  id v1 = a1;
  if (v1)
  {
    uint64_t v2 = (void *)MEMORY[0x230FBD990]();
    id v3 = v1;
    id v4 = HMFGetOSLogHandle();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
    {
      uint64_t v5 = HMFGetLogIdentifier();
      int v7 = 138543362;
      uint64_t v8 = v5;
      _os_log_impl(&dword_22F52A000, v4, OS_LOG_TYPE_INFO, "%{public}@Handles updated", (uint8_t *)&v7, 0xCu);
    }
    int v6 = [MEMORY[0x263F08A00] defaultCenter];
    [v6 postNotificationName:@"HMDAccountHandlesUpdatedNotification" object:v3];
  }
}

uint64_t __HMDAccountAddDevice(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  uint64_t v5 = v4;
  uint64_t v6 = 0;
  if (v3 && v4)
  {
    os_unfair_lock_assert_owner((const os_unfair_lock *)v3 + 4);
    if ([*((id *)v3 + 4) containsObject:v5])
    {
      uint64_t v6 = 0;
    }
    else
    {
      [*((id *)v3 + 4) addObject:v5];
      uint64_t v6 = 1;
    }
  }

  return v6;
}

void __HMDAccountDidAddDevice(void *a1, void *a2)
{
  uint64_t v18 = *MEMORY[0x263EF8340];
  id v3 = a1;
  id v4 = a2;
  uint64_t v5 = v4;
  if (v3 && v4)
  {
    os_unfair_lock_assert_not_owner(v3 + 4);
    uint64_t v6 = (void *)MEMORY[0x230FBD990]();
    int v7 = v3;
    uint64_t v8 = HMFGetOSLogHandle();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
    {
      uint64_t v9 = HMFGetLogIdentifier();
      *(_DWORD *)long long buf = 138543618;
      int v15 = v9;
      __int16 v16 = 2112;
      __int16 v17 = v5;
      _os_log_impl(&dword_22F52A000, v8, OS_LOG_TYPE_INFO, "%{public}@Device added: %@", buf, 0x16u);
    }
    id v10 = [MEMORY[0x263F08A00] defaultCenter];
    uint64_t v12 = @"HMDDeviceNotificationKey";
    id v13 = v5;
    uint64_t v11 = [NSDictionary dictionaryWithObjects:&v13 forKeys:&v12 count:1];
    [v10 postNotificationName:@"HMDAccountAddedDeviceNotification" object:v7 userInfo:v11];
  }
}

void sub_22FB8B8B4(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

id __HMDAccountRemoveHandle(void *a1, void *a2)
{
  id v3 = a1;
  if (v3)
  {
    id v4 = a2;
    os_unfair_lock_assert_owner((const os_unfair_lock *)v3 + 4);
    uint64_t v5 = [*((id *)v3 + 3) member:v4];

    if (v5)
    {
      uint64_t v6 = (void *)[*((id *)v3 + 3) mutableCopy];
      [v6 removeObject:v5];
      uint64_t v7 = [v6 copy];
      uint64_t v8 = (void *)*((void *)v3 + 3);
      *((void *)v3 + 3) = v7;
    }
  }
  else
  {
    uint64_t v5 = 0;
  }

  return v5;
}

id __HMDAccountRemoveDevice(void *a1, void *a2)
{
  id v3 = a1;
  if (v3)
  {
    id v4 = a2;
    os_unfair_lock_assert_owner((const os_unfair_lock *)v3 + 4);
    uint64_t v5 = [*((id *)v3 + 4) member:v4];

    if (v5) {
      [*((id *)v3 + 4) removeObject:v5];
    }
  }
  else
  {
    uint64_t v5 = 0;
  }

  return v5;
}

void __HMDAccountDidRemoveDevice(void *a1, void *a2)
{
  uint64_t v17 = *MEMORY[0x263EF8340];
  id v3 = a1;
  id v4 = a2;
  if (v3)
  {
    os_unfair_lock_assert_not_owner(v3 + 4);
    uint64_t v5 = (void *)MEMORY[0x230FBD990]();
    uint64_t v6 = v3;
    uint64_t v7 = HMFGetOSLogHandle();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
    {
      uint64_t v8 = HMFGetLogIdentifier();
      *(_DWORD *)long long buf = 138543618;
      id v14 = v8;
      __int16 v15 = 2112;
      id v16 = v4;
      _os_log_impl(&dword_22F52A000, v7, OS_LOG_TYPE_INFO, "%{public}@Device removed: %@", buf, 0x16u);
    }
    uint64_t v9 = [MEMORY[0x263F08A00] defaultCenter];
    uint64_t v11 = @"HMDDeviceNotificationKey";
    id v12 = v4;
    id v10 = [NSDictionary dictionaryWithObjects:&v12 forKeys:&v11 count:1];
    [v9 postNotificationName:@"HMDAccountRemovedDeviceNotification" object:v6 userInfo:v10];
  }
}

void sub_22FB8C948(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FB8CA40(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FB8CD30(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FB8CEC8(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FB8CF58(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FB8D5DC(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FB8D680(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FB8D85C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FB8D958(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FB8DAF8(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FB8DD40(_Unwind_Exception *exception_object)
{
}

void sub_22FB90AF0(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 112));
  _Unwind_Resume(a1);
}

BOOL __lookupDeviceForRemoteCommands(void *a1, void *a2)
{
  uint64_t v23 = *MEMORY[0x263EF8340];
  id v3 = a1;
  id v4 = v3;
  if (a2)
  {
    uint64_t v5 = [v3 accessory];
    uint64_t v6 = [v5 home];
    if (v6)
    {
      id v7 = v4;
      id v8 = [v7 accessory];
      objc_opt_class();
      if (objc_opt_isKindOfClass()) {
        uint64_t v9 = v8;
      }
      else {
        uint64_t v9 = 0;
      }
      id v10 = v9;

      uint64_t v11 = [v10 device];
      BOOL v12 = v11 != 0;
      if (v11)
      {
        context = (void *)MEMORY[0x230FBD990]();
        id v18 = v7;
        id v13 = v7;
        id v14 = HMFGetOSLogHandle();
        if (os_log_type_enabled(v14, OS_LOG_TYPE_INFO))
        {
          id v16 = HMFGetLogIdentifier();
          *(_DWORD *)long long buf = 138543618;
          id v20 = v16;
          __int16 v21 = 2112;
          long long v22 = v11;
          _os_log_impl(&dword_22F52A000, v14, OS_LOG_TYPE_INFO, "%{public}@Routing the command to the device backing the media accessory %@", buf, 0x16u);
        }
        *a2 = v11;
        id v7 = v18;
      }
    }
    else
    {
      BOOL v12 = 0;
    }
  }
  else
  {
    BOOL v12 = 0;
  }

  return v12;
}

void sub_22FB91034(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22FB9120C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FB944BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__88870(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__88871(uint64_t a1)
{
}

__CFString *HMDLowPowerModeStateMachineDescription(unint64_t a1)
{
  if (a1 >= 5)
  {
    uint64_t v2 = NSString;
    id v3 = [NSNumber numberWithUnsignedInteger:a1];
    id v1 = [v2 stringWithFormat:@"Unknown (%@)", v3];
  }
  else
  {
    id v1 = off_264A1DC20[a1];
  }
  return v1;
}

id findMatchingCharacteristic(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = @"00000221-0000-1000-8000-0026BB765291";
  v9[0] = MEMORY[0x263EF8330];
  v9[1] = 3221225472;
  v9[2] = __findMatchingCharacteristic_block_invoke;
  v9[3] = &unk_264A1DC00;
  id v10 = v3;
  uint64_t v11 = @"00000221-0000-1000-8000-0026BB765291";
  uint64_t v5 = @"00000221-0000-1000-8000-0026BB765291";
  id v6 = v3;
  id v7 = objc_msgSend(a2, "hmf_objectPassingTest:", v9);

  return v7;
}

uint64_t __findMatchingCharacteristic_block_invoke(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_opt_class();
  if (objc_opt_isKindOfClass()) {
    id v4 = v3;
  }
  else {
    id v4 = 0;
  }
  id v5 = v4;
  id v6 = v5;
  if (v5)
  {
    id v7 = [v5 type];
    if ([v7 isEqualToString:*(void *)(a1 + 32)])
    {
      id v8 = [v6 service];
      uint64_t v9 = [v8 serviceType];
      uint64_t v10 = [v9 isEqualToString:*(void *)(a1 + 40)];
    }
    else
    {
      uint64_t v10 = 0;
    }
  }
  else
  {
    uint64_t v10 = 0;
  }

  return v10;
}

id deserializeObject(objc_class *a1, void *a2)
{
  uint64_t v22 = *MEMORY[0x263EF8340];
  id v3 = a2;
  objc_opt_class();
  if (objc_opt_isKindOfClass()) {
    id v4 = v3;
  }
  else {
    id v4 = 0;
  }
  id v5 = v4;

  if (v5 && [(objc_class *)a1 conformsToProtocol:&unk_26E4B1878])
  {
    id v6 = objc_alloc_init(a1);
    id v15 = 0;
    int v7 = [v6 parseFromData:v5 error:&v15];
    id v8 = v15;
    if (v8 || !v6 || !v7)
    {
      uint64_t v9 = (void *)MEMORY[0x230FBD990]();
      uint64_t v10 = HMFGetOSLogHandle();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
      {
        uint64_t v11 = HMFGetLogIdentifier();
        BOOL v12 = NSStringFromClass(a1);
        *(_DWORD *)long long buf = 138543874;
        uint64_t v17 = v11;
        __int16 v18 = 2112;
        uint64_t v19 = v12;
        __int16 v20 = 2112;
        id v21 = v8;
        _os_log_impl(&dword_22F52A000, v10, OS_LOG_TYPE_ERROR, "%{public}@Failed to create an object of class: %@ with error: %@", buf, 0x20u);
      }

      goto LABEL_15;
    }
  }
  else
  {
    id v6 = 0;
  }
  if (objc_opt_isKindOfClass())
  {
    id v6 = v6;
    id v13 = v6;
    goto LABEL_16;
  }
LABEL_15:
  id v13 = 0;
LABEL_16:

  return v13;
}

id HMDLowPowerModeOperationStatusDescription(unint64_t a1)
{
  id v1 = HMDSleepConfigurationOperationStatusAsString(a1);
  uint64_t v2 = [v1 stringByReplacingOccurrencesOfString:@"HMDSleepConfigurationOperationStatus" withString:&stru_26E2EB898];

  return v2;
}

id HMDLowPowerModeOperationTypeDescription(uint64_t a1)
{
  id v1 = HMDSleepConfigurationOperationTypeAsString(a1);
  uint64_t v2 = [v1 stringByReplacingOccurrencesOfString:@"HMDSleepConfigurationOperationType" withString:&stru_26E2EB898];

  return v2;
}

void sub_22FB9A0F4(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_22FB9A580(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

id HMDLowPowerModeWoWLANInfoForSupportedSleepConfiguration(void *a1)
{
  uint64_t v32 = *MEMORY[0x263EF8340];
  id v1 = a1;
  id v24 = [MEMORY[0x263EFF980] array];
  uint64_t v2 = [v1 version];
  id v3 = [v2 value];
  uint64_t v4 = [v3 unsignedCharValue];

  [v1 supportedWoLPacketConfigurations];
  long long v27 = 0u;
  long long v28 = 0u;
  long long v29 = 0u;
  long long v30 = 0u;
  id obj = (id)objc_claimAutoreleasedReturnValue();
  uint64_t v5 = [obj countByEnumeratingWithState:&v27 objects:v31 count:16];
  if (v5)
  {
    uint64_t v6 = v5;
    id v23 = v1;
    uint64_t v26 = 0;
    uint64_t v7 = *(void *)v28;
    do
    {
      for (uint64_t i = 0; i != v6; ++i)
      {
        if (*(void *)v28 != v7) {
          objc_enumerationMutation(obj);
        }
        uint64_t v9 = *(void **)(*((void *)&v27 + 1) + 8 * i);
        uint64_t v10 = objc_msgSend(v9, "wakePacketType", v23);
        uint64_t v11 = [v10 value];

        BOOL v12 = [v9 wakeDestinationPort];
        id v13 = [v12 value];
        uint64_t v14 = [v13 unsignedShortValue];

        id v15 = [v9 wakeDestinationAddress];
        id v16 = [v9 wakeType];
        uint64_t v17 = [v16 value];

        __int16 v18 = [v9 wakePattern];
        uint64_t v19 = [[HMFWoWLANInfo alloc] initWithWakeVersion:v4 wakePort:v14 wakeAddress:v15 wakeType:v17 wakePacketType:v11 wakePattern:v18];
        __int16 v20 = v19;
        if (v19)
        {
          if (v26 || [(HMFWoWLANInfo *)v19 wakeType] != 2) {
            [v24 addObject:v20];
          }
          else {
            uint64_t v26 = v20;
          }
        }
      }
      uint64_t v6 = [obj countByEnumeratingWithState:&v27 objects:v31 count:16];
    }
    while (v6);
    id v21 = v26;
    if (v26) {
      [v24 insertObject:v26 atIndex:0];
    }
    id v1 = v23;
  }
  else
  {
    id v21 = 0;
  }

  return v24;
}

void sub_22FB9A9D4(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_22FB9AB70(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_22FB9B028(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_22FB9B47C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_22FB9C35C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 72));
  _Unwind_Resume(a1);
}

void __HMDLowPowerModeUUIDFromAccessory_block_invoke()
{
  uint64_t v0 = [objc_alloc(MEMORY[0x263F08C38]) initWithUUIDString:@"CB66A944-B172-4D2F-A5B4-DCF2F9CFB9D4"];
  id v1 = (void *)HMDLowPowerModeUUIDFromAccessory_namespace;
  HMDLowPowerModeUUIDFromAccessory_namespace = v0;
}

void sub_22FB9E65C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  va_start(va, a17);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__89639(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__89640(uint64_t a1)
{
}

void sub_22FB9EA40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_22FB9ED1C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FB9EDA8(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FB9EE84(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FB9F044(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

HMCContext *__contextWithContextName(void *a1, void *a2)
{
  id v3 = a2;
  id v4 = a1;
  uint64_t v5 = (void *)[v4 newManagedObjectContext];
  uint64_t v6 = [v4 coordinator];

  [v5 setPersistentStoreCoordinator:v6];
  [v5 setName:v3];

  uint64_t v7 = +[HMDCoreDataContextTransactionAuthor firstPartyContextAuthor];
  id v8 = [v7 string];
  [v5 setTransactionAuthor:v8];

  [v5 setMergePolicy:*MEMORY[0x263EFF060]];
  uint64_t v9 = [HMCContext alloc];
  uint64_t v10 = objc_alloc_init(HMCPartition);
  uint64_t v11 = [(HMCContext *)v9 initWithContext:v5 partition:v10];

  return v11;
}

void sub_22FB9F26C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

uint64_t reasonFromResetSyncNotification(void *a1)
{
  id v1 = [a1 userInfo];
  uint64_t v2 = [v1 objectForKeyedSubscript:*MEMORY[0x263EFEFD0]];
  objc_opt_class();
  if (objc_opt_isKindOfClass()) {
    id v3 = v2;
  }
  else {
    id v3 = 0;
  }
  id v4 = v3;

  uint64_t v5 = [v4 unsignedIntegerValue];
  return v5;
}

__CFString *stringFromResetSyncReason(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) >= 7)
  {
    objc_msgSend(NSString, "stringWithFormat:", @"Unknown: %lu", a1);
    id v1 = (__CFString *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    id v1 = off_264A1DE98[a1 - 1];
  }
  return v1;
}

void sub_22FBA0138(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FBA1BE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
}

void sub_22FBA2C04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_22FBA6064(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 176), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__90045(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__90046(uint64_t a1)
{
}

void sub_22FBA66FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22FBA6A40(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22FBA6D74(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22FBA70C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22FBA73E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id entityFromObject(void *a1, int a2)
{
  uint64_t v100 = *MEMORY[0x263EF8340];
  id v3 = a1;
  id v4 = objc_alloc_init(MEMORY[0x263F64938]);
  uint64_t v5 = [v3 objectForKeyedSubscript:@"objectName"];
  [v4 setName:v5];

  uint64_t v6 = [v3 objectForKeyedSubscript:@"objectType"];
  [v4 setEntityType:v6];

  uint64_t v7 = NSURL;
  id v8 = [v3 objectForKeyedSubscript:@"objectIdentifier"];
  uint64_t v9 = [v7 URLWithString:v8];
  [v4 setIdentifier:v9];

  if (a2)
  {
    uint64_t v10 = objc_msgSend(v3, "hmf_arrayForKey:", @"objectRelatedIdentifiers");
    if ([v10 count])
    {
      uint64_t v11 = hmd_urlsFromStrings(v10);
      [v4 setRelatedEntityIdentifiers:v11];
    }
  }
  BOOL v12 = [v3 objectForKeyedSubscript:@"objectHome"];

  if (v12)
  {
    id v13 = [v3 objectForKeyedSubscript:@"objectHome"];
    [v4 setHome:v13];

    if (a2)
    {
      uint64_t v14 = NSURL;
      id v15 = [v3 objectForKeyedSubscript:@"objectHomeIdentifier"];
      id v16 = [v14 URLWithString:v15];
      [v4 setHomeIdentifier:v16];
    }
  }
  uint64_t v17 = [v3 objectForKeyedSubscript:@"objectRoom"];

  if (v17)
  {
    __int16 v18 = [v3 objectForKeyedSubscript:@"objectRoom"];
    [v4 setRoom:v18];

    if (!a2) {
      goto LABEL_20;
    }
    uint64_t v19 = NSURL;
    __int16 v20 = [v3 objectForKeyedSubscript:@"objectRoomIdentifier"];
    id v21 = [v19 URLWithString:v20];
    [v4 setRoomIdentifier:v21];
  }
  else if (!a2)
  {
    goto LABEL_20;
  }
  uint64_t v22 = [v3 objectForKeyedSubscript:@"objectZones"];

  if (v22)
  {
    id v23 = objc_msgSend(v3, "hmf_arrayForKey:", @"objectZones");
    id v24 = [v23 firstObject];
    [v4 setZone:v24];

    long long v25 = objc_msgSend(v3, "hmf_arrayForKey:", @"objectZoneIdentifiers");
    if ([v25 count])
    {
      uint64_t v26 = hmd_urlsFromStrings(v25);
      [v4 setZoneIdentifiers:v26];
    }
  }
  long long v27 = [v3 objectForKeyedSubscript:@"objectAccessoryPrimaryServiceIdentifier"];

  if (v27)
  {
    long long v28 = NSURL;
    long long v29 = [v3 objectForKeyedSubscript:@"objectAccessoryPrimaryServiceIdentifier"];
    long long v30 = [v28 URLWithString:v29];
    [v4 setPrimaryServiceIdentifier:v30];
  }
  uint64_t v31 = [v3 objectForKeyedSubscript:@"objectAccessory"];

  if (v31)
  {
    uint64_t v32 = [v3 objectForKeyedSubscript:@"objectAccessory"];
    [v4 setAccessory:v32];

    id v33 = NSURL;
    __int16 v34 = [v3 objectForKeyedSubscript:@"objectAccessoryIdentifier"];
    __int16 v35 = [v33 URLWithString:v34];
    [v4 setAccessoryIdentifier:v35];
  }
LABEL_20:
  __int16 v36 = [v3 objectForKeyedSubscript:@"objectType"];
  int v37 = [v36 isEqualToString:*MEMORY[0x263F655E0]];

  if (v37)
  {
    uint64_t v38 = [v3 objectForKeyedSubscript:@"objectSceneType"];
    long long v39 = mapToSiriSceneType(v38);
    [v4 setSceneType:v39];

    id v40 = [v3 objectForKeyedSubscript:@"objectStatus"];
    [v4 setStatus:v40];

    id v41 = [v3 objectForKeyedSubscript:@"objectSceneActions"];
    [v4 setSceneActions:v41];
  }
  id v42 = +[HMDHAPMetadata getSharedInstance];
  id v43 = [v3 objectForKeyedSubscript:@"objectServiceType"];
  id v44 = [v3 objectForKeyedSubscript:@"objectServiceSubType"];
  uint64_t v92 = v42;
  if (!v43)
  {
LABEL_41:
    if (!a2) {
      goto LABEL_44;
    }
    goto LABEL_42;
  }
  if (([v43 isEqual:*MEMORY[0x263F657C8]] & 1) == 0
    && ([v43 isEqual:*MEMORY[0x263F656E8]] & 1) == 0
    && ![v43 isEqual:*MEMORY[0x263F656D0]])
  {
    if ([v43 isEqualToString:*MEMORY[0x263F65758]])
    {
      id v50 = v4;
      __int16 v51 = v43;
    }
    else
    {
      double v52 = [v42 mapToAssistantServiceName:v43];
      [v4 setServiceType:v52];

      __int16 v53 = [v4 serviceType];

      if (v53) {
        goto LABEL_39;
      }
      __int16 v51 = (void *)*MEMORY[0x263F65710];
      id v50 = v4;
    }
    [v50 setServiceType:v51];
LABEL_39:
    if (v44) {
      [v4 setServiceSubType:v44];
    }
    goto LABEL_41;
  }
  [v4 setServiceType:v43];
  if (v44) {
    [v4 setServiceSubType:v44];
  }
  if (a2)
  {
    uint64_t v45 = getAttributeForMediaProfile(v4);
    [v4 setAttributes:v45];

    __int16 v46 = [v3 objectForKeyedSubscript:@"objectReference"];
    objc_opt_class();
    if (objc_opt_isKindOfClass()) {
      __int16 v47 = v46;
    }
    else {
      __int16 v47 = 0;
    }
    id v48 = v47;

    int v49 = [v48 isCurrentAccessory];
    id v42 = v92;
    if (v49) {
      [v4 setCurrentDevice:MEMORY[0x263EFFA88]];
    }
LABEL_42:
    id v54 = [v3 objectForKeyedSubscript:@"objectHashedRouteUID"];

    if (v54)
    {
      uint64_t v55 = [v3 objectForKeyedSubscript:@"objectHashedRouteUID"];
      [v4 setHashedRouteUID:v55];
    }
  }
LABEL_44:
  double v56 = [v3 objectForKeyedSubscript:@"objectCharacteristics"];
  uint64_t v57 = v56;
  if (a2 && v56)
  {
    uint64_t v85 = v44;
    uint64_t v86 = v43;
    int v87 = a2;
    uint64_t v88 = v3;
    uint64_t v89 = v4;
    uint64_t v58 = objc_msgSend(MEMORY[0x263EFF980], "arrayWithCapacity:", objc_msgSend(v56, "count"));
    id v42 = v92;
    uint64_t v91 = objc_msgSend(MEMORY[0x263EFF980], "arrayWithCapacity:", objc_msgSend(v57, "count"));
    long long v95 = 0u;
    long long v96 = 0u;
    long long v97 = 0u;
    long long v98 = 0u;
    id v83 = v57;
    id obj = v57;
    uint64_t v59 = [obj countByEnumeratingWithState:&v95 objects:v99 count:16];
    if (v59)
    {
      uint64_t v60 = v59;
      uint64_t v61 = *(void *)v96;
      do
      {
        for (uint64_t i = 0; i != v60; ++i)
        {
          if (*(void *)v96 != v61) {
            objc_enumerationMutation(obj);
          }
          uint64_t v63 = *(void *)(*((void *)&v95 + 1) + 8 * i);
          long long v64 = objc_msgSend(v42, "mapToAssistantCharacteristicName:", v63, v83);
          if (v64)
          {
            id v65 = [v42 mapReadCharacteristicFromAssistantName:v64];
            uint64_t v66 = [v42 getAliasedCharacteristicTypes:v65];
            if (([v58 containsObject:v64] & 1) == 0
              && (([v65 isEqualToString:v63] & 1) != 0
               || [v66 containsObject:v63]))
            {
              [v58 addObject:v64];
            }
            uint64_t v67 = [v42 mapWriteCharacteristicFromAssistantName:v64];
            uint64_t v68 = [v42 getAliasedCharacteristicTypes:v67];

            if (([v91 containsObject:v64] & 1) == 0
              && (([v67 isEqual:v63] & 1) != 0
               || [v68 containsObject:v63])
              && (HMFEqualObjects() & 1) == 0)
            {
              [v91 addObject:v64];
            }

            id v42 = v92;
          }
        }
        uint64_t v60 = [obj countByEnumeratingWithState:&v95 objects:v99 count:16];
      }
      while (v60);
    }

    id v43 = v86;
    id v3 = v88;
    id v4 = v89;
    if ([v86 isEqualToString:*MEMORY[0x263F0D780]])
    {
      long long v69 = [v88 objectForKeyedSubscript:@"objectReference"];
      objc_opt_class();
      if (objc_opt_isKindOfClass()) {
        uint64_t v70 = v69;
      }
      else {
        uint64_t v70 = 0;
      }
      id v71 = v70;

      id v72 = [v71 accessory];
      uint64_t v73 = [v72 lightProfiles];
      v93[0] = MEMORY[0x263EF8330];
      v93[1] = 3221225472;
      v93[2] = __entityFromObject_block_invoke;
      v93[3] = &unk_264A1E6A8;
      id v94 = v71;
      id v74 = v71;
      long long v75 = objc_msgSend((id)v73, "na_firstObjectPassingTest:", v93);

      id v76 = [v75 settings];
      LOBYTE(v73) = [v76 supportedFeatures];

      if (v73) {
        [v58 addObject:*MEMORY[0x263F65340]];
      }

      id v42 = v92;
    }
    a2 = v87;
    id v44 = v85;
    if (objc_msgSend(v58, "count", v83))
    {
      [v89 setAttributes:v58];
      if ([v91 count]) {
        [v89 setTargetAttributes:v91];
      }
    }

    uint64_t v57 = v84;
  }
  if (a2)
  {
    uint64_t v77 = [v3 objectForKey:@"objectGroups"];

    if (v77)
    {
      long long v78 = objc_msgSend(v3, "hmf_arrayForKey:", @"objectGroups");
      uint64_t v79 = [v78 firstObject];
      [v4 setServiceGroup:v79];

      id v80 = objc_msgSend(v3, "hmf_arrayForKey:", @"objectGroupIdentifiers");
      if ([v80 count])
      {
        id v81 = hmd_urlsFromStrings(v80);
        [v4 setServiceGroupIdentifiers:v81];
      }
      id v42 = v92;
    }
  }

  return v4;
}

id hmd_urlsFromStrings(void *a1)
{
  uint64_t v32 = *MEMORY[0x263EF8340];
  id v1 = a1;
  uint64_t v2 = objc_msgSend(MEMORY[0x263EFF980], "arrayWithCapacity:", objc_msgSend(v1, "count"));
  long long v23 = 0u;
  long long v24 = 0u;
  long long v25 = 0u;
  long long v26 = 0u;
  id v3 = v1;
  uint64_t v4 = [v3 countByEnumeratingWithState:&v23 objects:v31 count:16];
  if (v4)
  {
    uint64_t v6 = v4;
    uint64_t v7 = *(void *)v24;
    unint64_t v8 = 0x263EFF000uLL;
    *(void *)&long long v5 = 138543618;
    long long v21 = v5;
    do
    {
      uint64_t v9 = 0;
      uint64_t v22 = v6;
      do
      {
        if (*(void *)v24 != v7) {
          objc_enumerationMutation(v3);
        }
        uint64_t v10 = *(void *)(*((void *)&v23 + 1) + 8 * v9);
        uint64_t v11 = objc_msgSend(*(id *)(v8 + 2608), "URLWithString:", v10, v21);
        if (v11)
        {
          [v2 addObject:v11];
        }
        else
        {
          BOOL v12 = (void *)MEMORY[0x230FBD990]();
          id v13 = HMFGetOSLogHandle();
          if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
          {
            HMFGetLogIdentifier();
            uint64_t v14 = v7;
            unint64_t v15 = v8;
            id v16 = v2;
            __int16 v18 = v17 = v3;
            *(_DWORD *)long long buf = v21;
            long long v28 = v18;
            __int16 v29 = 2112;
            uint64_t v30 = v10;
            _os_log_impl(&dword_22F52A000, v13, OS_LOG_TYPE_ERROR, "%{public}@Unable to map NSString '%@' to NSURL", buf, 0x16u);

            id v3 = v17;
            uint64_t v2 = v16;
            unint64_t v8 = v15;
            uint64_t v7 = v14;
            uint64_t v6 = v22;
          }
        }

        ++v9;
      }
      while (v6 != v9);
      uint64_t v6 = [v3 countByEnumeratingWithState:&v23 objects:v31 count:16];
    }
    while (v6);
  }

  uint64_t v19 = (void *)[v2 copy];
  return v19;
}

id mapToSiriSceneType(void *a1)
{
  id v1 = a1;
  id v2 = (id)*MEMORY[0x263F65630];
  if ([v1 isEqualToString:*MEMORY[0x263F0B960]])
  {
    id v3 = (id *)MEMORY[0x263F65610];
  }
  else if ([v1 isEqualToString:*MEMORY[0x263F0B938]])
  {
    id v3 = (id *)MEMORY[0x263F65618];
  }
  else if ([v1 isEqualToString:*MEMORY[0x263F0B908]])
  {
    id v3 = (id *)MEMORY[0x263F65620];
  }
  else
  {
    if (![v1 isEqualToString:*MEMORY[0x263F0B918]]) {
      goto LABEL_10;
    }
    id v3 = (id *)MEMORY[0x263F65628];
  }
  id v4 = *v3;

  id v2 = v4;
LABEL_10:

  return v2;
}

id getAttributeForMediaProfile(void *a1)
{
  id v1 = a1;
  if (getAttributeForMediaProfile_onceToken != -1) {
    dispatch_once(&getAttributeForMediaProfile_onceToken, &__block_literal_global_91976);
  }
  id v2 = [v1 serviceType];
  id v3 = [v1 serviceSubType];
  if (v2)
  {
    id v4 = [v1 entityType];
    int v5 = [v4 isEqualToString:*MEMORY[0x263F655E8]];

    if (v5)
    {
      if ([v2 isEqualToString:*MEMORY[0x263F656E8]])
      {
        uint64_t v6 = &getAttributeForMediaProfile_atvAttributes;
LABEL_15:
        id v8 = (id)*v6;
        goto LABEL_17;
      }
      uint64_t v7 = *MEMORY[0x263F657C8];
      if ([v2 isEqualToString:*MEMORY[0x263F657C8]]
        && ([v3 isEqualToString:*MEMORY[0x263F65678]] & 1) != 0)
      {
        uint64_t v6 = &getAttributeForMediaProfile_homePodAttributes;
        goto LABEL_15;
      }
      if ([v2 isEqualToString:*MEMORY[0x263F656D0]]
        && ([v3 isEqualToString:*MEMORY[0x263F65638]] & 1) != 0
        || [v2 isEqualToString:v7]
        && [v3 isEqualToString:*MEMORY[0x263F65638]])
      {
        uint64_t v6 = &getAttributeForMediaProfile_thirdPartyAttributes;
        goto LABEL_15;
      }
    }
  }
  id v8 = 0;
LABEL_17:

  return v8;
}

uint64_t __entityFromObject_block_invoke(uint64_t a1, void *a2)
{
  id v2 = *(void **)(a1 + 32);
  id v3 = [a2 service];
  uint64_t v4 = [v2 isEqual:v3];

  return v4;
}

void __getAttributeForMediaProfile_block_invoke()
{
  v9[2] = *MEMORY[0x263EF8340];
  uint64_t v0 = *MEMORY[0x263F65478];
  v9[0] = *MEMORY[0x263F654C0];
  v9[1] = v0;
  uint64_t v1 = [MEMORY[0x263EFF8C0] arrayWithObjects:v9 count:2];
  id v2 = (void *)getAttributeForMediaProfile_atvAttributes;
  getAttributeForMediaProfile_atvAttributes = v1;

  uint64_t v8 = v0;
  uint64_t v3 = [MEMORY[0x263EFF8C0] arrayWithObjects:&v8 count:1];
  uint64_t v4 = (void *)getAttributeForMediaProfile_homePodAttributes;
  getAttributeForMediaProfile_homePodAttributes = v3;

  uint64_t v7 = v0;
  uint64_t v5 = [MEMORY[0x263EFF8C0] arrayWithObjects:&v7 count:1];
  uint64_t v6 = (void *)getAttributeForMediaProfile_thirdPartyAttributes;
  getAttributeForMediaProfile_thirdPartyAttributes = v5;
}

id entityForService(void *a1, void *a2, void *a3, int a4)
{
  uint64_t v28 = *MEMORY[0x263EF8340];
  id v7 = a1;
  id v8 = a2;
  long long v23 = 0u;
  long long v24 = 0u;
  long long v25 = 0u;
  long long v26 = 0u;
  id v9 = a3;
  uint64_t v10 = [v9 countByEnumeratingWithState:&v23 objects:v27 count:16];
  if (v10)
  {
    uint64_t v11 = v10;
    int v21 = a4;
    id v22 = v8;
    uint64_t v12 = *(void *)v24;
    while (2)
    {
      for (uint64_t i = 0; i != v11; ++i)
      {
        if (*(void *)v24 != v12) {
          objc_enumerationMutation(v9);
        }
        uint64_t v14 = *(void **)(*((void *)&v23 + 1) + 8 * i);
        unint64_t v15 = [v14 objectForKeyedSubscript:@"objectIdentifier"];
        id v16 = [v7 urlString];
        int v17 = [v16 isEqual:v15];

        if (v17)
        {
          uint64_t v19 = entityFromObject(v14, v21);
          __int16 v18 = v19;
          id v8 = v22;
          if (v22) {
            [v19 setServiceType:v22];
          }

          goto LABEL_14;
        }
      }
      uint64_t v11 = [v9 countByEnumeratingWithState:&v23 objects:v27 count:16];
      if (v11) {
        continue;
      }
      break;
    }
    __int16 v18 = 0;
    id v8 = v22;
  }
  else
  {
    __int16 v18 = 0;
  }
LABEL_14:

  return v18;
}

id entityForMediaProfile(void *a1, void *a2, int a3)
{
  uint64_t v23 = *MEMORY[0x263EF8340];
  id v5 = a1;
  long long v18 = 0u;
  long long v19 = 0u;
  long long v20 = 0u;
  long long v21 = 0u;
  id v6 = a2;
  uint64_t v7 = [v6 countByEnumeratingWithState:&v18 objects:v22 count:16];
  if (v7)
  {
    uint64_t v8 = v7;
    int v17 = a3;
    uint64_t v9 = *(void *)v19;
    while (2)
    {
      for (uint64_t i = 0; i != v8; ++i)
      {
        if (*(void *)v19 != v9) {
          objc_enumerationMutation(v6);
        }
        uint64_t v11 = *(void **)(*((void *)&v18 + 1) + 8 * i);
        uint64_t v12 = [v11 objectForKeyedSubscript:@"objectIdentifier"];
        id v13 = [v5 urlString];
        char v14 = [v13 isEqual:v12];

        if (v14)
        {
          unint64_t v15 = entityFromObject(v11, v17);

          goto LABEL_11;
        }
      }
      uint64_t v8 = [v6 countByEnumeratingWithState:&v18 objects:v22 count:16];
      if (v8) {
        continue;
      }
      break;
    }
  }
  unint64_t v15 = 0;
LABEL_11:

  return v15;
}

void __HMDHomeDataCopyProperties(void *a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  id v54 = a1;
  id v6 = [v5 homes];
  uint64_t v7 = [v6 copyWithZone:a3];
  uint64_t v8 = (void *)v54[2];
  v54[2] = v7;

  uint64_t v9 = [v5 accessories];
  uint64_t v10 = [v9 copyWithZone:a3];
  uint64_t v11 = (void *)v54[3];
  v54[3] = v10;

  uint64_t v12 = [v5 primaryHomeUUID];
  uint64_t v13 = [v12 copyWithZone:a3];
  char v14 = (void *)v54[4];
  v54[4] = v13;

  unint64_t v15 = [v5 lastCurrentHomeUUID];
  uint64_t v16 = [v15 copyWithZone:a3];
  int v17 = (void *)v54[5];
  v54[5] = v16;

  v54[7] = [v5 schemaVersion];
  v54[6] = [v5 dataVersion];
  v54[8] = [v5 recoveryVersion];
  long long v18 = [v5 dataTag];
  uint64_t v19 = [v18 copyWithZone:a3];
  long long v20 = (void *)v54[9];
  v54[9] = v19;

  long long v21 = [v5 UUIDsOfRemovedHomes];
  uint64_t v22 = [v21 copyWithZone:a3];
  uint64_t v23 = (void *)v54[10];
  v54[10] = v22;

  long long v24 = [v5 cloudZones];
  uint64_t v25 = [v24 copyWithZone:a3];
  long long v26 = (void *)v54[11];
  v54[11] = v25;

  long long v27 = [v5 incomingInvitations];
  uint64_t v28 = [v27 copyWithZone:a3];
  __int16 v29 = (void *)v54[12];
  v54[12] = v28;

  uint64_t v30 = [v5 currentDevice];
  uint64_t v31 = [v30 copyWithZone:a3];
  uint64_t v32 = (void *)v54[13];
  v54[13] = v31;

  id v33 = [v5 pendingReasonSaved];
  uint64_t v34 = [v33 copyWithZone:a3];
  __int16 v35 = (void *)v54[14];
  v54[14] = v34;

  __int16 v36 = [v5 pendingUserManagementOperations];
  uint64_t v37 = [v36 copyWithZone:a3];
  uint64_t v38 = (void *)v54[15];
  v54[15] = v37;

  long long v39 = [v5 unprocessedOperationIdentifiers];
  uint64_t v40 = [v39 copyWithZone:a3];
  id v41 = (void *)v54[16];
  v54[16] = v40;

  id v42 = [v5 applicationData];
  uint64_t v43 = [v42 copyWithZone:a3];
  id v44 = (void *)v54[17];
  v54[17] = v43;

  v54[18] = [v5 residentEnabledState];
  uint64_t v45 = [v5 account];
  __int16 v46 = (void *)v54[19];
  v54[19] = v45;

  __int16 v47 = [v5 remoteAccounts];
  uint64_t v48 = [v47 copyWithZone:a3];
  int v49 = (void *)v54[20];
  v54[20] = v48;

  uint64_t v50 = [v5 primaryAccountHandle];
  __int16 v51 = (void *)v54[21];
  v54[21] = v50;

  *((unsigned char *)v54 + _Block_object_dispose(&STACK[0x368], 8) = [v5 accessAllowedWhenLocked];
  uint64_t v52 = [v5 demoAccessories];
  __int16 v53 = (void *)v54[22];
  v54[22] = v52;

  LOBYTE(a3) = [v5 demoFinalized];
  *((unsigned char *)v54 + 9) = a3;
}

void sub_22FBB89D0(_Unwind_Exception *a1)
{
}

void sub_22FBB9F60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__92916(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__92917(uint64_t a1)
{
}

void sub_22FBBA5FC(_Unwind_Exception *a1)
{
}

void sub_22FBC0760(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v15 - 176), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__93594(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__93595(uint64_t a1)
{
}

void sub_22FBC10F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_22FBC1A28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_22FBC48C4(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FBC52D0(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FBC5840(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, os_unfair_lock_t lock)
{
}

void sub_22FBC5E08(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FBC6034(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FBC9940(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
}

uint64_t __Block_byref_object_copy__94415(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__94416(uint64_t a1)
{
}

void sub_22FBCA420(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,char a37)
{
}

void sub_22FBCA978(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_22FBCC108(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__94718(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__94719(uint64_t a1)
{
}

id anonymizeUnknownVendorString(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    if (anonymizeUnknownVendorString_onceToken != -1) {
      dispatch_once(&anonymizeUnknownVendorString_onceToken, &__block_literal_global_96271);
    }
    if (([(id)anonymizeUnknownVendorString_allowedNames containsObject:v1] & 1) != 0
      || (unint64_t)[v1 length] <= 2)
    {
      id v3 = v1;
    }
    else
    {
      id v2 = [v1 substringToIndex:2];
      id v3 = [@"unknown: " stringByAppendingString:v2];
    }
  }
  else
  {
    id v3 = 0;
  }

  return v3;
}

void __anonymizeUnknownVendorString_block_invoke()
{
  uint64_t v0 = (void *)anonymizeUnknownVendorString_allowedNames;
  anonymizeUnknownVendorString_allowedNames = (uint64_t)&unk_26E474110;
}

uint64_t HMDManagedObjectClassIsBSORepresentable(uint64_t a1)
{
  if (HMDManagedObjectClassIsBSORepresentable__hmf_once_t2 != -1) {
    dispatch_once(&HMDManagedObjectClassIsBSORepresentable__hmf_once_t2, &__block_literal_global_47_96770);
  }
  id v2 = (void *)HMDManagedObjectClassIsBSORepresentable__hmf_once_v3;
  return [v2 classConforms:a1];
}

void __HMDManagedObjectClassIsBSORepresentable_block_invoke()
{
  uint64_t v0 = [[HMCConformanceCache alloc] initWithProtocol:&unk_26E480F60];
  id v1 = (void *)HMDManagedObjectClassIsBSORepresentable__hmf_once_v3;
  HMDManagedObjectClassIsBSORepresentable__hmf_once_id v3 = (uint64_t)v0;
}

void sub_22FBE9E38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  va_start(va, a17);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t HMDModelClassIsCDRepresentable(uint64_t a1)
{
  if (HMDModelClassIsCDRepresentable__hmf_once_t0 != -1) {
    dispatch_once(&HMDModelClassIsCDRepresentable__hmf_once_t0, &__block_literal_global_96780);
  }
  id v2 = (void *)HMDModelClassIsCDRepresentable__hmf_once_v1;
  return [v2 classConforms:a1];
}

uint64_t __Block_byref_object_copy__96777(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__96778(uint64_t a1)
{
}

void __HMDModelClassIsCDRepresentable_block_invoke()
{
  uint64_t v0 = [[HMCConformanceCache alloc] initWithProtocol:&unk_26E482FC8];
  id v1 = (void *)HMDModelClassIsCDRepresentable__hmf_once_v1;
  HMDModelClassIsCDRepresentable__hmf_once_id v1 = (uint64_t)v0;
}

void sub_22FBEB770(_Unwind_Exception *a1)
{
}

id HMDCastIfManagedObjectBSORepresentable(void *a1)
{
  id v1 = a1;
  id v2 = v1;
  if (v1)
  {
    uint64_t v3 = objc_opt_class();
    if (HMDManagedObjectClassIsBSORepresentable(v3)) {
      id v1 = v2;
    }
    else {
      id v1 = 0;
    }
  }
  id v4 = v1;

  return v4;
}

id HMDCastIfModelCDRepresentable(void *a1)
{
  id v1 = a1;
  id v2 = v1;
  if (v1)
  {
    uint64_t v3 = objc_opt_class();
    if (HMDModelClassIsCDRepresentable(v3)) {
      id v1 = v2;
    }
    else {
      id v1 = 0;
    }
  }
  id v4 = v1;

  return v4;
}

void sub_22FBF0D04(_Unwind_Exception *a1)
{
}

uint64_t __Block_byref_object_copy__97764(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__97765(uint64_t a1)
{
}

void ___legacyMultiUserSettings_block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v13 = a2;
  id v5 = a3;
  id v6 = objc_alloc_init(HMDAnalyticsMultiUserSettingsValueByKeyPath);
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    id v7 = v13;
    if ([v7 isEqualToString:@"private.root.home.dismissedUserSplitMediaAccountWarning"])
    {
      uint64_t v8 = 2;
    }
    else if ([v7 isEqualToString:@"private.root.home.dismissedIdentifyVoiceOnboarding"])
    {
      uint64_t v8 = 4;
    }
    else if ([v7 isEqualToString:@"private.root.home.dismissedTVViewingProfileOnboarding"])
    {
      uint64_t v8 = 6;
    }
    else if ([v7 isEqualToString:@"private.root.home.dismissedTVViewingProfileSetupBanner"])
    {
      uint64_t v8 = 7;
    }
    else if ([v7 isEqualToString:@"private.root.home.dismissedCameraRecordingOnboarding"])
    {
      uint64_t v8 = 8;
    }
    else if ([v7 isEqualToString:@"private.root.home.dismissedCameraRecordingSetupBanner"])
    {
      uint64_t v8 = 9;
    }
    else if ([v7 isEqualToString:@"shared.root.siri.identifyVoice"])
    {
      uint64_t v8 = 10;
    }
    else if ([v7 isEqualToString:@"shared.root.music.playbackInfluencesForYou"])
    {
      uint64_t v8 = 11;
    }
    else
    {
      uint64_t v8 = [v7 isEqualToString:@"private.root.home.dismissedIdentifyVoiceSetupBanner"]? 5: 0;
    }

    [(HMDAnalyticsMultiUserSettingsValueByKeyPath *)v6 setType:v8];
    if ([(HMDAnalyticsMultiUserSettingsValueByKeyPath *)v6 type])
    {
      id v9 = v5;
      objc_opt_class();
      if (objc_opt_isKindOfClass()) {
        uint64_t v10 = v9;
      }
      else {
        uint64_t v10 = 0;
      }
      id v11 = v10;

      uint64_t v12 = [v11 longLongValue];
      [(HMDAnalyticsMultiUserSettingsValueByKeyPath *)v6 setMultiUserSettingsValueInteger:v12];
      [*(id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40) addObject:v6];
    }
  }
}

void sub_22FBF5CF0(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_22FBF6578(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22FBF8CE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 64), 8);
  _Unwind_Resume(a1);
}

void sub_22FBFB6D8(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FBFB840(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FBFBAE4(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FBFBC04(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FBFBC84(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FBFBE08(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FBFC000(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FBFC180(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FBFC20C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FBFC28C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FBFC3C8(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FBFD988(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,id location,id a24)
{
  objc_destroyWeak(v27);
  objc_destroyWeak(v26);
  objc_destroyWeak(v25);
  objc_destroyWeak(v24);
  objc_destroyWeak(&location);
  objc_destroyWeak(&a24);
  _Unwind_Resume(a1);
}

void sub_22FBFDE90(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FBFEDB0(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void __HMDCompanionManagerUpdateWithConnectedDevices(void *a1, void *a2)
{
  uint64_t v41 = *MEMORY[0x263EF8340];
  id v30 = a1;
  uint64_t v31 = a2;
  if (v30)
  {
    uint64_t v3 = (void *)MEMORY[0x230FBD990]();
    id v4 = (os_unfair_lock_s *)v30;
    id v5 = HMFGetOSLogHandle();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
    {
      id v6 = HMFGetLogIdentifier();
      *(_DWORD *)long long buf = 138543618;
      id v38 = v6;
      __int16 v39 = 2112;
      uint64_t v40 = v31;
      _os_log_impl(&dword_22F52A000, v5, OS_LOG_TYPE_INFO, "%{public}@Updating connected devices: %@", buf, 0x16u);
    }
    long long v34 = 0u;
    long long v35 = 0u;
    long long v32 = 0u;
    long long v33 = 0u;
    id v7 = v31;
    uint64_t v8 = [(HMDDevice *)v7 countByEnumeratingWithState:&v32 objects:v36 count:16];
    if (v8)
    {
      uint64_t v9 = *(void *)v33;
      while (2)
      {
        for (uint64_t i = 0; i != v8; ++i)
        {
          if (*(void *)v33 != v9) {
            objc_enumerationMutation(v7);
          }
          uint64_t v11 = *(void *)(*((void *)&v32 + 1) + 8 * i);
          if (+[HMDCompanionManager isCompatibleCompanionDevice:](HMDCompanionManager, "isCompatibleCompanionDevice:", v11, v30))
          {
            uint64_t v12 = [HMDDevice alloc];
            id v13 = [(os_unfair_lock_s *)v4 service];
            char v14 = [(HMDDevice *)v12 initWithService:v13 device:v11];

            if (v14)
            {
              uint64_t v19 = (void *)MEMORY[0x230FBD990]();
              long long v20 = v4;
              long long v21 = HMFGetOSLogHandle();
              if (os_log_type_enabled(v21, OS_LOG_TYPE_INFO))
              {
                uint64_t v22 = HMFGetLogIdentifier();
                *(_DWORD *)long long buf = 138543618;
                id v38 = v22;
                __int16 v39 = 2112;
                uint64_t v40 = v14;
                _os_log_impl(&dword_22F52A000, v21, OS_LOG_TYPE_INFO, "%{public}@Found connected companion device: %@", buf, 0x16u);
              }

              goto LABEL_19;
            }
          }
        }
        uint64_t v8 = [(HMDDevice *)v7 countByEnumeratingWithState:&v32 objects:v36 count:16];
        if (v8) {
          continue;
        }
        break;
      }
    }

    uint64_t v15 = (void *)MEMORY[0x230FBD990]();
    uint64_t v16 = v4;
    int v17 = HMFGetOSLogHandle();
    if (os_log_type_enabled(v17, OS_LOG_TYPE_INFO))
    {
      long long v18 = HMFGetLogIdentifier();
      *(_DWORD *)long long buf = 138543362;
      id v38 = v18;
      _os_log_impl(&dword_22F52A000, v17, OS_LOG_TYPE_INFO, "%{public}@No connected companion found", buf, 0xCu);
    }
    char v14 = 0;
LABEL_19:
    uint64_t v23 = v4 + 2;
    os_unfair_lock_lock_with_options();
    if (HMFEqualObjects())
    {
      os_unfair_lock_unlock(v4 + 2);
    }
    else
    {
      long long v24 = (void *)MEMORY[0x230FBD990]();
      uint64_t v25 = v4;
      HMFGetOSLogHandle();
      long long v26 = (id)objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v26, OS_LOG_TYPE_DEFAULT))
      {
        HMFGetLogIdentifier();
        id v27 = (id)objc_claimAutoreleasedReturnValue();
        uint64_t v28 = [(HMDDevice *)v14 shortDescription];
        *(_DWORD *)long long buf = 138543618;
        id v38 = v27;
        __int16 v39 = 2112;
        uint64_t v40 = v28;
        _os_log_impl(&dword_22F52A000, v26, OS_LOG_TYPE_DEFAULT, "%{public}@Updated companion to: %@", buf, 0x16u);
      }
      objc_storeStrong(v25 + 3, v14);
      os_unfair_lock_unlock(v23);
      __int16 v29 = [MEMORY[0x263F08A00] defaultCenter];
      [v29 postNotificationName:@"HMDCompanionManagerUpdatedCompanionNotification" object:v25];
    }
  }
}

void sub_22FC0127C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FC08808(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FC088F8(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FC08F2C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, os_unfair_lock_t lock)
{
}

void sub_22FC095B4(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FC09680(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FC09B98(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FC09C64(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FC0A6B0(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FC0A72C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FC0A7D8(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void __run(void *a1)
{
  uint64_t v1 = a1;
  id v2 = v1;
  switch(v1[19])
  {
    case 0:
      v1[19] = 1;
      goto LABEL_3;
    case 1:
LABEL_3:
      [v1 _requestUserPermission];
      goto LABEL_7;
    case 3:
      [v1 _configureDevice];
      goto LABEL_7;
    case 5:
      [v1 _waitForPostWACMatch];
      goto LABEL_7;
    case 6:
      [v1 _postWACMatchTimeout];
LABEL_7:
      uint64_t v1 = v2;
      break;
    default:
      break;
  }
}

void __callCompletion(void *a1, void *a2, void *a3, uint64_t a4)
{
  uint64_t v21 = *MEMORY[0x263EF8340];
  id v7 = a1;
  id v8 = a2;
  id v9 = a3;
  [v7[18] suspend];
  id v10 = v7[18];
  v7[18] = 0;

  id v11 = v7[20];
  v7[20] = 0;

  if (v7[17])
  {
    uint64_t v12 = (void *)MEMORY[0x230FBD990]();
    id v13 = v7;
    char v14 = HMFGetOSLogHandle();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v15 = HMFGetLogIdentifier();
      int v17 = 138543618;
      long long v18 = v15;
      __int16 v19 = 2080;
      uint64_t v20 = a4;
      _os_log_impl(&dword_22F52A000, v14, OS_LOG_TYPE_DEBUG, "%{public}@Calling completion from %s", (uint8_t *)&v17, 0x16u);
    }
    (*((void (**)(void))v13[17] + 2))();
    id v16 = v13[17];
    v13[17] = 0;
  }
}

void sub_22FC0B8CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
}

void sub_22FC0C33C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void sub_22FC0C87C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

__CFString *StringFromHMDResidentLocation(uint64_t a1)
{
  switch(a1)
  {
    case 100:
      id v2 = @"Unknown";
      break;
    case 200:
      id v2 = @"Away";
      break;
    case 300:
      id v2 = @"AtHome";
      break;
    default:
      objc_msgSend(NSString, "stringWithFormat:", @"Unknown type: %lu", a1);
      id v2 = (__CFString *)objc_claimAutoreleasedReturnValue();
      break;
  }
  return v2;
}

void sub_22FC10964(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22FC12224(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FC1299C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

__CFString *HMDXPCCounterTypeAsString(uint64_t a1)
{
  switch(a1)
  {
    case 2:
      uint64_t v1 = @"XPCSentNotifications";
      goto LABEL_7;
    case 1:
      uint64_t v1 = @"XPCErroredRequests";
      goto LABEL_7;
    case 0:
      uint64_t v1 = @"XPCAcceptedRequests";
LABEL_7:
      id v2 = v1;
      goto LABEL_9;
  }
  objc_msgSend(NSString, "stringWithFormat:", @"Unknown counter type:%lu", a1);
  uint64_t v1 = (__CFString *)objc_claimAutoreleasedReturnValue();
LABEL_9:
  return v1;
}

void sub_22FC148EC(_Unwind_Exception *exception_object)
{
}

void sub_22FC14A18(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FC14AA8(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FC16AAC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22FC16FD4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22FC17A14(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
}

id HMDSWAuthFeaturesToString(char a1)
{
  if (a1)
  {
    id v2 = [@"<" stringByAppendingString:@" HAP"];
    if ((a1 & 2) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  id v2 = @"<";
  if ((a1 & 2) != 0)
  {
LABEL_5:
    uint64_t v3 = [(__CFString *)v2 stringByAppendingString:@" HAPAirPlay2"];

    id v2 = (__CFString *)v3;
  }
LABEL_6:
  id v4 = [(__CFString *)v2 stringByAppendingString:@" >"];

  return v4;
}

void sub_22FC17F58(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id mirrorLegacyZone(void *a1, int a2, void *a3, void *a4, void *a5, uint64_t a6)
{
  id v11 = a1;
  id v12 = a4;
  id v13 = a5;
  char v14 = (objc_class *)MEMORY[0x263F492F8];
  id v15 = a3;
  id v16 = objc_alloc_init(v14);
  if (a2) {
    [v11 openOrCreatePrivateZoneWithID:v15 configuration:v16 delegate:0 error:a6];
  }
  else {
  int v17 = [v11 openExistingPrivateZoneWithID:v15 configuration:v16 delegate:0 error:a6];
  }

  if (v17)
  {
    long long v18 = [HMDLegacyModelContainer alloc];
    __int16 v19 = +[HMDHomeKitVersion currentVersion];
    uint64_t v20 = +[HMDHomeKitVersion currentVersion];
    uint64_t v21 = [(HMDLegacyModelContainer *)v18 initWithDataVersion:v19 legacyDataVersion:v20 pairingIdentity:v12];

    id v22 = objc_alloc_init(MEMORY[0x263F49308]);
    [v22 setCreateIfNeeded:1];
    [v22 setDelegate:v13];
    [v22 setModelContainer:v21];
    uint64_t v23 = [v11 localDatabase];
    long long v24 = [v23 openZoneWithMirror:v17 configuration:v22 error:a6];
  }
  else
  {
    long long v24 = 0;
  }

  return v24;
}

id DateFromEpochInterval(void *a1)
{
  if (a1)
  {
    id v2 = (void *)MEMORY[0x263EFF910];
    [a1 doubleValue];
    a1 = objc_msgSend(v2, "dateWithTimeIntervalSince1970:");
    uint64_t v1 = vars8;
  }
  return a1;
}

void sub_22FC28DB0(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FC2D128(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FC2D1D4(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FC2D388(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FC2D450(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FC2D510(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FC2D5D0(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FC2D9A8(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FC2DAAC(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FC2DDA4(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FC2DF34(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FC2DFAC(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FC2E048(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FC2ECB4(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void notifyMatterMetricPairingStep(void *a1, unint64_t a2)
{
  uint64_t v17 = *MEMORY[0x263EF8340];
  id v3 = a1;
  id v4 = (void *)MEMORY[0x230FBD990]();
  id v5 = v3;
  id v6 = HMFGetOSLogHandle();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
  {
    id v7 = HMFGetLogIdentifier();
    id v8 = HMDMatterAccessoryPairingStepAsString(a2);
    int v13 = 138543618;
    char v14 = v7;
    __int16 v15 = 2112;
    id v16 = v8;
    _os_log_impl(&dword_22F52A000, v6, OS_LOG_TYPE_INFO, "%{public}@Notifying matter metric pairing step %@", (uint8_t *)&v13, 0x16u);
  }
  id v9 = [MEMORY[0x263EFF9A0] dictionary];
  id v10 = [NSNumber numberWithUnsignedInteger:a2];
  [v9 setObject:v10 forKeyedSubscript:@"HMDMatterAccessoryPairingStepKey"];

  id v11 = [MEMORY[0x263F08A00] defaultCenter];
  id v12 = (void *)[v9 copy];
  [v11 postNotificationName:@"HMDMatterAccessoryUpdatePairingMetricNotification" object:0 userInfo:v12];
}

void notifyMatterMetricPairingEnded(void *a1, void *a2)
{
  uint64_t v22 = *MEMORY[0x263EF8340];
  id v3 = (void *)MEMORY[0x263F08A00];
  id v4 = a2;
  id v5 = a1;
  id v17 = [v3 defaultCenter];
  id v6 = v5;
  id v7 = v4;
  id v8 = (void *)MEMORY[0x230FBD990]();
  id v9 = v6;
  id v10 = HMFGetOSLogHandle();
  if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
  {
    id v11 = HMFGetLogIdentifier();
    *(_DWORD *)long long buf = 138543618;
    __int16 v19 = v11;
    __int16 v20 = 2112;
    id v21 = v7;
    _os_log_impl(&dword_22F52A000, v10, OS_LOG_TYPE_INFO, "%{public}@Notifying matter metric pairing ended %@", buf, 0x16u);
  }
  id v12 = [MEMORY[0x263EFF9A0] dictionary];
  [v12 setObject:MEMORY[0x263EFFA88] forKeyedSubscript:@"HMDMatterAccessoryPairingSubmitKey"];
  int v13 = [v7 step];
  [v12 setObject:v13 forKeyedSubscript:@"HMDMatterAccessoryPairingStepKey"];

  char v14 = [v7 error];
  [v12 setObject:v14 forKeyedSubscript:@"HMDMatterAccessoryPairingFailureErrorKey"];

  __int16 v15 = [v7 sourceErrorDomain];
  [v12 setObject:v15 forKeyedSubscript:@"HMDMatterAccessoryPairingSourceErrorDomain"];

  id v16 = (void *)[v12 copy];
  [v17 postNotificationName:@"HMDMatterAccessoryUpdatePairingMetricNotification" object:0 userInfo:v16];
}

void sub_22FC301B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22FC32874(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,char a35)
{
}

uint64_t __Block_byref_object_copy__107065(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__107066(uint64_t a1)
{
}

void sub_22FC33960(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_22FC36050(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location)
{
  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22FC368DC(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FC370D0(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FC384D0(_Unwind_Exception *a1)
{
}

void sub_22FC388BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,id location,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,char a41)
{
}

uint64_t __Block_byref_object_copy__107625(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__107626(uint64_t a1)
{
}

void sub_22FC3C274(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_22FC3F920(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22FC42824(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location, id a16)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  objc_destroyWeak(&a16);
  _Unwind_Resume(a1);
}

void sub_22FC44F14(_Unwind_Exception *a1)
{
}

void sub_22FC45014(_Unwind_Exception *a1)
{
}

void sub_22FC45114(_Unwind_Exception *a1)
{
}

void sub_22FC45214(_Unwind_Exception *a1)
{
}

void sub_22FC46170(_Unwind_Exception *a1)
{
}

void sub_22FC46504(_Unwind_Exception *a1)
{
}

void sub_22FC4A678(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FC4B198(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FC4B698(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void BFSTraverseGroupWithBlock(void *a1, void *a2)
{
  uint64_t v32 = *MEMORY[0x263EF8340];
  id v3 = a1;
  id v4 = a2;
  unint64_t v5 = 0x263EFF000uLL;
  id v6 = objc_alloc_init(MEMORY[0x263EFF980]);
  __int16 v20 = v3;
  [v6 addObject:v3];
  for (; [v6 count]; unint64_t v5 = 0x263EFF000)
  {
    id v7 = v6;
    id v6 = objc_alloc_init(*(Class *)(v5 + 2432));
    long long v26 = 0u;
    long long v27 = 0u;
    long long v28 = 0u;
    long long v29 = 0u;
    id obj = v7;
    uint64_t v8 = [obj countByEnumeratingWithState:&v26 objects:v31 count:16];
    if (v8)
    {
      uint64_t v9 = v8;
      uint64_t v10 = *(void *)v27;
      while (2)
      {
        uint64_t v11 = 0;
        do
        {
          if (*(void *)v27 != v10) {
            objc_enumerationMutation(obj);
          }
          id v12 = *(void **)(*((void *)&v26 + 1) + 8 * v11);
          long long v22 = 0u;
          long long v23 = 0u;
          long long v24 = 0u;
          long long v25 = 0u;
          int v13 = [v12 groups];
          uint64_t v14 = [v13 countByEnumeratingWithState:&v22 objects:v30 count:16];
          if (v14)
          {
            uint64_t v15 = v14;
            uint64_t v16 = *(void *)v23;
            do
            {
              uint64_t v17 = 0;
              do
              {
                if (*(void *)v23 != v16) {
                  objc_enumerationMutation(v13);
                }
                [v6 addObject:*(void *)(*((void *)&v22 + 1) + 8 * v17++)];
              }
              while (v15 != v17);
              uint64_t v15 = [v13 countByEnumeratingWithState:&v22 objects:v30 count:16];
            }
            while (v15);
          }

          long long v18 = [v12 settings];
          int v19 = v4[2](v4, v12, v18);

          if (!v19)
          {

            goto LABEL_20;
          }
          ++v11;
        }
        while (v11 != v9);
        uint64_t v9 = [obj countByEnumeratingWithState:&v26 objects:v31 count:16];
        if (v9) {
          continue;
        }
        break;
      }
    }
  }
LABEL_20:
}

uint64_t isReconfigurationPossible(void *a1)
{
  id v1 = a1;
  if ([v1 supportsWiFiReconfiguration]) {
    uint64_t v2 = [v1 isReachable];
  }
  else {
    uint64_t v2 = 0;
  }

  return v2;
}

id __modelIdentifierForURI(void *a1, void *a2)
{
  v14[2] = *MEMORY[0x263EF8340];
  id v3 = a1;
  id v4 = a2;
  if (__modelIdentifierForURI_onceToken != -1) {
    dispatch_once(&__modelIdentifierForURI_onceToken, &__block_literal_global_472);
  }
  unint64_t v5 = (void *)MEMORY[0x263F08C38];
  if (v4)
  {
    uint64_t v6 = __modelIdentifierForURI_namespace;
    id v7 = [v4 UUIDString];
    v14[0] = v7;
    uint64_t v8 = [v3 prefixedURI];
    v14[1] = v8;
    uint64_t v9 = [MEMORY[0x263EFF8C0] arrayWithObjects:v14 count:2];
    uint64_t v10 = objc_msgSend(v5, "hm_deriveUUIDFromBaseUUID:withSalts:", v6, v9);
  }
  else
  {
    id v11 = objc_alloc(MEMORY[0x263F08C38]);
    uint64_t v12 = __modelIdentifierForURI_namespace;
    id v7 = [v3 prefixedURI];
    uint64_t v8 = [v7 dataUsingEncoding:4];
    uint64_t v10 = (void *)[v11 initWithNamespace:v12 data:v8];
  }

  return v10;
}

void ____modelIdentifierForURI_block_invoke()
{
  uint64_t v0 = [objc_alloc(MEMORY[0x263F08C38]) initWithUUIDString:@"F48EA8E5-696C-4EA4-B767-16D13368CB16"];
  id v1 = (void *)__modelIdentifierForURI_namespace;
  __modelIdentifierForURI_namespace = v0;
}

void sub_22FC52C98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__110304(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__110305(uint64_t a1)
{
}

void ____identifierForURI_block_invoke()
{
  uint64_t v0 = [objc_alloc(MEMORY[0x263F08C38]) initWithUUIDString:@"297A1FDB-8A3E-443F-A8A8-1F3360785587"];
  id v1 = (void *)__identifierForURI_namespace;
  __identifierForURI_namespace = v0;
}

void sub_22FC569B0(_Unwind_Exception *a1)
{
}

void sub_22FC5C4D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22FC637F4(_Unwind_Exception *a1)
{
}

void sub_22FC6567C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FC65AA0(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FC66B9C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_unfair_lock_t lock)
{
}

void sub_22FC670E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, os_unfair_lock_t lock)
{
}

void sub_22FC673AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_unfair_lock_t lock)
{
}

void sub_22FC67CAC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_unfair_lock_t lock)
{
}

void sub_22FC68560(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

id Siri_log()
{
  if (Siri_log__hmf_once_t0 != -1) {
    dispatch_once(&Siri_log__hmf_once_t0, &__block_literal_global_112846);
  }
  uint64_t v0 = (void *)Siri_log__hmf_once_v1;
  return v0;
}

void sub_22FC71FDC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__113539(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__113540(uint64_t a1)
{
}

void sub_22FC7558C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FC75668(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FC75788(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void __computeInDegrees(void *a1, void *a2)
{
  uint64_t v28 = *MEMORY[0x263EF8340];
  id v3 = a1;
  id v4 = a2;
  unint64_t v5 = [v3 keyEnumerator];
  uint64_t v6 = [v5 nextObject];
  if (v6)
  {
    id v7 = (void *)v6;
    do
    {
      [v4 setObject:&unk_26E471830 forKey:v7];
      uint64_t v8 = [v5 nextObject];

      id v7 = (void *)v8;
    }
    while (v8);
  }

  id v21 = v3;
  long long v22 = [v3 objectEnumerator];
  uint64_t v9 = [v22 nextObject];
  if (v9)
  {
    uint64_t v10 = (void *)v9;
    do
    {
      long long v25 = 0u;
      long long v26 = 0u;
      long long v23 = 0u;
      long long v24 = 0u;
      id v11 = v10;
      uint64_t v12 = [v11 countByEnumeratingWithState:&v23 objects:v27 count:16];
      if (v12)
      {
        uint64_t v13 = v12;
        uint64_t v14 = *(void *)v24;
        do
        {
          uint64_t v15 = 0;
          do
          {
            if (*(void *)v24 != v14) {
              objc_enumerationMutation(v11);
            }
            uint64_t v16 = *(void **)(*((void *)&v23 + 1) + 8 * v15);
            id v17 = v4;
            id v18 = v16;
            int v19 = [v17 objectForKey:v18];
            __int16 v20 = objc_msgSend(NSNumber, "numberWithUnsignedInt:", objc_msgSend(v19, "unsignedIntValue") + 1);
            [v17 setObject:v20 forKey:v18];

            ++v15;
          }
          while (v13 != v15);
          uint64_t v13 = [v11 countByEnumeratingWithState:&v23 objects:v27 count:16];
        }
        while (v13);
      }

      uint64_t v10 = [v22 nextObject];
    }
    while (v10);
  }
}

void __decrementInDegree(void *a1, void *a2)
{
  id v3 = a2;
  id v4 = a1;
  unint64_t v5 = [v4 objectForKey:v3];
  int v6 = [v5 unsignedIntValue];

  id v7 = [NSNumber numberWithUnsignedInt:(v6 - 1)];
  [v4 setObject:v7 forKey:v3];
}

void sub_22FC77B9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_22FC78674(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22FC79728(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__114101(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__114102(uint64_t a1)
{
}

void sub_22FC7B958(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22FC7C594(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,id location)
{
  objc_destroyWeak(v25);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22FC805C4(_Unwind_Exception *a1)
{
}

id parseMediaSourceDisplayOrder(void *a1)
{
  uint64_t v19 = *MEMORY[0x263EF8340];
  id v1 = a1;
  objc_opt_class();
  if (objc_opt_isKindOfClass()) {
    uint64_t v2 = v1;
  }
  else {
    uint64_t v2 = 0;
  }
  id v3 = v2;

  if ([v3 length])
  {
    id v4 = v3;
    [v4 bytes];
    [v4 length];
    unint64_t v5 = [MEMORY[0x263EFF980] array];
    *(void *)&long long v6 = 138543618;
    long long v13 = v6;
    do
      uint64_t Next = TLV8GetNext();
    while (!Next);
    if (Next != -6727)
    {
      uint64_t v8 = (void *)MEMORY[0x230FBD990](Next);
      uint64_t v9 = HMFGetOSLogHandle();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
      {
        uint64_t v10 = HMFGetLogIdentifier();
        *(_DWORD *)long long buf = v13;
        uint64_t v16 = v10;
        __int16 v17 = 2112;
        id v18 = v4;
        _os_log_impl(&dword_22F52A000, v9, OS_LOG_TYPE_ERROR, "%{public}@TLV parsing failed - %@ - dropping", buf, 0x16u);
      }

      unint64_t v5 = 0;
    }
    id v11 = objc_msgSend(v5, "copy", v13, v14);
  }
  else
  {
    id v11 = (void *)MEMORY[0x263EFFA68];
  }

  return v11;
}

void sub_22FC8210C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32)
{
  _Block_object_dispose((const void *)(v32 - 192), 8);
  _Block_object_dispose(&a32, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__116043(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__116044(uint64_t a1)
{
}

void sub_22FC84090(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36)
{
}

void sub_22FC87DE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_22FC89874(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FC89BDC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Block_object_dispose((const void *)(v21 - 128), 8);
  _Unwind_Resume(a1);
}

void sub_22FC8B074(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,char a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,char a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,char a46)
{
}

void sub_22FC8B9C4(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FC8BBCC(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FC8C684(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FC8D134(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_22FC8E24C(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 24));
  _Unwind_Resume(a1);
}

void sub_22FC8EA58(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
}

void sub_22FC8EE58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
}

uint64_t __Block_byref_object_copy__116534(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__116535(uint64_t a1)
{
}

id _statisticsArrayFromDictionary(void *a1)
{
  uint64_t v1 = (void *)MEMORY[0x263EFF980];
  id v2 = a1;
  id v3 = [v1 array];
  v7[0] = MEMORY[0x263EF8330];
  v7[1] = 3221225472;
  v7[2] = ___statisticsArrayFromDictionary_block_invoke;
  v7[3] = &unk_264A1F808;
  id v8 = v3;
  id v4 = v3;
  [v2 enumerateKeysAndObjectsUsingBlock:v7];

  unint64_t v5 = (void *)[v4 copy];
  return v5;
}

void ___statisticsArrayFromDictionary_block_invoke(uint64_t a1, void *a2, void *a3)
{
  v16[5] = *MEMORY[0x263EF8340];
  id v4 = *(void **)(a1 + 32);
  v16[0] = a2;
  v15[0] = @"name";
  v15[1] = @"min";
  unint64_t v5 = NSNumber;
  id v6 = a3;
  id v7 = a2;
  id v8 = objc_msgSend(v5, "numberWithInteger:", objc_msgSend(v6, "minValue"));
  v16[1] = v8;
  v15[2] = @"max";
  uint64_t v9 = objc_msgSend(NSNumber, "numberWithInteger:", objc_msgSend(v6, "maxValue"));
  v16[2] = v9;
  v15[3] = @"average";
  uint64_t v10 = objc_msgSend(NSNumber, "numberWithInteger:", objc_msgSend(v6, "averageValue"));
  v16[3] = v10;
  void v15[4] = @"count";
  id v11 = NSNumber;
  uint64_t v12 = [v6 valueCount];

  long long v13 = [v11 numberWithInteger:v12];
  void v16[4] = v13;
  uint64_t v14 = [NSDictionary dictionaryWithObjects:v16 forKeys:v15 count:5];
  [v4 addObject:v14];
}

id _counterArrayFromDictionary(void *a1)
{
  uint64_t v1 = (void *)MEMORY[0x263EFF980];
  id v2 = a1;
  id v3 = [v1 array];
  v7[0] = MEMORY[0x263EF8330];
  v7[1] = 3221225472;
  v7[2] = ___counterArrayFromDictionary_block_invoke;
  v7[3] = &unk_264A29CC8;
  id v8 = v3;
  id v4 = v3;
  [v2 enumerateKeysAndObjectsUsingBlock:v7];

  unint64_t v5 = (void *)[v4 copy];
  return v5;
}

void ___counterArrayFromDictionary_block_invoke(uint64_t a1, void *a2, void *a3)
{
  v10[2] = *MEMORY[0x263EF8340];
  id v4 = *(void **)(a1 + 32);
  v9[0] = @"name";
  v9[1] = @"value";
  v10[0] = a2;
  v10[1] = a3;
  unint64_t v5 = NSDictionary;
  id v6 = a3;
  id v7 = a2;
  id v8 = [v5 dictionaryWithObjects:v10 forKeys:v9 count:2];
  [v4 addObject:v8];
}

void sub_22FC94C5C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FC94CF4(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FC96034(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FC979A8(_Unwind_Exception *a1)
{
}

void sub_22FC9BFC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__118308(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__118309(uint64_t a1)
{
}

BOOL HMDRemoteEventRouterProtoDisconnectMessageReadFrom(uint64_t a1)
{
  id v2 = (int *)MEMORY[0x263F62298];
  id v3 = (int *)MEMORY[0x263F62288];
  id v4 = (int *)MEMORY[0x263F62270];
  unint64_t v5 = (int *)MEMORY[0x263F62268];
  while (1)
  {
    int v6 = *(unsigned __int8 *)(a1 + *v4);
    if (*(void *)(a1 + *v2) >= *(void *)(a1 + *v3)) {
      return v6 == 0;
    }
    if (*(unsigned char *)(a1 + *v4))
    {
      int v6 = 1;
      return v6 == 0;
    }
    char v7 = 0;
    unsigned int v8 = 0;
    uint64_t v9 = 0;
    while (1)
    {
      uint64_t v10 = *v2;
      unint64_t v11 = *(void *)(a1 + v10);
      if (v11 == -1 || v11 >= *(void *)(a1 + *v3)) {
        break;
      }
      char v12 = *(unsigned char *)(*(void *)(a1 + *v5) + v11);
      *(void *)(a1 + v10) = v11 + 1;
      v9 |= (unint64_t)(v12 & 0x7F) << v7;
      if ((v12 & 0x80) == 0) {
        goto LABEL_12;
      }
      v7 += 7;
      if (v8++ >= 9)
      {
        LOBYTE(v9) = 0;
        int v6 = *(unsigned __int8 *)(a1 + *v4);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a1 + *v4) = 1;
LABEL_12:
    int v6 = *(unsigned __int8 *)(a1 + *v4);
    if (*(unsigned char *)(a1 + *v4)) {
      LOBYTE(v9) = 0;
    }
LABEL_14:
    if (v6) {
      BOOL v14 = 1;
    }
    else {
      BOOL v14 = (v9 & 7) == 4;
    }
    if (v14) {
      return v6 == 0;
    }
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      return 0;
    }
  }
}

void sub_22FCA23E0(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 128));
  _Unwind_Resume(a1);
}

void sub_22FCA5AAC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location)
{
  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22FCA68E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, id location)
{
  objc_destroyWeak(v13);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22FCA8958(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FCAC2D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__120668(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__120669(uint64_t a1)
{
}

void sub_22FCAC5A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_22FCAD1B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,id location,char a27)
{
  objc_destroyWeak(v29);
  objc_destroyWeak(v28);
  objc_destroyWeak(v27);
  objc_destroyWeak(&location);
  _Block_object_dispose(&a27, 8);
  _Block_object_dispose((const void *)(v30 - 128), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__120854(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__120855(uint64_t a1)
{
}

void sub_22FCAD7CC(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 112));
  _Unwind_Resume(a1);
}

void sub_22FCB00D4(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FCB0448(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  os_unfair_lock_unlock(v17);
  _Unwind_Resume(a1);
}

void sub_22FCB138C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FCB1408(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FCB1768(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FCB17E8(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FCB1864(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FCB3638(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__121238(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__121239(uint64_t a1)
{
}

void sub_22FCB5660(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FCB573C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FCBD060(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22FCBD54C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22FCBE00C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FCBE420(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FCBE758(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

uint64_t getAccessoryFirmwareUpdateActiveTransport(void *a1)
{
  id v1 = a1;
  if ([v1 isReachable])
  {
    if ([v1 isThreadTheCurrentlyActiveTransport])
    {
      uint64_t v2 = 4;
    }
    else if ([v1 hasBTLELink])
    {
      uint64_t v2 = 3;
    }
    else if ([v1 hasIPLink])
    {
      uint64_t v2 = 2;
    }
    else
    {
      uint64_t v2 = 1;
    }
  }
  else
  {
    uint64_t v2 = 1;
  }

  return v2;
}

void sub_22FCC1C4C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FCC34FC(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_22FCC3AFC(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_22FCC3E5C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_22FCC4770(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void __disconnectFromEndpoint(uint64_t a1)
{
  uint64_t v12 = *MEMORY[0x263EF8340];
  if (a1)
  {
    ExternalDevice = (const void *)MRAVEndpointGetExternalDevice();
    if (ExternalDevice)
    {
      id v3 = ExternalDevice;
      CFRetain(ExternalDevice);
      if (MRExternalDeviceGetConnectionState() == 3)
      {
        CFRelease(v3);
      }
      else
      {
        id v4 = (void *)MEMORY[0x230FBD990]();
        unint64_t v5 = HMFGetOSLogHandle();
        if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
        {
          int v6 = HMFGetLogIdentifier();
          int v8 = 138543618;
          uint64_t v9 = v6;
          __int16 v10 = 2112;
          uint64_t v11 = a1;
          _os_log_impl(&dword_22F52A000, v5, OS_LOG_TYPE_INFO, "%{public}@Resetting the connection state callback for endpoint %@", (uint8_t *)&v8, 0x16u);
        }
        char v7 = dispatch_get_global_queue(0, 0);
        MRExternalDeviceSetConnectionStateCallback();

        MRExternalDeviceDisconnect();
        CFRelease(v3);
      }
    }
  }
}

void sub_22FCC5518(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_22FCC584C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FCC58C0(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FCCE270(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FCCE300(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FCCE380(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FCD19F8(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FCD1A74(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

uint64_t __shouldAcceptMessage(void *a1, void *a2)
{
  uint64_t v16 = *MEMORY[0x263EF8340];
  id v3 = a1;
  id v4 = a2;
  unint64_t v5 = [v3 accessory];
  if ([v5 isCurrentAccessory] & 1) != 0 || (objc_msgSend(v5, "supportsFirmwareUpdate"))
  {
    uint64_t v6 = 1;
  }
  else
  {
    int v8 = (void *)MEMORY[0x230FBD990]();
    id v9 = v3;
    __int16 v10 = HMFGetOSLogHandle();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
    {
      uint64_t v11 = HMFGetLogIdentifier();
      int v14 = 138543362;
      uint64_t v15 = v11;
      _os_log_impl(&dword_22F52A000, v10, OS_LOG_TYPE_INFO, "%{public}@Cannot update state for other accessory", (uint8_t *)&v14, 0xCu);
    }
    uint64_t v6 = [v4 responseHandler];

    if (v6)
    {
      uint64_t v12 = [MEMORY[0x263F087E8] hmErrorWithCode:10];
      long long v13 = [v4 responseHandler];
      ((void (**)(void, void *, void))v13)[2](v13, v12, 0);

      uint64_t v6 = 0;
    }
  }

  return v6;
}

void sub_22FCD2F5C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void __registerDocumentationMetadata(void *a1, void *a2)
{
  uint64_t v19 = *MEMORY[0x263EF8340];
  id v3 = a1;
  id v4 = a2;
  if (v3)
  {
    unint64_t v5 = [v3 dataSource];
    uint64_t v6 = [v5 notificationCenterForSoftwareUpdate:v3];
    uint64_t v7 = [v6 removeObserver:v3 name:@"HMDSoftwareUpdateDocumentationAssetStateUpdatedNotification" object:0];
    if (v4)
    {
      int v8 = (void *)MEMORY[0x230FBD990](v7);
      id v9 = v3;
      __int16 v10 = HMFGetOSLogHandle();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
      {
        uint64_t v11 = HMFGetLogIdentifier();
        int v15 = 138543618;
        uint64_t v16 = v11;
        __int16 v17 = 2112;
        id v18 = v4;
        _os_log_impl(&dword_22F52A000, v10, OS_LOG_TYPE_INFO, "%{public}@Registering documentation metadata: %@", (uint8_t *)&v15, 0x16u);
      }
      uint64_t v12 = +[HMDSoftwareUpdateDocumentationManager sharedManager];
      [v12 registerDocumentationMetadata:v4];

      long long v13 = +[HMDSoftwareUpdateDocumentationManager sharedManager];
      int v14 = [v13 assetForDocumentationMetadata:v4];

      [v6 addObserver:v9 selector:sel__handleDocumentationStateNotification_ name:@"HMDSoftwareUpdateDocumentationAssetStateUpdatedNotification" object:v14];
    }
  }
}

void __unregisterDocumentationMetadata(void *a1, void *a2)
{
  uint64_t v17 = *MEMORY[0x263EF8340];
  id v3 = a1;
  id v4 = a2;
  unint64_t v5 = v4;
  if (v3 && v4)
  {
    uint64_t v6 = [v3 dataSource];
    uint64_t v7 = [v6 notificationCenterForSoftwareUpdate:v3];
    int v8 = (void *)MEMORY[0x230FBD990]([v7 removeObserver:v3 name:@"HMDSoftwareUpdateDocumentationAssetStateUpdatedNotification" object:0]);
    id v9 = v3;
    __int16 v10 = HMFGetOSLogHandle();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
    {
      uint64_t v11 = HMFGetLogIdentifier();
      int v13 = 138543618;
      int v14 = v11;
      __int16 v15 = 2112;
      uint64_t v16 = v5;
      _os_log_impl(&dword_22F52A000, v10, OS_LOG_TYPE_INFO, "%{public}@Unregistering documentation metadata: %@", (uint8_t *)&v13, 0x16u);
    }
    uint64_t v12 = +[HMDSoftwareUpdateDocumentationManager sharedManager];
    [v12 unregisterDocumentationMetadata:v5];
  }
}

void sub_22FCD6194(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22FCD8CEC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,id location)
{
}

id __findAssociatedCharacteristicWithService(void *a1, uint64_t a2)
{
  uint64_t v2 = [a1 characteristicsOfType:a2];
  id v3 = [v2 firstObject];

  return v3;
}

void sub_22FCDB644(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FCDBA50(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FCDBADC(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FCDBB58(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FCDEC50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_22FCE1334(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__126917(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__126918(uint64_t a1)
{
}

void sub_22FCE1660(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_22FCE1974(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_22FCE1C2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_22FCE3890(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_22FCE3BA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_22FCE3EC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_22FCE417C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

__CFString *HMDStringFromDataStreamMessageStatus(unsigned int a1)
{
  if (a1 >= 7)
  {
    objc_msgSend(NSString, "stringWithFormat:", @"<unknown status: %d>", a1);
    id v1 = (__CFString *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    id v1 = off_264A203C0[a1];
  }
  return v1;
}

void sub_22FCEA644(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22FCEAE68(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,id location)
{
  objc_destroyWeak(v41);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22FCEB8EC(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 248));
  _Unwind_Resume(a1);
}

void sub_22FCEBAD0(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FCEBC74(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FCEC4E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22FCECAC0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,id location)
{
  objc_destroyWeak(v26);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22FCEDF50(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22FCEE184(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_22FCEE5FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,id location)
{
  objc_destroyWeak(v26);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22FCEF4D4(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FCEF584(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FCEFED8(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FCF01F0(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FCF0578(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FCF5CBC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22FCFA730(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id failedActionResultFor(void *a1)
{
  uint64_t v1 = (objc_class *)MEMORY[0x263F64918];
  id v2 = a1;
  id v3 = objc_alloc_init(v1);
  id v4 = [v2 actions];
  unint64_t v5 = [v4 firstObject];
  uint64_t v6 = [v5 aceId];
  [v3 setRequestActionId:v6];

  [v3 setOutcome:*MEMORY[0x263F65258]];
  uint64_t v7 = [v2 actions];
  int v8 = [v7 firstObject];
  id v9 = [v8 value];
  [v3 setResultValue:v9];

  __int16 v10 = [v2 actions];

  uint64_t v11 = [v10 firstObject];
  uint64_t v12 = [v11 attribute];
  [v3 setResultAttribute:v12];

  return v3;
}

void __mapToFailureActionOutcome_block_invoke()
{
  v6[3] = *MEMORY[0x263EF8340];
  uint64_t v0 = *MEMORY[0x263F65260];
  uint64_t v1 = *MEMORY[0x263F65570];
  v5[0] = *MEMORY[0x263F65550];
  v5[1] = v1;
  uint64_t v2 = *MEMORY[0x263F65290];
  v6[0] = v0;
  v6[1] = v2;
  v5[2] = *MEMORY[0x263F65598];
  v6[2] = *MEMORY[0x263F652A0];
  uint64_t v3 = [NSDictionary dictionaryWithObjects:v6 forKeys:v5 count:3];
  id v4 = (void *)mapToFailureActionOutcome_outcomeMap;
  mapToFailureActionOutcome_outcomeMap = v3;
}

void sub_22FCFBFCC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void __updateAccessoryInformation(void *a1, void *a2)
{
  uint64_t v84 = *MEMORY[0x263EF8340];
  id v3 = a1;
  id v4 = a2;
  unint64_t v5 = (void *)MEMORY[0x230FBD990]();
  id v6 = v3;
  uint64_t v7 = HMFGetOSLogHandle();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
  {
    int v8 = HMFGetLogIdentifier();
    int v82 = 138543362;
    id v83 = v8;
    _os_log_impl(&dword_22F52A000, v7, OS_LOG_TYPE_INFO, "%{public}@Updating accessory information", (uint8_t *)&v82, 0xCu);
  }
  id v9 = [v4 outputDevice];
  __int16 v10 = objc_msgSend(v9, "av_OutputDevice");

  if (v10)
  {
    uint64_t v11 = [v6 transactionWithObjectChangeType:2];
    objc_opt_class();
    if (objc_opt_isKindOfClass()) {
      uint64_t v12 = v11;
    }
    else {
      uint64_t v12 = 0;
    }
    id v13 = v12;

    int v14 = [v6 category];
    __int16 v15 = [v14 categoryType];
    uint64_t v16 = *MEMORY[0x263F0B0D0];
    int v17 = [v15 isEqual:*MEMORY[0x263F0B0D0]];

    if (v17)
    {
      uint64_t v18 = [v4 category];
      if (v18)
      {
        uint64_t v19 = (void *)v18;
        __int16 v20 = [v4 category];
        uint64_t v21 = [v20 categoryType];
        char v22 = [v21 isEqual:v16];

        if ((v22 & 1) == 0)
        {
          long long v23 = +[HMDHAPMetadata getSharedInstance];
          long long v24 = [v4 category];
          long long v25 = [v24 categoryType];
          long long v26 = [v23 categoryForType:v25];

          if (v26)
          {
            long long v27 = (void *)MEMORY[0x230FBD990]();
            id v28 = v6;
            long long v29 = HMFGetOSLogHandle();
            if (os_log_type_enabled(v29, OS_LOG_TYPE_INFO))
            {
              uint64_t v30 = HMFGetLogIdentifier();
              int v82 = 138543362;
              id v83 = v30;
              _os_log_impl(&dword_22F52A000, v29, OS_LOG_TYPE_INFO, "%{public}@Updating category", (uint8_t *)&v82, 0xCu);
            }
            uint64_t v31 = [v26 identifier];
            [v13 setAccessoryCategory:v31];
          }
        }
      }
    }
    uint64_t v32 = [v10 modelID];
    if (!v32) {
      goto LABEL_17;
    }
    long long v33 = (void *)v32;
    long long v34 = [v10 modelID];
    long long v35 = [v6 model];
    char v36 = HMFEqualObjects();

    if ((v36 & 1) == 0)
    {
      id v38 = (void *)MEMORY[0x230FBD990]();
      id v39 = v6;
      uint64_t v40 = HMFGetOSLogHandle();
      if (os_log_type_enabled(v40, OS_LOG_TYPE_INFO))
      {
        uint64_t v41 = HMFGetLogIdentifier();
        int v82 = 138543362;
        id v83 = v41;
        _os_log_impl(&dword_22F52A000, v40, OS_LOG_TYPE_INFO, "%{public}@Updating model", (uint8_t *)&v82, 0xCu);
      }
      id v42 = [v10 modelID];
      [v13 setModel:v42];

      int v37 = 1;
    }
    else
    {
LABEL_17:
      int v37 = 0;
    }
    uint64_t v43 = [v10 manufacturer];
    if (v43)
    {
      id v44 = (void *)v43;
      uint64_t v45 = [v10 manufacturer];
      __int16 v46 = [v6 manufacturer];
      char v47 = HMFEqualObjects();

      if ((v47 & 1) == 0)
      {
        uint64_t v48 = (void *)MEMORY[0x230FBD990]();
        id v49 = v6;
        uint64_t v50 = HMFGetOSLogHandle();
        if (os_log_type_enabled(v50, OS_LOG_TYPE_INFO))
        {
          __int16 v51 = HMFGetLogIdentifier();
          int v82 = 138543362;
          id v83 = v51;
          _os_log_impl(&dword_22F52A000, v50, OS_LOG_TYPE_INFO, "%{public}@Updating manufacturer", (uint8_t *)&v82, 0xCu);
        }
        uint64_t v52 = [v10 manufacturer];
        [v13 setManufacturer:v52];

        int v37 = 1;
      }
    }
    uint64_t v53 = [v10 serialNumber];
    if (v53)
    {
      id v54 = (void *)v53;
      uint64_t v55 = [v10 serialNumber];
      double v56 = [v6 serialNumber];
      char v57 = HMFEqualObjects();

      if ((v57 & 1) == 0)
      {
        uint64_t v58 = (void *)MEMORY[0x230FBD990]();
        id v59 = v6;
        uint64_t v60 = HMFGetOSLogHandle();
        if (os_log_type_enabled(v60, OS_LOG_TYPE_INFO))
        {
          uint64_t v61 = HMFGetLogIdentifier();
          int v82 = 138543362;
          id v83 = v61;
          _os_log_impl(&dword_22F52A000, v60, OS_LOG_TYPE_INFO, "%{public}@Updating serial number", (uint8_t *)&v82, 0xCu);
        }
        uint64_t v62 = [v10 serialNumber];
        [v13 setSerialNumber:v62];

        int v37 = 1;
      }
    }
    uint64_t v63 = [v10 firmwareVersion];

    if (v63)
    {
      long long v64 = [HMDAccessoryVersion alloc];
      id v65 = [v10 firmwareVersion];
      uint64_t v66 = [(HMDAccessoryVersion *)v64 initWithVersionString:v65];

      uint64_t v67 = [v6 firmwareVersion];
      char v68 = HMFEqualObjects();

      if (v68)
      {

        if ((v37 & 1) == 0)
        {
LABEL_43:

          goto LABEL_44;
        }
      }
      else
      {
        long long v69 = (void *)MEMORY[0x230FBD990]();
        id v70 = v6;
        id v71 = HMFGetOSLogHandle();
        if (os_log_type_enabled(v71, OS_LOG_TYPE_INFO))
        {
          id v72 = HMFGetLogIdentifier();
          int v82 = 138543362;
          id v83 = v72;
          _os_log_impl(&dword_22F52A000, v71, OS_LOG_TYPE_INFO, "%{public}@Updating firmware version", (uint8_t *)&v82, 0xCu);
        }
        uint64_t v73 = [v10 firmwareVersion];
        [v13 setFirmwareVersion:v73];
      }
    }
    else if (!v37)
    {
      goto LABEL_43;
    }
    id v74 = (void *)MEMORY[0x230FBD990]();
    id v75 = v6;
    id v76 = HMFGetOSLogHandle();
    if (os_log_type_enabled(v76, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v77 = HMFGetLogIdentifier();
      int v82 = 138543362;
      id v83 = v77;
      _os_log_impl(&dword_22F52A000, v76, OS_LOG_TYPE_DEFAULT, "%{public}@Updated accessory information", (uint8_t *)&v82, 0xCu);
    }
    long long v78 = [v75 home];
    uint64_t v79 = [v78 backingStore];
    id v80 = +[HMDBackingStoreTransactionOptions defaultXPCOptions];
    id v81 = [v79 transaction:@"Update Accessory Information" options:v80];

    [v81 add:v13 withMessage:0];
    [v81 run];

    goto LABEL_43;
  }
LABEL_44:
}

id __configurationFromAdvertisement(void *a1, void *a2)
{
  uint64_t v38 = *MEMORY[0x263EF8340];
  id v3 = a1;
  id v4 = a2;
  if (v3)
  {
    unint64_t v5 = [MEMORY[0x263EFF9A0] dictionaryWithCapacity:3];
    id v6 = [v4 name];
    uint64_t v7 = [v3 name];
    char v8 = HMFEqualObjects();

    if ((v8 & 1) == 0)
    {
      id v9 = (void *)MEMORY[0x230FBD990]();
      id v10 = v3;
      uint64_t v11 = HMFGetOSLogHandle();
      if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v12 = HMFGetLogIdentifier();
        id v13 = [v4 name];
        *(_DWORD *)long long buf = 138543618;
        long long v35 = v12;
        __int16 v36 = 2112;
        int v37 = v13;
        _os_log_impl(&dword_22F52A000, v11, OS_LOG_TYPE_DEFAULT, "%{public}@Detected that the accessory name, %@, is out of sync", buf, 0x16u);
      }
      int v14 = [v10 name];
      [v5 setObject:v14 forKeyedSubscript:@"name"];
    }
    __int16 v15 = [v3 home];
    uint64_t v16 = [v15 mediaPassword];
    int v17 = [v3 password];
    char v18 = HMFEqualObjects();

    if ((v18 & 1) == 0)
    {
      uint64_t v19 = (void *)MEMORY[0x230FBD990]();
      id v20 = v3;
      uint64_t v21 = HMFGetOSLogHandle();
      if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT))
      {
        char v22 = HMFGetLogIdentifier();
        *(_DWORD *)long long buf = 138543362;
        long long v35 = v22;
        _os_log_impl(&dword_22F52A000, v21, OS_LOG_TYPE_DEFAULT, "%{public}@Detected that the accessory password is out of sync", buf, 0xCu);
      }
      if (v16) {
        long long v23 = v16;
      }
      else {
        long long v23 = &stru_26E2EB898;
      }
      [v5 setObject:v23 forKeyedSubscript:@"password"];
    }
    uint64_t v24 = [v15 minimumMediaUserPrivilege];
    if ([v3 minimumUserPriviledge] != v24)
    {
      long long v25 = (void *)MEMORY[0x230FBD990]();
      id v26 = v3;
      long long v27 = HMFGetOSLogHandle();
      if (os_log_type_enabled(v27, OS_LOG_TYPE_DEFAULT))
      {
        id v28 = HMFGetLogIdentifier();
        [v26 minimumUserPriviledge];
        HMUserPrivilegeToString();
        long long v29 = v33 = v25;
        *(_DWORD *)long long buf = 138543618;
        long long v35 = v28;
        __int16 v36 = 2112;
        int v37 = v29;
        _os_log_impl(&dword_22F52A000, v27, OS_LOG_TYPE_DEFAULT, "%{public}@Detected that the accessory minimum user privilege, %@, is out of sync", buf, 0x16u);

        long long v25 = v33;
      }

      uint64_t v30 = [NSNumber numberWithInteger:v24];
      [v5 setObject:v30 forKeyedSubscript:@"privilege"];
    }
    uint64_t v31 = (void *)[v5 copy];
  }
  else
  {
    uint64_t v31 = 0;
  }

  return v31;
}

void __updateConfiguration(void *a1, void *a2, void *a3)
{
  uint64_t v42 = *MEMORY[0x263EF8340];
  id v5 = a1;
  id v6 = a2;
  id v7 = a3;
  char v8 = (void *)MEMORY[0x230FBD990]();
  if (v5)
  {
    id v9 = v5;
    id v10 = HMFGetOSLogHandle();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
    {
      uint64_t v11 = HMFGetLogIdentifier();
      *(_DWORD *)long long buf = 138543618;
      id v39 = v11;
      __int16 v40 = 2112;
      id v41 = v6;
      _os_log_impl(&dword_22F52A000, v10, OS_LOG_TYPE_INFO, "%{public}@Updating configuration to: %@", buf, 0x16u);
    }
    uint64_t v12 = [v9 home];
    char v13 = [v12 isOwnerUser];

    if (v13)
    {
      int v14 = [v9 advertisement];
      __int16 v15 = [v14 outputDevice];
      uint64_t v16 = objc_msgSend(v15, "av_OutputDevice");

      if (v16)
      {
        aBlock[0] = MEMORY[0x263EF8330];
        aBlock[1] = 3221225472;
        aBlock[2] = ____updateConfiguration_block_invoke;
        aBlock[3] = &unk_264A20838;
        id v36 = v6;
        id v17 = v9;
        id v37 = v17;
        char v18 = _Block_copy(aBlock);
        objc_initWeak((id *)buf, v17);
        uint64_t v19 = __outputDeviceConfigurationOptions();
        v31[0] = MEMORY[0x263EF8330];
        v31[1] = 3221225472;
        v31[2] = ____updateConfiguration_block_invoke_226;
        v31[3] = &unk_264A207C8;
        id v32 = v14;
        objc_copyWeak(&v34, (id *)buf);
        id v33 = v7;
        [v16 configureUsingBlock:v18 options:v19 completionHandler:v31];

        objc_destroyWeak(&v34);
        objc_destroyWeak((id *)buf);

        id v20 = v36;
      }
      else
      {
        long long v27 = (void *)MEMORY[0x230FBD990]();
        id v28 = v9;
        long long v29 = HMFGetOSLogHandle();
        if (os_log_type_enabled(v29, OS_LOG_TYPE_INFO))
        {
          uint64_t v30 = HMFGetLogIdentifier();
          *(_DWORD *)long long buf = 138543362;
          id v39 = v30;
          _os_log_impl(&dword_22F52A000, v29, OS_LOG_TYPE_INFO, "%{public}@Missing output device", buf, 0xCu);
        }
        __startConfigurationRetryTimer(v28);
        id v20 = [MEMORY[0x263F087E8] hmErrorWithCode:4];
        (*((void (**)(id, void *))v7 + 2))(v7, v20);
      }
    }
    else
    {
      long long v23 = (void *)MEMORY[0x230FBD990]();
      id v24 = v9;
      long long v25 = HMFGetOSLogHandle();
      if (os_log_type_enabled(v25, OS_LOG_TYPE_INFO))
      {
        id v26 = HMFGetLogIdentifier();
        *(_DWORD *)long long buf = 138543362;
        id v39 = v26;
        _os_log_impl(&dword_22F52A000, v25, OS_LOG_TYPE_INFO, "%{public}@Only owner can update configuration", buf, 0xCu);
      }
      int v14 = [MEMORY[0x263F087E8] hmErrorWithCode:17];
      (*((void (**)(id, void *))v7 + 2))(v7, v14);
    }
  }
  else
  {
    uint64_t v21 = HMFGetOSLogHandle();
    if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR))
    {
      char v22 = HMFGetLogIdentifier();
      *(_DWORD *)long long buf = 138543362;
      id v39 = v22;
      _os_log_impl(&dword_22F52A000, v21, OS_LOG_TYPE_ERROR, "%{public}@Missing required paramter", buf, 0xCu);
    }
    int v14 = [MEMORY[0x263F087E8] hmErrorWithCode:3];
    (*((void (**)(id, void *))v7 + 2))(v7, v14);
  }
}

void sub_22FCFD1D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,id location)
{
  objc_destroyWeak(v23);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void __stopConfigurationRetryTimer(void *a1)
{
  id v1 = a1;
  uint64_t v2 = v1;
  if (v1)
  {
    id v3 = [v1 workQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = ____stopConfigurationRetryTimer_block_invoke;
    block[3] = &unk_264A2F7F8;
    id v5 = v2;
    dispatch_async(v3, block);
  }
}

void ____stopConfigurationRetryTimer_block_invoke(uint64_t a1)
{
  uint64_t v12 = *MEMORY[0x263EF8340];
  uint64_t v2 = [*(id *)(a1 + 32) configurationRetryTimer];

  if (v2)
  {
    id v3 = (void *)MEMORY[0x230FBD990]();
    id v4 = *(id *)(a1 + 32);
    id v5 = HMFGetOSLogHandle();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
    {
      id v6 = HMFGetLogIdentifier();
      int v10 = 138543362;
      uint64_t v11 = v6;
      _os_log_impl(&dword_22F52A000, v5, OS_LOG_TYPE_INFO, "%{public}@Stopping configuration retry timer", (uint8_t *)&v10, 0xCu);
    }
    id v7 = [*(id *)(a1 + 32) configurationRetryTimer];
    [v7 suspend];

    uint64_t v8 = *(void *)(a1 + 32);
    id v9 = *(void **)(v8 + 488);
    *(void *)(v8 + 48_Block_object_dispose(&STACK[0x340], 8) = 0;
  }
}

void __startConfigurationRetryTimer(void *a1)
{
  id v1 = a1;
  uint64_t v2 = v1;
  if (v1)
  {
    id v3 = [v1 workQueue];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = ____startConfigurationRetryTimer_block_invoke;
    block[3] = &unk_264A2F7F8;
    id v5 = v2;
    dispatch_async(v3, block);
  }
}

void ____updateConfiguration_block_invoke(uint64_t a1, void *a2)
{
  uint64_t v16 = *MEMORY[0x263EF8340];
  id v3 = a2;
  id v4 = objc_msgSend(*(id *)(a1 + 32), "hmf_stringForKey:", @"name");
  if (v4) {
    [v3 setDeviceName:v4];
  }

  id v5 = objc_msgSend(*(id *)(a1 + 32), "hmf_stringForKey:", @"password");
  if (v5) {
    [v3 setDevicePassword:v5];
  }

  id v6 = objc_msgSend(*(id *)(a1 + 32), "hmf_numberForKey:", @"privilege");
  id v7 = v6;
  if (v6) {
    objc_msgSend(v3, "startAutomaticallyAllowingConnectionsFromPeersInHomeGroupAndRejectOtherConnections:", objc_msgSend(v6, "integerValue") != 0);
  }

  uint64_t v8 = (void *)MEMORY[0x230FBD990]();
  id v9 = *(id *)(a1 + 40);
  int v10 = HMFGetOSLogHandle();
  if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
  {
    uint64_t v11 = HMFGetLogIdentifier();
    int v12 = 138543618;
    char v13 = v11;
    __int16 v14 = 2112;
    id v15 = v3;
    _os_log_impl(&dword_22F52A000, v10, OS_LOG_TYPE_INFO, "%{public}@Configuring with configuration: %@", (uint8_t *)&v12, 0x16u);
  }
}

id __outputDeviceConfigurationOptions()
{
  v3[1] = *MEMORY[0x263EF8340];
  uint64_t v2 = *MEMORY[0x263EF9FD8];
  v3[0] = MEMORY[0x263EFFA88];
  uint64_t v0 = [NSDictionary dictionaryWithObjects:v3 forKeys:&v2 count:1];
  return v0;
}

void ____updateConfiguration_block_invoke_226(uint64_t a1, uint64_t a2, void *a3, void *a4, void *a5)
{
  uint64_t v33 = *MEMORY[0x263EF8340];
  id v8 = a3;
  id v9 = a4;
  id v10 = a5;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  int v12 = (void *)MEMORY[0x230FBD990]();
  id v13 = WeakRetained;
  __int16 v14 = HMFGetOSLogHandle();
  id v15 = v14;
  if (v8)
  {
    if (os_log_type_enabled(v14, OS_LOG_TYPE_INFO))
    {
      uint64_t v16 = HMFGetLogIdentifier();
      *(_DWORD *)long long buf = 138543362;
      *(void *)&uint8_t buf[4] = v16;
      _os_log_impl(&dword_22F52A000, v15, OS_LOG_TYPE_INFO, "%{public}@Successfully updated configuration", buf, 0xCu);
    }
    __stopConfigurationRetryTimer(v13);
    id v17 = 0;
  }
  else
  {
    if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
    {
      char v18 = HMFGetLogIdentifier();
      *(_DWORD *)long long buf = 138543874;
      *(void *)&uint8_t buf[4] = v18;
      *(_WORD *)&buf[12] = 2112;
      *(void *)&buf[14] = v10;
      *(_WORD *)&buf[22] = 2112;
      uint64_t v30 = v9;
      _os_log_impl(&dword_22F52A000, v15, OS_LOG_TYPE_DEFAULT, "%{public}@Failed to update configuration with error: %@, cancellationReason: %@", buf, 0x20u);
    }
    id v17 = [MEMORY[0x263F087E8] hmErrorWithCode:54 description:@"Communication failure" reason:@"Failed to set configuration." suggestion:0 underlyingError:v10];
    __startConfigurationRetryTimer(v13);
  }
  uint64_t v19 = *(void *)(a1 + 40);
  if (!v19)
  {
LABEL_11:
    if (v8)
    {
      id v21 = v13;
      id v22 = v8;
      if (v21)
      {
        long long v23 = v22;
        id v24 = [v21 workQueue];
        *(void *)long long buf = MEMORY[0x263EF8330];
        *(void *)&buf[8] = 3221225472;
        *(void *)&buf[16] = ____updateWithCurrentConfiguration_block_invoke;
        uint64_t v30 = &unk_264A2F820;
        id v31 = v21;
        id v32 = v23;
        dispatch_async(v24, buf);
      }
      goto LABEL_16;
    }
    goto LABEL_17;
  }
  if (v13)
  {
    id v20 = [v13 workQueue];
    v26[0] = MEMORY[0x263EF8330];
    v26[1] = 3221225472;
    v26[2] = ____updateConfiguration_block_invoke_227;
    v26[3] = &unk_264A2F870;
    id v28 = *(id *)(a1 + 40);
    id v27 = v17;
    dispatch_async(v20, v26);

    goto LABEL_11;
  }
  (*(void (**)(uint64_t, void *))(v19 + 16))(v19, v17);
  if (v8)
  {
    id v25 = v8;
LABEL_16:
  }
LABEL_17:
}

uint64_t ____updateConfiguration_block_invoke_227(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), *(void *)(a1 + 32));
}

void ____updateWithCurrentConfiguration_block_invoke(uint64_t a1)
{
  uint64_t v46 = *MEMORY[0x263EF8340];
  uint64_t v2 = (void *)MEMORY[0x230FBD990]();
  id v3 = *(id *)(a1 + 32);
  id v4 = HMFGetOSLogHandle();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
  {
    id v5 = HMFGetLogIdentifier();
    uint64_t v6 = *(void *)(a1 + 40);
    int v42 = 138543618;
    uint64_t v43 = v5;
    __int16 v44 = 2112;
    uint64_t v45 = v6;
    _os_log_impl(&dword_22F52A000, v4, OS_LOG_TYPE_INFO, "%{public}@Updating with configuration: %@", (uint8_t *)&v42, 0x16u);
  }
  id v7 = [*(id *)(a1 + 40) devicePassword];
  if (![v7 length])
  {

    id v7 = 0;
  }
  id v8 = [*(id *)(a1 + 32) password];
  char v9 = HMFEqualObjects();

  if ((v9 & 1) == 0)
  {
    id v10 = (void *)MEMORY[0x230FBD990]();
    id v11 = *(id *)(a1 + 32);
    int v12 = HMFGetOSLogHandle();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
    {
      id v13 = HMFGetLogIdentifier();
      int v42 = 138543362;
      uint64_t v43 = v13;
      _os_log_impl(&dword_22F52A000, v12, OS_LOG_TYPE_INFO, "%{public}@Caching updated password", (uint8_t *)&v42, 0xCu);
    }
    __int16 v14 = *(void **)(a1 + 32);
    if (v14)
    {
      id v15 = v14;
      id v16 = v7;
      id v17 = [v15 transactionWithObjectChangeType:2];
      objc_opt_class();
      if (objc_opt_isKindOfClass()) {
        char v18 = v17;
      }
      else {
        char v18 = 0;
      }
      id v19 = v18;

      [v19 setPassword:v16];
      id v20 = [v15 home];

      id v21 = [v20 backingStore];
      id v22 = +[HMDBackingStoreTransactionOptions defaultXPCOptions];
      long long v23 = [v21 transaction:@"Update Password" options:v22];

      [v23 add:v19 withMessage:0];
      [v23 run];
    }
  }

  unsigned int v24 = [*(id *)(a1 + 40) onlyAllowsConnectionsFromPeersInHomeGroup];
  uint64_t v25 = [*(id *)(a1 + 32) minimumUserPriviledge];
  if (v25 >= 1) {
    uint64_t v26 = 1;
  }
  else {
    uint64_t v26 = v25;
  }
  if (v26 != v24)
  {
    id v27 = (void *)MEMORY[0x230FBD990]();
    id v28 = *(id *)(a1 + 32);
    long long v29 = HMFGetOSLogHandle();
    if (os_log_type_enabled(v29, OS_LOG_TYPE_INFO))
    {
      uint64_t v30 = HMFGetLogIdentifier();
      int v42 = 138543362;
      uint64_t v43 = v30;
      _os_log_impl(&dword_22F52A000, v29, OS_LOG_TYPE_INFO, "%{public}@Caching updated user minimum privilege", (uint8_t *)&v42, 0xCu);
    }
    id v31 = *(void **)(a1 + 32);
    if (v31)
    {
      uint64_t v32 = v24;
      id v33 = v31;
      id v34 = [v33 transactionWithObjectChangeType:2];
      objc_opt_class();
      if (objc_opt_isKindOfClass()) {
        long long v35 = v34;
      }
      else {
        long long v35 = 0;
      }
      id v36 = v35;

      id v37 = [NSNumber numberWithInteger:v32];
      [v36 setMinimumUserPriviledge:v37];

      uint64_t v38 = [v33 home];

      id v39 = [v38 backingStore];
      __int16 v40 = +[HMDBackingStoreTransactionOptions defaultXPCOptions];
      id v41 = [v39 transaction:@"Update Minimum User Privilege" options:v40];

      [v41 add:v36 withMessage:0];
      [v41 run];
    }
  }
}

void ____startConfigurationRetryTimer_block_invoke(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) configurationRetryTimer];
  if (!v2)
  {
    id v3 = [MEMORY[0x263F42608] sharedPreferences];
    id v4 = [v3 preferenceForKey:@"airPlayConfigurationRetryMinimum"];

    id v5 = [MEMORY[0x263F42608] sharedPreferences];
    uint64_t v6 = [v5 preferenceForKey:@"airPlayConfigurationRetryMaximum"];

    id v7 = [MEMORY[0x263F42608] sharedPreferences];
    id v8 = [v7 preferenceForKey:@"airPlayConfigurationRetryFactor"];

    id v9 = objc_alloc(MEMORY[0x263F42528]);
    id v10 = [v4 numberValue];
    [v10 doubleValue];
    double v12 = v11;
    id v13 = [v6 numberValue];
    [v13 doubleValue];
    double v15 = v14;
    id v16 = [v8 numberValue];
    id obja = (id)objc_msgSend(v9, "initWithMinimumTimeInterval:maximumTimeInterval:exponentialFactor:options:", objc_msgSend(v16, "integerValue"), 0, v12, v15);

    [obja setDelegate:*(void *)(a1 + 32)];
    objc_storeStrong((id *)(*(void *)(a1 + 32) + 488), obja);

    uint64_t v2 = obja;
  }
  id obj = v2;
  [v2 resume];
}

void sub_22FCFE45C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__130844(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__130845(uint64_t a1)
{
}

void sub_22FCFE86C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22FCFEF04(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,id location)
{
  objc_destroyWeak(v23);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22FCFF9B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,id location)
{
  objc_destroyWeak(v23);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22FD002A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location)
{
  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22FD00AFC(_Unwind_Exception *a1)
{
}

void sub_22FD00BF8(_Unwind_Exception *a1)
{
}

void sub_22FD00F78(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id location)
{
  objc_destroyWeak(v10);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void ____updatePassword_block_invoke(uint64_t a1, void *a2)
{
  uint64_t v18 = *MEMORY[0x263EF8340];
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v5 = (void *)MEMORY[0x230FBD990]();
  id v6 = WeakRetained;
  id v7 = HMFGetOSLogHandle();
  id v8 = v7;
  if (v3)
  {
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      id v9 = HMFGetLogIdentifier();
      int v14 = 138543618;
      double v15 = v9;
      __int16 v16 = 2112;
      id v17 = v3;
      id v10 = "%{public}@Failed to update password with error: %@";
      double v11 = v8;
      os_log_type_t v12 = OS_LOG_TYPE_DEFAULT;
      uint32_t v13 = 22;
LABEL_6:
      _os_log_impl(&dword_22F52A000, v11, v12, v10, (uint8_t *)&v14, v13);
    }
  }
  else if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
  {
    id v9 = HMFGetLogIdentifier();
    int v14 = 138543362;
    double v15 = v9;
    id v10 = "%{public}@Successfully updated password";
    double v11 = v8;
    os_log_type_t v12 = OS_LOG_TYPE_INFO;
    uint32_t v13 = 12;
    goto LABEL_6;
  }
}

void sub_22FD013C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id location)
{
  objc_destroyWeak(v10);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void ____updateMinimumUserPrivilege_block_invoke(uint64_t a1, void *a2)
{
  uint64_t v18 = *MEMORY[0x263EF8340];
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v5 = (void *)MEMORY[0x230FBD990]();
  id v6 = WeakRetained;
  id v7 = HMFGetOSLogHandle();
  id v8 = v7;
  if (v3)
  {
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      id v9 = HMFGetLogIdentifier();
      int v14 = 138543618;
      double v15 = v9;
      __int16 v16 = 2112;
      id v17 = v3;
      id v10 = "%{public}@Failed to minimum user privilege with error: %@";
      double v11 = v8;
      os_log_type_t v12 = OS_LOG_TYPE_DEFAULT;
      uint32_t v13 = 22;
LABEL_6:
      _os_log_impl(&dword_22F52A000, v11, v12, v10, (uint8_t *)&v14, v13);
    }
  }
  else if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
  {
    id v9 = HMFGetLogIdentifier();
    int v14 = 138543362;
    double v15 = v9;
    id v10 = "%{public}@Successfully updated minimum user privilege";
    double v11 = v8;
    os_log_type_t v12 = OS_LOG_TYPE_INFO;
    uint32_t v13 = 12;
    goto LABEL_6;
  }
}

void sub_22FD017EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, id location)
{
  objc_destroyWeak(v12);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void ____updateName_block_invoke(uint64_t a1, void *a2)
{
  uint64_t v18 = *MEMORY[0x263EF8340];
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v5 = (void *)MEMORY[0x230FBD990]();
  id v6 = WeakRetained;
  id v7 = HMFGetOSLogHandle();
  id v8 = v7;
  if (v3)
  {
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      id v9 = HMFGetLogIdentifier();
      int v14 = 138543618;
      double v15 = v9;
      __int16 v16 = 2112;
      id v17 = v3;
      id v10 = "%{public}@Failed to update name with error: %@";
      double v11 = v8;
      os_log_type_t v12 = OS_LOG_TYPE_DEFAULT;
      uint32_t v13 = 22;
LABEL_6:
      _os_log_impl(&dword_22F52A000, v11, v12, v10, (uint8_t *)&v14, v13);
    }
  }
  else if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
  {
    id v9 = HMFGetLogIdentifier();
    int v14 = 138543362;
    double v15 = v9;
    id v10 = "%{public}@Successfully updated name";
    double v11 = v8;
    os_log_type_t v12 = OS_LOG_TYPE_INFO;
    uint32_t v13 = 12;
    goto LABEL_6;
  }
}

void sub_22FD01C2C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

__CFString *HMDCameraRecordingMediaContainerTypeAsString(uint64_t a1)
{
  if (a1)
  {
    objc_msgSend(NSString, "stringWithFormat:", @"Unknown HMDCameraRecordingMediaContainerType %ld", a1);
    uint64_t v2 = (__CFString *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    uint64_t v2 = @"HMDCameraRecordingMediaContainerTypeFragmentedMP4";
  }
  return v2;
}

id HMDCameraRecordingEventTriggerOptionsAsString(char a1)
{
  uint64_t v2 = [MEMORY[0x263EFF980] array];
  id v3 = v2;
  if (a1) {
    [v2 addObject:@"HMDCameraRecordingEventTriggerOptionsMotion"];
  }
  if ((a1 & 2) != 0) {
    [v3 addObject:@"HMDCameraRecordingEventTriggerOptionsDoorbell"];
  }
  id v4 = NSString;
  id v5 = [v3 componentsJoinedByString:@", "];
  id v6 = [v4 stringWithFormat:@"[%@]", v5];

  return v6;
}

id mapButtonConfigurationForTVReceiver(void *a1)
{
  uint64_t v18 = *MEMORY[0x263EF8340];
  id v1 = a1;
  uint64_t v2 = objc_msgSend(MEMORY[0x263EFF9C0], "setWithCapacity:", objc_msgSend(v1, "count"));
  long long v13 = 0u;
  long long v14 = 0u;
  long long v15 = 0u;
  long long v16 = 0u;
  id v3 = v1;
  uint64_t v4 = [v3 countByEnumeratingWithState:&v13 objects:v17 count:16];
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = *(void *)v14;
    do
    {
      for (uint64_t i = 0; i != v5; ++i)
      {
        if (*(void *)v14 != v6) {
          objc_enumerationMutation(v3);
        }
        id v8 = *(void **)(*((void *)&v13 + 1) + 8 * i);
        unint64_t v9 = objc_msgSend(v8, "type", (void)v13) - 1;
        if (v9 <= 0xB && ((0xCFFu >> v9) & 1) != 0)
        {
          id v10 = -[THAButton initWithType:identifier:]([THAButton alloc], "initWithType:identifier:", qword_2303E4410[v9], [v8 identifier]);
          [v2 addObject:v10];
        }
      }
      uint64_t v5 = [v3 countByEnumeratingWithState:&v13 objects:v17 count:16];
    }
    while (v5);
  }

  double v11 = (void *)[v2 copy];
  return v11;
}

void sub_22FD0A5F0(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FD0A67C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FD0A6F8(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FD0A784(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FD0A828(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FD0A8A4(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FD0A99C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FD0AAD0(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FD0AB4C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FD0BCF0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id __findUserWithUUID(void *a1, void *a2)
{
  id v3 = (objc_class *)MEMORY[0x263F08C38];
  id v4 = a2;
  id v5 = a1;
  uint64_t v6 = (void *)[[v3 alloc] initWithUUIDString:v5];

  id v7 = [v4 userWithUUID:v6];

  return v7;
}

id HMDCKRecordIDSafeCharacters()
{
  if (HMDCKRecordIDSafeCharacters__hmf_once_t0 != -1) {
    dispatch_once(&HMDCKRecordIDSafeCharacters__hmf_once_t0, &__block_literal_global_27_131926);
  }
  uint64_t v0 = (void *)HMDCKRecordIDSafeCharacters__hmf_once_v1;
  return v0;
}

void __HMDCKRecordIDSafeCharacters_block_invoke()
{
  uint64_t v0 = [MEMORY[0x263F08708] characterSetWithCharactersInString:@"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ01234567890._-"];
  id v1 = (void *)HMDCKRecordIDSafeCharacters__hmf_once_v1;
  HMDCKRecordIDSafeCharacters__hmf_once_id v1 = v0;
}

void __HMDCKRecordIDEncodedCharacters_block_invoke()
{
  uint64_t v0 = HMDCKRecordIDSafeCharacters();
  id v1 = (void *)[v0 mutableCopy];

  [v1 addCharactersInString:@"%0123456789abcdefABCDEF"];
  uint64_t v2 = [v1 copy];

  id v3 = (void *)HMDCKRecordIDEncodedCharacters__hmf_once_v3;
  HMDCKRecordIDEncodedCharacters__hmf_once_id v3 = v2;
}

void sub_22FD10B08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__131992(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__131993(uint64_t a1)
{
}

void sub_22FD13700(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_22FD16940(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__132975(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__132976(uint64_t a1)
{
}

void sub_22FD17A88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_22FD18774(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_22FD188D0(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 80), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__133158(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__133159(uint64_t a1)
{
}

void sub_22FD18AFC(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FD18B6C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FD18BDC(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FD18D44(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FD19920(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FD19BAC(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FD19FA4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15)
{
  os_unfair_lock_unlock(v15);
  _Block_object_dispose(&a15, 8);
  _Unwind_Resume(a1);
}

void sub_22FD1A2B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15)
{
  os_unfair_lock_unlock(v15);
  _Block_object_dispose(&a15, 8);
  _Unwind_Resume(a1);
}

void sub_22FD1A4D4(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FD1A698(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22FD1B0AC(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FD1B6D0(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FD1B90C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FD1BAD0(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FD1BEBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_22FD1CE50(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FD1D004(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FD1DFDC(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FD1E700(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FD1EDEC(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

BOOL isNameValidWithVoiceShortcut(void *a1)
{
  uint64_t v19 = *MEMORY[0x263EF8340];
  id v1 = a1;
  uint64_t v2 = [MEMORY[0x263F42620] productInfo];
  uint64_t v3 = [v2 productClass];

  if (v3 == 6)
  {
    id v4 = (void *)MEMORY[0x230FBD990]();
    id v5 = HMFGetOSLogHandle();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v6 = HMFGetLogIdentifier();
      LODWORD(buf) = 138543362;
      *(void *)((char *)&buf + 4) = v6;
      _os_log_impl(&dword_22F52A000, v5, OS_LOG_TYPE_DEFAULT, "%{public}@siriactiond does not run on HomePod", (uint8_t *)&buf, 0xCu);
    }
    BOOL v7 = 1;
  }
  else
  {
    id v8 = dispatch_group_create();
    dispatch_group_enter(v8);
    *(void *)&long long buf = 0;
    *((void *)&buf + 1) = &buf;
    uint64_t v17 = 0x2020000000;
    char v18 = 1;
    unint64_t v9 = [MEMORY[0x263F85128] standardClient];
    v13[0] = MEMORY[0x263EF8330];
    v13[1] = 3221225472;
    v13[2] = __isNameValidWithVoiceShortcut_block_invoke;
    v13[3] = &unk_264A20BC0;
    p_long long buf = &buf;
    id v10 = v8;
    long long v14 = v10;
    [v9 getVoiceShortcutWithPhrase:v1 completion:v13];

    dispatch_time_t v11 = dispatch_time(0, 5000000000);
    dispatch_group_wait(v10, v11);
    BOOL v7 = *(unsigned char *)(*((void *)&buf + 1) + 24) != 0;

    _Block_object_dispose(&buf, 8);
  }

  return v7;
}

void sub_22FD1F00C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __isNameValidWithVoiceShortcut_block_invoke(uint64_t a1, uint64_t a2)
{
  if (a2) {
    *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = 0;
  }
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

void sub_22FD1F1E0(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FD1F408(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FD1F4CC(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FD1F55C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FD1F6B8(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FD1F81C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

HMDCUWiFiDeviceWrapper *__wrapCUWiFiDevice(void *a1, void *a2)
{
  id v3 = a2;
  id v4 = a1;
  id v5 = [HMDCUWiFiDeviceWrapper alloc];
  uint64_t v6 = v4[1];

  BOOL v7 = [(HMDCUWiFiDeviceWrapper *)v5 initWithCUWiFiDevice:v3 dispatchQueue:v6];
  return v7;
}

void sub_22FD21660(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location, char a17)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Block_object_dispose(&a17, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__133715(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__133716(uint64_t a1)
{
}

void sub_22FD22B80(_Unwind_Exception *a1)
{
  objc_destroyWeak(v5);
  objc_destroyWeak(v4);
  objc_destroyWeak(v3);
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v6 - 152));
  _Unwind_Resume(a1);
}

void ____start_block_invoke(uint64_t a1, void *a2)
{
  uint64_t v25 = *MEMORY[0x263EF8340];
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v5 = (void *)MEMORY[0x230FBD990]();
    id v6 = WeakRetained;
    BOOL v7 = HMFGetOSLogHandle();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEBUG))
    {
      id v8 = HMFGetLogIdentifier();
      *(_DWORD *)long long buf = 138543618;
      id v22 = v8;
      __int16 v23 = 2112;
      id v24 = v3;
      _os_log_impl(&dword_22F52A000, v7, OS_LOG_TYPE_DEBUG, "%{public}@Found device %@", buf, 0x16u);
    }
    unint64_t v9 = [v6 delegate];
    if (v9)
    {
      id v10 = __wrapCUWiFiDevice(v6, v3);
      dispatch_time_t v11 = (void *)MEMORY[0x230FBD990]();
      id v12 = v6;
      long long v13 = HMFGetOSLogHandle();
      if (os_log_type_enabled(v13, OS_LOG_TYPE_INFO))
      {
        long long v14 = HMFGetLogIdentifier();
        *(_DWORD *)long long buf = 138543618;
        id v22 = v14;
        __int16 v23 = 2112;
        id v24 = v10;
        _os_log_impl(&dword_22F52A000, v13, OS_LOG_TYPE_INFO, "%{public}@Device %@", buf, 0x16u);
      }
      long long v15 = [v12 delegateQueue];
      block[0] = MEMORY[0x263EF8330];
      block[1] = 3221225472;
      block[2] = ____start_block_invoke_145;
      block[3] = &unk_264A2F2F8;
      id v18 = v9;
      id v19 = v12;
      id v20 = v10;
      id v16 = v10;
      dispatch_async(v15, block);
    }
  }
}

void ____start_block_invoke_2(uint64_t a1, void *a2)
{
  uint64_t v25 = *MEMORY[0x263EF8340];
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v5 = (void *)MEMORY[0x230FBD990]();
    id v6 = WeakRetained;
    BOOL v7 = HMFGetOSLogHandle();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEBUG))
    {
      id v8 = HMFGetLogIdentifier();
      unint64_t v9 = [v3 ssid];
      id v10 = [v3 identifier];
      *(_DWORD *)long long buf = 138543874;
      id v20 = v8;
      __int16 v21 = 2112;
      id v22 = v9;
      __int16 v23 = 2112;
      id v24 = v10;
      _os_log_impl(&dword_22F52A000, v7, OS_LOG_TYPE_DEBUG, "%{public}@Lost device %@: (%@)", buf, 0x20u);
    }
    dispatch_time_t v11 = [v6 delegate];
    if (v11)
    {
      id v12 = __wrapCUWiFiDevice(v6, v3);
      long long v13 = [v6 delegateQueue];
      block[0] = MEMORY[0x263EF8330];
      block[1] = 3221225472;
      block[2] = ____start_block_invoke_147;
      block[3] = &unk_264A2F2F8;
      id v16 = v11;
      id v17 = v6;
      id v18 = v12;
      id v14 = v12;
      dispatch_async(v13, block);
    }
  }
}

void ____start_block_invoke_2_148(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v5 = WeakRetained;
  if (WeakRetained)
  {
    id v6 = [WeakRetained delegate];
    if (v6)
    {
      BOOL v7 = __wrapCUWiFiDevice(v5, v3);
      id v8 = [v5 delegateQueue];
      block[0] = MEMORY[0x263EF8330];
      block[1] = 3221225472;
      block[2] = ____start_block_invoke_3;
      block[3] = &unk_264A2F2F8;
      id v11 = v6;
      id v12 = v5;
      id v13 = v7;
      id v9 = v7;
      dispatch_async(v8, block);
    }
  }
}

void ____start_block_invoke_4(uint64_t a1, void *a2)
{
  uint64_t v19 = *MEMORY[0x263EF8340];
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v5 = (void *)MEMORY[0x230FBD990]();
    id v6 = (id *)WeakRetained;
    BOOL v7 = HMFGetOSLogHandle();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      id v8 = HMFGetLogIdentifier();
      *(_DWORD *)long long buf = 138543618;
      id v16 = v8;
      __int16 v17 = 2112;
      id v18 = v3;
      _os_log_impl(&dword_22F52A000, v7, OS_LOG_TYPE_ERROR, "%{public}@Error %@", buf, 0x16u);
    }
    id v9 = [v6 delegate];
    if (v9)
    {
      id v10 = [v6 delegateQueue];
      block[0] = MEMORY[0x263EF8330];
      block[1] = 3221225472;
      block[2] = ____start_block_invoke_150;
      block[3] = &unk_264A2F2F8;
      id v12 = v9;
      id v13 = v6;
      id v14 = v3;
      dispatch_async(v10, block);
    }
    [v6[2] invalidate];
  }
}

void ____start_block_invoke_2_152(uint64_t a1)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    uint64_t v2 = (void *)MEMORY[0x230FBD990]();
    id v3 = WeakRetained;
    id v4 = HMFGetOSLogHandle();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
    {
      id v5 = HMFGetLogIdentifier();
      *(_DWORD *)long long buf = 138543362;
      id v13 = v5;
      _os_log_impl(&dword_22F52A000, v4, OS_LOG_TYPE_INFO, "%{public}@CUWiFiScanner invalidated", buf, 0xCu);
    }
    id v6 = (void *)v3[2];
    void v3[2] = 0;
  }
  BOOL v7 = [WeakRetained delegate];
  if (v7)
  {
    id v8 = [WeakRetained delegateQueue];
    v9[0] = MEMORY[0x263EF8330];
    v9[1] = 3221225472;
    void v9[2] = ____start_block_invoke_153;
    void v9[3] = &unk_264A2F820;
    id v10 = v7;
    id v11 = WeakRetained;
    dispatch_async(v8, v9);
  }
}

uint64_t ____start_block_invoke_153(uint64_t a1)
{
  return [*(id *)(a1 + 32) scannerDidStop:*(void *)(a1 + 40)];
}

uint64_t ____start_block_invoke_150(uint64_t a1)
{
  return [*(id *)(a1 + 32) scanner:*(void *)(a1 + 40) didError:*(void *)(a1 + 48)];
}

uint64_t ____start_block_invoke_3(uint64_t a1)
{
  return [*(id *)(a1 + 32) scanner:*(void *)(a1 + 40) didUpdateDevice:*(void *)(a1 + 48)];
}

uint64_t ____start_block_invoke_147(uint64_t a1)
{
  return [*(id *)(a1 + 32) scanner:*(void *)(a1 + 40) didRemoveDevice:*(void *)(a1 + 48)];
}

uint64_t ____start_block_invoke_145(uint64_t a1)
{
  return [*(id *)(a1 + 32) scanner:*(void *)(a1 + 40) didAddDevice:*(void *)(a1 + 48)];
}

void sub_22FD24C30(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FD24D2C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FD24E30(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FD24FE0(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FD26D84(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FD26EF4(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FD26F88(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FD27620(_Unwind_Exception *a1)
{
}

void sub_22FD278CC(_Unwind_Exception *a1)
{
}

void sub_22FD27BD4(_Unwind_Exception *a1)
{
}

void sub_22FD2AB74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__134503(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__134504(uint64_t a1)
{
}

void sub_22FD2B1E0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_22FD2C050(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, id *location, uint64_t a13, id a14)
{
}

void sub_22FD2D540(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location, id a16)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  objc_destroyWeak(&a16);
  _Unwind_Resume(a1);
}

void sub_22FD34758(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t __conformanceCheck(void *a1, uint64_t a2, char a3)
{
  id v5 = a1;
  os_unfair_lock_lock_with_options();
  uint64_t v12 = 0;
  id v13 = &v12;
  uint64_t v14 = 0x3032000000;
  long long v15 = __Block_byref_object_copy__136234;
  id v16 = __Block_byref_object_dispose__136235;
  id v17 = [*((id *)v5 + 3) objectForKey:a2];
  id v6 = (void *)v13[5];
  if (!v6 || (a3 & 1) != 0)
  {
    id v8 = (void *)*((void *)v5 + 2);
    v11[0] = MEMORY[0x263EF8330];
    v11[1] = 3221225472;
    v11[2] = ____conformanceCheck_block_invoke;
    v11[3] = &unk_264A20E60;
    void v11[4] = &v12;
    v11[5] = a2;
    objc_msgSend(v8, "hmf_enumerateWithAutoreleasePoolUsingBlock:", v11);
    [*((id *)v5 + 3) setObject:v13[5] forKey:a2];
    uint64_t v7 = [(id)v13[5] BOOLValue];
  }
  else
  {
    uint64_t v7 = [v6 BOOLValue];
  }
  uint64_t v9 = v7;
  _Block_object_dispose(&v12, 8);

  os_unfair_lock_unlock((os_unfair_lock_t)v5 + 2);
  return v9;
}

void sub_22FD34CAC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15)
{
  os_unfair_lock_unlock(v15);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__136234(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__136235(uint64_t a1)
{
}

void ____conformanceCheck_block_invoke(uint64_t a1, uint64_t a2, unsigned char *a3)
{
  uint64_t v5 = [*(id *)(a1 + 40) conformsToProtocol:a2];
  uint64_t v6 = [NSNumber numberWithBool:v5];
  uint64_t v7 = *(void *)(*(void *)(a1 + 32) + 8);
  id v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v6;

  if (v5) {
    *a3 = 1;
  }
}

void sub_22FD36A7C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location)
{
  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22FD37CF8(_Unwind_Exception *a1)
{
}

void sub_22FD38004(_Unwind_Exception *a1)
{
}

void sub_22FD38D94(_Unwind_Exception *a1)
{
}

void sub_22FD39860(_Unwind_Exception *a1)
{
}

void sub_22FD39954(_Unwind_Exception *a1)
{
}

void sub_22FD399E8(_Unwind_Exception *a1)
{
}

void __bootstrapSupportedStereoPairVersions(void *a1)
{
  uint64_t v26 = *MEMORY[0x263EF8340];
  id v1 = a1;
  id v2 = [v1 identifier];
  id v3 = (id)_mediaRouteIdentifier;
  if (([v2 isEqual:v3] & 1) == 0)
  {
    uint64_t v4 = [v1 supportedStereoPairVersions];

    if (v4) {
      goto LABEL_5;
    }
    uint64_t v5 = [v1 softwareVersion];
    uint64_t v6 = v5;
    if (v5)
    {
      id v2 = v5;
    }
    else
    {
      uint64_t v7 = [v1 device];
      id v8 = [v7 productInfo];
      id v2 = [v8 softwareVersion];
    }
    if ([v1 isHomePod])
    {
      BOOL v9 = 0;
      if (!v2)
      {
LABEL_13:
        *(_OWORD *)long long buf = *MEMORY[0x263F42068];
        uint64_t v25 = *(void *)(MEMORY[0x263F42068] + 16);
        uint64_t v12 = HMFOperatingSystemVersionCompare();
        if (v2) {
          [v2 operatingSystemVersion];
        }
        *(_OWORD *)long long buf = *MEMORY[0x263F42170];
        uint64_t v25 = *(void *)(MEMORY[0x263F42170] + 16);
        uint64_t v13 = HMFOperatingSystemVersionCompare();
        char v19 = v12 != 1 || v9;
        if ((v19 & 1) == 0 && v13 != 1)
        {
          id v20 = (void *)MEMORY[0x230FBD990](v13, v14, v15, v16, v17, v18);
          id v21 = v1;
          id v22 = HMFGetOSLogHandle();
          if (os_log_type_enabled(v22, OS_LOG_TYPE_INFO))
          {
            __int16 v23 = HMFGetLogIdentifier();
            *(_DWORD *)long long buf = 138543362;
            *(void *)&uint8_t buf[4] = v23;
            _os_log_impl(&dword_22F52A000, v22, OS_LOG_TYPE_INFO, "%{public}@Bootstrapping stereo pair version to V1", buf, 0xCu);
          }
          [v21 setSupportedStereoPairVersions:1];
        }
        goto LABEL_3;
      }
    }
    else
    {
      id v10 = [v1 device];
      id v11 = [v10 productInfo];
      BOOL v9 = [v11 productClass] != 6;

      if (!v2) {
        goto LABEL_13;
      }
    }
    [v2 operatingSystemVersion];
    goto LABEL_13;
  }

LABEL_3:
LABEL_5:
}

void __HMDAppleMediaAccessoryHandleUpdatedDevice(void *a1, void *a2)
{
  uint64_t v21 = *MEMORY[0x263EF8340];
  id v3 = a1;
  id v4 = a2;
  uint64_t v5 = (void *)MEMORY[0x230FBD990]();
  id v6 = v3;
  uint64_t v7 = HMFGetOSLogHandle();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    id v8 = HMFGetLogIdentifier();
    int v17 = 138543618;
    uint64_t v18 = v8;
    __int16 v19 = 2112;
    id v20 = v4;
    _os_log_impl(&dword_22F52A000, v7, OS_LOG_TYPE_DEFAULT, "%{public}@Device updated to: %@", (uint8_t *)&v17, 0x16u);
  }
  BOOL v9 = [v6 notificationCenter];
  [v9 removeObserver:v6 name:@"HMDDeviceUpdatedNotification" object:0];

  if (v4)
  {
    [v6 startMonitoringReachability];
    id v10 = [v6 symptomsHandler];
    [v10 handleAccessoryDeviceUpdated];

    id v11 = [v6 identifier];
    uint64_t v12 = [v6 deviceMediaRouteIdentifierFactory];
    uint64_t v13 = v12[2]();
    int v14 = [v11 isEqual:v13];

    if (v14)
    {
      uint64_t v15 = [v6 notificationCenter];
      [v15 addObserver:v6 selector:sel_handleCurrentDeviceUpdated_ name:@"HMDDeviceUpdatedNotification" object:v4];

      if ([v6 shouldUpdateWithDevice:v4 initialConfiguration:0]) {
        [v6 updateWithDevice:v4];
      }
    }
    __bootstrapSupportedStereoPairVersions(v6);
    uint64_t v16 = [v6 notificationCenter];
    [v16 postNotificationName:@"HMDAppleMediaAccessoryDeviceUpdatedNotification" object:v6];
  }
  [v6 updateReachabilityOfCurrentDevice];
}

void sub_22FD3DCF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__137201(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__137202(uint64_t a1)
{
}

void __transactionAccessoryUpdated_137203(void *a1, void *a2, void *a3)
{
  uint64_t v180 = *MEMORY[0x263EF8340];
  id v5 = a1;
  id v6 = a2;
  id v159 = a3;
  uint64_t v7 = [v159 transactionResult];
  id v8 = __HMDAppleMediaAccessoryGetDeviceController(v5);
  BOOL v9 = [v6 deviceUUID];

  if (v9)
  {
    if ([v5 isCurrentAccessory])
    {
      if (!v8)
      {
        id v10 = (void *)MEMORY[0x230FBD990]();
        id v11 = v5;
        uint64_t v12 = HMFGetOSLogHandle();
        if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
        {
          uint64_t v13 = HMFGetLogIdentifier();
          *(_DWORD *)long long buf = 138543362;
          v173 = v13;
          _os_log_impl(&dword_22F52A000, v12, OS_LOG_TYPE_INFO, "%{public}@Setting up device controller for ourselves", buf, 0xCu);
        }
        int v14 = [v11 dependencyFactory];
        id v8 = [v14 deviceController];

        [v11 setDeviceController:v8];
        [v8 setDelegate:v11];
        uint64_t v15 = [v8 device];
        __HMDAppleMediaAccessoryHandleUpdatedDevice(v11, v15);

        [v7 markChanged];
      }
    }
    else
    {
      id v16 = objc_alloc(MEMORY[0x263F08C38]);
      int v17 = [v6 deviceUUID];
      uint64_t v18 = (void *)[v16 initWithUUIDString:v17];

      __int16 v19 = [v8 identifier];
      char v20 = objc_msgSend(v18, "hmf_isEqualToUUID:", v19);

      if (v20)
      {
        uint64_t v21 = v8;
      }
      else
      {
        id v22 = (void *)MEMORY[0x230FBD990]();
        id v23 = v5;
        id v24 = HMFGetOSLogHandle();
        if (os_log_type_enabled(v24, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v25 = HMFGetLogIdentifier();
          uint64_t v26 = [v18 UUIDString];
          *(_DWORD *)long long buf = 138543618;
          v173 = v25;
          __int16 v174 = 2112;
          uint64_t v175 = (uint64_t)v26;
          _os_log_impl(&dword_22F52A000, v24, OS_LOG_TYPE_DEFAULT, "%{public}@Updating the underlying device with identifier: %@", buf, 0x16u);
        }
        id v27 = [v23 dependencyFactory];
        uint64_t v21 = [v27 deviceControllerWithDeviceIdentifier:v18];

        [v23 setDeviceController:v21];
        [v21 setDelegate:v23];
        id v28 = [v21 device];
        __HMDAppleMediaAccessoryHandleUpdatedDevice(v23, v28);

        [v7 markChanged];
      }

      id v8 = v21;
    }
  }
  long long v29 = [v6 device];

  if (v29)
  {
    uint64_t v30 = [v6 device];
    id v31 = [v5 device];
    BOOL v32 = v30 == v31;

    if (!v32)
    {
      id v33 = [v5 device];

      if (v33)
      {
        long long v168 = 0u;
        long long v169 = 0u;
        long long v166 = 0u;
        long long v167 = 0u;
        id v34 = [v5 device];
        long long v35 = [v34 backingStoreObjectsWithChangeType:0 version:4];

        uint64_t v36 = [v35 countByEnumeratingWithState:&v166 objects:v179 count:16];
        if (v36)
        {
          uint64_t v37 = *(void *)v167;
          do
          {
            for (uint64_t i = 0; i != v36; ++i)
            {
              if (*(void *)v167 != v37) {
                objc_enumerationMutation(v35);
              }
              [*(id *)(*((void *)&v166 + 1) + 8 * i) dumpDebug:@" LOCAL: "];
            }
            uint64_t v36 = [v35 countByEnumeratingWithState:&v166 objects:v179 count:16];
          }
          while (v36);
        }
      }
      id v39 = [v6 device];

      if (v39)
      {
        long long v164 = 0u;
        long long v165 = 0u;
        long long v162 = 0u;
        long long v163 = 0u;
        __int16 v40 = [v6 device];
        id v41 = [v40 backingStoreObjectsWithChangeType:0 version:4];

        uint64_t v42 = [v41 countByEnumeratingWithState:&v162 objects:v178 count:16];
        if (v42)
        {
          uint64_t v43 = *(void *)v163;
          do
          {
            for (uint64_t j = 0; j != v42; ++j)
            {
              if (*(void *)v163 != v43) {
                objc_enumerationMutation(v41);
              }
              [*(id *)(*((void *)&v162 + 1) + 8 * j) dumpDebug:@"REMOTE: "];
            }
            uint64_t v42 = [v41 countByEnumeratingWithState:&v162 objects:v178 count:16];
          }
          while (v42);
        }
      }
    }
    if (!v8)
    {
      uint64_t v45 = [v5 dependencyFactory];
      uint64_t v46 = [v6 device];
      id v8 = [v45 deviceControllerWithDevice:v46];

      [v5 setDeviceController:v8];
      [v8 setDelegate:v5];
      char v47 = [v8 device];
      __HMDAppleMediaAccessoryHandleUpdatedDevice(v5, v47);
    }
    uint64_t v48 = [v6 device];
    id v49 = [v5 device];
    BOOL v50 = v48 == v49;

    if (v50) {
      goto LABEL_38;
    }
    __int16 v51 = [v5 device];
    uint64_t v52 = [v6 device];
    char v53 = [v51 isBackingStorageEqual:v52];

    if ((v53 & 1) == 0)
    {
      id v54 = [v6 device];
      [v8 updateWithDevice:v54 completionHandler:0];

LABEL_38:
      [v7 markChanged];
    }
  }
  uint64_t v55 = [v6 deviceAddress];
  if (v55)
  {
    double v56 = [v5 deviceAddress];
    char v57 = HMFEqualObjects();

    if ((v57 & 1) == 0)
    {
      uint64_t v58 = (void *)MEMORY[0x230FBD990]();
      id v59 = v5;
      uint64_t v60 = HMFGetOSLogHandle();
      if (os_log_type_enabled(v60, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v61 = HMFGetLogIdentifier();
        *(_DWORD *)long long buf = 138543618;
        v173 = v61;
        __int16 v174 = 2112;
        uint64_t v175 = (uint64_t)v55;
        _os_log_impl(&dword_22F52A000, v60, OS_LOG_TYPE_DEFAULT, "%{public}@Updating deviceAddress %@", buf, 0x16u);
      }
      [v59 setDeviceAddress:v55];
      if (!v8)
      {
        uint64_t v62 = [v59 dependencyFactory];
        uint64_t v63 = [v62 deviceWithAddress:v55];

        if (v63)
        {
          long long v64 = [v59 dependencyFactory];
          id v8 = [v64 deviceControllerWithDevice:v63];

          [v59 setDeviceController:v8];
          [v8 setDelegate:v59];
          id v65 = [v8 device];
          __HMDAppleMediaAccessoryHandleUpdatedDevice(v59, v65);
        }
        else
        {
          id v8 = 0;
        }
      }
      [v7 markChanged];
    }
  }
  uint64_t v66 = [v6 deviceIRKData];
  if (v66)
  {
    uint64_t v67 = [v6 deviceIRKData];
    char v68 = [v5 deviceIRK];
    char v69 = HMFEqualObjects();

    if ((v69 & 1) == 0)
    {
      id v70 = (void *)MEMORY[0x230FBD990]();
      id v71 = v5;
      id v72 = HMFGetOSLogHandle();
      if (os_log_type_enabled(v72, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v73 = HMFGetLogIdentifier();
        id v74 = [v6 deviceIRKData];
        *(_DWORD *)long long buf = 138543618;
        v173 = v73;
        __int16 v174 = 2112;
        uint64_t v175 = (uint64_t)v74;
        _os_log_impl(&dword_22F52A000, v72, OS_LOG_TYPE_DEFAULT, "%{public}@Updating deviceIRK %@", buf, 0x16u);
      }
      id v75 = [v6 deviceIRKData];
      [v71 setDeviceIRK:v75];

      [v7 markChanged];
    }
  }

  id v76 = [v6 pairingIdentity];

  if (v76)
  {
    uint64_t v77 = [v6 pairingIdentity];
    [v5 handleTransactionUpdatedPublicPairingIdentity:v77 result:v7];

    long long v78 = *((void *)v5 + 62);
    if (os_signpost_enabled(v78))
    {
      uint64_t v79 = v78;
      id v80 = [v5 uuid];
      *(_DWORD *)long long buf = 138412290;
      v173 = v80;
      _os_signpost_emit_with_name_impl(&dword_22F52A000, v79, OS_SIGNPOST_EVENT, 0xEEEEB0B5B2B2EEEELL, "UpdatePublicPairingIdentify", "accessoryUUID=%{signpost.description:attribute}@ ", buf, 0xCu);
    }
  }
  id v81 = [v6 softwareVersion];

  if (v81)
  {
    int v82 = [v6 softwareVersion];
    id v83 = [v5 softwareVersion];
    char v84 = [v82 isEqual:v83];

    if ((v84 & 1) == 0)
    {
      uint64_t v85 = (void *)MEMORY[0x230FBD990]();
      id v86 = v5;
      int v87 = HMFGetOSLogHandle();
      if (os_log_type_enabled(v87, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v88 = HMFGetLogIdentifier();
        uint64_t v89 = [v6 softwareVersion];
        *(_DWORD *)long long buf = 138543618;
        v173 = v88;
        __int16 v174 = 2112;
        uint64_t v175 = (uint64_t)v89;
        _os_log_impl(&dword_22F52A000, v87, OS_LOG_TYPE_DEFAULT, "%{public}@Updated software version: %@", buf, 0x16u);
      }
      uint64_t v90 = [v6 softwareVersion];
      [v86 setSoftwareVersion:v90];

      [v7 markChanged];
      if ([v86 isCurrentAccessory])
      {
        uint64_t v91 = [v86 softwareVersion];
        uint64_t v92 = [MEMORY[0x263F42620] productInfo];
        uint64_t v93 = [v92 softwareVersion];
        char v94 = HMFEqualObjects();

        if ((v94 & 1) == 0)
        {
          long long v95 = (void *)MEMORY[0x230FBD990]();
          id v96 = v86;
          long long v97 = HMFGetOSLogHandle();
          if (os_log_type_enabled(v97, OS_LOG_TYPE_DEFAULT))
          {
            long long v98 = HMFGetLogIdentifier();
            uint64_t v99 = [v96 softwareVersion];
            uint64_t v100 = [MEMORY[0x263F42620] productInfo];
            uint64_t v101 = [v100 softwareVersion];
            *(_DWORD *)long long buf = 138543874;
            v173 = v98;
            __int16 v174 = 2112;
            uint64_t v175 = (uint64_t)v99;
            __int16 v176 = 2112;
            long long v177 = v101;
            _os_log_impl(&dword_22F52A000, v97, OS_LOG_TYPE_DEFAULT, "%{public}@Stored software version is incorrect (%@), updating to: (%@)", buf, 0x20u);
          }
          uint64_t v102 = [MEMORY[0x263F42620] productInfo];
          uint64_t v103 = [v102 softwareVersion];
          [v96 _updateSoftwareVersion:v103];
        }
      }
    }
  }
  uint64_t v104 = [v6 variant];
  if (v104)
  {
    uint64_t v105 = [v6 variant];
    uint64_t v106 = [v105 unsignedIntegerValue];
    LOBYTE(v106) = v106 == [v5 variant];

    if ((v106 & 1) == 0)
    {
      uint64_t v107 = [v6 variant];
      objc_msgSend(v5, "setVariant:", objc_msgSend(v107, "unsignedIntegerValue"));

      uint64_t v108 = (void *)MEMORY[0x230FBD990]();
      uint64_t v109 = v5;
      uint64_t v110 = HMFGetOSLogHandle();
      if (os_log_type_enabled(v110, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v111 = HMFGetLogIdentifier();
        uint64_t v112 = [v109 variant];
        *(_DWORD *)long long buf = 138543618;
        v173 = v111;
        __int16 v174 = 2048;
        uint64_t v175 = v112;
        _os_log_impl(&dword_22F52A000, v110, OS_LOG_TYPE_DEFAULT, "%{public}@Updated accessory variant: 0x%tx", buf, 0x16u);
      }
      uint64_t v113 = v109[62];
      if (os_signpost_enabled(v113))
      {
        uint64_t v114 = v113;
        uint64_t v115 = [v109 uuid];
        *(_DWORD *)long long buf = 138412290;
        v173 = v115;
        _os_signpost_emit_with_name_impl(&dword_22F52A000, v114, OS_SIGNPOST_EVENT, 0xEEEEB0B5B2B2EEEELL, "updatedAccessoryVariant", "accessoryUUID=%{signpost.description:attribute}@ ", buf, 0xCu);
      }
      [v7 markChanged];
    }
  }
  if ([v6 propertyWasSet:@"accessoryCapabilities"])
  {
    id v116 = objc_alloc(MEMORY[0x263F0DF30]);
    uint64_t v117 = [v6 accessoryCapabilities];
    uint64_t v118 = (void *)[v116 initWithProtoData:v117];

    if (v118)
    {
      os_unfair_recursive_lock_lock_with_options();
      uint64_t v119 = (void *)*((void *)v5 + 69);
      if (v119 && ([v119 isEqual:v118] & 1) != 0)
      {
        os_unfair_recursive_lock_unlock();
      }
      else
      {
        objc_storeStrong((id *)v5 + 69, v118);
        uint64_t v120 = [v6 accessoryCapabilities];
        uint64_t v121 = (void *)*((void *)v5 + 70);
        *((void *)v5 + 70) = v120;

        uint64_t v122 = os_unfair_recursive_lock_unlock();
        uint64_t v123 = (void *)MEMORY[0x230FBD990](v122);
        uint64_t v124 = v5;
        uint64_t v125 = HMFGetOSLogHandle();
        if (os_log_type_enabled(v125, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v126 = HMFGetLogIdentifier();
          *(_DWORD *)long long buf = 138543618;
          v173 = v126;
          __int16 v174 = 2112;
          uint64_t v175 = (uint64_t)v118;
          _os_log_impl(&dword_22F52A000, v125, OS_LOG_TYPE_DEFAULT, "%{public}@Updated accessory capabilities %@", buf, 0x16u);
        }
        uint64_t v127 = v124[62];
        if (os_signpost_enabled(v127))
        {
          uint64_t v128 = v127;
          uint64_t v129 = [v124 uuid];
          *(_DWORD *)long long buf = 138412290;
          v173 = v129;
          _os_signpost_emit_with_name_impl(&dword_22F52A000, v128, OS_SIGNPOST_EVENT, 0xEEEEB0B5B2B2EEEELL, "UpdatedAccessoryCapabilities", "accessoryUUID=%{signpost.description:attribute}@ ", buf, 0xCu);
        }
        [v7 markChanged];
        uint64_t v130 = [v124 notificationCenter];
        v170[0] = @"accessoryUUID";
        uint64_t v131 = [v124 uuid];
        v170[1] = @"accessoryCapabilities";
        v171[0] = v131;
        v171[1] = v118;
        uint64_t v132 = [NSDictionary dictionaryWithObjects:v171 forKeys:v170 count:2];
        [v130 postNotificationName:@"HMDAppleMediaAccessoryCapabilitiesUpdatedNotification" object:v124 userInfo:v132];
      }
    }
  }
  if ([v6 propertyWasSet:@"idsIdentifier"])
  {
    uint64_t v133 = [v5 idsIdentifier];
    uint64_t v134 = [v6 idsIdentifier];
    int v135 = objc_msgSend(v133, "hmf_isEqualToUUID:", v134);

    if (v135)
    {
      uint64_t v136 = [v6 idsIdentifier];
      [v5 setIdsIdentifier:v136];

      uint64_t v137 = *((void *)v5 + 62);
      if (os_signpost_enabled(v137))
      {
        uint64_t v138 = v137;
        uint64_t v139 = [v5 uuid];
        *(_DWORD *)long long buf = 138412290;
        v173 = v139;
        _os_signpost_emit_with_name_impl(&dword_22F52A000, v138, OS_SIGNPOST_EVENT, 0xEEEEB0B5B2B2EEEELL, "UpdatedAccessoryIDS", "accessoryUUID=%{signpost.description:attribute}@ ", buf, 0xCu);
      }
      [v7 markChanged];
    }
  }
  if ([v6 propertyWasSet:@"supportedStereoPairVersions"])
  {
    uint64_t v140 = [v6 supportedStereoPairVersions];
    uint64_t v141 = objc_msgSend(NSNumber, "numberWithUnsignedInteger:", objc_msgSend(v5, "supportedStereoPairVersions"));
    char v142 = [v140 isEqual:v141];

    if ((v142 & 1) == 0)
    {
      uint64_t v143 = (void *)MEMORY[0x230FBD990]();
      id v144 = v5;
      uint64_t v145 = HMFGetOSLogHandle();
      if (os_log_type_enabled(v145, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v146 = HMFGetLogIdentifier();
        uint64_t v147 = [v6 supportedStereoPairVersions];
        *(_DWORD *)long long buf = 138543618;
        v173 = v146;
        __int16 v174 = 2112;
        uint64_t v175 = (uint64_t)v147;
        _os_log_impl(&dword_22F52A000, v145, OS_LOG_TYPE_DEFAULT, "%{public}@Updated supported stereo pair versions: %@", buf, 0x16u);
      }
      uint64_t v148 = [v6 supportedStereoPairVersions];
      objc_msgSend(v144, "setSupportedStereoPairVersions:", objc_msgSend(v148, "unsignedIntegerValue"));

      [v7 markChanged];
    }
  }
  v160[0] = MEMORY[0x263EF8330];
  v160[1] = 3221225472;
  v160[2] = ____transactionAccessoryUpdated_block_invoke_137222;
  v160[3] = &unk_264A27D78;
  id v149 = v7;
  id v161 = v149;
  [v5 transactionAccessoryUpdatedForPreferredMediaUser:v6 completionHandler:v160];
  if ([v6 propertyWasSet:@"productColor"])
  {
    uint64_t v150 = [v6 productColor];
    uint64_t v151 = objc_msgSend(NSNumber, "numberWithInteger:", objc_msgSend(v5, "productColor"));
    char v152 = [v150 isEqual:v151];

    if ((v152 & 1) == 0)
    {
      uint64_t v153 = (void *)MEMORY[0x230FBD990]();
      id v154 = v5;
      uint64_t v155 = HMFGetOSLogHandle();
      if (os_log_type_enabled(v155, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v156 = HMFGetLogIdentifier();
        uint64_t v157 = [v6 productColor];
        *(_DWORD *)long long buf = 138543618;
        v173 = v156;
        __int16 v174 = 2112;
        uint64_t v175 = (uint64_t)v157;
        _os_log_impl(&dword_22F52A000, v155, OS_LOG_TYPE_DEFAULT, "%{public}@Updated product color: %@", buf, 0x16u);
      }
      uint64_t v158 = [v6 productColor];
      objc_msgSend(v154, "setProductColor:", objc_msgSend(v158, "unsignedIntegerValue"));

      [v149 markChanged];
    }
  }
  [v159 respondWithPayload:0];
}

void sub_22FD3F178(_Unwind_Exception *a1)
{
}

id __HMDAppleMediaAccessoryGetDeviceController(void *a1)
{
  id v1 = a1;
  os_unfair_recursive_lock_lock_with_options();
  id v2 = v1[59];
  os_unfair_recursive_lock_unlock();

  return v2;
}

uint64_t ____transactionAccessoryUpdated_block_invoke_137222(uint64_t result, int a2)
{
  if (a2) {
    return [*(id *)(result + 32) markChanged];
  }
  return result;
}

void sub_22FD3FE6C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22FD40754(_Unwind_Exception *a1)
{
}

void sub_22FD40D98(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22FD4158C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22FD42E44(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

void sub_22FD43B4C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 80));
  _Unwind_Resume(a1);
}

void sub_22FD44600(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,id location)
{
  objc_destroyWeak(v23);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22FD44C64(_Unwind_Exception *a1)
{
}

void sub_22FD45D04(_Unwind_Exception *a1)
{
}

id getMCProfileConnectionClass()
{
  uint64_t v4 = 0;
  id v5 = &v4;
  uint64_t v6 = 0x2050000000;
  uint64_t v0 = (void *)getMCProfileConnectionClass_softClass;
  uint64_t v7 = getMCProfileConnectionClass_softClass;
  if (!getMCProfileConnectionClass_softClass)
  {
    v3[0] = MEMORY[0x263EF8330];
    v3[1] = 3221225472;
    void v3[2] = __getMCProfileConnectionClass_block_invoke;
    v3[3] = &unk_264A2C2A8;
    v3[4] = &v4;
    __getMCProfileConnectionClass_block_invoke((uint64_t)v3);
    uint64_t v0 = (void *)v5[3];
  }
  id v1 = v0;
  _Block_object_dispose(&v4, 8);
  return v1;
}

void sub_22FD48434(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class __getMCProfileConnectionClass_block_invoke(uint64_t a1)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  v4[0] = 0;
  if (!ManagedConfigurationLibraryCore_frameworkLibrary)
  {
    v4[1] = MEMORY[0x263EF8330];
    v4[2] = 3221225472;
    v4[3] = __ManagedConfigurationLibraryCore_block_invoke;
    v4[4] = &__block_descriptor_40_e5_v8__0l;
    void v4[5] = v4;
    long long v5 = xmmword_264A210D8;
    uint64_t v6 = 0;
    ManagedConfigurationLibraryCore_frameworkLibrary = _sl_dlopen();
    uint64_t v2 = (void *)v4[0];
    if (!ManagedConfigurationLibraryCore_frameworkLibrary)
    {
      abort_report_np();
      goto LABEL_7;
    }
    if (v4[0]) {
      goto LABEL_8;
    }
  }
  while (1)
  {
    Class result = objc_getClass("MCProfileConnection");
    *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
    if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
      break;
    }
LABEL_7:
    uint64_t v2 = (void *)abort_report_np();
LABEL_8:
    free(v2);
  }
  getMCProfileConnectionClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t __ManagedConfigurationLibraryCore_block_invoke()
{
  uint64_t result = _sl_dlopen();
  ManagedConfigurationLibraryCore_frameworkLibrary = result;
  return result;
}

void sub_22FD48F74(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id addressesFromWANRule(void *a1)
{
  v16[1] = *MEMORY[0x263EF8340];
  id v1 = [a1 subject];
  uint64_t v2 = [v1 hostnames];

  if (v2)
  {
    id v3 = [v1 hostnames];
    goto LABEL_8;
  }
  uint64_t v4 = [v1 addresses];

  if (v4)
  {
    long long v5 = [v1 addresses];
    uint64_t v6 = objc_msgSend(v5, "na_map:", &__block_literal_global_70_137812);
LABEL_7:
    id v3 = (void *)v6;

    goto LABEL_8;
  }
  uint64_t v7 = [v1 addressRange];

  if (v7)
  {
    id v8 = NSString;
    BOOL v9 = [v1 addressRange];
    id v10 = [v9 addressStart];
    id v11 = [v10 addressString];
    uint64_t v12 = [v1 addressRange];
    uint64_t v13 = [v12 addressEnd];
    int v14 = [v13 addressString];
    long long v5 = [v8 stringWithFormat:@"%@ - %@", v11, v14];

    v16[0] = v5;
    uint64_t v6 = [MEMORY[0x263EFF8C0] arrayWithObjects:v16 count:1];
    goto LABEL_7;
  }
  id v3 = (void *)MEMORY[0x263EFFA68];
LABEL_8:

  return v3;
}

uint64_t __addressesFromWANRule_block_invoke(uint64_t a1, void *a2)
{
  return [a2 addressString];
}

id wanRuleFromJSONRule(void *a1)
{
  uint64_t v20 = *MEMORY[0x263EF8340];
  id v1 = a1;
  uint64_t v2 = (void *)MEMORY[0x263F08900];
  id v3 = [v1 dataUsingEncoding:4];
  id v15 = 0;
  uint64_t v4 = [v2 JSONObjectWithData:v3 options:0 error:&v15];
  id v5 = v15;

  id v6 = v4;
  objc_opt_class();
  if (objc_opt_isKindOfClass()) {
    uint64_t v7 = v6;
  }
  else {
    uint64_t v7 = 0;
  }
  id v8 = v7;

  if (v8)
  {
    BOOL v9 = +[HMDNetworkRouterFirewallRuleWAN createWithJSONDictionary:v8 error:0];
    if (v9) {
      goto LABEL_12;
    }
    id v10 = (void *)MEMORY[0x230FBD990]();
    id v11 = HMFGetOSLogHandle();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
    {
      uint64_t v12 = HMFGetLogIdentifier();
      *(_DWORD *)long long buf = 138543618;
      int v17 = v12;
      __int16 v18 = 2112;
      id v19 = v8;
      uint64_t v13 = "%{public}@Failed to convert dictionary %@ to HMDNetworkRouterFirewallRuleWAN";
LABEL_10:
      _os_log_impl(&dword_22F52A000, v11, OS_LOG_TYPE_ERROR, v13, buf, 0x16u);
    }
  }
  else
  {
    id v10 = (void *)MEMORY[0x230FBD990]();
    id v11 = HMFGetOSLogHandle();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
    {
      uint64_t v12 = HMFGetLogIdentifier();
      *(_DWORD *)long long buf = 138543618;
      int v17 = v12;
      __int16 v18 = 2112;
      id v19 = v1;
      uint64_t v13 = "%{public}@Failed to convert JSON string %@ to dictionary";
      goto LABEL_10;
    }
  }

  BOOL v9 = 0;
LABEL_12:

  return v9;
}

__CFString *HMDCameraRemoteStreamSessionStateAsString(uint64_t a1)
{
  uint64_t v1 = a1 - 1;
  if (unint64_t)(a1 - 1) < 8 && ((0x8Bu >> v1))
  {
    uint64_t v2 = off_264A210F0[v1];
  }
  else
  {
    objc_msgSend(NSString, "stringWithFormat:", @"Unknown HMDCameraRemoteStreamSessionState %tu", a1);
    uint64_t v2 = (__CFString *)objc_claimAutoreleasedReturnValue();
  }
  return v2;
}

uint64_t __Block_byref_object_copy__138097(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__138098(uint64_t a1)
{
}

id wrapAppDataDictionary(void *a1)
{
  v5[1] = *MEMORY[0x263EF8340];
  id v1 = a1;
  if ([v1 count])
  {
    uint64_t v4 = @"com.apple.homekit-entitledclient.identifer";
    v5[0] = v1;
    uint64_t v2 = [NSDictionary dictionaryWithObjects:v5 forKeys:&v4 count:1];
  }
  else
  {
    uint64_t v2 = 0;
  }

  return v2;
}

void sub_22FD56C7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__138257(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__138258(uint64_t a1)
{
}

void sub_22FD583C8(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FD5A970(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  _Block_object_dispose(&a30, 8);
  _Block_object_dispose((const void *)(v30 - 184), 8);
  _Unwind_Resume(a1);
}

void addFallbackLANRules(unsigned char *a1, void *a2, void *a3)
{
  id v9 = a2;
  id v5 = a3;
  if ([v5 hasFullAccessToLAN])
  {
    *a1 = 1;
  }
  else
  {
    id v6 = [v5 lanRules];
    uint64_t v7 = [v6 count];

    if (v7)
    {
      id v8 = [v5 lanRules];
      [v9 addObjectsFromArray:v8];
    }
  }
}

void sub_22FD5B508(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location,char a21)
{
  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  _Block_object_dispose(&a21, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__138484(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__138485(uint64_t a1)
{
}

void sub_22FD5BAFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
}

void sub_22FD5C6F0(_Unwind_Exception *a1)
{
}

void sub_22FD5D408(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FD5D494(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FD5D528(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FD5D5C0(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FD5D65C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FD621EC(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FD62260(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FD62788(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22FD62F84(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22FD63780(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22FD63F7C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22FD65FB8(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 128));
  _Unwind_Resume(a1);
}

void sub_22FD68B28(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FD69064(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FD69450(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FD697A8(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FD6983C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FD699A0(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FD6B388(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FD6B43C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FD6B508(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FD6B844(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FD6B9B8(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FD6BAB4(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FD6CCA8(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FD6CD88(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FD6CE14(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FD6CEA0(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FD6CF2C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FD6CFB8(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FD6D034(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FD6D0B0(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FD6F904(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FD6FA38(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22FD6FC30(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FD6FCBC(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FD6FD38(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FD722C0(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FD72424(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FD724D0(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FD72640(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FD726E8(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FD72794(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FD72834(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FD728E0(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FD7296C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FD72B40(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_unfair_lock_t lock)
{
}

void sub_22FD72C1C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FD72D2C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FD72F08(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FD72FE0(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FD73114(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FD731C0(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FD7324C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FD732C8(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FD73344(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FD733C0(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FD7343C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FD734B8(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FD7359C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FD76014(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22FD7C494(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FD7C710(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FD7C78C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FD7CBA8(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FD7CDA0(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void __HMDDeviceControllerUpdateDevice(void *a1, void *a2)
{
  uint64_t v18 = *MEMORY[0x263EF8340];
  id v3 = a1;
  id v4 = a2;
  if (v3)
  {
    id v5 = (void *)MEMORY[0x230FBD990]();
    id v6 = v3;
    uint64_t v7 = HMFGetOSLogHandle();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEBUG))
    {
      id v8 = HMFGetLogIdentifier();
      int v14 = 138543618;
      id v15 = v8;
      __int16 v16 = 2112;
      id v17 = v4;
      _os_log_impl(&dword_22F52A000, v7, OS_LOG_TYPE_DEBUG, "%{public}@Updating device: %@", (uint8_t *)&v14, 0x16u);
    }
    os_unfair_lock_lock_with_options();
    if (*((id *)v6 + 3) == v4)
    {
      os_unfair_lock_unlock((os_unfair_lock_t)v6 + 2);
    }
    else
    {
      objc_storeStrong((id *)v6 + 3, a2);
      os_unfair_lock_unlock((os_unfair_lock_t)v6 + 2);
      id v9 = (void *)MEMORY[0x230FBD990]();
      id v10 = v6;
      id v11 = HMFGetOSLogHandle();
      if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v12 = HMFGetLogIdentifier();
        int v14 = 138543618;
        id v15 = v12;
        __int16 v16 = 2112;
        id v17 = v4;
        _os_log_impl(&dword_22F52A000, v11, OS_LOG_TYPE_DEFAULT, "%{public}@Updated device: %@", (uint8_t *)&v14, 0x16u);
      }
      uint64_t v13 = [v10 delegate];
      if (objc_opt_respondsToSelector()) {
        [v13 deviceController:v10 didUpdateDevice:v4];
      }
    }
  }
}

__CFString *HMDNetworkRouterControlOperationStatusTypeAsString(unint64_t a1)
{
  if (a1 >= 0xC)
  {
    objc_msgSend(NSString, "stringWithFormat:", @"Unknown HMDNetworkRouterControlOperationStatusType %ld", a1);
    id v1 = (__CFString *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    id v1 = off_264A216D0[a1];
  }
  return v1;
}

void sub_22FD855C8(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FD88070(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FD897E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__143332(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__143333(uint64_t a1)
{
}

void sub_22FD8E15C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22FD8EE0C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,char a39,uint64_t a40,uint64_t a41,uint64_t a42,id location)
{
  _Block_object_dispose((const void *)(v43 - 176), 8);
  _Block_object_dispose(&a39, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__144125(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__144126(uint64_t a1)
{
}

void sub_22FD8F3EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22FD8FDC0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22FD915D0(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FD9176C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FD91ABC(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FD91E24(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FD91FE4(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FD9C708(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__145346(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__145347(uint64_t a1)
{
}

__CFString *HMDStreamingTierTypeAsString(unint64_t a1)
{
  if (a1 >= 5)
  {
    objc_msgSend(NSString, "stringWithFormat:", @"Unknown HMDStreamingTierType %tu", a1);
    id v1 = (__CFString *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    id v1 = off_264A218E0[a1];
  }
  return v1;
}

__CFString *HMDVideoCodecTypeAsString(uint64_t a1)
{
  if (a1)
  {
    objc_msgSend(NSString, "stringWithFormat:", @"Unknown HMDVideoCodecType %tu", a1);
    uint64_t v2 = (__CFString *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    uint64_t v2 = @"HMDVideoCodecTypeH264";
  }
  return v2;
}

__CFString *HMDH264ProfileTypeAsString(unint64_t a1)
{
  if (a1 >= 3)
  {
    objc_msgSend(NSString, "stringWithFormat:", @"Unknown HMDH264ProfileType %tu", a1);
    uint64_t v1 = (__CFString *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    uint64_t v1 = off_264A21908[a1];
  }
  return v1;
}

__CFString *HMDH264LevelTypeAsString(unint64_t a1)
{
  if (a1 >= 4)
  {
    objc_msgSend(NSString, "stringWithFormat:", @"Unknown HMDH264LevelType %tu", a1);
    uint64_t v1 = (__CFString *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    uint64_t v1 = off_264A21920[a1];
  }
  return v1;
}

__CFString *HMDPacketizationModeTypeAsString(uint64_t a1)
{
  if (a1)
  {
    objc_msgSend(NSString, "stringWithFormat:", @"Unknown HMDPacketizationModeType %tu", a1);
    uint64_t v2 = (__CFString *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    uint64_t v2 = @"HMDPacketizationModeTypeSingleNonInterleaved";
  }
  return v2;
}

__CFString *HMDVideoResolutionTypeAsString(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) >= 0x1D)
  {
    objc_msgSend(NSString, "stringWithFormat:", @"Unknown HMDVideoResolutionType %tu", a1);
    uint64_t v1 = (__CFString *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    uint64_t v1 = off_264A21940[a1 - 1];
  }
  return v1;
}

__CFString *HMDAudioCodecGroupTypeAsString(unint64_t a1)
{
  if (a1 >= 7)
  {
    objc_msgSend(NSString, "stringWithFormat:", @"Unknown HMDAudioCodecGroupType %tu", a1);
    uint64_t v1 = (__CFString *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    uint64_t v1 = off_264A21A28[a1];
  }
  return v1;
}

__CFString *HMDBitRateSettingTypeAsString(uint64_t a1)
{
  if (a1)
  {
    if (a1 == 1)
    {
      uint64_t v2 = @"HMDBitRateSettingTypeConstant";
    }
    else
    {
      objc_msgSend(NSString, "stringWithFormat:", @"Unknown HMDBitRateSettingType %tu", a1);
      uint64_t v2 = (__CFString *)objc_claimAutoreleasedReturnValue();
    }
  }
  else
  {
    uint64_t v2 = @"HMDBitRateSettingTypeVariable";
  }
  return v2;
}

__CFString *HMDAudioSampleRateTypeAsString(unint64_t a1)
{
  if (a1 >= 3)
  {
    objc_msgSend(NSString, "stringWithFormat:", @"Unknown HMDAudioSampleRateType %tu", a1);
    uint64_t v1 = (__CFString *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    uint64_t v1 = off_264A21A60[a1];
  }
  return v1;
}

__CFString *HMDSRTPCryptoSuiteTypeAsString(unint64_t a1)
{
  if (a1 >= 3)
  {
    objc_msgSend(NSString, "stringWithFormat:", @"Unknown HMDSRTPCryptoSuiteType %tu", a1);
    uint64_t v1 = (__CFString *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    uint64_t v1 = off_264A21A78[a1];
  }
  return v1;
}

__CFString *HMDStreamControlPointResponseStatusAsString(unint64_t a1)
{
  if (a1 >= 3)
  {
    objc_msgSend(NSString, "stringWithFormat:", @"Unknown HMDSessionControlCommand %tu", a1);
    uint64_t v1 = (__CFString *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    uint64_t v1 = off_264A21AB8[a1];
  }
  return v1;
}

__CFString *HMDStreamingStatusTypeAsString(unint64_t a1)
{
  if (a1 >= 3)
  {
    objc_msgSend(NSString, "stringWithFormat:", @"Unknown HMDStreamingStatusType %tu", a1);
    uint64_t v1 = (__CFString *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    uint64_t v1 = off_264A21AD0[a1];
  }
  return v1;
}

void sub_22FD9E804(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_22FDA0D64(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 80), 8);
  _Unwind_Resume(a1);
}

void sub_22FDA1EEC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22FDA2C5C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22FDA334C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_22FDA4718(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22FDA6E50(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id *location, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,id a22)
{
}

void sub_22FDAAE40(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

__CFString *HMDDefaultRoomName()
{
  HMDLocalizedStringForKey(@"DEFAULT_ROOM");
  uint64_t v0 = (__CFString *)objc_claimAutoreleasedReturnValue();
  uint64_t v1 = v0;
  if (!v0) {
    uint64_t v0 = @"Default Room";
  }
  uint64_t v2 = v0;

  return v2;
}

void sub_22FDAB6B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__148976(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__148977(uint64_t a1)
{
}

void sub_22FDADF88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
}

void sub_22FDB08AC(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FDB10C8(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FDB142C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FDB15D8(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FDB1660(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FDB1864(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FDB1A10(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FDB638C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22FDB7518(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__149903(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__149904(uint64_t a1)
{
}

void __destructor_8_s0_s8_sb16(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 16);
}

void sub_22FDB9D74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_22FDB9EAC(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 48), 8);
  _Unwind_Resume(a1);
}

void sub_22FDBA868(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  __destructor_8_s0_s8_sb16((uint64_t)va);
  _Unwind_Resume(a1);
}

void __destructor_8_s0_s8_s16_s24_s40(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 40);
}

void __handleUpdatedDevice(void *a1, void *a2)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  id v3 = a1;
  id v4 = a2;
  id v5 = (void *)MEMORY[0x230FBD990]();
  id v6 = v3;
  uint64_t v7 = HMFGetOSLogHandle();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
  {
    id v8 = HMFGetLogIdentifier();
    int v10 = 138543618;
    id v11 = v8;
    __int16 v12 = 2112;
    id v13 = v4;
    _os_log_impl(&dword_22F52A000, v7, OS_LOG_TYPE_INFO, "%{public}@Device updated to: %@", (uint8_t *)&v10, 0x16u);
  }
  if (v4)
  {
    __registerForDeviceNotifications(v6, v4);
    id v9 = [v6 residentDeviceManager];
    [v9 notifyClientsOfUpdatedResidentDevice:v6];
  }
  else
  {
    __deregisterForDeviceNotifications(v6);
  }
}

void __registerForDeviceNotifications(void *a1, void *a2)
{
  uint64_t v16 = *MEMORY[0x263EF8340];
  id v3 = a1;
  id v4 = a2;
  id v5 = v4;
  if (v3 && v4)
  {
    id v6 = (void *)MEMORY[0x230FBD990]();
    id v7 = v3;
    id v8 = HMFGetOSLogHandle();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEBUG))
    {
      id v9 = HMFGetLogIdentifier();
      int v10 = [v5 shortDescription];
      int v12 = 138543618;
      id v13 = v9;
      __int16 v14 = 2112;
      id v15 = v10;
      _os_log_impl(&dword_22F52A000, v8, OS_LOG_TYPE_DEBUG, "%{public}@Registering for device notifications for: %@", (uint8_t *)&v12, 0x16u);
    }
    __deregisterForDeviceNotifications(v7);
    id v11 = [MEMORY[0x263F08A00] defaultCenter];
    [v11 addObserver:v7 selector:sel___deviceUpdated_ name:@"HMDDeviceUpdatedNotification" object:v5];
  }
}

void __deregisterForDeviceNotifications(void *a1)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  id v1 = a1;
  if (v1)
  {
    uint64_t v2 = (void *)MEMORY[0x230FBD990]();
    id v3 = v1;
    id v4 = HMFGetOSLogHandle();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEBUG))
    {
      id v5 = HMFGetLogIdentifier();
      int v7 = 138543362;
      id v8 = v5;
      _os_log_impl(&dword_22F52A000, v4, OS_LOG_TYPE_DEBUG, "%{public}@Deregistering for device notifications", (uint8_t *)&v7, 0xCu);
    }
    id v6 = [MEMORY[0x263F08A00] defaultCenter];
    [v6 removeObserver:v3 name:@"HMDDeviceUpdatedNotification" object:0];
  }
}

void sub_22FDBDBEC(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FDBDE44(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FDBE158(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

uint64_t residentCapabilitiesForDevice(void *a1)
{
  id v1 = a1;
  if ([v1 supportsMediaActions]) {
    uint64_t v2 = 575;
  }
  else {
    uint64_t v2 = 31;
  }
  if ([v1 supportsShortcutActions]) {
    v2 |= 0x100uLL;
  }
  if ([v1 supportsCameraRecording]) {
    v2 |= 0x40uLL;
  }
  if ([v1 supportsRouterManagement]) {
    v2 |= 0x80uLL;
  }
  if ([v1 supportsFirmwareUpdate]) {
    v2 |= 0x800uLL;
  }
  if ([v1 supportsResidentFirmwareUpdate]) {
    v2 |= 0x800000uLL;
  }
  if ([v1 supportsCameraActivityZones]) {
    v2 |= 0x1000uLL;
  }
  if ([v1 supportsFaceClassification]) {
    v2 |= 0x2000uLL;
  }
  if ([v1 supportsNaturalLighting]) {
    v2 |= 0x4000uLL;
  }
  if ([v1 supportsAnnounce]) {
    v2 |= 0x8000uLL;
  }
  if ([v1 supportsThreadBorderRouter]) {
    v2 |= 0x10000uLL;
  }
  if ([v1 supportsCameraRecordingReachabilityNotifications]) {
    v2 |= 0x20000uLL;
  }
  if ([v1 supportsWalletKey]) {
    v2 |= 0x40000uLL;
  }
  if ([v1 supportsAccessCodes]) {
    v2 |= 0x200000uLL;
  }
  if ([v1 supportsLockNotificationContext]) {
    v2 |= 0x80000uLL;
  }
  if ([v1 supportsCameraPackageDetection]) {
    v2 |= 0x100000uLL;
  }
  if ([v1 supportsCHIP]) {
    v2 |= 0x400000uLL;
  }
  if ([v1 supportsCustomMediaApplicationDestination]) {
    v2 |= 0x1000000uLL;
  }
  if ([v1 supportsThreadNetworkCredentialSharing]) {
    v2 |= 0x2000000uLL;
  }
  if ([v1 supportsMatterSharedAdminPairing]) {
    v2 |= 0x4000000uLL;
  }
  if ([v1 supportsEventLog]) {
    v2 |= 0x8000000uLL;
  }
  if ([v1 supportsUWB]) {
    v2 |= 0x20000000uLL;
  }
  if ([v1 supportsMatterTTU]) {
    v2 |= 0x10000000uLL;
  }
  if ([v1 supportsRestrictedGuest]) {
    uint64_t v3 = v2 | 0x40000000;
  }
  else {
    uint64_t v3 = v2;
  }
  int v4 = [v1 supportsMatterOwnerCertFetch];

  if (v4) {
    return v3 | 0x80000000;
  }
  else {
    return v3;
  }
}

void sub_22FDC0B84(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

CFTypeID __HMDIsOPACKValue_block_invoke()
{
  HMDIsOPACKValue_arrayTypeID = CFArrayGetTypeID();
  HMDIsOPACKValue_dictionaryTypeID = CFDictionaryGetTypeID();
  HMDIsOPACKValue_nullTypeID = CFNullGetTypeID();
  HMDIsOPACKValue_BOOLeanTypeID = CFBooleanGetTypeID();
  HMDIsOPACKValue_stringTypeID = CFStringGetTypeID();
  HMDIsOPACKValue_numberTypeID = CFNumberGetTypeID();
  HMDIsOPACKValue_dataTypeID = CFDataGetTypeID();
  CFTypeID result = CFDateGetTypeID();
  HMDIsOPACKValue_dateTypeID = result;
  return result;
}

void sub_22FDC6D2C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, id location)
{
  objc_destroyWeak(v16);
  __HMFActivityScopeLeave();
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22FDC9CBC(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

id HMDTimeOffsetToDateComponents(uint64_t a1, unsigned char *a2)
{
  if ((unint64_t)(a1 + 86399) >= 0x2A2FF)
  {
    id v5 = 0;
    if (a2) {
      *a2 = 0;
    }
  }
  else if (a1)
  {
    id v4 = objc_alloc_init(MEMORY[0x263EFF918]);
    id v5 = v4;
    if (a1 >= 0) {
      unint64_t v6 = a1;
    }
    else {
      unint64_t v6 = -a1;
    }
    uint64_t v7 = (a1 >> 63) | 1;
    uint64_t v8 = v6 % 0x3C;
    if (v8) {
      [v4 setSecond:v7 * v8];
    }
    uint64_t v9 = (unsigned __int16)(v6 / 0x3C) % 0x3Cu;
    if (v9) {
      [v5 setMinute:v7 * v9];
    }
    if (v6 >= 0xE10) {
      [v5 setHour:(int)v7 * (uint64_t)(v6 / 0xE10)];
    }
    if (a2) {
      *a2 = 1;
    }
  }
  else
  {
    if (a2) {
      *a2 = 1;
    }
    id v5 = objc_alloc_init(MEMORY[0x263EFF918]);
  }
  return v5;
}

uint64_t HMDTimeOffsetFromDateComponents(void *a1, BOOL *a2)
{
  id v3 = a1;
  id v4 = v3;
  if (v3)
  {
    uint64_t v5 = [v3 hour];
    if (v5 == 0x7FFFFFFFFFFFFFFFLL) {
      uint64_t v6 = 0;
    }
    else {
      uint64_t v6 = 3600 * v5;
    }
    uint64_t v7 = [v4 minute];
    if (v7 == 0x7FFFFFFFFFFFFFFFLL) {
      uint64_t v8 = 0;
    }
    else {
      uint64_t v8 = 60 * v7;
    }
    uint64_t v9 = [v4 second];
    if (v9 == 0x7FFFFFFFFFFFFFFFLL) {
      uint64_t v10 = 0;
    }
    else {
      uint64_t v10 = v9;
    }
    uint64_t v11 = v8 + v10 + v6;
    if (a2)
    {
      BOOL v12 = [v4 era] == 0x7FFFFFFFFFFFFFFFLL
         && [v4 year] == 0x7FFFFFFFFFFFFFFFLL
         && [v4 month] == 0x7FFFFFFFFFFFFFFFLL
         && [v4 day] == 0x7FFFFFFFFFFFFFFFLL
         && [v4 weekday] == 0x7FFFFFFFFFFFFFFFLL
         && [v4 weekdayOrdinal] == 0x7FFFFFFFFFFFFFFFLL
         && [v4 quarter] == 0x7FFFFFFFFFFFFFFFLL
         && [v4 weekOfMonth] == 0x7FFFFFFFFFFFFFFFLL
         && [v4 weekOfYear] == 0x7FFFFFFFFFFFFFFFLL
         && [v4 yearForWeekOfYear] == 0x7FFFFFFFFFFFFFFFLL;
      goto LABEL_25;
    }
  }
  else
  {
    uint64_t v11 = 0;
    if (a2)
    {
      BOOL v12 = 1;
LABEL_25:
      *a2 = v12;
    }
  }

  return v11;
}

void sub_22FDD3B94(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FDD6374(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__152928(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__152929(uint64_t a1)
{
}

void sub_22FDDDFF0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22FDDE45C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_22FDDE924(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22FDE5E10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__154676(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__154677(uint64_t a1)
{
}

void sub_22FDE6018(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_22FDE864C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,char a35)
{
}

void sub_22FDED8F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __updateAccount(void *a1, int a2)
{
  uint64_t v59 = *MEMORY[0x263EF8340];
  id v3 = a1;
  id v4 = v3;
  if (v3)
  {
    uint64_t v5 = [v3 accountChangeBackoffTimer];
    [v5 suspend];

    uint64_t v6 = (void *)MEMORY[0x230FBD990]();
    id v7 = v4;
    uint64_t v8 = HMFGetOSLogHandle();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
    {
      uint64_t v9 = HMFGetLogIdentifier();
      *(_DWORD *)long long buf = 138543362;
      double v56 = v9;
      _os_log_impl(&dword_22F52A000, v8, OS_LOG_TYPE_INFO, "%{public}@Updating account", buf, 0xCu);
    }
    uint64_t v10 = [v7 account];
    if (!v10)
    {
      id v23 = (void *)MEMORY[0x230FBD990]();
      id v24 = v7;
      uint64_t v25 = HMFGetOSLogHandle();
      if (os_log_type_enabled(v25, OS_LOG_TYPE_INFO))
      {
        uint64_t v26 = HMFGetLogIdentifier();
        *(_DWORD *)long long buf = 138543362;
        double v56 = v26;
        _os_log_impl(&dword_22F52A000, v25, OS_LOG_TYPE_INFO, "%{public}@Failed to update account, there is no account", buf, 0xCu);
      }
      goto LABEL_39;
    }
    uint64_t v11 = [MEMORY[0x263F42648] systemInfo];
    int v12 = [v11 isMigrating];

    id v13 = [v7 service];
    int v14 = objc_msgSend(v13, "hmd_isActive");

    if ((v12 & 1) == 0 && v14)
    {
      id v15 = __createAccountHandles(v7);
      int v16 = objc_msgSend(v15, "hmf_isEmpty");
      id v17 = (void *)MEMORY[0x230FBD990]();
      id v18 = v7;
      id v19 = HMFGetOSLogHandle();
      BOOL v20 = os_log_type_enabled(v19, OS_LOG_TYPE_INFO);
      if (v16)
      {
        if (v20)
        {
          uint64_t v21 = HMFGetLogIdentifier();
          *(_DWORD *)long long buf = 138543362;
          double v56 = v21;
          _os_log_impl(&dword_22F52A000, v19, OS_LOG_TYPE_INFO, "%{public}@Failed to create handles", buf, 0xCu);
        }
        uint64_t updated = __updateCurrentDevice(v18, v10);
      }
      else
      {
        if (v20)
        {
          id v33 = HMFGetLogIdentifier();
          *(_DWORD *)long long buf = 138543618;
          double v56 = v33;
          __int16 v57 = 2112;
          uint64_t v58 = v15;
          _os_log_impl(&dword_22F52A000, v19, OS_LOG_TYPE_INFO, "%{public}@Updating with account handles: %@", buf, 0x16u);
        }
        long long v52 = 0u;
        long long v53 = 0u;
        long long v50 = 0u;
        long long v51 = 0u;
        id v34 = v15;
        uint64_t v35 = [v34 countByEnumeratingWithState:&v50 objects:v54 count:16];
        if (v35)
        {
          uint64_t v36 = v35;
          uint64_t v37 = *(void *)v51;
          do
          {
            for (uint64_t i = 0; i != v36; ++i)
            {
              if (*(void *)v51 != v37) {
                objc_enumerationMutation(v34);
              }
              objc_msgSend(*(id *)(*((void *)&v50 + 1) + 8 * i), "setLocallyTracked:", 1, (void)v50);
            }
            uint64_t v36 = [v34 countByEnumeratingWithState:&v50 objects:v54 count:16];
          }
          while (v36);
        }

        [v10 setHandles:v34];
        id v39 = [v18 accountRegistry];
        [v39 updateAccount:v10];

        uint64_t updated = __updateCurrentDevice(v18, v10);
        if (updated)
        {
          __int16 v40 = (void *)MEMORY[0x230FBD990]();
          id v41 = v18;
          uint64_t v42 = HMFGetOSLogHandle();
          if (os_log_type_enabled(v42, OS_LOG_TYPE_DEFAULT))
          {
            uint64_t v43 = HMFGetLogIdentifier();
            *(_DWORD *)long long buf = 138543362;
            double v56 = v43;
            _os_log_impl(&dword_22F52A000, v42, OS_LOG_TYPE_DEFAULT, "%{public}@Successfully updated account", buf, 0xCu);
          }
          __int16 v44 = [v41 accountChangeBackoffTimer];
          [v44 reset];

          objc_msgSend(v41, "__updateMergeIDOnAccount");
          goto LABEL_38;
        }
      }
      if (a2)
      {
        uint64_t v45 = (void *)MEMORY[0x230FBD990](updated);
        id v46 = v18;
        char v47 = HMFGetOSLogHandle();
        if (os_log_type_enabled(v47, OS_LOG_TYPE_INFO))
        {
          uint64_t v48 = HMFGetLogIdentifier();
          *(_DWORD *)long long buf = 138543362;
          double v56 = v48;
          _os_log_impl(&dword_22F52A000, v47, OS_LOG_TYPE_INFO, "%{public}@Failed to update the account, will try again later", buf, 0xCu);
        }
        id v49 = [v46 accountChangeBackoffTimer];
        [v49 resume];
      }
LABEL_38:

LABEL_39:
      goto LABEL_40;
    }
    id v27 = (void *)MEMORY[0x230FBD990]();
    id v28 = v7;
    long long v29 = HMFGetOSLogHandle();
    BOOL v30 = os_log_type_enabled(v29, OS_LOG_TYPE_INFO);
    if (v12)
    {
      if (v30)
      {
        id v31 = HMFGetLogIdentifier();
        *(_DWORD *)long long buf = 138543362;
        double v56 = v31;
        BOOL v32 = "%{public}@Skipping updating of account during migration, will try again later";
LABEL_19:
        _os_log_impl(&dword_22F52A000, v29, OS_LOG_TYPE_INFO, v32, buf, 0xCu);
      }
    }
    else if (v30)
    {
      id v31 = HMFGetLogIdentifier();
      *(_DWORD *)long long buf = 138543362;
      double v56 = v31;
      BOOL v32 = "%{public}@Skipping updating of account while the service is inactive, will try again later";
      goto LABEL_19;
    }

    id v15 = [v28 accountChangeBackoffTimer];
    [v15 resume];
    goto LABEL_38;
  }
LABEL_40:
}

void __updateDevices(void *a1, char a2)
{
  uint64_t v41 = *MEMORY[0x263EF8340];
  id v3 = a1;
  id v4 = v3;
  if (v3)
  {
    uint64_t v5 = [v3 devicesChangeBackoffTimer];
    [v5 suspend];

    uint64_t v6 = [v4 account];
    if (!v6)
    {
      id v23 = (void *)MEMORY[0x230FBD990]();
      id v24 = v4;
      uint64_t v25 = HMFGetOSLogHandle();
      if (os_log_type_enabled(v25, OS_LOG_TYPE_INFO))
      {
        uint64_t v26 = HMFGetLogIdentifier();
        *(_DWORD *)long long buf = 138543362;
        uint64_t v38 = v26;
        _os_log_impl(&dword_22F52A000, v25, OS_LOG_TYPE_INFO, "%{public}@Failed to determine devices on our account, there is no account", buf, 0xCu);
      }
      goto LABEL_21;
    }
    id v7 = [MEMORY[0x263F42648] systemInfo];
    int v8 = [v7 isMigrating];

    uint64_t v9 = [v4 service];
    int v10 = objc_msgSend(v9, "hmd_isActive");

    if ((v8 & 1) == 0 && v10)
    {
      uint64_t v11 = (void *)MEMORY[0x263EFF9C0];
      int v12 = __createDevices(v4);
      id v13 = [v11 setWithArray:v12];

      int v14 = (void *)MEMORY[0x230FBD990]();
      id v15 = v4;
      int v16 = HMFGetOSLogHandle();
      if (os_log_type_enabled(v16, OS_LOG_TYPE_INFO))
      {
        id v17 = HMFGetLogIdentifier();
        *(_DWORD *)long long buf = 138543618;
        uint64_t v38 = v17;
        __int16 v39 = 2112;
        __int16 v40 = v13;
        _os_log_impl(&dword_22F52A000, v16, OS_LOG_TYPE_INFO, "%{public}@Updating account with peer devices: %@", buf, 0x16u);
      }
      id v18 = [v15 device];
      if (v18 || (__createCurrentDevice(v15), (id v18 = objc_claimAutoreleasedReturnValue()) != 0))
      {
        [v13 addObject:v18];
      }
      id v19 = (void *)[objc_alloc(MEMORY[0x263F42520]) initWithQueue:v15[2]];
      BOOL v20 = [v15 accountRegistry];
      uint64_t v21 = [v20 updateDevices:v13 onAccount:v6];

      v34[0] = MEMORY[0x263EF8330];
      v34[1] = 3221225472;
      v34[2] = ____updateDevices_block_invoke;
      v34[3] = &unk_264A22540;
      uint64_t v35 = v15;
      char v36 = a2;
      id v22 = (id)[v21 inContext:v19 then:v34];

      goto LABEL_21;
    }
    id v27 = (void *)MEMORY[0x230FBD990]();
    id v28 = v4;
    long long v29 = HMFGetOSLogHandle();
    BOOL v30 = os_log_type_enabled(v29, OS_LOG_TYPE_INFO);
    if (v8)
    {
      if (v30)
      {
        id v31 = HMFGetLogIdentifier();
        *(_DWORD *)long long buf = 138543362;
        uint64_t v38 = v31;
        BOOL v32 = "%{public}@Skipping updating of devices during migration, will try again later";
LABEL_19:
        _os_log_impl(&dword_22F52A000, v29, OS_LOG_TYPE_INFO, v32, buf, 0xCu);
      }
    }
    else if (v30)
    {
      id v31 = HMFGetLogIdentifier();
      *(_DWORD *)long long buf = 138543362;
      uint64_t v38 = v31;
      BOOL v32 = "%{public}@Skipping updating of devices while the service is inactive, will try again later";
      goto LABEL_19;
    }

    id v33 = [v28 devicesChangeBackoffTimer];
    [v33 resume];

LABEL_21:
  }
}

id __createDevices(void *a1)
{
  uint64_t v25 = *MEMORY[0x263EF8340];
  id v1 = a1;
  uint64_t v2 = (void *)MEMORY[0x263EFF9C0];
  id v3 = [v1 service];
  id v4 = [v3 devices];
  id v19 = objc_msgSend(v2, "setWithCapacity:", objc_msgSend(v4, "count"));

  long long v22 = 0u;
  long long v23 = 0u;
  long long v20 = 0u;
  long long v21 = 0u;
  uint64_t v5 = [v1 service];
  uint64_t v6 = [v5 devices];

  id v7 = v6;
  uint64_t v8 = [v6 countByEnumeratingWithState:&v20 objects:v24 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)v21;
    do
    {
      for (uint64_t i = 0; i != v9; ++i)
      {
        if (*(void *)v21 != v10) {
          objc_enumerationMutation(v7);
        }
        uint64_t v12 = *(void *)(*((void *)&v20 + 1) + 8 * i);
        id v13 = [v1 service];
        objc_opt_class();
        if (objc_opt_isKindOfClass()) {
          int v14 = v13;
        }
        else {
          int v14 = 0;
        }
        id v15 = v14;

        int v16 = [[HMDDevice alloc] initWithService:v15 device:v12];
        if (v16) {
          [v19 addObject:v16];
        }
      }
      uint64_t v9 = [v7 countByEnumeratingWithState:&v20 objects:v24 count:16];
    }
    while (v9);
  }

  id v17 = [v19 allObjects];

  return v17;
}

HMDDevice *__createCurrentDevice(void *a1)
{
  uint64_t v43 = *MEMORY[0x263EF8340];
  id v1 = a1;
  uint64_t v2 = [v1 service];
  char v3 = objc_msgSend(v2, "hmd_isActive");

  if (v3)
  {
    id v4 = [MEMORY[0x263EFF980] arrayWithCapacity:2];
    uint64_t v5 = +[HMDDeviceAddress localDeviceIDSIdentifier];
    if (v5)
    {
      uint64_t v6 = [[_HMDLocalDeviceHandle alloc] initWithDeviceIdentifier:v5];
      id v7 = [[HMDDeviceHandle alloc] initWithInternal:v6];
      [v4 addObject:v7];
    }
    uint64_t v8 = [v1 pushConnection];
    uint64_t v9 = [v8 publicToken];

    if (!v9)
    {
      long long v20 = [v1 service];
      long long v21 = [v20 iCloudAccount];

      long long v22 = [v21 pushToken];
      uint64_t v9 = v22;
      if (!v22 || objc_msgSend(v22, "hmf_isZeroed"))
      {

        goto LABEL_16;
      }
    }
    uint64_t v10 = [v1 service];
    uint64_t v11 = objc_msgSend(v10, "hmd_preferredHandle");

    uint64_t v12 = [[_HMDGlobalDeviceHandle alloc] initWithPushToken:v9 accountHandle:v11];
    id v13 = [[HMDDeviceHandle alloc] initWithInternal:v12];
    if (v13)
    {
      [v4 addObject:v13];
      int v14 = [(HMDDeviceHandle *)v13 identifier];
    }
    else
    {
      int v14 = 0;
    }

    if (v14)
    {
      long long v23 = [HMDDevice alloc];
      id v24 = [MEMORY[0x263F42648] systemInfo];
      uint64_t v25 = [v24 name];
      uint64_t v26 = [MEMORY[0x263F42620] productInfo];
      id v27 = +[HMDHomeKitVersion currentVersion];
      id v28 = +[HMDDeviceCapabilities deviceCapabilities];
      long long v29 = [(HMDDevice *)v23 initWithIdentifier:v14 handles:v4 name:v25 productInfo:v26 version:v27 capabilities:v28];

      BOOL v30 = v1[2];
      v38[0] = MEMORY[0x263EF8330];
      v38[1] = 3221225472;
      v38[2] = ____createCurrentDevice_block_invoke;
      v38[3] = &unk_264A2F820;
      __int16 v39 = v1;
      id v31 = v29;
      __int16 v40 = v31;
      dispatch_async(v30, v38);
      BOOL v32 = v40;
      id v19 = v31;

LABEL_19:
      goto LABEL_20;
    }
LABEL_16:
    id v33 = (void *)MEMORY[0x230FBD990]();
    id v34 = v1;
    uint64_t v35 = HMFGetOSLogHandle();
    if (os_log_type_enabled(v35, OS_LOG_TYPE_ERROR))
    {
      char v36 = HMFGetLogIdentifier();
      *(_DWORD *)long long buf = 138543362;
      uint64_t v42 = v36;
      _os_log_impl(&dword_22F52A000, v35, OS_LOG_TYPE_ERROR, "%{public}@Failed to create device identifier", buf, 0xCu);
    }
    id v19 = 0;
    goto LABEL_19;
  }
  id v15 = (void *)MEMORY[0x230FBD990]();
  int v16 = v1;
  id v17 = HMFGetOSLogHandle();
  if (os_log_type_enabled(v17, OS_LOG_TYPE_INFO))
  {
    id v18 = HMFGetLogIdentifier();
    *(_DWORD *)long long buf = 138543362;
    uint64_t v42 = v18;
    _os_log_impl(&dword_22F52A000, v17, OS_LOG_TYPE_INFO, "%{public}@Cannot create current device; Service is not active",
      buf,
      0xCu);
  }
  id v19 = 0;
LABEL_20:

  return v19;
}

uint64_t ____updateDevices_block_invoke(uint64_t a1, void *a2)
{
  uint64_t v18 = *MEMORY[0x263EF8340];
  id v3 = a2;
  id v4 = (void *)MEMORY[0x230FBD990]();
  id v5 = *(id *)(a1 + 32);
  uint64_t v6 = HMFGetOSLogHandle();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
  {
    id v7 = HMFGetLogIdentifier();
    int v16 = 138543362;
    id v17 = v7;
    _os_log_impl(&dword_22F52A000, v6, OS_LOG_TYPE_INFO, "%{public}@Resolved by updateDevices", (uint8_t *)&v16, 0xCu);
  }
  if (*(unsigned char *)(a1 + 40))
  {
    uint64_t v8 = [*(id *)(a1 + 32) notificationCenter];
    [v8 postNotificationName:@"HMDAppleAccountManagerResolved" object:*(void *)(a1 + 32)];
  }
  uint64_t v9 = [*(id *)(a1 + 32) deviceAccountSettledPromise];
  [v9 fulfillWithNoValue];

  uint64_t v10 = [*(id *)(a1 + 32) idsDevicesUpdatedPromise];
  [v10 fulfillWithNoValue];

  uint64_t v11 = (void *)MEMORY[0x230FBD990]();
  id v12 = *(id *)(a1 + 32);
  id v13 = HMFGetOSLogHandle();
  if (os_log_type_enabled(v13, OS_LOG_TYPE_INFO))
  {
    int v14 = HMFGetLogIdentifier();
    int v16 = 138543362;
    id v17 = v14;
    _os_log_impl(&dword_22F52A000, v13, OS_LOG_TYPE_INFO, "%{public}@Posted HMDAppleAccountManagerResolved and fulfilled futures.", (uint8_t *)&v16, 0xCu);
  }

  return 1;
}

void ____createCurrentDevice_block_invoke(uint64_t a1)
{
  uint64_t v12 = *MEMORY[0x263EF8340];
  uint64_t v2 = (void *)MEMORY[0x230FBD990]();
  id v3 = *(id *)(a1 + 32);
  id v4 = HMFGetOSLogHandle();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
  {
    id v5 = HMFGetLogIdentifier();
    uint64_t v6 = *(void *)(a1 + 40);
    int v8 = 138543618;
    uint64_t v9 = v5;
    __int16 v10 = 2112;
    uint64_t v11 = v6;
    _os_log_impl(&dword_22F52A000, v4, OS_LOG_TYPE_INFO, "%{public}@Created current device for the account : %@", (uint8_t *)&v8, 0x16u);
  }
  id v7 = [*(id *)(a1 + 32) currentDeviceSettledPromise];
  [v7 fulfillWithNoValue];
}

id __createAccountHandles(void *a1)
{
  id v1 = a1;
  uint64_t v2 = [v1 service];
  int v3 = objc_msgSend(v2, "hmd_isActive");

  if (v3)
  {
    id v4 = [v1 service];
    id v5 = objc_msgSend(v4, "hmd_handles");
  }
  else
  {
    id v5 = (void *)MEMORY[0x263EFFA68];
  }

  return v5;
}

uint64_t __updateCurrentDevice(void *a1, void *a2)
{
  uint64_t v74 = *MEMORY[0x263EF8340];
  id v3 = a1;
  id v4 = a2;
  if (v3)
  {
    id v5 = (void *)MEMORY[0x230FBD990]();
    id v6 = v3;
    id v7 = HMFGetOSLogHandle();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
    {
      int v8 = HMFGetLogIdentifier();
      *(_DWORD *)long long buf = 138543362;
      *(void *)&uint8_t buf[4] = v8;
      _os_log_impl(&dword_22F52A000, v7, OS_LOG_TYPE_INFO, "%{public}@Updating device", buf, 0xCu);
    }
    uint64_t v9 = __createCurrentDevice(v6);
    __int16 v10 = v9;
    uint64_t v11 = v9 != 0;
    if (v9)
    {
      __int16 v57 = v9;
      uint64_t v12 = [v9 identifier];
      id v13 = [v4 deviceForIdentifier:v12];

      id v56 = v3;
      unsigned int v55 = v11;
      id v54 = v13;
      if (v13)
      {
        id v15 = v66;
        v66[0] = MEMORY[0x263EF8330];
        v66[1] = 3221225472;
        int v16 = ____updateCurrentDevice_block_invoke;
        id v17 = v6;
      }
      else
      {
        long long v22 = (void *)MEMORY[0x230FBD990](v14);
        id v17 = v6;
        long long v23 = HMFGetOSLogHandle();
        if (os_log_type_enabled(v23, OS_LOG_TYPE_DEFAULT))
        {
          id v24 = HMFGetLogIdentifier();
          *(_DWORD *)long long buf = 138543618;
          *(void *)&uint8_t buf[4] = v24;
          *(_WORD *)&buf[12] = 2112;
          *(void *)&buf[14] = v57;
          _os_log_impl(&dword_22F52A000, v23, OS_LOG_TYPE_DEFAULT, "%{public}@Adding current device: %@", buf, 0x16u);
        }
        id v15 = v65;
        v65[0] = MEMORY[0x263EF8330];
        v65[1] = 3221225472;
        int v16 = ____updateCurrentDevice_block_invoke_579;
        id v13 = v4;
      }
      v15[2] = v16;
      v15[3] = &unk_264A2E210;
      void v15[4] = v17;
      void v15[5] = v57;
      v15[6] = v13;
      id v25 = v6;
      id v26 = v57;
      id v27 = v15;
      id v28 = (void *)MEMORY[0x230FBD990]();
      long long v29 = v25;
      BOOL v30 = HMFGetOSLogHandle();
      if (os_log_type_enabled(v30, OS_LOG_TYPE_INFO))
      {
        id v31 = HMFGetLogIdentifier();
        *(_DWORD *)long long buf = 138543362;
        *(void *)&uint8_t buf[4] = v31;
        _os_log_impl(&dword_22F52A000, v30, OS_LOG_TYPE_INFO, "%{public}@Updating device rapport identity on current device", buf, 0xCu);
      }
      id v32 = objc_alloc_init(MEMORY[0x263F62B68]);
      [v32 setDispatchQueue:v29[2]];
      *(void *)long long buf = MEMORY[0x263EF8330];
      *(void *)&buf[8] = 3221225472;
      *(void *)&uint8_t buf[16] = ____HMDAppleAccountManagerUpdateRPIndentityForCurrentDevice_block_invoke;
      char v69 = &unk_264A2D9F0;
      id v70 = v32;
      id v71 = v29;
      id v72 = v26;
      id v73 = v27;
      id v33 = v32;
      id v34 = v29;
      uint64_t v35 = v27;
      id v36 = v26;
      uint64_t v37 = v34;
      id v38 = v36;
      [v33 getIdentitiesWithFlags:1 completion:buf];

      long long v63 = 0u;
      long long v64 = 0u;
      long long v61 = 0u;
      long long v62 = 0u;
      __int16 v39 = [v34 account];
      __int16 v40 = [v39 devices];

      uint64_t v41 = v40;
      uint64_t v42 = [v40 countByEnumeratingWithState:&v61 objects:v67 count:16];
      if (v42)
      {
        uint64_t v43 = v42;
        uint64_t v44 = *(void *)v62;
        uint64_t v58 = v40;
        id v59 = v4;
        do
        {
          for (uint64_t i = 0; i != v43; ++i)
          {
            if (*(void *)v62 != v44) {
              objc_enumerationMutation(v41);
            }
            id v46 = *(void **)(*((void *)&v61 + 1) + 8 * i);
            if ((objc_msgSend(v46, "isEqual:", v38, v54) & 1) == 0
              && [v46 isRelatedToDevice:v38])
            {
              context = (void *)MEMORY[0x230FBD990]();
              id v47 = v37;
              uint64_t v48 = HMFGetOSLogHandle();
              if (os_log_type_enabled(v48, OS_LOG_TYPE_DEFAULT))
              {
                id v49 = HMFGetLogIdentifier();
                [v46 shortDescription];
                id v50 = v38;
                v52 = long long v51 = v37;
                *(_DWORD *)long long buf = 138543618;
                *(void *)&uint8_t buf[4] = v49;
                *(_WORD *)&buf[12] = 2112;
                *(void *)&buf[14] = v52;
                _os_log_impl(&dword_22F52A000, v48, OS_LOG_TYPE_DEFAULT, "%{public}@Removing stale device: %@", buf, 0x16u);

                uint64_t v37 = v51;
                id v38 = v50;
                uint64_t v41 = v58;

                id v4 = v59;
              }

              [v4 removeDevice:v46];
            }
          }
          uint64_t v43 = [v41 countByEnumeratingWithState:&v61 objects:v67 count:16];
        }
        while (v43);
      }

      __handleUpdatedDevice_156371(v37, v38);
      id v3 = v56;
      __int16 v10 = v57;
      uint64_t v11 = v55;
    }
    else
    {
      uint64_t v18 = (void *)MEMORY[0x230FBD990]();
      id v19 = v6;
      long long v20 = HMFGetOSLogHandle();
      if (os_log_type_enabled(v20, OS_LOG_TYPE_INFO))
      {
        long long v21 = HMFGetLogIdentifier();
        *(_DWORD *)long long buf = 138543362;
        *(void *)&uint8_t buf[4] = v21;
        _os_log_impl(&dword_22F52A000, v20, OS_LOG_TYPE_INFO, "%{public}@Failed to create current device", buf, 0xCu);
      }
    }
  }
  else
  {
    uint64_t v11 = 0;
  }

  return v11;
}

void ____updateCurrentDevice_block_invoke(id *a1, void *a2)
{
  uint64_t v19 = *MEMORY[0x263EF8340];
  id v3 = a2;
  if (v3)
  {
    id v4 = (void *)MEMORY[0x230FBD990]();
    id v5 = a1[4];
    id v6 = HMFGetOSLogHandle();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      id v7 = HMFGetLogIdentifier();
      id v8 = a1[5];
      int v15 = 138543618;
      int v16 = v7;
      __int16 v17 = 2112;
      id v18 = v8;
      _os_log_impl(&dword_22F52A000, v6, OS_LOG_TYPE_ERROR, "%{public}@Failed to determine rapport identity for current device: %@", (uint8_t *)&v15, 0x16u);
    }
  }
  if ((isEqualDeepCompare(a1[6], a1[5]) & 1) == 0)
  {
    uint64_t v9 = (void *)MEMORY[0x230FBD990]();
    id v10 = a1[4];
    uint64_t v11 = HMFGetOSLogHandle();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v12 = HMFGetLogIdentifier();
      id v13 = a1[5];
      int v15 = 138543618;
      int v16 = v12;
      __int16 v17 = 2112;
      id v18 = v13;
      _os_log_impl(&dword_22F52A000, v11, OS_LOG_TYPE_DEFAULT, "%{public}@Updating current device due to detected diff: %@", (uint8_t *)&v15, 0x16u);
    }
    uint64_t v14 = [a1[4] accountRegistry];
    [v14 updateDevice:a1[6] withDevice:a1[5]];
  }
}

void ____updateCurrentDevice_block_invoke_579(uint64_t a1, void *a2)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  id v3 = a2;
  if (v3)
  {
    id v4 = (void *)MEMORY[0x230FBD990]();
    id v5 = *(id *)(a1 + 32);
    id v6 = HMFGetOSLogHandle();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      id v7 = HMFGetLogIdentifier();
      uint64_t v8 = *(void *)(a1 + 40);
      int v10 = 138543618;
      uint64_t v11 = v7;
      __int16 v12 = 2112;
      uint64_t v13 = v8;
      _os_log_impl(&dword_22F52A000, v6, OS_LOG_TYPE_ERROR, "%{public}@Failed to determine rapport identity for current device: %@", (uint8_t *)&v10, 0x16u);
    }
  }
  uint64_t v9 = [*(id *)(a1 + 32) accountRegistry];
  [v9 addDevice:*(void *)(a1 + 40) toAccount:*(void *)(a1 + 48)];
}

void __handleUpdatedDevice_156371(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  if (v3)
  {
    id v5 = v3[2];
    v6[0] = MEMORY[0x263EF8330];
    v6[1] = 3221225472;
    v6[2] = ____handleUpdatedDevice_block_invoke;
    v6[3] = &unk_264A2F820;
    id v7 = v3;
    id v8 = v4;
    dispatch_async(v5, v6);
  }
}

void ____handleUpdatedDevice_block_invoke(uint64_t a1)
{
  uint64_t v16 = *MEMORY[0x263EF8340];
  uint64_t v2 = (void *)MEMORY[0x230FBD990]();
  id v3 = *(id *)(a1 + 32);
  id v4 = HMFGetOSLogHandle();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
  {
    id v5 = HMFGetLogIdentifier();
    uint64_t v6 = *(void *)(a1 + 40);
    *(_DWORD *)long long buf = 138543618;
    uint64_t v13 = v5;
    __int16 v14 = 2112;
    uint64_t v15 = v6;
    _os_log_impl(&dword_22F52A000, v4, OS_LOG_TYPE_INFO, "%{public}@Updated device: %@", buf, 0x16u);
  }
  uint64_t v7 = *(void *)(a1 + 40);
  if (v7)
  {
    int v10 = @"HMDDeviceNotificationKey";
    uint64_t v11 = v7;
    id v8 = [NSDictionary dictionaryWithObjects:&v11 forKeys:&v10 count:1];
  }
  else
  {
    id v8 = 0;
  }
  uint64_t v9 = [*(id *)(a1 + 32) notificationCenter];
  [v9 postNotificationName:@"HMDAppleAccountManagerDeviceUpdatedNotification" object:*(void *)(a1 + 32) userInfo:v8];
}

void __setAccount(void *a1, void *a2, int a3)
{
  uint64_t v33 = *MEMORY[0x263EF8340];
  id v5 = a1;
  id v6 = a2;
  if (v5)
  {
    os_unfair_recursive_lock_lock_with_options();
    if (HMFEqualObjects())
    {
      os_unfair_recursive_lock_unlock();
      id v7 = 0;
    }
    else
    {
      id v8 = v5[7];
      objc_storeStrong(v5 + 7, a2);
      [v6 setManager:v5];
      uint64_t v9 = v5;
      id v7 = v8;
      id v10 = v6;
      if (v7)
      {
        uint64_t v11 = [v9 notificationCenter];
        [v11 removeObserver:v9 name:@"HMDAccountAddedDeviceNotification" object:v7];

        __int16 v12 = [v9 notificationCenter];
        [v12 removeObserver:v9 name:@"HMDAccountRemovedDeviceNotification" object:v7];
      }
      if (v10)
      {
        uint64_t v13 = [v9 notificationCenter];
        [v13 addObserver:v9 selector:sel___deviceAddedToCurrentAccount_ name:@"HMDAccountAddedDeviceNotification" object:v10];

        __int16 v14 = [v9 notificationCenter];
        [v14 addObserver:v9 selector:sel___deviceRemovedFromCurrentAccount_ name:@"HMDAccountRemovedDeviceNotification" object:v10];
      }
      uint64_t v15 = [v7 manager];

      if (v15 == v9) {
        [v7 setManager:0];
      }
      uint64_t v16 = os_unfair_recursive_lock_unlock();
      __int16 v17 = (void *)MEMORY[0x230FBD990](v16);
      id v18 = v9;
      uint64_t v19 = HMFGetOSLogHandle();
      if (os_log_type_enabled(v19, OS_LOG_TYPE_INFO))
      {
        long long v20 = HMFGetLogIdentifier();
        long long v21 = [v10 shortDescription];
        int v29 = 138543618;
        BOOL v30 = v20;
        __int16 v31 = 2112;
        id v32 = v21;
        _os_log_impl(&dword_22F52A000, v19, OS_LOG_TYPE_INFO, "%{public}@Updated account: %@", (uint8_t *)&v29, 0x16u);
      }
      if (a3)
      {
        long long v22 = [MEMORY[0x263EFF9A0] dictionaryWithCapacity:2];
        long long v23 = v22;
        if (v10) {
          [v22 setObject:v10 forKeyedSubscript:@"HMDAccountNotificationKey"];
        }
        if (v7) {
          [v23 setObject:v7 forKeyedSubscript:@"HMDPreviousAccountNotificationKey"];
        }
        BOOL v24 = v10 == 0;
        id v25 = [v18 notificationCenter];
        id v26 = (void *)[v23 copy];
        [v25 postNotificationName:@"HMDAppleAccountManagerAccountUpdatedNotification" object:v18 userInfo:v26];

        id v27 = [v18 device];
        if (v27) {
          int v28 = 1;
        }
        else {
          int v28 = v24;
        }
        if (v28 == 1) {
          __handleUpdatedDevice_156371(v18, v27);
        }
      }
    }
  }
}

void sub_22FDF3A18(_Unwind_Exception *a1)
{
}

void sub_22FDF63AC(_Unwind_Exception *a1)
{
}

void __removeAccount(void *a1, void *a2)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  id v3 = a1;
  id v4 = a2;
  if (v3)
  {
    id v5 = (void *)MEMORY[0x230FBD990]();
    id v6 = v3;
    id v7 = HMFGetOSLogHandle();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
    {
      id v8 = HMFGetLogIdentifier();
      int v10 = 138543618;
      uint64_t v11 = v8;
      __int16 v12 = 2112;
      id v13 = v4;
      _os_log_impl(&dword_22F52A000, v7, OS_LOG_TYPE_INFO, "%{public}@Removing account: %@", (uint8_t *)&v10, 0x16u);
    }
    uint64_t v9 = [v6 accountRegistry];
    [v9 removeAccount:v4];

    __setAccount(v6, 0, 1);
  }
}

void __updateAccountContext(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    uint64_t v2 = (void *)MEMORY[0x230FBD990]();
    id v3 = (void *)MEMORY[0x263F424F0];
    v4[0] = MEMORY[0x263EF8330];
    v4[1] = 3221225472;
    v4[2] = ____updateAccountContext_block_invoke;
    v4[3] = &unk_264A2F7F8;
    id v5 = v1;
    [v3 activityWithName:@"Accounts.Context" parent:0 options:1 block:v4];
  }
}

HMDAccount *__createAccount(void *a1)
{
  uint64_t v43 = *MEMORY[0x263EF8340];
  id v1 = a1;
  uint64_t v2 = v1;
  if (v1)
  {
    id v3 = [v1 accountContext];
    if (v3)
    {
      id v4 = +[HMDAccountIdentifier accountIdentifierForAppleAccountContext:v3];
      id v5 = [v2 service];
      int v6 = objc_msgSend(v5, "hmd_isActive");

      if (v6)
      {
        id v7 = __createAccountHandles(v2);
        if (objc_msgSend(v7, "hmf_isEmpty"))
        {
          id v8 = (void *)MEMORY[0x230FBD990]();
          id v9 = v2;
          int v10 = HMFGetOSLogHandle();
          if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
          {
            uint64_t v11 = HMFGetLogIdentifier();
            *(_DWORD *)long long buf = 138543362;
            uint64_t v42 = v11;
            _os_log_impl(&dword_22F52A000, v10, OS_LOG_TYPE_DEFAULT, "%{public}@Failed to create handles", buf, 0xCu);
          }
        }
        else
        {
          long long v38 = 0u;
          long long v39 = 0u;
          long long v36 = 0u;
          long long v37 = 0u;
          id v18 = v7;
          uint64_t v19 = [v18 countByEnumeratingWithState:&v36 objects:v40 count:16];
          if (v19)
          {
            uint64_t v20 = v19;
            uint64_t v21 = *(void *)v37;
            do
            {
              for (uint64_t i = 0; i != v20; ++i)
              {
                if (*(void *)v37 != v21) {
                  objc_enumerationMutation(v18);
                }
                [*(id *)(*((void *)&v36 + 1) + 8 * i) setLocallyTracked:1];
              }
              uint64_t v20 = [v18 countByEnumeratingWithState:&v36 objects:v40 count:16];
            }
            while (v20);
          }
        }
        long long v23 = [v2 service];
        BOOL v24 = [v23 iCloudAccount];

        id v25 = (void *)MEMORY[0x263EFF9C0];
        id v26 = [v24 devices];
        id v27 = objc_msgSend(v25, "setWithCapacity:", objc_msgSend(v26, "count") + 1);

        int v28 = __createCurrentDevice(v2);
        if (v28)
        {
          [v27 addObject:v28];
        }
        else
        {
          int v29 = (void *)MEMORY[0x230FBD990]();
          id v30 = v2;
          __int16 v31 = HMFGetOSLogHandle();
          if (os_log_type_enabled(v31, OS_LOG_TYPE_DEFAULT))
          {
            HMFGetLogIdentifier();
            id v32 = v35 = v29;
            *(_DWORD *)long long buf = 138543362;
            uint64_t v42 = v32;
            _os_log_impl(&dword_22F52A000, v31, OS_LOG_TYPE_DEFAULT, "%{public}@Failed to create current device", buf, 0xCu);

            int v29 = v35;
          }
        }
        uint64_t v33 = __createDevices(v2);
        [v27 addObjectsFromArray:v33];

        __int16 v17 = [v27 allObjects];
      }
      else
      {
        __int16 v17 = (void *)MEMORY[0x263EFFA68];
        id v7 = (void *)MEMORY[0x263EFFA68];
      }
      __int16 v12 = [[HMDAccount alloc] initWithIdentifier:v4 handles:v7 devices:v17];
    }
    else
    {
      id v13 = (void *)MEMORY[0x230FBD990]();
      id v14 = v2;
      uint64_t v15 = HMFGetOSLogHandle();
      if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
      {
        uint64_t v16 = HMFGetLogIdentifier();
        *(_DWORD *)long long buf = 138543362;
        uint64_t v42 = v16;
        _os_log_impl(&dword_22F52A000, v15, OS_LOG_TYPE_ERROR, "%{public}@Context is required to create account", buf, 0xCu);
      }
      __int16 v12 = 0;
    }
  }
  else
  {
    __int16 v12 = 0;
  }

  return v12;
}

void __addAccount(void *a1, void *a2)
{
  uint64_t v23 = *MEMORY[0x263EF8340];
  id v3 = a1;
  id v4 = a2;
  if (v3)
  {
    id v5 = (void *)MEMORY[0x230FBD990]();
    int v6 = v3;
    id v7 = HMFGetOSLogHandle();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
    {
      id v8 = HMFGetLogIdentifier();
      *(_DWORD *)long long buf = 138543618;
      uint64_t v20 = v8;
      __int16 v21 = 2112;
      id v22 = v4;
      _os_log_impl(&dword_22F52A000, v7, OS_LOG_TYPE_INFO, "%{public}@Adding account: %@", buf, 0x16u);
    }
    id v9 = [v4 handles];
    uint64_t v10 = [v9 count];

    if (v10)
    {
      uint64_t v11 = [v6 accountRegistry];
      [v11 addAccount:v4 isLocal:1];
    }
    else
    {
      __int16 v12 = (void *)MEMORY[0x230FBD990]();
      id v13 = v6;
      id v14 = HMFGetOSLogHandle();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        uint64_t v15 = HMFGetLogIdentifier();
        *(_DWORD *)long long buf = 138543618;
        uint64_t v20 = v15;
        __int16 v21 = 2112;
        id v22 = v4;
        _os_log_impl(&dword_22F52A000, v14, OS_LOG_TYPE_ERROR, "%{public}@No handles on account: %@ (NOT SAVING).", buf, 0x16u);
      }
    }
    __setAccount(v6, v4, 1);
    uint64_t v16 = v6[2];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = ____addAccount_block_invoke;
    block[3] = &unk_264A2F7F8;
    id v18 = v6;
    dispatch_async(v16, block);
  }
}

void ____addAccount_block_invoke(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) devicesChangeBackoffTimer];
  [v1 resume];
}

void ____updateAccountContext_block_invoke(uint64_t a1)
{
  uint64_t v24 = *MEMORY[0x263EF8340];
  os_unfair_recursive_lock_lock_with_options();
  uint64_t v2 = objc_msgSend(*(id *)(*(void *)(a1 + 32) + 32), "aa_primaryAppleAccount");
  uint64_t v3 = *(void *)(a1 + 32);
  if (v2)
  {
    *(unsigned char *)(v3 + 4_Block_object_dispose(&STACK[0x340], 8) = 1;
    id v4 = (void *)MEMORY[0x230FBD990]();
    id v5 = *(id *)(a1 + 32);
    HMFGetOSLogHandle();
    int v6 = (id)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      id v7 = HMFGetLogIdentifier();
      int v20 = 138543362;
      __int16 v21 = v7;
      _os_log_impl(&dword_22F52A000, v6, OS_LOG_TYPE_DEFAULT, "%{public}@Primary apple account is logged in", (uint8_t *)&v20, 0xCu);
    }
    id v8 = *(NSObject **)(*(void *)(a1 + 32) + 40);
    if (os_signpost_enabled(v8))
    {
      LOWORD(v20) = 0;
      _os_signpost_emit_with_name_impl(&dword_22F52A000, v8, OS_SIGNPOST_EVENT, 0xEEEEB0B5B2B2EEEELL, "PrimaryAppleAccountLoggedIn", "", (uint8_t *)&v20, 2u);
    }
    id v9 = [[HMDAppleAccountContext alloc] initWithAccount:v2];
    if ((HMFEqualObjects() & 1) == 0)
    {
      uint64_t v10 = (void *)MEMORY[0x230FBD990]();
      id v11 = *(id *)(a1 + 32);
      HMFGetOSLogHandle();
      __int16 v12 = (id)objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
      {
        id v13 = HMFGetLogIdentifier();
        int v20 = 138543618;
        __int16 v21 = v13;
        __int16 v22 = 2112;
        uint64_t v23 = v9;
        _os_log_impl(&dword_22F52A000, v12, OS_LOG_TYPE_INFO, "%{public}@Updated account context: %@", (uint8_t *)&v20, 0x16u);
      }
      objc_storeStrong((id *)(*(void *)(a1 + 32) + 64), v9);
    }
  }
  else
  {
    *(unsigned char *)(v3 + 4_Block_object_dispose(&STACK[0x340], 8) = 0;
  }

  uint64_t v14 = os_unfair_recursive_lock_unlock();
  uint64_t v15 = (void *)MEMORY[0x230FBD990](v14);
  id v16 = *(id *)(a1 + 32);
  __int16 v17 = HMFGetOSLogHandle();
  if (os_log_type_enabled(v17, OS_LOG_TYPE_INFO))
  {
    id v18 = HMFGetLogIdentifier();
    HMFBooleanToString();
    uint64_t v19 = (HMDAppleAccountContext *)objc_claimAutoreleasedReturnValue();
    int v20 = 138543618;
    __int16 v21 = v18;
    __int16 v22 = 2112;
    uint64_t v23 = v19;
    _os_log_impl(&dword_22F52A000, v17, OS_LOG_TYPE_INFO, "%{public}@Primary iCloud (Apple) account login status: Logged In : %@", (uint8_t *)&v20, 0x16u);
  }
}

void sub_22FDF7320(_Unwind_Exception *a1)
{
}

void sub_22FDF8044(_Unwind_Exception *a1)
{
}

void sub_22FDF80D4(_Unwind_Exception *a1)
{
}

void sub_22FDF8338(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__156480(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__156481(uint64_t a1)
{
}

void sub_22FDF8520(_Unwind_Exception *a1)
{
}

void sub_22FDF85C4(_Unwind_Exception *a1)
{
}

void sub_22FDF8860(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22FDF97E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__156652(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__156653(uint64_t a1)
{
}

void sub_22FE0A7F0(_Unwind_Exception *a1)
{
  objc_destroyWeak(v5);
  objc_destroyWeak(v4);
  objc_destroyWeak(v3);
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v6 - 112));
  _Unwind_Resume(a1);
}

void sub_22FE0C018(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 80));
  _Unwind_Resume(a1);
}

void sub_22FE10498(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FE108B8(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FE10CF0(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FE11008(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FE114A4(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FE11E64(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FE12530(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FE13FB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,char a35)
{
}

uint64_t __Block_byref_object_copy__159576(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__159577(uint64_t a1)
{
}

void sub_22FE14638(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FE148C8(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FE14CB0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_unfair_lock_t lock)
{
}

void sub_22FE150FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_unfair_lock_t lock)
{
}

void sub_22FE17B38(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FE17F9C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FE18110(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FE181EC(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FE183F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,id location)
{
  objc_destroyWeak(v23);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22FE1861C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_22FE1BECC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,id location)
{
  objc_destroyWeak(v26);
  objc_destroyWeak(v25);
  objc_destroyWeak(v24);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22FE1C5CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,id location)
{
  objc_destroyWeak(v26);
  objc_destroyWeak(v25);
  objc_destroyWeak(v24);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void __removeAllAccessories(void *a1)
{
  uint64_t v12 = *MEMORY[0x263EF8340];
  id v1 = a1;
  long long v9 = 0u;
  long long v10 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  uint64_t v2 = objc_msgSend(v1[3], "allKeys", 0);
  uint64_t v3 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v8;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v8 != v5) {
          objc_enumerationMutation(v2);
        }
        __removeUnassociatedAccessory(v1, *(void **)(*((void *)&v7 + 1) + 8 * v6++));
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
    }
    while (v4);
  }

  [v1[3] removeAllObjects];
}

void __removeUnassociatedAccessory(void *a1, void *a2)
{
  uint64_t v19 = *MEMORY[0x263EF8340];
  uint64_t v3 = a1;
  id v4 = a2;
  uint64_t v5 = [v3[3] objectForKey:v4];
  if (v5)
  {
    uint64_t v6 = (void *)MEMORY[0x230FBD990]();
    long long v7 = v3;
    long long v8 = HMFGetOSLogHandle();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
    {
      long long v9 = HMFGetLogIdentifier();
      *(_DWORD *)long long buf = 138543618;
      id v16 = v9;
      __int16 v17 = 2112;
      id v18 = v4;
      _os_log_impl(&dword_22F52A000, v8, OS_LOG_TYPE_INFO, "%{public}@Removing unassociated accessory %@", buf, 0x16u);
    }
    [v3[3] removeObjectForKey:v4];
    long long v10 = [v7 delegate];
    if (v10)
    {
      id v11 = [v7 delegateQueue];
      v12[0] = MEMORY[0x263EF8330];
      v12[1] = 3221225472;
      v12[2] = ____removeUnassociatedAccessory_block_invoke;
      v12[3] = &unk_264A2F820;
      id v13 = v10;
      id v14 = v5;
      dispatch_async(v11, v12);
    }
  }
}

uint64_t ____removeUnassociatedAccessory_block_invoke(uint64_t a1)
{
  return [*(id *)(a1 + 32) removeUnassociatedWACAccessory:*(void *)(a1 + 40)];
}

uint64_t ____updateDevice_block_invoke(uint64_t a1)
{
  return [*(id *)(a1 + 32) updateUnassociatedWACAccessory:*(void *)(a1 + 40)];
}

void __addDevice(void *a1, void *a2)
{
  uint64_t v30 = *MEMORY[0x263EF8340];
  uint64_t v3 = a1;
  id v4 = a2;
  if ([v4 isConfigured])
  {
    uint64_t v5 = [v4 identifier];
    __removeUnassociatedAccessory(v3, v5);
LABEL_3:

    goto LABEL_11;
  }
  id v6 = v3[3];
  long long v7 = [v4 identifier];
  long long v8 = [v6 objectForKey:v7];

  if (!v8 && [v4 supportsAirPlay2])
  {
    long long v9 = (void *)MEMORY[0x263F0DF40];
    id v10 = objc_alloc(MEMORY[0x263F08C38]);
    id v11 = (void *)[v10 initWithUUIDString:*MEMORY[0x263F0B130]];
    uint64_t v5 = [v9 categoryWithIdentifier:v11];

    uint64_t v12 = [HMDUnassociatedWACAccessory alloc];
    id v13 = [v4 identifier];
    id v14 = [v13 UUIDString];
    uint64_t v15 = [v4 name];
    id v16 = [(HMDUnassociatedWACAccessory *)v12 initWithIdentifier:v14 name:v15 category:v5 messageDispatcher:v3[4] wacDevice:v4];

    __int16 v17 = (void *)MEMORY[0x230FBD990]();
    id v18 = v3;
    uint64_t v19 = HMFGetOSLogHandle();
    if (os_log_type_enabled(v19, OS_LOG_TYPE_INFO))
    {
      int v20 = HMFGetLogIdentifier();
      *(_DWORD *)id v26 = 138543874;
      *(void *)&void v26[4] = v20;
      *(_WORD *)&v26[12] = 2048;
      *(void *)&v26[14] = v16;
      *(_WORD *)&v26[22] = 2112;
      id v27 = v16;
      _os_log_impl(&dword_22F52A000, v19, OS_LOG_TYPE_INFO, "%{public}@New WAC Accessory discovered: %p %@", v26, 0x20u);
    }
    __int16 v21 = [v4 identifier];
    __int16 v22 = v18;
    uint64_t v23 = v16;
    [v3[3] setObject:v23 forKey:v21];
    uint64_t v24 = [v22 delegate];
    if (v24)
    {
      id v25 = [v22 delegateQueue];
      *(void *)id v26 = MEMORY[0x263EF8330];
      *(void *)&v26[8] = 3221225472;
      *(void *)&v26[16] = ____addUnassociatedAccessory_block_invoke;
      id v27 = (HMDUnassociatedWACAccessory *)&unk_264A2F820;
      id v28 = v24;
      int v29 = v23;
      dispatch_async(v25, v26);
    }
    goto LABEL_3;
  }
LABEL_11:
}

uint64_t ____addUnassociatedAccessory_block_invoke(uint64_t a1)
{
  return [*(id *)(a1 + 32) addUnassociatedWACAccessory:*(void *)(a1 + 40)];
}

void sub_22FE226A0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_22FE2312C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29,char a30)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void *std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(void *a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x230FBCC30](v23, a1);
  if (v23[0])
  {
    id v6 = (char *)a1 + *(void *)(*a1 - 24);
    uint64_t v7 = *((void *)v6 + 5);
    int v8 = *((_DWORD *)v6 + 2);
    int v9 = *((_DWORD *)v6 + 36);
    if (v9 == -1)
    {
      std::ios_base::getloc((const std::ios_base *)((char *)a1 + *(void *)(*a1 - 24)));
      id v10 = std::locale::use_facet(&__b, MEMORY[0x263F8C108]);
      int v9 = ((uint64_t (*)(const std::locale::facet *, uint64_t))v10->__vftable[2].~facet_0)(v10, 32);
      std::locale::~locale(&__b);
      *((_DWORD *)v6 + 36) = v9;
    }
    uint64_t v11 = a2 + a3;
    if ((v8 & 0xB0) == 0x20) {
      uint64_t v12 = a2 + a3;
    }
    else {
      uint64_t v12 = a2;
    }
    if (!v7) {
      goto LABEL_29;
    }
    uint64_t v13 = *((void *)v6 + 3);
    BOOL v14 = v13 <= a3;
    uint64_t v15 = v13 - a3;
    size_t v16 = v14 ? 0 : v15;
    if (v12 - a2 >= 1
      && (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v7 + 96))(v7, a2, v12 - a2) != v12 - a2)
    {
      goto LABEL_29;
    }
    if ((uint64_t)v16 >= 1)
    {
      if (v16 >= 0x7FFFFFFFFFFFFFF8) {
        std::string::__throw_length_error[abi:ne180100]();
      }
      if (v16 >= 0x17)
      {
        uint64_t v18 = (v16 & 0xFFFFFFFFFFFFFFF8) + 8;
        if ((v16 | 7) != 0x17) {
          uint64_t v18 = v16 | 7;
        }
        uint64_t v19 = v18 + 1;
        p_b = (std::locale::__imp *)operator new(v18 + 1);
        size_t v25 = v16;
        int64_t v26 = v19 | 0x8000000000000000;
        __b.__locale_ = p_b;
      }
      else
      {
        HIBYTE(v26) = v16;
        p_b = (std::locale::__imp *)&__b;
      }
      memset(p_b, v9, v16);
      *((unsigned char *)p_b + v16) = 0;
      int v20 = v26 >= 0 ? &__b : (std::locale *)__b.__locale_;
      uint64_t v21 = (*(uint64_t (**)(uint64_t, std::locale *, size_t))(*(void *)v7 + 96))(v7, v20, v16);
      if (SHIBYTE(v26) < 0) {
        operator delete(__b.__locale_);
      }
      if (v21 != v16) {
        goto LABEL_29;
      }
    }
    if (v11 - v12 < 1
      || (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v7 + 96))(v7, v12, v11 - v12) == v11 - v12)
    {
      *((void *)v6 + 3) = 0;
    }
    else
    {
LABEL_29:
      std::ios_base::clear((std::ios_base *)((char *)a1 + *(void *)(*a1 - 24)), *(_DWORD *)((char *)a1 + *(void *)(*a1 - 24) + 32) | 5);
    }
  }
  MEMORY[0x230FBCC40](v23);
  return a1;
}

void sub_22FE2353C(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  MEMORY[0x230FBCC40](&a10);
  __cxa_begin_catch(a1);
  std::ios_base::__set_badbit_and_consider_rethrow((std::ios_base *)((char *)v17 + *(void *)(*v17 - 24)));
  __cxa_end_catch();
  JUMPOUT(0x22FE23510);
}

void sub_22FE235A8(_Unwind_Exception *a1)
{
}

uint64_t std::ostringstream::~ostringstream(uint64_t a1)
{
  uint64_t v2 = MEMORY[0x263F8C2C8];
  uint64_t v3 = *MEMORY[0x263F8C2C8];
  *(void *)a1 = *MEMORY[0x263F8C2C8];
  *(void *)(a1 + *(void *)(v3 - 24)) = *(void *)(v2 + 24);
  *(void *)(a1 + _Block_object_dispose(&STACK[0x340], 8) = MEMORY[0x263F8C318] + 16;
  if (*(char *)(a1 + 95) < 0) {
    operator delete(*(void **)(a1 + 72));
  }
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  MEMORY[0x230FBCCD0](a1 + 112);
  return a1;
}

void std::string::__throw_length_error[abi:ne180100]()
{
}

void std::__throw_length_error[abi:ne180100]()
{
  exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
  std::length_error::length_error[abi:ne180100](exception);
  __cxa_throw(exception, (struct type_info *)off_264A13A28, MEMORY[0x263F8C060]);
}

void sub_22FE23710(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

std::logic_error *std::length_error::length_error[abi:ne180100](std::logic_error *a1)
{
  CFTypeID result = std::logic_error::logic_error(a1, "basic_string");
  result->__vftable = (std::logic_error_vtbl *)(MEMORY[0x263F8C388] + 16);
  return result;
}

void *std::string::basic_string[abi:ne180100]<0>(void *a1, char *__s)
{
  size_t v4 = strlen(__s);
  if (v4 >= 0x7FFFFFFFFFFFFFF8) {
    std::string::__throw_length_error[abi:ne180100]();
  }
  size_t v5 = v4;
  if (v4 >= 0x17)
  {
    uint64_t v7 = (v4 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v4 | 7) != 0x17) {
      uint64_t v7 = v4 | 7;
    }
    uint64_t v8 = v7 + 1;
    id v6 = operator new(v7 + 1);
    a1[1] = v5;
    a1[2] = v8 | 0x8000000000000000;
    *a1 = v6;
  }
  else
  {
    *((unsigned char *)a1 + 23) = v4;
    id v6 = a1;
    if (!v4) {
      goto LABEL_9;
    }
  }
  memmove(v6, __s, v5);
LABEL_9:
  *((unsigned char *)v6 + v5) = 0;
  return a1;
}

void __clang_call_terminate(void *a1)
{
}

void sub_22FE2396C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_22FE239EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_22FE23AC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_22FE23D58(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id a20)
{
  _Unwind_Resume(a1);
}

void sub_22FE23F1C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_22FE23F98(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_22FE24058(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_22FE2428C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id a20)
{
  _Unwind_Resume(a1);
}

void sub_22FE24488(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_22FE24A10(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_22FE24E0C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

void sub_22FE25080(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

void sub_22FE252A4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_22FE254E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

void sub_22FE25728(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

void std::__shared_weak_count::__release_shared[abi:ne180100](std::__shared_weak_count *a1)
{
  if (!atomic_fetch_add(&a1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))a1->__on_zero_shared)(a1);
    std::__shared_weak_count::__release_weak(a1);
  }
}

void sub_22FE25CE8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

void sub_22FE25F84(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_22FE26108(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_22FE2628C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_22FE26410(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_22FE26594(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_22FE2698C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
  _Unwind_Resume(a1);
}

void sub_22FE26B04(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_22FE26C20(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_22FE26D70(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_22FE26E58(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_22FE2707C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_22FE27464(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_22FE27550(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_22FE276E8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_22FE278DC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_22FE27B94(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_22FE27E00(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_22FE28164(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_22FE28240(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_22FE282F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_22FE28430(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_22FE28794(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_22FE2887C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_22FE28968(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_22FE28AD8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_22FE28E20(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_22FE28EFC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_22FE28FB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_22FE290EC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_22FE29450(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_22FE29538(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_22FE29608(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_22FE29740(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_22FE29AD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_22FE29BD4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_22FE29E04(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_22FE29F7C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_22FE2A270(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_22FE2A350(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_22FE2A500(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_22FE2A714(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_22FE2AC64(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_22FE2AD90(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_22FE2AE10(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_22FE2B1C8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

__CFString *HMDUserPresenceRegionStatusAsString(unint64_t a1)
{
  if (a1 >= 3)
  {
    objc_msgSend(NSString, "stringWithFormat:", @"Unknown HMDUserPresenceRegionStatus %tu", a1);
    id v1 = (__CFString *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    id v1 = off_264A22AB8[a1];
  }
  return v1;
}

void sub_22FE2DC18(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FE2DD8C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FE2DF50(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FE2E0C4(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FE2E288(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FE2E3FC(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FE2EE74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 80), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__162337(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__162338(uint64_t a1)
{
}

void sub_22FE2F0D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 64), 8);
  _Unwind_Resume(a1);
}

void sub_22FE2F658(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,id a25)
{
  objc_destroyWeak(v26);
  objc_destroyWeak(v25);
  objc_destroyWeak(&location);
  objc_destroyWeak(&a25);
  _Unwind_Resume(a1);
}

id findResidentDevice(void *a1, void *a2)
{
  id v3 = a2;
  v7[0] = MEMORY[0x263EF8330];
  v7[1] = 3221225472;
  v7[2] = __findResidentDevice_block_invoke;
  v7[3] = &unk_264A2A830;
  id v8 = v3;
  id v4 = v3;
  size_t v5 = objc_msgSend(a1, "na_firstObjectPassingTest:", v7);

  return v5;
}

uint64_t __findResidentDevice_block_invoke(uint64_t a1, void *a2)
{
  id v3 = [a2 identifier];
  uint64_t v4 = objc_msgSend(v3, "hmf_isEqualToUUID:", *(void *)(a1 + 32));

  return v4;
}

void sub_22FE30914(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_22FE330CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void __HMDResidentSyncCodingModel_block_invoke()
{
  uint64_t v0 = [HMDManagedObjectCodingModel alloc];
  id v3 = +[HMDCoreData managedObjectModel];
  uint64_t v1 = [(HMDManagedObjectCodingModel *)v0 initWithModel:v3 configNamespace:@"residentSync" rootEntityName:@"MKFHome"];
  uint64_t v2 = (void *)HMDResidentSyncCodingModel__hmf_once_v1;
  HMDResidentSyncCodingModel__hmf_once_uint64_t v1 = v1;
}

void sub_22FE35DCC(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FE36004(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FE3BAE4(_Unwind_Exception *a1)
{
  objc_destroyWeak(v4);
  objc_destroyWeak(v3);
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v5 - 136));
  _Unwind_Resume(a1);
}

HMDApplicationInfo *__HMDApplicationRegistryApplicationInfoForApplicationProxy(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  uint64_t v5 = [v4 bundleIdentifier];
  if (v5)
  {
    id v6 = [v4 bundleURL];
    if (v6) {
      __HMDApplicationRegistryApplicationForBundleURL(v3, v6);
    }
    else {
      __HMDApplicationRegistryApplicationWithBundleIdentifier(v3, v5);
    }
    uint64_t v7 = (HMDApplicationInfo *)objc_claimAutoreleasedReturnValue();
    if (!v7) {
      uint64_t v7 = [[HMDApplicationInfo alloc] initWithBundleIdentifier:v5 bundleURL:v6];
    }
  }
  else
  {
    uint64_t v7 = 0;
  }

  return v7;
}

id *__HMDApplicationRegistryApplicationWithBundleIdentifier(id *a1, void *a2)
{
  id v3 = a2;
  if (a1)
  {
    id v4 = [a1[2] allObjects];
    v6[0] = MEMORY[0x263EF8330];
    v6[1] = 3221225472;
    v6[2] = ____HMDApplicationRegistryApplicationWithBundleIdentifier_block_invoke;
    v6[3] = &unk_264A22E08;
    id v7 = v3;
    objc_msgSend(v4, "hmf_objectPassingTest:", v6);
    a1 = (id *)objc_claimAutoreleasedReturnValue();
  }
  return a1;
}

id *__HMDApplicationRegistryApplicationForBundleURL(id *a1, void *a2)
{
  id v3 = a2;
  if (a1)
  {
    id v4 = [a1[2] allObjects];
    v6[0] = MEMORY[0x263EF8330];
    v6[1] = 3221225472;
    v6[2] = ____HMDApplicationRegistryApplicationForBundleURL_block_invoke;
    v6[3] = &unk_264A22E08;
    id v7 = v3;
    objc_msgSend(v4, "hmf_objectPassingTest:", v6);
    a1 = (id *)objc_claimAutoreleasedReturnValue();
  }
  return a1;
}

void sub_22FE3C658(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FE3C774(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void __HMDApplicationRegistryHandleAddedApplicationInfo(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (a1 && v3)
  {
    id v8 = v3;
    uint64_t v4 = [v3 isEntitledForSPIAccess];
    uint64_t v5 = [v8 vendorIdentifier];
    if (v5)
    {
      id v6 = +[HMDApplicationVendorIDStore sharedStore];
      id v7 = [v8 bundleIdentifier];
      [v6 addVendorID:v5 applicationBundleId:v7 spiClient:v4];
    }
    id v3 = v8;
  }
}

void sub_22FE3C914(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FE3C994(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

id HMDShortDescriptionForToken(void *a1)
{
  uint64_t v1 = [a1 description];
  if ([v1 hasPrefix:@"<NSPersistentHistoryToken - {\n    "]
    && [v1 hasSuffix:@";\n}>"])
  {
    objc_msgSend(v1, "substringWithRange:", objc_msgSend(@"<NSPersistentHistoryToken - {\n    ", "length"), objc_msgSend(v1, "length")
    - ([@"<NSPersistentHistoryToken - {\n    " length]
     + [@";\n}>" length]));
    id v2 = (id)objc_claimAutoreleasedReturnValue();
    if ((unint64_t)[v2 length] < 0x47) {
      goto LABEL_6;
    }
  }
  id v2 = v1;
LABEL_6:

  return v2;
}

double HMDHomeDataChangedMessageTimeout()
{
  uint64_t v0 = [MEMORY[0x263F42608] sharedPreferences];
  uint64_t v1 = [v0 preferenceForKey:@"HMDHomeDataChangedMessageTimeout"];
  id v2 = [v1 numberValue];
  [v2 doubleValue];
  double v4 = v3;

  return v4;
}

void sub_22FE40C00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  _Block_object_dispose(&a21, 8);
  _Block_object_dispose(&a27, 8);
  _Block_object_dispose((const void *)(v27 - 144), 8);
  _Block_object_dispose((const void *)(v27 - 96), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__166300(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__166301(uint64_t a1)
{
}

void sub_22FE40DD0(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_22FE40EF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_22FE42910(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18, uint64_t a19, void *a20)
{
  _Unwind_Resume(a1);
}

void sub_22FE42AB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16, uint64_t a17, void *a18)
{
  _Unwind_Resume(a1);
}

void __destroy_helper_block_e8_48n8_8_s0_s16(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 64);
}

id __copy_helper_block_e8_48n15_8_8_s0_t8w8_s16(void *a1, uint64_t a2)
{
  a1[6] = *(id *)(a2 + 48);
  a1[7] = *(void *)(a2 + 56);
  id result = *(id *)(a2 + 64);
  a1[8] = result;
  return result;
}

void __destroy_helper_block_e8_56n8_8_s0_s16(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 72);
}

id __copy_helper_block_e8_56n15_8_8_s0_t8w8_s16(void *a1, uint64_t a2)
{
  a1[7] = *(id *)(a2 + 56);
  a1[8] = *(void *)(a2 + 64);
  id result = *(id *)(a2 + 72);
  a1[9] = result;
  return result;
}

void sub_22FE43B9C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_22FE44CAC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  objc_destroyWeak(v20);
  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22FE4EF20(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 136), 8);
  _Unwind_Resume(a1);
}

void sub_22FE512B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22FE51AFC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22FE568E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22FE57AD0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,id location)
{
  objc_destroyWeak(v22);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void __HMDDeviceMarkDirty(void *a1, void *a2)
{
  id v3 = a1;
  v5[0] = MEMORY[0x263EF8330];
  v5[1] = 3221225472;
  void v5[2] = ____HMDDeviceMarkDirty_block_invoke;
  void v5[3] = &unk_264A2F3E8;
  id v6 = v3;
  id v4 = v3;
  [a2 submitBlock:v5];
}

void sub_22FE5CF1C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FE5D2D8(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FE5D3D4(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FE5D760(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void __deregisterForAccountHandleUpdates(void *a1)
{
  if (a1)
  {
    uint64_t v1 = (void *)MEMORY[0x263F08A00];
    id v2 = a1;
    id v3 = [v1 defaultCenter];
    [v3 removeObserver:v2 name:@"HMDAccountHandlesUpdatedNotification" object:0];
  }
}

id __deviceHandlesForAccount(void *a1, void *a2, void *a3)
{
  uint64_t v35 = *MEMORY[0x263EF8340];
  id v5 = a1;
  id v6 = a2;
  id v27 = a3;
  id v7 = 0;
  if (v5 && v6)
  {
    int v8 = objc_msgSend(v6, "hmf_isEmpty");
    if (!v27 || v8)
    {
      id v7 = v5;
    }
    else
    {
      v32[0] = MEMORY[0x263EF8330];
      v32[1] = 3221225472;
      v32[2] = ____deviceHandlesForAccount_block_invoke;
      v32[3] = &unk_264A23090;
      id v33 = v6;
      uint64_t v9 = objc_msgSend(v5, "hmf_objectsPassingTest:", v32);
      if (objc_msgSend(v9, "hmf_isEmpty"))
      {
        id v7 = v5;
      }
      else
      {
        id v24 = v6;
        id v25 = v5;
        id v10 = (void *)[v5 mutableCopy];
        long long v28 = 0u;
        long long v29 = 0u;
        long long v30 = 0u;
        long long v31 = 0u;
        id obj = v9;
        uint64_t v11 = [obj countByEnumeratingWithState:&v28 objects:v34 count:16];
        if (v11)
        {
          uint64_t v12 = v11;
          uint64_t v13 = *(void *)v29;
          do
          {
            for (uint64_t i = 0; i != v12; ++i)
            {
              if (*(void *)v29 != v13) {
                objc_enumerationMutation(obj);
              }
              uint64_t v15 = *(void **)(*((void *)&v28 + 1) + 8 * i);
              size_t v16 = [v15 internal];
              objc_opt_class();
              if (objc_opt_isKindOfClass()) {
                __int16 v17 = v16;
              }
              else {
                __int16 v17 = 0;
              }
              id v18 = v17;

              if (v18)
              {
                uint64_t v19 = [_HMDGlobalDeviceHandle alloc];
                int v20 = [v18 pushToken];
                uint64_t v21 = [(_HMDGlobalDeviceHandle *)v19 initWithPushToken:v20 accountHandle:v27];

                __int16 v22 = [[HMDDeviceHandle alloc] initWithInternal:v21];
                if (v22)
                {
                  [v10 removeObject:v15];
                  [v10 addObject:v22];
                }
              }
            }
            uint64_t v12 = [obj countByEnumeratingWithState:&v28 objects:v34 count:16];
          }
          while (v12);
        }

        id v7 = (id)[v10 copy];
        id v6 = v24;
        id v5 = v25;
      }
    }
  }

  return v7;
}

uint64_t ____deviceHandlesForAccount_block_invoke(uint64_t a1, void *a2)
{
  id v3 = a2;
  if ([v3 isGlobal])
  {
    id v4 = [v3 accountHandle];
    if (v4) {
      uint64_t v5 = [*(id *)(a1 + 32) containsObject:v4] ^ 1;
    }
    else {
      uint64_t v5 = 1;
    }
  }
  else
  {
    uint64_t v5 = 0;
  }

  return v5;
}

void sub_22FE5DC1C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FE5DFB0(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FE5E0DC(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FE5E578(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FE5FEC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  va_start(va, a17);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__168870(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__168871(uint64_t a1)
{
}

void sub_22FE60B30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_22FE6375C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FE67DAC(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FE685FC(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FE68CA0(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FE68E30(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FE68F88(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FE6900C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FE6A9F4(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FE6DE7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,char a35,uint64_t a36,uint64_t a37,uint64_t a38,char a39)
{
}

void bindStringSQLite3(sqlite3_stmt *a1, int a2, void *a3, void *a4)
{
  id v7 = a3;
  int v8 = v7;
  if (!*a4)
  {
    id v11 = v7;
    int v9 = v7
       ? sqlite3_bind_text(a1, a2, (const char *)[v7 UTF8String], -1, 0)
       : sqlite3_bind_null(a1, a2);
    int v8 = v11;
    if (v9)
    {
      id v10 = [MEMORY[0x263F087E8] errorWithSQLite3Statement:a1];
      int v8 = v11;
      *a4 = v10;
    }
  }
}

id execSQLite3(sqlite3_stmt *a1)
{
  if (sqlite3_step(a1) == 101)
  {
    id v2 = 0;
  }
  else
  {
    id v2 = [MEMORY[0x263F087E8] errorWithSQLite3Statement:a1];
  }
  if (sqlite3_reset(a1) && !v2)
  {
    id v2 = [MEMORY[0x263F087E8] errorWithSQLite3Statement:a1];
  }
  return v2;
}

void bindDataSQLite3(sqlite3_stmt *a1, int a2, void *a3, void *a4)
{
  id v7 = a3;
  int v8 = v7;
  if (!*a4)
  {
    id v12 = v7;
    if (v7)
    {
      if ([v7 length])
      {
        id v9 = v12;
        int v10 = sqlite3_bind_blob64(a1, a2, (const void *)[v9 bytes], objc_msgSend(v9, "length"), 0);
      }
      else
      {
        int v10 = sqlite3_bind_zeroblob(a1, a2, 0);
      }
    }
    else
    {
      int v10 = sqlite3_bind_null(a1, a2);
    }
    int v8 = v12;
    if (v10)
    {
      id v11 = [MEMORY[0x263F087E8] errorWithSQLite3Statement:a1];
      int v8 = v12;
      *a4 = v11;
    }
  }
}

sqlite3_int64 steplastrowresetSQLite3(sqlite3_stmt *a1, void *a2)
{
  if (sqlite3_step(a1) != 101)
  {
    if (a2)
    {
      *a2 = [MEMORY[0x263F087E8] errorWithSQLite3Statement:a1];
      if (sqlite3_reset(a1))
      {
        id v6 = (void *)MEMORY[0x263F087E8];
        goto LABEL_8;
      }
    }
    else
    {
      sqlite3_reset(a1);
    }
    return 0;
  }
  id v4 = sqlite3_db_handle(a1);
  sqlite3_int64 insert_rowid = sqlite3_last_insert_rowid(v4);
  if (sqlite3_reset(a1))
  {
    if (a2)
    {
      id v6 = (void *)MEMORY[0x263F087E8];
LABEL_8:
      [v6 errorWithSQLite3Statement:a1];
      sqlite3_int64 insert_rowid = 0;
      *a2 = (id)objc_claimAutoreleasedReturnValue();
      return insert_rowid;
    }
    return 0;
  }
  return insert_rowid;
}

sqlite3_stmt *bindIntSQLite3(sqlite3_stmt *result, int a2, sqlite3_int64 a3, void *a4)
{
  if (!*a4)
  {
    uint64_t v5 = result;
    id result = (sqlite3_stmt *)sqlite3_bind_int64(result, a2, a3);
    if (result)
    {
      id result = [MEMORY[0x263F087E8] errorWithSQLite3Statement:v5];
      *a4 = result;
    }
  }
  return result;
}

id _handleFetchWithRawCallback(sqlite3_stmt *a1, void *a2)
{
  id v3 = a2;
  sqlite3_reset(a1);
  while (1)
  {
    int v4 = sqlite3_step(a1);
    if (v4 != 100) {
      break;
    }
    uint64_t v5 = [MEMORY[0x263EFF8F8] dataWithSQLite3Column:a1 column:0];
    sqlite3_int64 v6 = sqlite3_column_int64(a1, 2);
    id v7 = [MEMORY[0x263EFF8F8] dataWithSQLite3Column:a1 column:1];
    int v8 = [NSString stringWithSQLite3Column:a1 column:3];
    LOBYTE(v6) = v3[2](v3, v5, v6, v7, v8, 0);

    if ((v6 & 1) == 0) {
      goto LABEL_6;
    }
  }
  if (v4 == 101)
  {
LABEL_6:
    id v9 = 0;
    goto LABEL_8;
  }
  id v9 = [MEMORY[0x263F087E8] errorWithSQLite3Statement:a1];
  ((uint64_t (**)(id, void *, sqlite3_int64, void *, void *, void *))v3)[2](v3, 0, 0, 0, 0, v9);
LABEL_8:
  sqlite3_reset(a1);

  return v9;
}

id selectSQLite3(sqlite3 *a1, const char *a2, void *a3, void *a4)
{
  void v64[3] = *MEMORY[0x263EF8340];
  id v7 = a3;
  int v8 = [MEMORY[0x263EFF980] array];
  id v9 = 0;
  id v10 = 0;
  ppStmt = 0;
  if (!*a4)
  {
    if (sqlite3_prepare_v2(a1, a2, -1, &ppStmt, 0))
    {
      [MEMORY[0x263F087E8] errorWithSQLite3Context:a1 statement:a2];
      id v9 = 0;
      id v10 = 0;
      *a4 = (id)objc_claimAutoreleasedReturnValue();
      goto LABEL_48;
    }
    int v11 = sqlite3_bind_parameter_count(ppStmt);
    if (v11 >= 2)
    {
      int v12 = v11;
      uint64_t v13 = 1;
      unint64_t v14 = 0x263F08000uLL;
      uint64_t v54 = *MEMORY[0x263F41FD8];
      unsigned int v55 = a2;
      while (1)
      {
        if (*a4) {
          goto LABEL_46;
        }
        uint64_t v15 = sqlite3_bind_parameter_name(ppStmt, v13);
        if (!v15)
        {
          uint64_t v42 = (void *)MEMORY[0x263F087E8];
          v64[0] = &unk_26E472400;
          v63[0] = @"extcode";
          v63[1] = @"text";
          uint64_t v43 = objc_msgSend(*(id *)(v14 + 2880), "stringWithFormat:", @"statement cannot contain nameless parameters (%d is nameless)", v13);
          v64[1] = v43;
          v63[2] = @"statement";
          uint64_t v44 = [*(id *)(v14 + 2880) stringWithUTF8String:a2];
          v64[2] = v44;
          uint64_t v45 = [NSDictionary dictionaryWithObjects:v64 forKeys:v63 count:3];
          *a4 = [v42 errorWithDomain:v54 code:3 userInfo:v45];

          goto LABEL_46;
        }
        size_t v16 = v15;
        __int16 v17 = [*(id *)(v14 + 2880) stringWithUTF8String:v15];
        id v18 = [v7 objectForKey:v17];

        if (v18)
        {
          objc_opt_class();
          if ((objc_opt_isKindOfClass() & 1) == 0) {
            break;
          }
        }
        sqlite3_bind_null(ppStmt, v13);
LABEL_29:

        uint64_t v13 = (v13 + 1);
        if (v12 == v13) {
          goto LABEL_32;
        }
      }
      id v19 = v18;
      objc_opt_class();
      char isKindOfClass = objc_opt_isKindOfClass();
      if (isKindOfClass) {
        uint64_t v21 = v19;
      }
      else {
        uint64_t v21 = 0;
      }
      id v57 = v21;

      if (isKindOfClass)
      {
        bindDataSQLite3(ppStmt, v13, v19, a4);
LABEL_16:
        id v22 = 0;
        id v23 = 0;
LABEL_28:

        unint64_t v14 = 0x263F08000;
        goto LABEL_29;
      }
      id v22 = v19;
      objc_opt_class();
      char v24 = objc_opt_isKindOfClass();
      if (v24) {
        id v25 = v22;
      }
      else {
        id v25 = 0;
      }
      id v26 = v25;

      if (v24)
      {
        bindStringSQLite3(ppStmt, v13, v22, a4);
        id v23 = 0;
      }
      else
      {
        id v23 = v22;
        objc_opt_class();
        char v27 = objc_opt_isKindOfClass();
        if (v27) {
          long long v28 = v23;
        }
        else {
          long long v28 = 0;
        }
        id v29 = v28;

        if ((v27 & 1) == 0)
        {
          long long v52 = (void *)MEMORY[0x263F087E8];
          v62[0] = &unk_26E472400;
          v61[0] = @"extcode";
          v61[1] = @"text";
          long long v30 = NSString;
          long long v31 = (objc_class *)objc_opt_class();
          long long v53 = NSStringFromClass(v31);
          id v32 = [v30 stringWithFormat:@"bind parameter %s is not of a recognized type %@ is not a (NSNull, NSData, NSString, or NSNumber)", v16, v53];
          v62[1] = v32;
          v61[2] = @"statement";
          id v33 = [NSString stringWithUTF8String:v55];
          v62[2] = v33;
          id v34 = [NSDictionary dictionaryWithObjects:v62 forKeys:v61 count:3];
          *a4 = [v52 errorWithDomain:v54 code:3 userInfo:v34];

          a2 = v55;
          goto LABEL_16;
        }
        bindIntSQLite3(ppStmt, v13, [v23 longLongValue], a4);
        id v22 = 0;
      }
      a2 = v55;
      goto LABEL_28;
    }
LABEL_32:
    if (*a4)
    {
LABEL_46:
      id v9 = 0;
LABEL_47:
      id v10 = 0;
    }
    else
    {
      id v56 = a2;
      uint64_t v35 = 0;
      uint64_t v36 = sqlite3_column_count(ppStmt);
      while (1)
      {
        int v37 = sqlite3_step(ppStmt);
        if (v37 != 100) {
          break;
        }
        id v9 = [MEMORY[0x263EFF980] arrayWithCapacity:v36];

        if ((int)v36 >= 1)
        {
          uint64_t v38 = 0;
          do
          {
            uint64_t v39 = sqlite3_column_type(ppStmt, v38);
            switch((int)v39)
            {
              case 1:
                uint64_t v40 = objc_msgSend(NSNumber, "numberWithLongLong:", sqlite3_column_int64(ppStmt, v38));
                break;
              case 2:
                uint64_t v40 = objc_msgSend(NSNumber, "numberWithDouble:", sqlite3_column_double(ppStmt, v38));
                break;
              case 3:
                uint64_t v40 = [NSString stringWithSQLite3Column:ppStmt column:v38];
                break;
              case 4:
                uint64_t v40 = [MEMORY[0x263EFF8F8] dataWithSQLite3Column:ppStmt column:v38];
                break;
              case 5:
                uint64_t v40 = [MEMORY[0x263EFF9D0] null];
                break;
              default:
                id v47 = (void *)MEMORY[0x263F087E8];
                uint64_t v48 = *MEMORY[0x263F41FD8];
                v60[0] = &unk_26E472400;
                v59[0] = @"extcode";
                v59[1] = @"text";
                id v49 = objc_msgSend(NSString, "stringWithFormat:", @"column %d is of SQLite3 type %d (not recognized)", v38, v39);
                v60[1] = v49;
                v59[2] = @"statement";
                id v50 = [NSString stringWithUTF8String:v56];
                v60[2] = v50;
                long long v51 = [NSDictionary dictionaryWithObjects:v60 forKeys:v59 count:3];
                *a4 = [v47 errorWithDomain:v48 code:3 userInfo:v51];

                goto LABEL_47;
            }
            uint64_t v41 = (void *)v40;
            [v9 addObject:v40];

            uint64_t v38 = (v38 + 1);
          }
          while (v36 != v38);
        }
        [v8 addObject:v9];
        uint64_t v35 = v9;
      }
      if (v37 != 101)
      {
        *a4 = [MEMORY[0x263F087E8] errorWithSQLite3Statement:ppStmt];
      }
      sqlite3_finalize(ppStmt);
      if (*a4) {
        id v10 = 0;
      }
      else {
        id v10 = v8;
      }
      id v9 = v35;
    }
  }
LABEL_48:

  return v10;
}

id runSQLite3(sqlite3 *a1, const char *a2)
{
  uint64_t v16 = *MEMORY[0x263EF8340];
  if (sqlite3_exec(a1, a2, 0, 0, 0))
  {
    int v4 = (void *)MEMORY[0x230FBD990]();
    uint64_t v5 = HMFGetOSLogHandle();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
    {
      sqlite3_int64 v6 = HMFGetLogIdentifier();
      id v7 = [MEMORY[0x263F087E8] errorWithSQLite3Context:a1];
      int v10 = 138543874;
      int v11 = v6;
      __int16 v12 = 2112;
      uint64_t v13 = v7;
      __int16 v14 = 2080;
      uint64_t v15 = a2;
      _os_log_impl(&dword_22F52A000, v5, OS_LOG_TYPE_ERROR, "%{public}@Got Error %@ on %s", (uint8_t *)&v10, 0x20u);
    }
    int v8 = [MEMORY[0x263F087E8] errorWithSQLite3Context:a1 statement:a2];
  }
  else
  {
    int v8 = 0;
  }
  return v8;
}

sqlite3_stmt *prepareSQLite3(sqlite3 *a1, const char *a2, void *a3)
{
  ppStmt = 0;
  if (!sqlite3_prepare_v2(a1, a2, -1, &ppStmt, 0)) {
    return ppStmt;
  }
  if (!a3) {
    return 0;
  }
  id v6 = [MEMORY[0x263F087E8] errorWithSQLite3Context:a1 statement:a2];
  id result = 0;
  *a3 = v6;
  return result;
}

void sub_22FE75BEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__170764(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__170765(uint64_t a1)
{
}

id MKFCKModelCurrentWriterVersionString()
{
  if (MKFCKModelCurrentWriterVersionString__hmf_once_t2 != -1) {
    dispatch_once(&MKFCKModelCurrentWriterVersionString__hmf_once_t2, &__block_literal_global_171013);
  }
  uint64_t v0 = (void *)MKFCKModelCurrentWriterVersionString__hmf_once_v3;
  return v0;
}

void __MKFCKModelCurrentWriterVersionString_block_invoke()
{
  id v3 = [MEMORY[0x263F42620] productInfo];
  uint64_t v0 = [v3 softwareVersion];
  uint64_t v1 = [v0 versionString];
  id v2 = (void *)MKFCKModelCurrentWriterVersionString__hmf_once_v3;
  MKFCKModelCurrentWriterVersionString__hmf_once_id v3 = v1;
}

id _generateFlags(int a1)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  uint64_t v5 = 0;
  uint64_t v6 = 0;
  MEMORY[0x230FBE830](&v5);
  if (a1) {
    char v2 = 8;
  }
  else {
    char v2 = 0;
  }
  BYTE5(v6) = BYTE5(v6) & 0xF7 | v2;
  id v3 = (void *)[objc_alloc(MEMORY[0x263F08C38]) initWithUUIDBytes:&v5];
  return v3;
}

void sub_22FE79768(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_22FE79E54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va1, a9);
  va_start(va, a9);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  uint64_t v16 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__171068(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__171069(uint64_t a1)
{
}

id MKFPropertyNamesFromDescriptions(void *a1)
{
  uint64_t v1 = (objc_class *)MEMORY[0x263EFF980];
  id v2 = a1;
  id v3 = objc_msgSend([v1 alloc], "initWithCapacity:", objc_msgSend(v2, "count"));
  v8[0] = MEMORY[0x263EF8330];
  v8[1] = 3221225472;
  v8[2] = __MKFPropertyNamesFromDescriptions_block_invoke;
  void v8[3] = &unk_264A231B0;
  id v9 = v3;
  id v4 = v3;
  objc_msgSend(v2, "hmf_enumerateWithAutoreleasePoolUsingBlock:", v8);

  uint64_t v5 = [v4 sortedArrayUsingSelector:sel_compare_];
  uint64_t v6 = [v5 componentsJoinedByString:@", "];

  return v6;
}

void __MKFPropertyNamesFromDescriptions_block_invoke(uint64_t a1, void *a2)
{
  id v2 = *(void **)(a1 + 32);
  id v3 = [a2 name];
  [v2 addObject:v3];
}

void sub_22FE7DBD8(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 80), 8);
  _Unwind_Resume(a1);
}

id HMDSanitizeCoreDataError(void *a1)
{
  uint64_t v25 = *MEMORY[0x263EF8340];
  id v1 = a1;
  if (v1)
  {
    id v2 = [MEMORY[0x263EFF9A0] dictionary];
    id v3 = [v1 userInfo];
    if ([v3 count])
    {
      id v18 = v1;
      long long v21 = 0u;
      long long v22 = 0u;
      long long v19 = 0u;
      long long v20 = 0u;
      uint64_t v4 = *MEMORY[0x263F08338];
      v23[0] = *MEMORY[0x263F08320];
      v23[1] = v4;
      v23[2] = *MEMORY[0x263F08348];
      v23[3] = @"reason";
      uint64_t v5 = [MEMORY[0x263EFF8C0] arrayWithObjects:v23 count:4];
      uint64_t v6 = [v5 countByEnumeratingWithState:&v19 objects:v24 count:16];
      if (v6)
      {
        uint64_t v7 = v6;
        uint64_t v8 = *(void *)v20;
        do
        {
          for (uint64_t i = 0; i != v7; ++i)
          {
            if (*(void *)v20 != v8) {
              objc_enumerationMutation(v5);
            }
            uint64_t v10 = *(void *)(*((void *)&v19 + 1) + 8 * i);
            int v11 = [v3 objectForKeyedSubscript:v10];
            objc_opt_class();
            if (objc_opt_isKindOfClass()) {
              uint64_t v12 = v11;
            }
            else {
              uint64_t v12 = 0;
            }
            id v13 = v12;

            if (v13) {
              [v2 setObject:v13 forKeyedSubscript:v10];
            }
          }
          uint64_t v7 = [v5 countByEnumeratingWithState:&v19 objects:v24 count:16];
        }
        while (v7);
      }

      id v1 = v18;
    }
    uint64_t v14 = (void *)MEMORY[0x263F087E8];
    uint64_t v15 = [v1 domain];
    uint64_t v16 = objc_msgSend(v14, "errorWithDomain:code:userInfo:", v15, objc_msgSend(v1, "code"), v2);
  }
  else
  {
    uint64_t v16 = 0;
  }

  return v16;
}

id HMDHomeUUIDFromWorkingContextName(void *a1)
{
  id v1 = a1;
  if ([v1 hasPrefix:@"H:"])
  {
    id v2 = [v1 substringFromIndex:objc_msgSend(@"H:", "length")];
    id v3 = (void *)[objc_alloc(MEMORY[0x263F08C38]) initWithUUIDString:v2];
  }
  else
  {
    id v3 = 0;
  }

  return v3;
}

void HMDWorkingContextNameForHomeUUID(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    id v2 = v1;
    id v3 = NSString;
    uint64_t v4 = [v1 UUIDString];
    uint64_t v5 = [v3 stringWithFormat:@"H:%@", v4];

    id v6 = v5;
  }
  else
  {
    uint64_t v7 = (HMDMediaGroupsParticipantData *)_HMFPreconditionFailure();
    [(HMDMediaGroupsParticipantData *)v7 .cxx_destruct];
  }
}

void sub_22FE80484(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FE81114(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22FE81508(_Unwind_Exception *a1)
{
}

void sub_22FE816E8(_Unwind_Exception *a1)
{
}

void sub_22FE8386C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_22FE83C68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__172893(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__172894(uint64_t a1)
{
}

void sub_22FE84AC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
}

void sub_22FE8977C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location, id a18)
{
  objc_destroyWeak(v19);
  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  objc_destroyWeak(&a18);
  _Unwind_Resume(a1);
}

void sub_22FE8ECE0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void ____handleFinishedUnarchive_block_invoke(uint64_t a1)
{
  uint64_t v69 = *MEMORY[0x263EF8340];
  uint64_t v2 = [*(id *)(a1 + 32) state];
  id v3 = (void *)MEMORY[0x230FBD990]();
  id v4 = *(id *)(a1 + 32);
  uint64_t v5 = HMFGetOSLogHandle();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);
  if (v2 == 3)
  {
    if (v6)
    {
      uint64_t v7 = HMFGetLogIdentifier();
      SEL v8 = *(void **)(a1 + 40);
      *(_DWORD *)long long buf = 138543618;
      uint64_t v66 = v7;
      __int16 v67 = 2112;
      id v68 = v8;
      _os_log_impl(&dword_22F52A000, v5, OS_LOG_TYPE_DEFAULT, "%{public}@Finished unarchive with error: %@", buf, 0x16u);
    }
    id v9 = *(void **)(a1 + 32);
    if (*(void *)(a1 + 40))
    {
      [v9 setState:2];
LABEL_40:
      [*(id *)(a1 + 32) setExtractor:0];
      return;
    }
    id v11 = v9;
    uint64_t v12 = (void *)[objc_alloc(MEMORY[0x263F425C0]) initWithName:@"HMDSoftwareUpdateDocumentationAsset.validation"];
    id v13 = (void *)MEMORY[0x230FBD990]();
    uint64_t v14 = (void *)MEMORY[0x263F086E0];
    uint64_t v15 = [v11 bundleURL];
    uint64_t v16 = [v14 bundleWithURL:v15];

    if (v16)
    {
      long long v63 = v13;
      long long v64 = v12;
      __int16 v17 = [MEMORY[0x263F0E7E8] localizationsForBundle:v16];
      uint64_t v18 = [v17 count];
      long long v19 = (void *)MEMORY[0x230FBD990]();
      id v20 = v11;
      long long v21 = HMFGetOSLogHandle();
      long long v22 = v21;
      if (v18)
      {
        if (os_log_type_enabled(v21, OS_LOG_TYPE_INFO))
        {
          id v23 = HMFGetLogIdentifier();
          *(_DWORD *)long long buf = 138543618;
          uint64_t v66 = v23;
          __int16 v67 = 2112;
          id v68 = v17;
          _os_log_impl(&dword_22F52A000, v22, OS_LOG_TYPE_INFO, "%{public}@Available localizations: %@", buf, 0x16u);
        }
        char v24 = (void *)[objc_alloc(MEMORY[0x263F0E7E8]) initWithBundle:v16];
        BOOL v25 = v24 != 0;
        id v26 = (void *)MEMORY[0x230FBD990]();
        id v27 = v20;
        long long v28 = HMFGetOSLogHandle();
        id v29 = v28;
        if (v24)
        {
          if (os_log_type_enabled(v28, OS_LOG_TYPE_INFO))
          {
            long long v30 = HMFGetLogIdentifier();
            *(_DWORD *)long long buf = 138543618;
            uint64_t v66 = v30;
            __int16 v67 = 2112;
            id v68 = v24;
            _os_log_impl(&dword_22F52A000, v29, OS_LOG_TYPE_INFO, "%{public}@Cached documentation: %@", buf, 0x16u);
          }
          long long v31 = 0;
        }
        else
        {
          if (os_log_type_enabled(v28, OS_LOG_TYPE_DEFAULT))
          {
            uint64_t v40 = HMFGetLogIdentifier();
            *(_DWORD *)long long buf = 138543618;
            uint64_t v66 = v40;
            __int16 v67 = 2112;
            id v68 = v16;
            _os_log_impl(&dword_22F52A000, v29, OS_LOG_TYPE_DEFAULT, "%{public}@Failed to parse documentation for asset bundle: %@", buf, 0x16u);
          }
          long long v31 = [MEMORY[0x263F087E8] hmErrorWithCode:2];
        }
      }
      else
      {
        if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v39 = HMFGetLogIdentifier();
          *(_DWORD *)long long buf = 138543618;
          uint64_t v66 = v39;
          __int16 v67 = 2112;
          id v68 = v16;
          _os_log_impl(&dword_22F52A000, v22, OS_LOG_TYPE_DEFAULT, "%{public}@No available localization for asset bundle: %@", buf, 0x16u);
        }
        long long v31 = [MEMORY[0x263F087E8] hmErrorWithCode:2];
        BOOL v25 = 0;
      }
      id v13 = v63;
      uint64_t v12 = v64;
    }
    else
    {
      id v32 = (void *)MEMORY[0x230FBD990]();
      id v33 = v11;
      id v34 = HMFGetOSLogHandle();
      if (os_log_type_enabled(v34, OS_LOG_TYPE_DEFAULT))
      {
        HMFGetLogIdentifier();
        uint64_t v36 = v35 = v12;
        [v33 bundleURL];
        v38 = int v37 = v13;
        *(_DWORD *)long long buf = 138543618;
        uint64_t v66 = v36;
        __int16 v67 = 2112;
        id v68 = v38;
        _os_log_impl(&dword_22F52A000, v34, OS_LOG_TYPE_DEFAULT, "%{public}@Unable to create bundle from: %@", buf, 0x16u);

        id v13 = v37;
        uint64_t v12 = v35;
      }

      long long v31 = [MEMORY[0x263F087E8] hmErrorWithCode:52];
      BOOL v25 = 0;
    }

    id v41 = v31;

    id v42 = v41;
    uint64_t v43 = v42;
    if (v25)
    {
      id v44 = v42;
    }
    else
    {
      id v45 = *(id *)(a1 + 32);
      id v46 = (void *)[objc_alloc(MEMORY[0x263F0E7E8]) initWithAsset:v45];
      id v47 = (void *)MEMORY[0x230FBD990]();
      id v48 = v45;
      id v49 = HMFGetOSLogHandle();
      id v50 = v49;
      if (v46)
      {
        if (os_log_type_enabled(v49, OS_LOG_TYPE_INFO))
        {
          long long v51 = HMFGetLogIdentifier();
          *(_DWORD *)long long buf = 138543618;
          uint64_t v66 = v51;
          __int16 v67 = 2112;
          id v68 = v46;
          _os_log_impl(&dword_22F52A000, v50, OS_LOG_TYPE_INFO, "%{public}@Cached documentation: %@", buf, 0x16u);
        }
        id v52 = v43;
      }
      else
      {
        if (os_log_type_enabled(v49, OS_LOG_TYPE_DEFAULT))
        {
          long long v53 = HMFGetLogIdentifier();
          uint64_t v54 = [v48 URL];
          *(_DWORD *)long long buf = 138543618;
          uint64_t v66 = v53;
          __int16 v67 = 2112;
          id v68 = v54;
          _os_log_impl(&dword_22F52A000, v50, OS_LOG_TYPE_DEFAULT, "%{public}@Failed to parse documentation from asset url: %@", buf, 0x16u);
        }
        id v52 = [MEMORY[0x263F087E8] hmfErrorWithCode:2];
      }

      id v44 = v52;
      if (!v46)
      {
        id v57 = (void *)MEMORY[0x230FBD990]();
        id v58 = *(id *)(a1 + 32);
        id v59 = HMFGetOSLogHandle();
        if (os_log_type_enabled(v59, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v60 = HMFGetLogIdentifier();
          *(_DWORD *)long long buf = 138543618;
          uint64_t v66 = v60;
          __int16 v67 = 2112;
          id v68 = v44;
          _os_log_impl(&dword_22F52A000, v59, OS_LOG_TYPE_DEFAULT, "%{public}@Failed to validate asset with error: %@", buf, 0x16u);
        }
        [*(id *)(a1 + 32) setState:0];
        [*(id *)(a1 + 32) increaseDownloadRetryCount];
        long long v61 = [*(id *)(a1 + 32) fileManager];
        long long v62 = [*(id *)(a1 + 32) bundleURL];
        [v61 removeItemAtURL:v62 error:0];

        goto LABEL_39;
      }
    }
    [*(id *)(a1 + 32) setState:4];
    [*(id *)(a1 + 32) resetDownloadRetryCount];
LABEL_39:
    unsigned int v55 = [*(id *)(a1 + 32) fileManager];
    id v56 = [*(id *)(a1 + 32) archiveURL];
    [v55 removeItemAtURL:v56 error:0];

    goto LABEL_40;
  }
  if (v6)
  {
    uint64_t v10 = HMFGetLogIdentifier();
    *(_DWORD *)long long buf = 138543362;
    uint64_t v66 = v10;
    _os_log_impl(&dword_22F52A000, v5, OS_LOG_TYPE_DEFAULT, "%{public}@Unable to finish unarchive, not currently unarchiving", buf, 0xCu);
  }
}

void sub_22FE8FE40(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void ____handleStartedUnarchive_block_invoke(uint64_t a1)
{
  uint64_t v16 = *MEMORY[0x263EF8340];
  uint64_t v2 = *(void *)(a1 + 32);
  id v3 = (void *)MEMORY[0x230FBD990]();
  id v4 = *(id *)(a1 + 40);
  uint64_t v5 = HMFGetOSLogHandle();
  BOOL v6 = v5;
  if (v2)
  {
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
    {
      uint64_t v7 = HMFGetLogIdentifier();
      uint64_t v8 = *(void *)(a1 + 32);
      int v12 = 138543618;
      id v13 = v7;
      __int16 v14 = 2112;
      uint64_t v15 = v8;
      _os_log_impl(&dword_22F52A000, v6, OS_LOG_TYPE_ERROR, "%{public}@Failed to start unarchive with error: %@", (uint8_t *)&v12, 0x16u);
    }
    [*(id *)(a1 + 40) cancelUnarchive];
  }
  else
  {
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      id v9 = HMFGetLogIdentifier();
      int v12 = 138543362;
      id v13 = v9;
      _os_log_impl(&dword_22F52A000, v6, OS_LOG_TYPE_DEFAULT, "%{public}@Started unarchive", (uint8_t *)&v12, 0xCu);
    }
    uint64_t v10 = [*(id *)(a1 + 40) extractor];
    [v10 setExtractorDelegate:*(void *)(a1 + 40)];

    id v11 = [*(id *)(a1 + 40) archivedFileStream];
    [v11 open];

    __processNextArchivedData(*(void **)(a1 + 40));
  }
}

void __processNextArchivedData(void *a1)
{
  id v1 = a1;
  uint64_t v2 = v1;
  if (v1)
  {
    id v3 = v1[2];
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3221225472;
    block[2] = ____processNextArchivedData_block_invoke;
    block[3] = &unk_264A2F7F8;
    uint64_t v5 = v1;
    dispatch_async(v3, block);
  }
}

void ____processNextArchivedData_block_invoke(uint64_t a1)
{
  uint64_t v22 = *MEMORY[0x263EF8340];
  uint64_t v2 = (id *)(a1 + 32);
  id v3 = [*(id *)(a1 + 32) archivedFileStream];
  int v4 = [v3 hasBytesAvailable];

  uint64_t v5 = (void *)MEMORY[0x230FBD990]();
  id v6 = *v2;
  uint64_t v7 = HMFGetOSLogHandle();
  uint64_t v8 = v7;
  if (v4)
  {
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEBUG))
    {
      id v9 = HMFGetLogIdentifier();
      *(_DWORD *)long long buf = 138543362;
      long long v21 = v9;
      _os_log_impl(&dword_22F52A000, v8, OS_LOG_TYPE_DEBUG, "%{public}@Reading next chunk from the archive", buf, 0xCu);
    }
    id v11 = *(void **)(a1 + 32);
    uint64_t v10 = (id *)(a1 + 32);
    int v12 = [v11 archivedFileStream];
    uint64_t v13 = [v12 read:buf maxLength:4096];

    __int16 v14 = [MEMORY[0x263EFF8F8] dataWithBytes:buf length:v13];
    objc_initWeak(&location, *v10);
    uint64_t v15 = [*v10 extractor];
    v17[0] = MEMORY[0x263EF8330];
    v17[1] = 3221225472;
    v17[2] = ____processNextArchivedData_block_invoke_413;
    v17[3] = &unk_264A236B0;
    objc_copyWeak(&v18, &location);
    [v15 supplyBytes:v14 withCompletionBlock:v17];

    objc_destroyWeak(&v18);
    objc_destroyWeak(&location);
  }
  else
  {
    if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
    {
      uint64_t v16 = HMFGetLogIdentifier();
      *(_DWORD *)long long buf = 138543362;
      long long v21 = v16;
      _os_log_impl(&dword_22F52A000, v8, OS_LOG_TYPE_INFO, "%{public}@Reached end of input stream", buf, 0xCu);
    }
    [*(id *)(a1 + 32) finishUnarchive];
  }
}

void sub_22FE903F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void ____processNextArchivedData_block_invoke_413(uint64_t a1, void *a2, int a3)
{
  uint64_t v16 = *MEMORY[0x263EF8340];
  id v5 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v7 = WeakRetained;
  if (v5)
  {
    uint64_t v8 = (void *)MEMORY[0x230FBD990]();
    id v9 = v7;
    uint64_t v10 = HMFGetOSLogHandle();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
    {
      id v11 = HMFGetLogIdentifier();
      int v12 = 138543618;
      uint64_t v13 = v11;
      __int16 v14 = 2112;
      id v15 = v5;
      _os_log_impl(&dword_22F52A000, v10, OS_LOG_TYPE_INFO, "%{public}@Failed to append data with error: %@", (uint8_t *)&v12, 0x16u);
    }
    [v9 cancelUnarchive];
  }
  else if (a3)
  {
    [WeakRetained finishUnarchive];
  }
  else
  {
    __processNextArchivedData();
  }
}

void sub_22FE9135C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FE91564(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FE91630(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

id __resourceBundleForBundle(void *a1)
{
  uint64_t v10 = *MEMORY[0x263EF8340];
  id v1 = a1;
  uint64_t v2 = [v1 URLForResource:@"AssetData" withExtension:0];
  if (v2)
  {
    id v3 = [MEMORY[0x263F086E0] bundleWithURL:v2];
  }
  else
  {
    int v4 = (void *)MEMORY[0x230FBD990]();
    id v5 = HMFGetOSLogHandle();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      id v6 = HMFGetLogIdentifier();
      int v8 = 138543362;
      id v9 = v6;
      _os_log_impl(&dword_22F52A000, v5, OS_LOG_TYPE_DEFAULT, "%{public}@Failed to find resource bundle", (uint8_t *)&v8, 0xCu);
    }
    id v3 = 0;
  }

  return v3;
}

id __htmlDocumentForResource(void *a1, void *a2, void *a3)
{
  uint64_t v34 = *MEMORY[0x263EF8340];
  id v5 = a1;
  id v6 = a2;
  id v7 = a3;
  long long v23 = 0u;
  long long v24 = 0u;
  long long v25 = 0u;
  long long v26 = 0u;
  id v8 = v6;
  uint64_t v9 = [v8 countByEnumeratingWithState:&v23 objects:v33 count:16];
  if (v9)
  {
    uint64_t v10 = v9;
    uint64_t v11 = *(void *)v24;
    while (2)
    {
      for (uint64_t i = 0; i != v10; ++i)
      {
        if (*(void *)v24 != v11) {
          objc_enumerationMutation(v8);
        }
        uint64_t v13 = [v5 URLForResource:v7 withExtension:@"html" subdirectory:0 localization:*(void *)(*((void *)&v23 + 1) + 8 * i)];
        if (v13)
        {
          id v15 = (void *)v13;
          id v22 = 0;
          __int16 v14 = (void *)[objc_alloc(MEMORY[0x263F0E380]) initWithURL:v13 error:&v22];
          id v16 = v22;
          if (!v14)
          {
            __int16 v17 = (void *)MEMORY[0x230FBD990]();
            id v18 = HMFGetOSLogHandle();
            if (os_log_type_enabled(v18, OS_LOG_TYPE_INFO))
            {
              long long v19 = HMFGetLogIdentifier();
              id v20 = [v15 path];
              *(_DWORD *)long long buf = 138543874;
              long long v28 = v19;
              __int16 v29 = 2112;
              long long v30 = v20;
              __int16 v31 = 2112;
              id v32 = v16;
              _os_log_impl(&dword_22F52A000, v18, OS_LOG_TYPE_INFO, "%{public}@Unable to load document, %@, with error: %@", buf, 0x20u);
            }
          }

          goto LABEL_15;
        }
      }
      uint64_t v10 = [v8 countByEnumeratingWithState:&v23 objects:v33 count:16];
      if (v10) {
        continue;
      }
      break;
    }
  }
  __int16 v14 = 0;
LABEL_15:

  return v14;
}

void sub_22FE97D40(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 112));
  _Unwind_Resume(a1);
}

id deriveCLLocationFromHMDRTLocation(void *a1)
{
  if (a1)
  {
    id v1 = (objc_class *)MEMORY[0x263F00A50];
    id v2 = a1;
    id v3 = [v1 alloc];
    [v2 latitude];
    CLLocationDegrees v5 = v4;
    [v2 longitude];
    CLLocationCoordinate2D v7 = CLLocationCoordinate2DMake(v5, v6);
    [v2 altitude];
    double v9 = v8;
    [v2 horizontalUncertainty];
    double v11 = v10;
    [v2 verticalUncertainty];
    double v13 = v12;
    __int16 v14 = [v2 date];

    id v15 = objc_msgSend(v3, "initWithCoordinate:altitude:horizontalAccuracy:verticalAccuracy:timestamp:", v14, v7.latitude, v7.longitude, v9, v11, v13);
  }
  else
  {
    id v15 = 0;
  }
  return v15;
}

void sub_22FE9F5A4(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FE9F71C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FE9F980(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FE9FA0C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FE9FBF0(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FE9FF50(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FEA02EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  os_unfair_lock_unlock(v18);
  _Unwind_Resume(a1);
}

void sub_22FEA14C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_start(va, a14);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_22FEA4884(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__175331(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__175332(uint64_t a1)
{
}

void sub_22FEA611C(_Unwind_Exception *a1)
{
}

void sub_22FEA63DC(_Unwind_Exception *a1)
{
}

void sub_22FEA6620(_Unwind_Exception *a1)
{
}

void sub_22FEA6948(_Unwind_Exception *a1)
{
}

void sub_22FEA6AEC(_Unwind_Exception *a1)
{
}

void sub_22FEA7894(_Unwind_Exception *a1)
{
}

void sub_22FEA7B8C(_Unwind_Exception *a1)
{
}

void sub_22FEACCF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  va_start(va, a17);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__176630(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__176631(uint64_t a1)
{
}

void sub_22FEAFE44(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 128), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__177032(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__177033(uint64_t a1)
{
}

void sub_22FEB1AB8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,id location)
{
  objc_destroyWeak(v33);
  objc_destroyWeak(v34);
  objc_destroyWeak(v32);
  objc_destroyWeak(&location);
  objc_destroyWeak((id *)(v35 - 176));
  objc_destroyWeak((id *)(v35 - 160));
  _Unwind_Resume(a1);
}

void sub_22FEB28C8(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 112));
  _Unwind_Resume(a1);
}

uint64_t hasAssistantHashingKeyChanged()
{
  uint64_t v0 = (void *)[objc_alloc(MEMORY[0x263F42650]) initWithKey:@"HMDAssistantLastHashingKey" options:0 domain:@"com.apple.homed" defaultValue:0];

  uint64_t v1 = [v0 stringValue];
  uint64_t v2 = +[HMDHelper sharedHelper];
  id v3 = [v2 hashedRouteIDForIdentifier:@"A77C551E-C3FA-414E-ACD8-A7DF3D64E9D6"];

  uint64_t v4 = HMFEqualObjects() ^ 1;
  return v4;
}

void sub_22FEB2A80(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_22FEB314C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_22FEB3E6C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

void sub_22FEB4A1C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, os_unfair_lock_t lock)
{
}

void sub_22FEB4BE8(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void __HMDLostModeManagerExitLostModeWithAuthCompleteNotification(uint64_t a1, void *a2)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  id v2 = a2;
  id v3 = [MEMORY[0x263F3CC60] sharedInstance];
  int v4 = [v3 needsLostModeExitAuth];

  CLLocationDegrees v5 = (void *)MEMORY[0x230FBD990]();
  id v6 = v2;
  CLLocationCoordinate2D v7 = HMFGetOSLogHandle();
  double v8 = v7;
  if (v4)
  {
    if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
    {
      double v9 = HMFGetLogIdentifier();
      int v12 = 138543362;
      double v13 = v9;
      _os_log_impl(&dword_22F52A000, v8, OS_LOG_TYPE_INFO, "%{public}@Received lost mode exit auth notification, but findmy indicates device hasn't exited lost mode with auth", (uint8_t *)&v12, 0xCu);
    }
  }
  else
  {
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      double v10 = HMFGetLogIdentifier();
      int v12 = 138543362;
      double v13 = v10;
      _os_log_impl(&dword_22F52A000, v8, OS_LOG_TYPE_DEFAULT, "%{public}@Sending lost mode exit with auth complete notification", (uint8_t *)&v12, 0xCu);
    }
    double v11 = [MEMORY[0x263F08A00] defaultCenter];
    [v11 postNotificationName:@"HMDLostModeManagerDidExitLostModeWithAuthCompleteNotification" object:v6];
  }
}

void __HMDLostModeManagerLostModeChangeNotification(uint64_t a1, void *a2)
{
  uint64_t v17 = *MEMORY[0x263EF8340];
  id v3 = (void *)MEMORY[0x230FBD990]();
  int v4 = a2;
  if (v4)
  {
    os_unfair_lock_lock_with_options();
    CLLocationDegrees v5 = [MEMORY[0x263F3CC60] sharedInstance];
    int v6 = [v5 lostModeIsActive];

    if (LOBYTE(v4[3]._os_unfair_lock_opaque) == v6)
    {
      os_unfair_lock_unlock(v4 + 2);
    }
    else
    {
      LOBYTE(v4[3]._os_unfair_lock_opaque) = v6;
      os_unfair_lock_unlock(v4 + 2);
      CLLocationCoordinate2D v7 = (void *)MEMORY[0x230FBD990]();
      double v8 = v4;
      double v9 = HMFGetOSLogHandle();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
      {
        double v10 = HMFGetLogIdentifier();
        double v11 = HMFBooleanToString();
        int v13 = 138543618;
        uint64_t v14 = v10;
        __int16 v15 = 2112;
        id v16 = v11;
        _os_log_impl(&dword_22F52A000, v9, OS_LOG_TYPE_DEFAULT, "%{public}@Received notification lost mode is active: %@", (uint8_t *)&v13, 0x16u);
      }
      int v12 = [MEMORY[0x263F08A00] defaultCenter];
      [v12 postNotificationName:@"HMDLostModeManagerUpdatedNotification" object:v8];
    }
  }
}

void sub_22FEB5E60(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FEBAD04(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  objc_destroyWeak(v21);
  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  objc_destroyWeak((id *)(v22 - 112));
  _Unwind_Resume(a1);
}

void sub_22FEBAFD0(_Unwind_Exception *a1)
{
}

void __deleteAccountModel(void *a1, void *a2)
{
  id v3 = a2;
  id v4 = [a1 accountRegistry];
  [v4 removeAccount:v3];
}

void __notifyDelegateAccountRemoved_178100(void *a1, void *a2)
{
  uint64_t v18 = *MEMORY[0x263EF8340];
  id v3 = a1;
  id v4 = a2;
  CLLocationDegrees v5 = v4;
  if (v3 && v4)
  {
    int v6 = (void *)MEMORY[0x230FBD990]();
    id v7 = v3;
    double v8 = HMFGetOSLogHandle();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
    {
      double v9 = HMFGetLogIdentifier();
      *(_DWORD *)long long buf = 138543618;
      __int16 v15 = v9;
      __int16 v16 = 2112;
      uint64_t v17 = v5;
      _os_log_impl(&dword_22F52A000, v8, OS_LOG_TYPE_INFO, "%{public}@Account removed: %@", buf, 0x16u);
    }
    double v10 = [MEMORY[0x263F08A00] defaultCenter];
    int v12 = @"HMDAccountNotificationKey";
    int v13 = v5;
    double v11 = [NSDictionary dictionaryWithObjects:&v13 forKeys:&v12 count:1];
    [v10 postNotificationName:@"HMDRemoteAccountManagerRemovedAccountNotification" object:v7 userInfo:v11];
  }
}

void sub_22FEBB78C(_Unwind_Exception *a1)
{
}

void sub_22FEBB938(_Unwind_Exception *a1)
{
}

void sub_22FEBBB78(_Unwind_Exception *a1)
{
}

void sub_22FEBBD1C(_Unwind_Exception *a1)
{
}

void sub_22FEBBEB4(_Unwind_Exception *a1)
{
}

void sub_22FEBC04C(_Unwind_Exception *a1)
{
}

void sub_22FEBC0DC(_Unwind_Exception *a1)
{
}

void sub_22FEBCB94(_Unwind_Exception *a1)
{
}

void sub_22FEBE188(_Unwind_Exception *a1)
{
}

void sub_22FEBE968(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, id location)
{
  objc_destroyWeak(v12);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void ____handleUnregisteredDestination_block_invoke(uint64_t a1, void *a2, void *a3)
{
  uint64_t v27 = *MEMORY[0x263EF8340];
  id v5 = a2;
  id v6 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  if (WeakRetained)
  {
    if (v6)
    {
      double v8 = (void *)MEMORY[0x230FBD990]();
      id v9 = WeakRetained;
      double v10 = HMFGetOSLogHandle();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
      {
        double v11 = HMFGetLogIdentifier();
        int v12 = [*(id *)(a1 + 40) shortDescription];
        int v13 = [*(id *)(a1 + 32) shortDescription];
        int v21 = 138543874;
        uint64_t v22 = v11;
        __int16 v23 = 2112;
        long long v24 = v12;
        __int16 v25 = 2112;
        long long v26 = v13;
        uint64_t v14 = "%{public}@Account handle, %@, failed to resolve, removing from account: %@";
LABEL_12:
        _os_log_impl(&dword_22F52A000, v10, OS_LOG_TYPE_DEFAULT, v14, (uint8_t *)&v21, 0x20u);

        goto LABEL_13;
      }
      goto LABEL_13;
    }
    if (([*(id *)(a1 + 32) isEqual:v5] & 1) == 0)
    {
      double v8 = (void *)MEMORY[0x230FBD990]();
      id v20 = WeakRetained;
      double v10 = HMFGetOSLogHandle();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
      {
        double v11 = HMFGetLogIdentifier();
        int v12 = [*(id *)(a1 + 40) shortDescription];
        int v13 = [*(id *)(a1 + 32) shortDescription];
        int v21 = 138543874;
        uint64_t v22 = v11;
        __int16 v23 = 2112;
        long long v24 = v12;
        __int16 v25 = 2112;
        long long v26 = v13;
        uint64_t v14 = "%{public}@Account handle, %@, now registered to account: %@";
        goto LABEL_12;
      }
LABEL_13:

      [*(id *)(a1 + 32) removeHandle:*(void *)(a1 + 40)];
      goto LABEL_14;
    }
    if (*(void *)(a1 + 48))
    {
      __int16 v15 = (void *)MEMORY[0x230FBD990]();
      id v16 = WeakRetained;
      uint64_t v17 = HMFGetOSLogHandle();
      if (os_log_type_enabled(v17, OS_LOG_TYPE_INFO))
      {
        uint64_t v18 = HMFGetLogIdentifier();
        long long v19 = *(void **)(a1 + 48);
        int v21 = 138543618;
        uint64_t v22 = v18;
        __int16 v23 = 2112;
        long long v24 = v19;
        _os_log_impl(&dword_22F52A000, v17, OS_LOG_TYPE_INFO, "%{public}@Removing unregistered device: %@", (uint8_t *)&v21, 0x16u);
      }
      [*(id *)(a1 + 32) removeDevice:*(void *)(a1 + 48)];
    }
  }
LABEL_14:
}

void sub_22FEBF3C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__178429(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__178430(uint64_t a1)
{
}

void sub_22FEBFB8C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location, id a19)
{
  objc_destroyWeak(v21);
  objc_destroyWeak(v20);
  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  objc_destroyWeak(&a19);
  objc_destroyWeak((id *)(v22 - 72));
  _Unwind_Resume(a1);
}

void sub_22FEC076C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22FEC099C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22FEC0BA0(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_22FEC19A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location)
{
  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22FEC249C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  va_start(va, a17);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_22FEC32D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,id location,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,char a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,char a57,uint64_t a58,uint64_t a59,uint64_t a60,id a61)
{
  objc_destroyWeak(v61);
  objc_destroyWeak(&location);
  _Block_object_dispose(&a51, 8);
  _Block_object_dispose(&a57, 8);
  _Unwind_Resume(a1);
}

void sub_22FEC68C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22FEC77A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
}

void sub_22FEC79FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
}

void sub_22FECA834(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void __documentationMaxSize_block_invoke()
{
  uint64_t v0 = (void *)MEMORY[0x263F42608];
  id v1 = [NSNumber numberWithUnsignedInteger:0x200000];
  [v0 setDefaultValue:v1 forPreferenceKey:@"firmwareUpdateDocumentationMaxSize"];
}

void sub_22FECBEEC(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 24));
  _Unwind_Resume(a1);
}

void sub_22FECC138(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 24));
  _Unwind_Resume(a1);
}

void sub_22FECCAC4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void sub_22FECCBF8(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_22FECD014(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 24));
  _Unwind_Resume(a1);
}

void sub_22FECD600(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 24));
  _Unwind_Resume(a1);
}

void sub_22FECF130(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

uint64_t minimumApplyDurationAllowance()
{
  uint64_t v0 = [MEMORY[0x263F42608] sharedPreferences];
  uint64_t v1 = [v0 preferenceForKey:@"firmwareUpdateMinimumApplyDurationAllowance"];
  id v2 = [v1 numberValue];
  uint64_t v3 = [v2 unsignedIntValue];

  return v3;
}

void sub_22FECF544(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_22FECF658(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_22FED1DBC(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 56));
  _Unwind_Resume(a1);
}

void __maxSocketIdleDuration_block_invoke()
{
  uint64_t v0 = (void *)MEMORY[0x263F42608];
  id v1 = [NSNumber numberWithUnsignedInteger:60];
  [v0 setDefaultValue:v1 forPreferenceKey:@"firmwareUpdateMaxSocketIdleDuration"];
}

void sub_22FED3BF0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
}

void sub_22FED9BF8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, id a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22FED9FCC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location, id a17)
{
  objc_destroyWeak(v18);
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  objc_destroyWeak(&a17);
  _Unwind_Resume(a1);
}

void sub_22FEDC450(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22FEDC70C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22FEE050C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22FEE0FA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  _Block_object_dispose(&a19, 8);
  _Block_object_dispose(&a23, 8);
  _Block_object_dispose(&a27, 8);
  _Block_object_dispose((const void *)(v27 - 160), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__180782(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__180783(uint64_t a1)
{
}

void sub_22FEE198C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location)
{
  objc_destroyWeak(v22);
  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22FEE2AD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_22FEE30C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location)
{
  objc_destroyWeak(v22);
  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22FEE5474(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
  os_unfair_lock_unlock(v26);
  _Block_object_dispose(&a26, 8);
  _Block_object_dispose((const void *)(v27 - 136), 8);
  _Unwind_Resume(a1);
}

void sub_22FEE5A50(_Unwind_Exception *exception_object)
{
}

void sub_22FEE684C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, os_unfair_lock_t lock)
{
}

void sub_22FEE6978(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FEE7090(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  _Block_object_dispose(&a29, 8);
  os_unfair_lock_unlock(v29);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__181071(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__181072(uint64_t a1)
{
}

void sub_22FEE742C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FEE8548(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_22FEE9148(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FEE9510(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FEE95D0(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FEE97DC(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FEEA024(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_22FEECCF0(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_22FEED65C(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_22FEEF8C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_22FEF11E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__181989(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__181990(uint64_t a1)
{
}

void sub_22FEF30F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22FEF4D5C(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_22FEF4E1C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_22FEF6654(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_22FEF9254(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22FEF9AE0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22FEF9FF0(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

__CFString *HMDNetworkRouterSupportAsString(unint64_t a1)
{
  uint64_t v2 = [MEMORY[0x263EFF980] arrayWithCapacity:3];
  uint64_t v3 = v2;
  unint64_t v4 = a1;
  if (a1)
  {
    [v2 addObject:@"Home Protection Mode Update"];
    unint64_t v4 = a1 & 0xFFFFFFFFFFFFFFFELL;
    if ((a1 & 2) == 0)
    {
LABEL_3:
      if ((a1 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_10;
    }
  }
  else if ((a1 & 2) == 0)
  {
    goto LABEL_3;
  }
  [v3 addObject:@"Accessory Protection Mode Update"];
  v4 &= ~2uLL;
  if ((a1 & 4) == 0)
  {
LABEL_4:
    if ((a1 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_10:
  [v3 addObject:@"Add Network Router"];
  v4 &= ~4uLL;
  if ((a1 & 8) != 0)
  {
LABEL_5:
    [v3 addObject:@"WiFi Unique PreShared Key"];
    v4 &= ~8uLL;
  }
LABEL_6:
  if ([v3 count])
  {
    id v5 = [v3 componentsJoinedByString:@","];
  }
  else
  {
    id v6 = @"Unknown";
    if (!v4) {
      id v6 = @"Disabled";
    }
    id v5 = v6;
  }
  id v7 = v5;

  return v7;
}

void sub_22FF00EF0(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FF00F6C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FF0121C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

HMDNetworkRouterAccessViolationControl *accessViolationControlWithType(uint64_t a1)
{
  uint64_t v1 = [[HMDNetworkRouterAccessViolationControlOperation alloc] initWithOperation:a1];
  uint64_t v2 = [[HMDNetworkRouterAccessViolationControl alloc] initWithOperation:v1 clientIdentifierList:0];

  return v2;
}

HMDNetworkRouterClientControl *clientControlWithOperationType(uint64_t a1)
{
  uint64_t v1 = [[HMDNetworkRouterControlOperation alloc] initWithOperation:a1];
  uint64_t v2 = objc_alloc_init(HMDNetworkRouterClientConfiguration);
  uint64_t v3 = [[HMDNetworkRouterClientControlOperation alloc] initWithOperation:v1 configuration:v2];

  unint64_t v4 = [MEMORY[0x263EFF980] arrayWithObject:v3];
  id v5 = [[HMDNetworkRouterClientControl alloc] initWithOperations:v4];

  return v5;
}

void sub_22FF13E04(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 176), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__184894(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__184895(uint64_t a1)
{
}

void sub_22FF1A674(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__185465(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__185466(uint64_t a1)
{
}

void sub_22FF1B854(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 176), 8);
  _Unwind_Resume(a1);
}

void sub_22FF207E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__185850(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__185851(uint64_t a1)
{
}

uint64_t isRecordingAllowedForSettings(void *a1)
{
  id v1 = a1;
  [v1 accessModeAtHome];
  if (HMIsRecordingAllowedForCameraAccessMode())
  {
    uint64_t v2 = 1;
  }
  else
  {
    [v1 accessModeNotAtHome];
    uint64_t v2 = HMIsRecordingAllowedForCameraAccessMode();
  }

  return v2;
}

void sub_22FF2434C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_22FF24A50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
}

uint64_t isAttributeIncludedInResidentSync(void *a1)
{
  id v1 = [a1 userInfo];
  uint64_t v2 = [v1 objectForKeyedSubscript:@"residentSyncInclude"];
  uint64_t v3 = v2;
  if (v2) {
    uint64_t v4 = [v2 BOOLValue];
  }
  else {
    uint64_t v4 = 1;
  }

  return v4;
}

uint64_t isRelationshipIncludedInResidentSync(void *a1)
{
  id v1 = [a1 userInfo];
  uint64_t v2 = [v1 objectForKeyedSubscript:@"residentSyncInclude"];
  uint64_t v3 = [v2 BOOLValue];

  return v3;
}

void sub_22FF295E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,char a28)
{
  _Block_object_dispose(&a28, 8);
  _Block_object_dispose((const void *)(v28 - 160), 8);
  _Unwind_Resume(a1);
}

void sub_22FF2A5AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22FF2A7E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22FF2AA14(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id __destinationForAccountHandle(uint64_t a1, void *a2)
{
  uint64_t v4 = 0;
  if (a1 && a2)
  {
    uint64_t v4 = [a2 remoteDestinationString];
    uint64_t v2 = vars8;
  }
  return v4;
}

void sub_22FF2D3A0(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 184), 8);
  _Unwind_Resume(a1);
}

void sub_22FF2F620(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__187155(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__187156(uint64_t a1)
{
}

void sub_22FF2F828(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_22FF31934(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,char a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,char a51)
{
  _Block_object_dispose(&a38, 8);
  _Block_object_dispose((const void *)(v51 - 224), 8);
  _Block_object_dispose(&a51, 8);
  _Block_object_dispose((const void *)(v51 - 176), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__187312(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__187313(uint64_t a1)
{
}

void sub_22FF3514C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_22FF398C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_22FF39B00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_22FF3A180(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

__CFString *HMDUserConfirmationResponseAsString(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) >= 4)
  {
    objc_msgSend(NSString, "stringWithFormat:", @"Unknown HMDUserConfirmationResponse %tu", a1);
    uint64_t v1 = (__CFString *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    uint64_t v1 = off_264A24FE8[a1 - 1];
  }
  return v1;
}

void sub_22FF3F144(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22FF3FB80(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id actionSetFromObject(void *a1)
{
  id v1 = a1;
  uint64_t v2 = [v1 objectForKeyedSubscript:@"objectReference"];
  uint64_t v3 = objc_msgSend(v1, "hmf_stringForKey:", @"objectType");

  if ([v3 isEqualToString:@"SCENE"]
    && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0))
  {
    id v4 = v2;
  }
  else
  {
    id v4 = 0;
  }

  return v4;
}

id valueWithAssistantUnits(void *a1, void *a2, void *a3, void *a4, unsigned int a5, int a6)
{
  id v49 = a4;
  id v10 = a3;
  id v11 = a2;
  id v12 = a1;
  uint64_t v51 = +[HMDHAPMetadata getSharedInstance];
  id v13 = v12;
  id v14 = v10;
  id v15 = v11;
  id v16 = +[HMDHAPMetadata getSharedInstance];
  uint64_t v17 = [v16 characteristicValueUnit:v15];

  if (v17) {
    uint64_t v18 = v17;
  }
  else {
    uint64_t v18 = v13;
  }
  id v19 = v18;
  char v20 = [v16 supportsLocalization:v14];

  if (v20)
  {
    int v21 = a6;
    id v22 = v17;
    __int16 v23 = (void *)*MEMORY[0x263F0BE80];
    char v24 = [v22 isEqualToString:*MEMORY[0x263F0BE80]];
    __int16 v25 = (void *)*MEMORY[0x263F0BE98];
    if ((v24 & 1) != 0 || (int v26 = [v22 isEqualToString:*MEMORY[0x263F0BE98]], v27 = v22, v26))
    {
      if (v21) {
        uint64_t v27 = v23;
      }
      else {
        uint64_t v27 = v25;
      }
    }
    id v28 = v27;

    if (!v13 || (v29 = [v13 isEqualToString:v28], long long v30 = v13, v29)) {
      long long v30 = v28;
    }
    id v31 = v30;

    id v19 = v31;
  }
  else
  {
    __int16 v23 = (void *)*MEMORY[0x263F0BE80];
    __int16 v25 = (void *)*MEMORY[0x263F0BE98];
  }

  id v32 = [v51 characteristicValueUnit:v15];

  id v33 = v49;
  id v34 = v32;
  id v35 = v19;
  id v36 = v33;
  if ([v34 isEqualToString:v23])
  {
    int v37 = v36;
    if (![v35 isEqualToString:v25]) {
      goto LABEL_22;
    }
    [v36 floatValue];
    uint64_t v38 = NSNumber;
    *(float *)&double v39 = (float)(*(float *)&v39 * 1.8) + 32.0;
    goto LABEL_21;
  }
  int v37 = v36;
  if ([v34 isEqualToString:v25])
  {
    int v37 = v36;
    if ([v35 isEqualToString:v23])
    {
      [v36 floatValue];
      uint64_t v38 = NSNumber;
      *(float *)&double v39 = (float)((float)(*(float *)&v39 + -32.0) * 5.0) / 9.0;
LABEL_21:
      int v37 = [v38 numberWithFloat:v39];
    }
  }
LABEL_22:

  uint64_t v40 = [v51 mapToAssistantCharacteristicValue:v37 name:v14 getActionType:a5];

  id v41 = [v51 mapToAssistantUnitName:v35];
  id v42 = [v51 mapCharacteristicValueType:v14];

  id v43 = v40;
  id v44 = v42;
  id v45 = v41;
  if ([v44 isEqualToString:*MEMORY[0x263F0BE38]])
  {
    id v46 = objc_alloc_init(MEMORY[0x263F64920]);
    objc_msgSend(v46, "setValue:", objc_msgSend(v43, "BOOLValue"));
  }
  else if (([v44 isEqualToString:*MEMORY[0x263F0BE48]] & 1) != 0 {
         || ([v44 isEqualToString:*MEMORY[0x263F0BE70]] & 1) != 0
  }
         || ([v44 isEqualToString:*MEMORY[0x263F0BE58]] & 1) != 0
         || ([v44 isEqualToString:*MEMORY[0x263F0BE60]] & 1) != 0
         || [v44 isEqualToString:*MEMORY[0x263F0BE68]])
  {
    id v46 = objc_alloc_init(MEMORY[0x263F64950]);
    objc_msgSend(v46, "setValue:", objc_msgSend(v43, "integerValue"));
  }
  else if ([v44 isEqualToString:*MEMORY[0x263F0BE40]])
  {
    id v46 = objc_alloc_init(MEMORY[0x263F64940]);
    [v43 floatValue];
    objc_msgSend(v46, "setValue:");
  }
  else if ([v44 isEqualToString:*MEMORY[0x263F0BE50]])
  {
    id v46 = objc_alloc_init(MEMORY[0x263F64968]);
    id v48 = (void *)[v43 copy];
    [v46 setValue:v48];
  }
  else
  {
    id v46 = 0;
  }
  [v46 setUnits:v45];

  return v46;
}

HMDAssistantCharacteristicTuple *getTupleForCharacteristic(void *a1, void *a2, int a3)
{
  id v5 = a2;
  id v6 = a1;
  id v7 = +[HMDHAPMetadata getSharedInstance];
  double v8 = [v6 characteristicType];

  id v9 = [v7 mapToAssistantCharacteristicName:v8];
  uint64_t v10 = [v7 mapCharacteristicValueType:v9];
  id v11 = (void *)v10;
  if (v9) {
    BOOL v12 = v10 == 0;
  }
  else {
    BOOL v12 = 1;
  }
  if (v12)
  {
    id v14 = 0;
  }
  else
  {
    id v13 = valueWithAssistantUnits(0, v8, v9, v5, 1u, a3);
    id v14 = [[HMDAssistantCharacteristicTuple alloc] initWithAttribute:v9 value:v13];
  }
  return v14;
}

void __isMetricLocale_block_invoke()
{
  id v1 = [MEMORY[0x263EFF960] currentLocale];
  uint64_t v0 = [v1 objectForKey:*MEMORY[0x263EFF560]];
  isMetricLocale_isMetricLocale = [v0 BOOLValue];
}

uint64_t applyGuardTime()
{
  if (applyGuardTime_onceToken != -1) {
    dispatch_once(&applyGuardTime_onceToken, &__block_literal_global_77_189202);
  }
  uint64_t v0 = [MEMORY[0x263F42608] sharedPreferences];
  id v1 = [v0 preferenceForKey:@"firmwareUpdateApplyGuardTime"];
  uint64_t v2 = [v1 numberValue];

  uint64_t v3 = [v2 unsignedIntValue];
  return v3;
}

uint64_t __applyGuardTime_block_invoke()
{
  return [MEMORY[0x263F42608] setDefaultValue:&unk_26E472850 forPreferenceKey:@"firmwareUpdateApplyGuardTime"];
}

void sub_22FF448A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22FF44F30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va1, a9);
  va_start(va, a9);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  uint64_t v16 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__190227(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__190228(uint64_t a1)
{
}

void sub_22FF45540(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va1, a11);
  va_start(va, a11);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  uint64_t v16 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

void sub_22FF45F48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  va_start(va, a17);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t _approximateSizeOfPlistValue(const __CFString *a1, void *a2, CFIndex *a3)
{
  if (!a1) {
    return 0;
  }
  CFTypeID v6 = CFGetTypeID(a1);
  uint64_t v23 = 0;
  char v24 = &v23;
  uint64_t v25 = 0x2020000000;
  uint64_t v26 = 0;
  switch(v6)
  {
    case 7uLL:
      CFIndex Length = CFStringGetLength(a1);
      CFIndex usedBufLen = 0;
      v27.id location = 0;
      v27.length = Length;
      if (CFStringGetBytes(a1, v27, 0x600u, 0, 0, 0, 0, &usedBufLen)) {
        BOOL v8 = usedBufLen == Length;
      }
      else {
        BOOL v8 = 0;
      }
      char v9 = !v8;
      CFIndex v10 = Length << v9;
      v24[3] = v10;
      if (a2)
      {
        CFStringRef v11 = CFStringCreateWithFormat((CFAllocatorRef)*MEMORY[0x263EFFB30], 0, @"string value, approximate encoded size: %ld", v10);
        goto LABEL_25;
      }
      break;
    case 8uLL:
    case 9uLL:
    case 0xAuLL:
    case 0xBuLL:
    case 0xCuLL:
    case 0xDuLL:
    case 0xEuLL:
    case 0xFuLL:
    case 0x11uLL:
      break;
    case 0x10uLL:
      if (a2)
      {
        uint64_t v13 = @"deleted value";
        goto LABEL_30;
      }
      break;
    case 0x12uLL:
      CFIndex usedBufLen = 0;
      CFDictionaryApplyBlock();
      if (a2)
      {
        CFIndex Count = CFDictionaryGetCount((CFDictionaryRef)a1);
        CFStringRef v11 = CFStringCreateWithFormat((CFAllocatorRef)*MEMORY[0x263EFFB30], 0, @"dictionary value, count: %ld, total nested objects: %ld, approximate encoded size: %ld", Count, usedBufLen, v24[3]);
        goto LABEL_25;
      }
      break;
    case 0x13uLL:
      CFIndex usedBufLen = 0;
      CFArrayGetCount((CFArrayRef)a1);
      p_CFIndex usedBufLen = &usedBufLen;
      if (a3) {
        p_CFIndex usedBufLen = a3;
      }
      uint64_t v20 = MEMORY[0x263EF8330];
      int v21 = p_usedBufLen;
      CFArrayApplyBlock();
      if (a2)
      {
        CFIndex v16 = CFArrayGetCount((CFArrayRef)a1);
        CFStringRef v11 = CFStringCreateWithFormat((CFAllocatorRef)*MEMORY[0x263EFFB30], 0, @"array value, count: %ld, tested nested objects: %ld, approximate encoded size: %ld", v16, usedBufLen, v24[3], v20, 3221225472, ___approximateSizeOfPlistValue_block_invoke_2, &unk_264A25140, &v23, v21);
        goto LABEL_25;
      }
      break;
    case 0x14uLL:
      CFIndex v17 = CFDataGetLength((CFDataRef)a1);
      v24[3] = v17;
      if (a2)
      {
        CFStringRef v11 = CFStringCreateWithFormat((CFAllocatorRef)*MEMORY[0x263EFFB30], 0, @"data value, size: %ld", v17);
LABEL_25:
        *a2 = v11;
      }
      break;
    case 0x15uLL:
      uint64_t v26 = 1;
      if (a2)
      {
        uint64_t v13 = @"BOOLean value";
        goto LABEL_30;
      }
      break;
    case 0x16uLL:
      CFIndex ByteSize = CFNumberGetByteSize((CFNumberRef)a1);
      v24[3] = ByteSize;
      if (a2)
      {
        uint64_t v13 = @"number value";
        goto LABEL_30;
      }
      break;
    default:
      if (v6 == 42)
      {
        uint64_t v26 = 8;
        if (a2)
        {
          uint64_t v13 = @"date value";
LABEL_30:
          *a2 = v13;
        }
      }
      break;
  }
  if (a3) {
    ++*a3;
  }
  uint64_t v12 = v24[3];
  _Block_object_dispose(&v23, 8);
  return v12;
}

void sub_22FF46790(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 64), 8);
  _Unwind_Resume(a1);
}

uint64_t ___approximateSizeOfPlistValue_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = _approximateSizeOfPlistValue(a2, 0, *(void *)(a1 + 40));
  uint64_t result = _approximateSizeOfPlistValue(a3, 0, *(void *)(a1 + 40));
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) += result + v5;
  return result;
}

uint64_t ___approximateSizeOfPlistValue_block_invoke_2(uint64_t a1, uint64_t a2)
{
  uint64_t result = _approximateSizeOfPlistValue(a2, 0, *(void *)(a1 + 40));
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) += result;
  return result;
}

void sub_22FF471D4(_Unwind_Exception *a1)
{
}

void sub_22FF47308(_Unwind_Exception *a1)
{
}

void sub_22FF473A0(_Unwind_Exception *a1)
{
}

void sub_22FF47A20(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location, id a18, id a19)
{
  objc_destroyWeak(v21);
  objc_destroyWeak(v20);
  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  objc_destroyWeak(&a18);
  objc_destroyWeak(&a19);
  _Unwind_Resume(a1);
}

void sub_22FF49280(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FF495BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, os_unfair_lock_t lock)
{
}

void sub_22FF49CD4(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FF4A094(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FF4A31C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void logAndPostNotification(void *a1, void *a2, void *a3)
{
  uint64_t v5 = (void *)MEMORY[0x263F08A00];
  id v6 = a3;
  id v7 = a2;
  id v8 = a1;
  id v9 = [v5 defaultCenter];
  logAndPostNotificationWithNotificationCenter(v9, v8, v7, v6);
}

void logAndPostNotificationWithNotificationCenter(void *a1, void *a2, void *a3, void *a4)
{
  uint64_t v26 = *MEMORY[0x263EF8340];
  id v7 = a1;
  id v8 = a2;
  id v9 = a3;
  id v10 = a4;
  CFStringRef v11 = [v9 description];
  uint64_t v12 = (void *)MEMORY[0x230FBD990]();
  uint64_t v13 = HMFGetOSLogHandle();
  if (os_log_type_enabled(v13, OS_LOG_TYPE_INFO))
  {
    uint64_t v14 = HMFGetLogIdentifier();
    int v18 = 138543874;
    id v19 = v14;
    __int16 v20 = 2112;
    id v21 = v8;
    __int16 v22 = 2112;
    uint64_t v23 = v11;
    _os_log_impl(&dword_22F52A000, v13, OS_LOG_TYPE_INFO, "%{public}@Sending notification %@ with object %@", (uint8_t *)&v18, 0x20u);
  }
  uint64_t v15 = (void *)MEMORY[0x230FBD990]();
  CFIndex v16 = HMFGetOSLogHandle();
  if (os_log_type_enabled(v16, OS_LOG_TYPE_DEBUG))
  {
    CFIndex v17 = HMFGetLogIdentifier();
    int v18 = 138544130;
    id v19 = v17;
    __int16 v20 = 2112;
    id v21 = v8;
    __int16 v22 = 2112;
    uint64_t v23 = v11;
    __int16 v24 = 2112;
    id v25 = v10;
    _os_log_impl(&dword_22F52A000, v16, OS_LOG_TYPE_DEBUG, "%{public}@Sending notification %@ with object %@ and userInfo %@", (uint8_t *)&v18, 0x2Au);
  }
  [v7 postNotificationName:v8 object:v9 userInfo:v10];
}

void sub_22FF531A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_22FF538BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
}

void sub_22FF53F04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_22FF55990(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v13 - 80), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__192327(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__192328(uint64_t a1)
{
}

void sub_22FF55D50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v11 - 80), 8);
  _Unwind_Resume(a1);
}

void sub_22FF55FF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v13 - 80), 8);
  _Unwind_Resume(a1);
}

id __descriptionsForRecordIDArray(void *a1)
{
  uint64_t v1 = objc_msgSend(a1, "na_map:", &__block_literal_global_436_192342);
  uint64_t v2 = (void *)[v1 copy];

  return v2;
}

uint64_t ____descriptionsForRecordIDArray_block_invoke(uint64_t a1, void *a2)
{
  return [a2 hmbDescription];
}

void sub_22FF5645C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v11 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_22FF5683C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va1, a11);
  va_start(va, a11);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  uint64_t v16 = va_arg(va1, void);
  uint64_t v17 = va_arg(va1, void);
  uint64_t v18 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

id __descriptionsForRecordIDSet(void *a1)
{
  uint64_t v1 = objc_msgSend(a1, "na_map:", &__block_literal_global_434);
  uint64_t v2 = (void *)[v1 copy];

  return v2;
}

uint64_t ____descriptionsForRecordIDSet_block_invoke(uint64_t a1, void *a2)
{
  return [a2 hmbDescription];
}

void sub_22FF56CB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v11 - 80), 8);
  _Unwind_Resume(a1);
}

void sub_22FF571B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v11 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_22FF57664(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va1, a11);
  va_start(va, a11);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  uint64_t v16 = va_arg(va1, void);
  uint64_t v17 = va_arg(va1, void);
  uint64_t v18 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

void sub_22FF58F18(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FF596A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_22FF599FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_22FF5A25C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_22FF5A724(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_22FF5A868(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_22FF5A954(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_22FF62FEC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22FF6338C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_22FF63CE8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22FF642CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22FF6553C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void __removeHomeState(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  uint64_t v12 = 0;
  uint64_t v13 = &v12;
  uint64_t v14 = 0x2020000000;
  uint64_t v15 = 0x7FFFFFFFFFFFFFFFLL;
  uint64_t v6 = MEMORY[0x263EF8330];
  uint64_t v7 = 3221225472;
  id v8 = ____removeHomeState_block_invoke;
  id v9 = &unk_264A25608;
  id v5 = v4;
  id v10 = v5;
  uint64_t v11 = &v12;
  objc_msgSend(v3, "hmf_enumerateWithAutoreleasePoolUsingBlock:", &v6);
  if (v13[3] != 0x7FFFFFFFFFFFFFFFLL) {
    objc_msgSend(v3, "removeObjectAtIndex:", v6, v7, v8, v9);
  }

  _Block_object_dispose(&v12, 8);
}

void sub_22FF66B88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void ____removeHomeState_block_invoke(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  uint64_t v7 = [a2 accessory];
  id v8 = [v7 uuid];
  int v9 = [v8 isEqual:*(void *)(a1 + 32)];

  if (v9)
  {
    *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = a3;
    *a4 = 1;
  }
}

void sub_22FF67028(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__193455(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__193456(uint64_t a1)
{
}

void sub_22FF68648(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__193634(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__193635(uint64_t a1)
{
}

void sub_22FF689CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_22FF68CE4(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_22FF68EBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_22FF696D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  va_start(va, a17);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_22FF6A96C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_22FF6B048(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_22FF6C02C(_Unwind_Exception *a1)
{
}

void sub_22FF6C234(_Unwind_Exception *a1)
{
}

id __sendMessageWithFutureResult(void *a1, void *a2, void *a3, void *a4)
{
  id v7 = a1;
  id v30 = 0;
  id v8 = (void *)MEMORY[0x263F42538];
  id v9 = a4;
  id v10 = a3;
  id v11 = a2;
  uint64_t v12 = [v8 futureWithPromise:&v30];
  uint64_t v13 = [v7 state];
  uint64_t v14 = [v13 device];
  uint64_t v15 = v14;
  if (v14)
  {
    id v16 = v14;
  }
  else
  {
    [v7 dataSource];
    uint64_t v17 = v26 = v12;
    uint64_t v18 = [v7 state];
    id v19 = [v18 deviceIdentifier];
    id v16 = [v17 deviceForIdentifier:v19];

    uint64_t v12 = v26;
  }

  __int16 v20 = [[HMDRemoteDeviceMessageDestination alloc] initWithTarget:v11 device:v16];
  id v21 = +[HMDRemoteMessage secureMessageWithName:v10 qualityOfService:-1 destination:v20 messagePayload:v9 restriction:17];

  v27[0] = MEMORY[0x263EF8330];
  v27[1] = 3221225472;
  v27[2] = ____sendMessageWithFutureResult_block_invoke;
  v27[3] = &unk_264A2D870;
  id v28 = v7;
  id v29 = v30;
  id v22 = v7;
  [v21 setResponseHandler:v27];
  uint64_t v23 = [v22 homeManager];
  __int16 v24 = [v23 messageDispatcher];
  [v24 sendMessage:v21];

  return v12;
}

void ____sendMessageWithFutureResult_block_invoke(uint64_t a1, void *a2, void *a3)
{
  uint64_t v17 = *MEMORY[0x263EF8340];
  id v5 = a2;
  id v6 = a3;
  id v7 = (void *)MEMORY[0x230FBD990]();
  id v8 = *(id *)(a1 + 32);
  id v9 = HMFGetOSLogHandle();
  BOOL v10 = os_log_type_enabled(v9, OS_LOG_TYPE_ERROR);
  if (v5)
  {
    if (v10)
    {
      id v11 = HMFGetLogIdentifier();
      int v13 = 138543618;
      uint64_t v14 = v11;
      __int16 v15 = 2112;
      id v16 = v5;
      _os_log_impl(&dword_22F52A000, v9, OS_LOG_TYPE_ERROR, "%{public}@Message failed: %@", (uint8_t *)&v13, 0x16u);
    }
    [*(id *)(a1 + 40) rejectWithError:v5];
  }
  else
  {
    if (v10)
    {
      uint64_t v12 = HMFGetLogIdentifier();
      int v13 = 138543618;
      uint64_t v14 = v12;
      __int16 v15 = 2112;
      id v16 = v6;
      _os_log_impl(&dword_22F52A000, v9, OS_LOG_TYPE_ERROR, "%{public}@Message completed with result: %@", (uint8_t *)&v13, 0x16u);
    }
    [*(id *)(a1 + 40) fulfillWithValue:v6];
  }
}

void sub_22FF74898(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FF74FFC(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FF75960(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FF77228(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22FF773CC(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FF778B0(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FF77FA4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, os_unfair_lock_t lock)
{
}

void sub_22FF79430(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id randomStringWithLength(uint64_t a1)
{
  uint64_t v1 = a1;
  for (uint64_t i = [MEMORY[0x263F089D8] stringWithCapacity:a1];
    objc_msgSend(i, "appendFormat:", @"%c", randomStringWithLength_characters[arc4random_uniform(0x5Cu)]);
  return i;
}

void sub_22FF79CD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  _Block_object_dispose(&a20, 8);
  _Block_object_dispose(&a30, 8);
  _Block_object_dispose((const void *)(v30 - 136), 8);
  _Unwind_Resume(a1);
}

void sub_22FF7A100(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_22FF7C224(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FF7C2AC(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FF7C418(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FF7D0AC(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FF7D4E8(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FF7D5D4(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FF7D6C0(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FF7D7AC(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FF7D898(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FF7DBD0(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FF7DD74(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FF7E030(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FF7E2A4(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FF7F59C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FF80CBC(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

uint64_t HMDRemoteEventRouterProtoConnectMessageReadFrom(uint64_t a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x263F62298];
  id v4 = (int *)MEMORY[0x263F62288];
  id v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) >= *(void *)(a2 + (int)*MEMORY[0x263F62288])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  id v7 = (int *)MEMORY[0x263F62268];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v14 = v9++ >= 9;
      if (v14)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 2u:
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        *(unsigned char *)(a1 + 48) |= 1u;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_40;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            LODWORD(v19) = 0;
            goto LABEL_42;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_40:
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_42:
        *(_DWORD *)(a1 + 16) = v19;
        goto LABEL_43;
      case 3u:
        __int16 v24 = (HMDRemoteEventRouterProtoTopic *)objc_alloc_init(MEMORY[0x263F493C0]);
        uint64_t v25 = 8;
        goto LABEL_30;
      case 4u:
        __int16 v24 = (HMDRemoteEventRouterProtoTopic *)objc_alloc_init(MEMORY[0x263F493C0]);
        uint64_t v25 = 40;
LABEL_30:
        objc_storeStrong((id *)(a1 + v25), v24);
        if (!PBReaderPlaceMark() || (HMEProtoEventInfoReadFrom() & 1) == 0) {
          goto LABEL_45;
        }
        goto LABEL_37;
      case 5u:
        PBReaderReadString();
        __int16 v24 = (HMDRemoteEventRouterProtoTopic *)objc_claimAutoreleasedReturnValue();
        if (v24) {
          [(id)a1 addTopicFilterAdditions:v24];
        }
        goto LABEL_38;
      case 6u:
        __int16 v24 = objc_alloc_init(HMDRemoteEventRouterProtoTopic);
        [(id)a1 addTopicAdditions:v24];
        if (PBReaderPlaceMark() && HMDRemoteEventRouterProtoTopicReadFrom((uint64_t)v24, a2))
        {
LABEL_37:
          PBReaderRecallMark();
LABEL_38:

LABEL_43:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_45:

        return 0;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_43;
    }
  }
}

__CFString *HMDCameraRecordingVideoCodecTypeAsString(uint64_t a1)
{
  if (a1)
  {
    if (a1 == 1)
    {
      uint64_t v2 = @"HMDCameraRecordingVideoCodecTypeH265";
    }
    else
    {
      objc_msgSend(NSString, "stringWithFormat:", @"Unknown HMDCameraRecordingVideoCodecType %ld", a1);
      uint64_t v2 = (__CFString *)objc_claimAutoreleasedReturnValue();
    }
  }
  else
  {
    uint64_t v2 = @"HMDCameraRecordingVideoCodecTypeH264";
  }
  return v2;
}

__CFString *HMDCameraRecordingH264ProfileTypeAsString(unint64_t a1)
{
  if (a1 >= 3)
  {
    objc_msgSend(NSString, "stringWithFormat:", @"Unknown HMDCameraRecordingH264ProfileType %ld", a1);
    uint64_t v1 = (__CFString *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    uint64_t v1 = off_264A25B40[a1];
  }
  return v1;
}

__CFString *HMDCameraRecordingH264LevelTypeAsString(unint64_t a1)
{
  if (a1 >= 4)
  {
    objc_msgSend(NSString, "stringWithFormat:", @"Unknown HMDCameraRecordingH264LevelType %ld", a1);
    uint64_t v1 = (__CFString *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    uint64_t v1 = off_264A25B58[a1];
  }
  return v1;
}

void translateResolutionWidthHeight(void *a1, void *a2, uint64_t *a3)
{
  id v7 = a1;
  id v5 = a2;
  if ([v7 isEqualToNumber:&unk_26E472910]
    && ([v5 isEqualToNumber:&unk_26E472928] & 1) != 0)
  {
    uint64_t v6 = 1;
  }
  else if ([v7 isEqualToNumber:&unk_26E472940] {
         && ([v5 isEqualToNumber:&unk_26E472958] & 1) != 0)
  }
  {
    uint64_t v6 = 2;
  }
  else if ([v7 isEqualToNumber:&unk_26E472970] {
         && ([v5 isEqualToNumber:&unk_26E472988] & 1) != 0)
  }
  {
    uint64_t v6 = 3;
  }
  else if ([v7 isEqualToNumber:&unk_26E4729A0] {
         && ([v5 isEqualToNumber:&unk_26E4729B8] & 1) != 0)
  }
  {
    uint64_t v6 = 4;
  }
  else if ([v7 isEqualToNumber:&unk_26E472910] {
         && ([v5 isEqualToNumber:&unk_26E4729D0] & 1) != 0)
  }
  {
    uint64_t v6 = 5;
  }
  else if ([v7 isEqualToNumber:&unk_26E472970] {
         && ([v5 isEqualToNumber:&unk_26E4729E8] & 1) != 0)
  }
  {
    uint64_t v6 = 6;
  }
  else if ([v7 isEqualToNumber:&unk_26E472A00] {
         && ([v5 isEqualToNumber:&unk_26E472A18] & 1) != 0)
  }
  {
    uint64_t v6 = 7;
  }
  else if ([v7 isEqualToNumber:&unk_26E472A30] {
         && ([v5 isEqualToNumber:&unk_26E472A48] & 1) != 0)
  }
  {
    uint64_t v6 = 8;
  }
  else if ([v7 isEqualToNumber:&unk_26E4729E8] {
         && ([v5 isEqualToNumber:&unk_26E472970] & 1) != 0)
  }
  {
    uint64_t v6 = 9;
  }
  else if ([v7 isEqualToNumber:&unk_26E472A18] {
         && ([v5 isEqualToNumber:&unk_26E472A00] & 1) != 0)
  }
  {
    uint64_t v6 = 10;
  }
  else if ([v7 isEqualToNumber:&unk_26E472A60] {
         && ([v5 isEqualToNumber:&unk_26E472A78] & 1) != 0)
  }
  {
    uint64_t v6 = 11;
  }
  else if ([v7 isEqualToNumber:&unk_26E472A90] {
         && ([v5 isEqualToNumber:&unk_26E472A18] & 1) != 0)
  }
  {
    uint64_t v6 = 12;
  }
  else if ([v7 isEqualToNumber:&unk_26E472A78] {
         && ([v5 isEqualToNumber:&unk_26E472A60] & 1) != 0)
  }
  {
    uint64_t v6 = 13;
  }
  else if ([v7 isEqualToNumber:&unk_26E472A18] {
         && ([v5 isEqualToNumber:&unk_26E472A90] & 1) != 0)
  }
  {
    uint64_t v6 = 14;
  }
  else if ([v7 isEqualToNumber:&unk_26E472988] {
         && ([v5 isEqualToNumber:&unk_26E472970] & 1) != 0)
  }
  {
    uint64_t v6 = 15;
  }
  else if ([v7 isEqualToNumber:&unk_26E472958] {
         && ([v5 isEqualToNumber:&unk_26E472940] & 1) != 0)
  }
  {
    uint64_t v6 = 16;
  }
  else if ([v7 isEqualToNumber:&unk_26E472A48] {
         && ([v5 isEqualToNumber:&unk_26E472A30] & 1) != 0)
  }
  {
    uint64_t v6 = 17;
  }
  else
  {
    uint64_t v6 = 0;
  }
  *a3 = v6;
}

void sub_22FF87F20(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22FF88A14(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FF88C84(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FF88D8C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

id logDescriptionForAccessory(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    objc_opt_class();
    char isKindOfClass = objc_opt_isKindOfClass();
    if (isKindOfClass) {
      id v3 = v1;
    }
    else {
      id v3 = 0;
    }
    id v4 = v3;
    if (isKindOfClass) {
      [v1 needsAirplayAccess];
    }
    uint64_t v6 = NSString;
    id v7 = [v1 name];
    char v8 = [v1 uuid];
    unsigned int v9 = [v1 identifier];
    unint64_t v10 = HMFBooleanToString();
    uint64_t v11 = HMFBooleanToString();
    id v5 = [v6 stringWithFormat:@"'%@' (%@ / %@, HAP=%@, Airplay=%@)", v7, v8, v9, v10, v11];
  }
  else
  {
    id v5 = 0;
  }

  return v5;
}

void sub_22FF8B7D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id *location)
{
  objc_destroyWeak(location);
  objc_destroyWeak((id *)(v10 - 152));
  _Unwind_Resume(a1);
}

void sub_22FF8BB10(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_22FF8BDA8(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void ContinueRouterOperationOnWorkQueue(void *a1, void *a2, void *a3, void *a4)
{
  id v7 = a1;
  id v8 = a2;
  id v9 = a3;
  id v10 = a4;
  if (v7)
  {
    uint64_t v11 = [v7 workQueue];
    v13[0] = MEMORY[0x263EF8330];
    v13[1] = 3221225472;
    v13[2] = __ContinueRouterOperationOnWorkQueue_block_invoke;
    v13[3] = &unk_264A27658;
    id v14 = v7;
    id v15 = v8;
    id v16 = v9;
    id v17 = v10;
    dispatch_async(v11, v13);
  }
  else
  {
    unint64_t v12 = [MEMORY[0x263F087E8] hmErrorWithCode:23];
    (*((void (**)(id, void *))v9 + 2))(v9, v12);
  }
}

void __ContinueRouterOperationOnWorkQueue_block_invoke(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) networkRouterAccessory];
  id v3 = [v2 uuid];
  char v4 = [v3 isEqual:*(void *)(a1 + 40)];

  if (v4)
  {
    id v5 = *(void (**)(void))(*(void *)(a1 + 56) + 16);
    v5();
  }
  else
  {
    uint64_t v6 = *(void *)(a1 + 48);
    id v7 = [MEMORY[0x263F087E8] hmErrorWithCode:23];
    (*(void (**)(uint64_t, id))(v6 + 16))(v6, v7);
  }
}

void sub_22FF8CB94(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 144));
  _Unwind_Resume(a1);
}

uint64_t credentialTypeForCredential(void *a1)
{
  id v1 = a1;
  uint64_t v2 = [v1 psk];

  if (v2)
  {
    uint64_t v3 = 3;
  }
  else
  {
    char v4 = [v1 macAddress];
    BOOL v5 = v4 != 0;

    uint64_t v3 = 2 * v5;
  }

  return v3;
}

uint64_t getProtectionModeForAccessory(void *a1)
{
  id v1 = a1;
  uint64_t v2 = [v1 home];
  uint64_t v3 = [v2 protectionMode];

  if (v3 && [v1 supportsNetworkProtection]) {
    uint64_t v4 = [v1 targetNetworkProtectionMode];
  }
  else {
    uint64_t v4 = 3;
  }

  return v4;
}

BOOL shouldManageAccessory(void *a1)
{
  id v1 = a1;
  if ([v1 supportsNetworkProtection])
  {
    BOOL v2 = 1;
  }
  else
  {
    uint64_t v3 = [v1 wiFiUniquePreSharedKey];
    if (v3)
    {
      BOOL v2 = 1;
    }
    else
    {
      uint64_t v4 = [v1 networkClientIdentifier];
      BOOL v2 = v4 != 0;
    }
  }

  return v2;
}

void sub_22FF8D900(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location)
{
  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22FF8DAFC(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_22FF8E068(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22FF8E410(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location)
{
  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

HMDNetworkRouterCredential *networkRouterCredentialForAccessory(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  BOOL v5 = objc_alloc_init(HMDNetworkRouterCredential);
  uint64_t v6 = [v3 wiFiUniquePreSharedKey];

  if (v6)
  {
    id v7 = [v3 wiFiUniquePreSharedKey];
    [(HMDNetworkRouterCredential *)v5 setPsk:v7];
  }
  else
  {
    [(HMDNetworkRouterCredential *)v5 setMacAddress:v4];
  }

  return v5;
}

void sub_22FF8F020(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22FF91188(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22FF920A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void __HMDCreateUniquePSKClientConfiguration_block_invoke(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    id v3 = *(void (**)(void))(*(void *)(a1 + 64) + 16);
    v3();
  }
  else
  {
    id v4 = *(void **)(a1 + 32);
    uint64_t v5 = *(void *)(a1 + 40);
    v6[0] = MEMORY[0x263EF8330];
    v6[1] = 3221225472;
    v6[2] = __HMDCreateUniquePSKClientConfiguration_block_invoke_2;
    v6[3] = &unk_264A25D48;
    id v9 = *(id *)(a1 + 64);
    id v7 = *(id *)(a1 + 48);
    id v8 = *(id *)(a1 + 56);
    [v4 addClientConfiguration:v5 completion:v6];
  }
}

void __HMDCreateUniquePSKClientConfiguration_block_invoke_2(uint64_t a1, uint64_t a2, void *a3)
{
  id v8 = a3;
  if (a2)
  {
    (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
  }
  else
  {
    uint64_t v5 = [HMDAccessoryNetworkCredential alloc];
    uint64_t v6 = [*(id *)(a1 + 32) uuid];
    id v7 = [(HMDAccessoryNetworkCredential *)v5 initWithNetworkRouterUUID:v6 clientIdentifier:v8 wiFiPSK:*(void *)(a1 + 40)];

    (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
  }
}

void sub_22FF94460(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FF94528(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FF97430(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id keyFromSelector(const char *a1)
{
  id v1 = NSStringFromSelector(a1);
  if ([v1 hasPrefix:@"set"] && objc_msgSend(v1, "length") != 3)
  {
    BOOL v2 = objc_msgSend(v1, "substringWithRange:", 3, 1);
    id v3 = [v2 lowercaseString];
    int v4 = [v2 isEqualToString:v3];

    if (v4)
    {
      id v5 = v1;

      goto LABEL_7;
    }
    uint64_t v6 = [v2 lowercaseString];
    id v7 = objc_msgSend(v1, "substringWithRange:", 4, objc_msgSend(v1, "length") - 5);
    uint64_t v8 = [v6 stringByAppendingString:v7];

    id v1 = (void *)v8;
  }
  id v5 = v1;
LABEL_7:

  return v5;
}

void setPropertyIMP(void *a1, const char *a2, void *a3)
{
  uint64_t v37 = *MEMORY[0x263EF8340];
  id v5 = a1;
  id v6 = a3;
  id v7 = (void *)MEMORY[0x230FBD990]();
  uint64_t v8 = keyFromSelector(a2);
  if (![v5 propertyIsReadOnly:v8])
  {
    id v14 = [(id)objc_opt_class() properties];
    id v15 = [v14 objectForKey:v8];
    id v16 = (objc_class *)[v15 classObj];

    if (v6 && (objc_opt_isKindOfClass() & 1) == 0)
    {
      unint64_t v21 = (void *)MEMORY[0x263EFF940];
      uint64_t v22 = *MEMORY[0x263EFF498];
      uint64_t v23 = NSString;
      __int16 v24 = (objc_class *)objc_opt_class();
      uint64_t v25 = NSStringFromClass(v24);
      uint64_t v26 = NSStringFromClass(v16);
      CFRange v27 = [v23 stringWithFormat:@"Property for parameter %@ was supplied as %@, but was expected to be %@.", v8, v25, v26];
      id v28 = [v21 exceptionWithName:v22 reason:v27 userInfo:0];

      objc_exception_throw(v28);
    }
    if (v5[1])
    {
      if (v6)
      {
LABEL_9:
        id v17 = (void *)v5[1];
        unsigned int v18 = objc_msgSend(v8, "hmf_stringWithSmallestEncoding");
        [v17 setValue:v6 forKey:v18];

        goto LABEL_10;
      }
    }
    else
    {
      uint64_t v19 = [MEMORY[0x263EFF9A0] dictionary];
      uint64_t v20 = (void *)v5[1];
      v5[1] = v19;

      if (v6) {
        goto LABEL_9;
      }
    }
    id v6 = [MEMORY[0x263EFF9D0] null];
    goto LABEL_9;
  }
  id v9 = (void *)MEMORY[0x230FBD990]();
  id v10 = v5;
  uint64_t v11 = HMFGetOSLogHandle();
  if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
  {
    unint64_t v12 = HMFGetLogIdentifier();
    char v13 = +[HMDBackingStoreSingleton dataVersion];
    *(_DWORD *)long long buf = 138544130;
    uint64_t v30 = v12;
    __int16 v31 = 2112;
    id v32 = v8;
    __int16 v33 = 2112;
    id v34 = v10;
    __int16 v35 = 2112;
    id v36 = v13;
    _os_log_impl(&dword_22F52A000, v11, OS_LOG_TYPE_ERROR, "%{public}@Attempting to write property %@ from %@, unwritable in homed data version %@.", buf, 0x2Au);
  }
LABEL_10:
}

id propertyIMP(void *a1, const char *a2)
{
  uint64_t v28 = *MEMORY[0x263EF8340];
  id v3 = a1;
  int v4 = (void *)MEMORY[0x230FBD990]();
  id v5 = NSStringFromSelector(a2);
  if ([v3 propertyIsAvailable:v5])
  {
    id v6 = [(id)objc_opt_class() properties];
    id v7 = [v6 objectForKey:v5];

    if (v7)
    {
      uint64_t v8 = [v3[1] objectForKey:v5];
      objc_opt_class();
      if ((objc_opt_isKindOfClass() & 1) == 0)
      {
        if (v8)
        {

          goto LABEL_14;
        }
        uint64_t v18 = [v7 defaultValue];
        goto LABEL_13;
      }
    }
    else
    {
      id v14 = (void *)MEMORY[0x230FBD990]();
      id v15 = v3;
      id v16 = HMFGetOSLogHandle();
      if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
      {
        id v17 = HMFGetLogIdentifier();
        int v20 = 138543874;
        unint64_t v21 = v17;
        __int16 v22 = 2112;
        uint64_t v23 = v5;
        __int16 v24 = 2112;
        uint64_t v25 = v15;
        _os_log_impl(&dword_22F52A000, v16, OS_LOG_TYPE_ERROR, "%{public}@Attempting to read property %@ from %@, does not appear defined.", (uint8_t *)&v20, 0x20u);
      }
      uint64_t v8 = 0;
    }
    uint64_t v18 = 0;
LABEL_13:

    uint64_t v8 = (void *)v18;
    goto LABEL_14;
  }
  id v9 = (void *)MEMORY[0x230FBD990]();
  id v10 = v3;
  uint64_t v11 = HMFGetOSLogHandle();
  if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
  {
    unint64_t v12 = HMFGetLogIdentifier();
    char v13 = +[HMDBackingStoreSingleton dataVersion];
    int v20 = 138544130;
    unint64_t v21 = v12;
    __int16 v22 = 2112;
    uint64_t v23 = v5;
    __int16 v24 = 2112;
    uint64_t v25 = v10;
    __int16 v26 = 2112;
    CFRange v27 = v13;
    _os_log_impl(&dword_22F52A000, v11, OS_LOG_TYPE_ERROR, "%{public}@Attempting to read property %@ from %@, unavailable in homed data version %@ (returning nil).", (uint8_t *)&v20, 0x2Au);
  }

  uint64_t v8 = 0;
LABEL_14:

  return v8;
}

void sub_22FFA2A4C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22FFA32B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22FFA3900(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_22FFA3ED4(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 48), 8);
  _Unwind_Resume(a1);
}

__CFString *HMDStructuredDataTokenTypeAsString(uint64_t a1)
{
  if ((unint64_t)(a1 + 2) >= 0xF)
  {
    objc_msgSend(NSString, "stringWithFormat:", @"Unknown (%zd)", a1);
    uint64_t v1 = (__CFString *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    uint64_t v1 = off_264A26298[a1 + 2];
  }
  return v1;
}

void sub_22FFA4D80(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t HMDStructuredDataErrorWithReason(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  id v9 = (objc_class *)NSString;
  id v10 = a1;
  uint64_t v11 = (void *)[[v9 alloc] initWithFormat:v10 arguments:&a9];

  id v12 = [MEMORY[0x263F087E8] hmfErrorWithCode:15 reason:v11];

  return -2;
}

void sub_22FFA7DF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__200854(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__200855(uint64_t a1)
{
}

void sub_22FFAB06C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FFAB444(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, os_unfair_lock_t lock)
{
}

void sub_22FFAE038(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FFB0304(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_22FFB09E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__202700(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__202701(uint64_t a1)
{
}

void sub_22FFB2284(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FFB2364(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FFB27B8(_Unwind_Exception *a1)
{
  objc_destroyWeak(v5);
  objc_destroyWeak(v4);
  objc_destroyWeak(v3);
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v6 - 144));
  _Unwind_Resume(a1);
}

void sub_22FFB2900(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_22FFB2A20(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_22FFB2B50(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_22FFB2CBC(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_22FFB2DB4(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_22FFB3690(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22FFB3B10(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FFB3F74(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FFC14BC(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

__CFString *HMDUserDataControllerStateAsString(unint64_t a1)
{
  if (a1 >= 4)
  {
    BOOL v2 = NSString;
    id v3 = [NSNumber numberWithUnsignedInteger:a1];
    uint64_t v1 = [v2 stringWithFormat:@"Unknown state %@", v3];
  }
  else
  {
    uint64_t v1 = off_264A26800[a1];
  }
  return v1;
}

uint64_t HMDRemoteEventRouterProtoFetchEventsMessageReadFrom(uint64_t a1, uint64_t a2)
{
  id v3 = (int *)MEMORY[0x263F62298];
  int v4 = (int *)MEMORY[0x263F62288];
  id v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    id v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 3)
      {
        char v18 = 0;
        unsigned int v19 = 0;
        uint64_t v20 = 0;
        *(unsigned char *)(a1 + 24) |= 1u;
        while (1)
        {
          uint64_t v21 = *v3;
          unint64_t v22 = *(void *)(a2 + v21);
          if (v22 == -1 || v22 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v23 = *(unsigned char *)(*(void *)(a2 + *v7) + v22);
          *(void *)(a2 + v21) = v22 + 1;
          v20 |= (unint64_t)(v23 & 0x7F) << v18;
          if ((v23 & 0x80) == 0) {
            goto LABEL_33;
          }
          v18 += 7;
          BOOL v14 = v19++ >= 9;
          if (v14)
          {
            LODWORD(v20) = 0;
            goto LABEL_35;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_33:
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v20) = 0;
        }
LABEL_35:
        *(_DWORD *)(a1 + _Block_object_dispose(&STACK[0x340], 8) = v20;
      }
      else if ((v10 >> 3) == 2)
      {
        id v17 = objc_alloc_init(HMDRemoteEventRouterProtoTopic);
        [(id)a1 addTopics:v17];
        if (!PBReaderPlaceMark() || !HMDRemoteEventRouterProtoTopicReadFrom((uint64_t)v17, a2))
        {

          return 0;
        }
        PBReaderRecallMark();
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

void sub_22FFC3DE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_22FFC4254(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_22FFC9AD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_22FFCB520(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FFCBAAC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_unfair_lock_t lock)
{
}

void sub_22FFDBBE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_22FFDCD00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__207886(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__207887(uint64_t a1)
{
}

void sub_22FFDECA0(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FFDED88(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FFDEE10(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FFDEE98(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FFE25BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v7 - 48), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__208890(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__208891(uint64_t a1)
{
}

uint64_t isIrrecoverableError(void *a1)
{
  id v1 = a1;
  if ([v1 isHMError]
    && ([v1 code] == 90
     || [v1 code] == 79
     || [v1 code] == 52
     || [v1 code] == 96
     || [v1 code] == 13
     || [v1 code] == 11
     || [v1 code] == 55))
  {
    goto LABEL_30;
  }
  if (![v1 isHAPError]) {
    goto LABEL_40;
  }
  if ([v1 code] != 20
    && [v1 code] != 21
    && [v1 code] != 22
    && [v1 code] != 23
    && [v1 code] != 26
    && [v1 code] != 25
    && [v1 code] != 34
    && [v1 code] != 9
    && [v1 code] != 12
    && [v1 code] != 10
    && [v1 code] != 11
    && [v1 code] != 18
    && [v1 code] != 7
    && [v1 code] != 3
    && [v1 code] != 15
    && [v1 code] != 17
    && [v1 code] != 16
    && [v1 code] != 35
    && [v1 code] != 36
    && [v1 code] != 30)
  {
    if ([v1 code] == 13
      || [v1 code] == 14
      || [v1 code] == 2
      || [v1 code] == 1)
    {
      id v3 = [v1 userInfo];
      int v4 = [v3 objectForKeyedSubscript:*MEMORY[0x263F08608]];

      objc_opt_class();
      id v5 = (objc_opt_isKindOfClass() & 1) != 0 ? v4 : 0;
      id v6 = v5;

      if (v6)
      {
        uint64_t v7 = (void *)MEMORY[0x263F087E8];
        char v8 = [v6 domain];
        unsigned int v9 = objc_msgSend(v7, "errorWithDomain:code:userInfo:", v8, objc_msgSend(v6, "code"), 0);
        uint64_t v2 = isIrrecoverableError();

LABEL_41:
        goto LABEL_42;
      }
    }
LABEL_40:
    id v6 = [v1 domain];
    uint64_t v2 = [v6 isEqualToString:*MEMORY[0x263F10BB0]];
    goto LABEL_41;
  }
LABEL_30:
  uint64_t v2 = 1;
LABEL_42:

  return v2;
}

id _normalizeSetupCode(void *a1)
{
  id v1 = a1;
  if ([MEMORY[0x263F35A70] isValidSetupCode:v1] || objc_msgSend(v1, "length") != 8)
  {
    id v3 = v1;
  }
  else
  {
    uint64_t v2 = (void *)[v1 mutableCopy];
    [v2 insertString:@"-" atIndex:3];
    [v2 insertString:@"-" atIndex:6];
    id v3 = (id)[v2 copy];
  }
  return v3;
}

void sub_22FFEDD6C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, id *location, id *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,id a43)
{
  objc_destroyWeak(location);
  objc_destroyWeak(a14);
  objc_destroyWeak(&a43);
  _Block_object_dispose((const void *)(v43 - 176), 8);
  _Unwind_Resume(a1);
}

void sub_22FFF025C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FFF1D2C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22FFF34F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_22FFF4624(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22FFF5254(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,id location)
{
}

void sub_22FFF66D4(_Unwind_Exception *a1)
{
}

void sub_22FFF8AD0(_Unwind_Exception *a1)
{
}

uint64_t __Block_byref_object_copy__210267(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__210268(uint64_t a1)
{
}

void sub_22FFFAB40(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22FFFD0A0(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FFFD644(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FFFE538(_Unwind_Exception *a1)
{
}

void sub_22FFFEE38(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22FFFF0E0(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_22FFFFDC8(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FFFFE58(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_22FFFFED4(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2300012A0(_Unwind_Exception *a1)
{
}

void sub_230001A60(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_230001BB0(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_23000212C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_230002294(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2300023FC(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_230002540(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_230002B34(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_unfair_lock_t lock)
{
}

void sub_230002DFC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, os_unfair_lock_t lock)
{
}

void sub_230003674(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_230005CA4(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_230007118(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2300075D8(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_230007998(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_230008254(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_unfair_lock_t lock)
{
}

void sub_2300082D8(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_230008368(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_230008570(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_230008608(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

id observerMatchingConnection(void *a1, void *a2)
{
  uint64_t v17 = *MEMORY[0x263EF8340];
  id v3 = a1;
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  long long v15 = 0u;
  id v4 = a2;
  id v5 = (id)[v4 countByEnumeratingWithState:&v12 objects:v16 count:16];
  if (v5)
  {
    uint64_t v6 = *(void *)v13;
    while (2)
    {
      for (uint64_t i = 0; i != v5; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v13 != v6) {
          objc_enumerationMutation(v4);
        }
        char v8 = *(void **)(*((void *)&v12 + 1) + 8 * i);
        unsigned int v9 = objc_msgSend(v8, "observedObject", (void)v12);
        char v10 = HMFEqualObjects();

        if (v10)
        {
          id v5 = v8;
          goto LABEL_11;
        }
      }
      id v5 = (id)[v4 countByEnumeratingWithState:&v12 objects:v16 count:16];
      if (v5) {
        continue;
      }
      break;
    }
  }
LABEL_11:

  return v5;
}

void sub_230008DD0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id *a9, id *location, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,id a25,id a26)
{
}

void sub_2300092C4(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2300093B4(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_230009430(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_230009DE4(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_230009E64(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_23000A4AC(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_23000A610(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_23000CA7C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_23000CC0C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_23000CDCC(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_23000CE6C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

id getAccessoryAuthorizationsSettingsSerializedFilePath(void *a1)
{
  id v1 = NSString;
  id v2 = a1;
  id v3 = (id)hh1ToHH2PerDeviceMigrationDirectoryPath;
  id v4 = [v1 stringWithFormat:@"%@/HMDHome-Authorization-Data-%@.plist", v3, v2];

  return v4;
}

void sub_23000FC08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_23001260C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2300126C0(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_23001297C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_230012B04(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_230012B94(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_230012C3C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_230012CF0(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_230012E78(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_230012F08(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2300142BC(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_23001458C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2300147EC(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2300149E0(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_230019ACC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id createHMFNetAddressFromIPAddressString(void *a1)
{
  uint64_t v11 = *MEMORY[0x263EF8340];
  id v1 = a1;
  uint64_t v2 = [v1 UTF8String];
  if (v2) {
    id v3 = (const char *)v2;
  }
  else {
    id v3 = "";
  }
  *(_OWORD *)char v10 = xmmword_2303E3CB0;
  if (inet_pton(2, v3, &v10[4]) == 1
    || (*(_OWORD *)char v10 = xmmword_2303E46F8,
        *(_OWORD *)&v10[12] = *(long long *)((char *)&xmmword_2303E46F8 + 12),
        inet_pton(30, v3, &v10[8]) == 1))
  {
    id v4 = (void *)[objc_alloc(MEMORY[0x263F425A0]) initWithSocketAddress:v10];
  }
  else
  {
    id v5 = (void *)MEMORY[0x230FBD990]();
    uint64_t v6 = objc_opt_class();
    uint64_t v7 = HMFGetOSLogHandle();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
    {
      char v8 = HMFGetLogIdentifier();
      *(_DWORD *)char v10 = 138543618;
      *(void *)&void v10[4] = v8;
      *(_WORD *)&v10[12] = 2112;
      *(void *)&v10[14] = v1;
      _os_log_impl(&dword_22F52A000, v7, OS_LOG_TYPE_INFO, "%{public}@'%@' is not a valid IPv4 or IPv6 address string", v10, 0x16u);
    }
    id v4 = 0;
  }

  return v4;
}

void __validateHostNameForWANFirewallRule_block_invoke()
{
  uint64_t v0 = [MEMORY[0x263F08AE8] regularExpressionWithPattern:@"^(?=[^*]*(?:\\*(?:[^*]+|$)){0,2}$)[a-zA-Z0-9*](?:[a-zA-Z0-9*-]*[a-zA-Z0-9*])?$" options:0 error:0];
  id v1 = (void *)validateHostNameForWANFirewallRule_componentRegex;
  validateHostNameForWANFirewallRule_componentRegex = v0;
}

uint64_t decodeStringFromJSONDictionary(void *a1, void *a2, int a3, void *a4)
{
  uint64_t v29 = *MEMORY[0x263EF8340];
  id v7 = a1;
  id v8 = a2;
  id v22 = 0;
  int v9 = decodeValueFromJSONDictionary(v7, v8, a3, &v22);
  id v10 = v22;
  uint64_t v11 = v10;
  if (v9)
  {
    if (v10)
    {
      id v12 = v10;
      objc_opt_class();
      char isKindOfClass = objc_opt_isKindOfClass();
      if (isKindOfClass) {
        long long v14 = v12;
      }
      else {
        long long v14 = 0;
      }
      id v15 = v14;

      if ((isKindOfClass & 1) != 0 && [v12 length])
      {
        *a4 = v12;
        uint64_t v16 = 1;
      }
      else
      {
        uint64_t v17 = (void *)MEMORY[0x230FBD990]();
        char v18 = objc_opt_class();
        unsigned int v19 = HMFGetOSLogHandle();
        if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR))
        {
          uint64_t v20 = HMFGetLogIdentifier();
          *(_DWORD *)long long buf = 138543874;
          __int16 v24 = v20;
          __int16 v25 = 2112;
          id v26 = v8;
          __int16 v27 = 2112;
          id v28 = v7;
          _os_log_impl(&dword_22F52A000, v19, OS_LOG_TYPE_ERROR, "%{public}@JSON contains an invalid '%@' value: %@", buf, 0x20u);
        }
        uint64_t v16 = 0;
      }
    }
    else
    {
      *a4 = 0;
      uint64_t v16 = 1;
    }
  }
  else
  {
    uint64_t v16 = 0;
  }

  return v16;
}

uint64_t decodeValueFromJSONDictionary(void *a1, void *a2, int a3, void *a4)
{
  uint64_t v23 = *MEMORY[0x263EF8340];
  id v7 = a1;
  id v8 = a2;
  int v9 = [v7 objectForKeyedSubscript:v8];
  id v10 = v9;
  if (v9)
  {
    *a4 = v9;
LABEL_8:
    uint64_t v15 = 1;
    goto LABEL_9;
  }
  if (!a3)
  {
    *a4 = 0;
    goto LABEL_8;
  }
  uint64_t v11 = (void *)MEMORY[0x230FBD990]();
  id v12 = objc_opt_class();
  long long v13 = HMFGetOSLogHandle();
  if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
  {
    long long v14 = HMFGetLogIdentifier();
    int v17 = 138543874;
    char v18 = v14;
    __int16 v19 = 2112;
    id v20 = v8;
    __int16 v21 = 2112;
    id v22 = v7;
    _os_log_impl(&dword_22F52A000, v13, OS_LOG_TYPE_ERROR, "%{public}@JSON contains no '%@' value: %@", (uint8_t *)&v17, 0x20u);
  }
  uint64_t v15 = 0;
LABEL_9:

  return v15;
}

uint64_t decodeUnsignedIntegerFromJSONDictionary(void *a1, void *a2, int a3, unint64_t a4, void *a5)
{
  uint64_t v32 = *MEMORY[0x263EF8340];
  id v9 = a1;
  id v10 = a2;
  id v25 = 0;
  int v11 = decodeValueFromJSONDictionary(v9, v10, a3, &v25);
  id v12 = v25;
  long long v13 = v12;
  if (v11)
  {
    if (v12)
    {
      id v14 = v12;
      objc_opt_class();
      char isKindOfClass = objc_opt_isKindOfClass();
      if (isKindOfClass) {
        uint64_t v16 = v14;
      }
      else {
        uint64_t v16 = 0;
      }
      id v17 = v16;

      if ((isKindOfClass & 1) != 0
        && [v14 unsignedLongLongValue] <= a4
        && (CFTypeID v18 = CFGetTypeID(v14), v18 != CFBooleanGetTypeID()))
      {
        *a5 = v14;
        uint64_t v23 = 1;
      }
      else
      {
        __int16 v19 = (void *)MEMORY[0x230FBD990]();
        id v20 = objc_opt_class();
        __int16 v21 = HMFGetOSLogHandle();
        if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR))
        {
          id v22 = HMFGetLogIdentifier();
          *(_DWORD *)long long buf = 138543874;
          __int16 v27 = v22;
          __int16 v28 = 2112;
          id v29 = v10;
          __int16 v30 = 2112;
          id v31 = v9;
          _os_log_impl(&dword_22F52A000, v21, OS_LOG_TYPE_ERROR, "%{public}@JSON contains an invalid '%@' value: %@", buf, 0x20u);
        }
        uint64_t v23 = 0;
      }
    }
    else
    {
      *a5 = 0;
      uint64_t v23 = 1;
    }
  }
  else
  {
    uint64_t v23 = 0;
  }

  return v23;
}

uint64_t decodeAddressFromJSONDictionary(void *a1, void *a2, int a3, void *a4)
{
  uint64_t v26 = *MEMORY[0x263EF8340];
  id v7 = a1;
  id v8 = a2;
  id v19 = 0;
  int v9 = decodeStringFromJSONDictionary(v7, v8, a3, &v19);
  id v10 = v19;
  int v11 = v10;
  if (v9)
  {
    if (v10)
    {
      createHMFNetAddressFromIPAddressString(v10);
      id v12 = (id)objc_claimAutoreleasedReturnValue();
      *a4 = v12;
      if (!v12)
      {
        long long v13 = (void *)MEMORY[0x230FBD990]();
        id v14 = objc_opt_class();
        uint64_t v15 = HMFGetOSLogHandle();
        if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
        {
          uint64_t v16 = HMFGetLogIdentifier();
          *(_DWORD *)long long buf = 138543874;
          __int16 v21 = v16;
          __int16 v22 = 2112;
          id v23 = v8;
          __int16 v24 = 2112;
          id v25 = v7;
          _os_log_impl(&dword_22F52A000, v15, OS_LOG_TYPE_ERROR, "%{public}@JSON contains an invalid '%@' address: %@", buf, 0x20u);
        }
        goto LABEL_7;
      }
    }
    else
    {
      *a4 = 0;
    }
    uint64_t v17 = 1;
    goto LABEL_10;
  }
LABEL_7:
  uint64_t v17 = 0;
LABEL_10:

  return v17;
}

uint64_t decodeTimeFromJSONDictionary(void *a1, void *a2, void *a3)
{
  id v8 = 0;
  uint64_t v4 = decodeUnsignedIntegerFromJSONDictionary(a1, a2, 1, 0xFFFFFFFFuLL, &v8);
  id v5 = v8;
  uint64_t v6 = v5;
  if (v4)
  {
    objc_msgSend(MEMORY[0x263EFF910], "dateWithTimeIntervalSinceReferenceDate:", (double)(unint64_t)objc_msgSend(v5, "unsignedLongValue"));
    *a3 = (id)objc_claimAutoreleasedReturnValue();
  }

  return v4;
}

uint64_t decodePortFromJSONDictionary(void *a1, void *a2, int a3, _WORD *a4, BOOL *a5)
{
  id v12 = 0;
  uint64_t v7 = decodeUnsignedIntegerFromJSONDictionary(a1, a2, a3, 0xFFFFuLL, &v12);
  id v8 = v12;
  int v9 = v8;
  if (v7)
  {
    if (a5) {
      *a5 = v8 != 0;
    }
    if (v8) {
      __int16 v10 = [v8 unsignedShortValue];
    }
    else {
      __int16 v10 = 0;
    }
    *a4 = v10;
  }

  return v7;
}

void sub_230021974(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
}

void sub_230021A58(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_23002243C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 128));
  _Unwind_Resume(a1);
}

void sub_230022830(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_230024AEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v15 - 128), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__213397(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__213398(uint64_t a1)
{
}

void sub_230025214(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_230025704(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 48), 8);
  _Unwind_Resume(a1);
}

id _findResidentMatching(void *a1, void *a2)
{
  id v3 = a2;
  id v4 = a1;
  id v5 = [v3 idsIdentifier];
  uint64_t v6 = [v3 idsDestination];
  uint64_t v7 = +[HMDDeviceAddress addressWithIDSIdentifier:v5 idsDestination:v6];

  char isMKFResidentCurrentDevice = _isMKFResidentCurrentDevice(v3);
  v14[0] = MEMORY[0x263EF8330];
  v14[1] = 3221225472;
  v14[2] = ___findResidentMatching_block_invoke;
  void v14[3] = &unk_264A27718;
  char v17 = isMKFResidentCurrentDevice;
  id v15 = v3;
  id v16 = v7;
  id v9 = v7;
  id v10 = v3;
  int v11 = [v4 objectsPassingTest:v14];

  id v12 = [v11 anyObject];

  return v12;
}

uint64_t _isMKFResidentCurrentDevice(void *a1)
{
  uint64_t v1 = [a1 appleMediaAccessory];
  uint64_t v2 = [v1 identifier];
  id v3 = (id)_mediaRouteIdentifier;
  uint64_t v4 = [v2 isEqualToString:v3];

  return v4;
}

uint64_t ___findResidentMatching_block_invoke(uint64_t a1, void *a2)
{
  id v3 = a2;
  if ([v3 isCurrentDevice] && *(unsigned char *)(a1 + 48))
  {
    uint64_t v4 = 1;
  }
  else
  {
    id v5 = [v3 device];
    uint64_t v6 = [v5 identifier];
    uint64_t v7 = [*(id *)(a1 + 32) device];
    id v8 = [v7 identifier];
    if ([v6 isEqual:v8]) {
      uint64_t v4 = 1;
    }
    else {
      uint64_t v4 = [v3 isDeviceEquivalentToDeviceAddress:*(void *)(a1 + 40)];
    }
  }
  return v4;
}

void sub_230026BF0(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 136), 8);
  _Unwind_Resume(a1);
}

void sub_23002745C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_230027750(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_230028244(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_start(va, a10);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_230028870(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_230029950(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,id location)
{
  objc_destroyWeak(v41);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

__CFString *HMDCoreDataTransactionAuthorAsString(uint64_t a1)
{
  if ((unint64_t)(a1 - 2) > 9) {
    return @"HMD.Unknown";
  }
  else {
    return off_264A27760[a1 - 2];
  }
}

void sub_23002C588(_Unwind_Exception *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, long long buf)
{
  if (a2 == 1)
  {
    id v12 = objc_begin_catch(a1);
    long long v13 = (void *)MEMORY[0x230FBD990]();
    HMFGetOSLogHandle();
    id v14 = (id)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
    {
      id v15 = HMFGetLogIdentifier();
      LODWORD(buf) = 138543618;
      *(void *)((char *)&buf + 4) = v15;
      WORD6(buf) = 2112;
      *(void *)((char *)&buf + 14) = v12;
      _os_log_impl(&dword_22F52A000, v14, OS_LOG_TYPE_DEFAULT, "%{public}@### decode eventValue resulted in exception: %@", (uint8_t *)&buf, 0x16u);
    }
    id v16 = *(void **)(v11 + 128);
    *(void *)(v11 + 12_Block_object_dispose(&STACK[0x340], 8) = 0;

    objc_end_catch();
    JUMPOUT(0x23002C54CLL);
  }
  _Unwind_Resume(a1);
}

uint64_t shouldCreateNativeMatterAccessoryFromServer(void *a1, void *a2)
{
  uint64_t v33 = *MEMORY[0x263EF8340];
  id v3 = a1;
  id v4 = a2;
  id v5 = [v4 featureDataSource];
  int v6 = [v5 isRVCEnabled];

  if (v6)
  {
    id v7 = v3;
    objc_opt_class();
    if (objc_opt_isKindOfClass()) {
      id v8 = v7;
    }
    else {
      id v8 = 0;
    }
    id v9 = v8;

    if (v9)
    {
      id v10 = [v4 primaryResident];
      uint64_t v11 = v10;
      if (v10 && ([v10 supportsNativeMatter] & 1) == 0)
      {
        id v23 = (void *)MEMORY[0x230FBD990]();
        __int16 v24 = HMFGetOSLogHandle();
        if (os_log_type_enabled(v24, OS_LOG_TYPE_INFO))
        {
          id v25 = HMFGetLogIdentifier();
          *(_DWORD *)long long buf = 138543362;
          __int16 v30 = v25;
          _os_log_impl(&dword_22F52A000, v24, OS_LOG_TYPE_INFO, "%{public}@Resident doesn't support native matter", buf, 0xCu);
        }
        uint64_t v18 = 0;
      }
      else
      {
        id v12 = (void *)MEMORY[0x230FBD990]();
        long long v13 = HMFGetOSLogHandle();
        if (os_log_type_enabled(v13, OS_LOG_TYPE_INFO))
        {
          id v14 = HMFGetLogIdentifier();
          id v15 = [v9 clusterIDCharacteristicMap];
          *(_DWORD *)long long buf = 138543618;
          __int16 v30 = v14;
          __int16 v31 = 2112;
          uint64_t v32 = v15;
          _os_log_impl(&dword_22F52A000, v13, OS_LOG_TYPE_INFO, "%{public}@Checking if we should skip using native matter for %@", buf, 0x16u);
        }
        id v16 = [v9 accessories];
        v27[0] = MEMORY[0x263EF8330];
        v27[1] = 3221225472;
        v27[2] = __shouldCreateNativeMatterAccessoryFromServer_block_invoke;
        v27[3] = &unk_264A277B8;
        id v17 = v9;
        id v28 = v17;
        uint64_t v18 = objc_msgSend(v16, "na_all:", v27);

        if ((v18 & 1) == 0)
        {
          id v19 = (void *)MEMORY[0x230FBD990]();
          id v20 = HMFGetOSLogHandle();
          if (os_log_type_enabled(v20, OS_LOG_TYPE_DEBUG))
          {
            __int16 v21 = HMFGetLogIdentifier();
            __int16 v22 = [v17 shortDescription];
            *(_DWORD *)long long buf = 138543618;
            __int16 v30 = v21;
            __int16 v31 = 2112;
            uint64_t v32 = v22;
            _os_log_impl(&dword_22F52A000, v20, OS_LOG_TYPE_DEBUG, "%{public}@Not using native matter for accessory: %@", buf, 0x16u);
          }
        }
      }
    }
    else
    {
      uint64_t v18 = 0;
    }
  }
  else
  {
    uint64_t v18 = 0;
  }

  return v18;
}

uint64_t __shouldCreateNativeMatterAccessoryFromServer_block_invoke(uint64_t a1)
{
  uint64_t v1 = (void *)MEMORY[0x263F0DF40];
  uint64_t v2 = [*(id *)(a1 + 32) category];
  id v3 = [v1 categoryWithCategoryIdentifier:v2];

  uint64_t v4 = canSupportNativeMatter();
  return v4;
}

id HMDSortedServiceTypeUUIDsFromStrings(void *a1)
{
  uint64_t v16 = *MEMORY[0x263EF8340];
  id v1 = a1;
  uint64_t v2 = objc_msgSend(objc_alloc(MEMORY[0x263EFF980]), "initWithCapacity:", objc_msgSend(v1, "count"));
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  id v3 = v1;
  uint64_t v4 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = *(void *)v12;
    do
    {
      for (uint64_t i = 0; i != v5; ++i)
      {
        if (*(void *)v12 != v6) {
          objc_enumerationMutation(v3);
        }
        id v8 = objc_msgSend(MEMORY[0x263F425D0], "hmf_cachedInstanceForNSString:", *(void *)(*((void *)&v11 + 1) + 8 * i), (void)v11);
        if (v8) {
          [v2 addObject:v8];
        }
      }
      uint64_t v5 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
    }
    while (v5);
  }

  [v2 sortUsingSelector:sel_compare_];
  id v9 = (void *)[v2 copy];

  return v9;
}

id serviceTypeUUIDsForAccessory(void *a1)
{
  uint64_t v19 = *MEMORY[0x263EF8340];
  id v1 = [a1 services];
  if ([v1 count])
  {
    uint64_t v2 = +[HMDHAPMetadata getSharedInstance];
    id v3 = objc_msgSend(MEMORY[0x263EFF9C0], "setWithCapacity:", objc_msgSend(v1, "count"));
    long long v14 = 0u;
    long long v15 = 0u;
    long long v16 = 0u;
    long long v17 = 0u;
    id v4 = v1;
    uint64_t v5 = [v4 countByEnumeratingWithState:&v14 objects:v18 count:16];
    if (v5)
    {
      uint64_t v6 = v5;
      uint64_t v7 = *(void *)v15;
      do
      {
        for (uint64_t i = 0; i != v6; ++i)
        {
          if (*(void *)v15 != v7) {
            objc_enumerationMutation(v4);
          }
          id v9 = *(void **)(*((void *)&v14 + 1) + 8 * i);
          id v10 = objc_msgSend(v9, "type", (void)v14);
          if (([v2 shouldFilterServiceOfType:v10] & 1) == 0)
          {
            long long v11 = [v9 type];
            [v3 addObject:v11];
          }
        }
        uint64_t v6 = [v4 countByEnumeratingWithState:&v14 objects:v18 count:16];
      }
      while (v6);
    }

    long long v12 = (void *)[v3 copy];
  }
  else
  {
    long long v12 = 0;
  }

  return v12;
}

void HMDPopulateAccessoryModelFromHAPAccessory(void *a1, void *a2, uint64_t a3, void *a4)
{
  v78[3] = *MEMORY[0x263EF8340];
  id v7 = a1;
  id v8 = a2;
  id v9 = a4;
  id v10 = [NSNumber numberWithInteger:a3];
  [v7 setCertificationStatus:v10];

  long long v11 = [v8 name];
  long long v12 = (void *)[v11 copy];
  [v7 setProvidedName:v12];

  long long v13 = [v8 category];
  long long v14 = v13;
  if (v13)
  {
    id v15 = v13;
  }
  else
  {
    long long v16 = +[HMDHAPMetadata getSharedInstance];
    long long v17 = [v16 categoryForOther];
    id v15 = [v17 identifier];
  }
  [v7 setAccessoryCategory:v15];
  [v7 setInitialCategoryIdentifier:v15];
  uint64_t v18 = [v8 model];
  [v7 setModel:v18];

  uint64_t v19 = [v8 model];
  [v7 setInitialModel:v19];

  id v20 = [v8 manufacturer];
  [v7 setManufacturer:v20];

  __int16 v21 = [v8 manufacturer];
  [v7 setInitialManufacturer:v21];

  __int16 v22 = [v8 firmwareVersion];
  [v7 setFirmwareVersion:v22];

  id v23 = serviceTypeUUIDsForAccessory(v8);
  id v59 = v23;
  if (v23)
  {
    __int16 v24 = HMDSortedServiceTypeUUIDsFromStrings(v23);
    [v7 setInitialServiceTypes:v24];
  }
  else
  {
    [v7 setInitialServiceTypes:0];
  }
  uint64_t v60 = v15;
  id v25 = [v8 serialNumber];
  [v7 setSerialNumber:v25];

  uint64_t v26 = [v8 sleepInterval];
  [v7 setSleepInterval:v26];

  if (v9)
  {
    [v7 setHostAccessory:v9];
    __int16 v27 = [v9 room];
    [v7 setRoom:v27];
  }
  id v58 = v9;
  v77[0] = @"HM.serverIdentifier";
  id v28 = [v8 serverIdentifier];
  v78[0] = v28;
  v77[1] = @"HM.instanceID";
  id v29 = [v8 instanceID];
  v78[1] = v29;
  v77[2] = @"linkType";
  __int16 v30 = objc_msgSend(NSNumber, "numberWithInteger:", objc_msgSend(v8, "linkType"));
  v78[2] = v30;
  uint64_t v31 = [NSDictionary dictionaryWithObjects:v78 forKeys:v77 count:3];

  id v57 = (void *)v31;
  uint64_t v32 = [MEMORY[0x263EFF980] arrayWithObject:v31];
  if ([v8 linkType] == 1)
  {
    uint64_t v33 = [v8 servicesOfType:@"00000701-0000-1000-8000-0026BB765291"];
    uint64_t v34 = [v33 count];

    if (v34)
    {
      v75[0] = @"HM.serverIdentifier";
      __int16 v35 = [v8 serverIdentifier];
      v76[0] = v35;
      v75[1] = @"HM.instanceID";
      id v36 = [v8 instanceID];
      v75[2] = @"linkType";
      v76[1] = v36;
      v76[2] = &unk_26E4730F0;
      uint64_t v37 = [NSDictionary dictionaryWithObjects:v76 forKeys:v75 count:3];

      [v32 addObject:v37];
    }
  }
  [v7 setTransportInformation:v32];
  uint64_t v38 = objc_msgSend(NSNumber, "numberWithInteger:", objc_msgSend(v8, "communicationProtocol"));
  [v7 setCommunicationProtocol:v38];

  double v39 = [v8 uniqueIdentifier];
  [v7 setUniqueIdentifier:v39];

  uint64_t v40 = [v8 identifier];
  [v7 setIdentifier:v40];

  id v41 = [v8 identifier];
  unsigned __int8 v62 = 0;
  id v42 = [MEMORY[0x263F35AD0] systemStore];
  id v61 = 0;
  uint64_t v43 = [v42 readPublicKeyForAccessoryName:v41 registeredWithHomeKit:&v62 error:&v61];
  id v44 = v61;

  int v45 = v62;
  id v46 = (void *)MEMORY[0x230FBD990]();
  id v47 = HMFGetOSLogHandle();
  BOOL v48 = os_log_type_enabled(v47, OS_LOG_TYPE_INFO);
  if (!v44 && v41 && v43 && v45)
  {
    if (v48)
    {
      id v49 = HMFGetLogIdentifier();
      [v8 name];
      id v50 = v55 = v32;
      *(_DWORD *)long long buf = 138544130;
      long long v64 = v49;
      __int16 v65 = 2112;
      uint64_t v66 = v50;
      __int16 v67 = 2112;
      id v68 = v41;
      __int16 v69 = 2112;
      id v70 = v43;
      _os_log_impl(&dword_22F52A000, v47, OS_LOG_TYPE_INFO, "%{public}@Accessory %@ setting pairing username and pubkey to ('%@', '%@')", buf, 0x2Au);

      uint64_t v32 = v55;
    }

    [v7 setPairingUsername:v41];
    [v7 setPublicKey:v43];
  }
  else
  {
    if (v48)
    {
      uint64_t v51 = HMFGetLogIdentifier();
      [v7 providedName];
      v52 = id v56 = v32;
      long long v53 = HMFBooleanToString();
      *(_DWORD *)long long buf = 138544642;
      long long v64 = v51;
      __int16 v65 = 2112;
      uint64_t v66 = v52;
      __int16 v67 = 2112;
      id v68 = v41;
      __int16 v69 = 2112;
      id v70 = v43;
      __int16 v71 = 2112;
      id v72 = v53;
      __int16 v73 = 2112;
      id v74 = v44;
      _os_log_impl(&dword_22F52A000, v47, OS_LOG_TYPE_INFO, "%{public}@Accessory %@ - failed to read public key(%@)/pairing username(%@) homeKitRegistered(%@) - error %@", buf, 0x3Eu);

      uint64_t v32 = v56;
    }

    id v9 = v58;
  }
  uint64_t v54 = [v8 server];
  +[HMDHome updateCHIPPropertiesOnMKFAccessoryModel:v7 forAddedHAPAccessoryServer:v54];
}

id HMDNewModelsFromHAPServices(void *a1, void *a2)
{
  uint64_t v83 = *MEMORY[0x263EF8340];
  id v3 = a1;
  id v55 = a2;
  id v4 = +[HMDHAPMetadata getSharedInstance];
  uint64_t v54 = objc_msgSend(MEMORY[0x263EFF9C0], "setWithCapacity:", objc_msgSend(v3, "count"));
  long long v71 = 0u;
  long long v72 = 0u;
  long long v73 = 0u;
  long long v74 = 0u;
  id obj = v3;
  uint64_t v5 = [obj countByEnumeratingWithState:&v71 objects:v79 count:16];
  if (v5)
  {
    uint64_t v6 = v5;
    uint64_t v59 = *(void *)v72;
    long long v53 = v4;
    do
    {
      uint64_t v7 = 0;
      uint64_t v56 = v6;
      do
      {
        if (*(void *)v72 != v59) {
          objc_enumerationMutation(obj);
        }
        uint64_t v60 = v7;
        id v8 = *(void **)(*((void *)&v71 + 1) + 8 * v7);
        id v9 = [v8 type];
        char v10 = [v4 shouldFilterServiceOfType:v9];

        if ((v10 & 1) == 0)
        {
          long long v11 = [v8 instanceID];
          long long v12 = [v55 materializeOrCreateServicesRelationWithInstanceID:v11 createdNew:0];

          id v13 = objc_alloc(MEMORY[0x263F08C38]);
          long long v14 = [v8 type];
          id v15 = (void *)[v13 initWithUUIDString:v14];
          [v12 setServiceType:v15];

          long long v16 = [v8 linkedServices];
          long long v17 = (void *)[v16 copy];
          [v12 setLinkedServices:v17];

          uint64_t v18 = objc_msgSend(NSNumber, "numberWithUnsignedInteger:", objc_msgSend(v8, "serviceProperties"));
          [v12 setServiceProperties:v18];

          [v54 addObject:v12];
          id v19 = v8;
          id v64 = v12;
          id v20 = +[HMDHAPMetadata getSharedInstance];
          __int16 v21 = (void *)MEMORY[0x263EFF9C0];
          __int16 v22 = [v19 characteristics];
          long long v63 = objc_msgSend(v21, "setWithCapacity:", objc_msgSend(v22, "count"));

          long long v77 = 0u;
          long long v78 = 0u;
          long long v75 = 0u;
          long long v76 = 0u;
          id v58 = v19;
          id v66 = [v19 characteristics];
          uint64_t v23 = [v66 countByEnumeratingWithState:&v75 objects:v82 count:16];
          if (v23)
          {
            uint64_t v24 = v23;
            uint64_t v25 = *(void *)v76;
            uint64_t v61 = *(void *)v76;
            unsigned __int8 v62 = v20;
            do
            {
              uint64_t v26 = 0;
              uint64_t v65 = v24;
              do
              {
                if (*(void *)v76 != v25) {
                  objc_enumerationMutation(v66);
                }
                __int16 v27 = *(void **)(*((void *)&v75 + 1) + 8 * v26);
                id v28 = [v27 type];
                char v29 = [v20 shouldFilterCharacteristicOfType:v28];

                if ((v29 & 1) == 0)
                {
                  __int16 v30 = [v27 metadata];
                  id v70 = [v30 constraints];
                  __int16 v67 = [HMDCharacteristicMetadata alloc];
                  uint64_t v31 = [v70 minimumValue];
                  uint64_t v32 = [v70 maximumValue];
                  uint64_t v33 = [v70 stepValue];
                  uint64_t v34 = [v70 maxLength];
                  __int16 v35 = [v70 validValues];
                  __int16 v69 = v30;
                  id v36 = [v30 format];
                  uint64_t v37 = [v30 units];
                  uint64_t v38 = [v30 manufacturerDescription];
                  id v68 = [(HMDCharacteristicMetadata *)v67 initWithMinimumValue:v31 maximumValue:v32 stepValue:v33 maxLength:v34 validValues:v35 format:v36 units:v37 manufacturerDescription:v38];

                  double v39 = (void *)MEMORY[0x263EFF9A0];
                  v80[0] = @"characteristicInstanceID";
                  uint64_t v40 = [v27 instanceID];
                  v81[0] = v40;
                  v80[1] = @"characteristicType";
                  id v41 = [v27 type];
                  v81[1] = v41;
                  v80[2] = @"characteristicProperties";
                  id v42 = objc_msgSend(NSNumber, "numberWithUnsignedInteger:", objc_msgSend(v27, "properties"));
                  v81[2] = v42;
                  v80[3] = @"characteristicMetadata";
                  uint64_t v43 = [(HMDCharacteristicMetadata *)v68 dictionaryRepresentation];
                  v81[3] = v43;
                  id v44 = [NSDictionary dictionaryWithObjects:v81 forKeys:v80 count:4];
                  int v45 = [v39 dictionaryWithDictionary:v44];

                  id v20 = v62;
                  id v46 = [v69 format];
                  id v47 = +[HMDServiceTransaction cd_modelTypeForCharacteristicFormat:v46];

                  BOOL v48 = [v27 instanceID];
                  id v49 = [v64 materializeOrCreateCharacteristicsRelationOfType:v47 instanceID:v48 createdNew:0];

                  objc_msgSend(v49, "pr_updateWithDictionary:", v45);
                  [v63 addObject:v49];

                  uint64_t v25 = v61;
                  uint64_t v24 = v65;
                }
                ++v26;
              }
              while (v24 != v26);
              uint64_t v24 = [v66 countByEnumeratingWithState:&v75 objects:v82 count:16];
            }
            while (v24);
          }

          id v50 = (void *)[v63 copy];
          id v4 = v53;
          uint64_t v6 = v56;
        }
        uint64_t v7 = v60 + 1;
      }
      while (v60 + 1 != v6);
      uint64_t v6 = [obj countByEnumeratingWithState:&v71 objects:v79 count:16];
    }
    while (v6);
  }

  uint64_t v51 = (void *)[v54 copy];
  return v51;
}

id HMDAddToTransactionBlockFromHAPAccessoryModel(void *a1, void *a2, void *a3, void *a4, void *a5)
{
  uint64_t v67 = *MEMORY[0x263EF8340];
  id v51 = a1;
  id v9 = a2;
  id v10 = a3;
  id v50 = a4;
  id v11 = a5;
  long long v12 = HMDCastIfManagedObjectBSORepresentable(v9);
  id v57 = 0;
  id v13 = objc_msgSend(v12, "hmd_modelsWithChangeType:detached:createManagedObject:error:", 1, 1, 0, &v57);
  id v14 = v57;
  id v15 = [v13 firstObject];
  objc_opt_class();
  if (objc_opt_isKindOfClass()) {
    long long v16 = v15;
  }
  else {
    long long v16 = 0;
  }
  id v17 = v16;

  if (v17)
  {
    uint64_t v18 = [v17 roomUUID];

    if (!v18)
    {
      id v19 = [v10 roomForEntireHome];
      id v20 = [v19 uuid];
      __int16 v21 = [v20 UUIDString];
      [v17 setRoomUUID:v21];
    }
    BOOL v48 = [v11 uuidForKey:@"HMDHostAccessoryIdentifierMessageKey"];
    id v49 = v17;
    if (v48)
    {
      __int16 v22 = [v17 hostAccessoryUUID];

      uint64_t v23 = (void *)MEMORY[0x230FBD990]();
      uint64_t v24 = HMFGetOSLogHandle();
      BOOL v25 = os_log_type_enabled(v24, OS_LOG_TYPE_INFO);
      if (v22)
      {
        if (v25)
        {
          uint64_t v26 = HMFGetLogIdentifier();
          __int16 v27 = [v49 hostAccessoryUUID];
          *(_DWORD *)long long buf = 138544130;
          uint64_t v60 = v26;
          __int16 v61 = 2112;
          unsigned __int8 v62 = v48;
          __int16 v63 = 2112;
          id v64 = v9;
          __int16 v65 = 2112;
          id v66 = v27;
          _os_log_impl(&dword_22F52A000, v24, OS_LOG_TYPE_INFO, "%{public}@Not setting host UUID: %@ from message on accessory model: %@ as it was already set on the model to: %@", buf, 0x2Au);
        }
        id v17 = v49;
      }
      else
      {
        if (v25)
        {
          char v29 = HMFGetLogIdentifier();
          *(_DWORD *)long long buf = 138543874;
          uint64_t v60 = v29;
          __int16 v61 = 2112;
          unsigned __int8 v62 = v48;
          __int16 v63 = 2112;
          id v64 = v9;
          _os_log_impl(&dword_22F52A000, v24, OS_LOG_TYPE_INFO, "%{public}@Setting host UUID: %@ from message on accessory model: %@", buf, 0x20u);
        }
        __int16 v30 = [v48 UUIDString];
        id v17 = v49;
        [v49 setHostAccessoryUUID:v30];
      }
    }
    uint64_t v31 = [v10 uuid];
    [v17 setParentUUIDIfNotNil:v31];

    [v17 setConfigurationTracker:v50];
    [v51 add:v17 withMessage:v11];
    long long v55 = 0u;
    long long v56 = 0u;
    long long v53 = 0u;
    long long v54 = 0u;
    uint64_t v32 = [v9 services];
    uint64_t v33 = [v32 countByEnumeratingWithState:&v53 objects:v58 count:16];
    if (v33)
    {
      uint64_t v34 = v33;
      id v44 = v12;
      id v45 = v11;
      id v46 = v10;
      id v47 = v9;
      uint64_t v35 = *(void *)v54;
      while (2)
      {
        uint64_t v36 = 0;
        uint64_t v37 = v14;
        do
        {
          if (*(void *)v54 != v35) {
            objc_enumerationMutation(v32);
          }
          uint64_t v38 = HMDCastIfManagedObjectBSORepresentable(*(void **)(*((void *)&v53 + 1) + 8 * v36));
          id v52 = v37;
          double v39 = objc_msgSend(v38, "hmd_modelsWithChangeType:detached:createManagedObject:error:", 1, 0, 0, &v52);
          id v14 = v52;

          uint64_t v40 = [v39 firstObject];
          objc_opt_class();
          if (objc_opt_isKindOfClass()) {
            id v41 = v40;
          }
          else {
            id v41 = 0;
          }
          id v42 = v41;

          if (!v42)
          {
            id v14 = v14;

            id v28 = v14;
            goto LABEL_29;
          }
          [v42 setConfigurationTracker:v50];
          [v51 add:v42];

          ++v36;
          uint64_t v37 = v14;
        }
        while (v34 != v36);
        uint64_t v34 = [v32 countByEnumeratingWithState:&v53 objects:v58 count:16];
        if (v34) {
          continue;
        }
        break;
      }
      id v28 = 0;
LABEL_29:
      id v10 = v46;
      id v9 = v47;
      long long v12 = v44;
      id v11 = v45;
    }
    else
    {
      id v28 = 0;
    }

    id v17 = v49;
  }
  else
  {
    id v14 = v14;
    id v28 = v14;
  }

  return v28;
}

HMDManagedObjectCodingModel *HMDRemoteAddCodingModel()
{
  uint64_t v0 = [HMDManagedObjectCodingModel alloc];
  id v1 = +[HMDCoreData managedObjectModel];
  uint64_t v2 = [(HMDManagedObjectCodingModel *)v0 initWithModel:v1 configNamespace:@"remoteAdd" rootEntityName:@"MKFHAPAccessory"];

  return v2;
}

void sub_2300319B0(_Unwind_Exception *a1)
{
}

void sub_230031A44(_Unwind_Exception *a1)
{
}

void sub_230031B78(_Unwind_Exception *a1)
{
}

void sub_23003A0A4(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_23003A134(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_23003ACF0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, id location)
{
  objc_destroyWeak(v16);
  __HMFActivityScopeLeave();
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_23003C578(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)&STACK[0x3A0]);
  _Unwind_Resume(a1);
}

__CFString *HMDFMFStatusAsString(unint64_t a1)
{
  if (a1 >= 4)
  {
    objc_msgSend(NSString, "stringWithFormat:", @"Unknown HMDFMFStatus %tu", a1);
    id v1 = (__CFString *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    id v1 = off_264A279D0[a1];
  }
  return v1;
}

__CFString *changeTypeAsNSString(unint64_t a1)
{
  if (a1 >= 4)
  {
    objc_msgSend(NSString, "stringWithFormat:", @"<UNKNOWN %lu>", a1);
    id v1 = (__CFString *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    id v1 = off_264A279F0[a1];
  }
  return v1;
}

void __sort(void *a1)
{
  uint64_t v63 = *MEMORY[0x263EF8340];
  id v1 = a1;
  if ((unint64_t)[v1 count] >= 2)
  {
    uint64_t v2 = (void *)[v1 mutableCopy];
    id v3 = objc_msgSend(MEMORY[0x263EFF9C0], "setWithCapacity:", objc_msgSend(v1, "count"));
    long long v52 = 0u;
    long long v53 = 0u;
    long long v54 = 0u;
    long long v55 = 0u;
    id v36 = v1;
    id v4 = v1;
    uint64_t v5 = [v4 countByEnumeratingWithState:&v52 objects:v62 count:16];
    if (v5)
    {
      uint64_t v6 = v5;
      uint64_t v7 = *(void *)v53;
      do
      {
        for (uint64_t i = 0; i != v6; ++i)
        {
          if (*(void *)v53 != v7) {
            objc_enumerationMutation(v4);
          }
          id v9 = objc_msgSend(*(id *)(*((void *)&v52 + 1) + 8 * i), "change", v36);
          id v10 = [v9 uuid];
          [v3 addObject:v10];
        }
        uint64_t v6 = [v4 countByEnumeratingWithState:&v52 objects:v62 count:16];
      }
      while (v6);
    }

    uint64_t v40 = objc_msgSend(MEMORY[0x263EFF980], "arrayWithCapacity:", objc_msgSend(v4, "count"));
    id v11 = objc_msgSend(MEMORY[0x263EFF9C0], "setWithCapacity:", objc_msgSend(v4, "count"));
    uint64_t v12 = [v2 count];
    uint64_t v13 = 0;
    uint64_t v37 = v12 & ~(v12 >> 63);
    id v38 = v4;
    id v41 = v2;
    while (objc_msgSend(v2, "count", v36))
    {
      uint64_t v39 = v13;
      long long v50 = 0u;
      long long v51 = 0u;
      long long v48 = 0u;
      long long v49 = 0u;
      id obj = (id)[v2 copy];
      uint64_t v14 = [obj countByEnumeratingWithState:&v48 objects:v61 count:16];
      if (v14)
      {
        uint64_t v15 = v14;
        uint64_t v43 = *(void *)v49;
        do
        {
          for (uint64_t j = 0; j != v15; ++j)
          {
            if (*(void *)v49 != v43) {
              objc_enumerationMutation(obj);
            }
            id v17 = *(void **)(*((void *)&v48 + 1) + 8 * j);
            uint64_t v18 = [MEMORY[0x263EFF9C0] set];
            id v19 = [v17 change];
            id v20 = [v19 parentUUID];

            if (v20)
            {
              __int16 v21 = [v17 change];
              __int16 v22 = [v21 parentUUID];
              [v18 addObject:v22];
            }
            uint64_t v23 = [v17 dependentUUIDs];
            uint64_t v24 = [v23 allObjects];
            [v18 addObjectsFromArray:v24];

            long long v46 = 0u;
            long long v47 = 0u;
            long long v44 = 0u;
            long long v45 = 0u;
            id v25 = v18;
            uint64_t v26 = [v25 countByEnumeratingWithState:&v44 objects:v60 count:16];
            if (v26)
            {
              uint64_t v27 = v26;
              uint64_t v28 = *(void *)v45;
              while (2)
              {
                for (uint64_t k = 0; k != v27; ++k)
                {
                  if (*(void *)v45 != v28) {
                    objc_enumerationMutation(v25);
                  }
                  uint64_t v30 = *(void *)(*((void *)&v44 + 1) + 8 * k);
                  if ([v3 containsObject:v30]
                    && ![v11 containsObject:v30])
                  {

                    goto LABEL_29;
                  }
                }
                uint64_t v27 = [v25 countByEnumeratingWithState:&v44 objects:v60 count:16];
                if (v27) {
                  continue;
                }
                break;
              }
            }

            [v40 addObject:v17];
            uint64_t v31 = [v17 change];
            uint64_t v32 = [v31 uuid];
            [v11 addObject:v32];

            [v41 removeObject:v17];
LABEL_29:
          }
          uint64_t v15 = [obj countByEnumeratingWithState:&v48 objects:v61 count:16];
        }
        while (v15);
      }

      id v4 = v38;
      uint64_t v13 = v39 + 1;
      uint64_t v2 = v41;
      if (v39 == v37)
      {
        uint64_t v33 = (void *)MEMORY[0x230FBD990]();
        uint64_t v34 = HMFGetOSLogHandle();
        if (os_log_type_enabled(v34, OS_LOG_TYPE_ERROR))
        {
          uint64_t v35 = HMFGetLogIdentifier();
          *(_DWORD *)long long buf = 138543618;
          id v57 = v35;
          __int16 v58 = 2112;
          uint64_t v59 = v41;
          _os_log_impl(&dword_22F52A000, v34, OS_LOG_TYPE_ERROR, "%{public}@Possible circular dependency in %@, trying to continue", buf, 0x16u);
        }
        [v40 addObjectsFromArray:v41];
        [v41 removeAllObjects];
        break;
      }
    }
    [v4 setArray:v40];

    id v1 = v36;
  }
}

void sub_23003ECA0(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

id __identifierForParentUUID(void *a1)
{
  uint64_t v1 = __identifierForParentUUID_onceToken;
  id v2 = a1;
  if (v1 != -1) {
    dispatch_once(&__identifierForParentUUID_onceToken, &__block_literal_global_1203);
  }
  id v3 = objc_alloc(MEMORY[0x263F08C38]);
  uint64_t v4 = __identifierForParentUUID_namespace;
  uint64_t v5 = [v2 UUIDString];

  uint64_t v6 = [v5 dataUsingEncoding:4];
  uint64_t v7 = (void *)[v3 initWithNamespace:v4 data:v6];

  return v7;
}

void ____identifierForParentUUID_block_invoke()
{
  uint64_t v0 = [objc_alloc(MEMORY[0x263F08C38]) initWithUUIDString:@"497A934F-F7DC-4596-BA43-9B1BBA077D55"];
  uint64_t v1 = (void *)__identifierForParentUUID_namespace;
  __identifierForParentUUID_namespace = v0;
}

void sub_230040040(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

id __HMDDeviceCapabilitiesModelCodingKeyMapping()
{
  v64[61] = *MEMORY[0x263EF8340];
  v63[0] = @"HM.keychainSync";
  unsigned __int8 v62 = NSStringFromSelector(sel_supportsKeychainSync);
  v64[0] = v62;
  v63[1] = @"HM.deviceSetup";
  __int16 v61 = NSStringFromSelector(sel_supportsDeviceSetup);
  v64[1] = v61;
  v63[2] = @"HM.keyTransferClient";
  uint64_t v60 = NSStringFromSelector(sel_supportsKeyTransferClient);
  v64[2] = v60;
  void v63[3] = @"HM.keyTransferServer";
  uint64_t v59 = NSStringFromSelector(sel_supportsKeyTransferServer);
  void v64[3] = v59;
  v63[4] = @"HM.standalone";
  __int16 v58 = NSStringFromSelector(sel_supportsStandaloneMode);
  v64[4] = v58;
  v63[5] = @"HM.cloudDataSync";
  id v57 = NSStringFromSelector(sel_supportsCloudDataSync);
  void v64[5] = v57;
  v63[6] = @"HM.WHA";
  long long v56 = NSStringFromSelector(sel_supportsWholeHouseAudio);
  v64[6] = v56;
  v63[7] = @"HM.assistantAC";
  long long v55 = NSStringFromSelector(sel_supportsAssistantAccessControl);
  v64[7] = v55;
  v63[8] = @"HM.resident";
  long long v54 = NSStringFromSelector(sel_residentCapable);
  v64[8] = v54;
  v63[9] = @"HM.remoteGateway";
  long long v53 = NSStringFromSelector(sel_remoteGatewayCapable);
  v64[9] = v53;
  v63[10] = @"HM.homeInvitation";
  long long v52 = NSStringFromSelector(sel_supportsHomeInvitation);
  v64[10] = v52;
  v63[11] = @"HM.targetControl";
  long long v51 = NSStringFromSelector(sel_supportsTargetControl);
  v64[11] = v51;
  v63[12] = @"HM.multiUser";
  long long v50 = NSStringFromSelector(sel_supportsMultiUser);
  v64[12] = v50;
  v63[13] = @"HM.homeLevelLocationServiceSetting";
  long long v49 = NSStringFromSelector(sel_supportsHomeLevelLocationServiceSetting);
  v64[13] = v49;
  v63[14] = @"HM.restart";
  long long v48 = NSStringFromSelector(sel_supportsCompanionInitiatedRestart);
  v64[14] = v48;
  v63[15] = @"HM.obliterate";
  long long v47 = NSStringFromSelector(sel_supportsCompanionInitiatedObliterate);
  v64[15] = v47;
  v63[16] = @"HM.camRec";
  long long v46 = NSStringFromSelector(sel_supportsCameraRecording);
  v64[16] = v46;
  v63[17] = @"HM.routerManagement";
  long long v45 = NSStringFromSelector(sel_supportsRouterManagement);
  v64[17] = v45;
  v63[18] = @"HM.shortcutAction";
  long long v44 = NSStringFromSelector(sel_supportsShortcutActions);
  v64[18] = v44;
  v63[19] = @"HM.mediaActions";
  uint64_t v43 = NSStringFromSelector(sel_supportsMediaActions);
  v64[19] = v43;
  v63[20] = @"HM.firmwareUpdate";
  id v42 = NSStringFromSelector(sel_supportsFirmwareUpdate);
  v64[20] = v42;
  v63[21] = @"HM.residentFirmwareUpdate";
  id v41 = NSStringFromSelector(sel_supportsResidentFirmwareUpdate);
  v64[21] = v41;
  v63[22] = @"HM.cameraActivityZones";
  uint64_t v40 = NSStringFromSelector(sel_supportsCameraActivityZones);
  v64[22] = v40;
  v63[23] = @"HM.createMusicAlarm";
  uint64_t v39 = NSStringFromSelector(sel_supportsMusicAlarm);
  v64[23] = v39;
  v63[24] = @"HM.faceClassification";
  id v38 = NSStringFromSelector(sel_supportsFaceClassification);
  v64[24] = v38;
  v63[25] = @"HM.naturalLighting";
  uint64_t v37 = NSStringFromSelector(sel_supportsNaturalLighting);
  v64[25] = v37;
  v63[26] = @"HM.IDSActivityMonitorPresence";
  id v36 = NSStringFromSelector(sel_supportsIDSActivityMonitorPresence);
  v64[26] = v36;
  v63[27] = @"HM.cameraRecordingReachabilityNotifications";
  uint64_t v35 = NSStringFromSelector(sel_supportsCameraRecordingReachabilityNotifications);
  v64[27] = v35;
  v63[28] = @"HM.announce";
  uint64_t v34 = NSStringFromSelector(sel_supportsAnnounce);
  v64[28] = v34;
  v63[29] = @"HM.soundAnalysis";
  uint64_t v33 = NSStringFromSelector(sel_supportsAudioAnalysis);
  v64[29] = v33;
  v63[30] = @"HM.supportsDropIn";
  uint64_t v32 = NSStringFromSelector(sel_supportsDropIn);
  v64[30] = v32;
  v63[31] = @"HM.ThirdPartyMusic";
  uint64_t v31 = NSStringFromSelector(sel_supportsThirdPartyMusic);
  v64[31] = v31;
  v63[32] = @"HM.preferredMediaUser";
  uint64_t v30 = NSStringFromSelector(sel_supportsPreferredMediaUser);
  v64[32] = v30;
  v63[33] = @"HM.ThreadBorderRouter";
  char v29 = NSStringFromSelector(sel_supportsThreadBorderRouter);
  v64[33] = v29;
  v63[34] = @"HM.siriEndpointSetup";
  uint64_t v28 = NSStringFromSelector(sel_supportsSiriEndpointSetup);
  v64[34] = v28;
  v63[35] = @"HM.homeHub";
  uint64_t v27 = NSStringFromSelector(sel_supportsHomeHub);
  v64[35] = v27;
  v63[36] = @"HM.lockNotificationContext";
  uint64_t v26 = NSStringFromSelector(sel_supportsLockNotificationContext);
  v64[36] = v26;
  v63[37] = @"HM.wakeOnLAN";
  id v25 = NSStringFromSelector(sel_supportsWakeOnLAN);
  v64[37] = v25;
  v63[38] = @"HM.audioReturnChannel";
  uint64_t v24 = NSStringFromSelector(sel_supportsAudioReturnChannel);
  v64[38] = v24;
  v63[39] = @"HM.walletKey";
  uint64_t v23 = NSStringFromSelector(sel_supportsWalletKey);
  v64[39] = v23;
  v63[40] = @"HM.cameraPackageDetection";
  __int16 v22 = NSStringFromSelector(sel_supportsCameraPackageDetection);
  v64[40] = v22;
  v63[41] = @"HM.coordinationDoorbellChime";
  __int16 v21 = NSStringFromSelector(sel_supportsCoordinationDoorbellChime);
  v64[41] = v21;
  v63[42] = @"HM.coordinationFreeDoorbellChime";
  id v20 = NSStringFromSelector(sel_supportsCoordinationFreeDoorbellChime);
  v64[42] = v20;
  v63[43] = @"HM.TVOSUpdateManualUpdateAvailableNotification";
  id v19 = NSStringFromSelector(sel_supportsTVOSUpdateManualUpdateAvailableNotification);
  v64[43] = v19;
  v63[44] = @"HM.accessCodes";
  uint64_t v18 = NSStringFromSelector(sel_supportsAccessCodes);
  v64[44] = v18;
  v63[45] = @"HM.CHIP";
  id v17 = NSStringFromSelector(sel_supportsCHIP);
  v64[45] = v17;
  v63[46] = @"HM.doorbellChime";
  long long v16 = NSStringFromSelector(sel_supportsDoorbellChime);
  v64[46] = v16;
  v63[47] = @"HM.userMediaSettings";
  uint64_t v15 = NSStringFromSelector(sel_supportsUserMediaSettings);
  v64[47] = v15;
  v63[48] = @"HM.unifiedMediaNotifications";
  uint64_t v14 = NSStringFromSelector(sel_supportsUnifiedMediaNotifications);
  v64[48] = v14;
  v63[49] = @"HM.managedConfigProfile";
  uint64_t v13 = NSStringFromSelector(sel_supportsManagedConfigurationProfile);
  v64[49] = v13;
  v63[50] = @"HM.captiveNetworks";
  uint64_t v12 = NSStringFromSelector(sel_supportsCaptiveNetworks);
  v64[50] = v12;
  v63[51] = @"HM.modernTransport";
  uint64_t v0 = NSStringFromSelector(sel_supportsModernTransport);
  v64[51] = v0;
  v63[52] = @"HM.residentFirstAccessoryCommunication";
  uint64_t v1 = NSStringFromSelector(sel_supportsResidentFirstAccessoryCommunication);
  v64[52] = v1;
  v63[53] = @"HM.messagedHomePodSettings";
  id v2 = NSStringFromSelector(sel_supportsMessagedHomePodSettings);
  v64[53] = v2;
  v63[54] = @"HM.customDestinationMediaAction";
  id v3 = NSStringFromSelector(sel_supportsCustomMediaApplicationDestination);
  v64[54] = v3;
  v63[55] = @"HM.threadNetworkCredentialSharing";
  uint64_t v4 = NSStringFromSelector(sel_supportsThreadNetworkCredentialSharing);
  v64[55] = v4;
  v63[56] = @"HM.matterSharedAdminPairing";
  uint64_t v5 = NSStringFromSelector(sel_supportsMatterSharedAdminPairing);
  v64[56] = v5;
  v63[57] = @"HM.appleTVRMV";
  uint64_t v6 = NSStringFromSelector(sel_supportsRMVonAppleTV);
  v64[57] = v6;
  v63[58] = @"HM.justSiri";
  uint64_t v7 = NSStringFromSelector(sel_supportsJustSiri);
  v64[58] = v7;
  v63[59] = @"HM.threadService";
  id v8 = NSStringFromSelector(sel_supportsThreadService);
  v64[59] = v8;
  v63[60] = @"HM.matterOwnerCertFetch";
  id v9 = NSStringFromSelector(sel_supportsMatterOwnerCertFetch);
  v64[60] = v9;
  id v11 = [NSDictionary dictionaryWithObjects:v64 forKeys:v63 count:61];

  return v11;
}

BOOL productSupportsKeychainSync(void *a1)
{
  id v1 = a1;
  unint64_t v2 = [v1 productPlatform];
  if (v2 > 5)
  {
LABEL_6:
    BOOL v3 = 0;
    goto LABEL_7;
  }
  if (((1 << v2) & 0x2A) == 0)
  {
    if (((1 << v2) & 0x11) == 0 && [v1 productClass] != 6)
    {
      BOOL v3 = [v1 productClass] != 4;
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  BOOL v3 = 1;
LABEL_7:

  return v3;
}

BOOL productSupportsDeviceSetup(void *a1)
{
  id v1 = a1;
  unint64_t v2 = [v1 softwareVersion];
  BOOL v3 = v2;
  if (v2) {
    [v2 operatingSystemVersion];
  }

  uint64_t v4 = [v1 productClass];
  if (v4 == 4) {
    return HMFOperatingSystemVersionCompare() != 1;
  }
  else {
    return v4 == 6;
  }
}

BOOL productSupportsKeyTransferClient(void *a1, void *a2, void *a3)
{
  id v5 = a1;
  id v6 = a2;
  id v7 = a3;
  if ([v5 productPlatform] == 1) {
    goto LABEL_7;
  }
  id v8 = [v5 softwareVersion];
  id v9 = v8;
  if (v8)
  {
    [v8 operatingSystemVersion];
  }
  else
  {
    uint64_t v15 = 0;
    uint64_t v16 = 0;
    uint64_t v17 = 0;
  }
  long long v13 = *MEMORY[0x263F42488];
  uint64_t v14 = *(void *)(MEMORY[0x263F42488] + 16);
  uint64_t v10 = HMFOperatingSystemVersionCompare();

  if (v10 == -1) {
LABEL_7:
  }
    BOOL v11 = objc_msgSend(v5, "productPlatform", v13, v14, v15, v16, v17) == 5;
  else {
    BOOL v11 = productSupportsKeychainSync(v5);
  }

  return v11;
}

BOOL productSupportsKeyTransferServer(void *a1)
{
  id v1 = a1;
  if ([v1 productClass] == 4 && objc_msgSend(v1, "productPlatform") == 4)
  {
    unint64_t v2 = [v1 softwareVersion];
    BOOL v3 = v2;
    if (v2) {
      [v2 operatingSystemVersion];
    }
    if (HMFOperatingSystemVersionCompare() == -1)
    {
      BOOL v4 = 0;
    }
    else
    {
      id v5 = [v1 softwareVersion];
      id v6 = v5;
      if (v5) {
        [v5 operatingSystemVersion];
      }
      BOOL v4 = HMFOperatingSystemVersionCompare() == -1;
    }
  }
  else
  {
    BOOL v4 = 0;
  }

  return v4;
}

uint64_t productSupportsCloudDataSync(void *a1)
{
  id v1 = a1;
  unint64_t v2 = [v1 softwareVersion];
  BOOL v3 = v2;
  if (v2) {
    [v2 operatingSystemVersion];
  }

  uint64_t v4 = 1;
  switch([v1 productPlatform])
  {
    case 1:
    case 3:
    case 5:
      break;
    case 2:
      BOOL v5 = [v1 productClass] == 4;
      goto LABEL_7;
    case 4:
      BOOL v5 = HMFOperatingSystemVersionCompare() == 1;
LABEL_7:
      uint64_t v4 = !v5;
      break;
    default:
      uint64_t v4 = 0;
      break;
  }

  return v4;
}

BOOL productSupportsWholeHouseAudio(void *a1)
{
  id v1 = a1;
  unint64_t v2 = [v1 softwareVersion];
  BOOL v3 = v2;
  if (v2) {
    [v2 operatingSystemVersion];
  }

  uint64_t v4 = [v1 productClass];
  return (v4 == 6 || v4 == 4) && HMFOperatingSystemVersionCompare() != 1;
}

BOOL productSupportsAssistantAccessControl(void *a1)
{
  id v1 = a1;
  unint64_t v2 = [v1 softwareVersion];
  BOOL v3 = v2;
  if (v2) {
    [v2 operatingSystemVersion];
  }

  uint64_t v4 = [v1 productClass];
  return v4 == 6 && HMFOperatingSystemVersionCompare() != 1;
}

BOOL productIsResidentCapable(void *a1)
{
  id v1 = a1;
  unint64_t v2 = [v1 softwareVersion];
  BOOL v3 = v2;
  if (v2) {
    [v2 operatingSystemVersion];
  }

  uint64_t v4 = [v1 productClass];
  if (v4 == 4) {
    return HMFOperatingSystemVersionCompare() != 1;
  }
  else {
    return v4 == 6;
  }
}

BOOL productSupportsHomeInvitation(void *a1)
{
  id v1 = a1;
  BOOL v2 = 1;
  switch([v1 productPlatform])
  {
    case 1:
    case 5:
      break;
    case 2:
      if ([v1 productClass] == 6) {
        goto LABEL_2;
      }
      BOOL v2 = [v1 productClass] != 4;
      break;
    default:
LABEL_2:
      BOOL v2 = 0;
      break;
  }

  return v2;
}

BOOL productSupportsTargetControl(void *a1)
{
  id v1 = a1;
  if ([v1 productClass] == 4)
  {
    BOOL v2 = [v1 softwareVersion];
    BOOL v3 = v2;
    if (v2) {
      [v2 operatingSystemVersion];
    }

    BOOL v4 = HMFOperatingSystemVersionCompare() != 1;
  }
  else
  {
    BOOL v4 = 0;
  }

  return v4;
}

BOOL productSupportsMultiUser(void *a1)
{
  id v1 = a1;
  BOOL v2 = [v1 softwareVersion];
  BOOL v3 = v2;
  if (v2) {
    [v2 operatingSystemVersion];
  }

  uint64_t v4 = [v1 productClass];
  return (v4 == 6 || v4 == 4) && HMFOperatingSystemVersionCompare() != 1;
}

BOOL productSupportsHomeLevelLocationServiceSetting(void *a1)
{
  id v1 = a1;
  uint64_t v2 = [v1 productPlatform];
  uint64_t v3 = [v1 productClass];
  uint64_t v4 = [v1 softwareVersion];

  if (v4) {
    [v4 operatingSystemVersion];
  }

  BOOL result = 0;
  if (v2 == 4 && v3 == 6) {
    return HMFOperatingSystemVersionCompare() != 1;
  }
  return result;
}

BOOL productSupportsCompanionInitiatedRestart(void *a1)
{
  id v1 = a1;
  uint64_t v2 = [v1 softwareVersion];
  uint64_t v3 = v2;
  if (v2) {
    [v2 operatingSystemVersion];
  }

  uint64_t v4 = [v1 productClass];
  return v4 == 6 && HMFOperatingSystemVersionCompare() != 1;
}

BOOL productSupportsCompanionInitiatedObliterate(void *a1)
{
  id v1 = a1;
  uint64_t v2 = [v1 softwareVersion];
  uint64_t v3 = v2;
  if (v2) {
    [v2 operatingSystemVersion];
  }

  uint64_t v4 = [v1 productClass];
  return v4 == 6 && HMFOperatingSystemVersionCompare() != 1;
}

BOOL productSupportsCameraRecording(void *a1)
{
  id v1 = a1;
  uint64_t v2 = [v1 productPlatform];
  unint64_t v3 = [v1 productClass];
  uint64_t v4 = [v1 softwareVersion];

  if (v4) {
    [v4 operatingSystemVersion];
  }

  BOOL result = 0;
  if (v3 <= 6 && ((1 << v3) & 0x58) != 0) {
    return (v2 == 2 || v2 == 4) && HMFOperatingSystemVersionCompare() != 1;
  }
  return result;
}

BOOL productSupportsRouterManagement(void *a1)
{
  id v1 = a1;
  if (!productIsResidentCapable(v1))
  {
LABEL_8:
    BOOL v6 = 0;
    goto LABEL_10;
  }
  uint64_t v2 = [v1 productPlatform];
  unint64_t v3 = [v1 productClass];
  uint64_t v4 = [v1 softwareVersion];
  BOOL v5 = v4;
  if (v4) {
    [v4 operatingSystemVersion];
  }

  BOOL v6 = 0;
  if (v3 <= 6 && ((1 << v3) & 0x58) != 0)
  {
    if (v2 == 4 || v2 == 2)
    {
      BOOL v6 = HMFOperatingSystemVersionCompare() != 1;
      goto LABEL_10;
    }
    goto LABEL_8;
  }
LABEL_10:

  return v6;
}

BOOL productSupportsShortcutActions(void *a1)
{
  id v1 = a1;
  uint64_t v2 = [v1 softwareVersion];
  unint64_t v3 = v2;
  if (v2) {
    [v2 operatingSystemVersion];
  }

  uint64_t v4 = [v1 productPlatform];
  BOOL result = 1;
  switch(v4)
  {
    case 1:
    case 2:
    case 4:
      BOOL result = HMFOperatingSystemVersionCompare() != 1;
      break;
    case 5:
      return result;
    default:
      BOOL result = 0;
      break;
  }
  return result;
}

BOOL productSupportsMediaActions(void *a1)
{
  id v1 = a1;
  uint64_t v2 = [v1 softwareVersion];
  unint64_t v3 = v2;
  if (v2) {
    [v2 operatingSystemVersion];
  }

  uint64_t v4 = [v1 productPlatform];
  BOOL result = 1;
  switch(v4)
  {
    case 1:
    case 2:
    case 3:
    case 4:
      BOOL result = HMFOperatingSystemVersionCompare() != 1;
      break;
    case 5:
      return result;
    default:
      BOOL result = 0;
      break;
  }
  return result;
}

BOOL productSupportsFirmwareUpdate(void *a1)
{
  id v1 = a1;
  uint64_t v2 = [v1 productPlatform];
  uint64_t v3 = [v1 productClass];
  uint64_t v4 = [v1 softwareVersion];
  BOOL v5 = v4;
  if (v4) {
    [v4 operatingSystemVersion];
  }

  if ([v1 productPlatform] == 1)
  {
LABEL_4:
    BOOL v6 = HMFOperatingSystemVersionCompare() != 1;
  }
  else
  {
    BOOL v6 = 0;
    switch(v3)
    {
      case 1:
      case 3:
        if (v2 == 2) {
          goto LABEL_4;
        }
        goto LABEL_9;
      case 4:
      case 6:
        if (v2 == 4) {
          goto LABEL_4;
        }
LABEL_9:
        BOOL v6 = 0;
        break;
      case 11:
        BOOL v6 = 1;
        break;
      default:
        break;
    }
  }

  return v6;
}

BOOL productSupportsResidentFirmwareUpdate(void *a1)
{
  id v1 = a1;
  uint64_t v2 = [v1 productPlatform];
  uint64_t v3 = [v1 productClass];
  uint64_t v4 = [v1 softwareVersion];

  if (v4) {
    [v4 operatingSystemVersion];
  }

  return (v3 | 2) == 6 && v2 == 4 && HMFOperatingSystemVersionCompare() != 1;
}

BOOL productSupportsCameraActivityZones(void *a1)
{
  id v1 = a1;
  uint64_t v2 = [v1 softwareVersion];
  uint64_t v3 = v2;
  if (v2) {
    [v2 operatingSystemVersion];
  }

  uint64_t v4 = [v1 productPlatform];
  uint64_t v5 = [v1 productClass];

  if (v5 == 6 || v5 == 4)
  {
    if (v4 == 4) {
      return HMFOperatingSystemVersionCompare() != 1;
    }
  }
  else if (v5 == 3 && v4 == 2)
  {
    return HMFOperatingSystemVersionCompare() != 1;
  }
  return 0;
}

BOOL productSupportsMusicAlarm(void *a1)
{
  id v1 = a1;
  uint64_t v2 = [v1 softwareVersion];
  uint64_t v3 = v2;
  if (v2) {
    [v2 operatingSystemVersion];
  }

  uint64_t v4 = [v1 productClass];
  return v4 == 6 && HMFOperatingSystemVersionCompare() != 1;
}

BOOL productSupportsAnnounce(void *a1)
{
  id v1 = a1;
  uint64_t v2 = [v1 softwareVersion];
  uint64_t v3 = v2;
  if (v2) {
    [v2 operatingSystemVersion];
  }

  uint64_t v4 = [v1 productPlatform];
  uint64_t v5 = [v1 productClass];

  BOOL result = 0;
  switch(v5)
  {
    case 1:
    case 2:
    case 3:
      if (v4 != 2) {
        goto LABEL_10;
      }
      goto LABEL_9;
    case 5:
      if (v4 == 3) {
        goto LABEL_9;
      }
      goto LABEL_10;
    case 6:
      if (v4 == 4) {
LABEL_9:
      }
        BOOL result = HMFOperatingSystemVersionCompare() != 1;
      else {
LABEL_10:
      }
        BOOL result = 0;
      break;
    case 11:
      BOOL result = 1;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t productSupportsAudioAnalysis(void *a1, void *a2)
{
  id v3 = a2;
  long long v11 = 0uLL;
  id v4 = a1;
  uint64_t v5 = [v4 softwareVersion];
  BOOL v6 = v5;
  if (v5) {
    [v5 operatingSystemVersion];
  }
  else {
    long long v11 = 0uLL;
  }

  uint64_t v7 = [v4 productPlatform];
  uint64_t v8 = [v4 productClass];

  uint64_t v9 = 0;
  switch(v8)
  {
    case 1:
    case 2:
    case 3:
      if (v7 != 2) {
        goto LABEL_11;
      }
      goto LABEL_8;
    case 5:
      if (v7 != 3) {
        goto LABEL_11;
      }
LABEL_8:
      uint64_t v9 = HMFOperatingSystemVersionCompare() != 1;
      break;
    case 6:
      if (v7 == 4 && HMFOperatingSystemVersionCompare() != 1) {
        uint64_t v9 = objc_msgSend(v3, "homeSafetySecurityEnabled", v11, 0);
      }
      else {
LABEL_11:
      }
        uint64_t v9 = 0;
      break;
    case 11:
      uint64_t v9 = 1;
      break;
    default:
      break;
  }

  return v9;
}

uint64_t productSupportsDropIn(void *a1, void *a2)
{
  id v3 = a2;
  long long v11 = 0uLL;
  id v4 = a1;
  uint64_t v5 = [v4 softwareVersion];
  BOOL v6 = v5;
  if (v5) {
    [v5 operatingSystemVersion];
  }
  else {
    long long v11 = 0uLL;
  }

  uint64_t v7 = [v4 productPlatform];
  uint64_t v8 = [v4 productClass];

  if ((unint64_t)(v8 - 1) < 3)
  {
    if (v7 == 2) {
      goto LABEL_13;
    }
    goto LABEL_14;
  }
  if (v8 == 5)
  {
    if (v7 == 3)
    {
LABEL_13:
      uint64_t v9 = HMFOperatingSystemVersionCompare() != 1;
      goto LABEL_15;
    }
LABEL_14:
    uint64_t v9 = 0;
    goto LABEL_15;
  }
  if (v8 != 6 || v7 != 4 || HMFOperatingSystemVersionCompare() == 1) {
    goto LABEL_14;
  }
  uint64_t v9 = objc_msgSend(v3, "homeSafetySecurityEnabled", v11, 0);
LABEL_15:

  return v9;
}

BOOL productSupportsThirdPartyMusic(void *a1)
{
  id v1 = a1;
  uint64_t v2 = [v1 softwareVersion];
  id v3 = v2;
  if (v2) {
    [v2 operatingSystemVersion];
  }

  uint64_t v4 = [v1 productPlatform];
  uint64_t v5 = [v1 productClass];

  BOOL result = 0;
  if (v5 == 6 && v4 == 4) {
    return HMFOperatingSystemVersionCompare() != 1;
  }
  return result;
}

BOOL productSupportsPreferredMediaUser(void *a1)
{
  id v1 = a1;
  uint64_t v2 = [v1 softwareVersion];
  id v3 = v2;
  if (v2) {
    [v2 operatingSystemVersion];
  }

  uint64_t v4 = [v1 productPlatform];
  uint64_t v5 = [v1 productClass];

  BOOL result = 0;
  if (v5 == 6 && v4 == 4) {
    return HMFOperatingSystemVersionCompare() != 1;
  }
  return result;
}

BOOL productSupportsUserMediaSettings(void *a1)
{
  id v1 = a1;
  uint64_t v2 = [v1 softwareVersion];
  id v3 = v2;
  if (v2) {
    [v2 operatingSystemVersion];
  }

  uint64_t v4 = [v1 productPlatform];
  uint64_t v5 = [v1 productClass];

  BOOL result = 0;
  if (v5 == 6 && v4 == 4) {
    return HMFOperatingSystemVersionCompare() != 1;
  }
  return result;
}

BOOL productSupportsCoordinationDoorbellChime(void *a1)
{
  id v1 = a1;
  uint64_t v2 = [v1 softwareVersion];
  id v3 = v2;
  if (v2) {
    [v2 operatingSystemVersion];
  }

  uint64_t v4 = [v1 productPlatform];
  uint64_t v5 = [v1 productClass];

  BOOL result = 0;
  if (v5 == 6 && v4 == 4) {
    return HMFOperatingSystemVersionCompare() != 1;
  }
  return result;
}

BOOL productSupportsCoordinationFreeDoorbellChime(void *a1)
{
  id v1 = a1;
  uint64_t v2 = [v1 softwareVersion];
  id v3 = v2;
  if (v2) {
    [v2 operatingSystemVersion];
  }

  uint64_t v4 = [v1 productPlatform];
  uint64_t v5 = [v1 productClass];

  BOOL result = 0;
  if (v5 == 6 && v4 == 4) {
    return HMFOperatingSystemVersionCompare() != 1;
  }
  return result;
}

BOOL productSupportsSiriEndpointSetup(void *a1)
{
  id v1 = a1;
  uint64_t v2 = [v1 softwareVersion];
  id v3 = v2;
  if (v2) {
    [v2 operatingSystemVersion];
  }

  uint64_t v4 = [v1 productPlatform];
  uint64_t v5 = [v1 productClass];

  return (v5 | 2) == 6 && v4 == 4 && HMFOperatingSystemVersionCompare() != 1;
}

BOOL productSupportsHomeHub(void *a1, void *a2)
{
  id v3 = a2;
  id v4 = a1;
  uint64_t v5 = [v4 softwareVersion];
  BOOL v6 = v5;
  if (v5) {
    [v5 operatingSystemVersion];
  }

  uint64_t v7 = [v4 productPlatform];
  uint64_t v8 = [v4 productClass];

  if (v8 == 6)
  {
    int v9 = [v3 supportsSiriHub];
    BOOL v10 = 0;
    if (v7 == 4 && v9) {
      BOOL v10 = HMFOperatingSystemVersionCompare() != 1;
    }
  }
  else
  {
    BOOL v10 = 0;
  }

  return v10;
}

BOOL productSupportsWakeOnLAN(void *a1)
{
  id v1 = a1;
  uint64_t v2 = [v1 softwareVersion];
  id v3 = v2;
  if (v2) {
    [v2 operatingSystemVersion];
  }

  uint64_t v4 = [v1 productPlatform];
  uint64_t v5 = [v1 productClass];

  BOOL result = 0;
  switch(v5)
  {
    case 1:
    case 3:
      if (v4 != 2) {
        goto LABEL_8;
      }
      goto LABEL_7;
    case 4:
    case 6:
      if (v4 == 4) {
LABEL_7:
      }
        BOOL result = HMFOperatingSystemVersionCompare() != 1;
      else {
LABEL_8:
      }
        BOOL result = 0;
      break;
    default:
      return result;
  }
  return result;
}

BOOL productSupportsLockNotificationContext(void *a1)
{
  id v1 = a1;
  uint64_t v2 = [v1 softwareVersion];
  id v3 = v2;
  if (v2) {
    [v2 operatingSystemVersion];
  }

  uint64_t v4 = [v1 productPlatform];
  uint64_t v5 = [v1 productClass];

  if (v5 == 6 || v5 == 4)
  {
    if (v4 == 4) {
      return HMFOperatingSystemVersionCompare() != 1;
    }
  }
  else if (v5 == 3 && v4 == 2)
  {
    return HMFOperatingSystemVersionCompare() != 1;
  }
  return 0;
}

uint64_t productSupportsAudioReturnChannel(void *a1, void *a2)
{
  id v3 = a2;
  if ([a1 productClass] == 6) {
    uint64_t v4 = [v3 supportsReceivingARCStreamOverAirPlay];
  }
  else {
    uint64_t v4 = 0;
  }

  return v4;
}

BOOL productSupportsUnifiedMediaNotifications(void *a1)
{
  id v1 = a1;
  uint64_t v2 = [v1 softwareVersion];
  id v3 = v2;
  if (v2) {
    [v2 operatingSystemVersion];
  }

  uint64_t v4 = [v1 productPlatform];
  uint64_t v5 = [v1 productClass];

  return (v5 | 2) == 6 && v4 == 4 && HMFOperatingSystemVersionCompare() != 1;
}

BOOL productSupportsCaptiveNetworks(void *a1)
{
  id v1 = a1;
  uint64_t v2 = [v1 softwareVersion];
  id v3 = v2;
  if (v2) {
    [v2 operatingSystemVersion];
  }

  uint64_t v4 = [v1 productPlatform];
  uint64_t v5 = [v1 productClass];

  BOOL result = 0;
  if (v5 == 6 && v4 == 4) {
    return HMFOperatingSystemVersionCompare() != 1;
  }
  return result;
}

BOOL productSupportsResidentFirstAccessoryCommunication(void *a1)
{
  id v1 = a1;
  uint64_t v2 = [v1 softwareVersion];
  id v3 = v2;
  if (v2) {
    [v2 operatingSystemVersion];
  }

  uint64_t v4 = [v1 productPlatform];
  unint64_t v5 = [v1 productClass];

  BOOL result = 0;
  if (v5 <= 6 && ((1 << v5) & 0x58) != 0) {
    return (v4 == 2 || v4 == 4) && HMFOperatingSystemVersionCompare() != 1;
  }
  return result;
}

BOOL productSupportsMessagedHomePodSettings(void *a1, void *a2)
{
  id v3 = a2;
  id v4 = a1;
  unint64_t v5 = [v4 softwareVersion];
  BOOL v6 = v5;
  if (v5) {
    [v5 operatingSystemVersion];
  }

  uint64_t v7 = [v4 productPlatform];
  uint64_t v8 = [v4 productClass];

  BOOL v9 = 0;
  if (v8 == 6 && v7 == 4)
  {
    BOOL v10 = [[HMDHomeKitVersion alloc] initWithVersionString:@"8.0"];
    BOOL v9 = [(HMDHomeKitVersion *)v10 compare:v3] != 1 && HMFOperatingSystemVersionCompare() != 1;
  }
  return v9;
}

BOOL productSupportsCustomMediaApplicationDestination(void *a1)
{
  id v1 = a1;
  uint64_t v2 = [v1 softwareVersion];
  id v3 = v2;
  if (v2) {
    [v2 operatingSystemVersion];
  }

  uint64_t v4 = [v1 productPlatform];
  uint64_t v5 = [v1 productClass];

  return (v5 | 2) == 6 && v4 == 4 && HMFOperatingSystemVersionCompare() != 1;
}

BOOL productSupportsThreadNetworkCredentialSharing(void *a1, void *a2, void *a3)
{
  id v5 = a3;
  id v6 = a2;
  id v7 = a1;
  uint64_t v8 = [v7 softwareVersion];
  BOOL v9 = v8;
  if (v8) {
    [v8 operatingSystemVersion];
  }

  uint64_t v10 = [v7 productPlatform];
  uint64_t v11 = [v7 productClass];
  BOOL IsResidentCapable = productIsResidentCapable(v7);

  if (IsResidentCapable)
  {
    if (v11 == 6 || v11 == 4)
    {
      if (v10 == 4) {
        return HMFOperatingSystemVersionCompare() != 1;
      }
    }
    else if (v11 == 3 && v10 == 2)
    {
      return HMFOperatingSystemVersionCompare() != 1;
    }
  }
  return 0;
}

BOOL productSupportsMatterSharedAdminPairing(void *a1, void *a2, void *a3)
{
  id v5 = a3;
  id v6 = a2;
  id v7 = a1;
  uint64_t v8 = [v7 softwareVersion];
  BOOL v9 = v8;
  if (v8) {
    [v8 operatingSystemVersion];
  }

  uint64_t v10 = [v7 productPlatform];
  uint64_t v11 = [v7 productClass];
  BOOL IsResidentCapable = productIsResidentCapable(v7);

  if (IsResidentCapable)
  {
    if (v11 == 6 || v11 == 4)
    {
      if (v10 == 4) {
        return HMFOperatingSystemVersionCompare() != 1;
      }
    }
    else if (v11 == 3 && v10 == 2)
    {
      return HMFOperatingSystemVersionCompare() != 1;
    }
  }
  return 0;
}

uint64_t productSupportsRMVonAppleTV(void *a1)
{
  id v1 = a1;
  uint64_t v2 = [v1 softwareVersion];
  id v3 = v2;
  if (v2) {
    [v2 operatingSystemVersion];
  }

  uint64_t v4 = [v1 productPlatform];
  uint64_t v5 = [v1 productClass];

  uint64_t result = 0;
  if (v5 == 4 && v4 == 4)
  {
    if (HMFOperatingSystemVersionCompare() == 1) {
      return 0;
    }
    else {
      return _os_feature_enabled_impl();
    }
  }
  return result;
}

BOOL productSupportsJustSiri(void *a1)
{
  id v1 = a1;
  uint64_t v2 = [v1 softwareVersion];
  id v3 = v2;
  if (v2) {
    [v2 operatingSystemVersion];
  }

  uint64_t v4 = [v1 productPlatform];
  uint64_t v5 = [v1 productClass];

  BOOL result = 0;
  if (v5 == 6 && v4 == 4) {
    return HMFOperatingSystemVersionCompare() != 1;
  }
  return result;
}

BOOL productSupportsMatterOwnerCertFetch(void *a1, void *a2, void *a3)
{
  id v5 = a3;
  id v6 = a2;
  id v7 = a1;
  uint64_t v8 = [v7 softwareVersion];
  BOOL v9 = v8;
  if (v8) {
    [v8 operatingSystemVersion];
  }

  uint64_t v10 = [v7 productPlatform];
  uint64_t v11 = [v7 productClass];
  BOOL IsResidentCapable = productIsResidentCapable(v7);

  if (IsResidentCapable)
  {
    if (v11 == 6 || v11 == 4)
    {
      if (v10 == 4) {
        return HMFOperatingSystemVersionCompare() != 1;
      }
    }
    else if (v11 == 3 && v10 == 2)
    {
      return HMFOperatingSystemVersionCompare() != 1;
    }
  }
  return 0;
}

void sub_23004CE94(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void __HMDWatchManagerUpdateWithConnectedDevices(void *a1, void *a2)
{
  uint64_t v66 = *MEMORY[0x263EF8340];
  id v38 = a1;
  id v39 = a2;
  if (v38)
  {
    id v3 = (void *)MEMORY[0x230FBD990]();
    uint64_t v4 = (os_unfair_lock_s *)v38;
    id v5 = HMFGetOSLogHandle();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
    {
      id v6 = HMFGetLogIdentifier();
      *(_DWORD *)long long buf = 138543618;
      uint64_t v63 = v6;
      __int16 v64 = 2112;
      id v65 = v39;
      _os_log_impl(&dword_22F52A000, v5, OS_LOG_TYPE_INFO, "%{public}@Processing connected devices: %@", buf, 0x16u);
    }
    uint64_t v40 = objc_msgSend(MEMORY[0x263EFF9C0], "setWithCapacity:", objc_msgSend(v39, "count"));
    long long v53 = 0u;
    long long v54 = 0u;
    long long v51 = 0u;
    long long v52 = 0u;
    id v7 = v39;
    uint64_t v8 = [v7 countByEnumeratingWithState:&v51 objects:v61 count:16];
    if (v8)
    {
      uint64_t v9 = *(void *)v52;
      do
      {
        for (uint64_t i = 0; i != v8; ++i)
        {
          if (*(void *)v52 != v9) {
            objc_enumerationMutation(v7);
          }
          uint64_t v11 = *(void *)(*((void *)&v51 + 1) + 8 * i);
          if (+[HMDWatchManager isCompatibleWatchDevice:v11])
          {
            uint64_t v12 = [[HMDDevice alloc] initWithService:*(void *)&v4[10]._os_unfair_lock_opaque device:v11];
            if (v12) {
              [v40 addObject:v12];
            }
          }
        }
        uint64_t v8 = [v7 countByEnumeratingWithState:&v51 objects:v61 count:16];
      }
      while (v8);
    }

    os_unfair_lock_lock_with_options();
    uint64_t v37 = [MEMORY[0x263EFFA08] setWithArray:*(void *)&v4[8]._os_unfair_lock_opaque];
    uint64_t v13 = [v40 allObjects];
    uint64_t v14 = *(void **)&v4[8]._os_unfair_lock_opaque;
    *(void *)&v4[8]._os_unfair_lock_opaque = v13;

    LOBYTE(v4[6]._os_unfair_lock_opaque) = [v40 count] != 0;
    os_unfair_lock_unlock(v4 + 2);
    objc_msgSend(v37, "hmf_removedObjectsFromSet:", v40);
    long long v49 = 0u;
    long long v50 = 0u;
    long long v47 = 0u;
    long long v48 = 0u;
    id obj = (id)objc_claimAutoreleasedReturnValue();
    uint64_t v15 = [obj countByEnumeratingWithState:&v47 objects:v60 count:16];
    if (v15)
    {
      uint64_t v16 = *(void *)v48;
      do
      {
        for (uint64_t j = 0; j != v15; ++j)
        {
          if (*(void *)v48 != v16) {
            objc_enumerationMutation(obj);
          }
          uint64_t v18 = *(void **)(*((void *)&v47 + 1) + 8 * j);
          id v19 = (void *)MEMORY[0x230FBD990]();
          id v20 = v4;
          __int16 v21 = HMFGetOSLogHandle();
          if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT))
          {
            __int16 v22 = HMFGetLogIdentifier();
            *(_DWORD *)long long buf = 138543618;
            uint64_t v63 = v22;
            __int16 v64 = 2112;
            id v65 = v18;
            _os_log_impl(&dword_22F52A000, v21, OS_LOG_TYPE_DEFAULT, "%{public}@Removed connected device: %@", buf, 0x16u);
          }
          uint64_t v23 = +[HMDWatchConnectivityLogEventManager sharedInstance];
          [v23 incrementWatchRemovedNotificationCount];

          uint64_t v24 = [MEMORY[0x263F08A00] defaultCenter];
          __int16 v58 = @"HMDDeviceNotificationKey";
          uint64_t v59 = v18;
          id v25 = [NSDictionary dictionaryWithObjects:&v59 forKeys:&v58 count:1];
          [v24 postNotificationName:@"HMDWatcherManagerWatchDisconnectedNotification" object:v20 userInfo:v25];
        }
        uint64_t v15 = [obj countByEnumeratingWithState:&v47 objects:v60 count:16];
      }
      while (v15);
    }

    objc_msgSend(v37, "hmf_addedObjectsFromSet:", v40);
    long long v45 = 0u;
    long long v46 = 0u;
    long long v43 = 0u;
    long long v44 = 0u;
    id obja = (id)objc_claimAutoreleasedReturnValue();
    uint64_t v26 = [obja countByEnumeratingWithState:&v43 objects:v57 count:16];
    if (v26)
    {
      uint64_t v27 = *(void *)v44;
      do
      {
        for (uint64_t k = 0; k != v26; ++k)
        {
          if (*(void *)v44 != v27) {
            objc_enumerationMutation(obja);
          }
          char v29 = *(void **)(*((void *)&v43 + 1) + 8 * k);
          uint64_t v30 = (void *)MEMORY[0x230FBD990]();
          uint64_t v31 = v4;
          uint64_t v32 = HMFGetOSLogHandle();
          if (os_log_type_enabled(v32, OS_LOG_TYPE_DEFAULT))
          {
            uint64_t v33 = HMFGetLogIdentifier();
            *(_DWORD *)long long buf = 138543618;
            uint64_t v63 = v33;
            __int16 v64 = 2112;
            id v65 = v29;
            _os_log_impl(&dword_22F52A000, v32, OS_LOG_TYPE_DEFAULT, "%{public}@Added connected device: %@", buf, 0x16u);
          }
          uint64_t v34 = +[HMDWatchConnectivityLogEventManager sharedInstance];
          [v34 incrementWatchAddedNotificationCount];

          uint64_t v35 = [MEMORY[0x263F08A00] defaultCenter];
          long long v55 = @"HMDDeviceNotificationKey";
          long long v56 = v29;
          id v36 = [NSDictionary dictionaryWithObjects:&v56 forKeys:&v55 count:1];
          [v35 postNotificationName:@"HMDWatcherManagerWatchConnectedNotification" object:v31 userInfo:v36];
        }
        uint64_t v26 = [obja countByEnumeratingWithState:&v43 objects:v57 count:16];
      }
      while (v26);
    }
  }
}

void sub_23004DBA8(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_23004DF44(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_230054F5C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_23005502C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_230058080(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_23005AD4C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_23005DA50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__219043(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__219044(uint64_t a1)
{
}

void sub_23005E3A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_230062A84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,char a33)
{
  _Block_object_dispose(&a27, 8);
  _Block_object_dispose(&a33, 8);
  _Block_object_dispose((const void *)(v33 - 176), 8);
  _Block_object_dispose((const void *)(v33 - 128), 8);
  _Unwind_Resume(a1);
}

void sub_2300644E4(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_230064554(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2300645EC(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_23006B2F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 96), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__220325(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__220326(uint64_t a1)
{
}

void sub_23006B7F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_23006C808(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_start(va, a14);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_23006D888(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_23006E224(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_23006E6D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_23006E948(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_23006EFD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_23006F254(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_23006F6FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_23006FC9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_230070748(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_230070DD0(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_230073318(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_230073810(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 144), 8);
  _Unwind_Resume(a1);
}

void sub_230073D58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_230074CD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
}

uint64_t __Block_byref_object_copy__220801(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__220802(uint64_t a1)
{
}

void sub_230075160(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_230075714(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_230075B90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_230079EDC(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 176), 8);
  _Unwind_Resume(a1);
}

void sub_23007B9A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_23007C7B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  va_start(va, a17);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_23007CFA0(_Unwind_Exception *a1)
{
}

void sub_23007D0B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_230080594(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_230080710(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void __updateClipManagerWriteAccess(void *a1, void *a2)
{
  id v3 = a2;
  id v4 = a1;
  id v5 = [v4 workQueue];
  dispatch_assert_queue_V2(v5);

  [v3 accessModeAtHome];
  LODWORD(v5) = HMIsRecordingAllowedForCameraAccessMode();
  [v3 accessModeNotAtHome];

  uint64_t v6 = v5 | HMIsRecordingAllowedForCameraAccessMode();
  id v7 = [v4 clipManager];

  [v7 setHasWriteAccess:v6];
}

void sub_23008C630(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_23008C868(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

BOOL __HMDDeviceSetupManagerIsProxSetupRunning(void *a1)
{
  uint64_t v17 = *MEMORY[0x263EF8340];
  uint64_t v1 = a1;
  uint64_t v2 = [v1 darwinNotificationProvider];
  int v3 = [v2 notifyIsValidToken:v1[3]];

  if (v3)
  {
    uint64_t v12 = 0;
    id v4 = [v1 darwinNotificationProvider];
    int v5 = [v4 notifyGetState:v1[3] state:&v12];

    if (!v5)
    {
      BOOL v10 = v12 == 1;
      goto LABEL_7;
    }
    uint64_t v6 = (void *)MEMORY[0x230FBD990]();
    id v7 = v1;
    uint64_t v8 = HMFGetOSLogHandle();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v9 = HMFGetLogIdentifier();
      *(_DWORD *)long long buf = 138543618;
      uint64_t v14 = v9;
      __int16 v15 = 1024;
      int v16 = v5;
      _os_log_impl(&dword_22F52A000, v8, OS_LOG_TYPE_DEFAULT, "%{public}@Failed to get ProxSetup state with status: %u", buf, 0x12u);
    }
  }
  BOOL v10 = 0;
LABEL_7:

  return v10;
}

void sub_23008EDF4(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 128));
  _Unwind_Resume(a1);
}

void sub_23008F288(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 160), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__223668(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__223669(uint64_t a1)
{
}

void sub_230091AC4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,id location)
{
  objc_destroyWeak(v23);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_230094B24(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_2300962EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,id location)
{
  objc_destroyWeak(v27);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_23009A110(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,id location)
{
  objc_destroyWeak(v31);
  objc_destroyWeak(v32);
  objc_destroyWeak(&location);
  objc_destroyWeak((id *)(v33 - 176));
  _Unwind_Resume(a1);
}

void sub_23009B8AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,id location)
{
  objc_destroyWeak(v30);
  objc_destroyWeak(v31);
  objc_destroyWeak(&location);
  objc_destroyWeak((id *)(v32 - 160));
  _Unwind_Resume(a1);
}

void sub_23009CB04(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,id location)
{
  objc_destroyWeak(v30);
  objc_destroyWeak(v31);
  objc_destroyWeak(&location);
  objc_destroyWeak((id *)(v32 - 160));
  _Unwind_Resume(a1);
}

void sub_23009DD68(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id ipAccessoryStageSystemCriteria()
{
  xpc_object_t v0 = xpc_dictionary_create(0, 0, 0);
  xpc_dictionary_set_string(v0, (const char *)*MEMORY[0x263EF81D0], "com.apple.homed.firmwareUpdate.ipAccessory.stage.group");
  uint64_t v1 = (const char *)*MEMORY[0x263EF81C8];
  unsigned int v2 = uint32ForPreference(@"firmwareUpdateIPAccessoryStageConcurrentLimit");
  xpc_dictionary_set_uint64(v0, v1, v2);
  xpc_dictionary_set_BOOL(v0, (const char *)*MEMORY[0x263EF82C8], 1);
  xpc_dictionary_set_string(v0, (const char *)*MEMORY[0x263EF8240], (const char *)*MEMORY[0x263EF8250]);
  xpc_dictionary_set_BOOL(v0, (const char *)*MEMORY[0x263EF8180], 1);
  return v0;
}

id bleAccessoryStageSystemCriteria()
{
  xpc_object_t v0 = xpc_dictionary_create(0, 0, 0);
  xpc_dictionary_set_string(v0, (const char *)*MEMORY[0x263EF81D0], "com.apple.homed.firmwareUpdate.bleAccessory.stage.group");
  uint64_t v1 = (const char *)*MEMORY[0x263EF81C8];
  unsigned int v2 = uint32ForPreference(@"firmwareUpdateBLEAccessoryStageConcurrentLimit");
  xpc_dictionary_set_uint64(v0, v1, v2);
  xpc_dictionary_set_BOOL(v0, (const char *)*MEMORY[0x263EF8180], 1);
  xpc_dictionary_set_BOOL(v0, (const char *)*MEMORY[0x263EF82A0], 0);
  xpc_dictionary_set_int64(v0, (const char *)*MEMORY[0x263EF81A0], 5);
  xpc_dictionary_set_int64(v0, (const char *)*MEMORY[0x263EF81C0], *MEMORY[0x263EF81F8]);
  return v0;
}

id threadAccessoryStageSystemCriteria()
{
  xpc_object_t v0 = xpc_dictionary_create(0, 0, 0);
  xpc_dictionary_set_string(v0, (const char *)*MEMORY[0x263EF81D0], "com.apple.homed.firmwareUpdate.threadAccessory.stage.group");
  uint64_t v1 = (const char *)*MEMORY[0x263EF81C8];
  unsigned int v2 = uint32ForPreference(@"firmwareUpdateThreadAccessoryStageConcurrentLimit");
  xpc_dictionary_set_uint64(v0, v1, v2);
  xpc_dictionary_set_BOOL(v0, (const char *)*MEMORY[0x263EF82C8], 1);
  xpc_dictionary_set_string(v0, (const char *)*MEMORY[0x263EF8240], (const char *)*MEMORY[0x263EF8250]);
  xpc_dictionary_set_BOOL(v0, (const char *)*MEMORY[0x263EF8180], 1);
  xpc_dictionary_set_BOOL(v0, (const char *)*MEMORY[0x263EF82A0], 0);
  xpc_dictionary_set_int64(v0, (const char *)*MEMORY[0x263EF81A0], 5);
  xpc_dictionary_set_int64(v0, (const char *)*MEMORY[0x263EF81C0], *MEMORY[0x263EF81F8]);
  return v0;
}

uint64_t uint32ForPreference(void *a1)
{
  uint64_t v1 = uint32ForPreference_onceToken;
  id v2 = a1;
  if (v1 != -1) {
    dispatch_once(&uint32ForPreference_onceToken, &__block_literal_global_163_225901);
  }
  int v3 = [MEMORY[0x263F42608] sharedPreferences];
  id v4 = [v3 preferenceForKey:v2];

  int v5 = [v4 numberValue];
  uint64_t v6 = [v5 unsignedIntValue];

  return v6;
}

uint64_t __uint32ForPreference_block_invoke()
{
  [MEMORY[0x263F42608] setDefaultValue:&unk_26E473420 forPreferenceKey:@"firmwareUpdateStageMinDelay"];
  [MEMORY[0x263F42608] setDefaultValue:&unk_26E473438 forPreferenceKey:@"firmwareUpdateStageMaxDelay"];
  [MEMORY[0x263F42608] setDefaultValue:&unk_26E473450 forPreferenceKey:@"firmwareUpdateApplyMinDelay"];
  [MEMORY[0x263F42608] setDefaultValue:&unk_26E473468 forPreferenceKey:@"firmwareUpdateApplyMaxDelay"];
  [MEMORY[0x263F42608] setDefaultValue:&unk_26E473480 forPreferenceKey:@"firmwareUpdateIPAccessoryStageConcurrentLimit"];
  [MEMORY[0x263F42608] setDefaultValue:&unk_26E473450 forPreferenceKey:@"firmwareUpdateIPAccessoryApplyConcurrentLimit"];
  [MEMORY[0x263F42608] setDefaultValue:&unk_26E473498 forPreferenceKey:@"firmwareUpdateBLEAccessoryStageConcurrentLimit"];
  [MEMORY[0x263F42608] setDefaultValue:&unk_26E4734B0 forPreferenceKey:@"firmwareUpdateBLEAccessoryApplyConcurrentLimit"];
  [MEMORY[0x263F42608] setDefaultValue:&unk_26E473498 forPreferenceKey:@"firmwareUpdateThreadAccessoryStageConcurrentLimit"];
  xpc_object_t v0 = (void *)MEMORY[0x263F42608];
  return [v0 setDefaultValue:&unk_26E473498 forPreferenceKey:@"firmwareUpdateThreadAccessoryApplyConcurrentLimit"];
}

void sub_2300B2898(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2300B69E8(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2300B7998(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id *location, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id a18, id a19, id a20)
{
}

void sub_2300B8D80(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2300B9F04(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2300BA964(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2300BB668(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

uint64_t __HMDRemoteDeviceMonitorReachable(void *a1)
{
  uint64_t v16 = *MEMORY[0x263EF8340];
  uint64_t v1 = a1;
  id v2 = v1;
  if (!v1) {
    goto LABEL_14;
  }
  if (([v1[11] isReachable] & 1) == 0)
  {
    uint64_t v6 = (void *)MEMORY[0x230FBD990]();
    id v7 = v2;
    uint64_t v8 = HMFGetOSLogHandle();
    if (!os_log_type_enabled(v8, OS_LOG_TYPE_INFO)) {
      goto LABEL_13;
    }
    uint64_t v9 = HMFGetLogIdentifier();
    int v14 = 138543362;
    __int16 v15 = v9;
    BOOL v10 = "%{public}@Considering ourselves unreachable because net monitor is unreachable";
LABEL_12:
    _os_log_impl(&dword_22F52A000, v8, OS_LOG_TYPE_INFO, v10, (uint8_t *)&v14, 0xCu);

    goto LABEL_13;
  }
  id WeakRetained = objc_loadWeakRetained(v2 + 9);
  id v4 = [WeakRetained device];

  if (!v4)
  {
    uint64_t v6 = (void *)MEMORY[0x230FBD990]();
    uint64_t v11 = v2;
    uint64_t v8 = HMFGetOSLogHandle();
    if (!os_log_type_enabled(v8, OS_LOG_TYPE_INFO)) {
      goto LABEL_13;
    }
    uint64_t v9 = HMFGetLogIdentifier();
    int v14 = 138543362;
    __int16 v15 = v9;
    BOOL v10 = "%{public}@Considering ourselves unreachable because there is no current device";
    goto LABEL_12;
  }
  if ((objc_msgSend(v2[6], "hmd_isActive") & 1) == 0)
  {
    uint64_t v6 = (void *)MEMORY[0x230FBD990]();
    uint64_t v12 = v2;
    uint64_t v8 = HMFGetOSLogHandle();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
    {
      uint64_t v9 = HMFGetLogIdentifier();
      int v14 = 138543362;
      __int16 v15 = v9;
      BOOL v10 = "%{public}@Considering ourselves unreachable because the IDSService is not active";
      goto LABEL_12;
    }
LABEL_13:

LABEL_14:
    uint64_t v5 = 0;
    goto LABEL_15;
  }
  uint64_t v5 = 1;
LABEL_15:

  return v5;
}

void sub_2300BC2F4(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2300BFCA0(_Unwind_Exception *a1)
{
}

void sub_2300C0520(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__227460(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__227461(uint64_t a1)
{
}

void sub_2300C0D20(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 176), 8);
  _Unwind_Resume(a1);
}

void sub_2300C11FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_2300C36D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,id location)
{
  objc_destroyWeak(v23);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_2300C49F0(_Unwind_Exception *a1)
{
}

uint64_t __hmiActivityZonesFromActivityZones_block_invoke(uint64_t a1, void *a2)
{
  return [a2 createHMIActivityZoneWithIsInclusion:*(unsigned __int8 *)(a1 + 32)];
}

void sub_2300CD338(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 88));
  _Unwind_Resume(a1);
}

void sub_2300CF3D0(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 56));
  _Unwind_Resume(a1);
}

id __accessoriesFromAccessoryUUIDs(void *a1, void *a2)
{
  uint64_t v19 = *MEMORY[0x263EF8340];
  id v3 = a1;
  id v4 = a2;
  uint64_t v5 = objc_msgSend(MEMORY[0x263EFF980], "arrayWithCapacity:", objc_msgSend(v3, "count"));
  long long v14 = 0u;
  long long v15 = 0u;
  long long v16 = 0u;
  long long v17 = 0u;
  id v6 = v3;
  uint64_t v7 = [v6 countByEnumeratingWithState:&v14 objects:v18 count:16];
  if (v7)
  {
    uint64_t v8 = v7;
    uint64_t v9 = *(void *)v15;
    do
    {
      for (uint64_t i = 0; i != v8; ++i)
      {
        if (*(void *)v15 != v9) {
          objc_enumerationMutation(v6);
        }
        uint64_t v11 = objc_msgSend(v4, "accessoryWithUUID:", *(void *)(*((void *)&v14 + 1) + 8 * i), (void)v14);
        if (v11) {
          [v5 addObject:v11];
        }
      }
      uint64_t v8 = [v6 countByEnumeratingWithState:&v14 objects:v18 count:16];
    }
    while (v8);
  }

  uint64_t v12 = (void *)[v5 copy];
  return v12;
}

id __displayNameForUser(void *a1)
{
  id v1 = a1;
  uint64_t v9 = 0;
  BOOL v10 = &v9;
  uint64_t v11 = 0x3032000000;
  uint64_t v12 = __Block_byref_object_copy__229783;
  uint64_t v13 = __Block_byref_object_dispose__229784;
  id v14 = 0;
  uint64_t v2 = (void *)MEMORY[0x263F424F0];
  v6[0] = MEMORY[0x263EF8330];
  v6[1] = 3221225472;
  v6[2] = ____displayNameForUser_block_invoke;
  v6[3] = &unk_264A2F0A0;
  id v3 = v1;
  id v7 = v3;
  uint64_t v8 = &v9;
  [v2 activityWithName:@"User.Name" block:v6];
  id v4 = (id)v10[5];

  _Block_object_dispose(&v9, 8);
  return v4;
}

void sub_2300DA298(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__229783(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__229784(uint64_t a1)
{
}

void ____displayNameForUser_block_invoke(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) accountHandle];
  id v12 = [v2 contact];

  id v3 = v12;
  if (v12
    || ([*(id *)(a1 + 32) account],
        id v4 = objc_claimAutoreleasedReturnValue(),
        [v4 contact],
        id v13 = (id)objc_claimAutoreleasedReturnValue(),
        v4,
        (id v3 = v13) != 0))
  {
    id v14 = v3;
    uint64_t v5 = [MEMORY[0x263EFEA20] stringFromContact:v3 style:0];
    if (v5)
    {
      uint64_t v6 = *(void *)(*(void *)(a1 + 40) + 8);
      id v7 = *(void **)(v6 + 40);
      *(void *)(v6 + 40) = v5;
      goto LABEL_7;
    }
  }
  else
  {
    id v14 = 0;
  }
  id v7 = +[HMDAccountHandleFormatter defaultFormatter];
  uint64_t v8 = [*(id *)(a1 + 32) accountHandle];
  uint64_t v9 = [v7 stringForObjectValue:v8];
  uint64_t v10 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v11 = *(void **)(v10 + 40);
  *(void *)(v10 + 40) = v9;

LABEL_7:
}

void sub_2300E0B44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_2300E699C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void __registerForAccountNotifications(void *a1)
{
  uint64_t v25 = *MEMORY[0x263EF8340];
  id v1 = a1;
  if (v1)
  {
    uint64_t v2 = [MEMORY[0x263F08A00] defaultCenter];
    [v2 removeObserver:v1 name:@"HMDAccountRegistryAddedAccountNotification" object:0];

    id v3 = [MEMORY[0x263F08A00] defaultCenter];
    [v3 removeObserver:v1 name:@"HMDAccountRegistryRemovedAccountNotification" object:0];

    id v4 = [MEMORY[0x263F08A00] defaultCenter];
    [v4 removeObserver:v1 name:@"HMDAppleAccountManagerAccountModifiedNotification" object:0];

    uint64_t v5 = [v1 accountHandle];
    if (v5)
    {
      unsigned __int8 v20 = 0;
      uint64_t v6 = +[HMDAccountRegistry sharedRegistry];
      id v7 = [v6 accountForHandle:v5 exists:&v20];

      int v8 = v20;
      uint64_t v9 = (void *)MEMORY[0x230FBD990]();
      id v10 = v1;
      uint64_t v11 = HMFGetOSLogHandle();
      BOOL v12 = os_log_type_enabled(v11, OS_LOG_TYPE_DEBUG);
      if (v8)
      {
        if (v12)
        {
          id v13 = HMFGetLogIdentifier();
          id v14 = [v7 shortDescription];
          *(_DWORD *)long long buf = 138543618;
          __int16 v22 = v13;
          __int16 v23 = 2112;
          uint64_t v24 = v14;
          _os_log_impl(&dword_22F52A000, v11, OS_LOG_TYPE_DEBUG, "%{public}@Registering for notifications for account: %@", buf, 0x16u);
        }
        long long v15 = [MEMORY[0x263F08A00] defaultCenter];
        long long v16 = sel___handleRemovedAccount_;
        long long v17 = +[HMDAccountRegistry sharedRegistry];
        uint64_t v18 = @"HMDAccountRegistryRemovedAccountNotification";
      }
      else
      {
        if (v12)
        {
          uint64_t v19 = HMFGetLogIdentifier();
          *(_DWORD *)long long buf = 138543362;
          __int16 v22 = v19;
          _os_log_impl(&dword_22F52A000, v11, OS_LOG_TYPE_DEBUG, "%{public}@Registering for account notifications", buf, 0xCu);
        }
        long long v15 = [MEMORY[0x263F08A00] defaultCenter];
        long long v16 = sel___handleAddedAccount_;
        long long v17 = +[HMDAccountRegistry sharedRegistry];
        uint64_t v18 = @"HMDAccountRegistryAddedAccountNotification";
      }
      [v15 addObserver:v10 selector:v16 name:v18 object:v17];
    }
  }
}

void __handleUpdatedAccount(void *a1)
{
  if (a1)
  {
    id v1 = a1;
    [v1 deregisterIdentity];
    [v1 registerIdentity];
  }
}

void __updateWithAccount(void *a1, void *a2)
{
  uint64_t v40 = *MEMORY[0x263EF8340];
  id v3 = a1;
  id v4 = a2;
  if (v3)
  {
    uint64_t v5 = (void *)MEMORY[0x230FBD990]();
    id v6 = v3;
    id v7 = HMFGetOSLogHandle();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
    {
      int v8 = HMFGetLogIdentifier();
      uint64_t v9 = [v6 userID];
      *(_DWORD *)long long buf = 138543874;
      uint64_t v35 = v8;
      __int16 v36 = 2112;
      uint64_t v37 = v9;
      __int16 v38 = 2112;
      id v39 = v4;
      _os_log_impl(&dword_22F52A000, v7, OS_LOG_TYPE_INFO, "%{public}@Updating with account: %@ / %@", buf, 0x20u);
    }
    if (v4)
    {
      id v10 = [v6 accountHandle];
      if (v10)
      {
        uint64_t v11 = [v4 handles];
        char v12 = [v11 containsObject:v10];

        if (v12)
        {
          if ([v4 isAuthenticated])
          {
            id v13 = [v4 identifier];
            id v14 = [v6 accountIdentifier];
            char v15 = HMFEqualObjects();

            if ((v15 & 1) == 0)
            {
              long long v16 = (void *)MEMORY[0x230FBD990]();
              id v17 = v6;
              uint64_t v18 = HMFGetOSLogHandle();
              if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
              {
                uint64_t v19 = HMFGetLogIdentifier();
                unsigned __int8 v20 = [v17 userID];
                *(_DWORD *)long long buf = 138543874;
                uint64_t v35 = v19;
                __int16 v36 = 2112;
                uint64_t v37 = v20;
                __int16 v38 = 2112;
                id v39 = v13;
                _os_log_impl(&dword_22F52A000, v18, OS_LOG_TYPE_DEFAULT, "%{public}@Updating account identifier to: %@ / %@", buf, 0x20u);
              }
              __int16 v21 = (void *)[v17 newModelWithChangeType:2];
              [v21 setAccountIdentifier:v13];
              __int16 v22 = [v17 home];
              __int16 v23 = [v22 backingStore];
              uint64_t v24 = +[HMDBackingStoreTransactionOptions defaultXPCOptions];
              uint64_t v25 = [v23 transaction:@"userUpdateAccountIdentifier" options:v24];

              [v25 add:v21];
              v31[0] = MEMORY[0x263EF8330];
              v31[1] = 3221225472;
              v31[2] = ____updateWithAccount_block_invoke;
              v31[3] = &unk_264A2F370;
              id v32 = v17;
              id v33 = v13;
              [v25 run:v31];
            }
          }
        }
        else
        {
          uint64_t v26 = (void *)MEMORY[0x230FBD990]();
          id v27 = v6;
          uint64_t v28 = HMFGetOSLogHandle();
          if (os_log_type_enabled(v28, OS_LOG_TYPE_DEFAULT))
          {
            char v29 = HMFGetLogIdentifier();
            uint64_t v30 = [v27 userID];
            *(_DWORD *)long long buf = 138543874;
            uint64_t v35 = v29;
            __int16 v36 = 2112;
            uint64_t v37 = v30;
            __int16 v38 = 2112;
            id v39 = v4;
            _os_log_impl(&dword_22F52A000, v28, OS_LOG_TYPE_DEFAULT, "%{public}@Unable to update with account: %@ / %@", buf, 0x20u);
          }
        }
      }
    }
  }
}

void ____updateWithAccount_block_invoke(uint64_t a1, void *a2)
{
  uint64_t v18 = *MEMORY[0x263EF8340];
  id v3 = a2;
  id v4 = (void *)MEMORY[0x230FBD990]();
  id v5 = *(id *)(a1 + 32);
  id v6 = HMFGetOSLogHandle();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    id v7 = HMFGetLogIdentifier();
    uint64_t v8 = *(void *)(a1 + 40);
    uint64_t v9 = [*(id *)(a1 + 32) userID];
    int v10 = 138544130;
    uint64_t v11 = v7;
    __int16 v12 = 2112;
    uint64_t v13 = v8;
    __int16 v14 = 2112;
    char v15 = v9;
    __int16 v16 = 2112;
    id v17 = v3;
    _os_log_impl(&dword_22F52A000, v6, OS_LOG_TYPE_DEFAULT, "%{public}@Finished updating the accountIdentifier [%@] for user [%@] finished with error: %@", (uint8_t *)&v10, 0x2Au);
  }
}

void sub_2300E8458(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 128));
  _Unwind_Resume(a1);
}

void sub_2300E8B98(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_2300EABF4(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

id _userPairingIdentity(void *a1, uint64_t a2)
{
  if (a1)
  {
    id v3 = (objc_class *)MEMORY[0x263F35A78];
    id v4 = a1;
    id v5 = [v3 alloc];
    id v6 = [v4 identifier];
    id v7 = [v4 publicKey];

    uint64_t v8 = (void *)[v5 initWithIdentifier:v6 publicKey:v7 privateKey:0 permissions:(a2 & 0xFFFFFFFFFFFFFFFDLL) == 1];
  }
  else
  {
    uint64_t v8 = 0;
  }
  return v8;
}

void sub_2300EAF14(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2300EB0E8(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void ____auditAccount_block_invoke(uint64_t a1)
{
  uint64_t v26 = *MEMORY[0x263EF8340];
  uint64_t v2 = [*(id *)(a1 + 32) accountHandle];
  id v3 = (void *)MEMORY[0x230FBD990]();
  id v4 = *(id *)(a1 + 32);
  id v5 = HMFGetOSLogHandle();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_INFO);
  if (v2)
  {
    if (v6)
    {
      id v7 = HMFGetLogIdentifier();
      uint64_t v8 = [*(id *)(a1 + 32) home];
      uint64_t v9 = [v8 name];
      *(_DWORD *)long long buf = 138543874;
      __int16 v21 = v7;
      __int16 v22 = 2112;
      __int16 v23 = v2;
      __int16 v24 = 2112;
      uint64_t v25 = v9;
      _os_log_impl(&dword_22F52A000, v5, OS_LOG_TYPE_INFO, "%{public}@Auditing user account with handle : %@ for home: %@", buf, 0x20u);
    }
    char v19 = 0;
    int v10 = +[HMDAccountRegistry sharedRegistry];
    uint64_t v11 = [v10 accountForHandle:v2 exists:&v19];

    if (v19)
    {
      __updateWithAccount(*(void **)(a1 + 32), v11);
    }
    else
    {
      __int16 v14 = (void *)MEMORY[0x230FBD990]();
      id v15 = *(id *)(a1 + 32);
      __int16 v16 = HMFGetOSLogHandle();
      if (os_log_type_enabled(v16, OS_LOG_TYPE_INFO))
      {
        id v17 = HMFGetLogIdentifier();
        uint64_t v18 = [*(id *)(a1 + 32) userID];
        *(_DWORD *)long long buf = 138543618;
        __int16 v21 = v17;
        __int16 v22 = 2112;
        __int16 v23 = v18;
        _os_log_impl(&dword_22F52A000, v16, OS_LOG_TYPE_INFO, "%{public}@Account does not currently exist for user: %@", buf, 0x16u);
      }
    }
  }
  else
  {
    if (v6)
    {
      __int16 v12 = HMFGetLogIdentifier();
      uint64_t v13 = [*(id *)(a1 + 32) userID];
      *(_DWORD *)long long buf = 138543618;
      __int16 v21 = v12;
      __int16 v22 = 2112;
      __int16 v23 = v13;
      _os_log_impl(&dword_22F52A000, v5, OS_LOG_TYPE_INFO, "%{public}@Not auditing the account for the user: %@", buf, 0x16u);
    }
  }
}

uint64_t HMDUserPrivilegeCompare(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = 3;
  if (a1 == 1) {
    uint64_t v3 = 3;
  }
  else {
    uint64_t v3 = a1;
  }
  if (a2 != 1) {
    uint64_t v2 = a2;
  }
  if (v3 == v2) {
    return 0;
  }
  if (v3 == 3 || v2 == 3)
  {
    BOOL v6 = v3 == 3;
    goto LABEL_23;
  }
  if (v3 == 4 || v2 == 4)
  {
    BOOL v6 = v3 == 4;
    goto LABEL_23;
  }
  if (!v3 || !v2)
  {
    BOOL v6 = v3 == 0;
LABEL_23:
    if (v6) {
      return 1;
    }
    else {
      return -1;
    }
  }
  if (v2 == 5) {
    uint64_t v5 = -1;
  }
  else {
    uint64_t v5 = 0;
  }
  if (v3 == 5) {
    return 1;
  }
  else {
    return v5;
  }
}

void sub_2300F039C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_2300F0F44(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  objc_destroyWeak(v16);
  objc_destroyWeak((id *)(v18 - 88));
  _Unwind_Resume(a1);
}

void sub_2300F38F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, id location)
{
}

void sub_2300F7DA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__231758(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__231759(uint64_t a1)
{
}

void sub_2300F9AA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_2300FB068(_Unwind_Exception *a1)
{
}

void sub_2300FB214(_Unwind_Exception *a1)
{
}

void sub_2300FB2A4(_Unwind_Exception *a1)
{
}

void sub_2300FB494(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_2301014EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_230101B5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v15 - 160), 8);
  _Unwind_Resume(a1);
}

void sub_230101F90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 80), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__233618(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__233619(uint64_t a1)
{
}

void sub_230103768(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

__CFString *HMDCameraLocalStreamSessionStateAsString(uint64_t a1)
{
  uint64_t v1 = a1 - 1;
  if (unint64_t)(a1 - 1) < 8 && ((0x8Bu >> v1))
  {
    uint64_t v2 = off_264A29C30[v1];
  }
  else
  {
    objc_msgSend(NSString, "stringWithFormat:", @"Unknown HMDCameraLocalStreamSessionState %tu", a1);
    uint64_t v2 = (__CFString *)objc_claimAutoreleasedReturnValue();
  }
  return v2;
}

void sub_230105564(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__234406(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__234407(uint64_t a1)
{
}

void sub_230105930(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_2301089BC(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

uint64_t __HMDProcessInfoBoolForEntitlement(void *a1, uint64_t a2)
{
  if (!a1 || !a2) {
    return 0;
  }
  uint64_t v2 = [a1 valueForEntitlement:a2];
  objc_opt_class();
  if (objc_opt_isKindOfClass()) {
    uint64_t v3 = v2;
  }
  else {
    uint64_t v3 = 0;
  }
  id v4 = v3;

  uint64_t v5 = [v4 BOOLValue];
  return v5;
}

id encodedSnapshotFile(void *a1)
{
  void v9[4] = *MEMORY[0x263EF8340];
  if (a1)
  {
    v8[0] = *MEMORY[0x263F0D9C0];
    id v1 = a1;
    uint64_t v2 = [v1 slotIdentifier];
    v9[0] = v2;
    v8[1] = *MEMORY[0x263F0EBB0];
    uint64_t v3 = [v1 filePath];
    v9[1] = v3;
    v8[2] = *MEMORY[0x263F0EBA8];
    id v4 = [v1 snapshotTimestamp];
    void v9[2] = v4;
    void v8[3] = *MEMORY[0x263F0DAE0];
    uint64_t v5 = [v1 aspectRatio];

    void v9[3] = v5;
    BOOL v6 = [NSDictionary dictionaryWithObjects:v9 forKeys:v8 count:4];
  }
  else
  {
    BOOL v6 = 0;
  }
  return v6;
}

BOOL isMostRecentSnapshotValid(void *a1)
{
  id v1 = a1;
  uint64_t v2 = [v1 slotIdentifier];
  if (v2)
  {
    uint64_t v3 = [v1 filePath];
    if (v3)
    {
      id v4 = [v1 snapshotTimestamp];
      if (v4)
      {
        uint64_t v5 = [v1 aspectRatio];
        BOOL v6 = v5 != 0;
      }
      else
      {
        BOOL v6 = 0;
      }
    }
    else
    {
      BOOL v6 = 0;
    }
  }
  else
  {
    BOOL v6 = 0;
  }

  return v6;
}

BOOL HMDRemoteEventRouterProtoEventsMessageReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x263F62298];
  id v4 = (int *)MEMORY[0x263F62288];
  uint64_t v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    id v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 3)
      {
        id v17 = objc_alloc_init(MEMORY[0x263F493C0]);
        [a1 addCachedEvents:v17];
      }
      else
      {
        if ((v10 >> 3) != 2)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            return 0;
          }
          continue;
        }
        id v17 = objc_alloc_init(MEMORY[0x263F493C0]);
        [a1 addEvents:v17];
      }
      if (!PBReaderPlaceMark() || (HMEProtoEventInfoReadFrom() & 1) == 0)
      {

        return 0;
      }
      PBReaderRecallMark();
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

void sub_23010FF84(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_230110D2C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id __percentageForCharacteristicValue(void *a1, void *a2)
{
  if (a2)
  {
    id v3 = a1;
    [a2 floatValue];
    float v5 = v4;
    BOOL v6 = [v3 metadata];

    id v7 = [v6 minimumValue];
    if (v7)
    {
      char v8 = [v6 minimumValue];
      [v8 floatValue];
      float v10 = v9;
    }
    else
    {
      float v10 = 0.0;
    }

    unint64_t v12 = [v6 maximumValue];
    if (v12)
    {
      char v13 = [v6 maximumValue];
      [v13 floatValue];
      float v15 = v14;
    }
    else
    {
      float v15 = 100.0;
    }

    *(float *)&double v16 = (float)(v5 - v10) / (float)(v15 - v10);
    uint64_t v11 = [NSNumber numberWithFloat:v16];
  }
  else
  {
    uint64_t v11 = 0;
  }
  return v11;
}

void sub_23011383C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 128));
  _Unwind_Resume(a1);
}

void sub_230114208(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_230117CD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_230117FD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 80), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__235925(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__235926(uint64_t a1)
{
}

void sub_230118320(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_230118594(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_230118BA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 80), 8);
  _Unwind_Resume(a1);
}

void sub_2301190B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_23011935C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_230119664(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_230119AE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_23011A4FC(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_23011AB0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_23011AE24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_23011B07C(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 80), 8);
  _Unwind_Resume(a1);
}

void sub_23011B550(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_23011B850(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_23011BB54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_23011BEA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_23011C384(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_23011C784(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 160), 8);
  _Unwind_Resume(a1);
}

void sub_23011CA38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_23011D234(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_23011DD80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_23011E32C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id updatedCharacteristicIIDs(void *a1)
{
  uint64_t v1 = (void *)MEMORY[0x263EFF9C0];
  id v2 = a1;
  id v3 = [v1 set];
  uint64_t v4 = objc_msgSend(v2, "na_map:", &__block_literal_global_521);
  float v5 = (void *)v4;
  BOOL v6 = (void *)MEMORY[0x263EFFA68];
  if (v4) {
    id v7 = (void *)v4;
  }
  else {
    id v7 = (void *)MEMORY[0x263EFFA68];
  }
  id v8 = v7;

  [v3 addObjectsFromArray:v8];
  uint64_t v9 = objc_msgSend(v2, "na_map:", &__block_literal_global_523_235995);

  if (v9) {
    float v10 = v9;
  }
  else {
    float v10 = v6;
  }
  id v11 = v10;

  [v3 addObjectsFromArray:v11];
  unint64_t v12 = [v3 allObjects];

  return v12;
}

uint64_t __updatedCharacteristicIIDs_block_invoke_2(uint64_t a1, void *a2)
{
  id v2 = NSNumber;
  uint64_t v3 = [a2 longLongValue];
  return [v2 numberWithLongLong:v3];
}

uint64_t __updatedCharacteristicIIDs_block_invoke()
{
  return HAPInstanceIDFromValue();
}

void sub_23011ECA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v11 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_23011F194(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32)
{
  _Block_object_dispose(&a26, 8);
  _Block_object_dispose(&a32, 8);
  _Block_object_dispose((const void *)(v32 - 152), 8);
  _Block_object_dispose((const void *)(v32 - 120), 8);
  _Unwind_Resume(a1);
}

void sub_23011F5D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_230120AFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_230120EDC(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 128), 8);
  _Unwind_Resume(a1);
}

void sub_2301212A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v13 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_230121724(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 160), 8);
  _Unwind_Resume(a1);
}

void sub_2301219C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_230123EEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_230124454(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id deriveCLLocationFromCLVisit(void *a1)
{
  if (a1)
  {
    id v1 = a1;
    id v2 = [v1 departureDate];
    uint64_t v3 = [MEMORY[0x263EFF910] distantFuture];
    int v4 = [v2 isEqualToDate:v3];

    if (v4)
    {
      uint64_t v5 = [MEMORY[0x263EFF910] now];

      id v2 = (void *)v5;
    }
    id v6 = objc_alloc(MEMORY[0x263F00A50]);
    [v1 coordinate];
    double v8 = v7;
    double v10 = v9;
    [v1 horizontalAccuracy];
    double v12 = v11;

    uint64_t v13 = objc_msgSend(v6, "initWithCoordinate:altitude:horizontalAccuracy:verticalAccuracy:timestamp:", v2, v8, v10, 0.0, v12, 0.0);
  }
  else
  {
    uint64_t v13 = 0;
  }
  return v13;
}

BOOL isNearLocation(void *a1, void *a2)
{
  uint64_t v23 = *MEMORY[0x263EF8340];
  id v3 = a1;
  id v4 = a2;
  [v3 distanceFromLocation:v4];
  double v6 = v5;
  int v7 = isInternalBuild();
  double v8 = (void *)MEMORY[0x230FBD990]();
  double v9 = HMFGetOSLogHandle();
  BOOL v10 = os_log_type_enabled(v9, OS_LOG_TYPE_DEBUG);
  if (v7)
  {
    if (v10)
    {
      double v11 = HMFGetLogIdentifier();
      int v15 = 138544130;
      double v16 = v11;
      __int16 v17 = 2048;
      double v18 = v6;
      __int16 v19 = 2112;
      id v20 = v3;
      __int16 v21 = 2112;
      id v22 = v4;
      double v12 = "%{public}@Distance between locations: %lf m (%@, %@)";
LABEL_6:
      _os_log_impl(&dword_22F52A000, v9, OS_LOG_TYPE_DEBUG, v12, (uint8_t *)&v15, 0x2Au);
    }
  }
  else if (v10)
  {
    double v11 = HMFGetLogIdentifier();
    int v15 = 138544131;
    double v16 = v11;
    __int16 v17 = 2048;
    double v18 = v6;
    __int16 v19 = 2117;
    id v20 = v3;
    __int16 v21 = 2117;
    id v22 = v4;
    double v12 = "%{public}@Distance between locations: %lf m (%{sensitive}@, %{sensitive}@)";
    goto LABEL_6;
  }

  if (v6 > 0.0 || fabs(v6) < 2.22044605e-16) {
    BOOL v13 = v6 < 100.0 || fabs(v6 + -100.0) < 2.22044605e-16;
  }
  else {
    BOOL v13 = 0;
  }

  return v13;
}

void sub_23012938C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_23012A6CC(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_23012A7C8(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_23012A8C4(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_23012D1C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
}

uint64_t __Block_byref_object_copy__236893(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__236894(uint64_t a1)
{
}

void sub_23012E8B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location)
{
}

id CompositeSettings_Database_log()
{
  if (CompositeSettings_Database_log__hmf_once_t0 != -1) {
    dispatch_once(&CompositeSettings_Database_log__hmf_once_t0, &__block_literal_global_237056);
  }
  xpc_object_t v0 = (void *)CompositeSettings_Database_log__hmf_once_v1;
  return v0;
}

void sub_23012F420(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_23012F4CC(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_23012F544(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_23012F828(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_23012F90C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_23012FD3C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_23012FDD4(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2301302B4(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_230130928(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_230136750(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_23013B730(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_23013B984(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_230142680(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2301436DC(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_230143D70(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_230144068(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_230144200(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_230144358(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2301443DC(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_23014D174(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_23014E2F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  _Block_object_dispose(&a29, 8);
  _Block_object_dispose((const void *)(v29 - 176), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__239723(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__239724(uint64_t a1)
{
}

uint64_t __HMDUsersSortedByPrivilege_block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v4 = a3;
  uint64_t v5 = [a2 privilege];
  uint64_t v6 = [v4 privilege];

  if (v5 == v6) {
    return 0;
  }
  if (v5 == 3 || v6 == 3)
  {
    BOOL v8 = v5 == 3;
  }
  else if (v5 == 4 || v6 == 4)
  {
    BOOL v8 = v5 == 4;
  }
  else if (v5 == 1 || v6 == 1)
  {
    BOOL v8 = v5 == 1;
  }
  else
  {
    if (v5 && v6)
    {
      if (v5 == 2) {
        return -1;
      }
      else {
        return v6 == 2;
      }
    }
    BOOL v8 = v5 == 0;
  }
  if (v8) {
    return -1;
  }
  else {
    return 1;
  }
}

void sub_23014EF44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
  _Block_object_dispose(&a31, 8);
  _Block_object_dispose((const void *)(v31 - 176), 8);
  _Unwind_Resume(a1);
}

void sub_23014FE14(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 160), 8);
  _Unwind_Resume(a1);
}

uint64_t isBridgedAccessory(void *a1)
{
  uint64_t v1 = (void *)MEMORY[0x263F35860];
  id v2 = [a1 uniqueIdentifier];
  id v3 = [v1 instanceIDForUniqueIdentifier:v2];

  if (v3)
  {
    id v4 = [NSNumber numberWithUnsignedInteger:*MEMORY[0x263F35B60]];
    uint64_t v5 = [v3 isEqualToNumber:v4] ^ 1;
  }
  else
  {
    uint64_t v5 = 0;
  }

  return v5;
}

void sub_2301546FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_230155620(_Unwind_Exception *a1)
{
}

void sub_2301556E0(_Unwind_Exception *a1)
{
}

void sub_230156C44(_Unwind_Exception *a1)
{
}

void sub_2301571B0(_Unwind_Exception *a1)
{
}

__CFString *HMDHomeLocationSourceToString(unint64_t a1)
{
  if (a1 >= 6)
  {
    objc_msgSend(NSString, "stringWithFormat:", @"%ld", a1);
    uint64_t v1 = (__CFString *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    uint64_t v1 = off_264A2ADF0[a1];
  }
  return v1;
}

void sub_23015A510(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  objc_destroyWeak(v7);
  _Unwind_Resume(a1);
}

void __Block_byref_object_copy__240366(uint64_t a1, uint64_t a2)
{
}

void __Block_byref_object_dispose__240367(uint64_t a1)
{
}

void sub_23015A9B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

double getLocationUpdateTimeInterval()
{
  v18[0] = 0;
  v18[1] = v18;
  v18[2] = 0x2020000000;
  v18[3] = 0;
  v16[0] = 0;
  v16[1] = v16;
  void v16[2] = 0x2020000000;
  int v17 = 0;
  xpc_object_t v0 = [MEMORY[0x263F42608] sharedPreferences];
  uint64_t v1 = [v0 preferenceForKey:@"kLocationUpdateIntervalMinutes"];
  id v2 = [v1 numberValue];

  id v3 = [MEMORY[0x263F42608] sharedPreferences];
  id v4 = [v3 preferenceForKey:@"kLocationUpdateIntervalVarianceMinutes"];
  uint64_t v5 = [v4 numberValue];

  v11[0] = MEMORY[0x263EF8330];
  v11[1] = 3221225472;
  v11[2] = __getLocationUpdateTimeInterval_block_invoke;
  v11[3] = &unk_264A2ADD0;
  float v14 = v18;
  int v15 = v16;
  id v12 = v2;
  id v13 = v5;
  uint64_t v6 = getLocationUpdateTimeInterval_onceToken;
  id v7 = v5;
  id v8 = v2;
  if (v6 != -1) {
    dispatch_once(&getLocationUpdateTimeInterval_onceToken, v11);
  }
  double v9 = *(double *)&getLocationUpdateTimeInterval_locationUpdateIntervalWithVariance;

  _Block_object_dispose(v16, 8);
  _Block_object_dispose(v18, 8);
  return v9;
}

void sub_23015B198(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 80), 8);
  _Unwind_Resume(a1);
}

double __getLocationUpdateTimeInterval_block_invoke(uint64_t a1)
{
  if (_os_feature_enabled_impl())
  {
    [*(id *)(a1 + 32) doubleValue];
    double v3 = v2 * 60.0;
  }
  else
  {
    double v3 = 86400.0;
  }
  *(double *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = v3;
  *(_DWORD *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) = arc4random_uniform([*(id *)(a1 + 40) unsignedIntValue]);
  double result = *(double *)(*(void *)(*(void *)(a1 + 48) + 8) + 24)
         + (double)(60 * (unint64_t)*(unsigned int *)(*(void *)(*(void *)(a1 + 56) + 8) + 24));
  *(double *)&getLocationUpdateTimeInterval_locationUpdateIntervalWithVariance = result;
  return result;
}

void sub_23015E084(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
}

void sub_23015FC98(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

id __HMDHomeAdministratorHandlerGetOrCreateReceiver(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  uint64_t v5 = v4;
  uint64_t v6 = 0;
  if (v3 && v4)
  {
    os_unfair_lock_lock_with_options();
    uint64_t v6 = [*((id *)v3 + 11) objectForKey:v5];
    if (!v6)
    {
      uint64_t v6 = (void *)[objc_alloc((Class)objc_opt_class()) initWithReceiver:v5 handler:v3];
      [*((id *)v3 + 11) setObject:v6 forKey:v5];
    }
    os_unfair_lock_unlock((os_unfair_lock_t)v3 + 18);
  }

  return v6;
}

void sub_23015FFA8(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

BOOL HMDIsAllowedFallbackRemoteError(void *a1)
{
  id v1 = a1;
  if ([v1 isHMFError])
  {
    uint64_t v2 = 14;
  }
  else
  {
    if (![v1 isHMError])
    {
      BOOL v3 = 0;
      goto LABEL_9;
    }
    if ([v1 code] == 8 || objc_msgSend(v1, "code") == 54)
    {
      BOOL v3 = 1;
      goto LABEL_9;
    }
    uint64_t v2 = 2;
  }
  BOOL v3 = [v1 code] == v2;
LABEL_9:

  return v3;
}

void sub_23016207C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_230165930(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 176), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__241406(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__241407(uint64_t a1)
{
}

void sub_230165B84(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_2301678B4(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 96));
  _Unwind_Resume(a1);
}

void sub_23016B4E8(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_23016B594(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_23016B688(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_23016C21C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_23016E468(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_23016E554(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_23016E660(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_23016E784(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_23016E888(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2301705B4(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_230172584(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_230175EA8(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_230176CD8(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_230177298(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2301776CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_2301782B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_2301795BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_23017C624(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,id location)
{
  objc_destroyWeak(v24);
  objc_destroyWeak(&location);
  objc_destroyWeak(v25);
  objc_destroyWeak((id *)(v26 - 176));
  _Unwind_Resume(a1);
}

void sub_23017DCAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__242964(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__242965(uint64_t a1)
{
}

void sub_23017EA38(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id *location)
{
  objc_destroyWeak(location);
  objc_destroyWeak((id *)(v10 - 160));
  _Unwind_Resume(a1);
}

void sub_23017EC40(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_230180FA8(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_230181154(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_230181320(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_230181634(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_230181908(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_23018C1F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id *location,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  _Block_object_dispose(&a65, 8);
  _Block_object_dispose((const void *)(v71 - 176), 8);
  _Block_object_dispose(&a71, 8);
  _Unwind_Resume(a1);
}

void sub_23018C518(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id *location)
{
}

void sub_23018D7F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id *location, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,id a37)
{
}

void sub_2301900C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_230190FD4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,id location)
{
  objc_destroyWeak(v62);
  objc_destroyWeak(&location);
  _Block_object_dispose((const void *)(v63 - 176), 8);
  _Unwind_Resume(a1);
}

void sub_230191F74(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_230194AA8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id *a10, id *location)
{
  objc_destroyWeak(location);
  objc_destroyWeak(a10);
  objc_destroyWeak((id *)(v11 - 152));
  _Unwind_Resume(a1);
}

void sub_230195464(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,id location)
{
}

void sub_2301957E0(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_230195A2C(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

id __isUserInMessagePartOfHome(void *a1, void *a2, void *a3)
{
  uint64_t v21 = *MEMORY[0x263EF8340];
  id v5 = a1;
  id v6 = a2;
  id v7 = a3;
  id v8 = [v7 matchingRemoteIdentityUserForHome:v6];
  if (v8)
  {
    uint64_t v9 = (void *)MEMORY[0x230FBD990]();
    id v10 = v5;
    uint64_t v11 = HMFGetOSLogHandle();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEBUG))
    {
      id v12 = HMFGetLogIdentifier();
      int v15 = 138543874;
      double v16 = v12;
      __int16 v17 = 2112;
      double v18 = v8;
      __int16 v19 = 2112;
      id v20 = v7;
      _os_log_impl(&dword_22F52A000, v11, OS_LOG_TYPE_DEBUG, "%{public}@Found matching user: %@, for message: %@", (uint8_t *)&v15, 0x20u);
    }
    id v13 = v8;
  }

  return v8;
}

void sub_230199CD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, id *location)
{
}

void sub_23019A29C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 112));
  _Unwind_Resume(a1);
}

void sub_23019A6A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id *location)
{
}

void sub_23019C800(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,id *location,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,id a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,id a44)
{
  objc_destroyWeak(location);
  objc_destroyWeak(v44);
  objc_destroyWeak(&a34);
  objc_destroyWeak(&a44);
  _Unwind_Resume(a1);
}

void sub_23019F49C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void sub_23019FF20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,char a33)
{
}

void sub_2301A155C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_2301A1A80(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_2301A41F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location)
{
  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_2301A4350(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_2301A8E34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,char a43)
{
}

void sub_2301A98F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,id location)
{
  objc_destroyWeak(v32);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_2301AC014(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  __HMFActivityScopeLeave();
  _Unwind_Resume(a1);
}

void sub_2301B30C8(_Unwind_Exception *a1)
{
}

void sub_2301B355C(_Unwind_Exception *a1)
{
}

void sub_2301B4654(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2301B47C4(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2301B4860(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2301B48EC(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2301B4980(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2301B49FC(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2301B4AC4(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2301B54E0(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 72));
  _Unwind_Resume(a1);
}

void sub_2301B5678(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 56));
  _Unwind_Resume(a1);
}

void sub_2301B60BC(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_2301B6F58(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,id location)
{
}

void sub_2301B7C5C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,id location)
{
}

void sub_2301B88C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,id location,uint64_t a58,uint64_t a59,uint64_t a60,char a61)
{
}

void sub_2301B8E48(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_2301B9D34(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id *location)
{
  objc_destroyWeak(location);
  objc_destroyWeak((id *)(v10 - 144));
  _Unwind_Resume(a1);
}

void sub_2301BB8A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t mapToHMMediaShuffleState(uint64_t a1)
{
  uint64_t v1 = 1;
  if (a1 == 1) {
    uint64_t v1 = 2;
  }
  if (a1 == 2) {
    return 3;
  }
  else {
    return v1;
  }
}

void sub_2301C63B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_2301C6798(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__244812(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__244813(uint64_t a1)
{
}

void sub_2301C7028(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_2301C8418(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va1, a11);
  va_start(va, a11);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  uint64_t v16 = va_arg(va1, void);
  uint64_t v17 = va_arg(va1, void);
  uint64_t v18 = va_arg(va1, void);
  _Block_object_dispose(va1, 8);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__245150(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__245151(uint64_t a1)
{
}

void sub_2301CB0D0(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 176), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__245407(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__245408(uint64_t a1)
{
}

void sub_2301D0458(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2301D05C0(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2301D0768(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2301D08D0(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2301D0A6C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2301D0C5C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2301D0DC4(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2301D0F6C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2301D10D4(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2301D127C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2301D13E4(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2301D158C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2301D16F4(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2301D189C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2301D1A04(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2301D2258(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_2301D4A84(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_unfair_lock_t lock)
{
}

void sub_2301D5FE8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

Class __getRadarDraftClass_block_invoke(uint64_t a1)
{
  TapToRadarKitLibrary();
  Class result = objc_getClass("RadarDraft");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    getRadarDraftClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    uint64_t v3 = abort_report_np();
    return (Class)__getRadarComponentClass_block_invoke(v3);
  }
  return result;
}

Class __getRadarComponentClass_block_invoke(uint64_t a1)
{
  TapToRadarKitLibrary();
  Class result = objc_getClass("RadarComponent");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    getRadarComponentClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    uint64_t v3 = abort_report_np();
    return (Class)__125__HMDTTRManager_initiateRadarWithTitle_componentName_componentVersion_componentID_displayReason_attachments_isUserInitiated___block_invoke(v3);
  }
  return result;
}

void TapToRadarKitLibrary()
{
  if (!TapToRadarKitLibraryCore())
  {
    xpc_object_t v0 = (void *)abort_report_np();
    free(v0);
  }
}

uint64_t TapToRadarKitLibraryCore()
{
  uint64_t v8 = *MEMORY[0x263EF8340];
  uint64_t v2 = 0;
  uint64_t v3 = &v2;
  uint64_t v4 = 0x2020000000;
  uint64_t v0 = TapToRadarKitLibraryCore_frameworkLibrary;
  uint64_t v5 = TapToRadarKitLibraryCore_frameworkLibrary;
  if (!TapToRadarKitLibraryCore_frameworkLibrary)
  {
    long long v6 = xmmword_264A2C208;
    long long v7 = *(_OWORD *)&off_264A2C218;
    v3[3] = _sl_dlopen();
    TapToRadarKitLibraryCore_frameworkLibrary = v3[3];
    uint64_t v0 = v3[3];
  }
  _Block_object_dispose(&v2, 8);
  return v0;
}

void sub_2301DAC3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __TapToRadarKitLibraryCore_block_invoke(uint64_t a1)
{
  uint64_t result = _sl_dlopen();
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  TapToRadarKitLibraryCore_frameworkLibrary = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void sub_2301DB504(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class __getTapToRadarServiceClass_block_invoke(uint64_t a1)
{
  TapToRadarKitLibrary();
  Class result = objc_getClass("TapToRadarService");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    getTapToRadarServiceClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    uint64_t v3 = (void *)abort_report_np();
    return (Class)+[HMDTTRManager queue];
  }
  return result;
}

uint64_t HMDRemoteEventRouterProtoMultiHopFetchEventsResponseReadFrom(void *a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x263F62298];
  SEL v4 = (int *)MEMORY[0x263F62288];
  uint64_t v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    long long v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 2)
      {
        id v17 = objc_alloc_init(MEMORY[0x263F493C0]);
        [a1 addChangedEvents:v17];
        if (!PBReaderPlaceMark() || (HMEProtoEventInfoReadFrom() & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

id __mapProfilesToProfileUUIDs(void *a1)
{
  uint64_t v17 = *MEMORY[0x263EF8340];
  id v1 = a1;
  uint64_t v2 = objc_msgSend(MEMORY[0x263EFF9C0], "setWithCapacity:", objc_msgSend(v1, "count"));
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  long long v15 = 0u;
  id v3 = v1;
  uint64_t v4 = [v3 countByEnumeratingWithState:&v12 objects:v16 count:16];
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = *(void *)v13;
    do
    {
      for (uint64_t i = 0; i != v5; ++i)
      {
        if (*(void *)v13 != v6) {
          objc_enumerationMutation(v3);
        }
        char v8 = objc_msgSend(*(id *)(*((void *)&v12 + 1) + 8 * i), "uniqueIdentifier", (void)v12);
        unsigned int v9 = [v8 UUIDString];
        [v2 addObject:v9];
      }
      uint64_t v5 = [v3 countByEnumeratingWithState:&v12 objects:v16 count:16];
    }
    while (v5);
  }

  unint64_t v10 = (void *)[v2 copy];
  return v10;
}

id mapProfilesToAccessoryUUIDs(void *a1, void *a2)
{
  uint64_t v38 = *MEMORY[0x263EF8340];
  id v3 = a1;
  id v4 = a2;
  objc_msgSend(MEMORY[0x263EFF9C0], "setWithCapacity:", objc_msgSend(v4, "count"));
  v31 = uint64_t v30 = v3;
  long long v33 = 0u;
  long long v34 = 0u;
  long long v35 = 0u;
  long long v36 = 0u;
  id obj = [v3 accessories];
  uint64_t v5 = [obj countByEnumeratingWithState:&v33 objects:v37 count:16];
  if (v5)
  {
    uint64_t v6 = v5;
    uint64_t v7 = *(void *)v34;
    do
    {
      for (uint64_t i = 0; i != v6; ++i)
      {
        if (*(void *)v34 != v7) {
          objc_enumerationMutation(obj);
        }
        id v9 = *(id *)(*((void *)&v33 + 1) + 8 * i);
        objc_opt_class();
        if (objc_opt_isKindOfClass()) {
          unint64_t v10 = v9;
        }
        else {
          unint64_t v10 = 0;
        }
        id v11 = v10;

        if (v11)
        {
          long long v12 = [v11 mediaProfile];
          long long v13 = v12;
          if (v12)
          {
            long long v14 = [v12 uniqueIdentifier];
            long long v15 = [v14 UUIDString];
            int v16 = [v4 containsObject:v15];

            if (v16)
            {
              uint64_t v17 = [v11 uuid];
              uint64_t v18 = [v17 UUIDString];
              [v31 addObject:v18];
            }
          }
        }
        id v19 = v9;
        objc_opt_class();
        if (objc_opt_isKindOfClass()) {
          id v20 = v19;
        }
        else {
          id v20 = 0;
        }
        id v21 = v20;

        if (v21)
        {
          id v22 = [v21 findServiceWithServiceType:@"00000228-0000-1000-8000-0026BB765291"];
          if (v22)
          {
            uint64_t v23 = +[HMDMediaProfile uniqueIdentifierFromAccessory:v21];
            __int16 v24 = [v23 UUIDString];
            int v25 = [v4 containsObject:v24];

            if (v25)
            {
              uint64_t v26 = [v21 uuid];
              id v27 = [v26 UUIDString];
              [v31 addObject:v27];
            }
          }
        }
      }
      uint64_t v6 = [obj countByEnumeratingWithState:&v33 objects:v37 count:16];
    }
    while (v6);
  }

  uint64_t v28 = (void *)[v31 copy];
  return v28;
}

id mapProfilesToServiceUUIDs(void *a1, void *a2)
{
  uint64_t v28 = *MEMORY[0x263EF8340];
  id v3 = a1;
  id v22 = a2;
  objc_msgSend(MEMORY[0x263EFF9C0], "setWithCapacity:", objc_msgSend(v22, "count"));
  v21 = id v20 = v3;
  long long v23 = 0u;
  long long v24 = 0u;
  long long v25 = 0u;
  long long v26 = 0u;
  id v4 = [v3 accessories];
  uint64_t v5 = [v4 countByEnumeratingWithState:&v23 objects:v27 count:16];
  if (v5)
  {
    uint64_t v6 = v5;
    uint64_t v7 = *(void *)v24;
    do
    {
      for (uint64_t i = 0; i != v6; ++i)
      {
        if (*(void *)v24 != v7) {
          objc_enumerationMutation(v4);
        }
        id v9 = *(id *)(*((void *)&v23 + 1) + 8 * i);
        objc_opt_class();
        if (objc_opt_isKindOfClass()) {
          unint64_t v10 = v9;
        }
        else {
          unint64_t v10 = 0;
        }
        id v11 = v10;

        if (v11)
        {
          long long v12 = [v11 findServiceWithServiceType:@"00000228-0000-1000-8000-0026BB765291"];
          if (v12)
          {
            long long v13 = +[HMDMediaProfile uniqueIdentifierFromAccessory:v11];
            long long v14 = [v13 UUIDString];
            int v15 = [v22 containsObject:v14];

            if (v15)
            {
              int v16 = [v12 uuid];
              uint64_t v17 = [v16 UUIDString];
              [v21 addObject:v17];
            }
          }
        }
      }
      uint64_t v6 = [v4 countByEnumeratingWithState:&v23 objects:v27 count:16];
    }
    while (v6);
  }

  uint64_t v18 = (void *)[v21 copy];
  return v18;
}

id __mapUUIDsToProfiles(void *a1, void *a2)
{
  uint64_t v22 = *MEMORY[0x263EF8340];
  id v3 = a1;
  id v4 = a2;
  uint64_t v5 = objc_msgSend(MEMORY[0x263EFF9C0], "setWithCapacity:", objc_msgSend(v4, "count"));
  long long v17 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  long long v20 = 0u;
  id v6 = v4;
  uint64_t v7 = [v6 countByEnumeratingWithState:&v17 objects:v21 count:16];
  if (v7)
  {
    uint64_t v8 = v7;
    uint64_t v9 = *(void *)v18;
    do
    {
      for (uint64_t i = 0; i != v8; ++i)
      {
        if (*(void *)v18 != v9) {
          objc_enumerationMutation(v6);
        }
        uint64_t v11 = *(void *)(*((void *)&v17 + 1) + 8 * i);
        id v12 = objc_alloc(MEMORY[0x263F08C38]);
        long long v13 = objc_msgSend(v12, "initWithUUIDString:", v11, (void)v17);
        long long v14 = [v3 mediaProfileWithUUID:v13];
        if (v14) {
          [v5 addObject:v14];
        }
      }
      uint64_t v8 = [v6 countByEnumeratingWithState:&v17 objects:v21 count:16];
    }
    while (v8);
  }

  int v15 = (void *)[v5 copy];
  return v15;
}

void sub_2301E2600(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_2301E4B94(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2301E4CF8(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2301E5AB8(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2301E5B28(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2301E6DC0(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2301E6EBC(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2301E6FCC(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2301E73D8(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2301E760C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2301E78D4(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2301E79E4(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2301E7BD0(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2301E7E58(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2301E8180(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2301E8224(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2301E829C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

HMDAccessoryFirmwareUpdateAggregatePolicy *HMDFirmwareUpdatePolicyForAccessory(void *a1, uint64_t a2, void *a3)
{
  uint64_t v159 = *MEMORY[0x263EF8340];
  id v5 = a1;
  id v6 = a3;
  id v7 = objc_alloc_init(MEMORY[0x263EFF980]);
  [v7 addObject:v5];
  uint64_t v113 = v5;
  uint64_t v117 = v6;
  uint64_t v8 = getBridgedAccessoriesForBridge(v5, v6);
  [v7 addObjectsFromArray:v8];

  uint64_t v118 = [MEMORY[0x263EFF9C0] set];
  long long v137 = 0u;
  long long v138 = 0u;
  long long v139 = 0u;
  long long v140 = 0u;
  id obj = v7;
  uint64_t v116 = [obj countByEnumeratingWithState:&v137 objects:v149 count:16];
  if (v116)
  {
    uint64_t v115 = *(void *)v138;
    uint64_t v120 = a2;
    do
    {
      uint64_t v9 = 0;
      do
      {
        if (*(void *)v138 != v115)
        {
          uint64_t v10 = v9;
          objc_enumerationMutation(obj);
          uint64_t v9 = v10;
        }
        uint64_t v119 = v9;
        id v11 = *(id *)(*((void *)&v137 + 1) + 8 * v9);
        id v12 = v117;
        long long v13 = [MEMORY[0x263EFF9C0] set];
        uint64_t v123 = +[HMDHAPMetadata getSharedInstance];
        long long v141 = 0u;
        long long v142 = 0u;
        long long v143 = 0u;
        long long v144 = 0u;
        id v121 = [v11 services];
        uint64_t v126 = [v121 countByEnumeratingWithState:&v141 objects:v150 count:16];
        if (v126)
        {
          uint64_t v124 = *(void *)v142;
          uint64_t v125 = v13;
          id v122 = v11;
          uint64_t v127 = v12;
LABEL_8:
          uint64_t v14 = 0;
          while (1)
          {
            if (*(void *)v142 != v124)
            {
              uint64_t v15 = v14;
              objc_enumerationMutation(v121);
              uint64_t v14 = v15;
            }
            uint64_t v128 = v14;
            int v16 = *(void **)(*((void *)&v141 + 1) + 8 * v14);
            if (a2 == 1) {
              break;
            }
            if (a2) {
              goto LABEL_60;
            }
            long long v17 = [*(id *)(*((void *)&v141 + 1) + 8 * v14) serviceType];
            long long v18 = [v11 category];
            long long v19 = [v18 categoryType];
            long long v20 = [v123 stagingPolicyConfigurationForService:v17 category:v19];

            if (!v20)
            {
              id v21 = [v16 serviceType];
              uint64_t v22 = [v123 stagingPolicyConfigurationForService:v21 category:0];
LABEL_17:
              long long v20 = (void *)v22;

              if (!v20)
              {
LABEL_60:
                if ([v16 isCustom])
                {
                  uint64_t v80 = MEMORY[0x230FBD990]();
                  id v81 = HMFGetOSLogHandle();
                  if (os_log_type_enabled(v81, OS_LOG_TYPE_INFO))
                  {
                    int v82 = HMFGetLogIdentifier();
                    uint64_t v83 = [v16 serviceType];
                    *(_DWORD *)long long buf = 138543618;
                    char v152 = v82;
                    __int16 v153 = 2112;
                    id v154 = v83;
                    _os_log_impl(&dword_22F52A000, v81, OS_LOG_TYPE_INFO, "%{public}@Skipping policy creation for the custom service: %@", buf, 0x16u);
                  }
                  char v84 = (void *)v80;
                }
                else
                {
                  id v85 = v16;
                  if (isIgnoredServiceForAutoApply_token != -1) {
                    dispatch_once(&isIgnoredServiceForAutoApply_token, &__block_literal_global_248890);
                  }
                  id v86 = [v85 accessory];
                  int v87 = [v86 cameraProfiles];
                  if (![v87 count])
                  {

LABEL_76:
                    id v96 = (void *)MEMORY[0x230FBD990]();
                    long long v97 = HMFGetOSLogHandle();
                    if (os_log_type_enabled(v97, OS_LOG_TYPE_DEBUG))
                    {
                      long long v98 = HMFGetLogIdentifier();
                      uint64_t v99 = [v85 serviceType];
                      *(_DWORD *)long long buf = 138543618;
                      char v152 = v98;
                      __int16 v153 = 2112;
                      id v154 = v99;
                      _os_log_impl(&dword_22F52A000, v97, OS_LOG_TYPE_DEBUG, "%{public}@Policy configuration not available for service type: %@", buf, 0x16u);
                    }
                    uint64_t v100 = (void *)MEMORY[0x263EFF8C0];
                    id v101 = v127;
                    id v102 = v11;
                    uint64_t v103 = [(HMDAccessoryFirmwareUpdatePolicy *)[HMDAccessoryFirmwareUpdateAllowPolicy alloc] initWithAccessory:v102 workQueue:v101];

                    long long v95 = [v100 arrayWithObject:v103];

                    id v12 = v127;
                    char v94 = v125;
                    goto LABEL_79;
                  }
                  uint64_t v88 = (void *)isIgnoredServiceForAutoApply_ignoredServices;
                  uint64_t v89 = [v85 serviceType];
                  LODWORD(v8_Block_object_dispose(&STACK[0x340], 8) = [v88 containsObject:v89];

                  if (!v88) {
                    goto LABEL_76;
                  }
                  uint64_t v90 = MEMORY[0x230FBD990]();
                  uint64_t v91 = HMFGetOSLogHandle();
                  if (os_log_type_enabled(v91, OS_LOG_TYPE_INFO))
                  {
                    uint64_t v92 = HMFGetLogIdentifier();
                    uint64_t v93 = [v85 serviceType];
                    *(_DWORD *)long long buf = 138543618;
                    char v152 = v92;
                    __int16 v153 = 2112;
                    id v154 = v93;
                    _os_log_impl(&dword_22F52A000, v91, OS_LOG_TYPE_INFO, "%{public}@Skipping policy creation for the accessory firmware update ignored service: %@", buf, 0x16u);
                  }
                  char v84 = (void *)v90;
                }
                long long v13 = v125;
                goto LABEL_72;
              }
            }
LABEL_18:
            id v26 = v20;
            id v27 = v11;
            id v133 = v127;
            uint64_t v129 = [MEMORY[0x263EFF980] array];
            uint64_t v134 = v26;
            uint64_t v28 = [v26 criteria];
            uint64_t v29 = [v28 anyUserAtHome];

            if ((v29 & 1) != 0
              || ([v134 criteria],
                  uint64_t v30 = objc_claimAutoreleasedReturnValue(),
                  int v31 = [v30 noUserAtHome],
                  v30,
                  v31))
            {
              id v32 = v133;
              id v33 = v27;
              long long v34 = [[HMDAccessoryFirmwareUpdatePresencePolicy alloc] initWithAccessory:v33 presenceNeeded:v29 workQueue:v32];

              if (v34)
              {
                [v129 addObject:v34];
              }
            }
            long long v35 = [v134 criteria];
            int v36 = [v35 checkForScheduledAutomation];

            if (v36)
            {
              id v37 = v133;
              id v38 = v27;
              id v39 = [(HMDAccessoryFirmwareUpdatePolicy *)[HMDAccessoryFirmwareUpdateTimedAutomationPolicy alloc] initWithAccessory:v38 workQueue:v37];

              if (v39) {
                [v129 addObject:v39];
              }
            }
            long long v147 = 0u;
            long long v148 = 0u;
            long long v145 = 0u;
            long long v146 = 0u;
            uint64_t v40 = [v134 criteria];
            id v41 = [v40 characteristicConfigurations];

            id v131 = v41;
            uint64_t v136 = [v41 countByEnumeratingWithState:&v145 objects:buf count:16];
            if (v136)
            {
              uint64_t v135 = *(void *)v146;
              id v132 = v27;
              do
              {
                uint64_t v42 = 0;
                do
                {
                  if (*(void *)v146 != v135) {
                    objc_enumerationMutation(v131);
                  }
                  long long v43 = *(void **)(*((void *)&v145 + 1) + 8 * v42);
                  long long v44 = [v43 format];
                  long long v45 = [v43 values];
                  id v46 = v44;
                  id v47 = v45;
                  if (([v46 isEqualToString:@"BOOL"] & 1) != 0
                    || ([v46 isEqualToString:@"int"] & 1) != 0
                    || [v46 isEqualToString:@"uint8"])
                  {
                    *(void *)&aBlocuint64_t k = MEMORY[0x263EF8330];
                    *((void *)&aBlock + 1) = 3221225472;
                    uint64_t v156 = __characteristicPolicyHandlerForFormat_block_invoke;
                    uint64_t v157 = &unk_264A2D3B8;
                    id v158 = v47;
                    long long v48 = _Block_copy(&aBlock);
                  }
                  else
                  {
                    long long v48 = 0;
                  }

                  if (v48)
                  {
                    long long v49 = [v134 type];
                    long long v50 = [v43 type];
                    long long v51 = [v43 settlingTime];
                    id v52 = v27;
                    id v53 = v49;
                    id v54 = v50;
                    id v55 = v51;
                    id v56 = v48;
                    id v57 = v133;
                    if (v55)
                    {
                      uint64_t v58 = [v55 unsignedIntegerValue];
                    }
                    else
                    {
                      id v130 = v52;
                      if (valueDebounceDuration_onceToken != -1) {
                        dispatch_once(&valueDebounceDuration_onceToken, &__block_literal_global_39_248894);
                      }
                      unsigned __int8 v62 = [MEMORY[0x263F42608] sharedPreferences];
                      uint64_t v63 = [v62 preferenceForKey:@"firmwareUpdateCharacteristicValueDebounceDuration"];
                      __int16 v64 = [v63 numberValue];

                      uint64_t v58 = [v64 unsignedIntValue];
                      id v52 = v130;
                    }
                    id v65 = [[HMDAccessoryFirmwareUpdateCharacteristicBasedPolicy alloc] initWithAccessory:v52 serviceType:v53 characteristicType:v54 debounceDuration:v58 policyHandler:v56 workQueue:v57];

                    if (v65) {
                      [v129 addObject:v65];
                    }

                    id v27 = v132;
                  }
                  else
                  {
                    uint64_t v59 = (void *)MEMORY[0x230FBD990]();
                    uint64_t v60 = HMFGetOSLogHandle();
                    if (os_log_type_enabled(v60, OS_LOG_TYPE_ERROR))
                    {
                      __int16 v61 = HMFGetLogIdentifier();
                      LODWORD(aBlock) = 138543362;
                      *(void *)((char *)&aBlock + 4) = v61;
                      _os_log_impl(&dword_22F52A000, v60, OS_LOG_TYPE_ERROR, "%{public}@Invalid characteristic policy handler", (uint8_t *)&aBlock, 0xCu);
                    }
                  }

                  ++v42;
                }
                while (v136 != v42);
                uint64_t v66 = [v131 countByEnumeratingWithState:&v145 objects:buf count:16];
                uint64_t v136 = v66;
              }
              while (v66);
            }

            uint64_t v67 = [v134 criteria];
            id v68 = [v67 updateTimeWindow];

            if (v68)
            {
              __int16 v69 = [v134 criteria];
              id v70 = [v69 updateTimeWindow];
              id v71 = v133;
              id v72 = v70;
              id v73 = v27;
              long long v74 = [[HMDAccessoryFirmwareUpdateTimeWindowPolicy alloc] initWithAccessory:v73 timeWindow:v72 workQueue:v71];

              if (v74) {
                [v129 addObject:v74];
              }
            }
            long long v75 = [v27 cameraProfiles];
            uint64_t v76 = [v75 count];

            a2 = v120;
            id v11 = v122;
            if (v76)
            {
              id v77 = v133;
              id v78 = v27;
              uint64_t v79 = [(HMDAccessoryFirmwareUpdatePolicy *)[HMDAccessoryFirmwareUpdateCameraPolicy alloc] initWithAccessory:v78 workQueue:v77];

              if (v79) {
                [v129 addObject:v79];
              }
            }
            long long v13 = v125;
            [v125 addObjectsFromArray:v129];

LABEL_72:
            id v12 = v127;
            uint64_t v14 = v128 + 1;
            if (v128 + 1 == v126)
            {
              uint64_t v126 = [v121 countByEnumeratingWithState:&v141 objects:v150 count:16];
              if (v126) {
                goto LABEL_8;
              }
              goto LABEL_74;
            }
          }
          long long v23 = [*(id *)(*((void *)&v141 + 1) + 8 * v14) serviceType];
          long long v24 = [v11 category];
          long long v25 = [v24 categoryType];
          long long v20 = [v123 autoApplyPolicyConfigurationForService:v23 category:v25];

          if (v20) {
            goto LABEL_18;
          }
          id v21 = [v16 serviceType];
          uint64_t v22 = [v123 autoApplyPolicyConfigurationForService:v21 category:0];
          goto LABEL_17;
        }
LABEL_74:

        [v13 allObjects];
        long long v95 = v94 = v13;
LABEL_79:

        if ([v95 count] == 1)
        {
          uint64_t v104 = [v95 firstObject];
          objc_opt_class();
          char isKindOfClass = objc_opt_isKindOfClass();

          if (isKindOfClass)
          {
            [v118 removeAllObjects];
            uint64_t v106 = [v95 firstObject];
            [v118 addObject:v106];

            goto LABEL_85;
          }
        }
        [v118 addObjectsFromArray:v95];

        uint64_t v9 = v119 + 1;
      }
      while (v119 + 1 != v116);
      uint64_t v116 = [obj countByEnumeratingWithState:&v137 objects:v149 count:16];
    }
    while (v116);
  }
LABEL_85:

  id v107 = [v118 allObjects];
  id v108 = v113;
  id v109 = v117;
  if ([v107 count])
  {
    if ([v107 count] == 1)
    {
      uint64_t v110 = [v107 firstObject];
    }
    else
    {
      uint64_t v110 = [[HMDAccessoryFirmwareUpdateAggregatePolicy alloc] initWithPolicies:v107 accessory:v108 workQueue:v109];
    }
    uint64_t v111 = v110;
  }
  else
  {
    uint64_t v111 = 0;
  }

  [(HMDAccessoryFirmwareUpdateAggregatePolicy *)v111 configure];
  return v111;
}

id getBridgedAccessoriesForBridge(void *a1, void *a2)
{
  uint64_t v29 = *MEMORY[0x263EF8340];
  id v3 = a1;
  id v22 = a2;
  id v23 = objc_alloc_init(MEMORY[0x263EFF980]);
  if ([v3 isPrimary])
  {
    id v4 = [v3 identifiersForBridgedAccessories];
    uint64_t v5 = [v4 count];

    if (v5)
    {
      id v6 = [v3 identifiersForBridgedAccessories];
      id v7 = (void *)[v6 copy];

      uint64_t v8 = [v3 home];
      long long v24 = 0u;
      long long v25 = 0u;
      long long v26 = 0u;
      long long v27 = 0u;
      id v9 = v7;
      uint64_t v10 = [v9 countByEnumeratingWithState:&v24 objects:v28 count:16];
      if (v10)
      {
        uint64_t v11 = v10;
        uint64_t v12 = *(void *)v25;
        do
        {
          for (uint64_t i = 0; i != v11; ++i)
          {
            if (*(void *)v25 != v12) {
              objc_enumerationMutation(v9);
            }
            uint64_t v14 = [v8 accessoryWithUUID:*(void *)(*((void *)&v24 + 1) + 8 * i)];
            objc_opt_class();
            if (objc_opt_isKindOfClass()) {
              uint64_t v15 = v14;
            }
            else {
              uint64_t v15 = 0;
            }
            id v16 = v15;
            long long v17 = v16;
            if (v16)
            {
              long long v18 = [v16 bridge];
              int v19 = [v18 isEqual:v3];

              if (v19)
              {
                [v23 addObject:v17];
                long long v20 = getBridgedAccessoriesForBridge(v17, v22);
                [v23 addObjectsFromArray:v20];
              }
            }
          }
          uint64_t v11 = [v9 countByEnumeratingWithState:&v24 objects:v28 count:16];
        }
        while (v11);
      }
    }
  }

  return v23;
}

uint64_t __valueDebounceDuration_block_invoke()
{
  return [MEMORY[0x263F42608] setDefaultValue:&unk_26E473858 forPreferenceKey:@"firmwareUpdateCharacteristicValueDebounceDuration"];
}

uint64_t __characteristicPolicyHandlerForFormat_block_invoke(uint64_t a1, void *a2)
{
  id v3 = [a2 value];
  objc_opt_class();
  if (objc_opt_isKindOfClass()) {
    id v4 = v3;
  }
  else {
    id v4 = 0;
  }
  id v5 = v4;

  if (v5) {
    uint64_t v6 = [*(id *)(a1 + 32) containsObject:v5];
  }
  else {
    uint64_t v6 = 1;
  }

  return v6;
}

void __isIgnoredServiceForAutoApply_block_invoke()
{
  id v3 = [MEMORY[0x263F42608] sharedPreferences];
  uint64_t v0 = [v3 preferenceForKey:@"accessoryFirmwareUpdateAutoApplyIgnoredServices"];
  uint64_t v1 = [v0 value];
  uint64_t v2 = (void *)isIgnoredServiceForAutoApply_ignoredServices;
  isIgnoredServiceForAutoApply_ignoredServices = v1;
}

void sub_2301ED13C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_2301EF920(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__250139(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__250140(uint64_t a1)
{
}

void sub_2301F1BC4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location,id a21)
{
  objc_destroyWeak(v23);
  objc_destroyWeak(v22);
  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  objc_destroyWeak(&a21);
  _Unwind_Resume(a1);
}

void sub_2301F2578(_Unwind_Exception *a1)
{
  objc_destroyWeak(v3);
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v4 - 80));
  objc_destroyWeak((id *)(v4 - 72));
  _Unwind_Resume(a1);
}

void sub_2301F2AE8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location, id a18)
{
  objc_destroyWeak(v19);
  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  objc_destroyWeak(&a18);
  _Unwind_Resume(a1);
}

void sub_2301F81A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va1, a11);
  va_start(va, a11);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  uint64_t v16 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

void sub_2301FA44C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_2301FC024(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__250674(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__250675(uint64_t a1)
{
}

void sub_2301FC4F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_2301FC960(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

id __modelIDsFromModelIDStrings(void *a1)
{
  uint64_t v16 = *MEMORY[0x263EF8340];
  id v1 = a1;
  uint64_t v2 = objc_msgSend(MEMORY[0x263EFF980], "arrayWithCapacity:", objc_msgSend(v1, "count"));
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  id v3 = objc_msgSend(v1, "copy", 0);
  uint64_t v4 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = *(void *)v12;
    do
    {
      for (uint64_t i = 0; i != v5; ++i)
      {
        if (*(void *)v12 != v6) {
          objc_enumerationMutation(v3);
        }
        uint64_t v8 = (void *)[objc_alloc(MEMORY[0x263F08C38]) initWithUUIDString:*(void *)(*((void *)&v11 + 1) + 8 * i)];
        if (v8) {
          [v2 addObject:v8];
        }
      }
      uint64_t v5 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
    }
    while (v5);
  }

  id v9 = (void *)[v2 copy];
  return v9;
}

id __accessoriesWithModelIDs(void *a1, void *a2)
{
  uint64_t v41 = *MEMORY[0x263EF8340];
  id v28 = a1;
  id v3 = a2;
  if ([v3 count])
  {
    uint64_t v4 = [v28 user];
    uint64_t v5 = v4;
    if (v4)
    {
      uint64_t v6 = [v4 home];
      if (v6)
      {
        long long v25 = v5;
        id v7 = objc_msgSend(MEMORY[0x263EFF980], "arrayWithCapacity:", objc_msgSend(v3, "count"));
        long long v30 = 0u;
        long long v31 = 0u;
        long long v32 = 0u;
        long long v33 = 0u;
        id v26 = v3;
        id obj = (id)[v3 copy];
        uint64_t v8 = [obj countByEnumeratingWithState:&v30 objects:v40 count:16];
        if (v8)
        {
          uint64_t v9 = v8;
          uint64_t v10 = *(void *)v31;
          long long v27 = v7;
          do
          {
            for (uint64_t i = 0; i != v9; ++i)
            {
              if (*(void *)v31 != v10) {
                objc_enumerationMutation(obj);
              }
              long long v12 = *(void **)(*((void *)&v30 + 1) + 8 * i);
              long long v13 = [v6 accessoryWithUUID:v12];
              if (v13)
              {
                [v7 addObject:v13];
              }
              else
              {
                long long v14 = (void *)MEMORY[0x230FBD990]();
                id v15 = v28;
                uint64_t v16 = HMFGetOSLogHandle();
                if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
                {
                  long long v17 = HMFGetLogIdentifier();
                  long long v18 = [v12 UUIDString];
                  *(_DWORD *)long long buf = 138543874;
                  long long v35 = v17;
                  __int16 v36 = 2112;
                  id v37 = v18;
                  __int16 v38 = 2112;
                  id v39 = v6;
                  _os_log_impl(&dword_22F52A000, v16, OS_LOG_TYPE_ERROR, "%{public}@Failed to find accessory with model ID, %@, in home: %@", buf, 0x20u);

                  id v7 = v27;
                }
              }
            }
            uint64_t v9 = [obj countByEnumeratingWithState:&v30 objects:v40 count:16];
          }
          while (v9);
        }

        int v19 = (void *)[v7 copy];
        uint64_t v5 = v25;
        id v3 = v26;
      }
      else
      {
        int v19 = (void *)MEMORY[0x263EFFA68];
      }
    }
    else
    {
      long long v20 = (void *)MEMORY[0x230FBD990]();
      id v21 = v28;
      id v22 = HMFGetOSLogHandle();
      if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR))
      {
        id v23 = HMFGetLogIdentifier();
        *(_DWORD *)long long buf = 138543362;
        long long v35 = v23;
        _os_log_impl(&dword_22F52A000, v22, OS_LOG_TYPE_ERROR, "%{public}@Missing user", buf, 0xCu);
      }
      int v19 = (void *)MEMORY[0x263EFFA68];
    }
  }
  else
  {
    int v19 = (void *)MEMORY[0x263EFFA68];
  }

  return v19;
}

void sub_2301FDE24(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

id __modelIDStringsFromAccessories(void *a1)
{
  uint64_t v18 = *MEMORY[0x263EF8340];
  id v1 = a1;
  uint64_t v2 = objc_msgSend(MEMORY[0x263EFF980], "arrayWithCapacity:", objc_msgSend(v1, "count"));
  long long v13 = 0u;
  long long v14 = 0u;
  long long v15 = 0u;
  long long v16 = 0u;
  id v3 = objc_msgSend(v1, "copy", 0);
  uint64_t v4 = [v3 countByEnumeratingWithState:&v13 objects:v17 count:16];
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = *(void *)v14;
    do
    {
      for (uint64_t i = 0; i != v5; ++i)
      {
        if (*(void *)v14 != v6) {
          objc_enumerationMutation(v3);
        }
        uint64_t v8 = [*(id *)(*((void *)&v13 + 1) + 8 * i) uuid];
        uint64_t v9 = v8;
        if (v8)
        {
          uint64_t v10 = [v8 UUIDString];
          [v2 addObject:v10];
        }
      }
      uint64_t v5 = [v3 countByEnumeratingWithState:&v13 objects:v17 count:16];
    }
    while (v5);
  }

  long long v11 = (void *)[v2 copy];
  return v11;
}

void sub_2301FF03C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_2301FF47C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2301FF6AC(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2301FFA5C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2301FFD5C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

uint64_t __getType(os_unfair_lock_s *a1)
{
  if (!a1) {
    return 0;
  }
  id v1 = a1 + 2;
  uint64_t v2 = a1;
  os_unfair_lock_lock_with_options();
  uint64_t v3 = *(void *)&v2[14]._os_unfair_lock_opaque;
  os_unfair_lock_unlock(v1);

  return v3;
}

void sub_230201858(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__251169(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__251170(uint64_t a1)
{
}

id __missingElementsFromLeftNotInRight(void *a1, void *a2)
{
  uint64_t v39 = *MEMORY[0x263EF8340];
  id v3 = a1;
  id v4 = a2;
  if (objc_msgSend(v4, "hmf_isEmpty"))
  {
    uint64_t v5 = (void *)[v3 mutableCopy];
  }
  else
  {
    uint64_t v5 = [MEMORY[0x263EFF980] array];
    id v27 = v4;
    id v6 = v4;
    id v7 = objc_alloc_init(MEMORY[0x263EFF9A0]);
    long long v33 = 0u;
    long long v34 = 0u;
    long long v35 = 0u;
    long long v36 = 0u;
    id v8 = v6;
    uint64_t v9 = [v8 countByEnumeratingWithState:&v33 objects:v38 count:16];
    if (v9)
    {
      uint64_t v10 = v9;
      uint64_t v11 = *(void *)v34;
      do
      {
        for (uint64_t i = 0; i != v10; ++i)
        {
          if (*(void *)v34 != v11) {
            objc_enumerationMutation(v8);
          }
          long long v13 = *(void **)(*((void *)&v33 + 1) + 8 * i);
          long long v14 = __itemFromConstraint(v13);
          long long v15 = v14;
          if (v14)
          {
            long long v16 = [v14 identifier];
            [v7 setObject:v13 forKey:v16];
          }
        }
        uint64_t v10 = [v8 countByEnumeratingWithState:&v33 objects:v38 count:16];
      }
      while (v10);
    }

    long long v29 = 0u;
    long long v30 = 0u;
    long long v31 = 0u;
    long long v32 = 0u;
    id v28 = v3;
    id v17 = v3;
    uint64_t v18 = [v17 countByEnumeratingWithState:&v29 objects:v37 count:16];
    if (v18)
    {
      uint64_t v19 = v18;
      uint64_t v20 = *(void *)v30;
      do
      {
        for (uint64_t j = 0; j != v19; ++j)
        {
          if (*(void *)v30 != v20) {
            objc_enumerationMutation(v17);
          }
          id v22 = *(void **)(*((void *)&v29 + 1) + 8 * j);
          id v23 = __itemFromConstraint(v22);
          long long v24 = [v23 identifier];
          long long v25 = [v7 objectForKey:v24];

          if (!v25) {
            [v5 addObject:v22];
          }
        }
        uint64_t v19 = [v17 countByEnumeratingWithState:&v29 objects:v37 count:16];
      }
      while (v19);
    }

    id v4 = v27;
    id v3 = v28;
  }

  return v5;
}

id __deepCopiedConstraints(void *a1)
{
  id v1 = (objc_class *)MEMORY[0x263EFF8C0];
  id v2 = a1;
  id v3 = (void *)[[v1 alloc] initWithArray:v2 copyItems:1];

  return v3;
}

id __itemFromConstraint(void *a1)
{
  id v1 = [a1 value];
  objc_opt_class();
  if (objc_opt_isKindOfClass()) {
    id v2 = v1;
  }
  else {
    id v2 = 0;
  }
  id v3 = v2;

  return v3;
}

void sub_230202B1C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_230203470(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, os_unfair_lock_t lock)
{
}

void sub_2302035F4(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_23020370C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2302037DC(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_230203BA4(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_230203D2C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_230203EC4(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2302041E8(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

BOOL __isConstraintValid(void *a1, void *a2, void *a3)
{
  uint64_t v50 = *MEMORY[0x263EF8340];
  id v5 = a1;
  id v6 = a2;
  uint64_t v7 = [v6 type];
  if ((unint64_t)(v7 - 1) < 2)
  {
    long long v15 = [v6 value];
    objc_opt_class();
    if (objc_opt_isKindOfClass()) {
      long long v16 = v15;
    }
    else {
      long long v16 = 0;
    }
    id v17 = v16;

    BOOL v18 = v17 != 0;
    if (v17) {
      goto LABEL_43;
    }
    uint64_t v19 = (void *)MEMORY[0x230FBD990]();
    id v20 = v5;
    id v21 = HMFGetOSLogHandle();
    if (os_log_type_enabled(v21, OS_LOG_TYPE_INFO))
    {
      id v22 = HMFGetLogIdentifier();
      [v6 value];
      id v23 = v45 = a3;
      *(_DWORD *)long long buf = 138543618;
      id v47 = v22;
      __int16 v48 = 2112;
      id v49 = (id)objc_opt_class();
      id v24 = v49;
      _os_log_impl(&dword_22F52A000, v21, OS_LOG_TYPE_INFO, "%{public}@Invalid constraint value class: %@", buf, 0x16u);

      a3 = v45;
    }

    if (!a3) {
      goto LABEL_43;
    }
    id v25 = [MEMORY[0x263F087E8] hmErrorWithCode:22];
    goto LABEL_41;
  }
  if (v7 == 3)
  {
    id v26 = [v6 value];
    objc_opt_class();
    if (objc_opt_isKindOfClass()) {
      id v27 = v26;
    }
    else {
      id v27 = 0;
    }
    id v17 = v27;

    if (v17)
    {
      if ([v17 compare:&unk_26E4738A0] == 1)
      {
        BOOL v18 = 1;
LABEL_43:

        goto LABEL_44;
      }
      id v37 = (void *)MEMORY[0x230FBD990]();
      id v38 = v5;
      uint64_t v39 = HMFGetOSLogHandle();
      if (os_log_type_enabled(v39, OS_LOG_TYPE_INFO))
      {
        uint64_t v40 = HMFGetLogIdentifier();
        *(_DWORD *)long long buf = 138543618;
        id v47 = v40;
        __int16 v48 = 2112;
        id v49 = v17;
        _os_log_impl(&dword_22F52A000, v39, OS_LOG_TYPE_INFO, "%{public}@Invalid step constraint value: %@", buf, 0x16u);
      }
      if (a3)
      {
        uint64_t v34 = 43;
        goto LABEL_40;
      }
    }
    else
    {
      id v28 = (void *)MEMORY[0x230FBD990]();
      id v29 = v5;
      long long v30 = HMFGetOSLogHandle();
      if (os_log_type_enabled(v30, OS_LOG_TYPE_INFO))
      {
        long long v31 = HMFGetLogIdentifier();
        long long v32 = [v6 value];
        *(_DWORD *)long long buf = 138543618;
        id v47 = v31;
        __int16 v48 = 2112;
        id v49 = (id)objc_opt_class();
        id v33 = v49;
        _os_log_impl(&dword_22F52A000, v30, OS_LOG_TYPE_INFO, "%{public}@Invalid constraint value class: %@", buf, 0x16u);
      }
      if (a3)
      {
        uint64_t v34 = 22;
LABEL_40:
        id v25 = [MEMORY[0x263F087E8] hmErrorWithCode:v34];
        BOOL v18 = 0;
LABEL_41:
        *a3 = v25;
        goto LABEL_43;
      }
    }
    BOOL v18 = 0;
    goto LABEL_43;
  }
  if (v7 != 4) {
    goto LABEL_35;
  }
  uint64_t v8 = [v5 type];
  if (v8 == 5)
  {
    long long v35 = [v6 value];
    objc_opt_class();
    if (objc_opt_isKindOfClass()) {
      long long v36 = v35;
    }
    else {
      long long v36 = 0;
    }
    id v11 = v36;

    if (!v11)
    {
      long long v12 = (void *)MEMORY[0x230FBD990]();
      id v13 = v5;
      long long v14 = HMFGetOSLogHandle();
      if (!os_log_type_enabled(v14, OS_LOG_TYPE_INFO)) {
        goto LABEL_47;
      }
      goto LABEL_46;
    }
    goto LABEL_34;
  }
  if (v8 != 4)
  {
LABEL_35:
    BOOL v18 = 1;
    goto LABEL_44;
  }
  uint64_t v9 = [v6 value];
  objc_opt_class();
  if (objc_opt_isKindOfClass()) {
    uint64_t v10 = v9;
  }
  else {
    uint64_t v10 = 0;
  }
  id v11 = v10;

  if (v11)
  {
LABEL_34:

    goto LABEL_35;
  }
  long long v12 = (void *)MEMORY[0x230FBD990]();
  id v13 = v5;
  long long v14 = HMFGetOSLogHandle();
  if (!os_log_type_enabled(v14, OS_LOG_TYPE_INFO)) {
    goto LABEL_47;
  }
LABEL_46:
  uint64_t v42 = HMFGetLogIdentifier();
  long long v43 = [v6 value];
  *(_DWORD *)long long buf = 138543618;
  id v47 = v42;
  __int16 v48 = 2112;
  id v49 = (id)objc_opt_class();
  id v44 = v49;
  _os_log_impl(&dword_22F52A000, v14, OS_LOG_TYPE_INFO, "%{public}@Invalid constraint value class: %@", buf, 0x16u);

LABEL_47:
  if (a3)
  {
    [MEMORY[0x263F087E8] hmErrorWithCode:22];
    BOOL v18 = 0;
    *a3 = (id)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    BOOL v18 = 0;
  }
LABEL_44:

  return v18;
}

void sub_2302077E4(_Unwind_Exception *a1)
{
}

void sub_2302079A0(_Unwind_Exception *a1)
{
}

void sub_230207A10(_Unwind_Exception *a1)
{
}

void sub_2302087D8(_Unwind_Exception *a1)
{
}

void sub_230208A30(_Unwind_Exception *a1)
{
}

void sub_230208E90(_Unwind_Exception *a1)
{
}

void sub_230209610(_Unwind_Exception *a1)
{
}

void sub_230209DDC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
}

void sub_23020AA04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,char a34)
{
}

uint64_t __Block_byref_object_copy__251489(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__251490(uint64_t a1)
{
}

void sub_23020B7B8(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_23020BA88(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_23020CA4C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id *a17, id *location, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,id a35,id a36)
{
}

void sub_23020D0E4(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_23020E640(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_23020F1A8(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2302105FC(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_230210794(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2302108F0(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_230218898(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__252839(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__252840(uint64_t a1)
{
}

void sub_230218A54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_23021B848(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__253440(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__253441(uint64_t a1)
{
}

void sub_23021C708(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_23021CD5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_23021ED2C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
}

void sub_230220EDC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

__CFString *HMDEventTriggerExecutionStateAsString(unint64_t a1)
{
  if (a1 >= 7)
  {
    objc_msgSend(NSString, "stringWithFormat:", @"Unknown HMDEventTriggerExecutionState %tu", a1);
    id v1 = (__CFString *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    id v1 = off_264A2CF40[a1];
  }
  return v1;
}

void sub_230222EEC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,id location)
{
  objc_destroyWeak(v26);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_23022454C(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 128), 8);
  _Unwind_Resume(a1);
}

void sub_230224BF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_230225468(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_230227B0C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_23022A3B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va1, a11);
  va_start(va, a11);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  uint64_t v16 = va_arg(va1, void);
  uint64_t v17 = va_arg(va1, void);
  uint64_t v18 = va_arg(va1, void);
  _Block_object_dispose(va1, 8);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__254644(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__254645(uint64_t a1)
{
}

void sub_23022BD48(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_23022C7A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_23022F1CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_23022F7C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_230231278(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_230235FE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id __descriptionHeader(void *a1)
{
  uint64_t v1 = NSString;
  id v2 = a1;
  id v3 = [v2 author];
  id v4 = [v2 context];

  id v5 = [v1 stringWithFormat:@"A: %@  C: %@", v3, v4];

  return v5;
}

void sub_2302380CC(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void __removeRegistrations(void *a1, void *a2, void *a3)
{
  id v5 = a1;
  v11[0] = MEMORY[0x263EF8330];
  v11[1] = 3221225472;
  v11[2] = ____removeRegistrations_block_invoke;
  v11[3] = &unk_264A2D5D0;
  id v6 = v5;
  id v12 = v6;
  id v7 = a3;
  objc_msgSend(a2, "hmf_enumerateWithAutoreleasePoolUsingBlock:", v11);
  v9[0] = MEMORY[0x263EF8330];
  v9[1] = 3221225472;
  void v9[2] = ____removeRegistrations_block_invoke_2;
  void v9[3] = &unk_264A2D5F8;
  id v10 = v6;
  id v8 = v6;
  objc_msgSend(v7, "hmf_enumerateWithAutoreleasePoolUsingBlock:", v9);
}

uint64_t ____removeRegistrations_block_invoke(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a1 + 32);
  if (v4) {
    id v5 = *(void **)(v4 + 24);
  }
  else {
    id v5 = 0;
  }
  [v5 removeObjectForKey:a2];
  uint64_t v6 = *(void *)(a1 + 32);
  if (v6) {
    id v7 = *(void **)(v6 + 32);
  }
  else {
    id v7 = 0;
  }
  [v7 removeObjectForKey:a2];
  uint64_t v8 = *(void *)(a1 + 32);
  if (v8) {
    uint64_t v9 = *(void **)(v8 + 48);
  }
  else {
    uint64_t v9 = 0;
  }
  return [v9 removeObjectForKey:a2];
}

void ____removeRegistrations_block_invoke_2(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3) {
    uint64_t v4 = *(void **)(v3 + 40);
  }
  else {
    uint64_t v4 = 0;
  }
  id v7 = a2;
  objc_msgSend(v4, "removeObjectForKey:");
  uint64_t v5 = *(void *)(a1 + 32);
  if (v5) {
    uint64_t v6 = *(void **)(v5 + 56);
  }
  else {
    uint64_t v6 = 0;
  }
  [v6 removeObjectForKey:v7];
}

void sub_230238688(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_230238940(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void _binChanges(void *a1, uint64_t a2, void *a3, void *a4, void *a5)
{
  id v9 = a1;
  id v10 = a3;
  id v11 = a4;
  id v12 = a5;
  if ([v11 count] || objc_msgSend(v12, "count"))
  {
    uint64_t v19 = 0;
    id v20 = &v19;
    uint64_t v21 = 0x3032000000;
    id v22 = __Block_byref_object_copy__255694;
    id v23 = __Block_byref_object_dispose__255695;
    id v24 = 0;
    v13[0] = MEMORY[0x263EF8330];
    v13[1] = 3221225472;
    v13[2] = ___binChanges_block_invoke;
    v13[3] = &unk_264A2D5A8;
    id v14 = v9;
    id v15 = v11;
    id v16 = v12;
    uint64_t v17 = &v19;
    uint64_t v18 = a2;
    objc_msgSend(v10, "hmf_enumerateWithAutoreleasePoolUsingBlock:", v13);
    if (v20[5]) {
      objc_msgSend(v10, "minusSet:");
    }

    _Block_object_dispose(&v19, 8);
  }
}

void sub_230238AC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__255694(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__255695(uint64_t a1)
{
}

void ___binChanges_block_invoke(uint64_t a1, void *a2)
{
  id v33 = a2;
  objc_opt_class();
  if (objc_opt_isKindOfClass()) {
    uint64_t v3 = v33;
  }
  else {
    uint64_t v3 = 0;
  }
  id v4 = v3;
  if (v4)
  {
    uint64_t v5 = *(void **)(a1 + 32);
    if (!v5 || [v5 modelBelongsToThisPartition:v33])
    {
      uint64_t v6 = [*(id *)(a1 + 40) objectForKey:objc_opt_class()];
      id v7 = -[HMCRedirectorTuple strongify](v6);

      if (v7) {
        goto LABEL_9;
      }
      uint64_t v8 = *(void **)(a1 + 48);
      id v9 = [v4 modelID];
      id v10 = [v8 objectForKey:v9];
      id v7 = -[HMCRedirectorTuple strongify](v10);

      if (v7)
      {
LABEL_9:
        id v11 = *(void **)(*(void *)(*(void *)(a1 + 56) + 8) + 40);
        if (!v11)
        {
          id v12 = objc_alloc_init(MEMORY[0x263EFF9C0]);
          uint64_t v13 = *(void *)(*(void *)(a1 + 56) + 8);
          id v14 = *(void **)(v13 + 40);
          *(void *)(v13 + 40) = v12;

          id v11 = *(void **)(*(void *)(*(void *)(a1 + 56) + 8) + 40);
        }
        [v11 addObject:v33];
        id v15 = **(void ***)(a1 + 64);
        if (!v15)
        {
          uint64_t v16 = [MEMORY[0x263F08968] strongToStrongObjectsMapTable];
          uint64_t v17 = *(void ***)(a1 + 64);
          uint64_t v18 = *v17;
          uint64_t *v17 = (void *)v16;

          id v15 = **(void ***)(a1 + 64);
        }
        uint64_t v19 = [v15 objectForKey:v7];
        if (!v19)
        {
          uint64_t v19 = [MEMORY[0x263EFF9C0] set];
          [**(id **)(a1 + 64) setObject:v19 forKey:v7];
        }
        id v20 = [HMCRedirectorChangeItem alloc];
        uint64_t v21 = *(void *)(a1 + 48);
        id v22 = v4;
        if (v20)
        {
          v34.receiver = v20;
          v34.super_class = (Class)HMCRedirectorChangeItem;
          id v20 = (HMCRedirectorChangeItem *)objc_msgSendSuper2(&v34, sel_init);
          if (v20)
          {
            uint64_t v23 = [(id)objc_opt_class() backingModelProtocol];
            modelType = v20->_modelType;
            v20->_modelType = (Protocol *)v23;

            uint64_t v25 = [v22 modelID];
            modelID = v20->_modelID;
            v20->_modelID = (NSUUID *)v25;

            id v27 = (void *)MEMORY[0x263EFFA08];
            if (v21)
            {
              id v28 = [v22 changedValues];
              id v29 = [v28 allKeys];
              uint64_t v30 = [v27 setWithArray:v29];
              changedProperties = v20->_changedProperties;
              v20->_changedProperties = (NSSet *)v30;
            }
            else
            {
              uint64_t v32 = [MEMORY[0x263EFFA08] set];
              id v28 = v20->_changedProperties;
              v20->_changedProperties = (NSSet *)v32;
            }
          }
        }

        [v19 addObject:v20];
      }
    }
  }
}

void sub_230240BFC(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_230240C68(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_230240CD4(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_230241134(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_23024797C(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 176), 8);
  _Unwind_Resume(a1);
}

__CFString *HMDResetConfigPostCleanupStepsToString(uint64_t a1)
{
  if (!a1)
  {
    id v2 = @"Unknown";
    goto LABEL_15;
  }
  __int16 v1 = a1;
  if (a1 == -1)
  {
    id v2 = @"everything";
    goto LABEL_15;
  }
  uint64_t v3 = [MEMORY[0x263EFF980] array];
  id v4 = v3;
  if ((v1 & 2) != 0)
  {
    [v3 addObject:@"working store"];
    if ((v1 & 4) == 0)
    {
LABEL_7:
      if ((v1 & 8) == 0) {
        goto LABEL_8;
      }
      goto LABEL_20;
    }
  }
  else if ((v1 & 4) == 0)
  {
    goto LABEL_7;
  }
  [v4 addObject:@"cloud store"];
  if ((v1 & 8) == 0)
  {
LABEL_8:
    if ((v1 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_21;
  }
LABEL_20:
  [v4 addObject:@"local store"];
  if ((v1 & 0x10) == 0)
  {
LABEL_9:
    if ((v1 & 0x20) == 0) {
      goto LABEL_10;
    }
    goto LABEL_22;
  }
LABEL_21:
  [v4 addObject:@"shared cloud store"];
  if ((v1 & 0x20) == 0)
  {
LABEL_10:
    if ((v1 & 0x40) == 0) {
      goto LABEL_11;
    }
    goto LABEL_23;
  }
LABEL_22:
  [v4 addObject:@"HH1 keyed archive"];
  if ((v1 & 0x40) == 0)
  {
LABEL_11:
    if ((v1 & 0x80) == 0) {
      goto LABEL_12;
    }
LABEL_24:
    [v4 addObject:@"everything except demo mode"];
    if ((v1 & 0x100) == 0) {
      goto LABEL_14;
    }
    goto LABEL_13;
  }
LABEL_23:
  [v4 addObject:@"HH1 SQL store"];
  if ((v1 & 0x80) != 0) {
    goto LABEL_24;
  }
LABEL_12:
  if ((v1 & 0x100) != 0) {
LABEL_13:
  }
    [v4 addObject:@"client store"];
LABEL_14:
  id v2 = [v4 componentsJoinedByString:@", "];

LABEL_15:
  return v2;
}

void sub_230251F20(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
}

BOOL HMDIsEmptyHome(void *a1)
{
  id v1 = a1;
  id v2 = [v1 rooms];
  if ([v2 count])
  {
    BOOL v3 = 0;
  }
  else
  {
    id v4 = [v1 accessories];
    if ([v4 count])
    {
      BOOL v3 = 0;
    }
    else
    {
      uint64_t v5 = [v1 sharedUsers];
      if ([v5 count])
      {
        BOOL v3 = 0;
      }
      else
      {
        uint64_t v6 = [v1 outgoingInvitations];
        BOOL v3 = [v6 count] == 0;
      }
    }
  }
  return v3;
}

uint64_t identifierForTargetWithUUID(void *a1, void *a2)
{
  v11[1] = *MEMORY[0x263EF8340];
  id v3 = a1;
  id v4 = v3;
  do
  {
    uint64_t v5 = v4;
    uint64_t v6 = (void *)MEMORY[0x263F08C38];
    id v7 = [a2 UUIDString];
    v11[0] = v7;
    uint64_t v8 = [MEMORY[0x263EFF8C0] arrayWithObjects:v11 count:1];
    id v4 = objc_msgSend(v6, "hm_deriveUUIDFromBaseUUID:withSalts:", v5, v8);

    uint64_t v9 = [v4 hash];
  }
  while (!v9);

  return v9;
}

uint64_t mapTargetCategory(void *a1)
{
  id v1 = a1;
  id v2 = +[HMDHAPMetadata getSharedInstance];
  id v3 = [v1 categoryType];

  id v4 = [v2 categoryForType:v3];

  uint64_t v5 = [v4 identifier];
  uint64_t v6 = [v5 unsignedShortValue];

  return v6;
}

id buttonConfigurationAsString(void *a1)
{
  uint64_t v16 = *MEMORY[0x263EF8340];
  id v1 = a1;
  id v2 = [MEMORY[0x263F089D8] string];
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  id v3 = v1;
  uint64_t v4 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = *(void *)v12;
    do
    {
      for (uint64_t i = 0; i != v5; ++i)
      {
        if (*(void *)v12 != v6) {
          objc_enumerationMutation(v3);
        }
        uint64_t v8 = [*(id *)(*((void *)&v11 + 1) + 8 * i) shortDescription];
        [v2 appendFormat:@"%@, ", v8];
      }
      uint64_t v5 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
    }
    while (v5);
  }

  uint64_t v9 = (void *)[v2 copy];
  return v9;
}

void sub_230253220(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 208), 8);
  _Unwind_Resume(a1);
}

void logRemoteMessageEvent(void *a1, void *a2, void *a3)
{
  id v22 = a1;
  id v5 = a3;
  id v6 = a2;
  id v7 = objc_msgSend(v6, "hmf_stringForKey:", @"kRemoteMessageAttributedMessageNameKey");
  uint64_t v8 = v7;
  if (v7)
  {
    id v9 = v7;
  }
  else
  {
    objc_msgSend(v22, "hmf_stringForKey:", @"kIDSMessageNameKey");
    id v9 = (id)objc_claimAutoreleasedReturnValue();
  }
  id v10 = v9;

  long long v11 = objc_msgSend(v22, "hmf_UUIDForKey:", @"kIDSMessageIdentifierKey");
  uint64_t v12 = objc_msgSend(v6, "hmf_stringForKey:", @"kRemoteMessagePeerInformationKey");
  long long v13 = (void *)v12;
  long long v14 = @"Unknown";
  if (v12) {
    long long v14 = (__CFString *)v12;
  }
  id v15 = v14;

  uint64_t v16 = objc_msgSend(v6, "hmf_numberForKey:", @"kRemoteMessageTransportAttributionKey");
  int v17 = [v16 unsignedIntegerValue];
  uint64_t v18 = objc_msgSend(v6, "hmf_numberForKey:", @"kRemoteMessageQoSKey");

  uint64_t v19 = +[HMDMetricsManager sharedLogEventSubmitter];
  LODWORD(v21) = v17;
  id v20 = +[HMDRemoteMessageLogEvent receivedRemoteMessageName:identifier:transactionIdentifier:messageType:peerInformation:secure:transportType:messageQoS:](HMDRemoteMessageLogEvent, "receivedRemoteMessageName:identifier:transactionIdentifier:messageType:peerInformation:secure:transportType:messageQoS:", v10, v11, v5, 0, v15, 1, v21, [v18 integerValue]);

  [v19 submitLogEvent:v20];
}

id augmentResponseOptions(void *a1, void *a2)
{
  id v3 = a1;
  uint64_t v4 = v3;
  if (a2)
  {
    id v5 = a2;
    id v6 = (void *)[v4 mutableCopy];
    [v6 setObject:v5 forKey:@"kRemoteMessageAttributedMessageNameKey"];

    id v7 = (id)[v6 copy];
  }
  else
  {
    id v7 = v3;
  }

  return v7;
}

uint64_t _pairingCopyIdentity(uint64_t a1, char **a2, _OWORD *a3, _OWORD *a4, void *a5)
{
  uint64_t v8 = a5;
  id v9 = v8;
  uint64_t v28 = 0;
  id v29 = &v28;
  uint64_t v30 = 0x3032000000;
  long long v31 = __Block_byref_object_copy__258621;
  uint64_t v32 = __Block_byref_object_dispose__258622;
  id v33 = 0;
  if (!v8[23])
  {
    uint64_t v24 = 4294960534;
    goto LABEL_17;
  }
  id v10 = v8[30];
  v27[0] = MEMORY[0x263EF8330];
  v27[1] = 3221225472;
  v27[2] = ___pairingCopyIdentity_block_invoke;
  v27[3] = &unk_264A2F0A0;
  void v27[4] = v9;
  v27[5] = &v28;
  dispatch_sync(v10, v27);
  long long v11 = (void *)v29[5];
  if (!v11)
  {
    uint64_t v24 = 4294960569;
    goto LABEL_17;
  }
  if (a2)
  {
    uint64_t v12 = [v11 identifier];
    uint64_t v13 = [v12 lengthOfBytesUsingEncoding:4];

    if (!v13)
    {
      uint64_t v24 = 4294960553;
      goto LABEL_17;
    }
    size_t v14 = v13 + 1;
    id v15 = (char *)malloc_type_calloc(v13 + 1, 1uLL, 0x100004077774924uLL);
    if (!v15)
    {
      uint64_t v24 = 4294960568;
      goto LABEL_17;
    }
    id v16 = [(id)v29[5] identifier];
    strlcpy(v15, (const char *)[v16 UTF8String], v14);

    *a2 = v15;
  }
  if (a3)
  {
    int v17 = [(id)v29[5] publicKey];
    id v18 = [v17 data];

    if (!v18)
    {
LABEL_18:
      uint64_t v24 = 4294960569;
      goto LABEL_15;
    }
    if ([v18 length] != 32)
    {
LABEL_19:
      uint64_t v24 = 4294960553;
      goto LABEL_15;
    }
    id v19 = v18;
    id v20 = (_OWORD *)[v19 bytes];
    long long v21 = v20[1];
    *a3 = *v20;
    a3[1] = v21;
  }
  if (!a4)
  {
    uint64_t v24 = 0;
    goto LABEL_17;
  }
  id v22 = [(id)v29[5] privateKey];
  id v18 = [v22 data];

  if (!v18) {
    goto LABEL_18;
  }
  if ([v18 length] != 32) {
    goto LABEL_19;
  }
  id v18 = v18;
  uint64_t v23 = (_OWORD *)[v18 bytes];
  uint64_t v24 = 0;
  long long v25 = v23[1];
  *a4 = *v23;
  a4[1] = v25;
LABEL_15:

LABEL_17:
  _Block_object_dispose(&v28, 8);

  return v24;
}

void sub_230255570(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__258621(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__258622(uint64_t a1)
{
}

void ___pairingCopyIdentity_block_invoke(uint64_t a1)
{
  uint64_t v16 = *MEMORY[0x263EF8340];
  uint64_t v2 = *(void *)(*(void *)(a1 + 32) + 184);
  id v11 = 0;
  uint64_t v3 = (*(void (**)(void))(v2 + 16))();
  id v4 = v11;
  uint64_t v5 = *(void *)(*(void *)(a1 + 40) + 8);
  id v6 = *(void **)(v5 + 40);
  *(void *)(v5 + 40) = v3;

  if (!*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40))
  {
    id v7 = (void *)MEMORY[0x230FBD990]();
    id v8 = *(id *)(a1 + 32);
    id v9 = HMFGetOSLogHandle();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      id v10 = HMFGetLogIdentifier();
      *(_DWORD *)long long buf = 138543618;
      uint64_t v13 = v10;
      __int16 v14 = 2112;
      id v15 = v4;
      _os_log_impl(&dword_22F52A000, v9, OS_LOG_TYPE_DEFAULT, "%{public}@Failed to get local pairing identity with error: %@", buf, 0x16u);
    }
  }
}

uint64_t _pairingFindPeer(uint64_t a1, uint64_t a2, _OWORD *a3, void *a4)
{
  id v7 = a4;
  uint64_t v19 = 0;
  id v20 = &v19;
  uint64_t v21 = 0x3032000000;
  id v22 = __Block_byref_object_copy__258621;
  uint64_t v23 = __Block_byref_object_dispose__258622;
  id v24 = 0;
  if (v7[24])
  {
    id v8 = (void *)[[NSString alloc] initWithBytes:a1 length:a2 encoding:4];
    if (v8)
    {
      id v9 = v7[30];
      block[0] = MEMORY[0x263EF8330];
      block[1] = 3221225472;
      block[2] = ___pairingFindPeer_block_invoke;
      block[3] = &unk_264A2F698;
      id v18 = &v19;
      void block[4] = v7;
      id v10 = v8;
      id v17 = v10;
      dispatch_sync(v9, block);

      id v11 = (void *)v20[5];
      if (v11)
      {
        if ([v11 length] == 32)
        {
          uint64_t v12 = (_OWORD *)[ (id) v20[5] bytes];
          uint64_t v13 = 0;
          long long v14 = v12[1];
          *a3 = *v12;
          a3[1] = v14;
        }
        else
        {
          uint64_t v13 = 4294960553;
        }
      }
      else
      {
        uint64_t v13 = 4294960569;
      }
    }
    else
    {
      id v10 = 0;
      uint64_t v13 = 4294960579;
    }
  }
  else
  {
    id v10 = 0;
    uint64_t v13 = 4294960534;
  }
  _Block_object_dispose(&v19, 8);

  return v13;
}

void sub_2302558A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void ___pairingFindPeer_block_invoke(uint64_t a1)
{
  uint64_t v19 = *MEMORY[0x263EF8340];
  uint64_t v2 = *(void *)(*(void *)(a1 + 32) + 192);
  id v12 = 0;
  uint64_t v3 = (*(void (**)(void))(v2 + 16))();
  id v4 = v12;
  uint64_t v5 = *(void *)(*(void *)(a1 + 48) + 8);
  id v6 = *(void **)(v5 + 40);
  *(void *)(v5 + 40) = v3;

  if (!*(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40))
  {
    id v7 = (void *)MEMORY[0x230FBD990]();
    id v8 = *(id *)(a1 + 32);
    id v9 = HMFGetOSLogHandle();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      id v10 = HMFGetLogIdentifier();
      uint64_t v11 = *(void *)(a1 + 40);
      *(_DWORD *)long long buf = 138543874;
      long long v14 = v10;
      __int16 v15 = 2112;
      uint64_t v16 = v11;
      __int16 v17 = 2112;
      id v18 = v4;
      _os_log_impl(&dword_22F52A000, v9, OS_LOG_TYPE_DEFAULT, "%{public}@Find peer %@ failed: %@", buf, 0x20u);
    }
  }
}

void sub_23025C900(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  objc_destroyWeak(v17);
  __HMFActivityScopeLeave();
  objc_destroyWeak((id *)(v18 - 112));
  _Unwind_Resume(a1);
}

void sub_23025CA6C(_Unwind_Exception *a1)
{
}

void sub_23025D324(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 144));
  _Unwind_Resume(a1);
}

void sub_23025F5FC(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_230261FA4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,id location)
{
  objc_destroyWeak(v23);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_230262444(_Unwind_Exception *a1)
{
}

void sub_230263B70(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_230263C3C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_230265020(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
}

void sub_230265D94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_23026624C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2302664DC(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_230266590(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2302666F8(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2302668BC(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_230266980(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_230266CB8(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_230266E5C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_23026C360(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_230272FBC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, os_unfair_lock_t lock)
{
}

void sub_230273474(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_unfair_lock_t lock)
{
}

void sub_230273528(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_230273640(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2302739F8(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_230273CEC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_unfair_lock_t lock)
{
}

void sub_2302799A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, os_unfair_lock_t lock)
{
}

void sub_23027A304(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_23027A560(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_23027A708(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_23027BBAC(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_23027BD2C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_23027BFF8(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_23027C53C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, os_unfair_lock_t lock)
{
}

void sub_23027C9EC(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_23027CB50(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_23027E41C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_2302802A8(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

__CFString *HMDCameraRecordingAudioCodecTypeAsString(uint64_t a1)
{
  if (a1)
  {
    if (a1 == 1)
    {
      uint64_t v2 = @"HMDCameraRecordingAudioCodecTypeAACELD";
    }
    else
    {
      objc_msgSend(NSString, "stringWithFormat:", @"Unknown HMDCameraRecordingAudioCodecType %ld", a1);
      uint64_t v2 = (__CFString *)objc_claimAutoreleasedReturnValue();
    }
  }
  else
  {
    uint64_t v2 = @"HMDCameraRecordingAudioCodecTypeAACLC";
  }
  return v2;
}

__CFString *HMDCameraRecordingAudioBitRateModeTypeAsString(uint64_t a1)
{
  if (a1)
  {
    if (a1 == 1)
    {
      uint64_t v2 = @"HMDCameraRecordingAudioBitRateModeTypeConstant";
    }
    else
    {
      objc_msgSend(NSString, "stringWithFormat:", @"Unknown HMDCameraRecordingAudioBitRateModeType %ld", a1);
      uint64_t v2 = (__CFString *)objc_claimAutoreleasedReturnValue();
    }
  }
  else
  {
    uint64_t v2 = @"HMDCameraRecordingAudioBitRateModeTypeVariable";
  }
  return v2;
}

__CFString *HMDCameraRecordingAudioSampleRateTypeAsString(unint64_t a1)
{
  if (a1 >= 6)
  {
    objc_msgSend(NSString, "stringWithFormat:", @"Unknown HMDCameraRecordingAudioSampleRateType %ld", a1);
    uint64_t v1 = (__CFString *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    uint64_t v1 = off_264A2E558[a1];
  }
  return v1;
}

void sub_2302858A4(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_230285C38(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

uint64_t checkValueOfClass(uint64_t a1, uint64_t a2, void *a3)
{
  char isKindOfClass = objc_opt_isKindOfClass();
  char v6 = isKindOfClass;
  if (a3 && (isKindOfClass & 1) == 0)
  {
    id v7 = (void *)MEMORY[0x263F087E8];
    id v8 = [NSString stringWithFormat:@"Expected %@", a2];
    *a3 = [v7 hmfErrorWithCode:3 reason:v8];
  }
  return v6 & 1;
}

void classMethodNotAvailable()
{
  id v0 = [MEMORY[0x263EFF940] exceptionWithName:*MEMORY[0x263EFF498] reason:@"class methods are not supported when adapting NSValueTransformers" userInfo:0];
  objc_exception_throw(v0);
}

void sub_23028C3E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location)
{
  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id accessoryRequestMapFromRequests(void *a1, void *a2, void *a3)
{
  uint64_t v59 = *MEMORY[0x263EF8340];
  id v5 = a1;
  id v48 = a2;
  id v46 = a3;
  char v6 = [MEMORY[0x263F08968] strongToStrongObjectsMapTable];
  long long v50 = 0u;
  long long v51 = 0u;
  long long v52 = 0u;
  long long v53 = 0u;
  id obj = v5;
  uint64_t v7 = [obj countByEnumeratingWithState:&v50 objects:v58 count:16];
  if (v7)
  {
    uint64_t v9 = v7;
    uint64_t v10 = *(void *)v51;
    *(void *)&long long v8 = 138543618;
    long long v45 = v8;
    do
    {
      uint64_t v11 = 0;
      uint64_t v47 = v9;
      do
      {
        if (*(void *)v51 != v10) {
          objc_enumerationMutation(obj);
        }
        id v12 = *(void **)(*((void *)&v50 + 1) + 8 * v11);
        uint64_t v13 = objc_msgSend(v12, "accessory", v45);
        if (v13)
        {
          long long v14 = (void *)v13;
          objc_opt_class();
          if ((objc_opt_isKindOfClass() & 1) == 0) {
            goto LABEL_12;
          }
          uint64_t v15 = v10;
          uint64_t v16 = v6;
          __int16 v17 = [v12 characteristic];
          uint64_t v18 = [v17 type];
          uint64_t v19 = [v12 service];
          id v20 = [v19 type];
          BOOL v21 = +[HMDHAPMetadata isOwnerPrivilegeRequiredForWritingCharacteristicType:v18 serviceType:v20];

          if (v21 && ([v46 isOwner] & 1) == 0)
          {
            id v33 = (void *)MEMORY[0x230FBD990]();
            objc_super v34 = HMFGetOSLogHandle();
            char v6 = v16;
            if (os_log_type_enabled(v34, OS_LOG_TYPE_ERROR))
            {
              long long v35 = HMFGetLogIdentifier();
              *(_DWORD *)long long buf = v45;
              id v55 = v35;
              __int16 v56 = 2112;
              id v57 = v12;
              _os_log_impl(&dword_22F52A000, v34, OS_LOG_TYPE_ERROR, "%{public}@Aborting characteristic write request that requires owner privilege: %@", buf, 0x16u);
            }
            long long v36 = [MEMORY[0x263F087E8] hmErrorWithCode:10];
            id v37 = +[HMDCharacteristicResponse responseWithRequest:v12 error:v36];

            [v48 addObject:v37];
            uint64_t v10 = v15;
            uint64_t v9 = v47;
          }
          else
          {
            id v22 = [v12 characteristic];
            uint64_t v23 = [v22 type];
            id v24 = [v12 service];
            long long v25 = [v24 type];
            BOOL v26 = +[HMDHAPMetadata isAdminPrivilegeRequiredForWritingCharacteristicType:v23 serviceType:v25];

            char v6 = v16;
            uint64_t v10 = v15;
            uint64_t v9 = v47;
            if (!v26 || ([v46 isAdministrator] & 1) != 0)
            {
LABEL_12:
              if (([v14 isPrimary] & 1) == 0)
              {
                uint64_t v27 = [v14 bridge];

                long long v14 = (void *)v27;
              }
              uint64_t v28 = [v6 objectForKey:v14];
              if (!v28)
              {
                uint64_t v28 = [MEMORY[0x263EFF980] array];
                [v6 setObject:v28 forKey:v14];
              }
              [v28 addObject:v12];

              goto LABEL_20;
            }
            id v38 = (void *)MEMORY[0x230FBD990]();
            uint64_t v39 = HMFGetOSLogHandle();
            if (os_log_type_enabled(v39, OS_LOG_TYPE_ERROR))
            {
              uint64_t v40 = HMFGetLogIdentifier();
              *(_DWORD *)long long buf = v45;
              id v55 = v40;
              __int16 v56 = 2112;
              id v57 = v12;
              _os_log_impl(&dword_22F52A000, v39, OS_LOG_TYPE_ERROR, "%{public}@Aborting characteristic write request that requires admin privilege: %@", buf, 0x16u);
            }
            uint64_t v41 = [MEMORY[0x263F087E8] hmErrorWithCode:10];
            uint64_t v42 = +[HMDCharacteristicResponse responseWithRequest:v12 error:v41];

            [v48 addObject:v42];
          }
        }
        else
        {
          id v29 = (void *)MEMORY[0x230FBD990]();
          uint64_t v30 = HMFGetOSLogHandle();
          if (os_log_type_enabled(v30, OS_LOG_TYPE_ERROR))
          {
            long long v31 = HMFGetLogIdentifier();
            *(_DWORD *)long long buf = v45;
            id v55 = v31;
            __int16 v56 = 2112;
            id v57 = v12;
            _os_log_impl(&dword_22F52A000, v30, OS_LOG_TYPE_ERROR, "%{public}@Aborting characteristic request: %@, accessory is nil", buf, 0x16u);
          }
          uint64_t v32 = [MEMORY[0x263F087E8] hmErrorWithCode:2];
          long long v14 = +[HMDCharacteristicResponse responseWithRequest:v12 error:v32];

          [v48 addObject:v14];
        }
LABEL_20:

        ++v11;
      }
      while (v9 != v11);
      uint64_t v43 = [obj countByEnumeratingWithState:&v50 objects:v58 count:16];
      uint64_t v9 = v43;
    }
    while (v43);
  }

  return v6;
}

void sub_2302906A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,id location)
{
  objc_destroyWeak(v24);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_230291BAC(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_2302922A0(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_230292A78(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id __writeRequestsFromRequests_block_invoke(uint64_t a1, void *a2)
{
  id v2 = a2;
  objc_opt_class();
  if (objc_opt_isKindOfClass()) {
    uint64_t v3 = v2;
  }
  else {
    uint64_t v3 = 0;
  }
  id v4 = v3;

  return v4;
}

uint64_t __migrateRequestsPassingTest_block_invoke(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_23029462C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, os_unfair_lock_t lock)
{
}

void sub_230294728(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2302947D0(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_230295E80(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_230296304(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id HMDRemoteMessagePayloadKeysForTransportMetadata()
{
  if (HMDRemoteMessagePayloadKeysForTransportMetadata_onceToken != -1) {
    dispatch_once(&HMDRemoteMessagePayloadKeysForTransportMetadata_onceToken, &__block_literal_global_266337);
  }
  id v0 = (void *)HMDRemoteMessagePayloadKeysForTransportMetadata_keys;
  return v0;
}

void __HMDRemoteMessagePayloadKeysForTransportMetadata_block_invoke()
{
  v2[3] = *MEMORY[0x263EF8340];
  v2[0] = @"kIDSMessageSourceIDKey";
  v2[1] = @"kRemoteMessageIsFinalResponseKey";
  v2[2] = @"kRemoteMessageTransportAttributionKey";
  uint64_t v0 = [MEMORY[0x263EFF8C0] arrayWithObjects:v2 count:3];
  uint64_t v1 = (void *)HMDRemoteMessagePayloadKeysForTransportMetadata_keys;
  HMDRemoteMessagePayloadKeysForTransportMetadata_keys = v0;
}

void sub_2302A3C74(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_2302A3FEC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_2302A432C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_2302A4BFC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location)
{
  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_2302A9434(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  va_start(va, a17);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__267351(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__267352(uint64_t a1)
{
}

void sub_2302ABB54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_2302AC220(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_2302ACC6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__267809(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__267810(uint64_t a1)
{
}

void sub_2302AD240(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_2302AD9EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_2302AE034(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_2302AE3AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_2302AE7D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_2302B1EF0(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2302B211C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2302B27F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_2302B8628(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_2302BB668(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void __updateLoggedInAccount(void *a1, void *a2, void *a3)
{
  uint64_t v36 = *MEMORY[0x263EF8340];
  id v5 = a1;
  id v6 = a2;
  id v7 = a3;
  long long v8 = (void *)MEMORY[0x230FBD990]();
  id v9 = v5;
  uint64_t v10 = HMFGetOSLogHandle();
  if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
  {
    uint64_t v11 = HMFGetLogIdentifier();
    *(_DWORD *)long long buf = 138543618;
    id v33 = v11;
    __int16 v34 = 2112;
    id v35 = v6;
    _os_log_impl(&dword_22F52A000, v10, OS_LOG_TYPE_INFO, "%{public}@Posting transaction to update logged in account to %@", buf, 0x16u);
  }
  id v12 = [v9 accessory];
  id v13 = [v12 transactionWithObjectChangeType:2];
  objc_opt_class();
  if (objc_opt_isKindOfClass()) {
    long long v14 = v13;
  }
  else {
    long long v14 = 0;
  }
  id v15 = v14;

  if (v15)
  {
    uint64_t v16 = encodeRootObject();
    [v15 setLoggedInAccount:v16];

    long long v31 = [v12 home];
    __int16 v17 = [v31 backingStore];
    uint64_t v18 = [v7 name];
    +[HMDBackingStoreTransactionOptions defaultXPCOptions];
    id v19 = v13;
    id v20 = v15;
    id v21 = v9;
    id v22 = v12;
    id v23 = v7;
    long long v25 = v24 = v6;
    BOOL v26 = [v17 transaction:v18 options:v25];

    id v6 = v24;
    id v7 = v23;
    id v12 = v22;
    id v9 = v21;
    id v15 = v20;
    id v13 = v19;

    [v26 add:v15 withMessage:v7];
    [v26 run];
  }
  else
  {
    uint64_t v27 = (void *)MEMORY[0x230FBD990]();
    id v28 = v9;
    id v29 = HMFGetOSLogHandle();
    if (os_log_type_enabled(v29, OS_LOG_TYPE_ERROR))
    {
      uint64_t v30 = HMFGetLogIdentifier();
      *(_DWORD *)long long buf = 138543362;
      id v33 = v30;
      _os_log_impl(&dword_22F52A000, v29, OS_LOG_TYPE_ERROR, "%{public}@Did not obtain apple media accessory model type to update logged in account.", buf, 0xCu);
    }
  }
}

__CFString *HMDMediaDestinationManagerFailureCodeAsString(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) >= 3)
  {
    id v2 = NSString;
    uint64_t v3 = [NSNumber numberWithUnsignedInteger:a1];
    uint64_t v1 = [v2 stringWithFormat:@"failureCode(%@)", v3];
  }
  else
  {
    uint64_t v1 = off_264A2F450[a1 - 1];
  }
  return v1;
}

void sub_2302CD700(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,id location)
{
  objc_destroyWeak(v22);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_2302CE378(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
}

uint64_t __Block_byref_object_copy__273009(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__273010(uint64_t a1)
{
}

void sub_2302D08A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,char a43)
{
}

void sub_2302D1DD4(_Unwind_Exception *a1)
{
}

uint64_t __Block_byref_object_copy__273357(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__273358(uint64_t a1)
{
}

void sub_2302D3904(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 256));
  _Unwind_Resume(a1);
}

void sub_2302D40CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location, id a15)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  objc_destroyWeak(&a15);
  _Unwind_Resume(a1);
}

void sub_2302D5D04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,char a34)
{
}

uint64_t __Block_byref_object_copy__273684(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__273685(uint64_t a1)
{
}

id addOrReplaceElements(void *a1, void *a2, void *a3)
{
  id v5 = a1;
  id v6 = a2;
  id v7 = a3;
  if ([v5 count])
  {
    long long v8 = (void *)[v6 mutableCopy];
    v13[0] = MEMORY[0x263EF8330];
    v13[1] = 3221225472;
    v13[2] = __addOrReplaceElements_block_invoke;
    v13[3] = &unk_264A2FA00;
    id v9 = v8;
    id v14 = v9;
    id v15 = v7;
    objc_msgSend(v5, "na_each:", v13);
    uint64_t v10 = v15;
    id v11 = v9;
  }
  else
  {
    id v11 = v6;
  }

  return v11;
}

void __addOrReplaceElements_block_invoke(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v8 = MEMORY[0x263EF8330];
  uint64_t v9 = 3221225472;
  uint64_t v10 = __addOrReplaceElements_block_invoke_2;
  id v11 = &unk_264A2F9D8;
  id v4 = *(void **)(a1 + 32);
  id v13 = *(id *)(a1 + 40);
  id v5 = v3;
  id v12 = v5;
  uint64_t v6 = [v4 indexOfObjectPassingTest:&v8];
  id v7 = *(void **)(a1 + 32);
  if (v6 == 0x7FFFFFFFFFFFFFFFLL) {
    objc_msgSend(v7, "addObject:", v5, v8, v9, v10, v11);
  }
  else {
    objc_msgSend(v7, "replaceObjectAtIndex:withObject:", v6, v5, v8, v9, v10, v11);
  }
}

uint64_t __addOrReplaceElements_block_invoke_2(uint64_t a1, uint64_t a2, uint64_t a3, unsigned char *a4)
{
  uint64_t result = (*(uint64_t (**)(void, void, uint64_t))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), *(void *)(a1 + 32), a2);
  if (result) {
    *a4 = 1;
  }
  return result;
}

uint64_t sub_2302DCE40()
{
  return MEMORY[0x270EEDDD0]();
}

uint64_t sub_2302DCE50()
{
  return MEMORY[0x270EEDE10]();
}

uint64_t sub_2302DCE60()
{
  return MEMORY[0x270EEDE18]();
}

uint64_t sub_2302DCE70()
{
  return MEMORY[0x270EEDE38]();
}

uint64_t sub_2302DCE80()
{
  return MEMORY[0x270EEDE58]();
}

uint64_t sub_2302DCE90()
{
  return MEMORY[0x270EEDE70]();
}

uint64_t sub_2302DCEA0()
{
  return MEMORY[0x270EEDEE8]();
}

uint64_t sub_2302DCEB0()
{
  return MEMORY[0x270EEDF30]();
}

uint64_t sub_2302DCEC0()
{
  return MEMORY[0x270EEDF38]();
}

uint64_t sub_2302DCED0()
{
  return MEMORY[0x270EEE2C8]();
}

uint64_t sub_2302DCEE0()
{
  return MEMORY[0x270EEE2F8]();
}

uint64_t sub_2302DCEF0()
{
  return MEMORY[0x270EEE338]();
}

uint64_t sub_2302DCF00()
{
  return MEMORY[0x270EEE348]();
}

uint64_t sub_2302DCF10()
{
  return MEMORY[0x270EEE378]();
}

uint64_t sub_2302DCF20()
{
  return MEMORY[0x270EEE390]();
}

uint64_t sub_2302DCF30()
{
  return MEMORY[0x270EEE3A8]();
}

uint64_t sub_2302DCF40()
{
  return MEMORY[0x270EEE3B8]();
}

uint64_t sub_2302DCF50()
{
  return MEMORY[0x270EEE3D0]();
}

uint64_t sub_2302DCF60()
{
  return MEMORY[0x270EEE618]();
}

uint64_t sub_2302DCF70()
{
  return MEMORY[0x270EEE628]();
}

uint64_t sub_2302DCF80()
{
  return MEMORY[0x270EEE638]();
}

uint64_t sub_2302DCF90()
{
  return MEMORY[0x270EEE648]();
}

uint64_t sub_2302DCFA0()
{
  return MEMORY[0x270EEE658]();
}

uint64_t sub_2302DCFB0()
{
  return MEMORY[0x270EEE670]();
}

uint64_t sub_2302DCFC0()
{
  return MEMORY[0x270EEE688]();
}

uint64_t sub_2302DCFD0()
{
  return MEMORY[0x270EEEA60]();
}

uint64_t sub_2302DD040()
{
  return MEMORY[0x270EEF800]();
}

uint64_t sub_2302DD050()
{
  return MEMORY[0x270EEF830]();
}

uint64_t sub_2302DD060()
{
  return MEMORY[0x270EEF840]();
}

uint64_t sub_2302DD070()
{
  return MEMORY[0x270EEFA18]();
}

uint64_t sub_2302DD080()
{
  return MEMORY[0x270EEFC10]();
}

uint64_t sub_2302DD090()
{
  return MEMORY[0x270EEFC58]();
}

uint64_t sub_2302DD0A0()
{
  return MEMORY[0x270EEFCB0]();
}

uint64_t sub_2302DD0B0()
{
  return MEMORY[0x270EEFD28]();
}

uint64_t sub_2302DD0C0()
{
  return MEMORY[0x270EEFD90]();
}

uint64_t sub_2302DD0D0()
{
  return MEMORY[0x270EEFE20]();
}

uint64_t sub_2302DD0E0()
{
  return MEMORY[0x270EEFF00]();
}

uint64_t sub_2302DD0F0()
{
  return MEMORY[0x270EEFF58]();
}

uint64_t sub_2302DD100()
{
  return MEMORY[0x270EEFF68]();
}

uint64_t sub_2302DD110()
{
  return MEMORY[0x270EEFFB0]();
}

uint64_t sub_2302DD120()
{
  return MEMORY[0x270EF0020]();
}

uint64_t sub_2302DD130()
{
  return MEMORY[0x270EF0070]();
}

uint64_t sub_2302DD140()
{
  return MEMORY[0x270EF0090]();
}

uint64_t sub_2302DD150()
{
  return MEMORY[0x270EF00B0]();
}

uint64_t sub_2302DD160()
{
  return MEMORY[0x270EF00E8]();
}

uint64_t _s10Foundation4DataV13HomeKitDaemonE02nsB0So6NSDataCvg_0()
{
  return MEMORY[0x270EF0120]();
}

uint64_t sub_2302DD180()
{
  return MEMORY[0x270EF0178]();
}

uint64_t sub_2302DD190()
{
  return MEMORY[0x270EF0190]();
}

uint64_t sub_2302DD1A0()
{
  return MEMORY[0x270EF01C0]();
}

uint64_t sub_2302DD1B0()
{
  return MEMORY[0x270EF06F8]();
}

uint64_t sub_2302DD1C0()
{
  return MEMORY[0x270EF07E0]();
}

uint64_t sub_2302DD1D0()
{
  return MEMORY[0x270EF0998]();
}

uint64_t sub_2302DD1E0()
{
  return MEMORY[0x270EF09A8]();
}

uint64_t sub_2302DD1F0()
{
  return MEMORY[0x270EF09C0]();
}

uint64_t sub_2302DD200()
{
  return MEMORY[0x270EF0BA8]();
}

uint64_t sub_2302DD210()
{
  return MEMORY[0x270EF0BB8]();
}

uint64_t sub_2302DD220()
{
  return MEMORY[0x270EF0C40]();
}

uint64_t sub_2302DD230()
{
  return MEMORY[0x270EF0C58]();
}

uint64_t sub_2302DD240()
{
  return MEMORY[0x270EF0C68]();
}

uint64_t sub_2302DD250()
{
  return MEMORY[0x270EF0C88]();
}

uint64_t sub_2302DD260()
{
  return MEMORY[0x270EF0CB0]();
}

uint64_t sub_2302DD270()
{
  return MEMORY[0x270EF0CB8]();
}

uint64_t sub_2302DD280()
{
  return MEMORY[0x270EF0CE0]();
}

uint64_t sub_2302DD290()
{
  return MEMORY[0x270EF0CF0]();
}

uint64_t sub_2302DD2A0()
{
  return MEMORY[0x270EF0D08]();
}

uint64_t sub_2302DD2B0()
{
  return MEMORY[0x270EF0D18]();
}

uint64_t sub_2302DD2C0()
{
  return MEMORY[0x270EF15C8]();
}

uint64_t sub_2302DD2D0()
{
  return MEMORY[0x270EF1600]();
}

uint64_t sub_2302DD2E0()
{
  return MEMORY[0x270EF1608]();
}

uint64_t sub_2302DD2F0()
{
  return MEMORY[0x270F29228]();
}

uint64_t sub_2302DD300()
{
  return MEMORY[0x270F29270]();
}

uint64_t sub_2302DD310()
{
  return MEMORY[0x270F29280]();
}

uint64_t sub_2302DD320()
{
  return MEMORY[0x270F29330]();
}

uint64_t sub_2302DD330()
{
  return MEMORY[0x270F29510]();
}

uint64_t sub_2302DD340()
{
  return MEMORY[0x270F29540]();
}

uint64_t sub_2302DD350()
{
  return MEMORY[0x270F29548]();
}

uint64_t sub_2302DD360()
{
  return MEMORY[0x270F29568]();
}

uint64_t sub_2302DD390()
{
  return MEMORY[0x270F29768]();
}

uint64_t sub_2302DD3A0()
{
  return MEMORY[0x270F29780]();
}

uint64_t sub_2302DD3B0()
{
  return MEMORY[0x270F306B0]();
}

uint64_t sub_2302DD3C0()
{
  return MEMORY[0x270F306B8]();
}

uint64_t sub_2302DD3D0()
{
  return MEMORY[0x270F306C0]();
}

uint64_t sub_2302DD3E0()
{
  return MEMORY[0x270F306C8]();
}

uint64_t sub_2302DD3F0()
{
  return MEMORY[0x270F306D0]();
}

uint64_t sub_2302DD400()
{
  return MEMORY[0x270F306D8]();
}

uint64_t sub_2302DD410()
{
  return MEMORY[0x270F306E0]();
}

uint64_t sub_2302DD420()
{
  return MEMORY[0x270F306E8]();
}

uint64_t sub_2302DD430()
{
  return MEMORY[0x270F306F0]();
}

uint64_t sub_2302DD440()
{
  return MEMORY[0x270F306F8]();
}

uint64_t sub_2302DD450()
{
  return MEMORY[0x270F30700]();
}

uint64_t sub_2302DD460()
{
  return MEMORY[0x270F30708]();
}

uint64_t sub_2302DD470()
{
  return MEMORY[0x270F30710]();
}

uint64_t sub_2302DD480()
{
  return MEMORY[0x270F30718]();
}

uint64_t sub_2302DD490()
{
  return MEMORY[0x270F30720]();
}

uint64_t sub_2302DD4A0()
{
  return MEMORY[0x270F30728]();
}

uint64_t sub_2302DD4B0()
{
  return MEMORY[0x270F30730]();
}

uint64_t sub_2302DD4C0()
{
  return MEMORY[0x270F30738]();
}

uint64_t sub_2302DD4D0()
{
  return MEMORY[0x270F30740]();
}

uint64_t sub_2302DD4E0()
{
  return MEMORY[0x270F30748]();
}

uint64_t sub_2302DD4F0()
{
  return MEMORY[0x270F30750]();
}

uint64_t sub_2302DD500()
{
  return MEMORY[0x270F30758]();
}

uint64_t sub_2302DD510()
{
  return MEMORY[0x270F30760]();
}

uint64_t sub_2302DD520()
{
  return MEMORY[0x270F30768]();
}

uint64_t sub_2302DD530()
{
  return MEMORY[0x270F30770]();
}

uint64_t sub_2302DD540()
{
  return MEMORY[0x270F30778]();
}

uint64_t sub_2302DD550()
{
  return MEMORY[0x270F30780]();
}

uint64_t sub_2302DD560()
{
  return MEMORY[0x270F30788]();
}

uint64_t sub_2302DD570()
{
  return MEMORY[0x270F30790]();
}

uint64_t sub_2302DD580()
{
  return MEMORY[0x270F30798]();
}

uint64_t sub_2302DD590()
{
  return MEMORY[0x270F307A0]();
}

uint64_t sub_2302DD5C0()
{
  return MEMORY[0x270F307B8]();
}

uint64_t sub_2302DD5D0()
{
  return MEMORY[0x270F307C0]();
}

uint64_t sub_2302DD5E0()
{
  return MEMORY[0x270F307C8]();
}

uint64_t sub_2302DD5F0()
{
  return MEMORY[0x270F307D0]();
}

uint64_t sub_2302DD610()
{
  return MEMORY[0x270F307E0]();
}

uint64_t sub_2302DD620()
{
  return MEMORY[0x270F307E8]();
}

uint64_t sub_2302DD630()
{
  return MEMORY[0x270F307F0]();
}

uint64_t sub_2302DD660()
{
  return MEMORY[0x270FA06C8]();
}

uint64_t sub_2302DD670()
{
  return MEMORY[0x270FA06D8]();
}

uint64_t sub_2302DD680()
{
  return MEMORY[0x270F3C328]();
}

uint64_t sub_2302DD690()
{
  return MEMORY[0x270F3C330]();
}

uint64_t sub_2302DD6A0()
{
  return MEMORY[0x270F3C338]();
}

uint64_t sub_2302DD6B0()
{
  return MEMORY[0x270F3C340]();
}

uint64_t sub_2302DD6C0()
{
  return MEMORY[0x270F3C348]();
}

uint64_t sub_2302DD6D0()
{
  return MEMORY[0x270F3C350]();
}

uint64_t sub_2302DD6E0()
{
  return MEMORY[0x270F3C358]();
}

uint64_t sub_2302DD6F0()
{
  return MEMORY[0x270F3C360]();
}

uint64_t sub_2302DD700()
{
  return MEMORY[0x270F44A18]();
}

uint64_t sub_2302DD710()
{
  return MEMORY[0x270F44A20]();
}

uint64_t sub_2302DD720()
{
  return MEMORY[0x270F44A28]();
}

uint64_t sub_2302DD730()
{
  return MEMORY[0x270F44AD8]();
}

uint64_t sub_2302DD750()
{
  return MEMORY[0x270F44B10]();
}

uint64_t sub_2302DD760()
{
  return MEMORY[0x270F44B38]();
}

uint64_t sub_2302DD770()
{
  return MEMORY[0x270F44B60]();
}

uint64_t sub_2302DD780()
{
  return MEMORY[0x270F44B88]();
}

uint64_t sub_2302DD790()
{
  return MEMORY[0x270F44BC0]();
}

uint64_t sub_2302DD7A0()
{
  return MEMORY[0x270F44BC8]();
}

uint64_t sub_2302DD7B0()
{
  return MEMORY[0x270F44BF0]();
}

uint64_t sub_2302DD7C0()
{
  return MEMORY[0x270F44C00]();
}

uint64_t sub_2302DD7D0()
{
  return MEMORY[0x270F44C20]();
}

uint64_t sub_2302DD7E0()
{
  return MEMORY[0x270F44C38]();
}

uint64_t sub_2302DD7F0()
{
  return MEMORY[0x270F44C98]();
}

uint64_t sub_2302DD810()
{
  return MEMORY[0x270F44CD8]();
}

uint64_t sub_2302DD820()
{
  return MEMORY[0x270F44CF0]();
}

uint64_t sub_2302DD830()
{
  return MEMORY[0x270F44D60]();
}

uint64_t sub_2302DD840()
{
  return MEMORY[0x270F44D78]();
}

uint64_t sub_2302DD850()
{
  return MEMORY[0x270F44D90]();
}

uint64_t sub_2302DD860()
{
  return MEMORY[0x270F44DB0]();
}

uint64_t sub_2302DD870()
{
  return MEMORY[0x270F44DB8]();
}

uint64_t sub_2302DD880()
{
  return MEMORY[0x270F44DD8]();
}

uint64_t sub_2302DD890()
{
  return MEMORY[0x270F44DE0]();
}

uint64_t sub_2302DD8A0()
{
  return MEMORY[0x270F44DF0]();
}

uint64_t sub_2302DD8B0()
{
  return MEMORY[0x270F44E00]();
}

uint64_t sub_2302DD8C0()
{
  return MEMORY[0x270F44E10]();
}

uint64_t sub_2302DD8D0()
{
  return MEMORY[0x270F44E18]();
}

uint64_t sub_2302DD8E0()
{
  return MEMORY[0x270F44E28]();
}

uint64_t sub_2302DD8F0()
{
  return MEMORY[0x270F57850]();
}

uint64_t sub_2302DD900()
{
  return MEMORY[0x270F57858]();
}

uint64_t sub_2302DD910()
{
  return MEMORY[0x270F57860]();
}

uint64_t sub_2302DD920()
{
  return MEMORY[0x270FA2E00]();
}

uint64_t sub_2302DD930()
{
  return MEMORY[0x270FA2E08]();
}

uint64_t sub_2302DD940()
{
  return MEMORY[0x270FA2E20]();
}

uint64_t sub_2302DD960()
{
  return MEMORY[0x270EF3A30]();
}

uint64_t sub_2302DD970()
{
  return MEMORY[0x270EF3A48]();
}

uint64_t sub_2302DD980()
{
  return MEMORY[0x270EF3A50]();
}

uint64_t sub_2302DD9A0()
{
  return MEMORY[0x270EF3A60]();
}

uint64_t sub_2302DD9B0()
{
  return MEMORY[0x270EF3A68]();
}

uint64_t sub_2302DD9C0()
{
  return MEMORY[0x270EF3A70]();
}

uint64_t sub_2302DD9D0()
{
  return MEMORY[0x270EF3A78]();
}

uint64_t sub_2302DD9E0()
{
  return MEMORY[0x270EF3A80]();
}

uint64_t sub_2302DD9F0()
{
  return MEMORY[0x270FA09A8]();
}

uint64_t sub_2302DDA00()
{
  return MEMORY[0x270FA09E8]();
}

uint64_t sub_2302DDA10()
{
  return MEMORY[0x270FA0A48]();
}

uint64_t sub_2302DDA20()
{
  return MEMORY[0x270FA0AC0]();
}

uint64_t sub_2302DDA30()
{
  return MEMORY[0x270FA0B00]();
}

uint64_t sub_2302DDA40()
{
  return MEMORY[0x270FA0B60]();
}

uint64_t sub_2302DDA50()
{
  return MEMORY[0x270FA0B98]();
}

uint64_t sub_2302DDA60()
{
  return MEMORY[0x270FA0BA8]();
}

uint64_t sub_2302DDA70()
{
  return MEMORY[0x270FA0BC8]();
}

uint64_t sub_2302DDA80()
{
  return MEMORY[0x270FA0BF0]();
}

uint64_t sub_2302DDA90()
{
  return MEMORY[0x270EEAAF0]();
}

uint64_t sub_2302DDAA0()
{
  return MEMORY[0x270EEAB00]();
}

uint64_t sub_2302DDAB0()
{
  return MEMORY[0x270EEAB30]();
}

uint64_t sub_2302DDAC0()
{
  return MEMORY[0x270EEAD40]();
}

uint64_t sub_2302DDAD0()
{
  return MEMORY[0x270EEB090]();
}

uint64_t sub_2302DDAE0()
{
  return MEMORY[0x270EF1818]();
}

uint64_t sub_2302DDAF0()
{
  return MEMORY[0x270EF1830]();
}

uint64_t sub_2302DDB00()
{
  return MEMORY[0x270EF1840]();
}

uint64_t sub_2302DDB10()
{
  return MEMORY[0x270F9D060]();
}

uint64_t sub_2302DDB20()
{
  return MEMORY[0x270F9D220]();
}

uint64_t sub_2302DDB30()
{
  return MEMORY[0x270F9D318]();
}

uint64_t sub_2302DDB40()
{
  return MEMORY[0x270F9D320]();
}

uint64_t sub_2302DDB50()
{
  return MEMORY[0x270F9D4A0]();
}

uint64_t sub_2302DDB60()
{
  return MEMORY[0x270F9D4A8]();
}

uint64_t sub_2302DDB70()
{
  return MEMORY[0x270F9D4B0]();
}

uint64_t sub_2302DDB80()
{
  return MEMORY[0x270F9D598]();
}

uint64_t sub_2302DDB90()
{
  return MEMORY[0x270EF19B0]();
}

uint64_t sub_2302DDBA0()
{
  return MEMORY[0x270EF19E0]();
}

uint64_t sub_2302DDBB0()
{
  return MEMORY[0x270EF19E8]();
}

uint64_t sub_2302DDBC0()
{
  return MEMORY[0x270EF1A10]();
}

uint64_t sub_2302DDBD0()
{
  return MEMORY[0x270EF1AA8]();
}

uint64_t sub_2302DDBE0()
{
  return MEMORY[0x270EF1AD0]();
}

uint64_t sub_2302DDBF0()
{
  return MEMORY[0x270F9D5E0]();
}

uint64_t sub_2302DDC00()
{
  return MEMORY[0x270F9D600]();
}

uint64_t sub_2302DDC10()
{
  return MEMORY[0x270F9D648]();
}

uint64_t sub_2302DDC20()
{
  return MEMORY[0x270F9D708]();
}

uint64_t sub_2302DDC30()
{
  return MEMORY[0x270F9D758]();
}

uint64_t sub_2302DDC40()
{
  return MEMORY[0x270F9D798]();
}

uint64_t sub_2302DDC50()
{
  return MEMORY[0x270F9D7E0]();
}

uint64_t sub_2302DDC60()
{
  return MEMORY[0x270F9D7E8]();
}

uint64_t sub_2302DDC70()
{
  return MEMORY[0x270F9D800]();
}

uint64_t sub_2302DDC80()
{
  return MEMORY[0x270F9D810]();
}

uint64_t sub_2302DDC90()
{
  return MEMORY[0x270F9D860]();
}

uint64_t sub_2302DDCA0()
{
  return MEMORY[0x270F9D8A8]();
}

uint64_t sub_2302DDCF0()
{
  return MEMORY[0x270F9DAD0]();
}

uint64_t sub_2302DDD00()
{
  return MEMORY[0x270F9DAD8]();
}

uint64_t sub_2302DDD10()
{
  return MEMORY[0x270F9DAE0]();
}

uint64_t sub_2302DDD20()
{
  return MEMORY[0x270F9DB50]();
}

uint64_t sub_2302DDD30()
{
  return MEMORY[0x270F9DB58]();
}

uint64_t sub_2302DDD40()
{
  return MEMORY[0x270F9DB60]();
}

uint64_t sub_2302DDD50()
{
  return MEMORY[0x270F9DBA0]();
}

uint64_t sub_2302DDD60()
{
  return MEMORY[0x270EF1B88]();
}

uint64_t sub_2302DDD70()
{
  return MEMORY[0x270EF1BA8]();
}

uint64_t sub_2302DDD80()
{
  return MEMORY[0x270EF1BB8]();
}

uint64_t sub_2302DDD90()
{
  return MEMORY[0x270F9DBB0]();
}

uint64_t sub_2302DDDA0()
{
  return MEMORY[0x270F9DBB8]();
}

uint64_t sub_2302DDDB0()
{
  return MEMORY[0x270F9DBF0]();
}

uint64_t sub_2302DDDC0()
{
  return MEMORY[0x270F9DC10]();
}

uint64_t sub_2302DDDD0()
{
  return MEMORY[0x270F9DC20]();
}

uint64_t sub_2302DDDE0()
{
  return MEMORY[0x270F9DC50]();
}

uint64_t sub_2302DDDF0()
{
  return MEMORY[0x270EF1BD8]();
}

uint64_t sub_2302DDE00()
{
  return MEMORY[0x270FA1DF8]();
}

uint64_t sub_2302DDE10()
{
  return MEMORY[0x270FA1E18]();
}

uint64_t sub_2302DDE20()
{
  return MEMORY[0x270FA1E20]();
}

uint64_t sub_2302DDE30()
{
  return MEMORY[0x270FA1E28]();
}

uint64_t sub_2302DDE40()
{
  return MEMORY[0x270FA1E48]();
}

uint64_t sub_2302DDE60()
{
  return MEMORY[0x270FA1F08]();
}

uint64_t sub_2302DDE70()
{
  return MEMORY[0x270FA1F10]();
}

uint64_t sub_2302DDE80()
{
  return MEMORY[0x270FA1F48]();
}

uint64_t sub_2302DDE90()
{
  return MEMORY[0x270FA1F58]();
}

uint64_t sub_2302DDEA0()
{
  return MEMORY[0x270FA1F60]();
}

uint64_t sub_2302DDEC0()
{
  return MEMORY[0x270FA1F88]();
}

uint64_t sub_2302DDED0()
{
  return MEMORY[0x270FA1F90]();
}

uint64_t sub_2302DDEE0()
{
  return MEMORY[0x270FA1FB0]();
}

uint64_t sub_2302DDF10()
{
  return MEMORY[0x270FA2040]();
}

uint64_t sub_2302DDF40()
{
  return MEMORY[0x270F9DDF0]();
}

uint64_t sub_2302DDF50()
{
  return MEMORY[0x270EF1C40]();
}

uint64_t sub_2302DDF60()
{
  return MEMORY[0x270EF1C98]();
}

uint64_t sub_2302DDF70()
{
  return MEMORY[0x270EF1CC0]();
}

uint64_t sub_2302DDF80()
{
  return MEMORY[0x270F9DEB0]();
}

uint64_t sub_2302DDF90()
{
  return MEMORY[0x270F9DEF0]();
}

uint64_t sub_2302DDFA0()
{
  return MEMORY[0x270F9DF28]();
}

uint64_t sub_2302DDFB0()
{
  return MEMORY[0x270F9DF80]();
}

uint64_t sub_2302DDFC0()
{
  return MEMORY[0x270F9DFD8]();
}

uint64_t sub_2302DDFD0()
{
  return MEMORY[0x270EF1CE0]();
}

uint64_t sub_2302DDFE0()
{
  return MEMORY[0x270EF1CF8]();
}

uint64_t sub_2302DDFF0()
{
  return MEMORY[0x270F9E080]();
}

uint64_t sub_2302DE000()
{
  return MEMORY[0x270F9E0A0]();
}

uint64_t sub_2302DE010()
{
  return MEMORY[0x270F9E0E0]();
}

uint64_t sub_2302DE020()
{
  return MEMORY[0x270F9E1E0]();
}

uint64_t sub_2302DE030()
{
  return MEMORY[0x270EF1DB8]();
}

uint64_t sub_2302DE040()
{
  return MEMORY[0x270FA2E40]();
}

uint64_t sub_2302DE050()
{
  return MEMORY[0x270FA2E58]();
}

uint64_t sub_2302DE060()
{
  return MEMORY[0x270FA2E60]();
}

uint64_t sub_2302DE070()
{
  return MEMORY[0x270FA2E70]();
}

uint64_t sub_2302DE080()
{
  return MEMORY[0x270FA2E80]();
}

uint64_t sub_2302DE090()
{
  return MEMORY[0x270FA0C30]();
}

uint64_t sub_2302DE0A0()
{
  return MEMORY[0x270FA0C50]();
}

uint64_t sub_2302DE0B0()
{
  return MEMORY[0x270FA0C78]();
}

uint64_t sub_2302DE0C0()
{
  return MEMORY[0x270FA0D50]();
}

uint64_t sub_2302DE0D0()
{
  return MEMORY[0x270FA0DA0]();
}

uint64_t sub_2302DE0E0()
{
  return MEMORY[0x270FA0DB8]();
}

uint64_t sub_2302DE0F0()
{
  return MEMORY[0x270EF1FD8]();
}

uint64_t sub_2302DE100()
{
  return MEMORY[0x270EF1FE8]();
}

uint64_t sub_2302DE110()
{
  return MEMORY[0x270EF1FF8]();
}

uint64_t sub_2302DE120()
{
  return MEMORY[0x270EE4220]();
}

uint64_t sub_2302DE130()
{
  return MEMORY[0x270EE4238]();
}

uint64_t sub_2302DE150()
{
  return MEMORY[0x270EF20D8]();
}

uint64_t sub_2302DE160()
{
  return MEMORY[0x270EF2180]();
}

uint64_t sub_2302DE170()
{
  return MEMORY[0x270EF2198]();
}

uint64_t sub_2302DE180()
{
  return MEMORY[0x270FA1170]();
}

uint64_t sub_2302DE190()
{
  return MEMORY[0x270FA1180]();
}

uint64_t sub_2302DE1A0()
{
  return MEMORY[0x270FA11A0]();
}

uint64_t sub_2302DE1B0()
{
  return MEMORY[0x270F9E3B8]();
}

uint64_t sub_2302DE1C0()
{
  return MEMORY[0x270F9E3C0]();
}

uint64_t sub_2302DE1D0()
{
  return MEMORY[0x270F9E518]();
}

uint64_t sub_2302DE1E0()
{
  return MEMORY[0x270EF23C8]();
}

uint64_t sub_2302DE1F0()
{
  return MEMORY[0x270F9E530]();
}

uint64_t sub_2302DE200()
{
  return MEMORY[0x270F9E560]();
}

uint64_t sub_2302DE210()
{
  return MEMORY[0x270EF25B0]();
}

uint64_t sub_2302DE220()
{
  return MEMORY[0x270F9E658]();
}

uint64_t sub_2302DE230()
{
  return MEMORY[0x270F9E670]();
}

uint64_t sub_2302DE250()
{
  return MEMORY[0x270F9E7E8]();
}

uint64_t sub_2302DE260()
{
  return MEMORY[0x270F9E7F0]();
}

uint64_t sub_2302DE270()
{
  return MEMORY[0x270F9E800]();
}

uint64_t sub_2302DE280()
{
  return MEMORY[0x270F9E810]();
}

uint64_t sub_2302DE290()
{
  return MEMORY[0x270F9E818]();
}

uint64_t sub_2302DE2A0()
{
  return MEMORY[0x270F9E820]();
}

uint64_t sub_2302DE2B0()
{
  return MEMORY[0x270F9E830]();
}

uint64_t sub_2302DE2C0()
{
  return MEMORY[0x270F9E838]();
}

uint64_t sub_2302DE2D0()
{
  return MEMORY[0x270F9E840]();
}

uint64_t sub_2302DE2E0()
{
  return MEMORY[0x270F9E848]();
}

uint64_t sub_2302DE2F0()
{
  return MEMORY[0x270F9E858]();
}

uint64_t sub_2302DE300()
{
  return MEMORY[0x270F9E860]();
}

uint64_t sub_2302DE320()
{
  return MEMORY[0x270F9E870]();
}

uint64_t sub_2302DE330()
{
  return MEMORY[0x270F9E878]();
}

uint64_t sub_2302DE340()
{
  return MEMORY[0x270F9E880]();
}

uint64_t sub_2302DE350()
{
  return MEMORY[0x270F9E888]();
}

uint64_t sub_2302DE360()
{
  return MEMORY[0x270F9E8C0]();
}

uint64_t sub_2302DE370()
{
  return MEMORY[0x270F9E8C8]();
}

uint64_t sub_2302DE380()
{
  return MEMORY[0x270F9E8E8]();
}

uint64_t sub_2302DE390()
{
  return MEMORY[0x270F9E958]();
}

uint64_t sub_2302DE3A0()
{
  return MEMORY[0x270F9E960]();
}

uint64_t sub_2302DE3B0()
{
  return MEMORY[0x270F9E968]();
}

uint64_t sub_2302DE3C0()
{
  return MEMORY[0x270F9E970]();
}

uint64_t sub_2302DE3D0()
{
  return MEMORY[0x270F9E9A8]();
}

uint64_t sub_2302DE3E0()
{
  return MEMORY[0x270F9E9B0]();
}

uint64_t sub_2302DE3F0()
{
  return MEMORY[0x270F9EA40]();
}

uint64_t sub_2302DE400()
{
  return MEMORY[0x270F9EA48]();
}

uint64_t sub_2302DE410()
{
  return MEMORY[0x270F9EA78]();
}

uint64_t sub_2302DE420()
{
  return MEMORY[0x270F9EA98]();
}

uint64_t sub_2302DE430()
{
  return MEMORY[0x270F9EAA0]();
}

uint64_t sub_2302DE440()
{
  return MEMORY[0x270F9EAB8]();
}

uint64_t sub_2302DE450()
{
  return MEMORY[0x270F9EB28]();
}

uint64_t sub_2302DE470()
{
  return MEMORY[0x270F9EB98]();
}

uint64_t sub_2302DE480()
{
  return MEMORY[0x270F9EBC0]();
}

uint64_t sub_2302DE490()
{
  return MEMORY[0x270F9EBD8]();
}

uint64_t sub_2302DE4A0()
{
  return MEMORY[0x270F9EBE0]();
}

uint64_t sub_2302DE4B0()
{
  return MEMORY[0x270F9EC08]();
}

uint64_t sub_2302DE4C0()
{
  return MEMORY[0x270F9EC10]();
}

uint64_t sub_2302DE4D0()
{
  return MEMORY[0x270F9EC48]();
}

uint64_t sub_2302DE4E0()
{
  return MEMORY[0x270F9EC88]();
}

uint64_t sub_2302DE4F0()
{
  return MEMORY[0x270F9EC90]();
}

uint64_t sub_2302DE500()
{
  return MEMORY[0x270FA21A0]();
}

uint64_t sub_2302DE510()
{
  return MEMORY[0x270FA21A8]();
}

uint64_t sub_2302DE520()
{
  return MEMORY[0x270FA21B0]();
}

uint64_t sub_2302DE530()
{
  return MEMORY[0x270F9ECD8]();
}

uint64_t sub_2302DE540()
{
  return MEMORY[0x270F9ED70]();
}

uint64_t sub_2302DE550()
{
  return MEMORY[0x270F9EF50]();
}

uint64_t sub_2302DE560()
{
  return MEMORY[0x270F9EF88]();
}

uint64_t sub_2302DE570()
{
  return MEMORY[0x270F9EFB0]();
}

uint64_t sub_2302DE580()
{
  return MEMORY[0x270F9EFC0]();
}

uint64_t sub_2302DE590()
{
  return MEMORY[0x270F9EFE8]();
}

uint64_t sub_2302DE5A0()
{
  return MEMORY[0x270F9EFF0]();
}

uint64_t sub_2302DE5B0()
{
  return MEMORY[0x270F9F000]();
}

uint64_t sub_2302DE5C0()
{
  return MEMORY[0x270F9F080]();
}

uint64_t sub_2302DE5D0()
{
  return MEMORY[0x270F9F098]();
}

uint64_t sub_2302DE5E0()
{
  return MEMORY[0x270F9F0A0]();
}

uint64_t sub_2302DE5F0()
{
  return MEMORY[0x270F9F0A8]();
}

uint64_t sub_2302DE600()
{
  return MEMORY[0x270F9F0B0]();
}

uint64_t sub_2302DE610()
{
  return MEMORY[0x270F9F0C0]();
}

uint64_t sub_2302DE620()
{
  return MEMORY[0x270F9F230]();
}

uint64_t sub_2302DE640()
{
  return MEMORY[0x270F9F250]();
}

uint64_t sub_2302DE650()
{
  return MEMORY[0x270F9F258]();
}

uint64_t sub_2302DE660()
{
  return MEMORY[0x270F9F270]();
}

uint64_t sub_2302DE670()
{
  return MEMORY[0x270F9F290]();
}

uint64_t sub_2302DE680()
{
  return MEMORY[0x270F9F2A0]();
}

uint64_t sub_2302DE690()
{
  return MEMORY[0x270F9F2E8]();
}

uint64_t sub_2302DE6A0()
{
  return MEMORY[0x270F9F2F0]();
}

uint64_t sub_2302DE6B0()
{
  return MEMORY[0x270F9F308]();
}

uint64_t sub_2302DE6C0()
{
  return MEMORY[0x270F9F310]();
}

uint64_t sub_2302DE6D0()
{
  return MEMORY[0x270F9F318]();
}

uint64_t sub_2302DE6E0()
{
  return MEMORY[0x270F9F360]();
}

uint64_t sub_2302DE6F0()
{
  return MEMORY[0x270F9F378]();
}

uint64_t sub_2302DE700()
{
  return MEMORY[0x270F9F380]();
}

uint64_t sub_2302DE710()
{
  return MEMORY[0x270F9F390]();
}

uint64_t sub_2302DE720()
{
  return MEMORY[0x270F9F3B0]();
}

uint64_t sub_2302DE730()
{
  return MEMORY[0x270F9F3D0]();
}

uint64_t sub_2302DE740()
{
  return MEMORY[0x270F9F3E0]();
}

uint64_t sub_2302DE750()
{
  return MEMORY[0x270F9F428]();
}

uint64_t sub_2302DE760()
{
  return MEMORY[0x270F9F430]();
}

uint64_t sub_2302DE770()
{
  return MEMORY[0x270F9F448]();
}

uint64_t sub_2302DE780()
{
  return MEMORY[0x270F9F450]();
}

uint64_t sub_2302DE790()
{
  return MEMORY[0x270F9F458]();
}

uint64_t sub_2302DE7A0()
{
  return MEMORY[0x270F9F4B0]();
}

uint64_t sub_2302DE7B0()
{
  return MEMORY[0x270F9F4C0]();
}

uint64_t sub_2302DE7C0()
{
  return MEMORY[0x270F9F4C8]();
}

uint64_t sub_2302DE7D0()
{
  return MEMORY[0x270F9F4E0]();
}

uint64_t sub_2302DE7F0()
{
  return MEMORY[0x270F9F5B0]();
}

uint64_t sub_2302DE800()
{
  return MEMORY[0x270F9F5B8]();
}

uint64_t sub_2302DE810()
{
  return MEMORY[0x270F9F5C0]();
}

uint64_t sub_2302DE820()
{
  return MEMORY[0x270F9F5C8]();
}

uint64_t sub_2302DE830()
{
  return MEMORY[0x270F9F5D0]();
}

uint64_t sub_2302DE840()
{
  return MEMORY[0x270F9F5D8]();
}

uint64_t sub_2302DE850()
{
  return MEMORY[0x270F9F5E0]();
}

uint64_t sub_2302DE860()
{
  return MEMORY[0x270F9F5E8]();
}

uint64_t sub_2302DE870()
{
  return MEMORY[0x270F9F5F0]();
}

uint64_t sub_2302DE880()
{
  return MEMORY[0x270F9F5F8]();
}

uint64_t sub_2302DE890()
{
  return MEMORY[0x270F9F688]();
}

uint64_t sub_2302DE8A0()
{
  return MEMORY[0x270F9F690]();
}

uint64_t sub_2302DE8B0()
{
  return MEMORY[0x270F9F698]();
}

uint64_t sub_2302DE8C0()
{
  return MEMORY[0x270F9F6A0]();
}

uint64_t sub_2302DE8D0()
{
  return MEMORY[0x270F9F6A8]();
}

uint64_t sub_2302DE8E0()
{
  return MEMORY[0x270F9F6B0]();
}

uint64_t sub_2302DE8F0()
{
  return MEMORY[0x270F9F6B8]();
}

uint64_t sub_2302DE900()
{
  return MEMORY[0x270F9F6C0]();
}

uint64_t sub_2302DE910()
{
  return MEMORY[0x270F9F6C8]();
}

uint64_t sub_2302DE920()
{
  return MEMORY[0x270F9F6D0]();
}

uint64_t sub_2302DE930()
{
  return MEMORY[0x270F9F6D8]();
}

uint64_t sub_2302DE940()
{
  return MEMORY[0x270F9F6E0]();
}

uint64_t sub_2302DE950()
{
  return MEMORY[0x270F9F6E8]();
}

uint64_t sub_2302DE960()
{
  return MEMORY[0x270F9F6F0]();
}

uint64_t sub_2302DE970()
{
  return MEMORY[0x270F9F6F8]();
}

uint64_t sub_2302DE980()
{
  return MEMORY[0x270F9F700]();
}

uint64_t sub_2302DE990()
{
  return MEMORY[0x270F9F708]();
}

uint64_t sub_2302DE9A0()
{
  return MEMORY[0x270F9F710]();
}

uint64_t sub_2302DE9B0()
{
  return MEMORY[0x270F9F718]();
}

uint64_t sub_2302DE9C0()
{
  return MEMORY[0x270F9F720]();
}

uint64_t sub_2302DE9D0()
{
  return MEMORY[0x270F9F730]();
}

uint64_t sub_2302DE9E0()
{
  return MEMORY[0x270F9F770]();
}

uint64_t sub_2302DE9F0()
{
  return MEMORY[0x270F9F778]();
}

uint64_t sub_2302DEA00()
{
  return MEMORY[0x270F9F7C0]();
}

uint64_t sub_2302DEA10()
{
  return MEMORY[0x270F9F7D0]();
}

uint64_t sub_2302DEA20()
{
  return MEMORY[0x270F9F860]();
}

uint64_t sub_2302DEA30()
{
  return MEMORY[0x270F9F868]();
}

uint64_t sub_2302DEA40()
{
  return MEMORY[0x270F9F8F8]();
}

uint64_t sub_2302DEA50()
{
  return MEMORY[0x270F9F900]();
}

uint64_t sub_2302DEA60()
{
  return MEMORY[0x270F9F918]();
}

uint64_t sub_2302DEA70()
{
  return MEMORY[0x270F9F920]();
}

uint64_t sub_2302DEA80()
{
  return MEMORY[0x270F9F960]();
}

uint64_t sub_2302DEA90()
{
  return MEMORY[0x270F9F968]();
}

uint64_t sub_2302DEAA0()
{
  return MEMORY[0x270F9F970]();
}

uint64_t sub_2302DEAB0()
{
  return MEMORY[0x270F9F978]();
}

uint64_t sub_2302DEAC0()
{
  return MEMORY[0x270F9F980]();
}

uint64_t sub_2302DEAD0()
{
  return MEMORY[0x270F9F988]();
}

uint64_t sub_2302DEAE0()
{
  return MEMORY[0x270F9F990]();
}

uint64_t sub_2302DEAF0()
{
  return MEMORY[0x270F9F998]();
}

uint64_t sub_2302DEB00()
{
  return MEMORY[0x270F9F9A0]();
}

uint64_t sub_2302DEB10()
{
  return MEMORY[0x270F9F9A8]();
}

uint64_t sub_2302DEB20()
{
  return MEMORY[0x270F9F9B0]();
}

uint64_t sub_2302DEB30()
{
  return MEMORY[0x270F9F9B8]();
}

uint64_t sub_2302DEB40()
{
  return MEMORY[0x270F9F9C0]();
}

uint64_t sub_2302DEB50()
{
  return MEMORY[0x270F9F9C8]();
}

uint64_t sub_2302DEB60()
{
  return MEMORY[0x270F9F9D0]();
}

uint64_t sub_2302DEB70()
{
  return MEMORY[0x270F9F9D8]();
}

uint64_t sub_2302DEB80()
{
  return MEMORY[0x270F9F9E0]();
}

uint64_t sub_2302DEB90()
{
  return MEMORY[0x270F9F9E8]();
}

uint64_t sub_2302DEBA0()
{
  return MEMORY[0x270F9F9F0]();
}

uint64_t sub_2302DEBB0()
{
  return MEMORY[0x270F9F9F8]();
}

uint64_t sub_2302DEBC0()
{
  return MEMORY[0x270F9FA00]();
}

uint64_t sub_2302DEBD0()
{
  return MEMORY[0x270F9FA08]();
}

uint64_t sub_2302DEBE0()
{
  return MEMORY[0x270F9FA10]();
}

uint64_t sub_2302DEC00()
{
  return MEMORY[0x270F9FA68]();
}

uint64_t sub_2302DEC10()
{
  return MEMORY[0x270F9FA88]();
}

uint64_t sub_2302DEC20()
{
  return MEMORY[0x270F9FB10]();
}

uint64_t sub_2302DEC30()
{
  return MEMORY[0x270F9FB18]();
}

uint64_t sub_2302DEC40()
{
  return MEMORY[0x270FA2378]();
}

uint64_t sub_2302DEC80()
{
  return MEMORY[0x270F9FB20]();
}

uint64_t sub_2302DEC90()
{
  return MEMORY[0x270F9FB30]();
}

uint64_t sub_2302DECA0()
{
  return MEMORY[0x270F9FB38]();
}

uint64_t sub_2302DECB0()
{
  return MEMORY[0x270F9FB40]();
}

uint64_t sub_2302DECC0()
{
  return MEMORY[0x270F9FB48]();
}

uint64_t sub_2302DECD0()
{
  return MEMORY[0x270F9FC48]();
}

uint64_t sub_2302DECE0()
{
  return MEMORY[0x270F9FC60]();
}

uint64_t sub_2302DECF0()
{
  return MEMORY[0x270F9FC68]();
}

uint64_t sub_2302DED00()
{
  return MEMORY[0x270F9FC70]();
}

uint64_t sub_2302DED10()
{
  return MEMORY[0x270F9FC78]();
}

uint64_t sub_2302DED20()
{
  return MEMORY[0x270F9FC80]();
}

uint64_t sub_2302DED30()
{
  return MEMORY[0x270F9FC90]();
}

uint64_t sub_2302DED40()
{
  return MEMORY[0x270EF2748]();
}

uint64_t sub_2302DED50()
{
  return MEMORY[0x270EF2760]();
}

uint64_t sub_2302DED60()
{
  return MEMORY[0x270EF27A0]();
}

uint64_t sub_2302DED70()
{
  return MEMORY[0x270F9FD70]();
}

uint64_t sub_2302DED80()
{
  return MEMORY[0x270F9FD98]();
}

uint64_t sub_2302DED90()
{
  return MEMORY[0x270F9FF78]();
}

uint64_t sub_2302DEDA0()
{
  return MEMORY[0x270F9FFA0]();
}

uint64_t sub_2302DEDB0()
{
  return MEMORY[0x270F9FFB8]();
}

uint64_t sub_2302DEDC0()
{
  return MEMORY[0x270FA00A0]();
}

uint64_t sub_2302DEDD0()
{
  return MEMORY[0x270FA00A8]();
}

uint64_t sub_2302DEE00()
{
  return MEMORY[0x270FA0128]();
}

uint64_t AFPreferencesMultiUserCompanionNotificationLanguageCodesForHomePodVersion()
{
  return MEMORY[0x270F0EEA8]();
}

uint64_t BOMCopierCopyWithOptions()
{
  return MEMORY[0x270F126B0]();
}

uint64_t BOMCopierFree()
{
  return MEMORY[0x270F126C0]();
}

uint64_t BOMCopierNew()
{
  return MEMORY[0x270F126C8]();
}

uint64_t BiomeLibrary()
{
  return MEMORY[0x270F10AF0]();
}

uint64_t CARenderServerGetServerPort()
{
  return MEMORY[0x270EFB8B8]();
}

uint64_t CCHomeServiceAreaTypeAsString()
{
  return MEMORY[0x270F44218]();
}

int CC_SHA1_Final(unsigned __int8 *md, CC_SHA1_CTX *c)
{
  return MEMORY[0x270ED7AF8](md, c);
}

int CC_SHA1_Init(CC_SHA1_CTX *c)
{
  return MEMORY[0x270ED7B00](c);
}

int CC_SHA1_Update(CC_SHA1_CTX *c, const void *data, CC_LONG len)
{
  return MEMORY[0x270ED7B08](c, data, *(void *)&len);
}

int CC_SHA256_Final(unsigned __int8 *md, CC_SHA256_CTX *c)
{
  return MEMORY[0x270ED7B30](md, c);
}

int CC_SHA256_Init(CC_SHA256_CTX *c)
{
  return MEMORY[0x270ED7B38](c);
}

int CC_SHA256_Update(CC_SHA256_CTX *c, const void *data, CC_LONG len)
{
  return MEMORY[0x270ED7B40](c, data, *(void *)&len);
}

CFAbsoluteTime CFAbsoluteTimeGetCurrent(void)
{
  MEMORY[0x270EE4278]();
  return result;
}

void CFArrayAppendValue(CFMutableArrayRef theArray, const void *value)
{
}

uint64_t CFArrayApplyBlock()
{
  return MEMORY[0x270F23D08]();
}

CFMutableArrayRef CFArrayCreateMutable(CFAllocatorRef allocator, CFIndex capacity, const CFArrayCallBacks *callBacks)
{
  return (CFMutableArrayRef)MEMORY[0x270EE4300](allocator, capacity, callBacks);
}

CFIndex CFArrayGetCount(CFArrayRef theArray)
{
  return MEMORY[0x270EE4320](theArray);
}

CFTypeID CFArrayGetTypeID(void)
{
  return MEMORY[0x270EE4348]();
}

const void *__cdecl CFArrayGetValueAtIndex(CFArrayRef theArray, CFIndex idx)
{
  return (const void *)MEMORY[0x270EE4360](theArray, idx);
}

CFTypeRef CFAutorelease(CFTypeRef arg)
{
  return (CFTypeRef)MEMORY[0x270EE4440](arg);
}

CFTypeID CFBooleanGetTypeID(void)
{
  return MEMORY[0x270EE4528]();
}

CFIndex CFDataGetLength(CFDataRef theData)
{
  return MEMORY[0x270EE4820](theData);
}

CFTypeID CFDataGetTypeID(void)
{
  return MEMORY[0x270EE4838]();
}

CFTypeID CFDateGetTypeID(void)
{
  return MEMORY[0x270EE48D8]();
}

uint64_t CFDictionaryApplyBlock()
{
  return MEMORY[0x270F23D30]();
}

CFDictionaryRef CFDictionaryCreate(CFAllocatorRef allocator, const void **keys, const void **values, CFIndex numValues, const CFDictionaryKeyCallBacks *keyCallBacks, const CFDictionaryValueCallBacks *valueCallBacks)
{
  return (CFDictionaryRef)MEMORY[0x270EE4908](allocator, keys, values, numValues, keyCallBacks, valueCallBacks);
}

CFIndex CFDictionaryGetCount(CFDictionaryRef theDict)
{
  return MEMORY[0x270EE4930](theDict);
}

CFTypeID CFDictionaryGetTypeID(void)
{
  return MEMORY[0x270EE4948]();
}

CFTypeID CFGetTypeID(CFTypeRef cf)
{
  return MEMORY[0x270EE4A30](cf);
}

void CFNotificationCenterAddObserver(CFNotificationCenterRef center, const void *observer, CFNotificationCallback callBack, CFStringRef name, const void *object, CFNotificationSuspensionBehavior suspensionBehavior)
{
}

CFNotificationCenterRef CFNotificationCenterGetDarwinNotifyCenter(void)
{
  return (CFNotificationCenterRef)MEMORY[0x270EE4B88]();
}

void CFNotificationCenterRemoveObserver(CFNotificationCenterRef center, const void *observer, CFNotificationName name, const void *object)
{
}

CFTypeID CFNullGetTypeID(void)
{
  return MEMORY[0x270EE4BD0]();
}

CFIndex CFNumberGetByteSize(CFNumberRef number)
{
  return MEMORY[0x270EE4C48](number);
}

CFTypeID CFNumberGetTypeID(void)
{
  return MEMORY[0x270EE4C58]();
}

CFPropertyListRef CFPreferencesCopyAppValue(CFStringRef key, CFStringRef applicationID)
{
  return (CFPropertyListRef)MEMORY[0x270EE4CA0](key, applicationID);
}

CFArrayRef CFPreferencesCopyKeyList(CFStringRef applicationID, CFStringRef userName, CFStringRef hostName)
{
  return (CFArrayRef)MEMORY[0x270EE4CB0](applicationID, userName, hostName);
}

CFDictionaryRef CFPreferencesCopyMultiple(CFArrayRef keysToFetch, CFStringRef applicationID, CFStringRef userName, CFStringRef hostName)
{
  return (CFDictionaryRef)MEMORY[0x270EE4CB8](keysToFetch, applicationID, userName, hostName);
}

CFPropertyListRef CFPreferencesCopyValue(CFStringRef key, CFStringRef applicationID, CFStringRef userName, CFStringRef hostName)
{
  return (CFPropertyListRef)MEMORY[0x270EE4CC0](key, applicationID, userName, hostName);
}

Boolean CFPreferencesGetAppBooleanValue(CFStringRef key, CFStringRef applicationID, Boolean *keyExistsAndHasValidFormat)
{
  return MEMORY[0x270EE4CD0](key, applicationID, keyExistsAndHasValidFormat);
}

CFIndex CFPreferencesGetAppIntegerValue(CFStringRef key, CFStringRef applicationID, Boolean *keyExistsAndHasValidFormat)
{
  return MEMORY[0x270EE4CE0](key, applicationID, keyExistsAndHasValidFormat);
}

void CFPreferencesSetAppValue(CFStringRef key, CFPropertyListRef value, CFStringRef applicationID)
{
}

void CFPreferencesSetMultiple(CFDictionaryRef keysToSet, CFArrayRef keysToRemove, CFStringRef applicationID, CFStringRef userName, CFStringRef hostName)
{
}

uint64_t CFPrefs_CopyTypedValue()
{
  return MEMORY[0x270F23E70]();
}

uint64_t CFPrefs_GetDouble()
{
  return MEMORY[0x270F23E80]();
}

uint64_t CFPrefs_GetInt64()
{
  return MEMORY[0x270F23E88]();
}

void CFRelease(CFTypeRef cf)
{
}

CFTypeRef CFRetain(CFTypeRef cf)
{
  return (CFTypeRef)MEMORY[0x270EE4E10](cf);
}

CFStringRef CFStringCreateWithFormat(CFAllocatorRef alloc, CFDictionaryRef formatOptions, CFStringRef format, ...)
{
  return (CFStringRef)MEMORY[0x270EE5110](alloc, formatOptions, format);
}

CFIndex CFStringGetBytes(CFStringRef theString, CFRange range, CFStringEncoding encoding, UInt8 lossByte, Boolean isExternalRepresentation, UInt8 *buffer, CFIndex maxBufLen, CFIndex *usedBufLen)
{
  return MEMORY[0x270EE5170](theString, range.location, range.length, *(void *)&encoding, lossByte, isExternalRepresentation, buffer, maxBufLen);
}

CFIndex CFStringGetLength(CFStringRef theString)
{
  return MEMORY[0x270EE51D8](theString);
}

CFTypeID CFStringGetTypeID(void)
{
  return MEMORY[0x270EE5218]();
}

SInt32 CFUserNotificationCancel(CFUserNotificationRef userNotification)
{
  return MEMORY[0x270EE54B8](userNotification);
}

CFUserNotificationRef CFUserNotificationCreate(CFAllocatorRef allocator, CFTimeInterval timeout, CFOptionFlags flags, SInt32 *error, CFDictionaryRef dictionary)
{
  return (CFUserNotificationRef)MEMORY[0x270EE54C8](allocator, flags, error, dictionary, timeout);
}

CFStringRef CFUserNotificationGetResponseValue(CFUserNotificationRef userNotification, CFStringRef key, CFIndex idx)
{
  return (CFStringRef)MEMORY[0x270EE54F0](userNotification, key, idx);
}

SInt32 CFUserNotificationReceiveResponse(CFUserNotificationRef userNotification, CFTimeInterval timeout, CFOptionFlags *responseFlags)
{
  return MEMORY[0x270EE5500](userNotification, responseFlags, timeout);
}

CGContextRef CGBitmapContextCreate(void *data, size_t width, size_t height, size_t bitsPerComponent, size_t bytesPerRow, CGColorSpaceRef space, uint32_t bitmapInfo)
{
  return (CGContextRef)MEMORY[0x270EE59E8](data, width, height, bitsPerComponent, bytesPerRow, space, *(void *)&bitmapInfo);
}

CGImageRef CGBitmapContextCreateImage(CGContextRef context)
{
  return (CGImageRef)MEMORY[0x270EE59F8](context);
}

void CGContextDrawImage(CGContextRef c, CGRect rect, CGImageRef image)
{
}

void CGContextRelease(CGContextRef c)
{
}

void CGImageDestinationAddImage(CGImageDestinationRef idst, CGImageRef image, CFDictionaryRef properties)
{
}

CGImageDestinationRef CGImageDestinationCreateWithData(CFMutableDataRef data, CFStringRef type, size_t count, CFDictionaryRef options)
{
  return (CGImageDestinationRef)MEMORY[0x270EF4F20](data, type, count, options);
}

BOOL CGImageDestinationFinalize(CGImageDestinationRef idst)
{
  return MEMORY[0x270EF4F48](idst);
}

CGImageAlphaInfo CGImageGetAlphaInfo(CGImageRef image)
{
  return MEMORY[0x270EE6778](image);
}

size_t CGImageGetBitsPerComponent(CGImageRef image)
{
  return MEMORY[0x270EE6790](image);
}

size_t CGImageGetBytesPerRow(CGImageRef image)
{
  return MEMORY[0x270EE67C0](image);
}

CGColorSpaceRef CGImageGetColorSpace(CGImageRef image)
{
  return (CGColorSpaceRef)MEMORY[0x270EE67D8](image);
}

size_t CGImageGetHeight(CGImageRef image)
{
  return MEMORY[0x270EE6800](image);
}

size_t CGImageGetWidth(CGImageRef image)
{
  return MEMORY[0x270EE6868](image);
}

CGImageRef CGImageSourceCreateImageAtIndex(CGImageSourceRef isrc, size_t index, CFDictionaryRef options)
{
  return (CGImageRef)MEMORY[0x270EF5018](isrc, index, options);
}

CGImageSourceRef CGImageSourceCreateWithData(CFDataRef data, CFDictionaryRef options)
{
  return (CGImageSourceRef)MEMORY[0x270EF5030](data, options);
}

CGImageSourceRef CGImageSourceCreateWithURL(CFURLRef url, CFDictionaryRef options)
{
  return (CGImageSourceRef)MEMORY[0x270EF5040](url, options);
}

uint64_t CKContainerEnvironmentFromString()
{
  return MEMORY[0x270EE3778]();
}

uint64_t CKContainerEnvironmentString()
{
  return MEMORY[0x270EE3780]();
}

CLLocationCoordinate2D CLLocationCoordinate2DMake(CLLocationDegrees latitude, CLLocationDegrees longitude)
{
  MEMORY[0x270EE7470](latitude, longitude);
  result.longitude = v3;
  result.latitude = v2;
  return result;
}

int32_t CMTimeCompare(CMTime *time1, CMTime *time2)
{
  return MEMORY[0x270EE7DD0](time1, time2);
}

Float64 CMTimeGetSeconds(CMTime *time)
{
  MEMORY[0x270EE7E08](time);
  return result;
}

CMTime *__cdecl CMTimeMake(CMTime *__return_ptr retstr, int64_t value, int32_t timescale)
{
  return (CMTime *)MEMORY[0x270EE7E10](retstr, value, *(void *)&timescale);
}

CMTime *__cdecl CMTimeMakeWithSeconds(CMTime *__return_ptr retstr, Float64 seconds, int32_t preferredTimescale)
{
  return (CMTime *)MEMORY[0x270EE7E38](retstr, *(void *)&preferredTimescale, seconds);
}

CMTime *__cdecl CMTimeRangeGetEnd(CMTime *__return_ptr retstr, CMTimeRange *range)
{
  return (CMTime *)MEMORY[0x270EE7ED0](retstr, range);
}

CMTimeRange *__cdecl CMTimeRangeGetIntersection(CMTimeRange *__return_ptr retstr, CMTimeRange *range, CMTimeRange *otherRange)
{
  return (CMTimeRange *)MEMORY[0x270EE7ED8](retstr, range, otherRange);
}

CMTime *__cdecl CMTimeSubtract(CMTime *__return_ptr retstr, CMTime *lhs, CMTime *rhs)
{
  return (CMTime *)MEMORY[0x270EE7F08](retstr, lhs, rhs);
}

uint64_t CPCopyBundleIdentifierAndTeamFromAuditToken()
{
  return MEMORY[0x270F0CD10]();
}

uint64_t DebugGetErrorString()
{
  return MEMORY[0x270F24148]();
}

uint64_t GetPrimaryIPAddress()
{
  return MEMORY[0x270F241F0]();
}

uint64_t HAPAccessCodeResponseStatusAsString()
{
  return MEMORY[0x270F18CA0]();
}

uint64_t HAPAccessoryServerDiscoveryMethodToString()
{
  return MEMORY[0x270F18CA8]();
}

uint64_t HAPAccessoryServerSessionTypesFromString()
{
  return MEMORY[0x270F18CB0]();
}

uint64_t HAPAccessorySuspendedStateDescription()
{
  return MEMORY[0x270F18CB8]();
}

uint64_t HAPAuthMethodToString()
{
  return MEMORY[0x270F18CC0]();
}

uint64_t HAPCharacteristicFormatFromString()
{
  return MEMORY[0x270F18CC8]();
}

uint64_t HAPCommunicationProtocolDescription()
{
  return MEMORY[0x270F18CD0]();
}

uint64_t HAPCompareStateNumberWithRollover()
{
  return MEMORY[0x270F18CD8]();
}

uint64_t HAPDataStreamTransportCommandStatusAsString()
{
  return MEMORY[0x270F18CE0]();
}

uint64_t HAPDateWithTimeIntervalSince1970()
{
  return MEMORY[0x270F18CE8]();
}

uint64_t HAPDispatchQueueName()
{
  return MEMORY[0x270F18CF0]();
}

uint64_t HAPEqualInstanceIDs()
{
  return MEMORY[0x270F18CF8]();
}

uint64_t HAPFirmwareUpdateStateAsString()
{
  return MEMORY[0x270F18D00]();
}

uint64_t HAPInstanceIDFromUniqueIdentifier()
{
  return MEMORY[0x270F18D08]();
}

uint64_t HAPInstanceIDFromValue()
{
  return MEMORY[0x270F18D10]();
}

uint64_t HAPIsHH2Enabled()
{
  return MEMORY[0x270F18D18]();
}

uint64_t HAPLinkLayerTypeDescription()
{
  return MEMORY[0x270F18D28]();
}

uint64_t HAPLinkTypeDescription()
{
  return MEMORY[0x270F18D30]();
}

uint64_t HAPOTAProviderStateAsString()
{
  return MEMORY[0x270F18D38]();
}

uint64_t HAPOperatingStateAbnormalReasonsAsString()
{
  return MEMORY[0x270F18D40]();
}

uint64_t HAPOperatingStateAsString()
{
  return MEMORY[0x270F18D48]();
}

uint64_t HAPServerIDFromUniqueIdentifier()
{
  return MEMORY[0x270F18D50]();
}

uint64_t HAPShortUUIDType()
{
  return MEMORY[0x270F18D58]();
}

uint64_t HAPStagingNotReadyReasonsAsString()
{
  return MEMORY[0x270F18D60]();
}

uint64_t HAPStringFromAccessoryServerSession()
{
  return MEMORY[0x270F18D68]();
}

uint64_t HAPTLVCreateParseArrayToString()
{
  return MEMORY[0x270F18D70]();
}

uint64_t HAPTLVParseContiguousTlvs()
{
  return MEMORY[0x270F18D78]();
}

uint64_t HAPTLVParseUInt64()
{
  return MEMORY[0x270F18D80]();
}

uint64_t HAPUniqueIdentifier()
{
  return MEMORY[0x270F18D90]();
}

uint64_t HAPUpdateNotReadyReasonsAsString()
{
  return MEMORY[0x270F18D98]();
}

uint64_t HAPUserPermissionTypeDescription()
{
  return MEMORY[0x270F18DA0]();
}

uint64_t HAPValidateSetupHash()
{
  return MEMORY[0x270F18DA8]();
}

uint64_t HKSPGenerateSleepStoreIdentifier()
{
  return MEMORY[0x270F72FF8]();
}

uint64_t HMAccessoryCertificationStatusToString()
{
  return MEMORY[0x270EF3AC8]();
}

uint64_t HMAccessoryNetworkProtectionModeAsString()
{
  return MEMORY[0x270EF3AD0]();
}

uint64_t HMAccessorySettingConstraintTypeFromString()
{
  return MEMORY[0x270EF3AD8]();
}

uint64_t HMAccessorySettingPropertiesFromString()
{
  return MEMORY[0x270EF3AE0]();
}

uint64_t HMAccessorySettingPropertiesToString()
{
  return MEMORY[0x270EF3AE8]();
}

uint64_t HMAccessorySettingTypeFromString()
{
  return MEMORY[0x270EF3AF0]();
}

uint64_t HMAccessorySettingTypeToString()
{
  return MEMORY[0x270EF3AF8]();
}

uint64_t HMAccessoryTransportTypesToString()
{
  return MEMORY[0x270EF3B00]();
}

uint64_t HMAccessoryWiFiCredentialTypeAsString()
{
  return MEMORY[0x270EF3B08]();
}

uint64_t HMActionTypeAsString()
{
  return MEMORY[0x270EF3B10]();
}

uint64_t HMAllowedClassesForMatterCommand()
{
  return MEMORY[0x270EF3B18]();
}

uint64_t HMAreSnapshotsAllowedForCameraAccessMode()
{
  return MEMORY[0x270EF3B20]();
}

uint64_t HMAssistantAccessControlOptionsToString()
{
  return MEMORY[0x270EF3B28]();
}

uint64_t HMCLAuthorizationStatusAsString()
{
  return MEMORY[0x270EF3B30]();
}

uint64_t HMCLRegionStateAsString()
{
  return MEMORY[0x270EF3B38]();
}

uint64_t HMCacheSubdirectoryWithRelativePath()
{
  return MEMORY[0x270EF3B40]();
}

uint64_t HMCameraAccessModeAsString()
{
  return MEMORY[0x270EF3B48]();
}

uint64_t HMCameraAudioStreamSettingAsString()
{
  return MEMORY[0x270EF3B50]();
}

uint64_t HMCameraHomePresenceAsString()
{
  return MEMORY[0x270EF3B58]();
}

uint64_t HMCameraSignificantEventPersonFamiliarityOptionsAsString()
{
  return MEMORY[0x270EF3B60]();
}

uint64_t HMCameraSignificantEventTypesAsString()
{
  return MEMORY[0x270EF3B68]();
}

uint64_t HMCameraSignificantEventTypesFromReasons()
{
  return MEMORY[0x270EF3B70]();
}

uint64_t HMCameraSupportedFeaturesAsString()
{
  return MEMORY[0x270EF3B78]();
}

uint64_t HMCreateHomeKitCacheDirectory()
{
  return MEMORY[0x270EF3B80]();
}

uint64_t HMDLocationAuthorizationAsString()
{
  return MEMORY[0x270EF3B88]();
}

uint64_t HMDRegionStateString()
{
  return MEMORY[0x270EF3B90]();
}

uint64_t HMDSecureClassBulletinUserAttributionTime()
{
  return MEMORY[0x270EF3B98]();
}

uint64_t HMDTaggedLoggingCreateDictionary()
{
  return MEMORY[0x270F3C368]();
}

uint64_t HMDailyRotatedUUID()
{
  return MEMORY[0x270EF3BA0]();
}

uint64_t HMDateComponentFromSecondsOfDay()
{
  return MEMORY[0x270EF3BA8]();
}

uint64_t HMDateFromDateWithHourAndMinuteComponents()
{
  return MEMORY[0x270EF3BB0]();
}

uint64_t HMDaysOfTheWeekFromDateComponents()
{
  return MEMORY[0x270EF3BB8]();
}

uint64_t HMDaysOfTheWeekToDateComponents()
{
  return MEMORY[0x270EF3BC0]();
}

uint64_t HMDispatchQueueNameString()
{
  return MEMORY[0x270EF3BC8]();
}

uint64_t HMDurationsApproximatelyEqual()
{
  return MEMORY[0x270EF3BD0]();
}

uint64_t HMEProtoEventInfoReadFrom()
{
  return MEMORY[0x270F3C190]();
}

uint64_t HMErrorFromOSStatus()
{
  return MEMORY[0x270F18DB0]();
}

uint64_t HMEventTriggerActivationStateAsString()
{
  return MEMORY[0x270EF3BD8]();
}

uint64_t HMFAreStringsEqualIgnoringCase()
{
  return MEMORY[0x270F30810]();
}

uint64_t HMFBooleanToString()
{
  return MEMORY[0x270F30818]();
}

uint64_t HMFCreateOSLogHandle()
{
  return MEMORY[0x270F30820]();
}

uint64_t HMFDataIsReversed()
{
  return MEMORY[0x270F30828]();
}

uint64_t HMFDigestAlgorithmToString()
{
  return MEMORY[0x270F30830]();
}

uint64_t HMFDispatchQueueName()
{
  return MEMORY[0x270F30838]();
}

uint64_t HMFEnabledStatusToString()
{
  return MEMORY[0x270F30840]();
}

uint64_t HMFEncodedRootObject()
{
  return MEMORY[0x270F30848]();
}

uint64_t HMFEqualObjects()
{
  return MEMORY[0x270F30850]();
}

uint64_t HMFGetLogIdentifier()
{
  return MEMORY[0x270F30858]();
}

uint64_t HMFGetOSLogHandle()
{
  return MEMORY[0x270F30860]();
}

uint64_t HMFIsInternalBuild()
{
  return MEMORY[0x270F30870]();
}

uint64_t HMFMethodDescription()
{
  return MEMORY[0x270F30878]();
}

uint64_t HMFOperatingSystemVersionCompare()
{
  return MEMORY[0x270F30888]();
}

uint64_t HMFProductClassFromString()
{
  return MEMORY[0x270F30890]();
}

uint64_t HMFProductClassToString()
{
  return MEMORY[0x270F30898]();
}

uint64_t HMFProductColorToString()
{
  return MEMORY[0x270F308A0]();
}

uint64_t HMFProductPlatformFromString()
{
  return MEMORY[0x270F308A8]();
}

uint64_t HMFProductPlatformToString()
{
  return MEMORY[0x270F308B0]();
}

uint64_t HMFQOSClassFromQualityOfService()
{
  return MEMORY[0x270F308B8]();
}

uint64_t HMFQualityOfServiceCompare()
{
  return MEMORY[0x270F308C0]();
}

uint64_t HMFQualityOfServiceToString()
{
  return MEMORY[0x270F308C8]();
}

uint64_t HMFRandomDataWithLength()
{
  return MEMORY[0x270F308D0]();
}

uint64_t HMFRandomUInt32()
{
  return MEMORY[0x270F308D8]();
}

uint64_t HMFRequireCurrentAsyncContext()
{
  return MEMORY[0x270F308E0]();
}

uint64_t HMFTimeIntervalDescription()
{
  return MEMORY[0x270F308E8]();
}

uint64_t HMFUptime()
{
  return MEMORY[0x270F308F0]();
}

uint64_t HMF_MESSAGE_BINDING()
{
  return MEMORY[0x270F308F8]();
}

uint64_t HMHomeAddWalletKeyOptionsDescription()
{
  return MEMORY[0x270EF3BE0]();
}

uint64_t HMHomeKitCacheDirectory()
{
  return MEMORY[0x270EF3BE8]();
}

uint64_t HMHomeManagerAreAnyAccessoriesConfigured()
{
  return MEMORY[0x270EF3BF0]();
}

uint64_t HMHomeManagerAreAnyAppleTVAccessoriesConfigured()
{
  return MEMORY[0x270EF3BF8]();
}

uint64_t HMHomeManagerAreAnySpeakersConfigured()
{
  return MEMORY[0x270EF3C00]();
}

uint64_t HMHomeManagerAreAnyTelevisionAccessoriesConfigured()
{
  return MEMORY[0x270EF3C08]();
}

uint64_t HMHomeManagerConfiguredHomesCount()
{
  return MEMORY[0x270EF3C10]();
}

uint64_t HMHomeManagerCurrentHomeSPIClientIdentifier()
{
  return MEMORY[0x270EF3C18]();
}

uint64_t HMHomeManagerDataSyncStateToString()
{
  return MEMORY[0x270EF3C20]();
}

uint64_t HMHomeManagerNameValidationOptionsToString()
{
  return MEMORY[0x270EF3C28]();
}

uint64_t HMHomeManagerOptionsShortDescription()
{
  return MEMORY[0x270EF3C30]();
}

uint64_t HMHomeManagerOptionsToString()
{
  return MEMORY[0x270EF3C38]();
}

uint64_t HMHomeManagerStatusToString()
{
  return MEMORY[0x270EF3C40]();
}

uint64_t HMHomeWalletKeyColorAsString()
{
  return MEMORY[0x270EF3C48]();
}

uint64_t HMINControlHomeIntentShortDescription()
{
  return MEMORY[0x270EF3C50]();
}

uint64_t HMImmutableSettingChangeEventComponentsFromTopic()
{
  return MEMORY[0x270EF3C58]();
}

uint64_t HMImmutableSettingChangeEventTopicFromComponents()
{
  return MEMORY[0x270EF3C60]();
}

uint64_t HMImmutableSettingChangeEventTopicFromMediaSystem()
{
  return MEMORY[0x270EF3C68]();
}

uint64_t HMIsHAPMetadataNeededForHMHomeManagerOptions()
{
  return MEMORY[0x270EF3C70]();
}

uint64_t HMIsMotionDetectionAllowedForCameraAccessMode()
{
  return MEMORY[0x270EF3C78]();
}

uint64_t HMIsRecordingAllowedForCameraAccessMode()
{
  return MEMORY[0x270EF3C80]();
}

uint64_t HMIsStreamingAllowedForCameraAccessMode()
{
  return MEMORY[0x270EF3C88]();
}

uint64_t HMIsValidRegion()
{
  return MEMORY[0x270EF3C90]();
}

uint64_t HMIsValidSignificantEvent()
{
  return MEMORY[0x270EF3C98]();
}

uint64_t HMMLogTagActivityWithError()
{
  return MEMORY[0x270F3C370]();
}

uint64_t HMMMUserRestrictionToString()
{
  return MEMORY[0x270EF3CA0]();
}

uint64_t HMMSafeHomeUUIDFromLogEvent()
{
  return MEMORY[0x270F3C380]();
}

uint64_t HMMTRUserPrivilegeAsString()
{
  return MEMORY[0x270F3C308]();
}

uint64_t HMMatterScheduleIntervalFromStartAndEndDates()
{
  return MEMORY[0x270EF3CA8]();
}

uint64_t HMMaxLengthForNaming()
{
  return MEMORY[0x270EF3CB0]();
}

uint64_t HMMediaDestinationControllerSupportOptionsAsString()
{
  return MEMORY[0x270EF3CB8]();
}

uint64_t HMMediaDestinationControllerUpateOptionsAsString()
{
  return MEMORY[0x270EF3CC0]();
}

uint64_t HMMediaDestinationSupportOptionsAsString()
{
  return MEMORY[0x270EF3CC8]();
}

uint64_t HMMediaDestinationTypeAsString()
{
  return MEMORY[0x270EF3CD0]();
}

uint64_t HMMediaSystemRoleTypeAsString()
{
  return MEMORY[0x270EF3CD8]();
}

uint64_t HMNetworkProtectionModeAsString()
{
  return MEMORY[0x270EF3CE0]();
}

uint64_t HMNetworkRouterSupportDisableReasonAsString()
{
  return MEMORY[0x270EF3CE8]();
}

uint64_t HMPresenceEventTypeAsString()
{
  return MEMORY[0x270EF3CF8]();
}

uint64_t HMPresenceEventUserTypeAsString()
{
  return MEMORY[0x270EF3D00]();
}

uint64_t HMSecondsFromDateComponent()
{
  return MEMORY[0x270EF3D18]();
}

uint64_t HMSettingConstraintTypeToString()
{
  return MEMORY[0x270EF3D20]();
}

uint64_t HMSettingVersionValueTypeAsString()
{
  return MEMORY[0x270EF3D28]();
}

uint64_t HMSetupAccessoryProgressAsString()
{
  return MEMORY[0x270EF3D30]();
}

uint64_t HMSiriEndpointOnboardingResultAsString()
{
  return MEMORY[0x270EF3D38]();
}

uint64_t HMSiriEndpointProfileSessionStateTypeToString()
{
  return MEMORY[0x270EF3D40]();
}

uint64_t HMSoftwareUpdateAssetSourceAsString()
{
  return MEMORY[0x270EF3D48]();
}

uint64_t HMSoftwareUpdateNeedsAttentionReasonsToString()
{
  return MEMORY[0x270EF3D50]();
}

uint64_t HMSoftwareUpdateStateToString()
{
  return MEMORY[0x270EF3D58]();
}

uint64_t HMSoftwareUpdateUpdateTypeToString()
{
  return MEMORY[0x270EF3D60]();
}

uint64_t HMStringFromCameraClipQuality()
{
  return MEMORY[0x270EF3D68]();
}

uint64_t HMStringFromCameraSignificantEventConfidenceLevel()
{
  return MEMORY[0x270EF3D70]();
}

uint64_t HMStringFromCameraSignificantEventReason()
{
  return MEMORY[0x270EF3D78]();
}

uint64_t HMStringFromHomeLocation()
{
  return MEMORY[0x270EF3D80]();
}

uint64_t HMStringFromIntentRequestType()
{
  return MEMORY[0x270EF3D88]();
}

uint64_t HMUserCameraAccessLevelAsString()
{
  return MEMORY[0x270EF3D90]();
}

uint64_t HMUserDefaultCamerasAccessLevel()
{
  return MEMORY[0x270EF3D98]();
}

uint64_t HMUserIsStreamingAllowedWithCameraAccessLevel()
{
  return MEMORY[0x270EF3DA8]();
}

uint64_t HMUserIsValidCameraAccessLevel()
{
  return MEMORY[0x270EF3DB0]();
}

uint64_t HMUserPrivilegeToString()
{
  return MEMORY[0x270EF3DB8]();
}

uint64_t HMVConfigurationCloudKitContainerID()
{
  return MEMORY[0x270F3C2E8]();
}

uint64_t HMVConfigurationZoneNameForZoneUUID()
{
  return MEMORY[0x270F3C2F0]();
}

uint64_t HMVConfigurationZoneUUIDForHomeIdentifier()
{
  return MEMORY[0x270F3C2F8]();
}

uint64_t HMXPCClientEntitlementsShortDescription()
{
  return MEMORY[0x270EF3DC0]();
}

uint64_t HM_FEATURE_RVC_DEFAULTS_ENABLED()
{
  return MEMORY[0x270F3C300]();
}

uint64_t HardwareAddressToCString()
{
  return MEMORY[0x270F243A0]();
}

uint64_t IDSCopyAddressDestinationForDestination()
{
  return MEMORY[0x270F3C958]();
}

uint64_t IDSCopyIDForBusinessID()
{
  return MEMORY[0x270F3C970]();
}

uint64_t IDSCopyIDForDevice()
{
  return MEMORY[0x270F3C978]();
}

uint64_t IDSCopyIDForEmailAddress()
{
  return MEMORY[0x270F3C980]();
}

uint64_t IDSCopyIDForPhoneNumber()
{
  return MEMORY[0x270F3C988]();
}

uint64_t IDSCopyIDForTokenWithID()
{
  return MEMORY[0x270F3C9A0]();
}

uint64_t IDSCopyLocalDeviceUniqueID()
{
  return MEMORY[0x270F3C9A8]();
}

IOReturn IOPMAssertionCreateWithDescription(CFStringRef AssertionType, CFStringRef Name, CFStringRef Details, CFStringRef HumanReadableReason, CFStringRef LocalizationBundlePath, CFTimeInterval Timeout, CFStringRef TimeoutAction, IOPMAssertionID *AssertionID)
{
  return MEMORY[0x270EF4838](AssertionType, Name, Details, HumanReadableReason, LocalizationBundlePath, TimeoutAction, AssertionID, Timeout);
}

IOReturn IOPMAssertionRelease(IOPMAssertionID AssertionID)
{
  return MEMORY[0x270EF4868](*(void *)&AssertionID);
}

uint64_t IOPSDrawingUnlimitedPower()
{
  return MEMORY[0x270EF4930]();
}

uint64_t IXStringForAppRemovability()
{
  return MEMORY[0x270F3D690]();
}

uint64_t IsAppleTV()
{
  return MEMORY[0x270F243C0]();
}

uint64_t LogPrintF()
{
  return MEMORY[0x270F243F8]();
}

uint64_t MAStringForMADownloadResult()
{
  return MEMORY[0x270F4A930]();
}

uint64_t MAStringForMAPurgeResult()
{
  return MEMORY[0x270F4A940]();
}

uint64_t MAStringForMAQueryResult()
{
  return MEMORY[0x270F4A948]();
}

uint64_t MGCopyAnswer()
{
  return MEMORY[0x270F95F98]();
}

uint64_t MGGetBoolAnswer()
{
  return MEMORY[0x270F95FB8]();
}

uint64_t MGGetProductType()
{
  return MEMORY[0x270F95FD8]();
}

uint64_t MGGetStringAnswer()
{
  return MEMORY[0x270F95FF8]();
}

uint64_t MKBDeviceUnlockedSinceBoot()
{
  return MEMORY[0x270F4AE20]();
}

uint64_t MKBGetDeviceLockState()
{
  return MEMORY[0x270F4AE40]();
}

uint64_t MPCAssistantErrorIsInformational()
{
  return MEMORY[0x270F49BA0]();
}

uint64_t MRAVEndpointCopyLocalizedName()
{
  return MEMORY[0x270F49BB0]();
}

uint64_t MRAVEndpointCopyOutputDevices()
{
  return MEMORY[0x270F49BB8]();
}

uint64_t MRAVEndpointCopyUniqueIdentifier()
{
  return MEMORY[0x270F49BC0]();
}

uint64_t MRAVEndpointGetExternalDevice()
{
  return MEMORY[0x270F49BD8]();
}

uint64_t MRAVEndpointGetOutputDeviceUIDVolumeControlCapabilities()
{
  return MEMORY[0x270F49BF8]();
}

uint64_t MRAVEndpointSetOutputDeviceUIDVolume()
{
  return MEMORY[0x270F49C48]();
}

uint64_t MRAVOutputDeviceCopyModelID()
{
  return MEMORY[0x270F49C88]();
}

uint64_t MRAVOutputDeviceCopyName()
{
  return MEMORY[0x270F49C90]();
}

uint64_t MRAVOutputDeviceCopyUniqueIdentifier()
{
  return MEMORY[0x270F49C98]();
}

uint64_t MRAVOutputDeviceSupportsHAP()
{
  return MEMORY[0x270F49CD0]();
}

uint64_t MRAVReconnaissanceSessionBeginSearch()
{
  return MEMORY[0x270F49CE0]();
}

uint64_t MRAVReconnaissanceSessionCancelSearch()
{
  return MEMORY[0x270F49CE8]();
}

uint64_t MRAVReconnaissanceSessionCreateWithEndpointFeatures()
{
  return MEMORY[0x270F49CF0]();
}

uint64_t MRAVRoutingDiscoverySessionAddOutputDevicesChangedCallback()
{
  return MEMORY[0x270F49D38]();
}

uint64_t MRAVRoutingDiscoverySessionCopyAvailableOutputDevices()
{
  return MEMORY[0x270F49D48]();
}

uint64_t MRAVRoutingDiscoverySessionCreate()
{
  return MEMORY[0x270F49D50]();
}

uint64_t MRAVRoutingDiscoverySessionRemoveOutputDevicesChangedCallback()
{
  return MEMORY[0x270F49D60]();
}

uint64_t MRAVRoutingDiscoverySessionSetDiscoveryMode()
{
  return MEMORY[0x270F49D70]();
}

uint64_t MREExceptionTypeToString()
{
  return MEMORY[0x270F95F78]();
}

uint64_t MRExternalDeviceConnect()
{
  return MEMORY[0x270F49DE8]();
}

uint64_t MRExternalDeviceCopyCustomOrigin()
{
  return MEMORY[0x270F49DF0]();
}

uint64_t MRExternalDeviceDisconnect()
{
  return MEMORY[0x270F49DF8]();
}

uint64_t MRExternalDeviceGetConnectionState()
{
  return MEMORY[0x270F49E00]();
}

uint64_t MRExternalDeviceSetConnectionStateCallback()
{
  return MEMORY[0x270F49E08]();
}

uint64_t MRExternalDeviceSetWantsNowPlayingUpdates()
{
  return MEMORY[0x270F49E10]();
}

uint64_t MRMediaRemoteErrorIsInformational()
{
  return MEMORY[0x270F49F28]();
}

uint64_t MRMediaRemoteGetLocalOrigin()
{
  return MEMORY[0x270F49F68]();
}

uint64_t MRMediaRemoteGetNowPlayingApplicationPlaybackStateForOrigin()
{
  return MEMORY[0x270F49F90]();
}

uint64_t MRMediaRemoteSendCommandForOriginWithReply()
{
  return MEMORY[0x270F4A048]();
}

uint64_t MRMediaRemoteSetWantsNowPlayingNotifications()
{
  return MEMORY[0x270F4A090]();
}

uint64_t MROriginIsLocalOrigin()
{
  return MEMORY[0x270F4A160]();
}

uint64_t MTRSetMessageReliabilityParameters()
{
  return MEMORY[0x270EF5AA0]();
}

uint64_t MobileGestalt_copy_deviceColor_obj()
{
  return MEMORY[0x270F96050]();
}

uint64_t MobileGestalt_get_current_device()
{
  return MEMORY[0x270F960E8]();
}

uint64_t NAEmptyResult()
{
  return MEMORY[0x270F4DC60]();
}

uint64_t NEHelperCacheClearUUIDs()
{
  return MEMORY[0x270ED7C38]();
}

uint64_t NEHelperCacheCopyAppUUIDMapping()
{
  return MEMORY[0x270ED7C40]();
}

uint64_t NEHelperCacheCopySigningIdentifierMapping()
{
  return MEMORY[0x270ED7C48]();
}

uint64_t NRWatchOSVersion()
{
  return MEMORY[0x270F4D8B8]();
}

NSArray *__cdecl NSAllMapTableValues(NSMapTable *table)
{
  return (NSArray *)MEMORY[0x270EF2A28](table);
}

uint64_t NSAppendPrintF()
{
  return MEMORY[0x270F24450]();
}

Class NSClassFromString(NSString *aClassName)
{
  return (Class)MEMORY[0x270EF2A50](aClassName);
}

uint64_t NSLocalizedFileSizeDescription()
{
  return MEMORY[0x270EF2B10]();
}

uint64_t NSPrintF()
{
  return MEMORY[0x270F244C8]();
}

Protocol *__cdecl NSProtocolFromString(NSString *namestr)
{
  return (Protocol *)MEMORY[0x270EF2B98](namestr);
}

NSArray *__cdecl NSSearchPathForDirectoriesInDomains(NSSearchPathDirectory directory, NSSearchPathDomainMask domainMask, BOOL expandTilde)
{
  return (NSArray *)MEMORY[0x270EF2BD8](directory, domainMask, expandTilde);
}

SEL NSSelectorFromString(NSString *aSelectorName)
{
  return (SEL)MEMORY[0x270EF2BE8](aSelectorName);
}

uint64_t NSStringFromBOOL()
{
  return MEMORY[0x270EF2BF8]();
}

NSString *__cdecl NSStringFromClass(Class aClass)
{
  return (NSString *)MEMORY[0x270EF2C08](aClass);
}

NSString *__cdecl NSStringFromProtocol(Protocol *proto)
{
  return (NSString *)MEMORY[0x270EF2C18](proto);
}

NSString *__cdecl NSStringFromSelector(SEL aSelector)
{
  return (NSString *)MEMORY[0x270EF2C38](aSelector);
}

NSString *NSTemporaryDirectory(void)
{
  return (NSString *)MEMORY[0x270EF2C48]();
}

uint64_t OPACKDecodeBytes()
{
  return MEMORY[0x270F24580]();
}

uint64_t OPACKDecodeData()
{
  return MEMORY[0x270F24588]();
}

uint64_t OPACKEncodeObject()
{
  return MEMORY[0x270F24590]();
}

uint64_t OPACKEncoderCreateData()
{
  return MEMORY[0x270F24598]();
}

uint64_t PBDataWriterWriteDataField()
{
  return MEMORY[0x270F58540]();
}

uint64_t PBDataWriterWriteDoubleField()
{
  return MEMORY[0x270F58548]();
}

uint64_t PBDataWriterWriteInt32Field()
{
  return MEMORY[0x270F58560]();
}

uint64_t PBDataWriterWriteStringField()
{
  return MEMORY[0x270F58590]();
}

uint64_t PBDataWriterWriteSubmessage()
{
  return MEMORY[0x270F585A0]();
}

uint64_t PBDataWriterWriteUint32Field()
{
  return MEMORY[0x270F585B0]();
}

uint64_t PBDataWriterWriteUint64Field()
{
  return MEMORY[0x270F585B8]();
}

uint64_t PBReaderPlaceMark()
{
  return MEMORY[0x270F585D8]();
}

uint64_t PBReaderReadData()
{
  return MEMORY[0x270F585E0]();
}

uint64_t PBReaderReadString()
{
  return MEMORY[0x270F585E8]();
}

uint64_t PBReaderRecallMark()
{
  return MEMORY[0x270F585F8]();
}

uint64_t PBReaderSkipValueWithTag()
{
  return MEMORY[0x270F58600]();
}

uint64_t PairingSessionCreate()
{
  return MEMORY[0x270F245C0]();
}

uint64_t PairingSessionDeriveKey()
{
  return MEMORY[0x270F245D0]();
}

uint64_t PairingSessionExchange()
{
  return MEMORY[0x270F245D8]();
}

uint64_t PairingSessionSetLogging()
{
  return MEMORY[0x270F245F8]();
}

uint64_t RandomBytes()
{
  return MEMORY[0x270F24630]();
}

uint64_t ReportMemoryExceptionFromTask()
{
  return MEMORY[0x270F95F80]();
}

CFArrayRef SCDynamicStoreCopyKeyList(SCDynamicStoreRef store, CFStringRef pattern)
{
  return (CFArrayRef)MEMORY[0x270F054E8](store, pattern);
}

CFPropertyListRef SCDynamicStoreCopyValue(SCDynamicStoreRef store, CFStringRef key)
{
  return (CFPropertyListRef)MEMORY[0x270F05500](store, key);
}

SCDynamicStoreRef SCDynamicStoreCreate(CFAllocatorRef allocator, CFStringRef name, SCDynamicStoreCallBack callout, SCDynamicStoreContext *context)
{
  return (SCDynamicStoreRef)MEMORY[0x270F05508](allocator, name, callout, context);
}

CFStringRef SCDynamicStoreKeyCreateNetworkGlobalEntity(CFAllocatorRef allocator, CFStringRef domain, CFStringRef entity)
{
  return (CFStringRef)MEMORY[0x270F05528](allocator, domain, entity);
}

CFStringRef SCDynamicStoreKeyCreateNetworkInterfaceEntity(CFAllocatorRef allocator, CFStringRef domain, CFStringRef ifname, CFStringRef entity)
{
  return (CFStringRef)MEMORY[0x270F05538](allocator, domain, ifname, entity);
}

CFStringRef SCDynamicStoreKeyCreateNetworkServiceEntity(CFAllocatorRef allocator, CFStringRef domain, CFStringRef serviceID, CFStringRef entity)
{
  return (CFStringRef)MEMORY[0x270F05540](allocator, domain, serviceID, entity);
}

Boolean SCDynamicStoreSetDispatchQueue(SCDynamicStoreRef store, dispatch_queue_t queue)
{
  return MEMORY[0x270F05558](store, queue);
}

Boolean SCDynamicStoreSetNotificationKeys(SCDynamicStoreRef store, CFArrayRef keys, CFArrayRef patterns)
{
  return MEMORY[0x270F05560](store, keys, patterns);
}

int SCError(void)
{
  return MEMORY[0x270F05570]();
}

CFArrayRef SCNetworkInterfaceCopyAll(void)
{
  return (CFArrayRef)MEMORY[0x270F05598]();
}

CFStringRef SCNetworkInterfaceGetBSDName(SCNetworkInterfaceRef interface)
{
  return (CFStringRef)MEMORY[0x270F055A8](interface);
}

CFStringRef SCNetworkInterfaceGetHardwareAddressString(SCNetworkInterfaceRef interface)
{
  return (CFStringRef)MEMORY[0x270F055B0](interface);
}

CFStringRef SCNetworkInterfaceGetInterfaceType(SCNetworkInterfaceRef interface)
{
  return (CFStringRef)MEMORY[0x270F055C0](interface);
}

uint64_t SZArchiverCreateStreamableZip()
{
  return MEMORY[0x270F79028]();
}

SecCertificateRef SecCertificateCreateWithData(CFAllocatorRef allocator, CFDataRef data)
{
  return (SecCertificateRef)MEMORY[0x270EFD7E0](allocator, data);
}

CFDataRef SecKeyCopyExternalRepresentation(SecKeyRef key, CFErrorRef *error)
{
  return (CFDataRef)MEMORY[0x270EFD9B0](key, error);
}

SecKeyRef SecKeyCreateRandomKey(CFDictionaryRef parameters, CFErrorRef *error)
{
  return (SecKeyRef)MEMORY[0x270EFDA40](parameters, error);
}

CFDataRef SecKeyCreateSignature(SecKeyRef key, SecKeyAlgorithm algorithm, CFDataRef dataToSign, CFErrorRef *error)
{
  return (CFDataRef)MEMORY[0x270EFDA50](key, algorithm, dataToSign, error);
}

SecKeyRef SecKeyCreateWithData(CFDataRef keyData, CFDictionaryRef attributes, CFErrorRef *error)
{
  return (SecKeyRef)MEMORY[0x270EFDA60](keyData, attributes, error);
}

Boolean SecKeyVerifySignature(SecKeyRef key, SecKeyAlgorithm algorithm, CFDataRef signedData, CFDataRef signature, CFErrorRef *error)
{
  return MEMORY[0x270EFDAC8](key, algorithm, signedData, signature, error);
}

uint64_t SecPasswordGenerate()
{
  return MEMORY[0x270EFDAF0]();
}

uint64_t SecPolicyCreateApplePinned()
{
  return MEMORY[0x270EFDB38]();
}

int SecRandomCopyBytes(SecRandomRef rnd, size_t count, void *bytes)
{
  return MEMORY[0x270EFDC20](rnd, count, bytes);
}

SecKeyRef SecTrustCopyPublicKey(SecTrustRef trust)
{
  return (SecKeyRef)MEMORY[0x270EFDD30](trust);
}

OSStatus SecTrustCreateWithCertificates(CFTypeRef certificates, CFTypeRef policies, SecTrustRef *trust)
{
  return MEMORY[0x270EFDD40](certificates, policies, trust);
}

BOOL SecTrustEvaluateWithError(SecTrustRef trust, CFErrorRef *error)
{
  return MEMORY[0x270EFDD60](trust, error);
}

uint64_t SocketGetInterfaceInfo()
{
  return MEMORY[0x270F246F8]();
}

uint64_t TCCAccessCheckAuditToken()
{
  return MEMORY[0x270F795A8]();
}

uint64_t TLV8BufferAppend()
{
  return MEMORY[0x270F24758]();
}

uint64_t TLV8BufferAppendUInt64()
{
  return MEMORY[0x270F24760]();
}

uint64_t TLV8BufferFree()
{
  return MEMORY[0x270F24768]();
}

uint64_t TLV8BufferInit()
{
  return MEMORY[0x270F24770]();
}

uint64_t TLV8Get()
{
  return MEMORY[0x270F24778]();
}

uint64_t TLV8GetNext()
{
  return MEMORY[0x270F24780]();
}

uint64_t TLV8GetOrCopyCoalesced()
{
  return MEMORY[0x270F24788]();
}

uint64_t TLV8GetUInt64()
{
  return MEMORY[0x270F24790]();
}

uint64_t UARPAssetDownloadStatusToString()
{
  return MEMORY[0x270F239E0]();
}

uint64_t UARPFirmwareStagingCompletionStatusToString()
{
  return MEMORY[0x270F239E8]();
}

uint64_t UARPFirmwareUpdateAvailabilityStatusToString()
{
  return MEMORY[0x270F239F0]();
}

uint64_t UpTicksToMilliseconds()
{
  return MEMORY[0x270F24808]();
}

uint64_t UpTicksToSeconds()
{
  return MEMORY[0x270F24820]();
}

uint64_t WiFiCopyCurrentNetworkInfoEx()
{
  return MEMORY[0x270F24838]();
}

uint64_t WiFiCopyNetworkInfo()
{
  return MEMORY[0x270F24840]();
}

uint64_t WiFiNetworkGetOperatingBand()
{
  return MEMORY[0x270F4B750]();
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x270ED7CD8](aBlock);
}

void _Block_object_dispose(const void *a1, const int a2)
{
}

void _Block_release(const void *aBlock)
{
}

uint64_t _CFXPCCreateCFObjectFromXPCObject()
{
  return MEMORY[0x270EE5798]();
}

uint64_t _CFXPCCreateXPCObjectFromCFObject()
{
  return MEMORY[0x270EE57A8]();
}

void _Exit(int a1)
{
}

uint64_t _HMFPreconditionFailure()
{
  return MEMORY[0x270F30900]();
}

uint64_t _HMFPreconditionFailureWithFormat()
{
  return MEMORY[0x270F30908]();
}

uint64_t _HMFThreadLocalAsyncContextPop()
{
  return MEMORY[0x270F30910]();
}

uint64_t _HMFThreadLocalAsyncContextPush()
{
  return MEMORY[0x270F30918]();
}

uint64_t _LogCategory_Initialize()
{
  return MEMORY[0x270F24858]();
}

void _Unwind_Resume(_Unwind_Exception *exception_object)
{
}

uint64_t CtrXPC::Event::getDataValue(CtrXPC::Event *this)
{
  return MEMORY[0x270F23968](this);
}

uint64_t CtrXPC::Event::getName(CtrXPC::Event *this)
{
  return MEMORY[0x270F23970](this);
}

const std::locale::facet *__cdecl std::locale::use_facet(const std::locale *this, std::locale::id *a2)
{
  return (const std::locale::facet *)MEMORY[0x270F982E8](this, a2);
}

std::locale std::ios_base::getloc(const std::ios_base *this)
{
  return (std::locale)MEMORY[0x270F982F8](this);
}

std::logic_error *__cdecl std::logic_error::logic_error(std::logic_error *this, const char *a2)
{
  return (std::logic_error *)MEMORY[0x270F98330](this, a2);
}

uint64_t std::ostream::sentry::sentry()
{
  return MEMORY[0x270F98758]();
}

uint64_t std::ostream::sentry::~sentry()
{
  return MEMORY[0x270F98760]();
}

uint64_t std::ostream::~ostream()
{
  return MEMORY[0x270F98770]();
}

uint64_t std::streambuf::basic_streambuf()
{
  return MEMORY[0x270F988A8]();
}

uint64_t std::streambuf::~streambuf()
{
  return MEMORY[0x270F988B0]();
}

void std::__shared_weak_count::__release_weak(std::__shared_weak_count *this)
{
}

void std::locale::~locale(std::locale *this)
{
}

void std::ios_base::__set_badbit_and_consider_rethrow(std::ios_base *this)
{
}

void std::ios_base::init(std::ios_base *this, void *__sb)
{
}

void std::ios_base::clear(std::ios_base *this, std::ios_base::iostate __state)
{
}

uint64_t std::ios::~ios()
{
  return MEMORY[0x270F98DE8]();
}

void std::terminate(void)
{
}

void operator delete(void *__p)
{
  while (1)
    ;
}

void *__cdecl operator new(size_t __sz)
{
  while (1)
    ;
}

uint64_t __HMFActivityScopeLeave()
{
  return MEMORY[0x270F30920]();
}

void __assert_rtn(const char *a1, const char *a2, int a3, const char *a4)
{
}

void *__cxa_allocate_exception(size_t thrown_size)
{
  return (void *)MEMORY[0x270F98EC0](thrown_size);
}

void *__cxa_begin_catch(void *a1)
{
  return (void *)MEMORY[0x270F98ED8](a1);
}

void __cxa_end_catch(void)
{
}

void __cxa_free_exception(void *a1)
{
}

void __cxa_throw(void *a1, struct type_info *lptinfo, void (*a3)(void *))
{
}

int *__error(void)
{
  return (int *)MEMORY[0x270ED7DC0]();
}

double __exp10(double a1)
{
  MEMORY[0x270ED7DC8](a1);
  return result;
}

uint64_t _os_assumes_log()
{
  return MEMORY[0x270ED8058]();
}

uint64_t _os_feature_enabled_impl()
{
  return MEMORY[0x270ED8070]();
}

void _os_log_debug_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_log_error_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_signpost_emit_with_name_impl(void *dso, os_log_t log, os_signpost_type_t type, os_signpost_id_t spid, const char *name, const char *format, uint8_t *buf, uint32_t size)
{
}

uint64_t _sl_dlopen()
{
  return MEMORY[0x270F76310]();
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return MEMORY[0x270FA0158]();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return MEMORY[0x270FA0160]();
}

uint64_t abort_report_np()
{
  return MEMORY[0x270ED8458]();
}

uint64_t allowedCharValueTypes()
{
  return MEMORY[0x270EF3DC8]();
}

uint32_t arc4random(void)
{
  return MEMORY[0x270ED85E0]();
}

uint32_t arc4random_uniform(uint32_t __upper_bound)
{
  return MEMORY[0x270ED85F8](*(void *)&__upper_bound);
}

uint64_t areAnyHomePodMiniConfigured()
{
  return MEMORY[0x270EF3DD0]();
}

uint64_t areAnyHomePodsConfigured()
{
  return MEMORY[0x270EF3DD8]();
}

uint64_t areAnyLargeHomePodConfigured()
{
  return MEMORY[0x270EF3DE0]();
}

uint64_t areHomesConfigured()
{
  return MEMORY[0x270EF3DE8]();
}

uint64_t areIncomingInvitesPresent()
{
  return MEMORY[0x270EF3DF0]();
}

uint64_t atoll(const char *a1)
{
  return MEMORY[0x270ED86F8](a1);
}

int bind(int a1, const sockaddr *a2, socklen_t a3)
{
  return MEMORY[0x270ED8758](*(void *)&a1, a2, *(void *)&a3);
}

void bzero(void *a1, size_t a2)
{
}

uint64_t canSupportNativeMatter()
{
  return MEMORY[0x270EF3DF8]();
}

uint64_t cced25519_sign_compat()
{
  return MEMORY[0x270F24868]();
}

uint64_t cced25519_verify_compat()
{
  return MEMORY[0x270F24870]();
}

uint64_t cchkdf()
{
  return MEMORY[0x270ED8BA8]();
}

uint64_t ccsha512_di()
{
  return MEMORY[0x270ED8D88]();
}

uint64_t chacha20_poly1305_decrypt_all_64x64()
{
  return MEMORY[0x270F24888]();
}

uint64_t chacha20_poly1305_decrypt_all_96x32()
{
  return MEMORY[0x270F24890]();
}

uint64_t chacha20_poly1305_encrypt_all_64x64()
{
  return MEMORY[0x270F248A0]();
}

uint64_t chacha20_poly1305_encrypt_all_96x32()
{
  return MEMORY[0x270F248A8]();
}

BOOL class_addMethod(Class cls, SEL name, IMP imp, const char *types)
{
  return MEMORY[0x270F9A400](cls, name, imp, types);
}

IMP class_getMethodImplementation(Class cls, SEL name)
{
  return (IMP)MEMORY[0x270F9A478](cls, name);
}

__uint64_t clock_gettime_nsec_np(clockid_t __clock_id)
{
  return MEMORY[0x270ED8EF8](*(void *)&__clock_id);
}

int close(int a1)
{
  return MEMORY[0x270ED8F18](*(void *)&a1);
}

uint64_t csops_audittoken()
{
  return MEMORY[0x270ED9158]();
}

int deflate(z_streamp strm, int flush)
{
  return MEMORY[0x270F9C698](strm, *(void *)&flush);
}

uLong deflateBound(z_streamp strm, uLong sourceLen)
{
  return MEMORY[0x270F9C6A0](strm, sourceLen);
}

int deflateEnd(z_streamp strm)
{
  return MEMORY[0x270F9C6A8](strm);
}

int deflateInit2_(z_streamp strm, int level, int method, int windowBits, int memLevel, int strategy, const char *version, int stream_size)
{
  return MEMORY[0x270F9C6B0](strm, *(void *)&level, *(void *)&method, *(void *)&windowBits, *(void *)&memLevel, *(void *)&strategy, version, *(void *)&stream_size);
}

void dispatch_activate(dispatch_object_t object)
{
}

void dispatch_after(dispatch_time_t when, dispatch_queue_t queue, dispatch_block_t block)
{
}

void dispatch_assert_queue_V2(dispatch_queue_t queue)
{
}

void dispatch_async(dispatch_queue_t queue, dispatch_block_t block)
{
}

void dispatch_async_and_wait(dispatch_queue_t queue, dispatch_block_t block)
{
}

dispatch_block_t dispatch_block_create(dispatch_block_flags_t flags, dispatch_block_t block)
{
  return (dispatch_block_t)MEMORY[0x270ED9278](flags, block);
}

dispatch_block_t dispatch_block_create_with_qos_class(dispatch_block_flags_t flags, dispatch_qos_class_t qos_class, int relative_priority, dispatch_block_t block)
{
  return (dispatch_block_t)MEMORY[0x270ED9280](flags, *(void *)&qos_class, *(void *)&relative_priority, block);
}

void dispatch_block_perform(dispatch_block_flags_t flags, dispatch_block_t block)
{
}

dispatch_data_t dispatch_data_create(const void *buffer, size_t size, dispatch_queue_t queue, dispatch_block_t destructor)
{
  return (dispatch_data_t)MEMORY[0x270ED92D0](buffer, size, queue, destructor);
}

dispatch_data_t dispatch_data_create_concat(dispatch_data_t data1, dispatch_data_t data2)
{
  return (dispatch_data_t)MEMORY[0x270ED92E0](data1, data2);
}

dispatch_data_t dispatch_data_create_map(dispatch_data_t data, const void **buffer_ptr, size_t *size_ptr)
{
  return (dispatch_data_t)MEMORY[0x270ED92E8](data, buffer_ptr, size_ptr);
}

dispatch_data_t dispatch_data_create_subrange(dispatch_data_t data, size_t offset, size_t length)
{
  return (dispatch_data_t)MEMORY[0x270ED92F0](data, offset, length);
}

size_t dispatch_data_get_size(dispatch_data_t data)
{
  return MEMORY[0x270ED9300](data);
}

dispatch_queue_global_t dispatch_get_global_queue(intptr_t identifier, uintptr_t flags)
{
  return (dispatch_queue_global_t)MEMORY[0x270ED9318](identifier, flags);
}

dispatch_group_t dispatch_group_create(void)
{
  return (dispatch_group_t)MEMORY[0x270ED9340]();
}

void dispatch_group_enter(dispatch_group_t group)
{
}

void dispatch_group_leave(dispatch_group_t group)
{
}

void dispatch_group_notify(dispatch_group_t group, dispatch_queue_t queue, dispatch_block_t block)
{
}

intptr_t dispatch_group_wait(dispatch_group_t group, dispatch_time_t timeout)
{
  return MEMORY[0x270ED9378](group, timeout);
}

void dispatch_once(dispatch_once_t *predicate, dispatch_block_t block)
{
}

dispatch_queue_attr_t dispatch_queue_attr_make_with_autorelease_frequency(dispatch_queue_attr_t attr, dispatch_autorelease_frequency_t frequency)
{
  return (dispatch_queue_attr_t)MEMORY[0x270ED9448](attr, frequency);
}

dispatch_queue_attr_t dispatch_queue_attr_make_with_qos_class(dispatch_queue_attr_t attr, dispatch_qos_class_t qos_class, int relative_priority)
{
  return (dispatch_queue_attr_t)MEMORY[0x270ED9458](attr, *(void *)&qos_class, *(void *)&relative_priority);
}

dispatch_queue_t dispatch_queue_create(const char *label, dispatch_queue_attr_t attr)
{
  return (dispatch_queue_t)MEMORY[0x270ED9460](label, attr);
}

dispatch_queue_t dispatch_queue_create_with_target_V2(const char *label, dispatch_queue_attr_t attr, dispatch_queue_t target)
{
  return (dispatch_queue_t)MEMORY[0x270ED9468](label, attr, target);
}

void dispatch_resume(dispatch_object_t object)
{
}

dispatch_semaphore_t dispatch_semaphore_create(intptr_t value)
{
  return (dispatch_semaphore_t)MEMORY[0x270ED94B8](value);
}

intptr_t dispatch_semaphore_signal(dispatch_semaphore_t dsema)
{
  return MEMORY[0x270ED94C8](dsema);
}

intptr_t dispatch_semaphore_wait(dispatch_semaphore_t dsema, dispatch_time_t timeout)
{
  return MEMORY[0x270ED94D0](dsema, timeout);
}

uint64_t dispatch_set_qos_class_fallback()
{
  return MEMORY[0x270ED94F0]();
}

void dispatch_set_target_queue(dispatch_object_t object, dispatch_queue_t queue)
{
}

void dispatch_source_cancel(dispatch_source_t source)
{
}

dispatch_source_t dispatch_source_create(dispatch_source_type_t type, uintptr_t handle, uintptr_t mask, dispatch_queue_t queue)
{
  return (dispatch_source_t)MEMORY[0x270ED9510](type, handle, mask, queue);
}

void dispatch_source_set_cancel_handler(dispatch_source_t source, dispatch_block_t handler)
{
}

void dispatch_source_set_event_handler(dispatch_source_t source, dispatch_block_t handler)
{
}

void dispatch_source_set_timer(dispatch_source_t source, dispatch_time_t start, uint64_t interval, uint64_t leeway)
{
}

void dispatch_suspend(dispatch_object_t object)
{
}

void dispatch_sync(dispatch_queue_t queue, dispatch_block_t block)
{
}

dispatch_time_t dispatch_time(dispatch_time_t when, int64_t delta)
{
  return MEMORY[0x270ED95A8](when, delta);
}

dispatch_time_t dispatch_walltime(const timespec *when, int64_t delta)
{
  return MEMORY[0x270ED95B8](when, delta);
}

dispatch_workloop_t dispatch_workloop_create(const char *label)
{
  return (dispatch_workloop_t)MEMORY[0x270ED95C8](label);
}

dispatch_workloop_t dispatch_workloop_create_inactive(const char *label)
{
  return (dispatch_workloop_t)MEMORY[0x270ED95D0](label);
}

void dispatch_workloop_set_autorelease_frequency(dispatch_workloop_t workloop, dispatch_autorelease_frequency_t frequency)
{
}

uint64_t dispatch_workloop_set_cpupercent()
{
  return MEMORY[0x270ED95E8]();
}

uint64_t dispatch_workloop_set_scheduler_priority()
{
  return MEMORY[0x270ED9600]();
}

char *dlerror(void)
{
  return (char *)MEMORY[0x270ED9620]();
}

void *__cdecl dlsym(void *__handle, const char *__symbol)
{
  return (void *)MEMORY[0x270ED9648](__handle, __symbol);
}

uint64_t encodeRootObject()
{
  return MEMORY[0x270EF3E00]();
}

uint64_t eventTypeForPresenceTypeAndGranularity()
{
  return MEMORY[0x270EF3E08]();
}

long double exp2(long double __x)
{
  MEMORY[0x270ED9860](__x);
  return result;
}

int fclose(FILE *a1)
{
  return MEMORY[0x270ED98C8](a1);
}

long double fmod(long double __x, long double __y)
{
  MEMORY[0x270ED99D0](__x, __y);
  return result;
}

FILE *__cdecl fopen(const char *__filename, const char *__mode)
{
  return (FILE *)MEMORY[0x270ED99F0](__filename, __mode);
}

void free(void *a1)
{
}

void freeifaddrs(ifaddrs *a1)
{
}

uint64_t generateURLForHomeKitObject()
{
  return MEMORY[0x270EF3E10]();
}

uint64_t getAssistantConfigurationSnapshot()
{
  return MEMORY[0x270EF3E18]();
}

uint64_t getAssistantConfigurationVersion()
{
  return MEMORY[0x270EF3E20]();
}

uint64_t getLastSyncedAssistantConfigurationVersion()
{
  return MEMORY[0x270EF3E28]();
}

uint64_t getLowestError()
{
  return MEMORY[0x270F3C388]();
}

int getifaddrs(ifaddrs **a1)
{
  return MEMORY[0x270ED9C68](a1);
}

pid_t getpid(void)
{
  return MEMORY[0x270ED9CE0]();
}

uid_t getuid(void)
{
  return MEMORY[0x270ED9DA0]();
}

uint64_t granularityForEventType()
{
  return MEMORY[0x270EF3E30]();
}

uint64_t hap2LogInitialize()
{
  return MEMORY[0x270F18DB8]();
}

uint64_t hm_assistantIdentifier()
{
  return MEMORY[0x270EF3E38]();
}

uint64_t hm_assistantIdentifierWithSalts()
{
  return MEMORY[0x270EF3E40]();
}

const char *__cdecl inet_ntop(int a1, const void *a2, char *a3, socklen_t a4)
{
  return (const char *)MEMORY[0x270ED9EC0](*(void *)&a1, a2, a3, *(void *)&a4);
}

int inet_pton(int a1, const char *a2, void *a3)
{
  return MEMORY[0x270ED9EC8](*(void *)&a1, a2, a3);
}

int inflate(z_streamp strm, int flush)
{
  return MEMORY[0x270F9C730](strm, *(void *)&flush);
}

int inflateEnd(z_streamp strm)
{
  return MEMORY[0x270F9C738](strm);
}

int inflateInit2_(z_streamp strm, int windowBits, const char *version, int stream_size)
{
  return MEMORY[0x270F9C740](strm, *(void *)&windowBits, version, *(void *)&stream_size);
}

uint64_t initializeMappingsAndPaths()
{
  return MEMORY[0x270EF3E48]();
}

uint64_t isAllowedCharType()
{
  return MEMORY[0x270EF3E50]();
}

uint64_t isEqualAllowingNil()
{
  return MEMORY[0x270EF3E58]();
}

uint64_t isFeatureMatterLocalFabricConfigEnabled()
{
  return MEMORY[0x270F3C310]();
}

uint64_t isFeatureMatteriPhoneOnlyPairingControlEnabled()
{
  return MEMORY[0x270F3C318]();
}

uint64_t isFeatureMatteriPhoneOnlyPairingControlForThreadEnabled()
{
  return MEMORY[0x270F3C320]();
}

uint64_t isInternalBuild()
{
  return MEMORY[0x270EF3E60]();
}

uint64_t isPresenceAuthorizationValid()
{
  return MEMORY[0x270EF3E68]();
}

uint64_t isRestoreSupportedForCharacteristic()
{
  return MEMORY[0x270EF3E70]();
}

uint64_t isValidHMSoftwareUpdateAssetSourceString()
{
  return MEMORY[0x270EF3E78]();
}

uint64_t localizationKeyForCharacteristicType()
{
  return MEMORY[0x270EF3E88]();
}

uint64_t localizedWiFiStringKey()
{
  return MEMORY[0x270EF3E90]();
}

long double log10(long double __x)
{
  MEMORY[0x270EDA0B0](__x);
  return result;
}

long double log2(long double __x)
{
  MEMORY[0x270EDA0D8](__x);
  return result;
}

uint64_t mach_absolute_time(void)
{
  return MEMORY[0x270EDA138]();
}

mach_msg_return_t mach_msg(mach_msg_header_t *msg, mach_msg_option_t option, mach_msg_size_t send_size, mach_msg_size_t rcv_size, mach_port_name_t rcv_name, mach_msg_timeout_t timeout, mach_port_name_t notify)
{
  return MEMORY[0x270EDA190](msg, *(void *)&option, *(void *)&send_size, *(void *)&rcv_size, *(void *)&rcv_name, *(void *)&timeout, *(void *)&notify);
}

void mach_msg_destroy(mach_msg_header_t *a1)
{
}

kern_return_t mach_port_deallocate(ipc_space_t task, mach_port_name_t name)
{
  return MEMORY[0x270EDA1C8](*(void *)&task, *(void *)&name);
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x270EDA328](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x270EDA378](ptr);
}

void *__cdecl malloc_type_calloc(size_t count, size_t size, malloc_type_id_t type_id)
{
  return (void *)MEMORY[0x270EDA388](count, size, type_id);
}

void *__cdecl malloc_type_malloc(size_t size, malloc_type_id_t type_id)
{
  return (void *)MEMORY[0x270EDA390](size, type_id);
}

void *__cdecl memchr(void *__s, int __c, size_t __n)
{
  return (void *)MEMORY[0x270EDA458](__s, *(void *)&__c, __n);
}

int memcmp(const void *__s1, const void *__s2, size_t __n)
{
  return MEMORY[0x270EDA468](__s1, __s2, __n);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x270EDA470](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x270EDA488](__dst, __src, __len);
}

uint64_t memorystatus_control()
{
  return MEMORY[0x270EDA490]();
}

void *__cdecl memset(void *__b, int __c, size_t __len)
{
  return (void *)MEMORY[0x270EDA498](__b, *(void *)&__c, __len);
}

errno_t memset_s(void *__s, rsize_t __smax, int __c, rsize_t __n)
{
  return MEMORY[0x270EDA4B8](__s, __smax, *(void *)&__c, __n);
}

void mig_dealloc_reply_port(mach_port_t reply_port)
{
}

mach_port_t mig_get_reply_port(void)
{
  return MEMORY[0x270EDA4E8]();
}

void mig_put_reply_port(mach_port_t reply_port)
{
}

uint32_t notify_cancel(int token)
{
  return MEMORY[0x270EDA738](*(void *)&token);
}

uint32_t notify_post(const char *name)
{
  return MEMORY[0x270EDA760](name);
}

uint32_t notify_register_check(const char *name, int *out_token)
{
  return MEMORY[0x270EDA768](name, out_token);
}

uint32_t notify_register_dispatch(const char *name, int *out_token, dispatch_queue_t queue, notify_handler_t handler)
{
  return MEMORY[0x270EDA770](name, out_token, queue, handler);
}

uint32_t notify_set_state(int token, uint64_t state64)
{
  return MEMORY[0x270EDA798](*(void *)&token, state64);
}

uint64_t nw_activity_activate()
{
  return MEMORY[0x270EF7998]();
}

uint64_t nw_activity_complete_with_reason()
{
  return MEMORY[0x270EF79A8]();
}

uint64_t nw_activity_create()
{
  return MEMORY[0x270EF79C8]();
}

uint64_t nw_activity_get_label()
{
  return MEMORY[0x270EF7A00]();
}

uint64_t nw_activity_is_activated()
{
  return MEMORY[0x270EF7A10]();
}

uint64_t nw_activity_set_parent_activity()
{
  return MEMORY[0x270EF7A28]();
}

uint64_t nw_activity_submit_metrics()
{
  return MEMORY[0x270EF7A30]();
}

void nw_connection_cancel(nw_connection_t connection)
{
}

nw_connection_t nw_connection_create(nw_endpoint_t endpoint, nw_parameters_t parameters)
{
  return (nw_connection_t)MEMORY[0x270EF7BA8](endpoint, parameters);
}

void nw_connection_receive(nw_connection_t connection, uint32_t minimum_incomplete_length, uint32_t maximum_length, nw_connection_receive_completion_t completion)
{
}

void nw_connection_receive_message(nw_connection_t connection, nw_connection_receive_completion_t completion)
{
}

uint64_t nw_connection_reset_traffic_class()
{
  return MEMORY[0x270EF7C88]();
}

void nw_connection_send(nw_connection_t connection, dispatch_data_t content, nw_content_context_t context, BOOL is_complete, nw_connection_send_completion_t completion)
{
}

void nw_connection_set_queue(nw_connection_t connection, dispatch_queue_t queue)
{
}

uint64_t nw_connection_set_read_close_handler()
{
  return MEMORY[0x270EF7CE0]();
}

void nw_connection_set_state_changed_handler(nw_connection_t connection, nw_connection_state_changed_handler_t handler)
{
}

void nw_connection_start(nw_connection_t connection)
{
}

uint64_t nw_connection_state_to_string()
{
  return MEMORY[0x270EF7D30]();
}

uint64_t nw_context_create()
{
  return MEMORY[0x270EF7DE0]();
}

uint64_t nw_context_set_isolate_protocol_stack()
{
  return MEMORY[0x270EF7E00]();
}

uint64_t nw_context_set_scheduling_mode()
{
  return MEMORY[0x270EF7E10]();
}

uint64_t nw_endpoint_create_host_with_numeric_port()
{
  return MEMORY[0x270EF7EB8]();
}

CFErrorRef nw_error_copy_cf_error(nw_error_t error)
{
  return (CFErrorRef)MEMORY[0x270EF7FB8](error);
}

nw_interface_type_t nw_interface_get_type(nw_interface_t interface)
{
  return MEMORY[0x270EF83A0](interface);
}

nw_parameters_t nw_parameters_create_secure_tcp(nw_parameters_configure_protocol_block_t configure_tls, nw_parameters_configure_protocol_block_t configure_tcp)
{
  return (nw_parameters_t)MEMORY[0x270EF8550](configure_tls, configure_tcp);
}

uint64_t nw_parameters_set_context()
{
  return MEMORY[0x270EF8610]();
}

uint64_t nw_parameters_set_data_mode()
{
  return MEMORY[0x270EF8620]();
}

uint64_t nw_path_create_default_evaluator()
{
  return MEMORY[0x270EF87D8]();
}

void nw_path_enumerate_interfaces(nw_path_t path, nw_path_enumerate_interfaces_block_t enumerate_block)
{
}

uint64_t nw_path_evaluator_copy_path()
{
  return MEMORY[0x270EF8810]();
}

uint64_t nw_path_get_ipv4_network_signature()
{
  return MEMORY[0x270EF88F0]();
}

uint64_t nw_path_get_ipv6_network_signature()
{
  return MEMORY[0x270EF88F8]();
}

nw_path_status_t nw_path_get_status(nw_path_t path)
{
  return MEMORY[0x270EF8928](path);
}

BOOL nw_path_has_dns(nw_path_t path)
{
  return MEMORY[0x270EF8950](path);
}

BOOL nw_path_has_ipv4(nw_path_t path)
{
  return MEMORY[0x270EF8968](path);
}

BOOL nw_path_has_ipv6(nw_path_t path)
{
  return MEMORY[0x270EF8970](path);
}

BOOL nw_path_uses_interface_type(nw_path_t path, nw_interface_type_t interface_type)
{
  return MEMORY[0x270EF8A58](path, *(void *)&interface_type);
}

id objc_alloc(Class a1)
{
  return (id)MEMORY[0x270F9A528](a1);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x270F9A538](a1);
}

uint64_t objc_alloc_init()
{
  return MEMORY[0x270F9A540]();
}

Class objc_allocateClassPair(Class superclass, const char *name, size_t extraBytes)
{
  return (Class)MEMORY[0x270F9A550](superclass, name, extraBytes);
}

id objc_autorelease(id a1)
{
  return (id)MEMORY[0x270F9A568](a1);
}

{
  MEMORY[0x270F9A570](context);
}

{
  return (void *)MEMORY[0x270F9A588]();
}

id objc_autoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x270F9A590](a1);
}

id objc_begin_catch(void *exc_buf)
{
  return (id)MEMORY[0x270F9A598](exc_buf);
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return MEMORY[0x270F9A5A8]();
}

void objc_copyStruct(void *dest, const void *src, ptrdiff_t size, BOOL atomic, BOOL hasStrong)
{
}

void objc_copyWeak(id *to, id *from)
{
}

void objc_destroyWeak(id *location)
{
}

void objc_end_catch(void)
{
}

void objc_enumerationMutation(id obj)
{
}

void objc_exception_throw(id exception)
{
}

id objc_getAssociatedObject(id object, const void *key)
{
  return (id)MEMORY[0x270F9A648](object, key);
}

Class objc_getClass(const char *name)
{
  return (Class)MEMORY[0x270F9A658](name);
}

id objc_getProperty(id self, SEL _cmd, ptrdiff_t offset, BOOL atomic)
{
  return (id)MEMORY[0x270F9A678](self, _cmd, offset, atomic);
}

id objc_initWeak(id *location, id val)
{
  return (id)MEMORY[0x270F9A688](location, val);
}

id objc_loadWeakRetained(id *location)
{
  return (id)MEMORY[0x270F9A6B0](location);
}

void objc_moveWeak(id *to, id *from)
{
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x270F9A6D0](a1, a2);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x270F9A6E8](a1, a2);
}

uint64_t objc_opt_class()
{
  return MEMORY[0x270F9A6F8]();
}

uint64_t objc_opt_isKindOfClass()
{
  return MEMORY[0x270F9A700]();
}

uint64_t objc_opt_new()
{
  return MEMORY[0x270F9A710]();
}

uint64_t objc_opt_respondsToSelector()
{
  return MEMORY[0x270F9A728]();
}

uint64_t self
{
  return MEMORY[0x270F9A730]();
}

void objc_registerClassPair(Class cls)
{
}

void objc_release(id a1)
{
}

void objc_removeAssociatedObjects(id object)
{
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x270F9A870](a1);
}

id objc_retainAutorelease(id a1)
{
  return (id)MEMORY[0x270F9A880](a1);
}

id objc_retainAutoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x270F9A888](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x270F9A890](a1);
}

id objc_retainBlock(id a1)
{
  return (id)MEMORY[0x270F9A898](a1);
}

void objc_setAssociatedObject(id object, const void *key, id value, void *policy)
{
}

void objc_setProperty_atomic(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
}

void objc_setProperty_atomic_copy(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
}

void objc_setProperty_nonatomic_copy(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
}

void objc_storeStrong(id *location, id obj)
{
}

id objc_storeWeak(id *location, id obj)
{
  return (id)MEMORY[0x270F9A9F8](location, obj);
}

int objc_sync_enter(id obj)
{
  return MEMORY[0x270F9AA18](obj);
}

int objc_sync_exit(id obj)
{
  return MEMORY[0x270F9AA20](obj);
}

void objc_terminate(void)
{
}

id objc_unsafeClaimAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x270F9AA38](a1);
}

Class object_setClass(id a1, Class a2)
{
  return (Class)MEMORY[0x270F9AA70](a1, a2);
}

os_log_t os_log_create(const char *subsystem, const char *category)
{
  return (os_log_t)MEMORY[0x270EDA9A0](subsystem, category);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x270EDA9D0](oslog, type);
}

BOOL os_signpost_enabled(os_log_t log)
{
  return MEMORY[0x270EDAA58](log);
}

os_signpost_id_t os_signpost_id_make_with_pointer(os_log_t log, const void *ptr)
{
  return MEMORY[0x270EDAA68](log, ptr);
}

void os_unfair_lock_assert_not_owner(const os_unfair_lock *lock)
{
}

void os_unfair_lock_assert_owner(const os_unfair_lock *lock)
{
}

void os_unfair_lock_lock(os_unfair_lock_t lock)
{
}

uint64_t os_unfair_lock_lock_with_options()
{
  return MEMORY[0x270EDAAD0]();
}

void os_unfair_lock_unlock(os_unfair_lock_t lock)
{
}

uint64_t os_unfair_recursive_lock_lock_with_options()
{
  return MEMORY[0x270EDAAF0]();
}

uint64_t os_unfair_recursive_lock_unlock()
{
  return MEMORY[0x270EDAB08]();
}

uint64_t playbackStateAsString()
{
  return MEMORY[0x270EF3E98]();
}

uint64_t presenceTypeForEventTypeAndGranularity()
{
  return MEMORY[0x270EF3EA0]();
}

int proc_pid_rusage(int pid, int flavor, rusage_info_t *buffer)
{
  return MEMORY[0x270EDAD68](*(void *)&pid, *(void *)&flavor, buffer);
}

uint64_t proc_reset_footprint_interval()
{
  return MEMORY[0x270EDADA0]();
}

BOOL protocol_isEqual(Protocol *proto, Protocol *other)
{
  return MEMORY[0x270F9AAD8](proto, other);
}

pthread_introspection_hook_t pthread_introspection_hook_install(pthread_introspection_hook_t hook)
{
  return (pthread_introspection_hook_t)MEMORY[0x270EDAF00](hook);
}

ssize_t recvfrom(int a1, void *a2, size_t a3, int a4, sockaddr *a5, socklen_t *a6)
{
  return MEMORY[0x270EDB198](*(void *)&a1, a2, a3, *(void *)&a4, a5, a6);
}

ssize_t send(int a1, const void *a2, size_t a3, int a4)
{
  return MEMORY[0x270EDB3B0](*(void *)&a1, a2, a3, *(void *)&a4);
}

int setenv(const char *__name, const char *__value, int __overwrite)
{
  return MEMORY[0x270EDB3D8](__name, __value, *(void *)&__overwrite);
}

int setsockopt(int a1, int a2, int a3, const void *a4, socklen_t a5)
{
  return MEMORY[0x270EDB440](*(void *)&a1, *(void *)&a2, *(void *)&a3, a4, *(void *)&a5);
}

void (__cdecl *__cdecl signal(int a1, void (__cdecl *a2)(int)))(int)
{
  return (void (__cdecl *)(int))MEMORY[0x270EDB4D0](*(void *)&a1, a2);
}

int socket(int a1, int a2, int a3)
{
  return MEMORY[0x270EDB520](*(void *)&a1, *(void *)&a2, *(void *)&a3);
}

int sqlite3_bind_blob64(sqlite3_stmt *a1, int a2, const void *a3, sqlite3_uint64 a4, void (__cdecl *a5)(void *))
{
  return MEMORY[0x270F9B498](a1, *(void *)&a2, a3, a4, a5);
}

int sqlite3_bind_int64(sqlite3_stmt *a1, int a2, sqlite3_int64 a3)
{
  return MEMORY[0x270F9B4B0](a1, *(void *)&a2, a3);
}

int sqlite3_bind_null(sqlite3_stmt *a1, int a2)
{
  return MEMORY[0x270F9B4B8](a1, *(void *)&a2);
}

int sqlite3_bind_parameter_count(sqlite3_stmt *a1)
{
  return MEMORY[0x270F9B4C0](a1);
}

const char *__cdecl sqlite3_bind_parameter_name(sqlite3_stmt *a1, int a2)
{
  return (const char *)MEMORY[0x270F9B4D0](a1, *(void *)&a2);
}

int sqlite3_bind_text(sqlite3_stmt *a1, int a2, const char *a3, int a4, void (__cdecl *a5)(void *))
{
  return MEMORY[0x270F9B4E0](a1, *(void *)&a2, a3, *(void *)&a4, a5);
}

int sqlite3_bind_zeroblob(sqlite3_stmt *a1, int a2, int n)
{
  return MEMORY[0x270F9B500](a1, *(void *)&a2, *(void *)&n);
}

int sqlite3_close(sqlite3 *a1)
{
  return MEMORY[0x270F9B558](a1);
}

const void *__cdecl sqlite3_column_blob(sqlite3_stmt *a1, int iCol)
{
  return (const void *)MEMORY[0x270F9B568](a1, *(void *)&iCol);
}

int sqlite3_column_bytes(sqlite3_stmt *a1, int iCol)
{
  return MEMORY[0x270F9B570](a1, *(void *)&iCol);
}

int sqlite3_column_count(sqlite3_stmt *pStmt)
{
  return MEMORY[0x270F9B580](pStmt);
}

double sqlite3_column_double(sqlite3_stmt *a1, int iCol)
{
  MEMORY[0x270F9B590](a1, *(void *)&iCol);
  return result;
}

sqlite3_int64 sqlite3_column_int64(sqlite3_stmt *a1, int iCol)
{
  return MEMORY[0x270F9B5A0](a1, *(void *)&iCol);
}

const unsigned __int8 *__cdecl sqlite3_column_text(sqlite3_stmt *a1, int iCol)
{
  return (const unsigned __int8 *)MEMORY[0x270F9B5C0](a1, *(void *)&iCol);
}

int sqlite3_column_type(sqlite3_stmt *a1, int iCol)
{
  return MEMORY[0x270F9B5D0](a1, *(void *)&iCol);
}

sqlite3 *__cdecl sqlite3_db_handle(sqlite3_stmt *a1)
{
  return (sqlite3 *)MEMORY[0x270F9B628](a1);
}

int sqlite3_errcode(sqlite3 *db)
{
  return MEMORY[0x270F9B650](db);
}

const char *__cdecl sqlite3_errmsg(sqlite3 *a1)
{
  return (const char *)MEMORY[0x270F9B658](a1);
}

int sqlite3_exec(sqlite3 *a1, const char *sql, int (__cdecl *callback)(void *, int, char **, char **), void *a4, char **errmsg)
{
  return MEMORY[0x270F9B668](a1, sql, callback, a4, errmsg);
}

int sqlite3_finalize(sqlite3_stmt *pStmt)
{
  return MEMORY[0x270F9B690](pStmt);
}

int sqlite3_get_autocommit(sqlite3 *a1)
{
  return MEMORY[0x270F9B6A0](a1);
}

int sqlite3_initialize(void)
{
  return MEMORY[0x270F9B6B0]();
}

sqlite3_int64 sqlite3_last_insert_rowid(sqlite3 *a1)
{
  return MEMORY[0x270F9B6D0](a1);
}

int sqlite3_open_v2(const char *filename, sqlite3 **ppDb, int flags, const char *zVfs)
{
  return MEMORY[0x270F9B710](filename, ppDb, *(void *)&flags, zVfs);
}

int sqlite3_prepare_v2(sqlite3 *db, const char *zSql, int nByte, sqlite3_stmt **ppStmt, const char **pzTail)
{
  return MEMORY[0x270F9B720](db, zSql, *(void *)&nByte, ppStmt, pzTail);
}

int sqlite3_reset(sqlite3_stmt *pStmt)
{
  return MEMORY[0x270F9B730](pStmt);
}

const char *__cdecl sqlite3_sql(sqlite3_stmt *pStmt)
{
  return (const char *)MEMORY[0x270F9B7F8](pStmt);
}

int sqlite3_step(sqlite3_stmt *a1)
{
  return MEMORY[0x270F9B800](a1);
}

int strcmp(const char *__s1, const char *__s2)
{
  return MEMORY[0x270EDB5B0](__s1, __s2);
}

char *__cdecl strerror(int __errnum)
{
  return (char *)MEMORY[0x270EDB5D8](*(void *)&__errnum);
}

uint64_t stringToHMSoftwareUpdateAssetSource()
{
  return MEMORY[0x270EF3EA8]();
}

size_t strlcpy(char *__dst, const char *__source, size_t __size)
{
  return MEMORY[0x270EDB600](__dst, __source, __size);
}

size_t strlen(const char *__s)
{
  return MEMORY[0x270EDB610](__s);
}

uint64_t swift_allocBox()
{
  return MEMORY[0x270FA0180]();
}

uint64_t swift_allocError()
{
  return MEMORY[0x270FA0190]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x270FA0198]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x270FA01C0]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x270FA01C8]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x270FA01D0]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x270FA01D8]();
}

uint64_t swift_asyncLet_begin()
{
  return MEMORY[0x270FA23D0]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x270FA01E0]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x270FA01E8]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x270FA01F0]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x270FA01F8]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x270FA0200]();
}

uint64_t swift_checkMetadataState()
{
  return MEMORY[0x270FA0208]();
}

uint64_t swift_conformsToProtocol2()
{
  return MEMORY[0x270FA0218]();
}

uint64_t swift_continuation_init()
{
  return MEMORY[0x270FA23F8]();
}

uint64_t swift_continuation_throwingResume()
{
  return MEMORY[0x270FA2408]();
}

uint64_t swift_deallocClassInstance()
{
  return MEMORY[0x270FA0228]();
}

uint64_t swift_deallocPartialClassInstance()
{
  return MEMORY[0x270FA0240]();
}

uint64_t swift_deallocUninitializedObject()
{
  return MEMORY[0x270FA0248]();
}

uint64_t swift_defaultActor_destroy()
{
  return MEMORY[0x270FA2420]();
}

uint64_t swift_defaultActor_initialize()
{
  return MEMORY[0x270FA2428]();
}

uint64_t swift_deletedMethodError()
{
  return MEMORY[0x270FA0250]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x270FA0260]();
}

uint64_t swift_dynamicCastClass()
{
  return MEMORY[0x270FA0268]();
}

uint64_t swift_dynamicCastMetatype()
{
  return MEMORY[0x270FA0278]();
}

uint64_t swift_dynamicCastObjCClass()
{
  return MEMORY[0x270FA0288]();
}

uint64_t swift_dynamicCastObjCProtocolConditional()
{
  return MEMORY[0x270FA0298]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x270FA02C0]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x270FA02C8]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x270FA02D0]();
}

uint64_t swift_getAssociatedConformanceWitness()
{
  return MEMORY[0x270FA02F8]();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return MEMORY[0x270FA0300]();
}

uint64_t swift_getDynamicType()
{
  return MEMORY[0x270FA0330]();
}

uint64_t swift_getErrorValue()
{
  return MEMORY[0x270FA0348]();
}

uint64_t swift_getForeignTypeMetadata()
{
  return MEMORY[0x270FA0370]();
}

uint64_t swift_getGenericMetadata()
{
  return MEMORY[0x270FA03B0]();
}

uint64_t swift_getKeyPath()
{
  return MEMORY[0x270FA03B8]();
}

uint64_t swift_getMetatypeMetadata()
{
  return MEMORY[0x270FA03C8]();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return MEMORY[0x270FA03D0]();
}

uint64_t swift_getObjCClassFromObject()
{
  return MEMORY[0x270FA03D8]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x270FA03E0]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x270FA03E8]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x270FA0400]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x270FA0440]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x270FA0448]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x270FA0450]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x270FA0478]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x270FA0488]();
}

uint64_t swift_isEscapingClosureAtFileLocation()
{
  return MEMORY[0x270FA0498]();
}

uint64_t swift_isUniquelyReferenced_nonNull_bridgeObject()
{
  return MEMORY[0x270FA04C0]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x270FA04C8]();
}

uint64_t swift_makeBoxUnique()
{
  return MEMORY[0x270FA04D8]();
}

uint64_t swift_once()
{
  return MEMORY[0x270FA04F0]();
}

uint64_t swift_release()
{
  return MEMORY[0x270FA0520]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x270FA0528]();
}

uint64_t swift_retain()
{
  return MEMORY[0x270FA0530]();
}

uint64_t swift_retain_n()
{
  return MEMORY[0x270FA0538]();
}

uint64_t swift_setAtWritableKeyPath()
{
  return MEMORY[0x270FA0548]();
}

uint64_t swift_setDeallocating()
{
  return MEMORY[0x270FA0550]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x270FA0558]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x270FA0560]();
}

uint64_t swift_stdlib_isStackAllocationSafe()
{
  return MEMORY[0x270FA0568]();
}

uint64_t swift_stdlib_random()
{
  return MEMORY[0x270FA0570]();
}

uint64_t swift_task_alloc()
{
  return MEMORY[0x270FA2450]();
}

uint64_t swift_task_create()
{
  return MEMORY[0x270FA2458]();
}

uint64_t swift_task_dealloc()
{
  return MEMORY[0x270FA2460]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x270FA0590]();
}

uint64_t swift_unknownObjectRelease_n()
{
  return MEMORY[0x270FA0598]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x270FA05A0]();
}

uint64_t swift_unknownObjectRetain_n()
{
  return MEMORY[0x270FA05A8]();
}

uint64_t swift_unknownObjectWeakAssign()
{
  return MEMORY[0x270FA05D0]();
}

uint64_t swift_unknownObjectWeakDestroy()
{
  return MEMORY[0x270FA05E8]();
}

uint64_t swift_unknownObjectWeakInit()
{
  return MEMORY[0x270FA05F0]();
}

uint64_t swift_unknownObjectWeakLoadStrong()
{
  return MEMORY[0x270FA05F8]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x270FA0628]();
}

uint64_t swift_weakDestroy()
{
  return MEMORY[0x270FA0648]();
}

uint64_t swift_weakInit()
{
  return MEMORY[0x270FA0650]();
}

uint64_t swift_weakLoadStrong()
{
  return MEMORY[0x270FA0658]();
}

uint64_t swift_willThrow()
{
  return MEMORY[0x270FA0670]();
}

int sysctlbyname(const char *a1, void *a2, size_t *a3, void *a4, size_t a5)
{
  return MEMORY[0x270EDB7D8](a1, a2, a3, a4, a5);
}

uint64_t systemResourceUsageLevelAsString()
{
  return MEMORY[0x270F3A120]();
}

kern_return_t task_generate_corpse(task_read_t task, mach_port_t *corpse_task_port)
{
  return MEMORY[0x270EDB848](*(void *)&task, corpse_task_port);
}

kern_return_t task_threads(task_inspect_t target_task, thread_act_array_t *act_list, mach_msg_type_number_t *act_listCnt)
{
  return MEMORY[0x270EDB8B0](*(void *)&target_task, act_list, act_listCnt);
}

int unlink(const char *a1)
{
  return MEMORY[0x270EDB9A8](a1);
}

uint64_t userTypeForPresenceTypeAndGranularity()
{
  return MEMORY[0x270EF3EB0]();
}

uint64_t usersListApplicable()
{
  return MEMORY[0x270EF3EB8]();
}

int uuid_compare(const uuid_t uu1, const uuid_t uu2)
{
  return MEMORY[0x270EDBA08](uu1, uu2);
}

void uuid_generate(uuid_t out)
{
}

kern_return_t vm_deallocate(vm_map_t target_task, vm_address_t address, vm_size_t size)
{
  return MEMORY[0x270EDBA90](*(void *)&target_task, address, size);
}

BOOLean_t voucher_mach_msg_set(mach_msg_header_t *msg)
{
  return MEMORY[0x270EDBAF0](msg);
}

xpc_object_t xpc_activity_copy_criteria(xpc_activity_t activity)
{
  return (xpc_object_t)MEMORY[0x270EDBCA8](activity);
}

xpc_activity_state_t xpc_activity_get_state(xpc_activity_t activity)
{
  return MEMORY[0x270EDBCB8](activity);
}

void xpc_activity_register(const char *identifier, xpc_object_t criteria, xpc_activity_handler_t handler)
{
}

void xpc_activity_set_criteria(xpc_activity_t activity, xpc_object_t criteria)
{
}

BOOL xpc_activity_set_state(xpc_activity_t activity, xpc_activity_state_t state)
{
  return MEMORY[0x270EDBCE8](activity, state);
}

BOOL xpc_activity_should_defer(xpc_activity_t activity)
{
  return MEMORY[0x270EDBCF0](activity);
}

void xpc_activity_unregister(const char *identifier)
{
}

BOOL xpc_array_apply(xpc_object_t xarray, xpc_array_applier_t applier)
{
  return MEMORY[0x270EDBD10](xarray, applier);
}

size_t xpc_array_get_count(xpc_object_t xarray)
{
  return MEMORY[0x270EDBD38](xarray);
}

xpc_object_t xpc_array_get_dictionary(xpc_object_t xarray, size_t index)
{
  return (xpc_object_t)MEMORY[0x270EDBD58](xarray, index);
}

BOOL xpc_BOOL_get_value(xpc_object_t xBOOL)
{
  return MEMORY[0x270EDBDE0](xBOOL);
}

void xpc_connection_cancel(xpc_connection_t connection)
{
}

uint64_t xpc_connection_copy_entitlement_value()
{
  return MEMORY[0x270EDBE30]();
}

xpc_connection_t xpc_connection_create_mach_service(const char *name, dispatch_queue_t targetq, uint64_t flags)
{
  return (xpc_connection_t)MEMORY[0x270EDBE58](name, targetq, flags);
}

void xpc_connection_resume(xpc_connection_t connection)
{
}

void xpc_connection_send_message(xpc_connection_t connection, xpc_object_t message)
{
}

void xpc_connection_set_event_handler(xpc_connection_t connection, xpc_handler_t handler)
{
}

void xpc_connection_set_target_queue(xpc_connection_t connection, dispatch_queue_t targetq)
{
}

void xpc_connection_suspend(xpc_connection_t connection)
{
}

xpc_object_t xpc_date_create(int64_t interval)
{
  return (xpc_object_t)MEMORY[0x270EDBFC8](interval);
}

int64_t xpc_date_get_value(xpc_object_t xdate)
{
  return MEMORY[0x270EDBFD8](xdate);
}

BOOL xpc_dictionary_apply(xpc_object_t xdict, xpc_dictionary_applier_t applier)
{
  return MEMORY[0x270EDBFE8](xdict, applier);
}

xpc_object_t xpc_dictionary_create(const char *const *keys, xpc_object_t *values, size_t count)
{
  return (xpc_object_t)MEMORY[0x270EDC008](keys, values, count);
}

xpc_object_t xpc_dictionary_create_empty(void)
{
  return (xpc_object_t)MEMORY[0x270EDC018]();
}

xpc_object_t xpc_dictionary_create_reply(xpc_object_t original)
{
  return (xpc_object_t)MEMORY[0x270EDC020](original);
}

BOOL xpc_dictionary_get_BOOL(xpc_object_t xdict, const char *key)
{
  return MEMORY[0x270EDC050](xdict, key);
}

int64_t xpc_dictionary_get_int64(xpc_object_t xdict, const char *key)
{
  return MEMORY[0x270EDC088](xdict, key);
}

const char *__cdecl xpc_dictionary_get_string(xpc_object_t xdict, const char *key)
{
  return (const char *)MEMORY[0x270EDC0A8](xdict, key);
}

xpc_object_t xpc_dictionary_get_value(xpc_object_t xdict, const char *key)
{
  return (xpc_object_t)MEMORY[0x270EDC0C0](xdict, key);
}

uint64_t xpc_dictionary_send_reply()
{
  return MEMORY[0x270EDC0D8]();
}

void xpc_dictionary_set_BOOL(xpc_object_t xdict, const char *key, BOOL value)
{
}

void xpc_dictionary_set_date(xpc_object_t xdict, const char *key, int64_t value)
{
}

void xpc_dictionary_set_double(xpc_object_t xdict, const char *key, double value)
{
}

void xpc_dictionary_set_fd(xpc_object_t xdict, const char *key, int fd)
{
}

void xpc_dictionary_set_int64(xpc_object_t xdict, const char *key, int64_t value)
{
}

void xpc_dictionary_set_string(xpc_object_t xdict, const char *key, const char *string)
{
}

void xpc_dictionary_set_uint64(xpc_object_t xdict, const char *key, uint64_t value)
{
}

void xpc_dictionary_set_value(xpc_object_t xdict, const char *key, xpc_object_t value)
{
}

uint64_t xpc_event_publisher_activate()
{
  return MEMORY[0x270EDC198]();
}

uint64_t xpc_event_publisher_create()
{
  return MEMORY[0x270EDC1A0]();
}

uint64_t xpc_event_publisher_fire()
{
  return MEMORY[0x270EDC1A8]();
}

uint64_t xpc_event_publisher_set_error_handler()
{
  return MEMORY[0x270EDC1B8]();
}

uint64_t xpc_event_publisher_set_handler()
{
  return MEMORY[0x270EDC1C0]();
}

xpc_type_t xpc_get_type(xpc_object_t object)
{
  return (xpc_type_t)MEMORY[0x270EDC200](object);
}

uint64_t xpc_set_event()
{
  return MEMORY[0x270EDC398]();
}

void xpc_set_event_stream_handler(const char *stream, dispatch_queue_t targetq, xpc_handler_t handler)
{
}

size_t xpc_string_get_length(xpc_object_t xstring)
{
  return MEMORY[0x270EDC3F0](xstring);
}

const char *__cdecl xpc_string_get_string_ptr(xpc_object_t xstring)
{
  return (const char *)MEMORY[0x270EDC3F8](xstring);
}

const uint8_t *__cdecl xpc_uuid_get_bytes(xpc_object_t xuuid)
{
  return (const uint8_t *)MEMORY[0x270EDC460](xuuid);
}